var _$ = Object.defineProperty;
var D$ = (e, t, n) => t in e ? _$(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;
var ti = (e, t, n) => D$(e, typeof t != "symbol" ? t + "" : t, n);
import { jsx as O, jsxs as Se, Fragment as Jn } from "react/jsx-runtime";
import * as $ from "react";
import Z, { forwardRef as Oa, useContext as Kt, useMemo as Ge, memo as Pe, useState as Yt, useEffect as et, createElement as fi, isValidElement as xl, cloneElement as Uu, Children as iT, useRef as qe, Fragment as $g, useCallback as Be, createContext as lr, useLayoutEffect as Ng, useId as Pa, useInsertionEffect as sT, Component as L$, startTransition as B$, Suspense as V$, lazy as Mg } from "react";
import * as aT from "react-dom";
import Fs, { createPortal as F$ } from "react-dom";
function lT(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var lu = { exports: {} }, cu = { exports: {} }, Ot = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var uv;
function j$() {
  if (uv) return Ot;
  uv = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, o = e ? Symbol.for("react.fragment") : 60107, r = e ? Symbol.for("react.strict_mode") : 60108, i = e ? Symbol.for("react.profiler") : 60114, s = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, h = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, y = e ? Symbol.for("react.fundamental") : 60117, b = e ? Symbol.for("react.responder") : 60118, T = e ? Symbol.for("react.scope") : 60119;
  function v(S) {
    if (typeof S == "object" && S !== null) {
      var C = S.$$typeof;
      switch (C) {
        case t:
          switch (S = S.type, S) {
            case c:
            case u:
            case o:
            case i:
            case r:
            case f:
              return S;
            default:
              switch (S = S && S.$$typeof, S) {
                case l:
                case d:
                case g:
                case h:
                case s:
                  return S;
                default:
                  return C;
              }
          }
        case n:
          return C;
      }
    }
  }
  function w(S) {
    return v(S) === u;
  }
  return Ot.AsyncMode = c, Ot.ConcurrentMode = u, Ot.ContextConsumer = l, Ot.ContextProvider = s, Ot.Element = t, Ot.ForwardRef = d, Ot.Fragment = o, Ot.Lazy = g, Ot.Memo = h, Ot.Portal = n, Ot.Profiler = i, Ot.StrictMode = r, Ot.Suspense = f, Ot.isAsyncMode = function(S) {
    return w(S) || v(S) === c;
  }, Ot.isConcurrentMode = w, Ot.isContextConsumer = function(S) {
    return v(S) === l;
  }, Ot.isContextProvider = function(S) {
    return v(S) === s;
  }, Ot.isElement = function(S) {
    return typeof S == "object" && S !== null && S.$$typeof === t;
  }, Ot.isForwardRef = function(S) {
    return v(S) === d;
  }, Ot.isFragment = function(S) {
    return v(S) === o;
  }, Ot.isLazy = function(S) {
    return v(S) === g;
  }, Ot.isMemo = function(S) {
    return v(S) === h;
  }, Ot.isPortal = function(S) {
    return v(S) === n;
  }, Ot.isProfiler = function(S) {
    return v(S) === i;
  }, Ot.isStrictMode = function(S) {
    return v(S) === r;
  }, Ot.isSuspense = function(S) {
    return v(S) === f;
  }, Ot.isValidElementType = function(S) {
    return typeof S == "string" || typeof S == "function" || S === o || S === u || S === i || S === r || S === f || S === p || typeof S == "object" && S !== null && (S.$$typeof === g || S.$$typeof === h || S.$$typeof === s || S.$$typeof === l || S.$$typeof === d || S.$$typeof === y || S.$$typeof === b || S.$$typeof === T || S.$$typeof === m);
  }, Ot.typeOf = v, Ot;
}
var Pt = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var dv;
function z$() {
  return dv || (dv = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, o = e ? Symbol.for("react.fragment") : 60107, r = e ? Symbol.for("react.strict_mode") : 60108, i = e ? Symbol.for("react.profiler") : 60114, s = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, h = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, y = e ? Symbol.for("react.fundamental") : 60117, b = e ? Symbol.for("react.responder") : 60118, T = e ? Symbol.for("react.scope") : 60119;
    function v(z) {
      return typeof z == "string" || typeof z == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      z === o || z === u || z === i || z === r || z === f || z === p || typeof z == "object" && z !== null && (z.$$typeof === g || z.$$typeof === h || z.$$typeof === s || z.$$typeof === l || z.$$typeof === d || z.$$typeof === y || z.$$typeof === b || z.$$typeof === T || z.$$typeof === m);
    }
    function w(z) {
      if (typeof z == "object" && z !== null) {
        var de = z.$$typeof;
        switch (de) {
          case t:
            var ue = z.type;
            switch (ue) {
              case c:
              case u:
              case o:
              case i:
              case r:
              case f:
                return ue;
              default:
                var xe = ue && ue.$$typeof;
                switch (xe) {
                  case l:
                  case d:
                  case g:
                  case h:
                  case s:
                    return xe;
                  default:
                    return de;
                }
            }
          case n:
            return de;
        }
      }
    }
    var S = c, C = u, E = l, P = s, M = t, x = d, I = o, k = g, _ = h, R = n, A = i, N = r, L = f, V = !1;
    function D(z) {
      return V || (V = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), B(z) || w(z) === c;
    }
    function B(z) {
      return w(z) === u;
    }
    function F(z) {
      return w(z) === l;
    }
    function U(z) {
      return w(z) === s;
    }
    function q(z) {
      return typeof z == "object" && z !== null && z.$$typeof === t;
    }
    function G(z) {
      return w(z) === d;
    }
    function K(z) {
      return w(z) === o;
    }
    function te(z) {
      return w(z) === g;
    }
    function ne(z) {
      return w(z) === h;
    }
    function W(z) {
      return w(z) === n;
    }
    function ee(z) {
      return w(z) === i;
    }
    function Y(z) {
      return w(z) === r;
    }
    function re(z) {
      return w(z) === f;
    }
    Pt.AsyncMode = S, Pt.ConcurrentMode = C, Pt.ContextConsumer = E, Pt.ContextProvider = P, Pt.Element = M, Pt.ForwardRef = x, Pt.Fragment = I, Pt.Lazy = k, Pt.Memo = _, Pt.Portal = R, Pt.Profiler = A, Pt.StrictMode = N, Pt.Suspense = L, Pt.isAsyncMode = D, Pt.isConcurrentMode = B, Pt.isContextConsumer = F, Pt.isContextProvider = U, Pt.isElement = q, Pt.isForwardRef = G, Pt.isFragment = K, Pt.isLazy = te, Pt.isMemo = ne, Pt.isPortal = W, Pt.isProfiler = ee, Pt.isStrictMode = Y, Pt.isSuspense = re, Pt.isValidElementType = v, Pt.typeOf = w;
  }()), Pt;
}
var fv;
function cT() {
  return fv || (fv = 1, process.env.NODE_ENV === "production" ? cu.exports = j$() : cu.exports = z$()), cu.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var Dp, pv;
function H$() {
  if (pv) return Dp;
  pv = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
  function o(i) {
    if (i == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(i);
  }
  function r() {
    try {
      if (!Object.assign)
        return !1;
      var i = new String("abc");
      if (i[5] = "de", Object.getOwnPropertyNames(i)[0] === "5")
        return !1;
      for (var s = {}, l = 0; l < 10; l++)
        s["_" + String.fromCharCode(l)] = l;
      var c = Object.getOwnPropertyNames(s).map(function(d) {
        return s[d];
      });
      if (c.join("") !== "0123456789")
        return !1;
      var u = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(d) {
        u[d] = d;
      }), Object.keys(Object.assign({}, u)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return Dp = r() ? Object.assign : function(i, s) {
    for (var l, c = o(i), u, d = 1; d < arguments.length; d++) {
      l = Object(arguments[d]);
      for (var f in l)
        t.call(l, f) && (c[f] = l[f]);
      if (e) {
        u = e(l);
        for (var p = 0; p < u.length; p++)
          n.call(l, u[p]) && (c[u[p]] = l[u[p]]);
      }
    }
    return c;
  }, Dp;
}
var Lp, hv;
function Ag() {
  if (hv) return Lp;
  hv = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return Lp = e, Lp;
}
var Bp, mv;
function uT() {
  return mv || (mv = 1, Bp = Function.call.bind(Object.prototype.hasOwnProperty)), Bp;
}
var Vp, gv;
function W$() {
  if (gv) return Vp;
  gv = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ Ag(), n = {}, o = /* @__PURE__ */ uT();
    e = function(i) {
      var s = "Warning: " + i;
      typeof console < "u" && console.error(s);
      try {
        throw new Error(s);
      } catch {
      }
    };
  }
  function r(i, s, l, c, u) {
    if (process.env.NODE_ENV !== "production") {
      for (var d in i)
        if (o(i, d)) {
          var f;
          try {
            if (typeof i[d] != "function") {
              var p = Error(
                (c || "React class") + ": " + l + " type `" + d + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof i[d] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw p.name = "Invariant Violation", p;
            }
            f = i[d](s, d, c, l, null, t);
          } catch (g) {
            f = g;
          }
          if (f && !(f instanceof Error) && e(
            (c || "React class") + ": type specification of " + l + " `" + d + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof f + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), f instanceof Error && !(f.message in n)) {
            n[f.message] = !0;
            var h = u ? u() : "";
            e(
              "Failed " + l + " type: " + f.message + (h ?? "")
            );
          }
        }
    }
  }
  return r.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (n = {});
  }, Vp = r, Vp;
}
var Fp, yv;
function U$() {
  if (yv) return Fp;
  yv = 1;
  var e = cT(), t = H$(), n = /* @__PURE__ */ Ag(), o = /* @__PURE__ */ uT(), r = /* @__PURE__ */ W$(), i = function() {
  };
  process.env.NODE_ENV !== "production" && (i = function(l) {
    var c = "Warning: " + l;
    typeof console < "u" && console.error(c);
    try {
      throw new Error(c);
    } catch {
    }
  });
  function s() {
    return null;
  }
  return Fp = function(l, c) {
    var u = typeof Symbol == "function" && Symbol.iterator, d = "@@iterator";
    function f(B) {
      var F = B && (u && B[u] || B[d]);
      if (typeof F == "function")
        return F;
    }
    var p = "<<anonymous>>", h = {
      array: b("array"),
      bigint: b("bigint"),
      bool: b("boolean"),
      func: b("function"),
      number: b("number"),
      object: b("object"),
      string: b("string"),
      symbol: b("symbol"),
      any: T(),
      arrayOf: v,
      element: w(),
      elementType: S(),
      instanceOf: C,
      node: x(),
      objectOf: P,
      oneOf: E,
      oneOfType: M,
      shape: k,
      exact: _
    };
    function g(B, F) {
      return B === F ? B !== 0 || 1 / B === 1 / F : B !== B && F !== F;
    }
    function m(B, F) {
      this.message = B, this.data = F && typeof F == "object" ? F : {}, this.stack = "";
    }
    m.prototype = Error.prototype;
    function y(B) {
      if (process.env.NODE_ENV !== "production")
        var F = {}, U = 0;
      function q(K, te, ne, W, ee, Y, re) {
        if (W = W || p, Y = Y || ne, re !== n) {
          if (c) {
            var z = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw z.name = "Invariant Violation", z;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var de = W + ":" + ne;
            !F[de] && // Avoid spamming the console because they are often not actionable except for lib authors
            U < 3 && (i(
              "You are manually calling a React.PropTypes validation function for the `" + Y + "` prop on `" + W + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), F[de] = !0, U++);
          }
        }
        return te[ne] == null ? K ? te[ne] === null ? new m("The " + ee + " `" + Y + "` is marked as required " + ("in `" + W + "`, but its value is `null`.")) : new m("The " + ee + " `" + Y + "` is marked as required in " + ("`" + W + "`, but its value is `undefined`.")) : null : B(te, ne, W, ee, Y);
      }
      var G = q.bind(null, !1);
      return G.isRequired = q.bind(null, !0), G;
    }
    function b(B) {
      function F(U, q, G, K, te, ne) {
        var W = U[q], ee = N(W);
        if (ee !== B) {
          var Y = L(W);
          return new m(
            "Invalid " + K + " `" + te + "` of type " + ("`" + Y + "` supplied to `" + G + "`, expected ") + ("`" + B + "`."),
            { expectedType: B }
          );
        }
        return null;
      }
      return y(F);
    }
    function T() {
      return y(s);
    }
    function v(B) {
      function F(U, q, G, K, te) {
        if (typeof B != "function")
          return new m("Property `" + te + "` of component `" + G + "` has invalid PropType notation inside arrayOf.");
        var ne = U[q];
        if (!Array.isArray(ne)) {
          var W = N(ne);
          return new m("Invalid " + K + " `" + te + "` of type " + ("`" + W + "` supplied to `" + G + "`, expected an array."));
        }
        for (var ee = 0; ee < ne.length; ee++) {
          var Y = B(ne, ee, G, K, te + "[" + ee + "]", n);
          if (Y instanceof Error)
            return Y;
        }
        return null;
      }
      return y(F);
    }
    function w() {
      function B(F, U, q, G, K) {
        var te = F[U];
        if (!l(te)) {
          var ne = N(te);
          return new m("Invalid " + G + " `" + K + "` of type " + ("`" + ne + "` supplied to `" + q + "`, expected a single ReactElement."));
        }
        return null;
      }
      return y(B);
    }
    function S() {
      function B(F, U, q, G, K) {
        var te = F[U];
        if (!e.isValidElementType(te)) {
          var ne = N(te);
          return new m("Invalid " + G + " `" + K + "` of type " + ("`" + ne + "` supplied to `" + q + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return y(B);
    }
    function C(B) {
      function F(U, q, G, K, te) {
        if (!(U[q] instanceof B)) {
          var ne = B.name || p, W = D(U[q]);
          return new m("Invalid " + K + " `" + te + "` of type " + ("`" + W + "` supplied to `" + G + "`, expected ") + ("instance of `" + ne + "`."));
        }
        return null;
      }
      return y(F);
    }
    function E(B) {
      if (!Array.isArray(B))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? i(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : i("Invalid argument supplied to oneOf, expected an array.")), s;
      function F(U, q, G, K, te) {
        for (var ne = U[q], W = 0; W < B.length; W++)
          if (g(ne, B[W]))
            return null;
        var ee = JSON.stringify(B, function(re, z) {
          var de = L(z);
          return de === "symbol" ? String(z) : z;
        });
        return new m("Invalid " + K + " `" + te + "` of value `" + String(ne) + "` " + ("supplied to `" + G + "`, expected one of " + ee + "."));
      }
      return y(F);
    }
    function P(B) {
      function F(U, q, G, K, te) {
        if (typeof B != "function")
          return new m("Property `" + te + "` of component `" + G + "` has invalid PropType notation inside objectOf.");
        var ne = U[q], W = N(ne);
        if (W !== "object")
          return new m("Invalid " + K + " `" + te + "` of type " + ("`" + W + "` supplied to `" + G + "`, expected an object."));
        for (var ee in ne)
          if (o(ne, ee)) {
            var Y = B(ne, ee, G, K, te + "." + ee, n);
            if (Y instanceof Error)
              return Y;
          }
        return null;
      }
      return y(F);
    }
    function M(B) {
      if (!Array.isArray(B))
        return process.env.NODE_ENV !== "production" && i("Invalid argument supplied to oneOfType, expected an instance of array."), s;
      for (var F = 0; F < B.length; F++) {
        var U = B[F];
        if (typeof U != "function")
          return i(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + V(U) + " at index " + F + "."
          ), s;
      }
      function q(G, K, te, ne, W) {
        for (var ee = [], Y = 0; Y < B.length; Y++) {
          var re = B[Y], z = re(G, K, te, ne, W, n);
          if (z == null)
            return null;
          z.data && o(z.data, "expectedType") && ee.push(z.data.expectedType);
        }
        var de = ee.length > 0 ? ", expected one of type [" + ee.join(", ") + "]" : "";
        return new m("Invalid " + ne + " `" + W + "` supplied to " + ("`" + te + "`" + de + "."));
      }
      return y(q);
    }
    function x() {
      function B(F, U, q, G, K) {
        return R(F[U]) ? null : new m("Invalid " + G + " `" + K + "` supplied to " + ("`" + q + "`, expected a ReactNode."));
      }
      return y(B);
    }
    function I(B, F, U, q, G) {
      return new m(
        (B || "React class") + ": " + F + " type `" + U + "." + q + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + G + "`."
      );
    }
    function k(B) {
      function F(U, q, G, K, te) {
        var ne = U[q], W = N(ne);
        if (W !== "object")
          return new m("Invalid " + K + " `" + te + "` of type `" + W + "` " + ("supplied to `" + G + "`, expected `object`."));
        for (var ee in B) {
          var Y = B[ee];
          if (typeof Y != "function")
            return I(G, K, te, ee, L(Y));
          var re = Y(ne, ee, G, K, te + "." + ee, n);
          if (re)
            return re;
        }
        return null;
      }
      return y(F);
    }
    function _(B) {
      function F(U, q, G, K, te) {
        var ne = U[q], W = N(ne);
        if (W !== "object")
          return new m("Invalid " + K + " `" + te + "` of type `" + W + "` " + ("supplied to `" + G + "`, expected `object`."));
        var ee = t({}, U[q], B);
        for (var Y in ee) {
          var re = B[Y];
          if (o(B, Y) && typeof re != "function")
            return I(G, K, te, Y, L(re));
          if (!re)
            return new m(
              "Invalid " + K + " `" + te + "` key `" + Y + "` supplied to `" + G + "`.\nBad object: " + JSON.stringify(U[q], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(B), null, "  ")
            );
          var z = re(ne, Y, G, K, te + "." + Y, n);
          if (z)
            return z;
        }
        return null;
      }
      return y(F);
    }
    function R(B) {
      switch (typeof B) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !B;
        case "object":
          if (Array.isArray(B))
            return B.every(R);
          if (B === null || l(B))
            return !0;
          var F = f(B);
          if (F) {
            var U = F.call(B), q;
            if (F !== B.entries) {
              for (; !(q = U.next()).done; )
                if (!R(q.value))
                  return !1;
            } else
              for (; !(q = U.next()).done; ) {
                var G = q.value;
                if (G && !R(G[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function A(B, F) {
      return B === "symbol" ? !0 : F ? F["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && F instanceof Symbol : !1;
    }
    function N(B) {
      var F = typeof B;
      return Array.isArray(B) ? "array" : B instanceof RegExp ? "object" : A(F, B) ? "symbol" : F;
    }
    function L(B) {
      if (typeof B > "u" || B === null)
        return "" + B;
      var F = N(B);
      if (F === "object") {
        if (B instanceof Date)
          return "date";
        if (B instanceof RegExp)
          return "regexp";
      }
      return F;
    }
    function V(B) {
      var F = L(B);
      switch (F) {
        case "array":
        case "object":
          return "an " + F;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + F;
        default:
          return F;
      }
    }
    function D(B) {
      return !B.constructor || !B.constructor.name ? p : B.constructor.name;
    }
    return h.checkPropTypes = r, h.resetWarningCache = r.resetWarningCache, h.PropTypes = h, h;
  }, Fp;
}
var jp, bv;
function q$() {
  if (bv) return jp;
  bv = 1;
  var e = /* @__PURE__ */ Ag();
  function t() {
  }
  function n() {
  }
  return n.resetWarningCache = t, jp = function() {
    function o(s, l, c, u, d, f) {
      if (f !== e) {
        var p = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw p.name = "Invariant Violation", p;
      }
    }
    o.isRequired = o;
    function r() {
      return o;
    }
    var i = {
      array: o,
      bigint: o,
      bool: o,
      func: o,
      number: o,
      object: o,
      string: o,
      symbol: o,
      any: o,
      arrayOf: r,
      element: o,
      elementType: o,
      instanceOf: r,
      node: o,
      objectOf: r,
      oneOf: r,
      oneOfType: r,
      shape: r,
      exact: r,
      checkPropTypes: n,
      resetWarningCache: t
    };
    return i.PropTypes = i, i;
  }, jp;
}
var vv;
function K$() {
  if (vv) return lu.exports;
  if (vv = 1, process.env.NODE_ENV !== "production") {
    var e = cT(), t = !0;
    lu.exports = /* @__PURE__ */ U$()(e.isElement, t);
  } else
    lu.exports = /* @__PURE__ */ q$()();
  return lu.exports;
}
var G$ = /* @__PURE__ */ K$();
const a = /* @__PURE__ */ lT(G$);
function dT(e) {
  var t, n, o = "";
  if (typeof e == "string" || typeof e == "number") o += e;
  else if (typeof e == "object") if (Array.isArray(e)) {
    var r = e.length;
    for (t = 0; t < r; t++) e[t] && (n = dT(e[t])) && (o && (o += " "), o += n);
  } else for (n in e) e[n] && (o && (o += " "), o += n);
  return o;
}
function Ie() {
  for (var e, t, n = 0, o = "", r = arguments.length; n < r; n++) (e = arguments[n]) && (t = dT(e)) && (o && (o += " "), o += t);
  return o;
}
function st(e, t, n = void 0) {
  const o = {};
  for (const r in e) {
    const i = e[r];
    let s = "", l = !0;
    for (let c = 0; c < i.length; c += 1) {
      const u = i[c];
      u && (s += (l === !0 ? "" : " ") + t(u), l = !1, n && n[u] && (s += " " + n[u]));
    }
    o[r] = s;
  }
  return o;
}
function Pr(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((o) => n.searchParams.append("args[]", o)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
function fe(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : Pr(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
var uu = { exports: {} }, $t = {};
/**
 * @license React
 * react-is.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var xv;
function Y$() {
  if (xv) return $t;
  xv = 1;
  var e = Symbol.for("react.transitional.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), r = Symbol.for("react.profiler"), i = Symbol.for("react.consumer"), s = Symbol.for("react.context"), l = Symbol.for("react.forward_ref"), c = Symbol.for("react.suspense"), u = Symbol.for("react.suspense_list"), d = Symbol.for("react.memo"), f = Symbol.for("react.lazy"), p = Symbol.for("react.view_transition"), h = Symbol.for("react.client.reference");
  function g(m) {
    if (typeof m == "object" && m !== null) {
      var y = m.$$typeof;
      switch (y) {
        case e:
          switch (m = m.type, m) {
            case n:
            case r:
            case o:
            case c:
            case u:
            case p:
              return m;
            default:
              switch (m = m && m.$$typeof, m) {
                case s:
                case l:
                case f:
                case d:
                  return m;
                case i:
                  return m;
                default:
                  return y;
              }
          }
        case t:
          return y;
      }
    }
  }
  return $t.ContextConsumer = i, $t.ContextProvider = s, $t.Element = e, $t.ForwardRef = l, $t.Fragment = n, $t.Lazy = f, $t.Memo = d, $t.Portal = t, $t.Profiler = r, $t.StrictMode = o, $t.Suspense = c, $t.SuspenseList = u, $t.isContextConsumer = function(m) {
    return g(m) === i;
  }, $t.isContextProvider = function(m) {
    return g(m) === s;
  }, $t.isElement = function(m) {
    return typeof m == "object" && m !== null && m.$$typeof === e;
  }, $t.isForwardRef = function(m) {
    return g(m) === l;
  }, $t.isFragment = function(m) {
    return g(m) === n;
  }, $t.isLazy = function(m) {
    return g(m) === f;
  }, $t.isMemo = function(m) {
    return g(m) === d;
  }, $t.isPortal = function(m) {
    return g(m) === t;
  }, $t.isProfiler = function(m) {
    return g(m) === r;
  }, $t.isStrictMode = function(m) {
    return g(m) === o;
  }, $t.isSuspense = function(m) {
    return g(m) === c;
  }, $t.isSuspenseList = function(m) {
    return g(m) === u;
  }, $t.isValidElementType = function(m) {
    return typeof m == "string" || typeof m == "function" || m === n || m === r || m === o || m === c || m === u || typeof m == "object" && m !== null && (m.$$typeof === f || m.$$typeof === d || m.$$typeof === s || m.$$typeof === i || m.$$typeof === l || m.$$typeof === h || m.getModuleId !== void 0);
  }, $t.typeOf = g, $t;
}
var Nt = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var wv;
function X$() {
  return wv || (wv = 1, process.env.NODE_ENV !== "production" && function() {
    function e(m) {
      if (typeof m == "object" && m !== null) {
        var y = m.$$typeof;
        switch (y) {
          case t:
            switch (m = m.type, m) {
              case o:
              case i:
              case r:
              case u:
              case d:
              case h:
                return m;
              default:
                switch (m = m && m.$$typeof, m) {
                  case l:
                  case c:
                  case p:
                  case f:
                    return m;
                  case s:
                    return m;
                  default:
                    return y;
                }
            }
          case n:
            return y;
        }
      }
    }
    var t = Symbol.for("react.transitional.element"), n = Symbol.for("react.portal"), o = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), i = Symbol.for("react.profiler"), s = Symbol.for("react.consumer"), l = Symbol.for("react.context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), d = Symbol.for("react.suspense_list"), f = Symbol.for("react.memo"), p = Symbol.for("react.lazy"), h = Symbol.for("react.view_transition"), g = Symbol.for("react.client.reference");
    Nt.ContextConsumer = s, Nt.ContextProvider = l, Nt.Element = t, Nt.ForwardRef = c, Nt.Fragment = o, Nt.Lazy = p, Nt.Memo = f, Nt.Portal = n, Nt.Profiler = i, Nt.StrictMode = r, Nt.Suspense = u, Nt.SuspenseList = d, Nt.isContextConsumer = function(m) {
      return e(m) === s;
    }, Nt.isContextProvider = function(m) {
      return e(m) === l;
    }, Nt.isElement = function(m) {
      return typeof m == "object" && m !== null && m.$$typeof === t;
    }, Nt.isForwardRef = function(m) {
      return e(m) === c;
    }, Nt.isFragment = function(m) {
      return e(m) === o;
    }, Nt.isLazy = function(m) {
      return e(m) === p;
    }, Nt.isMemo = function(m) {
      return e(m) === f;
    }, Nt.isPortal = function(m) {
      return e(m) === n;
    }, Nt.isProfiler = function(m) {
      return e(m) === i;
    }, Nt.isStrictMode = function(m) {
      return e(m) === r;
    }, Nt.isSuspense = function(m) {
      return e(m) === u;
    }, Nt.isSuspenseList = function(m) {
      return e(m) === d;
    }, Nt.isValidElementType = function(m) {
      return typeof m == "string" || typeof m == "function" || m === o || m === i || m === r || m === u || m === d || typeof m == "object" && m !== null && (m.$$typeof === p || m.$$typeof === f || m.$$typeof === l || m.$$typeof === s || m.$$typeof === c || m.$$typeof === g || m.getModuleId !== void 0);
    }, Nt.typeOf = e;
  }()), Nt;
}
var Sv;
function Z$() {
  return Sv || (Sv = 1, process.env.NODE_ENV === "production" ? uu.exports = /* @__PURE__ */ Y$() : uu.exports = /* @__PURE__ */ X$()), uu.exports;
}
var lo = /* @__PURE__ */ Z$();
function yr(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function fT(e) {
  if (/* @__PURE__ */ $.isValidElement(e) || lo.isValidElementType(e) || !yr(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = fT(e[n]);
  }), t;
}
function zn(e, t, n = {
  clone: !0
}) {
  const o = n.clone ? {
    ...e
  } : e;
  return yr(e) && yr(t) && Object.keys(t).forEach((r) => {
    /* @__PURE__ */ $.isValidElement(t[r]) || lo.isValidElementType(t[r]) ? o[r] = t[r] : yr(t[r]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, r) && yr(e[r]) ? o[r] = zn(e[r], t[r], n) : n.clone ? o[r] = yr(t[r]) ? fT(t[r]) : t[r] : o[r] = t[r];
  }), o;
}
function wl(e, t) {
  return t ? zn(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const Ti = process.env.NODE_ENV !== "production" ? a.oneOfType([a.number, a.string, a.object, a.array]) : {};
function Q$(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((o) => o.startsWith("@container")).sort((o, r) => {
    var s, l;
    const i = /min-width:\s*([0-9.]+)/;
    return +(((s = o.match(i)) == null ? void 0 : s[1]) || 0) - +(((l = r.match(i)) == null ? void 0 : l[1]) || 0);
  });
  return n.length ? n.reduce((o, r) => {
    const i = t[r];
    return delete o[r], o[r] = i, o;
  }, {
    ...t
  }) : t;
}
function J$(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function eN(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : Pr(18, `(${t})`));
    return null;
  }
  const [, o, r] = n, i = Number.isNaN(+o) ? o || 0 : +o;
  return e.containerQueries(r).up(i);
}
function tN(e) {
  const t = (i, s) => i.replace("@media", s ? `@container ${s}` : "@container");
  function n(i, s) {
    i.up = (...l) => t(e.breakpoints.up(...l), s), i.down = (...l) => t(e.breakpoints.down(...l), s), i.between = (...l) => t(e.breakpoints.between(...l), s), i.only = (...l) => t(e.breakpoints.only(...l), s), i.not = (...l) => {
      const c = t(e.breakpoints.not(...l), s);
      return c.includes("not all and") ? c.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : c;
    };
  }
  const o = {}, r = (i) => (n(o, i), o);
  return n(r), {
    ...e,
    containerQueries: r
  };
}
const lf = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, Tv = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${lf[e]}px)`
}, nN = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : lf[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function Hr(e, t, n) {
  const o = e.theme || {};
  if (Array.isArray(t)) {
    const i = o.breakpoints || Tv;
    return t.reduce((s, l, c) => (s[i.up(i.keys[c])] = n(t[c]), s), {});
  }
  if (typeof t == "object") {
    const i = o.breakpoints || Tv;
    return Object.keys(t).reduce((s, l) => {
      if (J$(i.keys, l)) {
        const c = eN(o.containerQueries ? o : nN, l);
        c && (s[c] = n(t[l], l));
      } else if (Object.keys(i.values || lf).includes(l)) {
        const c = i.up(l);
        s[c] = n(t[l], l);
      } else {
        const c = l;
        s[c] = t[c];
      }
      return s;
    }, {});
  }
  return n(t);
}
function oN(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((o, r) => {
    const i = e.up(r);
    return o[i] = {}, o;
  }, {})) || {};
}
function rN(e, t) {
  return e.reduce((n, o) => {
    const r = n[o];
    return (!r || Object.keys(r).length === 0) && delete n[o], n;
  }, t);
}
function cf(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const o = `vars.${t}`.split(".").reduce((r, i) => r && r[i] ? r[i] : null, e);
    if (o != null)
      return o;
  }
  return t.split(".").reduce((o, r) => o && o[r] != null ? o[r] : null, e);
}
function dd(e, t, n, o = n) {
  let r;
  return typeof e == "function" ? r = e(n) : Array.isArray(e) ? r = e[n] || o : r = cf(e, n) || o, t && (r = t(r, o, e)), r;
}
function fn(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: o,
    transform: r
  } = e, i = (s) => {
    if (s[t] == null)
      return null;
    const l = s[t], c = s.theme, u = cf(c, o) || {};
    return Hr(s, l, (f) => {
      let p = dd(u, r, f);
      return f === p && typeof f == "string" && (p = dd(u, r, `${t}${f === "default" ? "" : fe(f)}`, f)), n === !1 ? p : {
        [n]: p
      };
    });
  };
  return i.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: Ti
  } : {}, i.filterProps = [t], i;
}
function iN(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const sN = {
  m: "margin",
  p: "padding"
}, aN = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, Cv = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, lN = iN((e) => {
  if (e.length > 2)
    if (Cv[e])
      e = Cv[e];
    else
      return [e];
  const [t, n] = e.split(""), o = sN[t], r = aN[n] || "";
  return Array.isArray(r) ? r.map((i) => o + i) : [o + r];
}), uf = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], df = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], cN = [...uf, ...df];
function Cc(e, t, n, o) {
  const r = cf(e, t, !0) ?? n;
  return typeof r == "number" || typeof r == "string" ? (i) => typeof i == "string" ? i : (process.env.NODE_ENV !== "production" && typeof i != "number" && console.error(`MUI: Expected ${o} argument to be a number or a string, got ${i}.`), typeof r == "string" ? r.startsWith("var(") && i === 0 ? 0 : r.startsWith("var(") && i === 1 ? r : `calc(${i} * ${r})` : r * i) : Array.isArray(r) ? (i) => {
    if (typeof i == "string")
      return i;
    const s = Math.abs(i);
    process.env.NODE_ENV !== "production" && (Number.isInteger(s) ? s > r.length - 1 && console.error([`MUI: The value provided (${s}) overflows.`, `The supported values are: ${JSON.stringify(r)}.`, `${s} > ${r.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const l = r[s];
    return i >= 0 ? l : typeof l == "number" ? -l : typeof l == "string" && l.startsWith("var(") ? `calc(-1 * ${l})` : `-${l}`;
  } : typeof r == "function" ? r : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${r}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function _g(e) {
  return Cc(e, "spacing", 8, "spacing");
}
function Ec(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function uN(e, t) {
  return (n) => e.reduce((o, r) => (o[r] = Ec(t, n), o), {});
}
function dN(e, t, n, o) {
  if (!t.includes(n))
    return null;
  const r = lN(n), i = uN(r, o), s = e[n];
  return Hr(e, s, i);
}
function pT(e, t) {
  const n = _g(e.theme);
  return Object.keys(e).map((o) => dN(e, t, o, n)).reduce(wl, {});
}
function on(e) {
  return pT(e, uf);
}
on.propTypes = process.env.NODE_ENV !== "production" ? uf.reduce((e, t) => (e[t] = Ti, e), {}) : {};
on.filterProps = uf;
function rn(e) {
  return pT(e, df);
}
rn.propTypes = process.env.NODE_ENV !== "production" ? df.reduce((e, t) => (e[t] = Ti, e), {}) : {};
rn.filterProps = df;
process.env.NODE_ENV !== "production" && cN.reduce((e, t) => (e[t] = Ti, e), {});
function ff(...e) {
  const t = e.reduce((o, r) => (r.filterProps.forEach((i) => {
    o[i] = r;
  }), o), {}), n = (o) => Object.keys(o).reduce((r, i) => t[i] ? wl(r, t[i](o)) : r, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((o, r) => Object.assign(o, r.propTypes), {}) : {}, n.filterProps = e.reduce((o, r) => o.concat(r.filterProps), []), n;
}
function Do(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function qo(e, t) {
  return fn({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const fN = qo("border", Do), pN = qo("borderTop", Do), hN = qo("borderRight", Do), mN = qo("borderBottom", Do), gN = qo("borderLeft", Do), yN = qo("borderColor"), bN = qo("borderTopColor"), vN = qo("borderRightColor"), xN = qo("borderBottomColor"), wN = qo("borderLeftColor"), SN = qo("outline", Do), TN = qo("outlineColor"), pf = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = Cc(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (o) => ({
      borderRadius: Ec(t, o)
    });
    return Hr(e, e.borderRadius, n);
  }
  return null;
};
pf.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: Ti
} : {};
pf.filterProps = ["borderRadius"];
ff(fN, pN, hN, mN, gN, yN, bN, vN, xN, wN, pf, SN, TN);
const hf = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = Cc(e.theme, "spacing", 8, "gap"), n = (o) => ({
      gap: Ec(t, o)
    });
    return Hr(e, e.gap, n);
  }
  return null;
};
hf.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: Ti
} : {};
hf.filterProps = ["gap"];
const mf = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = Cc(e.theme, "spacing", 8, "columnGap"), n = (o) => ({
      columnGap: Ec(t, o)
    });
    return Hr(e, e.columnGap, n);
  }
  return null;
};
mf.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: Ti
} : {};
mf.filterProps = ["columnGap"];
const gf = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = Cc(e.theme, "spacing", 8, "rowGap"), n = (o) => ({
      rowGap: Ec(t, o)
    });
    return Hr(e, e.rowGap, n);
  }
  return null;
};
gf.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: Ti
} : {};
gf.filterProps = ["rowGap"];
const CN = fn({
  prop: "gridColumn"
}), EN = fn({
  prop: "gridRow"
}), ON = fn({
  prop: "gridAutoFlow"
}), PN = fn({
  prop: "gridAutoColumns"
}), RN = fn({
  prop: "gridAutoRows"
}), IN = fn({
  prop: "gridTemplateColumns"
}), kN = fn({
  prop: "gridTemplateRows"
}), $N = fn({
  prop: "gridTemplateAreas"
}), NN = fn({
  prop: "gridArea"
});
ff(hf, mf, gf, CN, EN, ON, PN, RN, IN, kN, $N, NN);
function Xs(e, t) {
  return t === "grey" ? t : e;
}
const MN = fn({
  prop: "color",
  themeKey: "palette",
  transform: Xs
}), AN = fn({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: Xs
}), _N = fn({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: Xs
});
ff(MN, AN, _N);
function yo(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const DN = fn({
  prop: "width",
  transform: yo
}), Dg = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var r, i, s, l, c;
      const o = ((s = (i = (r = e.theme) == null ? void 0 : r.breakpoints) == null ? void 0 : i.values) == null ? void 0 : s[n]) || lf[n];
      return o ? ((c = (l = e.theme) == null ? void 0 : l.breakpoints) == null ? void 0 : c.unit) !== "px" ? {
        maxWidth: `${o}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: o
      } : {
        maxWidth: yo(n)
      };
    };
    return Hr(e, e.maxWidth, t);
  }
  return null;
};
Dg.filterProps = ["maxWidth"];
const LN = fn({
  prop: "minWidth",
  transform: yo
}), BN = fn({
  prop: "height",
  transform: yo
}), VN = fn({
  prop: "maxHeight",
  transform: yo
}), FN = fn({
  prop: "minHeight",
  transform: yo
});
fn({
  prop: "size",
  cssProperty: "width",
  transform: yo
});
fn({
  prop: "size",
  cssProperty: "height",
  transform: yo
});
const jN = fn({
  prop: "boxSizing"
});
ff(DN, Dg, LN, BN, VN, FN, jN);
const Oc = {
  // borders
  border: {
    themeKey: "borders",
    transform: Do
  },
  borderTop: {
    themeKey: "borders",
    transform: Do
  },
  borderRight: {
    themeKey: "borders",
    transform: Do
  },
  borderBottom: {
    themeKey: "borders",
    transform: Do
  },
  borderLeft: {
    themeKey: "borders",
    transform: Do
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: Do
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: pf
  },
  // palette
  color: {
    themeKey: "palette",
    transform: Xs
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: Xs
  },
  backgroundColor: {
    themeKey: "palette",
    transform: Xs
  },
  // spacing
  p: {
    style: rn
  },
  pt: {
    style: rn
  },
  pr: {
    style: rn
  },
  pb: {
    style: rn
  },
  pl: {
    style: rn
  },
  px: {
    style: rn
  },
  py: {
    style: rn
  },
  padding: {
    style: rn
  },
  paddingTop: {
    style: rn
  },
  paddingRight: {
    style: rn
  },
  paddingBottom: {
    style: rn
  },
  paddingLeft: {
    style: rn
  },
  paddingX: {
    style: rn
  },
  paddingY: {
    style: rn
  },
  paddingInline: {
    style: rn
  },
  paddingInlineStart: {
    style: rn
  },
  paddingInlineEnd: {
    style: rn
  },
  paddingBlock: {
    style: rn
  },
  paddingBlockStart: {
    style: rn
  },
  paddingBlockEnd: {
    style: rn
  },
  m: {
    style: on
  },
  mt: {
    style: on
  },
  mr: {
    style: on
  },
  mb: {
    style: on
  },
  ml: {
    style: on
  },
  mx: {
    style: on
  },
  my: {
    style: on
  },
  margin: {
    style: on
  },
  marginTop: {
    style: on
  },
  marginRight: {
    style: on
  },
  marginBottom: {
    style: on
  },
  marginLeft: {
    style: on
  },
  marginX: {
    style: on
  },
  marginY: {
    style: on
  },
  marginInline: {
    style: on
  },
  marginInlineStart: {
    style: on
  },
  marginInlineEnd: {
    style: on
  },
  marginBlock: {
    style: on
  },
  marginBlockStart: {
    style: on
  },
  marginBlockEnd: {
    style: on
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: hf
  },
  rowGap: {
    style: gf
  },
  columnGap: {
    style: mf
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: yo
  },
  maxWidth: {
    style: Dg
  },
  minWidth: {
    transform: yo
  },
  height: {
    transform: yo
  },
  maxHeight: {
    transform: yo
  },
  minHeight: {
    transform: yo
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function zN(...e) {
  const t = e.reduce((o, r) => o.concat(Object.keys(r)), []), n = new Set(t);
  return e.every((o) => n.size === Object.keys(o).length);
}
function HN(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function WN() {
  function e(n, o, r, i) {
    const s = {
      [n]: o,
      theme: r
    }, l = i[n];
    if (!l)
      return {
        [n]: o
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: d,
      style: f
    } = l;
    if (o == null)
      return null;
    if (u === "typography" && o === "inherit")
      return {
        [n]: o
      };
    const p = cf(r, u) || {};
    return f ? f(s) : Hr(s, o, (g) => {
      let m = dd(p, d, g);
      return g === m && typeof g == "string" && (m = dd(p, d, `${n}${g === "default" ? "" : fe(g)}`, g)), c === !1 ? m : {
        [c]: m
      };
    });
  }
  function t(n) {
    const {
      sx: o,
      theme: r = {}
    } = n || {};
    if (!o)
      return null;
    const i = r.unstable_sxConfig ?? Oc;
    function s(l) {
      let c = l;
      if (typeof l == "function")
        c = l(r);
      else if (typeof l != "object")
        return l;
      if (!c)
        return null;
      const u = oN(r.breakpoints), d = Object.keys(u);
      let f = u;
      return Object.keys(c).forEach((p) => {
        const h = HN(c[p], r);
        if (h != null)
          if (typeof h == "object")
            if (i[p])
              f = wl(f, e(p, h, r, i));
            else {
              const g = Hr({
                theme: r
              }, h, (m) => ({
                [p]: m
              }));
              zN(g, h) ? f[p] = t({
                sx: h,
                theme: r
              }) : f = wl(f, g);
            }
          else
            f = wl(f, e(p, h, r, i));
      }), Q$(r, rN(d, f));
    }
    return Array.isArray(o) ? o.map(s) : s(o);
  }
  return t;
}
const mi = WN();
mi.filterProps = ["sx"];
const UN = (e) => {
  var o;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((o = e == null ? void 0 : e.theme) == null ? void 0 : o.unstable_sxConfig) ?? Oc;
  return Object.keys(e).forEach((r) => {
    n[r] ? t.systemProps[r] = e[r] : t.otherProps[r] = e[r];
  }), t;
};
function hT(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: o,
    otherProps: r
  } = UN(n);
  let i;
  return Array.isArray(t) ? i = [o, ...t] : typeof t == "function" ? i = (...s) => {
    const l = t(...s);
    return yr(l) ? {
      ...o,
      ...l
    } : o;
  } : i = {
    ...o,
    ...t
  }, {
    ...r,
    sx: i
  };
}
function fd() {
  return fd = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var o in n) ({}).hasOwnProperty.call(n, o) && (e[o] = n[o]);
    }
    return e;
  }, fd.apply(null, arguments);
}
function qN(e) {
  if (e.sheet)
    return e.sheet;
  for (var t = 0; t < document.styleSheets.length; t++)
    if (document.styleSheets[t].ownerNode === e)
      return document.styleSheets[t];
}
function KN(e) {
  var t = document.createElement("style");
  return t.setAttribute("data-emotion", e.key), e.nonce !== void 0 && t.setAttribute("nonce", e.nonce), t.appendChild(document.createTextNode("")), t.setAttribute("data-s", ""), t;
}
var GN = /* @__PURE__ */ function() {
  function e(n) {
    var o = this;
    this._insertTag = function(r) {
      var i;
      o.tags.length === 0 ? o.insertionPoint ? i = o.insertionPoint.nextSibling : o.prepend ? i = o.container.firstChild : i = o.before : i = o.tags[o.tags.length - 1].nextSibling, o.container.insertBefore(r, i), o.tags.push(r);
    }, this.isSpeedy = n.speedy === void 0 ? !0 : n.speedy, this.tags = [], this.ctr = 0, this.nonce = n.nonce, this.key = n.key, this.container = n.container, this.prepend = n.prepend, this.insertionPoint = n.insertionPoint, this.before = null;
  }
  var t = e.prototype;
  return t.hydrate = function(o) {
    o.forEach(this._insertTag);
  }, t.insert = function(o) {
    this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(KN(this));
    var r = this.tags[this.tags.length - 1];
    if (this.isSpeedy) {
      var i = qN(r);
      try {
        i.insertRule(o, i.cssRules.length);
      } catch {
      }
    } else
      r.appendChild(document.createTextNode(o));
    this.ctr++;
  }, t.flush = function() {
    this.tags.forEach(function(o) {
      var r;
      return (r = o.parentNode) == null ? void 0 : r.removeChild(o);
    }), this.tags = [], this.ctr = 0;
  }, e;
}(), _n = "-ms-", pd = "-moz-", wt = "-webkit-", mT = "comm", Lg = "rule", Bg = "decl", YN = "@import", gT = "@keyframes", XN = "@layer", ZN = Math.abs, yf = String.fromCharCode, QN = Object.assign;
function JN(e, t) {
  return $n(e, 0) ^ 45 ? (((t << 2 ^ $n(e, 0)) << 2 ^ $n(e, 1)) << 2 ^ $n(e, 2)) << 2 ^ $n(e, 3) : 0;
}
function yT(e) {
  return e.trim();
}
function eM(e, t) {
  return (e = t.exec(e)) ? e[0] : e;
}
function St(e, t, n) {
  return e.replace(t, n);
}
function rm(e, t) {
  return e.indexOf(t);
}
function $n(e, t) {
  return e.charCodeAt(t) | 0;
}
function jl(e, t, n) {
  return e.slice(t, n);
}
function hr(e) {
  return e.length;
}
function Vg(e) {
  return e.length;
}
function du(e, t) {
  return t.push(e), e;
}
function tM(e, t) {
  return e.map(t).join("");
}
var bf = 1, oa = 1, bT = 0, co = 0, gn = 0, Ra = "";
function vf(e, t, n, o, r, i, s) {
  return { value: e, root: t, parent: n, type: o, props: r, children: i, line: bf, column: oa, length: s, return: "" };
}
function Ha(e, t) {
  return QN(vf("", null, null, "", null, null, 0), e, { length: -e.length }, t);
}
function nM() {
  return gn;
}
function oM() {
  return gn = co > 0 ? $n(Ra, --co) : 0, oa--, gn === 10 && (oa = 1, bf--), gn;
}
function So() {
  return gn = co < bT ? $n(Ra, co++) : 0, oa++, gn === 10 && (oa = 1, bf++), gn;
}
function wr() {
  return $n(Ra, co);
}
function qu() {
  return co;
}
function Pc(e, t) {
  return jl(Ra, e, t);
}
function zl(e) {
  switch (e) {
    // \0 \t \n \r \s whitespace token
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    // ! + , / > @ ~ isolate token
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    // ; { } breakpoint token
    case 59:
    case 123:
    case 125:
      return 4;
    // : accompanied token
    case 58:
      return 3;
    // " ' ( [ opening delimit token
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    // ) ] closing delimit token
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function vT(e) {
  return bf = oa = 1, bT = hr(Ra = e), co = 0, [];
}
function xT(e) {
  return Ra = "", e;
}
function Ku(e) {
  return yT(Pc(co - 1, im(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function rM(e) {
  for (; (gn = wr()) && gn < 33; )
    So();
  return zl(e) > 2 || zl(gn) > 3 ? "" : " ";
}
function iM(e, t) {
  for (; --t && So() && !(gn < 48 || gn > 102 || gn > 57 && gn < 65 || gn > 70 && gn < 97); )
    ;
  return Pc(e, qu() + (t < 6 && wr() == 32 && So() == 32));
}
function im(e) {
  for (; So(); )
    switch (gn) {
      // ] ) " '
      case e:
        return co;
      // " '
      case 34:
      case 39:
        e !== 34 && e !== 39 && im(gn);
        break;
      // (
      case 40:
        e === 41 && im(e);
        break;
      // \
      case 92:
        So();
        break;
    }
  return co;
}
function sM(e, t) {
  for (; So() && e + gn !== 57; )
    if (e + gn === 84 && wr() === 47)
      break;
  return "/*" + Pc(t, co - 1) + "*" + yf(e === 47 ? e : So());
}
function aM(e) {
  for (; !zl(wr()); )
    So();
  return Pc(e, co);
}
function lM(e) {
  return xT(Gu("", null, null, null, [""], e = vT(e), 0, [0], e));
}
function Gu(e, t, n, o, r, i, s, l, c) {
  for (var u = 0, d = 0, f = s, p = 0, h = 0, g = 0, m = 1, y = 1, b = 1, T = 0, v = "", w = r, S = i, C = o, E = v; y; )
    switch (g = T, T = So()) {
      // (
      case 40:
        if (g != 108 && $n(E, f - 1) == 58) {
          rm(E += St(Ku(T), "&", "&\f"), "&\f") != -1 && (b = -1);
          break;
        }
      // " ' [
      case 34:
      case 39:
      case 91:
        E += Ku(T);
        break;
      // \t \n \r \s
      case 9:
      case 10:
      case 13:
      case 32:
        E += rM(g);
        break;
      // \
      case 92:
        E += iM(qu() - 1, 7);
        continue;
      // /
      case 47:
        switch (wr()) {
          case 42:
          case 47:
            du(cM(sM(So(), qu()), t, n), c);
            break;
          default:
            E += "/";
        }
        break;
      // {
      case 123 * m:
        l[u++] = hr(E) * b;
      // } ; \0
      case 125 * m:
      case 59:
      case 0:
        switch (T) {
          // \0 }
          case 0:
          case 125:
            y = 0;
          // ;
          case 59 + d:
            b == -1 && (E = St(E, /\f/g, "")), h > 0 && hr(E) - f && du(h > 32 ? Ov(E + ";", o, n, f - 1) : Ov(St(E, " ", "") + ";", o, n, f - 2), c);
            break;
          // @ ;
          case 59:
            E += ";";
          // { rule/at-rule
          default:
            if (du(C = Ev(E, t, n, u, d, r, l, v, w = [], S = [], f), i), T === 123)
              if (d === 0)
                Gu(E, t, C, C, w, i, f, l, S);
              else
                switch (p === 99 && $n(E, 3) === 110 ? 100 : p) {
                  // d l m s
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    Gu(e, C, C, o && du(Ev(e, C, C, 0, 0, r, l, v, r, w = [], f), S), r, S, f, l, o ? w : S);
                    break;
                  default:
                    Gu(E, C, C, C, [""], S, 0, l, S);
                }
        }
        u = d = h = 0, m = b = 1, v = E = "", f = s;
        break;
      // :
      case 58:
        f = 1 + hr(E), h = g;
      default:
        if (m < 1) {
          if (T == 123)
            --m;
          else if (T == 125 && m++ == 0 && oM() == 125)
            continue;
        }
        switch (E += yf(T), T * m) {
          // &
          case 38:
            b = d > 0 ? 1 : (E += "\f", -1);
            break;
          // ,
          case 44:
            l[u++] = (hr(E) - 1) * b, b = 1;
            break;
          // @
          case 64:
            wr() === 45 && (E += Ku(So())), p = wr(), d = f = hr(v = E += aM(qu())), T++;
            break;
          // -
          case 45:
            g === 45 && hr(E) == 2 && (m = 0);
        }
    }
  return i;
}
function Ev(e, t, n, o, r, i, s, l, c, u, d) {
  for (var f = r - 1, p = r === 0 ? i : [""], h = Vg(p), g = 0, m = 0, y = 0; g < o; ++g)
    for (var b = 0, T = jl(e, f + 1, f = ZN(m = s[g])), v = e; b < h; ++b)
      (v = yT(m > 0 ? p[b] + " " + T : St(T, /&\f/g, p[b]))) && (c[y++] = v);
  return vf(e, t, n, r === 0 ? Lg : l, c, u, d);
}
function cM(e, t, n) {
  return vf(e, t, n, mT, yf(nM()), jl(e, 2, -2), 0);
}
function Ov(e, t, n, o) {
  return vf(e, t, n, Bg, jl(e, 0, o), jl(e, o + 1, -1), o);
}
function Zs(e, t) {
  for (var n = "", o = Vg(e), r = 0; r < o; r++)
    n += t(e[r], r, e, t) || "";
  return n;
}
function uM(e, t, n, o) {
  switch (e.type) {
    case XN:
      if (e.children.length) break;
    case YN:
    case Bg:
      return e.return = e.return || e.value;
    case mT:
      return "";
    case gT:
      return e.return = e.value + "{" + Zs(e.children, o) + "}";
    case Lg:
      e.value = e.props.join(",");
  }
  return hr(n = Zs(e.children, o)) ? e.return = e.value + "{" + n + "}" : "";
}
function dM(e) {
  var t = Vg(e);
  return function(n, o, r, i) {
    for (var s = "", l = 0; l < t; l++)
      s += e[l](n, o, r, i) || "";
    return s;
  };
}
function fM(e) {
  return function(t) {
    t.root || (t = t.return) && e(t);
  };
}
function wT(e) {
  var t = /* @__PURE__ */ Object.create(null);
  return function(n) {
    return t[n] === void 0 && (t[n] = e(n)), t[n];
  };
}
var pM = function(t, n, o) {
  for (var r = 0, i = 0; r = i, i = wr(), r === 38 && i === 12 && (n[o] = 1), !zl(i); )
    So();
  return Pc(t, co);
}, hM = function(t, n) {
  var o = -1, r = 44;
  do
    switch (zl(r)) {
      case 0:
        r === 38 && wr() === 12 && (n[o] = 1), t[o] += pM(co - 1, n, o);
        break;
      case 2:
        t[o] += Ku(r);
        break;
      case 4:
        if (r === 44) {
          t[++o] = wr() === 58 ? "&\f" : "", n[o] = t[o].length;
          break;
        }
      // fallthrough
      default:
        t[o] += yf(r);
    }
  while (r = So());
  return t;
}, mM = function(t, n) {
  return xT(hM(vT(t), n));
}, Pv = /* @__PURE__ */ new WeakMap(), gM = function(t) {
  if (!(t.type !== "rule" || !t.parent || // positive .length indicates that this rule contains pseudo
  // negative .length indicates that this rule has been already prefixed
  t.length < 1)) {
    for (var n = t.value, o = t.parent, r = t.column === o.column && t.line === o.line; o.type !== "rule"; )
      if (o = o.parent, !o) return;
    if (!(t.props.length === 1 && n.charCodeAt(0) !== 58 && !Pv.get(o)) && !r) {
      Pv.set(t, !0);
      for (var i = [], s = mM(n, i), l = o.props, c = 0, u = 0; c < s.length; c++)
        for (var d = 0; d < l.length; d++, u++)
          t.props[u] = i[c] ? s[c].replace(/&\f/g, l[d]) : l[d] + " " + s[c];
    }
  }
}, yM = function(t) {
  if (t.type === "decl") {
    var n = t.value;
    // charcode for l
    n.charCodeAt(0) === 108 && // charcode for b
    n.charCodeAt(2) === 98 && (t.return = "", t.value = "");
  }
};
function ST(e, t) {
  switch (JN(e, t)) {
    // color-adjust
    case 5103:
      return wt + "print-" + e + e;
    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return wt + e + e;
    // appearance, user-select, transform, hyphens, text-size-adjust
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return wt + e + pd + e + _n + e + e;
    // flex, flex-direction
    case 6828:
    case 4268:
      return wt + e + _n + e + e;
    // order
    case 6165:
      return wt + e + _n + "flex-" + e + e;
    // align-items
    case 5187:
      return wt + e + St(e, /(\w+).+(:[^]+)/, wt + "box-$1$2" + _n + "flex-$1$2") + e;
    // align-self
    case 5443:
      return wt + e + _n + "flex-item-" + St(e, /flex-|-self/, "") + e;
    // align-content
    case 4675:
      return wt + e + _n + "flex-line-pack" + St(e, /align-content|flex-|-self/, "") + e;
    // flex-shrink
    case 5548:
      return wt + e + _n + St(e, "shrink", "negative") + e;
    // flex-basis
    case 5292:
      return wt + e + _n + St(e, "basis", "preferred-size") + e;
    // flex-grow
    case 6060:
      return wt + "box-" + St(e, "-grow", "") + wt + e + _n + St(e, "grow", "positive") + e;
    // transition
    case 4554:
      return wt + St(e, /([^-])(transform)/g, "$1" + wt + "$2") + e;
    // cursor
    case 6187:
      return St(St(St(e, /(zoom-|grab)/, wt + "$1"), /(image-set)/, wt + "$1"), e, "") + e;
    // background, background-image
    case 5495:
    case 3959:
      return St(e, /(image-set\([^]*)/, wt + "$1$`$1");
    // justify-content
    case 4968:
      return St(St(e, /(.+:)(flex-)?(.*)/, wt + "box-pack:$3" + _n + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + wt + e + e;
    // (margin|padding)-inline-(start|end)
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return St(e, /(.+)-inline(.+)/, wt + "$1$2") + e;
    // (min|max)?(width|height|inline-size|block-size)
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (hr(e) - 1 - t > 6) switch ($n(e, t + 1)) {
        // (m)ax-content, (m)in-content
        case 109:
          if ($n(e, t + 4) !== 45) break;
        // (f)ill-available, (f)it-content
        case 102:
          return St(e, /(.+:)(.+)-([^]+)/, "$1" + wt + "$2-$3$1" + pd + ($n(e, t + 3) == 108 ? "$3" : "$2-$3")) + e;
        // (s)tretch
        case 115:
          return ~rm(e, "stretch") ? ST(St(e, "stretch", "fill-available"), t) + e : e;
      }
      break;
    // position: sticky
    case 4949:
      if ($n(e, t + 1) !== 115) break;
    // display: (flex|inline-flex)
    case 6444:
      switch ($n(e, hr(e) - 3 - (~rm(e, "!important") && 10))) {
        // stic(k)y
        case 107:
          return St(e, ":", ":" + wt) + e;
        // (inline-)?fl(e)x
        case 101:
          return St(e, /(.+:)([^;!]+)(;|!.+)?/, "$1" + wt + ($n(e, 14) === 45 ? "inline-" : "") + "box$3$1" + wt + "$2$3$1" + _n + "$2box$3") + e;
      }
      break;
    // writing-mode
    case 5936:
      switch ($n(e, t + 11)) {
        // vertical-l(r)
        case 114:
          return wt + e + _n + St(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
        // vertical-r(l)
        case 108:
          return wt + e + _n + St(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
        // horizontal(-)tb
        case 45:
          return wt + e + _n + St(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
      }
      return wt + e + _n + e + e;
  }
  return e;
}
var bM = function(t, n, o, r) {
  if (t.length > -1 && !t.return) switch (t.type) {
    case Bg:
      t.return = ST(t.value, t.length);
      break;
    case gT:
      return Zs([Ha(t, {
        value: St(t.value, "@", "@" + wt)
      })], r);
    case Lg:
      if (t.length) return tM(t.props, function(i) {
        switch (eM(i, /(::plac\w+|:read-\w+)/)) {
          // :read-(only|write)
          case ":read-only":
          case ":read-write":
            return Zs([Ha(t, {
              props: [St(i, /:(read-\w+)/, ":" + pd + "$1")]
            })], r);
          // :placeholder
          case "::placeholder":
            return Zs([Ha(t, {
              props: [St(i, /:(plac\w+)/, ":" + wt + "input-$1")]
            }), Ha(t, {
              props: [St(i, /:(plac\w+)/, ":" + pd + "$1")]
            }), Ha(t, {
              props: [St(i, /:(plac\w+)/, _n + "input-$1")]
            })], r);
        }
        return "";
      });
  }
}, vM = [bM], xM = function(t) {
  var n = t.key;
  if (n === "css") {
    var o = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(o, function(m) {
      var y = m.getAttribute("data-emotion");
      y.indexOf(" ") !== -1 && (document.head.appendChild(m), m.setAttribute("data-s", ""));
    });
  }
  var r = t.stylisPlugins || vM, i = {}, s, l = [];
  s = t.container || document.head, Array.prototype.forEach.call(
    // this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll('style[data-emotion^="' + n + ' "]'),
    function(m) {
      for (var y = m.getAttribute("data-emotion").split(" "), b = 1; b < y.length; b++)
        i[y[b]] = !0;
      l.push(m);
    }
  );
  var c, u = [gM, yM];
  {
    var d, f = [uM, fM(function(m) {
      d.insert(m);
    })], p = dM(u.concat(r, f)), h = function(y) {
      return Zs(lM(y), p);
    };
    c = function(y, b, T, v) {
      d = T, h(y ? y + "{" + b.styles + "}" : b.styles), v && (g.inserted[b.name] = !0);
    };
  }
  var g = {
    key: n,
    sheet: new GN({
      key: n,
      container: s,
      nonce: t.nonce,
      speedy: t.speedy,
      prepend: t.prepend,
      insertionPoint: t.insertionPoint
    }),
    nonce: t.nonce,
    inserted: i,
    registered: {},
    insert: c
  };
  return g.sheet.hydrate(l), g;
}, fu = { exports: {} }, Rt = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Rv;
function wM() {
  if (Rv) return Rt;
  Rv = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, o = e ? Symbol.for("react.fragment") : 60107, r = e ? Symbol.for("react.strict_mode") : 60108, i = e ? Symbol.for("react.profiler") : 60114, s = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, h = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, y = e ? Symbol.for("react.fundamental") : 60117, b = e ? Symbol.for("react.responder") : 60118, T = e ? Symbol.for("react.scope") : 60119;
  function v(S) {
    if (typeof S == "object" && S !== null) {
      var C = S.$$typeof;
      switch (C) {
        case t:
          switch (S = S.type, S) {
            case c:
            case u:
            case o:
            case i:
            case r:
            case f:
              return S;
            default:
              switch (S = S && S.$$typeof, S) {
                case l:
                case d:
                case g:
                case h:
                case s:
                  return S;
                default:
                  return C;
              }
          }
        case n:
          return C;
      }
    }
  }
  function w(S) {
    return v(S) === u;
  }
  return Rt.AsyncMode = c, Rt.ConcurrentMode = u, Rt.ContextConsumer = l, Rt.ContextProvider = s, Rt.Element = t, Rt.ForwardRef = d, Rt.Fragment = o, Rt.Lazy = g, Rt.Memo = h, Rt.Portal = n, Rt.Profiler = i, Rt.StrictMode = r, Rt.Suspense = f, Rt.isAsyncMode = function(S) {
    return w(S) || v(S) === c;
  }, Rt.isConcurrentMode = w, Rt.isContextConsumer = function(S) {
    return v(S) === l;
  }, Rt.isContextProvider = function(S) {
    return v(S) === s;
  }, Rt.isElement = function(S) {
    return typeof S == "object" && S !== null && S.$$typeof === t;
  }, Rt.isForwardRef = function(S) {
    return v(S) === d;
  }, Rt.isFragment = function(S) {
    return v(S) === o;
  }, Rt.isLazy = function(S) {
    return v(S) === g;
  }, Rt.isMemo = function(S) {
    return v(S) === h;
  }, Rt.isPortal = function(S) {
    return v(S) === n;
  }, Rt.isProfiler = function(S) {
    return v(S) === i;
  }, Rt.isStrictMode = function(S) {
    return v(S) === r;
  }, Rt.isSuspense = function(S) {
    return v(S) === f;
  }, Rt.isValidElementType = function(S) {
    return typeof S == "string" || typeof S == "function" || S === o || S === u || S === i || S === r || S === f || S === p || typeof S == "object" && S !== null && (S.$$typeof === g || S.$$typeof === h || S.$$typeof === s || S.$$typeof === l || S.$$typeof === d || S.$$typeof === y || S.$$typeof === b || S.$$typeof === T || S.$$typeof === m);
  }, Rt.typeOf = v, Rt;
}
var It = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Iv;
function SM() {
  return Iv || (Iv = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, o = e ? Symbol.for("react.fragment") : 60107, r = e ? Symbol.for("react.strict_mode") : 60108, i = e ? Symbol.for("react.profiler") : 60114, s = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, h = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, y = e ? Symbol.for("react.fundamental") : 60117, b = e ? Symbol.for("react.responder") : 60118, T = e ? Symbol.for("react.scope") : 60119;
    function v(z) {
      return typeof z == "string" || typeof z == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      z === o || z === u || z === i || z === r || z === f || z === p || typeof z == "object" && z !== null && (z.$$typeof === g || z.$$typeof === h || z.$$typeof === s || z.$$typeof === l || z.$$typeof === d || z.$$typeof === y || z.$$typeof === b || z.$$typeof === T || z.$$typeof === m);
    }
    function w(z) {
      if (typeof z == "object" && z !== null) {
        var de = z.$$typeof;
        switch (de) {
          case t:
            var ue = z.type;
            switch (ue) {
              case c:
              case u:
              case o:
              case i:
              case r:
              case f:
                return ue;
              default:
                var xe = ue && ue.$$typeof;
                switch (xe) {
                  case l:
                  case d:
                  case g:
                  case h:
                  case s:
                    return xe;
                  default:
                    return de;
                }
            }
          case n:
            return de;
        }
      }
    }
    var S = c, C = u, E = l, P = s, M = t, x = d, I = o, k = g, _ = h, R = n, A = i, N = r, L = f, V = !1;
    function D(z) {
      return V || (V = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), B(z) || w(z) === c;
    }
    function B(z) {
      return w(z) === u;
    }
    function F(z) {
      return w(z) === l;
    }
    function U(z) {
      return w(z) === s;
    }
    function q(z) {
      return typeof z == "object" && z !== null && z.$$typeof === t;
    }
    function G(z) {
      return w(z) === d;
    }
    function K(z) {
      return w(z) === o;
    }
    function te(z) {
      return w(z) === g;
    }
    function ne(z) {
      return w(z) === h;
    }
    function W(z) {
      return w(z) === n;
    }
    function ee(z) {
      return w(z) === i;
    }
    function Y(z) {
      return w(z) === r;
    }
    function re(z) {
      return w(z) === f;
    }
    It.AsyncMode = S, It.ConcurrentMode = C, It.ContextConsumer = E, It.ContextProvider = P, It.Element = M, It.ForwardRef = x, It.Fragment = I, It.Lazy = k, It.Memo = _, It.Portal = R, It.Profiler = A, It.StrictMode = N, It.Suspense = L, It.isAsyncMode = D, It.isConcurrentMode = B, It.isContextConsumer = F, It.isContextProvider = U, It.isElement = q, It.isForwardRef = G, It.isFragment = K, It.isLazy = te, It.isMemo = ne, It.isPortal = W, It.isProfiler = ee, It.isStrictMode = Y, It.isSuspense = re, It.isValidElementType = v, It.typeOf = w;
  }()), It;
}
var kv;
function TM() {
  return kv || (kv = 1, process.env.NODE_ENV === "production" ? fu.exports = wM() : fu.exports = SM()), fu.exports;
}
var zp, $v;
function CM() {
  if ($v) return zp;
  $v = 1;
  var e = TM(), t = {
    childContextTypes: !0,
    contextType: !0,
    contextTypes: !0,
    defaultProps: !0,
    displayName: !0,
    getDefaultProps: !0,
    getDerivedStateFromError: !0,
    getDerivedStateFromProps: !0,
    mixins: !0,
    propTypes: !0,
    type: !0
  }, n = {
    name: !0,
    length: !0,
    prototype: !0,
    caller: !0,
    callee: !0,
    arguments: !0,
    arity: !0
  }, o = {
    $$typeof: !0,
    render: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0
  }, r = {
    $$typeof: !0,
    compare: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0,
    type: !0
  }, i = {};
  i[e.ForwardRef] = o, i[e.Memo] = r;
  function s(g) {
    return e.isMemo(g) ? r : i[g.$$typeof] || t;
  }
  var l = Object.defineProperty, c = Object.getOwnPropertyNames, u = Object.getOwnPropertySymbols, d = Object.getOwnPropertyDescriptor, f = Object.getPrototypeOf, p = Object.prototype;
  function h(g, m, y) {
    if (typeof m != "string") {
      if (p) {
        var b = f(m);
        b && b !== p && h(g, b, y);
      }
      var T = c(m);
      u && (T = T.concat(u(m)));
      for (var v = s(g), w = s(m), S = 0; S < T.length; ++S) {
        var C = T[S];
        if (!n[C] && !(y && y[C]) && !(w && w[C]) && !(v && v[C])) {
          var E = d(m, C);
          try {
            l(g, C, E);
          } catch {
          }
        }
      }
    }
    return g;
  }
  return zp = h, zp;
}
CM();
var EM = !0;
function TT(e, t, n) {
  var o = "";
  return n.split(" ").forEach(function(r) {
    e[r] !== void 0 ? t.push(e[r] + ";") : r && (o += r + " ");
  }), o;
}
var Fg = function(t, n, o) {
  var r = t.key + "-" + n.name;
  // we only need to add the styles to the registered cache if the
  // class name could be used further down
  // the tree but if it's a string tag, we know it won't
  // so we don't have to add it to registered cache.
  // this improves memory usage since we can avoid storing the whole style string
  (o === !1 || // we need to always store it if we're in compat mode and
  // in node since emotion-server relies on whether a style is in
  // the registered cache to know whether a style is global or not
  // also, note that this check will be dead code eliminated in the browser
  EM === !1) && t.registered[r] === void 0 && (t.registered[r] = n.styles);
}, jg = function(t, n, o) {
  Fg(t, n, o);
  var r = t.key + "-" + n.name;
  if (t.inserted[n.name] === void 0) {
    var i = n;
    do
      t.insert(n === i ? "." + r : "", i, t.sheet, !0), i = i.next;
    while (i !== void 0);
  }
};
function OM(e) {
  for (var t = 0, n, o = 0, r = e.length; r >= 4; ++o, r -= 4)
    n = e.charCodeAt(o) & 255 | (e.charCodeAt(++o) & 255) << 8 | (e.charCodeAt(++o) & 255) << 16 | (e.charCodeAt(++o) & 255) << 24, n = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16), n ^= /* k >>> r: */
    n >>> 24, t = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  switch (r) {
    case 3:
      t ^= (e.charCodeAt(o + 2) & 255) << 16;
    case 2:
      t ^= (e.charCodeAt(o + 1) & 255) << 8;
    case 1:
      t ^= e.charCodeAt(o) & 255, t = /* Math.imul(h, m): */
      (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  }
  return t ^= t >>> 13, t = /* Math.imul(h, m): */
  (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16), ((t ^ t >>> 15) >>> 0).toString(36);
}
var PM = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  scale: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, RM = /[A-Z]|^ms/g, IM = /_EMO_([^_]+?)_([^]*?)_EMO_/g, CT = function(t) {
  return t.charCodeAt(1) === 45;
}, Nv = function(t) {
  return t != null && typeof t != "boolean";
}, Hp = /* @__PURE__ */ wT(function(e) {
  return CT(e) ? e : e.replace(RM, "-$&").toLowerCase();
}), Mv = function(t, n) {
  switch (t) {
    case "animation":
    case "animationName":
      if (typeof n == "string")
        return n.replace(IM, function(o, r, i) {
          return mr = {
            name: r,
            styles: i,
            next: mr
          }, r;
        });
  }
  return PM[t] !== 1 && !CT(t) && typeof n == "number" && n !== 0 ? n + "px" : n;
};
function Hl(e, t, n) {
  if (n == null)
    return "";
  var o = n;
  if (o.__emotion_styles !== void 0)
    return o;
  switch (typeof n) {
    case "boolean":
      return "";
    case "object": {
      var r = n;
      if (r.anim === 1)
        return mr = {
          name: r.name,
          styles: r.styles,
          next: mr
        }, r.name;
      var i = n;
      if (i.styles !== void 0) {
        var s = i.next;
        if (s !== void 0)
          for (; s !== void 0; )
            mr = {
              name: s.name,
              styles: s.styles,
              next: mr
            }, s = s.next;
        var l = i.styles + ";";
        return l;
      }
      return kM(e, t, n);
    }
    case "function": {
      if (e !== void 0) {
        var c = mr, u = n(e);
        return mr = c, Hl(e, t, u);
      }
      break;
    }
  }
  var d = n;
  if (t == null)
    return d;
  var f = t[d];
  return f !== void 0 ? f : d;
}
function kM(e, t, n) {
  var o = "";
  if (Array.isArray(n))
    for (var r = 0; r < n.length; r++)
      o += Hl(e, t, n[r]) + ";";
  else
    for (var i in n) {
      var s = n[i];
      if (typeof s != "object") {
        var l = s;
        t != null && t[l] !== void 0 ? o += i + "{" + t[l] + "}" : Nv(l) && (o += Hp(i) + ":" + Mv(i, l) + ";");
      } else if (Array.isArray(s) && typeof s[0] == "string" && (t == null || t[s[0]] === void 0))
        for (var c = 0; c < s.length; c++)
          Nv(s[c]) && (o += Hp(i) + ":" + Mv(i, s[c]) + ";");
      else {
        var u = Hl(e, t, s);
        switch (i) {
          case "animation":
          case "animationName": {
            o += Hp(i) + ":" + u + ";";
            break;
          }
          default:
            o += i + "{" + u + "}";
        }
      }
    }
  return o;
}
var Av = /label:\s*([^\s;{]+)\s*(;|$)/g, mr;
function Ia(e, t, n) {
  if (e.length === 1 && typeof e[0] == "object" && e[0] !== null && e[0].styles !== void 0)
    return e[0];
  var o = !0, r = "";
  mr = void 0;
  var i = e[0];
  if (i == null || i.raw === void 0)
    o = !1, r += Hl(n, t, i);
  else {
    var s = i;
    r += s[0];
  }
  for (var l = 1; l < e.length; l++)
    if (r += Hl(n, t, e[l]), o) {
      var c = i;
      r += c[l];
    }
  Av.lastIndex = 0;
  for (var u = "", d; (d = Av.exec(r)) !== null; )
    u += "-" + d[1];
  var f = OM(r) + u;
  return {
    name: f,
    styles: r,
    next: mr
  };
}
var $M = function(t) {
  return t();
}, ET = $.useInsertionEffect ? $.useInsertionEffect : !1, OT = ET || $M, _v = ET || $.useLayoutEffect, PT = /* @__PURE__ */ $.createContext(
  // we're doing this to avoid preconstruct's dead code elimination in this one case
  // because this module is primarily intended for the browser and node
  // but it's also required in react native and similar environments sometimes
  // and we could have a special build just for that
  // but this is much easier and the native packages
  // might use a different theme context in the future anyway
  typeof HTMLElement < "u" ? /* @__PURE__ */ xM({
    key: "css"
  }) : null
);
PT.Provider;
var zg = function(t) {
  return /* @__PURE__ */ Oa(function(n, o) {
    var r = Kt(PT);
    return t(n, r, o);
  });
}, ka = /* @__PURE__ */ $.createContext({}), Hg = {}.hasOwnProperty, sm = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__", NM = function(t, n) {
  var o = {};
  for (var r in n)
    Hg.call(n, r) && (o[r] = n[r]);
  return o[sm] = t, o;
}, MM = function(t) {
  var n = t.cache, o = t.serialized, r = t.isStringTag;
  return Fg(n, o, r), OT(function() {
    return jg(n, o, r);
  }), null;
}, AM = /* @__PURE__ */ zg(function(e, t, n) {
  var o = e.css;
  typeof o == "string" && t.registered[o] !== void 0 && (o = t.registered[o]);
  var r = e[sm], i = [o], s = "";
  typeof e.className == "string" ? s = TT(t.registered, i, e.className) : e.className != null && (s = e.className + " ");
  var l = Ia(i, void 0, $.useContext(ka));
  s += t.key + "-" + l.name;
  var c = {};
  for (var u in e)
    Hg.call(e, u) && u !== "css" && u !== sm && (c[u] = e[u]);
  return c.className = s, n && (c.ref = n), /* @__PURE__ */ $.createElement($.Fragment, null, /* @__PURE__ */ $.createElement(MM, {
    cache: t,
    serialized: l,
    isStringTag: typeof r == "string"
  }), /* @__PURE__ */ $.createElement(r, c));
}), _M = AM, Dv = function(t, n) {
  var o = arguments;
  if (n == null || !Hg.call(n, "css"))
    return $.createElement.apply(void 0, o);
  var r = o.length, i = new Array(r);
  i[0] = _M, i[1] = NM(t, n);
  for (var s = 2; s < r; s++)
    i[s] = o[s];
  return $.createElement.apply(null, i);
};
(function(e) {
  var t;
  t || (t = e.JSX || (e.JSX = {}));
})(Dv || (Dv = {}));
var RT = /* @__PURE__ */ zg(function(e, t) {
  var n = e.styles, o = Ia([n], void 0, $.useContext(ka)), r = $.useRef();
  return _v(function() {
    var i = t.key + "-global", s = new t.sheet.constructor({
      key: i,
      nonce: t.sheet.nonce,
      container: t.sheet.container,
      speedy: t.sheet.isSpeedy
    }), l = !1, c = document.querySelector('style[data-emotion="' + i + " " + o.name + '"]');
    return t.sheet.tags.length && (s.before = t.sheet.tags[0]), c !== null && (l = !0, c.setAttribute("data-emotion", i), s.hydrate([c])), r.current = [s, l], function() {
      s.flush();
    };
  }, [t]), _v(function() {
    var i = r.current, s = i[0], l = i[1];
    if (l) {
      i[1] = !1;
      return;
    }
    if (o.next !== void 0 && jg(t, o.next, !0), s.tags.length) {
      var c = s.tags[s.tags.length - 1].nextElementSibling;
      s.before = c, s.flush();
    }
    t.insert("", o, s, !1);
  }, [t, o.name]), null;
});
function $a() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return Ia(t);
}
function Ci() {
  var e = $a.apply(void 0, arguments), t = "animation-" + e.name;
  return {
    name: t,
    styles: "@keyframes " + t + "{" + e.styles + "}",
    anim: 1,
    toString: function() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
}
var DM = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, LM = /* @__PURE__ */ wT(
  function(e) {
    return DM.test(e) || e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && e.charCodeAt(2) < 91;
  }
  /* Z+1 */
), BM = LM, VM = function(t) {
  return t !== "theme";
}, Lv = function(t) {
  return typeof t == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  t.charCodeAt(0) > 96 ? BM : VM;
}, Bv = function(t, n, o) {
  var r;
  if (n) {
    var i = n.shouldForwardProp;
    r = t.__emotion_forwardProp && i ? function(s) {
      return t.__emotion_forwardProp(s) && i(s);
    } : i;
  }
  return typeof r != "function" && o && (r = t.__emotion_forwardProp), r;
}, FM = function(t) {
  var n = t.cache, o = t.serialized, r = t.isStringTag;
  return Fg(n, o, r), OT(function() {
    return jg(n, o, r);
  }), null;
}, jM = function e(t, n) {
  var o = t.__emotion_real === t, r = o && t.__emotion_base || t, i, s;
  n !== void 0 && (i = n.label, s = n.target);
  var l = Bv(t, n, o), c = l || Lv(r), u = !c("as");
  return function() {
    var d = arguments, f = o && t.__emotion_styles !== void 0 ? t.__emotion_styles.slice(0) : [];
    if (i !== void 0 && f.push("label:" + i + ";"), d[0] == null || d[0].raw === void 0)
      f.push.apply(f, d);
    else {
      var p = d[0];
      f.push(p[0]);
      for (var h = d.length, g = 1; g < h; g++)
        f.push(d[g], p[g]);
    }
    var m = zg(function(y, b, T) {
      var v = u && y.as || r, w = "", S = [], C = y;
      if (y.theme == null) {
        C = {};
        for (var E in y)
          C[E] = y[E];
        C.theme = $.useContext(ka);
      }
      typeof y.className == "string" ? w = TT(b.registered, S, y.className) : y.className != null && (w = y.className + " ");
      var P = Ia(f.concat(S), b.registered, C);
      w += b.key + "-" + P.name, s !== void 0 && (w += " " + s);
      var M = u && l === void 0 ? Lv(v) : c, x = {};
      for (var I in y)
        u && I === "as" || M(I) && (x[I] = y[I]);
      return x.className = w, T && (x.ref = T), /* @__PURE__ */ $.createElement($.Fragment, null, /* @__PURE__ */ $.createElement(FM, {
        cache: b,
        serialized: P,
        isStringTag: typeof v == "string"
      }), /* @__PURE__ */ $.createElement(v, x));
    });
    return m.displayName = i !== void 0 ? i : "Styled(" + (typeof r == "string" ? r : r.displayName || r.name || "Component") + ")", m.defaultProps = t.defaultProps, m.__emotion_real = m, m.__emotion_base = r, m.__emotion_styles = f, m.__emotion_forwardProp = l, Object.defineProperty(m, "toString", {
      value: function() {
        return "." + s;
      }
    }), m.withComponent = function(y, b) {
      var T = e(y, fd({}, n, b, {
        shouldForwardProp: Bv(m, b, !0)
      }));
      return T.apply(void 0, f);
    }, m;
  };
}, zM = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], hd = jM.bind(null);
zM.forEach(function(e) {
  hd[e] = hd(e);
});
function HM(e) {
  return e == null || Object.keys(e).length === 0;
}
function Wg(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e;
  return /* @__PURE__ */ O(RT, {
    styles: typeof t == "function" ? (r) => t(HM(r) ? n : r) : t
  });
}
process.env.NODE_ENV !== "production" && (Wg.propTypes = {
  defaultTheme: a.object,
  styles: a.oneOfType([a.array, a.string, a.object, a.func])
});
/**
 * @mui/styled-engine v7.0.1
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function IT(e, t) {
  const n = hd(e, t);
  return process.env.NODE_ENV !== "production" ? (...o) => {
    const r = typeof e == "string" ? `"${e}"` : "component";
    return o.length === 0 ? console.error([`MUI: Seems like you called \`styled(${r})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : o.some((i) => i === void 0) && console.error(`MUI: the styled(${r})(...args) API requires all its args to be defined.`), n(...o);
  } : n;
}
function WM(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const Vv = [];
function Fv(e) {
  return Vv[0] = e, Ia(Vv);
}
const UM = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, o) => n.val - o.val), t.reduce((n, o) => ({
    ...n,
    [o.key]: o.val
  }), {});
};
function qM(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: o = 5,
    ...r
  } = e, i = UM(t), s = Object.keys(i);
  function l(p) {
    return `@media (min-width:${typeof t[p] == "number" ? t[p] : p}${n})`;
  }
  function c(p) {
    return `@media (max-width:${(typeof t[p] == "number" ? t[p] : p) - o / 100}${n})`;
  }
  function u(p, h) {
    const g = s.indexOf(h);
    return `@media (min-width:${typeof t[p] == "number" ? t[p] : p}${n}) and (max-width:${(g !== -1 && typeof t[s[g]] == "number" ? t[s[g]] : h) - o / 100}${n})`;
  }
  function d(p) {
    return s.indexOf(p) + 1 < s.length ? u(p, s[s.indexOf(p) + 1]) : l(p);
  }
  function f(p) {
    const h = s.indexOf(p);
    return h === 0 ? l(s[1]) : h === s.length - 1 ? c(s[h]) : u(p, s[s.indexOf(p) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: s,
    values: i,
    up: l,
    down: c,
    between: u,
    only: d,
    not: f,
    unit: n,
    ...r
  };
}
const KM = {
  borderRadius: 4
};
function kT(e = 8, t = _g({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...o) => (process.env.NODE_ENV !== "production" && (o.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${o.length}`)), (o.length === 0 ? [1] : o).map((i) => {
    const s = t(i);
    return typeof s == "number" ? `${s}px` : s;
  }).join(" "));
  return n.mui = !0, n;
}
function GM(e, t) {
  var o;
  const n = this;
  if (n.vars) {
    if (!((o = n.colorSchemes) != null && o[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let r = n.getColorSchemeSelector(e);
    return r === "&" ? t : ((r.includes("data-") || r.includes(".")) && (r = `*:where(${r.replace(/\s*&$/, "")}) &`), {
      [r]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function xf(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: o = {},
    spacing: r,
    shape: i = {},
    ...s
  } = e, l = qM(n), c = kT(r);
  let u = zn({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...o
    },
    spacing: c,
    shape: {
      ...KM,
      ...i
    }
  }, s);
  return u = tN(u), u.applyStyles = GM, u = t.reduce((d, f) => zn(d, f), u), u.unstable_sxConfig = {
    ...Oc,
    ...s == null ? void 0 : s.unstable_sxConfig
  }, u.unstable_sx = function(f) {
    return mi({
      sx: f,
      theme: this
    });
  }, u;
}
function YM(e) {
  return Object.keys(e).length === 0;
}
function Ug(e = null) {
  const t = $.useContext(ka);
  return !t || YM(t) ? e : t;
}
const XM = xf();
function wf(e = XM) {
  return Ug(e);
}
function $T({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const o = wf(n), r = typeof e == "function" ? e(t && o[t] || o) : e;
  return /* @__PURE__ */ O(Wg, {
    styles: r
  });
}
process.env.NODE_ENV !== "production" && ($T.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: a.object,
  /**
   * @ignore
   */
  styles: a.oneOfType([a.array, a.func, a.number, a.object, a.string, a.bool]),
  /**
   * @ignore
   */
  themeId: a.string
});
const jv = (e) => e, ZM = () => {
  let e = jv;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = jv;
    }
  };
}, NT = ZM();
function QM(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: o = "MuiBox-root",
    generateClassName: r
  } = e, i = IT("div", {
    shouldForwardProp: (l) => l !== "theme" && l !== "sx" && l !== "as"
  })(mi);
  return /* @__PURE__ */ $.forwardRef(function(c, u) {
    const d = wf(n), {
      className: f,
      component: p = "div",
      ...h
    } = hT(c);
    return /* @__PURE__ */ O(i, {
      as: p,
      ref: u,
      className: Ie(f, r ? r(o) : o),
      theme: t && d[t] || d,
      ...h
    });
  });
}
const JM = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function ot(e, t, n = "Mui") {
  const o = JM[t];
  return o ? `${n}-${o}` : `${NT.generate(e)}-${t}`;
}
function at(e, t, n = "Mui") {
  const o = {};
  return t.forEach((r) => {
    o[r] = ot(e, r, n);
  }), o;
}
function MT(e, t = "") {
  return e.displayName || e.name || t;
}
function zv(e, t, n) {
  const o = MT(t);
  return e.displayName || (o !== "" ? `${n}(${o})` : n);
}
function eA(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return MT(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case lo.ForwardRef:
          return zv(e, e.render, "ForwardRef");
        case lo.Memo:
          return zv(e, e.type, "memo");
        default:
          return;
      }
  }
}
function AT(e) {
  const {
    variants: t,
    ...n
  } = e, o = {
    variants: t,
    style: Fv(n),
    isProcessed: !0
  };
  return o.style === n || t && t.forEach((r) => {
    typeof r.style != "function" && (r.style = Fv(r.style));
  }), o;
}
const tA = xf();
function Wp(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function nA(e) {
  return e ? (t, n) => n[e] : null;
}
function oA(e, t, n) {
  e.theme = sA(e.theme) ? n : e.theme[t] || e.theme;
}
function Yu(e, t) {
  const n = typeof t == "function" ? t(e) : t;
  if (Array.isArray(n))
    return n.flatMap((o) => Yu(e, o));
  if (Array.isArray(n == null ? void 0 : n.variants)) {
    let o;
    if (n.isProcessed)
      o = n.style;
    else {
      const {
        variants: r,
        ...i
      } = n;
      o = i;
    }
    return _T(e, n.variants, [o]);
  }
  return n != null && n.isProcessed ? n.style : n;
}
function _T(e, t, n = []) {
  var r;
  let o;
  e: for (let i = 0; i < t.length; i += 1) {
    const s = t[i];
    if (typeof s.props == "function") {
      if (o ?? (o = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !s.props(o))
        continue;
    } else
      for (const l in s.props)
        if (e[l] !== s.props[l] && ((r = e.ownerState) == null ? void 0 : r[l]) !== s.props[l])
          continue e;
    typeof s.style == "function" ? (o ?? (o = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(s.style(o))) : n.push(s.style);
  }
  return n;
}
function DT(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = tA,
    rootShouldForwardProp: o = Wp,
    slotShouldForwardProp: r = Wp
  } = e;
  function i(l) {
    oA(l, t, n);
  }
  return (l, c = {}) => {
    WM(l, (S) => S.filter((C) => C !== mi));
    const {
      name: u,
      slot: d,
      skipVariantsResolver: f,
      skipSx: p,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: h = nA(LT(d)),
      ...g
    } = c, m = f !== void 0 ? f : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      d && d !== "Root" && d !== "root" || !1
    ), y = p || !1;
    let b = Wp;
    d === "Root" || d === "root" ? b = o : d ? b = r : aA(l) && (b = void 0);
    const T = IT(l, {
      shouldForwardProp: b,
      label: iA(u, d),
      ...g
    }), v = (S) => {
      if (typeof S == "function" && S.__emotion_real !== S)
        return function(E) {
          return Yu(E, S);
        };
      if (yr(S)) {
        const C = AT(S);
        return C.variants ? function(P) {
          return Yu(P, C);
        } : C.style;
      }
      return S;
    }, w = (...S) => {
      const C = [], E = S.map(v), P = [];
      if (C.push(i), u && h && P.push(function(k) {
        var N, L;
        const R = (L = (N = k.theme.components) == null ? void 0 : N[u]) == null ? void 0 : L.styleOverrides;
        if (!R)
          return null;
        const A = {};
        for (const V in R)
          A[V] = Yu(k, R[V]);
        return h(k, A);
      }), u && !m && P.push(function(k) {
        var A, N;
        const _ = k.theme, R = (N = (A = _ == null ? void 0 : _.components) == null ? void 0 : A[u]) == null ? void 0 : N.variants;
        return R ? _T(k, R) : null;
      }), y || P.push(mi), Array.isArray(E[0])) {
        const I = E.shift(), k = new Array(C.length).fill(""), _ = new Array(P.length).fill("");
        let R;
        R = [...k, ...I, ..._], R.raw = [...k, ...I.raw, ..._], C.unshift(R);
      }
      const M = [...C, ...E, ...P], x = T(...M);
      return l.muiName && (x.muiName = l.muiName), process.env.NODE_ENV !== "production" && (x.displayName = rA(u, d, l)), x;
    };
    return T.withConfig && (w.withConfig = T.withConfig), w;
  };
}
function rA(e, t, n) {
  return e ? `${e}${fe(t || "")}` : `Styled(${eA(n)})`;
}
function iA(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${LT(t || "Root")}`), n;
}
function sA(e) {
  for (const t in e)
    return !1;
  return !0;
}
function aA(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function LT(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
const lA = DT();
function Wl(e, t) {
  const n = {
    ...t
  };
  for (const o in e)
    if (Object.prototype.hasOwnProperty.call(e, o)) {
      const r = o;
      if (r === "components" || r === "slots")
        n[r] = {
          ...e[r],
          ...n[r]
        };
      else if (r === "componentsProps" || r === "slotProps") {
        const i = e[r], s = t[r];
        if (!s)
          n[r] = i || {};
        else if (!i)
          n[r] = s;
        else {
          n[r] = {
            ...s
          };
          for (const l in i)
            if (Object.prototype.hasOwnProperty.call(i, l)) {
              const c = l;
              n[r][c] = Wl(i[c], s[c]);
            }
        }
      } else n[r] === void 0 && (n[r] = e[r]);
    }
  return n;
}
function BT(e) {
  const {
    theme: t,
    name: n,
    props: o
  } = e;
  return !t || !t.components || !t.components[n] || !t.components[n].defaultProps ? o : Wl(t.components[n].defaultProps, o);
}
function cA({
  props: e,
  name: t,
  defaultTheme: n,
  themeId: o
}) {
  let r = wf(n);
  return o && (r = r[o] || r), BT({
    theme: r,
    name: t,
    props: e
  });
}
const or = typeof window < "u" ? $.useLayoutEffect : $.useEffect;
function uA(e, t, n, o, r) {
  const [i, s] = $.useState(() => r && n ? n(e).matches : o ? o(e).matches : t);
  return or(() => {
    if (!n)
      return;
    const l = n(e), c = () => {
      s(l.matches);
    };
    return c(), l.addEventListener("change", c), () => {
      l.removeEventListener("change", c);
    };
  }, [e, n]), i;
}
const dA = {
  ...$
}, VT = dA.useSyncExternalStore;
function fA(e, t, n, o, r) {
  const i = $.useCallback(() => t, [t]), s = $.useMemo(() => {
    if (r && n)
      return () => n(e).matches;
    if (o !== null) {
      const {
        matches: d
      } = o(e);
      return () => d;
    }
    return i;
  }, [i, e, o, r, n]), [l, c] = $.useMemo(() => {
    if (n === null)
      return [i, () => () => {
      }];
    const d = n(e);
    return [() => d.matches, (f) => (d.addEventListener("change", f), () => {
      d.removeEventListener("change", f);
    })];
  }, [i, n, e]);
  return VT(c, l, s);
}
function FT(e = {}) {
  const {
    themeId: t
  } = e;
  return function(o, r = {}) {
    let i = Ug();
    i && t && (i = i[t] || i);
    const s = typeof window < "u" && typeof window.matchMedia < "u", {
      defaultMatches: l = !1,
      matchMedia: c = s ? window.matchMedia : null,
      ssrMatchMedia: u = null,
      noSsr: d = !1
    } = BT({
      name: "MuiUseMediaQuery",
      props: r,
      theme: i
    });
    process.env.NODE_ENV !== "production" && typeof o == "function" && i === null && console.error(["MUI: The `query` argument provided is invalid.", "You are providing a function without a theme in the context.", "One of the parent elements needs to use a ThemeProvider."].join(`
`));
    let f = typeof o == "function" ? o(i) : o;
    f = f.replace(/^@media( ?)/m, "");
    const h = (VT !== void 0 ? fA : uA)(f, l, c, u, d);
    return process.env.NODE_ENV !== "production" && $.useDebugValue({
      query: f,
      match: h
    }), h;
  };
}
FT();
function pA(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function qg(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), pA(e, t, n);
}
function hA(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((o) => o + o)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((o, r) => r < 3 ? parseInt(o, 16) : Math.round(parseInt(o, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function gi(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return gi(hA(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : Pr(9, e));
  let o = e.substring(t + 1, e.length - 1), r;
  if (n === "color") {
    if (o = o.split(" "), r = o.shift(), o.length === 4 && o[3].charAt(0) === "/" && (o[3] = o[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(r))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${r}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : Pr(10, r));
  } else
    o = o.split(",");
  return o = o.map((i) => parseFloat(i)), {
    type: n,
    values: o,
    colorSpace: r
  };
}
const mA = (e) => {
  const t = gi(e);
  return t.values.slice(0, 3).map((n, o) => t.type.includes("hsl") && o !== 0 ? `${n}%` : n).join(" ");
}, ll = (e, t) => {
  try {
    return mA(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function Sf(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: o
  } = e;
  return t.includes("rgb") ? o = o.map((r, i) => i < 3 ? parseInt(r, 10) : r) : t.includes("hsl") && (o[1] = `${o[1]}%`, o[2] = `${o[2]}%`), t.includes("color") ? o = `${n} ${o.join(" ")}` : o = `${o.join(", ")}`, `${t}(${o})`;
}
function jT(e) {
  e = gi(e);
  const {
    values: t
  } = e, n = t[0], o = t[1] / 100, r = t[2] / 100, i = o * Math.min(r, 1 - r), s = (u, d = (u + n / 30) % 12) => r - i * Math.max(Math.min(d - 3, 9 - d, 1), -1);
  let l = "rgb";
  const c = [Math.round(s(0) * 255), Math.round(s(8) * 255), Math.round(s(4) * 255)];
  return e.type === "hsla" && (l += "a", c.push(t[3])), Sf({
    type: l,
    values: c
  });
}
function am(e) {
  e = gi(e);
  let t = e.type === "hsl" || e.type === "hsla" ? gi(jT(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function Hv(e, t) {
  const n = am(e), o = am(t);
  return (Math.max(n, o) + 0.05) / (Math.min(n, o) + 0.05);
}
function vt(e, t) {
  return e = gi(e), t = qg(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, Sf(e);
}
function pu(e, t, n) {
  try {
    return vt(e, t);
  } catch {
    return e;
  }
}
function Na(e, t) {
  if (e = gi(e), t = qg(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return Sf(e);
}
function Mt(e, t, n) {
  try {
    return Na(e, t);
  } catch {
    return e;
  }
}
function Ma(e, t) {
  if (e = gi(e), t = qg(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return Sf(e);
}
function At(e, t, n) {
  try {
    return Ma(e, t);
  } catch {
    return e;
  }
}
function gA(e, t = 0.15) {
  return am(e) > 0.5 ? Na(e, t) : Ma(e, t);
}
function hu(e, t, n) {
  try {
    return gA(e, t);
  } catch {
    return e;
  }
}
function rr(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...o) {
    return e(...o) || t(...o);
  };
}
function yA(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function zT(e, t, n, o, r) {
  const i = e[t], s = r || t;
  if (i == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  const c = i.type;
  return typeof c == "function" && !yA(c) && (l = "Did you accidentally use a plain function component for an element instead?"), l !== void 0 ? new Error(`Invalid ${o} \`${s}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Ei = rr(a.element, zT);
Ei.isRequired = rr(a.element.isRequired, zT);
function bA(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function vA(e, t, n, o, r) {
  const i = e[t], s = r || t;
  if (i == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  return typeof i == "function" && !bA(i) && (l = "Did you accidentally provide a plain function component instead?"), l !== void 0 ? new Error(`Invalid ${o} \`${s}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Kg = rr(a.elementType, vA), xA = "exact-prop: ​";
function Rc(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [xA]: (t) => {
      const n = Object.keys(t).filter((o) => !e.hasOwnProperty(o));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((o) => `\`${o}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
function Rr(e, t, n, o, r) {
  if (process.env.NODE_ENV === "production")
    return null;
  const i = e[t], s = r || t;
  return i == null ? null : i && i.nodeType !== 1 ? new Error(`Invalid ${o} \`${s}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
const uo = a.oneOfType([a.func, a.object]);
function lm(...e) {
  return e.reduce((t, n) => n == null ? t : function(...r) {
    t.apply(this, r), n.apply(this, r);
  }, () => {
  });
}
function Gg(e, t = 166) {
  let n;
  function o(...r) {
    const i = () => {
      e.apply(this, r);
    };
    clearTimeout(n), n = setTimeout(i, t);
  }
  return o.clear = () => {
    clearTimeout(n);
  }, o;
}
function Up(e, t) {
  var n, o, r;
  return /* @__PURE__ */ $.isValidElement(e) && t.indexOf(
    // For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    e.type.muiName ?? ((r = (o = (n = e.type) == null ? void 0 : n._payload) == null ? void 0 : o.value) == null ? void 0 : r.muiName)
  ) !== -1;
}
function Hn(e) {
  return e && e.ownerDocument || document;
}
function ir(e) {
  return Hn(e).defaultView || window;
}
function md(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
let Wv = 0;
function wA(e) {
  const [t, n] = $.useState(e), o = e || t;
  return $.useEffect(() => {
    t == null && (Wv += 1, n(`mui-${Wv}`));
  }, [t]), o;
}
const SA = {
  ...$
}, Uv = SA.useId;
function hs(e) {
  if (Uv !== void 0) {
    const t = Uv();
    return e ?? t;
  }
  return wA(e);
}
function TA(e, t, n, o, r) {
  if (process.env.NODE_ENV === "production")
    return null;
  const i = r || t;
  return typeof e[t] < "u" ? new Error(`The prop \`${i}\` is not supported. Please remove it.`) : null;
}
function ns({
  controlled: e,
  default: t,
  name: n,
  state: o = "value"
}) {
  const {
    current: r
  } = $.useRef(e !== void 0), [i, s] = $.useState(t), l = r ? e : i;
  if (process.env.NODE_ENV !== "production") {
    $.useEffect(() => {
      r !== (e !== void 0) && console.error([`MUI: A component is changing the ${r ? "" : "un"}controlled ${o} state of ${n} to be ${r ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [o, n, e]);
    const {
      current: u
    } = $.useRef(t);
    $.useEffect(() => {
      !r && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${o} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = $.useCallback((u) => {
    r || s(u);
  }, []);
  return [l, c];
}
function oo(e) {
  const t = $.useRef(e);
  return or(() => {
    t.current = e;
  }), $.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function yn(...e) {
  return $.useMemo(() => e.every((t) => t == null) ? null : (t) => {
    e.forEach((n) => {
      md(n, t);
    });
  }, e);
}
const qv = {};
function HT(e, t) {
  const n = $.useRef(qv);
  return n.current === qv && (n.current = e(t)), n;
}
const CA = [];
function EA(e) {
  $.useEffect(e, CA);
}
let WT = class UT {
  constructor() {
    ti(this, "currentId", null);
    ti(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    ti(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new UT();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
};
function js() {
  const e = HT(WT.create).current;
  return EA(e.disposeEffect), e;
}
function gd(e) {
  try {
    return e.matches(":focus-visible");
  } catch {
    process.env.NODE_ENV !== "production" && !/jsdom/.test(window.navigator.userAgent) && console.warn(["MUI: The `:focus-visible` pseudo class is not supported in this browser.", "Some components rely on this feature to work properly."].join(`
`));
  }
  return !1;
}
function qT(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
const Yg = (e) => {
  const t = $.useRef({});
  return $.useEffect(() => {
    t.current = e;
  }), t.current;
};
function OA(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function KT(e, t, n, o) {
  const r = e[t];
  if (r == null || !Number.isInteger(r)) {
    const i = OA(r);
    return new RangeError(`Invalid ${o} \`${t}\` of type \`${i}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function GT(e, t, ...n) {
  return e[t] === void 0 ? null : KT(e, t, ...n);
}
function cm() {
  return null;
}
GT.isRequired = KT;
cm.isRequired = cm;
const Tf = process.env.NODE_ENV === "production" ? cm : GT;
function PA(e) {
  return typeof e == "string";
}
function YT(e, t, n) {
  return e === void 0 || PA(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function XT(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((o) => o.match(/^on[A-Z]/) && typeof e[o] == "function" && !t.includes(o)).forEach((o) => {
    n[o] = e[o];
  }), n;
}
function Kv(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function ZT(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: o,
    externalForwardedProps: r,
    className: i
  } = e;
  if (!t) {
    const h = Ie(n == null ? void 0 : n.className, i, r == null ? void 0 : r.className, o == null ? void 0 : o.className), g = {
      ...n == null ? void 0 : n.style,
      ...r == null ? void 0 : r.style,
      ...o == null ? void 0 : o.style
    }, m = {
      ...n,
      ...r,
      ...o
    };
    return h.length > 0 && (m.className = h), Object.keys(g).length > 0 && (m.style = g), {
      props: m,
      internalRef: void 0
    };
  }
  const s = XT({
    ...r,
    ...o
  }), l = Kv(o), c = Kv(r), u = t(s), d = Ie(u == null ? void 0 : u.className, n == null ? void 0 : n.className, i, r == null ? void 0 : r.className, o == null ? void 0 : o.className), f = {
    ...u == null ? void 0 : u.style,
    ...n == null ? void 0 : n.style,
    ...r == null ? void 0 : r.style,
    ...o == null ? void 0 : o.style
  }, p = {
    ...u,
    ...n,
    ...c,
    ...l
  };
  return d.length > 0 && (p.className = d), Object.keys(f).length > 0 && (p.style = f), {
    props: p,
    internalRef: u.ref
  };
}
function QT(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function yd(e) {
  var f;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: o,
    skipResolvingSlotProps: r = !1,
    ...i
  } = e, s = r ? {} : QT(n, o), {
    props: l,
    internalRef: c
  } = ZT({
    ...i,
    externalSlotProps: s
  }), u = yn(c, s == null ? void 0 : s.ref, (f = e.additionalProps) == null ? void 0 : f.ref);
  return YT(t, {
    ...l,
    ref: u
  }, o);
}
function Oi(e) {
  var t;
  return parseInt($.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
const Xg = /* @__PURE__ */ $.createContext(null);
process.env.NODE_ENV !== "production" && (Xg.displayName = "ThemeContext");
function Zg() {
  const e = $.useContext(Xg);
  return process.env.NODE_ENV !== "production" && $.useDebugValue(e), e;
}
const RA = typeof Symbol == "function" && Symbol.for, IA = RA ? Symbol.for("mui.nested") : "__THEME_NESTED__";
function kA(e, t) {
  if (typeof t == "function") {
    const n = t(e);
    return process.env.NODE_ENV !== "production" && (n || console.error(["MUI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join(`
`))), n;
  }
  return {
    ...e,
    ...t
  };
}
function bd(e) {
  const {
    children: t,
    theme: n
  } = e, o = Zg();
  process.env.NODE_ENV !== "production" && o === null && typeof n == "function" && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const r = $.useMemo(() => {
    const i = o === null ? {
      ...n
    } : kA(o, n);
    return i != null && (i[IA] = o !== null), i;
  }, [n, o]);
  return /* @__PURE__ */ O(Xg.Provider, {
    value: r,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (bd.propTypes = {
  /**
   * Your component tree.
   */
  children: a.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: a.oneOfType([a.object, a.func]).isRequired
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (bd.propTypes = Rc(bd.propTypes));
const JT = /* @__PURE__ */ $.createContext();
function eC({
  value: e,
  ...t
}) {
  return /* @__PURE__ */ O(JT.Provider, {
    value: e ?? !0,
    ...t
  });
}
process.env.NODE_ENV !== "production" && (eC.propTypes = {
  children: a.node,
  value: a.bool
});
const Ic = () => $.useContext(JT) ?? !1, tC = /* @__PURE__ */ $.createContext(void 0);
function nC({
  value: e,
  children: t
}) {
  return /* @__PURE__ */ O(tC.Provider, {
    value: e,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (nC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: a.node,
  /**
   * @ignore
   */
  value: a.object
});
function $A(e) {
  const {
    theme: t,
    name: n,
    props: o
  } = e;
  if (!t || !t.components || !t.components[n])
    return o;
  const r = t.components[n];
  return r.defaultProps ? Wl(r.defaultProps, o) : !r.styleOverrides && !r.variants ? Wl(r, o) : o;
}
function NA({
  props: e,
  name: t
}) {
  const n = $.useContext(tC);
  return $A({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
const Gv = {};
function Yv(e, t, n, o = !1) {
  return $.useMemo(() => {
    const r = e && t[e] || t;
    if (typeof n == "function") {
      const i = n(r), s = e ? {
        ...t,
        [e]: i
      } : i;
      return o ? () => s : s;
    }
    return e ? {
      ...t,
      [e]: n
    } : {
      ...t,
      ...n
    };
  }, [e, t, n, o]);
}
function Ul(e) {
  const {
    children: t,
    theme: n,
    themeId: o
  } = e, r = Ug(Gv), i = Zg() || Gv;
  process.env.NODE_ENV !== "production" && (r === null && typeof n == "function" || o && r && !r[o] && typeof n == "function") && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const s = Yv(o, r, n), l = Yv(o, i, n, !0), c = (o ? s[o] : s).direction === "rtl";
  return /* @__PURE__ */ O(bd, {
    theme: l,
    children: /* @__PURE__ */ O(ka.Provider, {
      value: s,
      children: /* @__PURE__ */ O(eC, {
        value: c,
        children: /* @__PURE__ */ O(nC, {
          value: o ? s[o].components : s.components,
          children: t
        })
      })
    })
  });
}
process.env.NODE_ENV !== "production" && (Ul.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Your component tree.
   */
  children: a.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: a.oneOfType([a.func, a.object]).isRequired,
  /**
   * The design system's unique id for getting the corresponded theme when there are multiple design systems.
   */
  themeId: a.string
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (Ul.propTypes = Rc(Ul.propTypes));
const Xv = {
  theme: void 0
};
function MA(e) {
  let t, n;
  return function(r) {
    let i = t;
    return (i === void 0 || r.theme !== n) && (Xv.theme = r.theme, i = AT(e(Xv)), t = i, n = r.theme), i;
  };
}
const Qg = "mode", Jg = "color-scheme", AA = "data-color-scheme";
function _A(e) {
  const {
    defaultMode: t = "system",
    defaultLightColorScheme: n = "light",
    defaultDarkColorScheme: o = "dark",
    modeStorageKey: r = Qg,
    colorSchemeStorageKey: i = Jg,
    attribute: s = AA,
    colorSchemeNode: l = "document.documentElement",
    nonce: c
  } = e || {};
  let u = "", d = s;
  if (s === "class" && (d = ".%s"), s === "data" && (d = "[data-%s]"), d.startsWith(".")) {
    const p = d.substring(1);
    u += `${l}.classList.remove('${p}'.replace('%s', light), '${p}'.replace('%s', dark));
      ${l}.classList.add('${p}'.replace('%s', colorScheme));`;
  }
  const f = d.match(/\[([^\]]+)\]/);
  if (f) {
    const [p, h] = f[1].split("=");
    h || (u += `${l}.removeAttribute('${p}'.replace('%s', light));
      ${l}.removeAttribute('${p}'.replace('%s', dark));`), u += `
      ${l}.setAttribute('${p}'.replace('%s', colorScheme), ${h ? `${h}.replace('%s', colorScheme)` : '""'});`;
  } else
    u += `${l}.setAttribute('${d}', colorScheme);`;
  return /* @__PURE__ */ O("script", {
    suppressHydrationWarning: !0,
    nonce: typeof window > "u" ? c : "",
    dangerouslySetInnerHTML: {
      __html: `(function() {
try {
  let colorScheme = '';
  const mode = localStorage.getItem('${r}') || '${t}';
  const dark = localStorage.getItem('${i}-dark') || '${o}';
  const light = localStorage.getItem('${i}-light') || '${n}';
  if (mode === 'system') {
    // handle system mode
    const mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = dark
    } else {
      colorScheme = light
    }
  }
  if (mode === 'light') {
    colorScheme = light;
  }
  if (mode === 'dark') {
    colorScheme = dark;
  }
  if (colorScheme) {
    ${u}
  }
} catch(e){}})();`
    }
  }, "mui-color-scheme-init");
}
function DA() {
}
const LA = ({
  key: e,
  storageWindow: t
}) => (!t && typeof window < "u" && (t = window), {
  get(n) {
    if (typeof window > "u")
      return;
    if (!t)
      return n;
    let o;
    try {
      o = t.localStorage.getItem(e);
    } catch {
    }
    return o || n;
  },
  set: (n) => {
    if (t)
      try {
        t.localStorage.setItem(e, n);
      } catch {
      }
  },
  subscribe: (n) => {
    if (!t)
      return DA;
    const o = (r) => {
      const i = r.newValue;
      r.key === e && n(i);
    };
    return t.addEventListener("storage", o), () => {
      t.removeEventListener("storage", o);
    };
  }
});
function qp() {
}
function Zv(e) {
  if (typeof window < "u" && typeof window.matchMedia == "function" && e === "system")
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
function oC(e, t) {
  if (e.mode === "light" || e.mode === "system" && e.systemMode === "light")
    return t("light");
  if (e.mode === "dark" || e.mode === "system" && e.systemMode === "dark")
    return t("dark");
}
function BA(e) {
  return oC(e, (t) => {
    if (t === "light")
      return e.lightColorScheme;
    if (t === "dark")
      return e.darkColorScheme;
  });
}
function VA(e) {
  const {
    defaultMode: t = "light",
    defaultLightColorScheme: n,
    defaultDarkColorScheme: o,
    supportedColorSchemes: r = [],
    modeStorageKey: i = Qg,
    colorSchemeStorageKey: s = Jg,
    storageWindow: l = typeof window > "u" ? void 0 : window,
    storageManager: c = LA,
    noSsr: u = !1
  } = e, d = r.join(","), f = r.length > 1, p = $.useMemo(() => c == null ? void 0 : c({
    key: i,
    storageWindow: l
  }), [c, i, l]), h = $.useMemo(() => c == null ? void 0 : c({
    key: `${s}-light`,
    storageWindow: l
  }), [c, s, l]), g = $.useMemo(() => c == null ? void 0 : c({
    key: `${s}-dark`,
    storageWindow: l
  }), [c, s, l]), [m, y] = $.useState(() => {
    const P = (p == null ? void 0 : p.get(t)) || t, M = (h == null ? void 0 : h.get(n)) || n, x = (g == null ? void 0 : g.get(o)) || o;
    return {
      mode: P,
      systemMode: Zv(P),
      lightColorScheme: M,
      darkColorScheme: x
    };
  }), [b, T] = $.useState(u || !f);
  $.useEffect(() => {
    T(!0);
  }, []);
  const v = BA(m), w = $.useCallback((P) => {
    y((M) => {
      if (P === M.mode)
        return M;
      const x = P ?? t;
      return p == null || p.set(x), {
        ...M,
        mode: x,
        systemMode: Zv(x)
      };
    });
  }, [p, t]), S = $.useCallback((P) => {
    P ? typeof P == "string" ? P && !d.includes(P) ? console.error(`\`${P}\` does not exist in \`theme.colorSchemes\`.`) : y((M) => {
      const x = {
        ...M
      };
      return oC(M, (I) => {
        I === "light" && (h == null || h.set(P), x.lightColorScheme = P), I === "dark" && (g == null || g.set(P), x.darkColorScheme = P);
      }), x;
    }) : y((M) => {
      const x = {
        ...M
      }, I = P.light === null ? n : P.light, k = P.dark === null ? o : P.dark;
      return I && (d.includes(I) ? (x.lightColorScheme = I, h == null || h.set(I)) : console.error(`\`${I}\` does not exist in \`theme.colorSchemes\`.`)), k && (d.includes(k) ? (x.darkColorScheme = k, g == null || g.set(k)) : console.error(`\`${k}\` does not exist in \`theme.colorSchemes\`.`)), x;
    }) : y((M) => (h == null || h.set(n), g == null || g.set(o), {
      ...M,
      lightColorScheme: n,
      darkColorScheme: o
    }));
  }, [d, h, g, n, o]), C = $.useCallback((P) => {
    m.mode === "system" && y((M) => {
      const x = P != null && P.matches ? "dark" : "light";
      return M.systemMode === x ? M : {
        ...M,
        systemMode: x
      };
    });
  }, [m.mode]), E = $.useRef(C);
  return E.current = C, $.useEffect(() => {
    if (typeof window.matchMedia != "function" || !f)
      return;
    const P = (...x) => E.current(...x), M = window.matchMedia("(prefers-color-scheme: dark)");
    return M.addListener(P), P(M), () => {
      M.removeListener(P);
    };
  }, [f]), $.useEffect(() => {
    if (f) {
      const P = (p == null ? void 0 : p.subscribe((I) => {
        (!I || ["light", "dark", "system"].includes(I)) && w(I || t);
      })) || qp, M = (h == null ? void 0 : h.subscribe((I) => {
        (!I || d.match(I)) && S({
          light: I
        });
      })) || qp, x = (g == null ? void 0 : g.subscribe((I) => {
        (!I || d.match(I)) && S({
          dark: I
        });
      })) || qp;
      return () => {
        P(), M(), x();
      };
    }
  }, [S, w, d, t, l, f, p, h, g]), {
    ...m,
    mode: b ? m.mode : void 0,
    systemMode: b ? m.systemMode : void 0,
    colorScheme: b ? v : void 0,
    setMode: w,
    setColorScheme: S
  };
}
const FA = "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
function jA(e) {
  const {
    themeId: t,
    /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */
    theme: n = {},
    modeStorageKey: o = Qg,
    colorSchemeStorageKey: r = Jg,
    disableTransitionOnChange: i = !1,
    defaultColorScheme: s,
    resolveTheme: l
  } = e, c = {
    allColorSchemes: [],
    colorScheme: void 0,
    darkColorScheme: void 0,
    lightColorScheme: void 0,
    mode: void 0,
    setColorScheme: () => {
    },
    setMode: () => {
    },
    systemMode: void 0
  }, u = /* @__PURE__ */ $.createContext(void 0);
  process.env.NODE_ENV !== "production" && (u.displayName = "ColorSchemeContext");
  const d = () => $.useContext(u) || c, f = {}, p = {};
  function h(b) {
    var H, X, se, ye;
    const {
      children: T,
      theme: v,
      modeStorageKey: w = o,
      colorSchemeStorageKey: S = r,
      disableTransitionOnChange: C = i,
      storageManager: E,
      storageWindow: P = typeof window > "u" ? void 0 : window,
      documentNode: M = typeof document > "u" ? void 0 : document,
      colorSchemeNode: x = typeof document > "u" ? void 0 : document.documentElement,
      disableNestedContext: I = !1,
      disableStyleSheetGeneration: k = !1,
      defaultMode: _ = "system",
      forceThemeRerender: R = !1,
      noSsr: A
    } = b, N = $.useRef(!1), L = Zg(), V = $.useContext(u), D = !!V && !I, B = $.useMemo(() => v || (typeof n == "function" ? n() : n), [v]), F = B[t], U = F || B, {
      colorSchemes: q = f,
      components: G = p,
      cssVarPrefix: K
    } = U, te = Object.keys(q).filter((he) => !!q[he]).join(","), ne = $.useMemo(() => te.split(","), [te]), W = typeof s == "string" ? s : s.light, ee = typeof s == "string" ? s : s.dark, Y = q[W] && q[ee] ? _ : ((X = (H = q[U.defaultColorScheme]) == null ? void 0 : H.palette) == null ? void 0 : X.mode) || ((se = U.palette) == null ? void 0 : se.mode), {
      mode: re,
      setMode: z,
      systemMode: de,
      lightColorScheme: ue,
      darkColorScheme: xe,
      colorScheme: _e,
      setColorScheme: we
    } = VA({
      supportedColorSchemes: ne,
      defaultLightColorScheme: W,
      defaultDarkColorScheme: ee,
      modeStorageKey: w,
      colorSchemeStorageKey: S,
      defaultMode: Y,
      storageManager: E,
      storageWindow: P,
      noSsr: A
    });
    let De = re, Ee = _e;
    D && (De = V.mode, Ee = V.colorScheme), process.env.NODE_ENV !== "production" && R && !U.vars && console.warn(["MUI: The `forceThemeRerender` prop should only be used with CSS theme variables.", "Note that it will slow down the app when changing between modes, so only do this when you cannot find a better solution."].join(`
`));
    let Ve = Ee || U.defaultColorScheme;
    U.vars && !R && (Ve = U.defaultColorScheme);
    const Me = $.useMemo(() => {
      var ae;
      const he = ((ae = U.generateThemeVars) == null ? void 0 : ae.call(U)) || U.vars, le = {
        ...U,
        components: G,
        colorSchemes: q,
        cssVarPrefix: K,
        vars: he
      };
      if (typeof le.generateSpacing == "function" && (le.spacing = le.generateSpacing()), Ve) {
        const ce = q[Ve];
        ce && typeof ce == "object" && Object.keys(ce).forEach((Te) => {
          ce[Te] && typeof ce[Te] == "object" ? le[Te] = {
            ...le[Te],
            ...ce[Te]
          } : le[Te] = ce[Te];
        });
      }
      return l ? l(le) : le;
    }, [U, Ve, G, q, K]), j = U.colorSchemeSelector;
    or(() => {
      if (Ee && x && j && j !== "media") {
        const he = j;
        let le = j;
        if (he === "class" && (le = ".%s"), he === "data" && (le = "[data-%s]"), he != null && he.startsWith("data-") && !he.includes("%s") && (le = `[${he}="%s"]`), le.startsWith("."))
          x.classList.remove(...ne.map((ae) => le.substring(1).replace("%s", ae))), x.classList.add(le.substring(1).replace("%s", Ee));
        else {
          const ae = le.replace("%s", Ee).match(/\[([^\]]+)\]/);
          if (ae) {
            const [ce, Te] = ae[1].split("=");
            Te || ne.forEach((Re) => {
              x.removeAttribute(ce.replace(Ee, Re));
            }), x.setAttribute(ce, Te ? Te.replace(/"|'/g, "") : "");
          } else
            x.setAttribute(le, Ee);
        }
      }
    }, [Ee, j, x, ne]), $.useEffect(() => {
      let he;
      if (C && N.current && M) {
        const le = M.createElement("style");
        le.appendChild(M.createTextNode(FA)), M.head.appendChild(le), window.getComputedStyle(M.body), he = setTimeout(() => {
          M.head.removeChild(le);
        }, 1);
      }
      return () => {
        clearTimeout(he);
      };
    }, [Ee, C, M]), $.useEffect(() => (N.current = !0, () => {
      N.current = !1;
    }), []);
    const J = $.useMemo(() => ({
      allColorSchemes: ne,
      colorScheme: Ee,
      darkColorScheme: xe,
      lightColorScheme: ue,
      mode: De,
      setColorScheme: we,
      setMode: process.env.NODE_ENV === "production" ? z : (he) => {
        Me.colorSchemeSelector === "media" && console.error(["MUI: The `setMode` function has no effect if `colorSchemeSelector` is `media` (`media` is the default value).", "To toggle the mode manually, please configure `colorSchemeSelector` to use a class or data attribute.", "To learn more, visit https://mui.com/material-ui/customization/css-theme-variables/configuration/#toggling-dark-mode-manually"].join(`
`)), z(he);
      },
      systemMode: de
    }), [ne, Ee, xe, ue, De, we, z, de, Me.colorSchemeSelector]);
    let ie = !0;
    (k || U.cssVariables === !1 || D && (L == null ? void 0 : L.cssVarPrefix) === K) && (ie = !1);
    const Q = /* @__PURE__ */ Se($.Fragment, {
      children: [/* @__PURE__ */ O(Ul, {
        themeId: F ? t : void 0,
        theme: Me,
        children: T
      }), ie && /* @__PURE__ */ O(Wg, {
        styles: ((ye = Me.generateStyleSheets) == null ? void 0 : ye.call(Me)) || []
      })]
    });
    return D ? Q : /* @__PURE__ */ O(u.Provider, {
      value: J,
      children: Q
    });
  }
  process.env.NODE_ENV !== "production" && (h.propTypes = {
    /**
     * The component tree.
     */
    children: a.node,
    /**
     * The node used to attach the color-scheme attribute
     */
    colorSchemeNode: a.any,
    /**
     * localStorage key used to store `colorScheme`
     */
    colorSchemeStorageKey: a.string,
    /**
     * The default mode when the storage is empty,
     * require the theme to have `colorSchemes` with light and dark.
     */
    defaultMode: a.string,
    /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */
    disableNestedContext: a.bool,
    /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */
    disableStyleSheetGeneration: a.bool,
    /**
     * Disable CSS transitions when switching between modes or color schemes.
     */
    disableTransitionOnChange: a.bool,
    /**
     * The document to attach the attribute to.
     */
    documentNode: a.any,
    /**
     * If `true`, theme values are recalculated when the mode changes.
     */
    forceThemeRerender: a.bool,
    /**
     * The key in the local storage used to store current color scheme.
     */
    modeStorageKey: a.string,
    /**
     * If `true`, the mode will be the same value as the storage without an extra rerendering after the hydration.
     * You should use this option in conjuction with `InitColorSchemeScript` component.
     */
    noSsr: a.bool,
    /**
     * The storage manager to be used for storing the mode and color scheme
     * @default using `window.localStorage`
     */
    storageManager: a.func,
    /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */
    storageWindow: a.any,
    /**
     * The calculated theme object that will be passed through context.
     */
    theme: a.object
  });
  const g = typeof s == "string" ? s : s.light, m = typeof s == "string" ? s : s.dark;
  return {
    CssVarsProvider: h,
    useColorScheme: d,
    getInitColorSchemeScript: (b) => _A({
      colorSchemeStorageKey: r,
      defaultLightColorScheme: g,
      defaultDarkColorScheme: m,
      modeStorageKey: o,
      ...b
    })
  };
}
function zA(e = "") {
  function t(...o) {
    if (!o.length)
      return "";
    const r = o[0];
    return typeof r == "string" && !r.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${r}${t(...o.slice(1))})` : `, ${r}`;
  }
  return (o, ...r) => `var(--${e ? `${e}-` : ""}${o}${t(...r)})`;
}
const Qv = (e, t, n, o = []) => {
  let r = e;
  t.forEach((i, s) => {
    s === t.length - 1 ? Array.isArray(r) ? r[Number(i)] = n : r && typeof r == "object" && (r[i] = n) : r && typeof r == "object" && (r[i] || (r[i] = o.includes(i) ? [] : {}), r = r[i]);
  });
}, HA = (e, t, n) => {
  function o(r, i = [], s = []) {
    Object.entries(r).forEach(([l, c]) => {
      (!n || n && !n([...i, l])) && c != null && (typeof c == "object" && Object.keys(c).length > 0 ? o(c, [...i, l], Array.isArray(c) ? [...s, l] : s) : t([...i, l], c, s));
    });
  }
  o(e);
}, WA = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((o) => e.includes(o)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function Kp(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: o
  } = t || {}, r = {}, i = {}, s = {};
  return HA(
    e,
    (l, c, u) => {
      if ((typeof c == "string" || typeof c == "number") && (!o || !o(l, c))) {
        const d = `--${n ? `${n}-` : ""}${l.join("-")}`, f = WA(l, c);
        Object.assign(r, {
          [d]: f
        }), Qv(i, l, `var(${d})`, u), Qv(s, l, `var(${d}, ${f})`, u);
      }
    },
    (l) => l[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: r,
    vars: i,
    varsWithDefaults: s
  };
}
function UA(e, t = {}) {
  const {
    getSelector: n = y,
    disableCssColorScheme: o,
    colorSchemeSelector: r
  } = t, {
    colorSchemes: i = {},
    components: s,
    defaultColorScheme: l = "light",
    ...c
  } = e, {
    vars: u,
    css: d,
    varsWithDefaults: f
  } = Kp(c, t);
  let p = f;
  const h = {}, {
    [l]: g,
    ...m
  } = i;
  if (Object.entries(m || {}).forEach(([v, w]) => {
    const {
      vars: S,
      css: C,
      varsWithDefaults: E
    } = Kp(w, t);
    p = zn(p, E), h[v] = {
      css: C,
      vars: S
    };
  }), g) {
    const {
      css: v,
      vars: w,
      varsWithDefaults: S
    } = Kp(g, t);
    p = zn(p, S), h[l] = {
      css: v,
      vars: w
    };
  }
  function y(v, w) {
    var C, E;
    let S = r;
    if (r === "class" && (S = ".%s"), r === "data" && (S = "[data-%s]"), r != null && r.startsWith("data-") && !r.includes("%s") && (S = `[${r}="%s"]`), v) {
      if (S === "media")
        return e.defaultColorScheme === v ? ":root" : {
          [`@media (prefers-color-scheme: ${((E = (C = i[v]) == null ? void 0 : C.palette) == null ? void 0 : E.mode) || v})`]: {
            ":root": w
          }
        };
      if (S)
        return e.defaultColorScheme === v ? `:root, ${S.replace("%s", String(v))}` : S.replace("%s", String(v));
    }
    return ":root";
  }
  return {
    vars: p,
    generateThemeVars: () => {
      let v = {
        ...u
      };
      return Object.entries(h).forEach(([, {
        vars: w
      }]) => {
        v = zn(v, w);
      }), v;
    },
    generateStyleSheets: () => {
      var P, M;
      const v = [], w = e.defaultColorScheme || "light";
      function S(x, I) {
        Object.keys(I).length && v.push(typeof x == "string" ? {
          [x]: {
            ...I
          }
        } : x);
      }
      S(n(void 0, {
        ...d
      }), d);
      const {
        [w]: C,
        ...E
      } = h;
      if (C) {
        const {
          css: x
        } = C, I = (M = (P = i[w]) == null ? void 0 : P.palette) == null ? void 0 : M.mode, k = !o && I ? {
          colorScheme: I,
          ...x
        } : {
          ...x
        };
        S(n(w, {
          ...k
        }), k);
      }
      return Object.entries(E).forEach(([x, {
        css: I
      }]) => {
        var R, A;
        const k = (A = (R = i[x]) == null ? void 0 : R.palette) == null ? void 0 : A.mode, _ = !o && k ? {
          colorScheme: k,
          ...I
        } : {
          ...I
        };
        S(n(x, {
          ..._
        }), _);
      }), v;
    }
  };
}
function qA(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
const KA = xf(), GA = lA("div", {
  name: "MuiContainer",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`maxWidth${fe(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
  }
}), YA = (e) => cA({
  props: e,
  name: "MuiContainer",
  defaultTheme: KA
}), XA = (e, t) => {
  const n = (c) => ot(t, c), {
    classes: o,
    fixed: r,
    disableGutters: i,
    maxWidth: s
  } = e, l = {
    root: ["root", s && `maxWidth${fe(String(s))}`, r && "fixed", i && "disableGutters"]
  };
  return st(l, n, o);
};
function ZA(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: t = GA,
    useThemeProps: n = YA,
    componentName: o = "MuiContainer"
  } = e, r = t(({
    theme: s,
    ownerState: l
  }) => ({
    width: "100%",
    marginLeft: "auto",
    boxSizing: "border-box",
    marginRight: "auto",
    ...!l.disableGutters && {
      paddingLeft: s.spacing(2),
      paddingRight: s.spacing(2),
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [s.breakpoints.up("sm")]: {
        paddingLeft: s.spacing(3),
        paddingRight: s.spacing(3)
      }
    }
  }), ({
    theme: s,
    ownerState: l
  }) => l.fixed && Object.keys(s.breakpoints.values).reduce((c, u) => {
    const d = u, f = s.breakpoints.values[d];
    return f !== 0 && (c[s.breakpoints.up(d)] = {
      maxWidth: `${f}${s.breakpoints.unit}`
    }), c;
  }, {}), ({
    theme: s,
    ownerState: l
  }) => ({
    // @ts-ignore module augmentation fails if custom breakpoints are used
    ...l.maxWidth === "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [s.breakpoints.up("xs")]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: Math.max(s.breakpoints.values.xs, 444)
      }
    },
    ...l.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used
    l.maxWidth !== "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [s.breakpoints.up(l.maxWidth)]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: `${s.breakpoints.values[l.maxWidth]}${s.breakpoints.unit}`
      }
    }
  })), i = /* @__PURE__ */ $.forwardRef(function(l, c) {
    const u = n(l), {
      className: d,
      component: f = "div",
      disableGutters: p = !1,
      fixed: h = !1,
      maxWidth: g = "lg",
      classes: m,
      ...y
    } = u, b = {
      ...u,
      component: f,
      disableGutters: p,
      fixed: h,
      maxWidth: g
    }, T = XA(b, o);
    return (
      // @ts-ignore theme is injected by the styled util
      /* @__PURE__ */ O(r, {
        as: f,
        ownerState: b,
        className: Ie(T.root, d),
        ref: c,
        ...y
      })
    );
  });
  return process.env.NODE_ENV !== "production" && (i.propTypes = {
    children: a.node,
    classes: a.object,
    className: a.string,
    component: a.elementType,
    disableGutters: a.bool,
    fixed: a.bool,
    maxWidth: a.oneOfType([a.oneOf(["xs", "sm", "md", "lg", "xl", !1]), a.string]),
    sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
  }), i;
}
const ql = {
  black: "#000",
  white: "#fff"
}, QA = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, Cs = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, Es = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, Wa = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, Os = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, Ps = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, Rs = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
};
function rC() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: ql.white,
      default: ql.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const JA = rC();
function iC() {
  return {
    text: {
      primary: ql.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: ql.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const Jv = iC();
function e0(e, t, n, o) {
  const r = o.light || o, i = o.dark || o * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = Ma(e.main, r) : t === "dark" && (e.dark = Na(e.main, i)));
}
function e_(e = "light") {
  return e === "dark" ? {
    main: Os[200],
    light: Os[50],
    dark: Os[400]
  } : {
    main: Os[700],
    light: Os[400],
    dark: Os[800]
  };
}
function t_(e = "light") {
  return e === "dark" ? {
    main: Cs[200],
    light: Cs[50],
    dark: Cs[400]
  } : {
    main: Cs[500],
    light: Cs[300],
    dark: Cs[700]
  };
}
function n_(e = "light") {
  return e === "dark" ? {
    main: Es[500],
    light: Es[300],
    dark: Es[700]
  } : {
    main: Es[700],
    light: Es[400],
    dark: Es[800]
  };
}
function o_(e = "light") {
  return e === "dark" ? {
    main: Ps[400],
    light: Ps[300],
    dark: Ps[700]
  } : {
    main: Ps[700],
    light: Ps[500],
    dark: Ps[900]
  };
}
function r_(e = "light") {
  return e === "dark" ? {
    main: Rs[400],
    light: Rs[300],
    dark: Rs[700]
  } : {
    main: Rs[800],
    light: Rs[500],
    dark: Rs[900]
  };
}
function i_(e = "light") {
  return e === "dark" ? {
    main: Wa[400],
    light: Wa[300],
    dark: Wa[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: Wa[500],
    dark: Wa[900]
  };
}
function ey(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: o = 0.2,
    ...r
  } = e, i = e.primary || e_(t), s = e.secondary || t_(t), l = e.error || n_(t), c = e.info || o_(t), u = e.success || r_(t), d = e.warning || i_(t);
  function f(m) {
    const y = Hv(m, Jv.text.primary) >= n ? Jv.text.primary : JA.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const b = Hv(m, y);
      b < 3 && console.error([`MUI: The contrast ratio of ${b}:1 for ${y} on ${m}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return y;
  }
  const p = ({
    color: m,
    name: y,
    mainShade: b = 500,
    lightShade: T = 300,
    darkShade: v = 700
  }) => {
    if (m = {
      ...m
    }, !m.main && m[b] && (m.main = m[b]), !m.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${y ? ` (${y})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${b}\` property.` : Pr(11, y ? ` (${y})` : "", b));
    if (typeof m.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${y ? ` (${y})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(m.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : Pr(12, y ? ` (${y})` : "", JSON.stringify(m.main)));
    return e0(m, "light", T, o), e0(m, "dark", v, o), m.contrastText || (m.contrastText = f(m.main)), m;
  };
  let h;
  return t === "light" ? h = rC() : t === "dark" && (h = iC()), process.env.NODE_ENV !== "production" && (h || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), zn({
    // A collection of common colors.
    common: {
      ...ql
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: p({
      color: i,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: p({
      color: s,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: p({
      color: l,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: p({
      color: d,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: p({
      color: c,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: p({
      color: u,
      name: "success"
    }),
    // The grey colors.
    grey: QA,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: f,
    // Generate a rich color object.
    augmentColor: p,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: o,
    // The light and dark mode object.
    ...h
  }, r);
}
function s_(e) {
  const t = {};
  return Object.entries(e).forEach((o) => {
    const [r, i] = o;
    typeof i == "object" && (t[r] = `${i.fontStyle ? `${i.fontStyle} ` : ""}${i.fontVariant ? `${i.fontVariant} ` : ""}${i.fontWeight ? `${i.fontWeight} ` : ""}${i.fontStretch ? `${i.fontStretch} ` : ""}${i.fontSize || ""}${i.lineHeight ? `/${i.lineHeight} ` : ""}${i.fontFamily || ""}`);
  }), t;
}
function a_(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function l_(e) {
  return Math.round(e * 1e5) / 1e5;
}
const t0 = {
  textTransform: "uppercase"
}, n0 = '"Roboto", "Helvetica", "Arial", sans-serif';
function sC(e, t) {
  const {
    fontFamily: n = n0,
    // The default font size of the Material Specification.
    fontSize: o = 14,
    // px
    fontWeightLight: r = 300,
    fontWeightRegular: i = 400,
    fontWeightMedium: s = 500,
    fontWeightBold: l = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: c = 16,
    // Apply the CSS properties to all the variants.
    allVariants: u,
    pxToRem: d,
    ...f
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof o != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof c != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const p = o / 14, h = d || ((y) => `${y / c * p}rem`), g = (y, b, T, v, w) => ({
    fontFamily: n,
    fontWeight: y,
    fontSize: h(b),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: T,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === n0 ? {
      letterSpacing: `${l_(v / b)}em`
    } : {},
    ...w,
    ...u
  }), m = {
    h1: g(r, 96, 1.167, -1.5),
    h2: g(r, 60, 1.2, -0.5),
    h3: g(i, 48, 1.167, 0),
    h4: g(i, 34, 1.235, 0.25),
    h5: g(i, 24, 1.334, 0),
    h6: g(s, 20, 1.6, 0.15),
    subtitle1: g(i, 16, 1.75, 0.15),
    subtitle2: g(s, 14, 1.57, 0.1),
    body1: g(i, 16, 1.5, 0.15),
    body2: g(i, 14, 1.43, 0.15),
    button: g(s, 14, 1.75, 0.4, t0),
    caption: g(i, 12, 1.66, 0.4),
    overline: g(i, 12, 2.66, 1, t0),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return zn({
    htmlFontSize: c,
    pxToRem: h,
    fontFamily: n,
    fontSize: o,
    fontWeightLight: r,
    fontWeightRegular: i,
    fontWeightMedium: s,
    fontWeightBold: l,
    ...m
  }, f, {
    clone: !1
    // No need to clone deep
  });
}
const c_ = 0.2, u_ = 0.14, d_ = 0.12;
function Wt(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${c_})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${u_})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${d_})`].join(",");
}
const f_ = ["none", Wt(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), Wt(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), Wt(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), Wt(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), Wt(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), Wt(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), Wt(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), Wt(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), Wt(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), Wt(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), Wt(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), Wt(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), Wt(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), Wt(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), Wt(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), Wt(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), Wt(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), Wt(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), Wt(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), Wt(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), Wt(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), Wt(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), Wt(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), Wt(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], p_ = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, h_ = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function o0(e) {
  return `${Math.round(e)}ms`;
}
function m_(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function g_(e) {
  const t = {
    ...p_,
    ...e.easing
  }, n = {
    ...h_,
    ...e.duration
  };
  return {
    getAutoHeightDuration: m_,
    create: (r = ["all"], i = {}) => {
      const {
        duration: s = n.standard,
        easing: l = t.easeInOut,
        delay: c = 0,
        ...u
      } = i;
      if (process.env.NODE_ENV !== "production") {
        const d = (p) => typeof p == "string", f = (p) => !Number.isNaN(parseFloat(p));
        !d(r) && !Array.isArray(r) && console.error('MUI: Argument "props" must be a string or Array.'), !f(s) && !d(s) && console.error(`MUI: Argument "duration" must be a number or a string but found ${s}.`), d(l) || console.error('MUI: Argument "easing" must be a string.'), !f(c) && !d(c) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof i != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(u).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(u).join(",")}].`);
      }
      return (Array.isArray(r) ? r : [r]).map((d) => `${d} ${typeof s == "string" ? s : o0(s)} ${l} ${typeof c == "string" ? c : o0(c)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const y_ = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function b_(e) {
  return yr(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function aC(e = {}) {
  const t = {
    ...e
  };
  function n(o) {
    const r = Object.entries(o);
    for (let i = 0; i < r.length; i++) {
      const [s, l] = r[i];
      !b_(l) || s.startsWith("unstable_") ? delete o[s] : yr(l) && (o[s] = {
        ...l
      }, n(o[s]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function um(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: o = {},
    spacing: r,
    palette: i = {},
    transitions: s = {},
    typography: l = {},
    shape: c,
    ...u
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : Pr(20));
  const d = ey(i), f = xf(e);
  let p = zn(f, {
    mixins: a_(f.breakpoints, o),
    palette: d,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: f_.slice(),
    typography: sC(d, l),
    transitions: g_(s),
    zIndex: {
      ...y_
    }
  });
  if (p = zn(p, u), p = t.reduce((h, g) => zn(h, g), p), process.env.NODE_ENV !== "production") {
    const h = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], g = (m, y) => {
      let b;
      for (b in m) {
        const T = m[b];
        if (h.includes(b) && Object.keys(T).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const v = ot("", b);
            console.error([`MUI: The \`${y}\` component increases the CSS specificity of the \`${b}\` internal state.`, "You can not override it like this: ", JSON.stringify(m, null, 2), "", `Instead, you need to use the '&.${v}' syntax:`, JSON.stringify({
              root: {
                [`&.${v}`]: T
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          m[b] = {};
        }
      }
    };
    Object.keys(p.components).forEach((m) => {
      const y = p.components[m].styleOverrides;
      y && m.startsWith("Mui") && g(y, m);
    });
  }
  return p.unstable_sxConfig = {
    ...Oc,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, p.unstable_sx = function(g) {
    return mi({
      sx: g,
      theme: this
    });
  }, p.toRuntimeSource = aC, p;
}
function dm(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const v_ = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = dm(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function lC(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function cC(e) {
  return e === "dark" ? v_ : [];
}
function x_(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: o,
    ...r
  } = e, i = ey(t);
  return {
    palette: i,
    opacity: {
      ...lC(i.mode),
      ...n
    },
    overlays: o || cC(i.mode),
    ...r
  };
}
function w_(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const S_ = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], T_ = (e) => (t, n) => {
  const o = e.rootSelector || ":root", r = e.colorSchemeSelector;
  let i = r;
  if (r === "class" && (i = ".%s"), r === "data" && (i = "[data-%s]"), r != null && r.startsWith("data-") && !r.includes("%s") && (i = `[${r}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const s = {};
      return S_(e.cssVarPrefix).forEach((l) => {
        s[l] = n[l], delete n[l];
      }), i === "media" ? {
        [o]: n,
        "@media (prefers-color-scheme: dark)": {
          [o]: s
        }
      } : i ? {
        [i.replace("%s", t)]: s,
        [`${o}, ${i.replace("%s", t)}`]: n
      } : {
        [o]: {
          ...n,
          ...s
        }
      };
    }
    if (i && i !== "media")
      return `${o}, ${i.replace("%s", String(t))}`;
  } else if (t) {
    if (i === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [o]: n
        }
      };
    if (i)
      return i.replace("%s", String(t));
  }
  return o;
};
function C_(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function me(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function cl(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : jT(e);
}
function _r(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = ll(cl(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function E_(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const ur = (e) => {
  try {
    return e();
  } catch {
  }
}, O_ = (e = "mui") => zA(e);
function Gp(e, t, n, o) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const r = o === "dark" ? "dark" : "light";
  if (!n) {
    e[o] = x_({
      ...t,
      palette: {
        mode: r,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: i,
    ...s
  } = um({
    ...n,
    palette: {
      mode: r,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[o] = {
    ...t,
    palette: i,
    opacity: {
      ...lC(r),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || cC(r)
  }, s;
}
function P_(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: o,
    disableCssColorScheme: r = !1,
    cssVarPrefix: i = "mui",
    shouldSkipGeneratingVar: s = w_,
    colorSchemeSelector: l = n.light && n.dark ? "media" : void 0,
    rootSelector: c = ":root",
    ...u
  } = e, d = Object.keys(n)[0], f = o || (n.light && d !== "light" ? "light" : d), p = O_(i), {
    [f]: h,
    light: g,
    dark: m,
    ...y
  } = n, b = {
    ...y
  };
  let T = h;
  if ((f === "dark" && !("dark" in n) || f === "light" && !("light" in n)) && (T = !0), !T)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${f}\` option is either missing or invalid.` : Pr(21, f));
  const v = Gp(b, T, u, f);
  g && !b.light && Gp(b, g, void 0, "light"), m && !b.dark && Gp(b, m, void 0, "dark");
  let w = {
    defaultColorScheme: f,
    ...v,
    cssVarPrefix: i,
    colorSchemeSelector: l,
    rootSelector: c,
    getCssVar: p,
    colorSchemes: b,
    font: {
      ...s_(v.typography),
      ...v.font
    },
    spacing: E_(u.spacing)
  };
  Object.keys(w.colorSchemes).forEach((M) => {
    const x = w.colorSchemes[M].palette, I = (k) => {
      const _ = k.split("-"), R = _[1], A = _[2];
      return p(k, x[R][A]);
    };
    if (x.mode === "light" && (me(x.common, "background", "#fff"), me(x.common, "onBackground", "#000")), x.mode === "dark" && (me(x.common, "background", "#000"), me(x.common, "onBackground", "#fff")), C_(x, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), x.mode === "light") {
      me(x.Alert, "errorColor", Mt(x.error.light, 0.6)), me(x.Alert, "infoColor", Mt(x.info.light, 0.6)), me(x.Alert, "successColor", Mt(x.success.light, 0.6)), me(x.Alert, "warningColor", Mt(x.warning.light, 0.6)), me(x.Alert, "errorFilledBg", I("palette-error-main")), me(x.Alert, "infoFilledBg", I("palette-info-main")), me(x.Alert, "successFilledBg", I("palette-success-main")), me(x.Alert, "warningFilledBg", I("palette-warning-main")), me(x.Alert, "errorFilledColor", ur(() => x.getContrastText(x.error.main))), me(x.Alert, "infoFilledColor", ur(() => x.getContrastText(x.info.main))), me(x.Alert, "successFilledColor", ur(() => x.getContrastText(x.success.main))), me(x.Alert, "warningFilledColor", ur(() => x.getContrastText(x.warning.main))), me(x.Alert, "errorStandardBg", At(x.error.light, 0.9)), me(x.Alert, "infoStandardBg", At(x.info.light, 0.9)), me(x.Alert, "successStandardBg", At(x.success.light, 0.9)), me(x.Alert, "warningStandardBg", At(x.warning.light, 0.9)), me(x.Alert, "errorIconColor", I("palette-error-main")), me(x.Alert, "infoIconColor", I("palette-info-main")), me(x.Alert, "successIconColor", I("palette-success-main")), me(x.Alert, "warningIconColor", I("palette-warning-main")), me(x.AppBar, "defaultBg", I("palette-grey-100")), me(x.Avatar, "defaultBg", I("palette-grey-400")), me(x.Button, "inheritContainedBg", I("palette-grey-300")), me(x.Button, "inheritContainedHoverBg", I("palette-grey-A100")), me(x.Chip, "defaultBorder", I("palette-grey-400")), me(x.Chip, "defaultAvatarColor", I("palette-grey-700")), me(x.Chip, "defaultIconColor", I("palette-grey-700")), me(x.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), me(x.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), me(x.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), me(x.LinearProgress, "primaryBg", At(x.primary.main, 0.62)), me(x.LinearProgress, "secondaryBg", At(x.secondary.main, 0.62)), me(x.LinearProgress, "errorBg", At(x.error.main, 0.62)), me(x.LinearProgress, "infoBg", At(x.info.main, 0.62)), me(x.LinearProgress, "successBg", At(x.success.main, 0.62)), me(x.LinearProgress, "warningBg", At(x.warning.main, 0.62)), me(x.Skeleton, "bg", `rgba(${I("palette-text-primaryChannel")} / 0.11)`), me(x.Slider, "primaryTrack", At(x.primary.main, 0.62)), me(x.Slider, "secondaryTrack", At(x.secondary.main, 0.62)), me(x.Slider, "errorTrack", At(x.error.main, 0.62)), me(x.Slider, "infoTrack", At(x.info.main, 0.62)), me(x.Slider, "successTrack", At(x.success.main, 0.62)), me(x.Slider, "warningTrack", At(x.warning.main, 0.62));
      const k = hu(x.background.default, 0.8);
      me(x.SnackbarContent, "bg", k), me(x.SnackbarContent, "color", ur(() => x.getContrastText(k))), me(x.SpeedDialAction, "fabHoverBg", hu(x.background.paper, 0.15)), me(x.StepConnector, "border", I("palette-grey-400")), me(x.StepContent, "border", I("palette-grey-400")), me(x.Switch, "defaultColor", I("palette-common-white")), me(x.Switch, "defaultDisabledColor", I("palette-grey-100")), me(x.Switch, "primaryDisabledColor", At(x.primary.main, 0.62)), me(x.Switch, "secondaryDisabledColor", At(x.secondary.main, 0.62)), me(x.Switch, "errorDisabledColor", At(x.error.main, 0.62)), me(x.Switch, "infoDisabledColor", At(x.info.main, 0.62)), me(x.Switch, "successDisabledColor", At(x.success.main, 0.62)), me(x.Switch, "warningDisabledColor", At(x.warning.main, 0.62)), me(x.TableCell, "border", At(pu(x.divider, 1), 0.88)), me(x.Tooltip, "bg", pu(x.grey[700], 0.92));
    }
    if (x.mode === "dark") {
      me(x.Alert, "errorColor", At(x.error.light, 0.6)), me(x.Alert, "infoColor", At(x.info.light, 0.6)), me(x.Alert, "successColor", At(x.success.light, 0.6)), me(x.Alert, "warningColor", At(x.warning.light, 0.6)), me(x.Alert, "errorFilledBg", I("palette-error-dark")), me(x.Alert, "infoFilledBg", I("palette-info-dark")), me(x.Alert, "successFilledBg", I("palette-success-dark")), me(x.Alert, "warningFilledBg", I("palette-warning-dark")), me(x.Alert, "errorFilledColor", ur(() => x.getContrastText(x.error.dark))), me(x.Alert, "infoFilledColor", ur(() => x.getContrastText(x.info.dark))), me(x.Alert, "successFilledColor", ur(() => x.getContrastText(x.success.dark))), me(x.Alert, "warningFilledColor", ur(() => x.getContrastText(x.warning.dark))), me(x.Alert, "errorStandardBg", Mt(x.error.light, 0.9)), me(x.Alert, "infoStandardBg", Mt(x.info.light, 0.9)), me(x.Alert, "successStandardBg", Mt(x.success.light, 0.9)), me(x.Alert, "warningStandardBg", Mt(x.warning.light, 0.9)), me(x.Alert, "errorIconColor", I("palette-error-main")), me(x.Alert, "infoIconColor", I("palette-info-main")), me(x.Alert, "successIconColor", I("palette-success-main")), me(x.Alert, "warningIconColor", I("palette-warning-main")), me(x.AppBar, "defaultBg", I("palette-grey-900")), me(x.AppBar, "darkBg", I("palette-background-paper")), me(x.AppBar, "darkColor", I("palette-text-primary")), me(x.Avatar, "defaultBg", I("palette-grey-600")), me(x.Button, "inheritContainedBg", I("palette-grey-800")), me(x.Button, "inheritContainedHoverBg", I("palette-grey-700")), me(x.Chip, "defaultBorder", I("palette-grey-700")), me(x.Chip, "defaultAvatarColor", I("palette-grey-300")), me(x.Chip, "defaultIconColor", I("palette-grey-300")), me(x.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), me(x.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), me(x.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), me(x.LinearProgress, "primaryBg", Mt(x.primary.main, 0.5)), me(x.LinearProgress, "secondaryBg", Mt(x.secondary.main, 0.5)), me(x.LinearProgress, "errorBg", Mt(x.error.main, 0.5)), me(x.LinearProgress, "infoBg", Mt(x.info.main, 0.5)), me(x.LinearProgress, "successBg", Mt(x.success.main, 0.5)), me(x.LinearProgress, "warningBg", Mt(x.warning.main, 0.5)), me(x.Skeleton, "bg", `rgba(${I("palette-text-primaryChannel")} / 0.13)`), me(x.Slider, "primaryTrack", Mt(x.primary.main, 0.5)), me(x.Slider, "secondaryTrack", Mt(x.secondary.main, 0.5)), me(x.Slider, "errorTrack", Mt(x.error.main, 0.5)), me(x.Slider, "infoTrack", Mt(x.info.main, 0.5)), me(x.Slider, "successTrack", Mt(x.success.main, 0.5)), me(x.Slider, "warningTrack", Mt(x.warning.main, 0.5));
      const k = hu(x.background.default, 0.98);
      me(x.SnackbarContent, "bg", k), me(x.SnackbarContent, "color", ur(() => x.getContrastText(k))), me(x.SpeedDialAction, "fabHoverBg", hu(x.background.paper, 0.15)), me(x.StepConnector, "border", I("palette-grey-600")), me(x.StepContent, "border", I("palette-grey-600")), me(x.Switch, "defaultColor", I("palette-grey-300")), me(x.Switch, "defaultDisabledColor", I("palette-grey-600")), me(x.Switch, "primaryDisabledColor", Mt(x.primary.main, 0.55)), me(x.Switch, "secondaryDisabledColor", Mt(x.secondary.main, 0.55)), me(x.Switch, "errorDisabledColor", Mt(x.error.main, 0.55)), me(x.Switch, "infoDisabledColor", Mt(x.info.main, 0.55)), me(x.Switch, "successDisabledColor", Mt(x.success.main, 0.55)), me(x.Switch, "warningDisabledColor", Mt(x.warning.main, 0.55)), me(x.TableCell, "border", Mt(pu(x.divider, 1), 0.68)), me(x.Tooltip, "bg", pu(x.grey[700], 0.92));
    }
    _r(x.background, "default"), _r(x.background, "paper"), _r(x.common, "background"), _r(x.common, "onBackground"), _r(x, "divider"), Object.keys(x).forEach((k) => {
      const _ = x[k];
      k !== "tonalOffset" && _ && typeof _ == "object" && (_.main && me(x[k], "mainChannel", ll(cl(_.main))), _.light && me(x[k], "lightChannel", ll(cl(_.light))), _.dark && me(x[k], "darkChannel", ll(cl(_.dark))), _.contrastText && me(x[k], "contrastTextChannel", ll(cl(_.contrastText))), k === "text" && (_r(x[k], "primary"), _r(x[k], "secondary")), k === "action" && (_.active && _r(x[k], "active"), _.selected && _r(x[k], "selected")));
    });
  }), w = t.reduce((M, x) => zn(M, x), w);
  const S = {
    prefix: i,
    disableCssColorScheme: r,
    shouldSkipGeneratingVar: s,
    getSelector: T_(w)
  }, {
    vars: C,
    generateThemeVars: E,
    generateStyleSheets: P
  } = UA(w, S);
  return w.vars = C, Object.entries(w.colorSchemes[w.defaultColorScheme]).forEach(([M, x]) => {
    w[M] = x;
  }), w.generateThemeVars = E, w.generateStyleSheets = P, w.generateSpacing = function() {
    return kT(u.spacing, _g(this));
  }, w.getColorSchemeSelector = qA(l), w.spacing = w.generateSpacing(), w.shouldSkipGeneratingVar = s, w.unstable_sxConfig = {
    ...Oc,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, w.unstable_sx = function(x) {
    return mi({
      sx: x,
      theme: this
    });
  }, w.toRuntimeSource = aC, w;
}
function r0(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: ey({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function Cf(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: o = !1,
    colorSchemes: r = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: i = n == null ? void 0 : n.mode,
    ...s
  } = e, l = i || "light", c = r == null ? void 0 : r[l], u = {
    ...r,
    ...n ? {
      [l]: {
        ...typeof c != "boolean" && c,
        palette: n
      }
    } : void 0
  };
  if (o === !1) {
    if (!("colorSchemes" in e))
      return um(e, ...t);
    let d = n;
    "palette" in e || u[l] && (u[l] !== !0 ? d = u[l].palette : l === "dark" && (d = {
      mode: "dark"
    }));
    const f = um({
      ...e,
      palette: d
    }, ...t);
    return f.defaultColorScheme = l, f.colorSchemes = u, f.palette.mode === "light" && (f.colorSchemes.light = {
      ...u.light !== !0 && u.light,
      palette: f.palette
    }, r0(f, "dark", u.dark)), f.palette.mode === "dark" && (f.colorSchemes.dark = {
      ...u.dark !== !0 && u.dark,
      palette: f.palette
    }, r0(f, "light", u.light)), f;
  }
  return !n && !("light" in u) && l === "light" && (u.light = !0), P_({
    ...s,
    colorSchemes: u,
    defaultColorScheme: l,
    ...typeof o != "boolean" && o
  }, ...t);
}
const ty = Cf(), tr = "$$material";
function Zr() {
  const e = wf(ty);
  return process.env.NODE_ENV !== "production" && $.useDebugValue(e), e[tr] || e;
}
function uC(e) {
  return /* @__PURE__ */ O($T, {
    ...e,
    defaultTheme: ty,
    themeId: tr
  });
}
process.env.NODE_ENV !== "production" && (uC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: a.oneOfType([a.array, a.func, a.number, a.object, a.string, a.bool])
});
function dC(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const Un = (e) => dC(e) && e !== "classes", Ce = DT({
  themeId: tr,
  defaultTheme: ty,
  rootShouldForwardProp: Un
});
function ny(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ O(uC, {
        styles: typeof e == "function" ? (o) => e({
          theme: o,
          ...n
        }) : e
      })
    );
  };
}
function R_() {
  return hT;
}
const Ye = MA;
process.env.NODE_ENV !== "production" && (a.node, a.object.isRequired);
function ut(e) {
  return NA(e);
}
function I_(e) {
  return ot("MuiSvgIcon", e);
}
at("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const k_ = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: o
  } = e, r = {
    root: ["root", t !== "inherit" && `color${fe(t)}`, `fontSize${fe(n)}`]
  };
  return st(r, I_, o);
}, $_ = Ce("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${fe(n.color)}`], t[`fontSize${fe(n.fontSize)}`]];
  }
})(Ye(({
  theme: e
}) => {
  var t, n, o, r, i, s, l, c, u, d, f, p, h, g;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (r = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : r.call(t, "fill", {
      duration: (o = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : o.shorter
    }),
    variants: [
      {
        props: (m) => !m.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((s = (i = e.typography) == null ? void 0 : i.pxToRem) == null ? void 0 : s.call(i, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((c = (l = e.typography) == null ? void 0 : l.pxToRem) == null ? void 0 : c.call(l, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((d = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : d.call(u, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, m]) => m && m.main).map(([m]) => {
        var y, b;
        return {
          props: {
            color: m
          },
          style: {
            color: (b = (y = (e.vars ?? e).palette) == null ? void 0 : y[m]) == null ? void 0 : b.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (p = (f = (e.vars ?? e).palette) == null ? void 0 : f.action) == null ? void 0 : p.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (g = (h = (e.vars ?? e).palette) == null ? void 0 : h.action) == null ? void 0 : g.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), ra = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: r,
    className: i,
    color: s = "inherit",
    component: l = "svg",
    fontSize: c = "medium",
    htmlColor: u,
    inheritViewBox: d = !1,
    titleAccess: f,
    viewBox: p = "0 0 24 24",
    ...h
  } = o, g = /* @__PURE__ */ $.isValidElement(r) && r.type === "svg", m = {
    ...o,
    color: s,
    component: l,
    fontSize: c,
    instanceFontSize: t.fontSize,
    inheritViewBox: d,
    viewBox: p,
    hasSvgAsChild: g
  }, y = {};
  d || (y.viewBox = p);
  const b = k_(m);
  return /* @__PURE__ */ Se($_, {
    as: l,
    className: Ie(b.root, i),
    focusable: "false",
    color: u,
    "aria-hidden": f ? void 0 : !0,
    role: f ? "img" : void 0,
    ref: n,
    ...y,
    ...h,
    ...g && r.props,
    ownerState: m,
    children: [g ? r.props.children : r, f ? /* @__PURE__ */ O("title", {
      children: f
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (ra.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: a.oneOfType([a.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: a.oneOfType([a.oneOf(["inherit", "large", "medium", "small"]), a.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: a.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: a.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: a.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: a.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: a.string
});
ra.muiName = "SvgIcon";
function Qr(e, t) {
  function n(o, r) {
    return /* @__PURE__ */ O(ra, {
      "data-testid": process.env.NODE_ENV !== "production" ? `${t}Icon` : void 0,
      ref: r,
      ...o,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = ra.muiName, /* @__PURE__ */ $.memo(/* @__PURE__ */ $.forwardRef(n));
}
const N_ = Qr(/* @__PURE__ */ O("path", {
  d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
}), "Person");
function M_(e) {
  return ot("MuiAvatar", e);
}
at("MuiAvatar", ["root", "colorDefault", "circular", "rounded", "square", "img", "fallback"]);
function it(e, t) {
  const {
    className: n,
    elementType: o,
    ownerState: r,
    externalForwardedProps: i,
    internalForwardedProps: s,
    shouldForwardComponentProp: l = !1,
    ...c
  } = t, {
    component: u,
    slots: d = {
      [e]: void 0
    },
    slotProps: f = {
      [e]: void 0
    },
    ...p
  } = i, h = d[e] || o, g = QT(f[e], r), {
    props: {
      component: m,
      ...y
    },
    internalRef: b
  } = ZT({
    className: n,
    ...c,
    externalForwardedProps: e === "root" ? p : void 0,
    externalSlotProps: g
  }), T = yn(b, g == null ? void 0 : g.ref, t.ref), v = e === "root" ? m || u : m, w = YT(h, {
    ...e === "root" && !u && !d[e] && s,
    ...e !== "root" && !d[e] && s,
    ...y,
    ...v && !l && {
      as: v
    },
    ...v && l && {
      component: v
    },
    ref: T
  }, r);
  return [h, w];
}
const A_ = (e) => {
  const {
    classes: t,
    variant: n,
    colorDefault: o
  } = e;
  return st({
    root: ["root", n, o && "colorDefault"],
    img: ["img"],
    fallback: ["fallback"]
  }, M_, t);
}, __ = Ce("div", {
  name: "MuiAvatar",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], n.colorDefault && t.colorDefault];
  }
})(Ye(({
  theme: e
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  flexShrink: 0,
  width: 40,
  height: 40,
  fontFamily: e.typography.fontFamily,
  fontSize: e.typography.pxToRem(20),
  lineHeight: 1,
  borderRadius: "50%",
  overflow: "hidden",
  userSelect: "none",
  variants: [{
    props: {
      variant: "rounded"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius
    }
  }, {
    props: {
      variant: "square"
    },
    style: {
      borderRadius: 0
    }
  }, {
    props: {
      colorDefault: !0
    },
    style: {
      color: (e.vars || e).palette.background.default,
      ...e.vars ? {
        backgroundColor: e.vars.palette.Avatar.defaultBg
      } : {
        backgroundColor: e.palette.grey[400],
        ...e.applyStyles("dark", {
          backgroundColor: e.palette.grey[600]
        })
      }
    }
  }]
}))), D_ = Ce("img", {
  name: "MuiAvatar",
  slot: "Img",
  overridesResolver: (e, t) => t.img
})({
  width: "100%",
  height: "100%",
  textAlign: "center",
  // Handle non-square image.
  objectFit: "cover",
  // Hide alt text.
  color: "transparent",
  // Hide the image broken icon, only works on Chrome.
  textIndent: 1e4
}), L_ = Ce(N_, {
  name: "MuiAvatar",
  slot: "Fallback",
  overridesResolver: (e, t) => t.fallback
})({
  width: "75%",
  height: "75%"
});
function B_({
  crossOrigin: e,
  referrerPolicy: t,
  src: n,
  srcSet: o
}) {
  const [r, i] = $.useState(!1);
  return $.useEffect(() => {
    if (!n && !o)
      return;
    i(!1);
    let s = !0;
    const l = new Image();
    return l.onload = () => {
      s && i("loaded");
    }, l.onerror = () => {
      s && i("error");
    }, l.crossOrigin = e, l.referrerPolicy = t, l.src = n, o && (l.srcset = o), () => {
      s = !1;
    };
  }, [e, t, n, o]), r;
}
const fC = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiAvatar"
  }), {
    alt: r,
    children: i,
    className: s,
    component: l = "div",
    slots: c = {},
    slotProps: u = {},
    imgProps: d,
    sizes: f,
    src: p,
    srcSet: h,
    variant: g = "circular",
    ...m
  } = o;
  let y = null;
  const b = {
    ...o,
    component: l,
    variant: g
  }, T = B_({
    ...d,
    ...typeof u.img == "function" ? u.img(b) : u.img,
    src: p,
    srcSet: h
  }), v = p || h, w = v && T !== "error";
  b.colorDefault = !w, delete b.ownerState;
  const S = A_(b), [C, E] = it("img", {
    className: S.img,
    elementType: D_,
    externalForwardedProps: {
      slots: c,
      slotProps: {
        img: {
          ...d,
          ...u.img
        }
      }
    },
    additionalProps: {
      alt: r,
      src: p,
      srcSet: h,
      sizes: f
    },
    ownerState: b
  });
  return w ? y = /* @__PURE__ */ O(C, {
    ...E
  }) : i || i === 0 ? y = i : v && r ? y = r[0] : y = /* @__PURE__ */ O(L_, {
    ownerState: b,
    className: S.fallback
  }), /* @__PURE__ */ O(__, {
    as: l,
    className: Ie(S.root, s),
    ref: n,
    ...m,
    ownerState: b,
    children: y
  });
});
process.env.NODE_ENV !== "production" && (fC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Used in combination with `src` or `srcSet` to
   * provide an alt attribute for the rendered `img` element.
   */
  alt: a.string,
  /**
   * Used to render icon or text elements inside the Avatar if `src` is not set.
   * This can be an element, or just a string.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.
   * It can be used to listen for the loading error event.
   * @deprecated Use `slotProps.img` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  imgProps: a.object,
  /**
   * The `sizes` attribute for the `img` element.
   */
  sizes: a.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    img: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    img: a.elementType
  }),
  /**
   * The `src` attribute for the `img` element.
   */
  src: a.string,
  /**
   * The `srcSet` attribute for the `img` element.
   * Use this attribute for responsive image display.
   */
  srcSet: a.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The shape of the avatar.
   * @default 'circular'
   */
  variant: a.oneOfType([a.oneOf(["circular", "rounded", "square"]), a.string])
});
function V_(e) {
  const {
    badgeContent: t,
    invisible: n = !1,
    max: o = 99,
    showZero: r = !1
  } = e, i = Yg({
    badgeContent: t,
    max: o
  });
  let s = n;
  n === !1 && t === 0 && !r && (s = !0);
  const {
    badgeContent: l,
    max: c = o
  } = s ? i : e, u = l && Number(l) > c ? `${c}+` : l;
  return {
    badgeContent: l,
    invisible: s,
    max: c,
    displayValue: u
  };
}
function F_(e) {
  return typeof e.main == "string";
}
function j_(e, t = []) {
  if (!F_(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function Gt(e = []) {
  return ([, t]) => t && j_(t, e);
}
function z_(e) {
  return ot("MuiBadge", e);
}
const ni = at("MuiBadge", [
  "root",
  "badge",
  "dot",
  "standard",
  "anchorOriginTopRight",
  "anchorOriginBottomRight",
  "anchorOriginTopLeft",
  "anchorOriginBottomLeft",
  "invisible",
  "colorError",
  "colorInfo",
  "colorPrimary",
  "colorSecondary",
  "colorSuccess",
  "colorWarning",
  "overlapRectangular",
  "overlapCircular",
  // TODO: v6 remove the overlap value from these class keys
  "anchorOriginTopLeftCircular",
  "anchorOriginTopLeftRectangular",
  "anchorOriginTopRightCircular",
  "anchorOriginTopRightRectangular",
  "anchorOriginBottomLeftCircular",
  "anchorOriginBottomLeftRectangular",
  "anchorOriginBottomRightCircular",
  "anchorOriginBottomRightRectangular"
]), Yp = 10, Xp = 4, H_ = (e) => {
  const {
    color: t,
    anchorOrigin: n,
    invisible: o,
    overlap: r,
    variant: i,
    classes: s = {}
  } = e, l = {
    root: ["root"],
    badge: ["badge", i, o && "invisible", `anchorOrigin${fe(n.vertical)}${fe(n.horizontal)}`, `anchorOrigin${fe(n.vertical)}${fe(n.horizontal)}${fe(r)}`, `overlap${fe(r)}`, t !== "default" && `color${fe(t)}`]
  };
  return st(l, z_, s);
}, W_ = Ce("span", {
  name: "MuiBadge",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  position: "relative",
  display: "inline-flex",
  // For correct alignment with the text.
  verticalAlign: "middle",
  flexShrink: 0
}), U_ = Ce("span", {
  name: "MuiBadge",
  slot: "Badge",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.badge, t[n.variant], t[`anchorOrigin${fe(n.anchorOrigin.vertical)}${fe(n.anchorOrigin.horizontal)}${fe(n.overlap)}`], n.color !== "default" && t[`color${fe(n.color)}`], n.invisible && t.invisible];
  }
})(Ye(({
  theme: e
}) => ({
  display: "flex",
  flexDirection: "row",
  flexWrap: "wrap",
  justifyContent: "center",
  alignContent: "center",
  alignItems: "center",
  position: "absolute",
  boxSizing: "border-box",
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(12),
  minWidth: Yp * 2,
  lineHeight: 1,
  padding: "0 6px",
  height: Yp * 2,
  borderRadius: Yp,
  zIndex: 1,
  // Render the badge on top of potential ripples.
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeInOut,
    duration: e.transitions.duration.enteringScreen
  }),
  variants: [...Object.entries(e.palette).filter(Gt(["contrastText"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main,
      color: (e.vars || e).palette[t].contrastText
    }
  })), {
    props: {
      variant: "dot"
    },
    style: {
      borderRadius: Xp,
      height: Xp * 2,
      minWidth: Xp * 2,
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      top: 0,
      right: 0,
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${ni.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      right: 0,
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${ni.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      top: 0,
      left: 0,
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${ni.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      left: 0,
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${ni.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      top: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${ni.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      bottom: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${ni.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      top: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${ni.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      bottom: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${ni.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: {
      invisible: !0
    },
    style: {
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeInOut,
        duration: e.transitions.duration.leavingScreen
      })
    }
  }]
})));
function i0(e) {
  return {
    vertical: (e == null ? void 0 : e.vertical) ?? "top",
    horizontal: (e == null ? void 0 : e.horizontal) ?? "right"
  };
}
const kc = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiBadge"
  }), {
    anchorOrigin: r,
    className: i,
    classes: s,
    component: l,
    components: c = {},
    componentsProps: u = {},
    children: d,
    overlap: f = "rectangular",
    color: p = "default",
    invisible: h = !1,
    max: g = 99,
    badgeContent: m,
    slots: y,
    slotProps: b,
    showZero: T = !1,
    variant: v = "standard",
    ...w
  } = o, {
    badgeContent: S,
    invisible: C,
    max: E,
    displayValue: P
  } = V_({
    max: g,
    invisible: h,
    badgeContent: m,
    showZero: T
  }), M = Yg({
    anchorOrigin: i0(r),
    color: p,
    overlap: f,
    variant: v,
    badgeContent: m
  }), x = C || S == null && v !== "dot", {
    color: I = p,
    overlap: k = f,
    anchorOrigin: _,
    variant: R = v
  } = x ? M : o, A = i0(_), N = R !== "dot" ? P : void 0, L = {
    ...o,
    badgeContent: S,
    invisible: x,
    max: E,
    displayValue: N,
    showZero: T,
    anchorOrigin: A,
    color: I,
    overlap: k,
    variant: R
  }, V = H_(L), D = (y == null ? void 0 : y.root) ?? c.Root ?? W_, B = (y == null ? void 0 : y.badge) ?? c.Badge ?? U_, F = (b == null ? void 0 : b.root) ?? u.root, U = (b == null ? void 0 : b.badge) ?? u.badge, q = yd({
    elementType: D,
    externalSlotProps: F,
    externalForwardedProps: w,
    additionalProps: {
      ref: n,
      as: l
    },
    ownerState: L,
    className: Ie(F == null ? void 0 : F.className, V.root, i)
  }), G = yd({
    elementType: B,
    externalSlotProps: U,
    ownerState: L,
    className: Ie(V.badge, U == null ? void 0 : U.className)
  });
  return /* @__PURE__ */ Se(D, {
    ...q,
    children: [d, /* @__PURE__ */ O(B, {
      ...G,
      children: N
    })]
  });
});
process.env.NODE_ENV !== "production" && (kc.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The anchor of the badge.
   * @default {
   *   vertical: 'top',
   *   horizontal: 'right',
   * }
   */
  anchorOrigin: a.shape({
    horizontal: a.oneOf(["left", "right"]),
    vertical: a.oneOf(["bottom", "top"])
  }),
  /**
   * The content rendered within the badge.
   */
  badgeContent: a.node,
  /**
   * The badge will be added relative to this node.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Badge: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    badge: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * If `true`, the badge is invisible.
   * @default false
   */
  invisible: a.bool,
  /**
   * Max count to show.
   * @default 99
   */
  max: a.number,
  /**
   * Wrapped shape the badge should overlap.
   * @default 'rectangular'
   */
  overlap: a.oneOf(["circular", "rectangular"]),
  /**
   * Controls whether the badge is hidden when `badgeContent` is zero.
   * @default false
   */
  showZero: a.bool,
  /**
   * The props used for each slot inside the Badge.
   * @default {}
   */
  slotProps: a.shape({
    badge: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Badge.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    badge: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: a.oneOfType([a.oneOf(["dot", "standard"]), a.string])
});
function Ef({ position: e, color: t }) {
  const n = Ge(() => {
    switch (e) {
      case "top-left":
        return {
          vertical: "top",
          horizontal: "left",
          transform: "translate(-2px, -2px)"
        };
      case "bottom-left":
        return {
          vertical: "bottom",
          horizontal: "left",
          transform: "translate(-2px, 2px)"
        };
      case "bottom-right":
        return {
          vertical: "bottom",
          horizontal: "right",
          transform: "translate(2px, 2px)"
        };
      case "top-right":
      default:
        return {
          vertical: "top",
          horizontal: "right",
          transform: "translate(2px, -2px)"
        };
    }
  }, [e]), o = Ge(() => {
    switch (t) {
      case "auto":
        return "inherit";
      case "success":
        return "success.main";
      case "primary":
        return "primary.main";
      case "error":
      default:
        return "error.main";
    }
  }, [t]);
  return {
    badgePlacementAttributes: n,
    badgeColor: o
  };
}
const pC = Pe(
  ({ children: e, isVisible: t, position: n = "top-right", color: o = "error" }) => {
    const { badgePlacementAttributes: r, badgeColor: i } = Ef({ position: n, color: o }), { vertical: s, horizontal: l, transform: c } = r;
    return /* @__PURE__ */ O(
      kc,
      {
        className: "VenomousUI-DotBadge",
        variant: "dot",
        invisible: !t,
        anchorOrigin: { vertical: s, horizontal: l },
        sx: {
          ".MuiBadge-badge": {
            ...t ? {
              transform: c,
              color: i,
              backgroundColor: i,
              boxShadow: "0 0 0 2px transparent",
              "&::after": {
                position: "absolute",
                top: 0,
                left: 0,
                width: "100%",
                height: "100%",
                borderRadius: "50%",
                animation: "ripple 1.2s infinite ease-in-out",
                border: "2px solid currentColor",
                content: '""'
              },
              "@keyframes ripple": {
                "0%": { transform: "scale(.8)", opacity: 1 },
                "100%": { transform: "scale(2.4)", opacity: 0 }
              }
            } : {}
          }
        },
        children: e
      }
    );
  }
);
pC.displayName = "DotBadge";
const hC = Object.freeze(
  {
    left: 0,
    top: 0,
    width: 16,
    height: 16
  }
), vd = Object.freeze({
  rotate: 0,
  vFlip: !1,
  hFlip: !1
}), oy = Object.freeze({
  ...hC,
  ...vd
}), fm = Object.freeze({
  ...oy,
  body: "",
  hidden: !1
});
function q_(e, t) {
  const n = {};
  !e.hFlip != !t.hFlip && (n.hFlip = !0), !e.vFlip != !t.vFlip && (n.vFlip = !0);
  const o = ((e.rotate || 0) + (t.rotate || 0)) % 4;
  return o && (n.rotate = o), n;
}
function s0(e, t) {
  const n = q_(e, t);
  for (const o in fm)
    o in vd ? o in e && !(o in n) && (n[o] = vd[o]) : o in t ? n[o] = t[o] : o in e && (n[o] = e[o]);
  return n;
}
function K_(e, t) {
  const n = e.icons, o = e.aliases || /* @__PURE__ */ Object.create(null), r = /* @__PURE__ */ Object.create(null);
  function i(s) {
    if (n[s])
      return r[s] = [];
    if (!(s in r)) {
      r[s] = null;
      const l = o[s] && o[s].parent, c = l && i(l);
      c && (r[s] = [l].concat(c));
    }
    return r[s];
  }
  return Object.keys(n).concat(Object.keys(o)).forEach(i), r;
}
function G_(e, t, n) {
  const o = e.icons, r = e.aliases || /* @__PURE__ */ Object.create(null);
  let i = {};
  function s(l) {
    i = s0(
      o[l] || r[l],
      i
    );
  }
  return s(t), n.forEach(s), s0(e, i);
}
function mC(e, t) {
  const n = [];
  if (typeof e != "object" || typeof e.icons != "object")
    return n;
  e.not_found instanceof Array && e.not_found.forEach((r) => {
    t(r, null), n.push(r);
  });
  const o = K_(e);
  for (const r in o) {
    const i = o[r];
    i && (t(r, G_(e, r, i)), n.push(r));
  }
  return n;
}
const Y_ = {
  provider: "",
  aliases: {},
  not_found: {},
  ...hC
};
function Zp(e, t) {
  for (const n in t)
    if (n in e && typeof e[n] != typeof t[n])
      return !1;
  return !0;
}
function gC(e) {
  if (typeof e != "object" || e === null)
    return null;
  const t = e;
  if (typeof t.prefix != "string" || !e.icons || typeof e.icons != "object" || !Zp(e, Y_))
    return null;
  const n = t.icons;
  for (const r in n) {
    const i = n[r];
    if (
      // Name cannot be empty
      !r || // Must have body
      typeof i.body != "string" || // Check other props
      !Zp(
        i,
        fm
      )
    )
      return null;
  }
  const o = t.aliases || /* @__PURE__ */ Object.create(null);
  for (const r in o) {
    const i = o[r], s = i.parent;
    if (
      // Name cannot be empty
      !r || // Parent must be set and point to existing icon
      typeof s != "string" || !n[s] && !o[s] || // Check other props
      !Zp(
        i,
        fm
      )
    )
      return null;
  }
  return t;
}
const yC = /^[a-z0-9]+(-[a-z0-9]+)*$/, Of = (e, t, n, o = "") => {
  const r = e.split(":");
  if (e.slice(0, 1) === "@") {
    if (r.length < 2 || r.length > 3)
      return null;
    o = r.shift().slice(1);
  }
  if (r.length > 3 || !r.length)
    return null;
  if (r.length > 1) {
    const l = r.pop(), c = r.pop(), u = {
      // Allow provider without '@': "provider:prefix:name"
      provider: r.length > 0 ? r[0] : o,
      prefix: c,
      name: l
    };
    return t && !Xu(u) ? null : u;
  }
  const i = r[0], s = i.split("-");
  if (s.length > 1) {
    const l = {
      provider: o,
      prefix: s.shift(),
      name: s.join("-")
    };
    return t && !Xu(l) ? null : l;
  }
  if (n && o === "") {
    const l = {
      provider: o,
      prefix: "",
      name: i
    };
    return t && !Xu(l, n) ? null : l;
  }
  return null;
}, Xu = (e, t) => e ? !!// Check prefix: cannot be empty, unless allowSimpleName is enabled
// Check name: cannot be empty
((t && e.prefix === "" || e.prefix) && e.name) : !1, a0 = /* @__PURE__ */ Object.create(null);
function X_(e, t) {
  return {
    provider: e,
    prefix: t,
    icons: /* @__PURE__ */ Object.create(null),
    missing: /* @__PURE__ */ new Set()
  };
}
function ia(e, t) {
  const n = a0[e] || (a0[e] = /* @__PURE__ */ Object.create(null));
  return n[t] || (n[t] = X_(e, t));
}
function bC(e, t) {
  return gC(t) ? mC(t, (n, o) => {
    o ? e.icons[n] = o : e.missing.add(n);
  }) : [];
}
function Z_(e, t, n) {
  try {
    if (typeof n.body == "string")
      return e.icons[t] = { ...n }, !0;
  } catch {
  }
  return !1;
}
let Kl = !1;
function vC(e) {
  return typeof e == "boolean" && (Kl = e), Kl;
}
function l0(e) {
  const t = typeof e == "string" ? Of(e, !0, Kl) : e;
  if (t) {
    const n = ia(t.provider, t.prefix), o = t.name;
    return n.icons[o] || (n.missing.has(o) ? null : void 0);
  }
}
function Q_(e, t) {
  const n = Of(e, !0, Kl);
  if (!n)
    return !1;
  const o = ia(n.provider, n.prefix);
  return t ? Z_(o, n.name, t) : (o.missing.add(n.name), !0);
}
function J_(e, t) {
  if (typeof e != "object")
    return !1;
  if (typeof t != "string" && (t = e.provider || ""), Kl && !t && !e.prefix) {
    let r = !1;
    return gC(e) && (e.prefix = "", mC(e, (i, s) => {
      Q_(i, s) && (r = !0);
    })), r;
  }
  const n = e.prefix;
  if (!Xu({
    prefix: n,
    name: "a"
  }))
    return !1;
  const o = ia(t, n);
  return !!bC(o, e);
}
const xC = Object.freeze({
  width: null,
  height: null
}), wC = Object.freeze({
  // Dimensions
  ...xC,
  // Transformations
  ...vd
}), e2 = /(-?[0-9.]*[0-9]+[0-9.]*)/g, t2 = /^-?[0-9.]*[0-9]+[0-9.]*$/g;
function c0(e, t, n) {
  if (t === 1)
    return e;
  if (n = n || 100, typeof e == "number")
    return Math.ceil(e * t * n) / n;
  if (typeof e != "string")
    return e;
  const o = e.split(e2);
  if (o === null || !o.length)
    return e;
  const r = [];
  let i = o.shift(), s = t2.test(i);
  for (; ; ) {
    if (s) {
      const l = parseFloat(i);
      isNaN(l) ? r.push(i) : r.push(Math.ceil(l * t * n) / n);
    } else
      r.push(i);
    if (i = o.shift(), i === void 0)
      return r.join("");
    s = !s;
  }
}
function n2(e, t = "defs") {
  let n = "";
  const o = e.indexOf("<" + t);
  for (; o >= 0; ) {
    const r = e.indexOf(">", o), i = e.indexOf("</" + t);
    if (r === -1 || i === -1)
      break;
    const s = e.indexOf(">", i);
    if (s === -1)
      break;
    n += e.slice(r + 1, i).trim(), e = e.slice(0, o).trim() + e.slice(s + 1);
  }
  return {
    defs: n,
    content: e
  };
}
function o2(e, t) {
  return e ? "<defs>" + e + "</defs>" + t : t;
}
function r2(e, t, n) {
  const o = n2(e);
  return o2(o.defs, t + o.content + n);
}
const i2 = (e) => e === "unset" || e === "undefined" || e === "none";
function s2(e, t) {
  const n = {
    ...oy,
    ...e
  }, o = {
    ...wC,
    ...t
  }, r = {
    left: n.left,
    top: n.top,
    width: n.width,
    height: n.height
  };
  let i = n.body;
  [n, o].forEach((m) => {
    const y = [], b = m.hFlip, T = m.vFlip;
    let v = m.rotate;
    b ? T ? v += 2 : (y.push(
      "translate(" + (r.width + r.left).toString() + " " + (0 - r.top).toString() + ")"
    ), y.push("scale(-1 1)"), r.top = r.left = 0) : T && (y.push(
      "translate(" + (0 - r.left).toString() + " " + (r.height + r.top).toString() + ")"
    ), y.push("scale(1 -1)"), r.top = r.left = 0);
    let w;
    switch (v < 0 && (v -= Math.floor(v / 4) * 4), v = v % 4, v) {
      case 1:
        w = r.height / 2 + r.top, y.unshift(
          "rotate(90 " + w.toString() + " " + w.toString() + ")"
        );
        break;
      case 2:
        y.unshift(
          "rotate(180 " + (r.width / 2 + r.left).toString() + " " + (r.height / 2 + r.top).toString() + ")"
        );
        break;
      case 3:
        w = r.width / 2 + r.left, y.unshift(
          "rotate(-90 " + w.toString() + " " + w.toString() + ")"
        );
        break;
    }
    v % 2 === 1 && (r.left !== r.top && (w = r.left, r.left = r.top, r.top = w), r.width !== r.height && (w = r.width, r.width = r.height, r.height = w)), y.length && (i = r2(
      i,
      '<g transform="' + y.join(" ") + '">',
      "</g>"
    ));
  });
  const s = o.width, l = o.height, c = r.width, u = r.height;
  let d, f;
  s === null ? (f = l === null ? "1em" : l === "auto" ? u : l, d = c0(f, c / u)) : (d = s === "auto" ? c : s, f = l === null ? c0(d, u / c) : l === "auto" ? u : l);
  const p = {}, h = (m, y) => {
    i2(y) || (p[m] = y.toString());
  };
  h("width", d), h("height", f);
  const g = [r.left, r.top, c, u];
  return p.viewBox = g.join(" "), {
    attributes: p,
    viewBox: g,
    body: i
  };
}
const a2 = /\sid="(\S+)"/g, l2 = "IconifyId" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);
let c2 = 0;
function u2(e, t = l2) {
  const n = [];
  let o;
  for (; o = a2.exec(e); )
    n.push(o[1]);
  if (!n.length)
    return e;
  const r = "suffix" + (Math.random() * 16777216 | Date.now()).toString(16);
  return n.forEach((i) => {
    const s = typeof t == "function" ? t(i) : t + (c2++).toString(), l = i.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    e = e.replace(
      // Allowed characters before id: [#;"]
      // Allowed characters after id: [)"], .[a-z]
      new RegExp('([#;"])(' + l + ')([")]|\\.[a-z])', "g"),
      "$1" + s + r + "$3"
    );
  }), e = e.replace(new RegExp(r, "g"), ""), e;
}
const pm = /* @__PURE__ */ Object.create(null);
function d2(e, t) {
  pm[e] = t;
}
function hm(e) {
  return pm[e] || pm[""];
}
function ry(e) {
  let t;
  if (typeof e.resources == "string")
    t = [e.resources];
  else if (t = e.resources, !(t instanceof Array) || !t.length)
    return null;
  return {
    // API hosts
    resources: t,
    // Root path
    path: e.path || "/",
    // URL length limit
    maxURL: e.maxURL || 500,
    // Timeout before next host is used.
    rotate: e.rotate || 750,
    // Timeout before failing query.
    timeout: e.timeout || 5e3,
    // Randomise default API end point.
    random: e.random === !0,
    // Start index
    index: e.index || 0,
    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).
    dataAfterTimeout: e.dataAfterTimeout !== !1
  };
}
const iy = /* @__PURE__ */ Object.create(null), Ua = [
  "https://api.simplesvg.com",
  "https://api.unisvg.com"
], Zu = [];
for (; Ua.length > 0; )
  Ua.length === 1 || Math.random() > 0.5 ? Zu.push(Ua.shift()) : Zu.push(Ua.pop());
iy[""] = ry({
  resources: ["https://api.iconify.design"].concat(Zu)
});
function f2(e, t) {
  const n = ry(t);
  return n === null ? !1 : (iy[e] = n, !0);
}
function sy(e) {
  return iy[e];
}
const p2 = () => {
  let e;
  try {
    if (e = fetch, typeof e == "function")
      return e;
  } catch {
  }
};
let u0 = p2();
function h2(e, t) {
  const n = sy(e);
  if (!n)
    return 0;
  let o;
  if (!n.maxURL)
    o = 0;
  else {
    let r = 0;
    n.resources.forEach((s) => {
      r = Math.max(r, s.length);
    });
    const i = t + ".json?icons=";
    o = n.maxURL - r - n.path.length - i.length;
  }
  return o;
}
function m2(e) {
  return e === 404;
}
const g2 = (e, t, n) => {
  const o = [], r = h2(e, t), i = "icons";
  let s = {
    type: i,
    provider: e,
    prefix: t,
    icons: []
  }, l = 0;
  return n.forEach((c, u) => {
    l += c.length + 1, l >= r && u > 0 && (o.push(s), s = {
      type: i,
      provider: e,
      prefix: t,
      icons: []
    }, l = c.length), s.icons.push(c);
  }), o.push(s), o;
};
function y2(e) {
  if (typeof e == "string") {
    const t = sy(e);
    if (t)
      return t.path;
  }
  return "/";
}
const b2 = (e, t, n) => {
  if (!u0) {
    n("abort", 424);
    return;
  }
  let o = y2(t.provider);
  switch (t.type) {
    case "icons": {
      const i = t.prefix, l = t.icons.join(","), c = new URLSearchParams({
        icons: l
      });
      o += i + ".json?" + c.toString();
      break;
    }
    case "custom": {
      const i = t.uri;
      o += i.slice(0, 1) === "/" ? i.slice(1) : i;
      break;
    }
    default:
      n("abort", 400);
      return;
  }
  let r = 503;
  u0(e + o).then((i) => {
    const s = i.status;
    if (s !== 200) {
      setTimeout(() => {
        n(m2(s) ? "abort" : "next", s);
      });
      return;
    }
    return r = 501, i.json();
  }).then((i) => {
    if (typeof i != "object" || i === null) {
      setTimeout(() => {
        i === 404 ? n("abort", i) : n("next", r);
      });
      return;
    }
    setTimeout(() => {
      n("success", i);
    });
  }).catch(() => {
    n("next", r);
  });
}, v2 = {
  prepare: g2,
  send: b2
};
function x2(e) {
  const t = {
    loaded: [],
    missing: [],
    pending: []
  }, n = /* @__PURE__ */ Object.create(null);
  e.sort((r, i) => r.provider !== i.provider ? r.provider.localeCompare(i.provider) : r.prefix !== i.prefix ? r.prefix.localeCompare(i.prefix) : r.name.localeCompare(i.name));
  let o = {
    provider: "",
    prefix: "",
    name: ""
  };
  return e.forEach((r) => {
    if (o.name === r.name && o.prefix === r.prefix && o.provider === r.provider)
      return;
    o = r;
    const i = r.provider, s = r.prefix, l = r.name, c = n[i] || (n[i] = /* @__PURE__ */ Object.create(null)), u = c[s] || (c[s] = ia(i, s));
    let d;
    l in u.icons ? d = t.loaded : s === "" || u.missing.has(l) ? d = t.missing : d = t.pending;
    const f = {
      provider: i,
      prefix: s,
      name: l
    };
    d.push(f);
  }), t;
}
function SC(e, t) {
  e.forEach((n) => {
    const o = n.loaderCallbacks;
    o && (n.loaderCallbacks = o.filter((r) => r.id !== t));
  });
}
function w2(e) {
  e.pendingCallbacksFlag || (e.pendingCallbacksFlag = !0, setTimeout(() => {
    e.pendingCallbacksFlag = !1;
    const t = e.loaderCallbacks ? e.loaderCallbacks.slice(0) : [];
    if (!t.length)
      return;
    let n = !1;
    const o = e.provider, r = e.prefix;
    t.forEach((i) => {
      const s = i.icons, l = s.pending.length;
      s.pending = s.pending.filter((c) => {
        if (c.prefix !== r)
          return !0;
        const u = c.name;
        if (e.icons[u])
          s.loaded.push({
            provider: o,
            prefix: r,
            name: u
          });
        else if (e.missing.has(u))
          s.missing.push({
            provider: o,
            prefix: r,
            name: u
          });
        else
          return n = !0, !0;
        return !1;
      }), s.pending.length !== l && (n || SC([e], i.id), i.callback(
        s.loaded.slice(0),
        s.missing.slice(0),
        s.pending.slice(0),
        i.abort
      ));
    });
  }));
}
let S2 = 0;
function T2(e, t, n) {
  const o = S2++, r = SC.bind(null, n, o);
  if (!t.pending.length)
    return r;
  const i = {
    id: o,
    icons: t,
    callback: e,
    abort: r
  };
  return n.forEach((s) => {
    (s.loaderCallbacks || (s.loaderCallbacks = [])).push(i);
  }), r;
}
function C2(e, t = !0, n = !1) {
  const o = [];
  return e.forEach((r) => {
    const i = typeof r == "string" ? Of(r, t, n) : r;
    i && o.push(i);
  }), o;
}
var E2 = {
  resources: [],
  index: 0,
  timeout: 2e3,
  rotate: 750,
  random: !1,
  dataAfterTimeout: !1
};
function O2(e, t, n, o) {
  const r = e.resources.length, i = e.random ? Math.floor(Math.random() * r) : e.index;
  let s;
  if (e.random) {
    let C = e.resources.slice(0);
    for (s = []; C.length > 1; ) {
      const E = Math.floor(Math.random() * C.length);
      s.push(C[E]), C = C.slice(0, E).concat(C.slice(E + 1));
    }
    s = s.concat(C);
  } else
    s = e.resources.slice(i).concat(e.resources.slice(0, i));
  const l = Date.now();
  let c = "pending", u = 0, d, f = null, p = [], h = [];
  typeof o == "function" && h.push(o);
  function g() {
    f && (clearTimeout(f), f = null);
  }
  function m() {
    c === "pending" && (c = "aborted"), g(), p.forEach((C) => {
      C.status === "pending" && (C.status = "aborted");
    }), p = [];
  }
  function y(C, E) {
    E && (h = []), typeof C == "function" && h.push(C);
  }
  function b() {
    return {
      startTime: l,
      payload: t,
      status: c,
      queriesSent: u,
      queriesPending: p.length,
      subscribe: y,
      abort: m
    };
  }
  function T() {
    c = "failed", h.forEach((C) => {
      C(void 0, d);
    });
  }
  function v() {
    p.forEach((C) => {
      C.status === "pending" && (C.status = "aborted");
    }), p = [];
  }
  function w(C, E, P) {
    const M = E !== "success";
    switch (p = p.filter((x) => x !== C), c) {
      case "pending":
        break;
      case "failed":
        if (M || !e.dataAfterTimeout)
          return;
        break;
      default:
        return;
    }
    if (E === "abort") {
      d = P, T();
      return;
    }
    if (M) {
      d = P, p.length || (s.length ? S() : T());
      return;
    }
    if (g(), v(), !e.random) {
      const x = e.resources.indexOf(C.resource);
      x !== -1 && x !== e.index && (e.index = x);
    }
    c = "completed", h.forEach((x) => {
      x(P);
    });
  }
  function S() {
    if (c !== "pending")
      return;
    g();
    const C = s.shift();
    if (C === void 0) {
      if (p.length) {
        f = setTimeout(() => {
          g(), c === "pending" && (v(), T());
        }, e.timeout);
        return;
      }
      T();
      return;
    }
    const E = {
      status: "pending",
      resource: C,
      callback: (P, M) => {
        w(E, P, M);
      }
    };
    p.push(E), u++, f = setTimeout(S, e.rotate), n(C, t, E.callback);
  }
  return setTimeout(S), b;
}
function TC(e) {
  const t = {
    ...E2,
    ...e
  };
  let n = [];
  function o() {
    n = n.filter((l) => l().status === "pending");
  }
  function r(l, c, u) {
    const d = O2(
      t,
      l,
      c,
      (f, p) => {
        o(), u && u(f, p);
      }
    );
    return n.push(d), d;
  }
  function i(l) {
    return n.find((c) => l(c)) || null;
  }
  return {
    query: r,
    find: i,
    setIndex: (l) => {
      t.index = l;
    },
    getIndex: () => t.index,
    cleanup: o
  };
}
function d0() {
}
const Qp = /* @__PURE__ */ Object.create(null);
function P2(e) {
  if (!Qp[e]) {
    const t = sy(e);
    if (!t)
      return;
    const n = TC(t), o = {
      config: t,
      redundancy: n
    };
    Qp[e] = o;
  }
  return Qp[e];
}
function R2(e, t, n) {
  let o, r;
  if (typeof e == "string") {
    const i = hm(e);
    if (!i)
      return n(void 0, 424), d0;
    r = i.send;
    const s = P2(e);
    s && (o = s.redundancy);
  } else {
    const i = ry(e);
    if (i) {
      o = TC(i);
      const s = e.resources ? e.resources[0] : "", l = hm(s);
      l && (r = l.send);
    }
  }
  return !o || !r ? (n(void 0, 424), d0) : o.query(t, r, n)().abort;
}
function f0() {
}
function I2(e) {
  e.iconsLoaderFlag || (e.iconsLoaderFlag = !0, setTimeout(() => {
    e.iconsLoaderFlag = !1, w2(e);
  }));
}
function k2(e) {
  const t = [], n = [];
  return e.forEach((o) => {
    (o.match(yC) ? t : n).push(o);
  }), {
    valid: t,
    invalid: n
  };
}
function qa(e, t, n) {
  function o() {
    const r = e.pendingIcons;
    t.forEach((i) => {
      r && r.delete(i), e.icons[i] || e.missing.add(i);
    });
  }
  if (n && typeof n == "object")
    try {
      if (!bC(e, n).length) {
        o();
        return;
      }
    } catch (r) {
      console.error(r);
    }
  o(), I2(e);
}
function p0(e, t) {
  e instanceof Promise ? e.then((n) => {
    t(n);
  }).catch(() => {
    t(null);
  }) : t(e);
}
function $2(e, t) {
  e.iconsToLoad ? e.iconsToLoad = e.iconsToLoad.concat(t).sort() : e.iconsToLoad = t, e.iconsQueueFlag || (e.iconsQueueFlag = !0, setTimeout(() => {
    e.iconsQueueFlag = !1;
    const { provider: n, prefix: o } = e, r = e.iconsToLoad;
    if (delete e.iconsToLoad, !r || !r.length)
      return;
    const i = e.loadIcon;
    if (e.loadIcons && (r.length > 1 || !i)) {
      p0(
        e.loadIcons(r, o, n),
        (d) => {
          qa(e, r, d);
        }
      );
      return;
    }
    if (i) {
      r.forEach((d) => {
        const f = i(d, o, n);
        p0(f, (p) => {
          const h = p ? {
            prefix: o,
            icons: {
              [d]: p
            }
          } : null;
          qa(e, [d], h);
        });
      });
      return;
    }
    const { valid: s, invalid: l } = k2(r);
    if (l.length && qa(e, l, null), !s.length)
      return;
    const c = o.match(yC) ? hm(n) : null;
    if (!c) {
      qa(e, s, null);
      return;
    }
    c.prepare(n, o, s).forEach((d) => {
      R2(n, d, (f) => {
        qa(e, d.icons, f);
      });
    });
  }));
}
const N2 = (e, t) => {
  const n = C2(e, !0, vC()), o = x2(n);
  if (!o.pending.length) {
    let c = !0;
    return t && setTimeout(() => {
      c && t(
        o.loaded,
        o.missing,
        o.pending,
        f0
      );
    }), () => {
      c = !1;
    };
  }
  const r = /* @__PURE__ */ Object.create(null), i = [];
  let s, l;
  return o.pending.forEach((c) => {
    const { provider: u, prefix: d } = c;
    if (d === l && u === s)
      return;
    s = u, l = d, i.push(ia(u, d));
    const f = r[u] || (r[u] = /* @__PURE__ */ Object.create(null));
    f[d] || (f[d] = []);
  }), o.pending.forEach((c) => {
    const { provider: u, prefix: d, name: f } = c, p = ia(u, d), h = p.pendingIcons || (p.pendingIcons = /* @__PURE__ */ new Set());
    h.has(f) || (h.add(f), r[u][d].push(f));
  }), i.forEach((c) => {
    const u = r[c.provider][c.prefix];
    u.length && $2(c, u);
  }), t ? T2(t, o, i) : f0;
};
function M2(e, t) {
  const n = {
    ...e
  };
  for (const o in t) {
    const r = t[o], i = typeof r;
    o in xC ? (r === null || r && (i === "string" || i === "number")) && (n[o] = r) : i === typeof n[o] && (n[o] = o === "rotate" ? r % 4 : r);
  }
  return n;
}
const A2 = /[\s,]+/;
function _2(e, t) {
  t.split(A2).forEach((n) => {
    switch (n.trim()) {
      case "horizontal":
        e.hFlip = !0;
        break;
      case "vertical":
        e.vFlip = !0;
        break;
    }
  });
}
function D2(e, t = 0) {
  const n = e.replace(/^-?[0-9.]*/, "");
  function o(r) {
    for (; r < 0; )
      r += 4;
    return r % 4;
  }
  if (n === "") {
    const r = parseInt(e);
    return isNaN(r) ? 0 : o(r);
  } else if (n !== e) {
    let r = 0;
    switch (n) {
      case "%":
        r = 25;
        break;
      case "deg":
        r = 90;
    }
    if (r) {
      let i = parseFloat(e.slice(0, e.length - n.length));
      return isNaN(i) ? 0 : (i = i / r, i % 1 === 0 ? o(i) : 0);
    }
  }
  return t;
}
function L2(e, t) {
  let n = e.indexOf("xlink:") === -1 ? "" : ' xmlns:xlink="http://www.w3.org/1999/xlink"';
  for (const o in t)
    n += " " + o + '="' + t[o] + '"';
  return '<svg xmlns="http://www.w3.org/2000/svg"' + n + ">" + e + "</svg>";
}
function B2(e) {
  return e.replace(/"/g, "'").replace(/%/g, "%25").replace(/#/g, "%23").replace(/</g, "%3C").replace(/>/g, "%3E").replace(/\s+/g, " ");
}
function V2(e) {
  return "data:image/svg+xml," + B2(e);
}
function F2(e) {
  return 'url("' + V2(e) + '")';
}
let Sl;
function j2() {
  try {
    Sl = window.trustedTypes.createPolicy("iconify", {
      // eslint-disable-next-line @typescript-eslint/no-unsafe-return
      createHTML: (e) => e
    });
  } catch {
    Sl = null;
  }
}
function z2(e) {
  return Sl === void 0 && j2(), Sl ? Sl.createHTML(e) : e;
}
const CC = {
  ...wC,
  inline: !1
}, H2 = {
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink",
  "aria-hidden": !0,
  role: "img"
}, W2 = {
  display: "inline-block"
}, mm = {
  backgroundColor: "currentColor"
}, EC = {
  backgroundColor: "transparent"
}, h0 = {
  Image: "var(--svg)",
  Repeat: "no-repeat",
  Size: "100% 100%"
}, m0 = {
  WebkitMask: mm,
  mask: mm,
  background: EC
};
for (const e in m0) {
  const t = m0[e];
  for (const n in h0)
    t[e + n] = h0[n];
}
const U2 = {
  ...CC,
  inline: !0
};
function g0(e) {
  return e + (e.match(/^[-0-9.]+$/) ? "px" : "");
}
const q2 = (e, t, n) => {
  const o = t.inline ? U2 : CC, r = M2(o, t), i = t.mode || "svg", s = {}, l = t.style || {}, c = {
    ...i === "svg" ? H2 : {}
  };
  if (n) {
    const y = Of(n, !1, !0);
    if (y) {
      const b = ["iconify"], T = [
        "provider",
        "prefix"
      ];
      for (const v of T)
        y[v] && b.push("iconify--" + y[v]);
      c.className = b.join(" ");
    }
  }
  for (let y in t) {
    const b = t[y];
    if (b !== void 0)
      switch (y) {
        // Properties to ignore
        case "icon":
        case "style":
        case "children":
        case "onLoad":
        case "mode":
        case "ssr":
          break;
        // Forward ref
        case "_ref":
          c.ref = b;
          break;
        // Merge class names
        case "className":
          c[y] = (c[y] ? c[y] + " " : "") + b;
          break;
        // Boolean attributes
        case "inline":
        case "hFlip":
        case "vFlip":
          r[y] = b === !0 || b === "true" || b === 1;
          break;
        // Flip as string: 'horizontal,vertical'
        case "flip":
          typeof b == "string" && _2(r, b);
          break;
        // Color: copy to style
        case "color":
          s.color = b;
          break;
        // Rotation as string
        case "rotate":
          typeof b == "string" ? r[y] = D2(b) : typeof b == "number" && (r[y] = b);
          break;
        // Remove aria-hidden
        case "ariaHidden":
        case "aria-hidden":
          b !== !0 && b !== "true" && delete c["aria-hidden"];
          break;
        // Copy missing property if it does not exist in customisations
        default:
          o[y] === void 0 && (c[y] = b);
      }
  }
  const u = s2(e, r), d = u.attributes;
  if (r.inline && (s.verticalAlign = "-0.125em"), i === "svg") {
    c.style = {
      ...s,
      ...l
    }, Object.assign(c, d);
    let y = 0, b = t.id;
    return typeof b == "string" && (b = b.replace(/-/g, "_")), c.dangerouslySetInnerHTML = {
      __html: z2(u2(u.body, b ? () => b + "ID" + y++ : "iconifyReact"))
    }, fi("svg", c);
  }
  const { body: f, width: p, height: h } = e, g = i === "mask" || (i === "bg" ? !1 : f.indexOf("currentColor") !== -1), m = L2(f, {
    ...d,
    width: p + "",
    height: h + ""
  });
  return c.style = {
    ...s,
    "--svg": F2(m),
    width: g0(d.width),
    height: g0(d.height),
    ...W2,
    ...g ? mm : EC,
    ...l
  }, fi("span", c);
};
vC(!0);
d2("", v2);
if (typeof document < "u" && typeof window < "u") {
  const e = window;
  if (e.IconifyPreload !== void 0) {
    const t = e.IconifyPreload, n = "Invalid IconifyPreload syntax.";
    typeof t == "object" && t !== null && (t instanceof Array ? t : [t]).forEach((o) => {
      try {
        // Check if item is an object and not null/array
        (typeof o != "object" || o === null || o instanceof Array || // Check for 'icons' and 'prefix'
        typeof o.icons != "object" || typeof o.prefix != "string" || // Add icon set
        !J_(o)) && console.error(n);
      } catch {
        console.error(n);
      }
    });
  }
  if (e.IconifyProviders !== void 0) {
    const t = e.IconifyProviders;
    if (typeof t == "object" && t !== null)
      for (let n in t) {
        const o = "IconifyProviders[" + n + "] is invalid.";
        try {
          const r = t[n];
          if (typeof r != "object" || !r || r.resources === void 0)
            continue;
          f2(n, r) || console.error(o);
        } catch {
          console.error(o);
        }
      }
  }
}
function OC(e) {
  const [t, n] = Yt(!!e.ssr), [o, r] = Yt({});
  function i(h) {
    if (h) {
      const g = e.icon;
      if (typeof g == "object")
        return {
          name: "",
          data: g
        };
      const m = l0(g);
      if (m)
        return {
          name: g,
          data: m
        };
    }
    return {
      name: ""
    };
  }
  const [s, l] = Yt(i(!!e.ssr));
  function c() {
    const h = o.callback;
    h && (h(), r({}));
  }
  function u(h) {
    if (JSON.stringify(s) !== JSON.stringify(h))
      return c(), l(h), !0;
  }
  function d() {
    var h;
    const g = e.icon;
    if (typeof g == "object") {
      u({
        name: "",
        data: g
      });
      return;
    }
    const m = l0(g);
    if (u({
      name: g,
      data: m
    }))
      if (m === void 0) {
        const y = N2([g], d);
        r({
          callback: y
        });
      } else m && ((h = e.onLoad) === null || h === void 0 || h.call(e, g));
  }
  et(() => (n(!0), c), []), et(() => {
    t && d();
  }, [e.icon, t]);
  const { name: f, data: p } = s;
  return p ? q2({
    ...oy,
    ...p
  }, e, f) : e.children ? e.children : e.fallback ? e.fallback : fi("span", {});
}
const K2 = Oa((e, t) => OC({
  ...e,
  _ref: t
}));
Oa((e, t) => OC({
  inline: !0,
  ...e,
  _ref: t
}));
function Jp({
  theme: e,
  ...t
}) {
  const n = tr in e ? e[tr] : void 0;
  return /* @__PURE__ */ O(Ul, {
    ...t,
    themeId: n ? tr : void 0,
    theme: n || e
  });
}
const mu = {
  colorSchemeStorageKey: "mui-color-scheme",
  defaultLightColorScheme: "light",
  defaultDarkColorScheme: "dark",
  modeStorageKey: "mui-mode"
}, {
  CssVarsProvider: G2
} = jA({
  themeId: tr,
  // @ts-ignore ignore module augmentation tests
  theme: () => Cf({
    cssVariables: !0
  }),
  colorSchemeStorageKey: mu.colorSchemeStorageKey,
  modeStorageKey: mu.modeStorageKey,
  defaultColorScheme: {
    light: mu.defaultLightColorScheme,
    dark: mu.defaultDarkColorScheme
  },
  resolveTheme: (e) => {
    const t = {
      ...e,
      typography: sC(e.palette, e.typography)
    };
    return t.unstable_sx = function(o) {
      return mi({
        sx: o,
        theme: this
      });
    }, t;
  }
}), Y2 = G2;
function X2({
  theme: e,
  ...t
}) {
  if (typeof e == "function")
    return /* @__PURE__ */ O(Jp, {
      theme: e,
      ...t
    });
  const n = tr in e ? e[tr] : e;
  return "colorSchemes" in n ? /* @__PURE__ */ O(Y2, {
    theme: e,
    ...t
  }) : "vars" in n ? /* @__PURE__ */ O(Jp, {
    theme: e,
    ...t
  }) : /* @__PURE__ */ O(Jp, {
    theme: {
      ...e,
      vars: null
    },
    ...t
  });
}
const Z2 = at("MuiBox", ["root"]), Q2 = Cf(), Ho = QM({
  themeId: tr,
  defaultTheme: Q2,
  defaultClassName: Z2.root,
  generateClassName: NT.generate
});
process.env.NODE_ENV !== "production" && (Ho.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: a.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const Eo = Pe(({ ref: e, icon: t, width: n = 20, color: o = "auto", sx: r, ...i }) => /* @__PURE__ */ O(
  Ho,
  {
    className: "VenomousUI-Icon",
    ssr: !0,
    ref: e,
    component: K2,
    icon: t,
    sx: {
      width: n,
      minWidth: n,
      height: n,
      flexShrink: 0,
      display: "inline-flex",
      color: (s) => o === "error" ? s.palette.error.main : o === "primary" ? s.palette.primary.main : o === "success" ? s.palette.success.main : o === "disabled" ? s.palette.action.disabled : "inherit",
      ...r
    },
    ...i
  }
));
Eo.displayName = "Icon";
function J2(e) {
  return ot("MuiPaper", e);
}
at("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const eD = (e) => {
  const {
    square: t,
    elevation: n,
    variant: o,
    classes: r
  } = e, i = {
    root: ["root", o, !t && "rounded", o === "elevation" && `elevation${n}`]
  };
  return st(i, J2, r);
}, tD = Ce("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(Ye(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), Pi = /* @__PURE__ */ $.forwardRef(function(t, n) {
  var h;
  const o = ut({
    props: t,
    name: "MuiPaper"
  }), r = Zr(), {
    className: i,
    component: s = "div",
    elevation: l = 1,
    square: c = !1,
    variant: u = "elevation",
    ...d
  } = o, f = {
    ...o,
    component: s,
    elevation: l,
    square: c,
    variant: u
  }, p = eD(f);
  return process.env.NODE_ENV !== "production" && r.shadows[l] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${l}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${l}]\` is defined.`].join(`
`)), /* @__PURE__ */ O(tD, {
    as: s,
    ownerState: f,
    className: Ie(p.root, i),
    ref: n,
    ...d,
    style: {
      ...u === "elevation" && {
        "--Paper-shadow": (r.vars || r).shadows[l],
        ...r.vars && {
          "--Paper-overlay": (h = r.vars.overlays) == null ? void 0 : h[l]
        },
        ...!r.vars && r.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${vt("#fff", dm(l))}, ${vt("#fff", dm(l))})`
        }
      },
      ...d.style
    }
  });
});
process.env.NODE_ENV !== "production" && (Pi.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: rr(Tf, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: a.bool,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: a.oneOfType([a.oneOf(["elevation", "outlined"]), a.string])
});
function ms() {
  return {
    paperCommonStyles: Ge(
      () => ({
        p: "8px",
        borderRadius: "8px !important",
        backgroundColor: ({ palette: t }) => t.background.paper,
        backgroundImage: "linear-gradient(rgba(255, 255, 255, 0.119), rgba(255, 255, 255, 0.119));"
      }),
      []
    )
  };
}
const Wr = Pe(({ isOutlined: e, children: t, sx: n, ...o }) => {
  const { paperCommonStyles: r } = ms();
  return /* @__PURE__ */ O(
    Pi,
    {
      className: "VenomousUI-Paper",
      variant: e ? "outlined" : "elevation",
      elevation: e ? 0 : 3,
      square: !0,
      sx: {
        ...r,
        ...n
      },
      ...o,
      children: t
    }
  );
});
Wr.displayName = "Paper";
function PC(e, t) {
  if (e == null) return {};
  var n = {};
  for (var o in e) if ({}.hasOwnProperty.call(e, o)) {
    if (t.indexOf(o) !== -1) continue;
    n[o] = e[o];
  }
  return n;
}
function gm(e, t) {
  return gm = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, o) {
    return n.__proto__ = o, n;
  }, gm(e, t);
}
function RC(e, t) {
  e.prototype = Object.create(t.prototype), e.prototype.constructor = e, gm(e, t);
}
const y0 = {
  disabled: !1
};
var nD = process.env.NODE_ENV !== "production" ? a.oneOfType([a.number, a.shape({
  enter: a.number,
  exit: a.number,
  appear: a.number
}).isRequired]) : null;
process.env.NODE_ENV !== "production" && a.oneOfType([a.string, a.shape({
  enter: a.string,
  exit: a.string,
  active: a.string
}), a.shape({
  enter: a.string,
  enterDone: a.string,
  enterActive: a.string,
  exit: a.string,
  exitDone: a.string,
  exitActive: a.string
})]);
const xd = Z.createContext(null);
var oD = function(t) {
  return t.scrollTop;
}, ul = "unmounted", Ui = "exited", qi = "entering", Bs = "entered", ym = "exiting", Ro = /* @__PURE__ */ function(e) {
  RC(t, e);
  function t(o, r) {
    var i;
    i = e.call(this, o, r) || this;
    var s = r, l = s && !s.isMounting ? o.enter : o.appear, c;
    return i.appearStatus = null, o.in ? l ? (c = Ui, i.appearStatus = qi) : c = Bs : o.unmountOnExit || o.mountOnEnter ? c = ul : c = Ui, i.state = {
      status: c
    }, i.nextCallback = null, i;
  }
  t.getDerivedStateFromProps = function(r, i) {
    var s = r.in;
    return s && i.status === ul ? {
      status: Ui
    } : null;
  };
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.updateStatus(!0, this.appearStatus);
  }, n.componentDidUpdate = function(r) {
    var i = null;
    if (r !== this.props) {
      var s = this.state.status;
      this.props.in ? s !== qi && s !== Bs && (i = qi) : (s === qi || s === Bs) && (i = ym);
    }
    this.updateStatus(!1, i);
  }, n.componentWillUnmount = function() {
    this.cancelNextCallback();
  }, n.getTimeouts = function() {
    var r = this.props.timeout, i, s, l;
    return i = s = l = r, r != null && typeof r != "number" && (i = r.exit, s = r.enter, l = r.appear !== void 0 ? r.appear : s), {
      exit: i,
      enter: s,
      appear: l
    };
  }, n.updateStatus = function(r, i) {
    if (r === void 0 && (r = !1), i !== null)
      if (this.cancelNextCallback(), i === qi) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var s = this.props.nodeRef ? this.props.nodeRef.current : Fs.findDOMNode(this);
          s && oD(s);
        }
        this.performEnter(r);
      } else
        this.performExit();
    else this.props.unmountOnExit && this.state.status === Ui && this.setState({
      status: ul
    });
  }, n.performEnter = function(r) {
    var i = this, s = this.props.enter, l = this.context ? this.context.isMounting : r, c = this.props.nodeRef ? [l] : [Fs.findDOMNode(this), l], u = c[0], d = c[1], f = this.getTimeouts(), p = l ? f.appear : f.enter;
    if (!r && !s || y0.disabled) {
      this.safeSetState({
        status: Bs
      }, function() {
        i.props.onEntered(u);
      });
      return;
    }
    this.props.onEnter(u, d), this.safeSetState({
      status: qi
    }, function() {
      i.props.onEntering(u, d), i.onTransitionEnd(p, function() {
        i.safeSetState({
          status: Bs
        }, function() {
          i.props.onEntered(u, d);
        });
      });
    });
  }, n.performExit = function() {
    var r = this, i = this.props.exit, s = this.getTimeouts(), l = this.props.nodeRef ? void 0 : Fs.findDOMNode(this);
    if (!i || y0.disabled) {
      this.safeSetState({
        status: Ui
      }, function() {
        r.props.onExited(l);
      });
      return;
    }
    this.props.onExit(l), this.safeSetState({
      status: ym
    }, function() {
      r.props.onExiting(l), r.onTransitionEnd(s.exit, function() {
        r.safeSetState({
          status: Ui
        }, function() {
          r.props.onExited(l);
        });
      });
    });
  }, n.cancelNextCallback = function() {
    this.nextCallback !== null && (this.nextCallback.cancel(), this.nextCallback = null);
  }, n.safeSetState = function(r, i) {
    i = this.setNextCallback(i), this.setState(r, i);
  }, n.setNextCallback = function(r) {
    var i = this, s = !0;
    return this.nextCallback = function(l) {
      s && (s = !1, i.nextCallback = null, r(l));
    }, this.nextCallback.cancel = function() {
      s = !1;
    }, this.nextCallback;
  }, n.onTransitionEnd = function(r, i) {
    this.setNextCallback(i);
    var s = this.props.nodeRef ? this.props.nodeRef.current : Fs.findDOMNode(this), l = r == null && !this.props.addEndListener;
    if (!s || l) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var c = this.props.nodeRef ? [this.nextCallback] : [s, this.nextCallback], u = c[0], d = c[1];
      this.props.addEndListener(u, d);
    }
    r != null && setTimeout(this.nextCallback, r);
  }, n.render = function() {
    var r = this.state.status;
    if (r === ul)
      return null;
    var i = this.props, s = i.children;
    i.in, i.mountOnEnter, i.unmountOnExit, i.appear, i.enter, i.exit, i.timeout, i.addEndListener, i.onEnter, i.onEntering, i.onEntered, i.onExit, i.onExiting, i.onExited, i.nodeRef;
    var l = PC(i, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      /* @__PURE__ */ Z.createElement(xd.Provider, {
        value: null
      }, typeof s == "function" ? s(r, l) : Z.cloneElement(Z.Children.only(s), l))
    );
  }, t;
}(Z.Component);
Ro.contextType = xd;
Ro.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: a.shape({
    current: typeof Element > "u" ? a.any : function(e, t, n, o, r, i) {
      var s = e[t];
      return a.instanceOf(s && "ownerDocument" in s ? s.ownerDocument.defaultView.Element : Element)(e, t, n, o, r, i);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: a.oneOfType([a.func.isRequired, a.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: a.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: a.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: a.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: a.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: a.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: a.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function(t) {
    var n = nD;
    t.addEndListener || (n = n.isRequired);
    for (var o = arguments.length, r = new Array(o > 1 ? o - 1 : 0), i = 1; i < o; i++)
      r[i - 1] = arguments[i];
    return n.apply(void 0, [t].concat(r));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: a.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: a.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: a.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: a.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: a.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: a.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: a.func
} : {};
function Is() {
}
Ro.defaultProps = {
  in: !1,
  mountOnEnter: !1,
  unmountOnExit: !1,
  appear: !1,
  enter: !0,
  exit: !0,
  onEnter: Is,
  onEntering: Is,
  onEntered: Is,
  onExit: Is,
  onExiting: Is,
  onExited: Is
};
Ro.UNMOUNTED = ul;
Ro.EXITED = Ui;
Ro.ENTERING = qi;
Ro.ENTERED = Bs;
Ro.EXITING = ym;
function rD(e) {
  if (e === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function ay(e, t) {
  var n = function(i) {
    return t && xl(i) ? t(i) : i;
  }, o = /* @__PURE__ */ Object.create(null);
  return e && iT.map(e, function(r) {
    return r;
  }).forEach(function(r) {
    o[r.key] = n(r);
  }), o;
}
function iD(e, t) {
  e = e || {}, t = t || {};
  function n(d) {
    return d in t ? t[d] : e[d];
  }
  var o = /* @__PURE__ */ Object.create(null), r = [];
  for (var i in e)
    i in t ? r.length && (o[i] = r, r = []) : r.push(i);
  var s, l = {};
  for (var c in t) {
    if (o[c])
      for (s = 0; s < o[c].length; s++) {
        var u = o[c][s];
        l[o[c][s]] = n(u);
      }
    l[c] = n(c);
  }
  for (s = 0; s < r.length; s++)
    l[r[s]] = n(r[s]);
  return l;
}
function Xi(e, t, n) {
  return n[t] != null ? n[t] : e.props[t];
}
function sD(e, t) {
  return ay(e.children, function(n) {
    return Uu(n, {
      onExited: t.bind(null, n),
      in: !0,
      appear: Xi(n, "appear", e),
      enter: Xi(n, "enter", e),
      exit: Xi(n, "exit", e)
    });
  });
}
function aD(e, t, n) {
  var o = ay(e.children), r = iD(t, o);
  return Object.keys(r).forEach(function(i) {
    var s = r[i];
    if (xl(s)) {
      var l = i in t, c = i in o, u = t[i], d = xl(u) && !u.props.in;
      c && (!l || d) ? r[i] = Uu(s, {
        onExited: n.bind(null, s),
        in: !0,
        exit: Xi(s, "exit", e),
        enter: Xi(s, "enter", e)
      }) : !c && l && !d ? r[i] = Uu(s, {
        in: !1
      }) : c && l && xl(u) && (r[i] = Uu(s, {
        onExited: n.bind(null, s),
        in: u.props.in,
        exit: Xi(s, "exit", e),
        enter: Xi(s, "enter", e)
      }));
    }
  }), r;
}
var lD = Object.values || function(e) {
  return Object.keys(e).map(function(t) {
    return e[t];
  });
}, cD = {
  component: "div",
  childFactory: function(t) {
    return t;
  }
}, ly = /* @__PURE__ */ function(e) {
  RC(t, e);
  function t(o, r) {
    var i;
    i = e.call(this, o, r) || this;
    var s = i.handleExited.bind(rD(i));
    return i.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: s,
      firstRender: !0
    }, i;
  }
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, n.componentWillUnmount = function() {
    this.mounted = !1;
  }, t.getDerivedStateFromProps = function(r, i) {
    var s = i.children, l = i.handleExited, c = i.firstRender;
    return {
      children: c ? sD(r, l) : aD(r, s, l),
      firstRender: !1
    };
  }, n.handleExited = function(r, i) {
    var s = ay(this.props.children);
    r.key in s || (r.props.onExited && r.props.onExited(i), this.mounted && this.setState(function(l) {
      var c = fd({}, l.children);
      return delete c[r.key], {
        children: c
      };
    }));
  }, n.render = function() {
    var r = this.props, i = r.component, s = r.childFactory, l = PC(r, ["component", "childFactory"]), c = this.state.contextValue, u = lD(this.state.children).map(s);
    return delete l.appear, delete l.enter, delete l.exit, i === null ? /* @__PURE__ */ Z.createElement(xd.Provider, {
      value: c
    }, u) : /* @__PURE__ */ Z.createElement(xd.Provider, {
      value: c
    }, /* @__PURE__ */ Z.createElement(i, l, u));
  }, t;
}(Z.Component);
ly.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: a.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: a.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: a.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: a.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: a.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: a.func
} : {};
ly.defaultProps = cD;
const cy = (e) => e.scrollTop;
function sa(e, t) {
  const {
    timeout: n,
    easing: o,
    style: r = {}
  } = e;
  return {
    duration: r.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: r.transitionTimingFunction ?? (typeof o == "object" ? o[t.mode] : o),
    delay: r.transitionDelay
  };
}
const uD = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, as = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = Zr(), r = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    addEndListener: i,
    appear: s = !0,
    children: l,
    easing: c,
    in: u,
    onEnter: d,
    onEntered: f,
    onEntering: p,
    onExit: h,
    onExited: g,
    onExiting: m,
    style: y,
    timeout: b = r,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: T = Ro,
    ...v
  } = t, w = $.useRef(null), S = yn(w, Oi(l), n), C = (R) => (A) => {
    if (R) {
      const N = w.current;
      A === void 0 ? R(N) : R(N, A);
    }
  }, E = C(p), P = C((R, A) => {
    cy(R);
    const N = sa({
      style: y,
      timeout: b,
      easing: c
    }, {
      mode: "enter"
    });
    R.style.webkitTransition = o.transitions.create("opacity", N), R.style.transition = o.transitions.create("opacity", N), d && d(R, A);
  }), M = C(f), x = C(m), I = C((R) => {
    const A = sa({
      style: y,
      timeout: b,
      easing: c
    }, {
      mode: "exit"
    });
    R.style.webkitTransition = o.transitions.create("opacity", A), R.style.transition = o.transitions.create("opacity", A), h && h(R);
  }), k = C(g);
  return /* @__PURE__ */ O(T, {
    appear: s,
    in: u,
    nodeRef: w,
    onEnter: P,
    onEntered: M,
    onEntering: E,
    onExit: I,
    onExited: k,
    onExiting: x,
    addEndListener: (R) => {
      i && i(w.current, R);
    },
    timeout: b,
    ...v,
    children: (R, {
      ownerState: A,
      ...N
    }) => /* @__PURE__ */ $.cloneElement(l, {
      style: {
        opacity: 0,
        visibility: R === "exited" && !u ? "hidden" : void 0,
        ...uD[R],
        ...y,
        ...l.props.style
      },
      ref: S,
      ...N
    })
  });
});
process.env.NODE_ENV !== "production" && (as.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: Ei.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function bm(e) {
  return `scale(${e}, ${e ** 2})`;
}
const dD = {
  entering: {
    opacity: 1,
    transform: bm(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, eh = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), Gl = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const {
    addEndListener: o,
    appear: r = !0,
    children: i,
    easing: s,
    in: l,
    onEnter: c,
    onEntered: u,
    onEntering: d,
    onExit: f,
    onExited: p,
    onExiting: h,
    style: g,
    timeout: m = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: y = Ro,
    ...b
  } = t, T = js(), v = $.useRef(), w = Zr(), S = $.useRef(null), C = yn(S, Oi(i), n), E = (A) => (N) => {
    if (A) {
      const L = S.current;
      N === void 0 ? A(L) : A(L, N);
    }
  }, P = E(d), M = E((A, N) => {
    cy(A);
    const {
      duration: L,
      delay: V,
      easing: D
    } = sa({
      style: g,
      timeout: m,
      easing: s
    }, {
      mode: "enter"
    });
    let B;
    m === "auto" ? (B = w.transitions.getAutoHeightDuration(A.clientHeight), v.current = B) : B = L, A.style.transition = [w.transitions.create("opacity", {
      duration: B,
      delay: V
    }), w.transitions.create("transform", {
      duration: eh ? B : B * 0.666,
      delay: V,
      easing: D
    })].join(","), c && c(A, N);
  }), x = E(u), I = E(h), k = E((A) => {
    const {
      duration: N,
      delay: L,
      easing: V
    } = sa({
      style: g,
      timeout: m,
      easing: s
    }, {
      mode: "exit"
    });
    let D;
    m === "auto" ? (D = w.transitions.getAutoHeightDuration(A.clientHeight), v.current = D) : D = N, A.style.transition = [w.transitions.create("opacity", {
      duration: D,
      delay: L
    }), w.transitions.create("transform", {
      duration: eh ? D : D * 0.666,
      delay: eh ? L : L || D * 0.333,
      easing: V
    })].join(","), A.style.opacity = 0, A.style.transform = bm(0.75), f && f(A);
  }), _ = E(p);
  return /* @__PURE__ */ O(y, {
    appear: r,
    in: l,
    nodeRef: S,
    onEnter: M,
    onEntered: x,
    onEntering: P,
    onExit: k,
    onExited: _,
    onExiting: I,
    addEndListener: (A) => {
      m === "auto" && T.start(v.current || 0, A), o && o(S.current, A);
    },
    timeout: m === "auto" ? null : m,
    ...b,
    children: (A, {
      ownerState: N,
      ...L
    }) => /* @__PURE__ */ $.cloneElement(i, {
      style: {
        opacity: 0,
        transform: bm(0.75),
        visibility: A === "exited" && !l ? "hidden" : void 0,
        ...dD[A],
        ...g,
        ...i.props.style
      },
      ref: C,
      ...L
    })
  });
});
process.env.NODE_ENV !== "production" && (Gl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: Ei.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
Gl && (Gl.muiSupportAuto = !0);
var so = "top", Wo = "bottom", Uo = "right", ao = "left", uy = "auto", $c = [so, Wo, Uo, ao], aa = "start", Yl = "end", fD = "clippingParents", IC = "viewport", Ka = "popper", pD = "reference", b0 = /* @__PURE__ */ $c.reduce(function(e, t) {
  return e.concat([t + "-" + aa, t + "-" + Yl]);
}, []), kC = /* @__PURE__ */ [].concat($c, [uy]).reduce(function(e, t) {
  return e.concat([t, t + "-" + aa, t + "-" + Yl]);
}, []), hD = "beforeRead", mD = "read", gD = "afterRead", yD = "beforeMain", bD = "main", vD = "afterMain", xD = "beforeWrite", wD = "write", SD = "afterWrite", TD = [hD, mD, gD, yD, bD, vD, xD, wD, SD];
function Ir(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function Oo(e) {
  if (e == null)
    return window;
  if (e.toString() !== "[object Window]") {
    var t = e.ownerDocument;
    return t && t.defaultView || window;
  }
  return e;
}
function ls(e) {
  var t = Oo(e).Element;
  return e instanceof t || e instanceof Element;
}
function jo(e) {
  var t = Oo(e).HTMLElement;
  return e instanceof t || e instanceof HTMLElement;
}
function dy(e) {
  if (typeof ShadowRoot > "u")
    return !1;
  var t = Oo(e).ShadowRoot;
  return e instanceof t || e instanceof ShadowRoot;
}
function CD(e) {
  var t = e.state;
  Object.keys(t.elements).forEach(function(n) {
    var o = t.styles[n] || {}, r = t.attributes[n] || {}, i = t.elements[n];
    !jo(i) || !Ir(i) || (Object.assign(i.style, o), Object.keys(r).forEach(function(s) {
      var l = r[s];
      l === !1 ? i.removeAttribute(s) : i.setAttribute(s, l === !0 ? "" : l);
    }));
  });
}
function ED(e) {
  var t = e.state, n = {
    popper: {
      position: t.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(t.elements.popper.style, n.popper), t.styles = n, t.elements.arrow && Object.assign(t.elements.arrow.style, n.arrow), function() {
    Object.keys(t.elements).forEach(function(o) {
      var r = t.elements[o], i = t.attributes[o] || {}, s = Object.keys(t.styles.hasOwnProperty(o) ? t.styles[o] : n[o]), l = s.reduce(function(c, u) {
        return c[u] = "", c;
      }, {});
      !jo(r) || !Ir(r) || (Object.assign(r.style, l), Object.keys(i).forEach(function(c) {
        r.removeAttribute(c);
      }));
    });
  };
}
const OD = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: CD,
  effect: ED,
  requires: ["computeStyles"]
};
function Sr(e) {
  return e.split("-")[0];
}
var os = Math.max, wd = Math.min, la = Math.round;
function vm() {
  var e = navigator.userAgentData;
  return e != null && e.brands && Array.isArray(e.brands) ? e.brands.map(function(t) {
    return t.brand + "/" + t.version;
  }).join(" ") : navigator.userAgent;
}
function $C() {
  return !/^((?!chrome|android).)*safari/i.test(vm());
}
function ca(e, t, n) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  var o = e.getBoundingClientRect(), r = 1, i = 1;
  t && jo(e) && (r = e.offsetWidth > 0 && la(o.width) / e.offsetWidth || 1, i = e.offsetHeight > 0 && la(o.height) / e.offsetHeight || 1);
  var s = ls(e) ? Oo(e) : window, l = s.visualViewport, c = !$C() && n, u = (o.left + (c && l ? l.offsetLeft : 0)) / r, d = (o.top + (c && l ? l.offsetTop : 0)) / i, f = o.width / r, p = o.height / i;
  return {
    width: f,
    height: p,
    top: d,
    right: u + f,
    bottom: d + p,
    left: u,
    x: u,
    y: d
  };
}
function fy(e) {
  var t = ca(e), n = e.offsetWidth, o = e.offsetHeight;
  return Math.abs(t.width - n) <= 1 && (n = t.width), Math.abs(t.height - o) <= 1 && (o = t.height), {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: n,
    height: o
  };
}
function NC(e, t) {
  var n = t.getRootNode && t.getRootNode();
  if (e.contains(t))
    return !0;
  if (n && dy(n)) {
    var o = t;
    do {
      if (o && e.isSameNode(o))
        return !0;
      o = o.parentNode || o.host;
    } while (o);
  }
  return !1;
}
function Ur(e) {
  return Oo(e).getComputedStyle(e);
}
function PD(e) {
  return ["table", "td", "th"].indexOf(Ir(e)) >= 0;
}
function Ri(e) {
  return ((ls(e) ? e.ownerDocument : (
    // $FlowFixMe[prop-missing]
    e.document
  )) || window.document).documentElement;
}
function Pf(e) {
  return Ir(e) === "html" ? e : (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    e.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e.parentNode || // DOM Element detected
    (dy(e) ? e.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    Ri(e)
  );
}
function v0(e) {
  return !jo(e) || // https://github.com/popperjs/popper-core/issues/837
  Ur(e).position === "fixed" ? null : e.offsetParent;
}
function RD(e) {
  var t = /firefox/i.test(vm()), n = /Trident/i.test(vm());
  if (n && jo(e)) {
    var o = Ur(e);
    if (o.position === "fixed")
      return null;
  }
  var r = Pf(e);
  for (dy(r) && (r = r.host); jo(r) && ["html", "body"].indexOf(Ir(r)) < 0; ) {
    var i = Ur(r);
    if (i.transform !== "none" || i.perspective !== "none" || i.contain === "paint" || ["transform", "perspective"].indexOf(i.willChange) !== -1 || t && i.willChange === "filter" || t && i.filter && i.filter !== "none")
      return r;
    r = r.parentNode;
  }
  return null;
}
function Nc(e) {
  for (var t = Oo(e), n = v0(e); n && PD(n) && Ur(n).position === "static"; )
    n = v0(n);
  return n && (Ir(n) === "html" || Ir(n) === "body" && Ur(n).position === "static") ? t : n || RD(e) || t;
}
function py(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function Tl(e, t, n) {
  return os(e, wd(t, n));
}
function ID(e, t, n) {
  var o = Tl(e, t, n);
  return o > n ? n : o;
}
function MC() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function AC(e) {
  return Object.assign({}, MC(), e);
}
function _C(e, t) {
  return t.reduce(function(n, o) {
    return n[o] = e, n;
  }, {});
}
var kD = function(t, n) {
  return t = typeof t == "function" ? t(Object.assign({}, n.rects, {
    placement: n.placement
  })) : t, AC(typeof t != "number" ? t : _C(t, $c));
};
function $D(e) {
  var t, n = e.state, o = e.name, r = e.options, i = n.elements.arrow, s = n.modifiersData.popperOffsets, l = Sr(n.placement), c = py(l), u = [ao, Uo].indexOf(l) >= 0, d = u ? "height" : "width";
  if (!(!i || !s)) {
    var f = kD(r.padding, n), p = fy(i), h = c === "y" ? so : ao, g = c === "y" ? Wo : Uo, m = n.rects.reference[d] + n.rects.reference[c] - s[c] - n.rects.popper[d], y = s[c] - n.rects.reference[c], b = Nc(i), T = b ? c === "y" ? b.clientHeight || 0 : b.clientWidth || 0 : 0, v = m / 2 - y / 2, w = f[h], S = T - p[d] - f[g], C = T / 2 - p[d] / 2 + v, E = Tl(w, C, S), P = c;
    n.modifiersData[o] = (t = {}, t[P] = E, t.centerOffset = E - C, t);
  }
}
function ND(e) {
  var t = e.state, n = e.options, o = n.element, r = o === void 0 ? "[data-popper-arrow]" : o;
  r != null && (typeof r == "string" && (r = t.elements.popper.querySelector(r), !r) || NC(t.elements.popper, r) && (t.elements.arrow = r));
}
const MD = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: $D,
  effect: ND,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function ua(e) {
  return e.split("-")[1];
}
var AD = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function _D(e, t) {
  var n = e.x, o = e.y, r = t.devicePixelRatio || 1;
  return {
    x: la(n * r) / r || 0,
    y: la(o * r) / r || 0
  };
}
function x0(e) {
  var t, n = e.popper, o = e.popperRect, r = e.placement, i = e.variation, s = e.offsets, l = e.position, c = e.gpuAcceleration, u = e.adaptive, d = e.roundOffsets, f = e.isFixed, p = s.x, h = p === void 0 ? 0 : p, g = s.y, m = g === void 0 ? 0 : g, y = typeof d == "function" ? d({
    x: h,
    y: m
  }) : {
    x: h,
    y: m
  };
  h = y.x, m = y.y;
  var b = s.hasOwnProperty("x"), T = s.hasOwnProperty("y"), v = ao, w = so, S = window;
  if (u) {
    var C = Nc(n), E = "clientHeight", P = "clientWidth";
    if (C === Oo(n) && (C = Ri(n), Ur(C).position !== "static" && l === "absolute" && (E = "scrollHeight", P = "scrollWidth")), C = C, r === so || (r === ao || r === Uo) && i === Yl) {
      w = Wo;
      var M = f && C === S && S.visualViewport ? S.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        C[E]
      );
      m -= M - o.height, m *= c ? 1 : -1;
    }
    if (r === ao || (r === so || r === Wo) && i === Yl) {
      v = Uo;
      var x = f && C === S && S.visualViewport ? S.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        C[P]
      );
      h -= x - o.width, h *= c ? 1 : -1;
    }
  }
  var I = Object.assign({
    position: l
  }, u && AD), k = d === !0 ? _D({
    x: h,
    y: m
  }, Oo(n)) : {
    x: h,
    y: m
  };
  if (h = k.x, m = k.y, c) {
    var _;
    return Object.assign({}, I, (_ = {}, _[w] = T ? "0" : "", _[v] = b ? "0" : "", _.transform = (S.devicePixelRatio || 1) <= 1 ? "translate(" + h + "px, " + m + "px)" : "translate3d(" + h + "px, " + m + "px, 0)", _));
  }
  return Object.assign({}, I, (t = {}, t[w] = T ? m + "px" : "", t[v] = b ? h + "px" : "", t.transform = "", t));
}
function DD(e) {
  var t = e.state, n = e.options, o = n.gpuAcceleration, r = o === void 0 ? !0 : o, i = n.adaptive, s = i === void 0 ? !0 : i, l = n.roundOffsets, c = l === void 0 ? !0 : l, u = {
    placement: Sr(t.placement),
    variation: ua(t.placement),
    popper: t.elements.popper,
    popperRect: t.rects.popper,
    gpuAcceleration: r,
    isFixed: t.options.strategy === "fixed"
  };
  t.modifiersData.popperOffsets != null && (t.styles.popper = Object.assign({}, t.styles.popper, x0(Object.assign({}, u, {
    offsets: t.modifiersData.popperOffsets,
    position: t.options.strategy,
    adaptive: s,
    roundOffsets: c
  })))), t.modifiersData.arrow != null && (t.styles.arrow = Object.assign({}, t.styles.arrow, x0(Object.assign({}, u, {
    offsets: t.modifiersData.arrow,
    position: "absolute",
    adaptive: !1,
    roundOffsets: c
  })))), t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-placement": t.placement
  });
}
const LD = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: DD,
  data: {}
};
var gu = {
  passive: !0
};
function BD(e) {
  var t = e.state, n = e.instance, o = e.options, r = o.scroll, i = r === void 0 ? !0 : r, s = o.resize, l = s === void 0 ? !0 : s, c = Oo(t.elements.popper), u = [].concat(t.scrollParents.reference, t.scrollParents.popper);
  return i && u.forEach(function(d) {
    d.addEventListener("scroll", n.update, gu);
  }), l && c.addEventListener("resize", n.update, gu), function() {
    i && u.forEach(function(d) {
      d.removeEventListener("scroll", n.update, gu);
    }), l && c.removeEventListener("resize", n.update, gu);
  };
}
const VD = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: function() {
  },
  effect: BD,
  data: {}
};
var FD = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function Qu(e) {
  return e.replace(/left|right|bottom|top/g, function(t) {
    return FD[t];
  });
}
var jD = {
  start: "end",
  end: "start"
};
function w0(e) {
  return e.replace(/start|end/g, function(t) {
    return jD[t];
  });
}
function hy(e) {
  var t = Oo(e), n = t.pageXOffset, o = t.pageYOffset;
  return {
    scrollLeft: n,
    scrollTop: o
  };
}
function my(e) {
  return ca(Ri(e)).left + hy(e).scrollLeft;
}
function zD(e, t) {
  var n = Oo(e), o = Ri(e), r = n.visualViewport, i = o.clientWidth, s = o.clientHeight, l = 0, c = 0;
  if (r) {
    i = r.width, s = r.height;
    var u = $C();
    (u || !u && t === "fixed") && (l = r.offsetLeft, c = r.offsetTop);
  }
  return {
    width: i,
    height: s,
    x: l + my(e),
    y: c
  };
}
function HD(e) {
  var t, n = Ri(e), o = hy(e), r = (t = e.ownerDocument) == null ? void 0 : t.body, i = os(n.scrollWidth, n.clientWidth, r ? r.scrollWidth : 0, r ? r.clientWidth : 0), s = os(n.scrollHeight, n.clientHeight, r ? r.scrollHeight : 0, r ? r.clientHeight : 0), l = -o.scrollLeft + my(e), c = -o.scrollTop;
  return Ur(r || n).direction === "rtl" && (l += os(n.clientWidth, r ? r.clientWidth : 0) - i), {
    width: i,
    height: s,
    x: l,
    y: c
  };
}
function gy(e) {
  var t = Ur(e), n = t.overflow, o = t.overflowX, r = t.overflowY;
  return /auto|scroll|overlay|hidden/.test(n + r + o);
}
function DC(e) {
  return ["html", "body", "#document"].indexOf(Ir(e)) >= 0 ? e.ownerDocument.body : jo(e) && gy(e) ? e : DC(Pf(e));
}
function Cl(e, t) {
  var n;
  t === void 0 && (t = []);
  var o = DC(e), r = o === ((n = e.ownerDocument) == null ? void 0 : n.body), i = Oo(o), s = r ? [i].concat(i.visualViewport || [], gy(o) ? o : []) : o, l = t.concat(s);
  return r ? l : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    l.concat(Cl(Pf(s)))
  );
}
function xm(e) {
  return Object.assign({}, e, {
    left: e.x,
    top: e.y,
    right: e.x + e.width,
    bottom: e.y + e.height
  });
}
function WD(e, t) {
  var n = ca(e, !1, t === "fixed");
  return n.top = n.top + e.clientTop, n.left = n.left + e.clientLeft, n.bottom = n.top + e.clientHeight, n.right = n.left + e.clientWidth, n.width = e.clientWidth, n.height = e.clientHeight, n.x = n.left, n.y = n.top, n;
}
function S0(e, t, n) {
  return t === IC ? xm(zD(e, n)) : ls(t) ? WD(t, n) : xm(HD(Ri(e)));
}
function UD(e) {
  var t = Cl(Pf(e)), n = ["absolute", "fixed"].indexOf(Ur(e).position) >= 0, o = n && jo(e) ? Nc(e) : e;
  return ls(o) ? t.filter(function(r) {
    return ls(r) && NC(r, o) && Ir(r) !== "body";
  }) : [];
}
function qD(e, t, n, o) {
  var r = t === "clippingParents" ? UD(e) : [].concat(t), i = [].concat(r, [n]), s = i[0], l = i.reduce(function(c, u) {
    var d = S0(e, u, o);
    return c.top = os(d.top, c.top), c.right = wd(d.right, c.right), c.bottom = wd(d.bottom, c.bottom), c.left = os(d.left, c.left), c;
  }, S0(e, s, o));
  return l.width = l.right - l.left, l.height = l.bottom - l.top, l.x = l.left, l.y = l.top, l;
}
function LC(e) {
  var t = e.reference, n = e.element, o = e.placement, r = o ? Sr(o) : null, i = o ? ua(o) : null, s = t.x + t.width / 2 - n.width / 2, l = t.y + t.height / 2 - n.height / 2, c;
  switch (r) {
    case so:
      c = {
        x: s,
        y: t.y - n.height
      };
      break;
    case Wo:
      c = {
        x: s,
        y: t.y + t.height
      };
      break;
    case Uo:
      c = {
        x: t.x + t.width,
        y: l
      };
      break;
    case ao:
      c = {
        x: t.x - n.width,
        y: l
      };
      break;
    default:
      c = {
        x: t.x,
        y: t.y
      };
  }
  var u = r ? py(r) : null;
  if (u != null) {
    var d = u === "y" ? "height" : "width";
    switch (i) {
      case aa:
        c[u] = c[u] - (t[d] / 2 - n[d] / 2);
        break;
      case Yl:
        c[u] = c[u] + (t[d] / 2 - n[d] / 2);
        break;
    }
  }
  return c;
}
function Xl(e, t) {
  t === void 0 && (t = {});
  var n = t, o = n.placement, r = o === void 0 ? e.placement : o, i = n.strategy, s = i === void 0 ? e.strategy : i, l = n.boundary, c = l === void 0 ? fD : l, u = n.rootBoundary, d = u === void 0 ? IC : u, f = n.elementContext, p = f === void 0 ? Ka : f, h = n.altBoundary, g = h === void 0 ? !1 : h, m = n.padding, y = m === void 0 ? 0 : m, b = AC(typeof y != "number" ? y : _C(y, $c)), T = p === Ka ? pD : Ka, v = e.rects.popper, w = e.elements[g ? T : p], S = qD(ls(w) ? w : w.contextElement || Ri(e.elements.popper), c, d, s), C = ca(e.elements.reference), E = LC({
    reference: C,
    element: v,
    placement: r
  }), P = xm(Object.assign({}, v, E)), M = p === Ka ? P : C, x = {
    top: S.top - M.top + b.top,
    bottom: M.bottom - S.bottom + b.bottom,
    left: S.left - M.left + b.left,
    right: M.right - S.right + b.right
  }, I = e.modifiersData.offset;
  if (p === Ka && I) {
    var k = I[r];
    Object.keys(x).forEach(function(_) {
      var R = [Uo, Wo].indexOf(_) >= 0 ? 1 : -1, A = [so, Wo].indexOf(_) >= 0 ? "y" : "x";
      x[_] += k[A] * R;
    });
  }
  return x;
}
function KD(e, t) {
  t === void 0 && (t = {});
  var n = t, o = n.placement, r = n.boundary, i = n.rootBoundary, s = n.padding, l = n.flipVariations, c = n.allowedAutoPlacements, u = c === void 0 ? kC : c, d = ua(o), f = d ? l ? b0 : b0.filter(function(g) {
    return ua(g) === d;
  }) : $c, p = f.filter(function(g) {
    return u.indexOf(g) >= 0;
  });
  p.length === 0 && (p = f);
  var h = p.reduce(function(g, m) {
    return g[m] = Xl(e, {
      placement: m,
      boundary: r,
      rootBoundary: i,
      padding: s
    })[Sr(m)], g;
  }, {});
  return Object.keys(h).sort(function(g, m) {
    return h[g] - h[m];
  });
}
function GD(e) {
  if (Sr(e) === uy)
    return [];
  var t = Qu(e);
  return [w0(e), t, w0(t)];
}
function YD(e) {
  var t = e.state, n = e.options, o = e.name;
  if (!t.modifiersData[o]._skip) {
    for (var r = n.mainAxis, i = r === void 0 ? !0 : r, s = n.altAxis, l = s === void 0 ? !0 : s, c = n.fallbackPlacements, u = n.padding, d = n.boundary, f = n.rootBoundary, p = n.altBoundary, h = n.flipVariations, g = h === void 0 ? !0 : h, m = n.allowedAutoPlacements, y = t.options.placement, b = Sr(y), T = b === y, v = c || (T || !g ? [Qu(y)] : GD(y)), w = [y].concat(v).reduce(function(G, K) {
      return G.concat(Sr(K) === uy ? KD(t, {
        placement: K,
        boundary: d,
        rootBoundary: f,
        padding: u,
        flipVariations: g,
        allowedAutoPlacements: m
      }) : K);
    }, []), S = t.rects.reference, C = t.rects.popper, E = /* @__PURE__ */ new Map(), P = !0, M = w[0], x = 0; x < w.length; x++) {
      var I = w[x], k = Sr(I), _ = ua(I) === aa, R = [so, Wo].indexOf(k) >= 0, A = R ? "width" : "height", N = Xl(t, {
        placement: I,
        boundary: d,
        rootBoundary: f,
        altBoundary: p,
        padding: u
      }), L = R ? _ ? Uo : ao : _ ? Wo : so;
      S[A] > C[A] && (L = Qu(L));
      var V = Qu(L), D = [];
      if (i && D.push(N[k] <= 0), l && D.push(N[L] <= 0, N[V] <= 0), D.every(function(G) {
        return G;
      })) {
        M = I, P = !1;
        break;
      }
      E.set(I, D);
    }
    if (P)
      for (var B = g ? 3 : 1, F = function(K) {
        var te = w.find(function(ne) {
          var W = E.get(ne);
          if (W)
            return W.slice(0, K).every(function(ee) {
              return ee;
            });
        });
        if (te)
          return M = te, "break";
      }, U = B; U > 0; U--) {
        var q = F(U);
        if (q === "break") break;
      }
    t.placement !== M && (t.modifiersData[o]._skip = !0, t.placement = M, t.reset = !0);
  }
}
const XD = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: YD,
  requiresIfExists: ["offset"],
  data: {
    _skip: !1
  }
};
function T0(e, t, n) {
  return n === void 0 && (n = {
    x: 0,
    y: 0
  }), {
    top: e.top - t.height - n.y,
    right: e.right - t.width + n.x,
    bottom: e.bottom - t.height + n.y,
    left: e.left - t.width - n.x
  };
}
function C0(e) {
  return [so, Uo, Wo, ao].some(function(t) {
    return e[t] >= 0;
  });
}
function ZD(e) {
  var t = e.state, n = e.name, o = t.rects.reference, r = t.rects.popper, i = t.modifiersData.preventOverflow, s = Xl(t, {
    elementContext: "reference"
  }), l = Xl(t, {
    altBoundary: !0
  }), c = T0(s, o), u = T0(l, r, i), d = C0(c), f = C0(u);
  t.modifiersData[n] = {
    referenceClippingOffsets: c,
    popperEscapeOffsets: u,
    isReferenceHidden: d,
    hasPopperEscaped: f
  }, t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-reference-hidden": d,
    "data-popper-escaped": f
  });
}
const QD = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: ZD
};
function JD(e, t, n) {
  var o = Sr(e), r = [ao, so].indexOf(o) >= 0 ? -1 : 1, i = typeof n == "function" ? n(Object.assign({}, t, {
    placement: e
  })) : n, s = i[0], l = i[1];
  return s = s || 0, l = (l || 0) * r, [ao, Uo].indexOf(o) >= 0 ? {
    x: l,
    y: s
  } : {
    x: s,
    y: l
  };
}
function eL(e) {
  var t = e.state, n = e.options, o = e.name, r = n.offset, i = r === void 0 ? [0, 0] : r, s = kC.reduce(function(d, f) {
    return d[f] = JD(f, t.rects, i), d;
  }, {}), l = s[t.placement], c = l.x, u = l.y;
  t.modifiersData.popperOffsets != null && (t.modifiersData.popperOffsets.x += c, t.modifiersData.popperOffsets.y += u), t.modifiersData[o] = s;
}
const tL = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: eL
};
function nL(e) {
  var t = e.state, n = e.name;
  t.modifiersData[n] = LC({
    reference: t.rects.reference,
    element: t.rects.popper,
    placement: t.placement
  });
}
const oL = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: nL,
  data: {}
};
function rL(e) {
  return e === "x" ? "y" : "x";
}
function iL(e) {
  var t = e.state, n = e.options, o = e.name, r = n.mainAxis, i = r === void 0 ? !0 : r, s = n.altAxis, l = s === void 0 ? !1 : s, c = n.boundary, u = n.rootBoundary, d = n.altBoundary, f = n.padding, p = n.tether, h = p === void 0 ? !0 : p, g = n.tetherOffset, m = g === void 0 ? 0 : g, y = Xl(t, {
    boundary: c,
    rootBoundary: u,
    padding: f,
    altBoundary: d
  }), b = Sr(t.placement), T = ua(t.placement), v = !T, w = py(b), S = rL(w), C = t.modifiersData.popperOffsets, E = t.rects.reference, P = t.rects.popper, M = typeof m == "function" ? m(Object.assign({}, t.rects, {
    placement: t.placement
  })) : m, x = typeof M == "number" ? {
    mainAxis: M,
    altAxis: M
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, M), I = t.modifiersData.offset ? t.modifiersData.offset[t.placement] : null, k = {
    x: 0,
    y: 0
  };
  if (C) {
    if (i) {
      var _, R = w === "y" ? so : ao, A = w === "y" ? Wo : Uo, N = w === "y" ? "height" : "width", L = C[w], V = L + y[R], D = L - y[A], B = h ? -P[N] / 2 : 0, F = T === aa ? E[N] : P[N], U = T === aa ? -P[N] : -E[N], q = t.elements.arrow, G = h && q ? fy(q) : {
        width: 0,
        height: 0
      }, K = t.modifiersData["arrow#persistent"] ? t.modifiersData["arrow#persistent"].padding : MC(), te = K[R], ne = K[A], W = Tl(0, E[N], G[N]), ee = v ? E[N] / 2 - B - W - te - x.mainAxis : F - W - te - x.mainAxis, Y = v ? -E[N] / 2 + B + W + ne + x.mainAxis : U + W + ne + x.mainAxis, re = t.elements.arrow && Nc(t.elements.arrow), z = re ? w === "y" ? re.clientTop || 0 : re.clientLeft || 0 : 0, de = (_ = I == null ? void 0 : I[w]) != null ? _ : 0, ue = L + ee - de - z, xe = L + Y - de, _e = Tl(h ? wd(V, ue) : V, L, h ? os(D, xe) : D);
      C[w] = _e, k[w] = _e - L;
    }
    if (l) {
      var we, De = w === "x" ? so : ao, Ee = w === "x" ? Wo : Uo, Ve = C[S], Me = S === "y" ? "height" : "width", j = Ve + y[De], J = Ve - y[Ee], ie = [so, ao].indexOf(b) !== -1, Q = (we = I == null ? void 0 : I[S]) != null ? we : 0, H = ie ? j : Ve - E[Me] - P[Me] - Q + x.altAxis, X = ie ? Ve + E[Me] + P[Me] - Q - x.altAxis : J, se = h && ie ? ID(H, Ve, X) : Tl(h ? H : j, Ve, h ? X : J);
      C[S] = se, k[S] = se - Ve;
    }
    t.modifiersData[o] = k;
  }
}
const sL = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: iL,
  requiresIfExists: ["offset"]
};
function aL(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function lL(e) {
  return e === Oo(e) || !jo(e) ? hy(e) : aL(e);
}
function cL(e) {
  var t = e.getBoundingClientRect(), n = la(t.width) / e.offsetWidth || 1, o = la(t.height) / e.offsetHeight || 1;
  return n !== 1 || o !== 1;
}
function uL(e, t, n) {
  n === void 0 && (n = !1);
  var o = jo(t), r = jo(t) && cL(t), i = Ri(t), s = ca(e, r, n), l = {
    scrollLeft: 0,
    scrollTop: 0
  }, c = {
    x: 0,
    y: 0
  };
  return (o || !o && !n) && ((Ir(t) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  gy(i)) && (l = lL(t)), jo(t) ? (c = ca(t, !0), c.x += t.clientLeft, c.y += t.clientTop) : i && (c.x = my(i))), {
    x: s.left + l.scrollLeft - c.x,
    y: s.top + l.scrollTop - c.y,
    width: s.width,
    height: s.height
  };
}
function dL(e) {
  var t = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), o = [];
  e.forEach(function(i) {
    t.set(i.name, i);
  });
  function r(i) {
    n.add(i.name);
    var s = [].concat(i.requires || [], i.requiresIfExists || []);
    s.forEach(function(l) {
      if (!n.has(l)) {
        var c = t.get(l);
        c && r(c);
      }
    }), o.push(i);
  }
  return e.forEach(function(i) {
    n.has(i.name) || r(i);
  }), o;
}
function fL(e) {
  var t = dL(e);
  return TD.reduce(function(n, o) {
    return n.concat(t.filter(function(r) {
      return r.phase === o;
    }));
  }, []);
}
function pL(e) {
  var t;
  return function() {
    return t || (t = new Promise(function(n) {
      Promise.resolve().then(function() {
        t = void 0, n(e());
      });
    })), t;
  };
}
function hL(e) {
  var t = e.reduce(function(n, o) {
    var r = n[o.name];
    return n[o.name] = r ? Object.assign({}, r, o, {
      options: Object.assign({}, r.options, o.options),
      data: Object.assign({}, r.data, o.data)
    }) : o, n;
  }, {});
  return Object.keys(t).map(function(n) {
    return t[n];
  });
}
var E0 = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function O0() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return !t.some(function(o) {
    return !(o && typeof o.getBoundingClientRect == "function");
  });
}
function mL(e) {
  e === void 0 && (e = {});
  var t = e, n = t.defaultModifiers, o = n === void 0 ? [] : n, r = t.defaultOptions, i = r === void 0 ? E0 : r;
  return function(l, c, u) {
    u === void 0 && (u = i);
    var d = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, E0, i),
      modifiersData: {},
      elements: {
        reference: l,
        popper: c
      },
      attributes: {},
      styles: {}
    }, f = [], p = !1, h = {
      state: d,
      setOptions: function(b) {
        var T = typeof b == "function" ? b(d.options) : b;
        m(), d.options = Object.assign({}, i, d.options, T), d.scrollParents = {
          reference: ls(l) ? Cl(l) : l.contextElement ? Cl(l.contextElement) : [],
          popper: Cl(c)
        };
        var v = fL(hL([].concat(o, d.options.modifiers)));
        return d.orderedModifiers = v.filter(function(w) {
          return w.enabled;
        }), g(), h.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function() {
        if (!p) {
          var b = d.elements, T = b.reference, v = b.popper;
          if (O0(T, v)) {
            d.rects = {
              reference: uL(T, Nc(v), d.options.strategy === "fixed"),
              popper: fy(v)
            }, d.reset = !1, d.placement = d.options.placement, d.orderedModifiers.forEach(function(x) {
              return d.modifiersData[x.name] = Object.assign({}, x.data);
            });
            for (var w = 0; w < d.orderedModifiers.length; w++) {
              if (d.reset === !0) {
                d.reset = !1, w = -1;
                continue;
              }
              var S = d.orderedModifiers[w], C = S.fn, E = S.options, P = E === void 0 ? {} : E, M = S.name;
              typeof C == "function" && (d = C({
                state: d,
                options: P,
                name: M,
                instance: h
              }) || d);
            }
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: pL(function() {
        return new Promise(function(y) {
          h.forceUpdate(), y(d);
        });
      }),
      destroy: function() {
        m(), p = !0;
      }
    };
    if (!O0(l, c))
      return h;
    h.setOptions(u).then(function(y) {
      !p && u.onFirstUpdate && u.onFirstUpdate(y);
    });
    function g() {
      d.orderedModifiers.forEach(function(y) {
        var b = y.name, T = y.options, v = T === void 0 ? {} : T, w = y.effect;
        if (typeof w == "function") {
          var S = w({
            state: d,
            name: b,
            instance: h,
            options: v
          }), C = function() {
          };
          f.push(S || C);
        }
      });
    }
    function m() {
      f.forEach(function(y) {
        return y();
      }), f = [];
    }
    return h;
  };
}
var gL = [VD, oL, LD, OD, tL, XD, sL, MD, QD], yL = /* @__PURE__ */ mL({
  defaultModifiers: gL
});
function bL(e) {
  return typeof e == "function" ? e() : e;
}
const da = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const {
    children: o,
    container: r,
    disablePortal: i = !1
  } = t, [s, l] = $.useState(null), c = yn(/* @__PURE__ */ $.isValidElement(o) ? Oi(o) : null, n);
  if (or(() => {
    i || l(bL(r) || document.body);
  }, [r, i]), or(() => {
    if (s && !i)
      return md(n, s), () => {
        md(n, null);
      };
  }, [n, s, i]), i) {
    if (/* @__PURE__ */ $.isValidElement(o)) {
      const u = {
        ref: c
      };
      return /* @__PURE__ */ $.cloneElement(o, u);
    }
    return o;
  }
  return s && /* @__PURE__ */ aT.createPortal(o, s);
});
process.env.NODE_ENV !== "production" && (da.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: a.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Rr, a.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool
});
process.env.NODE_ENV !== "production" && (da.propTypes = Rc(da.propTypes));
function vL(e) {
  return ot("MuiPopper", e);
}
at("MuiPopper", ["root"]);
function xL(e, t) {
  if (t === "ltr")
    return e;
  switch (e) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return e;
  }
}
function Sd(e) {
  return typeof e == "function" ? e() : e;
}
function Rf(e) {
  return e.nodeType !== void 0;
}
function wL(e) {
  return !Rf(e);
}
const SL = (e) => {
  const {
    classes: t
  } = e;
  return st({
    root: ["root"]
  }, vL, t);
}, TL = {}, CL = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const {
    anchorEl: o,
    children: r,
    direction: i,
    disablePortal: s,
    modifiers: l,
    open: c,
    placement: u,
    popperOptions: d,
    popperRef: f,
    slotProps: p = {},
    slots: h = {},
    TransitionProps: g,
    // @ts-ignore internal logic
    ownerState: m,
    // prevent from spreading to DOM, it can come from the parent component e.g. Select.
    ...y
  } = t, b = $.useRef(null), T = yn(b, n), v = $.useRef(null), w = yn(v, f), S = $.useRef(w);
  or(() => {
    S.current = w;
  }, [w]), $.useImperativeHandle(f, () => v.current, []);
  const C = xL(u, i), [E, P] = $.useState(C), [M, x] = $.useState(Sd(o));
  $.useEffect(() => {
    v.current && v.current.forceUpdate();
  }), $.useEffect(() => {
    o && x(Sd(o));
  }, [o]), or(() => {
    if (!M || !c)
      return;
    const A = (V) => {
      P(V.placement);
    };
    if (process.env.NODE_ENV !== "production" && M && Rf(M) && M.nodeType === 1) {
      const V = M.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && V.top === 0 && V.left === 0 && V.right === 0 && V.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    let N = [{
      name: "preventOverflow",
      options: {
        altBoundary: s
      }
    }, {
      name: "flip",
      options: {
        altBoundary: s
      }
    }, {
      name: "onUpdate",
      enabled: !0,
      phase: "afterWrite",
      fn: ({
        state: V
      }) => {
        A(V);
      }
    }];
    l != null && (N = N.concat(l)), d && d.modifiers != null && (N = N.concat(d.modifiers));
    const L = yL(M, b.current, {
      placement: C,
      ...d,
      modifiers: N
    });
    return S.current(L), () => {
      L.destroy(), S.current(null);
    };
  }, [M, s, l, c, d, C]);
  const I = {
    placement: E
  };
  g !== null && (I.TransitionProps = g);
  const k = SL(t), _ = h.root ?? "div", R = yd({
    elementType: _,
    externalSlotProps: p.root,
    externalForwardedProps: y,
    additionalProps: {
      role: "tooltip",
      ref: T
    },
    ownerState: t,
    className: k.root
  });
  return /* @__PURE__ */ O(_, {
    ...R,
    children: typeof r == "function" ? r(I) : r
  });
}), BC = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const {
    anchorEl: o,
    children: r,
    container: i,
    direction: s = "ltr",
    disablePortal: l = !1,
    keepMounted: c = !1,
    modifiers: u,
    open: d,
    placement: f = "bottom",
    popperOptions: p = TL,
    popperRef: h,
    style: g,
    transition: m = !1,
    slotProps: y = {},
    slots: b = {},
    ...T
  } = t, [v, w] = $.useState(!0), S = () => {
    w(!1);
  }, C = () => {
    w(!0);
  };
  if (!c && !d && (!m || v))
    return null;
  let E;
  if (i)
    E = i;
  else if (o) {
    const x = Sd(o);
    E = x && Rf(x) ? Hn(x).body : Hn(null).body;
  }
  const P = !d && c && (!m || v) ? "none" : void 0, M = m ? {
    in: d,
    onEnter: S,
    onExited: C
  } : void 0;
  return /* @__PURE__ */ O(da, {
    disablePortal: l,
    container: E,
    children: /* @__PURE__ */ O(CL, {
      anchorEl: o,
      direction: s,
      disablePortal: l,
      modifiers: u,
      ref: n,
      open: m ? !v : d,
      placement: f,
      popperOptions: p,
      popperRef: h,
      slotProps: y,
      slots: b,
      ...T,
      style: {
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: "fixed",
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display: P,
        ...g
      },
      TransitionProps: M,
      children: r
    })
  });
});
process.env.NODE_ENV !== "production" && (BC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: rr(a.oneOfType([Rr, a.object, a.func]), (e) => {
    if (e.open) {
      const t = Sd(e.anchorEl);
      if (t && Rf(t) && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || wL(t) && t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join(`
`));
    }
    return null;
  }),
  /**
   * Popper render function or node.
   */
  children: a.oneOfType([a.node, a.func]),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Rr, a.func]),
  /**
   * Direction of the text.
   * @default 'ltr'
   */
  direction: a.oneOf(["ltr", "rtl"]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: a.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: a.arrayOf(a.shape({
    data: a.object,
    effect: a.func,
    enabled: a.bool,
    fn: a.func,
    name: a.any,
    options: a.object,
    phase: a.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: a.arrayOf(a.string),
    requiresIfExists: a.arrayOf(a.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: a.shape({
    modifiers: a.array,
    onFirstUpdate: a.func,
    placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: a.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: uo,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: a.shape({
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    root: a.elementType
  }),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: a.bool
});
const EL = Ce(BC, {
  name: "MuiPopper",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), Aa = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = Ic(), r = ut({
    props: t,
    name: "MuiPopper"
  }), {
    anchorEl: i,
    component: s,
    components: l,
    componentsProps: c,
    container: u,
    disablePortal: d,
    keepMounted: f,
    modifiers: p,
    open: h,
    placement: g,
    popperOptions: m,
    popperRef: y,
    transition: b,
    slots: T,
    slotProps: v,
    ...w
  } = r, S = (T == null ? void 0 : T.root) ?? (l == null ? void 0 : l.Root), C = {
    anchorEl: i,
    container: u,
    disablePortal: d,
    keepMounted: f,
    modifiers: p,
    open: h,
    placement: g,
    popperOptions: m,
    popperRef: y,
    transition: b,
    ...w
  };
  return /* @__PURE__ */ O(EL, {
    as: s,
    direction: o ? "rtl" : "ltr",
    slots: {
      root: S
    },
    slotProps: v ?? c,
    ...C,
    ref: n
  });
});
process.env.NODE_ENV !== "production" && (Aa.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: a.oneOfType([Rr, a.object, a.func]),
  /**
   * Popper render function or node.
   */
  children: a.oneOfType([a.node, a.func]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  components: a.shape({
    Root: a.elementType
  }),
  /**
   * The props used for each slot inside the Popper.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  componentsProps: a.shape({
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Rr, a.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: a.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: a.arrayOf(a.shape({
    data: a.object,
    effect: a.func,
    enabled: a.bool,
    fn: a.func,
    name: a.any,
    options: a.object,
    phase: a.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: a.arrayOf(a.string),
    requiresIfExists: a.arrayOf(a.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: a.shape({
    modifiers: a.array,
    onFirstUpdate: a.func,
    placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: a.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: uo,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: a.shape({
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: a.bool
});
function OL(e) {
  return ot("MuiTooltip", e);
}
const ln = at("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]);
function PL(e) {
  return Math.round(e * 1e5) / 1e5;
}
const RL = (e) => {
  const {
    classes: t,
    disableInteractive: n,
    arrow: o,
    touch: r,
    placement: i
  } = e, s = {
    popper: ["popper", !n && "popperInteractive", o && "popperArrow"],
    tooltip: ["tooltip", o && "tooltipArrow", r && "touch", `tooltipPlacement${fe(i.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return st(s, OL, t);
}, IL = Ce(Aa, {
  name: "MuiTooltip",
  slot: "Popper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.popper, !n.disableInteractive && t.popperInteractive, n.arrow && t.popperArrow, !n.open && t.popperClose];
  }
})(Ye(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.tooltip,
  pointerEvents: "none",
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableInteractive,
    style: {
      pointerEvents: "auto"
    }
  }, {
    props: ({
      open: t
    }) => !t,
    style: {
      pointerEvents: "none"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      [`&[data-popper-placement*="bottom"] .${ln.arrow}`]: {
        top: 0,
        marginTop: "-0.71em",
        "&::before": {
          transformOrigin: "0 100%"
        }
      },
      [`&[data-popper-placement*="top"] .${ln.arrow}`]: {
        bottom: 0,
        marginBottom: "-0.71em",
        "&::before": {
          transformOrigin: "100% 0"
        }
      },
      [`&[data-popper-placement*="right"] .${ln.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "100% 100%"
        }
      },
      [`&[data-popper-placement*="left"] .${ln.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "0 0"
        }
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${ln.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${ln.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${ln.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${ln.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }]
}))), kL = Ce("div", {
  name: "MuiTooltip",
  slot: "Tooltip",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.tooltip, n.touch && t.touch, n.arrow && t.tooltipArrow, t[`tooltipPlacement${fe(n.placement.split("-")[0])}`]];
  }
})(Ye(({
  theme: e
}) => ({
  backgroundColor: e.vars ? e.vars.palette.Tooltip.bg : vt(e.palette.grey[700], 0.92),
  borderRadius: (e.vars || e).shape.borderRadius,
  color: (e.vars || e).palette.common.white,
  fontFamily: e.typography.fontFamily,
  padding: "4px 8px",
  fontSize: e.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: "break-word",
  fontWeight: e.typography.fontWeightMedium,
  [`.${ln.popper}[data-popper-placement*="left"] &`]: {
    transformOrigin: "right center"
  },
  [`.${ln.popper}[data-popper-placement*="right"] &`]: {
    transformOrigin: "left center"
  },
  [`.${ln.popper}[data-popper-placement*="top"] &`]: {
    transformOrigin: "center bottom",
    marginBottom: "14px"
  },
  [`.${ln.popper}[data-popper-placement*="bottom"] &`]: {
    transformOrigin: "center top",
    marginTop: "14px"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      position: "relative",
      margin: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      padding: "8px 16px",
      fontSize: e.typography.pxToRem(14),
      lineHeight: `${PL(16 / 14)}em`,
      fontWeight: e.typography.fontWeightRegular
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl,
    style: {
      [`.${ln.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "14px"
      },
      [`.${ln.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl && t.touch,
    style: {
      [`.${ln.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "24px"
      },
      [`.${ln.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl,
    style: {
      [`.${ln.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "14px"
      },
      [`.${ln.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl && t.touch,
    style: {
      [`.${ln.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "24px"
      },
      [`.${ln.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${ln.popper}[data-popper-placement*="top"] &`]: {
        marginBottom: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${ln.popper}[data-popper-placement*="bottom"] &`]: {
        marginTop: "24px"
      }
    }
  }]
}))), $L = Ce("span", {
  name: "MuiTooltip",
  slot: "Arrow",
  overridesResolver: (e, t) => t.arrow
})(Ye(({
  theme: e
}) => ({
  overflow: "hidden",
  position: "absolute",
  width: "1em",
  height: "0.71em",
  boxSizing: "border-box",
  color: e.vars ? e.vars.palette.Tooltip.bg : vt(e.palette.grey[700], 0.9),
  "&::before": {
    content: '""',
    margin: "auto",
    display: "block",
    width: "100%",
    height: "100%",
    backgroundColor: "currentColor",
    transform: "rotate(45deg)"
  }
})));
let yu = !1;
const P0 = new WT();
let Ga = {
  x: 0,
  y: 0
};
function bu(e, t) {
  return (n, ...o) => {
    t && t(n, ...o), e(n, ...o);
  };
}
const yy = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiTooltip"
  }), {
    arrow: r = !1,
    children: i,
    classes: s,
    components: l = {},
    componentsProps: c = {},
    describeChild: u = !1,
    disableFocusListener: d = !1,
    disableHoverListener: f = !1,
    disableInteractive: p = !1,
    disableTouchListener: h = !1,
    enterDelay: g = 100,
    enterNextDelay: m = 0,
    enterTouchDelay: y = 700,
    followCursor: b = !1,
    id: T,
    leaveDelay: v = 0,
    leaveTouchDelay: w = 1500,
    onClose: S,
    onOpen: C,
    open: E,
    placement: P = "bottom",
    PopperComponent: M,
    PopperProps: x = {},
    slotProps: I = {},
    slots: k = {},
    title: _,
    TransitionComponent: R,
    TransitionProps: A,
    ...N
  } = o, L = /* @__PURE__ */ $.isValidElement(i) ? i : /* @__PURE__ */ O("span", {
    children: i
  }), V = Zr(), D = Ic(), [B, F] = $.useState(), [U, q] = $.useState(null), G = $.useRef(!1), K = p || b, te = js(), ne = js(), W = js(), ee = js(), [Y, re] = ns({
    controlled: E,
    default: !1,
    name: "Tooltip",
    state: "open"
  });
  let z = Y;
  if (process.env.NODE_ENV !== "production") {
    const {
      current: Le
    } = $.useRef(E !== void 0);
    $.useEffect(() => {
      B && B.disabled && !Le && _ !== "" && B.tagName.toLowerCase() === "button" && console.warn(["MUI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join(`
`));
    }, [_, B, Le]);
  }
  const de = hs(T), ue = $.useRef(), xe = oo(() => {
    ue.current !== void 0 && (document.body.style.WebkitUserSelect = ue.current, ue.current = void 0), ee.clear();
  });
  $.useEffect(() => xe, [xe]);
  const _e = (Le) => {
    P0.clear(), yu = !0, re(!0), C && !z && C(Le);
  }, we = oo(
    /**
     * @param {React.SyntheticEvent | Event} event
     */
    (Le) => {
      P0.start(800 + v, () => {
        yu = !1;
      }), re(!1), S && z && S(Le), te.start(V.transitions.duration.shortest, () => {
        G.current = !1;
      });
    }
  ), De = (Le) => {
    G.current && Le.type !== "touchstart" || (B && B.removeAttribute("title"), ne.clear(), W.clear(), g || yu && m ? ne.start(yu ? m : g, () => {
      _e(Le);
    }) : _e(Le));
  }, Ee = (Le) => {
    ne.clear(), W.start(v, () => {
      we(Le);
    });
  }, [, Ve] = $.useState(!1), Me = (Le) => {
    gd(Le.target) || (Ve(!1), Ee(Le));
  }, j = (Le) => {
    B || F(Le.currentTarget), gd(Le.target) && (Ve(!0), De(Le));
  }, J = (Le) => {
    G.current = !0;
    const Ft = L.props;
    Ft.onTouchStart && Ft.onTouchStart(Le);
  }, ie = (Le) => {
    J(Le), W.clear(), te.clear(), xe(), ue.current = document.body.style.WebkitUserSelect, document.body.style.WebkitUserSelect = "none", ee.start(y, () => {
      document.body.style.WebkitUserSelect = ue.current, De(Le);
    });
  }, Q = (Le) => {
    L.props.onTouchEnd && L.props.onTouchEnd(Le), xe(), W.start(w, () => {
      we(Le);
    });
  };
  $.useEffect(() => {
    if (!z)
      return;
    function Le(Ft) {
      Ft.key === "Escape" && we(Ft);
    }
    return document.addEventListener("keydown", Le), () => {
      document.removeEventListener("keydown", Le);
    };
  }, [we, z]);
  const H = yn(Oi(L), F, n);
  !_ && _ !== 0 && (z = !1);
  const X = $.useRef(), se = (Le) => {
    const Ft = L.props;
    Ft.onMouseMove && Ft.onMouseMove(Le), Ga = {
      x: Le.clientX,
      y: Le.clientY
    }, X.current && X.current.update();
  }, ye = {}, he = typeof _ == "string";
  u ? (ye.title = !z && he && !f ? _ : null, ye["aria-describedby"] = z ? de : null) : (ye["aria-label"] = he ? _ : null, ye["aria-labelledby"] = z && !he ? de : null);
  const le = {
    ...ye,
    ...N,
    ...L.props,
    className: Ie(N.className, L.props.className),
    onTouchStart: J,
    ref: H,
    ...b ? {
      onMouseMove: se
    } : {}
  };
  process.env.NODE_ENV !== "production" && (le["data-mui-internal-clone-element"] = !0, $.useEffect(() => {
    B && !B.getAttribute("data-mui-internal-clone-element") && console.error(["MUI: The `children` component of the Tooltip is not forwarding its props correctly.", "Please make sure that props are spread on the same element that the ref is applied to."].join(`
`));
  }, [B]));
  const ae = {};
  h || (le.onTouchStart = ie, le.onTouchEnd = Q), f || (le.onMouseOver = bu(De, le.onMouseOver), le.onMouseLeave = bu(Ee, le.onMouseLeave), K || (ae.onMouseOver = De, ae.onMouseLeave = Ee)), d || (le.onFocus = bu(j, le.onFocus), le.onBlur = bu(Me, le.onBlur), K || (ae.onFocus = j, ae.onBlur = Me)), process.env.NODE_ENV !== "production" && L.props.title && console.error(["MUI: You have provided a `title` prop to the child of <Tooltip />.", `Remove this title prop \`${L.props.title}\` or the Tooltip component.`].join(`
`));
  const ce = {
    ...o,
    isRtl: D,
    arrow: r,
    disableInteractive: K,
    placement: P,
    PopperComponentProp: M,
    touch: G.current
  }, Te = typeof I.popper == "function" ? I.popper(ce) : I.popper, Re = $.useMemo(() => {
    var Ft, Bt;
    let Le = [{
      name: "arrow",
      enabled: !!U,
      options: {
        element: U,
        padding: 4
      }
    }];
    return (Ft = x.popperOptions) != null && Ft.modifiers && (Le = Le.concat(x.popperOptions.modifiers)), (Bt = Te == null ? void 0 : Te.popperOptions) != null && Bt.modifiers && (Le = Le.concat(Te.popperOptions.modifiers)), {
      ...x.popperOptions,
      ...Te == null ? void 0 : Te.popperOptions,
      modifiers: Le
    };
  }, [U, x.popperOptions, Te == null ? void 0 : Te.popperOptions]), oe = RL(ce), be = typeof I.transition == "function" ? I.transition(ce) : I.transition, Ne = {
    slots: {
      popper: l.Popper,
      transition: l.Transition ?? R,
      tooltip: l.Tooltip,
      arrow: l.Arrow,
      ...k
    },
    slotProps: {
      arrow: I.arrow ?? c.arrow,
      popper: {
        ...x,
        ...Te ?? c.popper
      },
      // resolvedPopperProps can be spread because it's already an object
      tooltip: I.tooltip ?? c.tooltip,
      transition: {
        ...A,
        ...be ?? c.transition
      }
    }
  }, [We, Ke] = it("popper", {
    elementType: IL,
    externalForwardedProps: Ne,
    ownerState: ce,
    className: Ie(oe.popper, x == null ? void 0 : x.className)
  }), [xt, ft] = it("transition", {
    elementType: Gl,
    externalForwardedProps: Ne,
    ownerState: ce
  }), [Ct, je] = it("tooltip", {
    elementType: kL,
    className: oe.tooltip,
    externalForwardedProps: Ne,
    ownerState: ce
  }), [pt, Et] = it("arrow", {
    elementType: $L,
    className: oe.arrow,
    externalForwardedProps: Ne,
    ownerState: ce,
    ref: q
  });
  return /* @__PURE__ */ Se($.Fragment, {
    children: [/* @__PURE__ */ $.cloneElement(L, le), /* @__PURE__ */ O(We, {
      as: M ?? Aa,
      placement: P,
      anchorEl: b ? {
        getBoundingClientRect: () => ({
          top: Ga.y,
          left: Ga.x,
          right: Ga.x,
          bottom: Ga.y,
          width: 0,
          height: 0
        })
      } : B,
      popperRef: X,
      open: B ? z : !1,
      id: de,
      transition: !0,
      ...ae,
      ...Ke,
      popperOptions: Re,
      children: ({
        TransitionProps: Le
      }) => /* @__PURE__ */ O(xt, {
        timeout: V.transitions.duration.shorter,
        ...Le,
        ...ft,
        children: /* @__PURE__ */ Se(Ct, {
          ...je,
          children: [_, r ? /* @__PURE__ */ O(pt, {
            ...Et
          }) : null]
        })
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (yy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: a.bool,
  /**
   * Tooltip reference element.
   */
  children: Ei.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Arrow: a.elementType,
    Popper: a.elementType,
    Tooltip: a.elementType,
    Transition: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    arrow: a.object,
    popper: a.object,
    tooltip: a.object,
    transition: a.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: a.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: a.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: a.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: a.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: a.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: a.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: a.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: a.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: a.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: a.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: a.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: a.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The component used for the popper.
   * @deprecated use the `slots.popper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PopperComponent: a.elementType,
  /**
   * Props applied to the [`Popper`](https://mui.com/material-ui/api/popper/) element.
   * @deprecated use the `slotProps.popper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PopperProps: a.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    arrow: a.oneOfType([a.func, a.object]),
    popper: a.oneOfType([a.func, a.object]),
    tooltip: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    arrow: a.elementType,
    popper: a.elementType,
    tooltip: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: a.node,
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: a.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object
});
function NL(e) {
  return ot("MuiTypography", e);
}
at("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]);
const ML = {
  primary: !0,
  secondary: !0,
  error: !0,
  info: !0,
  success: !0,
  warning: !0,
  textPrimary: !0,
  textSecondary: !0,
  textDisabled: !0
}, AL = R_(), _L = (e) => {
  const {
    align: t,
    gutterBottom: n,
    noWrap: o,
    paragraph: r,
    variant: i,
    classes: s
  } = e, l = {
    root: ["root", i, e.align !== "inherit" && `align${fe(t)}`, n && "gutterBottom", o && "noWrap", r && "paragraph"]
  };
  return st(l, NL, s);
}, DL = Ce("span", {
  name: "MuiTypography",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.variant && t[n.variant], n.align !== "inherit" && t[`align${fe(n.align)}`], n.noWrap && t.noWrap, n.gutterBottom && t.gutterBottom, n.paragraph && t.paragraph];
  }
})(Ye(({
  theme: e
}) => {
  var t;
  return {
    margin: 0,
    variants: [{
      props: {
        variant: "inherit"
      },
      style: {
        // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
        font: "inherit",
        lineHeight: "inherit",
        letterSpacing: "inherit"
      }
    }, ...Object.entries(e.typography).filter(([n, o]) => n !== "inherit" && o && typeof o == "object").map(([n, o]) => ({
      props: {
        variant: n
      },
      style: o
    })), ...Object.entries(e.palette).filter(Gt()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        color: (e.vars || e).palette[n].main
      }
    })), ...Object.entries(((t = e.palette) == null ? void 0 : t.text) || {}).filter(([, n]) => typeof n == "string").map(([n]) => ({
      props: {
        color: `text${fe(n)}`
      },
      style: {
        color: (e.vars || e).palette.text[n]
      }
    })), {
      props: ({
        ownerState: n
      }) => n.align !== "inherit",
      style: {
        textAlign: "var(--Typography-textAlign)"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.noWrap,
      style: {
        overflow: "hidden",
        textOverflow: "ellipsis",
        whiteSpace: "nowrap"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.gutterBottom,
      style: {
        marginBottom: "0.35em"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.paragraph,
      style: {
        marginBottom: 16
      }
    }]
  };
})), R0 = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  inherit: "p"
}, VC = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const {
    color: o,
    ...r
  } = ut({
    props: t,
    name: "MuiTypography"
  }), i = !ML[o], s = AL({
    ...r,
    ...i && {
      color: o
    }
  }), {
    align: l = "inherit",
    className: c,
    component: u,
    gutterBottom: d = !1,
    noWrap: f = !1,
    paragraph: p = !1,
    variant: h = "body1",
    variantMapping: g = R0,
    ...m
  } = s, y = {
    ...s,
    align: l,
    color: o,
    className: c,
    component: u,
    gutterBottom: d,
    noWrap: f,
    paragraph: p,
    variant: h,
    variantMapping: g
  }, b = u || (p ? "p" : g[h] || R0[h]) || "span", T = _L(y);
  return /* @__PURE__ */ O(DL, {
    as: b,
    ref: n,
    className: Ie(T.root, c),
    ...m,
    ownerState: y,
    style: {
      ...l !== "inherit" && {
        "--Typography-textAlign": l
      },
      ...m.style
    }
  });
});
process.env.NODE_ENV !== "production" && (VC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the component.
   * @default 'inherit'
   */
  align: a.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "success", "error", "info", "warning", "textPrimary", "textSecondary", "textDisabled"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */
  gutterBottom: a.bool,
  /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */
  noWrap: a.bool,
  /**
   * If `true`, the element will be a paragraph element.
   * @default false
   * @deprecated Use the `component` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  paragraph: a.bool,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Applies the theme typography styles.
   * @default 'body1'
   */
  variant: a.oneOfType([a.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), a.string]),
  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */
  variantMapping: a.object
});
function Mc({
  isTitle: e = !1,
  isLabel: t = !1,
  titleLevel: n = "h6",
  textColor: o = "auto",
  bold: r = !1,
  ellipsis: i = !1
}) {
  return {
    textCommonStyles: Ge(
      () => ({
        typography: e ? n : t ? "caption" : "body1",
        fontWeight: e || t || r ? "bold" : "normal",
        color: (l) => o === "error" ? l.palette.error.main : o === "primary" ? l.palette.primary.main : o === "success" ? l.palette.success.main : o === "disabled" ? l.palette.action.disabled : "inherit",
        ...i ? {
          width: "100%",
          whiteSpace: "nowrap",
          overflow: "hidden",
          textOverflow: "ellipsis"
        } : {}
      }),
      [e, t, o, r, i]
    )
  };
}
const Rn = Pe(
  ({
    text: e,
    isLabel: t,
    isTitle: n = !1,
    titleLevel: o = "h6",
    ellipsis: r = !1,
    textColor: i = "auto",
    bold: s,
    sx: l,
    ...c
  }) => {
    const { textCommonStyles: u } = Mc({
      isTitle: n,
      isLabel: t,
      titleLevel: o,
      textColor: i,
      bold: s,
      ellipsis: r
    }), d = qe(null), [f, p] = Yt(!1);
    et(() => {
      if (r && d.current) {
        const { scrollWidth: g, clientWidth: m } = d.current;
        p(g > m);
      }
    }, [e, r]);
    const h = Ge(
      () => /* @__PURE__ */ O(
        VC,
        {
          className: "VenomousUI-Text",
          component: "div",
          ref: d,
          variant: n ? o : t ? "caption" : "body1",
          noWrap: r,
          sx: {
            ...u,
            ...l
          },
          ...c,
          children: e
        }
      ),
      [e, n, o, r, l, c, u]
    );
    return r && f ? /* @__PURE__ */ O(fa, { tooltip: e, children: h }) : h;
  }
);
Rn.displayName = "Text";
const fa = Pe(({ children: e, tooltip: t, hide: n }) => /* @__PURE__ */ O(
  yy,
  {
    className: "VenomousUI-Tooltip",
    arrow: !0,
    title: /* @__PURE__ */ O(Rn, { isLabel: !0, bold: !0, text: t, textColor: "auto" }),
    disableHoverListener: n,
    children: e,
    slots: {
      transition: as
    },
    slotProps: {
      transition: { timeout: 400 }
    }
  }
));
fa.displayName = "Tooltip";
const FC = Pe(
  ({
    children: e,
    position: t = "bottom-right",
    color: n = "error",
    icon: o,
    iconWidth: r = 16,
    iconTooltip: i = ""
  }) => {
    const { paperCommonStyles: s } = ms(), { badgePlacementAttributes: l, badgeColor: c } = Ef({ position: t, color: n }), { vertical: u, horizontal: d, transform: f } = l;
    return /* @__PURE__ */ O(
      kc,
      {
        className: "VenomousUI-IconBadge",
        variant: "standard",
        invisible: !o,
        anchorOrigin: { vertical: u, horizontal: d },
        badgeContent: /* @__PURE__ */ O(fa, { tooltip: i, hide: !i, children: /* @__PURE__ */ O(Eo, { icon: o, width: r, color: "auto" }) }),
        sx: {
          ".MuiBadge-badge": {
            color: c,
            fontWeight: "bold",
            ...s,
            transform: f,
            p: 0,
            minHeight: Number(r) + 4,
            minWidth: Number(r) + 4,
            height: Number(r) + 4,
            width: Number(r) + 4,
            borderRadius: "50%",
            border: 1,
            borderColor: c
          }
        },
        children: e
      }
    );
  }
);
FC.displayName = "IconBadge";
const LL = Pe(
  ({ children: e, position: t = "top-right", color: n = "primary", value: o = 0, max: r = 99, min: i = 0 }) => {
    const { badgePlacementAttributes: s, badgeColor: l } = Ef({ position: t, color: n }), { vertical: c, horizontal: u } = s, d = Ge(() => o > r ? `${r}+` : String(o), [o, r]), f = Ge(() => o > i, [o, i]);
    return /* @__PURE__ */ O(
      kc,
      {
        className: "VenomousUI-NumberTextBadge",
        variant: "standard",
        invisible: !f,
        anchorOrigin: { vertical: c, horizontal: u },
        badgeContent: /* @__PURE__ */ O(fa, { tooltip: String(o), hide: o <= r, children: /* @__PURE__ */ O("span", { children: d }) }),
        sx: {
          ".MuiBadge-badge": {
            color: "#fff !important",
            backgroundColor: l,
            fontWeight: "bold"
          }
        },
        children: e
      }
    );
  }
);
LL.displayName = "NumberTextBadge";
const BL = Pe(
  ({ children: e, position: t = "top-right", color: n = "primary", value: o = "", width: r = 40 }) => {
    const { badgePlacementAttributes: i, badgeColor: s } = Ef({ position: t, color: n }), { vertical: l, horizontal: c } = i;
    return /* @__PURE__ */ O(
      kc,
      {
        className: "VenomousUI-NumberTextBadge",
        variant: "standard",
        invisible: !o,
        anchorOrigin: { vertical: l, horizontal: c },
        badgeContent: /* @__PURE__ */ O(Rn, { isLabel: !0, text: o, ellipsis: !0 }),
        sx: {
          ".MuiBadge-badge": {
            color: "#fff !important",
            backgroundColor: s,
            fontWeight: "bold",
            maxWidth: r
          }
        },
        children: e
      }
    );
  }
);
BL.displayName = "NumberTextBadge";
const VL = Pe(
  ({
    width: e = 28,
    src: t,
    alt: n,
    onClick: o,
    sx: r,
    badgeColor: i = "primary",
    badgePosition: s = "bottom-right",
    withDotBadge: l = !1,
    dotBadgeIsVisible: c = !0,
    withIconBadge: u = !1,
    iconBadgeIcon: d = ""
  }) => {
    const f = Ge(
      () => /* @__PURE__ */ O(
        fC,
        {
          className: "VenomousUI-Avatar",
          src: t,
          alt: n,
          sx: {
            width: e,
            height: e,
            border: 1,
            borderColor: "divider",
            cursor: o ? "pointer" : "default",
            ...r
          },
          onClick: o
        }
      ),
      [e, t, n, o, r]
    );
    return l ? /* @__PURE__ */ O(pC, { isVisible: c, position: s, color: i, children: f }) : u ? /* @__PURE__ */ O(FC, { icon: d, position: s, color: i, children: f }) : f;
  }
);
VL.displayName = "Avatar";
const FL = Pe(({ width: e = 100, text: t = "", sx: n }) => /* @__PURE__ */ Se(Ho, { className: "VenomousUI-Blank", sx: { width: e, ...n }, children: [
  /* @__PURE__ */ O(Eo, { width: e, icon: "solar:box-linear", color: "disabled" }),
  /* @__PURE__ */ O(Rn, { text: t, isTitle: !0, titleLevel: "h6", textColor: "disabled", textAlign: "center" })
] }));
FL.displayName = "Blank";
function jL(e, t) {
  const n = e.charCodeAt(2);
  return e[0] === "o" && e[1] === "n" && n >= 65 && n <= 90 && typeof t == "function";
}
function by(e, t) {
  if (!e)
    return t;
  function n(s, l) {
    const c = {};
    return Object.keys(l).forEach((u) => {
      jL(u, l[u]) && typeof s[u] == "function" && (c[u] = (...d) => {
        s[u](...d), l[u](...d);
      });
    }), c;
  }
  if (typeof e == "function" || typeof t == "function")
    return (s) => {
      const l = typeof t == "function" ? t(s) : t, c = typeof e == "function" ? e({
        ...s,
        ...l
      }) : e, u = Ie(s == null ? void 0 : s.className, l == null ? void 0 : l.className, c == null ? void 0 : c.className), d = n(c, l);
      return {
        ...l,
        ...c,
        ...d,
        ...!!u && {
          className: u
        },
        ...(l == null ? void 0 : l.style) && (c == null ? void 0 : c.style) && {
          style: {
            ...l.style,
            ...c.style
          }
        },
        ...(l == null ? void 0 : l.sx) && (c == null ? void 0 : c.sx) && {
          sx: [...Array.isArray(l.sx) ? l.sx : [l.sx], ...Array.isArray(c.sx) ? c.sx : [c.sx]]
        }
      };
    };
  const o = t, r = n(e, o), i = Ie(o == null ? void 0 : o.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...r,
    ...!!i && {
      className: i
    },
    ...(o == null ? void 0 : o.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...o.style,
        ...e.style
      }
    },
    ...(o == null ? void 0 : o.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(o.sx) ? o.sx : [o.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
class Td {
  constructor() {
    ti(this, "mountEffect", () => {
      this.shouldMount && !this.didMount && this.ref.current !== null && (this.didMount = !0, this.mounted.resolve());
    });
    this.ref = {
      current: null
    }, this.mounted = null, this.didMount = !1, this.shouldMount = !1, this.setShouldMount = null;
  }
  /** React ref to the ripple instance */
  /** If the ripple component should be mounted */
  /** Promise that resolves when the ripple component is mounted */
  /** If the ripple component has been mounted */
  /** React state hook setter */
  static create() {
    return new Td();
  }
  static use() {
    const t = HT(Td.create).current, [n, o] = $.useState(!1);
    return t.shouldMount = n, t.setShouldMount = o, $.useEffect(t.mountEffect, [n]), t;
  }
  mount() {
    return this.mounted || (this.mounted = HL(), this.shouldMount = !0, this.setShouldMount(this.shouldMount)), this.mounted;
  }
  /* Ripple API */
  start(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.start(...t);
    });
  }
  stop(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.stop(...t);
    });
  }
  pulsate(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.pulsate(...t);
    });
  }
}
function zL() {
  return Td.use();
}
function HL() {
  let e, t;
  const n = new Promise((o, r) => {
    e = o, t = r;
  });
  return n.resolve = e, n.reject = t, n;
}
function jC(e) {
  const {
    className: t,
    classes: n,
    pulsate: o = !1,
    rippleX: r,
    rippleY: i,
    rippleSize: s,
    in: l,
    onExited: c,
    timeout: u
  } = e, [d, f] = $.useState(!1), p = Ie(t, n.ripple, n.rippleVisible, o && n.ripplePulsate), h = {
    width: s,
    height: s,
    top: -(s / 2) + i,
    left: -(s / 2) + r
  }, g = Ie(n.child, d && n.childLeaving, o && n.childPulsate);
  return !l && !d && f(!0), $.useEffect(() => {
    if (!l && c != null) {
      const m = setTimeout(c, u);
      return () => {
        clearTimeout(m);
      };
    }
  }, [c, l, u]), /* @__PURE__ */ O("span", {
    className: p,
    style: h,
    children: /* @__PURE__ */ O("span", {
      className: g
    })
  });
}
process.env.NODE_ENV !== "production" && (jC.propTypes = {
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object.isRequired,
  className: a.string,
  /**
   * @ignore - injected from TransitionGroup
   */
  in: a.bool,
  /**
   * @ignore - injected from TransitionGroup
   */
  onExited: a.func,
  /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */
  pulsate: a.bool,
  /**
   * Diameter of the ripple.
   */
  rippleSize: a.number,
  /**
   * Horizontal position of the ripple center.
   */
  rippleX: a.number,
  /**
   * Vertical position of the ripple center.
   */
  rippleY: a.number,
  /**
   * exit delay
   */
  timeout: a.number.isRequired
});
const _o = at("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), wm = 550, WL = 80, UL = Ci`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`, qL = Ci`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`, KL = Ci`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`, GL = Ce("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), YL = Ce(jC, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})`
  opacity: 0;
  position: absolute;

  &.${_o.rippleVisible} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${UL};
    animation-duration: ${wm}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  &.${_o.ripplePulsate} {
    animation-duration: ${({
  theme: e
}) => e.transitions.duration.shorter}ms;
  }

  & .${_o.child} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${_o.childLeaving} {
    opacity: 0;
    animation-name: ${qL};
    animation-duration: ${wm}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  & .${_o.childPulsate} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${KL};
    animation-duration: 2500ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`, zC = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiTouchRipple"
  }), {
    center: r = !1,
    classes: i = {},
    className: s,
    ...l
  } = o, [c, u] = $.useState([]), d = $.useRef(0), f = $.useRef(null);
  $.useEffect(() => {
    f.current && (f.current(), f.current = null);
  }, [c]);
  const p = $.useRef(!1), h = js(), g = $.useRef(null), m = $.useRef(null), y = $.useCallback((w) => {
    const {
      pulsate: S,
      rippleX: C,
      rippleY: E,
      rippleSize: P,
      cb: M
    } = w;
    u((x) => [...x, /* @__PURE__ */ O(YL, {
      classes: {
        ripple: Ie(i.ripple, _o.ripple),
        rippleVisible: Ie(i.rippleVisible, _o.rippleVisible),
        ripplePulsate: Ie(i.ripplePulsate, _o.ripplePulsate),
        child: Ie(i.child, _o.child),
        childLeaving: Ie(i.childLeaving, _o.childLeaving),
        childPulsate: Ie(i.childPulsate, _o.childPulsate)
      },
      timeout: wm,
      pulsate: S,
      rippleX: C,
      rippleY: E,
      rippleSize: P
    }, d.current)]), d.current += 1, f.current = M;
  }, [i]), b = $.useCallback((w = {}, S = {}, C = () => {
  }) => {
    const {
      pulsate: E = !1,
      center: P = r || S.pulsate,
      fakeElement: M = !1
      // For test purposes
    } = S;
    if ((w == null ? void 0 : w.type) === "mousedown" && p.current) {
      p.current = !1;
      return;
    }
    (w == null ? void 0 : w.type) === "touchstart" && (p.current = !0);
    const x = M ? null : m.current, I = x ? x.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let k, _, R;
    if (P || w === void 0 || w.clientX === 0 && w.clientY === 0 || !w.clientX && !w.touches)
      k = Math.round(I.width / 2), _ = Math.round(I.height / 2);
    else {
      const {
        clientX: A,
        clientY: N
      } = w.touches && w.touches.length > 0 ? w.touches[0] : w;
      k = Math.round(A - I.left), _ = Math.round(N - I.top);
    }
    if (P)
      R = Math.sqrt((2 * I.width ** 2 + I.height ** 2) / 3), R % 2 === 0 && (R += 1);
    else {
      const A = Math.max(Math.abs((x ? x.clientWidth : 0) - k), k) * 2 + 2, N = Math.max(Math.abs((x ? x.clientHeight : 0) - _), _) * 2 + 2;
      R = Math.sqrt(A ** 2 + N ** 2);
    }
    w != null && w.touches ? g.current === null && (g.current = () => {
      y({
        pulsate: E,
        rippleX: k,
        rippleY: _,
        rippleSize: R,
        cb: C
      });
    }, h.start(WL, () => {
      g.current && (g.current(), g.current = null);
    })) : y({
      pulsate: E,
      rippleX: k,
      rippleY: _,
      rippleSize: R,
      cb: C
    });
  }, [r, y, h]), T = $.useCallback(() => {
    b({}, {
      pulsate: !0
    });
  }, [b]), v = $.useCallback((w, S) => {
    if (h.clear(), (w == null ? void 0 : w.type) === "touchend" && g.current) {
      g.current(), g.current = null, h.start(0, () => {
        v(w, S);
      });
      return;
    }
    g.current = null, u((C) => C.length > 0 ? C.slice(1) : C), f.current = S;
  }, [h]);
  return $.useImperativeHandle(n, () => ({
    pulsate: T,
    start: b,
    stop: v
  }), [T, b, v]), /* @__PURE__ */ O(GL, {
    className: Ie(_o.root, i.root, s),
    ref: m,
    ...l,
    children: /* @__PURE__ */ O(ly, {
      component: null,
      exit: !0,
      children: c
    })
  });
});
process.env.NODE_ENV !== "production" && (zC.propTypes = {
  /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */
  center: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string
});
function XL(e) {
  return ot("MuiButtonBase", e);
}
const ZL = at("MuiButtonBase", ["root", "disabled", "focusVisible"]), QL = (e) => {
  const {
    disabled: t,
    focusVisible: n,
    focusVisibleClassName: o,
    classes: r
  } = e, s = st({
    root: ["root", t && "disabled", n && "focusVisible"]
  }, XL, r);
  return n && o && (s.root += ` ${o}`), s;
}, JL = Ce("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  textDecoration: "none",
  // So we take precedent over the style of a native <a /> element.
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${ZL.disabled}`]: {
    pointerEvents: "none",
    // Disable link interactions
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), pa = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiButtonBase"
  }), {
    action: r,
    centerRipple: i = !1,
    children: s,
    className: l,
    component: c = "button",
    disabled: u = !1,
    disableRipple: d = !1,
    disableTouchRipple: f = !1,
    focusRipple: p = !1,
    focusVisibleClassName: h,
    LinkComponent: g = "a",
    onBlur: m,
    onClick: y,
    onContextMenu: b,
    onDragLeave: T,
    onFocus: v,
    onFocusVisible: w,
    onKeyDown: S,
    onKeyUp: C,
    onMouseDown: E,
    onMouseLeave: P,
    onMouseUp: M,
    onTouchEnd: x,
    onTouchMove: I,
    onTouchStart: k,
    tabIndex: _ = 0,
    TouchRippleProps: R,
    touchRippleRef: A,
    type: N,
    ...L
  } = o, V = $.useRef(null), D = zL(), B = yn(D.ref, A), [F, U] = $.useState(!1);
  u && F && U(!1), $.useImperativeHandle(r, () => ({
    focusVisible: () => {
      U(!0), V.current.focus();
    }
  }), []);
  const q = D.shouldMount && !d && !u;
  $.useEffect(() => {
    F && p && !d && D.pulsate();
  }, [d, p, F, D]);
  const G = Dr(D, "start", E, f), K = Dr(D, "stop", b, f), te = Dr(D, "stop", T, f), ne = Dr(D, "stop", M, f), W = Dr(D, "stop", (j) => {
    F && j.preventDefault(), P && P(j);
  }, f), ee = Dr(D, "start", k, f), Y = Dr(D, "stop", x, f), re = Dr(D, "stop", I, f), z = Dr(D, "stop", (j) => {
    gd(j.target) || U(!1), m && m(j);
  }, !1), de = oo((j) => {
    V.current || (V.current = j.currentTarget), gd(j.target) && (U(!0), w && w(j)), v && v(j);
  }), ue = () => {
    const j = V.current;
    return c && c !== "button" && !(j.tagName === "A" && j.href);
  }, xe = oo((j) => {
    p && !j.repeat && F && j.key === " " && D.stop(j, () => {
      D.start(j);
    }), j.target === j.currentTarget && ue() && j.key === " " && j.preventDefault(), S && S(j), j.target === j.currentTarget && ue() && j.key === "Enter" && !u && (j.preventDefault(), y && y(j));
  }), _e = oo((j) => {
    p && j.key === " " && F && !j.defaultPrevented && D.stop(j, () => {
      D.pulsate(j);
    }), C && C(j), y && j.target === j.currentTarget && ue() && j.key === " " && !j.defaultPrevented && y(j);
  });
  let we = c;
  we === "button" && (L.href || L.to) && (we = g);
  const De = {};
  we === "button" ? (De.type = N === void 0 ? "button" : N, De.disabled = u) : (!L.href && !L.to && (De.role = "button"), u && (De["aria-disabled"] = u));
  const Ee = yn(n, V), Ve = {
    ...o,
    centerRipple: i,
    component: c,
    disabled: u,
    disableRipple: d,
    disableTouchRipple: f,
    focusRipple: p,
    tabIndex: _,
    focusVisible: F
  }, Me = QL(Ve);
  return /* @__PURE__ */ Se(JL, {
    as: we,
    className: Ie(Me.root, l),
    ownerState: Ve,
    onBlur: z,
    onClick: y,
    onContextMenu: K,
    onFocus: de,
    onKeyDown: xe,
    onKeyUp: _e,
    onMouseDown: G,
    onMouseLeave: W,
    onMouseUp: ne,
    onDragLeave: te,
    onTouchEnd: Y,
    onTouchMove: re,
    onTouchStart: ee,
    ref: Ee,
    tabIndex: u ? -1 : _,
    type: N,
    ...De,
    ...L,
    children: [s, q ? /* @__PURE__ */ O(zC, {
      ref: B,
      center: i,
      ...R
    }) : null]
  });
});
function Dr(e, t, n, o = !1) {
  return oo((r) => (n && n(r), o || e[t](r), !0));
}
process.env.NODE_ENV !== "production" && (pa.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: uo,
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: a.bool,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: Kg,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: a.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: a.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: a.string,
  /**
   * @ignore
   */
  href: a.any,
  /**
   * The component used to render a link when the `href` prop is provided.
   * @default 'a'
   */
  LinkComponent: a.elementType,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * @ignore
   */
  onContextMenu: a.func,
  /**
   * @ignore
   */
  onDragLeave: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * @ignore
   */
  onKeyUp: a.func,
  /**
   * @ignore
   */
  onMouseDown: a.func,
  /**
   * @ignore
   */
  onMouseLeave: a.func,
  /**
   * @ignore
   */
  onMouseUp: a.func,
  /**
   * @ignore
   */
  onTouchEnd: a.func,
  /**
   * @ignore
   */
  onTouchMove: a.func,
  /**
   * @ignore
   */
  onTouchStart: a.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * @default 0
   */
  tabIndex: a.number,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: a.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: a.oneOfType([a.func, a.shape({
    current: a.shape({
      pulsate: a.func.isRequired,
      start: a.func.isRequired,
      stop: a.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  type: a.oneOfType([a.oneOf(["button", "reset", "submit"]), a.string])
});
function eB(e) {
  return ot("MuiCircularProgress", e);
}
at("MuiCircularProgress", ["root", "determinate", "indeterminate", "colorPrimary", "colorSecondary", "svg", "circle", "circleDeterminate", "circleIndeterminate", "circleDisableShrink"]);
const oi = 44, Sm = Ci`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`, Tm = Ci`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: -126px;
  }
`, tB = typeof Sm != "string" ? $a`
        animation: ${Sm} 1.4s linear infinite;
      ` : null, nB = typeof Tm != "string" ? $a`
        animation: ${Tm} 1.4s ease-in-out infinite;
      ` : null, oB = (e) => {
  const {
    classes: t,
    variant: n,
    color: o,
    disableShrink: r
  } = e, i = {
    root: ["root", n, `color${fe(o)}`],
    svg: ["svg"],
    circle: ["circle", `circle${fe(n)}`, r && "circleDisableShrink"]
  };
  return st(i, eB, t);
}, rB = Ce("span", {
  name: "MuiCircularProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`color${fe(n.color)}`]];
  }
})(Ye(({
  theme: e
}) => ({
  display: "inline-block",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("transform")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: tB || {
      animation: `${Sm} 1.4s linear infinite`
    }
  }, ...Object.entries(e.palette).filter(Gt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  }))]
}))), iB = Ce("svg", {
  name: "MuiCircularProgress",
  slot: "Svg",
  overridesResolver: (e, t) => t.svg
})({
  display: "block"
  // Keeps the progress centered
}), sB = Ce("circle", {
  name: "MuiCircularProgress",
  slot: "Circle",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.circle, t[`circle${fe(n.variant)}`], n.disableShrink && t.circleDisableShrink];
  }
})(Ye(({
  theme: e
}) => ({
  stroke: "currentColor",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("stroke-dashoffset")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: {
      // Some default value that looks fine waiting for the animation to kicks in.
      strokeDasharray: "80px, 200px",
      strokeDashoffset: 0
      // Add the unit to fix a Edge 16 and below bug.
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" && !t.disableShrink,
    style: nB || {
      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
      animation: `${Tm} 1.4s ease-in-out infinite`
    }
  }]
}))), Ac = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiCircularProgress"
  }), {
    className: r,
    color: i = "primary",
    disableShrink: s = !1,
    size: l = 40,
    style: c,
    thickness: u = 3.6,
    value: d = 0,
    variant: f = "indeterminate",
    ...p
  } = o, h = {
    ...o,
    color: i,
    disableShrink: s,
    size: l,
    thickness: u,
    value: d,
    variant: f
  }, g = oB(h), m = {}, y = {}, b = {};
  if (f === "determinate") {
    const T = 2 * Math.PI * ((oi - u) / 2);
    m.strokeDasharray = T.toFixed(3), b["aria-valuenow"] = Math.round(d), m.strokeDashoffset = `${((100 - d) / 100 * T).toFixed(3)}px`, y.transform = "rotate(-90deg)";
  }
  return /* @__PURE__ */ O(rB, {
    className: Ie(g.root, r),
    style: {
      width: l,
      height: l,
      ...y,
      ...c
    },
    ownerState: h,
    ref: n,
    role: "progressbar",
    ...b,
    ...p,
    children: /* @__PURE__ */ O(iB, {
      className: g.svg,
      ownerState: h,
      viewBox: `${oi / 2} ${oi / 2} ${oi} ${oi}`,
      children: /* @__PURE__ */ O(sB, {
        className: g.circle,
        style: m,
        ownerState: h,
        cx: oi,
        cy: oi,
        r: (oi - u) / 2,
        fill: "none",
        strokeWidth: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (Ac.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   * @default false
   */
  disableShrink: rr(a.bool, (e) => e.disableShrink && e.variant && e.variant !== "indeterminate" ? new Error("MUI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.") : null),
  /**
   * The size of the component.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, for example '3rem'.
   * @default 40
   */
  size: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The thickness of the circle.
   * @default 3.6
   */
  thickness: a.number,
  /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   * @default 0
   */
  value: a.number,
  /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   * @default 'indeterminate'
   */
  variant: a.oneOf(["determinate", "indeterminate"])
});
function aB(e) {
  return ot("MuiButton", e);
}
const zi = at("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorSuccess", "colorError", "colorInfo", "colorWarning", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "icon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge", "loading", "loadingWrapper", "loadingIconPlaceholder", "loadingIndicator", "loadingPositionCenter", "loadingPositionStart", "loadingPositionEnd"]), HC = /* @__PURE__ */ $.createContext({});
process.env.NODE_ENV !== "production" && (HC.displayName = "ButtonGroupContext");
const WC = /* @__PURE__ */ $.createContext(void 0);
process.env.NODE_ENV !== "production" && (WC.displayName = "ButtonGroupButtonContext");
const lB = (e) => {
  const {
    color: t,
    disableElevation: n,
    fullWidth: o,
    size: r,
    variant: i,
    loading: s,
    loadingPosition: l,
    classes: c
  } = e, u = {
    root: ["root", s && "loading", i, `${i}${fe(t)}`, `size${fe(r)}`, `${i}Size${fe(r)}`, `color${fe(t)}`, n && "disableElevation", o && "fullWidth", s && `loadingPosition${fe(l)}`],
    startIcon: ["icon", "startIcon", `iconSize${fe(r)}`],
    endIcon: ["icon", "endIcon", `iconSize${fe(r)}`],
    loadingIndicator: ["loadingIndicator"],
    loadingWrapper: ["loadingWrapper"]
  }, d = st(u, aB, c);
  return {
    ...c,
    // forward the focused, disabled, etc. classes to the ButtonBase
    ...d
  };
}, UC = [{
  props: {
    size: "small"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 18
    }
  }
}, {
  props: {
    size: "medium"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 20
    }
  }
}, {
  props: {
    size: "large"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 22
    }
  }
}], cB = Ce(pa, {
  shouldForwardProp: (e) => Un(e) || e === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`${n.variant}${fe(n.color)}`], t[`size${fe(n.size)}`], t[`${n.variant}Size${fe(n.size)}`], n.color === "inherit" && t.colorInherit, n.disableElevation && t.disableElevation, n.fullWidth && t.fullWidth, n.loading && t.loading];
  }
})(Ye(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? e.palette.grey[300] : e.palette.grey[800], n = e.palette.mode === "light" ? e.palette.grey.A100 : e.palette.grey[700];
  return {
    ...e.typography.button,
    minWidth: 64,
    padding: "6px 16px",
    border: 0,
    borderRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: e.transitions.duration.short
    }),
    "&:hover": {
      textDecoration: "none"
    },
    [`&.${zi.disabled}`]: {
      color: (e.vars || e).palette.action.disabled
    },
    variants: [{
      props: {
        variant: "contained"
      },
      style: {
        color: "var(--variant-containedColor)",
        backgroundColor: "var(--variant-containedBg)",
        boxShadow: (e.vars || e).shadows[2],
        "&:hover": {
          boxShadow: (e.vars || e).shadows[4],
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            boxShadow: (e.vars || e).shadows[2]
          }
        },
        "&:active": {
          boxShadow: (e.vars || e).shadows[8]
        },
        [`&.${zi.focusVisible}`]: {
          boxShadow: (e.vars || e).shadows[6]
        },
        [`&.${zi.disabled}`]: {
          color: (e.vars || e).palette.action.disabled,
          boxShadow: (e.vars || e).shadows[0],
          backgroundColor: (e.vars || e).palette.action.disabledBackground
        }
      }
    }, {
      props: {
        variant: "outlined"
      },
      style: {
        padding: "5px 15px",
        border: "1px solid currentColor",
        borderColor: "var(--variant-outlinedBorder, currentColor)",
        backgroundColor: "var(--variant-outlinedBg)",
        color: "var(--variant-outlinedColor)",
        [`&.${zi.disabled}`]: {
          border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
        }
      }
    }, {
      props: {
        variant: "text"
      },
      style: {
        padding: "6px 8px",
        color: "var(--variant-textColor)",
        backgroundColor: "var(--variant-textBg)"
      }
    }, ...Object.entries(e.palette).filter(Gt()).map(([o]) => ({
      props: {
        color: o
      },
      style: {
        "--variant-textColor": (e.vars || e).palette[o].main,
        "--variant-outlinedColor": (e.vars || e).palette[o].main,
        "--variant-outlinedBorder": e.vars ? `rgba(${e.vars.palette[o].mainChannel} / 0.5)` : vt(e.palette[o].main, 0.5),
        "--variant-containedColor": (e.vars || e).palette[o].contrastText,
        "--variant-containedBg": (e.vars || e).palette[o].main,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": (e.vars || e).palette[o].dark,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette[o].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : vt(e.palette[o].main, e.palette.action.hoverOpacity),
            "--variant-outlinedBorder": (e.vars || e).palette[o].main,
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette[o].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : vt(e.palette[o].main, e.palette.action.hoverOpacity)
          }
        }
      }
    })), {
      props: {
        color: "inherit"
      },
      style: {
        color: "inherit",
        borderColor: "currentColor",
        "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedBg : t,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedHoverBg : n,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : vt(e.palette.text.primary, e.palette.action.hoverOpacity),
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : vt(e.palette.text.primary, e.palette.action.hoverOpacity)
          }
        }
      }
    }, {
      props: {
        size: "small",
        variant: "text"
      },
      style: {
        padding: "4px 5px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "text"
      },
      style: {
        padding: "8px 11px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "outlined"
      },
      style: {
        padding: "3px 9px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "outlined"
      },
      style: {
        padding: "7px 21px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "contained"
      },
      style: {
        padding: "4px 10px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "contained"
      },
      style: {
        padding: "8px 22px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        disableElevation: !0
      },
      style: {
        boxShadow: "none",
        "&:hover": {
          boxShadow: "none"
        },
        [`&.${zi.focusVisible}`]: {
          boxShadow: "none"
        },
        "&:active": {
          boxShadow: "none"
        },
        [`&.${zi.disabled}`]: {
          boxShadow: "none"
        }
      }
    }, {
      props: {
        fullWidth: !0
      },
      style: {
        width: "100%"
      }
    }, {
      props: {
        loadingPosition: "center"
      },
      style: {
        transition: e.transitions.create(["background-color", "box-shadow", "border-color"], {
          duration: e.transitions.duration.short
        }),
        [`&.${zi.loading}`]: {
          color: "transparent"
        }
      }
    }]
  };
})), uB = Ce("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.startIcon, n.loading && t.startIconLoadingStart, t[`iconSize${fe(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginLeft: -2
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginRight: -8
    }
  }, ...UC]
})), dB = Ce("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.endIcon, n.loading && t.endIconLoadingEnd, t[`iconSize${fe(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginRight: -2
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginLeft: -8
    }
  }, ...UC]
})), fB = Ce("span", {
  name: "MuiButton",
  slot: "LoadingIndicator",
  overridesResolver: (e, t) => t.loadingIndicator
})(({
  theme: e
}) => ({
  display: "none",
  position: "absolute",
  visibility: "visible",
  variants: [{
    props: {
      loading: !0
    },
    style: {
      display: "flex"
    }
  }, {
    props: {
      loadingPosition: "start"
    },
    style: {
      left: 14
    }
  }, {
    props: {
      loadingPosition: "start",
      size: "small"
    },
    style: {
      left: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "start"
    },
    style: {
      left: 6
    }
  }, {
    props: {
      loadingPosition: "center"
    },
    style: {
      left: "50%",
      transform: "translate(-50%)",
      color: (e.vars || e).palette.action.disabled
    }
  }, {
    props: {
      loadingPosition: "end"
    },
    style: {
      right: 14
    }
  }, {
    props: {
      loadingPosition: "end",
      size: "small"
    },
    style: {
      right: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "end"
    },
    style: {
      right: 6
    }
  }, {
    props: {
      loadingPosition: "start",
      fullWidth: !0
    },
    style: {
      position: "relative",
      left: -10
    }
  }, {
    props: {
      loadingPosition: "end",
      fullWidth: !0
    },
    style: {
      position: "relative",
      right: -10
    }
  }]
})), I0 = Ce("span", {
  name: "MuiButton",
  slot: "LoadingIconPlaceholder",
  overridesResolver: (e, t) => t.loadingIconPlaceholder
})({
  display: "inline-block",
  width: "1em",
  height: "1em"
}), vy = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = $.useContext(HC), r = $.useContext(WC), i = Wl(o, t), s = ut({
    props: i,
    name: "MuiButton"
  }), {
    children: l,
    color: c = "primary",
    component: u = "button",
    className: d,
    disabled: f = !1,
    disableElevation: p = !1,
    disableFocusRipple: h = !1,
    endIcon: g,
    focusVisibleClassName: m,
    fullWidth: y = !1,
    id: b,
    loading: T = null,
    loadingIndicator: v,
    loadingPosition: w = "center",
    size: S = "medium",
    startIcon: C,
    type: E,
    variant: P = "text",
    ...M
  } = s, x = hs(b), I = v ?? /* @__PURE__ */ O(Ac, {
    "aria-labelledby": x,
    color: "inherit",
    size: 16
  }), k = {
    ...s,
    color: c,
    component: u,
    disabled: f,
    disableElevation: p,
    disableFocusRipple: h,
    fullWidth: y,
    loading: T,
    loadingIndicator: I,
    loadingPosition: w,
    size: S,
    type: E,
    variant: P
  }, _ = lB(k), R = (C || T && w === "start") && /* @__PURE__ */ O(uB, {
    className: _.startIcon,
    ownerState: k,
    children: C || /* @__PURE__ */ O(I0, {
      className: _.loadingIconPlaceholder,
      ownerState: k
    })
  }), A = (g || T && w === "end") && /* @__PURE__ */ O(dB, {
    className: _.endIcon,
    ownerState: k,
    children: g || /* @__PURE__ */ O(I0, {
      className: _.loadingIconPlaceholder,
      ownerState: k
    })
  }), N = r || "", L = typeof T == "boolean" ? (
    // use plain HTML span to minimize the runtime overhead
    /* @__PURE__ */ O("span", {
      className: _.loadingWrapper,
      style: {
        display: "contents"
      },
      children: T && /* @__PURE__ */ O(fB, {
        className: _.loadingIndicator,
        ownerState: k,
        children: I
      })
    })
  ) : null;
  return /* @__PURE__ */ Se(cB, {
    ownerState: k,
    className: Ie(o.className, _.root, d, N),
    component: u,
    disabled: f || T,
    focusRipple: !h,
    focusVisibleClassName: Ie(_.focusVisible, m),
    ref: n,
    type: E,
    id: T ? x : b,
    ...M,
    classes: _,
    children: [R, w !== "end" && L, l, w === "end" && L, A]
  });
});
process.env.NODE_ENV !== "production" && (vy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: a.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * Element placed after the children.
   */
  endIcon: a.node,
  /**
   * @ignore
   */
  focusVisibleClassName: a.string,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: a.string,
  /**
   * @ignore
   */
  id: a.string,
  /**
   * If `true`, the loading indicator is visible and the button is disabled.
   * If `true | false`, the loading wrapper is always rendered before the children to prevent [Google Translation Crash](https://github.com/mui/material-ui/issues/27853).
   * @default null
   */
  loading: a.bool,
  /**
   * Element placed before the children if the button is in loading state.
   * The node should contain an element with `role="progressbar"` with an accessible name.
   * By default, it renders a `CircularProgress` that is labeled by the button itself.
   * @default <CircularProgress color="inherit" size={16} />
   */
  loadingIndicator: a.node,
  /**
   * The loading indicator can be positioned on the start, end, or the center of the button.
   * @default 'center'
   */
  loadingPosition: a.oneOf(["center", "end", "start"]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["small", "medium", "large"]), a.string]),
  /**
   * Element placed before the children.
   */
  startIcon: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * @ignore
   */
  type: a.oneOfType([a.oneOf(["button", "reset", "submit"]), a.string]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: a.oneOfType([a.oneOf(["contained", "outlined", "text"]), a.string])
});
const Mn = Pe(
  ({
    text: e,
    loading: t,
    disabled: n,
    isOutlined: o,
    isGhost: r,
    isCircle: i,
    isSquare: s,
    icon: l = void 0,
    iconWidth: c = 20,
    iconPosition: u = void 0,
    color: d = "primary",
    onClick: f,
    sx: p,
    ...h
  }) => {
    const { buttonColors: g } = pB({ color: d, isGhost: r, isOutlined: o }), m = Ge(() => l ? /* @__PURE__ */ O(Eo, { icon: l, width: c }) : null, [l, c]);
    return /* @__PURE__ */ Se(
      vy,
      {
        variant: r ? "text" : o ? "outlined" : "contained",
        loading: t,
        disabled: n,
        startIcon: u === "start" && m,
        endIcon: u === "end" && m,
        sx: {
          minWidth: "40px",
          minHeight: "40px",
          width: i ? "40px" : "unset",
          height: i ? "40px" : "unset",
          textTransform: "none",
          fontWeight: "bold",
          borderRadius: i ? "50%" : "8px",
          p: i || s ? "6px" : "auto",
          px: i || s ? "0" : "16px !important",
          cursor: t ? "wait !important" : n ? "not-allowed !important" : "pointer",
          pointerEvents: "auto !important",
          transition: "background-color 0s, background-image 0s",
          "& .MuiButton-startIcon": { width: c, mr: "8px", svg: { color: "inherit" } },
          "& .MuiButton-endIcon": { width: c, mr: "8px", svg: { color: "inherit" } },
          ...g,
          ...p
        },
        onClick: (y) => {
          y.stopPropagation(), f == null || f(y);
        },
        ...h,
        children: [
          !u && m,
          !i && e
        ]
      }
    );
  }
);
Mn.displayName = "Button";
function pB({ color: e = "primary", isGhost: t, isOutlined: n }) {
  const o = Zr();
  return { buttonColors: Ge(() => {
    const i = o.palette.mode === "dark", s = {
      auto: o.palette.text.primary,
      disabled: o.palette.action.disabled,
      primary: o.palette.primary.main,
      success: o.palette.success.main,
      error: o.palette.error.main
    }, l = e in s ? s[e] : "inherit", c = i && ["auto", "disabled"].includes(e) ? "black" : o.palette.primary.contrastText;
    return {
      backgroundColor: t || n ? "transparent" : l,
      color: t || n ? l : c,
      borderColor: n ? l : "transparent"
    };
  }, [o, e, t, n]) };
}
const _c = Pe(
  ({ isOutlined: e, clickable: t, onClick: n, disabled: o, children: r, sx: i }) => t ? /* @__PURE__ */ O(
    vy,
    {
      className: "VenomousUI-Card",
      component: Wr,
      isOutlined: e,
      disabled: o,
      onClick: o ? void 0 : n,
      sx: {
        display: "block",
        color: "inherit",
        textTransform: "none",
        borderRadius: "8px",
        cursor: o ? "not-allowed !important" : "pointer",
        pointerEvents: "auto !important",
        p: "16px",
        ...e ? {
          border: 1,
          borderColor: "divider"
        } : {},
        ...i
      },
      children: r
    }
  ) : /* @__PURE__ */ O(Wr, { className: "VenomousUI-Card", isOutlined: e, sx: { p: "16px", ...i }, children: r })
);
_c.displayName = "Card";
const bn = Pe(
  ({ children: e, row: t, alignItems: n, justifyContent: o, gap: r = 1, sx: i, component: s, ...l }) => /* @__PURE__ */ O(
    Ho,
    {
      className: "VenomousUI-Flex",
      component: s || "div",
      sx: {
        display: "flex",
        flexDirection: t ? "row" : "column",
        alignItems: n || (t ? "center" : "start"),
        justifyContent: o || "start",
        ...Array.isArray(r) ? { rowGap: r[0], columnGap: r[1] } : { gap: r },
        ...i
      },
      ...l,
      children: e
    }
  )
);
bn.displayName = "Flex";
const hB = Pe(
  ({ title: e, subtitle: t, headerStartExtra: n, headerEndExtra: o, children: r, ...i }) => /* @__PURE__ */ Se(_c, { ...i, children: [
    /* @__PURE__ */ Se(bn, { row: !0, mb: "8px", justifyContent: "space-between", alignItems: "center", children: [
      n && /* @__PURE__ */ O("div", { style: { marginRight: t ? "8px" : 0 }, children: n }),
      /* @__PURE__ */ Se(bn, { gap: 0, children: [
        e && /* @__PURE__ */ O(Rn, { text: e, isTitle: !0, titleLevel: "h6", lineHeight: "1.25rem", ellipsis: !0 }),
        t && /* @__PURE__ */ O(Rn, { text: t, isLabel: !0, ellipsis: !0 })
      ] }),
      o && /* @__PURE__ */ O(
        "div",
        {
          style: {
            marginRight: t ? "-8px" : 0,
            marginTop: t ? "-8px" : 0,
            marginLeft: "8px"
          },
          children: o
        }
      )
    ] }),
    r
  ] })
);
hB.displayName = "ExhibitCard";
const If = 0, Ii = 1, _a = 2, qC = 4;
function k0(e) {
  return () => e;
}
function mB(e) {
  e();
}
function KC(e, t) {
  return (n) => e(t(n));
}
function $0(e, t) {
  return () => e(t);
}
function GC(e, t) {
  return (n) => e(t, n);
}
function xy(e) {
  return e !== void 0;
}
function gB(...e) {
  return () => {
    e.map(mB);
  };
}
function Da() {
}
function kf(e, t) {
  return t(e), e;
}
function yB(e, t) {
  return t(e);
}
function Ht(...e) {
  return e;
}
function kt(e, t) {
  return e(Ii, t);
}
function rt(e, t) {
  e(If, t);
}
function wy(e) {
  e(_a);
}
function Vn(e) {
  return e(qC);
}
function He(e, t) {
  return kt(e, GC(t, If));
}
function kr(e, t) {
  const n = e(Ii, (o) => {
    n(), t(o);
  });
  return n;
}
function N0(e) {
  let t, n;
  return (o) => (r) => {
    t = r, n && clearTimeout(n), n = setTimeout(() => {
      o(t);
    }, e);
  };
}
function YC(e, t) {
  return e === t;
}
function zt(e = YC) {
  let t;
  return (n) => (o) => {
    e(t, o) || (t = o, n(o));
  };
}
function Xe(e) {
  return (t) => (n) => {
    e(n) && t(n);
  };
}
function Fe(e) {
  return (t) => KC(t, e);
}
function gr(e) {
  return (t) => () => {
    t(e);
  };
}
function Oe(e, ...t) {
  const n = bB(...t);
  return (o, r) => {
    switch (o) {
      case _a:
        wy(e);
        return;
      case Ii:
        return kt(e, n(r));
    }
  };
}
function vr(e, t) {
  return (n) => (o) => {
    n(t = e(t, o));
  };
}
function ha(e) {
  return (t) => (n) => {
    e > 0 ? e-- : t(n);
  };
}
function di(e) {
  let t = null, n;
  return (o) => (r) => {
    t = r, !n && (n = setTimeout(() => {
      n = void 0, o(t);
    }, e));
  };
}
function ct(...e) {
  const t = new Array(e.length);
  let n = 0, o = null;
  const r = Math.pow(2, e.length) - 1;
  return e.forEach((i, s) => {
    const l = Math.pow(2, s);
    kt(i, (c) => {
      const u = n;
      n = n | l, t[s] = c, u !== r && n === r && o && (o(), o = null);
    });
  }), (i) => (s) => {
    const l = () => {
      i([s].concat(t));
    };
    n === r ? l() : o = l;
  };
}
function bB(...e) {
  return (t) => e.reduceRight(yB, t);
}
function vB(e) {
  let t, n;
  const o = () => t == null ? void 0 : t();
  return function(r, i) {
    switch (r) {
      case Ii:
        return i ? n === i ? void 0 : (o(), n = i, t = kt(e, i), t) : (o(), Da);
      case _a:
        o(), n = null;
        return;
    }
  };
}
function ke(e) {
  let t = e;
  const n = gt();
  return (o, r) => {
    switch (o) {
      case If:
        t = r;
        break;
      case Ii: {
        r(t);
        break;
      }
      case qC:
        return t;
    }
    return n(o, r);
  };
}
function Fn(e, t) {
  return kf(ke(t), (n) => He(e, n));
}
function gt() {
  const e = [];
  return (t, n) => {
    switch (t) {
      case If:
        e.slice().forEach((o) => {
          o(n);
        });
        return;
      case _a:
        e.splice(0, e.length);
        return;
      case Ii:
        return e.push(n), () => {
          const o = e.indexOf(n);
          o > -1 && e.splice(o, 1);
        };
    }
  };
}
function To(e) {
  return kf(gt(), (t) => He(e, t));
}
function Tt(e, t = [], { singleton: n } = { singleton: !0 }) {
  return {
    constructor: e,
    dependencies: t,
    id: xB(),
    singleton: n
  };
}
const xB = () => Symbol();
function wB(e) {
  const t = /* @__PURE__ */ new Map(), n = ({ constructor: o, dependencies: r, id: i, singleton: s }) => {
    if (s && t.has(i))
      return t.get(i);
    const l = o(r.map((c) => n(c)));
    return s && t.set(i, l), l;
  };
  return n(e);
}
function Tn(...e) {
  const t = gt(), n = new Array(e.length);
  let o = 0;
  const r = Math.pow(2, e.length) - 1;
  return e.forEach((i, s) => {
    const l = Math.pow(2, s);
    kt(i, (c) => {
      n[s] = c, o = o | l, o === r && rt(t, n);
    });
  }), function(i, s) {
    switch (i) {
      case _a: {
        wy(t);
        return;
      }
      case Ii:
        return o === r && s(n), kt(t, s);
    }
  };
}
function Ze(e, t = YC) {
  return Oe(e, zt(t));
}
function M0(...e) {
  return function(t, n) {
    switch (t) {
      case _a:
        return;
      case Ii:
        return gB(...e.map((o) => kt(o, n)));
    }
  };
}
var Co = /* @__PURE__ */ ((e) => (e[e.DEBUG = 0] = "DEBUG", e[e.INFO = 1] = "INFO", e[e.WARN = 2] = "WARN", e[e.ERROR = 3] = "ERROR", e))(Co || {});
const SB = {
  0: "debug",
  3: "error",
  1: "log",
  2: "warn"
}, TB = () => typeof globalThis > "u" ? window : globalThis, ki = Tt(
  () => {
    const e = ke(
      3
      /* ERROR */
    );
    return {
      log: ke((t, n, o = 1) => {
        var r;
        const i = (r = TB().VIRTUOSO_LOG_LEVEL) != null ? r : Vn(e);
        o >= i && console[SB[o]](
          "%creact-virtuoso: %c%s %o",
          "color: #0253b3; font-weight: bold",
          "color: initial",
          t,
          n
        );
      }),
      logLevel: e
    };
  },
  [],
  { singleton: !0 }
);
function gs(e, t, n) {
  return Sy(e, t, n).callbackRef;
}
function Sy(e, t, n) {
  const o = Z.useRef(null);
  let r = (i) => {
  };
  if (typeof ResizeObserver < "u") {
    const i = Z.useMemo(() => new ResizeObserver((s) => {
      const l = () => {
        const c = s[0].target;
        c.offsetParent !== null && e(c);
      };
      n ? l() : requestAnimationFrame(l);
    }), [e]);
    r = (s) => {
      s && t ? (i.observe(s), o.current = s) : (o.current && i.unobserve(o.current), o.current = null);
    };
  }
  return { callbackRef: r, ref: o };
}
function CB(e, t, n, o, r, i, s, l, c) {
  const u = Z.useCallback(
    (d) => {
      const f = EB(d.children, t, l ? "offsetWidth" : "offsetHeight", r);
      let p = d.parentElement;
      for (; !p.dataset.virtuosoScroller; )
        p = p.parentElement;
      const h = p.lastElementChild.dataset.viewportType === "window";
      let g;
      h && (g = p.ownerDocument.defaultView);
      const m = s ? l ? s.scrollLeft : s.scrollTop : h ? l ? g.scrollX || g.document.documentElement.scrollLeft : g.scrollY || g.document.documentElement.scrollTop : l ? p.scrollLeft : p.scrollTop, y = s ? l ? s.scrollWidth : s.scrollHeight : h ? l ? g.document.documentElement.scrollWidth : g.document.documentElement.scrollHeight : l ? p.scrollWidth : p.scrollHeight, b = s ? l ? s.offsetWidth : s.offsetHeight : h ? l ? g.innerWidth : g.innerHeight : l ? p.offsetWidth : p.offsetHeight;
      o({
        scrollHeight: y,
        scrollTop: Math.max(m, 0),
        viewportHeight: b
      }), i == null || i(
        l ? A0("column-gap", getComputedStyle(d).columnGap, r) : A0("row-gap", getComputedStyle(d).rowGap, r)
      ), f !== null && e(f);
    },
    [e, t, r, i, s, o]
  );
  return Sy(u, n, c);
}
function EB(e, t, n, o) {
  const r = e.length;
  if (r === 0)
    return null;
  const i = [];
  for (let s = 0; s < r; s++) {
    const l = e.item(s);
    if (l.dataset.index === void 0)
      continue;
    const c = parseInt(l.dataset.index), u = parseFloat(l.dataset.knownSize), d = t(l, n);
    if (d === 0 && o("Zero-sized element, this should not happen", { child: l }, Co.ERROR), d === u)
      continue;
    const f = i[i.length - 1];
    i.length === 0 || f.size !== d || f.endIndex !== c - 1 ? i.push({ endIndex: c, size: d, startIndex: c }) : i[i.length - 1].endIndex++;
  }
  return i;
}
function A0(e, t, n) {
  return t !== "normal" && !(t != null && t.endsWith("px")) && n(`${e} was not resolved to pixel value correctly`, t, Co.WARN), t === "normal" ? 0 : parseInt(t ?? "0", 10);
}
function XC(e, t, n) {
  const o = Z.useRef(null), r = Z.useCallback(
    (c) => {
      if (!(c != null && c.offsetParent))
        return;
      const u = c.getBoundingClientRect(), d = u.width;
      let f, p;
      if (t) {
        const h = t.getBoundingClientRect(), g = u.top - h.top;
        p = h.height - Math.max(0, g), f = g + t.scrollTop;
      } else {
        const h = s.current.ownerDocument.defaultView;
        p = h.innerHeight - Math.max(0, u.top), f = u.top + h.scrollY;
      }
      o.current = {
        offsetTop: f,
        visibleHeight: p,
        visibleWidth: d
      }, e(o.current);
    },
    [e, t]
  ), { callbackRef: i, ref: s } = Sy(r, !0, n), l = Z.useCallback(() => {
    r(s.current);
  }, [r, s]);
  return Z.useEffect(() => {
    var c;
    if (t) {
      t.addEventListener("scroll", l);
      const u = new ResizeObserver(() => {
        requestAnimationFrame(l);
      });
      return u.observe(t), () => {
        t.removeEventListener("scroll", l), u.unobserve(t);
      };
    } else {
      const u = (c = s.current) == null ? void 0 : c.ownerDocument.defaultView;
      return u == null || u.addEventListener("scroll", l), u == null || u.addEventListener("resize", l), () => {
        u == null || u.removeEventListener("scroll", l), u == null || u.removeEventListener("resize", l);
      };
    }
  }, [l, t]), i;
}
const eo = Tt(
  () => {
    const e = gt(), t = gt(), n = ke(0), o = gt(), r = ke(0), i = gt(), s = gt(), l = ke(0), c = ke(0), u = ke(0), d = ke(0), f = gt(), p = gt(), h = ke(!1), g = ke(!1), m = ke(!1);
    return He(
      Oe(
        e,
        Fe(({ scrollTop: y }) => y)
      ),
      t
    ), He(
      Oe(
        e,
        Fe(({ scrollHeight: y }) => y)
      ),
      s
    ), He(t, r), {
      deviation: n,
      fixedFooterHeight: u,
      fixedHeaderHeight: c,
      footerHeight: d,
      headerHeight: l,
      horizontalDirection: g,
      scrollBy: p,
      // input
      scrollContainerState: e,
      scrollHeight: s,
      scrollingInProgress: h,
      // signals
      scrollTo: f,
      scrollTop: t,
      skipAnimationFrameInResizeObserver: m,
      smoothScrollTargetReached: o,
      // state
      statefulScrollTop: r,
      viewportHeight: i
    };
  },
  [],
  { singleton: !0 }
), Zl = { lvl: 0 };
function ZC(e, t) {
  const n = e.length;
  if (n === 0)
    return [];
  let { index: o, value: r } = t(e[0]);
  const i = [];
  for (let s = 1; s < n; s++) {
    const { index: l, value: c } = t(e[s]);
    i.push({ end: l - 1, start: o, value: r }), o = l, r = c;
  }
  return i.push({ end: 1 / 0, start: o, value: r }), i;
}
function Lt(e) {
  return e === Zl;
}
function Ql(e, t) {
  if (!Lt(e))
    return t === e.k ? e.v : t < e.k ? Ql(e.l, t) : Ql(e.r, t);
}
function sr(e, t, n = "k") {
  if (Lt(e))
    return [-1 / 0, void 0];
  if (Number(e[n]) === t)
    return [e.k, e.v];
  if (Number(e[n]) < t) {
    const o = sr(e.r, t, n);
    return o[0] === -1 / 0 ? [e.k, e.v] : o;
  }
  return sr(e.l, t, n);
}
function bo(e, t, n) {
  return Lt(e) ? eE(t, n, 1) : t === e.k ? Sn(e, { k: t, v: n }) : t < e.k ? _0(Sn(e, { l: bo(e.l, t, n) })) : _0(Sn(e, { r: bo(e.r, t, n) }));
}
function Qs() {
  return Zl;
}
function $f(e, t, n) {
  if (Lt(e))
    return [];
  const o = sr(e, t)[0];
  return OB(Em(e, o, n));
}
function Cm(e, t) {
  if (Lt(e)) return Zl;
  const { k: n, l: o, r } = e;
  if (t === n) {
    if (Lt(o))
      return r;
    if (Lt(r))
      return o;
    {
      const [i, s] = JC(o);
      return Ju(Sn(e, { k: i, l: QC(o), v: s }));
    }
  } else return t < n ? Ju(Sn(e, { l: Cm(o, t) })) : Ju(Sn(e, { r: Cm(r, t) }));
}
function Zi(e) {
  return Lt(e) ? [] : [...Zi(e.l), { k: e.k, v: e.v }, ...Zi(e.r)];
}
function Em(e, t, n) {
  if (Lt(e))
    return [];
  const { k: o, l: r, r: i, v: s } = e;
  let l = [];
  return o > t && (l = l.concat(Em(r, t, n))), o >= t && o <= n && l.push({ k: o, v: s }), o <= n && (l = l.concat(Em(i, t, n))), l;
}
function Ju(e) {
  const { l: t, lvl: n, r: o } = e;
  if (o.lvl >= n - 1 && t.lvl >= n - 1)
    return e;
  if (n > o.lvl + 1) {
    if (th(t))
      return tE(Sn(e, { lvl: n - 1 }));
    if (!Lt(t) && !Lt(t.r))
      return Sn(t.r, {
        l: Sn(t, { r: t.r.l }),
        lvl: n,
        r: Sn(e, {
          l: t.r.r,
          lvl: n - 1
        })
      });
    throw new Error("Unexpected empty nodes");
  } else {
    if (th(e))
      return Om(Sn(e, { lvl: n - 1 }));
    if (!Lt(o) && !Lt(o.l)) {
      const r = o.l, i = th(r) ? o.lvl - 1 : o.lvl;
      return Sn(r, {
        l: Sn(e, {
          lvl: n - 1,
          r: r.l
        }),
        lvl: r.lvl + 1,
        r: Om(Sn(o, { l: r.r, lvl: i }))
      });
    } else
      throw new Error("Unexpected empty nodes");
  }
}
function Sn(e, t) {
  return eE(
    t.k !== void 0 ? t.k : e.k,
    t.v !== void 0 ? t.v : e.v,
    t.lvl !== void 0 ? t.lvl : e.lvl,
    t.l !== void 0 ? t.l : e.l,
    t.r !== void 0 ? t.r : e.r
  );
}
function QC(e) {
  return Lt(e.r) ? e.l : Ju(Sn(e, { r: QC(e.r) }));
}
function th(e) {
  return Lt(e) || e.lvl > e.r.lvl;
}
function JC(e) {
  return Lt(e.r) ? [e.k, e.v] : JC(e.r);
}
function eE(e, t, n, o = Zl, r = Zl) {
  return { k: e, l: o, lvl: n, r, v: t };
}
function _0(e) {
  return Om(tE(e));
}
function tE(e) {
  const { l: t } = e;
  return !Lt(t) && t.lvl === e.lvl ? Sn(t, { r: Sn(e, { l: t.r }) }) : e;
}
function Om(e) {
  const { lvl: t, r: n } = e;
  return !Lt(n) && !Lt(n.r) && n.lvl === t && n.r.lvl === t ? Sn(n, { l: Sn(e, { r: n.l }), lvl: t + 1 }) : e;
}
function OB(e) {
  return ZC(e, ({ k: t, v: n }) => ({ index: t, value: n }));
}
function nE(e, t) {
  return !!(e && e.startIndex === t.startIndex && e.endIndex === t.endIndex);
}
function Jl(e, t) {
  return !!(e && e[0] === t[0] && e[1] === t[1]);
}
const Ty = Tt(
  () => ({ recalcInProgress: ke(!1) }),
  [],
  { singleton: !0 }
);
function oE(e, t, n) {
  return e[Cd(e, t, n)];
}
function Cd(e, t, n, o = 0) {
  let r = e.length - 1;
  for (; o <= r; ) {
    const i = Math.floor((o + r) / 2), s = e[i], l = n(s, t);
    if (l === 0)
      return i;
    if (l === -1) {
      if (r - o < 2)
        return i - 1;
      r = i - 1;
    } else {
      if (r === o)
        return i;
      o = i + 1;
    }
  }
  throw new Error(`Failed binary finding record in array - ${e.join(",")}, searched for ${t}`);
}
function PB(e, t, n, o) {
  const r = Cd(e, t, o), i = Cd(e, n, o, r);
  return e.slice(r, i + 1);
}
function yi(e, t) {
  return Math.round(e.getBoundingClientRect()[t]);
}
function Nf(e) {
  return !Lt(e.groupOffsetTree);
}
function Cy({ index: e }, t) {
  return t === e ? 0 : t < e ? -1 : 1;
}
function RB() {
  return {
    groupIndices: [],
    groupOffsetTree: Qs(),
    lastIndex: 0,
    lastOffset: 0,
    lastSize: 0,
    offsetTree: [],
    sizeTree: Qs()
  };
}
function IB(e, t) {
  let n = Lt(e) ? 0 : 1 / 0;
  for (const o of t) {
    const { endIndex: r, size: i, startIndex: s } = o;
    if (n = Math.min(n, s), Lt(e)) {
      e = bo(e, 0, i);
      continue;
    }
    const l = $f(e, s - 1, r + 1);
    if (l.some(DB(o)))
      continue;
    let c = !1, u = !1;
    for (const { end: d, start: f, value: p } of l)
      c ? (r >= f || i === p) && (e = Cm(e, f)) : (u = p !== i, c = !0), d > r && r >= f && p !== i && (e = bo(e, r + 1, p));
    u && (e = bo(e, s, i));
  }
  return [e, n];
}
function kB(e) {
  return typeof e.groupIndex < "u";
}
function $B({ offset: e }, t) {
  return t === e ? 0 : t < e ? -1 : 1;
}
function ec(e, t, n) {
  if (t.length === 0)
    return 0;
  const { index: o, offset: r, size: i } = oE(t, e, Cy), s = e - o, l = i * s + (s - 1) * n + r;
  return l > 0 ? l + n : l;
}
function rE(e, t) {
  if (!Nf(t))
    return e;
  let n = 0;
  for (; t.groupIndices[n] <= e + n; )
    n++;
  return e + n;
}
function iE(e, t, n) {
  if (kB(e))
    return t.groupIndices[e.groupIndex] + 1;
  {
    const o = e.index === "LAST" ? n : e.index;
    let r = rE(o, t);
    return r = Math.max(0, r, Math.min(n, r)), r;
  }
}
function NB(e, t, n, o = 0) {
  return o > 0 && (t = Math.max(t, oE(e, o, Cy).offset)), ZC(PB(e, t, n, $B), _B);
}
function MB(e, [t, n, o, r]) {
  t.length > 0 && o("received item sizes", t, Co.DEBUG);
  const i = e.sizeTree;
  let s = i, l = 0;
  if (n.length > 0 && Lt(i) && t.length === 2) {
    const p = t[0].size, h = t[1].size;
    s = n.reduce((g, m) => bo(bo(g, m, p), m + 1, h), s);
  } else
    [s, l] = IB(s, t);
  if (s === i)
    return e;
  const { lastIndex: c, lastOffset: u, lastSize: d, offsetTree: f } = Pm(e.offsetTree, l, s, r);
  return {
    groupIndices: n,
    groupOffsetTree: n.reduce((p, h) => bo(p, h, ec(h, f, r)), Qs()),
    lastIndex: c,
    lastOffset: u,
    lastSize: d,
    offsetTree: f,
    sizeTree: s
  };
}
function AB(e) {
  return Zi(e).map(({ k: t, v: n }, o, r) => {
    const i = r[o + 1];
    return { endIndex: i ? i.k - 1 : 1 / 0, size: n, startIndex: t };
  });
}
function D0(e, t) {
  let n = 0, o = 0;
  for (; n < e; )
    n += t[o + 1] - t[o] - 1, o++;
  return o - (n === e ? 0 : 1);
}
function Pm(e, t, n, o) {
  let r = e, i = 0, s = 0, l = 0, c = 0;
  if (t !== 0) {
    c = Cd(r, t - 1, Cy), l = r[c].offset;
    const u = sr(n, t - 1);
    i = u[0], s = u[1], r.length && r[c].size === sr(n, t)[1] && (c -= 1), r = r.slice(0, c + 1);
  } else
    r = [];
  for (const { start: u, value: d } of $f(n, t, 1 / 0)) {
    const f = u - i, p = f * s + l + f * o;
    r.push({
      index: u,
      offset: p,
      size: d
    }), i = u, l = p, s = d;
  }
  return {
    lastIndex: i,
    lastOffset: l,
    lastSize: s,
    offsetTree: r
  };
}
function _B(e) {
  return { index: e.index, value: e };
}
function DB(e) {
  const { endIndex: t, size: n, startIndex: o } = e;
  return (r) => r.start === o && (r.end === t || r.end === 1 / 0) && r.value === n;
}
const LB = {
  offsetHeight: "height",
  offsetWidth: "width"
}, Nr = Tt(
  ([{ log: e }, { recalcInProgress: t }]) => {
    const n = gt(), o = gt(), r = Fn(o, 0), i = gt(), s = gt(), l = ke(0), c = ke([]), u = ke(void 0), d = ke(void 0), f = ke((S, C) => yi(S, LB[C])), p = ke(void 0), h = ke(0), g = RB(), m = Fn(
      Oe(n, ct(c, e, h), vr(MB, g), zt()),
      g
    ), y = Fn(
      Oe(
        c,
        zt(),
        vr((S, C) => ({ current: C, prev: S.current }), {
          current: [],
          prev: []
        }),
        Fe(({ prev: S }) => S)
      ),
      []
    );
    He(
      Oe(
        c,
        Xe((S) => S.length > 0),
        ct(m, h),
        Fe(([S, C, E]) => {
          const P = S.reduce((M, x, I) => bo(M, x, ec(x, C.offsetTree, E) || I), Qs());
          return {
            ...C,
            groupIndices: S,
            groupOffsetTree: P
          };
        })
      ),
      m
    ), He(
      Oe(
        o,
        ct(m),
        Xe(([S, { lastIndex: C }]) => S < C),
        Fe(([S, { lastIndex: C, lastSize: E }]) => [
          {
            endIndex: C,
            size: E,
            startIndex: S
          }
        ])
      ),
      n
    ), He(u, d);
    const b = Fn(
      Oe(
        u,
        Fe((S) => S === void 0)
      ),
      !0
    );
    He(
      Oe(
        d,
        Xe((S) => S !== void 0 && Lt(Vn(m).sizeTree)),
        Fe((S) => [{ endIndex: 0, size: S, startIndex: 0 }])
      ),
      n
    );
    const T = To(
      Oe(
        n,
        ct(m),
        vr(
          ({ sizes: S }, [C, E]) => ({
            changed: E !== S,
            sizes: E
          }),
          { changed: !1, sizes: g }
        ),
        Fe((S) => S.changed)
      )
    );
    kt(
      Oe(
        l,
        vr(
          (S, C) => ({ diff: S.prev - C, prev: C }),
          { diff: 0, prev: 0 }
        ),
        Fe((S) => S.diff)
      ),
      (S) => {
        const { groupIndices: C } = Vn(m);
        if (S > 0)
          rt(t, !0), rt(i, S + D0(S, C));
        else if (S < 0) {
          const E = Vn(y);
          E.length > 0 && (S -= D0(-S, E)), rt(s, S);
        }
      }
    ), kt(Oe(l, ct(e)), ([S, C]) => {
      S < 0 && C(
        "`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value",
        { firstItemIndex: l },
        Co.ERROR
      );
    });
    const v = To(i);
    He(
      Oe(
        i,
        ct(m),
        Fe(([S, C]) => {
          const E = C.groupIndices.length > 0, P = [], M = C.lastSize;
          if (E) {
            const x = Ql(C.sizeTree, 0);
            let I = 0, k = 0;
            for (; I < S; ) {
              const R = C.groupIndices[k], A = C.groupIndices.length === k + 1 ? 1 / 0 : C.groupIndices[k + 1] - R - 1;
              P.push({
                endIndex: R,
                size: x,
                startIndex: R
              }), P.push({
                endIndex: R + 1 + A - 1,
                size: M,
                startIndex: R + 1
              }), k++, I += A + 1;
            }
            const _ = Zi(C.sizeTree);
            return I !== S && _.shift(), _.reduce(
              (R, { k: A, v: N }) => {
                let L = R.ranges;
                return R.prevSize !== 0 && (L = [
                  ...R.ranges,
                  {
                    endIndex: A + S - 1,
                    size: R.prevSize,
                    startIndex: R.prevIndex
                  }
                ]), {
                  prevIndex: A + S,
                  prevSize: N,
                  ranges: L
                };
              },
              {
                prevIndex: S,
                prevSize: 0,
                ranges: P
              }
            ).ranges;
          }
          return Zi(C.sizeTree).reduce(
            (x, { k: I, v: k }) => ({
              prevIndex: I + S,
              prevSize: k,
              ranges: [...x.ranges, { endIndex: I + S - 1, size: x.prevSize, startIndex: x.prevIndex }]
            }),
            {
              prevIndex: 0,
              prevSize: M,
              ranges: []
            }
          ).ranges;
        })
      ),
      n
    );
    const w = To(
      Oe(
        s,
        ct(m, h),
        Fe(([S, { offsetTree: C }, E]) => {
          const P = -S;
          return ec(P, C, E);
        })
      )
    );
    return He(
      Oe(
        s,
        ct(m, h),
        Fe(([S, C, E]) => {
          if (C.groupIndices.length > 0) {
            if (Lt(C.sizeTree))
              return C;
            let P = Qs();
            const M = Vn(y);
            let x = 0, I = 0, k = 0;
            for (; x < -S; ) {
              k = M[I];
              const _ = M[I + 1] - k - 1;
              I++, x += _ + 1;
            }
            if (P = Zi(C.sizeTree).reduce((_, { k: R, v: A }) => bo(_, Math.max(0, R + S), A), P), x !== -S) {
              const _ = Ql(C.sizeTree, k);
              P = bo(P, 0, _);
              const R = sr(C.sizeTree, -S + 1)[1];
              P = bo(P, 1, R);
            }
            return {
              ...C,
              sizeTree: P,
              ...Pm(C.offsetTree, 0, P, E)
            };
          } else {
            const P = Zi(C.sizeTree).reduce((M, { k: x, v: I }) => bo(M, Math.max(0, x + S), I), Qs());
            return {
              ...C,
              sizeTree: P,
              ...Pm(C.offsetTree, 0, P, E)
            };
          }
        })
      ),
      m
    ), {
      beforeUnshiftWith: v,
      // input
      data: p,
      defaultItemSize: d,
      firstItemIndex: l,
      fixedItemSize: u,
      gap: h,
      groupIndices: c,
      itemSize: f,
      listRefresh: T,
      shiftWith: s,
      shiftWithOffset: w,
      sizeRanges: n,
      // output
      sizes: m,
      statefulTotalCount: r,
      totalCount: o,
      trackItemSizes: b,
      unshiftWith: i
    };
  },
  Ht(ki, Ty),
  { singleton: !0 }
);
function BB(e) {
  return e.reduce(
    (t, n) => (t.groupIndices.push(t.totalCount), t.totalCount += n + 1, t),
    {
      groupIndices: [],
      totalCount: 0
    }
  );
}
const sE = Tt(
  ([{ groupIndices: e, sizes: t, totalCount: n }, { headerHeight: o, scrollTop: r }]) => {
    const i = gt(), s = gt(), l = To(Oe(i, Fe(BB)));
    return He(
      Oe(
        l,
        Fe((c) => c.totalCount)
      ),
      n
    ), He(
      Oe(
        l,
        Fe((c) => c.groupIndices)
      ),
      e
    ), He(
      Oe(
        Tn(r, t, o),
        Xe(([c, u]) => Nf(u)),
        Fe(([c, u, d]) => sr(u.groupOffsetTree, Math.max(c - d, 0), "v")[0]),
        zt(),
        Fe((c) => [c])
      ),
      s
    ), { groupCounts: i, topItemsIndexes: s };
  },
  Ht(Nr, eo)
), $i = Tt(
  ([{ log: e }]) => {
    const t = ke(!1), n = To(
      Oe(
        t,
        Xe((o) => o),
        zt()
      )
    );
    return kt(t, (o) => {
      o && Vn(e)("props updated", {}, Co.DEBUG);
    }), { didMount: n, propsReady: t };
  },
  Ht(ki),
  { singleton: !0 }
), VB = typeof document < "u" && "scrollBehavior" in document.documentElement.style;
function aE(e) {
  const t = typeof e == "number" ? { index: e } : e;
  return t.align || (t.align = "start"), (!t.behavior || !VB) && (t.behavior = "auto"), t.offset || (t.offset = 0), t;
}
const Dc = Tt(
  ([
    { gap: e, listRefresh: t, sizes: n, totalCount: o },
    {
      fixedFooterHeight: r,
      fixedHeaderHeight: i,
      footerHeight: s,
      headerHeight: l,
      scrollingInProgress: c,
      scrollTo: u,
      smoothScrollTargetReached: d,
      viewportHeight: f
    },
    { log: p }
  ]) => {
    const h = gt(), g = gt(), m = ke(0);
    let y = null, b = null, T = null;
    function v() {
      y && (y(), y = null), T && (T(), T = null), b && (clearTimeout(b), b = null), rt(c, !1);
    }
    return He(
      Oe(
        h,
        ct(n, f, o, m, l, s, p),
        ct(e, i, r),
        Fe(
          ([
            [w, S, C, E, P, M, x, I],
            k,
            _,
            R
          ]) => {
            const A = aE(w), { align: N, behavior: L, offset: V } = A, D = E - 1, B = iE(A, S, D);
            let F = ec(B, S.offsetTree, k) + M;
            N === "end" ? (F += _ + sr(S.sizeTree, B)[1] - C + R, B === D && (F += x)) : N === "center" ? F += (_ + sr(S.sizeTree, B)[1] - C + R) / 2 : F -= P, V && (F += V);
            const U = (q) => {
              v(), q ? (I("retrying to scroll to", { location: w }, Co.DEBUG), rt(h, w)) : (rt(g, !0), I("list did not change, scroll successful", {}, Co.DEBUG));
            };
            if (v(), L === "smooth") {
              let q = !1;
              T = kt(t, (G) => {
                q = q || G;
              }), y = kr(d, () => {
                U(q);
              });
            } else
              y = kr(Oe(t, FB(150)), U);
            return b = setTimeout(() => {
              v();
            }, 1200), rt(c, !0), I("scrolling from index to", { behavior: L, index: B, top: F }, Co.DEBUG), { behavior: L, top: F };
          }
        )
      ),
      u
    ), {
      scrollTargetReached: g,
      scrollToIndex: h,
      topListHeight: m
    };
  },
  Ht(Nr, eo, ki),
  { singleton: !0 }
);
function FB(e) {
  return (t) => {
    const n = setTimeout(() => {
      t(!1);
    }, e);
    return (o) => {
      o && (t(!0), clearTimeout(n));
    };
  };
}
function Ey(e, t) {
  e == 0 ? t() : requestAnimationFrame(() => {
    Ey(e - 1, t);
  });
}
function Oy(e, t) {
  const n = t - 1;
  return typeof e == "number" ? e : e.index === "LAST" ? n : e.index;
}
const Lc = Tt(
  ([{ defaultItemSize: e, listRefresh: t, sizes: n }, { scrollTop: o }, { scrollTargetReached: r, scrollToIndex: i }, { didMount: s }]) => {
    const l = ke(!0), c = ke(0), u = ke(!0);
    return He(
      Oe(
        s,
        ct(c),
        Xe(([d, f]) => !!f),
        gr(!1)
      ),
      l
    ), He(
      Oe(
        s,
        ct(c),
        Xe(([d, f]) => !!f),
        gr(!1)
      ),
      u
    ), kt(
      Oe(
        Tn(t, s),
        ct(l, n, e, u),
        Xe(([[, d], f, { sizeTree: p }, h, g]) => d && (!Lt(p) || xy(h)) && !f && !g),
        ct(c)
      ),
      ([, d]) => {
        kr(r, () => {
          rt(u, !0);
        }), Ey(4, () => {
          kr(o, () => {
            rt(l, !0);
          }), rt(i, d);
        });
      }
    ), {
      initialItemFinalLocationReached: u,
      initialTopMostItemIndex: c,
      scrolledToInitialItem: l
    };
  },
  Ht(Nr, eo, Dc, $i),
  { singleton: !0 }
);
function lE(e, t) {
  return Math.abs(e - t) < 1.01;
}
const tc = "up", El = "down", jB = "none", zB = {
  atBottom: !1,
  notAtBottomBecause: "NOT_SHOWING_LAST_ITEM",
  state: {
    offsetBottom: 0,
    scrollHeight: 0,
    scrollTop: 0,
    viewportHeight: 0
  }
}, HB = 0, Bc = Tt(([{ footerHeight: e, headerHeight: t, scrollBy: n, scrollContainerState: o, scrollTop: r, viewportHeight: i }]) => {
  const s = ke(!1), l = ke(!0), c = gt(), u = gt(), d = ke(4), f = ke(HB), p = Fn(
    Oe(
      M0(Oe(Ze(r), ha(1), gr(!0)), Oe(Ze(r), ha(1), gr(!1), N0(100))),
      zt()
    ),
    !1
  ), h = Fn(
    Oe(M0(Oe(n, gr(!0)), Oe(n, gr(!1), N0(200))), zt()),
    !1
  );
  He(
    Oe(
      Tn(Ze(r), Ze(f)),
      Fe(([T, v]) => T <= v),
      zt()
    ),
    l
  ), He(Oe(l, di(50)), u);
  const g = To(
    Oe(
      Tn(o, Ze(i), Ze(t), Ze(e), Ze(d)),
      vr((T, [{ scrollHeight: v, scrollTop: w }, S, C, E, P]) => {
        const M = w + S - v > -P, x = {
          scrollHeight: v,
          scrollTop: w,
          viewportHeight: S
        };
        if (M) {
          let k, _;
          return w > T.state.scrollTop ? (k = "SCROLLED_DOWN", _ = T.state.scrollTop - w) : (k = "SIZE_DECREASED", _ = T.state.scrollTop - w || T.scrollTopDelta), {
            atBottom: !0,
            atBottomBecause: k,
            scrollTopDelta: _,
            state: x
          };
        }
        let I;
        return x.scrollHeight > T.state.scrollHeight ? I = "SIZE_INCREASED" : S < T.state.viewportHeight ? I = "VIEWPORT_HEIGHT_DECREASING" : w < T.state.scrollTop ? I = "SCROLLING_UPWARDS" : I = "NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM", {
          atBottom: !1,
          notAtBottomBecause: I,
          state: x
        };
      }, zB),
      zt((T, v) => T && T.atBottom === v.atBottom)
    )
  ), m = Fn(
    Oe(
      o,
      vr(
        (T, { scrollHeight: v, scrollTop: w, viewportHeight: S }) => {
          if (lE(T.scrollHeight, v))
            return {
              changed: !1,
              jump: 0,
              scrollHeight: v,
              scrollTop: w
            };
          {
            const C = v - (w + S) < 1;
            return T.scrollTop !== w && C ? {
              changed: !0,
              jump: T.scrollTop - w,
              scrollHeight: v,
              scrollTop: w
            } : {
              changed: !0,
              jump: 0,
              scrollHeight: v,
              scrollTop: w
            };
          }
        },
        { changed: !1, jump: 0, scrollHeight: 0, scrollTop: 0 }
      ),
      Xe((T) => T.changed),
      Fe((T) => T.jump)
    ),
    0
  );
  He(
    Oe(
      g,
      Fe((T) => T.atBottom)
    ),
    s
  ), He(Oe(s, di(50)), c);
  const y = ke(El);
  He(
    Oe(
      o,
      Fe(({ scrollTop: T }) => T),
      zt(),
      vr(
        (T, v) => Vn(h) ? { direction: T.direction, prevScrollTop: v } : { direction: v < T.prevScrollTop ? tc : El, prevScrollTop: v },
        { direction: El, prevScrollTop: 0 }
      ),
      Fe((T) => T.direction)
    ),
    y
  ), He(Oe(o, di(50), gr(jB)), y);
  const b = ke(0);
  return He(
    Oe(
      p,
      Xe((T) => !T),
      gr(0)
    ),
    b
  ), He(
    Oe(
      r,
      di(100),
      ct(p),
      Xe(([T, v]) => !!v),
      vr(([T, v], [w]) => [v, w], [0, 0]),
      Fe(([T, v]) => v - T)
    ),
    b
  ), {
    atBottomState: g,
    atBottomStateChange: c,
    atBottomThreshold: d,
    atTopStateChange: u,
    atTopThreshold: f,
    isAtBottom: s,
    isAtTop: l,
    isScrolling: p,
    lastJumpDueToItemResize: m,
    scrollDirection: y,
    scrollVelocity: b
  };
}, Ht(eo)), Ed = "top", Od = "bottom", L0 = "none";
function B0(e, t, n) {
  return typeof e == "number" ? n === tc && t === Ed || n === El && t === Od ? e : 0 : n === tc ? t === Ed ? e.main : e.reverse : t === Od ? e.main : e.reverse;
}
function V0(e, t) {
  var n;
  return typeof e == "number" ? e : (n = e[t]) != null ? n : 0;
}
const Py = Tt(
  ([{ deviation: e, fixedHeaderHeight: t, headerHeight: n, scrollTop: o, viewportHeight: r }]) => {
    const i = gt(), s = ke(0), l = ke(0), c = ke(0), u = Fn(
      Oe(
        Tn(
          Ze(o),
          Ze(r),
          Ze(n),
          Ze(i, Jl),
          Ze(c),
          Ze(s),
          Ze(t),
          Ze(e),
          Ze(l)
        ),
        Fe(
          ([
            d,
            f,
            p,
            [h, g],
            m,
            y,
            b,
            T,
            v
          ]) => {
            const w = d - T, S = y + b, C = Math.max(p - w, 0);
            let E = L0;
            const P = V0(v, Ed), M = V0(v, Od);
            return h -= T, h += p + b, g += p + b, g -= T, h > d + S - P && (E = tc), g < d - C + f + M && (E = El), E !== L0 ? [
              Math.max(w - p - B0(m, Ed, E) - P, 0),
              w - C - b + f + B0(m, Od, E) + M
            ] : null;
          }
        ),
        Xe((d) => d != null),
        zt(Jl)
      ),
      [0, 0]
    );
    return {
      increaseViewportBy: l,
      // input
      listBoundary: i,
      overscan: c,
      topListHeight: s,
      // output
      visibleRange: u
    };
  },
  Ht(eo),
  { singleton: !0 }
);
function WB(e, t, n) {
  if (Nf(t)) {
    const o = rE(e, t);
    return [
      { index: sr(t.groupOffsetTree, o)[0], offset: 0, size: 0 },
      { data: n == null ? void 0 : n[0], index: o, offset: 0, size: 0 }
    ];
  }
  return [{ data: n == null ? void 0 : n[0], index: e, offset: 0, size: 0 }];
}
const nh = {
  bottom: 0,
  firstItemIndex: 0,
  items: [],
  offsetBottom: 0,
  offsetTop: 0,
  top: 0,
  topItems: [],
  topListHeight: 0,
  totalCount: 0
};
function ed(e, t, n, o, r, i) {
  const { lastIndex: s, lastOffset: l, lastSize: c } = r;
  let u = 0, d = 0;
  if (e.length > 0) {
    u = e[0].offset;
    const m = e[e.length - 1];
    d = m.offset + m.size;
  }
  const f = n - s, p = l + f * c + (f - 1) * o, h = u, g = p - d;
  return {
    bottom: d,
    firstItemIndex: i,
    items: F0(e, r, i),
    offsetBottom: g,
    offsetTop: u,
    top: h,
    topItems: F0(t, r, i),
    topListHeight: t.reduce((m, y) => y.size + m, 0),
    totalCount: n
  };
}
function cE(e, t, n, o, r, i) {
  let s = 0;
  if (n.groupIndices.length > 0)
    for (const d of n.groupIndices) {
      if (d - s >= e)
        break;
      s++;
    }
  const l = e + s, c = Oy(t, l), u = Array.from({ length: l }).map((d, f) => ({
    data: i[f + c],
    index: f + c,
    offset: 0,
    size: 0
  }));
  return ed(u, [], l, r, n, o);
}
function F0(e, t, n) {
  if (e.length === 0)
    return [];
  if (!Nf(t))
    return e.map((u) => ({ ...u, index: u.index + n, originalIndex: u.index }));
  const o = e[0].index, r = e[e.length - 1].index, i = [], s = $f(t.groupOffsetTree, o, r);
  let l, c = 0;
  for (const u of e) {
    (!l || l.end < u.index) && (l = s.shift(), c = t.groupIndices.indexOf(l.start));
    let d;
    u.index === l.start ? d = {
      index: c,
      type: "group"
    } : d = {
      groupIndex: c,
      index: u.index - (c + 1) + n
    }, i.push({
      ...d,
      data: u.data,
      offset: u.offset,
      originalIndex: u.index,
      size: u.size
    });
  }
  return i;
}
const ys = Tt(
  ([
    { data: e, firstItemIndex: t, gap: n, sizes: o, totalCount: r },
    i,
    { listBoundary: s, topListHeight: l, visibleRange: c },
    { initialTopMostItemIndex: u, scrolledToInitialItem: d },
    { topListHeight: f },
    p,
    { didMount: h },
    { recalcInProgress: g }
  ]) => {
    const m = ke([]), y = ke(0), b = gt();
    He(i.topItemsIndexes, m);
    const T = Fn(
      Oe(
        Tn(
          h,
          g,
          Ze(c, Jl),
          Ze(r),
          Ze(o),
          Ze(u),
          d,
          Ze(m),
          Ze(t),
          Ze(n),
          e
        ),
        Xe(([C, E, , P, , , , , , , M]) => {
          const x = M && M.length !== P;
          return C && !E && !x;
        }),
        Fe(
          ([
            ,
            ,
            [C, E],
            P,
            M,
            x,
            I,
            k,
            _,
            R,
            A
          ]) => {
            const N = M, { offsetTree: L, sizeTree: V } = N, D = Vn(y);
            if (P === 0)
              return { ...nh, totalCount: P };
            if (C === 0 && E === 0)
              return D === 0 ? { ...nh, totalCount: P } : cE(D, x, M, _, R, A || []);
            if (Lt(V))
              return D > 0 ? null : ed(
                WB(Oy(x, P), N, A),
                [],
                P,
                R,
                N,
                _
              );
            const B = [];
            if (k.length > 0) {
              const K = k[0], te = k[k.length - 1];
              let ne = 0;
              for (const W of $f(V, K, te)) {
                const ee = W.value, Y = Math.max(W.start, K), re = Math.min(W.end, te);
                for (let z = Y; z <= re; z++)
                  B.push({ data: A == null ? void 0 : A[z], index: z, offset: ne, size: ee }), ne += ee;
              }
            }
            if (!I)
              return ed([], B, P, R, N, _);
            const F = k.length > 0 ? k[k.length - 1] + 1 : 0, U = NB(L, C, E, F);
            if (U.length === 0)
              return null;
            const q = P - 1, G = kf([], (K) => {
              for (const te of U) {
                const ne = te.value;
                let W = ne.offset, ee = te.start;
                const Y = ne.size;
                if (ne.offset < C) {
                  ee += Math.floor((C - ne.offset + R) / (Y + R));
                  const z = ee - te.start;
                  W += z * Y + z * R;
                }
                ee < F && (W += (F - ee) * Y, ee = F);
                const re = Math.min(te.end, q);
                for (let z = ee; z <= re && !(W >= E); z++)
                  K.push({ data: A == null ? void 0 : A[z], index: z, offset: W, size: Y }), W += Y + R;
              }
            });
            return ed(G, B, P, R, N, _);
          }
        ),
        //@ts-expect-error filter needs to be fixed
        Xe((C) => C !== null),
        zt()
      ),
      nh
    );
    He(
      Oe(
        e,
        Xe(xy),
        Fe((C) => C == null ? void 0 : C.length)
      ),
      r
    ), He(
      Oe(
        T,
        Fe((C) => C.topListHeight)
      ),
      f
    ), He(f, l), He(
      Oe(
        T,
        Fe((C) => [C.top, C.bottom])
      ),
      s
    ), He(
      Oe(
        T,
        Fe((C) => C.items)
      ),
      b
    );
    const v = To(
      Oe(
        T,
        Xe(({ items: C }) => C.length > 0),
        ct(r, e),
        Xe(([{ items: C }, E]) => C[C.length - 1].originalIndex === E - 1),
        Fe(([, C, E]) => [C - 1, E]),
        zt(Jl),
        Fe(([C]) => C)
      )
    ), w = To(
      Oe(
        T,
        di(200),
        Xe(({ items: C, topItems: E }) => C.length > 0 && C[0].originalIndex === E.length),
        Fe(({ items: C }) => C[0].index),
        zt()
      )
    ), S = To(
      Oe(
        T,
        Xe(({ items: C }) => C.length > 0),
        Fe(({ items: C }) => {
          let E = 0, P = C.length - 1;
          for (; C[E].type === "group" && E < P; )
            E++;
          for (; C[P].type === "group" && P > E; )
            P--;
          return {
            endIndex: C[P].index,
            startIndex: C[E].index
          };
        }),
        zt(nE)
      )
    );
    return { endReached: v, initialItemCount: y, itemsRendered: b, listState: T, rangeChanged: S, startReached: w, topItemsIndexes: m, ...p };
  },
  Ht(
    Nr,
    sE,
    Py,
    Lc,
    Dc,
    Bc,
    $i,
    Ty
  ),
  { singleton: !0 }
), uE = Tt(
  ([{ fixedFooterHeight: e, fixedHeaderHeight: t, footerHeight: n, headerHeight: o }, { listState: r }]) => {
    const i = gt(), s = Fn(
      Oe(
        Tn(n, e, o, t, r),
        Fe(([l, c, u, d, f]) => l + c + u + d + f.offsetBottom + f.bottom)
      ),
      0
    );
    return He(Ze(s), i), { totalListHeight: s, totalListHeightChanged: i };
  },
  Ht(eo, ys),
  { singleton: !0 }
), UB = Tt(
  ([{ viewportHeight: e }, { totalListHeight: t }]) => {
    const n = ke(!1), o = Fn(
      Oe(
        Tn(n, e, t),
        Xe(([r]) => r),
        Fe(([, r, i]) => Math.max(0, r - i)),
        di(0),
        zt()
      ),
      0
    );
    return { alignToBottom: n, paddingTopAddition: o };
  },
  Ht(eo, uE),
  { singleton: !0 }
);
function j0(e) {
  return e ? e === "smooth" ? "smooth" : "auto" : !1;
}
const qB = (e, t) => typeof e == "function" ? j0(e(t)) : t && j0(e), KB = Tt(
  ([
    { listRefresh: e, totalCount: t },
    { atBottomState: n, isAtBottom: o },
    { scrollToIndex: r },
    { scrolledToInitialItem: i },
    { didMount: s, propsReady: l },
    { log: c },
    { scrollingInProgress: u }
  ]) => {
    const d = ke(!1), f = gt();
    let p = null;
    function h(m) {
      rt(r, {
        align: "end",
        behavior: m,
        index: "LAST"
      });
    }
    kt(
      Oe(
        Tn(Oe(Ze(t), ha(1)), s),
        ct(Ze(d), o, i, u),
        Fe(([[m, y], b, T, v, w]) => {
          let S = y && v, C = "auto";
          return S && (C = qB(b, T || w), S = S && !!C), { followOutputBehavior: C, shouldFollow: S, totalCount: m };
        }),
        Xe(({ shouldFollow: m }) => m)
      ),
      ({ followOutputBehavior: m, totalCount: y }) => {
        p && (p(), p = null), p = kr(e, () => {
          Vn(c)("following output to ", { totalCount: y }, Co.DEBUG), h(m), p = null;
        });
      }
    );
    function g(m) {
      const y = kr(n, (b) => {
        m && !b.atBottom && b.notAtBottomBecause === "SIZE_INCREASED" && !p && (Vn(c)("scrolling to bottom due to increased size", {}, Co.DEBUG), h("auto"));
      });
      setTimeout(y, 100);
    }
    return kt(
      Oe(
        Tn(Ze(d), t, l),
        Xe(([m, , y]) => m && y),
        vr(
          ({ value: m }, [, y]) => ({ refreshed: m === y, value: y }),
          { refreshed: !1, value: 0 }
        ),
        Xe(({ refreshed: m }) => m),
        ct(d, t)
      ),
      ([, m]) => {
        Vn(i) && g(m !== !1);
      }
    ), kt(f, () => {
      g(Vn(d) !== !1);
    }), kt(Tn(Ze(d), n), ([m, y]) => {
      m && !y.atBottom && y.notAtBottomBecause === "VIEWPORT_HEIGHT_DECREASING" && h("auto");
    }), { autoscrollToBottom: f, followOutput: d };
  },
  Ht(Nr, Bc, Dc, Lc, $i, ki, eo)
), GB = Tt(
  ([{ data: e, firstItemIndex: t, gap: n, sizes: o }, { initialTopMostItemIndex: r }, { initialItemCount: i, listState: s }, { didMount: l }]) => (He(
    Oe(
      l,
      ct(i),
      Xe(([, c]) => c !== 0),
      ct(r, o, t, n, e),
      Fe(([[, c], u, d, f, p, h = []]) => cE(c, u, d, f, p, h))
    ),
    s
  ), {}),
  Ht(Nr, Lc, ys, $i),
  { singleton: !0 }
), YB = Tt(
  ([{ didMount: e }, { scrollTo: t }, { listState: n }]) => {
    const o = ke(0);
    return kt(
      Oe(
        e,
        ct(o),
        Xe(([, r]) => r !== 0),
        Fe(([, r]) => ({ top: r }))
      ),
      (r) => {
        kr(
          Oe(
            n,
            ha(1),
            Xe((i) => i.items.length > 1)
          ),
          () => {
            requestAnimationFrame(() => {
              rt(t, r);
            });
          }
        );
      }
    ), {
      initialScrollTop: o
    };
  },
  Ht($i, eo, ys),
  { singleton: !0 }
), XB = ({
  itemBottom: e,
  itemTop: t,
  locationParams: { align: n, behavior: o, ...r },
  viewportBottom: i,
  viewportTop: s
}) => t < s ? { ...r, align: n ?? "start", behavior: o } : e > i ? { ...r, align: n ?? "end", behavior: o } : null, ZB = Tt(
  ([
    { gap: e, sizes: t, totalCount: n },
    { fixedFooterHeight: o, fixedHeaderHeight: r, headerHeight: i, scrollingInProgress: s, scrollTop: l, viewportHeight: c },
    { scrollToIndex: u }
  ]) => {
    const d = gt();
    return He(
      Oe(
        d,
        ct(t, c, n, i, r, o, l),
        ct(e),
        Fe(([[f, p, h, g, m, y, b, T], v]) => {
          const { align: w, behavior: S, calculateViewLocation: C = XB, done: E, ...P } = f, M = iE(f, p, g - 1), x = ec(M, p.offsetTree, v) + m + y, I = x + sr(p.sizeTree, M)[1], k = T + y, _ = T + h - b, R = C({
            itemBottom: I,
            itemTop: x,
            locationParams: { align: w, behavior: S, ...P },
            viewportBottom: _,
            viewportTop: k
          });
          return R ? E && kr(
            Oe(
              s,
              Xe((A) => !A),
              // skips the initial publish of false, and the cleanup call.
              // but if scrollingInProgress is true, we skip the initial publish.
              ha(Vn(s) ? 1 : 2)
            ),
            E
          ) : E && E(), R;
        }),
        Xe((f) => f !== null)
      ),
      u
    ), {
      scrollIntoView: d
    };
  },
  Ht(Nr, eo, Dc, ys, ki),
  { singleton: !0 }
), dE = Tt(
  ([{ scrollVelocity: e }]) => {
    const t = ke(!1), n = gt(), o = ke(!1);
    return He(
      Oe(
        e,
        ct(o, t, n),
        Xe(([r, i]) => !!i),
        Fe(([r, i, s, l]) => {
          const { enter: c, exit: u } = i;
          if (s) {
            if (u(r, l))
              return !1;
          } else if (c(r, l))
            return !0;
          return s;
        }),
        zt()
      ),
      t
    ), kt(
      Oe(Tn(t, e, n), ct(o)),
      ([[r, i, s], l]) => {
        r && l && l.change && l.change(i, s);
      }
    ), { isSeeking: t, scrollSeekConfiguration: o, scrollSeekRangeChanged: n, scrollVelocity: e };
  },
  Ht(Bc),
  { singleton: !0 }
), Ry = Tt(([{ scrollContainerState: e, scrollTo: t }]) => {
  const n = gt(), o = gt(), r = gt(), i = ke(!1), s = ke(void 0);
  return He(
    Oe(
      Tn(n, o),
      Fe(([{ scrollHeight: l, scrollTop: c, viewportHeight: u }, { offsetTop: d }]) => ({
        scrollHeight: l,
        scrollTop: Math.max(0, c - d),
        viewportHeight: u
      }))
    ),
    e
  ), He(
    Oe(
      t,
      ct(o),
      Fe(([l, { offsetTop: c }]) => ({
        ...l,
        top: l.top + c
      }))
    ),
    r
  ), {
    customScrollParent: s,
    // config
    useWindowScroll: i,
    // input
    windowScrollContainerState: n,
    // signals
    windowScrollTo: r,
    windowViewportRect: o
  };
}, Ht(eo)), QB = Tt(
  ([
    { sizeRanges: e, sizes: t },
    { headerHeight: n, scrollTop: o },
    { initialTopMostItemIndex: r },
    { didMount: i },
    { useWindowScroll: s, windowScrollContainerState: l, windowViewportRect: c }
  ]) => {
    const u = gt(), d = ke(void 0), f = ke(null), p = ke(null);
    return He(l, f), He(c, p), kt(
      Oe(
        u,
        ct(t, o, s, f, p, n)
      ),
      ([h, g, m, y, b, T, v]) => {
        const w = AB(g.sizeTree);
        y && b !== null && T !== null && (m = b.scrollTop - T.offsetTop), m -= v, h({ ranges: w, scrollTop: m });
      }
    ), He(Oe(d, Xe(xy), Fe(JB)), r), He(
      Oe(
        i,
        ct(d),
        Xe(([, h]) => h !== void 0),
        zt(),
        Fe(([, h]) => h.ranges)
      ),
      e
    ), {
      getState: u,
      restoreStateFrom: d
    };
  },
  Ht(Nr, eo, Lc, $i, Ry)
);
function JB(e) {
  return { align: "start", index: 0, offset: e.scrollTop };
}
const e5 = Tt(([{ topItemsIndexes: e }]) => {
  const t = ke(0);
  return He(
    Oe(
      t,
      Xe((n) => n >= 0),
      Fe((n) => Array.from({ length: n }).map((o, r) => r))
    ),
    e
  ), { topItemCount: t };
}, Ht(ys));
function fE(e) {
  let t = !1, n;
  return () => (t || (t = !0, n = e()), n);
}
const t5 = fE(() => /iP(ad|od|hone)/i.test(navigator.userAgent) && /WebKit/i.test(navigator.userAgent)), n5 = Tt(
  ([
    { deviation: e, scrollBy: t, scrollingInProgress: n, scrollTop: o },
    { isAtBottom: r, isScrolling: i, lastJumpDueToItemResize: s, scrollDirection: l },
    { listState: c },
    { beforeUnshiftWith: u, gap: d, shiftWithOffset: f, sizes: p },
    { log: h },
    { recalcInProgress: g }
  ]) => {
    const m = To(
      Oe(
        c,
        ct(s),
        vr(
          ([, b, T, v], [{ bottom: w, items: S, offsetBottom: C, totalCount: E }, P]) => {
            const M = w + C;
            let x = 0;
            return T === E && b.length > 0 && S.length > 0 && (S[0].originalIndex === 0 && b[0].originalIndex === 0 || (x = M - v, x !== 0 && (x += P))), [x, S, E, M];
          },
          [0, [], 0, 0]
        ),
        Xe(([b]) => b !== 0),
        ct(o, l, n, r, h, g),
        Xe(([, b, T, v, , , w]) => !w && !v && b !== 0 && T === tc),
        Fe(([[b], , , , , T]) => (T("Upward scrolling compensation", { amount: b }, Co.DEBUG), b))
      )
    );
    function y(b) {
      b > 0 ? (rt(t, { behavior: "auto", top: -b }), rt(e, 0)) : (rt(e, 0), rt(t, { behavior: "auto", top: -b }));
    }
    return kt(Oe(m, ct(e, i)), ([b, T, v]) => {
      v && t5() ? rt(e, T - b) : y(-b);
    }), kt(
      Oe(
        Tn(Fn(i, !1), e, g),
        Xe(([b, T, v]) => !b && !v && T !== 0),
        Fe(([b, T]) => T),
        di(1)
      ),
      y
    ), He(
      Oe(
        f,
        Fe((b) => ({ top: -b }))
      ),
      t
    ), kt(
      Oe(
        u,
        ct(p, d),
        Fe(([b, { groupIndices: T, lastSize: v, sizeTree: w }, S]) => {
          function C(E) {
            return E * (v + S);
          }
          if (T.length === 0)
            return C(b);
          {
            let E = 0;
            const P = Ql(w, 0);
            let M = 0, x = 0;
            for (; M < b; ) {
              M++, E += P;
              let I = T.length === x + 1 ? 1 / 0 : T[x + 1] - T[x] - 1;
              M + I > b && (E -= P, I = b - M + 1), M += I, E += C(I), x++;
            }
            return E;
          }
        })
      ),
      (b) => {
        rt(e, b), requestAnimationFrame(() => {
          rt(t, { top: b }), requestAnimationFrame(() => {
            rt(e, 0), rt(g, !1);
          });
        });
      }
    ), { deviation: e };
  },
  Ht(eo, Bc, ys, Nr, ki, Ty)
), o5 = Tt(
  ([
    e,
    t,
    n,
    o,
    r,
    i,
    s,
    l,
    c,
    u
  ]) => ({
    ...e,
    ...t,
    ...n,
    ...o,
    ...r,
    ...i,
    ...s,
    ...l,
    ...c,
    ...u
  }),
  Ht(
    Py,
    GB,
    $i,
    dE,
    uE,
    YB,
    UB,
    Ry,
    ZB,
    ki
  )
), pE = Tt(
  ([
    {
      data: e,
      defaultItemSize: t,
      firstItemIndex: n,
      fixedItemSize: o,
      gap: r,
      groupIndices: i,
      itemSize: s,
      sizeRanges: l,
      sizes: c,
      statefulTotalCount: u,
      totalCount: d,
      trackItemSizes: f
    },
    { initialItemFinalLocationReached: p, initialTopMostItemIndex: h, scrolledToInitialItem: g },
    m,
    y,
    b,
    { listState: T, topItemsIndexes: v, ...w },
    { scrollToIndex: S },
    C,
    { topItemCount: E },
    { groupCounts: P },
    M
  ]) => (He(w.rangeChanged, M.scrollSeekRangeChanged), He(
    Oe(
      M.windowViewportRect,
      Fe((x) => x.visibleHeight)
    ),
    m.viewportHeight
  ), {
    data: e,
    defaultItemHeight: t,
    firstItemIndex: n,
    fixedItemHeight: o,
    gap: r,
    groupCounts: P,
    initialItemFinalLocationReached: p,
    initialTopMostItemIndex: h,
    scrolledToInitialItem: g,
    sizeRanges: l,
    topItemCount: E,
    topItemsIndexes: v,
    // input
    totalCount: d,
    ...b,
    groupIndices: i,
    itemSize: s,
    listState: T,
    scrollToIndex: S,
    // output
    statefulTotalCount: u,
    trackItemSizes: f,
    // exported from stateFlagsSystem
    ...w,
    // the bag of IO from featureGroup1System
    ...M,
    ...m,
    sizes: c,
    ...y
  }),
  Ht(
    Nr,
    Lc,
    eo,
    QB,
    KB,
    ys,
    Dc,
    n5,
    e5,
    sE,
    o5
  )
);
function r5(e, t) {
  const n = {}, o = {};
  let r = 0;
  const i = e.length;
  for (; r < i; )
    o[e[r]] = 1, r += 1;
  for (const s in t)
    Object.hasOwn(o, s) || (n[s] = t[s]);
  return n;
}
const vu = typeof document < "u" ? Z.useLayoutEffect : Z.useEffect;
function hE(e, t, n) {
  const o = Object.keys(t.required || {}), r = Object.keys(t.optional || {}), i = Object.keys(t.methods || {}), s = Object.keys(t.events || {}), l = Z.createContext({});
  function c(y, b) {
    y.propsReady && rt(y.propsReady, !1);
    for (const T of o) {
      const v = y[t.required[T]];
      rt(v, b[T]);
    }
    for (const T of r)
      if (T in b) {
        const v = y[t.optional[T]];
        rt(v, b[T]);
      }
    y.propsReady && rt(y.propsReady, !0);
  }
  function u(y) {
    return i.reduce((b, T) => (b[T] = (v) => {
      const w = y[t.methods[T]];
      rt(w, v);
    }, b), {});
  }
  function d(y) {
    return s.reduce((b, T) => (b[T] = vB(y[t.events[T]]), b), {});
  }
  const f = Z.forwardRef((y, b) => {
    const { children: T, ...v } = y, [w] = Z.useState(() => kf(wB(e), (E) => {
      c(E, v);
    })), [S] = Z.useState($0(d, w));
    vu(() => {
      for (const E of s)
        E in v && kt(S[E], v[E]);
      return () => {
        Object.values(S).map(wy);
      };
    }, [v, S, w]), vu(() => {
      c(w, v);
    }), Z.useImperativeHandle(b, k0(u(w)));
    const C = n;
    return /* @__PURE__ */ O(l.Provider, { value: w, children: n ? /* @__PURE__ */ O(C, { ...r5([...o, ...r, ...s], v), children: T }) : T });
  }), p = (y) => Z.useCallback(GC(rt, Z.useContext(l)[y]), [y]), h = (y) => {
    const b = Z.useContext(l)[y], T = Z.useCallback(
      (v) => kt(b, v),
      [b]
    );
    return Z.useSyncExternalStore(
      T,
      () => Vn(b),
      () => Vn(b)
    );
  }, g = (y) => {
    const b = Z.useContext(l)[y], [T, v] = Z.useState($0(Vn, b));
    return vu(
      () => kt(b, (w) => {
        w !== T && v(k0(w));
      }),
      [b, T]
    ), T;
  }, m = Z.version.startsWith("18") ? h : g;
  return {
    Component: f,
    useEmitter: (y, b) => {
      const T = Z.useContext(l)[y];
      vu(() => kt(T, b), [b, T]);
    },
    useEmitterValue: m,
    usePublisher: p
  };
}
const mE = Z.createContext(void 0), gE = Z.createContext(void 0), yE = typeof document < "u" ? Z.useLayoutEffect : Z.useEffect;
function oh(e) {
  return "self" in e;
}
function i5(e) {
  return "body" in e;
}
function bE(e, t, n, o = Da, r, i) {
  const s = Z.useRef(null), l = Z.useRef(null), c = Z.useRef(null), u = Z.useCallback(
    (p) => {
      let h, g, m;
      const y = p.target;
      if (i5(y) || oh(y)) {
        const T = oh(y) ? y : y.defaultView;
        m = i ? T.scrollX : T.scrollY, h = i ? T.document.documentElement.scrollWidth : T.document.documentElement.scrollHeight, g = i ? T.innerWidth : T.innerHeight;
      } else
        m = i ? y.scrollLeft : y.scrollTop, h = i ? y.scrollWidth : y.scrollHeight, g = i ? y.offsetWidth : y.offsetHeight;
      const b = () => {
        e({
          scrollHeight: h,
          scrollTop: Math.max(m, 0),
          viewportHeight: g
        });
      };
      p.suppressFlushSync ? b() : Fs.flushSync(b), l.current !== null && (m === l.current || m <= 0 || m === h - g) && (l.current = null, t(!0), c.current && (clearTimeout(c.current), c.current = null));
    },
    [e, t]
  );
  Z.useEffect(() => {
    const p = r || s.current;
    return o(r || s.current), u({ suppressFlushSync: !0, target: p }), p.addEventListener("scroll", u, { passive: !0 }), () => {
      o(null), p.removeEventListener("scroll", u);
    };
  }, [s, u, n, o, r]);
  function d(p) {
    const h = s.current;
    if (!h || (i ? "offsetWidth" in h && h.offsetWidth === 0 : "offsetHeight" in h && h.offsetHeight === 0))
      return;
    const g = p.behavior === "smooth";
    let m, y, b;
    oh(h) ? (y = Math.max(
      yi(h.document.documentElement, i ? "width" : "height"),
      i ? h.document.documentElement.scrollWidth : h.document.documentElement.scrollHeight
    ), m = i ? h.innerWidth : h.innerHeight, b = i ? window.scrollX : window.scrollY) : (y = h[i ? "scrollWidth" : "scrollHeight"], m = yi(h, i ? "width" : "height"), b = h[i ? "scrollLeft" : "scrollTop"]);
    const T = y - m;
    if (p.top = Math.ceil(Math.max(Math.min(T, p.top), 0)), lE(m, y) || p.top === b) {
      e({ scrollHeight: y, scrollTop: b, viewportHeight: m }), g && t(!0);
      return;
    }
    g ? (l.current = p.top, c.current && clearTimeout(c.current), c.current = setTimeout(() => {
      c.current = null, l.current = null, t(!0);
    }, 1e3)) : l.current = null, i && (p = { behavior: p.behavior, left: p.top }), h.scrollTo(p);
  }
  function f(p) {
    i && (p = { behavior: p.behavior, left: p.top }), s.current.scrollBy(p);
  }
  return { scrollByCallback: f, scrollerRef: s, scrollToCallback: d };
}
const rh = "-webkit-sticky", z0 = "sticky", vE = fE(() => {
  if (typeof document > "u")
    return z0;
  const e = document.createElement("div");
  return e.style.position = rh, e.style.position === rh ? rh : z0;
});
function Iy(e) {
  return e;
}
const s5 = /* @__PURE__ */ Tt(() => {
  const e = ke((c) => `Item ${c}`), t = ke(null), n = ke((c) => `Group ${c}`), o = ke({}), r = ke(Iy), i = ke("div"), s = ke(Da), l = (c, u = null) => Fn(
    Oe(
      o,
      Fe((d) => d[c]),
      zt()
    ),
    u
  );
  return {
    components: o,
    computeItemKey: r,
    context: t,
    EmptyPlaceholder: l("EmptyPlaceholder"),
    FooterComponent: l("Footer"),
    GroupComponent: l("Group", "div"),
    groupContent: n,
    HeaderComponent: l("Header"),
    HeaderFooterTag: i,
    ItemComponent: l("Item", "div"),
    itemContent: e,
    ListComponent: l("List", "div"),
    ScrollerComponent: l("Scroller", "div"),
    scrollerRef: s,
    ScrollSeekPlaceholder: l("ScrollSeekPlaceholder"),
    TopItemListComponent: l("TopItemList")
  };
}), a5 = /* @__PURE__ */ Tt(
  ([e, t]) => ({ ...e, ...t }),
  Ht(pE, s5)
), l5 = ({ height: e }) => /* @__PURE__ */ O("div", { style: { height: e } }), c5 = { overflowAnchor: "none", position: vE(), zIndex: 1 }, xE = { overflowAnchor: "none" }, u5 = { ...xE, display: "inline-block", height: "100%" }, H0 = /* @__PURE__ */ Z.memo(function({ showTopList: e = !1 }) {
  const t = Je("listState"), n = Vo("sizeRanges"), o = Je("useWindowScroll"), r = Je("customScrollParent"), i = Vo("windowScrollContainerState"), s = Vo("scrollContainerState"), l = r || o ? i : s, c = Je("itemContent"), u = Je("context"), d = Je("groupContent"), f = Je("trackItemSizes"), p = Je("itemSize"), h = Je("log"), g = Vo("gap"), m = Je("horizontalDirection"), { callbackRef: y } = CB(
    n,
    p,
    f,
    e ? Da : l,
    h,
    g,
    r,
    m,
    Je("skipAnimationFrameInResizeObserver")
  ), [b, T] = Z.useState(0);
  ky("deviation", (R) => {
    b !== R && T(R);
  });
  const v = Je("EmptyPlaceholder"), w = Je("ScrollSeekPlaceholder") || l5, S = Je("ListComponent"), C = Je("ItemComponent"), E = Je("GroupComponent"), P = Je("computeItemKey"), M = Je("isSeeking"), x = Je("groupIndices").length > 0, I = Je("alignToBottom"), k = Je("initialItemFinalLocationReached"), _ = e ? {} : {
    boxSizing: "border-box",
    ...m ? {
      display: "inline-block",
      height: "100%",
      marginLeft: b !== 0 ? b : I ? "auto" : 0,
      paddingLeft: t.offsetTop,
      paddingRight: t.offsetBottom,
      whiteSpace: "nowrap"
    } : {
      marginTop: b !== 0 ? b : I ? "auto" : 0,
      paddingBottom: t.offsetBottom,
      paddingTop: t.offsetTop
    },
    ...k ? {} : { visibility: "hidden" }
  };
  return !e && t.totalCount === 0 && v ? /* @__PURE__ */ O(v, { ...Nn(v, u) }) : /* @__PURE__ */ O(
    S,
    {
      ...Nn(S, u),
      "data-testid": e ? "virtuoso-top-item-list" : "virtuoso-item-list",
      ref: y,
      style: _,
      children: (e ? t.topItems : t.items).map((R) => {
        const A = R.originalIndex, N = P(A + t.firstItemIndex, R.data, u);
        return M ? /* @__PURE__ */ fi(
          w,
          {
            ...Nn(w, u),
            height: R.size,
            index: R.index,
            key: N,
            type: R.type || "item",
            ...R.type === "group" ? {} : { groupIndex: R.groupIndex }
          }
        ) : R.type === "group" ? /* @__PURE__ */ fi(
          E,
          {
            ...Nn(E, u),
            "data-index": A,
            "data-item-index": R.index,
            "data-known-size": R.size,
            key: N,
            style: c5
          },
          d(R.index, u)
        ) : /* @__PURE__ */ fi(
          C,
          {
            ...Nn(C, u),
            ...h5(C, R.data),
            "data-index": A,
            "data-item-group-index": R.groupIndex,
            "data-item-index": R.index,
            "data-known-size": R.size,
            key: N,
            style: m ? u5 : xE
          },
          x ? c(R.index, R.groupIndex, R.data, u) : c(R.index, R.data, u)
        );
      })
    }
  );
}), d5 = {
  height: "100%",
  outline: "none",
  overflowY: "auto",
  position: "relative",
  WebkitOverflowScrolling: "touch"
}, f5 = {
  outline: "none",
  overflowX: "auto",
  position: "relative"
}, Mf = (e) => ({
  height: "100%",
  position: "absolute",
  top: 0,
  width: "100%",
  ...e ? { display: "flex", flexDirection: "column" } : {}
}), p5 = {
  position: vE(),
  top: 0,
  width: "100%",
  zIndex: 1
};
function Nn(e, t) {
  if (typeof e != "string")
    return { context: t };
}
function h5(e, t) {
  return { item: typeof e == "string" ? void 0 : t };
}
const m5 = /* @__PURE__ */ Z.memo(function() {
  const e = Je("HeaderComponent"), t = Vo("headerHeight"), n = Je("HeaderFooterTag"), o = gs(
    Z.useMemo(
      () => (i) => {
        t(yi(i, "height"));
      },
      [t]
    ),
    !0,
    Je("skipAnimationFrameInResizeObserver")
  ), r = Je("context");
  return e ? /* @__PURE__ */ O(n, { ref: o, children: /* @__PURE__ */ O(e, { ...Nn(e, r) }) }) : null;
}), g5 = /* @__PURE__ */ Z.memo(function() {
  const e = Je("FooterComponent"), t = Vo("footerHeight"), n = Je("HeaderFooterTag"), o = gs(
    Z.useMemo(
      () => (i) => {
        t(yi(i, "height"));
      },
      [t]
    ),
    !0,
    Je("skipAnimationFrameInResizeObserver")
  ), r = Je("context");
  return e ? /* @__PURE__ */ O(n, { ref: o, children: /* @__PURE__ */ O(e, { ...Nn(e, r) }) }) : null;
});
function wE({ useEmitter: e, useEmitterValue: t, usePublisher: n }) {
  return Z.memo(function({ children: o, style: r, ...i }) {
    const s = n("scrollContainerState"), l = t("ScrollerComponent"), c = n("smoothScrollTargetReached"), u = t("scrollerRef"), d = t("context"), f = t("horizontalDirection") || !1, { scrollByCallback: p, scrollerRef: h, scrollToCallback: g } = bE(
      s,
      c,
      l,
      u,
      void 0,
      f
    );
    return e("scrollTo", g), e("scrollBy", p), /* @__PURE__ */ O(
      l,
      {
        "data-testid": "virtuoso-scroller",
        "data-virtuoso-scroller": !0,
        ref: h,
        style: { ...f ? f5 : d5, ...r },
        tabIndex: 0,
        ...i,
        ...Nn(l, d),
        children: o
      }
    );
  });
}
function SE({ useEmitter: e, useEmitterValue: t, usePublisher: n }) {
  return Z.memo(function({ children: o, style: r, ...i }) {
    const s = n("windowScrollContainerState"), l = t("ScrollerComponent"), c = n("smoothScrollTargetReached"), u = t("totalListHeight"), d = t("deviation"), f = t("customScrollParent"), p = t("context"), h = Z.useRef(null), g = t("scrollerRef"), { scrollByCallback: m, scrollerRef: y, scrollToCallback: b } = bE(
      s,
      c,
      l,
      g,
      f
    );
    return yE(() => {
      var T;
      return y.current = f || ((T = h.current) == null ? void 0 : T.ownerDocument.defaultView), () => {
        y.current = null;
      };
    }, [y, f]), e("windowScrollTo", b), e("scrollBy", m), /* @__PURE__ */ O(
      l,
      {
        ref: h,
        "data-virtuoso-scroller": !0,
        style: { position: "relative", ...r, ...u !== 0 ? { height: u + d } : {} },
        ...i,
        ...Nn(l, p),
        children: o
      }
    );
  });
}
const y5 = ({ children: e }) => {
  const t = Z.useContext(mE), n = Vo("viewportHeight"), o = Vo("fixedItemHeight"), r = Je("alignToBottom"), i = Je("horizontalDirection"), s = Z.useMemo(
    () => KC(n, (c) => yi(c, i ? "width" : "height")),
    [n, i]
  ), l = gs(s, !0, Je("skipAnimationFrameInResizeObserver"));
  return Z.useEffect(() => {
    t && (n(t.viewportHeight), o(t.itemHeight));
  }, [t, n, o]), /* @__PURE__ */ O("div", { "data-viewport-type": "element", ref: l, style: Mf(r), children: e });
}, b5 = ({ children: e }) => {
  const t = Z.useContext(mE), n = Vo("windowViewportRect"), o = Vo("fixedItemHeight"), r = Je("customScrollParent"), i = XC(
    n,
    r,
    Je("skipAnimationFrameInResizeObserver")
  ), s = Je("alignToBottom");
  return Z.useEffect(() => {
    t && (o(t.itemHeight), n({ offsetTop: 0, visibleHeight: t.viewportHeight, visibleWidth: 100 }));
  }, [t, n, o]), /* @__PURE__ */ O("div", { "data-viewport-type": "window", ref: i, style: Mf(s), children: e });
}, v5 = ({ children: e }) => {
  const t = Je("TopItemListComponent") || "div", n = Je("headerHeight"), o = { ...p5, marginTop: `${n}px` }, r = Je("context");
  return /* @__PURE__ */ O(t, { style: o, ...Nn(t, r), children: e });
}, x5 = /* @__PURE__ */ Z.memo(function(e) {
  const t = Je("useWindowScroll"), n = Je("topItemsIndexes").length > 0, o = Je("customScrollParent"), r = Je("context"), i = o || t ? T5 : S5, s = o || t ? b5 : y5;
  return /* @__PURE__ */ Se(i, { ...e, ...Nn(i, r), children: [
    n && /* @__PURE__ */ O(v5, { children: /* @__PURE__ */ O(H0, { showTopList: !0 }) }),
    /* @__PURE__ */ Se(s, { children: [
      /* @__PURE__ */ O(m5, {}),
      /* @__PURE__ */ O(H0, {}),
      /* @__PURE__ */ O(g5, {})
    ] })
  ] });
}), {
  Component: w5,
  useEmitter: ky,
  useEmitterValue: Je,
  usePublisher: Vo
} = /* @__PURE__ */ hE(
  a5,
  {
    events: {
      atBottomStateChange: "atBottomStateChange",
      atTopStateChange: "atTopStateChange",
      endReached: "endReached",
      groupIndices: "groupIndices",
      isScrolling: "isScrolling",
      itemsRendered: "itemsRendered",
      rangeChanged: "rangeChanged",
      startReached: "startReached",
      totalListHeightChanged: "totalListHeightChanged"
    },
    methods: {
      autoscrollToBottom: "autoscrollToBottom",
      getState: "getState",
      scrollBy: "scrollBy",
      scrollIntoView: "scrollIntoView",
      scrollTo: "scrollTo",
      scrollToIndex: "scrollToIndex"
    },
    optional: {
      alignToBottom: "alignToBottom",
      atBottomThreshold: "atBottomThreshold",
      atTopThreshold: "atTopThreshold",
      components: "components",
      computeItemKey: "computeItemKey",
      context: "context",
      customScrollParent: "customScrollParent",
      data: "data",
      defaultItemHeight: "defaultItemHeight",
      firstItemIndex: "firstItemIndex",
      fixedItemHeight: "fixedItemHeight",
      followOutput: "followOutput",
      groupContent: "groupContent",
      groupCounts: "groupCounts",
      headerFooterTag: "HeaderFooterTag",
      horizontalDirection: "horizontalDirection",
      increaseViewportBy: "increaseViewportBy",
      initialItemCount: "initialItemCount",
      initialScrollTop: "initialScrollTop",
      initialTopMostItemIndex: "initialTopMostItemIndex",
      itemContent: "itemContent",
      itemSize: "itemSize",
      logLevel: "logLevel",
      overscan: "overscan",
      restoreStateFrom: "restoreStateFrom",
      scrollerRef: "scrollerRef",
      scrollSeekConfiguration: "scrollSeekConfiguration",
      skipAnimationFrameInResizeObserver: "skipAnimationFrameInResizeObserver",
      topItemCount: "topItemCount",
      totalCount: "totalCount",
      useWindowScroll: "useWindowScroll"
    },
    required: {}
  },
  x5
), S5 = /* @__PURE__ */ wE({ useEmitter: ky, useEmitterValue: Je, usePublisher: Vo }), T5 = /* @__PURE__ */ SE({ useEmitter: ky, useEmitterValue: Je, usePublisher: Vo }), C5 = w5, E5 = /* @__PURE__ */ Tt(() => {
  const e = ke((c) => /* @__PURE__ */ Se("td", { children: [
    "Item $",
    c
  ] })), t = ke(null), n = ke(null), o = ke(null), r = ke({}), i = ke(Iy), s = ke(Da), l = (c, u = null) => Fn(
    Oe(
      r,
      Fe((d) => d[c]),
      zt()
    ),
    u
  );
  return {
    components: r,
    computeItemKey: i,
    context: t,
    EmptyPlaceholder: l("EmptyPlaceholder"),
    FillerRow: l("FillerRow"),
    fixedFooterContent: o,
    fixedHeaderContent: n,
    itemContent: e,
    ScrollerComponent: l("Scroller", "div"),
    scrollerRef: s,
    ScrollSeekPlaceholder: l("ScrollSeekPlaceholder"),
    TableBodyComponent: l("TableBody", "tbody"),
    TableComponent: l("Table", "table"),
    TableFooterComponent: l("TableFoot", "tfoot"),
    TableHeadComponent: l("TableHead", "thead"),
    TableRowComponent: l("TableRow", "tr")
  };
});
Ht(pE, E5);
const W0 = {
  bottom: 0,
  itemHeight: 0,
  items: [],
  itemWidth: 0,
  offsetBottom: 0,
  offsetTop: 0,
  top: 0
}, O5 = {
  bottom: 0,
  itemHeight: 0,
  items: [{ index: 0 }],
  itemWidth: 0,
  offsetBottom: 0,
  offsetTop: 0,
  top: 0
}, { ceil: U0, floor: Pd, max: Ol, min: ih, round: q0 } = Math;
function K0(e, t, n) {
  return Array.from({ length: t - e + 1 }).map((o, r) => ({ data: n === null ? null : n[r + e], index: r + e }));
}
function P5(e) {
  return {
    ...O5,
    items: e
  };
}
function xu(e, t) {
  return e && e.width === t.width && e.height === t.height;
}
function R5(e, t) {
  return e && e.column === t.column && e.row === t.row;
}
const I5 = /* @__PURE__ */ Tt(
  ([
    { increaseViewportBy: e, listBoundary: t, overscan: n, visibleRange: o },
    { footerHeight: r, headerHeight: i, scrollBy: s, scrollContainerState: l, scrollTo: c, scrollTop: u, smoothScrollTargetReached: d, viewportHeight: f },
    p,
    h,
    { didMount: g, propsReady: m },
    { customScrollParent: y, useWindowScroll: b, windowScrollContainerState: T, windowScrollTo: v, windowViewportRect: w },
    S
  ]) => {
    const C = ke(0), E = ke(0), P = ke(W0), M = ke({ height: 0, width: 0 }), x = ke({ height: 0, width: 0 }), I = gt(), k = gt(), _ = ke(0), R = ke(null), A = ke({ column: 0, row: 0 }), N = gt(), L = gt(), V = ke(!1), D = ke(0), B = ke(!0), F = ke(!1), U = ke(!1);
    kt(
      Oe(
        g,
        ct(D),
        Xe(([W, ee]) => !!ee)
      ),
      () => {
        rt(B, !1);
      }
    ), kt(
      Oe(
        Tn(g, B, x, M, D, F),
        Xe(([W, ee, Y, re, , z]) => W && !ee && Y.height !== 0 && re.height !== 0 && !z)
      ),
      ([, , , , W]) => {
        rt(F, !0), Ey(1, () => {
          rt(I, W);
        }), kr(Oe(u), () => {
          rt(t, [0, 0]), rt(B, !0);
        });
      }
    ), He(
      Oe(
        L,
        Xe((W) => W != null && W.scrollTop > 0),
        gr(0)
      ),
      E
    ), kt(
      Oe(
        g,
        ct(L),
        Xe(([, W]) => W != null)
      ),
      ([, W]) => {
        W && (rt(M, W.viewport), rt(x, W.item), rt(A, W.gap), W.scrollTop > 0 && (rt(V, !0), kr(Oe(u, ha(1)), (ee) => {
          rt(V, !1);
        }), rt(c, { top: W.scrollTop })));
      }
    ), He(
      Oe(
        M,
        Fe(({ height: W }) => W)
      ),
      f
    ), He(
      Oe(
        Tn(
          Ze(M, xu),
          Ze(x, xu),
          Ze(A, (W, ee) => W && W.column === ee.column && W.row === ee.row),
          Ze(u)
        ),
        Fe(([W, ee, Y, re]) => ({
          gap: Y,
          item: ee,
          scrollTop: re,
          viewport: W
        }))
      ),
      N
    ), He(
      Oe(
        Tn(
          Ze(C),
          o,
          Ze(A, R5),
          Ze(x, xu),
          Ze(M, xu),
          Ze(R),
          Ze(E),
          Ze(V),
          Ze(B),
          Ze(D)
        ),
        Xe(([, , , , , , , W]) => !W),
        Fe(
          ([
            W,
            [ee, Y],
            re,
            z,
            de,
            ue,
            xe,
            ,
            _e,
            we
          ]) => {
            const { column: De, row: Ee } = re, { height: Ve, width: Me } = z, { width: j } = de;
            if (xe === 0 && (W === 0 || j === 0))
              return W0;
            if (Me === 0) {
              const le = Oy(we, W), ae = le + Math.max(xe - 1, 0);
              return P5(K0(le, ae, ue));
            }
            const J = TE(j, Me, De);
            let ie, Q;
            _e ? ee === 0 && Y === 0 && xe > 0 ? (ie = 0, Q = xe - 1) : (ie = J * Pd((ee + Ee) / (Ve + Ee)), Q = J * U0((Y + Ee) / (Ve + Ee)) - 1, Q = ih(W - 1, Ol(Q, J - 1)), ie = ih(Q, Ol(0, ie))) : (ie = 0, Q = -1);
            const H = K0(ie, Q, ue), { bottom: X, top: se } = G0(de, re, z, H), ye = U0(W / J), he = ye * Ve + (ye - 1) * Ee - X;
            return { bottom: X, itemHeight: Ve, items: H, itemWidth: Me, offsetBottom: he, offsetTop: se, top: se };
          }
        )
      ),
      P
    ), He(
      Oe(
        R,
        Xe((W) => W !== null),
        Fe((W) => W.length)
      ),
      C
    ), He(
      Oe(
        Tn(M, x, P, A),
        Xe(([W, ee, { items: Y }]) => Y.length > 0 && ee.height !== 0 && W.height !== 0),
        Fe(([W, ee, { items: Y }, re]) => {
          const { bottom: z, top: de } = G0(W, re, ee, Y);
          return [de, z];
        }),
        zt(Jl)
      ),
      t
    );
    const q = ke(!1);
    He(
      Oe(
        u,
        ct(q),
        Fe(([W, ee]) => ee || W !== 0)
      ),
      q
    );
    const G = To(
      Oe(
        Tn(P, C),
        Xe(([{ items: W }]) => W.length > 0),
        ct(q),
        Xe(([[W, ee], Y]) => {
          const re = W.items[W.items.length - 1].index === ee - 1;
          return (Y || W.bottom > 0 && W.itemHeight > 0 && W.offsetBottom === 0 && W.items.length === ee) && re;
        }),
        Fe(([[, W]]) => W - 1),
        zt()
      )
    ), K = To(
      Oe(
        Ze(P),
        Xe(({ items: W }) => W.length > 0 && W[0].index === 0),
        gr(0),
        zt()
      )
    ), te = To(
      Oe(
        Ze(P),
        ct(V),
        Xe(([{ items: W }, ee]) => W.length > 0 && !ee),
        Fe(([{ items: W }]) => ({
          endIndex: W[W.length - 1].index,
          startIndex: W[0].index
        })),
        zt(nE),
        di(0)
      )
    );
    He(te, h.scrollSeekRangeChanged), He(
      Oe(
        I,
        ct(M, x, C, A),
        Fe(([W, ee, Y, re, z]) => {
          const de = aE(W), { align: ue, behavior: xe, offset: _e } = de;
          let we = de.index;
          we === "LAST" && (we = re - 1), we = Ol(0, we, ih(re - 1, we));
          let De = Rm(ee, z, Y, we);
          return ue === "end" ? De = q0(De - ee.height + Y.height) : ue === "center" && (De = q0(De - ee.height / 2 + Y.height / 2)), _e && (De += _e), { behavior: xe, top: De };
        })
      ),
      c
    );
    const ne = Fn(
      Oe(
        P,
        Fe((W) => W.offsetBottom + W.bottom)
      ),
      0
    );
    return He(
      Oe(
        w,
        Fe((W) => ({ height: W.visibleHeight, width: W.visibleWidth }))
      ),
      M
    ), {
      customScrollParent: y,
      // input
      data: R,
      deviation: _,
      footerHeight: r,
      gap: A,
      headerHeight: i,
      increaseViewportBy: e,
      initialItemCount: E,
      itemDimensions: x,
      overscan: n,
      restoreStateFrom: L,
      scrollBy: s,
      scrollContainerState: l,
      scrollHeight: k,
      scrollTo: c,
      scrollToIndex: I,
      scrollTop: u,
      smoothScrollTargetReached: d,
      totalCount: C,
      useWindowScroll: b,
      viewportDimensions: M,
      windowScrollContainerState: T,
      windowScrollTo: v,
      windowViewportRect: w,
      ...h,
      // output
      gridState: P,
      horizontalDirection: U,
      initialTopMostItemIndex: D,
      totalListHeight: ne,
      ...p,
      endReached: G,
      propsReady: m,
      rangeChanged: te,
      startReached: K,
      stateChanged: N,
      stateRestoreInProgress: V,
      ...S
    };
  },
  Ht(Py, eo, Bc, dE, $i, Ry, ki)
);
function TE(e, t, n) {
  return Ol(1, Pd((e + n) / (Pd(t) + n)));
}
function G0(e, t, n, o) {
  const { height: r } = n;
  if (r === void 0 || o.length === 0)
    return { bottom: 0, top: 0 };
  const i = Rm(e, t, n, o[0].index);
  return { bottom: Rm(e, t, n, o[o.length - 1].index) + r, top: i };
}
function Rm(e, t, n, o) {
  const r = TE(e.width, n.width, t.column), i = Pd(o / r), s = i * n.height + Ol(0, i - 1) * t.row;
  return s > 0 ? s + t.row : s;
}
const k5 = /* @__PURE__ */ Tt(() => {
  const e = ke((f) => `Item ${f}`), t = ke({}), n = ke(null), o = ke("virtuoso-grid-item"), r = ke("virtuoso-grid-list"), i = ke(Iy), s = ke("div"), l = ke(Da), c = (f, p = null) => Fn(
    Oe(
      t,
      Fe((h) => h[f]),
      zt()
    ),
    p
  ), u = ke(!1), d = ke(!1);
  return He(Ze(d), u), {
    components: t,
    computeItemKey: i,
    context: n,
    FooterComponent: c("Footer"),
    HeaderComponent: c("Header"),
    headerFooterTag: s,
    itemClassName: o,
    ItemComponent: c("Item", "div"),
    itemContent: e,
    listClassName: r,
    ListComponent: c("List", "div"),
    readyStateChanged: u,
    reportReadyState: d,
    ScrollerComponent: c("Scroller", "div"),
    scrollerRef: l,
    ScrollSeekPlaceholder: c("ScrollSeekPlaceholder", "div")
  };
}), $5 = /* @__PURE__ */ Tt(
  ([e, t]) => ({ ...e, ...t }),
  Ht(I5, k5)
), N5 = /* @__PURE__ */ Z.memo(function() {
  const e = qt("gridState"), t = qt("listClassName"), n = qt("itemClassName"), o = qt("itemContent"), r = qt("computeItemKey"), i = qt("isSeeking"), s = Fo("scrollHeight"), l = qt("ItemComponent"), c = qt("ListComponent"), u = qt("ScrollSeekPlaceholder"), d = qt("context"), f = Fo("itemDimensions"), p = Fo("gap"), h = qt("log"), g = qt("stateRestoreInProgress"), m = Fo("reportReadyState"), y = gs(
    Z.useMemo(
      () => (b) => {
        const T = b.parentElement.parentElement.scrollHeight;
        s(T);
        const v = b.firstChild;
        if (v) {
          const { height: w, width: S } = v.getBoundingClientRect();
          f({ height: w, width: S });
        }
        p({
          column: Y0("column-gap", getComputedStyle(b).columnGap, h),
          row: Y0("row-gap", getComputedStyle(b).rowGap, h)
        });
      },
      [s, f, p, h]
    ),
    !0,
    !1
  );
  return yE(() => {
    e.itemHeight > 0 && e.itemWidth > 0 && m(!0);
  }, [e]), g ? null : /* @__PURE__ */ O(
    c,
    {
      className: t,
      ref: y,
      ...Nn(c, d),
      "data-testid": "virtuoso-item-list",
      style: { paddingBottom: e.offsetBottom, paddingTop: e.offsetTop },
      children: e.items.map((b) => {
        const T = r(b.index, b.data, d);
        return i ? /* @__PURE__ */ O(
          u,
          {
            ...Nn(u, d),
            height: e.itemHeight,
            index: b.index,
            width: e.itemWidth
          },
          T
        ) : /* @__PURE__ */ fi(
          l,
          {
            ...Nn(l, d),
            className: n,
            "data-index": b.index,
            key: T
          },
          o(b.index, b.data, d)
        );
      })
    }
  );
}), M5 = Z.memo(function() {
  const e = qt("HeaderComponent"), t = Fo("headerHeight"), n = qt("headerFooterTag"), o = gs(
    Z.useMemo(
      () => (i) => {
        t(yi(i, "height"));
      },
      [t]
    ),
    !0,
    !1
  ), r = qt("context");
  return e ? /* @__PURE__ */ O(n, { ref: o, children: /* @__PURE__ */ O(e, { ...Nn(e, r) }) }) : null;
}), A5 = Z.memo(function() {
  const e = qt("FooterComponent"), t = Fo("footerHeight"), n = qt("headerFooterTag"), o = gs(
    Z.useMemo(
      () => (i) => {
        t(yi(i, "height"));
      },
      [t]
    ),
    !0,
    !1
  ), r = qt("context");
  return e ? /* @__PURE__ */ O(n, { ref: o, children: /* @__PURE__ */ O(e, { ...Nn(e, r) }) }) : null;
}), _5 = ({ children: e }) => {
  const t = Z.useContext(gE), n = Fo("itemDimensions"), o = Fo("viewportDimensions"), r = gs(
    Z.useMemo(
      () => (i) => {
        o(i.getBoundingClientRect());
      },
      [o]
    ),
    !0,
    !1
  );
  return Z.useEffect(() => {
    t && (o({ height: t.viewportHeight, width: t.viewportWidth }), n({ height: t.itemHeight, width: t.itemWidth }));
  }, [t, o, n]), /* @__PURE__ */ O("div", { ref: r, style: Mf(!1), children: e });
}, D5 = ({ children: e }) => {
  const t = Z.useContext(gE), n = Fo("windowViewportRect"), o = Fo("itemDimensions"), r = qt("customScrollParent"), i = XC(n, r, !1);
  return Z.useEffect(() => {
    t && (o({ height: t.itemHeight, width: t.itemWidth }), n({ offsetTop: 0, visibleHeight: t.viewportHeight, visibleWidth: t.viewportWidth }));
  }, [t, n, o]), /* @__PURE__ */ O("div", { ref: i, style: Mf(!1), children: e });
}, L5 = /* @__PURE__ */ Z.memo(function({ ...e }) {
  const t = qt("useWindowScroll"), n = qt("customScrollParent"), o = n || t ? F5 : V5, r = n || t ? D5 : _5, i = qt("context");
  return /* @__PURE__ */ O(o, { ...e, ...Nn(o, i), children: /* @__PURE__ */ Se(r, { children: [
    /* @__PURE__ */ O(M5, {}),
    /* @__PURE__ */ O(N5, {}),
    /* @__PURE__ */ O(A5, {})
  ] }) });
}), {
  Component: B5,
  useEmitter: CE,
  useEmitterValue: qt,
  usePublisher: Fo
} = /* @__PURE__ */ hE(
  $5,
  {
    events: {
      atBottomStateChange: "atBottomStateChange",
      atTopStateChange: "atTopStateChange",
      endReached: "endReached",
      isScrolling: "isScrolling",
      rangeChanged: "rangeChanged",
      readyStateChanged: "readyStateChanged",
      startReached: "startReached",
      stateChanged: "stateChanged"
    },
    methods: {
      scrollBy: "scrollBy",
      scrollTo: "scrollTo",
      scrollToIndex: "scrollToIndex"
    },
    optional: {
      components: "components",
      computeItemKey: "computeItemKey",
      context: "context",
      customScrollParent: "customScrollParent",
      data: "data",
      headerFooterTag: "headerFooterTag",
      increaseViewportBy: "increaseViewportBy",
      initialItemCount: "initialItemCount",
      initialTopMostItemIndex: "initialTopMostItemIndex",
      itemClassName: "itemClassName",
      itemContent: "itemContent",
      listClassName: "listClassName",
      logLevel: "logLevel",
      overscan: "overscan",
      restoreStateFrom: "restoreStateFrom",
      scrollerRef: "scrollerRef",
      scrollSeekConfiguration: "scrollSeekConfiguration",
      totalCount: "totalCount",
      useWindowScroll: "useWindowScroll"
    }
  },
  L5
), V5 = /* @__PURE__ */ wE({ useEmitter: CE, useEmitterValue: qt, usePublisher: Fo }), F5 = /* @__PURE__ */ SE({ useEmitter: CE, useEmitterValue: qt, usePublisher: Fo });
function Y0(e, t, n) {
  return t !== "normal" && !(t != null && t.endsWith("px")) && n(`${e} was not resolved to pixel value correctly`, t, Co.WARN), t === "normal" ? 0 : parseInt(t ?? "0", 10);
}
const j5 = B5, Pl = Pe(({ height: e, width: t, isVirtualized: n, items: o, renderItem: r, sx: i }) => n ? /* @__PURE__ */ O(
  bn,
  {
    className: "VenomousUI-Menu",
    sx: { height: e || "100%", width: t || "100%", ...i },
    children: /* @__PURE__ */ O(
      C5,
      {
        style: { height: "100%", width: "100%" },
        totalCount: o == null ? void 0 : o.length,
        data: o,
        itemContent: (s, l) => r ? r(l, s) : l.label
      }
    )
  }
) : /* @__PURE__ */ O(
  bn,
  {
    className: "VenomousUI-Menu",
    gap: 1,
    sx: {
      height: e || "100%",
      width: t || "100%",
      overflowY: "scroll",
      overflowX: "hidden",
      ...i,
      "& > .VenomousUI-MenuItem": {
        width: "100% !important"
      }
      // '& .VenomousUI-MenuItem': { mb: '4px' },
      // '& .VenomousUI-MenuItem:last-child': { mb: 0 },
    },
    children: o == null ? void 0 : o.map((s, l) => /* @__PURE__ */ O($g, { children: r ? r(s, l) : s.label }, s.label))
  }
));
Pl.displayName = "Menu";
const Yi = Pe(
  ({
    icon: e = "",
    label: t,
    clickable: n,
    disabled: o,
    onClick: r,
    onMouseEnter: i,
    onMouseLeave: s,
    isActive: l,
    sx: c,
    ellipsis: u = !0,
    endIcon: d,
    startIconPlaceholder: f = !1
  }) => n ? /* @__PURE__ */ O(
    Ho,
    {
      component: "div",
      className: "VenomousUI-MenuItem",
      onClick: (p) => {
        o || r == null || r(p);
      },
      onMouseEnter: (p) => {
        o || i == null || i(p);
      },
      onMouseLeave: (p) => {
        o || s == null || s(p);
      },
      sx: {
        overflow: "hidden",
        borderRadius: "8px",
        ...c
      },
      children: /* @__PURE__ */ Se(
        _c,
        {
          isOutlined: !0,
          clickable: !0,
          sx: {
            border: "none",
            width: 1,
            height: 1,
            display: "flex",
            alignItems: "center",
            justifyContent: "flex-start",
            py: "9px",
            px: "12px",
            transition: "background-color 0.2s ease; color 0.2s ease",
            backgroundColor: l ? "divider" : "transparent",
            backgroundImage: "none",
            "&:hover": { backgroundColor: "divider" },
            cursor: o ? "not-allowed" : "pointer"
          },
          children: [
            /* @__PURE__ */ O(Eo, { icon: e, width: 24, color: l ? "primary" : "auto" }),
            f && !e && /* @__PURE__ */ O("div", { style: { minWidth: 24, minHeight: 24 } }),
            /* @__PURE__ */ O(
              Rn,
              {
                text: t,
                ellipsis: u,
                textColor: l ? "primary" : "auto",
                sx: { mx: "8px" }
              }
            ),
            d
          ]
        }
      )
    }
  ) : /* @__PURE__ */ Se(
    bn,
    {
      row: !0,
      py: "8px",
      px: "16px",
      sx: { width: "100%", cursor: o ? "not-allowed" : "default", ...c },
      className: "VenomousUI-MenuItem",
      children: [
        /* @__PURE__ */ O(
          Eo,
          {
            icon: e,
            width: 28,
            color: o ? "disabled" : l ? "primary" : "auto"
          }
        ),
        f && !e && /* @__PURE__ */ O("div", { style: { minWidth: 24, minHeight: 24 } }),
        /* @__PURE__ */ O(
          Rn,
          {
            text: t,
            ellipsis: u,
            flex: 1,
            textColor: o ? "disabled" : l ? "primary" : "auto",
            sx: { mx: "8px" }
          }
        ),
        d
      ]
    }
  )
);
Yi.displayName = "MenuItem";
function z5({ currentPath: e }) {
  const t = Be(
    (o) => {
      let r = o.url;
      if (!r && o.subItems && o.subItems.length > 0) {
        const s = o.subItems.map((l) => l.url).filter(Boolean);
        r = H5(s);
      }
      return !!(r && (e == null ? void 0 : e.startsWith(r)) || o.subItems && o.subItems.some(
        (s) => s.url && (e == null ? void 0 : e.startsWith(s.url))
      ));
    },
    [e]
  ), n = Be(
    (o) => !!(o.url && (e != null && e.startsWith(o.url))),
    [e]
  );
  return {
    checkIsParentItemActive: t,
    checkIsSubItemActive: n
  };
}
function H5(e) {
  if (e.length === 0) return "";
  let t = e[0];
  for (let n = 1; n < e.length; n++)
    for (; e[n].indexOf(t) !== 0; )
      if (t = t.slice(0, -1), !t) return "";
  if (!t.endsWith("/")) {
    const n = t.lastIndexOf("/");
    t = t.slice(0, n + 1);
  }
  return t;
}
function Im(e) {
  return typeof e == "string";
}
function W5(e) {
  const t = Hn(e);
  return t.body === e ? ir(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function Rl(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function X0(e) {
  return parseInt(ir(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function U5(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), o = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || o;
}
function Z0(e, t, n, o, r) {
  const i = [t, n, ...o];
  [].forEach.call(e.children, (s) => {
    const l = !i.includes(s), c = !U5(s);
    l && c && Rl(s, r);
  });
}
function sh(e, t) {
  let n = -1;
  return e.some((o, r) => t(o) ? (n = r, !0) : !1), n;
}
function q5(e, t) {
  const n = [], o = e.container;
  if (!t.disableScrollLock) {
    if (W5(o)) {
      const s = qT(ir(o));
      n.push({
        value: o.style.paddingRight,
        property: "padding-right",
        el: o
      }), o.style.paddingRight = `${X0(o) + s}px`;
      const l = Hn(o).querySelectorAll(".mui-fixed");
      [].forEach.call(l, (c) => {
        n.push({
          value: c.style.paddingRight,
          property: "padding-right",
          el: c
        }), c.style.paddingRight = `${X0(c) + s}px`;
      });
    }
    let i;
    if (o.parentNode instanceof DocumentFragment)
      i = Hn(o).body;
    else {
      const s = o.parentElement, l = ir(o);
      i = (s == null ? void 0 : s.nodeName) === "HTML" && l.getComputedStyle(s).overflowY === "scroll" ? s : o;
    }
    n.push({
      value: i.style.overflow,
      property: "overflow",
      el: i
    }, {
      value: i.style.overflowX,
      property: "overflow-x",
      el: i
    }, {
      value: i.style.overflowY,
      property: "overflow-y",
      el: i
    }), i.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: i,
      el: s,
      property: l
    }) => {
      i ? s.style.setProperty(l, i) : s.style.removeProperty(l);
    });
  };
}
function K5(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
let G5 = class {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let o = this.modals.indexOf(t);
    if (o !== -1)
      return o;
    o = this.modals.length, this.modals.push(t), t.modalRef && Rl(t.modalRef, !1);
    const r = K5(n);
    Z0(n, t.mount, t.modalRef, r, !0);
    const i = sh(this.containers, (s) => s.container === n);
    return i !== -1 ? (this.containers[i].modals.push(t), o) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: r
    }), o);
  }
  mount(t, n) {
    const o = sh(this.containers, (i) => i.modals.includes(t)), r = this.containers[o];
    r.restore || (r.restore = q5(r, n));
  }
  remove(t, n = !0) {
    const o = this.modals.indexOf(t);
    if (o === -1)
      return o;
    const r = sh(this.containers, (s) => s.modals.includes(t)), i = this.containers[r];
    if (i.modals.splice(i.modals.indexOf(t), 1), this.modals.splice(o, 1), i.modals.length === 0)
      i.restore && i.restore(), t.modalRef && Rl(t.modalRef, n), Z0(i.container, t.mount, t.modalRef, i.hiddenSiblings, !1), this.containers.splice(r, 1);
    else {
      const s = i.modals[i.modals.length - 1];
      s.modalRef && Rl(s.modalRef, !1);
    }
    return o;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
};
const Y5 = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function X5(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function Z5(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (o) => e.ownerDocument.querySelector(`input[type="radio"]${o}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function Q5(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || Z5(e));
}
function J5(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(Y5)).forEach((o, r) => {
    const i = X5(o);
    i === -1 || !Q5(o) || (i === 0 ? t.push(o) : n.push({
      documentOrder: r,
      tabIndex: i,
      node: o
    }));
  }), n.sort((o, r) => o.tabIndex === r.tabIndex ? o.documentOrder - r.documentOrder : o.tabIndex - r.tabIndex).map((o) => o.node).concat(t);
}
function eV() {
  return !0;
}
function Rd(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: o = !1,
    disableRestoreFocus: r = !1,
    getTabbable: i = J5,
    isEnabled: s = eV,
    open: l
  } = e, c = $.useRef(!1), u = $.useRef(null), d = $.useRef(null), f = $.useRef(null), p = $.useRef(null), h = $.useRef(!1), g = $.useRef(null), m = yn(Oi(t), g), y = $.useRef(null);
  $.useEffect(() => {
    !l || !g.current || (h.current = !n);
  }, [n, l]), $.useEffect(() => {
    if (!l || !g.current)
      return;
    const v = Hn(g.current);
    return g.current.contains(v.activeElement) || (g.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), g.current.setAttribute("tabIndex", "-1")), h.current && g.current.focus()), () => {
      r || (f.current && f.current.focus && (c.current = !0, f.current.focus()), f.current = null);
    };
  }, [l]), $.useEffect(() => {
    if (!l || !g.current)
      return;
    const v = Hn(g.current), w = (E) => {
      y.current = E, !(o || !s() || E.key !== "Tab") && v.activeElement === g.current && E.shiftKey && (c.current = !0, d.current && d.current.focus());
    }, S = () => {
      var M, x;
      const E = g.current;
      if (E === null)
        return;
      if (!v.hasFocus() || !s() || c.current) {
        c.current = !1;
        return;
      }
      if (E.contains(v.activeElement) || o && v.activeElement !== u.current && v.activeElement !== d.current)
        return;
      if (v.activeElement !== p.current)
        p.current = null;
      else if (p.current !== null)
        return;
      if (!h.current)
        return;
      let P = [];
      if ((v.activeElement === u.current || v.activeElement === d.current) && (P = i(g.current)), P.length > 0) {
        const I = !!((M = y.current) != null && M.shiftKey && ((x = y.current) == null ? void 0 : x.key) === "Tab"), k = P[0], _ = P[P.length - 1];
        typeof k != "string" && typeof _ != "string" && (I ? _.focus() : k.focus());
      } else
        E.focus();
    };
    v.addEventListener("focusin", S), v.addEventListener("keydown", w, !0);
    const C = setInterval(() => {
      v.activeElement && v.activeElement.tagName === "BODY" && S();
    }, 50);
    return () => {
      clearInterval(C), v.removeEventListener("focusin", S), v.removeEventListener("keydown", w, !0);
    };
  }, [n, o, r, s, l, i]);
  const b = (v) => {
    f.current === null && (f.current = v.relatedTarget), h.current = !0, p.current = v.target;
    const w = t.props.onFocus;
    w && w(v);
  }, T = (v) => {
    f.current === null && (f.current = v.relatedTarget), h.current = !0;
  };
  return /* @__PURE__ */ Se($.Fragment, {
    children: [/* @__PURE__ */ O("div", {
      tabIndex: l ? 0 : -1,
      onFocus: T,
      ref: u,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ $.cloneElement(t, {
      ref: m,
      onFocus: b
    }), /* @__PURE__ */ O("div", {
      tabIndex: l ? 0 : -1,
      onFocus: T,
      ref: d,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (Rd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: Ei,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: a.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: a.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: a.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: a.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: a.func,
  /**
   * If `true`, focus is locked.
   */
  open: a.bool.isRequired
});
process.env.NODE_ENV !== "production" && (Rd.propTypes = Rc(Rd.propTypes));
function tV(e) {
  return ot("MuiBackdrop", e);
}
at("MuiBackdrop", ["root", "invisible"]);
const nV = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return st({
    root: ["root", n && "invisible"]
  }, tV, t);
}, oV = Ce("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), $y = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: r,
    className: i,
    component: s = "div",
    invisible: l = !1,
    open: c,
    components: u = {},
    componentsProps: d = {},
    slotProps: f = {},
    slots: p = {},
    TransitionComponent: h,
    transitionDuration: g,
    ...m
  } = o, y = {
    ...o,
    component: s,
    invisible: l
  }, b = nV(y), T = {
    transition: h,
    root: u.Root,
    ...p
  }, v = {
    ...d,
    ...f
  }, w = {
    slots: T,
    slotProps: v
  }, [S, C] = it("root", {
    elementType: oV,
    externalForwardedProps: w,
    className: Ie(b.root, i),
    ownerState: y
  }), [E, P] = it("transition", {
    elementType: as,
    externalForwardedProps: w,
    ownerState: y
  });
  return /* @__PURE__ */ O(E, {
    in: c,
    timeout: g,
    ...m,
    ...P,
    children: /* @__PURE__ */ O(S, {
      "aria-hidden": !0,
      ...C,
      classes: b,
      ref: n,
      children: r
    })
  });
});
process.env.NODE_ENV !== "production" && ($y.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    root: a.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: a.bool,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: a.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function rV(e) {
  return typeof e == "function" ? e() : e;
}
function iV(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const Q0 = () => {
}, wu = new G5();
function sV(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: o = !1,
    closeAfterTransition: r = !1,
    onTransitionEnter: i,
    onTransitionExited: s,
    children: l,
    onClose: c,
    open: u,
    rootRef: d
  } = e, f = $.useRef({}), p = $.useRef(null), h = $.useRef(null), g = yn(h, d), [m, y] = $.useState(!u), b = iV(l);
  let T = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (T = !1);
  const v = () => Hn(p.current), w = () => (f.current.modalRef = h.current, f.current.mount = p.current, f.current), S = () => {
    wu.mount(w(), {
      disableScrollLock: o
    }), h.current && (h.current.scrollTop = 0);
  }, C = oo(() => {
    const A = rV(t) || v().body;
    wu.add(w(), A), h.current && S();
  }), E = () => wu.isTopModal(w()), P = oo((A) => {
    p.current = A, A && (u && E() ? S() : h.current && Rl(h.current, T));
  }), M = $.useCallback(() => {
    wu.remove(w(), T);
  }, [T]);
  $.useEffect(() => () => {
    M();
  }, [M]), $.useEffect(() => {
    u ? C() : (!b || !r) && M();
  }, [u, M, b, r, C]);
  const x = (A) => (N) => {
    var L;
    (L = A.onKeyDown) == null || L.call(A, N), !(N.key !== "Escape" || N.which === 229 || // Wait until IME is settled.
    !E()) && (n || (N.stopPropagation(), c && c(N, "escapeKeyDown")));
  }, I = (A) => (N) => {
    var L;
    (L = A.onClick) == null || L.call(A, N), N.target === N.currentTarget && c && c(N, "backdropClick");
  };
  return {
    getRootProps: (A = {}) => {
      const N = XT(e);
      delete N.onTransitionEnter, delete N.onTransitionExited;
      const L = {
        ...N,
        ...A
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...L,
        onKeyDown: x(L),
        ref: g
      };
    },
    getBackdropProps: (A = {}) => {
      const N = A;
      return {
        "aria-hidden": !0,
        ...N,
        onClick: I(N),
        open: u
      };
    },
    getTransitionProps: () => {
      const A = () => {
        y(!1), i && i();
      }, N = () => {
        y(!0), s && s(), r && M();
      };
      return {
        onEnter: lm(A, (l == null ? void 0 : l.props.onEnter) ?? Q0),
        onExited: lm(N, (l == null ? void 0 : l.props.onExited) ?? Q0)
      };
    },
    rootRef: g,
    portalRef: P,
    isTopModal: E,
    exited: m,
    hasTransition: b
  };
}
function aV(e) {
  return ot("MuiModal", e);
}
at("MuiModal", ["root", "hidden", "backdrop"]);
const lV = (e) => {
  const {
    open: t,
    exited: n,
    classes: o
  } = e;
  return st({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, aV, o);
}, cV = Ce("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(Ye(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), uV = Ce($y, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), Af = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: r = uV,
    BackdropProps: i,
    classes: s,
    className: l,
    closeAfterTransition: c = !1,
    children: u,
    container: d,
    component: f,
    components: p = {},
    componentsProps: h = {},
    disableAutoFocus: g = !1,
    disableEnforceFocus: m = !1,
    disableEscapeKeyDown: y = !1,
    disablePortal: b = !1,
    disableRestoreFocus: T = !1,
    disableScrollLock: v = !1,
    hideBackdrop: w = !1,
    keepMounted: S = !1,
    onClose: C,
    onTransitionEnter: E,
    onTransitionExited: P,
    open: M,
    slotProps: x = {},
    slots: I = {},
    // eslint-disable-next-line react/prop-types
    theme: k,
    ..._
  } = o, R = {
    ...o,
    closeAfterTransition: c,
    disableAutoFocus: g,
    disableEnforceFocus: m,
    disableEscapeKeyDown: y,
    disablePortal: b,
    disableRestoreFocus: T,
    disableScrollLock: v,
    hideBackdrop: w,
    keepMounted: S
  }, {
    getRootProps: A,
    getBackdropProps: N,
    getTransitionProps: L,
    portalRef: V,
    isTopModal: D,
    exited: B,
    hasTransition: F
  } = sV({
    ...R,
    rootRef: n
  }), U = {
    ...R,
    exited: B
  }, q = lV(U), G = {};
  if (u.props.tabIndex === void 0 && (G.tabIndex = "-1"), F) {
    const {
      onEnter: Y,
      onExited: re
    } = L();
    G.onEnter = Y, G.onExited = re;
  }
  const K = {
    slots: {
      root: p.Root,
      backdrop: p.Backdrop,
      ...I
    },
    slotProps: {
      ...h,
      ...x
    }
  }, [te, ne] = it("root", {
    ref: n,
    elementType: cV,
    externalForwardedProps: {
      ...K,
      ..._,
      component: f
    },
    getSlotProps: A,
    ownerState: U,
    className: Ie(l, q == null ? void 0 : q.root, !U.open && U.exited && (q == null ? void 0 : q.hidden))
  }), [W, ee] = it("backdrop", {
    ref: i == null ? void 0 : i.ref,
    elementType: r,
    externalForwardedProps: K,
    shouldForwardComponentProp: !0,
    additionalProps: i,
    getSlotProps: (Y) => N({
      ...Y,
      onClick: (re) => {
        Y != null && Y.onClick && Y.onClick(re);
      }
    }),
    className: Ie(i == null ? void 0 : i.className, q == null ? void 0 : q.backdrop),
    ownerState: U
  });
  return !S && !M && (!F || B) ? null : /* @__PURE__ */ O(da, {
    ref: V,
    container: d,
    disablePortal: b,
    children: /* @__PURE__ */ Se(te, {
      ...ne,
      children: [!w && r ? /* @__PURE__ */ O(W, {
        ...ee
      }) : null, /* @__PURE__ */ O(Rd, {
        disableEnforceFocus: m,
        disableAutoFocus: g,
        disableRestoreFocus: T,
        isEnabled: D,
        open: M,
        children: /* @__PURE__ */ $.cloneElement(u, G)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (Af.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: a.object,
  /**
   * A single child content element.
   */
  children: Ei.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: a.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Backdrop: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Rr, a.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: a.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: a.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: a.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: a.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: a.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: a.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: a.bool,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: a.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: a.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function dV(e) {
  return ot("MuiPopover", e);
}
at("MuiPopover", ["root", "paper"]);
function J0(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function ex(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function tx(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function dl(e) {
  return typeof e == "function" ? e() : e;
}
const fV = (e) => {
  const {
    classes: t
  } = e;
  return st({
    root: ["root"],
    paper: ["paper"]
  }, dV, t);
}, pV = Ce(Af, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), EE = Ce(Pi, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), Ny = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiPopover"
  }), {
    action: r,
    anchorEl: i,
    anchorOrigin: s = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: l,
    anchorReference: c = "anchorEl",
    children: u,
    className: d,
    container: f,
    elevation: p = 8,
    marginThreshold: h = 16,
    open: g,
    PaperProps: m = {},
    // TODO: remove in v7
    slots: y = {},
    slotProps: b = {},
    transformOrigin: T = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: v,
    // TODO: remove in v7
    transitionDuration: w = "auto",
    TransitionProps: S = {},
    // TODO: remove in v7
    disableScrollLock: C = !1,
    ...E
  } = o, P = $.useRef(), M = {
    ...o,
    anchorOrigin: s,
    anchorReference: c,
    elevation: p,
    marginThreshold: h,
    transformOrigin: T,
    TransitionComponent: v,
    transitionDuration: w,
    TransitionProps: S
  }, x = fV(M), I = $.useCallback(() => {
    if (c === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (l || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), l;
    const Y = dl(i), re = Y && Y.nodeType === 1 ? Y : Hn(P.current).body, z = re.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const de = re.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && de.top === 0 && de.left === 0 && de.right === 0 && de.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: z.top + J0(z, s.vertical),
      left: z.left + ex(z, s.horizontal)
    };
  }, [i, s.horizontal, s.vertical, l, c]), k = $.useCallback((Y) => ({
    vertical: J0(Y, T.vertical),
    horizontal: ex(Y, T.horizontal)
  }), [T.horizontal, T.vertical]), _ = $.useCallback((Y) => {
    const re = {
      width: Y.offsetWidth,
      height: Y.offsetHeight
    }, z = k(re);
    if (c === "none")
      return {
        top: null,
        left: null,
        transformOrigin: tx(z)
      };
    const de = I();
    let ue = de.top - z.vertical, xe = de.left - z.horizontal;
    const _e = ue + re.height, we = xe + re.width, De = ir(dl(i)), Ee = De.innerHeight - h, Ve = De.innerWidth - h;
    if (h !== null && ue < h) {
      const Me = ue - h;
      ue -= Me, z.vertical += Me;
    } else if (h !== null && _e > Ee) {
      const Me = _e - Ee;
      ue -= Me, z.vertical += Me;
    }
    if (process.env.NODE_ENV !== "production" && re.height > Ee && re.height && Ee && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${re.height - Ee}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), h !== null && xe < h) {
      const Me = xe - h;
      xe -= Me, z.horizontal += Me;
    } else if (we > Ve) {
      const Me = we - Ve;
      xe -= Me, z.horizontal += Me;
    }
    return {
      top: `${Math.round(ue)}px`,
      left: `${Math.round(xe)}px`,
      transformOrigin: tx(z)
    };
  }, [i, c, I, k, h]), [R, A] = $.useState(g), N = $.useCallback(() => {
    const Y = P.current;
    if (!Y)
      return;
    const re = _(Y);
    re.top !== null && Y.style.setProperty("top", re.top), re.left !== null && (Y.style.left = re.left), Y.style.transformOrigin = re.transformOrigin, A(!0);
  }, [_]);
  $.useEffect(() => (C && window.addEventListener("scroll", N), () => window.removeEventListener("scroll", N)), [i, C, N]);
  const L = () => {
    N();
  }, V = () => {
    A(!1);
  };
  $.useEffect(() => {
    g && N();
  }), $.useImperativeHandle(r, () => g ? {
    updatePosition: () => {
      N();
    }
  } : null, [g, N]), $.useEffect(() => {
    if (!g)
      return;
    const Y = Gg(() => {
      N();
    }), re = ir(dl(i));
    return re.addEventListener("resize", Y), () => {
      Y.clear(), re.removeEventListener("resize", Y);
    };
  }, [i, g, N]);
  let D = w;
  const B = {
    slots: {
      transition: v,
      ...y
    },
    slotProps: {
      transition: S,
      paper: m,
      ...b
    }
  }, [F, U] = it("transition", {
    elementType: Gl,
    externalForwardedProps: B,
    ownerState: M,
    getSlotProps: (Y) => ({
      ...Y,
      onEntering: (re, z) => {
        var de;
        (de = Y.onEntering) == null || de.call(Y, re, z), L();
      },
      onExited: (re) => {
        var z;
        (z = Y.onExited) == null || z.call(Y, re), V();
      }
    }),
    additionalProps: {
      appear: !0,
      in: g
    }
  });
  w === "auto" && !F.muiSupportAuto && (D = void 0);
  const q = f || (i ? Hn(dl(i)).body : void 0), [G, {
    slots: K,
    slotProps: te,
    ...ne
  }] = it("root", {
    ref: n,
    elementType: pV,
    externalForwardedProps: {
      ...B,
      ...E
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: y.backdrop
      },
      slotProps: {
        backdrop: by(typeof b.backdrop == "function" ? b.backdrop(M) : b.backdrop, {
          invisible: !0
        })
      },
      container: q,
      open: g
    },
    ownerState: M,
    className: Ie(x.root, d)
  }), [W, ee] = it("paper", {
    ref: P,
    className: x.paper,
    elementType: EE,
    externalForwardedProps: B,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: p,
      style: R ? void 0 : {
        opacity: 0
      }
    },
    ownerState: M
  });
  return /* @__PURE__ */ O(G, {
    ...ne,
    ...!Im(G) && {
      slots: K,
      slotProps: te,
      disableScrollLock: C
    },
    children: /* @__PURE__ */ O(F, {
      ...U,
      timeout: D,
      children: /* @__PURE__ */ O(W, {
        ...ee,
        children: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (Ny.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: uo,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: rr(a.oneOfType([Rr, a.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = dl(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: a.shape({
    horizontal: a.oneOfType([a.oneOf(["center", "left", "right"]), a.number]).isRequired,
    vertical: a.oneOfType([a.oneOf(["bottom", "center", "top"]), a.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: a.shape({
    left: a.number.isRequired,
    top: a.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: a.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: a.object,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Rr, a.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: a.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: Tf,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: a.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: a.shape({
    component: Kg
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: a.shape({
    horizontal: a.oneOfType([a.oneOf(["center", "left", "right"]), a.number]).isRequired,
    vertical: a.oneOfType([a.oneOf(["bottom", "center", "top"]), a.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: a.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object
});
function hV() {
  const [e, t] = Yt(null), n = !!e, o = Be((i) => {
    const s = i.currentTarget;
    t(s);
  }, []), r = Be(() => {
    var i;
    (i = window.getSelection()) != null && i.toString() || t(null);
  }, []);
  return {
    anchorEl: e,
    isOpen: n,
    openPopover: o,
    closePopover: r
  };
}
const OE = Pe(({ children: e, renderPopoverHandler: t, sx: n }) => {
  const { paperCommonStyles: o } = ms(), { anchorEl: r, isOpen: i, openPopover: s, closePopover: l } = hV();
  return /* @__PURE__ */ Se(Jn, { children: [
    t({ anchorEl: r, isOpen: i, openPopover: s, closePopover: l }),
    /* @__PURE__ */ O(
      Ny,
      {
        open: i,
        anchorEl: r,
        onClose: l,
        anchorOrigin: { vertical: "bottom", horizontal: "center" },
        transformOrigin: { vertical: "top", horizontal: "center" },
        slotProps: {
          paper: {
            elevation: 3,
            square: !0,
            sx: {
              ...o,
              border: 1,
              borderColor: "divider",
              ...n
            }
          }
        },
        children: /* @__PURE__ */ O(as, { in: i, children: /* @__PURE__ */ O("div", { children: e }) })
      }
    )
  ] });
});
OE.displayName = "Popover";
const mV = Pe(
  ({ icon: e = "solar:menu-dots-line-duotone", menuItems: t }) => /* @__PURE__ */ O(
    OE,
    {
      renderPopoverHandler: ({ isOpen: n, openPopover: o }) => /* @__PURE__ */ O(
        Mn,
        {
          isCircle: !0,
          isGhost: !0,
          color: "auto",
          icon: e,
          iconWidth: 20,
          disabled: n,
          onClick: o
        }
      ),
      children: /* @__PURE__ */ O(Pl, { items: t, renderItem: (n) => /* @__PURE__ */ O(Yi, { ...n, clickable: !0 }) })
    }
  )
);
mV.displayName = "ExhibitCardActionButton";
const My = lr({});
function Ay(e) {
  const t = qe(null);
  return t.current === null && (t.current = e()), t.current;
}
const _y = typeof window < "u", PE = _y ? Ng : et, _f = /* @__PURE__ */ lr(null), Dy = lr({
  transformPagePoint: (e) => e,
  isStatic: !1,
  reducedMotion: "never"
});
class gV extends $.Component {
  getSnapshotBeforeUpdate(t) {
    const n = this.props.childRef.current;
    if (n && t.isPresent && !this.props.isPresent) {
      const o = n.offsetParent, r = o instanceof HTMLElement && o.offsetWidth || 0, i = this.props.sizeRef.current;
      i.height = n.offsetHeight || 0, i.width = n.offsetWidth || 0, i.top = n.offsetTop, i.left = n.offsetLeft, i.right = r - i.width - i.left;
    }
    return null;
  }
  /**
   * Required with getSnapshotBeforeUpdate to stop React complaining.
   */
  componentDidUpdate() {
  }
  render() {
    return this.props.children;
  }
}
function yV({ children: e, isPresent: t, anchorX: n }) {
  const o = Pa(), r = qe(null), i = qe({
    width: 0,
    height: 0,
    top: 0,
    left: 0,
    right: 0
  }), { nonce: s } = Kt(Dy);
  return sT(() => {
    const { width: l, height: c, top: u, left: d, right: f } = i.current;
    if (t || !r.current || !l || !c)
      return;
    const p = n === "left" ? `left: ${d}` : `right: ${f}`;
    r.current.dataset.motionPopId = o;
    const h = document.createElement("style");
    return s && (h.nonce = s), document.head.appendChild(h), h.sheet && h.sheet.insertRule(`
          [data-motion-pop-id="${o}"] {
            position: absolute !important;
            width: ${l}px !important;
            height: ${c}px !important;
            ${p}px !important;
            top: ${u}px !important;
          }
        `), () => {
      document.head.removeChild(h);
    };
  }, [t]), O(gV, { isPresent: t, childRef: r, sizeRef: i, children: $.cloneElement(e, { ref: r }) });
}
const bV = ({ children: e, initial: t, isPresent: n, onExitComplete: o, custom: r, presenceAffectsLayout: i, mode: s, anchorX: l }) => {
  const c = Ay(vV), u = Pa(), d = Be((p) => {
    c.set(p, !0);
    for (const h of c.values())
      if (!h)
        return;
    o && o();
  }, [c, o]), f = Ge(
    () => ({
      id: u,
      initial: t,
      isPresent: n,
      custom: r,
      onExitComplete: d,
      register: (p) => (c.set(p, !1), () => c.delete(p))
    }),
    /**
     * If the presence of a child affects the layout of the components around it,
     * we want to make a new context value to ensure they get re-rendered
     * so they can detect that layout change.
     */
    i ? [Math.random(), d] : [n, d]
  );
  return Ge(() => {
    c.forEach((p, h) => c.set(h, !1));
  }, [n]), $.useEffect(() => {
    !n && !c.size && o && o();
  }, [n]), s === "popLayout" && (e = O(yV, { isPresent: n, anchorX: l, children: e })), O(_f.Provider, { value: f, children: e });
};
function vV() {
  return /* @__PURE__ */ new Map();
}
function RE(e = !0) {
  const t = Kt(_f);
  if (t === null)
    return [!0, null];
  const { isPresent: n, onExitComplete: o, register: r } = t, i = Pa();
  et(() => {
    if (e)
      return r(i);
  }, [e]);
  const s = Be(() => e && o && o(i), [i, o, e]);
  return !n && o ? [!1, s] : [!0];
}
const Su = (e) => e.key || "";
function nx(e) {
  const t = [];
  return iT.forEach(e, (n) => {
    xl(n) && t.push(n);
  }), t;
}
const xV = ({ children: e, custom: t, initial: n = !0, onExitComplete: o, presenceAffectsLayout: r = !0, mode: i = "sync", propagate: s = !1, anchorX: l = "left" }) => {
  const [c, u] = RE(s), d = Ge(() => nx(e), [e]), f = s && !c ? [] : d.map(Su), p = qe(!0), h = qe(d), g = Ay(() => /* @__PURE__ */ new Map()), [m, y] = Yt(d), [b, T] = Yt(d);
  PE(() => {
    p.current = !1, h.current = d;
    for (let S = 0; S < b.length; S++) {
      const C = Su(b[S]);
      f.includes(C) ? g.delete(C) : g.get(C) !== !0 && g.set(C, !1);
    }
  }, [b, f.length, f.join("-")]);
  const v = [];
  if (d !== m) {
    let S = [...d];
    for (let C = 0; C < b.length; C++) {
      const E = b[C], P = Su(E);
      f.includes(P) || (S.splice(C, 0, E), v.push(E));
    }
    return i === "wait" && v.length && (S = v), T(nx(S)), y(d), null;
  }
  process.env.NODE_ENV !== "production" && i === "wait" && b.length > 1 && console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to "wait". This will lead to odd visual behaviour.`);
  const { forceRender: w } = Kt(My);
  return O(Jn, { children: b.map((S) => {
    const C = Su(S), E = s && !c ? !1 : d === b || f.includes(C), P = () => {
      if (g.has(C))
        g.set(C, !0);
      else
        return;
      let M = !0;
      g.forEach((x) => {
        x || (M = !1);
      }), M && (w == null || w(), T(h.current), s && (u == null || u()), o && o());
    };
    return O(bV, { isPresent: E, initial: !p.current || n ? void 0 : !1, custom: t, presenceAffectsLayout: r, mode: i, onExitComplete: E ? void 0 : P, anchorX: l, children: S }, C);
  }) });
}, Tu = [
  "read",
  // Read
  "resolveKeyframes",
  // Write/Read/Write/Read
  "update",
  // Compute
  "preRender",
  // Compute
  "render",
  // Write
  "postRender"
  // Compute
];
function wV(e, t) {
  let n = /* @__PURE__ */ new Set(), o = /* @__PURE__ */ new Set(), r = !1, i = !1;
  const s = /* @__PURE__ */ new WeakSet();
  let l = {
    delta: 0,
    timestamp: 0,
    isProcessing: !1
  };
  function c(d) {
    s.has(d) && (u.schedule(d), e()), d(l);
  }
  const u = {
    /**
     * Schedule a process to run on the next frame.
     */
    schedule: (d, f = !1, p = !1) => {
      const g = p && r ? n : o;
      return f && s.add(d), g.has(d) || g.add(d), d;
    },
    /**
     * Cancel the provided callback from running on the next frame.
     */
    cancel: (d) => {
      o.delete(d), s.delete(d);
    },
    /**
     * Execute all schedule callbacks.
     */
    process: (d) => {
      if (l = d, r) {
        i = !0;
        return;
      }
      r = !0, [n, o] = [o, n], n.forEach(c), n.clear(), r = !1, i && (i = !1, u.process(d));
    }
  };
  return u;
}
const km = {
  useManualTiming: !1
}, SV = 40;
function IE(e, t) {
  let n = !1, o = !0;
  const r = {
    delta: 0,
    timestamp: 0,
    isProcessing: !1
  }, i = () => n = !0, s = Tu.reduce((b, T) => (b[T] = wV(i), b), {}), { read: l, resolveKeyframes: c, update: u, preRender: d, render: f, postRender: p } = s, h = () => {
    const b = performance.now();
    n = !1, r.delta = o ? 1e3 / 60 : Math.max(Math.min(b - r.timestamp, SV), 1), r.timestamp = b, r.isProcessing = !0, l.process(r), c.process(r), u.process(r), d.process(r), f.process(r), p.process(r), r.isProcessing = !1, n && t && (o = !1, e(h));
  }, g = () => {
    n = !0, o = !0, r.isProcessing || e(h);
  };
  return { schedule: Tu.reduce((b, T) => {
    const v = s[T];
    return b[T] = (w, S = !1, C = !1) => (n || g(), v.schedule(w, S, C)), b;
  }, {}), cancel: (b) => {
    for (let T = 0; T < Tu.length; T++)
      s[Tu[T]].cancel(b);
  }, state: r, steps: s };
}
const zo = /* @__NO_SIDE_EFFECTS__ */ (e) => e, { schedule: Vt, cancel: bi, state: kn, steps: ah } = /* @__PURE__ */ IE(typeof requestAnimationFrame < "u" ? requestAnimationFrame : zo, !0), Ly = lr({ strict: !1 }), ox = {
  animation: [
    "animate",
    "variants",
    "whileHover",
    "whileTap",
    "exit",
    "whileInView",
    "whileFocus",
    "whileDrag"
  ],
  exit: ["exit"],
  drag: ["drag", "dragControls"],
  focus: ["whileFocus"],
  hover: ["whileHover", "onHoverStart", "onHoverEnd"],
  tap: ["whileTap", "onTap", "onTapStart", "onTapCancel"],
  pan: ["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"],
  inView: ["whileInView", "onViewportEnter", "onViewportLeave"],
  layout: ["layout", "layoutId"]
}, ma = {};
for (const e in ox)
  ma[e] = {
    isEnabled: (t) => ox[e].some((n) => !!t[n])
  };
function $m(e) {
  for (const t in e)
    ma[t] = {
      ...ma[t],
      ...e[t]
    };
}
function TV({ children: e, features: t, strict: n = !1 }) {
  const [, o] = Yt(!lh(t)), r = qe(void 0);
  if (!lh(t)) {
    const { renderer: i, ...s } = t;
    r.current = i, $m(s);
  }
  return et(() => {
    lh(t) && t().then(({ renderer: i, ...s }) => {
      $m(s), r.current = i, o(!0);
    });
  }, []), O(Ly.Provider, { value: { renderer: r.current, strict: n }, children: e });
}
function lh(e) {
  return typeof e == "function";
}
const CV = /* @__PURE__ */ new Set([
  "animate",
  "exit",
  "variants",
  "initial",
  "style",
  "values",
  "variants",
  "transition",
  "transformTemplate",
  "custom",
  "inherit",
  "onBeforeLayoutMeasure",
  "onAnimationStart",
  "onAnimationComplete",
  "onUpdate",
  "onDragStart",
  "onDrag",
  "onDragEnd",
  "onMeasureDragConstraints",
  "onDirectionLock",
  "onDragTransitionEnd",
  "_dragX",
  "_dragY",
  "onHoverStart",
  "onHoverEnd",
  "onViewportEnter",
  "onViewportLeave",
  "globalTapTarget",
  "ignoreStrict",
  "viewport"
]);
function Id(e) {
  return e.startsWith("while") || e.startsWith("drag") && e !== "draggable" || e.startsWith("layout") || e.startsWith("onTap") || e.startsWith("onPan") || e.startsWith("onLayout") || CV.has(e);
}
let kE = (e) => !Id(e);
function EV(e) {
  e && (kE = (t) => t.startsWith("on") ? !Id(t) : e(t));
}
try {
  EV(require("@emotion/is-prop-valid").default);
} catch {
}
function OV(e, t, n) {
  const o = {};
  for (const r in e)
    r === "values" && typeof e.values == "object" || (kE(r) || n === !0 && Id(r) || !t && !Id(r) || // If trying to use native HTML drag events, forward drag listeners
    e.draggable && r.startsWith("onDrag")) && (o[r] = e[r]);
  return o;
}
const rx = /* @__PURE__ */ new Set();
function Df(e, t, n) {
  e || rx.has(t) || (console.warn(t), rx.add(t));
}
function PV(e) {
  if (typeof Proxy > "u")
    return e;
  const t = /* @__PURE__ */ new Map(), n = (...o) => (process.env.NODE_ENV !== "production" && Df(!1, "motion() is deprecated. Use motion.create() instead."), e(...o));
  return new Proxy(n, {
    /**
     * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.
     * The prop name is passed through as `key` and we can use that to generate a `motion`
     * DOM component with that name.
     */
    get: (o, r) => r === "create" ? e : (t.has(r) || t.set(r, e(r)), t.get(r))
  });
}
const Lf = /* @__PURE__ */ lr({});
function Bf(e) {
  return e !== null && typeof e == "object" && typeof e.start == "function";
}
function nc(e) {
  return typeof e == "string" || Array.isArray(e);
}
const By = [
  "animate",
  "whileInView",
  "whileFocus",
  "whileHover",
  "whileTap",
  "whileDrag",
  "exit"
], Vy = ["initial", ...By];
function Vf(e) {
  return Bf(e.animate) || Vy.some((t) => nc(e[t]));
}
function $E(e) {
  return !!(Vf(e) || e.variants);
}
function RV(e, t) {
  if (Vf(e)) {
    const { initial: n, animate: o } = e;
    return {
      initial: n === !1 || nc(n) ? n : void 0,
      animate: nc(o) ? o : void 0
    };
  }
  return e.inherit !== !1 ? t : {};
}
function IV(e) {
  const { initial: t, animate: n } = RV(e, Kt(Lf));
  return Ge(() => ({ initial: t, animate: n }), [ix(t), ix(n)]);
}
function ix(e) {
  return Array.isArray(e) ? e.join(" ") : e;
}
const kV = Symbol.for("motionComponentSymbol");
function zs(e) {
  return e && typeof e == "object" && Object.prototype.hasOwnProperty.call(e, "current");
}
function $V(e, t, n) {
  return Be(
    (o) => {
      o && e.onMount && e.onMount(o), t && (o ? t.mount(o) : t.unmount()), n && (typeof n == "function" ? n(o) : zs(n) && (n.current = o));
    },
    /**
     * Only pass a new ref callback to React if we've received a visual element
     * factory. Otherwise we'll be mounting/remounting every time externalRef
     * or other dependencies change.
     */
    [t]
  );
}
const Fy = (e) => e.replace(/([a-z])([A-Z])/gu, "$1-$2").toLowerCase(), NV = "framerAppearId", NE = "data-" + Fy(NV), ME = lr({}), { schedule: jy } = /* @__PURE__ */ IE(queueMicrotask, !1);
function MV(e, t, n, o, r) {
  var m, y;
  const { visualElement: i } = Kt(Lf), s = Kt(Ly), l = Kt(_f), c = Kt(Dy).reducedMotion, u = qe(null);
  o = o || s.renderer, !u.current && o && (u.current = o(e, {
    visualState: t,
    parent: i,
    props: n,
    presenceContext: l,
    blockInitialAnimation: l ? l.initial === !1 : !1,
    reducedMotionConfig: c
  }));
  const d = u.current, f = Kt(ME);
  d && !d.projection && r && (d.type === "html" || d.type === "svg") && AV(u.current, n, r, f);
  const p = qe(!1);
  sT(() => {
    d && p.current && d.update(n, l);
  });
  const h = n[NE], g = qe(!!h && !((m = window.MotionHandoffIsComplete) != null && m.call(window, h)) && ((y = window.MotionHasOptimisedAnimation) == null ? void 0 : y.call(window, h)));
  return PE(() => {
    d && (p.current = !0, window.MotionIsMounted = !0, d.updateFeatures(), jy.render(d.render), g.current && d.animationState && d.animationState.animateChanges());
  }), et(() => {
    d && (!g.current && d.animationState && d.animationState.animateChanges(), g.current && (queueMicrotask(() => {
      var b;
      (b = window.MotionHandoffMarkAsComplete) == null || b.call(window, h);
    }), g.current = !1));
  }), d;
}
function AV(e, t, n, o) {
  const { layoutId: r, layout: i, drag: s, dragConstraints: l, layoutScroll: c, layoutRoot: u, layoutCrossfade: d } = t;
  e.projection = new n(e.latestValues, t["data-framer-portal-id"] ? void 0 : AE(e.parent)), e.projection.setOptions({
    layoutId: r,
    layout: i,
    alwaysMeasureLayout: !!s || l && zs(l),
    visualElement: e,
    /**
     * TODO: Update options in an effect. This could be tricky as it'll be too late
     * to update by the time layout animations run.
     * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,
     * ensuring it gets called if there's no potential layout animations.
     *
     */
    animationType: typeof i == "string" ? i : "both",
    initialPromotionConfig: o,
    crossfade: d,
    layoutScroll: c,
    layoutRoot: u
  });
}
function AE(e) {
  if (e)
    return e.options.allowProjection !== !1 ? e.projection : AE(e.parent);
}
let La = () => {
}, vi = () => {
};
process.env.NODE_ENV !== "production" && (La = (e, t) => {
  !e && typeof console < "u" && console.warn(t);
}, vi = (e, t) => {
  if (!e)
    throw new Error(t);
});
function _V({ preloadedFeatures: e, createVisualElement: t, useRender: n, useVisualState: o, Component: r }) {
  e && $m(e);
  function i(l, c) {
    let u;
    const d = {
      ...Kt(Dy),
      ...l,
      layoutId: DV(l)
    }, { isStatic: f } = d, p = IV(l), h = o(l, f);
    if (!f && _y) {
      LV(d, e);
      const g = BV(d);
      u = g.MeasureLayout, p.visualElement = MV(r, h, d, t, g.ProjectionNode);
    }
    return Se(Lf.Provider, { value: p, children: [u && p.visualElement ? O(u, { visualElement: p.visualElement, ...d }) : null, n(r, l, $V(h, p.visualElement, c), h, f, p.visualElement)] });
  }
  i.displayName = `motion.${typeof r == "string" ? r : `create(${r.displayName ?? r.name ?? ""})`}`;
  const s = Oa(i);
  return s[kV] = r, s;
}
function DV({ layoutId: e }) {
  const t = Kt(My).id;
  return t && e !== void 0 ? t + "-" + e : e;
}
function LV(e, t) {
  const n = Kt(Ly).strict;
  if (process.env.NODE_ENV !== "production" && t && n) {
    const o = "You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.";
    e.ignoreStrict ? La(!1, o) : vi(!1, o);
  }
}
function BV(e) {
  const { drag: t, layout: n } = ma;
  if (!t && !n)
    return {};
  const o = { ...t, ...n };
  return {
    MeasureLayout: t != null && t.isEnabled(e) || n != null && n.isEnabled(e) ? o.MeasureLayout : void 0,
    ProjectionNode: o.ProjectionNode
  };
}
const _E = (e) => (t) => typeof t == "string" && t.startsWith(e), zy = /* @__PURE__ */ _E("--"), VV = /* @__PURE__ */ _E("var(--"), Hy = (e) => VV(e) ? FV.test(e.split("/*")[0].trim()) : !1, FV = /var\(--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)$/iu, oc = {};
function jV(e) {
  for (const t in e)
    oc[t] = e[t], zy(t) && (oc[t].isCSSVariable = !0);
}
const Ba = [
  "transformPerspective",
  "x",
  "y",
  "z",
  "translateX",
  "translateY",
  "translateZ",
  "scale",
  "scaleX",
  "scaleY",
  "rotate",
  "rotateX",
  "rotateY",
  "rotateZ",
  "skew",
  "skewX",
  "skewY"
], bs = new Set(Ba);
function DE(e, { layout: t, layoutId: n }) {
  return bs.has(e) || e.startsWith("origin") || (t || n !== void 0) && (!!oc[e] || e === "opacity");
}
const jn = (e) => !!(e && e.getVelocity), LE = (e, t) => t && typeof e == "number" ? t.transform(e) : e, qr = (e, t, n) => n > t ? t : n < e ? e : n, Va = {
  test: (e) => typeof e == "number",
  parse: parseFloat,
  transform: (e) => e
}, rc = {
  ...Va,
  transform: (e) => qr(0, 1, e)
}, Cu = {
  ...Va,
  default: 1
}, Vc = (e) => ({
  test: (t) => typeof t == "string" && t.endsWith(e) && t.split(" ").length === 1,
  parse: parseFloat,
  transform: (t) => `${t}${e}`
}), ai = /* @__PURE__ */ Vc("deg"), Tr = /* @__PURE__ */ Vc("%"), Ue = /* @__PURE__ */ Vc("px"), zV = /* @__PURE__ */ Vc("vh"), HV = /* @__PURE__ */ Vc("vw"), sx = {
  ...Tr,
  parse: (e) => Tr.parse(e) / 100,
  transform: (e) => Tr.transform(e * 100)
}, WV = {
  // Border props
  borderWidth: Ue,
  borderTopWidth: Ue,
  borderRightWidth: Ue,
  borderBottomWidth: Ue,
  borderLeftWidth: Ue,
  borderRadius: Ue,
  radius: Ue,
  borderTopLeftRadius: Ue,
  borderTopRightRadius: Ue,
  borderBottomRightRadius: Ue,
  borderBottomLeftRadius: Ue,
  // Positioning props
  width: Ue,
  maxWidth: Ue,
  height: Ue,
  maxHeight: Ue,
  top: Ue,
  right: Ue,
  bottom: Ue,
  left: Ue,
  // Spacing props
  padding: Ue,
  paddingTop: Ue,
  paddingRight: Ue,
  paddingBottom: Ue,
  paddingLeft: Ue,
  margin: Ue,
  marginTop: Ue,
  marginRight: Ue,
  marginBottom: Ue,
  marginLeft: Ue,
  // Misc
  backgroundPositionX: Ue,
  backgroundPositionY: Ue
}, UV = {
  rotate: ai,
  rotateX: ai,
  rotateY: ai,
  rotateZ: ai,
  scale: Cu,
  scaleX: Cu,
  scaleY: Cu,
  scaleZ: Cu,
  skew: ai,
  skewX: ai,
  skewY: ai,
  distance: Ue,
  translateX: Ue,
  translateY: Ue,
  translateZ: Ue,
  x: Ue,
  y: Ue,
  z: Ue,
  perspective: Ue,
  transformPerspective: Ue,
  opacity: rc,
  originX: sx,
  originY: sx,
  originZ: Ue
}, ax = {
  ...Va,
  transform: Math.round
}, Wy = {
  ...WV,
  ...UV,
  zIndex: ax,
  size: Ue,
  // SVG
  fillOpacity: rc,
  strokeOpacity: rc,
  numOctaves: ax
}, qV = {
  x: "translateX",
  y: "translateY",
  z: "translateZ",
  transformPerspective: "perspective"
}, KV = Ba.length;
function GV(e, t, n) {
  let o = "", r = !0;
  for (let i = 0; i < KV; i++) {
    const s = Ba[i], l = e[s];
    if (l === void 0)
      continue;
    let c = !0;
    if (typeof l == "number" ? c = l === (s.startsWith("scale") ? 1 : 0) : c = parseFloat(l) === 0, !c || n) {
      const u = LE(l, Wy[s]);
      if (!c) {
        r = !1;
        const d = qV[s] || s;
        o += `${d}(${u}) `;
      }
      n && (t[s] = u);
    }
  }
  return o = o.trim(), n ? o = n(t, r ? "" : o) : r && (o = "none"), o;
}
function Uy(e, t, n) {
  const { style: o, vars: r, transformOrigin: i } = e;
  let s = !1, l = !1;
  for (const c in t) {
    const u = t[c];
    if (bs.has(c)) {
      s = !0;
      continue;
    } else if (zy(c)) {
      r[c] = u;
      continue;
    } else {
      const d = LE(u, Wy[c]);
      c.startsWith("origin") ? (l = !0, i[c] = d) : o[c] = d;
    }
  }
  if (t.transform || (s || n ? o.transform = GV(t, e.transform, n) : o.transform && (o.transform = "none")), l) {
    const { originX: c = "50%", originY: u = "50%", originZ: d = 0 } = i;
    o.transformOrigin = `${c} ${u} ${d}`;
  }
}
const qy = () => ({
  style: {},
  transform: {},
  transformOrigin: {},
  vars: {}
});
function BE(e, t, n) {
  for (const o in t)
    !jn(t[o]) && !DE(o, n) && (e[o] = t[o]);
}
function YV({ transformTemplate: e }, t) {
  return Ge(() => {
    const n = qy();
    return Uy(n, t, e), Object.assign({}, n.vars, n.style);
  }, [t]);
}
function XV(e, t) {
  const n = e.style || {}, o = {};
  return BE(o, n, e), Object.assign(o, YV(e, t)), o;
}
function ZV(e, t) {
  const n = {}, o = XV(e, t);
  return e.drag && e.dragListener !== !1 && (n.draggable = !1, o.userSelect = o.WebkitUserSelect = o.WebkitTouchCallout = "none", o.touchAction = e.drag === !0 ? "none" : `pan-${e.drag === "x" ? "y" : "x"}`), e.tabIndex === void 0 && (e.onTap || e.onTapStart || e.whileTap) && (n.tabIndex = 0), n.style = o, n;
}
const QV = [
  "animate",
  "circle",
  "defs",
  "desc",
  "ellipse",
  "g",
  "image",
  "line",
  "filter",
  "marker",
  "mask",
  "metadata",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "rect",
  "stop",
  "switch",
  "symbol",
  "svg",
  "text",
  "tspan",
  "use",
  "view"
];
function Ky(e) {
  return (
    /**
     * If it's not a string, it's a custom React component. Currently we only support
     * HTML custom React components.
     */
    typeof e != "string" || /**
     * If it contains a dash, the element is a custom HTML webcomponent.
     */
    e.includes("-") ? !1 : (
      /**
       * If it's in our list of lowercase SVG tags, it's an SVG component
       */
      !!(QV.indexOf(e) > -1 || /**
       * If it contains a capital letter, it's an SVG component
       */
      /[A-Z]/u.test(e))
    )
  );
}
const JV = {
  offset: "stroke-dashoffset",
  array: "stroke-dasharray"
}, eF = {
  offset: "strokeDashoffset",
  array: "strokeDasharray"
};
function tF(e, t, n = 1, o = 0, r = !0) {
  e.pathLength = 1;
  const i = r ? JV : eF;
  e[i.offset] = Ue.transform(-o);
  const s = Ue.transform(t), l = Ue.transform(n);
  e[i.array] = `${s} ${l}`;
}
function lx(e, t, n) {
  return typeof e == "string" ? e : Ue.transform(t + n * e);
}
function nF(e, t, n) {
  const o = lx(t, e.x, e.width), r = lx(n, e.y, e.height);
  return `${o} ${r}`;
}
function Gy(e, {
  attrX: t,
  attrY: n,
  attrScale: o,
  originX: r,
  originY: i,
  pathLength: s,
  pathSpacing: l = 1,
  pathOffset: c = 0,
  // This is object creation, which we try to avoid per-frame.
  ...u
}, d, f) {
  if (Uy(e, u, f), d) {
    e.style.viewBox && (e.attrs.viewBox = e.style.viewBox);
    return;
  }
  e.attrs = e.style, e.style = {};
  const { attrs: p, style: h, dimensions: g } = e;
  p.transform && (g && (h.transform = p.transform), delete p.transform), g && (r !== void 0 || i !== void 0 || h.transform) && (h.transformOrigin = nF(g, r !== void 0 ? r : 0.5, i !== void 0 ? i : 0.5)), t !== void 0 && (p.x = t), n !== void 0 && (p.y = n), o !== void 0 && (p.scale = o), s !== void 0 && tF(p, s, l, c, !1);
}
const VE = () => ({
  ...qy(),
  attrs: {}
}), Yy = (e) => typeof e == "string" && e.toLowerCase() === "svg";
function oF(e, t, n, o) {
  const r = Ge(() => {
    const i = VE();
    return Gy(i, t, Yy(o), e.transformTemplate), {
      ...i.attrs,
      style: { ...i.style }
    };
  }, [t]);
  if (e.style) {
    const i = {};
    BE(i, e.style, e), r.style = { ...i, ...r.style };
  }
  return r;
}
function rF(e = !1) {
  return (n, o, r, { latestValues: i }, s) => {
    const c = (Ky(n) ? oF : ZV)(o, i, s, n), u = OV(o, typeof n == "string", e), d = n !== $g ? { ...u, ...c, ref: r } : {}, { children: f } = o, p = Ge(() => jn(f) ? f.get() : f, [f]);
    return fi(n, {
      ...d,
      children: p
    });
  };
}
function cx(e) {
  const t = [{}, {}];
  return e == null || e.values.forEach((n, o) => {
    t[0][o] = n.get(), t[1][o] = n.getVelocity();
  }), t;
}
function Xy(e, t, n, o) {
  if (typeof t == "function") {
    const [r, i] = cx(o);
    t = t(n !== void 0 ? n : e.custom, r, i);
  }
  if (typeof t == "string" && (t = e.variants && e.variants[t]), typeof t == "function") {
    const [r, i] = cx(o);
    t = t(n !== void 0 ? n : e.custom, r, i);
  }
  return t;
}
const Nm = (e) => Array.isArray(e), iF = (e) => !!(e && typeof e == "object" && e.mix && e.toValue), sF = (e) => Nm(e) ? e[e.length - 1] || 0 : e;
function td(e) {
  const t = jn(e) ? e.get() : e;
  return iF(t) ? t.toValue() : t;
}
function aF({ scrapeMotionValuesFromProps: e, createRenderState: t, onUpdate: n }, o, r, i) {
  const s = {
    latestValues: lF(o, r, i, e),
    renderState: t()
  };
  return n && (s.onMount = (l) => n({ props: o, current: l, ...s }), s.onUpdate = (l) => n(l)), s;
}
const FE = (e) => (t, n) => {
  const o = Kt(Lf), r = Kt(_f), i = () => aF(e, t, o, r);
  return n ? i() : Ay(i);
};
function lF(e, t, n, o) {
  const r = {}, i = o(e, {});
  for (const p in i)
    r[p] = td(i[p]);
  let { initial: s, animate: l } = e;
  const c = Vf(e), u = $E(e);
  t && u && !c && e.inherit !== !1 && (s === void 0 && (s = t.initial), l === void 0 && (l = t.animate));
  let d = n ? n.initial === !1 : !1;
  d = d || s === !1;
  const f = d ? l : s;
  if (f && typeof f != "boolean" && !Bf(f)) {
    const p = Array.isArray(f) ? f : [f];
    for (let h = 0; h < p.length; h++) {
      const g = Xy(e, p[h]);
      if (g) {
        const { transitionEnd: m, transition: y, ...b } = g;
        for (const T in b) {
          let v = b[T];
          if (Array.isArray(v)) {
            const w = d ? v.length - 1 : 0;
            v = v[w];
          }
          v !== null && (r[T] = v);
        }
        for (const T in m)
          r[T] = m[T];
      }
    }
  }
  return r;
}
function Zy(e, t, n) {
  var i;
  const { style: o } = e, r = {};
  for (const s in o)
    (jn(o[s]) || t.style && jn(t.style[s]) || DE(s, e) || ((i = n == null ? void 0 : n.getValue(s)) == null ? void 0 : i.liveStyle) !== void 0) && (r[s] = o[s]);
  return r;
}
const cF = {
  useVisualState: FE({
    scrapeMotionValuesFromProps: Zy,
    createRenderState: qy
  })
};
function jE(e, t) {
  try {
    t.dimensions = typeof e.getBBox == "function" ? e.getBBox() : e.getBoundingClientRect();
  } catch {
    t.dimensions = {
      x: 0,
      y: 0,
      width: 0,
      height: 0
    };
  }
}
function zE(e, { style: t, vars: n }, o, r) {
  Object.assign(e.style, t, r && r.getProjectionStyles(o));
  for (const i in n)
    e.style.setProperty(i, n[i]);
}
const HE = /* @__PURE__ */ new Set([
  "baseFrequency",
  "diffuseConstant",
  "kernelMatrix",
  "kernelUnitLength",
  "keySplines",
  "keyTimes",
  "limitingConeAngle",
  "markerHeight",
  "markerWidth",
  "numOctaves",
  "targetX",
  "targetY",
  "surfaceScale",
  "specularConstant",
  "specularExponent",
  "stdDeviation",
  "tableValues",
  "viewBox",
  "gradientTransform",
  "pathLength",
  "startOffset",
  "textLength",
  "lengthAdjust"
]);
function WE(e, t, n, o) {
  zE(e, t, void 0, o);
  for (const r in t.attrs)
    e.setAttribute(HE.has(r) ? r : Fy(r), t.attrs[r]);
}
function UE(e, t, n) {
  const o = Zy(e, t, n);
  for (const r in e)
    if (jn(e[r]) || jn(t[r])) {
      const i = Ba.indexOf(r) !== -1 ? "attr" + r.charAt(0).toUpperCase() + r.substring(1) : r;
      o[i] = e[r];
    }
  return o;
}
const ux = ["x", "y", "width", "height", "cx", "cy", "r"], uF = {
  useVisualState: FE({
    scrapeMotionValuesFromProps: UE,
    createRenderState: VE,
    onUpdate: ({ props: e, prevProps: t, current: n, renderState: o, latestValues: r }) => {
      if (!n)
        return;
      let i = !!e.drag;
      if (!i) {
        for (const l in r)
          if (bs.has(l)) {
            i = !0;
            break;
          }
      }
      if (!i)
        return;
      let s = !t;
      if (t)
        for (let l = 0; l < ux.length; l++) {
          const c = ux[l];
          e[c] !== t[c] && (s = !0);
        }
      s && Vt.read(() => {
        jE(n, o), Vt.render(() => {
          Gy(o, r, Yy(n.tagName), e.transformTemplate), WE(n, o);
        });
      });
    }
  })
};
function dF(e, t) {
  return function(o, { forwardMotionProps: r } = { forwardMotionProps: !1 }) {
    const s = {
      ...Ky(o) ? uF : cF,
      preloadedFeatures: e,
      useRender: rF(r),
      createVisualElement: t,
      Component: o
    };
    return _V(s);
  };
}
function ic(e, t, n) {
  const o = e.getProps();
  return Xy(o, t, n !== void 0 ? n : o.custom, e);
}
const qE = /* @__PURE__ */ new Set([
  "width",
  "height",
  "top",
  "left",
  "right",
  "bottom",
  ...Ba
]);
let nd;
function fF() {
  nd = void 0;
}
const Cr = {
  now: () => (nd === void 0 && Cr.set(kn.isProcessing || km.useManualTiming ? kn.timestamp : performance.now()), nd),
  set: (e) => {
    nd = e, queueMicrotask(fF);
  }
};
function Qy(e, t) {
  e.indexOf(t) === -1 && e.push(t);
}
function Jy(e, t) {
  const n = e.indexOf(t);
  n > -1 && e.splice(n, 1);
}
class eb {
  constructor() {
    this.subscriptions = [];
  }
  add(t) {
    return Qy(this.subscriptions, t), () => Jy(this.subscriptions, t);
  }
  notify(t, n, o) {
    const r = this.subscriptions.length;
    if (r)
      if (r === 1)
        this.subscriptions[0](t, n, o);
      else
        for (let i = 0; i < r; i++) {
          const s = this.subscriptions[i];
          s && s(t, n, o);
        }
  }
  getSize() {
    return this.subscriptions.length;
  }
  clear() {
    this.subscriptions.length = 0;
  }
}
function KE(e, t) {
  return t ? e * (1e3 / t) : 0;
}
const dx = 30, pF = (e) => !isNaN(parseFloat(e));
class hF {
  /**
   * @param init - The initiating value
   * @param config - Optional configuration options
   *
   * -  `transformer`: A function to transform incoming values with.
   */
  constructor(t, n = {}) {
    this.version = "12.7.3", this.canTrackVelocity = null, this.events = {}, this.updateAndNotify = (o, r = !0) => {
      const i = Cr.now();
      this.updatedAt !== i && this.setPrevFrameValue(), this.prev = this.current, this.setCurrent(o), this.current !== this.prev && this.events.change && this.events.change.notify(this.current), r && this.events.renderRequest && this.events.renderRequest.notify(this.current);
    }, this.hasAnimated = !1, this.setCurrent(t), this.owner = n.owner;
  }
  setCurrent(t) {
    this.current = t, this.updatedAt = Cr.now(), this.canTrackVelocity === null && t !== void 0 && (this.canTrackVelocity = pF(this.current));
  }
  setPrevFrameValue(t = this.current) {
    this.prevFrameValue = t, this.prevUpdatedAt = this.updatedAt;
  }
  /**
   * Adds a function that will be notified when the `MotionValue` is updated.
   *
   * It returns a function that, when called, will cancel the subscription.
   *
   * When calling `onChange` inside a React component, it should be wrapped with the
   * `useEffect` hook. As it returns an unsubscribe function, this should be returned
   * from the `useEffect` function to ensure you don't add duplicate subscribers..
   *
   * ```jsx
   * export const MyComponent = () => {
   *   const x = useMotionValue(0)
   *   const y = useMotionValue(0)
   *   const opacity = useMotionValue(1)
   *
   *   useEffect(() => {
   *     function updateOpacity() {
   *       const maxXY = Math.max(x.get(), y.get())
   *       const newOpacity = transform(maxXY, [0, 100], [1, 0])
   *       opacity.set(newOpacity)
   *     }
   *
   *     const unsubscribeX = x.on("change", updateOpacity)
   *     const unsubscribeY = y.on("change", updateOpacity)
   *
   *     return () => {
   *       unsubscribeX()
   *       unsubscribeY()
   *     }
   *   }, [])
   *
   *   return <motion.div style={{ x }} />
   * }
   * ```
   *
   * @param subscriber - A function that receives the latest value.
   * @returns A function that, when called, will cancel this subscription.
   *
   * @deprecated
   */
  onChange(t) {
    return process.env.NODE_ENV !== "production" && Df(!1, 'value.onChange(callback) is deprecated. Switch to value.on("change", callback).'), this.on("change", t);
  }
  on(t, n) {
    this.events[t] || (this.events[t] = new eb());
    const o = this.events[t].add(n);
    return t === "change" ? () => {
      o(), Vt.read(() => {
        this.events.change.getSize() || this.stop();
      });
    } : o;
  }
  clearListeners() {
    for (const t in this.events)
      this.events[t].clear();
  }
  /**
   * Attaches a passive effect to the `MotionValue`.
   */
  attach(t, n) {
    this.passiveEffect = t, this.stopPassiveEffect = n;
  }
  /**
   * Sets the state of the `MotionValue`.
   *
   * @remarks
   *
   * ```jsx
   * const x = useMotionValue(0)
   * x.set(10)
   * ```
   *
   * @param latest - Latest value to set.
   * @param render - Whether to notify render subscribers. Defaults to `true`
   *
   * @public
   */
  set(t, n = !0) {
    !n || !this.passiveEffect ? this.updateAndNotify(t, n) : this.passiveEffect(t, this.updateAndNotify);
  }
  setWithVelocity(t, n, o) {
    this.set(n), this.prev = void 0, this.prevFrameValue = t, this.prevUpdatedAt = this.updatedAt - o;
  }
  /**
   * Set the state of the `MotionValue`, stopping any active animations,
   * effects, and resets velocity to `0`.
   */
  jump(t, n = !0) {
    this.updateAndNotify(t), this.prev = t, this.prevUpdatedAt = this.prevFrameValue = void 0, n && this.stop(), this.stopPassiveEffect && this.stopPassiveEffect();
  }
  /**
   * Returns the latest state of `MotionValue`
   *
   * @returns - The latest state of `MotionValue`
   *
   * @public
   */
  get() {
    return this.current;
  }
  /**
   * @public
   */
  getPrevious() {
    return this.prev;
  }
  /**
   * Returns the latest velocity of `MotionValue`
   *
   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.
   *
   * @public
   */
  getVelocity() {
    const t = Cr.now();
    if (!this.canTrackVelocity || this.prevFrameValue === void 0 || t - this.updatedAt > dx)
      return 0;
    const n = Math.min(this.updatedAt - this.prevUpdatedAt, dx);
    return KE(parseFloat(this.current) - parseFloat(this.prevFrameValue), n);
  }
  /**
   * Registers a new animation to control this `MotionValue`. Only one
   * animation can drive a `MotionValue` at one time.
   *
   * ```jsx
   * value.start()
   * ```
   *
   * @param animation - A function that starts the provided animation
   */
  start(t) {
    return this.stop(), new Promise((n) => {
      this.hasAnimated = !0, this.animation = t(n), this.events.animationStart && this.events.animationStart.notify();
    }).then(() => {
      this.events.animationComplete && this.events.animationComplete.notify(), this.clearAnimation();
    });
  }
  /**
   * Stop the currently active animation.
   *
   * @public
   */
  stop() {
    this.animation && (this.animation.stop(), this.events.animationCancel && this.events.animationCancel.notify()), this.clearAnimation();
  }
  /**
   * Returns `true` if this value is currently animating.
   *
   * @public
   */
  isAnimating() {
    return !!this.animation;
  }
  clearAnimation() {
    delete this.animation;
  }
  /**
   * Destroy and clean up subscribers to this `MotionValue`.
   *
   * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically
   * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually
   * created a `MotionValue` via the `motionValue` function.
   *
   * @public
   */
  destroy() {
    this.clearListeners(), this.stop(), this.stopPassiveEffect && this.stopPassiveEffect();
  }
}
function sc(e, t) {
  return new hF(e, t);
}
function mF(e, t, n) {
  e.hasValue(t) ? e.getValue(t).set(n) : e.addValue(t, sc(n));
}
function gF(e, t) {
  const n = ic(e, t);
  let { transitionEnd: o = {}, transition: r = {}, ...i } = n || {};
  i = { ...i, ...o };
  for (const s in i) {
    const l = sF(i[s]);
    mF(e, s, l);
  }
}
function yF(e) {
  return !!(jn(e) && e.add);
}
function Mm(e, t) {
  const n = e.getValue("willChange");
  if (yF(n))
    return n.add(t);
  if (!n && km.WillChange) {
    const o = new km.WillChange("auto");
    e.addValue("willChange", o), o.add(t);
  }
}
function GE(e) {
  return e.props[NE];
}
const YE = (e, t, n) => (((1 - 3 * n + 3 * t) * e + (3 * n - 6 * t)) * e + 3 * t) * e, bF = 1e-7, vF = 12;
function xF(e, t, n, o, r) {
  let i, s, l = 0;
  do
    s = t + (n - t) / 2, i = YE(s, o, r) - e, i > 0 ? n = s : t = s;
  while (Math.abs(i) > bF && ++l < vF);
  return s;
}
function Fc(e, t, n, o) {
  if (e === t && n === o)
    return zo;
  const r = (i) => xF(i, 0, 1, e, n);
  return (i) => i === 0 || i === 1 ? i : YE(r(i), t, o);
}
const XE = (e) => (t) => t <= 0.5 ? e(2 * t) / 2 : (2 - e(2 * (1 - t))) / 2, ZE = (e) => (t) => 1 - e(1 - t), QE = /* @__PURE__ */ Fc(0.33, 1.53, 0.69, 0.99), tb = /* @__PURE__ */ ZE(QE), JE = /* @__PURE__ */ XE(tb), eO = (e) => (e *= 2) < 1 ? 0.5 * tb(e) : 0.5 * (2 - Math.pow(2, -10 * (e - 1))), nb = (e) => 1 - Math.sin(Math.acos(e)), tO = ZE(nb), nO = XE(nb), oO = (e) => /^0[^.\s]+$/u.test(e);
function wF(e) {
  return typeof e == "number" ? e === 0 : e !== null ? e === "none" || e === "0" || oO(e) : !0;
}
const Il = (e) => Math.round(e * 1e5) / 1e5, ob = /-?(?:\d+(?:\.\d+)?|\.\d+)/gu;
function SF(e) {
  return e == null;
}
const TF = /^(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))$/iu, rb = (e, t) => (n) => !!(typeof n == "string" && TF.test(n) && n.startsWith(e) || t && !SF(n) && Object.prototype.hasOwnProperty.call(n, t)), rO = (e, t, n) => (o) => {
  if (typeof o != "string")
    return o;
  const [r, i, s, l] = o.match(ob);
  return {
    [e]: parseFloat(r),
    [t]: parseFloat(i),
    [n]: parseFloat(s),
    alpha: l !== void 0 ? parseFloat(l) : 1
  };
}, CF = (e) => qr(0, 255, e), ch = {
  ...Va,
  transform: (e) => Math.round(CF(e))
}, Qi = {
  test: /* @__PURE__ */ rb("rgb", "red"),
  parse: /* @__PURE__ */ rO("red", "green", "blue"),
  transform: ({ red: e, green: t, blue: n, alpha: o = 1 }) => "rgba(" + ch.transform(e) + ", " + ch.transform(t) + ", " + ch.transform(n) + ", " + Il(rc.transform(o)) + ")"
};
function EF(e) {
  let t = "", n = "", o = "", r = "";
  return e.length > 5 ? (t = e.substring(1, 3), n = e.substring(3, 5), o = e.substring(5, 7), r = e.substring(7, 9)) : (t = e.substring(1, 2), n = e.substring(2, 3), o = e.substring(3, 4), r = e.substring(4, 5), t += t, n += n, o += o, r += r), {
    red: parseInt(t, 16),
    green: parseInt(n, 16),
    blue: parseInt(o, 16),
    alpha: r ? parseInt(r, 16) / 255 : 1
  };
}
const Am = {
  test: /* @__PURE__ */ rb("#"),
  parse: EF,
  transform: Qi.transform
}, Hs = {
  test: /* @__PURE__ */ rb("hsl", "hue"),
  parse: /* @__PURE__ */ rO("hue", "saturation", "lightness"),
  transform: ({ hue: e, saturation: t, lightness: n, alpha: o = 1 }) => "hsla(" + Math.round(e) + ", " + Tr.transform(Il(t)) + ", " + Tr.transform(Il(n)) + ", " + Il(rc.transform(o)) + ")"
}, Dn = {
  test: (e) => Qi.test(e) || Am.test(e) || Hs.test(e),
  parse: (e) => Qi.test(e) ? Qi.parse(e) : Hs.test(e) ? Hs.parse(e) : Am.parse(e),
  transform: (e) => typeof e == "string" ? e : e.hasOwnProperty("red") ? Qi.transform(e) : Hs.transform(e)
}, OF = /(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))/giu;
function PF(e) {
  var t, n;
  return isNaN(e) && typeof e == "string" && (((t = e.match(ob)) == null ? void 0 : t.length) || 0) + (((n = e.match(OF)) == null ? void 0 : n.length) || 0) > 0;
}
const iO = "number", sO = "color", RF = "var", IF = "var(", fx = "${}", kF = /var\s*\(\s*--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)|#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\)|-?(?:\d+(?:\.\d+)?|\.\d+)/giu;
function ac(e) {
  const t = e.toString(), n = [], o = {
    color: [],
    number: [],
    var: []
  }, r = [];
  let i = 0;
  const l = t.replace(kF, (c) => (Dn.test(c) ? (o.color.push(i), r.push(sO), n.push(Dn.parse(c))) : c.startsWith(IF) ? (o.var.push(i), r.push(RF), n.push(c)) : (o.number.push(i), r.push(iO), n.push(parseFloat(c))), ++i, fx)).split(fx);
  return { values: n, split: l, indexes: o, types: r };
}
function aO(e) {
  return ac(e).values;
}
function lO(e) {
  const { split: t, types: n } = ac(e), o = t.length;
  return (r) => {
    let i = "";
    for (let s = 0; s < o; s++)
      if (i += t[s], r[s] !== void 0) {
        const l = n[s];
        l === iO ? i += Il(r[s]) : l === sO ? i += Dn.transform(r[s]) : i += r[s];
      }
    return i;
  };
}
const $F = (e) => typeof e == "number" ? 0 : e;
function NF(e) {
  const t = aO(e);
  return lO(e)(t.map($F));
}
const xi = {
  test: PF,
  parse: aO,
  createTransformer: lO,
  getAnimatableNone: NF
}, MF = /* @__PURE__ */ new Set(["brightness", "contrast", "saturate", "opacity"]);
function AF(e) {
  const [t, n] = e.slice(0, -1).split("(");
  if (t === "drop-shadow")
    return e;
  const [o] = n.match(ob) || [];
  if (!o)
    return e;
  const r = n.replace(o, "");
  let i = MF.has(t) ? 1 : 0;
  return o !== n && (i *= 100), t + "(" + i + r + ")";
}
const _F = /\b([a-z-]*)\(.*?\)/gu, _m = {
  ...xi,
  getAnimatableNone: (e) => {
    const t = e.match(_F);
    return t ? t.map(AF).join(" ") : e;
  }
}, DF = {
  ...Wy,
  // Color props
  color: Dn,
  backgroundColor: Dn,
  outlineColor: Dn,
  fill: Dn,
  stroke: Dn,
  // Border props
  borderColor: Dn,
  borderTopColor: Dn,
  borderRightColor: Dn,
  borderBottomColor: Dn,
  borderLeftColor: Dn,
  filter: _m,
  WebkitFilter: _m
}, cO = (e) => DF[e];
function uO(e, t) {
  let n = cO(e);
  return n !== _m && (n = xi), n.getAnimatableNone ? n.getAnimatableNone(t) : void 0;
}
const LF = /* @__PURE__ */ new Set(["auto", "none", "0"]);
function BF(e, t, n) {
  let o = 0, r;
  for (; o < e.length && !r; ) {
    const i = e[o];
    typeof i == "string" && !LF.has(i) && ac(i).values.length && (r = e[o]), o++;
  }
  if (r && n)
    for (const i of t)
      e[i] = uO(n, r);
}
const Ji = (e) => e * 180 / Math.PI, Dm = (e) => {
  const t = Ji(Math.atan2(e[1], e[0]));
  return Lm(t);
}, VF = {
  x: 4,
  y: 5,
  translateX: 4,
  translateY: 5,
  scaleX: 0,
  scaleY: 3,
  scale: (e) => (Math.abs(e[0]) + Math.abs(e[3])) / 2,
  rotate: Dm,
  rotateZ: Dm,
  skewX: (e) => Ji(Math.atan(e[1])),
  skewY: (e) => Ji(Math.atan(e[2])),
  skew: (e) => (Math.abs(e[1]) + Math.abs(e[2])) / 2
}, Lm = (e) => (e = e % 360, e < 0 && (e += 360), e), px = Dm, hx = (e) => Math.sqrt(e[0] * e[0] + e[1] * e[1]), mx = (e) => Math.sqrt(e[4] * e[4] + e[5] * e[5]), FF = {
  x: 12,
  y: 13,
  z: 14,
  translateX: 12,
  translateY: 13,
  translateZ: 14,
  scaleX: hx,
  scaleY: mx,
  scale: (e) => (hx(e) + mx(e)) / 2,
  rotateX: (e) => Lm(Ji(Math.atan2(e[6], e[5]))),
  rotateY: (e) => Lm(Ji(Math.atan2(-e[2], e[0]))),
  rotateZ: px,
  rotate: px,
  skewX: (e) => Ji(Math.atan(e[4])),
  skewY: (e) => Ji(Math.atan(e[1])),
  skew: (e) => (Math.abs(e[1]) + Math.abs(e[4])) / 2
};
function gx(e) {
  return e.includes("scale") ? 1 : 0;
}
function Bm(e, t) {
  if (!e || e === "none")
    return gx(t);
  const n = e.match(/^matrix3d\(([-\d.e\s,]+)\)$/u);
  let o, r;
  if (n)
    o = FF, r = n;
  else {
    const l = e.match(/^matrix\(([-\d.e\s,]+)\)$/u);
    o = VF, r = l;
  }
  if (!r)
    return gx(t);
  const i = o[t], s = r[1].split(",").map(zF);
  return typeof i == "function" ? i(s) : s[i];
}
const jF = (e, t) => {
  const { transform: n = "none" } = getComputedStyle(e);
  return Bm(n, t);
};
function zF(e) {
  return parseFloat(e.trim());
}
const yx = (e) => e === Va || e === Ue, HF = /* @__PURE__ */ new Set(["x", "y", "z"]), WF = Ba.filter((e) => !HF.has(e));
function UF(e) {
  const t = [];
  return WF.forEach((n) => {
    const o = e.getValue(n);
    o !== void 0 && (t.push([n, o.get()]), o.set(n.startsWith("scale") ? 1 : 0));
  }), t;
}
const ga = {
  // Dimensions
  width: ({ x: e }, { paddingLeft: t = "0", paddingRight: n = "0" }) => e.max - e.min - parseFloat(t) - parseFloat(n),
  height: ({ y: e }, { paddingTop: t = "0", paddingBottom: n = "0" }) => e.max - e.min - parseFloat(t) - parseFloat(n),
  top: (e, { top: t }) => parseFloat(t),
  left: (e, { left: t }) => parseFloat(t),
  bottom: ({ y: e }, { top: t }) => parseFloat(t) + (e.max - e.min),
  right: ({ x: e }, { left: t }) => parseFloat(t) + (e.max - e.min),
  // Transform
  x: (e, { transform: t }) => Bm(t, "x"),
  y: (e, { transform: t }) => Bm(t, "y")
};
ga.translateX = ga.x;
ga.translateY = ga.y;
const rs = /* @__PURE__ */ new Set();
let Vm = !1, Fm = !1;
function dO() {
  if (Fm) {
    const e = Array.from(rs).filter((o) => o.needsMeasurement), t = new Set(e.map((o) => o.element)), n = /* @__PURE__ */ new Map();
    t.forEach((o) => {
      const r = UF(o);
      r.length && (n.set(o, r), o.render());
    }), e.forEach((o) => o.measureInitialState()), t.forEach((o) => {
      o.render();
      const r = n.get(o);
      r && r.forEach(([i, s]) => {
        var l;
        (l = o.getValue(i)) == null || l.set(s);
      });
    }), e.forEach((o) => o.measureEndState()), e.forEach((o) => {
      o.suspendedScrollY !== void 0 && window.scrollTo(0, o.suspendedScrollY);
    });
  }
  Fm = !1, Vm = !1, rs.forEach((e) => e.complete()), rs.clear();
}
function fO() {
  rs.forEach((e) => {
    e.readKeyframes(), e.needsMeasurement && (Fm = !0);
  });
}
function qF() {
  fO(), dO();
}
class ib {
  constructor(t, n, o, r, i, s = !1) {
    this.isComplete = !1, this.isAsync = !1, this.needsMeasurement = !1, this.isScheduled = !1, this.unresolvedKeyframes = [...t], this.onComplete = n, this.name = o, this.motionValue = r, this.element = i, this.isAsync = s;
  }
  scheduleResolve() {
    this.isScheduled = !0, this.isAsync ? (rs.add(this), Vm || (Vm = !0, Vt.read(fO), Vt.resolveKeyframes(dO))) : (this.readKeyframes(), this.complete());
  }
  readKeyframes() {
    const { unresolvedKeyframes: t, name: n, element: o, motionValue: r } = this;
    for (let i = 0; i < t.length; i++)
      if (t[i] === null)
        if (i === 0) {
          const s = r == null ? void 0 : r.get(), l = t[t.length - 1];
          if (s !== void 0)
            t[0] = s;
          else if (o && n) {
            const c = o.readValue(n, l);
            c != null && (t[0] = c);
          }
          t[0] === void 0 && (t[0] = l), r && s === void 0 && r.set(t[0]);
        } else
          t[i] = t[i - 1];
  }
  setFinalKeyframe() {
  }
  measureInitialState() {
  }
  renderEndStyles() {
  }
  measureEndState() {
  }
  complete() {
    this.isComplete = !0, this.onComplete(this.unresolvedKeyframes, this.finalKeyframe), rs.delete(this);
  }
  cancel() {
    this.isComplete || (this.isScheduled = !1, rs.delete(this));
  }
  resume() {
    this.isComplete || this.scheduleResolve();
  }
}
const pO = (e) => /^-?(?:\d+(?:\.\d+)?|\.\d+)$/u.test(e), KF = (
  // eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words
  /^var\(--(?:([\w-]+)|([\w-]+), ?([a-zA-Z\d ()%#.,-]+))\)/u
);
function GF(e) {
  const t = KF.exec(e);
  if (!t)
    return [,];
  const [, n, o, r] = t;
  return [`--${n ?? o}`, r];
}
const YF = 4;
function hO(e, t, n = 1) {
  vi(n <= YF, `Max CSS variable fallback depth detected in property "${e}". This may indicate a circular fallback dependency.`);
  const [o, r] = GF(e);
  if (!o)
    return;
  const i = window.getComputedStyle(t).getPropertyValue(o);
  if (i) {
    const s = i.trim();
    return pO(s) ? parseFloat(s) : s;
  }
  return Hy(r) ? hO(r, t, n + 1) : r;
}
const mO = (e) => (t) => t.test(e), XF = {
  test: (e) => e === "auto",
  parse: (e) => e
}, gO = [Va, Ue, Tr, ai, HV, zV, XF], bx = (e) => gO.find(mO(e));
class yO extends ib {
  constructor(t, n, o, r, i) {
    super(t, n, o, r, i, !0);
  }
  readKeyframes() {
    const { unresolvedKeyframes: t, element: n, name: o } = this;
    if (!n || !n.current)
      return;
    super.readKeyframes();
    for (let c = 0; c < t.length; c++) {
      let u = t[c];
      if (typeof u == "string" && (u = u.trim(), Hy(u))) {
        const d = hO(u, n.current);
        d !== void 0 && (t[c] = d), c === t.length - 1 && (this.finalKeyframe = u);
      }
    }
    if (this.resolveNoneKeyframes(), !qE.has(o) || t.length !== 2)
      return;
    const [r, i] = t, s = bx(r), l = bx(i);
    if (s !== l)
      if (yx(s) && yx(l))
        for (let c = 0; c < t.length; c++) {
          const u = t[c];
          typeof u == "string" && (t[c] = parseFloat(u));
        }
      else
        this.needsMeasurement = !0;
  }
  resolveNoneKeyframes() {
    const { unresolvedKeyframes: t, name: n } = this, o = [];
    for (let r = 0; r < t.length; r++)
      wF(t[r]) && o.push(r);
    o.length && BF(t, o, n);
  }
  measureInitialState() {
    const { element: t, unresolvedKeyframes: n, name: o } = this;
    if (!t || !t.current)
      return;
    o === "height" && (this.suspendedScrollY = window.pageYOffset), this.measuredOrigin = ga[o](t.measureViewportBox(), window.getComputedStyle(t.current)), n[0] = this.measuredOrigin;
    const r = n[n.length - 1];
    r !== void 0 && t.getValue(o, r).jump(r, !1);
  }
  measureEndState() {
    var l;
    const { element: t, name: n, unresolvedKeyframes: o } = this;
    if (!t || !t.current)
      return;
    const r = t.getValue(n);
    r && r.jump(this.measuredOrigin, !1);
    const i = o.length - 1, s = o[i];
    o[i] = ga[n](t.measureViewportBox(), window.getComputedStyle(t.current)), s !== null && this.finalKeyframe === void 0 && (this.finalKeyframe = s), (l = this.removedTransforms) != null && l.length && this.removedTransforms.forEach(([c, u]) => {
      t.getValue(c).set(u);
    }), this.resolveNoneKeyframes();
  }
}
const vx = (e, t) => t === "zIndex" ? !1 : !!(typeof e == "number" || Array.isArray(e) || typeof e == "string" && // It's animatable if we have a string
(xi.test(e) || e === "0") && // And it contains numbers and/or colors
!e.startsWith("url("));
function sb(e) {
  return typeof e == "function" && "applyToOptions" in e;
}
function ZF(e) {
  const t = e[0];
  if (e.length === 1)
    return !0;
  for (let n = 0; n < e.length; n++)
    if (e[n] !== t)
      return !0;
}
function QF(e, t, n, o) {
  const r = e[0];
  if (r === null)
    return !1;
  if (t === "display" || t === "visibility")
    return !0;
  const i = e[e.length - 1], s = vx(r, t), l = vx(i, t);
  return La(s === l, `You are trying to animate ${t} from "${r}" to "${i}". ${r} is not an animatable value - to enable this animation set ${r} to a value animatable to ${i} via the \`style\` property.`), !s || !l ? !1 : ZF(e) || (n === "spring" || sb(n)) && o;
}
const JF = (e) => e !== null;
function Ff(e, { repeat: t, repeatType: n = "loop" }, o) {
  const r = e.filter(JF), i = t && n !== "loop" && t % 2 === 1 ? 0 : r.length - 1;
  return !i || o === void 0 ? r[i] : o;
}
const ej = 40;
class bO {
  constructor({ autoplay: t = !0, delay: n = 0, type: o = "keyframes", repeat: r = 0, repeatDelay: i = 0, repeatType: s = "loop", ...l }) {
    this.isStopped = !1, this.hasAttemptedResolve = !1, this.createdAt = Cr.now(), this.options = {
      autoplay: t,
      delay: n,
      type: o,
      repeat: r,
      repeatDelay: i,
      repeatType: s,
      ...l
    }, this.updateFinishedPromise();
  }
  /**
   * This method uses the createdAt and resolvedAt to calculate the
   * animation startTime. *Ideally*, we would use the createdAt time as t=0
   * as the following frame would then be the first frame of the animation in
   * progress, which would feel snappier.
   *
   * However, if there's a delay (main thread work) between the creation of
   * the animation and the first commited frame, we prefer to use resolvedAt
   * to avoid a sudden jump into the animation.
   */
  calcStartTime() {
    return this.resolvedAt ? this.resolvedAt - this.createdAt > ej ? this.resolvedAt : this.createdAt : this.createdAt;
  }
  /**
   * A getter for resolved data. If keyframes are not yet resolved, accessing
   * this.resolved will synchronously flush all pending keyframe resolvers.
   * This is a deoptimisation, but at its worst still batches read/writes.
   */
  get resolved() {
    return !this._resolved && !this.hasAttemptedResolve && qF(), this._resolved;
  }
  /**
   * A method to be called when the keyframes resolver completes. This method
   * will check if its possible to run the animation and, if not, skip it.
   * Otherwise, it will call initPlayback on the implementing class.
   */
  onKeyframesResolved(t, n) {
    this.resolvedAt = Cr.now(), this.hasAttemptedResolve = !0;
    const { name: o, type: r, velocity: i, delay: s, onComplete: l, onUpdate: c, isGenerator: u } = this.options;
    if (!u && !QF(t, o, r, i))
      if (s)
        this.options.duration = 0;
      else {
        c && c(Ff(t, this.options, n)), l && l(), this.resolveFinishedPromise();
        return;
      }
    const d = this.initPlayback(t, n);
    d !== !1 && (this._resolved = {
      keyframes: t,
      finalKeyframe: n,
      ...d
    }, this.onPostResolved());
  }
  onPostResolved() {
  }
  /**
   * Allows the returned animation to be awaited or promise-chained. Currently
   * resolves when the animation finishes at all but in a future update could/should
   * reject if its cancels.
   */
  then(t, n) {
    return this.currentFinishedPromise.then(t, n);
  }
  flatten() {
    this.options.allowFlatten && (this.options.type = "keyframes", this.options.ease = "linear");
  }
  updateFinishedPromise() {
    this.currentFinishedPromise = new Promise((t) => {
      this.resolveFinishedPromise = t;
    });
  }
}
const Jt = (e, t, n) => e + (t - e) * n;
function uh(e, t, n) {
  return n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6 ? e + (t - e) * 6 * n : n < 1 / 2 ? t : n < 2 / 3 ? e + (t - e) * (2 / 3 - n) * 6 : e;
}
function tj({ hue: e, saturation: t, lightness: n, alpha: o }) {
  e /= 360, t /= 100, n /= 100;
  let r = 0, i = 0, s = 0;
  if (!t)
    r = i = s = n;
  else {
    const l = n < 0.5 ? n * (1 + t) : n + t - n * t, c = 2 * n - l;
    r = uh(c, l, e + 1 / 3), i = uh(c, l, e), s = uh(c, l, e - 1 / 3);
  }
  return {
    red: Math.round(r * 255),
    green: Math.round(i * 255),
    blue: Math.round(s * 255),
    alpha: o
  };
}
function kd(e, t) {
  return (n) => n > 0 ? t : e;
}
const dh = (e, t, n) => {
  const o = e * e, r = n * (t * t - o) + o;
  return r < 0 ? 0 : Math.sqrt(r);
}, nj = [Am, Qi, Hs], oj = (e) => nj.find((t) => t.test(e));
function xx(e) {
  const t = oj(e);
  if (La(!!t, `'${e}' is not an animatable color. Use the equivalent color code instead.`), !t)
    return !1;
  let n = t.parse(e);
  return t === Hs && (n = tj(n)), n;
}
const wx = (e, t) => {
  const n = xx(e), o = xx(t);
  if (!n || !o)
    return kd(e, t);
  const r = { ...n };
  return (i) => (r.red = dh(n.red, o.red, i), r.green = dh(n.green, o.green, i), r.blue = dh(n.blue, o.blue, i), r.alpha = Jt(n.alpha, o.alpha, i), Qi.transform(r));
}, rj = (e, t) => (n) => t(e(n)), jc = (...e) => e.reduce(rj), jm = /* @__PURE__ */ new Set(["none", "hidden"]);
function ij(e, t) {
  return jm.has(e) ? (n) => n <= 0 ? e : t : (n) => n >= 1 ? t : e;
}
function sj(e, t) {
  return (n) => Jt(e, t, n);
}
function ab(e) {
  return typeof e == "number" ? sj : typeof e == "string" ? Hy(e) ? kd : Dn.test(e) ? wx : cj : Array.isArray(e) ? vO : typeof e == "object" ? Dn.test(e) ? wx : aj : kd;
}
function vO(e, t) {
  const n = [...e], o = n.length, r = e.map((i, s) => ab(i)(i, t[s]));
  return (i) => {
    for (let s = 0; s < o; s++)
      n[s] = r[s](i);
    return n;
  };
}
function aj(e, t) {
  const n = { ...e, ...t }, o = {};
  for (const r in n)
    e[r] !== void 0 && t[r] !== void 0 && (o[r] = ab(e[r])(e[r], t[r]));
  return (r) => {
    for (const i in o)
      n[i] = o[i](r);
    return n;
  };
}
function lj(e, t) {
  const n = [], o = { color: 0, var: 0, number: 0 };
  for (let r = 0; r < t.values.length; r++) {
    const i = t.types[r], s = e.indexes[i][o[i]], l = e.values[s] ?? 0;
    n[r] = l, o[i]++;
  }
  return n;
}
const cj = (e, t) => {
  const n = xi.createTransformer(t), o = ac(e), r = ac(t);
  return o.indexes.var.length === r.indexes.var.length && o.indexes.color.length === r.indexes.color.length && o.indexes.number.length >= r.indexes.number.length ? jm.has(e) && !r.values.length || jm.has(t) && !o.values.length ? ij(e, t) : jc(vO(lj(o, r), r.values), n) : (La(!0, `Complex values '${e}' and '${t}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`), kd(e, t));
};
function xO(e, t, n) {
  return typeof e == "number" && typeof t == "number" && typeof n == "number" ? Jt(e, t, n) : ab(e)(e, t);
}
const uj = 5;
function wO(e, t, n) {
  const o = Math.max(t - uj, 0);
  return KE(n - e(o), t - o);
}
const Qt = {
  // Default spring physics
  stiffness: 100,
  damping: 10,
  mass: 1,
  velocity: 0,
  // Default duration/bounce-based options
  duration: 800,
  // in ms
  bounce: 0.3,
  visualDuration: 0.3,
  // in seconds
  // Rest thresholds
  restSpeed: {
    granular: 0.01,
    default: 2
  },
  restDelta: {
    granular: 5e-3,
    default: 0.5
  },
  // Limits
  minDuration: 0.01,
  // in seconds
  maxDuration: 10,
  // in seconds
  minDamping: 0.05,
  maxDamping: 1
}, nr = /* @__NO_SIDE_EFFECTS__ */ (e) => e * 1e3, Er = /* @__NO_SIDE_EFFECTS__ */ (e) => e / 1e3, Sx = 1e-3;
function dj({ duration: e = Qt.duration, bounce: t = Qt.bounce, velocity: n = Qt.velocity, mass: o = Qt.mass }) {
  let r, i;
  La(e <= /* @__PURE__ */ nr(Qt.maxDuration), "Spring duration must be 10 seconds or less");
  let s = 1 - t;
  s = qr(Qt.minDamping, Qt.maxDamping, s), e = qr(Qt.minDuration, Qt.maxDuration, /* @__PURE__ */ Er(e)), s < 1 ? (r = (u) => {
    const d = u * s, f = d * e, p = d - n, h = zm(u, s), g = Math.exp(-f);
    return Sx - p / h * g;
  }, i = (u) => {
    const f = u * s * e, p = f * n + n, h = Math.pow(s, 2) * Math.pow(u, 2) * e, g = Math.exp(-f), m = zm(Math.pow(u, 2), s);
    return (-r(u) + Sx > 0 ? -1 : 1) * ((p - h) * g) / m;
  }) : (r = (u) => {
    const d = Math.exp(-u * e), f = (u - n) * e + 1;
    return -1e-3 + d * f;
  }, i = (u) => {
    const d = Math.exp(-u * e), f = (n - u) * (e * e);
    return d * f;
  });
  const l = 5 / e, c = pj(r, i, l);
  if (e = /* @__PURE__ */ nr(e), isNaN(c))
    return {
      stiffness: Qt.stiffness,
      damping: Qt.damping,
      duration: e
    };
  {
    const u = Math.pow(c, 2) * o;
    return {
      stiffness: u,
      damping: s * 2 * Math.sqrt(o * u),
      duration: e
    };
  }
}
const fj = 12;
function pj(e, t, n) {
  let o = n;
  for (let r = 1; r < fj; r++)
    o = o - e(o) / t(o);
  return o;
}
function zm(e, t) {
  return e * Math.sqrt(1 - t * t);
}
const $d = 2e4;
function lb(e) {
  let t = 0;
  const n = 50;
  let o = e.next(t);
  for (; !o.done && t < $d; )
    t += n, o = e.next(t);
  return t >= $d ? 1 / 0 : t;
}
function hj(e, t = 100, n) {
  const o = n({ ...e, keyframes: [0, t] }), r = Math.min(lb(o), $d);
  return {
    type: "keyframes",
    ease: (i) => o.next(r * i).value / t,
    duration: /* @__PURE__ */ Er(r)
  };
}
const mj = {};
// @__NO_SIDE_EFFECTS__
function cb(e) {
  let t;
  return () => (t === void 0 && (t = e()), t);
}
function gj(e, t) {
  const n = /* @__PURE__ */ cb(e);
  return () => mj[t] ?? n();
}
const lc = /* @__PURE__ */ gj(() => {
  try {
    document.createElement("div").animate({ opacity: 0 }, { easing: "linear(0, 1)" });
  } catch {
    return !1;
  }
  return !0;
}, "linearEasing"), SO = (e, t, n = 10) => {
  let o = "";
  const r = Math.max(Math.round(t / n), 2);
  for (let i = 0; i < r; i++)
    o += e(i / (r - 1)) + ", ";
  return `linear(${o.substring(0, o.length - 2)})`;
}, yj = ["duration", "bounce"], bj = ["stiffness", "damping", "mass"];
function Tx(e, t) {
  return t.some((n) => e[n] !== void 0);
}
function vj(e) {
  let t = {
    velocity: Qt.velocity,
    stiffness: Qt.stiffness,
    damping: Qt.damping,
    mass: Qt.mass,
    isResolvedFromDuration: !1,
    ...e
  };
  if (!Tx(e, bj) && Tx(e, yj))
    if (e.visualDuration) {
      const n = e.visualDuration, o = 2 * Math.PI / (n * 1.2), r = o * o, i = 2 * qr(0.05, 1, 1 - (e.bounce || 0)) * Math.sqrt(r);
      t = {
        ...t,
        mass: Qt.mass,
        stiffness: r,
        damping: i
      };
    } else {
      const n = dj(e);
      t = {
        ...t,
        ...n,
        mass: Qt.mass
      }, t.isResolvedFromDuration = !0;
    }
  return t;
}
function Nd(e = Qt.visualDuration, t = Qt.bounce) {
  const n = typeof e != "object" ? {
    visualDuration: e,
    keyframes: [0, 1],
    bounce: t
  } : e;
  let { restSpeed: o, restDelta: r } = n;
  const i = n.keyframes[0], s = n.keyframes[n.keyframes.length - 1], l = { done: !1, value: i }, { stiffness: c, damping: u, mass: d, duration: f, velocity: p, isResolvedFromDuration: h } = vj({
    ...n,
    velocity: -/* @__PURE__ */ Er(n.velocity || 0)
  }), g = p || 0, m = u / (2 * Math.sqrt(c * d)), y = s - i, b = /* @__PURE__ */ Er(Math.sqrt(c / d)), T = Math.abs(y) < 5;
  o || (o = T ? Qt.restSpeed.granular : Qt.restSpeed.default), r || (r = T ? Qt.restDelta.granular : Qt.restDelta.default);
  let v;
  if (m < 1) {
    const S = zm(b, m);
    v = (C) => {
      const E = Math.exp(-m * b * C);
      return s - E * ((g + m * b * y) / S * Math.sin(S * C) + y * Math.cos(S * C));
    };
  } else if (m === 1)
    v = (S) => s - Math.exp(-b * S) * (y + (g + b * y) * S);
  else {
    const S = b * Math.sqrt(m * m - 1);
    v = (C) => {
      const E = Math.exp(-m * b * C), P = Math.min(S * C, 300);
      return s - E * ((g + m * b * y) * Math.sinh(P) + S * y * Math.cosh(P)) / S;
    };
  }
  const w = {
    calculatedDuration: h && f || null,
    next: (S) => {
      const C = v(S);
      if (h)
        l.done = S >= f;
      else {
        let E = 0;
        m < 1 && (E = S === 0 ? /* @__PURE__ */ nr(g) : wO(v, S, C));
        const P = Math.abs(E) <= o, M = Math.abs(s - C) <= r;
        l.done = P && M;
      }
      return l.value = l.done ? s : C, l;
    },
    toString: () => {
      const S = Math.min(lb(w), $d), C = SO((E) => w.next(S * E).value, S, 30);
      return S + "ms " + C;
    },
    toTransition: () => {
    }
  };
  return w;
}
Nd.applyToOptions = (e) => {
  const t = hj(e, 100, Nd);
  return e.ease = lc() ? t.ease : "easeOut", e.duration = /* @__PURE__ */ nr(t.duration), e.type = "keyframes", e;
};
function Cx({ keyframes: e, velocity: t = 0, power: n = 0.8, timeConstant: o = 325, bounceDamping: r = 10, bounceStiffness: i = 500, modifyTarget: s, min: l, max: c, restDelta: u = 0.5, restSpeed: d }) {
  const f = e[0], p = {
    done: !1,
    value: f
  }, h = (P) => l !== void 0 && P < l || c !== void 0 && P > c, g = (P) => l === void 0 ? c : c === void 0 || Math.abs(l - P) < Math.abs(c - P) ? l : c;
  let m = n * t;
  const y = f + m, b = s === void 0 ? y : s(y);
  b !== y && (m = b - f);
  const T = (P) => -m * Math.exp(-P / o), v = (P) => b + T(P), w = (P) => {
    const M = T(P), x = v(P);
    p.done = Math.abs(M) <= u, p.value = p.done ? b : x;
  };
  let S, C;
  const E = (P) => {
    h(p.value) && (S = P, C = Nd({
      keyframes: [p.value, g(p.value)],
      velocity: wO(v, P, p.value),
      // TODO: This should be passing * 1000
      damping: r,
      stiffness: i,
      restDelta: u,
      restSpeed: d
    }));
  };
  return E(0), {
    calculatedDuration: null,
    next: (P) => {
      let M = !1;
      return !C && S === void 0 && (M = !0, w(P), E(P)), S !== void 0 && P >= S ? C.next(P - S) : (!M && w(P), p);
    }
  };
}
const xj = /* @__PURE__ */ Fc(0.42, 0, 1, 1), wj = /* @__PURE__ */ Fc(0, 0, 0.58, 1), TO = /* @__PURE__ */ Fc(0.42, 0, 0.58, 1), Sj = (e) => Array.isArray(e) && typeof e[0] != "number", ub = (e) => Array.isArray(e) && typeof e[0] == "number", Ex = {
  linear: zo,
  easeIn: xj,
  easeInOut: TO,
  easeOut: wj,
  circIn: nb,
  circInOut: nO,
  circOut: tO,
  backIn: tb,
  backInOut: JE,
  backOut: QE,
  anticipate: eO
}, Ox = (e) => {
  if (ub(e)) {
    vi(e.length === 4, "Cubic bezier arrays must contain four numerical values.");
    const [t, n, o, r] = e;
    return Fc(t, n, o, r);
  } else if (typeof e == "string")
    return vi(Ex[e] !== void 0, `Invalid easing type '${e}'`), Ex[e];
  return e;
}, cc = /* @__NO_SIDE_EFFECTS__ */ (e, t, n) => {
  const o = t - e;
  return o === 0 ? 1 : (n - e) / o;
};
function Tj(e, t, n) {
  const o = [], r = n || xO, i = e.length - 1;
  for (let s = 0; s < i; s++) {
    let l = r(e[s], e[s + 1]);
    if (t) {
      const c = Array.isArray(t) ? t[s] || zo : t;
      l = jc(c, l);
    }
    o.push(l);
  }
  return o;
}
function Cj(e, t, { clamp: n = !0, ease: o, mixer: r } = {}) {
  const i = e.length;
  if (vi(i === t.length, "Both input and output ranges must be the same length"), i === 1)
    return () => t[0];
  if (i === 2 && t[0] === t[1])
    return () => t[1];
  const s = e[0] === e[1];
  e[0] > e[i - 1] && (e = [...e].reverse(), t = [...t].reverse());
  const l = Tj(t, o, r), c = l.length, u = (d) => {
    if (s && d < e[0])
      return t[0];
    let f = 0;
    if (c > 1)
      for (; f < e.length - 2 && !(d < e[f + 1]); f++)
        ;
    const p = /* @__PURE__ */ cc(e[f], e[f + 1], d);
    return l[f](p);
  };
  return n ? (d) => u(qr(e[0], e[i - 1], d)) : u;
}
function Ej(e, t) {
  const n = e[e.length - 1];
  for (let o = 1; o <= t; o++) {
    const r = /* @__PURE__ */ cc(0, t, o);
    e.push(Jt(n, 1, r));
  }
}
function Oj(e) {
  const t = [0];
  return Ej(t, e.length - 1), t;
}
function Pj(e, t) {
  return e.map((n) => n * t);
}
function Rj(e, t) {
  return e.map(() => t || TO).splice(0, e.length - 1);
}
function kl({ duration: e = 300, keyframes: t, times: n, ease: o = "easeInOut" }) {
  const r = Sj(o) ? o.map(Ox) : Ox(o), i = {
    done: !1,
    value: t[0]
  }, s = Pj(
    // Only use the provided offsets if they're the correct length
    // TODO Maybe we should warn here if there's a length mismatch
    n && n.length === t.length ? n : Oj(t),
    e
  ), l = Cj(s, t, {
    ease: Array.isArray(r) ? r : Rj(t, r)
  });
  return {
    calculatedDuration: e,
    next: (c) => (i.value = l(c), i.done = c >= e, i)
  };
}
const Ij = (e) => {
  const t = ({ timestamp: n }) => e(n);
  return {
    start: () => Vt.update(t, !0),
    stop: () => bi(t),
    /**
     * If we're processing this frame we can use the
     * framelocked timestamp to keep things in sync.
     */
    now: () => kn.isProcessing ? kn.timestamp : Cr.now()
  };
}, kj = {
  decay: Cx,
  inertia: Cx,
  tween: kl,
  keyframes: kl,
  spring: Nd
}, $j = (e) => e / 100;
class db extends bO {
  constructor(t) {
    super(t), this.holdTime = null, this.cancelTime = null, this.currentTime = 0, this.playbackSpeed = 1, this.pendingPlayState = "running", this.startTime = null, this.state = "idle", this.stop = () => {
      if (this.resolver.cancel(), this.isStopped = !0, this.state === "idle")
        return;
      this.teardown();
      const { onStop: c } = this.options;
      c && c();
    };
    const { name: n, motionValue: o, element: r, keyframes: i } = this.options, s = (r == null ? void 0 : r.KeyframeResolver) || ib, l = (c, u) => this.onKeyframesResolved(c, u);
    this.resolver = new s(i, l, n, o, r), this.resolver.scheduleResolve();
  }
  flatten() {
    super.flatten(), this._resolved && Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));
  }
  initPlayback(t) {
    const { type: n = "keyframes", repeat: o = 0, repeatDelay: r = 0, repeatType: i, velocity: s = 0 } = this.options, l = sb(n) ? n : kj[n] || kl;
    let c, u;
    process.env.NODE_ENV !== "production" && l !== kl && vi(t.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${t}`), l !== kl && typeof t[0] != "number" && (c = jc($j, xO(t[0], t[1])), t = [0, 100]);
    const d = l({ ...this.options, keyframes: t });
    i === "mirror" && (u = l({
      ...this.options,
      keyframes: [...t].reverse(),
      velocity: -s
    })), d.calculatedDuration === null && (d.calculatedDuration = lb(d));
    const { calculatedDuration: f } = d, p = f + r, h = p * (o + 1) - r;
    return {
      generator: d,
      mirroredGenerator: u,
      mapPercentToKeyframes: c,
      calculatedDuration: f,
      resolvedDuration: p,
      totalDuration: h
    };
  }
  onPostResolved() {
    const { autoplay: t = !0 } = this.options;
    this.play(), this.pendingPlayState === "paused" || !t ? this.pause() : this.state = this.pendingPlayState;
  }
  tick(t, n = !1) {
    const { resolved: o } = this;
    if (!o) {
      const { keyframes: P } = this.options;
      return { done: !0, value: P[P.length - 1] };
    }
    const { finalKeyframe: r, generator: i, mirroredGenerator: s, mapPercentToKeyframes: l, keyframes: c, calculatedDuration: u, totalDuration: d, resolvedDuration: f } = o;
    if (this.startTime === null)
      return i.next(0);
    const { delay: p, repeat: h, repeatType: g, repeatDelay: m, onUpdate: y } = this.options;
    this.speed > 0 ? this.startTime = Math.min(this.startTime, t) : this.speed < 0 && (this.startTime = Math.min(t - d / this.speed, this.startTime)), n ? this.currentTime = t : this.holdTime !== null ? this.currentTime = this.holdTime : this.currentTime = Math.round(t - this.startTime) * this.speed;
    const b = this.currentTime - p * (this.speed >= 0 ? 1 : -1), T = this.speed >= 0 ? b < 0 : b > d;
    this.currentTime = Math.max(b, 0), this.state === "finished" && this.holdTime === null && (this.currentTime = d);
    let v = this.currentTime, w = i;
    if (h) {
      const P = Math.min(this.currentTime, d) / f;
      let M = Math.floor(P), x = P % 1;
      !x && P >= 1 && (x = 1), x === 1 && M--, M = Math.min(M, h + 1), !!(M % 2) && (g === "reverse" ? (x = 1 - x, m && (x -= m / f)) : g === "mirror" && (w = s)), v = qr(0, 1, x) * f;
    }
    const S = T ? { done: !1, value: c[0] } : w.next(v);
    l && (S.value = l(S.value));
    let { done: C } = S;
    !T && u !== null && (C = this.speed >= 0 ? this.currentTime >= d : this.currentTime <= 0);
    const E = this.holdTime === null && (this.state === "finished" || this.state === "running" && C);
    return E && r !== void 0 && (S.value = Ff(c, this.options, r)), y && y(S.value), E && this.finish(), S;
  }
  get duration() {
    const { resolved: t } = this;
    return t ? /* @__PURE__ */ Er(t.calculatedDuration) : 0;
  }
  get time() {
    return /* @__PURE__ */ Er(this.currentTime);
  }
  set time(t) {
    t = /* @__PURE__ */ nr(t), this.currentTime = t, this.holdTime !== null || this.speed === 0 ? this.holdTime = t : this.driver && (this.startTime = this.driver.now() - t / this.speed);
  }
  get speed() {
    return this.playbackSpeed;
  }
  set speed(t) {
    const n = this.playbackSpeed !== t;
    this.playbackSpeed = t, n && (this.time = /* @__PURE__ */ Er(this.currentTime));
  }
  play() {
    if (this.resolver.isScheduled || this.resolver.resume(), !this._resolved) {
      this.pendingPlayState = "running";
      return;
    }
    if (this.isStopped)
      return;
    const { driver: t = Ij, onPlay: n, startTime: o } = this.options;
    this.driver || (this.driver = t((i) => this.tick(i))), n && n();
    const r = this.driver.now();
    this.holdTime !== null ? this.startTime = r - this.holdTime : this.startTime ? this.state === "finished" && (this.startTime = r) : this.startTime = o ?? this.calcStartTime(), this.state === "finished" && this.updateFinishedPromise(), this.cancelTime = this.startTime, this.holdTime = null, this.state = "running", this.driver.start();
  }
  pause() {
    if (!this._resolved) {
      this.pendingPlayState = "paused";
      return;
    }
    this.state = "paused", this.holdTime = this.currentTime ?? 0;
  }
  complete() {
    this.state !== "running" && this.play(), this.pendingPlayState = this.state = "finished", this.holdTime = null;
  }
  finish() {
    this.teardown(), this.state = "finished";
    const { onComplete: t } = this.options;
    t && t();
  }
  cancel() {
    this.cancelTime !== null && this.tick(this.cancelTime), this.teardown(), this.updateFinishedPromise();
  }
  teardown() {
    this.state = "idle", this.stopDriver(), this.resolveFinishedPromise(), this.updateFinishedPromise(), this.startTime = this.cancelTime = null, this.resolver.cancel();
  }
  stopDriver() {
    this.driver && (this.driver.stop(), this.driver = void 0);
  }
  sample(t) {
    return this.startTime = 0, this.tick(t, !0);
  }
  get finished() {
    return this.currentFinishedPromise;
  }
}
const Nj = /* @__PURE__ */ new Set([
  "opacity",
  "clipPath",
  "filter",
  "transform"
  // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved
  // or until we implement support for linear() easing.
  // "background-color"
]), Mj = /* @__PURE__ */ cb(() => Object.hasOwnProperty.call(Element.prototype, "animate")), fl = ([e, t, n, o]) => `cubic-bezier(${e}, ${t}, ${n}, ${o})`, Hm = {
  linear: "linear",
  ease: "ease",
  easeIn: "ease-in",
  easeOut: "ease-out",
  easeInOut: "ease-in-out",
  circIn: /* @__PURE__ */ fl([0, 0.65, 0.55, 1]),
  circOut: /* @__PURE__ */ fl([0.55, 0, 1, 0.45]),
  backIn: /* @__PURE__ */ fl([0.31, 0.01, 0.66, -0.59]),
  backOut: /* @__PURE__ */ fl([0.33, 1.53, 0.69, 0.99])
};
function CO(e, t) {
  if (e)
    return typeof e == "function" && lc() ? SO(e, t) : ub(e) ? fl(e) : Array.isArray(e) ? e.map((n) => CO(n, t) || Hm.easeOut) : Hm[e];
}
function Aj(e, t, n, { delay: o = 0, duration: r = 300, repeat: i = 0, repeatType: s = "loop", ease: l = "easeInOut", times: c } = {}, u = void 0) {
  const d = {
    [t]: n
  };
  c && (d.offset = c);
  const f = CO(l, r);
  return Array.isArray(f) && (d.easing = f), e.animate(d, {
    delay: o,
    duration: r,
    easing: Array.isArray(f) ? "linear" : f,
    fill: "both",
    iterations: i + 1,
    direction: s === "reverse" ? "alternate" : "normal",
    pseudoElement: u
  });
}
function Px(e, t) {
  e.timeline = t, e.onfinish = null;
}
function EO(e) {
  return !!(typeof e == "function" && lc() || !e || typeof e == "string" && (e in Hm || lc()) || ub(e) || Array.isArray(e) && e.every(EO));
}
const Md = 10, _j = 2e4;
function Dj(e) {
  return sb(e.type) || e.type === "spring" || !EO(e.ease);
}
function Lj(e, t) {
  const n = new db({
    ...t,
    keyframes: e,
    repeat: 0,
    delay: 0,
    isGenerator: !0
  });
  let o = { done: !1, value: e[0] };
  const r = [];
  let i = 0;
  for (; !o.done && i < _j; )
    o = n.sample(i), r.push(o.value), i += Md;
  return {
    times: void 0,
    keyframes: r,
    duration: i - Md,
    ease: "linear"
  };
}
const OO = {
  anticipate: eO,
  backInOut: JE,
  circInOut: nO
};
function Bj(e) {
  return e in OO;
}
class Rx extends bO {
  constructor(t) {
    super(t);
    const { name: n, motionValue: o, element: r, keyframes: i } = this.options;
    this.resolver = new yO(i, (s, l) => this.onKeyframesResolved(s, l), n, o, r), this.resolver.scheduleResolve();
  }
  initPlayback(t, n) {
    let { duration: o = 300, times: r, ease: i, type: s, motionValue: l, name: c, startTime: u } = this.options;
    if (!l.owner || !l.owner.current)
      return !1;
    if (typeof i == "string" && lc() && Bj(i) && (i = OO[i]), Dj(this.options)) {
      const { onComplete: f, onUpdate: p, motionValue: h, element: g, ...m } = this.options, y = Lj(t, m);
      t = y.keyframes, t.length === 1 && (t[1] = t[0]), o = y.duration, r = y.times, i = y.ease, s = "keyframes";
    }
    const d = Aj(l.owner.current, c, t, { ...this.options, duration: o, times: r, ease: i });
    return d.startTime = u ?? this.calcStartTime(), this.pendingTimeline ? (Px(d, this.pendingTimeline), this.pendingTimeline = void 0) : d.onfinish = () => {
      const { onComplete: f } = this.options;
      l.set(Ff(t, this.options, n)), f && f(), this.cancel(), this.resolveFinishedPromise();
    }, {
      animation: d,
      duration: o,
      times: r,
      type: s,
      ease: i,
      keyframes: t
    };
  }
  get duration() {
    const { resolved: t } = this;
    if (!t)
      return 0;
    const { duration: n } = t;
    return /* @__PURE__ */ Er(n);
  }
  get time() {
    const { resolved: t } = this;
    if (!t)
      return 0;
    const { animation: n } = t;
    return /* @__PURE__ */ Er(n.currentTime || 0);
  }
  set time(t) {
    const { resolved: n } = this;
    if (!n)
      return;
    const { animation: o } = n;
    o.currentTime = /* @__PURE__ */ nr(t);
  }
  get speed() {
    const { resolved: t } = this;
    if (!t)
      return 1;
    const { animation: n } = t;
    return n.playbackRate;
  }
  get finished() {
    return this.resolved.animation.finished;
  }
  set speed(t) {
    const { resolved: n } = this;
    if (!n)
      return;
    const { animation: o } = n;
    o.playbackRate = t;
  }
  get state() {
    const { resolved: t } = this;
    if (!t)
      return "idle";
    const { animation: n } = t;
    return n.playState;
  }
  get startTime() {
    const { resolved: t } = this;
    if (!t)
      return null;
    const { animation: n } = t;
    return n.startTime;
  }
  /**
   * Replace the default DocumentTimeline with another AnimationTimeline.
   * Currently used for scroll animations.
   */
  attachTimeline(t) {
    if (!this._resolved)
      this.pendingTimeline = t;
    else {
      const { resolved: n } = this;
      if (!n)
        return zo;
      const { animation: o } = n;
      Px(o, t);
    }
    return zo;
  }
  play() {
    if (this.isStopped)
      return;
    const { resolved: t } = this;
    if (!t)
      return;
    const { animation: n } = t;
    n.playState === "finished" && this.updateFinishedPromise(), n.play();
  }
  pause() {
    const { resolved: t } = this;
    if (!t)
      return;
    const { animation: n } = t;
    n.pause();
  }
  stop() {
    if (this.resolver.cancel(), this.isStopped = !0, this.state === "idle")
      return;
    this.resolveFinishedPromise(), this.updateFinishedPromise();
    const { resolved: t } = this;
    if (!t)
      return;
    const { animation: n, keyframes: o, duration: r, type: i, ease: s, times: l } = t;
    if (n.playState === "idle" || n.playState === "finished")
      return;
    if (this.time) {
      const { motionValue: u, onUpdate: d, onComplete: f, element: p, ...h } = this.options, g = new db({
        ...h,
        keyframes: o,
        duration: r,
        type: i,
        ease: s,
        times: l,
        isGenerator: !0
      }), m = /* @__PURE__ */ nr(this.time);
      u.setWithVelocity(g.sample(m - Md).value, g.sample(m).value, Md);
    }
    const { onStop: c } = this.options;
    c && c(), this.cancel();
  }
  complete() {
    const { resolved: t } = this;
    t && t.animation.finish();
  }
  cancel() {
    const { resolved: t } = this;
    t && t.animation.cancel();
  }
  static supports(t) {
    const { motionValue: n, name: o, repeatDelay: r, repeatType: i, damping: s, type: l } = t;
    if (!n || !n.owner || !(n.owner.current instanceof HTMLElement))
      return !1;
    const { onUpdate: c, transformTemplate: u } = n.owner.getProps();
    return Mj() && o && Nj.has(o) && (o !== "transform" || !u) && /**
     * If we're outputting values to onUpdate then we can't use WAAPI as there's
     * no way to read the value from WAAPI every frame.
     */
    !c && !r && i !== "mirror" && s !== 0 && l !== "inertia";
  }
}
const Vj = {
  type: "spring",
  stiffness: 500,
  damping: 25,
  restSpeed: 10
}, Fj = (e) => ({
  type: "spring",
  stiffness: 550,
  damping: e === 0 ? 2 * Math.sqrt(550) : 30,
  restSpeed: 10
}), jj = {
  type: "keyframes",
  duration: 0.8
}, zj = {
  type: "keyframes",
  ease: [0.25, 0.1, 0.35, 1],
  duration: 0.3
}, Hj = (e, { keyframes: t }) => t.length > 2 ? jj : bs.has(e) ? e.startsWith("scale") ? Fj(t[1]) : Vj : zj;
function Wj({ when: e, delay: t, delayChildren: n, staggerChildren: o, staggerDirection: r, repeat: i, repeatType: s, repeatDelay: l, from: c, elapsed: u, ...d }) {
  return !!Object.keys(d).length;
}
function fb(e, t) {
  return (e == null ? void 0 : e[t]) ?? (e == null ? void 0 : e.default) ?? e;
}
const Uj = /* @__PURE__ */ cb(() => window.ScrollTimeline !== void 0);
class qj {
  constructor(t) {
    this.stop = () => this.runAll("stop"), this.animations = t.filter(Boolean);
  }
  get finished() {
    return Promise.all(this.animations.map((t) => t.finished));
  }
  /**
   * TODO: Filter out cancelled or stopped animations before returning
   */
  getAll(t) {
    return this.animations[0][t];
  }
  setAll(t, n) {
    for (let o = 0; o < this.animations.length; o++)
      this.animations[o][t] = n;
  }
  attachTimeline(t, n) {
    const o = this.animations.map((r) => {
      if (Uj() && r.attachTimeline)
        return r.attachTimeline(t);
      if (typeof n == "function")
        return n(r);
    });
    return () => {
      o.forEach((r, i) => {
        r && r(), this.animations[i].stop();
      });
    };
  }
  get time() {
    return this.getAll("time");
  }
  set time(t) {
    this.setAll("time", t);
  }
  get speed() {
    return this.getAll("speed");
  }
  set speed(t) {
    this.setAll("speed", t);
  }
  get startTime() {
    return this.getAll("startTime");
  }
  get duration() {
    let t = 0;
    for (let n = 0; n < this.animations.length; n++)
      t = Math.max(t, this.animations[n].duration);
    return t;
  }
  runAll(t) {
    this.animations.forEach((n) => n[t]());
  }
  flatten() {
    this.runAll("flatten");
  }
  play() {
    this.runAll("play");
  }
  pause() {
    this.runAll("pause");
  }
  cancel() {
    this.runAll("cancel");
  }
  complete() {
    this.runAll("complete");
  }
}
class Kj extends qj {
  then(t, n) {
    return this.finished.finally(t).then(() => {
    });
  }
}
const pb = (e, t, n, o = {}, r, i) => (s) => {
  const l = fb(o, e) || {}, c = l.delay || o.delay || 0;
  let { elapsed: u = 0 } = o;
  u = u - /* @__PURE__ */ nr(c);
  let d = {
    keyframes: Array.isArray(n) ? n : [null, n],
    ease: "easeOut",
    velocity: t.getVelocity(),
    ...l,
    delay: -u,
    onUpdate: (p) => {
      t.set(p), l.onUpdate && l.onUpdate(p);
    },
    onComplete: () => {
      s(), l.onComplete && l.onComplete();
    },
    name: e,
    motionValue: t,
    element: i ? void 0 : r
  };
  Wj(l) || (d = {
    ...d,
    ...Hj(e, d)
  }), d.duration && (d.duration = /* @__PURE__ */ nr(d.duration)), d.repeatDelay && (d.repeatDelay = /* @__PURE__ */ nr(d.repeatDelay)), d.from !== void 0 && (d.keyframes[0] = d.from);
  let f = !1;
  if ((d.type === !1 || d.duration === 0 && !d.repeatDelay) && (d.duration = 0, d.delay === 0 && (f = !0)), d.allowFlatten = !l.type && !l.ease, f && !i && t.get() !== void 0) {
    const p = Ff(d.keyframes, l);
    if (p !== void 0)
      return Vt.update(() => {
        d.onUpdate(p), d.onComplete();
      }), new Kj([]);
  }
  return !i && Rx.supports(d) ? new Rx(d) : new db(d);
};
function Gj({ protectedKeys: e, needsAnimating: t }, n) {
  const o = e.hasOwnProperty(n) && t[n] !== !0;
  return t[n] = !1, o;
}
function PO(e, t, { delay: n = 0, transitionOverride: o, type: r } = {}) {
  let { transition: i = e.getDefaultTransition(), transitionEnd: s, ...l } = t;
  o && (i = o);
  const c = [], u = r && e.animationState && e.animationState.getState()[r];
  for (const d in l) {
    const f = e.getValue(d, e.latestValues[d] ?? null), p = l[d];
    if (p === void 0 || u && Gj(u, d))
      continue;
    const h = {
      delay: n,
      ...fb(i || {}, d)
    };
    let g = !1;
    if (window.MotionHandoffAnimation) {
      const y = GE(e);
      if (y) {
        const b = window.MotionHandoffAnimation(y, d, Vt);
        b !== null && (h.startTime = b, g = !0);
      }
    }
    Mm(e, d), f.start(pb(d, f, p, e.shouldReduceMotion && qE.has(d) ? { type: !1 } : h, e, g));
    const m = f.animation;
    m && c.push(m);
  }
  return s && Promise.all(c).then(() => {
    Vt.update(() => {
      s && gF(e, s);
    });
  }), c;
}
function Wm(e, t, n = {}) {
  var c;
  const o = ic(e, t, n.type === "exit" ? (c = e.presenceContext) == null ? void 0 : c.custom : void 0);
  let { transition: r = e.getDefaultTransition() || {} } = o || {};
  n.transitionOverride && (r = n.transitionOverride);
  const i = o ? () => Promise.all(PO(e, o, n)) : () => Promise.resolve(), s = e.variantChildren && e.variantChildren.size ? (u = 0) => {
    const { delayChildren: d = 0, staggerChildren: f, staggerDirection: p } = r;
    return Yj(e, t, d + u, f, p, n);
  } : () => Promise.resolve(), { when: l } = r;
  if (l) {
    const [u, d] = l === "beforeChildren" ? [i, s] : [s, i];
    return u().then(() => d());
  } else
    return Promise.all([i(), s(n.delay)]);
}
function Yj(e, t, n = 0, o = 0, r = 1, i) {
  const s = [], l = (e.variantChildren.size - 1) * o, c = r === 1 ? (u = 0) => u * o : (u = 0) => l - u * o;
  return Array.from(e.variantChildren).sort(Xj).forEach((u, d) => {
    u.notify("AnimationStart", t), s.push(Wm(u, t, {
      ...i,
      delay: n + c(d)
    }).then(() => u.notify("AnimationComplete", t)));
  }), Promise.all(s);
}
function Xj(e, t) {
  return e.sortNodePosition(t);
}
function Zj(e, t, n = {}) {
  e.notify("AnimationStart", t);
  let o;
  if (Array.isArray(t)) {
    const r = t.map((i) => Wm(e, i, n));
    o = Promise.all(r);
  } else if (typeof t == "string")
    o = Wm(e, t, n);
  else {
    const r = typeof t == "function" ? ic(e, t, n.custom) : t;
    o = Promise.all(PO(e, r, n));
  }
  return o.then(() => {
    e.notify("AnimationComplete", t);
  });
}
function RO(e, t) {
  if (!Array.isArray(t))
    return !1;
  const n = t.length;
  if (n !== e.length)
    return !1;
  for (let o = 0; o < n; o++)
    if (t[o] !== e[o])
      return !1;
  return !0;
}
const Qj = Vy.length;
function IO(e) {
  if (!e)
    return;
  if (!e.isControllingVariants) {
    const n = e.parent ? IO(e.parent) || {} : {};
    return e.props.initial !== void 0 && (n.initial = e.props.initial), n;
  }
  const t = {};
  for (let n = 0; n < Qj; n++) {
    const o = Vy[n], r = e.props[o];
    (nc(r) || r === !1) && (t[o] = r);
  }
  return t;
}
const Jj = [...By].reverse(), ez = By.length;
function tz(e) {
  return (t) => Promise.all(t.map(({ animation: n, options: o }) => Zj(e, n, o)));
}
function nz(e) {
  let t = tz(e), n = Ix(), o = !0;
  const r = (c) => (u, d) => {
    var p;
    const f = ic(e, d, c === "exit" ? (p = e.presenceContext) == null ? void 0 : p.custom : void 0);
    if (f) {
      const { transition: h, transitionEnd: g, ...m } = f;
      u = { ...u, ...m, ...g };
    }
    return u;
  };
  function i(c) {
    t = c(e);
  }
  function s(c) {
    const { props: u } = e, d = IO(e.parent) || {}, f = [], p = /* @__PURE__ */ new Set();
    let h = {}, g = 1 / 0;
    for (let y = 0; y < ez; y++) {
      const b = Jj[y], T = n[b], v = u[b] !== void 0 ? u[b] : d[b], w = nc(v), S = b === c ? T.isActive : null;
      S === !1 && (g = y);
      let C = v === d[b] && v !== u[b] && w;
      if (C && o && e.manuallyAnimateOnMount && (C = !1), T.protectedKeys = { ...h }, // If it isn't active and hasn't *just* been set as inactive
      !T.isActive && S === null || // If we didn't and don't have any defined prop for this animation type
      !v && !T.prevProp || // Or if the prop doesn't define an animation
      Bf(v) || typeof v == "boolean")
        continue;
      const E = oz(T.prevProp, v);
      let P = E || // If we're making this variant active, we want to always make it active
      b === c && T.isActive && !C && w || // If we removed a higher-priority variant (i is in reverse order)
      y > g && w, M = !1;
      const x = Array.isArray(v) ? v : [v];
      let I = x.reduce(r(b), {});
      S === !1 && (I = {});
      const { prevResolvedValues: k = {} } = T, _ = {
        ...k,
        ...I
      }, R = (L) => {
        P = !0, p.has(L) && (M = !0, p.delete(L)), T.needsAnimating[L] = !0;
        const V = e.getValue(L);
        V && (V.liveStyle = !1);
      };
      for (const L in _) {
        const V = I[L], D = k[L];
        if (h.hasOwnProperty(L))
          continue;
        let B = !1;
        Nm(V) && Nm(D) ? B = !RO(V, D) : B = V !== D, B ? V != null ? R(L) : p.add(L) : V !== void 0 && p.has(L) ? R(L) : T.protectedKeys[L] = !0;
      }
      T.prevProp = v, T.prevResolvedValues = I, T.isActive && (h = { ...h, ...I }), o && e.blockInitialAnimation && (P = !1), P && (!(C && E) || M) && f.push(...x.map((L) => ({
        animation: L,
        options: { type: b }
      })));
    }
    if (p.size) {
      const y = {};
      if (typeof u.initial != "boolean") {
        const b = ic(e, Array.isArray(u.initial) ? u.initial[0] : u.initial);
        b && b.transition && (y.transition = b.transition);
      }
      p.forEach((b) => {
        const T = e.getBaseTarget(b), v = e.getValue(b);
        v && (v.liveStyle = !0), y[b] = T ?? null;
      }), f.push({ animation: y });
    }
    let m = !!f.length;
    return o && (u.initial === !1 || u.initial === u.animate) && !e.manuallyAnimateOnMount && (m = !1), o = !1, m ? t(f) : Promise.resolve();
  }
  function l(c, u) {
    var f;
    if (n[c].isActive === u)
      return Promise.resolve();
    (f = e.variantChildren) == null || f.forEach((p) => {
      var h;
      return (h = p.animationState) == null ? void 0 : h.setActive(c, u);
    }), n[c].isActive = u;
    const d = s(c);
    for (const p in n)
      n[p].protectedKeys = {};
    return d;
  }
  return {
    animateChanges: s,
    setActive: l,
    setAnimateFunction: i,
    getState: () => n,
    reset: () => {
      n = Ix(), o = !0;
    }
  };
}
function oz(e, t) {
  return typeof t == "string" ? t !== e : Array.isArray(t) ? !RO(t, e) : !1;
}
function Hi(e = !1) {
  return {
    isActive: e,
    protectedKeys: {},
    needsAnimating: {},
    prevResolvedValues: {}
  };
}
function Ix() {
  return {
    animate: Hi(!0),
    whileInView: Hi(),
    whileHover: Hi(),
    whileTap: Hi(),
    whileDrag: Hi(),
    whileFocus: Hi(),
    exit: Hi()
  };
}
class Ni {
  constructor(t) {
    this.isMounted = !1, this.node = t;
  }
  update() {
  }
}
class rz extends Ni {
  /**
   * We dynamically generate the AnimationState manager as it contains a reference
   * to the underlying animation library. We only want to load that if we load this,
   * so people can optionally code split it out using the `m` component.
   */
  constructor(t) {
    super(t), t.animationState || (t.animationState = nz(t));
  }
  updateAnimationControlsSubscription() {
    const { animate: t } = this.node.getProps();
    Bf(t) && (this.unmountControls = t.subscribe(this.node));
  }
  /**
   * Subscribe any provided AnimationControls to the component's VisualElement
   */
  mount() {
    this.updateAnimationControlsSubscription();
  }
  update() {
    const { animate: t } = this.node.getProps(), { animate: n } = this.node.prevProps || {};
    t !== n && this.updateAnimationControlsSubscription();
  }
  unmount() {
    var t;
    this.node.animationState.reset(), (t = this.unmountControls) == null || t.call(this);
  }
}
let iz = 0;
class sz extends Ni {
  constructor() {
    super(...arguments), this.id = iz++;
  }
  update() {
    if (!this.node.presenceContext)
      return;
    const { isPresent: t, onExitComplete: n } = this.node.presenceContext, { isPresent: o } = this.node.prevPresenceContext || {};
    if (!this.node.animationState || t === o)
      return;
    const r = this.node.animationState.setActive("exit", !t);
    n && !t && r.then(() => {
      n(this.id);
    });
  }
  mount() {
    const { register: t, onExitComplete: n } = this.node.presenceContext || {};
    n && n(this.id), t && (this.unmount = t(this.id));
  }
  unmount() {
  }
}
const kO = {
  animation: {
    Feature: rz
  },
  exit: {
    Feature: sz
  }
};
function uc(e, t, n, o = { passive: !0 }) {
  return e.addEventListener(t, n, o), () => e.removeEventListener(t, n);
}
const hb = (e) => e.pointerType === "mouse" ? typeof e.button != "number" || e.button <= 0 : e.isPrimary !== !1;
function zc(e) {
  return {
    point: {
      x: e.pageX,
      y: e.pageY
    }
  };
}
const az = (e) => (t) => hb(t) && e(t, zc(t));
function $l(e, t, n, o) {
  return uc(e, t, az(n), o);
}
function $O({ top: e, left: t, right: n, bottom: o }) {
  return {
    x: { min: t, max: n },
    y: { min: e, max: o }
  };
}
function lz({ x: e, y: t }) {
  return { top: t.min, right: e.max, bottom: t.max, left: e.min };
}
function cz(e, t) {
  if (!t)
    return e;
  const n = t({ x: e.left, y: e.top }), o = t({ x: e.right, y: e.bottom });
  return {
    top: n.y,
    left: n.x,
    bottom: o.y,
    right: o.x
  };
}
const NO = 1e-4, uz = 1 - NO, dz = 1 + NO, MO = 0.01, fz = 0 - MO, pz = 0 + MO;
function Zn(e) {
  return e.max - e.min;
}
function hz(e, t, n) {
  return Math.abs(e - t) <= n;
}
function kx(e, t, n, o = 0.5) {
  e.origin = o, e.originPoint = Jt(t.min, t.max, e.origin), e.scale = Zn(n) / Zn(t), e.translate = Jt(n.min, n.max, e.origin) - e.originPoint, (e.scale >= uz && e.scale <= dz || isNaN(e.scale)) && (e.scale = 1), (e.translate >= fz && e.translate <= pz || isNaN(e.translate)) && (e.translate = 0);
}
function Nl(e, t, n, o) {
  kx(e.x, t.x, n.x, o ? o.originX : void 0), kx(e.y, t.y, n.y, o ? o.originY : void 0);
}
function $x(e, t, n) {
  e.min = n.min + t.min, e.max = e.min + Zn(t);
}
function mz(e, t, n) {
  $x(e.x, t.x, n.x), $x(e.y, t.y, n.y);
}
function Nx(e, t, n) {
  e.min = t.min - n.min, e.max = e.min + Zn(t);
}
function Ml(e, t, n) {
  Nx(e.x, t.x, n.x), Nx(e.y, t.y, n.y);
}
const Mx = () => ({
  translate: 0,
  scale: 1,
  origin: 0,
  originPoint: 0
}), Ws = () => ({
  x: Mx(),
  y: Mx()
}), Ax = () => ({ min: 0, max: 0 }), cn = () => ({
  x: Ax(),
  y: Ax()
});
function Mo(e) {
  return [e("x"), e("y")];
}
function fh(e) {
  return e === void 0 || e === 1;
}
function Um({ scale: e, scaleX: t, scaleY: n }) {
  return !fh(e) || !fh(t) || !fh(n);
}
function Ki(e) {
  return Um(e) || AO(e) || e.z || e.rotate || e.rotateX || e.rotateY || e.skewX || e.skewY;
}
function AO(e) {
  return _x(e.x) || _x(e.y);
}
function _x(e) {
  return e && e !== "0%";
}
function Ad(e, t, n) {
  const o = e - n, r = t * o;
  return n + r;
}
function Dx(e, t, n, o, r) {
  return r !== void 0 && (e = Ad(e, r, o)), Ad(e, n, o) + t;
}
function qm(e, t = 0, n = 1, o, r) {
  e.min = Dx(e.min, t, n, o, r), e.max = Dx(e.max, t, n, o, r);
}
function _O(e, { x: t, y: n }) {
  qm(e.x, t.translate, t.scale, t.originPoint), qm(e.y, n.translate, n.scale, n.originPoint);
}
const Lx = 0.999999999999, Bx = 1.0000000000001;
function gz(e, t, n, o = !1) {
  const r = n.length;
  if (!r)
    return;
  t.x = t.y = 1;
  let i, s;
  for (let l = 0; l < r; l++) {
    i = n[l], s = i.projectionDelta;
    const { visualElement: c } = i.options;
    c && c.props.style && c.props.style.display === "contents" || (o && i.options.layoutScroll && i.scroll && i !== i.root && qs(e, {
      x: -i.scroll.offset.x,
      y: -i.scroll.offset.y
    }), s && (t.x *= s.x.scale, t.y *= s.y.scale, _O(e, s)), o && Ki(i.latestValues) && qs(e, i.latestValues));
  }
  t.x < Bx && t.x > Lx && (t.x = 1), t.y < Bx && t.y > Lx && (t.y = 1);
}
function Us(e, t) {
  e.min = e.min + t, e.max = e.max + t;
}
function Vx(e, t, n, o, r = 0.5) {
  const i = Jt(e.min, e.max, r);
  qm(e, t, n, i, o);
}
function qs(e, t) {
  Vx(e.x, t.x, t.scaleX, t.scale, t.originX), Vx(e.y, t.y, t.scaleY, t.scale, t.originY);
}
function DO(e, t) {
  return $O(cz(e.getBoundingClientRect(), t));
}
function yz(e, t, n) {
  const o = DO(e, n), { scroll: r } = t;
  return r && (Us(o.x, r.offset.x), Us(o.y, r.offset.y)), o;
}
const LO = ({ current: e }) => e ? e.ownerDocument.defaultView : null, Fx = (e, t) => Math.abs(e - t);
function bz(e, t) {
  const n = Fx(e.x, t.x), o = Fx(e.y, t.y);
  return Math.sqrt(n ** 2 + o ** 2);
}
class BO {
  constructor(t, n, { transformPagePoint: o, contextWindow: r, dragSnapToOrigin: i = !1 } = {}) {
    if (this.startEvent = null, this.lastMoveEvent = null, this.lastMoveEventInfo = null, this.handlers = {}, this.contextWindow = window, this.updatePoint = () => {
      if (!(this.lastMoveEvent && this.lastMoveEventInfo))
        return;
      const f = hh(this.lastMoveEventInfo, this.history), p = this.startEvent !== null, h = bz(f.offset, { x: 0, y: 0 }) >= 3;
      if (!p && !h)
        return;
      const { point: g } = f, { timestamp: m } = kn;
      this.history.push({ ...g, timestamp: m });
      const { onStart: y, onMove: b } = this.handlers;
      p || (y && y(this.lastMoveEvent, f), this.startEvent = this.lastMoveEvent), b && b(this.lastMoveEvent, f);
    }, this.handlePointerMove = (f, p) => {
      this.lastMoveEvent = f, this.lastMoveEventInfo = ph(p, this.transformPagePoint), Vt.update(this.updatePoint, !0);
    }, this.handlePointerUp = (f, p) => {
      this.end();
      const { onEnd: h, onSessionEnd: g, resumeAnimation: m } = this.handlers;
      if (this.dragSnapToOrigin && m && m(), !(this.lastMoveEvent && this.lastMoveEventInfo))
        return;
      const y = hh(f.type === "pointercancel" ? this.lastMoveEventInfo : ph(p, this.transformPagePoint), this.history);
      this.startEvent && h && h(f, y), g && g(f, y);
    }, !hb(t))
      return;
    this.dragSnapToOrigin = i, this.handlers = n, this.transformPagePoint = o, this.contextWindow = r || window;
    const s = zc(t), l = ph(s, this.transformPagePoint), { point: c } = l, { timestamp: u } = kn;
    this.history = [{ ...c, timestamp: u }];
    const { onSessionStart: d } = n;
    d && d(t, hh(l, this.history)), this.removeListeners = jc($l(this.contextWindow, "pointermove", this.handlePointerMove), $l(this.contextWindow, "pointerup", this.handlePointerUp), $l(this.contextWindow, "pointercancel", this.handlePointerUp));
  }
  updateHandlers(t) {
    this.handlers = t;
  }
  end() {
    this.removeListeners && this.removeListeners(), bi(this.updatePoint);
  }
}
function ph(e, t) {
  return t ? { point: t(e.point) } : e;
}
function jx(e, t) {
  return { x: e.x - t.x, y: e.y - t.y };
}
function hh({ point: e }, t) {
  return {
    point: e,
    delta: jx(e, VO(t)),
    offset: jx(e, vz(t)),
    velocity: xz(t, 0.1)
  };
}
function vz(e) {
  return e[0];
}
function VO(e) {
  return e[e.length - 1];
}
function xz(e, t) {
  if (e.length < 2)
    return { x: 0, y: 0 };
  let n = e.length - 1, o = null;
  const r = VO(e);
  for (; n >= 0 && (o = e[n], !(r.timestamp - o.timestamp > /* @__PURE__ */ nr(t))); )
    n--;
  if (!o)
    return { x: 0, y: 0 };
  const i = /* @__PURE__ */ Er(r.timestamp - o.timestamp);
  if (i === 0)
    return { x: 0, y: 0 };
  const s = {
    x: (r.x - o.x) / i,
    y: (r.y - o.y) / i
  };
  return s.x === 1 / 0 && (s.x = 0), s.y === 1 / 0 && (s.y = 0), s;
}
function wz(e, { min: t, max: n }, o) {
  return t !== void 0 && e < t ? e = o ? Jt(t, e, o.min) : Math.max(e, t) : n !== void 0 && e > n && (e = o ? Jt(n, e, o.max) : Math.min(e, n)), e;
}
function zx(e, t, n) {
  return {
    min: t !== void 0 ? e.min + t : void 0,
    max: n !== void 0 ? e.max + n - (e.max - e.min) : void 0
  };
}
function Sz(e, { top: t, left: n, bottom: o, right: r }) {
  return {
    x: zx(e.x, n, r),
    y: zx(e.y, t, o)
  };
}
function Hx(e, t) {
  let n = t.min - e.min, o = t.max - e.max;
  return t.max - t.min < e.max - e.min && ([n, o] = [o, n]), { min: n, max: o };
}
function Tz(e, t) {
  return {
    x: Hx(e.x, t.x),
    y: Hx(e.y, t.y)
  };
}
function Cz(e, t) {
  let n = 0.5;
  const o = Zn(e), r = Zn(t);
  return r > o ? n = /* @__PURE__ */ cc(t.min, t.max - o, e.min) : o > r && (n = /* @__PURE__ */ cc(e.min, e.max - r, t.min)), qr(0, 1, n);
}
function Ez(e, t) {
  const n = {};
  return t.min !== void 0 && (n.min = t.min - e.min), t.max !== void 0 && (n.max = t.max - e.min), n;
}
const Km = 0.35;
function Oz(e = Km) {
  return e === !1 ? e = 0 : e === !0 && (e = Km), {
    x: Wx(e, "left", "right"),
    y: Wx(e, "top", "bottom")
  };
}
function Wx(e, t, n) {
  return {
    min: Ux(e, t),
    max: Ux(e, n)
  };
}
function Ux(e, t) {
  return typeof e == "number" ? e : e[t] || 0;
}
const Xo = {
  x: !1,
  y: !1
};
function FO() {
  return Xo.x || Xo.y;
}
function Pz(e) {
  return e === "x" || e === "y" ? Xo[e] ? null : (Xo[e] = !0, () => {
    Xo[e] = !1;
  }) : Xo.x || Xo.y ? null : (Xo.x = Xo.y = !0, () => {
    Xo.x = Xo.y = !1;
  });
}
const Rz = /* @__PURE__ */ new WeakMap();
class Iz {
  constructor(t) {
    this.openDragLock = null, this.isDragging = !1, this.currentDirection = null, this.originPoint = { x: 0, y: 0 }, this.constraints = !1, this.hasMutatedConstraints = !1, this.elastic = cn(), this.visualElement = t;
  }
  start(t, { snapToCursor: n = !1 } = {}) {
    const { presenceContext: o } = this.visualElement;
    if (o && o.isPresent === !1)
      return;
    const r = (d) => {
      const { dragSnapToOrigin: f } = this.getProps();
      f ? this.pauseAnimation() : this.stopAnimation(), n && this.snapToCursor(zc(d).point);
    }, i = (d, f) => {
      const { drag: p, dragPropagation: h, onDragStart: g } = this.getProps();
      if (p && !h && (this.openDragLock && this.openDragLock(), this.openDragLock = Pz(p), !this.openDragLock))
        return;
      this.isDragging = !0, this.currentDirection = null, this.resolveConstraints(), this.visualElement.projection && (this.visualElement.projection.isAnimationBlocked = !0, this.visualElement.projection.target = void 0), Mo((y) => {
        let b = this.getAxisMotionValue(y).get() || 0;
        if (Tr.test(b)) {
          const { projection: T } = this.visualElement;
          if (T && T.layout) {
            const v = T.layout.layoutBox[y];
            v && (b = Zn(v) * (parseFloat(b) / 100));
          }
        }
        this.originPoint[y] = b;
      }), g && Vt.postRender(() => g(d, f)), Mm(this.visualElement, "transform");
      const { animationState: m } = this.visualElement;
      m && m.setActive("whileDrag", !0);
    }, s = (d, f) => {
      const { dragPropagation: p, dragDirectionLock: h, onDirectionLock: g, onDrag: m } = this.getProps();
      if (!p && !this.openDragLock)
        return;
      const { offset: y } = f;
      if (h && this.currentDirection === null) {
        this.currentDirection = kz(y), this.currentDirection !== null && g && g(this.currentDirection);
        return;
      }
      this.updateAxis("x", f.point, y), this.updateAxis("y", f.point, y), this.visualElement.render(), m && m(d, f);
    }, l = (d, f) => this.stop(d, f), c = () => Mo((d) => {
      var f;
      return this.getAnimationState(d) === "paused" && ((f = this.getAxisMotionValue(d).animation) == null ? void 0 : f.play());
    }), { dragSnapToOrigin: u } = this.getProps();
    this.panSession = new BO(t, {
      onSessionStart: r,
      onStart: i,
      onMove: s,
      onSessionEnd: l,
      resumeAnimation: c
    }, {
      transformPagePoint: this.visualElement.getTransformPagePoint(),
      dragSnapToOrigin: u,
      contextWindow: LO(this.visualElement)
    });
  }
  stop(t, n) {
    const o = this.isDragging;
    if (this.cancel(), !o)
      return;
    const { velocity: r } = n;
    this.startAnimation(r);
    const { onDragEnd: i } = this.getProps();
    i && Vt.postRender(() => i(t, n));
  }
  cancel() {
    this.isDragging = !1;
    const { projection: t, animationState: n } = this.visualElement;
    t && (t.isAnimationBlocked = !1), this.panSession && this.panSession.end(), this.panSession = void 0;
    const { dragPropagation: o } = this.getProps();
    !o && this.openDragLock && (this.openDragLock(), this.openDragLock = null), n && n.setActive("whileDrag", !1);
  }
  updateAxis(t, n, o) {
    const { drag: r } = this.getProps();
    if (!o || !Eu(t, r, this.currentDirection))
      return;
    const i = this.getAxisMotionValue(t);
    let s = this.originPoint[t] + o[t];
    this.constraints && this.constraints[t] && (s = wz(s, this.constraints[t], this.elastic[t])), i.set(s);
  }
  resolveConstraints() {
    var i;
    const { dragConstraints: t, dragElastic: n } = this.getProps(), o = this.visualElement.projection && !this.visualElement.projection.layout ? this.visualElement.projection.measure(!1) : (i = this.visualElement.projection) == null ? void 0 : i.layout, r = this.constraints;
    t && zs(t) ? this.constraints || (this.constraints = this.resolveRefConstraints()) : t && o ? this.constraints = Sz(o.layoutBox, t) : this.constraints = !1, this.elastic = Oz(n), r !== this.constraints && o && this.constraints && !this.hasMutatedConstraints && Mo((s) => {
      this.constraints !== !1 && this.getAxisMotionValue(s) && (this.constraints[s] = Ez(o.layoutBox[s], this.constraints[s]));
    });
  }
  resolveRefConstraints() {
    const { dragConstraints: t, onMeasureDragConstraints: n } = this.getProps();
    if (!t || !zs(t))
      return !1;
    const o = t.current;
    vi(o !== null, "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");
    const { projection: r } = this.visualElement;
    if (!r || !r.layout)
      return !1;
    const i = yz(o, r.root, this.visualElement.getTransformPagePoint());
    let s = Tz(r.layout.layoutBox, i);
    if (n) {
      const l = n(lz(s));
      this.hasMutatedConstraints = !!l, l && (s = $O(l));
    }
    return s;
  }
  startAnimation(t) {
    const { drag: n, dragMomentum: o, dragElastic: r, dragTransition: i, dragSnapToOrigin: s, onDragTransitionEnd: l } = this.getProps(), c = this.constraints || {}, u = Mo((d) => {
      if (!Eu(d, n, this.currentDirection))
        return;
      let f = c && c[d] || {};
      s && (f = { min: 0, max: 0 });
      const p = r ? 200 : 1e6, h = r ? 40 : 1e7, g = {
        type: "inertia",
        velocity: o ? t[d] : 0,
        bounceStiffness: p,
        bounceDamping: h,
        timeConstant: 750,
        restDelta: 1,
        restSpeed: 10,
        ...i,
        ...f
      };
      return this.startAxisValueAnimation(d, g);
    });
    return Promise.all(u).then(l);
  }
  startAxisValueAnimation(t, n) {
    const o = this.getAxisMotionValue(t);
    return Mm(this.visualElement, t), o.start(pb(t, o, 0, n, this.visualElement, !1));
  }
  stopAnimation() {
    Mo((t) => this.getAxisMotionValue(t).stop());
  }
  pauseAnimation() {
    Mo((t) => {
      var n;
      return (n = this.getAxisMotionValue(t).animation) == null ? void 0 : n.pause();
    });
  }
  getAnimationState(t) {
    var n;
    return (n = this.getAxisMotionValue(t).animation) == null ? void 0 : n.state;
  }
  /**
   * Drag works differently depending on which props are provided.
   *
   * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.
   * - Otherwise, we apply the delta to the x/y motion values.
   */
  getAxisMotionValue(t) {
    const n = `_drag${t.toUpperCase()}`, o = this.visualElement.getProps(), r = o[n];
    return r || this.visualElement.getValue(t, (o.initial ? o.initial[t] : void 0) || 0);
  }
  snapToCursor(t) {
    Mo((n) => {
      const { drag: o } = this.getProps();
      if (!Eu(n, o, this.currentDirection))
        return;
      const { projection: r } = this.visualElement, i = this.getAxisMotionValue(n);
      if (r && r.layout) {
        const { min: s, max: l } = r.layout.layoutBox[n];
        i.set(t[n] - Jt(s, l, 0.5));
      }
    });
  }
  /**
   * When the viewport resizes we want to check if the measured constraints
   * have changed and, if so, reposition the element within those new constraints
   * relative to where it was before the resize.
   */
  scalePositionWithinConstraints() {
    if (!this.visualElement.current)
      return;
    const { drag: t, dragConstraints: n } = this.getProps(), { projection: o } = this.visualElement;
    if (!zs(n) || !o || !this.constraints)
      return;
    this.stopAnimation();
    const r = { x: 0, y: 0 };
    Mo((s) => {
      const l = this.getAxisMotionValue(s);
      if (l && this.constraints !== !1) {
        const c = l.get();
        r[s] = Cz({ min: c, max: c }, this.constraints[s]);
      }
    });
    const { transformTemplate: i } = this.visualElement.getProps();
    this.visualElement.current.style.transform = i ? i({}, "") : "none", o.root && o.root.updateScroll(), o.updateLayout(), this.resolveConstraints(), Mo((s) => {
      if (!Eu(s, t, null))
        return;
      const l = this.getAxisMotionValue(s), { min: c, max: u } = this.constraints[s];
      l.set(Jt(c, u, r[s]));
    });
  }
  addListeners() {
    if (!this.visualElement.current)
      return;
    Rz.set(this.visualElement, this);
    const t = this.visualElement.current, n = $l(t, "pointerdown", (c) => {
      const { drag: u, dragListener: d = !0 } = this.getProps();
      u && d && this.start(c);
    }), o = () => {
      const { dragConstraints: c } = this.getProps();
      zs(c) && c.current && (this.constraints = this.resolveRefConstraints());
    }, { projection: r } = this.visualElement, i = r.addEventListener("measure", o);
    r && !r.layout && (r.root && r.root.updateScroll(), r.updateLayout()), Vt.read(o);
    const s = uc(window, "resize", () => this.scalePositionWithinConstraints()), l = r.addEventListener("didUpdate", ({ delta: c, hasLayoutChanged: u }) => {
      this.isDragging && u && (Mo((d) => {
        const f = this.getAxisMotionValue(d);
        f && (this.originPoint[d] += c[d].translate, f.set(f.get() + c[d].translate));
      }), this.visualElement.render());
    });
    return () => {
      s(), n(), i(), l && l();
    };
  }
  getProps() {
    const t = this.visualElement.getProps(), { drag: n = !1, dragDirectionLock: o = !1, dragPropagation: r = !1, dragConstraints: i = !1, dragElastic: s = Km, dragMomentum: l = !0 } = t;
    return {
      ...t,
      drag: n,
      dragDirectionLock: o,
      dragPropagation: r,
      dragConstraints: i,
      dragElastic: s,
      dragMomentum: l
    };
  }
}
function Eu(e, t, n) {
  return (t === !0 || t === e) && (n === null || n === e);
}
function kz(e, t = 10) {
  let n = null;
  return Math.abs(e.y) > t ? n = "y" : Math.abs(e.x) > t && (n = "x"), n;
}
class $z extends Ni {
  constructor(t) {
    super(t), this.removeGroupControls = zo, this.removeListeners = zo, this.controls = new Iz(t);
  }
  mount() {
    const { dragControls: t } = this.node.getProps();
    t && (this.removeGroupControls = t.subscribe(this.controls)), this.removeListeners = this.controls.addListeners() || zo;
  }
  unmount() {
    this.removeGroupControls(), this.removeListeners();
  }
}
const qx = (e) => (t, n) => {
  e && Vt.postRender(() => e(t, n));
};
class Nz extends Ni {
  constructor() {
    super(...arguments), this.removePointerDownListener = zo;
  }
  onPointerDown(t) {
    this.session = new BO(t, this.createPanHandlers(), {
      transformPagePoint: this.node.getTransformPagePoint(),
      contextWindow: LO(this.node)
    });
  }
  createPanHandlers() {
    const { onPanSessionStart: t, onPanStart: n, onPan: o, onPanEnd: r } = this.node.getProps();
    return {
      onSessionStart: qx(t),
      onStart: qx(n),
      onMove: o,
      onEnd: (i, s) => {
        delete this.session, r && Vt.postRender(() => r(i, s));
      }
    };
  }
  mount() {
    this.removePointerDownListener = $l(this.node.current, "pointerdown", (t) => this.onPointerDown(t));
  }
  update() {
    this.session && this.session.updateHandlers(this.createPanHandlers());
  }
  unmount() {
    this.removePointerDownListener(), this.session && this.session.end();
  }
}
const od = {
  /**
   * Global flag as to whether the tree has animated since the last time
   * we resized the window
   */
  hasAnimatedSinceResize: !0,
  /**
   * We set this to true once, on the first update. Any nodes added to the tree beyond that
   * update will be given a `data-projection-id` attribute.
   */
  hasEverUpdated: !1
};
function Kx(e, t) {
  return t.max === t.min ? 0 : e / (t.max - t.min) * 100;
}
const Ya = {
  correct: (e, t) => {
    if (!t.target)
      return e;
    if (typeof e == "string")
      if (Ue.test(e))
        e = parseFloat(e);
      else
        return e;
    const n = Kx(e, t.target.x), o = Kx(e, t.target.y);
    return `${n}% ${o}%`;
  }
}, Mz = {
  correct: (e, { treeScale: t, projectionDelta: n }) => {
    const o = e, r = xi.parse(e);
    if (r.length > 5)
      return o;
    const i = xi.createTransformer(e), s = typeof r[0] != "number" ? 1 : 0, l = n.x.scale * t.x, c = n.y.scale * t.y;
    r[0 + s] /= l, r[1 + s] /= c;
    const u = Jt(l, c, 0.5);
    return typeof r[2 + s] == "number" && (r[2 + s] /= u), typeof r[3 + s] == "number" && (r[3 + s] /= u), i(r);
  }
};
class Az extends L$ {
  /**
   * This only mounts projection nodes for components that
   * need measuring, we might want to do it for all components
   * in order to incorporate transforms
   */
  componentDidMount() {
    const { visualElement: t, layoutGroup: n, switchLayoutGroup: o, layoutId: r } = this.props, { projection: i } = t;
    jV(_z), i && (n.group && n.group.add(i), o && o.register && r && o.register(i), i.root.didUpdate(), i.addEventListener("animationComplete", () => {
      this.safeToRemove();
    }), i.setOptions({
      ...i.options,
      onExitComplete: () => this.safeToRemove()
    })), od.hasEverUpdated = !0;
  }
  getSnapshotBeforeUpdate(t) {
    const { layoutDependency: n, visualElement: o, drag: r, isPresent: i } = this.props, s = o.projection;
    return s && (s.isPresent = i, r || t.layoutDependency !== n || n === void 0 || t.isPresent !== i ? s.willUpdate() : this.safeToRemove(), t.isPresent !== i && (i ? s.promote() : s.relegate() || Vt.postRender(() => {
      const l = s.getStack();
      (!l || !l.members.length) && this.safeToRemove();
    }))), null;
  }
  componentDidUpdate() {
    const { projection: t } = this.props.visualElement;
    t && (t.root.didUpdate(), jy.postRender(() => {
      !t.currentAnimation && t.isLead() && this.safeToRemove();
    }));
  }
  componentWillUnmount() {
    const { visualElement: t, layoutGroup: n, switchLayoutGroup: o } = this.props, { projection: r } = t;
    r && (r.scheduleCheckAfterUnmount(), n && n.group && n.group.remove(r), o && o.deregister && o.deregister(r));
  }
  safeToRemove() {
    const { safeToRemove: t } = this.props;
    t && t();
  }
  render() {
    return null;
  }
}
function jO(e) {
  const [t, n] = RE(), o = Kt(My);
  return O(Az, { ...e, layoutGroup: o, switchLayoutGroup: Kt(ME), isPresent: t, safeToRemove: n });
}
const _z = {
  borderRadius: {
    ...Ya,
    applyTo: [
      "borderTopLeftRadius",
      "borderTopRightRadius",
      "borderBottomLeftRadius",
      "borderBottomRightRadius"
    ]
  },
  borderTopLeftRadius: Ya,
  borderTopRightRadius: Ya,
  borderBottomLeftRadius: Ya,
  borderBottomRightRadius: Ya,
  boxShadow: Mz
};
function Dz(e, t, n) {
  const o = jn(e) ? e : sc(e);
  return o.start(pb("", o, t, n)), o.animation;
}
function Lz(e) {
  return e instanceof SVGElement && e.tagName !== "svg";
}
const Bz = (e, t) => e.depth - t.depth;
class Vz {
  constructor() {
    this.children = [], this.isDirty = !1;
  }
  add(t) {
    Qy(this.children, t), this.isDirty = !0;
  }
  remove(t) {
    Jy(this.children, t), this.isDirty = !0;
  }
  forEach(t) {
    this.isDirty && this.children.sort(Bz), this.isDirty = !1, this.children.forEach(t);
  }
}
function Fz(e, t) {
  const n = Cr.now(), o = ({ timestamp: r }) => {
    const i = r - n;
    i >= t && (bi(o), e(i - t));
  };
  return Vt.read(o, !0), () => bi(o);
}
const zO = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"], jz = zO.length, Gx = (e) => typeof e == "string" ? parseFloat(e) : e, Yx = (e) => typeof e == "number" || Ue.test(e);
function zz(e, t, n, o, r, i) {
  r ? (e.opacity = Jt(0, n.opacity ?? 1, Hz(o)), e.opacityExit = Jt(t.opacity ?? 1, 0, Wz(o))) : i && (e.opacity = Jt(t.opacity ?? 1, n.opacity ?? 1, o));
  for (let s = 0; s < jz; s++) {
    const l = `border${zO[s]}Radius`;
    let c = Xx(t, l), u = Xx(n, l);
    if (c === void 0 && u === void 0)
      continue;
    c || (c = 0), u || (u = 0), c === 0 || u === 0 || Yx(c) === Yx(u) ? (e[l] = Math.max(Jt(Gx(c), Gx(u), o), 0), (Tr.test(u) || Tr.test(c)) && (e[l] += "%")) : e[l] = u;
  }
  (t.rotate || n.rotate) && (e.rotate = Jt(t.rotate || 0, n.rotate || 0, o));
}
function Xx(e, t) {
  return e[t] !== void 0 ? e[t] : e.borderRadius;
}
const Hz = /* @__PURE__ */ HO(0, 0.5, tO), Wz = /* @__PURE__ */ HO(0.5, 0.95, zo);
function HO(e, t, n) {
  return (o) => o < e ? 0 : o > t ? 1 : n(/* @__PURE__ */ cc(e, t, o));
}
function Zx(e, t) {
  e.min = t.min, e.max = t.max;
}
function No(e, t) {
  Zx(e.x, t.x), Zx(e.y, t.y);
}
function Qx(e, t) {
  e.translate = t.translate, e.scale = t.scale, e.originPoint = t.originPoint, e.origin = t.origin;
}
function Jx(e, t, n, o, r) {
  return e -= t, e = Ad(e, 1 / n, o), r !== void 0 && (e = Ad(e, 1 / r, o)), e;
}
function Uz(e, t = 0, n = 1, o = 0.5, r, i = e, s = e) {
  if (Tr.test(t) && (t = parseFloat(t), t = Jt(s.min, s.max, t / 100) - s.min), typeof t != "number")
    return;
  let l = Jt(i.min, i.max, o);
  e === i && (l -= t), e.min = Jx(e.min, t, n, l, r), e.max = Jx(e.max, t, n, l, r);
}
function ew(e, t, [n, o, r], i, s) {
  Uz(e, t[n], t[o], t[r], t.scale, i, s);
}
const qz = ["x", "scaleX", "originX"], Kz = ["y", "scaleY", "originY"];
function tw(e, t, n, o) {
  ew(e.x, t, qz, n ? n.x : void 0, o ? o.x : void 0), ew(e.y, t, Kz, n ? n.y : void 0, o ? o.y : void 0);
}
function nw(e) {
  return e.translate === 0 && e.scale === 1;
}
function WO(e) {
  return nw(e.x) && nw(e.y);
}
function ow(e, t) {
  return e.min === t.min && e.max === t.max;
}
function Gz(e, t) {
  return ow(e.x, t.x) && ow(e.y, t.y);
}
function rw(e, t) {
  return Math.round(e.min) === Math.round(t.min) && Math.round(e.max) === Math.round(t.max);
}
function UO(e, t) {
  return rw(e.x, t.x) && rw(e.y, t.y);
}
function iw(e) {
  return Zn(e.x) / Zn(e.y);
}
function sw(e, t) {
  return e.translate === t.translate && e.scale === t.scale && e.originPoint === t.originPoint;
}
class Yz {
  constructor() {
    this.members = [];
  }
  add(t) {
    Qy(this.members, t), t.scheduleRender();
  }
  remove(t) {
    if (Jy(this.members, t), t === this.prevLead && (this.prevLead = void 0), t === this.lead) {
      const n = this.members[this.members.length - 1];
      n && this.promote(n);
    }
  }
  relegate(t) {
    const n = this.members.findIndex((r) => t === r);
    if (n === 0)
      return !1;
    let o;
    for (let r = n; r >= 0; r--) {
      const i = this.members[r];
      if (i.isPresent !== !1) {
        o = i;
        break;
      }
    }
    return o ? (this.promote(o), !0) : !1;
  }
  promote(t, n) {
    const o = this.lead;
    if (t !== o && (this.prevLead = o, this.lead = t, t.show(), o)) {
      o.instance && o.scheduleRender(), t.scheduleRender(), t.resumeFrom = o, n && (t.resumeFrom.preserveOpacity = !0), o.snapshot && (t.snapshot = o.snapshot, t.snapshot.latestValues = o.animationValues || o.latestValues), t.root && t.root.isUpdating && (t.isLayoutDirty = !0);
      const { crossfade: r } = t.options;
      r === !1 && o.hide();
    }
  }
  exitAnimationComplete() {
    this.members.forEach((t) => {
      const { options: n, resumingFrom: o } = t;
      n.onExitComplete && n.onExitComplete(), o && o.options.onExitComplete && o.options.onExitComplete();
    });
  }
  scheduleRender() {
    this.members.forEach((t) => {
      t.instance && t.scheduleRender(!1);
    });
  }
  /**
   * Clear any leads that have been removed this render to prevent them from being
   * used in future animations and to prevent memory leaks
   */
  removeLeadSnapshot() {
    this.lead && this.lead.snapshot && (this.lead.snapshot = void 0);
  }
}
function Xz(e, t, n) {
  let o = "";
  const r = e.x.translate / t.x, i = e.y.translate / t.y, s = (n == null ? void 0 : n.z) || 0;
  if ((r || i || s) && (o = `translate3d(${r}px, ${i}px, ${s}px) `), (t.x !== 1 || t.y !== 1) && (o += `scale(${1 / t.x}, ${1 / t.y}) `), n) {
    const { transformPerspective: u, rotate: d, rotateX: f, rotateY: p, skewX: h, skewY: g } = n;
    u && (o = `perspective(${u}px) ${o}`), d && (o += `rotate(${d}deg) `), f && (o += `rotateX(${f}deg) `), p && (o += `rotateY(${p}deg) `), h && (o += `skewX(${h}deg) `), g && (o += `skewY(${g}deg) `);
  }
  const l = e.x.scale * t.x, c = e.y.scale * t.y;
  return (l !== 1 || c !== 1) && (o += `scale(${l}, ${c})`), o || "none";
}
const mh = ["", "X", "Y", "Z"], Zz = { visibility: "hidden" }, aw = 1e3;
let Qz = 0;
function gh(e, t, n, o) {
  const { latestValues: r } = t;
  r[e] && (n[e] = r[e], t.setStaticValue(e, 0), o && (o[e] = 0));
}
function qO(e) {
  if (e.hasCheckedOptimisedAppear = !0, e.root === e)
    return;
  const { visualElement: t } = e.options;
  if (!t)
    return;
  const n = GE(t);
  if (window.MotionHasOptimisedAnimation(n, "transform")) {
    const { layout: r, layoutId: i } = e.options;
    window.MotionCancelOptimisedAnimation(n, "transform", Vt, !(r || i));
  }
  const { parent: o } = e;
  o && !o.hasCheckedOptimisedAppear && qO(o);
}
function KO({ attachResizeListener: e, defaultParent: t, measureScroll: n, checkIsScrollRoot: o, resetTransform: r }) {
  return class {
    constructor(s = {}, l = t == null ? void 0 : t()) {
      this.id = Qz++, this.animationId = 0, this.children = /* @__PURE__ */ new Set(), this.options = {}, this.isTreeAnimating = !1, this.isAnimationBlocked = !1, this.isLayoutDirty = !1, this.isProjectionDirty = !1, this.isSharedProjectionDirty = !1, this.isTransformDirty = !1, this.updateManuallyBlocked = !1, this.updateBlockedByResize = !1, this.isUpdating = !1, this.isSVG = !1, this.needsReset = !1, this.shouldResetTransform = !1, this.hasCheckedOptimisedAppear = !1, this.treeScale = { x: 1, y: 1 }, this.eventHandlers = /* @__PURE__ */ new Map(), this.hasTreeAnimated = !1, this.updateScheduled = !1, this.scheduleUpdate = () => this.update(), this.projectionUpdateScheduled = !1, this.checkUpdateFailed = () => {
        this.isUpdating && (this.isUpdating = !1, this.clearAllSnapshots());
      }, this.updateProjection = () => {
        this.projectionUpdateScheduled = !1, this.nodes.forEach(t4), this.nodes.forEach(s4), this.nodes.forEach(a4), this.nodes.forEach(n4);
      }, this.resolvedRelativeTargetAt = 0, this.hasProjected = !1, this.isVisible = !0, this.animationProgress = 0, this.sharedNodes = /* @__PURE__ */ new Map(), this.latestValues = s, this.root = l ? l.root || l : this, this.path = l ? [...l.path, l] : [], this.parent = l, this.depth = l ? l.depth + 1 : 0;
      for (let c = 0; c < this.path.length; c++)
        this.path[c].shouldResetTransform = !0;
      this.root === this && (this.nodes = new Vz());
    }
    addEventListener(s, l) {
      return this.eventHandlers.has(s) || this.eventHandlers.set(s, new eb()), this.eventHandlers.get(s).add(l);
    }
    notifyListeners(s, ...l) {
      const c = this.eventHandlers.get(s);
      c && c.notify(...l);
    }
    hasListeners(s) {
      return this.eventHandlers.has(s);
    }
    /**
     * Lifecycles
     */
    mount(s, l = this.root.hasTreeAnimated) {
      if (this.instance)
        return;
      this.isSVG = Lz(s), this.instance = s;
      const { layoutId: c, layout: u, visualElement: d } = this.options;
      if (d && !d.current && d.mount(s), this.root.nodes.add(this), this.parent && this.parent.children.add(this), l && (u || c) && (this.isLayoutDirty = !0), e) {
        let f;
        const p = () => this.root.updateBlockedByResize = !1;
        e(s, () => {
          this.root.updateBlockedByResize = !0, f && f(), f = Fz(p, 250), od.hasAnimatedSinceResize && (od.hasAnimatedSinceResize = !1, this.nodes.forEach(cw));
        });
      }
      c && this.root.registerSharedNode(c, this), this.options.animate !== !1 && d && (c || u) && this.addEventListener("didUpdate", ({ delta: f, hasLayoutChanged: p, hasRelativeLayoutChanged: h, layout: g }) => {
        if (this.isTreeAnimationBlocked()) {
          this.target = void 0, this.relativeTarget = void 0;
          return;
        }
        const m = this.options.transition || d.getDefaultTransition() || f4, { onLayoutAnimationStart: y, onLayoutAnimationComplete: b } = d.getProps(), T = !this.targetLayout || !UO(this.targetLayout, g), v = !p && h;
        if (this.options.layoutRoot || this.resumeFrom || v || p && (T || !this.currentAnimation)) {
          this.resumeFrom && (this.resumingFrom = this.resumeFrom, this.resumingFrom.resumingFrom = void 0), this.setAnimationOrigin(f, v);
          const w = {
            ...fb(m, "layout"),
            onPlay: y,
            onComplete: b
          };
          (d.shouldReduceMotion || this.options.layoutRoot) && (w.delay = 0, w.type = !1), this.startAnimation(w);
        } else
          p || cw(this), this.isLead() && this.options.onExitComplete && this.options.onExitComplete();
        this.targetLayout = g;
      });
    }
    unmount() {
      this.options.layoutId && this.willUpdate(), this.root.nodes.remove(this);
      const s = this.getStack();
      s && s.remove(this), this.parent && this.parent.children.delete(this), this.instance = void 0, bi(this.updateProjection);
    }
    // only on the root
    blockUpdate() {
      this.updateManuallyBlocked = !0;
    }
    unblockUpdate() {
      this.updateManuallyBlocked = !1;
    }
    isUpdateBlocked() {
      return this.updateManuallyBlocked || this.updateBlockedByResize;
    }
    isTreeAnimationBlocked() {
      return this.isAnimationBlocked || this.parent && this.parent.isTreeAnimationBlocked() || !1;
    }
    // Note: currently only running on root node
    startUpdate() {
      this.isUpdateBlocked() || (this.isUpdating = !0, this.nodes && this.nodes.forEach(l4), this.animationId++);
    }
    getTransformTemplate() {
      const { visualElement: s } = this.options;
      return s && s.getProps().transformTemplate;
    }
    willUpdate(s = !0) {
      if (this.root.hasTreeAnimated = !0, this.root.isUpdateBlocked()) {
        this.options.onExitComplete && this.options.onExitComplete();
        return;
      }
      if (window.MotionCancelOptimisedAnimation && !this.hasCheckedOptimisedAppear && qO(this), !this.root.isUpdating && this.root.startUpdate(), this.isLayoutDirty)
        return;
      this.isLayoutDirty = !0;
      for (let d = 0; d < this.path.length; d++) {
        const f = this.path[d];
        f.shouldResetTransform = !0, f.updateScroll("snapshot"), f.options.layoutRoot && f.willUpdate(!1);
      }
      const { layoutId: l, layout: c } = this.options;
      if (l === void 0 && !c)
        return;
      const u = this.getTransformTemplate();
      this.prevTransformTemplateValue = u ? u(this.latestValues, "") : void 0, this.updateSnapshot(), s && this.notifyListeners("willUpdate");
    }
    update() {
      if (this.updateScheduled = !1, this.isUpdateBlocked()) {
        this.unblockUpdate(), this.clearAllSnapshots(), this.nodes.forEach(lw);
        return;
      }
      this.isUpdating || this.nodes.forEach(r4), this.isUpdating = !1, this.nodes.forEach(i4), this.nodes.forEach(Jz), this.nodes.forEach(e4), this.clearAllSnapshots();
      const l = Cr.now();
      kn.delta = qr(0, 1e3 / 60, l - kn.timestamp), kn.timestamp = l, kn.isProcessing = !0, ah.update.process(kn), ah.preRender.process(kn), ah.render.process(kn), kn.isProcessing = !1;
    }
    didUpdate() {
      this.updateScheduled || (this.updateScheduled = !0, jy.read(this.scheduleUpdate));
    }
    clearAllSnapshots() {
      this.nodes.forEach(o4), this.sharedNodes.forEach(c4);
    }
    scheduleUpdateProjection() {
      this.projectionUpdateScheduled || (this.projectionUpdateScheduled = !0, Vt.preRender(this.updateProjection, !1, !0));
    }
    scheduleCheckAfterUnmount() {
      Vt.postRender(() => {
        this.isLayoutDirty ? this.root.didUpdate() : this.root.checkUpdateFailed();
      });
    }
    /**
     * Update measurements
     */
    updateSnapshot() {
      this.snapshot || !this.instance || (this.snapshot = this.measure(), this.snapshot && !Zn(this.snapshot.measuredBox.x) && !Zn(this.snapshot.measuredBox.y) && (this.snapshot = void 0));
    }
    updateLayout() {
      if (!this.instance || (this.updateScroll(), !(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty))
        return;
      if (this.resumeFrom && !this.resumeFrom.instance)
        for (let c = 0; c < this.path.length; c++)
          this.path[c].updateScroll();
      const s = this.layout;
      this.layout = this.measure(!1), this.layoutCorrected = cn(), this.isLayoutDirty = !1, this.projectionDelta = void 0, this.notifyListeners("measure", this.layout.layoutBox);
      const { visualElement: l } = this.options;
      l && l.notify("LayoutMeasure", this.layout.layoutBox, s ? s.layoutBox : void 0);
    }
    updateScroll(s = "measure") {
      let l = !!(this.options.layoutScroll && this.instance);
      if (this.scroll && this.scroll.animationId === this.root.animationId && this.scroll.phase === s && (l = !1), l) {
        const c = o(this.instance);
        this.scroll = {
          animationId: this.root.animationId,
          phase: s,
          isRoot: c,
          offset: n(this.instance),
          wasRoot: this.scroll ? this.scroll.isRoot : c
        };
      }
    }
    resetTransform() {
      if (!r)
        return;
      const s = this.isLayoutDirty || this.shouldResetTransform || this.options.alwaysMeasureLayout, l = this.projectionDelta && !WO(this.projectionDelta), c = this.getTransformTemplate(), u = c ? c(this.latestValues, "") : void 0, d = u !== this.prevTransformTemplateValue;
      s && (l || Ki(this.latestValues) || d) && (r(this.instance, u), this.shouldResetTransform = !1, this.scheduleRender());
    }
    measure(s = !0) {
      const l = this.measurePageBox();
      let c = this.removeElementScroll(l);
      return s && (c = this.removeTransform(c)), p4(c), {
        animationId: this.root.animationId,
        measuredBox: l,
        layoutBox: c,
        latestValues: {},
        source: this.id
      };
    }
    measurePageBox() {
      var u;
      const { visualElement: s } = this.options;
      if (!s)
        return cn();
      const l = s.measureViewportBox();
      if (!(((u = this.scroll) == null ? void 0 : u.wasRoot) || this.path.some(h4))) {
        const { scroll: d } = this.root;
        d && (Us(l.x, d.offset.x), Us(l.y, d.offset.y));
      }
      return l;
    }
    removeElementScroll(s) {
      var c;
      const l = cn();
      if (No(l, s), (c = this.scroll) != null && c.wasRoot)
        return l;
      for (let u = 0; u < this.path.length; u++) {
        const d = this.path[u], { scroll: f, options: p } = d;
        d !== this.root && f && p.layoutScroll && (f.wasRoot && No(l, s), Us(l.x, f.offset.x), Us(l.y, f.offset.y));
      }
      return l;
    }
    applyTransform(s, l = !1) {
      const c = cn();
      No(c, s);
      for (let u = 0; u < this.path.length; u++) {
        const d = this.path[u];
        !l && d.options.layoutScroll && d.scroll && d !== d.root && qs(c, {
          x: -d.scroll.offset.x,
          y: -d.scroll.offset.y
        }), Ki(d.latestValues) && qs(c, d.latestValues);
      }
      return Ki(this.latestValues) && qs(c, this.latestValues), c;
    }
    removeTransform(s) {
      const l = cn();
      No(l, s);
      for (let c = 0; c < this.path.length; c++) {
        const u = this.path[c];
        if (!u.instance || !Ki(u.latestValues))
          continue;
        Um(u.latestValues) && u.updateSnapshot();
        const d = cn(), f = u.measurePageBox();
        No(d, f), tw(l, u.latestValues, u.snapshot ? u.snapshot.layoutBox : void 0, d);
      }
      return Ki(this.latestValues) && tw(l, this.latestValues), l;
    }
    setTargetDelta(s) {
      this.targetDelta = s, this.root.scheduleUpdateProjection(), this.isProjectionDirty = !0;
    }
    setOptions(s) {
      this.options = {
        ...this.options,
        ...s,
        crossfade: s.crossfade !== void 0 ? s.crossfade : !0
      };
    }
    clearMeasurements() {
      this.scroll = void 0, this.layout = void 0, this.snapshot = void 0, this.prevTransformTemplateValue = void 0, this.targetDelta = void 0, this.target = void 0, this.isLayoutDirty = !1;
    }
    forceRelativeParentToResolveTarget() {
      this.relativeParent && this.relativeParent.resolvedRelativeTargetAt !== kn.timestamp && this.relativeParent.resolveTargetDelta(!0);
    }
    resolveTargetDelta(s = !1) {
      var p;
      const l = this.getLead();
      this.isProjectionDirty || (this.isProjectionDirty = l.isProjectionDirty), this.isTransformDirty || (this.isTransformDirty = l.isTransformDirty), this.isSharedProjectionDirty || (this.isSharedProjectionDirty = l.isSharedProjectionDirty);
      const c = !!this.resumingFrom || this !== l;
      if (!(s || c && this.isSharedProjectionDirty || this.isProjectionDirty || (p = this.parent) != null && p.isProjectionDirty || this.attemptToResolveRelativeTarget || this.root.updateBlockedByResize))
        return;
      const { layout: d, layoutId: f } = this.options;
      if (!(!this.layout || !(d || f))) {
        if (this.resolvedRelativeTargetAt = kn.timestamp, !this.targetDelta && !this.relativeTarget) {
          const h = this.getClosestProjectingParent();
          h && h.layout && this.animationProgress !== 1 ? (this.relativeParent = h, this.forceRelativeParentToResolveTarget(), this.relativeTarget = cn(), this.relativeTargetOrigin = cn(), Ml(this.relativeTargetOrigin, this.layout.layoutBox, h.layout.layoutBox), No(this.relativeTarget, this.relativeTargetOrigin)) : this.relativeParent = this.relativeTarget = void 0;
        }
        if (!(!this.relativeTarget && !this.targetDelta) && (this.target || (this.target = cn(), this.targetWithTransforms = cn()), this.relativeTarget && this.relativeTargetOrigin && this.relativeParent && this.relativeParent.target ? (this.forceRelativeParentToResolveTarget(), mz(this.target, this.relativeTarget, this.relativeParent.target)) : this.targetDelta ? (this.resumingFrom ? this.target = this.applyTransform(this.layout.layoutBox) : No(this.target, this.layout.layoutBox), _O(this.target, this.targetDelta)) : No(this.target, this.layout.layoutBox), this.attemptToResolveRelativeTarget)) {
          this.attemptToResolveRelativeTarget = !1;
          const h = this.getClosestProjectingParent();
          h && !!h.resumingFrom == !!this.resumingFrom && !h.options.layoutScroll && h.target && this.animationProgress !== 1 ? (this.relativeParent = h, this.forceRelativeParentToResolveTarget(), this.relativeTarget = cn(), this.relativeTargetOrigin = cn(), Ml(this.relativeTargetOrigin, this.target, h.target), No(this.relativeTarget, this.relativeTargetOrigin)) : this.relativeParent = this.relativeTarget = void 0;
        }
      }
    }
    getClosestProjectingParent() {
      if (!(!this.parent || Um(this.parent.latestValues) || AO(this.parent.latestValues)))
        return this.parent.isProjecting() ? this.parent : this.parent.getClosestProjectingParent();
    }
    isProjecting() {
      return !!((this.relativeTarget || this.targetDelta || this.options.layoutRoot) && this.layout);
    }
    calcProjection() {
      var g;
      const s = this.getLead(), l = !!this.resumingFrom || this !== s;
      let c = !0;
      if ((this.isProjectionDirty || (g = this.parent) != null && g.isProjectionDirty) && (c = !1), l && (this.isSharedProjectionDirty || this.isTransformDirty) && (c = !1), this.resolvedRelativeTargetAt === kn.timestamp && (c = !1), c)
        return;
      const { layout: u, layoutId: d } = this.options;
      if (this.isTreeAnimating = !!(this.parent && this.parent.isTreeAnimating || this.currentAnimation || this.pendingAnimation), this.isTreeAnimating || (this.targetDelta = this.relativeTarget = void 0), !this.layout || !(u || d))
        return;
      No(this.layoutCorrected, this.layout.layoutBox);
      const f = this.treeScale.x, p = this.treeScale.y;
      gz(this.layoutCorrected, this.treeScale, this.path, l), s.layout && !s.target && (this.treeScale.x !== 1 || this.treeScale.y !== 1) && (s.target = s.layout.layoutBox, s.targetWithTransforms = cn());
      const { target: h } = s;
      if (!h) {
        this.prevProjectionDelta && (this.createProjectionDeltas(), this.scheduleRender());
        return;
      }
      !this.projectionDelta || !this.prevProjectionDelta ? this.createProjectionDeltas() : (Qx(this.prevProjectionDelta.x, this.projectionDelta.x), Qx(this.prevProjectionDelta.y, this.projectionDelta.y)), Nl(this.projectionDelta, this.layoutCorrected, h, this.latestValues), (this.treeScale.x !== f || this.treeScale.y !== p || !sw(this.projectionDelta.x, this.prevProjectionDelta.x) || !sw(this.projectionDelta.y, this.prevProjectionDelta.y)) && (this.hasProjected = !0, this.scheduleRender(), this.notifyListeners("projectionUpdate", h));
    }
    hide() {
      this.isVisible = !1;
    }
    show() {
      this.isVisible = !0;
    }
    scheduleRender(s = !0) {
      var l;
      if ((l = this.options.visualElement) == null || l.scheduleRender(), s) {
        const c = this.getStack();
        c && c.scheduleRender();
      }
      this.resumingFrom && !this.resumingFrom.instance && (this.resumingFrom = void 0);
    }
    createProjectionDeltas() {
      this.prevProjectionDelta = Ws(), this.projectionDelta = Ws(), this.projectionDeltaWithTransform = Ws();
    }
    setAnimationOrigin(s, l = !1) {
      const c = this.snapshot, u = c ? c.latestValues : {}, d = { ...this.latestValues }, f = Ws();
      (!this.relativeParent || !this.relativeParent.options.layoutRoot) && (this.relativeTarget = this.relativeTargetOrigin = void 0), this.attemptToResolveRelativeTarget = !l;
      const p = cn(), h = c ? c.source : void 0, g = this.layout ? this.layout.source : void 0, m = h !== g, y = this.getStack(), b = !y || y.members.length <= 1, T = !!(m && !b && this.options.crossfade === !0 && !this.path.some(d4));
      this.animationProgress = 0;
      let v;
      this.mixTargetDelta = (w) => {
        const S = w / 1e3;
        uw(f.x, s.x, S), uw(f.y, s.y, S), this.setTargetDelta(f), this.relativeTarget && this.relativeTargetOrigin && this.layout && this.relativeParent && this.relativeParent.layout && (Ml(p, this.layout.layoutBox, this.relativeParent.layout.layoutBox), u4(this.relativeTarget, this.relativeTargetOrigin, p, S), v && Gz(this.relativeTarget, v) && (this.isProjectionDirty = !1), v || (v = cn()), No(v, this.relativeTarget)), m && (this.animationValues = d, zz(d, u, this.latestValues, S, T, b)), this.root.scheduleUpdateProjection(), this.scheduleRender(), this.animationProgress = S;
      }, this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0);
    }
    startAnimation(s) {
      this.notifyListeners("animationStart"), this.currentAnimation && this.currentAnimation.stop(), this.resumingFrom && this.resumingFrom.currentAnimation && this.resumingFrom.currentAnimation.stop(), this.pendingAnimation && (bi(this.pendingAnimation), this.pendingAnimation = void 0), this.pendingAnimation = Vt.update(() => {
        od.hasAnimatedSinceResize = !0, this.currentAnimation = Dz(0, aw, {
          ...s,
          onUpdate: (l) => {
            this.mixTargetDelta(l), s.onUpdate && s.onUpdate(l);
          },
          onStop: () => {
          },
          onComplete: () => {
            s.onComplete && s.onComplete(), this.completeAnimation();
          }
        }), this.resumingFrom && (this.resumingFrom.currentAnimation = this.currentAnimation), this.pendingAnimation = void 0;
      });
    }
    completeAnimation() {
      this.resumingFrom && (this.resumingFrom.currentAnimation = void 0, this.resumingFrom.preserveOpacity = void 0);
      const s = this.getStack();
      s && s.exitAnimationComplete(), this.resumingFrom = this.currentAnimation = this.animationValues = void 0, this.notifyListeners("animationComplete");
    }
    finishAnimation() {
      this.currentAnimation && (this.mixTargetDelta && this.mixTargetDelta(aw), this.currentAnimation.stop()), this.completeAnimation();
    }
    applyTransformsToTarget() {
      const s = this.getLead();
      let { targetWithTransforms: l, target: c, layout: u, latestValues: d } = s;
      if (!(!l || !c || !u)) {
        if (this !== s && this.layout && u && GO(this.options.animationType, this.layout.layoutBox, u.layoutBox)) {
          c = this.target || cn();
          const f = Zn(this.layout.layoutBox.x);
          c.x.min = s.target.x.min, c.x.max = c.x.min + f;
          const p = Zn(this.layout.layoutBox.y);
          c.y.min = s.target.y.min, c.y.max = c.y.min + p;
        }
        No(l, c), qs(l, d), Nl(this.projectionDeltaWithTransform, this.layoutCorrected, l, d);
      }
    }
    registerSharedNode(s, l) {
      this.sharedNodes.has(s) || this.sharedNodes.set(s, new Yz()), this.sharedNodes.get(s).add(l);
      const u = l.options.initialPromotionConfig;
      l.promote({
        transition: u ? u.transition : void 0,
        preserveFollowOpacity: u && u.shouldPreserveFollowOpacity ? u.shouldPreserveFollowOpacity(l) : void 0
      });
    }
    isLead() {
      const s = this.getStack();
      return s ? s.lead === this : !0;
    }
    getLead() {
      var l;
      const { layoutId: s } = this.options;
      return s ? ((l = this.getStack()) == null ? void 0 : l.lead) || this : this;
    }
    getPrevLead() {
      var l;
      const { layoutId: s } = this.options;
      return s ? (l = this.getStack()) == null ? void 0 : l.prevLead : void 0;
    }
    getStack() {
      const { layoutId: s } = this.options;
      if (s)
        return this.root.sharedNodes.get(s);
    }
    promote({ needsReset: s, transition: l, preserveFollowOpacity: c } = {}) {
      const u = this.getStack();
      u && u.promote(this, c), s && (this.projectionDelta = void 0, this.needsReset = !0), l && this.setOptions({ transition: l });
    }
    relegate() {
      const s = this.getStack();
      return s ? s.relegate(this) : !1;
    }
    resetSkewAndRotation() {
      const { visualElement: s } = this.options;
      if (!s)
        return;
      let l = !1;
      const { latestValues: c } = s;
      if ((c.z || c.rotate || c.rotateX || c.rotateY || c.rotateZ || c.skewX || c.skewY) && (l = !0), !l)
        return;
      const u = {};
      c.z && gh("z", s, u, this.animationValues);
      for (let d = 0; d < mh.length; d++)
        gh(`rotate${mh[d]}`, s, u, this.animationValues), gh(`skew${mh[d]}`, s, u, this.animationValues);
      s.render();
      for (const d in u)
        s.setStaticValue(d, u[d]), this.animationValues && (this.animationValues[d] = u[d]);
      s.scheduleRender();
    }
    getProjectionStyles(s) {
      if (!this.instance || this.isSVG)
        return;
      if (!this.isVisible)
        return Zz;
      const l = {
        visibility: ""
      }, c = this.getTransformTemplate();
      if (this.needsReset)
        return this.needsReset = !1, l.opacity = "", l.pointerEvents = td(s == null ? void 0 : s.pointerEvents) || "", l.transform = c ? c(this.latestValues, "") : "none", l;
      const u = this.getLead();
      if (!this.projectionDelta || !this.layout || !u.target) {
        const h = {};
        return this.options.layoutId && (h.opacity = this.latestValues.opacity !== void 0 ? this.latestValues.opacity : 1, h.pointerEvents = td(s == null ? void 0 : s.pointerEvents) || ""), this.hasProjected && !Ki(this.latestValues) && (h.transform = c ? c({}, "") : "none", this.hasProjected = !1), h;
      }
      const d = u.animationValues || u.latestValues;
      this.applyTransformsToTarget(), l.transform = Xz(this.projectionDeltaWithTransform, this.treeScale, d), c && (l.transform = c(d, l.transform));
      const { x: f, y: p } = this.projectionDelta;
      l.transformOrigin = `${f.origin * 100}% ${p.origin * 100}% 0`, u.animationValues ? l.opacity = u === this ? d.opacity ?? this.latestValues.opacity ?? 1 : this.preserveOpacity ? this.latestValues.opacity : d.opacityExit : l.opacity = u === this ? d.opacity !== void 0 ? d.opacity : "" : d.opacityExit !== void 0 ? d.opacityExit : 0;
      for (const h in oc) {
        if (d[h] === void 0)
          continue;
        const { correct: g, applyTo: m, isCSSVariable: y } = oc[h], b = l.transform === "none" ? d[h] : g(d[h], u);
        if (m) {
          const T = m.length;
          for (let v = 0; v < T; v++)
            l[m[v]] = b;
        } else
          y ? this.options.visualElement.renderState.vars[h] = b : l[h] = b;
      }
      return this.options.layoutId && (l.pointerEvents = u === this ? td(s == null ? void 0 : s.pointerEvents) || "" : "none"), l;
    }
    clearSnapshot() {
      this.resumeFrom = this.snapshot = void 0;
    }
    // Only run on root
    resetTree() {
      this.root.nodes.forEach((s) => {
        var l;
        return (l = s.currentAnimation) == null ? void 0 : l.stop();
      }), this.root.nodes.forEach(lw), this.root.sharedNodes.clear();
    }
  };
}
function Jz(e) {
  e.updateLayout();
}
function e4(e) {
  var n;
  const t = ((n = e.resumeFrom) == null ? void 0 : n.snapshot) || e.snapshot;
  if (e.isLead() && e.layout && t && e.hasListeners("didUpdate")) {
    const { layoutBox: o, measuredBox: r } = e.layout, { animationType: i } = e.options, s = t.source !== e.layout.source;
    i === "size" ? Mo((f) => {
      const p = s ? t.measuredBox[f] : t.layoutBox[f], h = Zn(p);
      p.min = o[f].min, p.max = p.min + h;
    }) : GO(i, t.layoutBox, o) && Mo((f) => {
      const p = s ? t.measuredBox[f] : t.layoutBox[f], h = Zn(o[f]);
      p.max = p.min + h, e.relativeTarget && !e.currentAnimation && (e.isProjectionDirty = !0, e.relativeTarget[f].max = e.relativeTarget[f].min + h);
    });
    const l = Ws();
    Nl(l, o, t.layoutBox);
    const c = Ws();
    s ? Nl(c, e.applyTransform(r, !0), t.measuredBox) : Nl(c, o, t.layoutBox);
    const u = !WO(l);
    let d = !1;
    if (!e.resumeFrom) {
      const f = e.getClosestProjectingParent();
      if (f && !f.resumeFrom) {
        const { snapshot: p, layout: h } = f;
        if (p && h) {
          const g = cn();
          Ml(g, t.layoutBox, p.layoutBox);
          const m = cn();
          Ml(m, o, h.layoutBox), UO(g, m) || (d = !0), f.options.layoutRoot && (e.relativeTarget = m, e.relativeTargetOrigin = g, e.relativeParent = f);
        }
      }
    }
    e.notifyListeners("didUpdate", {
      layout: o,
      snapshot: t,
      delta: c,
      layoutDelta: l,
      hasLayoutChanged: u,
      hasRelativeLayoutChanged: d
    });
  } else if (e.isLead()) {
    const { onExitComplete: o } = e.options;
    o && o();
  }
  e.options.transition = void 0;
}
function t4(e) {
  e.parent && (e.isProjecting() || (e.isProjectionDirty = e.parent.isProjectionDirty), e.isSharedProjectionDirty || (e.isSharedProjectionDirty = !!(e.isProjectionDirty || e.parent.isProjectionDirty || e.parent.isSharedProjectionDirty)), e.isTransformDirty || (e.isTransformDirty = e.parent.isTransformDirty));
}
function n4(e) {
  e.isProjectionDirty = e.isSharedProjectionDirty = e.isTransformDirty = !1;
}
function o4(e) {
  e.clearSnapshot();
}
function lw(e) {
  e.clearMeasurements();
}
function r4(e) {
  e.isLayoutDirty = !1;
}
function i4(e) {
  const { visualElement: t } = e.options;
  t && t.getProps().onBeforeLayoutMeasure && t.notify("BeforeLayoutMeasure"), e.resetTransform();
}
function cw(e) {
  e.finishAnimation(), e.targetDelta = e.relativeTarget = e.target = void 0, e.isProjectionDirty = !0;
}
function s4(e) {
  e.resolveTargetDelta();
}
function a4(e) {
  e.calcProjection();
}
function l4(e) {
  e.resetSkewAndRotation();
}
function c4(e) {
  e.removeLeadSnapshot();
}
function uw(e, t, n) {
  e.translate = Jt(t.translate, 0, n), e.scale = Jt(t.scale, 1, n), e.origin = t.origin, e.originPoint = t.originPoint;
}
function dw(e, t, n, o) {
  e.min = Jt(t.min, n.min, o), e.max = Jt(t.max, n.max, o);
}
function u4(e, t, n, o) {
  dw(e.x, t.x, n.x, o), dw(e.y, t.y, n.y, o);
}
function d4(e) {
  return e.animationValues && e.animationValues.opacityExit !== void 0;
}
const f4 = {
  duration: 0.45,
  ease: [0.4, 0, 0.1, 1]
}, fw = (e) => typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().includes(e), pw = fw("applewebkit/") && !fw("chrome/") ? Math.round : zo;
function hw(e) {
  e.min = pw(e.min), e.max = pw(e.max);
}
function p4(e) {
  hw(e.x), hw(e.y);
}
function GO(e, t, n) {
  return e === "position" || e === "preserve-aspect" && !hz(iw(t), iw(n), 0.2);
}
function h4(e) {
  var t;
  return e !== e.root && ((t = e.scroll) == null ? void 0 : t.wasRoot);
}
const m4 = KO({
  attachResizeListener: (e, t) => uc(e, "resize", t),
  measureScroll: () => ({
    x: document.documentElement.scrollLeft || document.body.scrollLeft,
    y: document.documentElement.scrollTop || document.body.scrollTop
  }),
  checkIsScrollRoot: () => !0
}), yh = {
  current: void 0
}, YO = KO({
  measureScroll: (e) => ({
    x: e.scrollLeft,
    y: e.scrollTop
  }),
  defaultParent: () => {
    if (!yh.current) {
      const e = new m4({});
      e.mount(window), e.setOptions({ layoutScroll: !0 }), yh.current = e;
    }
    return yh.current;
  },
  resetTransform: (e, t) => {
    e.style.transform = t !== void 0 ? t : "none";
  },
  checkIsScrollRoot: (e) => window.getComputedStyle(e).position === "fixed"
}), g4 = {
  pan: {
    Feature: Nz
  },
  drag: {
    Feature: $z,
    ProjectionNode: YO,
    MeasureLayout: jO
  }
};
function y4(e, t, n) {
  if (e instanceof EventTarget)
    return [e];
  if (typeof e == "string") {
    let o = document;
    const r = (n == null ? void 0 : n[e]) ?? o.querySelectorAll(e);
    return r ? Array.from(r) : [];
  }
  return Array.from(e);
}
function XO(e, t) {
  const n = y4(e), o = new AbortController(), r = {
    passive: !0,
    ...t,
    signal: o.signal
  };
  return [n, r, () => o.abort()];
}
function mw(e) {
  return !(e.pointerType === "touch" || FO());
}
function b4(e, t, n = {}) {
  const [o, r, i] = XO(e, n), s = (l) => {
    if (!mw(l))
      return;
    const { target: c } = l, u = t(c, l);
    if (typeof u != "function" || !c)
      return;
    const d = (f) => {
      mw(f) && (u(f), c.removeEventListener("pointerleave", d));
    };
    c.addEventListener("pointerleave", d, r);
  };
  return o.forEach((l) => {
    l.addEventListener("pointerenter", s, r);
  }), i;
}
function gw(e, t, n) {
  const { props: o } = e;
  e.animationState && o.whileHover && e.animationState.setActive("whileHover", n === "Start");
  const r = "onHover" + n, i = o[r];
  i && Vt.postRender(() => i(t, zc(t)));
}
class v4 extends Ni {
  mount() {
    const { current: t } = this.node;
    t && (this.unmount = b4(t, (n, o) => (gw(this.node, o, "Start"), (r) => gw(this.node, r, "End"))));
  }
  unmount() {
  }
}
class x4 extends Ni {
  constructor() {
    super(...arguments), this.isActive = !1;
  }
  onFocus() {
    let t = !1;
    try {
      t = this.node.current.matches(":focus-visible");
    } catch {
      t = !0;
    }
    !t || !this.node.animationState || (this.node.animationState.setActive("whileFocus", !0), this.isActive = !0);
  }
  onBlur() {
    !this.isActive || !this.node.animationState || (this.node.animationState.setActive("whileFocus", !1), this.isActive = !1);
  }
  mount() {
    this.unmount = jc(uc(this.node.current, "focus", () => this.onFocus()), uc(this.node.current, "blur", () => this.onBlur()));
  }
  unmount() {
  }
}
const ZO = (e, t) => t ? e === t ? !0 : ZO(e, t.parentElement) : !1, w4 = /* @__PURE__ */ new Set([
  "BUTTON",
  "INPUT",
  "SELECT",
  "TEXTAREA",
  "A"
]);
function S4(e) {
  return w4.has(e.tagName) || e.tabIndex !== -1;
}
const pl = /* @__PURE__ */ new WeakSet();
function yw(e) {
  return (t) => {
    t.key === "Enter" && e(t);
  };
}
function bh(e, t) {
  e.dispatchEvent(new PointerEvent("pointer" + t, { isPrimary: !0, bubbles: !0 }));
}
const T4 = (e, t) => {
  const n = e.currentTarget;
  if (!n)
    return;
  const o = yw(() => {
    if (pl.has(n))
      return;
    bh(n, "down");
    const r = yw(() => {
      bh(n, "up");
    }), i = () => bh(n, "cancel");
    n.addEventListener("keyup", r, t), n.addEventListener("blur", i, t);
  });
  n.addEventListener("keydown", o, t), n.addEventListener("blur", () => n.removeEventListener("keydown", o), t);
};
function bw(e) {
  return hb(e) && !FO();
}
function C4(e, t, n = {}) {
  const [o, r, i] = XO(e, n), s = (l) => {
    const c = l.currentTarget;
    if (!bw(l) || pl.has(c))
      return;
    pl.add(c);
    const u = t(c, l), d = (h, g) => {
      window.removeEventListener("pointerup", f), window.removeEventListener("pointercancel", p), !(!bw(h) || !pl.has(c)) && (pl.delete(c), typeof u == "function" && u(h, { success: g }));
    }, f = (h) => {
      d(h, c === window || c === document || n.useGlobalTarget || ZO(c, h.target));
    }, p = (h) => {
      d(h, !1);
    };
    window.addEventListener("pointerup", f, r), window.addEventListener("pointercancel", p, r);
  };
  return o.forEach((l) => {
    (n.useGlobalTarget ? window : l).addEventListener("pointerdown", s, r), l instanceof HTMLElement && (l.addEventListener("focus", (u) => T4(u, r)), !S4(l) && !l.hasAttribute("tabindex") && (l.tabIndex = 0));
  }), i;
}
function vw(e, t, n) {
  const { props: o } = e;
  if (e.current instanceof HTMLButtonElement && e.current.disabled)
    return;
  e.animationState && o.whileTap && e.animationState.setActive("whileTap", n === "Start");
  const r = "onTap" + (n === "End" ? "" : n), i = o[r];
  i && Vt.postRender(() => i(t, zc(t)));
}
class E4 extends Ni {
  mount() {
    const { current: t } = this.node;
    t && (this.unmount = C4(t, (n, o) => (vw(this.node, o, "Start"), (r, { success: i }) => vw(this.node, r, i ? "End" : "Cancel")), { useGlobalTarget: this.node.props.globalTapTarget }));
  }
  unmount() {
  }
}
const Gm = /* @__PURE__ */ new WeakMap(), vh = /* @__PURE__ */ new WeakMap(), O4 = (e) => {
  const t = Gm.get(e.target);
  t && t(e);
}, P4 = (e) => {
  e.forEach(O4);
};
function R4({ root: e, ...t }) {
  const n = e || document;
  vh.has(n) || vh.set(n, {});
  const o = vh.get(n), r = JSON.stringify(t);
  return o[r] || (o[r] = new IntersectionObserver(P4, { root: e, ...t })), o[r];
}
function I4(e, t, n) {
  const o = R4(t);
  return Gm.set(e, n), o.observe(e), () => {
    Gm.delete(e), o.unobserve(e);
  };
}
const k4 = {
  some: 0,
  all: 1
};
class $4 extends Ni {
  constructor() {
    super(...arguments), this.hasEnteredView = !1, this.isInView = !1;
  }
  startObserver() {
    this.unmount();
    const { viewport: t = {} } = this.node.getProps(), { root: n, margin: o, amount: r = "some", once: i } = t, s = {
      root: n ? n.current : void 0,
      rootMargin: o,
      threshold: typeof r == "number" ? r : k4[r]
    }, l = (c) => {
      const { isIntersecting: u } = c;
      if (this.isInView === u || (this.isInView = u, i && !u && this.hasEnteredView))
        return;
      u && (this.hasEnteredView = !0), this.node.animationState && this.node.animationState.setActive("whileInView", u);
      const { onViewportEnter: d, onViewportLeave: f } = this.node.getProps(), p = u ? d : f;
      p && p(c);
    };
    return I4(this.node.current, s, l);
  }
  mount() {
    this.startObserver();
  }
  update() {
    if (typeof IntersectionObserver > "u")
      return;
    const { props: t, prevProps: n } = this.node;
    ["amount", "margin", "root"].some(N4(t, n)) && this.startObserver();
  }
  unmount() {
  }
}
function N4({ viewport: e = {} }, { viewport: t = {} } = {}) {
  return (n) => e[n] !== t[n];
}
const QO = {
  inView: {
    Feature: $4
  },
  tap: {
    Feature: E4
  },
  focus: {
    Feature: x4
  },
  hover: {
    Feature: v4
  }
}, M4 = {
  layout: {
    ProjectionNode: YO,
    MeasureLayout: jO
  }
}, Ym = { current: null }, JO = { current: !1 };
function A4() {
  if (JO.current = !0, !!_y)
    if (window.matchMedia) {
      const e = window.matchMedia("(prefers-reduced-motion)"), t = () => Ym.current = e.matches;
      e.addListener(t), t();
    } else
      Ym.current = !1;
}
const _4 = [...gO, Dn, xi], D4 = (e) => _4.find(mO(e)), L4 = /* @__PURE__ */ new WeakMap();
function B4(e, t, n) {
  for (const o in t) {
    const r = t[o], i = n[o];
    if (jn(r))
      e.addValue(o, r), process.env.NODE_ENV === "development" && Df(r.version === "12.7.3", `Attempting to mix Motion versions ${r.version} with 12.7.3 may not work as expected.`);
    else if (jn(i))
      e.addValue(o, sc(r, { owner: e }));
    else if (i !== r)
      if (e.hasValue(o)) {
        const s = e.getValue(o);
        s.liveStyle === !0 ? s.jump(r) : s.hasAnimated || s.set(r);
      } else {
        const s = e.getStaticValue(o);
        e.addValue(o, sc(s !== void 0 ? s : r, { owner: e }));
      }
  }
  for (const o in n)
    t[o] === void 0 && e.removeValue(o);
  return t;
}
const xw = [
  "AnimationStart",
  "AnimationComplete",
  "Update",
  "BeforeLayoutMeasure",
  "LayoutMeasure",
  "LayoutAnimationStart",
  "LayoutAnimationComplete"
];
class V4 {
  /**
   * This method takes React props and returns found MotionValues. For example, HTML
   * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.
   *
   * This isn't an abstract method as it needs calling in the constructor, but it is
   * intended to be one.
   */
  scrapeMotionValuesFromProps(t, n, o) {
    return {};
  }
  constructor({ parent: t, props: n, presenceContext: o, reducedMotionConfig: r, blockInitialAnimation: i, visualState: s }, l = {}) {
    this.current = null, this.children = /* @__PURE__ */ new Set(), this.isVariantNode = !1, this.isControllingVariants = !1, this.shouldReduceMotion = null, this.values = /* @__PURE__ */ new Map(), this.KeyframeResolver = ib, this.features = {}, this.valueSubscriptions = /* @__PURE__ */ new Map(), this.prevMotionValues = {}, this.events = {}, this.propEventSubscriptions = {}, this.notifyUpdate = () => this.notify("Update", this.latestValues), this.render = () => {
      this.current && (this.triggerBuild(), this.renderInstance(this.current, this.renderState, this.props.style, this.projection));
    }, this.renderScheduledAt = 0, this.scheduleRender = () => {
      const h = Cr.now();
      this.renderScheduledAt < h && (this.renderScheduledAt = h, Vt.render(this.render, !1, !0));
    };
    const { latestValues: c, renderState: u, onUpdate: d } = s;
    this.onUpdate = d, this.latestValues = c, this.baseTarget = { ...c }, this.initialValues = n.initial ? { ...c } : {}, this.renderState = u, this.parent = t, this.props = n, this.presenceContext = o, this.depth = t ? t.depth + 1 : 0, this.reducedMotionConfig = r, this.options = l, this.blockInitialAnimation = !!i, this.isControllingVariants = Vf(n), this.isVariantNode = $E(n), this.isVariantNode && (this.variantChildren = /* @__PURE__ */ new Set()), this.manuallyAnimateOnMount = !!(t && t.current);
    const { willChange: f, ...p } = this.scrapeMotionValuesFromProps(n, {}, this);
    for (const h in p) {
      const g = p[h];
      c[h] !== void 0 && jn(g) && g.set(c[h], !1);
    }
  }
  mount(t) {
    this.current = t, L4.set(t, this), this.projection && !this.projection.instance && this.projection.mount(t), this.parent && this.isVariantNode && !this.isControllingVariants && (this.removeFromVariantTree = this.parent.addVariantChild(this)), this.values.forEach((n, o) => this.bindToMotionValue(o, n)), JO.current || A4(), this.shouldReduceMotion = this.reducedMotionConfig === "never" ? !1 : this.reducedMotionConfig === "always" ? !0 : Ym.current, process.env.NODE_ENV !== "production" && Df(this.shouldReduceMotion !== !0, "You have Reduced Motion enabled on your device. Animations may not appear as expected."), this.parent && this.parent.children.add(this), this.update(this.props, this.presenceContext);
  }
  unmount() {
    this.projection && this.projection.unmount(), bi(this.notifyUpdate), bi(this.render), this.valueSubscriptions.forEach((t) => t()), this.valueSubscriptions.clear(), this.removeFromVariantTree && this.removeFromVariantTree(), this.parent && this.parent.children.delete(this);
    for (const t in this.events)
      this.events[t].clear();
    for (const t in this.features) {
      const n = this.features[t];
      n && (n.unmount(), n.isMounted = !1);
    }
    this.current = null;
  }
  bindToMotionValue(t, n) {
    this.valueSubscriptions.has(t) && this.valueSubscriptions.get(t)();
    const o = bs.has(t);
    o && this.onBindTransform && this.onBindTransform();
    const r = n.on("change", (l) => {
      this.latestValues[t] = l, this.props.onUpdate && Vt.preRender(this.notifyUpdate), o && this.projection && (this.projection.isTransformDirty = !0);
    }), i = n.on("renderRequest", this.scheduleRender);
    let s;
    window.MotionCheckAppearSync && (s = window.MotionCheckAppearSync(this, t, n)), this.valueSubscriptions.set(t, () => {
      r(), i(), s && s(), n.owner && n.stop();
    });
  }
  sortNodePosition(t) {
    return !this.current || !this.sortInstanceNodePosition || this.type !== t.type ? 0 : this.sortInstanceNodePosition(this.current, t.current);
  }
  updateFeatures() {
    let t = "animation";
    for (t in ma) {
      const n = ma[t];
      if (!n)
        continue;
      const { isEnabled: o, Feature: r } = n;
      if (!this.features[t] && r && o(this.props) && (this.features[t] = new r(this)), this.features[t]) {
        const i = this.features[t];
        i.isMounted ? i.update() : (i.mount(), i.isMounted = !0);
      }
    }
  }
  triggerBuild() {
    this.build(this.renderState, this.latestValues, this.props);
  }
  /**
   * Measure the current viewport box with or without transforms.
   * Only measures axis-aligned boxes, rotate and skew must be manually
   * removed with a re-render to work.
   */
  measureViewportBox() {
    return this.current ? this.measureInstanceViewportBox(this.current, this.props) : cn();
  }
  getStaticValue(t) {
    return this.latestValues[t];
  }
  setStaticValue(t, n) {
    this.latestValues[t] = n;
  }
  /**
   * Update the provided props. Ensure any newly-added motion values are
   * added to our map, old ones removed, and listeners updated.
   */
  update(t, n) {
    (t.transformTemplate || this.props.transformTemplate) && this.scheduleRender(), this.prevProps = this.props, this.props = t, this.prevPresenceContext = this.presenceContext, this.presenceContext = n;
    for (let o = 0; o < xw.length; o++) {
      const r = xw[o];
      this.propEventSubscriptions[r] && (this.propEventSubscriptions[r](), delete this.propEventSubscriptions[r]);
      const i = "on" + r, s = t[i];
      s && (this.propEventSubscriptions[r] = this.on(r, s));
    }
    this.prevMotionValues = B4(this, this.scrapeMotionValuesFromProps(t, this.prevProps, this), this.prevMotionValues), this.handleChildMotionValue && this.handleChildMotionValue(), this.onUpdate && this.onUpdate(this);
  }
  getProps() {
    return this.props;
  }
  /**
   * Returns the variant definition with a given name.
   */
  getVariant(t) {
    return this.props.variants ? this.props.variants[t] : void 0;
  }
  /**
   * Returns the defined default transition on this component.
   */
  getDefaultTransition() {
    return this.props.transition;
  }
  getTransformPagePoint() {
    return this.props.transformPagePoint;
  }
  getClosestVariantNode() {
    return this.isVariantNode ? this : this.parent ? this.parent.getClosestVariantNode() : void 0;
  }
  /**
   * Add a child visual element to our set of children.
   */
  addVariantChild(t) {
    const n = this.getClosestVariantNode();
    if (n)
      return n.variantChildren && n.variantChildren.add(t), () => n.variantChildren.delete(t);
  }
  /**
   * Add a motion value and bind it to this visual element.
   */
  addValue(t, n) {
    const o = this.values.get(t);
    n !== o && (o && this.removeValue(t), this.bindToMotionValue(t, n), this.values.set(t, n), this.latestValues[t] = n.get());
  }
  /**
   * Remove a motion value and unbind any active subscriptions.
   */
  removeValue(t) {
    this.values.delete(t);
    const n = this.valueSubscriptions.get(t);
    n && (n(), this.valueSubscriptions.delete(t)), delete this.latestValues[t], this.removeValueFromRenderState(t, this.renderState);
  }
  /**
   * Check whether we have a motion value for this key
   */
  hasValue(t) {
    return this.values.has(t);
  }
  getValue(t, n) {
    if (this.props.values && this.props.values[t])
      return this.props.values[t];
    let o = this.values.get(t);
    return o === void 0 && n !== void 0 && (o = sc(n === null ? void 0 : n, { owner: this }), this.addValue(t, o)), o;
  }
  /**
   * If we're trying to animate to a previously unencountered value,
   * we need to check for it in our state and as a last resort read it
   * directly from the instance (which might have performance implications).
   */
  readValue(t, n) {
    let o = this.latestValues[t] !== void 0 || !this.current ? this.latestValues[t] : this.getBaseTargetFromProps(this.props, t) ?? this.readValueFromInstance(this.current, t, this.options);
    return o != null && (typeof o == "string" && (pO(o) || oO(o)) ? o = parseFloat(o) : !D4(o) && xi.test(n) && (o = uO(t, n)), this.setBaseTarget(t, jn(o) ? o.get() : o)), jn(o) ? o.get() : o;
  }
  /**
   * Set the base target to later animate back to. This is currently
   * only hydrated on creation and when we first read a value.
   */
  setBaseTarget(t, n) {
    this.baseTarget[t] = n;
  }
  /**
   * Find the base target for a value thats been removed from all animation
   * props.
   */
  getBaseTarget(t) {
    var i;
    const { initial: n } = this.props;
    let o;
    if (typeof n == "string" || typeof n == "object") {
      const s = Xy(this.props, n, (i = this.presenceContext) == null ? void 0 : i.custom);
      s && (o = s[t]);
    }
    if (n && o !== void 0)
      return o;
    const r = this.getBaseTargetFromProps(this.props, t);
    return r !== void 0 && !jn(r) ? r : this.initialValues[t] !== void 0 && o === void 0 ? void 0 : this.baseTarget[t];
  }
  on(t, n) {
    return this.events[t] || (this.events[t] = new eb()), this.events[t].add(n);
  }
  notify(t, ...n) {
    this.events[t] && this.events[t].notify(...n);
  }
}
class eP extends V4 {
  constructor() {
    super(...arguments), this.KeyframeResolver = yO;
  }
  sortInstanceNodePosition(t, n) {
    return t.compareDocumentPosition(n) & 2 ? 1 : -1;
  }
  getBaseTargetFromProps(t, n) {
    return t.style ? t.style[n] : void 0;
  }
  removeValueFromRenderState(t, { vars: n, style: o }) {
    delete n[t], delete o[t];
  }
  handleChildMotionValue() {
    this.childSubscription && (this.childSubscription(), delete this.childSubscription);
    const { children: t } = this.props;
    jn(t) && (this.childSubscription = t.on("change", (n) => {
      this.current && (this.current.textContent = `${n}`);
    }));
  }
}
function F4(e) {
  return window.getComputedStyle(e);
}
class j4 extends eP {
  constructor() {
    super(...arguments), this.type = "html", this.renderInstance = zE;
  }
  readValueFromInstance(t, n) {
    if (bs.has(n))
      return jF(t, n);
    {
      const o = F4(t), r = (zy(n) ? o.getPropertyValue(n) : o[n]) || 0;
      return typeof r == "string" ? r.trim() : r;
    }
  }
  measureInstanceViewportBox(t, { transformPagePoint: n }) {
    return DO(t, n);
  }
  build(t, n, o) {
    Uy(t, n, o.transformTemplate);
  }
  scrapeMotionValuesFromProps(t, n, o) {
    return Zy(t, n, o);
  }
}
class z4 extends eP {
  constructor() {
    super(...arguments), this.type = "svg", this.isSVGTag = !1, this.measureInstanceViewportBox = cn, this.updateDimensions = () => {
      this.current && !this.renderState.dimensions && jE(this.current, this.renderState);
    };
  }
  getBaseTargetFromProps(t, n) {
    return t[n];
  }
  readValueFromInstance(t, n) {
    if (bs.has(n)) {
      const o = cO(n);
      return o && o.default || 0;
    }
    return n = HE.has(n) ? n : Fy(n), t.getAttribute(n);
  }
  scrapeMotionValuesFromProps(t, n, o) {
    return UE(t, n, o);
  }
  onBindTransform() {
    this.current && !this.renderState.dimensions && Vt.postRender(this.updateDimensions);
  }
  build(t, n, o) {
    Gy(t, n, this.isSVGTag, o.transformTemplate);
  }
  renderInstance(t, n, o, r) {
    WE(t, n, o, r);
  }
  mount(t) {
    this.isSVGTag = Yy(t.tagName), super.mount(t);
  }
}
const tP = (e, t) => Ky(e) ? new z4(t) : new j4(t, {
  allowProjection: e !== $g
}), H4 = /* @__PURE__ */ dF({
  ...kO,
  ...QO,
  ...g4,
  ...M4
}, tP), nP = /* @__PURE__ */ PV(H4), W4 = {
  renderer: tP,
  ...kO,
  ...QO
};
function oP(e = !1) {
  const [t, n] = Yt(e), o = Be(() => B$(() => n((r) => !r)), []);
  return et(() => {
    n(e);
  }, [e]), {
    isCollapsed: t,
    toggleCollapsed: o
  };
}
const rP = Pe(
  ({
    defaultIsCollapsed: e = !1,
    headerHeight: t = 50,
    width: n = 220,
    collapsedWidth: o = 64,
    renderHeader: r,
    renderContent: i,
    sx: s,
    collapseButtonSx: l
  }) => {
    const { isCollapsed: c, toggleCollapsed: u } = oP(e);
    return /* @__PURE__ */ O(TV, { features: W4, children: /* @__PURE__ */ O(
      nP.nav,
      {
        className: "VenomousUI-AdminSideNavMenu",
        initial: !1,
        animate: {
          width: c ? o : n
        },
        transition: {
          duration: 0.3,
          ease: "easeInOut"
        },
        style: {
          height: "100svh"
        },
        children: /* @__PURE__ */ Se(Wr, { isOutlined: !0, sx: { height: 1, width: 1, ...s }, children: [
          /* @__PURE__ */ Se(
            bn,
            {
              component: "header",
              row: !0,
              gap: 0,
              height: t,
              alignItems: "center",
              justifyContent: "space-between",
              px: "8px",
              mb: "8px",
              children: [
                r == null ? void 0 : r({ isCollapsed: c, toggleCollapsed: u }),
                /* @__PURE__ */ O(
                  Mn,
                  {
                    icon: c ? "solar:arrow-right-bold-duotone" : "solar:arrow-left-bold-duotone",
                    onClick: u,
                    isSquare: !0,
                    isGhost: !0,
                    iconWidth: 24,
                    sx: { transform: c ? "translateX(-4px)" : "none", ...l }
                  }
                )
              ]
            }
          ),
          i == null ? void 0 : i({ isCollapsed: c, toggleCollapsed: u })
        ] })
      }
    ) });
  }
);
rP.displayName = "CollapsedSidebar";
const iP = Pe(
  ({ children: e, renderTrigger: t, defaultIsCollapsed: n = !0, style: o }) => {
    const { isCollapsed: r, toggleCollapsed: i } = oP(n);
    return /* @__PURE__ */ Se(Jn, { children: [
      t({ isCollapsed: r, toggleCollapsed: i }),
      /* @__PURE__ */ O(xV, { mode: "wait", children: !r && /* @__PURE__ */ O(
        nP.div,
        {
          className: "VenomousUI-Collapse",
          initial: {
            opacity: n ? 0 : 1,
            height: n ? 0 : "auto",
            y: n ? -8 : 0
          },
          animate: {
            opacity: 1,
            height: "auto",
            y: 0
          },
          exit: {
            opacity: 0,
            height: 0,
            y: -8
          },
          transition: {
            duration: 0.3,
            ease: "easeInOut",
            height: {
              duration: 0.3,
              ease: "easeInOut"
            },
            opacity: {
              duration: 0.25,
              delay: 0.05
            }
          },
          style: {
            overflow: "hidden",
            willChange: "opacity, transform, height",
            width: "100%",
            lineBreak: "anywhere",
            ...o
          },
          children: /* @__PURE__ */ O("div", { className: "VenomousUI-Collapse-Content", children: e })
        },
        "collapse-content"
      ) })
    ] });
  }
);
iP.displayName = "Collapse";
const sP = ZA({
  createStyledComponent: Ce("div", {
    name: "MuiContainer",
    slot: "Root",
    overridesResolver: (e, t) => {
      const {
        ownerState: n
      } = e;
      return [t.root, t[`maxWidth${fe(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
    }
  }),
  useThemeProps: (e) => ut({
    props: e,
    name: "MuiContainer"
  })
});
process.env.NODE_ENV !== "production" && (sP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: a.bool,
  /**
   * Set the max-width to match the min-width of the current breakpoint.
   * This is useful if you'd prefer to design for a fixed set of sizes
   * instead of trying to accommodate a fully fluid viewport.
   * It's fluid by default.
   * @default false
   */
  fixed: a.bool,
  /**
   * Determine the max-width of the container.
   * The container width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'lg'
   */
  maxWidth: a.oneOfType([a.oneOf(["xs", "sm", "md", "lg", "xl", !1]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const U4 = Pe(({ children: e, maxWidth: t = "lg", ...n }) => /* @__PURE__ */ O(
  sP,
  {
    className: "VenomousUI-Container",
    disableGutters: !0,
    maxWidth: t === "fullwidth" ? !1 : t,
    ...n,
    children: e
  }
));
U4.displayName = "Container";
function q4(e, t, n) {
  const o = t.getBoundingClientRect(), r = n && n.getBoundingClientRect(), i = ir(t);
  let s;
  if (t.fakeTransform)
    s = t.fakeTransform;
  else {
    const u = i.getComputedStyle(t);
    s = u.getPropertyValue("-webkit-transform") || u.getPropertyValue("transform");
  }
  let l = 0, c = 0;
  if (s && s !== "none" && typeof s == "string") {
    const u = s.split("(")[1].split(")")[0].split(",");
    l = parseInt(u[4], 10), c = parseInt(u[5], 10);
  }
  return e === "left" ? r ? `translateX(${r.right + l - o.left}px)` : `translateX(${i.innerWidth + l - o.left}px)` : e === "right" ? r ? `translateX(-${o.right - r.left - l}px)` : `translateX(-${o.left + o.width - l}px)` : e === "up" ? r ? `translateY(${r.bottom + c - o.top}px)` : `translateY(${i.innerHeight + c - o.top}px)` : r ? `translateY(-${o.top - r.top + o.height - c}px)` : `translateY(-${o.top + o.height - c}px)`;
}
function aP(e) {
  return typeof e == "function" ? e() : e;
}
function Ou(e, t, n) {
  const o = aP(n), r = q4(e, t, o);
  r && (t.style.webkitTransform = r, t.style.transform = r);
}
const lP = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = Zr(), r = {
    enter: o.transitions.easing.easeOut,
    exit: o.transitions.easing.sharp
  }, i = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    addEndListener: s,
    appear: l = !0,
    children: c,
    container: u,
    direction: d = "down",
    easing: f = r,
    in: p,
    onEnter: h,
    onEntered: g,
    onEntering: m,
    onExit: y,
    onExited: b,
    onExiting: T,
    style: v,
    timeout: w = i,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: S = Ro,
    ...C
  } = t, E = $.useRef(null), P = yn(Oi(c), E, n), M = (V) => (D) => {
    V && (D === void 0 ? V(E.current) : V(E.current, D));
  }, x = M((V, D) => {
    Ou(d, V, u), cy(V), h && h(V, D);
  }), I = M((V, D) => {
    const B = sa({
      timeout: w,
      style: v,
      easing: f
    }, {
      mode: "enter"
    });
    V.style.webkitTransition = o.transitions.create("-webkit-transform", {
      ...B
    }), V.style.transition = o.transitions.create("transform", {
      ...B
    }), V.style.webkitTransform = "none", V.style.transform = "none", m && m(V, D);
  }), k = M(g), _ = M(T), R = M((V) => {
    const D = sa({
      timeout: w,
      style: v,
      easing: f
    }, {
      mode: "exit"
    });
    V.style.webkitTransition = o.transitions.create("-webkit-transform", D), V.style.transition = o.transitions.create("transform", D), Ou(d, V, u), y && y(V);
  }), A = M((V) => {
    V.style.webkitTransition = "", V.style.transition = "", b && b(V);
  }), N = (V) => {
    s && s(E.current, V);
  }, L = $.useCallback(() => {
    E.current && Ou(d, E.current, u);
  }, [d, u]);
  return $.useEffect(() => {
    if (p || d === "down" || d === "right")
      return;
    const V = Gg(() => {
      E.current && Ou(d, E.current, u);
    }), D = ir(E.current);
    return D.addEventListener("resize", V), () => {
      V.clear(), D.removeEventListener("resize", V);
    };
  }, [d, p, u]), $.useEffect(() => {
    p || L();
  }, [p, L]), /* @__PURE__ */ O(S, {
    nodeRef: E,
    onEnter: x,
    onEntered: k,
    onEntering: I,
    onExit: R,
    onExited: A,
    onExiting: _,
    addEndListener: N,
    appear: l,
    in: p,
    timeout: w,
    ...C,
    children: (V, {
      ownerState: D,
      ...B
    }) => /* @__PURE__ */ $.cloneElement(c, {
      ref: P,
      style: {
        visibility: V === "exited" && !p ? "hidden" : void 0,
        ...v,
        ...c.props.style
      },
      ...B
    })
  });
});
process.env.NODE_ENV !== "production" && (lP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: Ei.isRequired,
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the container the Slide is transitioning from.
   */
  container: rr(a.oneOfType([Rr, a.func]), (e) => {
    if (e.open) {
      const t = aP(e.container);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `container` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `container` prop provided to the component is invalid.", "It should be an HTML element instance."].join(`
`));
    }
    return null;
  }),
  /**
   * Direction the child node will enter from.
   * @default 'down'
   */
  direction: a.oneOf(["down", "left", "right", "up"]),
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   * @default {
   *   enter: theme.transitions.easing.easeOut,
   *   exit: theme.transitions.easing.sharp,
   * }
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function K4(e) {
  return ot("MuiDrawer", e);
}
at("MuiDrawer", ["root", "docked", "paper", "anchorLeft", "anchorRight", "anchorTop", "anchorBottom", "paperAnchorLeft", "paperAnchorRight", "paperAnchorTop", "paperAnchorBottom", "paperAnchorDockedLeft", "paperAnchorDockedRight", "paperAnchorDockedTop", "paperAnchorDockedBottom", "modal"]);
const cP = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, (n.variant === "permanent" || n.variant === "persistent") && t.docked, t.modal];
}, G4 = (e) => {
  const {
    classes: t,
    anchor: n,
    variant: o
  } = e, r = {
    root: ["root", `anchor${fe(n)}`],
    docked: [(o === "permanent" || o === "persistent") && "docked"],
    modal: ["modal"],
    paper: ["paper", `paperAnchor${fe(n)}`, o !== "temporary" && `paperAnchorDocked${fe(n)}`]
  };
  return st(r, K4, t);
}, Y4 = Ce(Af, {
  name: "MuiDrawer",
  slot: "Root",
  overridesResolver: cP
})(Ye(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.drawer
}))), X4 = Ce("div", {
  shouldForwardProp: Un,
  name: "MuiDrawer",
  slot: "Docked",
  skipVariantsResolver: !1,
  overridesResolver: cP
})({
  flex: "0 0 auto"
}), Z4 = Ce(Pi, {
  name: "MuiDrawer",
  slot: "Paper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.paper, t[`paperAnchor${fe(n.anchor)}`], n.variant !== "temporary" && t[`paperAnchorDocked${fe(n.anchor)}`]];
  }
})(Ye(({
  theme: e
}) => ({
  overflowY: "auto",
  display: "flex",
  flexDirection: "column",
  height: "100%",
  flex: "1 0 auto",
  zIndex: (e.vars || e).zIndex.drawer,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  // temporary style
  position: "fixed",
  top: 0,
  // We disable the focus ring for mouse, touch and keyboard users.
  // At some point, it would be better to keep it for keyboard users.
  // :focus-ring CSS pseudo-class will help.
  outline: 0,
  variants: [{
    props: {
      anchor: "left"
    },
    style: {
      left: 0
    }
  }, {
    props: {
      anchor: "top"
    },
    style: {
      top: 0,
      left: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    }
  }, {
    props: {
      anchor: "right"
    },
    style: {
      right: 0
    }
  }, {
    props: {
      anchor: "bottom"
    },
    style: {
      top: "auto",
      left: 0,
      bottom: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "left" && t.variant !== "temporary",
    style: {
      borderRight: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "top" && t.variant !== "temporary",
    style: {
      borderBottom: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "right" && t.variant !== "temporary",
    style: {
      borderLeft: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "bottom" && t.variant !== "temporary",
    style: {
      borderTop: `1px solid ${(e.vars || e).palette.divider}`
    }
  }]
}))), uP = {
  left: "right",
  right: "left",
  top: "down",
  bottom: "up"
};
function Q4(e) {
  return ["left", "right"].includes(e);
}
function J4({
  direction: e
}, t) {
  return e === "rtl" && Q4(t) ? uP[t] : t;
}
const dP = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiDrawer"
  }), r = Zr(), i = Ic(), s = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    anchor: l = "left",
    BackdropProps: c,
    children: u,
    className: d,
    elevation: f = 16,
    hideBackdrop: p = !1,
    ModalProps: {
      BackdropProps: h,
      ...g
    } = {},
    onClose: m,
    open: y = !1,
    PaperProps: b = {},
    SlideProps: T,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: v,
    transitionDuration: w = s,
    variant: S = "temporary",
    slots: C = {},
    slotProps: E = {},
    ...P
  } = o, M = $.useRef(!1);
  $.useEffect(() => {
    M.current = !0;
  }, []);
  const x = J4({
    direction: i ? "rtl" : "ltr"
  }, l), k = {
    ...o,
    anchor: l,
    elevation: f,
    open: y,
    variant: S,
    ...P
  }, _ = G4(k), R = {
    slots: {
      transition: v,
      ...C
    },
    slotProps: {
      paper: b,
      transition: T,
      ...E,
      backdrop: by(E.backdrop || {
        ...c,
        ...h
      }, {
        transitionDuration: w
      })
    }
  }, [A, N] = it("root", {
    ref: n,
    elementType: Y4,
    className: Ie(_.root, _.modal, d),
    shouldForwardComponentProp: !0,
    ownerState: k,
    externalForwardedProps: {
      ...R,
      ...P,
      ...g
    },
    additionalProps: {
      open: y,
      onClose: m,
      hideBackdrop: p,
      slots: {
        backdrop: R.slots.backdrop
      },
      slotProps: {
        backdrop: R.slotProps.backdrop
      }
    }
  }), [L, V] = it("paper", {
    elementType: Z4,
    shouldForwardComponentProp: !0,
    className: Ie(_.paper, b.className),
    ownerState: k,
    externalForwardedProps: R,
    additionalProps: {
      elevation: S === "temporary" ? f : 0,
      square: !0
    }
  }), [D, B] = it("docked", {
    elementType: X4,
    ref: n,
    className: Ie(_.root, _.docked, d),
    ownerState: k,
    externalForwardedProps: R,
    additionalProps: P
    // pass `other` here because `DockedSlot` is also a root slot for some variants
  }), [F, U] = it("transition", {
    elementType: lP,
    ownerState: k,
    externalForwardedProps: R,
    additionalProps: {
      in: y,
      direction: uP[x],
      timeout: w,
      appear: M.current
    }
  }), q = /* @__PURE__ */ O(L, {
    ...V,
    children: u
  });
  if (S === "permanent")
    return /* @__PURE__ */ O(D, {
      ...B,
      children: q
    });
  const G = /* @__PURE__ */ O(F, {
    ...U,
    children: q
  });
  return S === "persistent" ? /* @__PURE__ */ O(D, {
    ...B,
    children: G
  }) : /* @__PURE__ */ O(A, {
    ...N,
    children: G
  });
});
process.env.NODE_ENV !== "production" && (dP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Side from which the drawer will appear.
   * @default 'left'
   */
  anchor: a.oneOf(["bottom", "left", "right", "top"]),
  /**
   * @ignore
   */
  BackdropProps: a.object,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The elevation of the drawer.
   * @default 16
   */
  elevation: Tf,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: a.bool,
  /**
   * Props applied to the [`Modal`](https://mui.com/material-ui/api/modal/) element.
   * @default {}
   */
  ModalProps: a.object,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: a.bool,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @deprecated use the `slotProps.paper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PaperProps: a.object,
  /**
   * Props applied to the [`Slide`](https://mui.com/material-ui/api/slide/) element.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SlideProps: a.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    docked: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    docked: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * The variant to use.
   * @default 'temporary'
   */
  variant: a.oneOf(["permanent", "persistent", "temporary"])
});
const fP = Pe(
  ({ children: e, isOpen: t, closeDrawer: n, width: o, position: r = "right", sx: i }) => {
    const { paperCommonStyles: s } = ms();
    return /* @__PURE__ */ O(
      dP,
      {
        className: "VenomousUI-Drawer",
        open: t,
        onClose: n,
        anchor: r,
        keepMounted: !0,
        slotProps: {
          paper: {
            sx: {
              ...s,
              ...e3(r),
              width: o,
              p: "16px",
              ...i
            }
          }
        },
        children: /* @__PURE__ */ O("div", { style: { width: "100%" }, children: e })
      }
    );
  }
);
fP.displayName = "Drawer";
function e3(e) {
  switch (e) {
    case "right":
      return { borderTopRightRadius: "0px !important", borderBottomRightRadius: "0px !important" };
    case "top":
      return { borderTopLeftRadius: "0px !important", borderTopRightRadius: "0px !important" };
    case "bottom":
      return {
        borderBottomLeftRadius: "0px !important",
        borderBottomRightRadius: "0px !important"
      };
    case "left":
    default:
      return { borderTopLeftRadius: "0px !important", borderBottomLeftRadius: "0px !important" };
  }
}
function t3() {
  const [e, t] = Yt(!1), n = Be(() => {
    t(!0);
  }, []), o = Be(() => {
    t(!1);
  }, []), r = Be(() => {
    t((i) => !i);
  }, []);
  return {
    isOpen: e,
    setIsOpen: t,
    openDrawer: n,
    closeDrawer: o,
    toggleDrawer: r
  };
}
const pP = Pe(({ height: e = 50, title: t, closeDrawer: n }) => {
  const { paperCommonStyles: o } = ms();
  return /* @__PURE__ */ Se(
    bn,
    {
      className: "VenomousUI-DrawerHeader",
      row: !0,
      sx: {
        ...o,
        borderRadius: 0,
        height: e,
        width: "100%",
        position: "sticky",
        top: 0,
        left: 0,
        justifyContent: "space-between",
        transform: "translateY(-8px)"
      },
      children: [
        n && /* @__PURE__ */ O(
          Mn,
          {
            isCircle: !0,
            isGhost: !0,
            icon: "solar:close-circle-line-duotone",
            iconWidth: 24,
            color: "auto",
            onClick: n,
            sx: { width: 24, mr: "8px", ml: "-8px" }
          }
        ),
        /* @__PURE__ */ O(Rn, { text: t, isTitle: !0 })
      ]
    }
  );
});
pP.displayName = "DrawerHeader";
const jf = /* @__PURE__ */ $.createContext(void 0);
process.env.NODE_ENV !== "production" && (jf.displayName = "FormControlContext");
function Mi() {
  return $.useContext(jf);
}
function n3(e) {
  return ot("PrivateSwitchBase", e);
}
at("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);
const o3 = (e) => {
  const {
    classes: t,
    checked: n,
    disabled: o,
    edge: r
  } = e, i = {
    root: ["root", n && "checked", o && "disabled", r && `edge${fe(r)}`],
    input: ["input"]
  };
  return st(i, n3, t);
}, r3 = Ce(pa)({
  padding: 9,
  borderRadius: "50%",
  variants: [{
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "start" && t.size !== "small",
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "end" && t.size !== "small",
    style: {
      marginRight: -12
    }
  }]
}), i3 = Ce("input", {
  shouldForwardProp: Un
})({
  cursor: "inherit",
  position: "absolute",
  opacity: 0,
  width: "100%",
  height: "100%",
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
}), zf = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const {
    autoFocus: o,
    checked: r,
    checkedIcon: i,
    defaultChecked: s,
    disabled: l,
    disableFocusRipple: c = !1,
    edge: u = !1,
    icon: d,
    id: f,
    inputProps: p,
    inputRef: h,
    name: g,
    onBlur: m,
    onChange: y,
    onFocus: b,
    readOnly: T,
    required: v = !1,
    tabIndex: w,
    type: S,
    value: C,
    slots: E = {},
    slotProps: P = {},
    ...M
  } = t, [x, I] = ns({
    controlled: r,
    default: !!s,
    name: "SwitchBase",
    state: "checked"
  }), k = Mi(), _ = (K) => {
    b && b(K), k && k.onFocus && k.onFocus(K);
  }, R = (K) => {
    m && m(K), k && k.onBlur && k.onBlur(K);
  }, A = (K) => {
    if (K.nativeEvent.defaultPrevented)
      return;
    const te = K.target.checked;
    I(te), y && y(K, te);
  };
  let N = l;
  k && typeof N > "u" && (N = k.disabled);
  const L = S === "checkbox" || S === "radio", V = {
    ...t,
    checked: x,
    disabled: N,
    disableFocusRipple: c,
    edge: u
  }, D = o3(V), B = {
    slots: E,
    slotProps: {
      input: p,
      ...P
    }
  }, [F, U] = it("root", {
    ref: n,
    elementType: r3,
    className: D.root,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...B,
      component: "span",
      ...M
    },
    getSlotProps: (K) => ({
      ...K,
      onFocus: (te) => {
        var ne;
        (ne = K.onFocus) == null || ne.call(K, te), _(te);
      },
      onBlur: (te) => {
        var ne;
        (ne = K.onBlur) == null || ne.call(K, te), R(te);
      }
    }),
    ownerState: V,
    additionalProps: {
      centerRipple: !0,
      focusRipple: !c,
      disabled: N,
      role: void 0,
      tabIndex: null
    }
  }), [q, G] = it("input", {
    ref: h,
    elementType: i3,
    className: D.input,
    externalForwardedProps: B,
    getSlotProps: (K) => ({
      ...K,
      onChange: (te) => {
        var ne;
        (ne = K.onChange) == null || ne.call(K, te), A(te);
      }
    }),
    ownerState: V,
    additionalProps: {
      autoFocus: o,
      checked: r,
      defaultChecked: s,
      disabled: N,
      id: L ? f : void 0,
      name: g,
      readOnly: T,
      required: v,
      tabIndex: w,
      type: S,
      ...S === "checkbox" && C === void 0 ? {} : {
        value: C
      }
    }
  });
  return /* @__PURE__ */ Se(F, {
    ...U,
    children: [/* @__PURE__ */ O(q, {
      ...G
    }), x ? i : d]
  });
});
process.env.NODE_ENV !== "production" && (zf.propTypes = {
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: a.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * @ignore
   */
  defaultChecked: a.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: a.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: a.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: a.node.isRequired,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: uo,
  /*
   * @ignore
   */
  name: a.string,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: a.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    input: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.object,
  /**
   * @ignore
   */
  tabIndex: a.oneOfType([a.number, a.string]),
  /**
   * The input component prop `type`.
   */
  type: a.string.isRequired,
  /**
   * The value of the component.
   */
  value: a.any
});
const s3 = Qr(/* @__PURE__ */ O("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank"), a3 = Qr(/* @__PURE__ */ O("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox"), l3 = Qr(/* @__PURE__ */ O("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");
function c3(e) {
  return ot("MuiCheckbox", e);
}
const xh = at("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium"]), u3 = (e) => {
  const {
    classes: t,
    indeterminate: n,
    color: o,
    size: r
  } = e, i = {
    root: ["root", n && "indeterminate", `color${fe(o)}`, `size${fe(r)}`]
  }, s = st(i, c3, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...s
  };
}, d3 = Ce(zf, {
  shouldForwardProp: (e) => Un(e) || e === "classes",
  name: "MuiCheckbox",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.indeterminate && t.indeterminate, t[`size${fe(n.size)}`], n.color !== "default" && t[`color${fe(n.color)}`]];
  }
})(Ye(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  variants: [{
    props: {
      color: "default",
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : vt(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(Gt()).map(([t]) => ({
    props: {
      color: t,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : vt(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(Gt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${xh.checked}, &.${xh.indeterminate}`]: {
        color: (e.vars || e).palette[t].main
      },
      [`&.${xh.disabled}`]: {
        color: (e.vars || e).palette.action.disabled
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
}))), f3 = /* @__PURE__ */ O(a3, {}), p3 = /* @__PURE__ */ O(s3, {}), h3 = /* @__PURE__ */ O(l3, {}), hP = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiCheckbox"
  }), {
    checkedIcon: r = f3,
    color: i = "primary",
    icon: s = p3,
    indeterminate: l = !1,
    indeterminateIcon: c = h3,
    inputProps: u,
    size: d = "medium",
    disableRipple: f = !1,
    className: p,
    slots: h = {},
    slotProps: g = {},
    ...m
  } = o, y = l ? c : s, b = l ? c : r, T = {
    ...o,
    disableRipple: f,
    color: i,
    indeterminate: l,
    size: d
  }, v = u3(T), w = g.input ?? u, [S, C] = it("root", {
    ref: n,
    elementType: d3,
    className: Ie(v.root, p),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: h,
      slotProps: g,
      ...m
    },
    ownerState: T,
    additionalProps: {
      type: "checkbox",
      icon: /* @__PURE__ */ $.cloneElement(y, {
        fontSize: y.props.fontSize ?? d
      }),
      checkedIcon: /* @__PURE__ */ $.cloneElement(b, {
        fontSize: b.props.fontSize ?? d
      }),
      disableRipple: f,
      slots: h,
      slotProps: {
        input: by(typeof w == "function" ? w(T) : w, {
          "data-indeterminate": l
        })
      }
    }
  });
  return /* @__PURE__ */ O(S, {
    ...C,
    classes: v
  });
});
process.env.NODE_ENV !== "production" && (hP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * The icon to display when the component is checked.
   * @default <CheckBoxIcon />
   */
  checkedIcon: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: a.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <CheckBoxOutlineBlankIcon />
   */
  icon: a.node,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the `input`.
   * @default false
   */
  indeterminate: a.bool,
  /**
   * The icon to display when the component is indeterminate.
   * @default <IndeterminateCheckBoxIcon />
   */
  indeterminateIcon: a.node,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: a.object,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: a.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: a.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense checkbox styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    input: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: a.any
});
const cs = Pe(
  ({ label: e, elementId: t, tooltip: n, isDisabled: o, isError: r, isRequired: i }) => {
    const { textCommonStyles: s } = Mc({
      isTitle: !1,
      isLabel: !0,
      textColor: o ? "disabled" : r ? "error" : "auto"
    });
    return /* @__PURE__ */ Se(
      Ho,
      {
        className: "VenomousUI-Label",
        component: "label",
        htmlFor: t,
        sx: {
          ...s,
          cursor: o ? "not-allowed" : "pointer",
          display: "flex",
          alignItems: "center",
          lineHeight: "1.5rem"
        },
        children: [
          /* @__PURE__ */ O(
            Ho,
            {
              component: "i",
              sx: {
                width: "14px",
                marginLeft: "-14px",
                fontSize: "1.5rem",
                transform: "translateY(0.35rem)",
                opacity: i ? 1 : 0,
                color: "error.main"
              },
              children: "*"
            }
          ),
          e,
          n && /* @__PURE__ */ O(yy, { title: n, arrow: !0, placement: "top", children: /* @__PURE__ */ O(
            Eo,
            {
              icon: "solar:info-circle-bold",
              width: 16,
              color: r ? "error" : "primary",
              ml: "4px"
            }
          ) })
        ]
      }
    );
  }
);
cs.displayName = "Label";
const Hf = Pe(
  ({ startLabel: e, endLabel: t, labelsDirection: n = "row", renderElement: o, isDisabled: r, isError: i }) => {
    const s = Pa();
    return /* @__PURE__ */ Se(bn, { className: "VenomousUI-Labels", gap: 0, row: n === "row", children: [
      e && /* @__PURE__ */ O(cs, { label: e, elementId: s, isDisabled: r, isError: i }),
      o(s),
      t && /* @__PURE__ */ O(cs, { label: t, elementId: s, isDisabled: r, isError: i })
    ] });
  }
);
Hf.displayName = "Labels";
const mP = Pe(
  ({ value: e, onChange: t, isDisabled: n, isError: o, label: r, labelDirection: i = "end" }) => {
    const s = Be(
      (l) => /* @__PURE__ */ O(
        hP,
        {
          id: l,
          checked: e,
          onChange: (c) => t(c.target.checked),
          disabled: n,
          icon: /* @__PURE__ */ O(m3, { isDisabled: n, isError: o }),
          checkedIcon: /* @__PURE__ */ O(g3, { isDisabled: n, isError: o }),
          sx: {
            "& .MuiSwitch-track": { transition: "background-color 0s" },
            "& svg.MuiSvgIcon-root": { transform: "translate(-1px, 0px)" }
          }
        }
      ),
      [e, t, n, o]
    );
    return r ? /* @__PURE__ */ O(
      Hf,
      {
        labelsDirection: "row",
        startLabel: i === "start" ? r : "",
        endLabel: i === "end" ? r : "",
        isDisabled: n,
        isError: o,
        renderElement: s
      }
    ) : s();
  }
);
mP.displayName = "Checkbox";
const m3 = Pe(
  ({ isDisabled: e, isError: t }) => /* @__PURE__ */ O(
    ra,
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "32",
      height: "32",
      viewBox: "0 0 20 20",
      sx: {
        color: (n) => t ? n.palette.error.main : e ? n.palette.action.disabled : "auto"
      },
      children: /* @__PURE__ */ O(
        "path",
        {
          fill: "currentColor",
          d: "M3 6a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3zm3-2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"
        }
      )
    }
  )
), g3 = Pe(
  ({ isDisabled: e, isError: t }) => /* @__PURE__ */ O(
    ra,
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "32",
      height: "32",
      viewBox: "0 0 24 24",
      sx: {
        color: (n) => t ? n.palette.error.main : e ? n.palette.action.disabled : "auto"
      },
      children: /* @__PURE__ */ O(
        "path",
        {
          fill: "currentColor",
          d: "M6.25 3A3.25 3.25 0 0 0 3 6.25v11.5A3.25 3.25 0 0 0 6.25 21h11.5A3.25 3.25 0 0 0 21 17.75V6.25A3.25 3.25 0 0 0 17.75 3zm11.03 6.28l-6.754 6.747a.75.75 0 0 1-1.06 0L6.72 13.28a.75.75 0 0 1 1.06-1.06l2.217 2.216l6.223-6.217a.75.75 0 1 1 1.06 1.062"
        }
      )
    }
  )
);
var ww;
const y3 = Ce("fieldset", {
  shouldForwardProp: Un
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), b3 = Ce("legend", {
  shouldForwardProp: Un
})(Ye(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function gP(e) {
  const {
    children: t,
    classes: n,
    className: o,
    label: r,
    notched: i,
    ...s
  } = e, l = r != null && r !== "", c = {
    ...e,
    notched: i,
    withLabel: l
  };
  return /* @__PURE__ */ O(y3, {
    "aria-hidden": !0,
    className: o,
    ownerState: c,
    ...s,
    children: /* @__PURE__ */ O(b3, {
      ownerState: c,
      children: l ? /* @__PURE__ */ O("span", {
        children: r
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        ww || (ww = /* @__PURE__ */ O("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (gP.propTypes = {
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The label.
   */
  label: a.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: a.bool.isRequired,
  /**
   * @ignore
   */
  style: a.object
});
function Fa({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((o, r) => (o[r] = e[r], n && typeof e[r] > "u" && (o[r] = n[r]), o), {});
}
function Pu(e) {
  return parseInt(e, 10) || 0;
}
const v3 = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function x3(e) {
  for (const t in e)
    return !1;
  return !0;
}
function Sw(e) {
  return x3(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const yP = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const {
    onChange: o,
    maxRows: r,
    minRows: i = 1,
    style: s,
    value: l,
    ...c
  } = t, {
    current: u
  } = $.useRef(l != null), d = $.useRef(null), f = yn(n, d), p = $.useRef(null), h = $.useRef(null), g = $.useCallback(() => {
    const v = d.current, w = h.current;
    if (!v || !w)
      return;
    const C = ir(v).getComputedStyle(v);
    if (C.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    w.style.width = C.width, w.value = v.value || t.placeholder || "x", w.value.slice(-1) === `
` && (w.value += " ");
    const E = C.boxSizing, P = Pu(C.paddingBottom) + Pu(C.paddingTop), M = Pu(C.borderBottomWidth) + Pu(C.borderTopWidth), x = w.scrollHeight;
    w.value = "x";
    const I = w.scrollHeight;
    let k = x;
    i && (k = Math.max(Number(i) * I, k)), r && (k = Math.min(Number(r) * I, k)), k = Math.max(k, I);
    const _ = k + (E === "border-box" ? P + M : 0), R = Math.abs(k - x) <= 1;
    return {
      outerHeightStyle: _,
      overflowing: R
    };
  }, [r, i, t.placeholder]), m = oo(() => {
    const v = d.current, w = g();
    if (!v || !w || Sw(w))
      return !1;
    const S = w.outerHeightStyle;
    return p.current != null && p.current !== S;
  }), y = $.useCallback(() => {
    const v = d.current, w = g();
    if (!v || !w || Sw(w))
      return;
    const S = w.outerHeightStyle;
    p.current !== S && (p.current = S, v.style.height = `${S}px`), v.style.overflow = w.overflowing ? "hidden" : "";
  }, [g]), b = $.useRef(-1);
  or(() => {
    const v = Gg(y), w = d == null ? void 0 : d.current;
    if (!w)
      return;
    const S = ir(w);
    S.addEventListener("resize", v);
    let C;
    return typeof ResizeObserver < "u" && (C = new ResizeObserver(() => {
      m() && (C.unobserve(w), cancelAnimationFrame(b.current), y(), b.current = requestAnimationFrame(() => {
        C.observe(w);
      }));
    }), C.observe(w)), () => {
      v.clear(), cancelAnimationFrame(b.current), S.removeEventListener("resize", v), C && C.disconnect();
    };
  }, [g, y, m]), or(() => {
    y();
  });
  const T = (v) => {
    u || y(), o && o(v);
  };
  return /* @__PURE__ */ Se($.Fragment, {
    children: [/* @__PURE__ */ O("textarea", {
      value: l,
      onChange: T,
      ref: f,
      rows: i,
      style: s,
      ...c
    }), /* @__PURE__ */ O("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: h,
      tabIndex: -1,
      style: {
        ...v3.shadow,
        ...s,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (yP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: a.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  onChange: a.func,
  /**
   * @ignore
   */
  placeholder: a.string,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * @ignore
   */
  value: a.oneOfType([a.arrayOf(a.string), a.number, a.string])
});
function Tw(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function _d(e, t = !1) {
  return e && (Tw(e.value) && e.value !== "" || t && Tw(e.defaultValue) && e.defaultValue !== "");
}
function w3(e) {
  return e.startAdornment;
}
function S3(e) {
  return ot("MuiInputBase", e);
}
const ho = at("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var Cw;
const Wf = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${fe(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, Uf = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, T3 = (e) => {
  const {
    classes: t,
    color: n,
    disabled: o,
    error: r,
    endAdornment: i,
    focused: s,
    formControl: l,
    fullWidth: c,
    hiddenLabel: u,
    multiline: d,
    readOnly: f,
    size: p,
    startAdornment: h,
    type: g
  } = e, m = {
    root: ["root", `color${fe(n)}`, o && "disabled", r && "error", c && "fullWidth", s && "focused", l && "formControl", p && p !== "medium" && `size${fe(p)}`, d && "multiline", h && "adornedStart", i && "adornedEnd", u && "hiddenLabel", f && "readOnly"],
    input: ["input", o && "disabled", g === "search" && "inputTypeSearch", d && "inputMultiline", p === "small" && "inputSizeSmall", u && "inputHiddenLabel", h && "inputAdornedStart", i && "inputAdornedEnd", f && "readOnly"]
  };
  return st(m, S3, t);
}, qf = Ce("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: Wf
})(Ye(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${ho.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), Kf = Ce("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: Uf
})(Ye(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, o = {
    opacity: "0 !important"
  }, r = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${ho.formControl} &`]: {
      "&::-webkit-input-placeholder": o,
      "&::-moz-placeholder": o,
      // Firefox 19+
      "&::-ms-input-placeholder": o,
      // Edge
      "&:focus::-webkit-input-placeholder": r,
      "&:focus::-moz-placeholder": r,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": r
      // Edge
    },
    [`&.${ho.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: i
      }) => !i.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: i
      }) => i.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), Ew = ny({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), Gf = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": r,
    autoComplete: i,
    autoFocus: s,
    className: l,
    color: c,
    components: u = {},
    componentsProps: d = {},
    defaultValue: f,
    disabled: p,
    disableInjectingGlobalStyles: h,
    endAdornment: g,
    error: m,
    fullWidth: y = !1,
    id: b,
    inputComponent: T = "input",
    inputProps: v = {},
    inputRef: w,
    margin: S,
    maxRows: C,
    minRows: E,
    multiline: P = !1,
    name: M,
    onBlur: x,
    onChange: I,
    onClick: k,
    onFocus: _,
    onKeyDown: R,
    onKeyUp: A,
    placeholder: N,
    readOnly: L,
    renderSuffix: V,
    rows: D,
    size: B,
    slotProps: F = {},
    slots: U = {},
    startAdornment: q,
    type: G = "text",
    value: K,
    ...te
  } = o, ne = v.value != null ? v.value : K, {
    current: W
  } = $.useRef(ne != null), ee = $.useRef(), Y = $.useCallback((le) => {
    process.env.NODE_ENV !== "production" && le && le.nodeName !== "INPUT" && !le.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), re = yn(ee, w, v.ref, Y), [z, de] = $.useState(!1), ue = Mi();
  process.env.NODE_ENV !== "production" && $.useEffect(() => {
    if (ue)
      return ue.registerEffect();
  }, [ue]);
  const xe = Fa({
    props: o,
    muiFormControl: ue,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  xe.focused = ue ? ue.focused : z, $.useEffect(() => {
    !ue && p && z && (de(!1), x && x());
  }, [ue, p, z, x]);
  const _e = ue && ue.onFilled, we = ue && ue.onEmpty, De = $.useCallback((le) => {
    _d(le) ? _e && _e() : we && we();
  }, [_e, we]);
  or(() => {
    W && De({
      value: ne
    });
  }, [ne, De, W]);
  const Ee = (le) => {
    _ && _(le), v.onFocus && v.onFocus(le), ue && ue.onFocus ? ue.onFocus(le) : de(!0);
  }, Ve = (le) => {
    x && x(le), v.onBlur && v.onBlur(le), ue && ue.onBlur ? ue.onBlur(le) : de(!1);
  }, Me = (le, ...ae) => {
    if (!W) {
      const ce = le.target || ee.current;
      if (ce == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : Pr(1));
      De({
        value: ce.value
      });
    }
    v.onChange && v.onChange(le, ...ae), I && I(le, ...ae);
  };
  $.useEffect(() => {
    De(ee.current);
  }, []);
  const j = (le) => {
    ee.current && le.currentTarget === le.target && ee.current.focus(), k && k(le);
  };
  let J = T, ie = v;
  P && J === "input" && (D ? (process.env.NODE_ENV !== "production" && (E || C) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), ie = {
    type: void 0,
    minRows: D,
    maxRows: D,
    ...ie
  }) : ie = {
    type: void 0,
    maxRows: C,
    minRows: E,
    ...ie
  }, J = yP);
  const Q = (le) => {
    De(le.animationName === "mui-auto-fill-cancel" ? ee.current : {
      value: "x"
    });
  };
  $.useEffect(() => {
    ue && ue.setAdornedStart(!!q);
  }, [ue, q]);
  const H = {
    ...o,
    color: xe.color || "primary",
    disabled: xe.disabled,
    endAdornment: g,
    error: xe.error,
    focused: xe.focused,
    formControl: ue,
    fullWidth: y,
    hiddenLabel: xe.hiddenLabel,
    multiline: P,
    size: xe.size,
    startAdornment: q,
    type: G
  }, X = T3(H), se = U.root || u.Root || qf, ye = F.root || d.root || {}, he = U.input || u.Input || Kf;
  return ie = {
    ...ie,
    ...F.input ?? d.input
  }, /* @__PURE__ */ Se($.Fragment, {
    children: [!h && typeof Ew == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (Cw || (Cw = /* @__PURE__ */ O(Ew, {}))), /* @__PURE__ */ Se(se, {
      ...ye,
      ref: n,
      onClick: j,
      ...te,
      ...!Im(se) && {
        ownerState: {
          ...H,
          ...ye.ownerState
        }
      },
      className: Ie(X.root, ye.className, l, L && "MuiInputBase-readOnly"),
      children: [q, /* @__PURE__ */ O(jf.Provider, {
        value: null,
        children: /* @__PURE__ */ O(he, {
          "aria-invalid": xe.error,
          "aria-describedby": r,
          autoComplete: i,
          autoFocus: s,
          defaultValue: f,
          disabled: xe.disabled,
          id: b,
          onAnimationStart: Q,
          name: M,
          placeholder: N,
          readOnly: L,
          required: xe.required,
          rows: D,
          value: ne,
          onKeyDown: R,
          onKeyUp: A,
          type: G,
          ...ie,
          ...!Im(he) && {
            as: J,
            ownerState: {
              ...H,
              ...ie.ownerState
            }
          },
          ref: re,
          className: Ie(X.input, ie.className, L && "MuiInputBase-readOnly"),
          onBlur: Ve,
          onChange: Me,
          onFocus: Ee
        })
      }), g, V ? V({
        ...xe,
        startAdornment: q
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (Gf.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": a.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: Kg,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: uo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: a.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * @ignore
   */
  onKeyUp: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * @ignore
   */
  renderSuffix: a.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The size of the component.
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
function C3(e) {
  return ot("MuiOutlinedInput", e);
}
const Ao = {
  ...ho,
  ...at("MuiOutlinedInput", ["root", "notchedOutline", "input"])
}, E3 = (e) => {
  const {
    classes: t
  } = e, o = st({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, C3, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...o
  };
}, O3 = Ce(qf, {
  shouldForwardProp: (e) => Un(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: Wf
})(Ye(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${Ao.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${Ao.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${Ao.focused} .${Ao.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(Gt()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${Ao.focused} .${Ao.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${Ao.error} .${Ao.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${Ao.disabled} .${Ao.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: o
      }) => n.multiline && o === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), P3 = Ce(gP, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(Ye(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), R3 = Ce(Kf, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: Uf
})(Ye(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), Hc = /* @__PURE__ */ $.forwardRef(function(t, n) {
  var o;
  const r = ut({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: i = {},
    fullWidth: s = !1,
    inputComponent: l = "input",
    label: c,
    multiline: u = !1,
    notched: d,
    slots: f = {},
    type: p = "text",
    ...h
  } = r, g = E3(r), m = Mi(), y = Fa({
    props: r,
    muiFormControl: m,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), b = {
    ...r,
    color: y.color || "primary",
    disabled: y.disabled,
    error: y.error,
    focused: y.focused,
    formControl: m,
    fullWidth: s,
    hiddenLabel: y.hiddenLabel,
    multiline: u,
    size: y.size,
    type: p
  }, T = f.root ?? i.Root ?? O3, v = f.input ?? i.Input ?? R3;
  return /* @__PURE__ */ O(Gf, {
    slots: {
      root: T,
      input: v
    },
    renderSuffix: (w) => /* @__PURE__ */ O(P3, {
      ownerState: b,
      className: g.notchedOutline,
      label: c != null && c !== "" && y.required ? o || (o = /* @__PURE__ */ Se($.Fragment, {
        children: [c, " ", "*"]
      })) : c,
      notched: typeof d < "u" ? d : !!(w.startAdornment || w.filled || w.focused)
    }),
    fullWidth: s,
    inputComponent: l,
    multiline: u,
    ref: n,
    type: p,
    ...h,
    classes: {
      ...g,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (Hc.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: uo,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: a.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: a.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
Hc.muiName = "Input";
function mb({
  isDisabled: e,
  isError: t
}) {
  return {
    inputCommonStyle: Ge(
      () => ({
        borderRadius: "8px",
        minWidth: "200px",
        "& input": {
          cursor: e ? "not-allowed" : "text",
          color: (o) => e ? "disabled" : t ? o.palette.error.main : "inherit"
        }
      }),
      [e, t]
    )
  };
}
const Yf = Pe(
  ({
    label: e = "",
    tooltip: t,
    fullWidth: n = !1,
    value: o,
    onChange: r,
    isRequired: i,
    isDisabled: s,
    isError: l,
    errorMessage: c = "",
    sx: u,
    ...d
  }) => {
    const f = Pa(), { inputCommonStyle: p } = mb({
      isDisabled: s,
      isError: l
    }), { textCommonStyles: h } = Mc({
      isTitle: !1,
      isLabel: !0,
      textColor: s ? "disabled" : l ? "error" : "auto"
    });
    return /* @__PURE__ */ Se(bn, { gap: 0, width: n ? "100%" : "auto", children: [
      e && /* @__PURE__ */ O(
        cs,
        {
          label: e,
          elementId: f,
          tooltip: t,
          isRequired: i,
          isDisabled: s,
          isError: l
        }
      ),
      /* @__PURE__ */ O(
        Hc,
        {
          id: f,
          autoComplete: "off",
          fullWidth: n,
          size: "small",
          error: l,
          disabled: s,
          value: o,
          onChange: (g) => r(g.target.value, g),
          sx: { ...p, ...u },
          ...d
        }
      ),
      l && /* @__PURE__ */ O(
        Rn,
        {
          text: l ? c : "",
          isLabel: !0,
          sx: { ...h, lineHeight: "1.5rem" }
        }
      )
    ] });
  }
);
Yf.displayName = "Input";
const bP = Pe(
  ({ isError: e, fullWidth: t, value: n = 0, onChange: o, sx: r, min: i = 0, max: s = 1e3, step: l = 1, ...c }) => {
    const u = Be(
      (d) => {
        if (!d || isNaN(parseInt(d, 10))) {
          o(i);
          return;
        }
        const f = Math.abs(parseInt(d, 10));
        o(f);
      },
      [i, o]
    );
    return /* @__PURE__ */ O(
      Yf,
      {
        type: "number",
        fullWidth: t,
        isError: e,
        value: Math.abs(n).toString(),
        onChange: u,
        sx: {
          ...r
        },
        slotProps: {
          input: {
            type: "number",
            min: i,
            max: s,
            step: l
          }
        },
        ...c
      }
    );
  }
);
bP.displayName = "NumberInput";
function $r(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((o) => n.searchParams.append("args[]", o)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
const Xf = "$$material";
function I3(e) {
  return e == null || Object.keys(e).length === 0;
}
function vP(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e;
  return /* @__PURE__ */ O(RT, {
    styles: typeof t == "function" ? (r) => t(I3(r) ? n : r) : t
  });
}
process.env.NODE_ENV !== "production" && (vP.propTypes = {
  defaultTheme: a.object,
  styles: a.oneOfType([a.array, a.string, a.object, a.func])
});
/**
 * @mui/styled-engine v7.0.2
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function xP(e, t) {
  const n = hd(e, t);
  return process.env.NODE_ENV !== "production" ? (...o) => {
    const r = typeof e == "string" ? `"${e}"` : "component";
    return o.length === 0 ? console.error([`MUI: Seems like you called \`styled(${r})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : o.some((i) => i === void 0) && console.error(`MUI: the styled(${r})(...args) API requires all its args to be defined.`), n(...o);
  } : n;
}
function k3(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const Ow = [];
function Pw(e) {
  return Ow[0] = e, Ia(Ow);
}
function br(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function wP(e) {
  if (/* @__PURE__ */ $.isValidElement(e) || lo.isValidElementType(e) || !br(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = wP(e[n]);
  }), t;
}
function Wn(e, t, n = {
  clone: !0
}) {
  const o = n.clone ? {
    ...e
  } : e;
  return br(e) && br(t) && Object.keys(t).forEach((r) => {
    /* @__PURE__ */ $.isValidElement(t[r]) || lo.isValidElementType(t[r]) ? o[r] = t[r] : br(t[r]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, r) && br(e[r]) ? o[r] = Wn(e[r], t[r], n) : n.clone ? o[r] = br(t[r]) ? wP(t[r]) : t[r] : o[r] = t[r];
  }), o;
}
const $3 = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, o) => n.val - o.val), t.reduce((n, o) => ({
    ...n,
    [o.key]: o.val
  }), {});
};
function N3(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: o = 5,
    ...r
  } = e, i = $3(t), s = Object.keys(i);
  function l(p) {
    return `@media (min-width:${typeof t[p] == "number" ? t[p] : p}${n})`;
  }
  function c(p) {
    return `@media (max-width:${(typeof t[p] == "number" ? t[p] : p) - o / 100}${n})`;
  }
  function u(p, h) {
    const g = s.indexOf(h);
    return `@media (min-width:${typeof t[p] == "number" ? t[p] : p}${n}) and (max-width:${(g !== -1 && typeof t[s[g]] == "number" ? t[s[g]] : h) - o / 100}${n})`;
  }
  function d(p) {
    return s.indexOf(p) + 1 < s.length ? u(p, s[s.indexOf(p) + 1]) : l(p);
  }
  function f(p) {
    const h = s.indexOf(p);
    return h === 0 ? l(s[1]) : h === s.length - 1 ? c(s[h]) : u(p, s[s.indexOf(p) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: s,
    values: i,
    up: l,
    down: c,
    between: u,
    only: d,
    not: f,
    unit: n,
    ...r
  };
}
function M3(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((o) => o.startsWith("@container")).sort((o, r) => {
    var s, l;
    const i = /min-width:\s*([0-9.]+)/;
    return +(((s = o.match(i)) == null ? void 0 : s[1]) || 0) - +(((l = r.match(i)) == null ? void 0 : l[1]) || 0);
  });
  return n.length ? n.reduce((o, r) => {
    const i = t[r];
    return delete o[r], o[r] = i, o;
  }, {
    ...t
  }) : t;
}
function A3(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function _3(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : $r(18, `(${t})`));
    return null;
  }
  const [, o, r] = n, i = Number.isNaN(+o) ? o || 0 : +o;
  return e.containerQueries(r).up(i);
}
function D3(e) {
  const t = (i, s) => i.replace("@media", s ? `@container ${s}` : "@container");
  function n(i, s) {
    i.up = (...l) => t(e.breakpoints.up(...l), s), i.down = (...l) => t(e.breakpoints.down(...l), s), i.between = (...l) => t(e.breakpoints.between(...l), s), i.only = (...l) => t(e.breakpoints.only(...l), s), i.not = (...l) => {
      const c = t(e.breakpoints.not(...l), s);
      return c.includes("not all and") ? c.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : c;
    };
  }
  const o = {}, r = (i) => (n(o, i), o);
  return n(r), {
    ...e,
    containerQueries: r
  };
}
const L3 = {
  borderRadius: 4
}, Ai = process.env.NODE_ENV !== "production" ? a.oneOfType([a.number, a.string, a.object, a.array]) : {};
function Al(e, t) {
  return t ? Wn(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const Zf = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, Rw = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${Zf[e]}px)`
}, B3 = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : Zf[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function Kr(e, t, n) {
  const o = e.theme || {};
  if (Array.isArray(t)) {
    const i = o.breakpoints || Rw;
    return t.reduce((s, l, c) => (s[i.up(i.keys[c])] = n(t[c]), s), {});
  }
  if (typeof t == "object") {
    const i = o.breakpoints || Rw;
    return Object.keys(t).reduce((s, l) => {
      if (A3(i.keys, l)) {
        const c = _3(o.containerQueries ? o : B3, l);
        c && (s[c] = n(t[l], l));
      } else if (Object.keys(i.values || Zf).includes(l)) {
        const c = i.up(l);
        s[c] = n(t[l], l);
      } else {
        const c = l;
        s[c] = t[c];
      }
      return s;
    }, {});
  }
  return n(t);
}
function V3(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((o, r) => {
    const i = e.up(r);
    return o[i] = {}, o;
  }, {})) || {};
}
function F3(e, t) {
  return e.reduce((n, o) => {
    const r = n[o];
    return (!r || Object.keys(r).length === 0) && delete n[o], n;
  }, t);
}
function dn(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : $r(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function Qf(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const o = `vars.${t}`.split(".").reduce((r, i) => r && r[i] ? r[i] : null, e);
    if (o != null)
      return o;
  }
  return t.split(".").reduce((o, r) => o && o[r] != null ? o[r] : null, e);
}
function Dd(e, t, n, o = n) {
  let r;
  return typeof e == "function" ? r = e(n) : Array.isArray(e) ? r = e[n] || o : r = Qf(e, n) || o, t && (r = t(r, o, e)), r;
}
function pn(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: o,
    transform: r
  } = e, i = (s) => {
    if (s[t] == null)
      return null;
    const l = s[t], c = s.theme, u = Qf(c, o) || {};
    return Kr(s, l, (f) => {
      let p = Dd(u, r, f);
      return f === p && typeof f == "string" && (p = Dd(u, r, `${t}${f === "default" ? "" : dn(f)}`, f)), n === !1 ? p : {
        [n]: p
      };
    });
  };
  return i.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: Ai
  } : {}, i.filterProps = [t], i;
}
function j3(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const z3 = {
  m: "margin",
  p: "padding"
}, H3 = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, Iw = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, W3 = j3((e) => {
  if (e.length > 2)
    if (Iw[e])
      e = Iw[e];
    else
      return [e];
  const [t, n] = e.split(""), o = z3[t], r = H3[n] || "";
  return Array.isArray(r) ? r.map((i) => o + i) : [o + r];
}), Jf = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], ep = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], U3 = [...Jf, ...ep];
function Wc(e, t, n, o) {
  const r = Qf(e, t, !0) ?? n;
  return typeof r == "number" || typeof r == "string" ? (i) => typeof i == "string" ? i : (process.env.NODE_ENV !== "production" && typeof i != "number" && console.error(`MUI: Expected ${o} argument to be a number or a string, got ${i}.`), typeof r == "string" ? r.startsWith("var(") && i === 0 ? 0 : r.startsWith("var(") && i === 1 ? r : `calc(${i} * ${r})` : r * i) : Array.isArray(r) ? (i) => {
    if (typeof i == "string")
      return i;
    const s = Math.abs(i);
    process.env.NODE_ENV !== "production" && (Number.isInteger(s) ? s > r.length - 1 && console.error([`MUI: The value provided (${s}) overflows.`, `The supported values are: ${JSON.stringify(r)}.`, `${s} > ${r.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const l = r[s];
    return i >= 0 ? l : typeof l == "number" ? -l : typeof l == "string" && l.startsWith("var(") ? `calc(-1 * ${l})` : `-${l}`;
  } : typeof r == "function" ? r : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${r}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function gb(e) {
  return Wc(e, "spacing", 8, "spacing");
}
function Uc(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function q3(e, t) {
  return (n) => e.reduce((o, r) => (o[r] = Uc(t, n), o), {});
}
function K3(e, t, n, o) {
  if (!t.includes(n))
    return null;
  const r = W3(n), i = q3(r, o), s = e[n];
  return Kr(e, s, i);
}
function SP(e, t) {
  const n = gb(e.theme);
  return Object.keys(e).map((o) => K3(e, t, o, n)).reduce(Al, {});
}
function sn(e) {
  return SP(e, Jf);
}
sn.propTypes = process.env.NODE_ENV !== "production" ? Jf.reduce((e, t) => (e[t] = Ai, e), {}) : {};
sn.filterProps = Jf;
function an(e) {
  return SP(e, ep);
}
an.propTypes = process.env.NODE_ENV !== "production" ? ep.reduce((e, t) => (e[t] = Ai, e), {}) : {};
an.filterProps = ep;
process.env.NODE_ENV !== "production" && U3.reduce((e, t) => (e[t] = Ai, e), {});
function TP(e = 8, t = gb({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...o) => (process.env.NODE_ENV !== "production" && (o.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${o.length}`)), (o.length === 0 ? [1] : o).map((i) => {
    const s = t(i);
    return typeof s == "number" ? `${s}px` : s;
  }).join(" "));
  return n.mui = !0, n;
}
function tp(...e) {
  const t = e.reduce((o, r) => (r.filterProps.forEach((i) => {
    o[i] = r;
  }), o), {}), n = (o) => Object.keys(o).reduce((r, i) => t[i] ? Al(r, t[i](o)) : r, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((o, r) => Object.assign(o, r.propTypes), {}) : {}, n.filterProps = e.reduce((o, r) => o.concat(r.filterProps), []), n;
}
function Lo(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function Ko(e, t) {
  return pn({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const G3 = Ko("border", Lo), Y3 = Ko("borderTop", Lo), X3 = Ko("borderRight", Lo), Z3 = Ko("borderBottom", Lo), Q3 = Ko("borderLeft", Lo), J3 = Ko("borderColor"), eH = Ko("borderTopColor"), tH = Ko("borderRightColor"), nH = Ko("borderBottomColor"), oH = Ko("borderLeftColor"), rH = Ko("outline", Lo), iH = Ko("outlineColor"), np = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = Wc(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (o) => ({
      borderRadius: Uc(t, o)
    });
    return Kr(e, e.borderRadius, n);
  }
  return null;
};
np.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: Ai
} : {};
np.filterProps = ["borderRadius"];
tp(G3, Y3, X3, Z3, Q3, J3, eH, tH, nH, oH, np, rH, iH);
const op = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = Wc(e.theme, "spacing", 8, "gap"), n = (o) => ({
      gap: Uc(t, o)
    });
    return Kr(e, e.gap, n);
  }
  return null;
};
op.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: Ai
} : {};
op.filterProps = ["gap"];
const rp = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = Wc(e.theme, "spacing", 8, "columnGap"), n = (o) => ({
      columnGap: Uc(t, o)
    });
    return Kr(e, e.columnGap, n);
  }
  return null;
};
rp.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: Ai
} : {};
rp.filterProps = ["columnGap"];
const ip = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = Wc(e.theme, "spacing", 8, "rowGap"), n = (o) => ({
      rowGap: Uc(t, o)
    });
    return Kr(e, e.rowGap, n);
  }
  return null;
};
ip.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: Ai
} : {};
ip.filterProps = ["rowGap"];
const sH = pn({
  prop: "gridColumn"
}), aH = pn({
  prop: "gridRow"
}), lH = pn({
  prop: "gridAutoFlow"
}), cH = pn({
  prop: "gridAutoColumns"
}), uH = pn({
  prop: "gridAutoRows"
}), dH = pn({
  prop: "gridTemplateColumns"
}), fH = pn({
  prop: "gridTemplateRows"
}), pH = pn({
  prop: "gridTemplateAreas"
}), hH = pn({
  prop: "gridArea"
});
tp(op, rp, ip, sH, aH, lH, cH, uH, dH, fH, pH, hH);
function Js(e, t) {
  return t === "grey" ? t : e;
}
const mH = pn({
  prop: "color",
  themeKey: "palette",
  transform: Js
}), gH = pn({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: Js
}), yH = pn({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: Js
});
tp(mH, gH, yH);
function vo(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const bH = pn({
  prop: "width",
  transform: vo
}), yb = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var r, i, s, l, c;
      const o = ((s = (i = (r = e.theme) == null ? void 0 : r.breakpoints) == null ? void 0 : i.values) == null ? void 0 : s[n]) || Zf[n];
      return o ? ((c = (l = e.theme) == null ? void 0 : l.breakpoints) == null ? void 0 : c.unit) !== "px" ? {
        maxWidth: `${o}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: o
      } : {
        maxWidth: vo(n)
      };
    };
    return Kr(e, e.maxWidth, t);
  }
  return null;
};
yb.filterProps = ["maxWidth"];
const vH = pn({
  prop: "minWidth",
  transform: vo
}), xH = pn({
  prop: "height",
  transform: vo
}), wH = pn({
  prop: "maxHeight",
  transform: vo
}), SH = pn({
  prop: "minHeight",
  transform: vo
});
pn({
  prop: "size",
  cssProperty: "width",
  transform: vo
});
pn({
  prop: "size",
  cssProperty: "height",
  transform: vo
});
const TH = pn({
  prop: "boxSizing"
});
tp(bH, yb, vH, xH, wH, SH, TH);
const qc = {
  // borders
  border: {
    themeKey: "borders",
    transform: Lo
  },
  borderTop: {
    themeKey: "borders",
    transform: Lo
  },
  borderRight: {
    themeKey: "borders",
    transform: Lo
  },
  borderBottom: {
    themeKey: "borders",
    transform: Lo
  },
  borderLeft: {
    themeKey: "borders",
    transform: Lo
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: Lo
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: np
  },
  // palette
  color: {
    themeKey: "palette",
    transform: Js
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: Js
  },
  backgroundColor: {
    themeKey: "palette",
    transform: Js
  },
  // spacing
  p: {
    style: an
  },
  pt: {
    style: an
  },
  pr: {
    style: an
  },
  pb: {
    style: an
  },
  pl: {
    style: an
  },
  px: {
    style: an
  },
  py: {
    style: an
  },
  padding: {
    style: an
  },
  paddingTop: {
    style: an
  },
  paddingRight: {
    style: an
  },
  paddingBottom: {
    style: an
  },
  paddingLeft: {
    style: an
  },
  paddingX: {
    style: an
  },
  paddingY: {
    style: an
  },
  paddingInline: {
    style: an
  },
  paddingInlineStart: {
    style: an
  },
  paddingInlineEnd: {
    style: an
  },
  paddingBlock: {
    style: an
  },
  paddingBlockStart: {
    style: an
  },
  paddingBlockEnd: {
    style: an
  },
  m: {
    style: sn
  },
  mt: {
    style: sn
  },
  mr: {
    style: sn
  },
  mb: {
    style: sn
  },
  ml: {
    style: sn
  },
  mx: {
    style: sn
  },
  my: {
    style: sn
  },
  margin: {
    style: sn
  },
  marginTop: {
    style: sn
  },
  marginRight: {
    style: sn
  },
  marginBottom: {
    style: sn
  },
  marginLeft: {
    style: sn
  },
  marginX: {
    style: sn
  },
  marginY: {
    style: sn
  },
  marginInline: {
    style: sn
  },
  marginInlineStart: {
    style: sn
  },
  marginInlineEnd: {
    style: sn
  },
  marginBlock: {
    style: sn
  },
  marginBlockStart: {
    style: sn
  },
  marginBlockEnd: {
    style: sn
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: op
  },
  rowGap: {
    style: ip
  },
  columnGap: {
    style: rp
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: vo
  },
  maxWidth: {
    style: yb
  },
  minWidth: {
    transform: vo
  },
  height: {
    transform: vo
  },
  maxHeight: {
    transform: vo
  },
  minHeight: {
    transform: vo
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function CH(...e) {
  const t = e.reduce((o, r) => o.concat(Object.keys(r)), []), n = new Set(t);
  return e.every((o) => n.size === Object.keys(o).length);
}
function EH(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function OH() {
  function e(n, o, r, i) {
    const s = {
      [n]: o,
      theme: r
    }, l = i[n];
    if (!l)
      return {
        [n]: o
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: d,
      style: f
    } = l;
    if (o == null)
      return null;
    if (u === "typography" && o === "inherit")
      return {
        [n]: o
      };
    const p = Qf(r, u) || {};
    return f ? f(s) : Kr(s, o, (g) => {
      let m = Dd(p, d, g);
      return g === m && typeof g == "string" && (m = Dd(p, d, `${n}${g === "default" ? "" : dn(g)}`, g)), c === !1 ? m : {
        [c]: m
      };
    });
  }
  function t(n) {
    const {
      sx: o,
      theme: r = {}
    } = n || {};
    if (!o)
      return null;
    const i = r.unstable_sxConfig ?? qc;
    function s(l) {
      let c = l;
      if (typeof l == "function")
        c = l(r);
      else if (typeof l != "object")
        return l;
      if (!c)
        return null;
      const u = V3(r.breakpoints), d = Object.keys(u);
      let f = u;
      return Object.keys(c).forEach((p) => {
        const h = EH(c[p], r);
        if (h != null)
          if (typeof h == "object")
            if (i[p])
              f = Al(f, e(p, h, r, i));
            else {
              const g = Kr({
                theme: r
              }, h, (m) => ({
                [p]: m
              }));
              CH(g, h) ? f[p] = t({
                sx: h,
                theme: r
              }) : f = Al(f, g);
            }
          else
            f = Al(f, e(p, h, r, i));
      }), M3(r, F3(d, f));
    }
    return Array.isArray(o) ? o.map(s) : s(o);
  }
  return t;
}
const us = OH();
us.filterProps = ["sx"];
function PH(e, t) {
  var o;
  const n = this;
  if (n.vars) {
    if (!((o = n.colorSchemes) != null && o[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let r = n.getColorSchemeSelector(e);
    return r === "&" ? t : ((r.includes("data-") || r.includes(".")) && (r = `*:where(${r.replace(/\s*&$/, "")}) &`), {
      [r]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function bb(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: o = {},
    spacing: r,
    shape: i = {},
    ...s
  } = e, l = N3(n), c = TP(r);
  let u = Wn({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...o
    },
    spacing: c,
    shape: {
      ...L3,
      ...i
    }
  }, s);
  return u = D3(u), u.applyStyles = PH, u = t.reduce((d, f) => Wn(d, f), u), u.unstable_sxConfig = {
    ...qc,
    ...s == null ? void 0 : s.unstable_sxConfig
  }, u.unstable_sx = function(f) {
    return us({
      sx: f,
      theme: this
    });
  }, u;
}
function RH(e) {
  return Object.keys(e).length === 0;
}
function IH(e = null) {
  const t = $.useContext(ka);
  return !t || RH(t) ? e : t;
}
const kH = bb();
function vb(e = kH) {
  return IH(e);
}
function CP({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const o = vb(n), r = typeof e == "function" ? e(t && o[t] || o) : e;
  return /* @__PURE__ */ O(vP, {
    styles: r
  });
}
process.env.NODE_ENV !== "production" && (CP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: a.object,
  /**
   * @ignore
   */
  styles: a.oneOfType([a.array, a.func, a.number, a.object, a.string, a.bool]),
  /**
   * @ignore
   */
  themeId: a.string
});
const $H = (e) => {
  var o;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((o = e == null ? void 0 : e.theme) == null ? void 0 : o.unstable_sxConfig) ?? qc;
  return Object.keys(e).forEach((r) => {
    n[r] ? t.systemProps[r] = e[r] : t.otherProps[r] = e[r];
  }), t;
};
function NH(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: o,
    otherProps: r
  } = $H(n);
  let i;
  return Array.isArray(t) ? i = [o, ...t] : typeof t == "function" ? i = (...s) => {
    const l = t(...s);
    return br(l) ? {
      ...o,
      ...l
    } : o;
  } : i = {
    ...o,
    ...t
  }, {
    ...r,
    sx: i
  };
}
const kw = (e) => e, MH = () => {
  let e = kw;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = kw;
    }
  };
}, EP = MH();
function AH(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: o = "MuiBox-root",
    generateClassName: r
  } = e, i = xP("div", {
    shouldForwardProp: (l) => l !== "theme" && l !== "sx" && l !== "as"
  })(us);
  return /* @__PURE__ */ $.forwardRef(function(c, u) {
    const d = vb(n), {
      className: f,
      component: p = "div",
      ...h
    } = NH(c);
    return /* @__PURE__ */ O(i, {
      as: p,
      ref: u,
      className: Ie(f, r ? r(o) : o),
      theme: t && d[t] || d,
      ...h
    });
  });
}
const _H = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function vn(e, t, n = "Mui") {
  const o = _H[t];
  return o ? `${n}-${o}` : `${EP.generate(e)}-${t}`;
}
function Cn(e, t, n = "Mui") {
  const o = {};
  return t.forEach((r) => {
    o[r] = vn(e, r, n);
  }), o;
}
function OP(e, t = "") {
  return e.displayName || e.name || t;
}
function $w(e, t, n) {
  const o = OP(t);
  return e.displayName || (o !== "" ? `${n}(${o})` : n);
}
function DH(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return OP(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case lo.ForwardRef:
          return $w(e, e.render, "ForwardRef");
        case lo.Memo:
          return $w(e, e.type, "memo");
        default:
          return;
      }
  }
}
function PP(e) {
  const {
    variants: t,
    ...n
  } = e, o = {
    variants: t,
    style: Pw(n),
    isProcessed: !0
  };
  return o.style === n || t && t.forEach((r) => {
    typeof r.style != "function" && (r.style = Pw(r.style));
  }), o;
}
const LH = bb();
function wh(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function BH(e) {
  return e ? (t, n) => n[e] : null;
}
function VH(e, t, n) {
  e.theme = HH(e.theme) ? n : e.theme[t] || e.theme;
}
function rd(e, t) {
  const n = typeof t == "function" ? t(e) : t;
  if (Array.isArray(n))
    return n.flatMap((o) => rd(e, o));
  if (Array.isArray(n == null ? void 0 : n.variants)) {
    let o;
    if (n.isProcessed)
      o = n.style;
    else {
      const {
        variants: r,
        ...i
      } = n;
      o = i;
    }
    return RP(e, n.variants, [o]);
  }
  return n != null && n.isProcessed ? n.style : n;
}
function RP(e, t, n = []) {
  var r;
  let o;
  e: for (let i = 0; i < t.length; i += 1) {
    const s = t[i];
    if (typeof s.props == "function") {
      if (o ?? (o = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !s.props(o))
        continue;
    } else
      for (const l in s.props)
        if (e[l] !== s.props[l] && ((r = e.ownerState) == null ? void 0 : r[l]) !== s.props[l])
          continue e;
    typeof s.style == "function" ? (o ?? (o = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(s.style(o))) : n.push(s.style);
  }
  return n;
}
function FH(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = LH,
    rootShouldForwardProp: o = wh,
    slotShouldForwardProp: r = wh
  } = e;
  function i(l) {
    VH(l, t, n);
  }
  return (l, c = {}) => {
    k3(l, (S) => S.filter((C) => C !== us));
    const {
      name: u,
      slot: d,
      skipVariantsResolver: f,
      skipSx: p,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: h = BH(IP(d)),
      ...g
    } = c, m = f !== void 0 ? f : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      d && d !== "Root" && d !== "root" || !1
    ), y = p || !1;
    let b = wh;
    d === "Root" || d === "root" ? b = o : d ? b = r : WH(l) && (b = void 0);
    const T = xP(l, {
      shouldForwardProp: b,
      label: zH(u, d),
      ...g
    }), v = (S) => {
      if (typeof S == "function" && S.__emotion_real !== S)
        return function(E) {
          return rd(E, S);
        };
      if (br(S)) {
        const C = PP(S);
        return C.variants ? function(P) {
          return rd(P, C);
        } : C.style;
      }
      return S;
    }, w = (...S) => {
      const C = [], E = S.map(v), P = [];
      if (C.push(i), u && h && P.push(function(k) {
        var N, L;
        const R = (L = (N = k.theme.components) == null ? void 0 : N[u]) == null ? void 0 : L.styleOverrides;
        if (!R)
          return null;
        const A = {};
        for (const V in R)
          A[V] = rd(k, R[V]);
        return h(k, A);
      }), u && !m && P.push(function(k) {
        var A, N;
        const _ = k.theme, R = (N = (A = _ == null ? void 0 : _.components) == null ? void 0 : A[u]) == null ? void 0 : N.variants;
        return R ? RP(k, R) : null;
      }), y || P.push(us), Array.isArray(E[0])) {
        const I = E.shift(), k = new Array(C.length).fill(""), _ = new Array(P.length).fill("");
        let R;
        R = [...k, ...I, ..._], R.raw = [...k, ...I.raw, ..._], C.unshift(R);
      }
      const M = [...C, ...E, ...P], x = T(...M);
      return l.muiName && (x.muiName = l.muiName), process.env.NODE_ENV !== "production" && (x.displayName = jH(u, d, l)), x;
    };
    return T.withConfig && (w.withConfig = T.withConfig), w;
  };
}
function jH(e, t, n) {
  return e ? `${e}${dn(t || "")}` : `Styled(${DH(n)})`;
}
function zH(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${IP(t || "Root")}`), n;
}
function HH(e) {
  for (const t in e)
    return !1;
  return !0;
}
function WH(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function IP(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
function Xm(e, t) {
  const n = {
    ...t
  };
  for (const o in e)
    if (Object.prototype.hasOwnProperty.call(e, o)) {
      const r = o;
      if (r === "components" || r === "slots")
        n[r] = {
          ...e[r],
          ...n[r]
        };
      else if (r === "componentsProps" || r === "slotProps") {
        const i = e[r], s = t[r];
        if (!s)
          n[r] = i || {};
        else if (!i)
          n[r] = s;
        else {
          n[r] = {
            ...s
          };
          for (const l in i)
            if (Object.prototype.hasOwnProperty.call(i, l)) {
              const c = l;
              n[r][c] = Xm(i[c], s[c]);
            }
        }
      } else n[r] === void 0 && (n[r] = e[r]);
    }
  return n;
}
const ds = typeof window < "u" ? $.useLayoutEffect : $.useEffect;
function UH(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function xb(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), UH(e, t, n);
}
function qH(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((o) => o + o)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((o, r) => r < 3 ? parseInt(o, 16) : Math.round(parseInt(o, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function wi(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return wi(qH(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : $r(9, e));
  let o = e.substring(t + 1, e.length - 1), r;
  if (n === "color") {
    if (o = o.split(" "), r = o.shift(), o.length === 4 && o[3].charAt(0) === "/" && (o[3] = o[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(r))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${r}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : $r(10, r));
  } else
    o = o.split(",");
  return o = o.map((i) => parseFloat(i)), {
    type: n,
    values: o,
    colorSpace: r
  };
}
const KH = (e) => {
  const t = wi(e);
  return t.values.slice(0, 3).map((n, o) => t.type.includes("hsl") && o !== 0 ? `${n}%` : n).join(" ");
}, hl = (e, t) => {
  try {
    return KH(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function sp(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: o
  } = e;
  return t.includes("rgb") ? o = o.map((r, i) => i < 3 ? parseInt(r, 10) : r) : t.includes("hsl") && (o[1] = `${o[1]}%`, o[2] = `${o[2]}%`), t.includes("color") ? o = `${n} ${o.join(" ")}` : o = `${o.join(", ")}`, `${t}(${o})`;
}
function kP(e) {
  e = wi(e);
  const {
    values: t
  } = e, n = t[0], o = t[1] / 100, r = t[2] / 100, i = o * Math.min(r, 1 - r), s = (u, d = (u + n / 30) % 12) => r - i * Math.max(Math.min(d - 3, 9 - d, 1), -1);
  let l = "rgb";
  const c = [Math.round(s(0) * 255), Math.round(s(8) * 255), Math.round(s(4) * 255)];
  return e.type === "hsla" && (l += "a", c.push(t[3])), sp({
    type: l,
    values: c
  });
}
function Zm(e) {
  e = wi(e);
  let t = e.type === "hsl" || e.type === "hsla" ? wi(kP(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function Nw(e, t) {
  const n = Zm(e), o = Zm(t);
  return (Math.max(n, o) + 0.05) / (Math.min(n, o) + 0.05);
}
function Qm(e, t) {
  return e = wi(e), t = xb(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, sp(e);
}
function Ru(e, t, n) {
  try {
    return Qm(e, t);
  } catch {
    return e;
  }
}
function wb(e, t) {
  if (e = wi(e), t = xb(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return sp(e);
}
function _t(e, t, n) {
  try {
    return wb(e, t);
  } catch {
    return e;
  }
}
function Sb(e, t) {
  if (e = wi(e), t = xb(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return sp(e);
}
function Dt(e, t, n) {
  try {
    return Sb(e, t);
  } catch {
    return e;
  }
}
function GH(e, t = 0.15) {
  return Zm(e) > 0.5 ? wb(e, t) : Sb(e, t);
}
function Iu(e, t, n) {
  try {
    return GH(e, t);
  } catch {
    return e;
  }
}
const YH = "exact-prop: ​";
function $P(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [YH]: (t) => {
      const n = Object.keys(t).filter((o) => !e.hasOwnProperty(o));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((o) => `\`${o}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
const XH = /* @__PURE__ */ $.createContext();
process.env.NODE_ENV !== "production" && (a.node, a.bool);
const ZH = () => $.useContext(XH) ?? !1, QH = /* @__PURE__ */ $.createContext(void 0);
process.env.NODE_ENV !== "production" && (a.node, a.object);
function JH(e) {
  const {
    theme: t,
    name: n,
    props: o
  } = e;
  if (!t || !t.components || !t.components[n])
    return o;
  const r = t.components[n];
  return r.defaultProps ? Xm(r.defaultProps, o) : !r.styleOverrides && !r.variants ? Xm(r, o) : o;
}
function eW({
  props: e,
  name: t
}) {
  const n = $.useContext(QH);
  return JH({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
const Mw = {
  theme: void 0
};
function tW(e) {
  let t, n;
  return function(r) {
    let i = t;
    return (i === void 0 || r.theme !== n) && (Mw.theme = r.theme, i = PP(e(Mw)), t = i, n = r.theme), i;
  };
}
function nW(e = "") {
  function t(...o) {
    if (!o.length)
      return "";
    const r = o[0];
    return typeof r == "string" && !r.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${r}${t(...o.slice(1))})` : `, ${r}`;
  }
  return (o, ...r) => `var(--${e ? `${e}-` : ""}${o}${t(...r)})`;
}
const Aw = (e, t, n, o = []) => {
  let r = e;
  t.forEach((i, s) => {
    s === t.length - 1 ? Array.isArray(r) ? r[Number(i)] = n : r && typeof r == "object" && (r[i] = n) : r && typeof r == "object" && (r[i] || (r[i] = o.includes(i) ? [] : {}), r = r[i]);
  });
}, oW = (e, t, n) => {
  function o(r, i = [], s = []) {
    Object.entries(r).forEach(([l, c]) => {
      (!n || n && !n([...i, l])) && c != null && (typeof c == "object" && Object.keys(c).length > 0 ? o(c, [...i, l], Array.isArray(c) ? [...s, l] : s) : t([...i, l], c, s));
    });
  }
  o(e);
}, rW = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((o) => e.includes(o)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function Sh(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: o
  } = t || {}, r = {}, i = {}, s = {};
  return oW(
    e,
    (l, c, u) => {
      if ((typeof c == "string" || typeof c == "number") && (!o || !o(l, c))) {
        const d = `--${n ? `${n}-` : ""}${l.join("-")}`, f = rW(l, c);
        Object.assign(r, {
          [d]: f
        }), Aw(i, l, `var(${d})`, u), Aw(s, l, `var(${d}, ${f})`, u);
      }
    },
    (l) => l[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: r,
    vars: i,
    varsWithDefaults: s
  };
}
function iW(e, t = {}) {
  const {
    getSelector: n = y,
    disableCssColorScheme: o,
    colorSchemeSelector: r
  } = t, {
    colorSchemes: i = {},
    components: s,
    defaultColorScheme: l = "light",
    ...c
  } = e, {
    vars: u,
    css: d,
    varsWithDefaults: f
  } = Sh(c, t);
  let p = f;
  const h = {}, {
    [l]: g,
    ...m
  } = i;
  if (Object.entries(m || {}).forEach(([v, w]) => {
    const {
      vars: S,
      css: C,
      varsWithDefaults: E
    } = Sh(w, t);
    p = Wn(p, E), h[v] = {
      css: C,
      vars: S
    };
  }), g) {
    const {
      css: v,
      vars: w,
      varsWithDefaults: S
    } = Sh(g, t);
    p = Wn(p, S), h[l] = {
      css: v,
      vars: w
    };
  }
  function y(v, w) {
    var C, E;
    let S = r;
    if (r === "class" && (S = ".%s"), r === "data" && (S = "[data-%s]"), r != null && r.startsWith("data-") && !r.includes("%s") && (S = `[${r}="%s"]`), v) {
      if (S === "media")
        return e.defaultColorScheme === v ? ":root" : {
          [`@media (prefers-color-scheme: ${((E = (C = i[v]) == null ? void 0 : C.palette) == null ? void 0 : E.mode) || v})`]: {
            ":root": w
          }
        };
      if (S)
        return e.defaultColorScheme === v ? `:root, ${S.replace("%s", String(v))}` : S.replace("%s", String(v));
    }
    return ":root";
  }
  return {
    vars: p,
    generateThemeVars: () => {
      let v = {
        ...u
      };
      return Object.entries(h).forEach(([, {
        vars: w
      }]) => {
        v = Wn(v, w);
      }), v;
    },
    generateStyleSheets: () => {
      var P, M;
      const v = [], w = e.defaultColorScheme || "light";
      function S(x, I) {
        Object.keys(I).length && v.push(typeof x == "string" ? {
          [x]: {
            ...I
          }
        } : x);
      }
      S(n(void 0, {
        ...d
      }), d);
      const {
        [w]: C,
        ...E
      } = h;
      if (C) {
        const {
          css: x
        } = C, I = (M = (P = i[w]) == null ? void 0 : P.palette) == null ? void 0 : M.mode, k = !o && I ? {
          colorScheme: I,
          ...x
        } : {
          ...x
        };
        S(n(w, {
          ...k
        }), k);
      }
      return Object.entries(E).forEach(([x, {
        css: I
      }]) => {
        var R, A;
        const k = (A = (R = i[x]) == null ? void 0 : R.palette) == null ? void 0 : A.mode, _ = !o && k ? {
          colorScheme: k,
          ...I
        } : {
          ...I
        };
        S(n(x, {
          ..._
        }), _);
      }), v;
    }
  };
}
function sW(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
function En(e, t, n = void 0) {
  const o = {};
  for (const r in e) {
    const i = e[r];
    let s = "", l = !0;
    for (let c = 0; c < i.length; c += 1) {
      const u = i[c];
      u && (s += (l === !0 ? "" : " ") + t(u), l = !1, n && n[u] && (s += " " + n[u]));
    }
    o[r] = s;
  }
  return o;
}
function Th(e, t) {
  var n, o, r;
  return /* @__PURE__ */ $.isValidElement(e) && t.indexOf(
    // For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    e.type.muiName ?? ((r = (o = (n = e.type) == null ? void 0 : n._payload) == null ? void 0 : o.value) == null ? void 0 : r.muiName)
  ) !== -1;
}
const dc = {
  black: "#000",
  white: "#fff"
}, aW = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, ks = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, $s = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, Xa = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, Ns = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, Ms = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, As = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
};
function NP() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: dc.white,
      default: dc.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const lW = NP();
function MP() {
  return {
    text: {
      primary: dc.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: dc.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const _w = MP();
function Dw(e, t, n, o) {
  const r = o.light || o, i = o.dark || o * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = Sb(e.main, r) : t === "dark" && (e.dark = wb(e.main, i)));
}
function cW(e = "light") {
  return e === "dark" ? {
    main: Ns[200],
    light: Ns[50],
    dark: Ns[400]
  } : {
    main: Ns[700],
    light: Ns[400],
    dark: Ns[800]
  };
}
function uW(e = "light") {
  return e === "dark" ? {
    main: ks[200],
    light: ks[50],
    dark: ks[400]
  } : {
    main: ks[500],
    light: ks[300],
    dark: ks[700]
  };
}
function dW(e = "light") {
  return e === "dark" ? {
    main: $s[500],
    light: $s[300],
    dark: $s[700]
  } : {
    main: $s[700],
    light: $s[400],
    dark: $s[800]
  };
}
function fW(e = "light") {
  return e === "dark" ? {
    main: Ms[400],
    light: Ms[300],
    dark: Ms[700]
  } : {
    main: Ms[700],
    light: Ms[500],
    dark: Ms[900]
  };
}
function pW(e = "light") {
  return e === "dark" ? {
    main: As[400],
    light: As[300],
    dark: As[700]
  } : {
    main: As[800],
    light: As[500],
    dark: As[900]
  };
}
function hW(e = "light") {
  return e === "dark" ? {
    main: Xa[400],
    light: Xa[300],
    dark: Xa[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: Xa[500],
    dark: Xa[900]
  };
}
function Tb(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: o = 0.2,
    ...r
  } = e, i = e.primary || cW(t), s = e.secondary || uW(t), l = e.error || dW(t), c = e.info || fW(t), u = e.success || pW(t), d = e.warning || hW(t);
  function f(m) {
    const y = Nw(m, _w.text.primary) >= n ? _w.text.primary : lW.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const b = Nw(m, y);
      b < 3 && console.error([`MUI: The contrast ratio of ${b}:1 for ${y} on ${m}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return y;
  }
  const p = ({
    color: m,
    name: y,
    mainShade: b = 500,
    lightShade: T = 300,
    darkShade: v = 700
  }) => {
    if (m = {
      ...m
    }, !m.main && m[b] && (m.main = m[b]), !m.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${y ? ` (${y})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${b}\` property.` : $r(11, y ? ` (${y})` : "", b));
    if (typeof m.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${y ? ` (${y})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(m.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : $r(12, y ? ` (${y})` : "", JSON.stringify(m.main)));
    return Dw(m, "light", T, o), Dw(m, "dark", v, o), m.contrastText || (m.contrastText = f(m.main)), m;
  };
  let h;
  return t === "light" ? h = NP() : t === "dark" && (h = MP()), process.env.NODE_ENV !== "production" && (h || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), Wn({
    // A collection of common colors.
    common: {
      ...dc
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: p({
      color: i,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: p({
      color: s,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: p({
      color: l,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: p({
      color: d,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: p({
      color: c,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: p({
      color: u,
      name: "success"
    }),
    // The grey colors.
    grey: aW,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: f,
    // Generate a rich color object.
    augmentColor: p,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: o,
    // The light and dark mode object.
    ...h
  }, r);
}
function mW(e) {
  const t = {};
  return Object.entries(e).forEach((o) => {
    const [r, i] = o;
    typeof i == "object" && (t[r] = `${i.fontStyle ? `${i.fontStyle} ` : ""}${i.fontVariant ? `${i.fontVariant} ` : ""}${i.fontWeight ? `${i.fontWeight} ` : ""}${i.fontStretch ? `${i.fontStretch} ` : ""}${i.fontSize || ""}${i.lineHeight ? `/${i.lineHeight} ` : ""}${i.fontFamily || ""}`);
  }), t;
}
function gW(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function yW(e) {
  return Math.round(e * 1e5) / 1e5;
}
const Lw = {
  textTransform: "uppercase"
}, Bw = '"Roboto", "Helvetica", "Arial", sans-serif';
function bW(e, t) {
  const {
    fontFamily: n = Bw,
    // The default font size of the Material Specification.
    fontSize: o = 14,
    // px
    fontWeightLight: r = 300,
    fontWeightRegular: i = 400,
    fontWeightMedium: s = 500,
    fontWeightBold: l = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: c = 16,
    // Apply the CSS properties to all the variants.
    allVariants: u,
    pxToRem: d,
    ...f
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof o != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof c != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const p = o / 14, h = d || ((y) => `${y / c * p}rem`), g = (y, b, T, v, w) => ({
    fontFamily: n,
    fontWeight: y,
    fontSize: h(b),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: T,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === Bw ? {
      letterSpacing: `${yW(v / b)}em`
    } : {},
    ...w,
    ...u
  }), m = {
    h1: g(r, 96, 1.167, -1.5),
    h2: g(r, 60, 1.2, -0.5),
    h3: g(i, 48, 1.167, 0),
    h4: g(i, 34, 1.235, 0.25),
    h5: g(i, 24, 1.334, 0),
    h6: g(s, 20, 1.6, 0.15),
    subtitle1: g(i, 16, 1.75, 0.15),
    subtitle2: g(s, 14, 1.57, 0.1),
    body1: g(i, 16, 1.5, 0.15),
    body2: g(i, 14, 1.43, 0.15),
    button: g(s, 14, 1.75, 0.4, Lw),
    caption: g(i, 12, 1.66, 0.4),
    overline: g(i, 12, 2.66, 1, Lw),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return Wn({
    htmlFontSize: c,
    pxToRem: h,
    fontFamily: n,
    fontSize: o,
    fontWeightLight: r,
    fontWeightRegular: i,
    fontWeightMedium: s,
    fontWeightBold: l,
    ...m
  }, f, {
    clone: !1
    // No need to clone deep
  });
}
const vW = 0.2, xW = 0.14, wW = 0.12;
function Ut(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${vW})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${xW})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${wW})`].join(",");
}
const SW = ["none", Ut(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), Ut(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), Ut(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), Ut(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), Ut(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), Ut(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), Ut(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), Ut(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), Ut(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), Ut(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), Ut(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), Ut(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), Ut(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), Ut(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), Ut(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), Ut(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), Ut(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), Ut(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), Ut(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), Ut(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), Ut(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), Ut(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), Ut(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), Ut(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], TW = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, CW = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function Vw(e) {
  return `${Math.round(e)}ms`;
}
function EW(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function OW(e) {
  const t = {
    ...TW,
    ...e.easing
  }, n = {
    ...CW,
    ...e.duration
  };
  return {
    getAutoHeightDuration: EW,
    create: (r = ["all"], i = {}) => {
      const {
        duration: s = n.standard,
        easing: l = t.easeInOut,
        delay: c = 0,
        ...u
      } = i;
      if (process.env.NODE_ENV !== "production") {
        const d = (p) => typeof p == "string", f = (p) => !Number.isNaN(parseFloat(p));
        !d(r) && !Array.isArray(r) && console.error('MUI: Argument "props" must be a string or Array.'), !f(s) && !d(s) && console.error(`MUI: Argument "duration" must be a number or a string but found ${s}.`), d(l) || console.error('MUI: Argument "easing" must be a string.'), !f(c) && !d(c) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof i != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(u).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(u).join(",")}].`);
      }
      return (Array.isArray(r) ? r : [r]).map((d) => `${d} ${typeof s == "string" ? s : Vw(s)} ${l} ${typeof c == "string" ? c : Vw(c)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const PW = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function RW(e) {
  return br(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function AP(e = {}) {
  const t = {
    ...e
  };
  function n(o) {
    const r = Object.entries(o);
    for (let i = 0; i < r.length; i++) {
      const [s, l] = r[i];
      !RW(l) || s.startsWith("unstable_") ? delete o[s] : br(l) && (o[s] = {
        ...l
      }, n(o[s]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function Jm(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: o = {},
    spacing: r,
    palette: i = {},
    transitions: s = {},
    typography: l = {},
    shape: c,
    ...u
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : $r(20));
  const d = Tb(i), f = bb(e);
  let p = Wn(f, {
    mixins: gW(f.breakpoints, o),
    palette: d,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: SW.slice(),
    typography: bW(d, l),
    transitions: OW(s),
    zIndex: {
      ...PW
    }
  });
  if (p = Wn(p, u), p = t.reduce((h, g) => Wn(h, g), p), process.env.NODE_ENV !== "production") {
    const h = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], g = (m, y) => {
      let b;
      for (b in m) {
        const T = m[b];
        if (h.includes(b) && Object.keys(T).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const v = vn("", b);
            console.error([`MUI: The \`${y}\` component increases the CSS specificity of the \`${b}\` internal state.`, "You can not override it like this: ", JSON.stringify(m, null, 2), "", `Instead, you need to use the '&.${v}' syntax:`, JSON.stringify({
              root: {
                [`&.${v}`]: T
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          m[b] = {};
        }
      }
    };
    Object.keys(p.components).forEach((m) => {
      const y = p.components[m].styleOverrides;
      y && m.startsWith("Mui") && g(y, m);
    });
  }
  return p.unstable_sxConfig = {
    ...qc,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, p.unstable_sx = function(g) {
    return us({
      sx: g,
      theme: this
    });
  }, p.toRuntimeSource = AP, p;
}
function eg(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const IW = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = eg(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function _P(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function DP(e) {
  return e === "dark" ? IW : [];
}
function kW(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: o,
    ...r
  } = e, i = Tb(t);
  return {
    palette: i,
    opacity: {
      ..._P(i.mode),
      ...n
    },
    overlays: o || DP(i.mode),
    ...r
  };
}
function $W(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const NW = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], MW = (e) => (t, n) => {
  const o = e.rootSelector || ":root", r = e.colorSchemeSelector;
  let i = r;
  if (r === "class" && (i = ".%s"), r === "data" && (i = "[data-%s]"), r != null && r.startsWith("data-") && !r.includes("%s") && (i = `[${r}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const s = {};
      return NW(e.cssVarPrefix).forEach((l) => {
        s[l] = n[l], delete n[l];
      }), i === "media" ? {
        [o]: n,
        "@media (prefers-color-scheme: dark)": {
          [o]: s
        }
      } : i ? {
        [i.replace("%s", t)]: s,
        [`${o}, ${i.replace("%s", t)}`]: n
      } : {
        [o]: {
          ...n,
          ...s
        }
      };
    }
    if (i && i !== "media")
      return `${o}, ${i.replace("%s", String(t))}`;
  } else if (t) {
    if (i === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [o]: n
        }
      };
    if (i)
      return i.replace("%s", String(t));
  }
  return o;
};
function AW(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function ge(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function ml(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : kP(e);
}
function Lr(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = hl(ml(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function _W(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const dr = (e) => {
  try {
    return e();
  } catch {
  }
}, DW = (e = "mui") => nW(e);
function Ch(e, t, n, o) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const r = o === "dark" ? "dark" : "light";
  if (!n) {
    e[o] = kW({
      ...t,
      palette: {
        mode: r,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: i,
    ...s
  } = Jm({
    ...n,
    palette: {
      mode: r,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[o] = {
    ...t,
    palette: i,
    opacity: {
      ..._P(r),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || DP(r)
  }, s;
}
function LW(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: o,
    disableCssColorScheme: r = !1,
    cssVarPrefix: i = "mui",
    shouldSkipGeneratingVar: s = $W,
    colorSchemeSelector: l = n.light && n.dark ? "media" : void 0,
    rootSelector: c = ":root",
    ...u
  } = e, d = Object.keys(n)[0], f = o || (n.light && d !== "light" ? "light" : d), p = DW(i), {
    [f]: h,
    light: g,
    dark: m,
    ...y
  } = n, b = {
    ...y
  };
  let T = h;
  if ((f === "dark" && !("dark" in n) || f === "light" && !("light" in n)) && (T = !0), !T)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${f}\` option is either missing or invalid.` : $r(21, f));
  const v = Ch(b, T, u, f);
  g && !b.light && Ch(b, g, void 0, "light"), m && !b.dark && Ch(b, m, void 0, "dark");
  let w = {
    defaultColorScheme: f,
    ...v,
    cssVarPrefix: i,
    colorSchemeSelector: l,
    rootSelector: c,
    getCssVar: p,
    colorSchemes: b,
    font: {
      ...mW(v.typography),
      ...v.font
    },
    spacing: _W(u.spacing)
  };
  Object.keys(w.colorSchemes).forEach((M) => {
    const x = w.colorSchemes[M].palette, I = (k) => {
      const _ = k.split("-"), R = _[1], A = _[2];
      return p(k, x[R][A]);
    };
    if (x.mode === "light" && (ge(x.common, "background", "#fff"), ge(x.common, "onBackground", "#000")), x.mode === "dark" && (ge(x.common, "background", "#000"), ge(x.common, "onBackground", "#fff")), AW(x, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), x.mode === "light") {
      ge(x.Alert, "errorColor", _t(x.error.light, 0.6)), ge(x.Alert, "infoColor", _t(x.info.light, 0.6)), ge(x.Alert, "successColor", _t(x.success.light, 0.6)), ge(x.Alert, "warningColor", _t(x.warning.light, 0.6)), ge(x.Alert, "errorFilledBg", I("palette-error-main")), ge(x.Alert, "infoFilledBg", I("palette-info-main")), ge(x.Alert, "successFilledBg", I("palette-success-main")), ge(x.Alert, "warningFilledBg", I("palette-warning-main")), ge(x.Alert, "errorFilledColor", dr(() => x.getContrastText(x.error.main))), ge(x.Alert, "infoFilledColor", dr(() => x.getContrastText(x.info.main))), ge(x.Alert, "successFilledColor", dr(() => x.getContrastText(x.success.main))), ge(x.Alert, "warningFilledColor", dr(() => x.getContrastText(x.warning.main))), ge(x.Alert, "errorStandardBg", Dt(x.error.light, 0.9)), ge(x.Alert, "infoStandardBg", Dt(x.info.light, 0.9)), ge(x.Alert, "successStandardBg", Dt(x.success.light, 0.9)), ge(x.Alert, "warningStandardBg", Dt(x.warning.light, 0.9)), ge(x.Alert, "errorIconColor", I("palette-error-main")), ge(x.Alert, "infoIconColor", I("palette-info-main")), ge(x.Alert, "successIconColor", I("palette-success-main")), ge(x.Alert, "warningIconColor", I("palette-warning-main")), ge(x.AppBar, "defaultBg", I("palette-grey-100")), ge(x.Avatar, "defaultBg", I("palette-grey-400")), ge(x.Button, "inheritContainedBg", I("palette-grey-300")), ge(x.Button, "inheritContainedHoverBg", I("palette-grey-A100")), ge(x.Chip, "defaultBorder", I("palette-grey-400")), ge(x.Chip, "defaultAvatarColor", I("palette-grey-700")), ge(x.Chip, "defaultIconColor", I("palette-grey-700")), ge(x.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), ge(x.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), ge(x.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), ge(x.LinearProgress, "primaryBg", Dt(x.primary.main, 0.62)), ge(x.LinearProgress, "secondaryBg", Dt(x.secondary.main, 0.62)), ge(x.LinearProgress, "errorBg", Dt(x.error.main, 0.62)), ge(x.LinearProgress, "infoBg", Dt(x.info.main, 0.62)), ge(x.LinearProgress, "successBg", Dt(x.success.main, 0.62)), ge(x.LinearProgress, "warningBg", Dt(x.warning.main, 0.62)), ge(x.Skeleton, "bg", `rgba(${I("palette-text-primaryChannel")} / 0.11)`), ge(x.Slider, "primaryTrack", Dt(x.primary.main, 0.62)), ge(x.Slider, "secondaryTrack", Dt(x.secondary.main, 0.62)), ge(x.Slider, "errorTrack", Dt(x.error.main, 0.62)), ge(x.Slider, "infoTrack", Dt(x.info.main, 0.62)), ge(x.Slider, "successTrack", Dt(x.success.main, 0.62)), ge(x.Slider, "warningTrack", Dt(x.warning.main, 0.62));
      const k = Iu(x.background.default, 0.8);
      ge(x.SnackbarContent, "bg", k), ge(x.SnackbarContent, "color", dr(() => x.getContrastText(k))), ge(x.SpeedDialAction, "fabHoverBg", Iu(x.background.paper, 0.15)), ge(x.StepConnector, "border", I("palette-grey-400")), ge(x.StepContent, "border", I("palette-grey-400")), ge(x.Switch, "defaultColor", I("palette-common-white")), ge(x.Switch, "defaultDisabledColor", I("palette-grey-100")), ge(x.Switch, "primaryDisabledColor", Dt(x.primary.main, 0.62)), ge(x.Switch, "secondaryDisabledColor", Dt(x.secondary.main, 0.62)), ge(x.Switch, "errorDisabledColor", Dt(x.error.main, 0.62)), ge(x.Switch, "infoDisabledColor", Dt(x.info.main, 0.62)), ge(x.Switch, "successDisabledColor", Dt(x.success.main, 0.62)), ge(x.Switch, "warningDisabledColor", Dt(x.warning.main, 0.62)), ge(x.TableCell, "border", Dt(Ru(x.divider, 1), 0.88)), ge(x.Tooltip, "bg", Ru(x.grey[700], 0.92));
    }
    if (x.mode === "dark") {
      ge(x.Alert, "errorColor", Dt(x.error.light, 0.6)), ge(x.Alert, "infoColor", Dt(x.info.light, 0.6)), ge(x.Alert, "successColor", Dt(x.success.light, 0.6)), ge(x.Alert, "warningColor", Dt(x.warning.light, 0.6)), ge(x.Alert, "errorFilledBg", I("palette-error-dark")), ge(x.Alert, "infoFilledBg", I("palette-info-dark")), ge(x.Alert, "successFilledBg", I("palette-success-dark")), ge(x.Alert, "warningFilledBg", I("palette-warning-dark")), ge(x.Alert, "errorFilledColor", dr(() => x.getContrastText(x.error.dark))), ge(x.Alert, "infoFilledColor", dr(() => x.getContrastText(x.info.dark))), ge(x.Alert, "successFilledColor", dr(() => x.getContrastText(x.success.dark))), ge(x.Alert, "warningFilledColor", dr(() => x.getContrastText(x.warning.dark))), ge(x.Alert, "errorStandardBg", _t(x.error.light, 0.9)), ge(x.Alert, "infoStandardBg", _t(x.info.light, 0.9)), ge(x.Alert, "successStandardBg", _t(x.success.light, 0.9)), ge(x.Alert, "warningStandardBg", _t(x.warning.light, 0.9)), ge(x.Alert, "errorIconColor", I("palette-error-main")), ge(x.Alert, "infoIconColor", I("palette-info-main")), ge(x.Alert, "successIconColor", I("palette-success-main")), ge(x.Alert, "warningIconColor", I("palette-warning-main")), ge(x.AppBar, "defaultBg", I("palette-grey-900")), ge(x.AppBar, "darkBg", I("palette-background-paper")), ge(x.AppBar, "darkColor", I("palette-text-primary")), ge(x.Avatar, "defaultBg", I("palette-grey-600")), ge(x.Button, "inheritContainedBg", I("palette-grey-800")), ge(x.Button, "inheritContainedHoverBg", I("palette-grey-700")), ge(x.Chip, "defaultBorder", I("palette-grey-700")), ge(x.Chip, "defaultAvatarColor", I("palette-grey-300")), ge(x.Chip, "defaultIconColor", I("palette-grey-300")), ge(x.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), ge(x.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), ge(x.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), ge(x.LinearProgress, "primaryBg", _t(x.primary.main, 0.5)), ge(x.LinearProgress, "secondaryBg", _t(x.secondary.main, 0.5)), ge(x.LinearProgress, "errorBg", _t(x.error.main, 0.5)), ge(x.LinearProgress, "infoBg", _t(x.info.main, 0.5)), ge(x.LinearProgress, "successBg", _t(x.success.main, 0.5)), ge(x.LinearProgress, "warningBg", _t(x.warning.main, 0.5)), ge(x.Skeleton, "bg", `rgba(${I("palette-text-primaryChannel")} / 0.13)`), ge(x.Slider, "primaryTrack", _t(x.primary.main, 0.5)), ge(x.Slider, "secondaryTrack", _t(x.secondary.main, 0.5)), ge(x.Slider, "errorTrack", _t(x.error.main, 0.5)), ge(x.Slider, "infoTrack", _t(x.info.main, 0.5)), ge(x.Slider, "successTrack", _t(x.success.main, 0.5)), ge(x.Slider, "warningTrack", _t(x.warning.main, 0.5));
      const k = Iu(x.background.default, 0.98);
      ge(x.SnackbarContent, "bg", k), ge(x.SnackbarContent, "color", dr(() => x.getContrastText(k))), ge(x.SpeedDialAction, "fabHoverBg", Iu(x.background.paper, 0.15)), ge(x.StepConnector, "border", I("palette-grey-600")), ge(x.StepContent, "border", I("palette-grey-600")), ge(x.Switch, "defaultColor", I("palette-grey-300")), ge(x.Switch, "defaultDisabledColor", I("palette-grey-600")), ge(x.Switch, "primaryDisabledColor", _t(x.primary.main, 0.55)), ge(x.Switch, "secondaryDisabledColor", _t(x.secondary.main, 0.55)), ge(x.Switch, "errorDisabledColor", _t(x.error.main, 0.55)), ge(x.Switch, "infoDisabledColor", _t(x.info.main, 0.55)), ge(x.Switch, "successDisabledColor", _t(x.success.main, 0.55)), ge(x.Switch, "warningDisabledColor", _t(x.warning.main, 0.55)), ge(x.TableCell, "border", _t(Ru(x.divider, 1), 0.68)), ge(x.Tooltip, "bg", Ru(x.grey[700], 0.92));
    }
    Lr(x.background, "default"), Lr(x.background, "paper"), Lr(x.common, "background"), Lr(x.common, "onBackground"), Lr(x, "divider"), Object.keys(x).forEach((k) => {
      const _ = x[k];
      k !== "tonalOffset" && _ && typeof _ == "object" && (_.main && ge(x[k], "mainChannel", hl(ml(_.main))), _.light && ge(x[k], "lightChannel", hl(ml(_.light))), _.dark && ge(x[k], "darkChannel", hl(ml(_.dark))), _.contrastText && ge(x[k], "contrastTextChannel", hl(ml(_.contrastText))), k === "text" && (Lr(x[k], "primary"), Lr(x[k], "secondary")), k === "action" && (_.active && Lr(x[k], "active"), _.selected && Lr(x[k], "selected")));
    });
  }), w = t.reduce((M, x) => Wn(M, x), w);
  const S = {
    prefix: i,
    disableCssColorScheme: r,
    shouldSkipGeneratingVar: s,
    getSelector: MW(w)
  }, {
    vars: C,
    generateThemeVars: E,
    generateStyleSheets: P
  } = iW(w, S);
  return w.vars = C, Object.entries(w.colorSchemes[w.defaultColorScheme]).forEach(([M, x]) => {
    w[M] = x;
  }), w.generateThemeVars = E, w.generateStyleSheets = P, w.generateSpacing = function() {
    return TP(u.spacing, gb(this));
  }, w.getColorSchemeSelector = sW(l), w.spacing = w.generateSpacing(), w.shouldSkipGeneratingVar = s, w.unstable_sxConfig = {
    ...qc,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, w.unstable_sx = function(x) {
    return us({
      sx: x,
      theme: this
    });
  }, w.toRuntimeSource = AP, w;
}
function Fw(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: Tb({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function LP(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: o = !1,
    colorSchemes: r = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: i = n == null ? void 0 : n.mode,
    ...s
  } = e, l = i || "light", c = r == null ? void 0 : r[l], u = {
    ...r,
    ...n ? {
      [l]: {
        ...typeof c != "boolean" && c,
        palette: n
      }
    } : void 0
  };
  if (o === !1) {
    if (!("colorSchemes" in e))
      return Jm(e, ...t);
    let d = n;
    "palette" in e || u[l] && (u[l] !== !0 ? d = u[l].palette : l === "dark" && (d = {
      mode: "dark"
    }));
    const f = Jm({
      ...e,
      palette: d
    }, ...t);
    return f.defaultColorScheme = l, f.colorSchemes = u, f.palette.mode === "light" && (f.colorSchemes.light = {
      ...u.light !== !0 && u.light,
      palette: f.palette
    }, Fw(f, "dark", u.dark)), f.palette.mode === "dark" && (f.colorSchemes.dark = {
      ...u.dark !== !0 && u.dark,
      palette: f.palette
    }, Fw(f, "light", u.light)), f;
  }
  return !n && !("light" in u) && l === "light" && (u.light = !0), LW({
    ...s,
    colorSchemes: u,
    defaultColorScheme: l,
    ...typeof o != "boolean" && o
  }, ...t);
}
const Cb = LP();
function Eb() {
  const e = vb(Cb);
  return process.env.NODE_ENV !== "production" && $.useDebugValue(e), e[Xf] || e;
}
function BP(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const Mr = (e) => BP(e) && e !== "classes", lt = FH({
  themeId: Xf,
  defaultTheme: Cb,
  rootShouldForwardProp: Mr
});
let jw = 0;
function BW(e) {
  const [t, n] = $.useState(e), o = e || t;
  return $.useEffect(() => {
    t == null && (jw += 1, n(`mui-${jw}`));
  }, [t]), o;
}
const VW = {
  ...$
}, zw = VW.useId;
function VP(e) {
  if (zw !== void 0) {
    const t = zw();
    return e ?? t;
  }
  return BW(e);
}
const _i = a.oneOfType([a.func, a.object]);
function FP(e) {
  return /* @__PURE__ */ O(CP, {
    ...e,
    defaultTheme: Cb,
    themeId: Xf
  });
}
process.env.NODE_ENV !== "production" && (FP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: a.oneOfType([a.array, a.func, a.number, a.object, a.string, a.bool])
});
function FW(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ O(FP, {
        styles: typeof e == "function" ? (o) => e({
          theme: o,
          ...n
        }) : e
      })
    );
  };
}
process.env.NODE_ENV !== "production" && (a.node, a.object.isRequired);
function An(e) {
  return eW(e);
}
function Kc(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...o) {
    return e(...o) || t(...o);
  };
}
function jW(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function zW(e, t, n, o, r) {
  const i = e[t], s = r || t;
  if (i == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  return typeof i == "function" && !jW(i) && (l = "Did you accidentally provide a plain function component instead?"), l !== void 0 ? new Error(`Invalid ${o} \`${s}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const jP = Kc(a.elementType, zW);
function HW(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function zP(e, t, n, o, r) {
  const i = e[t], s = r || t;
  if (i == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  const c = i.type;
  return typeof c == "function" && !HW(c) && (l = "Did you accidentally use a plain function component for an element instead?"), l !== void 0 ? new Error(`Invalid ${o} \`${s}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Gc = Kc(a.element, zP);
Gc.isRequired = Kc(a.element.isRequired, zP);
function fc(e, t, n, o, r) {
  if (process.env.NODE_ENV === "production")
    return null;
  const i = e[t], s = r || t;
  return i == null ? null : i && i.nodeType !== 1 ? new Error(`Invalid ${o} \`${s}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
function Hw(...e) {
  return e.reduce((t, n) => n == null ? t : function(...r) {
    t.apply(this, r), n.apply(this, r);
  }, () => {
  });
}
function HP(e, t = 166) {
  let n;
  function o(...r) {
    const i = () => {
      e.apply(this, r);
    };
    clearTimeout(n), n = setTimeout(i, t);
  }
  return o.clear = () => {
    clearTimeout(n);
  }, o;
}
function ar(e) {
  return e && e.ownerDocument || document;
}
function Gr(e) {
  return ar(e).defaultView || window;
}
function Ww(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
function Uw({
  controlled: e,
  default: t,
  name: n,
  state: o = "value"
}) {
  const {
    current: r
  } = $.useRef(e !== void 0), [i, s] = $.useState(t), l = r ? e : i;
  if (process.env.NODE_ENV !== "production") {
    $.useEffect(() => {
      r !== (e !== void 0) && console.error([`MUI: A component is changing the ${r ? "" : "un"}controlled ${o} state of ${n} to be ${r ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [o, n, e]);
    const {
      current: u
    } = $.useRef(t);
    $.useEffect(() => {
      !r && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${o} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = $.useCallback((u) => {
    r || s(u);
  }, []);
  return [l, c];
}
function tg(e) {
  const t = $.useRef(e);
  return ds(() => {
    t.current = e;
  }), $.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function Go(...e) {
  const t = $.useRef(void 0), n = $.useCallback((o) => {
    const r = e.map((i) => {
      if (i == null)
        return null;
      if (typeof i == "function") {
        const s = i, l = s(o);
        return typeof l == "function" ? l : () => {
          s(null);
        };
      }
      return i.current = o, () => {
        i.current = null;
      };
    });
    return () => {
      r.forEach((i) => i == null ? void 0 : i());
    };
  }, e);
  return $.useMemo(() => e.every((o) => o == null) ? null : (o) => {
    t.current && (t.current(), t.current = void 0), o != null && (t.current = n(o));
  }, e);
}
const qw = {};
function WW(e, t) {
  const n = $.useRef(qw);
  return n.current === qw && (n.current = e(t)), n;
}
const UW = [];
function qW(e) {
  $.useEffect(e, UW);
}
class Ob {
  constructor() {
    ti(this, "currentId", null);
    ti(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    ti(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new Ob();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
}
function KW() {
  const e = WW(Ob.create).current;
  return qW(e.disposeEffect), e;
}
function WP(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
function GW(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function UP(e, t, n, o) {
  const r = e[t];
  if (r == null || !Number.isInteger(r)) {
    const i = GW(r);
    return new RangeError(`Invalid ${o} \`${t}\` of type \`${i}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function qP(e, t, ...n) {
  return e[t] === void 0 ? null : UP(e, t, ...n);
}
function ng() {
  return null;
}
qP.isRequired = UP;
ng.isRequired = ng;
const KP = process.env.NODE_ENV === "production" ? ng : qP;
function YW(e) {
  return typeof e == "string";
}
function GP(e, t, n) {
  return e === void 0 || YW(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function YP(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((o) => o.match(/^on[A-Z]/) && typeof e[o] == "function" && !t.includes(o)).forEach((o) => {
    n[o] = e[o];
  }), n;
}
function Kw(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function XP(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: o,
    externalForwardedProps: r,
    className: i
  } = e;
  if (!t) {
    const h = Ie(n == null ? void 0 : n.className, i, r == null ? void 0 : r.className, o == null ? void 0 : o.className), g = {
      ...n == null ? void 0 : n.style,
      ...r == null ? void 0 : r.style,
      ...o == null ? void 0 : o.style
    }, m = {
      ...n,
      ...r,
      ...o
    };
    return h.length > 0 && (m.className = h), Object.keys(g).length > 0 && (m.style = g), {
      props: m,
      internalRef: void 0
    };
  }
  const s = YP({
    ...r,
    ...o
  }), l = Kw(o), c = Kw(r), u = t(s), d = Ie(u == null ? void 0 : u.className, n == null ? void 0 : n.className, i, r == null ? void 0 : r.className, o == null ? void 0 : o.className), f = {
    ...u == null ? void 0 : u.style,
    ...n == null ? void 0 : n.style,
    ...r == null ? void 0 : r.style,
    ...o == null ? void 0 : o.style
  }, p = {
    ...u,
    ...n,
    ...c,
    ...l
  };
  return d.length > 0 && (p.className = d), Object.keys(f).length > 0 && (p.style = f), {
    props: p,
    internalRef: u.ref
  };
}
function ZP(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function XW(e) {
  var f;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: o,
    skipResolvingSlotProps: r = !1,
    ...i
  } = e, s = r ? {} : ZP(n, o), {
    props: l,
    internalRef: c
  } = XP({
    ...i,
    externalSlotProps: s
  }), u = Go(c, s == null ? void 0 : s.ref, (f = e.additionalProps) == null ? void 0 : f.ref);
  return GP(t, {
    ...l,
    ref: u
  }, o);
}
function Yc(e) {
  var t;
  return parseInt($.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
function ku(e) {
  return parseInt(e, 10) || 0;
}
const ZW = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function QW(e) {
  for (const t in e)
    return !1;
  return !0;
}
function Gw(e) {
  return QW(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const QP = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const {
    onChange: o,
    maxRows: r,
    minRows: i = 1,
    style: s,
    value: l,
    ...c
  } = t, {
    current: u
  } = $.useRef(l != null), d = $.useRef(null), f = Go(n, d), p = $.useRef(null), h = $.useRef(null), g = $.useCallback(() => {
    const v = d.current, w = h.current;
    if (!v || !w)
      return;
    const C = Gr(v).getComputedStyle(v);
    if (C.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    w.style.width = C.width, w.value = v.value || t.placeholder || "x", w.value.slice(-1) === `
` && (w.value += " ");
    const E = C.boxSizing, P = ku(C.paddingBottom) + ku(C.paddingTop), M = ku(C.borderBottomWidth) + ku(C.borderTopWidth), x = w.scrollHeight;
    w.value = "x";
    const I = w.scrollHeight;
    let k = x;
    i && (k = Math.max(Number(i) * I, k)), r && (k = Math.min(Number(r) * I, k)), k = Math.max(k, I);
    const _ = k + (E === "border-box" ? P + M : 0), R = Math.abs(k - x) <= 1;
    return {
      outerHeightStyle: _,
      overflowing: R
    };
  }, [r, i, t.placeholder]), m = tg(() => {
    const v = d.current, w = g();
    if (!v || !w || Gw(w))
      return !1;
    const S = w.outerHeightStyle;
    return p.current != null && p.current !== S;
  }), y = $.useCallback(() => {
    const v = d.current, w = g();
    if (!v || !w || Gw(w))
      return;
    const S = w.outerHeightStyle;
    p.current !== S && (p.current = S, v.style.height = `${S}px`), v.style.overflow = w.overflowing ? "hidden" : "";
  }, [g]), b = $.useRef(-1);
  ds(() => {
    const v = HP(y), w = d == null ? void 0 : d.current;
    if (!w)
      return;
    const S = Gr(w);
    S.addEventListener("resize", v);
    let C;
    return typeof ResizeObserver < "u" && (C = new ResizeObserver(() => {
      m() && (C.unobserve(w), cancelAnimationFrame(b.current), y(), b.current = requestAnimationFrame(() => {
        C.observe(w);
      }));
    }), C.observe(w)), () => {
      v.clear(), cancelAnimationFrame(b.current), S.removeEventListener("resize", v), C && C.disconnect();
    };
  }, [g, y, m]), ds(() => {
    y();
  });
  const T = (v) => {
    u || y(), o && o(v);
  };
  return /* @__PURE__ */ Se($.Fragment, {
    children: [/* @__PURE__ */ O("textarea", {
      value: l,
      onChange: T,
      ref: f,
      rows: i,
      style: s,
      ...c
    }), /* @__PURE__ */ O("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: h,
      tabIndex: -1,
      style: {
        ...ZW.shadow,
        ...s,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (QP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: a.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  onChange: a.func,
  /**
   * @ignore
   */
  placeholder: a.string,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * @ignore
   */
  value: a.oneOfType([a.arrayOf(a.string), a.number, a.string])
});
function og(e) {
  return typeof e == "string";
}
function ja({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((o, r) => (o[r] = e[r], n && typeof e[r] > "u" && (o[r] = n[r]), o), {});
}
const ap = /* @__PURE__ */ $.createContext(void 0);
process.env.NODE_ENV !== "production" && (ap.displayName = "FormControlContext");
function za() {
  return $.useContext(ap);
}
const qn = tW;
function Yw(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function Ld(e, t = !1) {
  return e && (Yw(e.value) && e.value !== "" || t && Yw(e.defaultValue) && e.defaultValue !== "");
}
function JW(e) {
  return e.startAdornment;
}
function eU(e) {
  return vn("MuiInputBase", e);
}
const ya = Cn("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var Xw;
const lp = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${dn(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, cp = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, tU = (e) => {
  const {
    classes: t,
    color: n,
    disabled: o,
    error: r,
    endAdornment: i,
    focused: s,
    formControl: l,
    fullWidth: c,
    hiddenLabel: u,
    multiline: d,
    readOnly: f,
    size: p,
    startAdornment: h,
    type: g
  } = e, m = {
    root: ["root", `color${dn(n)}`, o && "disabled", r && "error", c && "fullWidth", s && "focused", l && "formControl", p && p !== "medium" && `size${dn(p)}`, d && "multiline", h && "adornedStart", i && "adornedEnd", u && "hiddenLabel", f && "readOnly"],
    input: ["input", o && "disabled", g === "search" && "inputTypeSearch", d && "inputMultiline", p === "small" && "inputSizeSmall", u && "inputHiddenLabel", h && "inputAdornedStart", i && "inputAdornedEnd", f && "readOnly"]
  };
  return En(m, eU, t);
}, up = lt("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: lp
})(qn(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${ya.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), dp = lt("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: cp
})(qn(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, o = {
    opacity: "0 !important"
  }, r = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${ya.formControl} &`]: {
      "&::-webkit-input-placeholder": o,
      "&::-moz-placeholder": o,
      // Firefox 19+
      "&::-ms-input-placeholder": o,
      // Edge
      "&:focus::-webkit-input-placeholder": r,
      "&:focus::-moz-placeholder": r,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": r
      // Edge
    },
    [`&.${ya.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: i
      }) => !i.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: i
      }) => i.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), Zw = FW({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), fp = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = An({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": r,
    autoComplete: i,
    autoFocus: s,
    className: l,
    color: c,
    components: u = {},
    componentsProps: d = {},
    defaultValue: f,
    disabled: p,
    disableInjectingGlobalStyles: h,
    endAdornment: g,
    error: m,
    fullWidth: y = !1,
    id: b,
    inputComponent: T = "input",
    inputProps: v = {},
    inputRef: w,
    margin: S,
    maxRows: C,
    minRows: E,
    multiline: P = !1,
    name: M,
    onBlur: x,
    onChange: I,
    onClick: k,
    onFocus: _,
    onKeyDown: R,
    onKeyUp: A,
    placeholder: N,
    readOnly: L,
    renderSuffix: V,
    rows: D,
    size: B,
    slotProps: F = {},
    slots: U = {},
    startAdornment: q,
    type: G = "text",
    value: K,
    ...te
  } = o, ne = v.value != null ? v.value : K, {
    current: W
  } = $.useRef(ne != null), ee = $.useRef(), Y = $.useCallback((le) => {
    process.env.NODE_ENV !== "production" && le && le.nodeName !== "INPUT" && !le.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), re = Go(ee, w, v.ref, Y), [z, de] = $.useState(!1), ue = za();
  process.env.NODE_ENV !== "production" && $.useEffect(() => {
    if (ue)
      return ue.registerEffect();
  }, [ue]);
  const xe = ja({
    props: o,
    muiFormControl: ue,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  xe.focused = ue ? ue.focused : z, $.useEffect(() => {
    !ue && p && z && (de(!1), x && x());
  }, [ue, p, z, x]);
  const _e = ue && ue.onFilled, we = ue && ue.onEmpty, De = $.useCallback((le) => {
    Ld(le) ? _e && _e() : we && we();
  }, [_e, we]);
  ds(() => {
    W && De({
      value: ne
    });
  }, [ne, De, W]);
  const Ee = (le) => {
    _ && _(le), v.onFocus && v.onFocus(le), ue && ue.onFocus ? ue.onFocus(le) : de(!0);
  }, Ve = (le) => {
    x && x(le), v.onBlur && v.onBlur(le), ue && ue.onBlur ? ue.onBlur(le) : de(!1);
  }, Me = (le, ...ae) => {
    if (!W) {
      const ce = le.target || ee.current;
      if (ce == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : $r(1));
      De({
        value: ce.value
      });
    }
    v.onChange && v.onChange(le, ...ae), I && I(le, ...ae);
  };
  $.useEffect(() => {
    De(ee.current);
  }, []);
  const j = (le) => {
    ee.current && le.currentTarget === le.target && ee.current.focus(), k && k(le);
  };
  let J = T, ie = v;
  P && J === "input" && (D ? (process.env.NODE_ENV !== "production" && (E || C) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), ie = {
    type: void 0,
    minRows: D,
    maxRows: D,
    ...ie
  }) : ie = {
    type: void 0,
    maxRows: C,
    minRows: E,
    ...ie
  }, J = QP);
  const Q = (le) => {
    De(le.animationName === "mui-auto-fill-cancel" ? ee.current : {
      value: "x"
    });
  };
  $.useEffect(() => {
    ue && ue.setAdornedStart(!!q);
  }, [ue, q]);
  const H = {
    ...o,
    color: xe.color || "primary",
    disabled: xe.disabled,
    endAdornment: g,
    error: xe.error,
    focused: xe.focused,
    formControl: ue,
    fullWidth: y,
    hiddenLabel: xe.hiddenLabel,
    multiline: P,
    size: xe.size,
    startAdornment: q,
    type: G
  }, X = tU(H), se = U.root || u.Root || up, ye = F.root || d.root || {}, he = U.input || u.Input || dp;
  return ie = {
    ...ie,
    ...F.input ?? d.input
  }, /* @__PURE__ */ Se($.Fragment, {
    children: [!h && typeof Zw == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (Xw || (Xw = /* @__PURE__ */ O(Zw, {}))), /* @__PURE__ */ Se(se, {
      ...ye,
      ref: n,
      onClick: j,
      ...te,
      ...!og(se) && {
        ownerState: {
          ...H,
          ...ye.ownerState
        }
      },
      className: Ie(X.root, ye.className, l, L && "MuiInputBase-readOnly"),
      children: [q, /* @__PURE__ */ O(ap.Provider, {
        value: null,
        children: /* @__PURE__ */ O(he, {
          "aria-invalid": xe.error,
          "aria-describedby": r,
          autoComplete: i,
          autoFocus: s,
          defaultValue: f,
          disabled: xe.disabled,
          id: b,
          onAnimationStart: Q,
          name: M,
          placeholder: N,
          readOnly: L,
          required: xe.required,
          rows: D,
          value: ne,
          onKeyDown: R,
          onKeyUp: A,
          type: G,
          ...ie,
          ...!og(he) && {
            as: J,
            ownerState: {
              ...H,
              ...ie.ownerState
            }
          },
          ref: re,
          className: Ie(X.input, ie.className, L && "MuiInputBase-readOnly"),
          onBlur: Ve,
          onChange: Me,
          onFocus: Ee
        })
      }), g, V ? V({
        ...xe,
        startAdornment: q
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (fp.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": a.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: jP,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: _i,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: a.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * @ignore
   */
  onKeyUp: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * @ignore
   */
  renderSuffix: a.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The size of the component.
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
function nU(e) {
  return typeof e.main == "string";
}
function oU(e, t = []) {
  if (!nU(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function pp(e = []) {
  return ([, t]) => t && oU(t, e);
}
function rU(e) {
  return vn("MuiInput", e);
}
const Za = {
  ...ya,
  ...Cn("MuiInput", ["root", "underline", "input"])
}, iU = (e) => {
  const {
    classes: t,
    disableUnderline: n
  } = e, r = En({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, rU, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...r
  };
}, sU = lt(up, {
  shouldForwardProp: (e) => Mr(e) || e === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...lp(e, t), !n.disableUnderline && t.underline];
  }
})(qn(({
  theme: e
}) => {
  let n = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e.vars && (n = `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`), {
    position: "relative",
    variants: [{
      props: ({
        ownerState: o
      }) => o.formControl,
      style: {
        "label + &": {
          marginTop: 16
        }
      }
    }, {
      props: ({
        ownerState: o
      }) => !o.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${Za.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${Za.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${Za.disabled}, .${Za.error}):before`]: {
          borderBottom: `2px solid ${(e.vars || e).palette.text.primary}`,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            borderBottom: `1px solid ${n}`
          }
        },
        [`&.${Za.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(pp()).map(([o]) => ({
      props: {
        color: o,
        disableUnderline: !1
      },
      style: {
        "&::after": {
          borderBottom: `2px solid ${(e.vars || e).palette[o].main}`
        }
      }
    }))]
  };
})), aU = lt(dp, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: cp
})({}), hp = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = An({
    props: t,
    name: "MuiInput"
  }), {
    disableUnderline: r = !1,
    components: i = {},
    componentsProps: s,
    fullWidth: l = !1,
    inputComponent: c = "input",
    multiline: u = !1,
    slotProps: d,
    slots: f = {},
    type: p = "text",
    ...h
  } = o, g = iU(o), y = {
    root: {
      ownerState: {
        disableUnderline: r
      }
    }
  }, b = d ?? s ? Wn(d ?? s, y) : y, T = f.root ?? i.Root ?? sU, v = f.input ?? i.Input ?? aU;
  return /* @__PURE__ */ O(fp, {
    slots: {
      root: T,
      input: v
    },
    slotProps: b,
    fullWidth: l,
    inputComponent: c,
    multiline: u,
    ref: n,
    type: p,
    ...h,
    classes: g
  });
});
process.env.NODE_ENV !== "production" && (hp.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, the `input` will not have an underline.
   * @default false
   */
  disableUnderline: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: _i,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
hp.muiName = "Input";
function lU(e) {
  return vn("MuiFilledInput", e);
}
const Wi = {
  ...ya,
  ...Cn("MuiFilledInput", ["root", "underline", "input", "adornedStart", "adornedEnd", "sizeSmall", "multiline", "hiddenLabel"])
};
function cU(e) {
  return vn("MuiSvgIcon", e);
}
Cn("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const uU = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: o
  } = e, r = {
    root: ["root", t !== "inherit" && `color${dn(t)}`, `fontSize${dn(n)}`]
  };
  return En(r, cU, o);
}, dU = lt("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${dn(n.color)}`], t[`fontSize${dn(n.fontSize)}`]];
  }
})(qn(({
  theme: e
}) => {
  var t, n, o, r, i, s, l, c, u, d, f, p, h, g;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (r = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : r.call(t, "fill", {
      duration: (o = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : o.shorter
    }),
    variants: [
      {
        props: (m) => !m.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((s = (i = e.typography) == null ? void 0 : i.pxToRem) == null ? void 0 : s.call(i, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((c = (l = e.typography) == null ? void 0 : l.pxToRem) == null ? void 0 : c.call(l, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((d = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : d.call(u, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, m]) => m && m.main).map(([m]) => {
        var y, b;
        return {
          props: {
            color: m
          },
          style: {
            color: (b = (y = (e.vars ?? e).palette) == null ? void 0 : y[m]) == null ? void 0 : b.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (p = (f = (e.vars ?? e).palette) == null ? void 0 : f.action) == null ? void 0 : p.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (g = (h = (e.vars ?? e).palette) == null ? void 0 : h.action) == null ? void 0 : g.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), Bd = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = An({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: r,
    className: i,
    color: s = "inherit",
    component: l = "svg",
    fontSize: c = "medium",
    htmlColor: u,
    inheritViewBox: d = !1,
    titleAccess: f,
    viewBox: p = "0 0 24 24",
    ...h
  } = o, g = /* @__PURE__ */ $.isValidElement(r) && r.type === "svg", m = {
    ...o,
    color: s,
    component: l,
    fontSize: c,
    instanceFontSize: t.fontSize,
    inheritViewBox: d,
    viewBox: p,
    hasSvgAsChild: g
  }, y = {};
  d || (y.viewBox = p);
  const b = uU(m);
  return /* @__PURE__ */ Se(dU, {
    as: l,
    className: Ie(b.root, i),
    focusable: "false",
    color: u,
    "aria-hidden": f ? void 0 : !0,
    role: f ? "img" : void 0,
    ref: n,
    ...y,
    ...h,
    ...g && r.props,
    ownerState: m,
    children: [g ? r.props.children : r, f ? /* @__PURE__ */ O("title", {
      children: f
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (Bd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: a.oneOfType([a.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: a.oneOfType([a.oneOf(["inherit", "large", "medium", "small"]), a.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: a.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: a.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Reference/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: a.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: a.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: a.string
});
Bd.muiName = "SvgIcon";
function fU(e, t) {
  function n(o, r) {
    return /* @__PURE__ */ O(Bd, {
      "data-testid": process.env.NODE_ENV !== "production" ? `${t}Icon` : void 0,
      ref: r,
      ...o,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = Bd.muiName, /* @__PURE__ */ $.memo(/* @__PURE__ */ $.forwardRef(n));
}
function pU(e, t) {
  const n = e.charCodeAt(2);
  return e[0] === "o" && e[1] === "n" && n >= 65 && n <= 90 && typeof t == "function";
}
function hU(e, t) {
  if (!e)
    return t;
  function n(s, l) {
    const c = {};
    return Object.keys(l).forEach((u) => {
      pU(u, l[u]) && typeof s[u] == "function" && (c[u] = (...d) => {
        s[u](...d), l[u](...d);
      });
    }), c;
  }
  if (typeof e == "function" || typeof t == "function")
    return (s) => {
      const l = typeof t == "function" ? t(s) : t, c = typeof e == "function" ? e({
        ...s,
        ...l
      }) : e, u = Ie(s == null ? void 0 : s.className, l == null ? void 0 : l.className, c == null ? void 0 : c.className), d = n(c, l);
      return {
        ...l,
        ...c,
        ...d,
        ...!!u && {
          className: u
        },
        ...(l == null ? void 0 : l.style) && (c == null ? void 0 : c.style) && {
          style: {
            ...l.style,
            ...c.style
          }
        },
        ...(l == null ? void 0 : l.sx) && (c == null ? void 0 : c.sx) && {
          sx: [...Array.isArray(l.sx) ? l.sx : [l.sx], ...Array.isArray(c.sx) ? c.sx : [c.sx]]
        }
      };
    };
  const o = t, r = n(e, o), i = Ie(o == null ? void 0 : o.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...r,
    ...!!i && {
      className: i
    },
    ...(o == null ? void 0 : o.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...o.style,
        ...e.style
      }
    },
    ...(o == null ? void 0 : o.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(o.sx) ? o.sx : [o.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
const mU = (e) => {
  const {
    classes: t,
    disableUnderline: n,
    startAdornment: o,
    endAdornment: r,
    size: i,
    hiddenLabel: s,
    multiline: l
  } = e, c = {
    root: ["root", !n && "underline", o && "adornedStart", r && "adornedEnd", i === "small" && `size${dn(i)}`, s && "hiddenLabel", l && "multiline"],
    input: ["input"]
  }, u = En(c, lU, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...u
  };
}, gU = lt(up, {
  shouldForwardProp: (e) => Mr(e) || e === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...lp(e, t), !n.disableUnderline && t.underline];
  }
})(qn(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = t ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", o = t ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", r = t ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", i = t ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return {
    position: "relative",
    backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : o,
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create("background-color", {
      duration: e.transitions.duration.shorter,
      easing: e.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.hoverBg : r,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : o
      }
    },
    [`&.${Wi.focused}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : o
    },
    [`&.${Wi.disabled}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.disabledBg : i
    },
    variants: [{
      props: ({
        ownerState: s
      }) => !s.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${Wi.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${Wi.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})` : n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${Wi.disabled}, .${Wi.error}):before`]: {
          borderBottom: `1px solid ${(e.vars || e).palette.text.primary}`
        },
        [`&.${Wi.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(pp()).map(([s]) => {
      var l;
      return {
        props: {
          disableUnderline: !1,
          color: s
        },
        style: {
          "&::after": {
            borderBottom: `2px solid ${(l = (e.vars || e).palette[s]) == null ? void 0 : l.main}`
          }
        }
      };
    }), {
      props: ({
        ownerState: s
      }) => s.startAdornment,
      style: {
        paddingLeft: 12
      }
    }, {
      props: ({
        ownerState: s
      }) => s.endAdornment,
      style: {
        paddingRight: 12
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline,
      style: {
        padding: "25px 12px 8px"
      }
    }, {
      props: ({
        ownerState: s,
        size: l
      }) => s.multiline && l === "small",
      style: {
        paddingTop: 21,
        paddingBottom: 4
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline && s.hiddenLabel,
      style: {
        paddingTop: 16,
        paddingBottom: 17
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline && s.hiddenLabel && s.size === "small",
      style: {
        paddingTop: 8,
        paddingBottom: 9
      }
    }]
  };
})), yU = lt(dp, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: cp
})(qn(({
  theme: e
}) => ({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12,
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      paddingTop: 21,
      paddingBottom: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel,
    style: {
      paddingTop: 16,
      paddingBottom: 17
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel && t.size === "small",
    style: {
      paddingTop: 8,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      paddingTop: 0,
      paddingBottom: 0,
      paddingLeft: 0,
      paddingRight: 0
    }
  }]
}))), mp = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = An({
    props: t,
    name: "MuiFilledInput"
  }), {
    disableUnderline: r = !1,
    components: i = {},
    componentsProps: s,
    fullWidth: l = !1,
    hiddenLabel: c,
    // declare here to prevent spreading to DOM
    inputComponent: u = "input",
    multiline: d = !1,
    slotProps: f,
    slots: p = {},
    type: h = "text",
    ...g
  } = o, m = {
    ...o,
    disableUnderline: r,
    fullWidth: l,
    inputComponent: u,
    multiline: d,
    type: h
  }, y = mU(o), b = {
    root: {
      ownerState: m
    },
    input: {
      ownerState: m
    }
  }, T = f ?? s ? Wn(b, f ?? s) : b, v = p.root ?? i.Root ?? gU, w = p.input ?? i.Input ?? yU;
  return /* @__PURE__ */ O(fp, {
    slots: {
      root: v,
      input: w
    },
    slotProps: T,
    fullWidth: l,
    inputComponent: u,
    multiline: d,
    ref: n,
    type: h,
    ...g,
    classes: y
  });
});
process.env.NODE_ENV !== "production" && (mp.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, the input will not have an underline.
   * @default false
   */
  disableUnderline: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: _i,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
mp.muiName = "Input";
var Qw;
const bU = lt("fieldset", {
  shouldForwardProp: Mr
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), vU = lt("legend", {
  shouldForwardProp: Mr
})(qn(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function JP(e) {
  const {
    children: t,
    classes: n,
    className: o,
    label: r,
    notched: i,
    ...s
  } = e, l = r != null && r !== "", c = {
    ...e,
    notched: i,
    withLabel: l
  };
  return /* @__PURE__ */ O(bU, {
    "aria-hidden": !0,
    className: o,
    ownerState: c,
    ...s,
    children: /* @__PURE__ */ O(vU, {
      ownerState: c,
      children: l ? /* @__PURE__ */ O("span", {
        children: r
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        Qw || (Qw = /* @__PURE__ */ O("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (JP.propTypes = {
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The label.
   */
  label: a.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: a.bool.isRequired,
  /**
   * @ignore
   */
  style: a.object
});
function xU(e) {
  return vn("MuiOutlinedInput", e);
}
const fr = {
  ...ya,
  ...Cn("MuiOutlinedInput", ["root", "notchedOutline", "input"])
}, wU = (e) => {
  const {
    classes: t
  } = e, o = En({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, xU, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...o
  };
}, SU = lt(up, {
  shouldForwardProp: (e) => Mr(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: lp
})(qn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${fr.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${fr.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${fr.focused} .${fr.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(pp()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${fr.focused} .${fr.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${fr.error} .${fr.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${fr.disabled} .${fr.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: o
      }) => n.multiline && o === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), TU = lt(JP, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(qn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), CU = lt(dp, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: cp
})(qn(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), gp = /* @__PURE__ */ $.forwardRef(function(t, n) {
  var o;
  const r = An({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: i = {},
    fullWidth: s = !1,
    inputComponent: l = "input",
    label: c,
    multiline: u = !1,
    notched: d,
    slots: f = {},
    type: p = "text",
    ...h
  } = r, g = wU(r), m = za(), y = ja({
    props: r,
    muiFormControl: m,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), b = {
    ...r,
    color: y.color || "primary",
    disabled: y.disabled,
    error: y.error,
    focused: y.focused,
    formControl: m,
    fullWidth: s,
    hiddenLabel: y.hiddenLabel,
    multiline: u,
    size: y.size,
    type: p
  }, T = f.root ?? i.Root ?? SU, v = f.input ?? i.Input ?? CU;
  return /* @__PURE__ */ O(fp, {
    slots: {
      root: T,
      input: v
    },
    renderSuffix: (w) => /* @__PURE__ */ O(TU, {
      ownerState: b,
      className: g.notchedOutline,
      label: c != null && c !== "" && y.required ? o || (o = /* @__PURE__ */ Se($.Fragment, {
        children: [c, " ", "*"]
      })) : c,
      notched: typeof d < "u" ? d : !!(w.startAdornment || w.filled || w.focused)
    }),
    fullWidth: s,
    inputComponent: l,
    multiline: u,
    ref: n,
    type: p,
    ...h,
    classes: {
      ...g,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (gp.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: _i,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: a.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: a.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
gp.muiName = "Input";
function EU(e) {
  return vn("MuiFormLabel", e);
}
const _l = Cn("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]), OU = (e) => {
  const {
    classes: t,
    color: n,
    focused: o,
    disabled: r,
    error: i,
    filled: s,
    required: l
  } = e, c = {
    root: ["root", `color${dn(n)}`, r && "disabled", i && "error", s && "filled", o && "focused", l && "required"],
    asterisk: ["asterisk", i && "error"]
  };
  return En(c, EU, t);
}, PU = lt("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color === "secondary" && t.colorSecondary, n.filled && t.filled];
  }
})(qn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.body1,
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  variants: [...Object.entries(e.palette).filter(pp()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${_l.focused}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    props: {},
    style: {
      [`&.${_l.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      },
      [`&.${_l.error}`]: {
        color: (e.vars || e).palette.error.main
      }
    }
  }]
}))), RU = lt("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (e, t) => t.asterisk
})(qn(({
  theme: e
}) => ({
  [`&.${_l.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}))), eR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = An({
    props: t,
    name: "MuiFormLabel"
  }), {
    children: r,
    className: i,
    color: s,
    component: l = "label",
    disabled: c,
    error: u,
    filled: d,
    focused: f,
    required: p,
    ...h
  } = o, g = za(), m = ja({
    props: o,
    muiFormControl: g,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  }), y = {
    ...o,
    color: m.color || "primary",
    component: l,
    disabled: m.disabled,
    error: m.error,
    filled: m.filled,
    focused: m.focused,
    required: m.required
  }, b = OU(y);
  return /* @__PURE__ */ Se(PU, {
    as: l,
    ownerState: y,
    className: Ie(b.root, i),
    ref: n,
    ...h,
    children: [r, m.required && /* @__PURE__ */ Se(RU, {
      ownerState: y,
      "aria-hidden": !0,
      className: b.asterisk,
      children: [" ", "*"]
    })]
  });
});
process.env.NODE_ENV !== "production" && (eR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: a.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: a.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: a.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function IU(e) {
  return vn("MuiInputLabel", e);
}
Cn("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]);
const kU = (e) => {
  const {
    classes: t,
    formControl: n,
    size: o,
    shrink: r,
    disableAnimation: i,
    variant: s,
    required: l
  } = e, c = {
    root: ["root", n && "formControl", !i && "animated", r && "shrink", o && o !== "medium" && `size${dn(o)}`, s],
    asterisk: [l && "asterisk"]
  }, u = En(c, IU, t);
  return {
    ...t,
    // forward the focused, disabled, etc. classes to the FormLabel
    ...u
  };
}, $U = lt(eR, {
  shouldForwardProp: (e) => Mr(e) || e === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${_l.asterisk}`]: t.asterisk
    }, t.root, n.formControl && t.formControl, n.size === "small" && t.sizeSmall, n.shrink && t.shrink, !n.disableAnimation && t.animated, n.focused && t.focused, t[n.variant]];
  }
})(qn(({
  theme: e
}) => ({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%",
  variants: [{
    props: ({
      ownerState: t
    }) => t.formControl,
    style: {
      position: "absolute",
      left: 0,
      top: 0,
      // slight alteration to spec spacing to match visual spec result
      transform: "translate(0, 20px) scale(1)"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      // Compensation for the `Input.inputSizeSmall` style.
      transform: "translate(0, 17px) scale(1)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.shrink,
    style: {
      transform: "translate(0, -1.5px) scale(0.75)",
      transformOrigin: "top left",
      maxWidth: "133%"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableAnimation,
    style: {
      transition: e.transitions.create(["color", "transform", "max-width"], {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      // Chrome's autofill feature gives the input field a yellow background.
      // Since the input field is behind the label in the HTML tree,
      // the input field is drawn last and hides the label with an opaque background color.
      // zIndex: 1 will raise the label above opaque background-colors of input.
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(12px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "filled",
      size: "small"
    },
    style: {
      transform: "translate(12px, 13px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "filled" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      transform: "translate(12px, 7px) scale(0.75)",
      maxWidth: "calc(133% - 24px)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n,
      size: o
    }) => t === "filled" && n.shrink && o === "small",
    style: {
      transform: "translate(12px, 4px) scale(0.75)"
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      // see comment above on filled.zIndex
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(14px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "outlined",
      size: "small"
    },
    style: {
      transform: "translate(14px, 9px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "outlined" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      // Theoretically, we should have (8+5)*2/0.75 = 34px
      // but it feels a better when it bleeds a bit on the left, so 32px.
      maxWidth: "calc(133% - 32px)",
      transform: "translate(14px, -9px) scale(0.75)"
    }
  }]
}))), tR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = An({
    name: "MuiInputLabel",
    props: t
  }), {
    disableAnimation: r = !1,
    margin: i,
    shrink: s,
    variant: l,
    className: c,
    ...u
  } = o, d = za();
  let f = s;
  typeof f > "u" && d && (f = d.filled || d.focused || d.adornedStart);
  const p = ja({
    props: o,
    muiFormControl: d,
    states: ["size", "variant", "required", "focused"]
  }), h = {
    ...o,
    disableAnimation: r,
    formControl: d,
    shrink: f,
    size: p.size,
    variant: p.variant,
    required: p.required,
    focused: p.focused
  }, g = kU(h);
  return /* @__PURE__ */ O($U, {
    "data-shrink": f,
    ref: n,
    className: Ie(g.root, c),
    ...u,
    ownerState: h,
    classes: g
  });
});
process.env.NODE_ENV !== "production" && (tR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), a.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: a.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: a.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: a.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: a.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: a.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: a.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
function NU(e) {
  return vn("MuiFormControl", e);
}
Cn("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]);
const MU = (e) => {
  const {
    classes: t,
    margin: n,
    fullWidth: o
  } = e, r = {
    root: ["root", n !== "none" && `margin${dn(n)}`, o && "fullWidth"]
  };
  return En(r, NU, t);
}, AU = lt("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`margin${dn(n.margin)}`], n.fullWidth && t.fullWidth];
  }
})({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top",
  // Fix alignment issue on Safari.
  variants: [{
    props: {
      margin: "normal"
    },
    style: {
      marginTop: 16,
      marginBottom: 8
    }
  }, {
    props: {
      margin: "dense"
    },
    style: {
      marginTop: 8,
      marginBottom: 4
    }
  }, {
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }]
}), nR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = An({
    props: t,
    name: "MuiFormControl"
  }), {
    children: r,
    className: i,
    color: s = "primary",
    component: l = "div",
    disabled: c = !1,
    error: u = !1,
    focused: d,
    fullWidth: f = !1,
    hiddenLabel: p = !1,
    margin: h = "none",
    required: g = !1,
    size: m = "medium",
    variant: y = "outlined",
    ...b
  } = o, T = {
    ...o,
    color: s,
    component: l,
    disabled: c,
    error: u,
    fullWidth: f,
    hiddenLabel: p,
    margin: h,
    required: g,
    size: m,
    variant: y
  }, v = MU(T), [w, S] = $.useState(() => {
    let N = !1;
    return r && $.Children.forEach(r, (L) => {
      if (!Th(L, ["Input", "Select"]))
        return;
      const V = Th(L, ["Select"]) ? L.props.input : L;
      V && JW(V.props) && (N = !0);
    }), N;
  }), [C, E] = $.useState(() => {
    let N = !1;
    return r && $.Children.forEach(r, (L) => {
      Th(L, ["Input", "Select"]) && (Ld(L.props, !0) || Ld(L.props.inputProps, !0)) && (N = !0);
    }), N;
  }), [P, M] = $.useState(!1);
  c && P && M(!1);
  const x = d !== void 0 && !c ? d : P;
  let I;
  const k = $.useRef(!1);
  process.env.NODE_ENV !== "production" && (I = () => (k.current && console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join(`
`)), k.current = !0, () => {
    k.current = !1;
  }));
  const _ = $.useCallback(() => {
    E(!0);
  }, []), R = $.useCallback(() => {
    E(!1);
  }, []), A = $.useMemo(() => ({
    adornedStart: w,
    setAdornedStart: S,
    color: s,
    disabled: c,
    error: u,
    filled: C,
    focused: x,
    fullWidth: f,
    hiddenLabel: p,
    size: m,
    onBlur: () => {
      M(!1);
    },
    onFocus: () => {
      M(!0);
    },
    onEmpty: R,
    onFilled: _,
    registerEffect: I,
    required: g,
    variant: y
  }), [w, s, c, u, C, x, f, p, I, R, _, g, m, y]);
  return /* @__PURE__ */ O(ap.Provider, {
    value: A,
    children: /* @__PURE__ */ O(AU, {
      as: l,
      ownerState: T,
      className: Ie(v.root, i),
      ref: n,
      ...b,
      children: r
    })
  });
});
process.env.NODE_ENV !== "production" && (nR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: a.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: a.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: a.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: a.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: a.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
function _U(e) {
  return vn("MuiFormHelperText", e);
}
const Jw = Cn("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]);
var eS;
const DU = (e) => {
  const {
    classes: t,
    contained: n,
    size: o,
    disabled: r,
    error: i,
    filled: s,
    focused: l,
    required: c
  } = e, u = {
    root: ["root", r && "disabled", i && "error", o && `size${dn(o)}`, n && "contained", l && "focused", s && "filled", c && "required"]
  };
  return En(u, _U, t);
}, LU = lt("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size && t[`size${dn(n.size)}`], n.contained && t.contained, n.filled && t.filled];
  }
})(qn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.caption,
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${Jw.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${Jw.error}`]: {
    color: (e.vars || e).palette.error.main
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginTop: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.contained,
    style: {
      marginLeft: 14,
      marginRight: 14
    }
  }]
}))), oR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = An({
    props: t,
    name: "MuiFormHelperText"
  }), {
    children: r,
    className: i,
    component: s = "p",
    disabled: l,
    error: c,
    filled: u,
    focused: d,
    margin: f,
    required: p,
    variant: h,
    ...g
  } = o, m = za(), y = ja({
    props: o,
    muiFormControl: m,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  }), b = {
    ...o,
    component: s,
    contained: y.variant === "filled" || y.variant === "outlined",
    variant: y.variant,
    size: y.size,
    disabled: y.disabled,
    error: y.error,
    filled: y.filled,
    focused: y.focused,
    required: y.required
  };
  delete b.ownerState;
  const T = DU(b);
  return /* @__PURE__ */ O(LU, {
    as: s,
    className: Ie(T.root, i),
    ref: n,
    ...g,
    ownerState: b,
    children: r === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      eS || (eS = /* @__PURE__ */ O("span", {
        className: "notranslate",
        "aria-hidden": !0,
        children: "​"
      }))
    ) : r
  });
});
process.env.NODE_ENV !== "production" && (oR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: a.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: a.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: a.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: a.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: a.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   */
  variant: a.oneOfType([a.oneOf(["filled", "outlined", "standard"]), a.string])
});
const rR = /* @__PURE__ */ $.createContext({});
process.env.NODE_ENV !== "production" && (rR.displayName = "ListContext");
function BU(e) {
  return vn("MuiList", e);
}
Cn("MuiList", ["root", "padding", "dense", "subheader"]);
const VU = (e) => {
  const {
    classes: t,
    disablePadding: n,
    dense: o,
    subheader: r
  } = e;
  return En({
    root: ["root", !n && "padding", o && "dense", r && "subheader"]
  }, BU, t);
}, FU = lt("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.disablePadding && t.padding, n.dense && t.dense, n.subheader && t.subheader];
  }
})({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative",
  variants: [{
    props: ({
      ownerState: e
    }) => !e.disablePadding,
    style: {
      paddingTop: 8,
      paddingBottom: 8
    }
  }, {
    props: ({
      ownerState: e
    }) => e.subheader,
    style: {
      paddingTop: 0
    }
  }]
}), iR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = An({
    props: t,
    name: "MuiList"
  }), {
    children: r,
    className: i,
    component: s = "ul",
    dense: l = !1,
    disablePadding: c = !1,
    subheader: u,
    ...d
  } = o, f = $.useMemo(() => ({
    dense: l
  }), [l]), p = {
    ...o,
    component: s,
    dense: l,
    disablePadding: c
  }, h = VU(p);
  return /* @__PURE__ */ O(rR.Provider, {
    value: f,
    children: /* @__PURE__ */ Se(FU, {
      as: s,
      className: Ie(h.root, i),
      ref: n,
      ownerState: p,
      ...d,
      children: [u, r]
    })
  });
});
process.env.NODE_ENV !== "production" && (iR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: a.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: a.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function Eh(e, t, n) {
  return e === t ? e.firstChild : t && t.nextElementSibling ? t.nextElementSibling : n ? null : e.firstChild;
}
function tS(e, t, n) {
  return e === t ? n ? e.firstChild : e.lastChild : t && t.previousElementSibling ? t.previousElementSibling : n ? null : e.lastChild;
}
function sR(e, t) {
  if (t === void 0)
    return !0;
  let n = e.innerText;
  return n === void 0 && (n = e.textContent), n = n.trim().toLowerCase(), n.length === 0 ? !1 : t.repeating ? n[0] === t.keys[0] : n.startsWith(t.keys.join(""));
}
function Qa(e, t, n, o, r, i) {
  let s = !1, l = r(e, t, t ? n : !1);
  for (; l; ) {
    if (l === e.firstChild) {
      if (s)
        return !1;
      s = !0;
    }
    const c = o ? !1 : l.disabled || l.getAttribute("aria-disabled") === "true";
    if (!l.hasAttribute("tabindex") || !sR(l, i) || c)
      l = r(e, l, n);
    else
      return l.focus(), !0;
  }
  return !1;
}
const aR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: o,
    autoFocus: r = !1,
    autoFocusItem: i = !1,
    children: s,
    className: l,
    disabledItemsFocusable: c = !1,
    disableListWrap: u = !1,
    onKeyDown: d,
    variant: f = "selectedMenu",
    ...p
  } = t, h = $.useRef(null), g = $.useRef({
    keys: [],
    repeating: !0,
    previousKeyMatched: !0,
    lastTime: null
  });
  ds(() => {
    r && h.current.focus();
  }, [r]), $.useImperativeHandle(o, () => ({
    adjustStyleForScrollbar: (v, {
      direction: w
    }) => {
      const S = !h.current.style.width;
      if (v.clientHeight < h.current.clientHeight && S) {
        const C = `${WP(Gr(v))}px`;
        h.current.style[w === "rtl" ? "paddingLeft" : "paddingRight"] = C, h.current.style.width = `calc(100% + ${C})`;
      }
      return h.current;
    }
  }), []);
  const m = (v) => {
    const w = h.current, S = v.key;
    if (v.ctrlKey || v.metaKey || v.altKey) {
      d && d(v);
      return;
    }
    const E = ar(w).activeElement;
    if (S === "ArrowDown")
      v.preventDefault(), Qa(w, E, u, c, Eh);
    else if (S === "ArrowUp")
      v.preventDefault(), Qa(w, E, u, c, tS);
    else if (S === "Home")
      v.preventDefault(), Qa(w, null, u, c, Eh);
    else if (S === "End")
      v.preventDefault(), Qa(w, null, u, c, tS);
    else if (S.length === 1) {
      const P = g.current, M = S.toLowerCase(), x = performance.now();
      P.keys.length > 0 && (x - P.lastTime > 500 ? (P.keys = [], P.repeating = !0, P.previousKeyMatched = !0) : P.repeating && M !== P.keys[0] && (P.repeating = !1)), P.lastTime = x, P.keys.push(M);
      const I = E && !P.repeating && sR(E, P);
      P.previousKeyMatched && (I || Qa(w, E, !1, c, Eh, P)) ? v.preventDefault() : P.previousKeyMatched = !1;
    }
    d && d(v);
  }, y = Go(h, n);
  let b = -1;
  $.Children.forEach(s, (v, w) => {
    if (!/* @__PURE__ */ $.isValidElement(v)) {
      b === w && (b += 1, b >= s.length && (b = -1));
      return;
    }
    process.env.NODE_ENV !== "production" && lo.isFragment(v) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), v.props.disabled || (f === "selectedMenu" && v.props.selected || b === -1) && (b = w), b === w && (v.props.disabled || v.props.muiSkipListHighlight || v.type.muiSkipListHighlight) && (b += 1, b >= s.length && (b = -1));
  });
  const T = $.Children.map(s, (v, w) => {
    if (w === b) {
      const S = {};
      return i && (S.autoFocus = !0), v.props.tabIndex === void 0 && f === "selectedMenu" && (S.tabIndex = 0), /* @__PURE__ */ $.cloneElement(v, S);
    }
    return v;
  });
  return /* @__PURE__ */ O(iR, {
    role: "menu",
    ref: y,
    className: l,
    onKeyDown: m,
    tabIndex: r ? 0 : -1,
    ...p,
    children: T
  });
});
process.env.NODE_ENV !== "production" && (aR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: a.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: a.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: a.node,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: a.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: a.bool,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: a.oneOf(["menu", "selectedMenu"])
});
const lR = (e) => e.scrollTop;
function Vd(e, t) {
  const {
    timeout: n,
    easing: o,
    style: r = {}
  } = e;
  return {
    duration: r.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: r.transitionTimingFunction ?? (typeof o == "object" ? o[t.mode] : o),
    delay: r.transitionDelay
  };
}
function rg(e) {
  return `scale(${e}, ${e ** 2})`;
}
const jU = {
  entering: {
    opacity: 1,
    transform: rg(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, Oh = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), Fd = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const {
    addEndListener: o,
    appear: r = !0,
    children: i,
    easing: s,
    in: l,
    onEnter: c,
    onEntered: u,
    onEntering: d,
    onExit: f,
    onExited: p,
    onExiting: h,
    style: g,
    timeout: m = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: y = Ro,
    ...b
  } = t, T = KW(), v = $.useRef(), w = Eb(), S = $.useRef(null), C = Go(S, Yc(i), n), E = (A) => (N) => {
    if (A) {
      const L = S.current;
      N === void 0 ? A(L) : A(L, N);
    }
  }, P = E(d), M = E((A, N) => {
    lR(A);
    const {
      duration: L,
      delay: V,
      easing: D
    } = Vd({
      style: g,
      timeout: m,
      easing: s
    }, {
      mode: "enter"
    });
    let B;
    m === "auto" ? (B = w.transitions.getAutoHeightDuration(A.clientHeight), v.current = B) : B = L, A.style.transition = [w.transitions.create("opacity", {
      duration: B,
      delay: V
    }), w.transitions.create("transform", {
      duration: Oh ? B : B * 0.666,
      delay: V,
      easing: D
    })].join(","), c && c(A, N);
  }), x = E(u), I = E(h), k = E((A) => {
    const {
      duration: N,
      delay: L,
      easing: V
    } = Vd({
      style: g,
      timeout: m,
      easing: s
    }, {
      mode: "exit"
    });
    let D;
    m === "auto" ? (D = w.transitions.getAutoHeightDuration(A.clientHeight), v.current = D) : D = N, A.style.transition = [w.transitions.create("opacity", {
      duration: D,
      delay: L
    }), w.transitions.create("transform", {
      duration: Oh ? D : D * 0.666,
      delay: Oh ? L : L || D * 0.333,
      easing: V
    })].join(","), A.style.opacity = 0, A.style.transform = rg(0.75), f && f(A);
  }), _ = E(p);
  return /* @__PURE__ */ O(y, {
    appear: r,
    in: l,
    nodeRef: S,
    onEnter: M,
    onEntered: x,
    onEntering: P,
    onExit: k,
    onExited: _,
    onExiting: I,
    addEndListener: (A) => {
      m === "auto" && T.start(v.current || 0, A), o && o(S.current, A);
    },
    timeout: m === "auto" ? null : m,
    ...b,
    children: (A, {
      ownerState: N,
      ...L
    }) => /* @__PURE__ */ $.cloneElement(i, {
      style: {
        opacity: 0,
        transform: rg(0.75),
        visibility: A === "exited" && !l ? "hidden" : void 0,
        ...jU[A],
        ...g,
        ...i.props.style
      },
      ref: C,
      ...L
    })
  });
});
process.env.NODE_ENV !== "production" && (Fd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: Gc.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
Fd && (Fd.muiSupportAuto = !0);
function zU(e) {
  const t = ar(e);
  return t.body === e ? Gr(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function Dl(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function nS(e) {
  return parseInt(Gr(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function HU(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), o = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || o;
}
function oS(e, t, n, o, r) {
  const i = [t, n, ...o];
  [].forEach.call(e.children, (s) => {
    const l = !i.includes(s), c = !HU(s);
    l && c && Dl(s, r);
  });
}
function Ph(e, t) {
  let n = -1;
  return e.some((o, r) => t(o) ? (n = r, !0) : !1), n;
}
function WU(e, t) {
  const n = [], o = e.container;
  if (!t.disableScrollLock) {
    if (zU(o)) {
      const s = WP(Gr(o));
      n.push({
        value: o.style.paddingRight,
        property: "padding-right",
        el: o
      }), o.style.paddingRight = `${nS(o) + s}px`;
      const l = ar(o).querySelectorAll(".mui-fixed");
      [].forEach.call(l, (c) => {
        n.push({
          value: c.style.paddingRight,
          property: "padding-right",
          el: c
        }), c.style.paddingRight = `${nS(c) + s}px`;
      });
    }
    let i;
    if (o.parentNode instanceof DocumentFragment)
      i = ar(o).body;
    else {
      const s = o.parentElement, l = Gr(o);
      i = (s == null ? void 0 : s.nodeName) === "HTML" && l.getComputedStyle(s).overflowY === "scroll" ? s : o;
    }
    n.push({
      value: i.style.overflow,
      property: "overflow",
      el: i
    }, {
      value: i.style.overflowX,
      property: "overflow-x",
      el: i
    }, {
      value: i.style.overflowY,
      property: "overflow-y",
      el: i
    }), i.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: i,
      el: s,
      property: l
    }) => {
      i ? s.style.setProperty(l, i) : s.style.removeProperty(l);
    });
  };
}
function UU(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
class qU {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let o = this.modals.indexOf(t);
    if (o !== -1)
      return o;
    o = this.modals.length, this.modals.push(t), t.modalRef && Dl(t.modalRef, !1);
    const r = UU(n);
    oS(n, t.mount, t.modalRef, r, !0);
    const i = Ph(this.containers, (s) => s.container === n);
    return i !== -1 ? (this.containers[i].modals.push(t), o) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: r
    }), o);
  }
  mount(t, n) {
    const o = Ph(this.containers, (i) => i.modals.includes(t)), r = this.containers[o];
    r.restore || (r.restore = WU(r, n));
  }
  remove(t, n = !0) {
    const o = this.modals.indexOf(t);
    if (o === -1)
      return o;
    const r = Ph(this.containers, (s) => s.modals.includes(t)), i = this.containers[r];
    if (i.modals.splice(i.modals.indexOf(t), 1), this.modals.splice(o, 1), i.modals.length === 0)
      i.restore && i.restore(), t.modalRef && Dl(t.modalRef, n), oS(i.container, t.mount, t.modalRef, i.hiddenSiblings, !1), this.containers.splice(r, 1);
    else {
      const s = i.modals[i.modals.length - 1];
      s.modalRef && Dl(s.modalRef, !1);
    }
    return o;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
}
const KU = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function GU(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function YU(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (o) => e.ownerDocument.querySelector(`input[type="radio"]${o}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function XU(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || YU(e));
}
function ZU(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(KU)).forEach((o, r) => {
    const i = GU(o);
    i === -1 || !XU(o) || (i === 0 ? t.push(o) : n.push({
      documentOrder: r,
      tabIndex: i,
      node: o
    }));
  }), n.sort((o, r) => o.tabIndex === r.tabIndex ? o.documentOrder - r.documentOrder : o.tabIndex - r.tabIndex).map((o) => o.node).concat(t);
}
function QU() {
  return !0;
}
function jd(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: o = !1,
    disableRestoreFocus: r = !1,
    getTabbable: i = ZU,
    isEnabled: s = QU,
    open: l
  } = e, c = $.useRef(!1), u = $.useRef(null), d = $.useRef(null), f = $.useRef(null), p = $.useRef(null), h = $.useRef(!1), g = $.useRef(null), m = Go(Yc(t), g), y = $.useRef(null);
  $.useEffect(() => {
    !l || !g.current || (h.current = !n);
  }, [n, l]), $.useEffect(() => {
    if (!l || !g.current)
      return;
    const v = ar(g.current);
    return g.current.contains(v.activeElement) || (g.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), g.current.setAttribute("tabIndex", "-1")), h.current && g.current.focus()), () => {
      r || (f.current && f.current.focus && (c.current = !0, f.current.focus()), f.current = null);
    };
  }, [l]), $.useEffect(() => {
    if (!l || !g.current)
      return;
    const v = ar(g.current), w = (E) => {
      y.current = E, !(o || !s() || E.key !== "Tab") && v.activeElement === g.current && E.shiftKey && (c.current = !0, d.current && d.current.focus());
    }, S = () => {
      var M, x;
      const E = g.current;
      if (E === null)
        return;
      if (!v.hasFocus() || !s() || c.current) {
        c.current = !1;
        return;
      }
      if (E.contains(v.activeElement) || o && v.activeElement !== u.current && v.activeElement !== d.current)
        return;
      if (v.activeElement !== p.current)
        p.current = null;
      else if (p.current !== null)
        return;
      if (!h.current)
        return;
      let P = [];
      if ((v.activeElement === u.current || v.activeElement === d.current) && (P = i(g.current)), P.length > 0) {
        const I = !!((M = y.current) != null && M.shiftKey && ((x = y.current) == null ? void 0 : x.key) === "Tab"), k = P[0], _ = P[P.length - 1];
        typeof k != "string" && typeof _ != "string" && (I ? _.focus() : k.focus());
      } else
        E.focus();
    };
    v.addEventListener("focusin", S), v.addEventListener("keydown", w, !0);
    const C = setInterval(() => {
      v.activeElement && v.activeElement.tagName === "BODY" && S();
    }, 50);
    return () => {
      clearInterval(C), v.removeEventListener("focusin", S), v.removeEventListener("keydown", w, !0);
    };
  }, [n, o, r, s, l, i]);
  const b = (v) => {
    f.current === null && (f.current = v.relatedTarget), h.current = !0, p.current = v.target;
    const w = t.props.onFocus;
    w && w(v);
  }, T = (v) => {
    f.current === null && (f.current = v.relatedTarget), h.current = !0;
  };
  return /* @__PURE__ */ Se($.Fragment, {
    children: [/* @__PURE__ */ O("div", {
      tabIndex: l ? 0 : -1,
      onFocus: T,
      ref: u,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ $.cloneElement(t, {
      ref: m,
      onFocus: b
    }), /* @__PURE__ */ O("div", {
      tabIndex: l ? 0 : -1,
      onFocus: T,
      ref: d,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (jd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: Gc,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: a.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: a.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: a.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: a.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: a.func,
  /**
   * If `true`, focus is locked.
   */
  open: a.bool.isRequired
});
process.env.NODE_ENV !== "production" && (jd.propTypes = $P(jd.propTypes));
function JU(e) {
  return typeof e == "function" ? e() : e;
}
const zd = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const {
    children: o,
    container: r,
    disablePortal: i = !1
  } = t, [s, l] = $.useState(null), c = Go(/* @__PURE__ */ $.isValidElement(o) ? Yc(o) : null, n);
  if (ds(() => {
    i || l(JU(r) || document.body);
  }, [r, i]), ds(() => {
    if (s && !i)
      return Ww(n, s), () => {
        Ww(n, null);
      };
  }, [n, s, i]), i) {
    if (/* @__PURE__ */ $.isValidElement(o)) {
      const u = {
        ref: c
      };
      return /* @__PURE__ */ $.cloneElement(o, u);
    }
    return o;
  }
  return s && /* @__PURE__ */ aT.createPortal(o, s);
});
process.env.NODE_ENV !== "production" && (zd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: a.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([fc, a.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool
});
process.env.NODE_ENV !== "production" && (zd.propTypes = $P(zd.propTypes));
function Xn(e, t) {
  const {
    className: n,
    elementType: o,
    ownerState: r,
    externalForwardedProps: i,
    internalForwardedProps: s,
    shouldForwardComponentProp: l = !1,
    ...c
  } = t, {
    component: u,
    slots: d = {
      [e]: void 0
    },
    slotProps: f = {
      [e]: void 0
    },
    ...p
  } = i, h = d[e] || o, g = ZP(f[e], r), {
    props: {
      component: m,
      ...y
    },
    internalRef: b
  } = XP({
    className: n,
    ...c,
    externalForwardedProps: e === "root" ? p : void 0,
    externalSlotProps: g
  }), T = Go(b, g == null ? void 0 : g.ref, t.ref), v = e === "root" ? m || u : m, w = GP(h, {
    ...e === "root" && !u && !d[e] && s,
    ...e !== "root" && !d[e] && s,
    ...y,
    ...v && !l && {
      as: v
    },
    ...v && l && {
      component: v
    },
    ref: T
  }, r);
  return [h, w];
}
const e6 = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, cR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = Eb(), r = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    addEndListener: i,
    appear: s = !0,
    children: l,
    easing: c,
    in: u,
    onEnter: d,
    onEntered: f,
    onEntering: p,
    onExit: h,
    onExited: g,
    onExiting: m,
    style: y,
    timeout: b = r,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: T = Ro,
    ...v
  } = t, w = $.useRef(null), S = Go(w, Yc(l), n), C = (R) => (A) => {
    if (R) {
      const N = w.current;
      A === void 0 ? R(N) : R(N, A);
    }
  }, E = C(p), P = C((R, A) => {
    lR(R);
    const N = Vd({
      style: y,
      timeout: b,
      easing: c
    }, {
      mode: "enter"
    });
    R.style.webkitTransition = o.transitions.create("opacity", N), R.style.transition = o.transitions.create("opacity", N), d && d(R, A);
  }), M = C(f), x = C(m), I = C((R) => {
    const A = Vd({
      style: y,
      timeout: b,
      easing: c
    }, {
      mode: "exit"
    });
    R.style.webkitTransition = o.transitions.create("opacity", A), R.style.transition = o.transitions.create("opacity", A), h && h(R);
  }), k = C(g);
  return /* @__PURE__ */ O(T, {
    appear: s,
    in: u,
    nodeRef: w,
    onEnter: P,
    onEntered: M,
    onEntering: E,
    onExit: I,
    onExited: k,
    onExiting: x,
    addEndListener: (R) => {
      i && i(w.current, R);
    },
    timeout: b,
    ...v,
    children: (R, {
      ownerState: A,
      ...N
    }) => /* @__PURE__ */ $.cloneElement(l, {
      style: {
        opacity: 0,
        visibility: R === "exited" && !u ? "hidden" : void 0,
        ...e6[R],
        ...y,
        ...l.props.style
      },
      ref: S,
      ...N
    })
  });
});
process.env.NODE_ENV !== "production" && (cR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: Gc.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function t6(e) {
  return vn("MuiBackdrop", e);
}
Cn("MuiBackdrop", ["root", "invisible"]);
const n6 = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return En({
    root: ["root", n && "invisible"]
  }, t6, t);
}, o6 = lt("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), uR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = An({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: r,
    className: i,
    component: s = "div",
    invisible: l = !1,
    open: c,
    components: u = {},
    componentsProps: d = {},
    slotProps: f = {},
    slots: p = {},
    TransitionComponent: h,
    transitionDuration: g,
    ...m
  } = o, y = {
    ...o,
    component: s,
    invisible: l
  }, b = n6(y), T = {
    transition: h,
    root: u.Root,
    ...p
  }, v = {
    ...d,
    ...f
  }, w = {
    slots: T,
    slotProps: v
  }, [S, C] = Xn("root", {
    elementType: o6,
    externalForwardedProps: w,
    className: Ie(b.root, i),
    ownerState: y
  }), [E, P] = Xn("transition", {
    elementType: cR,
    externalForwardedProps: w,
    ownerState: y
  });
  return /* @__PURE__ */ O(E, {
    in: c,
    timeout: g,
    ...m,
    ...P,
    children: /* @__PURE__ */ O(S, {
      "aria-hidden": !0,
      ...C,
      classes: b,
      ref: n,
      children: r
    })
  });
});
process.env.NODE_ENV !== "production" && (uR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    root: a.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: a.bool,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: a.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function r6(e) {
  return typeof e == "function" ? e() : e;
}
function i6(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const rS = () => {
}, $u = new qU();
function s6(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: o = !1,
    closeAfterTransition: r = !1,
    onTransitionEnter: i,
    onTransitionExited: s,
    children: l,
    onClose: c,
    open: u,
    rootRef: d
  } = e, f = $.useRef({}), p = $.useRef(null), h = $.useRef(null), g = Go(h, d), [m, y] = $.useState(!u), b = i6(l);
  let T = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (T = !1);
  const v = () => ar(p.current), w = () => (f.current.modalRef = h.current, f.current.mount = p.current, f.current), S = () => {
    $u.mount(w(), {
      disableScrollLock: o
    }), h.current && (h.current.scrollTop = 0);
  }, C = tg(() => {
    const A = r6(t) || v().body;
    $u.add(w(), A), h.current && S();
  }), E = () => $u.isTopModal(w()), P = tg((A) => {
    p.current = A, A && (u && E() ? S() : h.current && Dl(h.current, T));
  }), M = $.useCallback(() => {
    $u.remove(w(), T);
  }, [T]);
  $.useEffect(() => () => {
    M();
  }, [M]), $.useEffect(() => {
    u ? C() : (!b || !r) && M();
  }, [u, M, b, r, C]);
  const x = (A) => (N) => {
    var L;
    (L = A.onKeyDown) == null || L.call(A, N), !(N.key !== "Escape" || N.which === 229 || // Wait until IME is settled.
    !E()) && (n || (N.stopPropagation(), c && c(N, "escapeKeyDown")));
  }, I = (A) => (N) => {
    var L;
    (L = A.onClick) == null || L.call(A, N), N.target === N.currentTarget && c && c(N, "backdropClick");
  };
  return {
    getRootProps: (A = {}) => {
      const N = YP(e);
      delete N.onTransitionEnter, delete N.onTransitionExited;
      const L = {
        ...N,
        ...A
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...L,
        onKeyDown: x(L),
        ref: g
      };
    },
    getBackdropProps: (A = {}) => {
      const N = A;
      return {
        "aria-hidden": !0,
        ...N,
        onClick: I(N),
        open: u
      };
    },
    getTransitionProps: () => {
      const A = () => {
        y(!1), i && i();
      }, N = () => {
        y(!0), s && s(), r && M();
      };
      return {
        onEnter: Hw(A, (l == null ? void 0 : l.props.onEnter) ?? rS),
        onExited: Hw(N, (l == null ? void 0 : l.props.onExited) ?? rS)
      };
    },
    rootRef: g,
    portalRef: P,
    isTopModal: E,
    exited: m,
    hasTransition: b
  };
}
function a6(e) {
  return vn("MuiModal", e);
}
Cn("MuiModal", ["root", "hidden", "backdrop"]);
const l6 = (e) => {
  const {
    open: t,
    exited: n,
    classes: o
  } = e;
  return En({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, a6, o);
}, c6 = lt("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(qn(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), u6 = lt(uR, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), dR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = An({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: r = u6,
    BackdropProps: i,
    classes: s,
    className: l,
    closeAfterTransition: c = !1,
    children: u,
    container: d,
    component: f,
    components: p = {},
    componentsProps: h = {},
    disableAutoFocus: g = !1,
    disableEnforceFocus: m = !1,
    disableEscapeKeyDown: y = !1,
    disablePortal: b = !1,
    disableRestoreFocus: T = !1,
    disableScrollLock: v = !1,
    hideBackdrop: w = !1,
    keepMounted: S = !1,
    onClose: C,
    onTransitionEnter: E,
    onTransitionExited: P,
    open: M,
    slotProps: x = {},
    slots: I = {},
    // eslint-disable-next-line react/prop-types
    theme: k,
    ..._
  } = o, R = {
    ...o,
    closeAfterTransition: c,
    disableAutoFocus: g,
    disableEnforceFocus: m,
    disableEscapeKeyDown: y,
    disablePortal: b,
    disableRestoreFocus: T,
    disableScrollLock: v,
    hideBackdrop: w,
    keepMounted: S
  }, {
    getRootProps: A,
    getBackdropProps: N,
    getTransitionProps: L,
    portalRef: V,
    isTopModal: D,
    exited: B,
    hasTransition: F
  } = s6({
    ...R,
    rootRef: n
  }), U = {
    ...R,
    exited: B
  }, q = l6(U), G = {};
  if (u.props.tabIndex === void 0 && (G.tabIndex = "-1"), F) {
    const {
      onEnter: Y,
      onExited: re
    } = L();
    G.onEnter = Y, G.onExited = re;
  }
  const K = {
    slots: {
      root: p.Root,
      backdrop: p.Backdrop,
      ...I
    },
    slotProps: {
      ...h,
      ...x
    }
  }, [te, ne] = Xn("root", {
    ref: n,
    elementType: c6,
    externalForwardedProps: {
      ...K,
      ..._,
      component: f
    },
    getSlotProps: A,
    ownerState: U,
    className: Ie(l, q == null ? void 0 : q.root, !U.open && U.exited && (q == null ? void 0 : q.hidden))
  }), [W, ee] = Xn("backdrop", {
    ref: i == null ? void 0 : i.ref,
    elementType: r,
    externalForwardedProps: K,
    shouldForwardComponentProp: !0,
    additionalProps: i,
    getSlotProps: (Y) => N({
      ...Y,
      onClick: (re) => {
        Y != null && Y.onClick && Y.onClick(re);
      }
    }),
    className: Ie(i == null ? void 0 : i.className, q == null ? void 0 : q.backdrop),
    ownerState: U
  });
  return !S && !M && (!F || B) ? null : /* @__PURE__ */ O(zd, {
    ref: V,
    container: d,
    disablePortal: b,
    children: /* @__PURE__ */ Se(te, {
      ...ne,
      children: [!w && r ? /* @__PURE__ */ O(W, {
        ...ee
      }) : null, /* @__PURE__ */ O(jd, {
        disableEnforceFocus: m,
        disableAutoFocus: g,
        disableRestoreFocus: T,
        isEnabled: D,
        open: M,
        children: /* @__PURE__ */ $.cloneElement(u, G)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (dR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: a.object,
  /**
   * A single child content element.
   */
  children: Gc.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: a.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Backdrop: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([fc, a.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: a.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: a.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: a.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: a.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: a.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: a.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: a.bool,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: a.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: a.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function d6(e) {
  return vn("MuiPaper", e);
}
Cn("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const f6 = (e) => {
  const {
    square: t,
    elevation: n,
    variant: o,
    classes: r
  } = e, i = {
    root: ["root", o, !t && "rounded", o === "elevation" && `elevation${n}`]
  };
  return En(i, d6, r);
}, p6 = lt("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(qn(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), fR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  var h;
  const o = An({
    props: t,
    name: "MuiPaper"
  }), r = Eb(), {
    className: i,
    component: s = "div",
    elevation: l = 1,
    square: c = !1,
    variant: u = "elevation",
    ...d
  } = o, f = {
    ...o,
    component: s,
    elevation: l,
    square: c,
    variant: u
  }, p = f6(f);
  return process.env.NODE_ENV !== "production" && r.shadows[l] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${l}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${l}]\` is defined.`].join(`
`)), /* @__PURE__ */ O(p6, {
    as: s,
    ownerState: f,
    className: Ie(p.root, i),
    ref: n,
    ...d,
    style: {
      ...u === "elevation" && {
        "--Paper-shadow": (r.vars || r).shadows[l],
        ...r.vars && {
          "--Paper-overlay": (h = r.vars.overlays) == null ? void 0 : h[l]
        },
        ...!r.vars && r.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${Qm("#fff", eg(l))}, ${Qm("#fff", eg(l))})`
        }
      },
      ...d.style
    }
  });
});
process.env.NODE_ENV !== "production" && (fR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: Kc(KP, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: a.bool,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: a.oneOfType([a.oneOf(["elevation", "outlined"]), a.string])
});
function h6(e) {
  return vn("MuiPopover", e);
}
Cn("MuiPopover", ["root", "paper"]);
function iS(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function sS(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function aS(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function gl(e) {
  return typeof e == "function" ? e() : e;
}
const m6 = (e) => {
  const {
    classes: t
  } = e;
  return En({
    root: ["root"],
    paper: ["paper"]
  }, h6, t);
}, g6 = lt(dR, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), pR = lt(fR, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), hR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = An({
    props: t,
    name: "MuiPopover"
  }), {
    action: r,
    anchorEl: i,
    anchorOrigin: s = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: l,
    anchorReference: c = "anchorEl",
    children: u,
    className: d,
    container: f,
    elevation: p = 8,
    marginThreshold: h = 16,
    open: g,
    PaperProps: m = {},
    // TODO: remove in v7
    slots: y = {},
    slotProps: b = {},
    transformOrigin: T = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: v,
    // TODO: remove in v7
    transitionDuration: w = "auto",
    TransitionProps: S = {},
    // TODO: remove in v7
    disableScrollLock: C = !1,
    ...E
  } = o, P = $.useRef(), M = {
    ...o,
    anchorOrigin: s,
    anchorReference: c,
    elevation: p,
    marginThreshold: h,
    transformOrigin: T,
    TransitionComponent: v,
    transitionDuration: w,
    TransitionProps: S
  }, x = m6(M), I = $.useCallback(() => {
    if (c === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (l || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), l;
    const Y = gl(i), re = Y && Y.nodeType === 1 ? Y : ar(P.current).body, z = re.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const de = re.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && de.top === 0 && de.left === 0 && de.right === 0 && de.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: z.top + iS(z, s.vertical),
      left: z.left + sS(z, s.horizontal)
    };
  }, [i, s.horizontal, s.vertical, l, c]), k = $.useCallback((Y) => ({
    vertical: iS(Y, T.vertical),
    horizontal: sS(Y, T.horizontal)
  }), [T.horizontal, T.vertical]), _ = $.useCallback((Y) => {
    const re = {
      width: Y.offsetWidth,
      height: Y.offsetHeight
    }, z = k(re);
    if (c === "none")
      return {
        top: null,
        left: null,
        transformOrigin: aS(z)
      };
    const de = I();
    let ue = de.top - z.vertical, xe = de.left - z.horizontal;
    const _e = ue + re.height, we = xe + re.width, De = Gr(gl(i)), Ee = De.innerHeight - h, Ve = De.innerWidth - h;
    if (h !== null && ue < h) {
      const Me = ue - h;
      ue -= Me, z.vertical += Me;
    } else if (h !== null && _e > Ee) {
      const Me = _e - Ee;
      ue -= Me, z.vertical += Me;
    }
    if (process.env.NODE_ENV !== "production" && re.height > Ee && re.height && Ee && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${re.height - Ee}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), h !== null && xe < h) {
      const Me = xe - h;
      xe -= Me, z.horizontal += Me;
    } else if (we > Ve) {
      const Me = we - Ve;
      xe -= Me, z.horizontal += Me;
    }
    return {
      top: `${Math.round(ue)}px`,
      left: `${Math.round(xe)}px`,
      transformOrigin: aS(z)
    };
  }, [i, c, I, k, h]), [R, A] = $.useState(g), N = $.useCallback(() => {
    const Y = P.current;
    if (!Y)
      return;
    const re = _(Y);
    re.top !== null && Y.style.setProperty("top", re.top), re.left !== null && (Y.style.left = re.left), Y.style.transformOrigin = re.transformOrigin, A(!0);
  }, [_]);
  $.useEffect(() => (C && window.addEventListener("scroll", N), () => window.removeEventListener("scroll", N)), [i, C, N]);
  const L = () => {
    N();
  }, V = () => {
    A(!1);
  };
  $.useEffect(() => {
    g && N();
  }), $.useImperativeHandle(r, () => g ? {
    updatePosition: () => {
      N();
    }
  } : null, [g, N]), $.useEffect(() => {
    if (!g)
      return;
    const Y = HP(() => {
      N();
    }), re = Gr(gl(i));
    return re.addEventListener("resize", Y), () => {
      Y.clear(), re.removeEventListener("resize", Y);
    };
  }, [i, g, N]);
  let D = w;
  const B = {
    slots: {
      transition: v,
      ...y
    },
    slotProps: {
      transition: S,
      paper: m,
      ...b
    }
  }, [F, U] = Xn("transition", {
    elementType: Fd,
    externalForwardedProps: B,
    ownerState: M,
    getSlotProps: (Y) => ({
      ...Y,
      onEntering: (re, z) => {
        var de;
        (de = Y.onEntering) == null || de.call(Y, re, z), L();
      },
      onExited: (re) => {
        var z;
        (z = Y.onExited) == null || z.call(Y, re), V();
      }
    }),
    additionalProps: {
      appear: !0,
      in: g
    }
  });
  w === "auto" && !F.muiSupportAuto && (D = void 0);
  const q = f || (i ? ar(gl(i)).body : void 0), [G, {
    slots: K,
    slotProps: te,
    ...ne
  }] = Xn("root", {
    ref: n,
    elementType: g6,
    externalForwardedProps: {
      ...B,
      ...E
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: y.backdrop
      },
      slotProps: {
        backdrop: hU(typeof b.backdrop == "function" ? b.backdrop(M) : b.backdrop, {
          invisible: !0
        })
      },
      container: q,
      open: g
    },
    ownerState: M,
    className: Ie(x.root, d)
  }), [W, ee] = Xn("paper", {
    ref: P,
    className: x.paper,
    elementType: pR,
    externalForwardedProps: B,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: p,
      style: R ? void 0 : {
        opacity: 0
      }
    },
    ownerState: M
  });
  return /* @__PURE__ */ O(G, {
    ...ne,
    ...!og(G) && {
      slots: K,
      slotProps: te,
      disableScrollLock: C
    },
    children: /* @__PURE__ */ O(F, {
      ...U,
      timeout: D,
      children: /* @__PURE__ */ O(W, {
        ...ee,
        children: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (hR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: _i,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: Kc(a.oneOfType([fc, a.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = gl(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: a.shape({
    horizontal: a.oneOfType([a.oneOf(["center", "left", "right"]), a.number]).isRequired,
    vertical: a.oneOfType([a.oneOf(["bottom", "center", "top"]), a.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: a.shape({
    left: a.number.isRequired,
    top: a.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: a.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: a.object,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([fc, a.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: a.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: KP,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: a.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: a.shape({
    component: jP
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: a.shape({
    horizontal: a.oneOfType([a.oneOf(["center", "left", "right"]), a.number]).isRequired,
    vertical: a.oneOfType([a.oneOf(["bottom", "center", "top"]), a.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: a.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object
});
function y6(e) {
  return vn("MuiMenu", e);
}
Cn("MuiMenu", ["root", "paper", "list"]);
const b6 = {
  vertical: "top",
  horizontal: "right"
}, v6 = {
  vertical: "top",
  horizontal: "left"
}, x6 = (e) => {
  const {
    classes: t
  } = e;
  return En({
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  }, y6, t);
}, w6 = lt(hR, {
  shouldForwardProp: (e) => Mr(e) || e === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), S6 = lt(pR, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}), T6 = lt(aR, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (e, t) => t.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), mR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = An({
    props: t,
    name: "MuiMenu"
  }), {
    autoFocus: r = !0,
    children: i,
    className: s,
    disableAutoFocusItem: l = !1,
    MenuListProps: c = {},
    onClose: u,
    open: d,
    PaperProps: f = {},
    PopoverClasses: p,
    transitionDuration: h = "auto",
    TransitionProps: {
      onEntering: g,
      ...m
    } = {},
    variant: y = "selectedMenu",
    slots: b = {},
    slotProps: T = {},
    ...v
  } = o, w = ZH(), S = {
    ...o,
    autoFocus: r,
    disableAutoFocusItem: l,
    MenuListProps: c,
    onEntering: g,
    PaperProps: f,
    transitionDuration: h,
    TransitionProps: m,
    variant: y
  }, C = x6(S), E = r && !l && d, P = $.useRef(null), M = (D, B) => {
    P.current && P.current.adjustStyleForScrollbar(D, {
      direction: w ? "rtl" : "ltr"
    }), g && g(D, B);
  }, x = (D) => {
    D.key === "Tab" && (D.preventDefault(), u && u(D, "tabKeyDown"));
  };
  let I = -1;
  $.Children.map(i, (D, B) => {
    /* @__PURE__ */ $.isValidElement(D) && (process.env.NODE_ENV !== "production" && lo.isFragment(D) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), D.props.disabled || (y === "selectedMenu" && D.props.selected || I === -1) && (I = B));
  });
  const k = {
    slots: b,
    slotProps: {
      list: c,
      transition: m,
      paper: f,
      ...T
    }
  }, _ = XW({
    elementType: b.root,
    externalSlotProps: T.root,
    ownerState: S,
    className: [C.root, s]
  }), [R, A] = Xn("paper", {
    className: C.paper,
    elementType: S6,
    externalForwardedProps: k,
    shouldForwardComponentProp: !0,
    ownerState: S
  }), [N, L] = Xn("list", {
    className: Ie(C.list, c.className),
    elementType: T6,
    shouldForwardComponentProp: !0,
    externalForwardedProps: k,
    getSlotProps: (D) => ({
      ...D,
      onKeyDown: (B) => {
        var F;
        x(B), (F = D.onKeyDown) == null || F.call(D, B);
      }
    }),
    ownerState: S
  }), V = typeof k.slotProps.transition == "function" ? k.slotProps.transition(S) : k.slotProps.transition;
  return /* @__PURE__ */ O(w6, {
    onClose: u,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: w ? "right" : "left"
    },
    transformOrigin: w ? b6 : v6,
    slots: {
      root: b.root,
      paper: R,
      backdrop: b.backdrop,
      ...b.transition && {
        // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover
        transition: b.transition
      }
    },
    slotProps: {
      root: _,
      paper: A,
      backdrop: typeof T.backdrop == "function" ? T.backdrop(S) : T.backdrop,
      transition: {
        ...V,
        onEntering: (...D) => {
          var B;
          M(...D), (B = V == null ? void 0 : V.onEntering) == null || B.call(V, ...D);
        }
      }
    },
    open: d,
    ref: n,
    transitionDuration: h,
    ownerState: S,
    ...v,
    classes: p,
    children: /* @__PURE__ */ O(N, {
      actions: P,
      autoFocus: r && (I === -1 || l),
      autoFocusItem: E,
      variant: y,
      ...L,
      children: i
    })
  });
});
process.env.NODE_ENV !== "production" && (mR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: a.oneOfType([fc, a.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: a.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: a.bool,
  /**
   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.
   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  MenuListProps: a.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: a.object,
  /**
   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.
   */
  PopoverClasses: a.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    list: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    list: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: a.oneOf(["menu", "selectedMenu"])
});
function C6(e) {
  return vn("MuiNativeSelect", e);
}
const Pb = Cn("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), E6 = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: o,
    multiple: r,
    open: i,
    error: s
  } = e, l = {
    select: ["select", n, o && "disabled", r && "multiple", s && "error"],
    icon: ["icon", `icon${dn(n)}`, i && "iconOpen", o && "disabled"]
  };
  return En(l, C6, t);
}, gR = lt("select")(({
  theme: e
}) => ({
  // Reset
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  // Reset
  borderRadius: 0,
  cursor: "pointer",
  "&:focus": {
    // Reset Chrome style
    borderRadius: 0
  },
  [`&.${Pb.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (e.vars || e).palette.background.paper
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.variant !== "filled" && t.variant !== "outlined",
    style: {
      // Bump specificity to allow extending custom inputs
      "&&&": {
        paddingRight: 24,
        minWidth: 16
        // So it doesn't collapse.
      }
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      "&&&": {
        paddingRight: 32
      }
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius,
      "&:focus": {
        borderRadius: (e.vars || e).shape.borderRadius
        // Reset the reset for Chrome style
      },
      "&&&": {
        paddingRight: 32
      }
    }
  }]
})), O6 = lt(gR, {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: Mr,
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.select, t[n.variant], n.error && t.error, {
      [`&.${Pb.multiple}`]: t.multiple
    }];
  }
})({}), yR = lt("svg")(({
  theme: e
}) => ({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  // Center vertically, height is 1em
  top: "calc(50% - .5em)",
  // Don't block pointer events on the select under the icon.
  pointerEvents: "none",
  color: (e.vars || e).palette.action.active,
  [`&.${Pb.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.open,
    style: {
      transform: "rotate(180deg)"
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      right: 7
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      right: 7
    }
  }]
})), P6 = lt(yR, {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${dn(n.variant)}`], n.open && t.iconOpen];
  }
})({}), bR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const {
    className: o,
    disabled: r,
    error: i,
    IconComponent: s,
    inputRef: l,
    variant: c = "standard",
    ...u
  } = t, d = {
    ...t,
    disabled: r,
    variant: c,
    error: i
  }, f = E6(d);
  return /* @__PURE__ */ Se($.Fragment, {
    children: [/* @__PURE__ */ O(O6, {
      ownerState: d,
      className: Ie(f.select, o),
      disabled: r,
      ref: l || n,
      ...u
    }), t.multiple ? null : /* @__PURE__ */ O(P6, {
      as: s,
      ownerState: d,
      className: f.icon
    })]
  });
});
process.env.NODE_ENV !== "production" && (bR.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The CSS class name of the select element.
   */
  className: a.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: a.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: a.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: _i,
  /**
   * @ignore
   */
  multiple: a.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: a.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The input value.
   */
  value: a.any,
  /**
   * The variant to use.
   */
  variant: a.oneOf(["standard", "outlined", "filled"])
});
function vR(e) {
  return vn("MuiSelect", e);
}
const Ja = Cn("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]);
var lS;
const R6 = lt(gR, {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [
      // Win specificity over the input base
      {
        [`&.${Ja.select}`]: t.select
      },
      {
        [`&.${Ja.select}`]: t[n.variant]
      },
      {
        [`&.${Ja.error}`]: t.error
      },
      {
        [`&.${Ja.multiple}`]: t.multiple
      }
    ];
  }
})({
  // Win specificity over the input base
  [`&.${Ja.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
}), I6 = lt(yR, {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${dn(n.variant)}`], n.open && t.iconOpen];
  }
})({}), k6 = lt("input", {
  shouldForwardProp: (e) => BP(e) && e !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (e, t) => t.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function cS(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
function $6(e) {
  return e == null || typeof e == "string" && !e.trim();
}
const N6 = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: o,
    multiple: r,
    open: i,
    error: s
  } = e, l = {
    select: ["select", n, o && "disabled", r && "multiple", s && "error"],
    icon: ["icon", `icon${dn(n)}`, i && "iconOpen", o && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return En(l, vR, t);
}, xR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  var Re;
  const {
    "aria-describedby": o,
    "aria-label": r,
    autoFocus: i,
    autoWidth: s,
    children: l,
    className: c,
    defaultOpen: u,
    defaultValue: d,
    disabled: f,
    displayEmpty: p,
    error: h = !1,
    IconComponent: g,
    inputRef: m,
    labelId: y,
    MenuProps: b = {},
    multiple: T,
    name: v,
    onBlur: w,
    onChange: S,
    onClose: C,
    onFocus: E,
    onOpen: P,
    open: M,
    readOnly: x,
    renderValue: I,
    required: k,
    SelectDisplayProps: _ = {},
    tabIndex: R,
    // catching `type` from Input which makes no sense for SelectInput
    type: A,
    value: N,
    variant: L = "standard",
    ...V
  } = t, [D, B] = Uw({
    controlled: N,
    default: d,
    name: "Select"
  }), [F, U] = Uw({
    controlled: M,
    default: u,
    name: "Select"
  }), q = $.useRef(null), G = $.useRef(null), [K, te] = $.useState(null), {
    current: ne
  } = $.useRef(M != null), [W, ee] = $.useState(), Y = Go(n, m), re = $.useCallback((oe) => {
    G.current = oe, oe && te(oe);
  }, []), z = K == null ? void 0 : K.parentNode;
  $.useImperativeHandle(Y, () => ({
    focus: () => {
      G.current.focus();
    },
    node: q.current,
    value: D
  }), [D]), $.useEffect(() => {
    u && F && K && !ne && (ee(s ? null : z.clientWidth), G.current.focus());
  }, [K, s]), $.useEffect(() => {
    i && G.current.focus();
  }, [i]), $.useEffect(() => {
    if (!y)
      return;
    const oe = ar(G.current).getElementById(y);
    if (oe) {
      const be = () => {
        getSelection().isCollapsed && G.current.focus();
      };
      return oe.addEventListener("click", be), () => {
        oe.removeEventListener("click", be);
      };
    }
  }, [y]);
  const de = (oe, be) => {
    oe ? P && P(be) : C && C(be), ne || (ee(s ? null : z.clientWidth), U(oe));
  }, ue = (oe) => {
    oe.button === 0 && (oe.preventDefault(), G.current.focus(), de(!0, oe));
  }, xe = (oe) => {
    de(!1, oe);
  }, _e = $.Children.toArray(l), we = (oe) => {
    const be = _e.find((Ne) => Ne.props.value === oe.target.value);
    be !== void 0 && (B(be.props.value), S && S(oe, be));
  }, De = (oe) => (be) => {
    let Ne;
    if (be.currentTarget.hasAttribute("tabindex")) {
      if (T) {
        Ne = Array.isArray(D) ? D.slice() : [];
        const We = D.indexOf(oe.props.value);
        We === -1 ? Ne.push(oe.props.value) : Ne.splice(We, 1);
      } else
        Ne = oe.props.value;
      if (oe.props.onClick && oe.props.onClick(be), D !== Ne && (B(Ne), S)) {
        const We = be.nativeEvent || be, Ke = new We.constructor(We.type, We);
        Object.defineProperty(Ke, "target", {
          writable: !0,
          value: {
            value: Ne,
            name: v
          }
        }), S(Ke, oe);
      }
      T || de(!1, be);
    }
  }, Ee = (oe) => {
    x || [
      " ",
      "ArrowUp",
      "ArrowDown",
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
      "Enter"
    ].includes(oe.key) && (oe.preventDefault(), de(!0, oe));
  }, Ve = K !== null && F, Me = (oe) => {
    !Ve && w && (Object.defineProperty(oe, "target", {
      writable: !0,
      value: {
        value: D,
        name: v
      }
    }), w(oe));
  };
  delete V["aria-invalid"];
  let j, J;
  const ie = [];
  let Q = !1, H = !1;
  (Ld({
    value: D
  }) || p) && (I ? j = I(D) : Q = !0);
  const X = _e.map((oe) => {
    if (!/* @__PURE__ */ $.isValidElement(oe))
      return null;
    process.env.NODE_ENV !== "production" && lo.isFragment(oe) && console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    let be;
    if (T) {
      if (!Array.isArray(D))
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `value` prop must be an array when using the `Select` component with `multiple`." : $r(2));
      be = D.some((Ne) => cS(Ne, oe.props.value)), be && Q && ie.push(oe.props.children);
    } else
      be = cS(D, oe.props.value), be && Q && (J = oe.props.children);
    return be && (H = !0), /* @__PURE__ */ $.cloneElement(oe, {
      "aria-selected": be ? "true" : "false",
      onClick: De(oe),
      onKeyUp: (Ne) => {
        Ne.key === " " && Ne.preventDefault(), oe.props.onKeyUp && oe.props.onKeyUp(Ne);
      },
      role: "option",
      selected: be,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": oe.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  process.env.NODE_ENV !== "production" && $.useEffect(() => {
    if (!H && !T && D !== "") {
      const oe = _e.map((be) => be.props.value);
      console.warn([`MUI: You have provided an out-of-range value \`${D}\` for the select ${v ? `(name="${v}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${oe.filter((be) => be != null).map((be) => `\`${be}\``).join(", ") || '""'}.`].join(`
`));
    }
  }, [H, _e, T, v, D]), Q && (T ? ie.length === 0 ? j = null : j = ie.reduce((oe, be, Ne) => (oe.push(be), Ne < ie.length - 1 && oe.push(", "), oe), []) : j = J);
  let se = W;
  !s && ne && K && (se = z.clientWidth);
  let ye;
  typeof R < "u" ? ye = R : ye = f ? null : 0;
  const he = _.id || (v ? `mui-component-select-${v}` : void 0), le = {
    ...t,
    variant: L,
    value: D,
    open: Ve,
    error: h
  }, ae = N6(le), ce = {
    ...b.PaperProps,
    ...(Re = b.slotProps) == null ? void 0 : Re.paper
  }, Te = VP();
  return /* @__PURE__ */ Se($.Fragment, {
    children: [/* @__PURE__ */ O(R6, {
      as: "div",
      ref: re,
      tabIndex: ye,
      role: "combobox",
      "aria-controls": Ve ? Te : void 0,
      "aria-disabled": f ? "true" : void 0,
      "aria-expanded": Ve ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": r,
      "aria-labelledby": [y, he].filter(Boolean).join(" ") || void 0,
      "aria-describedby": o,
      "aria-required": k ? "true" : void 0,
      "aria-invalid": h ? "true" : void 0,
      onKeyDown: Ee,
      onMouseDown: f || x ? null : ue,
      onBlur: Me,
      onFocus: E,
      ..._,
      ownerState: le,
      className: Ie(_.className, ae.select, c),
      id: he,
      children: $6(j) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        lS || (lS = /* @__PURE__ */ O("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      ) : j
    }), /* @__PURE__ */ O(k6, {
      "aria-invalid": h,
      value: Array.isArray(D) ? D.join(",") : D,
      name: v,
      ref: q,
      "aria-hidden": !0,
      onChange: we,
      tabIndex: -1,
      disabled: f,
      className: ae.nativeInput,
      autoFocus: i,
      required: k,
      ...V,
      ownerState: le
    }), /* @__PURE__ */ O(I6, {
      as: g,
      className: ae.icon,
      ownerState: le
    }), /* @__PURE__ */ O(mR, {
      id: `menu-${v || ""}`,
      anchorEl: z,
      open: Ve,
      onClose: xe,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      },
      ...b,
      slotProps: {
        ...b.slotProps,
        list: {
          "aria-labelledby": y,
          role: "listbox",
          "aria-multiselectable": T ? "true" : void 0,
          disableListWrap: !0,
          id: Te,
          ...b.MenuListProps
        },
        paper: {
          ...ce,
          style: {
            minWidth: se,
            ...ce != null ? ce.style : null
          }
        }
      },
      children: X
    })]
  });
});
process.env.NODE_ENV !== "production" && (xR.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": a.string,
  /**
   * @ignore
   */
  "aria-label": a.string,
  /**
   * @ignore
   */
  autoFocus: a.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: a.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The CSS class name of the select element.
   */
  className: a.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: a.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: a.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: a.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: a.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: _i,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: a.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: a.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: a.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: a.string,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: a.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool,
  /**
   * @ignore
   */
  readOnly: a.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: a.func,
  /**
   * If `true`, the component is required.
   */
  required: a.bool,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: a.object,
  /**
   * @ignore
   */
  tabIndex: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  type: a.any,
  /**
   * The input value.
   */
  value: a.any,
  /**
   * The variant to use.
   */
  variant: a.oneOf(["standard", "outlined", "filled"])
});
const M6 = fU(/* @__PURE__ */ O("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown"), A6 = (e) => {
  const {
    classes: t
  } = e, o = En({
    root: ["root"]
  }, vR, t);
  return {
    ...t,
    ...o
  };
}, Rb = {
  name: "MuiSelect",
  overridesResolver: (e, t) => t.root,
  shouldForwardProp: (e) => Mr(e) && e !== "variant",
  slot: "Root"
}, _6 = lt(hp, Rb)(""), D6 = lt(gp, Rb)(""), L6 = lt(mp, Rb)(""), Ib = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = An({
    name: "MuiSelect",
    props: t
  }), {
    autoWidth: r = !1,
    children: i,
    classes: s = {},
    className: l,
    defaultOpen: c = !1,
    displayEmpty: u = !1,
    IconComponent: d = M6,
    id: f,
    input: p,
    inputProps: h,
    label: g,
    labelId: m,
    MenuProps: y,
    multiple: b = !1,
    native: T = !1,
    onClose: v,
    onOpen: w,
    open: S,
    renderValue: C,
    SelectDisplayProps: E,
    variant: P = "outlined",
    ...M
  } = o, x = T ? bR : xR, I = za(), k = ja({
    props: o,
    muiFormControl: I,
    states: ["variant", "error"]
  }), _ = k.variant || P, R = {
    ...o,
    variant: _,
    classes: s
  }, A = A6(R), {
    root: N,
    ...L
  } = A, V = p || {
    standard: /* @__PURE__ */ O(_6, {
      ownerState: R
    }),
    outlined: /* @__PURE__ */ O(D6, {
      label: g,
      ownerState: R
    }),
    filled: /* @__PURE__ */ O(L6, {
      ownerState: R
    })
  }[_], D = Go(n, Yc(V));
  return /* @__PURE__ */ O($.Fragment, {
    children: /* @__PURE__ */ $.cloneElement(V, {
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: x,
      inputProps: {
        children: i,
        error: k.error,
        IconComponent: d,
        variant: _,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: b,
        ...T ? {
          id: f
        } : {
          autoWidth: r,
          defaultOpen: c,
          displayEmpty: u,
          labelId: m,
          MenuProps: y,
          onClose: v,
          onOpen: w,
          open: S,
          renderValue: C,
          SelectDisplayProps: {
            id: f,
            ...E
          }
        },
        ...h,
        classes: h ? Wn(L, h.classes) : L,
        ...p ? p.props.inputProps : {}
      },
      ...(b && T || u) && _ === "outlined" ? {
        notched: !0
      } : {},
      ref: D,
      className: Ie(V.props.className, l, A.root),
      // If a custom input is provided via 'input' prop, do not allow 'variant' to be propagated to it's root element. See https://github.com/mui/material-ui/issues/33894.
      ...!p && {
        variant: _
      },
      ...M
    })
  });
});
process.env.NODE_ENV !== "production" && (Ib.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: a.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: a.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: a.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: a.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: a.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: a.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: a.object,
  /**
   * See [OutlinedInput#label](https://mui.com/material-ui/api/outlined-input/#props)
   */
  label: a.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: a.string,
  /**
   * Props applied to the [`Menu`](https://mui.com/material-ui/api/menu/) element.
   */
  MenuProps: a.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: a.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: a.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: a.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: a.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: a.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: a.oneOfType([a.oneOf([""]), a.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
Ib.muiName = "Select";
function B6(e) {
  return vn("MuiTextField", e);
}
Cn("MuiTextField", ["root"]);
const V6 = {
  standard: hp,
  filled: mp,
  outlined: gp
}, F6 = (e) => {
  const {
    classes: t
  } = e;
  return En({
    root: ["root"]
  }, B6, t);
}, j6 = lt(nR, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), wR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = An({
    props: t,
    name: "MuiTextField"
  }), {
    autoComplete: r,
    autoFocus: i = !1,
    children: s,
    className: l,
    color: c = "primary",
    defaultValue: u,
    disabled: d = !1,
    error: f = !1,
    FormHelperTextProps: p,
    fullWidth: h = !1,
    helperText: g,
    id: m,
    InputLabelProps: y,
    inputProps: b,
    InputProps: T,
    inputRef: v,
    label: w,
    maxRows: S,
    minRows: C,
    multiline: E = !1,
    name: P,
    onBlur: M,
    onChange: x,
    onFocus: I,
    placeholder: k,
    required: _ = !1,
    rows: R,
    select: A = !1,
    SelectProps: N,
    slots: L = {},
    slotProps: V = {},
    type: D,
    value: B,
    variant: F = "outlined",
    ...U
  } = o, q = {
    ...o,
    autoFocus: i,
    color: c,
    disabled: d,
    error: f,
    fullWidth: h,
    multiline: E,
    required: _,
    select: A,
    variant: F
  }, G = F6(q);
  process.env.NODE_ENV !== "production" && A && !s && console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
  const K = VP(m), te = g && K ? `${K}-helper-text` : void 0, ne = w && K ? `${K}-label` : void 0, W = V6[F], ee = {
    slots: L,
    slotProps: {
      input: T,
      inputLabel: y,
      htmlInput: b,
      formHelperText: p,
      select: N,
      ...V
    }
  }, Y = {}, re = ee.slotProps.inputLabel;
  F === "outlined" && (re && typeof re.shrink < "u" && (Y.notched = re.shrink), Y.label = w), A && ((!N || !N.native) && (Y.id = void 0), Y["aria-describedby"] = void 0);
  const [z, de] = Xn("root", {
    elementType: j6,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...ee,
      ...U
    },
    ownerState: q,
    className: Ie(G.root, l),
    ref: n,
    additionalProps: {
      disabled: d,
      error: f,
      fullWidth: h,
      required: _,
      color: c,
      variant: F
    }
  }), [ue, xe] = Xn("input", {
    elementType: W,
    externalForwardedProps: ee,
    additionalProps: Y,
    ownerState: q
  }), [_e, we] = Xn("inputLabel", {
    elementType: tR,
    externalForwardedProps: ee,
    ownerState: q
  }), [De, Ee] = Xn("htmlInput", {
    elementType: "input",
    externalForwardedProps: ee,
    ownerState: q
  }), [Ve, Me] = Xn("formHelperText", {
    elementType: oR,
    externalForwardedProps: ee,
    ownerState: q
  }), [j, J] = Xn("select", {
    elementType: Ib,
    externalForwardedProps: ee,
    ownerState: q
  }), ie = /* @__PURE__ */ O(ue, {
    "aria-describedby": te,
    autoComplete: r,
    autoFocus: i,
    defaultValue: u,
    fullWidth: h,
    multiline: E,
    name: P,
    rows: R,
    maxRows: S,
    minRows: C,
    type: D,
    value: B,
    id: K,
    inputRef: v,
    onBlur: M,
    onChange: x,
    onFocus: I,
    placeholder: k,
    inputProps: Ee,
    slots: {
      input: L.htmlInput ? De : void 0
    },
    ...xe
  });
  return /* @__PURE__ */ Se(z, {
    ...de,
    children: [w != null && w !== "" && /* @__PURE__ */ O(_e, {
      htmlFor: K,
      id: ne,
      ...we,
      children: w
    }), A ? /* @__PURE__ */ O(j, {
      "aria-describedby": te,
      id: K,
      labelId: ne,
      value: B,
      input: ie,
      ...J,
      children: s
    }) : ie, g && /* @__PURE__ */ O(Ve, {
      id: te,
      ...Me,
      children: g
    })]
  });
});
process.env.NODE_ENV !== "production" && (wR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: a.bool,
  /**
   * @ignore
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: a.bool,
  /**
   * Props applied to the [`FormHelperText`](https://mui.com/material-ui/api/form-helper-text/) element.
   * @deprecated Use `slotProps.formHelperText` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  FormHelperTextProps: a.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The helper text content.
   */
  helperText: a.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: a.string,
  /**
   * Props applied to the [`InputLabel`](https://mui.com/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   * @deprecated Use `slotProps.inputLabel` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputLabelProps: a.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.htmlInput` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: a.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](https://mui.com/material-ui/api/filled-input/),
   * [`OutlinedInput`](https://mui.com/material-ui/api/outlined-input/) or [`Input`](https://mui.com/material-ui/api/input/)
   * component depending on the `variant` prop value.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: _i,
  /**
   * The label content.
   */
  label: a.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: a.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * Render a [`Select`](https://mui.com/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: a.bool,
  /**
   * Props applied to the [`Select`](https://mui.com/material-ui/api/select/) element.
   * @deprecated Use `slotProps.select` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SelectProps: a.object,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    formHelperText: a.oneOfType([a.func, a.object]),
    htmlInput: a.oneOfType([a.func, a.object]),
    input: a.oneOfType([a.func, a.object]),
    inputLabel: a.oneOfType([a.func, a.object]),
    select: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    formHelperText: a.elementType,
    htmlInput: a.elementType,
    input: a.elementType,
    inputLabel: a.elementType,
    root: a.elementType,
    select: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
const z6 = Cn("MuiBox", ["root"]), H6 = LP(), SR = AH({
  themeId: Xf,
  defaultTheme: H6,
  defaultClassName: z6.root,
  generateClassName: EP.generate
});
process.env.NODE_ENV !== "production" && (SR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: a.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const W6 = lt(wR)`
  input {
    text-align: center;
  }
`, U6 = {
  TextFieldStyled: W6
}, q6 = (e) => /* @__PURE__ */ O(U6.TextFieldStyled, { ...e }), el = {
  left: "ArrowLeft",
  right: "ArrowRight",
  backspace: "Backspace",
  home: "Home",
  end: "End"
};
function K6(e, t) {
  return e <= 0 ? [] : Array.from({ length: e }, t);
}
function G6(e, t, n) {
  return e.map((o, r) => t === r ? n : o);
}
function uS(e) {
  return e.join("");
}
function dS(e, t) {
  return [...e, t];
}
function Y6(e, t, n) {
  return e.reduce(
    (o, r, i) => {
      const { characters: s, restArrayMerged: l } = o;
      if (i < n)
        return {
          restArrayMerged: l,
          characters: dS(s, r)
        };
      const [c, ...u] = l;
      return {
        restArrayMerged: u,
        characters: dS(s, c || "")
      };
    },
    {
      restArrayMerged: t,
      characters: []
    }
  ).characters;
}
function X6(e) {
  return (t) => {
    e.forEach((n) => {
      typeof n == "function" ? n(t) : n != null && (n.current = t);
    });
  };
}
function Z6(e) {
  return e.split("");
}
function fS(e) {
  const t = Z.useRef(() => {
    throw new Error("Cannot call an event handler while rendering.");
  });
  return Z.useInsertionEffect(() => {
    t.current = e;
  }), Z.useCallback((...n) => {
    var o;
    return (o = t.current) == null ? void 0 : o.call(t, ...n);
  }, []);
}
const Q6 = () => !0, J6 = Z.forwardRef(
  (e, t) => {
    const {
      value: n = "",
      length: o = 4,
      autoFocus: r = !1,
      onChange: i,
      TextFieldsProps: s,
      onComplete: l,
      validateChar: c = Q6,
      className: u,
      onBlur: d,
      ...f
    } = e, p = Z.useRef(n), h = fS(l), g = fS((I) => {
      const k = I.slice(0, o);
      return {
        isCompleted: k.length === o,
        finalValue: k
      };
    });
    Z.useEffect(() => {
      const { isCompleted: I, finalValue: k } = g(
        p.current
      );
      I && h(k);
    }, [o, h, g]);
    const m = K6(
      o,
      (I, k) => ({
        character: n[k] || "",
        inputRef: Z.createRef()
      })
    ), y = (I) => m.findIndex(({ inputRef: k }) => k.current === I), b = () => m.map(({ character: I }) => I), T = (I, k) => {
      const _ = G6(
        b(),
        I,
        k
      );
      return uS(_);
    }, v = (I) => {
      var k, _;
      (_ = (k = m[I]) == null ? void 0 : k.inputRef.current) == null || _.focus();
    }, w = (I) => {
      var k, _;
      (_ = (k = m[I]) == null ? void 0 : k.inputRef.current) == null || _.select();
    }, S = (I) => {
      I + 1 !== o && (m[I + 1].character ? w(I + 1) : v(I + 1));
    }, C = (I, k) => typeof c != "function" ? !0 : c(I, k), E = (I) => {
      const k = y(I.target);
      if (k === 0 && I.target.value.length > 1) {
        const { finalValue: V, isCompleted: D } = g(
          I.target.value
        );
        i == null || i(V), D && (l == null || l(V)), w(V.length - 1);
        return;
      }
      const _ = I.target.value[0] || "";
      let R = _;
      R && !C(R, k) && (R = "");
      const A = T(k, R);
      i == null || i(A);
      const { isCompleted: N, finalValue: L } = g(A);
      N && (l == null || l(L)), R !== "" ? A.length - 1 < k ? w(A.length) : S(k) : _ === "" && A.length <= k && w(k - 1);
    }, P = (I) => {
      const k = I.target, _ = k.selectionStart, R = k.selectionEnd, A = y(k), N = _ === 0 && R === 0;
      if (k.value === I.key)
        I.preventDefault(), S(A);
      else if (el.backspace === I.key) {
        if (!k.value)
          I.preventDefault(), w(A - 1);
        else if (N) {
          I.preventDefault();
          const L = T(A, "");
          i == null || i(L), L.length <= A && w(A - 1);
        }
      } else el.left === I.key ? (I.preventDefault(), w(A - 1)) : el.right === I.key ? (I.preventDefault(), w(A + 1)) : el.home === I.key ? (I.preventDefault(), w(0)) : el.end === I.key && (I.preventDefault(), w(m.length - 1));
    }, M = (I) => {
      const k = I.clipboardData.getData("text/plain"), _ = I.target, R = m.findIndex(
        ({ character: B, inputRef: F }) => B === "" || F.current === _
      ), A = b(), N = Y6(
        A,
        Z6(k),
        R
      ).map((B, F) => C(B, F) ? B : ""), L = uS(N);
      i == null || i(L);
      const { isCompleted: V, finalValue: D } = g(L);
      V ? (l == null || l(D), w(o - 1)) : w(L.length);
    }, x = (I) => {
      if (!m.some(({ inputRef: k }) => k.current === I.relatedTarget)) {
        const { isCompleted: k, finalValue: _ } = g(n);
        d == null || d(_, k);
      }
    };
    return /* @__PURE__ */ O(
      SR,
      {
        display: "flex",
        gap: "20px",
        alignItems: "center",
        ref: t,
        className: `MuiOtpInput-Box ${u || ""}`,
        ...f,
        children: m.map(({ character: I, inputRef: k }, _) => {
          const {
            onPaste: R,
            onFocus: A,
            onKeyDown: N,
            className: L,
            onBlur: V,
            inputRef: D,
            ...B
          } = typeof s == "function" ? s(_) || {} : s || {};
          return /* @__PURE__ */ O(
            q6,
            {
              autoFocus: r ? _ === 0 : !1,
              autoComplete: "one-time-code",
              value: I,
              inputRef: X6([k, D]),
              className: `MuiOtpInput-TextField MuiOtpInput-TextField-${_ + 1} ${L || ""}`,
              onPaste: (F) => {
                F.preventDefault(), M(F), R == null || R(F);
              },
              onFocus: (F) => {
                F.preventDefault(), F.target.select(), A == null || A(F);
              },
              onChange: E,
              onKeyDown: (F) => {
                P(F), N == null || N(F);
              },
              onBlur: (F) => {
                V == null || V(F), x(F);
              },
              ...B
            },
            _
          );
        })
      }
    );
  }
), TR = Pe(
  ({
    label: e = "",
    tooltip: t,
    value: n,
    onChange: o,
    isRequired: r,
    isDisabled: i,
    isError: s,
    errorMessage: l = ""
  }) => {
    const { textCommonStyles: c } = Mc({
      isTitle: !1,
      isLabel: !0,
      textColor: i ? "disabled" : s ? "error" : "auto"
    });
    return /* @__PURE__ */ Se(bn, { gap: 0, children: [
      /* @__PURE__ */ O(
        cs,
        {
          label: e,
          elementId: void 0,
          tooltip: t,
          isRequired: r,
          isDisabled: i,
          isError: s
        }
      ),
      /* @__PURE__ */ O(
        J6,
        {
          value: n,
          onChange: o,
          length: 6,
          TextFieldsProps: {
            disabled: i,
            error: s
          },
          sx: {
            "& .MuiInputBase-root": {
              borderRadius: "8px"
            },
            "& input": {
              width: "8px",
              height: "8px",
              p: "16px",
              borderRadius: "8px"
            }
          }
        }
      ),
      /* @__PURE__ */ O(
        Rn,
        {
          text: s ? l : "",
          isLabel: !0,
          sx: { ...c, minHeight: "24px" }
        }
      )
    ] });
  }
);
TR.displayName = "OtpInput";
const CR = Pe(({ isError: e, isDisabled: t, fullWidth: n, sx: o, ...r }) => {
  const { inputCommonStyle: i } = mb({
    isDisabled: t,
    isError: e
  }), [s, l] = Yt(!1);
  return /* @__PURE__ */ O(
    Yf,
    {
      type: s ? "text" : "password",
      fullWidth: n,
      isError: e,
      endAdornment: /* @__PURE__ */ O(
        Mn,
        {
          isCircle: !0,
          isGhost: !0,
          icon: s ? "solar:eye-closed-bold-duotone" : "solar:eye-bold-duotone",
          color: e ? "error" : "primary",
          sx: { mr: -2 },
          onClick: () => l((c) => !c)
        }
      ),
      sx: {
        width: n ? "100%" : `calc(${i.minWidth} - 40px) !important`,
        ...o
      },
      ...r
    }
  );
});
CR.displayName = "Password";
const e8 = Qr(/* @__PURE__ */ O("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "RadioButtonUnchecked"), t8 = Qr(/* @__PURE__ */ O("path", {
  d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
}), "RadioButtonChecked"), n8 = Ce("span", {
  shouldForwardProp: Un
})({
  position: "relative",
  display: "flex"
}), o8 = Ce(e8)({
  // Scale applied to prevent dot misalignment in Safari
  transform: "scale(1)"
}), r8 = Ce(t8)(Ye(({
  theme: e
}) => ({
  left: 0,
  position: "absolute",
  transform: "scale(0)",
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeIn,
    duration: e.transitions.duration.shortest
  }),
  variants: [{
    props: {
      checked: !0
    },
    style: {
      transform: "scale(1)",
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeOut,
        duration: e.transitions.duration.shortest
      })
    }
  }]
})));
function kb(e) {
  const {
    checked: t = !1,
    classes: n = {},
    fontSize: o
  } = e, r = {
    ...e,
    checked: t
  };
  return /* @__PURE__ */ Se(n8, {
    className: n.root,
    ownerState: r,
    children: [/* @__PURE__ */ O(o8, {
      fontSize: o,
      className: n.background,
      ownerState: r
    }), /* @__PURE__ */ O(r8, {
      fontSize: o,
      className: n.dot,
      ownerState: r
    })]
  });
}
process.env.NODE_ENV !== "production" && (kb.propTypes = {
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   */
  fontSize: a.oneOf(["small", "medium"])
});
const ER = /* @__PURE__ */ $.createContext(void 0);
process.env.NODE_ENV !== "production" && (ER.displayName = "RadioGroupContext");
function i8() {
  return $.useContext(ER);
}
function s8(e) {
  return ot("MuiRadio", e);
}
const pS = at("MuiRadio", ["root", "checked", "disabled", "colorPrimary", "colorSecondary", "sizeSmall"]), a8 = (e) => {
  const {
    classes: t,
    color: n,
    size: o
  } = e, r = {
    root: ["root", `color${fe(n)}`, o !== "medium" && `size${fe(o)}`]
  };
  return {
    ...t,
    ...st(r, s8, t)
  };
}, l8 = Ce(zf, {
  shouldForwardProp: (e) => Un(e) || e === "classes",
  name: "MuiRadio",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size !== "medium" && t[`size${fe(n.size)}`], t[`color${fe(n.color)}`]];
  }
})(Ye(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  [`&.${pS.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: {
      color: "default",
      disabled: !1,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : vt(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(Gt()).map(([t]) => ({
    props: {
      color: t,
      disabled: !1,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : vt(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(Gt()).map(([t]) => ({
    props: {
      color: t,
      disabled: !1
    },
    style: {
      [`&.${pS.checked}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
})));
function c8(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
const u8 = /* @__PURE__ */ O(kb, {
  checked: !0
}), d8 = /* @__PURE__ */ O(kb, {}), OR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiRadio"
  }), {
    checked: r,
    checkedIcon: i = u8,
    color: s = "primary",
    icon: l = d8,
    name: c,
    onChange: u,
    size: d = "medium",
    className: f,
    disabled: p,
    disableRipple: h = !1,
    slots: g = {},
    slotProps: m = {},
    inputProps: y,
    ...b
  } = o, T = Mi();
  let v = p;
  T && typeof v > "u" && (v = T.disabled), v ?? (v = !1);
  const w = {
    ...o,
    disabled: v,
    disableRipple: h,
    color: s,
    size: d
  }, S = a8(w), C = i8();
  let E = r;
  const P = lm(u, C && C.onChange);
  let M = c;
  C && (typeof E > "u" && (E = c8(C.value, o.value)), typeof M > "u" && (M = C.name));
  const x = m.input ?? y, [I, k] = it("root", {
    ref: n,
    elementType: l8,
    className: Ie(S.root, f),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: g,
      slotProps: m,
      ...b
    },
    getSlotProps: (_) => ({
      ..._,
      onChange: (R, ...A) => {
        var N;
        (N = _.onChange) == null || N.call(_, R, ...A), P(R, ...A);
      }
    }),
    ownerState: w,
    additionalProps: {
      type: "radio",
      icon: /* @__PURE__ */ $.cloneElement(l, {
        fontSize: l.props.fontSize ?? d
      }),
      checkedIcon: /* @__PURE__ */ $.cloneElement(i, {
        fontSize: i.props.fontSize ?? d
      }),
      disabled: v,
      name: M,
      checked: E,
      slots: g,
      slotProps: {
        // Do not forward `slotProps.root` again because it's already handled by the `RootSlot` in this file.
        input: typeof x == "function" ? x(w) : x
      }
    }
  });
  return /* @__PURE__ */ O(I, {
    ...k,
    classes: S
  });
});
process.env.NODE_ENV !== "production" && (OR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * The icon to display when the component is checked.
   * @default <RadioButtonIcon checked />
   */
  checkedIcon: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * If `true`, the component is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <RadioButtonIcon />
   */
  icon: a.node,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   * @deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputRef: uo,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: a.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: a.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    input: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   */
  value: a.any
});
const PR = Pe(
  ({ label: e = "", tooltip: t, name: n, options: o, optionLabelDirection: r = "end", value: i, onChange: s }) => /* @__PURE__ */ Se(bn, { gap: 0, children: [
    /* @__PURE__ */ O(cs, { label: e, elementId: void 0, tooltip: t }),
    /* @__PURE__ */ O(bn, { gap: 0, children: o.map((l) => /* @__PURE__ */ O(
      Hf,
      {
        labelsDirection: "row",
        startLabel: r === "start" ? l.label : "",
        endLabel: r === "end" ? l.label : "",
        isDisabled: l.isDisabled,
        renderElement: (c) => /* @__PURE__ */ O(
          OR,
          {
            id: c,
            name: n,
            value: l.value,
            checked: i === l.value,
            disabled: l.isDisabled,
            onChange: (u) => s(o.find(({ value: d }) => d === u.target.value)),
            sx: {
              py: "6px",
              px: 0,
              mr: r === "start" ? "2px" : "8px",
              ml: r === "end" ? "2px" : "8px"
            }
          }
        )
      },
      l.value
    )) })
  ] })
);
PR.displayName = "Radios";
function hS(e) {
  return e.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
}
function f8(e = {}) {
  const {
    ignoreAccents: t = !0,
    ignoreCase: n = !0,
    limit: o,
    matchFrom: r = "any",
    stringify: i,
    trim: s = !1
  } = e;
  return (l, {
    inputValue: c,
    getOptionLabel: u
  }) => {
    let d = s ? c.trim() : c;
    n && (d = d.toLowerCase()), t && (d = hS(d));
    const f = d ? l.filter((p) => {
      let h = (i || u)(p);
      return n && (h = h.toLowerCase()), t && (h = hS(h)), r === "start" ? h.startsWith(d) : h.includes(d);
    }) : l;
    return typeof o == "number" ? f.slice(0, o) : f;
  };
}
const p8 = f8(), h8 = 5, m8 = (e) => {
  var t;
  return e.current !== null && ((t = e.current.parentElement) == null ? void 0 : t.contains(document.activeElement));
}, g8 = [];
function mS(e, t, n) {
  if (t || e == null)
    return "";
  const o = n(e);
  return typeof o == "string" ? o : "";
}
function y8(e) {
  const {
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_isActiveElementInListbox: t = m8,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_classNamePrefix: n = "Mui",
    autoComplete: o = !1,
    autoHighlight: r = !1,
    autoSelect: i = !1,
    blurOnSelect: s = !1,
    clearOnBlur: l = !e.freeSolo,
    clearOnEscape: c = !1,
    componentName: u = "useAutocomplete",
    defaultValue: d = e.multiple ? g8 : null,
    disableClearable: f = !1,
    disableCloseOnSelect: p = !1,
    disabled: h,
    disabledItemsFocusable: g = !1,
    disableListWrap: m = !1,
    filterOptions: y = p8,
    filterSelectedOptions: b = !1,
    freeSolo: T = !1,
    getOptionDisabled: v,
    getOptionKey: w,
    getOptionLabel: S = (ve) => ve.label ?? ve,
    groupBy: C,
    handleHomeEndKeys: E = !e.freeSolo,
    id: P,
    includeInputInList: M = !1,
    inputValue: x,
    isOptionEqualToValue: I = (ve, pe) => ve === pe,
    multiple: k = !1,
    onChange: _,
    onClose: R,
    onHighlightChange: A,
    onInputChange: N,
    onOpen: L,
    open: V,
    openOnFocus: D = !1,
    options: B,
    readOnly: F = !1,
    selectOnFocus: U = !e.freeSolo,
    value: q
  } = e, G = hs(P);
  let K = S;
  K = (ve) => {
    const pe = S(ve);
    if (typeof pe != "string") {
      if (process.env.NODE_ENV !== "production") {
        const Ae = pe === void 0 ? "undefined" : `${typeof pe} (${pe})`;
        console.error(`MUI: The \`getOptionLabel\` method of ${u} returned ${Ae} instead of a string for ${JSON.stringify(ve)}.`);
      }
      return String(pe);
    }
    return pe;
  };
  const te = $.useRef(!1), ne = $.useRef(!0), W = $.useRef(null), ee = $.useRef(null), [Y, re] = $.useState(null), [z, de] = $.useState(-1), ue = r ? 0 : -1, xe = $.useRef(ue), _e = $.useRef(mS(d, k, K)).current, [we, De] = ns({
    controlled: q,
    default: d,
    name: u
  }), [Ee, Ve] = ns({
    controlled: x,
    default: _e,
    name: u,
    state: "inputValue"
  }), [Me, j] = $.useState(!1), J = $.useCallback((ve, pe, Ae) => {
    if (!(k ? we.length < pe.length : pe !== null) && !l)
      return;
    const tt = mS(pe, k, K);
    Ee !== tt && (Ve(tt), N && N(ve, tt, Ae));
  }, [K, Ee, k, N, Ve, l, we]), [ie, Q] = ns({
    controlled: V,
    default: !1,
    name: u,
    state: "open"
  }), [H, X] = $.useState(!0), se = !k && we != null && Ee === K(we), ye = ie && !F, he = ye ? y(
    B.filter((ve) => !(b && (k ? we : [we]).some((pe) => pe !== null && I(ve, pe)))),
    // we use the empty string to manipulate `filterOptions` to not filter any options
    // i.e. the filter predicate always returns true
    {
      inputValue: se && H ? "" : Ee,
      getOptionLabel: K
    }
  ) : [], le = Yg({
    filteredOptions: he,
    value: we,
    inputValue: Ee
  });
  $.useEffect(() => {
    const ve = we !== le.value;
    Me && !ve || T && !ve || J(null, we, "reset");
  }, [we, J, Me, le.value, T]);
  const ae = ie && he.length > 0 && !F, ce = oo((ve) => {
    ve === -1 ? W.current.focus() : Y.querySelector(`[data-tag-index="${ve}"]`).focus();
  });
  $.useEffect(() => {
    k && z > we.length - 1 && (de(-1), ce(-1));
  }, [we, k, z, ce]);
  function Te(ve, pe) {
    if (!ee.current || ve < 0 || ve >= he.length)
      return -1;
    let Ae = ve;
    for (; ; ) {
      const Qe = ee.current.querySelector(`[data-option-index="${Ae}"]`), tt = g ? !1 : !Qe || Qe.disabled || Qe.getAttribute("aria-disabled") === "true";
      if (Qe && Qe.hasAttribute("tabindex") && !tt)
        return Ae;
      if (pe === "next" ? Ae = (Ae + 1) % he.length : Ae = (Ae - 1 + he.length) % he.length, Ae === ve)
        return -1;
    }
  }
  const Re = oo(({
    event: ve,
    index: pe,
    reason: Ae
  }) => {
    if (xe.current = pe, pe === -1 ? W.current.removeAttribute("aria-activedescendant") : W.current.setAttribute("aria-activedescendant", `${G}-option-${pe}`), A && ["mouse", "keyboard", "touch"].includes(Ae) && A(ve, pe === -1 ? null : he[pe], Ae), !ee.current)
      return;
    const Qe = ee.current.querySelector(`[role="option"].${n}-focused`);
    Qe && (Qe.classList.remove(`${n}-focused`), Qe.classList.remove(`${n}-focusVisible`));
    let tt = ee.current;
    if (ee.current.getAttribute("role") !== "listbox" && (tt = ee.current.parentElement.querySelector('[role="listbox"]')), !tt)
      return;
    if (pe === -1) {
      tt.scrollTop = 0;
      return;
    }
    const ht = ee.current.querySelector(`[data-option-index="${pe}"]`);
    if (ht && (ht.classList.add(`${n}-focused`), Ae === "keyboard" && ht.classList.add(`${n}-focusVisible`), tt.scrollHeight > tt.clientHeight && Ae !== "mouse" && Ae !== "touch")) {
      const nn = ht, Pn = tt.clientHeight + tt.scrollTop, Fi = nn.offsetTop + nn.offsetHeight;
      Fi > Pn ? tt.scrollTop = Fi - tt.clientHeight : nn.offsetTop - nn.offsetHeight * (C ? 1.3 : 0) < tt.scrollTop && (tt.scrollTop = nn.offsetTop - nn.offsetHeight * (C ? 1.3 : 0));
    }
  }), oe = oo(({
    event: ve,
    diff: pe,
    direction: Ae = "next",
    reason: Qe
  }) => {
    if (!ye)
      return;
    const ht = Te((() => {
      const nn = he.length - 1;
      if (pe === "reset")
        return ue;
      if (pe === "start")
        return 0;
      if (pe === "end")
        return nn;
      const Pn = xe.current + pe;
      return Pn < 0 ? Pn === -1 && M ? -1 : m && xe.current !== -1 || Math.abs(pe) > 1 ? 0 : nn : Pn > nn ? Pn === nn + 1 && M ? -1 : m || Math.abs(pe) > 1 ? nn : 0 : Pn;
    })(), Ae);
    if (Re({
      index: ht,
      reason: Qe,
      event: ve
    }), o && pe !== "reset")
      if (ht === -1)
        W.current.value = Ee;
      else {
        const nn = K(he[ht]);
        W.current.value = nn, nn.toLowerCase().indexOf(Ee.toLowerCase()) === 0 && Ee.length > 0 && W.current.setSelectionRange(Ee.length, nn.length);
      }
  }), be = () => {
    const ve = (pe, Ae) => {
      const Qe = pe ? K(pe) : "", tt = Ae ? K(Ae) : "";
      return Qe === tt;
    };
    if (xe.current !== -1 && le.filteredOptions && le.filteredOptions.length !== he.length && le.inputValue === Ee && (k ? we.length === le.value.length && le.value.every((pe, Ae) => K(we[Ae]) === K(pe)) : ve(le.value, we))) {
      const pe = le.filteredOptions[xe.current];
      if (pe)
        return he.findIndex((Ae) => K(Ae) === K(pe));
    }
    return -1;
  }, Ne = $.useCallback(() => {
    if (!ye)
      return;
    const ve = be();
    if (ve !== -1) {
      xe.current = ve;
      return;
    }
    const pe = k ? we[0] : we;
    if (he.length === 0 || pe == null) {
      oe({
        diff: "reset"
      });
      return;
    }
    if (ee.current) {
      if (pe != null) {
        const Ae = he[xe.current];
        if (k && Ae && we.findIndex((tt) => I(Ae, tt)) !== -1)
          return;
        const Qe = he.findIndex((tt) => I(tt, pe));
        Qe === -1 ? oe({
          diff: "reset"
        }) : Re({
          index: Qe
        });
        return;
      }
      if (xe.current >= he.length - 1) {
        Re({
          index: he.length - 1
        });
        return;
      }
      Re({
        index: xe.current
      });
    }
  }, [
    // Only sync the highlighted index when the option switch between empty and not
    he.length,
    // Don't sync the highlighted index with the value when multiple
    // eslint-disable-next-line react-hooks/exhaustive-deps
    k ? !1 : we,
    b,
    oe,
    Re,
    ye,
    Ee,
    k
  ]), We = oo((ve) => {
    md(ee, ve), ve && Ne();
  });
  process.env.NODE_ENV !== "production" && $.useEffect(() => {
    (!W.current || W.current.nodeName !== "INPUT") && (W.current && W.current.nodeName === "TEXTAREA" ? console.warn([`A textarea element was provided to ${u} where input was expected.`, "This is not a supported scenario but it may work under certain conditions.", "A textarea keyboard navigation may conflict with Autocomplete controls (for example enter and arrow keys).", "Make sure to test keyboard navigation and add custom event handlers if necessary."].join(`
`)) : console.error([`MUI: Unable to find the input element. It was resolved to ${W.current} while an HTMLInputElement was expected.`, `Instead, ${u} expects an input element.`, "", u === "useAutocomplete" ? "Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed." : "Make sure you have customized the input component correctly."].join(`
`)));
  }, [u]), $.useEffect(() => {
    Ne();
  }, [Ne]);
  const Ke = (ve) => {
    ie || (Q(!0), X(!0), L && L(ve));
  }, xt = (ve, pe) => {
    ie && (Q(!1), R && R(ve, pe));
  }, ft = (ve, pe, Ae, Qe) => {
    if (k) {
      if (we.length === pe.length && we.every((tt, ht) => tt === pe[ht]))
        return;
    } else if (we === pe)
      return;
    _ && _(ve, pe, Ae, Qe), De(pe);
  }, Ct = $.useRef(!1), je = (ve, pe, Ae = "selectOption", Qe = "options") => {
    let tt = Ae, ht = pe;
    if (k) {
      if (ht = Array.isArray(we) ? we.slice() : [], process.env.NODE_ENV !== "production") {
        const Pn = ht.filter((Fi) => I(pe, Fi));
        Pn.length > 1 && console.error([`MUI: The \`isOptionEqualToValue\` method of ${u} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${Pn.length} matches.`].join(`
`));
      }
      const nn = ht.findIndex((Pn) => I(pe, Pn));
      nn === -1 ? ht.push(pe) : Qe !== "freeSolo" && (ht.splice(nn, 1), tt = "removeOption");
    }
    J(ve, ht, tt), ft(ve, ht, tt, {
      option: pe
    }), !p && (!ve || !ve.ctrlKey && !ve.metaKey) && xt(ve, tt), (s === !0 || s === "touch" && Ct.current || s === "mouse" && !Ct.current) && W.current.blur();
  };
  function pt(ve, pe) {
    if (ve === -1)
      return -1;
    let Ae = ve;
    for (; ; ) {
      if (pe === "next" && Ae === we.length || pe === "previous" && Ae === -1)
        return -1;
      const Qe = Y.querySelector(`[data-tag-index="${Ae}"]`);
      if (!Qe || !Qe.hasAttribute("tabindex") || Qe.disabled || Qe.getAttribute("aria-disabled") === "true")
        Ae += pe === "next" ? 1 : -1;
      else
        return Ae;
    }
  }
  const Et = (ve, pe) => {
    if (!k)
      return;
    Ee === "" && xt(ve, "toggleInput");
    let Ae = z;
    z === -1 ? Ee === "" && pe === "previous" && (Ae = we.length - 1) : (Ae += pe === "next" ? 1 : -1, Ae < 0 && (Ae = 0), Ae === we.length && (Ae = -1)), Ae = pt(Ae, pe), de(Ae), ce(Ae);
  }, Le = (ve) => {
    te.current = !0, Ve(""), N && N(ve, "", "clear"), ft(ve, k ? [] : null, "clear");
  }, Ft = (ve) => (pe) => {
    if (ve.onKeyDown && ve.onKeyDown(pe), !pe.defaultMuiPrevented && (z !== -1 && !["ArrowLeft", "ArrowRight"].includes(pe.key) && (de(-1), ce(-1)), pe.which !== 229))
      switch (pe.key) {
        case "Home":
          ye && E && (pe.preventDefault(), oe({
            diff: "start",
            direction: "next",
            reason: "keyboard",
            event: pe
          }));
          break;
        case "End":
          ye && E && (pe.preventDefault(), oe({
            diff: "end",
            direction: "previous",
            reason: "keyboard",
            event: pe
          }));
          break;
        case "PageUp":
          pe.preventDefault(), oe({
            diff: -5,
            direction: "previous",
            reason: "keyboard",
            event: pe
          }), Ke(pe);
          break;
        case "PageDown":
          pe.preventDefault(), oe({
            diff: h8,
            direction: "next",
            reason: "keyboard",
            event: pe
          }), Ke(pe);
          break;
        case "ArrowDown":
          pe.preventDefault(), oe({
            diff: 1,
            direction: "next",
            reason: "keyboard",
            event: pe
          }), Ke(pe);
          break;
        case "ArrowUp":
          pe.preventDefault(), oe({
            diff: -1,
            direction: "previous",
            reason: "keyboard",
            event: pe
          }), Ke(pe);
          break;
        case "ArrowLeft":
          Et(pe, "previous");
          break;
        case "ArrowRight":
          Et(pe, "next");
          break;
        case "Enter":
          if (xe.current !== -1 && ye) {
            const Ae = he[xe.current], Qe = v ? v(Ae) : !1;
            if (pe.preventDefault(), Qe)
              return;
            je(pe, Ae, "selectOption"), o && W.current.setSelectionRange(W.current.value.length, W.current.value.length);
          } else T && Ee !== "" && se === !1 && (k && pe.preventDefault(), je(pe, Ee, "createOption", "freeSolo"));
          break;
        case "Escape":
          ye ? (pe.preventDefault(), pe.stopPropagation(), xt(pe, "escape")) : c && (Ee !== "" || k && we.length > 0) && (pe.preventDefault(), pe.stopPropagation(), Le(pe));
          break;
        case "Backspace":
          if (k && !F && Ee === "" && we.length > 0) {
            const Ae = z === -1 ? we.length - 1 : z, Qe = we.slice();
            Qe.splice(Ae, 1), ft(pe, Qe, "removeOption", {
              option: we[Ae]
            });
          }
          break;
        case "Delete":
          if (k && !F && Ee === "" && we.length > 0 && z !== -1) {
            const Ae = z, Qe = we.slice();
            Qe.splice(Ae, 1), ft(pe, Qe, "removeOption", {
              option: we[Ae]
            });
          }
          break;
      }
  }, Bt = (ve) => {
    j(!0), D && !te.current && Ke(ve);
  }, tn = (ve) => {
    if (t(ee)) {
      W.current.focus();
      return;
    }
    j(!1), ne.current = !0, te.current = !1, i && xe.current !== -1 && ye ? je(ve, he[xe.current], "blur") : i && T && Ee !== "" ? je(ve, Ee, "blur", "freeSolo") : l && J(ve, we, "blur"), xt(ve, "blur");
  }, ko = (ve) => {
    const pe = ve.target.value;
    Ee !== pe && (Ve(pe), X(!1), N && N(ve, pe, "input")), pe === "" ? !f && !k && ft(ve, null, "clear") : Ke(ve);
  }, wn = (ve) => {
    const pe = Number(ve.currentTarget.getAttribute("data-option-index"));
    xe.current !== pe && Re({
      event: ve,
      index: pe,
      reason: "mouse"
    });
  }, In = (ve) => {
    Re({
      event: ve,
      index: Number(ve.currentTarget.getAttribute("data-option-index")),
      reason: "touch"
    }), Ct.current = !0;
  }, ei = (ve) => {
    const pe = Number(ve.currentTarget.getAttribute("data-option-index"));
    je(ve, he[pe], "selectOption"), Ct.current = !1;
  }, fo = (ve) => (pe) => {
    const Ae = we.slice();
    Ae.splice(ve, 1), ft(pe, Ae, "removeOption", {
      option: we[ve]
    });
  }, ws = (ve) => {
    ie ? xt(ve, "toggleInput") : Ke(ve);
  }, Bi = (ve) => {
    ve.currentTarget.contains(ve.target) && ve.target.getAttribute("id") !== G && ve.preventDefault();
  }, On = (ve) => {
    ve.currentTarget.contains(ve.target) && (W.current.focus(), U && ne.current && W.current.selectionEnd - W.current.selectionStart === 0 && W.current.select(), ne.current = !1);
  }, hn = (ve) => {
    !h && (Ee === "" || !ie) && ws(ve);
  };
  let po = T && Ee.length > 0;
  po = po || (k ? we.length > 0 : we !== null);
  let Vi = he;
  if (C) {
    const ve = /* @__PURE__ */ new Map();
    let pe = !1;
    Vi = he.reduce((Ae, Qe, tt) => {
      const ht = C(Qe);
      return Ae.length > 0 && Ae[Ae.length - 1].group === ht ? Ae[Ae.length - 1].options.push(Qe) : (process.env.NODE_ENV !== "production" && (ve.get(ht) && !pe && (console.warn(`MUI: The options provided combined with the \`groupBy\` method of ${u} returns duplicated headers.`, "You can solve the issue by sorting the options with the output of `groupBy`."), pe = !0), ve.set(ht, !0)), Ae.push({
        key: tt,
        index: tt,
        group: ht,
        options: [Qe]
      })), Ae;
    }, []);
  }
  return h && Me && tn(), {
    getRootProps: (ve = {}) => ({
      ...ve,
      onKeyDown: Ft(ve),
      onMouseDown: Bi,
      onClick: On
    }),
    getInputLabelProps: () => ({
      id: `${G}-label`,
      htmlFor: G
    }),
    getInputProps: () => ({
      id: G,
      value: Ee,
      onBlur: tn,
      onFocus: Bt,
      onChange: ko,
      onMouseDown: hn,
      // if open then this is handled imperatively so don't let react override
      // only have an opinion about this when closed
      "aria-activedescendant": ye ? "" : null,
      "aria-autocomplete": o ? "both" : "list",
      "aria-controls": ae ? `${G}-listbox` : void 0,
      "aria-expanded": ae,
      // Disable browser's suggestion that might overlap with the popup.
      // Handle autocomplete but not autofill.
      autoComplete: "off",
      ref: W,
      autoCapitalize: "none",
      spellCheck: "false",
      role: "combobox",
      disabled: h
    }),
    getClearProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: Le
    }),
    getPopupIndicatorProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: ws
    }),
    getTagProps: ({
      index: ve
    }) => ({
      key: ve,
      "data-tag-index": ve,
      tabIndex: -1,
      ...!F && {
        onDelete: fo(ve)
      }
    }),
    getListboxProps: () => ({
      role: "listbox",
      id: `${G}-listbox`,
      "aria-labelledby": `${G}-label`,
      ref: We,
      onMouseDown: (ve) => {
        ve.preventDefault();
      }
    }),
    getOptionProps: ({
      index: ve,
      option: pe
    }) => {
      const Ae = (k ? we : [we]).some((tt) => tt != null && I(pe, tt)), Qe = v ? v(pe) : !1;
      return {
        key: (w == null ? void 0 : w(pe)) ?? K(pe),
        tabIndex: -1,
        role: "option",
        id: `${G}-option-${ve}`,
        onMouseMove: wn,
        onClick: ei,
        onTouchStart: In,
        "data-option-index": ve,
        "aria-disabled": Qe,
        "aria-selected": Ae
      };
    },
    id: G,
    inputValue: Ee,
    value: we,
    dirty: po,
    expanded: ye && Y,
    popupOpen: ye,
    focused: Me || z !== -1,
    anchorEl: Y,
    setAnchorEl: re,
    focusedTag: z,
    groupedOptions: Vi
  };
}
function b8(e) {
  return ot("MuiListSubheader", e);
}
at("MuiListSubheader", ["root", "colorPrimary", "colorInherit", "gutters", "inset", "sticky"]);
const v8 = (e) => {
  const {
    classes: t,
    color: n,
    disableGutters: o,
    inset: r,
    disableSticky: i
  } = e, s = {
    root: ["root", n !== "default" && `color${fe(n)}`, !o && "gutters", r && "inset", !i && "sticky"]
  };
  return st(s, b8, t);
}, x8 = Ce("li", {
  name: "MuiListSubheader",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "default" && t[`color${fe(n.color)}`], !n.disableGutters && t.gutters, n.inset && t.inset, !n.disableSticky && t.sticky];
  }
})(Ye(({
  theme: e
}) => ({
  boxSizing: "border-box",
  lineHeight: "48px",
  listStyle: "none",
  color: (e.vars || e).palette.text.secondary,
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(14),
  variants: [{
    props: {
      color: "primary"
    },
    style: {
      color: (e.vars || e).palette.primary.main
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      color: "inherit"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableGutters,
    style: {
      paddingLeft: 16,
      paddingRight: 16
    }
  }, {
    props: ({
      ownerState: t
    }) => t.inset,
    style: {
      paddingLeft: 72
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableSticky,
    style: {
      position: "sticky",
      top: 0,
      zIndex: 1,
      backgroundColor: (e.vars || e).palette.background.paper
    }
  }]
}))), Hd = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiListSubheader"
  }), {
    className: r,
    color: i = "default",
    component: s = "li",
    disableGutters: l = !1,
    disableSticky: c = !1,
    inset: u = !1,
    ...d
  } = o, f = {
    ...o,
    color: i,
    component: s,
    disableGutters: l,
    disableSticky: c,
    inset: u
  }, p = v8(f);
  return /* @__PURE__ */ O(x8, {
    as: s,
    className: Ie(p.root, r),
    ref: n,
    ownerState: f,
    ...d
  });
});
Hd && (Hd.muiSkipListHighlight = !0);
process.env.NODE_ENV !== "production" && (Hd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component. It supports those theme colors that make sense for this component.
   * @default 'default'
   */
  color: a.oneOf(["default", "inherit", "primary"]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the List Subheader will not have gutters.
   * @default false
   */
  disableGutters: a.bool,
  /**
   * If `true`, the List Subheader will not stick to the top during scroll.
   * @default false
   */
  disableSticky: a.bool,
  /**
   * If `true`, the List Subheader is indented.
   * @default false
   */
  inset: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function w8(e) {
  return ot("MuiIconButton", e);
}
const gS = at("MuiIconButton", ["root", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorError", "colorInfo", "colorSuccess", "colorWarning", "edgeStart", "edgeEnd", "sizeSmall", "sizeMedium", "sizeLarge", "loading", "loadingIndicator", "loadingWrapper"]), S8 = (e) => {
  const {
    classes: t,
    disabled: n,
    color: o,
    edge: r,
    size: i,
    loading: s
  } = e, l = {
    root: ["root", s && "loading", n && "disabled", o !== "default" && `color${fe(o)}`, r && `edge${fe(r)}`, `size${fe(i)}`],
    loadingIndicator: ["loadingIndicator"],
    loadingWrapper: ["loadingWrapper"]
  };
  return st(l, w8, t);
}, T8 = Ce(pa, {
  name: "MuiIconButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.loading && t.loading, n.color !== "default" && t[`color${fe(n.color)}`], n.edge && t[`edge${fe(n.edge)}`], t[`size${fe(n.size)}`]];
  }
})(Ye(({
  theme: e
}) => ({
  textAlign: "center",
  flex: "0 0 auto",
  fontSize: e.typography.pxToRem(24),
  padding: 8,
  borderRadius: "50%",
  color: (e.vars || e).palette.action.active,
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.shortest
  }),
  variants: [{
    props: (t) => !t.disableRipple,
    style: {
      "--IconButton-hoverBg": e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : vt(e.palette.action.active, e.palette.action.hoverOpacity),
      "&:hover": {
        backgroundColor: "var(--IconButton-hoverBg)",
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }, {
    props: {
      edge: "start"
    },
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: {
      edge: "end"
    },
    style: {
      marginRight: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }]
})), Ye(({
  theme: e
}) => ({
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      color: "inherit"
    }
  }, ...Object.entries(e.palette).filter(Gt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  })), ...Object.entries(e.palette).filter(Gt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--IconButton-hoverBg": e.vars ? `rgba(${(e.vars || e).palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : vt((e.vars || e).palette[t].main, e.palette.action.hoverOpacity)
    }
  })), {
    props: {
      size: "small"
    },
    style: {
      padding: 5,
      fontSize: e.typography.pxToRem(18)
    }
  }, {
    props: {
      size: "large"
    },
    style: {
      padding: 12,
      fontSize: e.typography.pxToRem(28)
    }
  }],
  [`&.${gS.disabled}`]: {
    backgroundColor: "transparent",
    color: (e.vars || e).palette.action.disabled
  },
  [`&.${gS.loading}`]: {
    color: "transparent"
  }
}))), C8 = Ce("span", {
  name: "MuiIconButton",
  slot: "LoadingIndicator",
  overridesResolver: (e, t) => t.loadingIndicator
})(({
  theme: e
}) => ({
  display: "none",
  position: "absolute",
  visibility: "visible",
  top: "50%",
  left: "50%",
  transform: "translate(-50%, -50%)",
  color: (e.vars || e).palette.action.disabled,
  variants: [{
    props: {
      loading: !0
    },
    style: {
      display: "flex"
    }
  }]
})), $b = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiIconButton"
  }), {
    edge: r = !1,
    children: i,
    className: s,
    color: l = "default",
    disabled: c = !1,
    disableFocusRipple: u = !1,
    size: d = "medium",
    id: f,
    loading: p = null,
    loadingIndicator: h,
    ...g
  } = o, m = hs(f), y = h ?? /* @__PURE__ */ O(Ac, {
    "aria-labelledby": m,
    color: "inherit",
    size: 16
  }), b = {
    ...o,
    edge: r,
    color: l,
    disabled: c,
    disableFocusRipple: u,
    loading: p,
    loadingIndicator: y,
    size: d
  }, T = S8(b);
  return /* @__PURE__ */ Se(T8, {
    id: p ? m : f,
    className: Ie(T.root, s),
    centerRipple: !0,
    focusRipple: !u,
    disabled: c || p,
    ref: n,
    ...g,
    ownerState: b,
    children: [typeof p == "boolean" && // use plain HTML span to minimize the runtime overhead
    /* @__PURE__ */ O("span", {
      className: T.loadingWrapper,
      style: {
        display: "contents"
      },
      children: /* @__PURE__ */ O(C8, {
        className: T.loadingIndicator,
        ownerState: b,
        children: p && y
      })
    }), i]
  });
});
process.env.NODE_ENV !== "production" && ($b.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The icon to display.
   */
  children: rr(a.node, (e) => $.Children.toArray(e.children).some((n) => /* @__PURE__ */ $.isValidElement(n) && n.props.onClick) ? new Error(["MUI: You are providing an onClick event listener to a child of a button element.", "Prefer applying it to the IconButton directly.", "This guarantees that the whole <button> will be responsive to click events."].join(`
`)) : null),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: a.oneOfType([a.oneOf(["inherit", "default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: a.oneOf(["end", "start", !1]),
  /**
   * @ignore
   */
  id: a.string,
  /**
   * If `true`, the loading indicator is visible and the button is disabled.
   * If `true | false`, the loading wrapper is always rendered before the children to prevent [Google Translation Crash](https://github.com/mui/material-ui/issues/27853).
   * @default null
   */
  loading: a.bool,
  /**
   * Element placed before the children if the button is in loading state.
   * The node should contain an element with `role="progressbar"` with an accessible name.
   * By default, it renders a `CircularProgress` that is labeled by the button itself.
   * @default <CircularProgress color="inherit" size={16} />
   */
  loadingIndicator: a.node,
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["small", "medium", "large"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const E8 = Qr(/* @__PURE__ */ O("path", {
  d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
}), "Cancel");
function O8(e) {
  return ot("MuiChip", e);
}
const dt = at("MuiChip", ["root", "sizeSmall", "sizeMedium", "colorDefault", "colorError", "colorInfo", "colorPrimary", "colorSecondary", "colorSuccess", "colorWarning", "disabled", "clickable", "clickableColorPrimary", "clickableColorSecondary", "deletable", "deletableColorPrimary", "deletableColorSecondary", "outlined", "filled", "outlinedPrimary", "outlinedSecondary", "filledPrimary", "filledSecondary", "avatar", "avatarSmall", "avatarMedium", "avatarColorPrimary", "avatarColorSecondary", "icon", "iconSmall", "iconMedium", "iconColorPrimary", "iconColorSecondary", "label", "labelSmall", "labelMedium", "deleteIcon", "deleteIconSmall", "deleteIconMedium", "deleteIconColorPrimary", "deleteIconColorSecondary", "deleteIconOutlinedColorPrimary", "deleteIconOutlinedColorSecondary", "deleteIconFilledColorPrimary", "deleteIconFilledColorSecondary", "focusVisible"]), P8 = (e) => {
  const {
    classes: t,
    disabled: n,
    size: o,
    color: r,
    iconColor: i,
    onDelete: s,
    clickable: l,
    variant: c
  } = e, u = {
    root: ["root", c, n && "disabled", `size${fe(o)}`, `color${fe(r)}`, l && "clickable", l && `clickableColor${fe(r)}`, s && "deletable", s && `deletableColor${fe(r)}`, `${c}${fe(r)}`],
    label: ["label", `label${fe(o)}`],
    avatar: ["avatar", `avatar${fe(o)}`, `avatarColor${fe(r)}`],
    icon: ["icon", `icon${fe(o)}`, `iconColor${fe(i)}`],
    deleteIcon: ["deleteIcon", `deleteIcon${fe(o)}`, `deleteIconColor${fe(r)}`, `deleteIcon${fe(c)}Color${fe(r)}`]
  };
  return st(u, O8, t);
}, R8 = Ce("div", {
  name: "MuiChip",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      color: o,
      iconColor: r,
      clickable: i,
      onDelete: s,
      size: l,
      variant: c
    } = n;
    return [{
      [`& .${dt.avatar}`]: t.avatar
    }, {
      [`& .${dt.avatar}`]: t[`avatar${fe(l)}`]
    }, {
      [`& .${dt.avatar}`]: t[`avatarColor${fe(o)}`]
    }, {
      [`& .${dt.icon}`]: t.icon
    }, {
      [`& .${dt.icon}`]: t[`icon${fe(l)}`]
    }, {
      [`& .${dt.icon}`]: t[`iconColor${fe(r)}`]
    }, {
      [`& .${dt.deleteIcon}`]: t.deleteIcon
    }, {
      [`& .${dt.deleteIcon}`]: t[`deleteIcon${fe(l)}`]
    }, {
      [`& .${dt.deleteIcon}`]: t[`deleteIconColor${fe(o)}`]
    }, {
      [`& .${dt.deleteIcon}`]: t[`deleteIcon${fe(c)}Color${fe(o)}`]
    }, t.root, t[`size${fe(l)}`], t[`color${fe(o)}`], i && t.clickable, i && o !== "default" && t[`clickableColor${fe(o)})`], s && t.deletable, s && o !== "default" && t[`deletableColor${fe(o)}`], t[c], t[`${c}${fe(o)}`]];
  }
})(Ye(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? e.palette.grey[700] : e.palette.grey[300];
  return {
    maxWidth: "100%",
    fontFamily: e.typography.fontFamily,
    fontSize: e.typography.pxToRem(13),
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    height: 32,
    color: (e.vars || e).palette.text.primary,
    backgroundColor: (e.vars || e).palette.action.selected,
    borderRadius: 32 / 2,
    whiteSpace: "nowrap",
    transition: e.transitions.create(["background-color", "box-shadow"]),
    // reset cursor explicitly in case ButtonBase is used
    cursor: "unset",
    // We disable the focus ring for mouse, touch and keyboard users.
    outline: 0,
    textDecoration: "none",
    border: 0,
    // Remove `button` border
    padding: 0,
    // Remove `button` padding
    verticalAlign: "middle",
    boxSizing: "border-box",
    [`&.${dt.disabled}`]: {
      opacity: (e.vars || e).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`& .${dt.avatar}`]: {
      marginLeft: 5,
      marginRight: -6,
      width: 24,
      height: 24,
      color: e.vars ? e.vars.palette.Chip.defaultAvatarColor : t,
      fontSize: e.typography.pxToRem(12)
    },
    [`& .${dt.avatarColorPrimary}`]: {
      color: (e.vars || e).palette.primary.contrastText,
      backgroundColor: (e.vars || e).palette.primary.dark
    },
    [`& .${dt.avatarColorSecondary}`]: {
      color: (e.vars || e).palette.secondary.contrastText,
      backgroundColor: (e.vars || e).palette.secondary.dark
    },
    [`& .${dt.avatarSmall}`]: {
      marginLeft: 4,
      marginRight: -4,
      width: 18,
      height: 18,
      fontSize: e.typography.pxToRem(10)
    },
    [`& .${dt.icon}`]: {
      marginLeft: 5,
      marginRight: -6
    },
    [`& .${dt.deleteIcon}`]: {
      WebkitTapHighlightColor: "transparent",
      color: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / 0.26)` : vt(e.palette.text.primary, 0.26),
      fontSize: 22,
      cursor: "pointer",
      margin: "0 5px 0 -6px",
      "&:hover": {
        color: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / 0.4)` : vt(e.palette.text.primary, 0.4)
      }
    },
    variants: [{
      props: {
        size: "small"
      },
      style: {
        height: 24,
        [`& .${dt.icon}`]: {
          fontSize: 18,
          marginLeft: 4,
          marginRight: -4
        },
        [`& .${dt.deleteIcon}`]: {
          fontSize: 16,
          marginRight: 4,
          marginLeft: -4
        }
      }
    }, ...Object.entries(e.palette).filter(Gt(["contrastText"])).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        backgroundColor: (e.vars || e).palette[n].main,
        color: (e.vars || e).palette[n].contrastText,
        [`& .${dt.deleteIcon}`]: {
          color: e.vars ? `rgba(${e.vars.palette[n].contrastTextChannel} / 0.7)` : vt(e.palette[n].contrastText, 0.7),
          "&:hover, &:active": {
            color: (e.vars || e).palette[n].contrastText
          }
        }
      }
    })), {
      props: (n) => n.iconColor === n.color,
      style: {
        [`& .${dt.icon}`]: {
          color: e.vars ? e.vars.palette.Chip.defaultIconColor : t
        }
      }
    }, {
      props: (n) => n.iconColor === n.color && n.color !== "default",
      style: {
        [`& .${dt.icon}`]: {
          color: "inherit"
        }
      }
    }, {
      props: {
        onDelete: !0
      },
      style: {
        [`&.${dt.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : vt(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
        }
      }
    }, ...Object.entries(e.palette).filter(Gt(["dark"])).map(([n]) => ({
      props: {
        color: n,
        onDelete: !0
      },
      style: {
        [`&.${dt.focusVisible}`]: {
          background: (e.vars || e).palette[n].dark
        }
      }
    })), {
      props: {
        clickable: !0
      },
      style: {
        userSelect: "none",
        WebkitTapHighlightColor: "transparent",
        cursor: "pointer",
        "&:hover": {
          backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : vt(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity)
        },
        [`&.${dt.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : vt(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
        },
        "&:active": {
          boxShadow: (e.vars || e).shadows[1]
        }
      }
    }, ...Object.entries(e.palette).filter(Gt(["dark"])).map(([n]) => ({
      props: {
        color: n,
        clickable: !0
      },
      style: {
        [`&:hover, &.${dt.focusVisible}`]: {
          backgroundColor: (e.vars || e).palette[n].dark
        }
      }
    })), {
      props: {
        variant: "outlined"
      },
      style: {
        backgroundColor: "transparent",
        border: e.vars ? `1px solid ${e.vars.palette.Chip.defaultBorder}` : `1px solid ${e.palette.mode === "light" ? e.palette.grey[400] : e.palette.grey[700]}`,
        [`&.${dt.clickable}:hover`]: {
          backgroundColor: (e.vars || e).palette.action.hover
        },
        [`&.${dt.focusVisible}`]: {
          backgroundColor: (e.vars || e).palette.action.focus
        },
        [`& .${dt.avatar}`]: {
          marginLeft: 4
        },
        [`& .${dt.avatarSmall}`]: {
          marginLeft: 2
        },
        [`& .${dt.icon}`]: {
          marginLeft: 4
        },
        [`& .${dt.iconSmall}`]: {
          marginLeft: 2
        },
        [`& .${dt.deleteIcon}`]: {
          marginRight: 5
        },
        [`& .${dt.deleteIconSmall}`]: {
          marginRight: 3
        }
      }
    }, ...Object.entries(e.palette).filter(Gt()).map(([n]) => ({
      props: {
        variant: "outlined",
        color: n
      },
      style: {
        color: (e.vars || e).palette[n].main,
        border: `1px solid ${e.vars ? `rgba(${e.vars.palette[n].mainChannel} / 0.7)` : vt(e.palette[n].main, 0.7)}`,
        [`&.${dt.clickable}:hover`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[n].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : vt(e.palette[n].main, e.palette.action.hoverOpacity)
        },
        [`&.${dt.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[n].mainChannel} / ${e.vars.palette.action.focusOpacity})` : vt(e.palette[n].main, e.palette.action.focusOpacity)
        },
        [`& .${dt.deleteIcon}`]: {
          color: e.vars ? `rgba(${e.vars.palette[n].mainChannel} / 0.7)` : vt(e.palette[n].main, 0.7),
          "&:hover, &:active": {
            color: (e.vars || e).palette[n].main
          }
        }
      }
    }))]
  };
})), I8 = Ce("span", {
  name: "MuiChip",
  slot: "Label",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      size: o
    } = n;
    return [t.label, t[`label${fe(o)}`]];
  }
})({
  overflow: "hidden",
  textOverflow: "ellipsis",
  paddingLeft: 12,
  paddingRight: 12,
  whiteSpace: "nowrap",
  variants: [{
    props: {
      variant: "outlined"
    },
    style: {
      paddingLeft: 11,
      paddingRight: 11
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      paddingLeft: 8,
      paddingRight: 8
    }
  }, {
    props: {
      size: "small",
      variant: "outlined"
    },
    style: {
      paddingLeft: 7,
      paddingRight: 7
    }
  }]
});
function yS(e) {
  return e.key === "Backspace" || e.key === "Delete";
}
const RR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiChip"
  }), {
    avatar: r,
    className: i,
    clickable: s,
    color: l = "default",
    component: c,
    deleteIcon: u,
    disabled: d = !1,
    icon: f,
    label: p,
    onClick: h,
    onDelete: g,
    onKeyDown: m,
    onKeyUp: y,
    size: b = "medium",
    variant: T = "filled",
    tabIndex: v,
    skipFocusWhenDisabled: w = !1,
    // TODO v6: Rename to `focusableWhenDisabled`.
    ...S
  } = o, C = $.useRef(null), E = yn(C, n), P = (D) => {
    D.stopPropagation(), g && g(D);
  }, M = (D) => {
    D.currentTarget === D.target && yS(D) && D.preventDefault(), m && m(D);
  }, x = (D) => {
    D.currentTarget === D.target && g && yS(D) && g(D), y && y(D);
  }, I = s !== !1 && h ? !0 : s, k = I || g ? pa : c || "div", _ = {
    ...o,
    component: k,
    disabled: d,
    size: b,
    color: l,
    iconColor: /* @__PURE__ */ $.isValidElement(f) && f.props.color || l,
    onDelete: !!g,
    clickable: I,
    variant: T
  }, R = P8(_), A = k === pa ? {
    component: c || "div",
    focusVisibleClassName: R.focusVisible,
    ...g && {
      disableRipple: !0
    }
  } : {};
  let N = null;
  g && (N = u && /* @__PURE__ */ $.isValidElement(u) ? /* @__PURE__ */ $.cloneElement(u, {
    className: Ie(u.props.className, R.deleteIcon),
    onClick: P
  }) : /* @__PURE__ */ O(E8, {
    className: Ie(R.deleteIcon),
    onClick: P
  }));
  let L = null;
  r && /* @__PURE__ */ $.isValidElement(r) && (L = /* @__PURE__ */ $.cloneElement(r, {
    className: Ie(R.avatar, r.props.className)
  }));
  let V = null;
  return f && /* @__PURE__ */ $.isValidElement(f) && (V = /* @__PURE__ */ $.cloneElement(f, {
    className: Ie(R.icon, f.props.className)
  })), process.env.NODE_ENV !== "production" && L && V && console.error("MUI: The Chip component can not handle the avatar and the icon prop at the same time. Pick one."), /* @__PURE__ */ Se(R8, {
    as: k,
    className: Ie(R.root, i),
    disabled: I && d ? !0 : void 0,
    onClick: h,
    onKeyDown: M,
    onKeyUp: x,
    ref: E,
    tabIndex: w && d ? -1 : v,
    ownerState: _,
    ...A,
    ...S,
    children: [L || V, /* @__PURE__ */ O(I8, {
      className: Ie(R.label),
      ownerState: _,
      children: p
    }), N]
  });
});
process.env.NODE_ENV !== "production" && (RR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The Avatar element to display.
   */
  avatar: a.element,
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: TA,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, the chip will appear clickable, and will raise when pressed,
   * even if the onClick prop is not defined.
   * If `false`, the chip will not appear clickable, even if onClick prop is defined.
   * This can be used, for example,
   * along with the component prop to indicate an anchor Chip is clickable.
   * Note: this controls the UI and does not affect the onClick event.
   */
  clickable: a.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Override the default delete icon element. Shown only if `onDelete` is set.
   */
  deleteIcon: a.element,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * Icon element.
   */
  icon: a.element,
  /**
   * The content of the component.
   */
  label: a.node,
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * Callback fired when the delete icon is clicked.
   * If set, the delete icon will be shown.
   */
  onDelete: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * @ignore
   */
  onKeyUp: a.func,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * If `true`, allows the disabled chip to escape focus.
   * If `false`, allows the disabled chip to receive focus.
   * @default false
   */
  skipFocusWhenDisabled: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * @ignore
   */
  tabIndex: a.number,
  /**
   * The variant to use.
   * @default 'filled'
   */
  variant: a.oneOfType([a.oneOf(["filled", "outlined"]), a.string])
});
function k8(e) {
  return ot("MuiInput", e);
}
const ci = {
  ...ho,
  ...at("MuiInput", ["root", "underline", "input"])
};
function $8(e) {
  return ot("MuiFilledInput", e);
}
const mo = {
  ...ho,
  ...at("MuiFilledInput", ["root", "underline", "input", "adornedStart", "adornedEnd", "sizeSmall", "multiline", "hiddenLabel"])
}, N8 = Qr(/* @__PURE__ */ O("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close"), IR = Qr(/* @__PURE__ */ O("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown");
function M8(e) {
  return ot("MuiAutocomplete", e);
}
const nt = at("MuiAutocomplete", ["root", "expanded", "fullWidth", "focused", "focusVisible", "tag", "tagSizeSmall", "tagSizeMedium", "hasPopupIcon", "hasClearIcon", "inputRoot", "input", "inputFocused", "endAdornment", "clearIndicator", "popupIndicator", "popupIndicatorOpen", "popper", "popperDisablePortal", "paper", "listbox", "loading", "noOptions", "option", "groupLabel", "groupUl"]);
var bS, vS;
const A8 = (e) => {
  const {
    classes: t,
    disablePortal: n,
    expanded: o,
    focused: r,
    fullWidth: i,
    hasClearIcon: s,
    hasPopupIcon: l,
    inputFocused: c,
    popupOpen: u,
    size: d
  } = e, f = {
    root: ["root", o && "expanded", r && "focused", i && "fullWidth", s && "hasClearIcon", l && "hasPopupIcon"],
    inputRoot: ["inputRoot"],
    input: ["input", c && "inputFocused"],
    tag: ["tag", `tagSize${fe(d)}`],
    endAdornment: ["endAdornment"],
    clearIndicator: ["clearIndicator"],
    popupIndicator: ["popupIndicator", u && "popupIndicatorOpen"],
    popper: ["popper", n && "popperDisablePortal"],
    paper: ["paper"],
    listbox: ["listbox"],
    loading: ["loading"],
    noOptions: ["noOptions"],
    option: ["option"],
    groupLabel: ["groupLabel"],
    groupUl: ["groupUl"]
  };
  return st(f, M8, t);
}, _8 = Ce("div", {
  name: "MuiAutocomplete",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      fullWidth: o,
      hasClearIcon: r,
      hasPopupIcon: i,
      inputFocused: s,
      size: l
    } = n;
    return [{
      [`& .${nt.tag}`]: t.tag
    }, {
      [`& .${nt.tag}`]: t[`tagSize${fe(l)}`]
    }, {
      [`& .${nt.inputRoot}`]: t.inputRoot
    }, {
      [`& .${nt.input}`]: t.input
    }, {
      [`& .${nt.input}`]: s && t.inputFocused
    }, t.root, o && t.fullWidth, i && t.hasPopupIcon, r && t.hasClearIcon];
  }
})({
  [`&.${nt.focused} .${nt.clearIndicator}`]: {
    visibility: "visible"
  },
  /* Avoid double tap issue on iOS */
  "@media (pointer: fine)": {
    [`&:hover .${nt.clearIndicator}`]: {
      visibility: "visible"
    }
  },
  [`& .${nt.tag}`]: {
    margin: 3,
    maxWidth: "calc(100% - 6px)"
  },
  [`& .${nt.inputRoot}`]: {
    [`.${nt.hasPopupIcon}&, .${nt.hasClearIcon}&`]: {
      paddingRight: 30
    },
    [`.${nt.hasPopupIcon}.${nt.hasClearIcon}&`]: {
      paddingRight: 56
    },
    [`& .${nt.input}`]: {
      width: 0,
      minWidth: 30
    }
  },
  [`& .${ci.root}`]: {
    paddingBottom: 1,
    "& .MuiInput-input": {
      padding: "4px 4px 4px 0px"
    }
  },
  [`& .${ci.root}.${ho.sizeSmall}`]: {
    [`& .${ci.input}`]: {
      padding: "2px 4px 3px 0"
    }
  },
  [`& .${Ao.root}`]: {
    padding: 9,
    [`.${nt.hasPopupIcon}&, .${nt.hasClearIcon}&`]: {
      paddingRight: 39
    },
    [`.${nt.hasPopupIcon}.${nt.hasClearIcon}&`]: {
      paddingRight: 65
    },
    [`& .${nt.input}`]: {
      padding: "7.5px 4px 7.5px 5px"
    },
    [`& .${nt.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${Ao.root}.${ho.sizeSmall}`]: {
    // Don't specify paddingRight, as it overrides the default value set when there is only
    // one of the popup or clear icon as the specificity is equal so the latter one wins
    paddingTop: 6,
    paddingBottom: 6,
    paddingLeft: 6,
    [`& .${nt.input}`]: {
      padding: "2.5px 4px 2.5px 8px"
    }
  },
  [`& .${mo.root}`]: {
    paddingTop: 19,
    paddingLeft: 8,
    [`.${nt.hasPopupIcon}&, .${nt.hasClearIcon}&`]: {
      paddingRight: 39
    },
    [`.${nt.hasPopupIcon}.${nt.hasClearIcon}&`]: {
      paddingRight: 65
    },
    [`& .${mo.input}`]: {
      padding: "7px 4px"
    },
    [`& .${nt.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${mo.root}.${ho.sizeSmall}`]: {
    paddingBottom: 1,
    [`& .${mo.input}`]: {
      padding: "2.5px 4px"
    }
  },
  [`& .${ho.hiddenLabel}`]: {
    paddingTop: 8
  },
  [`& .${mo.root}.${ho.hiddenLabel}`]: {
    paddingTop: 0,
    paddingBottom: 0,
    [`& .${nt.input}`]: {
      paddingTop: 16,
      paddingBottom: 17
    }
  },
  [`& .${mo.root}.${ho.hiddenLabel}.${ho.sizeSmall}`]: {
    [`& .${nt.input}`]: {
      paddingTop: 8,
      paddingBottom: 9
    }
  },
  [`& .${nt.input}`]: {
    flexGrow: 1,
    textOverflow: "ellipsis",
    opacity: 0
  },
  variants: [{
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      [`& .${nt.tag}`]: {
        margin: 2,
        maxWidth: "calc(100% - 4px)"
      }
    }
  }, {
    props: {
      inputFocused: !0
    },
    style: {
      [`& .${nt.input}`]: {
        opacity: 1
      }
    }
  }, {
    props: {
      multiple: !0
    },
    style: {
      [`& .${nt.inputRoot}`]: {
        flexWrap: "wrap"
      }
    }
  }]
}), D8 = Ce("div", {
  name: "MuiAutocomplete",
  slot: "EndAdornment",
  overridesResolver: (e, t) => t.endAdornment
})({
  // We use a position absolute to support wrapping tags.
  position: "absolute",
  right: 0,
  top: "50%",
  transform: "translate(0, -50%)"
}), L8 = Ce($b, {
  name: "MuiAutocomplete",
  slot: "ClearIndicator",
  overridesResolver: (e, t) => t.clearIndicator
})({
  marginRight: -2,
  padding: 4,
  visibility: "hidden"
}), B8 = Ce($b, {
  name: "MuiAutocomplete",
  slot: "PopupIndicator",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.popupIndicator, n.popupOpen && t.popupIndicatorOpen];
  }
})({
  padding: 2,
  marginRight: -2,
  variants: [{
    props: {
      popupOpen: !0
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
}), V8 = Ce(Aa, {
  name: "MuiAutocomplete",
  slot: "Popper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${nt.option}`]: t.option
    }, t.popper, n.disablePortal && t.popperDisablePortal];
  }
})(Ye(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.modal,
  variants: [{
    props: {
      disablePortal: !0
    },
    style: {
      position: "absolute"
    }
  }]
}))), F8 = Ce(Pi, {
  name: "MuiAutocomplete",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})(Ye(({
  theme: e
}) => ({
  ...e.typography.body1,
  overflow: "auto"
}))), j8 = Ce("div", {
  name: "MuiAutocomplete",
  slot: "Loading",
  overridesResolver: (e, t) => t.loading
})(Ye(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  padding: "14px 16px"
}))), z8 = Ce("div", {
  name: "MuiAutocomplete",
  slot: "NoOptions",
  overridesResolver: (e, t) => t.noOptions
})(Ye(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  padding: "14px 16px"
}))), H8 = Ce("ul", {
  name: "MuiAutocomplete",
  slot: "Listbox",
  overridesResolver: (e, t) => t.listbox
})(Ye(({
  theme: e
}) => ({
  listStyle: "none",
  margin: 0,
  padding: "8px 0",
  maxHeight: "40vh",
  overflow: "auto",
  position: "relative",
  [`& .${nt.option}`]: {
    minHeight: 48,
    display: "flex",
    overflow: "hidden",
    justifyContent: "flex-start",
    alignItems: "center",
    cursor: "pointer",
    paddingTop: 6,
    boxSizing: "border-box",
    outline: "0",
    WebkitTapHighlightColor: "transparent",
    paddingBottom: 6,
    paddingLeft: 16,
    paddingRight: 16,
    [e.breakpoints.up("sm")]: {
      minHeight: "auto"
    },
    [`&.${nt.focused}`]: {
      backgroundColor: (e.vars || e).palette.action.hover,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    '&[aria-disabled="true"]': {
      opacity: (e.vars || e).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`&.${nt.focusVisible}`]: {
      backgroundColor: (e.vars || e).palette.action.focus
    },
    '&[aria-selected="true"]': {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : vt(e.palette.primary.main, e.palette.action.selectedOpacity),
      [`&.${nt.focused}`]: {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : vt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: (e.vars || e).palette.action.selected
        }
      },
      [`&.${nt.focusVisible}`]: {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : vt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
      }
    }
  }
}))), W8 = Ce(Hd, {
  name: "MuiAutocomplete",
  slot: "GroupLabel",
  overridesResolver: (e, t) => t.groupLabel
})(Ye(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  top: -8
}))), U8 = Ce("ul", {
  name: "MuiAutocomplete",
  slot: "GroupUl",
  overridesResolver: (e, t) => t.groupUl
})({
  padding: 0,
  [`& .${nt.option}`]: {
    paddingLeft: 24
  }
}), kR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiAutocomplete"
  }), {
    autoComplete: r = !1,
    autoHighlight: i = !1,
    autoSelect: s = !1,
    blurOnSelect: l = !1,
    ChipProps: c,
    className: u,
    clearIcon: d = bS || (bS = /* @__PURE__ */ O(N8, {
      fontSize: "small"
    })),
    clearOnBlur: f = !o.freeSolo,
    clearOnEscape: p = !1,
    clearText: h = "Clear",
    closeText: g = "Close",
    componentsProps: m,
    defaultValue: y = o.multiple ? [] : null,
    disableClearable: b = !1,
    disableCloseOnSelect: T = !1,
    disabled: v = !1,
    disabledItemsFocusable: w = !1,
    disableListWrap: S = !1,
    disablePortal: C = !1,
    filterOptions: E,
    filterSelectedOptions: P = !1,
    forcePopupIcon: M = "auto",
    freeSolo: x = !1,
    fullWidth: I = !1,
    getLimitTagsText: k = (yt) => `+${yt}`,
    getOptionDisabled: _,
    getOptionKey: R,
    getOptionLabel: A,
    isOptionEqualToValue: N,
    groupBy: L,
    handleHomeEndKeys: V = !o.freeSolo,
    id: D,
    includeInputInList: B = !1,
    inputValue: F,
    limitTags: U = -1,
    ListboxComponent: q,
    ListboxProps: G,
    loading: K = !1,
    loadingText: te = "Loading…",
    multiple: ne = !1,
    noOptionsText: W = "No options",
    onChange: ee,
    onClose: Y,
    onHighlightChange: re,
    onInputChange: z,
    onOpen: de,
    open: ue,
    openOnFocus: xe = !1,
    openText: _e = "Open",
    options: we,
    PaperComponent: De,
    PopperComponent: Ee,
    popupIcon: Ve = vS || (vS = /* @__PURE__ */ O(IR, {})),
    readOnly: Me = !1,
    renderGroup: j,
    renderInput: J,
    renderOption: ie,
    renderTags: Q,
    selectOnFocus: H = !o.freeSolo,
    size: X = "medium",
    slots: se = {},
    slotProps: ye = {},
    value: he,
    ...le
  } = o, {
    getRootProps: ae,
    getInputProps: ce,
    getInputLabelProps: Te,
    getPopupIndicatorProps: Re,
    getClearProps: oe,
    getTagProps: be,
    getListboxProps: Ne,
    getOptionProps: We,
    value: Ke,
    dirty: xt,
    expanded: ft,
    id: Ct,
    popupOpen: je,
    focused: pt,
    focusedTag: Et,
    anchorEl: Le,
    setAnchorEl: Ft,
    inputValue: Bt,
    groupedOptions: tn
  } = y8({
    ...o,
    componentName: "Autocomplete"
  }), ko = !b && !v && xt && !Me, wn = (!x || M === !0) && M !== !1, {
    onMouseDown: In
  } = ce(), {
    ref: ei,
    ...fo
  } = Ne(), Bi = A || ((yt) => yt.label ?? yt), On = {
    ...o,
    disablePortal: C,
    expanded: ft,
    focused: pt,
    fullWidth: I,
    getOptionLabel: Bi,
    hasClearIcon: ko,
    hasPopupIcon: wn,
    inputFocused: Et === -1,
    popupOpen: je,
    size: X
  }, hn = A8(On), po = {
    slots: {
      paper: De,
      popper: Ee,
      ...se
    },
    slotProps: {
      chip: c,
      listbox: G,
      ...m,
      ...ye
    }
  }, [Vi, ve] = it("listbox", {
    elementType: H8,
    externalForwardedProps: po,
    ownerState: On,
    className: hn.listbox,
    additionalProps: fo,
    ref: ei
  }), [pe, Ae] = it("paper", {
    elementType: Pi,
    externalForwardedProps: po,
    ownerState: On,
    className: hn.paper
  }), [Qe, tt] = it("popper", {
    elementType: Aa,
    externalForwardedProps: po,
    ownerState: On,
    className: hn.popper,
    additionalProps: {
      disablePortal: C,
      style: {
        width: Le ? Le.clientWidth : null
      },
      role: "presentation",
      anchorEl: Le,
      open: je
    }
  });
  let ht;
  if (ne && Ke.length > 0) {
    const yt = ($o) => ({
      className: hn.tag,
      disabled: v,
      ...be($o)
    });
    Q ? ht = Q(Ke, yt, On) : ht = Ke.map(($o, Yo) => {
      const {
        key: ji,
        ...Ap
      } = yt({
        index: Yo
      });
      return /* @__PURE__ */ O(RR, {
        label: Bi($o),
        size: X,
        ...Ap,
        ...po.slotProps.chip
      }, ji);
    });
  }
  if (U > -1 && Array.isArray(ht)) {
    const yt = ht.length - U;
    !pt && yt > 0 && (ht = ht.splice(0, U), ht.push(/* @__PURE__ */ O("span", {
      className: hn.tag,
      children: k(yt)
    }, ht.length)));
  }
  const Pn = j || ((yt) => /* @__PURE__ */ Se("li", {
    children: [/* @__PURE__ */ O(W8, {
      className: hn.groupLabel,
      ownerState: On,
      component: "div",
      children: yt.group
    }), /* @__PURE__ */ O(U8, {
      className: hn.groupUl,
      ownerState: On,
      children: yt.children
    })]
  }, yt.key)), Mp = ie || ((yt, $o) => {
    const {
      key: Yo,
      ...ji
    } = yt;
    return /* @__PURE__ */ O("li", {
      ...ji,
      children: Bi($o)
    }, Yo);
  }), su = (yt, $o) => {
    const Yo = We({
      option: yt,
      index: $o
    });
    return Mp({
      ...Yo,
      className: hn.option
    }, yt, {
      selected: Yo["aria-selected"],
      index: $o,
      inputValue: Bt
    }, On);
  }, Ss = po.slotProps.clearIndicator, Ts = po.slotProps.popupIndicator;
  return /* @__PURE__ */ Se($.Fragment, {
    children: [/* @__PURE__ */ O(_8, {
      ref: n,
      className: Ie(hn.root, u),
      ownerState: On,
      ...ae(le),
      children: J({
        id: Ct,
        disabled: v,
        fullWidth: !0,
        size: X === "small" ? "small" : void 0,
        InputLabelProps: Te(),
        InputProps: {
          ref: Ft,
          className: hn.inputRoot,
          startAdornment: ht,
          onMouseDown: (yt) => {
            yt.target === yt.currentTarget && In(yt);
          },
          ...(ko || wn) && {
            endAdornment: /* @__PURE__ */ Se(D8, {
              className: hn.endAdornment,
              ownerState: On,
              children: [ko ? /* @__PURE__ */ O(L8, {
                ...oe(),
                "aria-label": h,
                title: h,
                ownerState: On,
                ...Ss,
                className: Ie(hn.clearIndicator, Ss == null ? void 0 : Ss.className),
                children: d
              }) : null, wn ? /* @__PURE__ */ O(B8, {
                ...Re(),
                disabled: v,
                "aria-label": je ? g : _e,
                title: je ? g : _e,
                ownerState: On,
                ...Ts,
                className: Ie(hn.popupIndicator, Ts == null ? void 0 : Ts.className),
                children: Ve
              }) : null]
            })
          }
        },
        inputProps: {
          className: hn.input,
          disabled: v,
          readOnly: Me,
          ...ce()
        }
      })
    }), Le ? /* @__PURE__ */ O(V8, {
      as: Qe,
      ...tt,
      children: /* @__PURE__ */ Se(F8, {
        as: pe,
        ...Ae,
        children: [K && tn.length === 0 ? /* @__PURE__ */ O(j8, {
          className: hn.loading,
          ownerState: On,
          children: te
        }) : null, tn.length === 0 && !x && !K ? /* @__PURE__ */ O(z8, {
          className: hn.noOptions,
          ownerState: On,
          role: "presentation",
          onMouseDown: (yt) => {
            yt.preventDefault();
          },
          children: W
        }) : null, tn.length > 0 ? /* @__PURE__ */ O(Vi, {
          as: q,
          ...ve,
          children: tn.map((yt, $o) => L ? Pn({
            key: yt.key,
            group: yt.group,
            children: yt.options.map((Yo, ji) => su(Yo, yt.index + ji))
          }) : su(yt, $o))
        }) : null]
      })
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (kR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the portion of the selected suggestion that the user hasn't typed,
   * known as the completion string, appears inline after the input cursor in the textbox.
   * The inline completion string is visually highlighted and has a selected state.
   * @default false
   */
  autoComplete: a.bool,
  /**
   * If `true`, the first option is automatically highlighted.
   * @default false
   */
  autoHighlight: a.bool,
  /**
   * If `true`, the selected option becomes the value of the input
   * when the Autocomplete loses focus unless the user chooses
   * a different option or changes the character string in the input.
   *
   * When using the `freeSolo` mode, the typed value will be the input value
   * if the Autocomplete loses focus without highlighting an option.
   * @default false
   */
  autoSelect: a.bool,
  /**
   * Control if the input should be blurred when an option is selected:
   *
   * - `false` the input is not blurred.
   * - `true` the input is always blurred.
   * - `touch` the input is blurred after a touch event.
   * - `mouse` the input is blurred after a mouse event.
   * @default false
   */
  blurOnSelect: a.oneOfType([a.oneOf(["mouse", "touch"]), a.bool]),
  /**
   * Props applied to the [`Chip`](https://mui.com/material-ui/api/chip/) element.
   * @deprecated Use `slotProps.chip` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ChipProps: a.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The icon to display in place of the default clear icon.
   * @default <ClearIcon fontSize="small" />
   */
  clearIcon: a.node,
  /**
   * If `true`, the input's text is cleared on blur if no value is selected.
   *
   * Set it to `true` if you want to help the user enter a new value.
   * Set it to `false` if you want to help the user resume their search.
   * @default !props.freeSolo
   */
  clearOnBlur: a.bool,
  /**
   * If `true`, clear all values when the user presses escape and the popup is closed.
   * @default false
   */
  clearOnEscape: a.bool,
  /**
   * Override the default text for the *clear* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Clear'
   */
  clearText: a.string,
  /**
   * Override the default text for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: a.string,
  /**
   * The props used for each slot inside.
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  componentsProps: a.shape({
    clearIndicator: a.object,
    paper: a.object,
    popper: a.object,
    popupIndicator: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   * @default props.multiple ? [] : null
   */
  defaultValue: rr(a.any, (e) => e.multiple && e.defaultValue !== void 0 && !Array.isArray(e.defaultValue) ? new Error(["MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.", `However, ${e.defaultValue} was provided.`].join(`
`)) : null),
  /**
   * If `true`, the input can't be cleared.
   * @default false
   */
  disableClearable: a.bool,
  /**
   * If `true`, the popup won't close when a value is selected.
   * @default false
   */
  disableCloseOnSelect: a.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: a.bool,
  /**
   * If `true`, the list box in the popup will not wrap focus.
   * @default false
   */
  disableListWrap: a.bool,
  /**
   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * A function that determines the filtered options to be rendered on search.
   *
   * @default createFilterOptions()
   * @param {Value[]} options The options to render.
   * @param {object} state The state of the component.
   * @returns {Value[]}
   */
  filterOptions: a.func,
  /**
   * If `true`, hide the selected options from the list box.
   * @default false
   */
  filterSelectedOptions: a.bool,
  /**
   * Force the visibility display of the popup icon.
   * @default 'auto'
   */
  forcePopupIcon: a.oneOfType([a.oneOf(["auto"]), a.bool]),
  /**
   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.
   * @default false
   */
  freeSolo: a.bool,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The label to display when the tags are truncated (`limitTags`).
   *
   * @param {number} more The number of truncated tags.
   * @returns {ReactNode}
   * @default (more) => `+${more}`
   */
  getLimitTagsText: a.func,
  /**
   * Used to determine the disabled state for a given option.
   *
   * @param {Value} option The option to test.
   * @returns {boolean}
   */
  getOptionDisabled: a.func,
  /**
   * Used to determine the key for a given option.
   * This can be useful when the labels of options are not unique (since labels are used as keys by default).
   *
   * @param {Value} option The option to get the key for.
   * @returns {string | number}
   */
  getOptionKey: a.func,
  /**
   * Used to determine the string value for a given option.
   * It's used to fill the input (and the list box options if `renderOption` is not provided).
   *
   * If used in free solo mode, it must accept both the type of the options and a string.
   *
   * @param {Value} option
   * @returns {string}
   * @default (option) => option.label ?? option
   */
  getOptionLabel: a.func,
  /**
   * If provided, the options will be grouped under the returned string.
   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.
   *
   * @param {Value} option The Autocomplete option.
   * @returns {string}
   */
  groupBy: a.func,
  /**
   * If `true`, the component handles the "Home" and "End" keys when the popup is open.
   * It should move focus to the first option and last option, respectively.
   * @default !props.freeSolo
   */
  handleHomeEndKeys: a.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide an id it will fall back to a randomly generated one.
   */
  id: a.string,
  /**
   * If `true`, the highlight can move to the input.
   * @default false
   */
  includeInputInList: a.bool,
  /**
   * The input value.
   */
  inputValue: a.string,
  /**
   * Used to determine if the option represents the given value.
   * Uses strict equality by default.
   * ⚠️ Both arguments need to be handled, an option can only match with one value.
   *
   * @param {Value} option The option to test.
   * @param {Value} value The value to test against.
   * @returns {boolean}
   */
  isOptionEqualToValue: a.func,
  /**
   * The maximum number of tags that will be visible when not focused.
   * Set `-1` to disable the limit.
   * @default -1
   */
  limitTags: Tf,
  /**
   * The component used to render the listbox.
   * @default 'ul'
   * @deprecated Use `slotProps.listbox.component` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ListboxComponent: a.elementType,
  /**
   * Props applied to the Listbox element.
   * @deprecated Use `slotProps.listbox` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ListboxProps: a.object,
  /**
   * If `true`, the component is in a loading state.
   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, for example `options` are empty).
   * @default false
   */
  loading: a.bool,
  /**
   * Text to display when in a loading state.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Loading…'
   */
  loadingText: a.node,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: a.bool,
  /**
   * Text to display when there are no options.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'No options'
   */
  noOptionsText: a.node,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value|Value[]} value The new value of the component.
   * @param {string} reason One of "createOption", "selectOption", "removeOption", "blur" or "clear".
   * @param {string} [details]
   */
  onChange: a.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} reason Can be: `"toggleInput"`, `"escape"`, `"selectOption"`, `"removeOption"`, `"blur"`.
   */
  onClose: a.func,
  /**
   * Callback fired when the highlight option changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value} option The highlighted option.
   * @param {string} reason Can be: `"keyboard"`, `"mouse"`, `"touch"`.
   */
  onHighlightChange: a.func,
  /**
   * Callback fired when the input value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} value The new value of the text input.
   * @param {string} reason Can be: `"input"` (user input), `"reset"` (programmatic change), `"clear"`, `"blur"`, `"selectOption"`, `"removeOption"`
   */
  onInputChange: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool,
  /**
   * If `true`, the popup will open on input focus.
   * @default false
   */
  openOnFocus: a.bool,
  /**
   * Override the default text for the *open popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Open'
   */
  openText: a.string,
  /**
   * A list of options that will be shown in the Autocomplete.
   */
  options: a.array.isRequired,
  /**
   * The component used to render the body of the popup.
   * @default Paper
   * @deprecated Use `slots.paper` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PaperComponent: a.elementType,
  /**
   * The component used to position the popup.
   * @default Popper
   * @deprecated Use `slots.popper` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PopperComponent: a.elementType,
  /**
   * The icon to display in place of the default popup icon.
   * @default <ArrowDropDownIcon />
   */
  popupIcon: a.node,
  /**
   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.
   * @default false
   */
  readOnly: a.bool,
  /**
   * Render the group.
   *
   * @param {AutocompleteRenderGroupParams} params The group to render.
   * @returns {ReactNode}
   */
  renderGroup: a.func,
  /**
   * Render the input.
   *
   * @param {object} params
   * @returns {ReactNode}
   */
  renderInput: a.func.isRequired,
  /**
   * Render the option, use `getOptionLabel` by default.
   *
   * @param {object} props The props to apply on the li element.
   * @param {Value} option The option to render.
   * @param {object} state The state of each option.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderOption: a.func,
  /**
   * Render the selected value.
   *
   * @param {Value[]} value The `value` provided to the component.
   * @param {function} getTagProps A tag props getter.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderTags: a.func,
  /**
   * If `true`, the input's text is selected on focus.
   * It helps the user clear the selected value.
   * @default !props.freeSolo
   */
  selectOnFocus: a.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["small", "medium"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    chip: a.oneOfType([a.func, a.object]),
    clearIndicator: a.oneOfType([a.func, a.object]),
    listbox: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    popper: a.oneOfType([a.func, a.object]),
    popupIndicator: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    listbox: a.elementType,
    paper: a.elementType,
    popper: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the autocomplete.
   *
   * The value must have reference equality with the option in order to be selected.
   * You can customize the equality behavior with the `isOptionEqualToValue` prop.
   */
  value: rr(a.any, (e) => e.multiple && e.value !== void 0 && !Array.isArray(e.value) ? new Error(["MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.", `However, ${e.value} was provided.`].join(`
`)) : null)
});
const q8 = (e) => {
  const {
    classes: t,
    disableUnderline: n
  } = e, r = st({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, k8, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...r
  };
}, K8 = Ce(qf, {
  shouldForwardProp: (e) => Un(e) || e === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...Wf(e, t), !n.disableUnderline && t.underline];
  }
})(Ye(({
  theme: e
}) => {
  let n = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e.vars && (n = `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`), {
    position: "relative",
    variants: [{
      props: ({
        ownerState: o
      }) => o.formControl,
      style: {
        "label + &": {
          marginTop: 16
        }
      }
    }, {
      props: ({
        ownerState: o
      }) => !o.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${ci.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${ci.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${ci.disabled}, .${ci.error}):before`]: {
          borderBottom: `2px solid ${(e.vars || e).palette.text.primary}`,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            borderBottom: `1px solid ${n}`
          }
        },
        [`&.${ci.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(Gt()).map(([o]) => ({
      props: {
        color: o,
        disableUnderline: !1
      },
      style: {
        "&::after": {
          borderBottom: `2px solid ${(e.vars || e).palette[o].main}`
        }
      }
    }))]
  };
})), G8 = Ce(Kf, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: Uf
})({}), yp = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiInput"
  }), {
    disableUnderline: r = !1,
    components: i = {},
    componentsProps: s,
    fullWidth: l = !1,
    inputComponent: c = "input",
    multiline: u = !1,
    slotProps: d,
    slots: f = {},
    type: p = "text",
    ...h
  } = o, g = q8(o), y = {
    root: {
      ownerState: {
        disableUnderline: r
      }
    }
  }, b = d ?? s ? zn(d ?? s, y) : y, T = f.root ?? i.Root ?? K8, v = f.input ?? i.Input ?? G8;
  return /* @__PURE__ */ O(Gf, {
    slots: {
      root: T,
      input: v
    },
    slotProps: b,
    fullWidth: l,
    inputComponent: c,
    multiline: u,
    ref: n,
    type: p,
    ...h,
    classes: g
  });
});
process.env.NODE_ENV !== "production" && (yp.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, the `input` will not have an underline.
   * @default false
   */
  disableUnderline: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: uo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
yp.muiName = "Input";
const Y8 = (e) => {
  const {
    classes: t,
    disableUnderline: n,
    startAdornment: o,
    endAdornment: r,
    size: i,
    hiddenLabel: s,
    multiline: l
  } = e, c = {
    root: ["root", !n && "underline", o && "adornedStart", r && "adornedEnd", i === "small" && `size${fe(i)}`, s && "hiddenLabel", l && "multiline"],
    input: ["input"]
  }, u = st(c, $8, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...u
  };
}, X8 = Ce(qf, {
  shouldForwardProp: (e) => Un(e) || e === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...Wf(e, t), !n.disableUnderline && t.underline];
  }
})(Ye(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = t ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", o = t ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", r = t ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", i = t ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return {
    position: "relative",
    backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : o,
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create("background-color", {
      duration: e.transitions.duration.shorter,
      easing: e.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.hoverBg : r,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : o
      }
    },
    [`&.${mo.focused}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : o
    },
    [`&.${mo.disabled}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.disabledBg : i
    },
    variants: [{
      props: ({
        ownerState: s
      }) => !s.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${mo.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${mo.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})` : n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${mo.disabled}, .${mo.error}):before`]: {
          borderBottom: `1px solid ${(e.vars || e).palette.text.primary}`
        },
        [`&.${mo.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(Gt()).map(([s]) => {
      var l;
      return {
        props: {
          disableUnderline: !1,
          color: s
        },
        style: {
          "&::after": {
            borderBottom: `2px solid ${(l = (e.vars || e).palette[s]) == null ? void 0 : l.main}`
          }
        }
      };
    }), {
      props: ({
        ownerState: s
      }) => s.startAdornment,
      style: {
        paddingLeft: 12
      }
    }, {
      props: ({
        ownerState: s
      }) => s.endAdornment,
      style: {
        paddingRight: 12
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline,
      style: {
        padding: "25px 12px 8px"
      }
    }, {
      props: ({
        ownerState: s,
        size: l
      }) => s.multiline && l === "small",
      style: {
        paddingTop: 21,
        paddingBottom: 4
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline && s.hiddenLabel,
      style: {
        paddingTop: 16,
        paddingBottom: 17
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline && s.hiddenLabel && s.size === "small",
      style: {
        paddingTop: 8,
        paddingBottom: 9
      }
    }]
  };
})), Z8 = Ce(Kf, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: Uf
})(Ye(({
  theme: e
}) => ({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12,
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      paddingTop: 21,
      paddingBottom: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel,
    style: {
      paddingTop: 16,
      paddingBottom: 17
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel && t.size === "small",
    style: {
      paddingTop: 8,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      paddingTop: 0,
      paddingBottom: 0,
      paddingLeft: 0,
      paddingRight: 0
    }
  }]
}))), bp = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiFilledInput"
  }), {
    disableUnderline: r = !1,
    components: i = {},
    componentsProps: s,
    fullWidth: l = !1,
    hiddenLabel: c,
    // declare here to prevent spreading to DOM
    inputComponent: u = "input",
    multiline: d = !1,
    slotProps: f,
    slots: p = {},
    type: h = "text",
    ...g
  } = o, m = {
    ...o,
    disableUnderline: r,
    fullWidth: l,
    inputComponent: u,
    multiline: d,
    type: h
  }, y = Y8(o), b = {
    root: {
      ownerState: m
    },
    input: {
      ownerState: m
    }
  }, T = f ?? s ? zn(b, f ?? s) : b, v = p.root ?? i.Root ?? X8, w = p.input ?? i.Input ?? Z8;
  return /* @__PURE__ */ O(Gf, {
    slots: {
      root: v,
      input: w
    },
    slotProps: T,
    fullWidth: l,
    inputComponent: u,
    multiline: d,
    ref: n,
    type: h,
    ...g,
    classes: y
  });
});
process.env.NODE_ENV !== "production" && (bp.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, the input will not have an underline.
   * @default false
   */
  disableUnderline: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: uo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
bp.muiName = "Input";
function Q8(e) {
  return ot("MuiFormLabel", e);
}
const Ll = at("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]), J8 = (e) => {
  const {
    classes: t,
    color: n,
    focused: o,
    disabled: r,
    error: i,
    filled: s,
    required: l
  } = e, c = {
    root: ["root", `color${fe(n)}`, r && "disabled", i && "error", s && "filled", o && "focused", l && "required"],
    asterisk: ["asterisk", i && "error"]
  };
  return st(c, Q8, t);
}, e7 = Ce("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color === "secondary" && t.colorSecondary, n.filled && t.filled];
  }
})(Ye(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.body1,
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  variants: [...Object.entries(e.palette).filter(Gt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${Ll.focused}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    props: {},
    style: {
      [`&.${Ll.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      },
      [`&.${Ll.error}`]: {
        color: (e.vars || e).palette.error.main
      }
    }
  }]
}))), t7 = Ce("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (e, t) => t.asterisk
})(Ye(({
  theme: e
}) => ({
  [`&.${Ll.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}))), $R = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiFormLabel"
  }), {
    children: r,
    className: i,
    color: s,
    component: l = "label",
    disabled: c,
    error: u,
    filled: d,
    focused: f,
    required: p,
    ...h
  } = o, g = Mi(), m = Fa({
    props: o,
    muiFormControl: g,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  }), y = {
    ...o,
    color: m.color || "primary",
    component: l,
    disabled: m.disabled,
    error: m.error,
    filled: m.filled,
    focused: m.focused,
    required: m.required
  }, b = J8(y);
  return /* @__PURE__ */ Se(e7, {
    as: l,
    ownerState: y,
    className: Ie(b.root, i),
    ref: n,
    ...h,
    children: [r, m.required && /* @__PURE__ */ Se(t7, {
      ownerState: y,
      "aria-hidden": !0,
      className: b.asterisk,
      children: [" ", "*"]
    })]
  });
});
process.env.NODE_ENV !== "production" && ($R.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: a.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: a.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: a.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function n7(e) {
  return ot("MuiInputLabel", e);
}
at("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]);
const o7 = (e) => {
  const {
    classes: t,
    formControl: n,
    size: o,
    shrink: r,
    disableAnimation: i,
    variant: s,
    required: l
  } = e, c = {
    root: ["root", n && "formControl", !i && "animated", r && "shrink", o && o !== "medium" && `size${fe(o)}`, s],
    asterisk: [l && "asterisk"]
  }, u = st(c, n7, t);
  return {
    ...t,
    // forward the focused, disabled, etc. classes to the FormLabel
    ...u
  };
}, r7 = Ce($R, {
  shouldForwardProp: (e) => Un(e) || e === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${Ll.asterisk}`]: t.asterisk
    }, t.root, n.formControl && t.formControl, n.size === "small" && t.sizeSmall, n.shrink && t.shrink, !n.disableAnimation && t.animated, n.focused && t.focused, t[n.variant]];
  }
})(Ye(({
  theme: e
}) => ({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%",
  variants: [{
    props: ({
      ownerState: t
    }) => t.formControl,
    style: {
      position: "absolute",
      left: 0,
      top: 0,
      // slight alteration to spec spacing to match visual spec result
      transform: "translate(0, 20px) scale(1)"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      // Compensation for the `Input.inputSizeSmall` style.
      transform: "translate(0, 17px) scale(1)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.shrink,
    style: {
      transform: "translate(0, -1.5px) scale(0.75)",
      transformOrigin: "top left",
      maxWidth: "133%"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableAnimation,
    style: {
      transition: e.transitions.create(["color", "transform", "max-width"], {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      // Chrome's autofill feature gives the input field a yellow background.
      // Since the input field is behind the label in the HTML tree,
      // the input field is drawn last and hides the label with an opaque background color.
      // zIndex: 1 will raise the label above opaque background-colors of input.
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(12px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "filled",
      size: "small"
    },
    style: {
      transform: "translate(12px, 13px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "filled" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      transform: "translate(12px, 7px) scale(0.75)",
      maxWidth: "calc(133% - 24px)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n,
      size: o
    }) => t === "filled" && n.shrink && o === "small",
    style: {
      transform: "translate(12px, 4px) scale(0.75)"
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      // see comment above on filled.zIndex
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(14px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "outlined",
      size: "small"
    },
    style: {
      transform: "translate(14px, 9px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "outlined" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      // Theoretically, we should have (8+5)*2/0.75 = 34px
      // but it feels a better when it bleeds a bit on the left, so 32px.
      maxWidth: "calc(133% - 32px)",
      transform: "translate(14px, -9px) scale(0.75)"
    }
  }]
}))), NR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    name: "MuiInputLabel",
    props: t
  }), {
    disableAnimation: r = !1,
    margin: i,
    shrink: s,
    variant: l,
    className: c,
    ...u
  } = o, d = Mi();
  let f = s;
  typeof f > "u" && d && (f = d.filled || d.focused || d.adornedStart);
  const p = Fa({
    props: o,
    muiFormControl: d,
    states: ["size", "variant", "required", "focused"]
  }), h = {
    ...o,
    disableAnimation: r,
    formControl: d,
    shrink: f,
    size: p.size,
    variant: p.variant,
    required: p.required,
    focused: p.focused
  }, g = o7(h);
  return /* @__PURE__ */ O(r7, {
    "data-shrink": f,
    ref: n,
    className: Ie(g.root, c),
    ...u,
    ownerState: h,
    classes: g
  });
});
process.env.NODE_ENV !== "production" && (NR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), a.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: a.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: a.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: a.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: a.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: a.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: a.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
function i7(e) {
  return ot("MuiFormControl", e);
}
at("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]);
const s7 = (e) => {
  const {
    classes: t,
    margin: n,
    fullWidth: o
  } = e, r = {
    root: ["root", n !== "none" && `margin${fe(n)}`, o && "fullWidth"]
  };
  return st(r, i7, t);
}, a7 = Ce("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`margin${fe(n.margin)}`], n.fullWidth && t.fullWidth];
  }
})({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top",
  // Fix alignment issue on Safari.
  variants: [{
    props: {
      margin: "normal"
    },
    style: {
      marginTop: 16,
      marginBottom: 8
    }
  }, {
    props: {
      margin: "dense"
    },
    style: {
      marginTop: 8,
      marginBottom: 4
    }
  }, {
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }]
}), MR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiFormControl"
  }), {
    children: r,
    className: i,
    color: s = "primary",
    component: l = "div",
    disabled: c = !1,
    error: u = !1,
    focused: d,
    fullWidth: f = !1,
    hiddenLabel: p = !1,
    margin: h = "none",
    required: g = !1,
    size: m = "medium",
    variant: y = "outlined",
    ...b
  } = o, T = {
    ...o,
    color: s,
    component: l,
    disabled: c,
    error: u,
    fullWidth: f,
    hiddenLabel: p,
    margin: h,
    required: g,
    size: m,
    variant: y
  }, v = s7(T), [w, S] = $.useState(() => {
    let N = !1;
    return r && $.Children.forEach(r, (L) => {
      if (!Up(L, ["Input", "Select"]))
        return;
      const V = Up(L, ["Select"]) ? L.props.input : L;
      V && w3(V.props) && (N = !0);
    }), N;
  }), [C, E] = $.useState(() => {
    let N = !1;
    return r && $.Children.forEach(r, (L) => {
      Up(L, ["Input", "Select"]) && (_d(L.props, !0) || _d(L.props.inputProps, !0)) && (N = !0);
    }), N;
  }), [P, M] = $.useState(!1);
  c && P && M(!1);
  const x = d !== void 0 && !c ? d : P;
  let I;
  const k = $.useRef(!1);
  process.env.NODE_ENV !== "production" && (I = () => (k.current && console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join(`
`)), k.current = !0, () => {
    k.current = !1;
  }));
  const _ = $.useCallback(() => {
    E(!0);
  }, []), R = $.useCallback(() => {
    E(!1);
  }, []), A = $.useMemo(() => ({
    adornedStart: w,
    setAdornedStart: S,
    color: s,
    disabled: c,
    error: u,
    filled: C,
    focused: x,
    fullWidth: f,
    hiddenLabel: p,
    size: m,
    onBlur: () => {
      M(!1);
    },
    onFocus: () => {
      M(!0);
    },
    onEmpty: R,
    onFilled: _,
    registerEffect: I,
    required: g,
    variant: y
  }), [w, s, c, u, C, x, f, p, I, R, _, g, m, y]);
  return /* @__PURE__ */ O(jf.Provider, {
    value: A,
    children: /* @__PURE__ */ O(a7, {
      as: l,
      ownerState: T,
      className: Ie(v.root, i),
      ref: n,
      ...b,
      children: r
    })
  });
});
process.env.NODE_ENV !== "production" && (MR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: a.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: a.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: a.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: a.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: a.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
function l7(e) {
  return ot("MuiFormHelperText", e);
}
const xS = at("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]);
var wS;
const c7 = (e) => {
  const {
    classes: t,
    contained: n,
    size: o,
    disabled: r,
    error: i,
    filled: s,
    focused: l,
    required: c
  } = e, u = {
    root: ["root", r && "disabled", i && "error", o && `size${fe(o)}`, n && "contained", l && "focused", s && "filled", c && "required"]
  };
  return st(u, l7, t);
}, u7 = Ce("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size && t[`size${fe(n.size)}`], n.contained && t.contained, n.filled && t.filled];
  }
})(Ye(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.caption,
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${xS.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${xS.error}`]: {
    color: (e.vars || e).palette.error.main
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginTop: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.contained,
    style: {
      marginLeft: 14,
      marginRight: 14
    }
  }]
}))), AR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiFormHelperText"
  }), {
    children: r,
    className: i,
    component: s = "p",
    disabled: l,
    error: c,
    filled: u,
    focused: d,
    margin: f,
    required: p,
    variant: h,
    ...g
  } = o, m = Mi(), y = Fa({
    props: o,
    muiFormControl: m,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  }), b = {
    ...o,
    component: s,
    contained: y.variant === "filled" || y.variant === "outlined",
    variant: y.variant,
    size: y.size,
    disabled: y.disabled,
    error: y.error,
    filled: y.filled,
    focused: y.focused,
    required: y.required
  };
  delete b.ownerState;
  const T = c7(b);
  return /* @__PURE__ */ O(u7, {
    as: s,
    className: Ie(T.root, i),
    ref: n,
    ...g,
    ownerState: b,
    children: r === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      wS || (wS = /* @__PURE__ */ O("span", {
        className: "notranslate",
        "aria-hidden": !0,
        children: "​"
      }))
    ) : r
  });
});
process.env.NODE_ENV !== "production" && (AR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: a.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: a.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: a.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: a.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: a.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   */
  variant: a.oneOfType([a.oneOf(["filled", "outlined", "standard"]), a.string])
});
const _R = /* @__PURE__ */ $.createContext({});
process.env.NODE_ENV !== "production" && (_R.displayName = "ListContext");
function d7(e) {
  return ot("MuiList", e);
}
at("MuiList", ["root", "padding", "dense", "subheader"]);
const f7 = (e) => {
  const {
    classes: t,
    disablePadding: n,
    dense: o,
    subheader: r
  } = e;
  return st({
    root: ["root", !n && "padding", o && "dense", r && "subheader"]
  }, d7, t);
}, p7 = Ce("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.disablePadding && t.padding, n.dense && t.dense, n.subheader && t.subheader];
  }
})({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative",
  variants: [{
    props: ({
      ownerState: e
    }) => !e.disablePadding,
    style: {
      paddingTop: 8,
      paddingBottom: 8
    }
  }, {
    props: ({
      ownerState: e
    }) => e.subheader,
    style: {
      paddingTop: 0
    }
  }]
}), DR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiList"
  }), {
    children: r,
    className: i,
    component: s = "ul",
    dense: l = !1,
    disablePadding: c = !1,
    subheader: u,
    ...d
  } = o, f = $.useMemo(() => ({
    dense: l
  }), [l]), p = {
    ...o,
    component: s,
    dense: l,
    disablePadding: c
  }, h = f7(p);
  return /* @__PURE__ */ O(_R.Provider, {
    value: f,
    children: /* @__PURE__ */ Se(p7, {
      as: s,
      className: Ie(h.root, i),
      ref: n,
      ownerState: p,
      ...d,
      children: [u, r]
    })
  });
});
process.env.NODE_ENV !== "production" && (DR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: a.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: a.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function Rh(e, t, n) {
  return e === t ? e.firstChild : t && t.nextElementSibling ? t.nextElementSibling : n ? null : e.firstChild;
}
function SS(e, t, n) {
  return e === t ? n ? e.firstChild : e.lastChild : t && t.previousElementSibling ? t.previousElementSibling : n ? null : e.lastChild;
}
function LR(e, t) {
  if (t === void 0)
    return !0;
  let n = e.innerText;
  return n === void 0 && (n = e.textContent), n = n.trim().toLowerCase(), n.length === 0 ? !1 : t.repeating ? n[0] === t.keys[0] : n.startsWith(t.keys.join(""));
}
function tl(e, t, n, o, r, i) {
  let s = !1, l = r(e, t, t ? n : !1);
  for (; l; ) {
    if (l === e.firstChild) {
      if (s)
        return !1;
      s = !0;
    }
    const c = o ? !1 : l.disabled || l.getAttribute("aria-disabled") === "true";
    if (!l.hasAttribute("tabindex") || !LR(l, i) || c)
      l = r(e, l, n);
    else
      return l.focus(), !0;
  }
  return !1;
}
const BR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: o,
    autoFocus: r = !1,
    autoFocusItem: i = !1,
    children: s,
    className: l,
    disabledItemsFocusable: c = !1,
    disableListWrap: u = !1,
    onKeyDown: d,
    variant: f = "selectedMenu",
    ...p
  } = t, h = $.useRef(null), g = $.useRef({
    keys: [],
    repeating: !0,
    previousKeyMatched: !0,
    lastTime: null
  });
  or(() => {
    r && h.current.focus();
  }, [r]), $.useImperativeHandle(o, () => ({
    adjustStyleForScrollbar: (v, {
      direction: w
    }) => {
      const S = !h.current.style.width;
      if (v.clientHeight < h.current.clientHeight && S) {
        const C = `${qT(ir(v))}px`;
        h.current.style[w === "rtl" ? "paddingLeft" : "paddingRight"] = C, h.current.style.width = `calc(100% + ${C})`;
      }
      return h.current;
    }
  }), []);
  const m = (v) => {
    const w = h.current, S = v.key;
    if (v.ctrlKey || v.metaKey || v.altKey) {
      d && d(v);
      return;
    }
    const E = Hn(w).activeElement;
    if (S === "ArrowDown")
      v.preventDefault(), tl(w, E, u, c, Rh);
    else if (S === "ArrowUp")
      v.preventDefault(), tl(w, E, u, c, SS);
    else if (S === "Home")
      v.preventDefault(), tl(w, null, u, c, Rh);
    else if (S === "End")
      v.preventDefault(), tl(w, null, u, c, SS);
    else if (S.length === 1) {
      const P = g.current, M = S.toLowerCase(), x = performance.now();
      P.keys.length > 0 && (x - P.lastTime > 500 ? (P.keys = [], P.repeating = !0, P.previousKeyMatched = !0) : P.repeating && M !== P.keys[0] && (P.repeating = !1)), P.lastTime = x, P.keys.push(M);
      const I = E && !P.repeating && LR(E, P);
      P.previousKeyMatched && (I || tl(w, E, !1, c, Rh, P)) ? v.preventDefault() : P.previousKeyMatched = !1;
    }
    d && d(v);
  }, y = yn(h, n);
  let b = -1;
  $.Children.forEach(s, (v, w) => {
    if (!/* @__PURE__ */ $.isValidElement(v)) {
      b === w && (b += 1, b >= s.length && (b = -1));
      return;
    }
    process.env.NODE_ENV !== "production" && lo.isFragment(v) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), v.props.disabled || (f === "selectedMenu" && v.props.selected || b === -1) && (b = w), b === w && (v.props.disabled || v.props.muiSkipListHighlight || v.type.muiSkipListHighlight) && (b += 1, b >= s.length && (b = -1));
  });
  const T = $.Children.map(s, (v, w) => {
    if (w === b) {
      const S = {};
      return i && (S.autoFocus = !0), v.props.tabIndex === void 0 && f === "selectedMenu" && (S.tabIndex = 0), /* @__PURE__ */ $.cloneElement(v, S);
    }
    return v;
  });
  return /* @__PURE__ */ O(DR, {
    role: "menu",
    ref: y,
    className: l,
    onKeyDown: m,
    tabIndex: r ? 0 : -1,
    ...p,
    children: T
  });
});
process.env.NODE_ENV !== "production" && (BR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: a.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: a.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: a.node,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: a.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: a.bool,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: a.oneOf(["menu", "selectedMenu"])
});
function h7(e) {
  return ot("MuiMenu", e);
}
at("MuiMenu", ["root", "paper", "list"]);
const m7 = {
  vertical: "top",
  horizontal: "right"
}, g7 = {
  vertical: "top",
  horizontal: "left"
}, y7 = (e) => {
  const {
    classes: t
  } = e;
  return st({
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  }, h7, t);
}, b7 = Ce(Ny, {
  shouldForwardProp: (e) => Un(e) || e === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), v7 = Ce(EE, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}), x7 = Ce(BR, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (e, t) => t.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), VR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiMenu"
  }), {
    autoFocus: r = !0,
    children: i,
    className: s,
    disableAutoFocusItem: l = !1,
    MenuListProps: c = {},
    onClose: u,
    open: d,
    PaperProps: f = {},
    PopoverClasses: p,
    transitionDuration: h = "auto",
    TransitionProps: {
      onEntering: g,
      ...m
    } = {},
    variant: y = "selectedMenu",
    slots: b = {},
    slotProps: T = {},
    ...v
  } = o, w = Ic(), S = {
    ...o,
    autoFocus: r,
    disableAutoFocusItem: l,
    MenuListProps: c,
    onEntering: g,
    PaperProps: f,
    transitionDuration: h,
    TransitionProps: m,
    variant: y
  }, C = y7(S), E = r && !l && d, P = $.useRef(null), M = (D, B) => {
    P.current && P.current.adjustStyleForScrollbar(D, {
      direction: w ? "rtl" : "ltr"
    }), g && g(D, B);
  }, x = (D) => {
    D.key === "Tab" && (D.preventDefault(), u && u(D, "tabKeyDown"));
  };
  let I = -1;
  $.Children.map(i, (D, B) => {
    /* @__PURE__ */ $.isValidElement(D) && (process.env.NODE_ENV !== "production" && lo.isFragment(D) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), D.props.disabled || (y === "selectedMenu" && D.props.selected || I === -1) && (I = B));
  });
  const k = {
    slots: b,
    slotProps: {
      list: c,
      transition: m,
      paper: f,
      ...T
    }
  }, _ = yd({
    elementType: b.root,
    externalSlotProps: T.root,
    ownerState: S,
    className: [C.root, s]
  }), [R, A] = it("paper", {
    className: C.paper,
    elementType: v7,
    externalForwardedProps: k,
    shouldForwardComponentProp: !0,
    ownerState: S
  }), [N, L] = it("list", {
    className: Ie(C.list, c.className),
    elementType: x7,
    shouldForwardComponentProp: !0,
    externalForwardedProps: k,
    getSlotProps: (D) => ({
      ...D,
      onKeyDown: (B) => {
        var F;
        x(B), (F = D.onKeyDown) == null || F.call(D, B);
      }
    }),
    ownerState: S
  }), V = typeof k.slotProps.transition == "function" ? k.slotProps.transition(S) : k.slotProps.transition;
  return /* @__PURE__ */ O(b7, {
    onClose: u,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: w ? "right" : "left"
    },
    transformOrigin: w ? m7 : g7,
    slots: {
      root: b.root,
      paper: R,
      backdrop: b.backdrop,
      ...b.transition && {
        // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover
        transition: b.transition
      }
    },
    slotProps: {
      root: _,
      paper: A,
      backdrop: typeof T.backdrop == "function" ? T.backdrop(S) : T.backdrop,
      transition: {
        ...V,
        onEntering: (...D) => {
          var B;
          M(...D), (B = V == null ? void 0 : V.onEntering) == null || B.call(V, ...D);
        }
      }
    },
    open: d,
    ref: n,
    transitionDuration: h,
    ownerState: S,
    ...v,
    classes: p,
    children: /* @__PURE__ */ O(N, {
      actions: P,
      autoFocus: r && (I === -1 || l),
      autoFocusItem: E,
      variant: y,
      ...L,
      children: i
    })
  });
});
process.env.NODE_ENV !== "production" && (VR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: a.oneOfType([Rr, a.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: a.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: a.bool,
  /**
   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.
   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  MenuListProps: a.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: a.object,
  /**
   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.
   */
  PopoverClasses: a.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    list: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    list: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: a.oneOf(["menu", "selectedMenu"])
});
function w7(e) {
  return ot("MuiNativeSelect", e);
}
const Nb = at("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), S7 = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: o,
    multiple: r,
    open: i,
    error: s
  } = e, l = {
    select: ["select", n, o && "disabled", r && "multiple", s && "error"],
    icon: ["icon", `icon${fe(n)}`, i && "iconOpen", o && "disabled"]
  };
  return st(l, w7, t);
}, FR = Ce("select")(({
  theme: e
}) => ({
  // Reset
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  // Reset
  borderRadius: 0,
  cursor: "pointer",
  "&:focus": {
    // Reset Chrome style
    borderRadius: 0
  },
  [`&.${Nb.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (e.vars || e).palette.background.paper
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.variant !== "filled" && t.variant !== "outlined",
    style: {
      // Bump specificity to allow extending custom inputs
      "&&&": {
        paddingRight: 24,
        minWidth: 16
        // So it doesn't collapse.
      }
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      "&&&": {
        paddingRight: 32
      }
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius,
      "&:focus": {
        borderRadius: (e.vars || e).shape.borderRadius
        // Reset the reset for Chrome style
      },
      "&&&": {
        paddingRight: 32
      }
    }
  }]
})), T7 = Ce(FR, {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: Un,
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.select, t[n.variant], n.error && t.error, {
      [`&.${Nb.multiple}`]: t.multiple
    }];
  }
})({}), jR = Ce("svg")(({
  theme: e
}) => ({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  // Center vertically, height is 1em
  top: "calc(50% - .5em)",
  // Don't block pointer events on the select under the icon.
  pointerEvents: "none",
  color: (e.vars || e).palette.action.active,
  [`&.${Nb.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.open,
    style: {
      transform: "rotate(180deg)"
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      right: 7
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      right: 7
    }
  }]
})), C7 = Ce(jR, {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${fe(n.variant)}`], n.open && t.iconOpen];
  }
})({}), zR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const {
    className: o,
    disabled: r,
    error: i,
    IconComponent: s,
    inputRef: l,
    variant: c = "standard",
    ...u
  } = t, d = {
    ...t,
    disabled: r,
    variant: c,
    error: i
  }, f = S7(d);
  return /* @__PURE__ */ Se($.Fragment, {
    children: [/* @__PURE__ */ O(T7, {
      ownerState: d,
      className: Ie(f.select, o),
      disabled: r,
      ref: l || n,
      ...u
    }), t.multiple ? null : /* @__PURE__ */ O(C7, {
      as: s,
      ownerState: d,
      className: f.icon
    })]
  });
});
process.env.NODE_ENV !== "production" && (zR.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The CSS class name of the select element.
   */
  className: a.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: a.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: a.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: uo,
  /**
   * @ignore
   */
  multiple: a.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: a.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The input value.
   */
  value: a.any,
  /**
   * The variant to use.
   */
  variant: a.oneOf(["standard", "outlined", "filled"])
});
function HR(e) {
  return ot("MuiSelect", e);
}
const nl = at("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]);
var TS;
const E7 = Ce(FR, {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [
      // Win specificity over the input base
      {
        [`&.${nl.select}`]: t.select
      },
      {
        [`&.${nl.select}`]: t[n.variant]
      },
      {
        [`&.${nl.error}`]: t.error
      },
      {
        [`&.${nl.multiple}`]: t.multiple
      }
    ];
  }
})({
  // Win specificity over the input base
  [`&.${nl.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
}), O7 = Ce(jR, {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${fe(n.variant)}`], n.open && t.iconOpen];
  }
})({}), P7 = Ce("input", {
  shouldForwardProp: (e) => dC(e) && e !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (e, t) => t.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function CS(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
function R7(e) {
  return e == null || typeof e == "string" && !e.trim();
}
const I7 = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: o,
    multiple: r,
    open: i,
    error: s
  } = e, l = {
    select: ["select", n, o && "disabled", r && "multiple", s && "error"],
    icon: ["icon", `icon${fe(n)}`, i && "iconOpen", o && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return st(l, HR, t);
}, WR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  var Re;
  const {
    "aria-describedby": o,
    "aria-label": r,
    autoFocus: i,
    autoWidth: s,
    children: l,
    className: c,
    defaultOpen: u,
    defaultValue: d,
    disabled: f,
    displayEmpty: p,
    error: h = !1,
    IconComponent: g,
    inputRef: m,
    labelId: y,
    MenuProps: b = {},
    multiple: T,
    name: v,
    onBlur: w,
    onChange: S,
    onClose: C,
    onFocus: E,
    onOpen: P,
    open: M,
    readOnly: x,
    renderValue: I,
    required: k,
    SelectDisplayProps: _ = {},
    tabIndex: R,
    // catching `type` from Input which makes no sense for SelectInput
    type: A,
    value: N,
    variant: L = "standard",
    ...V
  } = t, [D, B] = ns({
    controlled: N,
    default: d,
    name: "Select"
  }), [F, U] = ns({
    controlled: M,
    default: u,
    name: "Select"
  }), q = $.useRef(null), G = $.useRef(null), [K, te] = $.useState(null), {
    current: ne
  } = $.useRef(M != null), [W, ee] = $.useState(), Y = yn(n, m), re = $.useCallback((oe) => {
    G.current = oe, oe && te(oe);
  }, []), z = K == null ? void 0 : K.parentNode;
  $.useImperativeHandle(Y, () => ({
    focus: () => {
      G.current.focus();
    },
    node: q.current,
    value: D
  }), [D]), $.useEffect(() => {
    u && F && K && !ne && (ee(s ? null : z.clientWidth), G.current.focus());
  }, [K, s]), $.useEffect(() => {
    i && G.current.focus();
  }, [i]), $.useEffect(() => {
    if (!y)
      return;
    const oe = Hn(G.current).getElementById(y);
    if (oe) {
      const be = () => {
        getSelection().isCollapsed && G.current.focus();
      };
      return oe.addEventListener("click", be), () => {
        oe.removeEventListener("click", be);
      };
    }
  }, [y]);
  const de = (oe, be) => {
    oe ? P && P(be) : C && C(be), ne || (ee(s ? null : z.clientWidth), U(oe));
  }, ue = (oe) => {
    oe.button === 0 && (oe.preventDefault(), G.current.focus(), de(!0, oe));
  }, xe = (oe) => {
    de(!1, oe);
  }, _e = $.Children.toArray(l), we = (oe) => {
    const be = _e.find((Ne) => Ne.props.value === oe.target.value);
    be !== void 0 && (B(be.props.value), S && S(oe, be));
  }, De = (oe) => (be) => {
    let Ne;
    if (be.currentTarget.hasAttribute("tabindex")) {
      if (T) {
        Ne = Array.isArray(D) ? D.slice() : [];
        const We = D.indexOf(oe.props.value);
        We === -1 ? Ne.push(oe.props.value) : Ne.splice(We, 1);
      } else
        Ne = oe.props.value;
      if (oe.props.onClick && oe.props.onClick(be), D !== Ne && (B(Ne), S)) {
        const We = be.nativeEvent || be, Ke = new We.constructor(We.type, We);
        Object.defineProperty(Ke, "target", {
          writable: !0,
          value: {
            value: Ne,
            name: v
          }
        }), S(Ke, oe);
      }
      T || de(!1, be);
    }
  }, Ee = (oe) => {
    x || [
      " ",
      "ArrowUp",
      "ArrowDown",
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
      "Enter"
    ].includes(oe.key) && (oe.preventDefault(), de(!0, oe));
  }, Ve = K !== null && F, Me = (oe) => {
    !Ve && w && (Object.defineProperty(oe, "target", {
      writable: !0,
      value: {
        value: D,
        name: v
      }
    }), w(oe));
  };
  delete V["aria-invalid"];
  let j, J;
  const ie = [];
  let Q = !1, H = !1;
  (_d({
    value: D
  }) || p) && (I ? j = I(D) : Q = !0);
  const X = _e.map((oe) => {
    if (!/* @__PURE__ */ $.isValidElement(oe))
      return null;
    process.env.NODE_ENV !== "production" && lo.isFragment(oe) && console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    let be;
    if (T) {
      if (!Array.isArray(D))
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `value` prop must be an array when using the `Select` component with `multiple`." : Pr(2));
      be = D.some((Ne) => CS(Ne, oe.props.value)), be && Q && ie.push(oe.props.children);
    } else
      be = CS(D, oe.props.value), be && Q && (J = oe.props.children);
    return be && (H = !0), /* @__PURE__ */ $.cloneElement(oe, {
      "aria-selected": be ? "true" : "false",
      onClick: De(oe),
      onKeyUp: (Ne) => {
        Ne.key === " " && Ne.preventDefault(), oe.props.onKeyUp && oe.props.onKeyUp(Ne);
      },
      role: "option",
      selected: be,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": oe.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  process.env.NODE_ENV !== "production" && $.useEffect(() => {
    if (!H && !T && D !== "") {
      const oe = _e.map((be) => be.props.value);
      console.warn([`MUI: You have provided an out-of-range value \`${D}\` for the select ${v ? `(name="${v}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${oe.filter((be) => be != null).map((be) => `\`${be}\``).join(", ") || '""'}.`].join(`
`));
    }
  }, [H, _e, T, v, D]), Q && (T ? ie.length === 0 ? j = null : j = ie.reduce((oe, be, Ne) => (oe.push(be), Ne < ie.length - 1 && oe.push(", "), oe), []) : j = J);
  let se = W;
  !s && ne && K && (se = z.clientWidth);
  let ye;
  typeof R < "u" ? ye = R : ye = f ? null : 0;
  const he = _.id || (v ? `mui-component-select-${v}` : void 0), le = {
    ...t,
    variant: L,
    value: D,
    open: Ve,
    error: h
  }, ae = I7(le), ce = {
    ...b.PaperProps,
    ...(Re = b.slotProps) == null ? void 0 : Re.paper
  }, Te = hs();
  return /* @__PURE__ */ Se($.Fragment, {
    children: [/* @__PURE__ */ O(E7, {
      as: "div",
      ref: re,
      tabIndex: ye,
      role: "combobox",
      "aria-controls": Ve ? Te : void 0,
      "aria-disabled": f ? "true" : void 0,
      "aria-expanded": Ve ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": r,
      "aria-labelledby": [y, he].filter(Boolean).join(" ") || void 0,
      "aria-describedby": o,
      "aria-required": k ? "true" : void 0,
      "aria-invalid": h ? "true" : void 0,
      onKeyDown: Ee,
      onMouseDown: f || x ? null : ue,
      onBlur: Me,
      onFocus: E,
      ..._,
      ownerState: le,
      className: Ie(_.className, ae.select, c),
      id: he,
      children: R7(j) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        TS || (TS = /* @__PURE__ */ O("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      ) : j
    }), /* @__PURE__ */ O(P7, {
      "aria-invalid": h,
      value: Array.isArray(D) ? D.join(",") : D,
      name: v,
      ref: q,
      "aria-hidden": !0,
      onChange: we,
      tabIndex: -1,
      disabled: f,
      className: ae.nativeInput,
      autoFocus: i,
      required: k,
      ...V,
      ownerState: le
    }), /* @__PURE__ */ O(O7, {
      as: g,
      className: ae.icon,
      ownerState: le
    }), /* @__PURE__ */ O(VR, {
      id: `menu-${v || ""}`,
      anchorEl: z,
      open: Ve,
      onClose: xe,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      },
      ...b,
      slotProps: {
        ...b.slotProps,
        list: {
          "aria-labelledby": y,
          role: "listbox",
          "aria-multiselectable": T ? "true" : void 0,
          disableListWrap: !0,
          id: Te,
          ...b.MenuListProps
        },
        paper: {
          ...ce,
          style: {
            minWidth: se,
            ...ce != null ? ce.style : null
          }
        }
      },
      children: X
    })]
  });
});
process.env.NODE_ENV !== "production" && (WR.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": a.string,
  /**
   * @ignore
   */
  "aria-label": a.string,
  /**
   * @ignore
   */
  autoFocus: a.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: a.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The CSS class name of the select element.
   */
  className: a.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: a.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: a.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: a.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: a.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: uo,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: a.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: a.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: a.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: a.string,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: a.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool,
  /**
   * @ignore
   */
  readOnly: a.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: a.func,
  /**
   * If `true`, the component is required.
   */
  required: a.bool,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: a.object,
  /**
   * @ignore
   */
  tabIndex: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  type: a.any,
  /**
   * The input value.
   */
  value: a.any,
  /**
   * The variant to use.
   */
  variant: a.oneOf(["standard", "outlined", "filled"])
});
const k7 = (e) => {
  const {
    classes: t
  } = e, o = st({
    root: ["root"]
  }, HR, t);
  return {
    ...t,
    ...o
  };
}, Mb = {
  name: "MuiSelect",
  overridesResolver: (e, t) => t.root,
  shouldForwardProp: (e) => Un(e) && e !== "variant",
  slot: "Root"
}, $7 = Ce(yp, Mb)(""), N7 = Ce(Hc, Mb)(""), M7 = Ce(bp, Mb)(""), Ab = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    name: "MuiSelect",
    props: t
  }), {
    autoWidth: r = !1,
    children: i,
    classes: s = {},
    className: l,
    defaultOpen: c = !1,
    displayEmpty: u = !1,
    IconComponent: d = IR,
    id: f,
    input: p,
    inputProps: h,
    label: g,
    labelId: m,
    MenuProps: y,
    multiple: b = !1,
    native: T = !1,
    onClose: v,
    onOpen: w,
    open: S,
    renderValue: C,
    SelectDisplayProps: E,
    variant: P = "outlined",
    ...M
  } = o, x = T ? zR : WR, I = Mi(), k = Fa({
    props: o,
    muiFormControl: I,
    states: ["variant", "error"]
  }), _ = k.variant || P, R = {
    ...o,
    variant: _,
    classes: s
  }, A = k7(R), {
    root: N,
    ...L
  } = A, V = p || {
    standard: /* @__PURE__ */ O($7, {
      ownerState: R
    }),
    outlined: /* @__PURE__ */ O(N7, {
      label: g,
      ownerState: R
    }),
    filled: /* @__PURE__ */ O(M7, {
      ownerState: R
    })
  }[_], D = yn(n, Oi(V));
  return /* @__PURE__ */ O($.Fragment, {
    children: /* @__PURE__ */ $.cloneElement(V, {
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: x,
      inputProps: {
        children: i,
        error: k.error,
        IconComponent: d,
        variant: _,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: b,
        ...T ? {
          id: f
        } : {
          autoWidth: r,
          defaultOpen: c,
          displayEmpty: u,
          labelId: m,
          MenuProps: y,
          onClose: v,
          onOpen: w,
          open: S,
          renderValue: C,
          SelectDisplayProps: {
            id: f,
            ...E
          }
        },
        ...h,
        classes: h ? zn(L, h.classes) : L,
        ...p ? p.props.inputProps : {}
      },
      ...(b && T || u) && _ === "outlined" ? {
        notched: !0
      } : {},
      ref: D,
      className: Ie(V.props.className, l, A.root),
      // If a custom input is provided via 'input' prop, do not allow 'variant' to be propagated to it's root element. See https://github.com/mui/material-ui/issues/33894.
      ...!p && {
        variant: _
      },
      ...M
    })
  });
});
process.env.NODE_ENV !== "production" && (Ab.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: a.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: a.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: a.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: a.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: a.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: a.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: a.object,
  /**
   * See [OutlinedInput#label](https://mui.com/material-ui/api/outlined-input/#props)
   */
  label: a.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: a.string,
  /**
   * Props applied to the [`Menu`](https://mui.com/material-ui/api/menu/) element.
   */
  MenuProps: a.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: a.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: a.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: a.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: a.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: a.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: a.oneOfType([a.oneOf([""]), a.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
Ab.muiName = "Select";
function A7(e) {
  return ot("MuiTextField", e);
}
at("MuiTextField", ["root"]);
const _7 = {
  standard: yp,
  filled: bp,
  outlined: Hc
}, D7 = (e) => {
  const {
    classes: t
  } = e;
  return st({
    root: ["root"]
  }, A7, t);
}, L7 = Ce(MR, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), UR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiTextField"
  }), {
    autoComplete: r,
    autoFocus: i = !1,
    children: s,
    className: l,
    color: c = "primary",
    defaultValue: u,
    disabled: d = !1,
    error: f = !1,
    FormHelperTextProps: p,
    fullWidth: h = !1,
    helperText: g,
    id: m,
    InputLabelProps: y,
    inputProps: b,
    InputProps: T,
    inputRef: v,
    label: w,
    maxRows: S,
    minRows: C,
    multiline: E = !1,
    name: P,
    onBlur: M,
    onChange: x,
    onFocus: I,
    placeholder: k,
    required: _ = !1,
    rows: R,
    select: A = !1,
    SelectProps: N,
    slots: L = {},
    slotProps: V = {},
    type: D,
    value: B,
    variant: F = "outlined",
    ...U
  } = o, q = {
    ...o,
    autoFocus: i,
    color: c,
    disabled: d,
    error: f,
    fullWidth: h,
    multiline: E,
    required: _,
    select: A,
    variant: F
  }, G = D7(q);
  process.env.NODE_ENV !== "production" && A && !s && console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
  const K = hs(m), te = g && K ? `${K}-helper-text` : void 0, ne = w && K ? `${K}-label` : void 0, W = _7[F], ee = {
    slots: L,
    slotProps: {
      input: T,
      inputLabel: y,
      htmlInput: b,
      formHelperText: p,
      select: N,
      ...V
    }
  }, Y = {}, re = ee.slotProps.inputLabel;
  F === "outlined" && (re && typeof re.shrink < "u" && (Y.notched = re.shrink), Y.label = w), A && ((!N || !N.native) && (Y.id = void 0), Y["aria-describedby"] = void 0);
  const [z, de] = it("root", {
    elementType: L7,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...ee,
      ...U
    },
    ownerState: q,
    className: Ie(G.root, l),
    ref: n,
    additionalProps: {
      disabled: d,
      error: f,
      fullWidth: h,
      required: _,
      color: c,
      variant: F
    }
  }), [ue, xe] = it("input", {
    elementType: W,
    externalForwardedProps: ee,
    additionalProps: Y,
    ownerState: q
  }), [_e, we] = it("inputLabel", {
    elementType: NR,
    externalForwardedProps: ee,
    ownerState: q
  }), [De, Ee] = it("htmlInput", {
    elementType: "input",
    externalForwardedProps: ee,
    ownerState: q
  }), [Ve, Me] = it("formHelperText", {
    elementType: AR,
    externalForwardedProps: ee,
    ownerState: q
  }), [j, J] = it("select", {
    elementType: Ab,
    externalForwardedProps: ee,
    ownerState: q
  }), ie = /* @__PURE__ */ O(ue, {
    "aria-describedby": te,
    autoComplete: r,
    autoFocus: i,
    defaultValue: u,
    fullWidth: h,
    multiline: E,
    name: P,
    rows: R,
    maxRows: S,
    minRows: C,
    type: D,
    value: B,
    id: K,
    inputRef: v,
    onBlur: M,
    onChange: x,
    onFocus: I,
    placeholder: k,
    inputProps: Ee,
    slots: {
      input: L.htmlInput ? De : void 0
    },
    ...xe
  });
  return /* @__PURE__ */ Se(z, {
    ...de,
    children: [w != null && w !== "" && /* @__PURE__ */ O(_e, {
      htmlFor: K,
      id: ne,
      ...we,
      children: w
    }), A ? /* @__PURE__ */ O(j, {
      "aria-describedby": te,
      id: K,
      labelId: ne,
      value: B,
      input: ie,
      ...J,
      children: s
    }) : ie, g && /* @__PURE__ */ O(Ve, {
      id: te,
      ...Me,
      children: g
    })]
  });
});
process.env.NODE_ENV !== "production" && (UR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: a.bool,
  /**
   * @ignore
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: a.bool,
  /**
   * Props applied to the [`FormHelperText`](https://mui.com/material-ui/api/form-helper-text/) element.
   * @deprecated Use `slotProps.formHelperText` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  FormHelperTextProps: a.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The helper text content.
   */
  helperText: a.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: a.string,
  /**
   * Props applied to the [`InputLabel`](https://mui.com/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   * @deprecated Use `slotProps.inputLabel` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputLabelProps: a.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.htmlInput` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: a.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](https://mui.com/material-ui/api/filled-input/),
   * [`OutlinedInput`](https://mui.com/material-ui/api/outlined-input/) or [`Input`](https://mui.com/material-ui/api/input/)
   * component depending on the `variant` prop value.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: uo,
  /**
   * The label content.
   */
  label: a.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: a.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * Render a [`Select`](https://mui.com/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: a.bool,
  /**
   * Props applied to the [`Select`](https://mui.com/material-ui/api/select/) element.
   * @deprecated Use `slotProps.select` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SelectProps: a.object,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    formHelperText: a.oneOfType([a.func, a.object]),
    htmlInput: a.oneOfType([a.func, a.object]),
    input: a.oneOfType([a.func, a.object]),
    inputLabel: a.oneOfType([a.func, a.object]),
    select: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    formHelperText: a.elementType,
    htmlInput: a.elementType,
    input: a.elementType,
    inputLabel: a.elementType,
    root: a.elementType,
    select: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
const B7 = [], qR = Pe(
  ({
    label: e = "",
    tooltip: t,
    fullWidth: n = !1,
    options: o = B7,
    value: r,
    onChange: i,
    isRequired: s,
    isDisabled: l,
    isError: c,
    errorMessage: u = "",
    emptyOptionMessage: d = "No Options",
    hideOptionsWhenEmpty: f = !1,
    isLoadingOptions: p = !1,
    renderOption: h,
    sx: g
  }) => {
    const m = Pa(), { inputCommonStyle: y } = mb({
      isDisabled: l,
      isError: c
    }), { textCommonStyles: b } = Mc({
      isTitle: !1,
      isLabel: !0,
      textColor: l ? "disabled" : c ? "error" : "auto"
    }), { paperCommonStyles: T } = ms(), v = Ge(() => f ? o.length === 0 : !1, [f, o]), w = Ge(() => o.find((S) => S.value === r) || null, [r, o]);
    return /* @__PURE__ */ Se(bn, { gap: 0, width: n ? "100%" : "auto", children: [
      e && /* @__PURE__ */ O(
        cs,
        {
          label: e,
          elementId: m,
          tooltip: t,
          isRequired: s,
          isDisabled: l,
          isError: c
        }
      ),
      /* @__PURE__ */ O(
        kR,
        {
          className: "VenomousUI-SelectInput",
          multiple: !1,
          id: m,
          fullWidth: n,
          disabled: l || p,
          value: w,
          onChange: (S, C) => i == null ? void 0 : i(C, S),
          renderInput: (S) => /* @__PURE__ */ O(
            UR,
            {
              ...S,
              autoComplete: "off",
              size: "small",
              error: c,
              slotProps: {
                input: {
                  ...S.InputProps,
                  sx: { ...y, ...g },
                  endAdornment: /* @__PURE__ */ Se(Jn, { children: [
                    p ? /* @__PURE__ */ O(Ac, { color: "primary", disableShrink: !0, size: 20 }) : null,
                    S.InputProps.endAdornment
                  ] })
                }
              }
            }
          ),
          loading: p,
          options: o,
          noOptionsText: v ? null : d,
          isOptionEqualToValue: (S, C) => S.value === C.value,
          getOptionDisabled: (S) => !!S.isDisabled,
          getOptionLabel: (S) => S.label,
          renderOption: ({ key: S, ...C }, E) => /* @__PURE__ */ O(
            Ho,
            {
              component: "li",
              ...C,
              style: { minHeight: 40, padding: 0, borderRadius: "8px" },
              sx: { mb: "4px", "&:last-child": { mb: 0 } },
              children: h ? h(E) : /* @__PURE__ */ O(
                Rn,
                {
                  text: E.label,
                  sx: {
                    width: 1,
                    flex: 1,
                    padding: 0,
                    paddingLeft: "6px",
                    paddingRight: "6px"
                  }
                }
              )
            },
            S
          ),
          slotProps: {
            paper: {
              sx: { ...T, display: v ? "none" : "display" }
            },
            listbox: {
              sx: { p: 0 }
            }
          }
        }
      ),
      c && /* @__PURE__ */ O(
        Rn,
        {
          text: c ? u : "",
          isLabel: !0,
          sx: { ...b, lineHeight: "1.5rem" }
        }
      )
    ] });
  }
);
qR.displayName = "Select";
function V7(e) {
  return ot("MuiSwitch", e);
}
const Gn = at("MuiSwitch", ["root", "edgeStart", "edgeEnd", "switchBase", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium", "checked", "disabled", "input", "thumb", "track"]), F7 = (e) => {
  const {
    classes: t,
    edge: n,
    size: o,
    color: r,
    checked: i,
    disabled: s
  } = e, l = {
    root: ["root", n && `edge${fe(n)}`, `size${fe(o)}`],
    switchBase: ["switchBase", `color${fe(r)}`, i && "checked", s && "disabled"],
    thumb: ["thumb"],
    track: ["track"],
    input: ["input"]
  }, c = st(l, V7, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...c
  };
}, j7 = Ce("span", {
  name: "MuiSwitch",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.edge && t[`edge${fe(n.edge)}`], t[`size${fe(n.size)}`]];
  }
})({
  display: "inline-flex",
  width: 34 + 12 * 2,
  height: 14 + 12 * 2,
  overflow: "hidden",
  padding: 12,
  boxSizing: "border-box",
  position: "relative",
  flexShrink: 0,
  zIndex: 0,
  // Reset the stacking context.
  verticalAlign: "middle",
  // For correct alignment with the text.
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [{
    props: {
      edge: "start"
    },
    style: {
      marginLeft: -8
    }
  }, {
    props: {
      edge: "end"
    },
    style: {
      marginRight: -8
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      width: 40,
      height: 24,
      padding: 7,
      [`& .${Gn.thumb}`]: {
        width: 16,
        height: 16
      },
      [`& .${Gn.switchBase}`]: {
        padding: 4,
        [`&.${Gn.checked}`]: {
          transform: "translateX(16px)"
        }
      }
    }
  }]
}), z7 = Ce(zf, {
  name: "MuiSwitch",
  slot: "SwitchBase",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.switchBase, {
      [`& .${Gn.input}`]: t.input
    }, n.color !== "default" && t[`color${fe(n.color)}`]];
  }
})(Ye(({
  theme: e
}) => ({
  position: "absolute",
  top: 0,
  left: 0,
  zIndex: 1,
  // Render above the focus ripple.
  color: e.vars ? e.vars.palette.Switch.defaultColor : `${e.palette.mode === "light" ? e.palette.common.white : e.palette.grey[300]}`,
  transition: e.transitions.create(["left", "transform"], {
    duration: e.transitions.duration.shortest
  }),
  [`&.${Gn.checked}`]: {
    transform: "translateX(20px)"
  },
  [`&.${Gn.disabled}`]: {
    color: e.vars ? e.vars.palette.Switch.defaultDisabledColor : `${e.palette.mode === "light" ? e.palette.grey[100] : e.palette.grey[600]}`
  },
  [`&.${Gn.checked} + .${Gn.track}`]: {
    opacity: 0.5
  },
  [`&.${Gn.disabled} + .${Gn.track}`]: {
    opacity: e.vars ? e.vars.opacity.switchTrackDisabled : `${e.palette.mode === "light" ? 0.12 : 0.2}`
  },
  [`& .${Gn.input}`]: {
    left: "-100%",
    width: "300%"
  }
})), Ye(({
  theme: e
}) => ({
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : vt(e.palette.action.active, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  variants: [...Object.entries(e.palette).filter(Gt(["light"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${Gn.checked}`]: {
        color: (e.vars || e).palette[t].main,
        "&:hover": {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : vt(e.palette[t].main, e.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        },
        [`&.${Gn.disabled}`]: {
          color: e.vars ? e.vars.palette.Switch[`${t}DisabledColor`] : `${e.palette.mode === "light" ? Ma(e.palette[t].main, 0.62) : Na(e.palette[t].main, 0.55)}`
        }
      },
      [`&.${Gn.checked} + .${Gn.track}`]: {
        backgroundColor: (e.vars || e).palette[t].main
      }
    }
  }))]
}))), H7 = Ce("span", {
  name: "MuiSwitch",
  slot: "Track",
  overridesResolver: (e, t) => t.track
})(Ye(({
  theme: e
}) => ({
  height: "100%",
  width: "100%",
  borderRadius: 14 / 2,
  zIndex: -1,
  transition: e.transitions.create(["opacity", "background-color"], {
    duration: e.transitions.duration.shortest
  }),
  backgroundColor: e.vars ? e.vars.palette.common.onBackground : `${e.palette.mode === "light" ? e.palette.common.black : e.palette.common.white}`,
  opacity: e.vars ? e.vars.opacity.switchTrack : `${e.palette.mode === "light" ? 0.38 : 0.3}`
}))), W7 = Ce("span", {
  name: "MuiSwitch",
  slot: "Thumb",
  overridesResolver: (e, t) => t.thumb
})(Ye(({
  theme: e
}) => ({
  boxShadow: (e.vars || e).shadows[1],
  backgroundColor: "currentColor",
  width: 20,
  height: 20,
  borderRadius: "50%"
}))), KR = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiSwitch"
  }), {
    className: r,
    color: i = "primary",
    edge: s = !1,
    size: l = "medium",
    sx: c,
    slots: u = {},
    slotProps: d = {},
    ...f
  } = o, p = {
    ...o,
    color: i,
    edge: s,
    size: l
  }, h = F7(p), g = {
    slots: u,
    slotProps: d
  }, [m, y] = it("root", {
    className: Ie(h.root, r),
    elementType: j7,
    externalForwardedProps: g,
    ownerState: p,
    additionalProps: {
      sx: c
    }
  }), [b, T] = it("thumb", {
    className: h.thumb,
    elementType: W7,
    externalForwardedProps: g,
    ownerState: p
  }), v = /* @__PURE__ */ O(b, {
    ...T
  }), [w, S] = it("track", {
    className: h.track,
    elementType: H7,
    externalForwardedProps: g,
    ownerState: p
  });
  return /* @__PURE__ */ Se(m, {
    ...y,
    children: [/* @__PURE__ */ O(z7, {
      type: "checkbox",
      icon: v,
      checkedIcon: v,
      ref: n,
      ownerState: p,
      ...f,
      classes: {
        ...h,
        root: h.switchBase
      },
      slots: {
        ...u.switchBase && {
          root: u.switchBase
        },
        ...u.input && {
          input: u.input
        }
      },
      slotProps: {
        ...d.switchBase && {
          root: typeof d.switchBase == "function" ? d.switchBase(p) : d.switchBase
        },
        ...d.input && {
          input: typeof d.input == "function" ? d.input(p) : d.input
        }
      }
    }), /* @__PURE__ */ O(w, {
      ...S
    })]
  });
});
process.env.NODE_ENV !== "production" && (KR.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: a.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: a.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: a.node,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   * @deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputRef: uo,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: a.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: a.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense switch styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    input: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    switchBase: a.oneOfType([a.func, a.object]),
    thumb: a.oneOfType([a.func, a.object]),
    track: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType,
    switchBase: a.elementType,
    thumb: a.elementType,
    track: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: a.any
});
const _b = Pe(
  ({ value: e, onChange: t, startLabel: n, endLabel: o, labelsDirection: r = "row", isDisabled: i }) => {
    const s = Be(
      (l) => /* @__PURE__ */ O(
        KR,
        {
          id: l,
          color: "primary",
          checked: e,
          disabled: i,
          onChange: (c) => t(c.target.checked),
          sx: {
            "& .MuiSwitch-track": {
              transition: "background-color 0s"
            }
          }
        }
      ),
      [e, t]
    );
    return n || o ? /* @__PURE__ */ O(
      Hf,
      {
        labelsDirection: r,
        startLabel: n,
        endLabel: o,
        isDisabled: i,
        renderElement: s
      }
    ) : s();
  }
);
_b.displayName = "Switch";
var Xc = (e) => e.type === "checkbox", es = (e) => e instanceof Date, Yn = (e) => e == null;
const GR = (e) => typeof e == "object";
var un = (e) => !Yn(e) && !Array.isArray(e) && GR(e) && !es(e), YR = (e) => un(e) && e.target ? Xc(e.target) ? e.target.checked : e.target.value : e, U7 = (e) => e.substring(0, e.search(/\.\d+(\.|$)/)) || e, XR = (e, t) => e.has(U7(t)), q7 = (e) => {
  const t = e.constructor && e.constructor.prototype;
  return un(t) && t.hasOwnProperty("isPrototypeOf");
}, Db = typeof window < "u" && typeof window.HTMLElement < "u" && typeof document < "u";
function Zt(e) {
  let t;
  const n = Array.isArray(e), o = typeof FileList < "u" ? e instanceof FileList : !1;
  if (e instanceof Date)
    t = new Date(e);
  else if (e instanceof Set)
    t = new Set(e);
  else if (!(Db && (e instanceof Blob || o)) && (n || un(e)))
    if (t = n ? [] : {}, !n && !q7(e))
      t = e;
    else
      for (const r in e)
        e.hasOwnProperty(r) && (t[r] = Zt(e[r]));
  else
    return e;
  return t;
}
var Zc = (e) => Array.isArray(e) ? e.filter(Boolean) : [], jt = (e) => e === void 0, $e = (e, t, n) => {
  if (!t || !un(e))
    return n;
  const o = Zc(t.split(/[,[\].]+?/)).reduce((r, i) => Yn(r) ? r : r[i], e);
  return jt(o) || o === e ? jt(e[t]) ? n : e[t] : o;
}, go = (e) => typeof e == "boolean", Lb = (e) => /^\w*$/.test(e), ZR = (e) => Zc(e.replace(/["|']|\]/g, "").split(/\.|\[/)), bt = (e, t, n) => {
  let o = -1;
  const r = Lb(t) ? [t] : ZR(t), i = r.length, s = i - 1;
  for (; ++o < i; ) {
    const l = r[o];
    let c = n;
    if (o !== s) {
      const u = e[l];
      c = un(u) || Array.isArray(u) ? u : isNaN(+r[o + 1]) ? {} : [];
    }
    if (l === "__proto__" || l === "constructor" || l === "prototype")
      return;
    e[l] = c, e = e[l];
  }
};
const Wd = {
  BLUR: "blur",
  FOCUS_OUT: "focusout",
  CHANGE: "change"
}, Bo = {
  onBlur: "onBlur",
  onChange: "onChange",
  onSubmit: "onSubmit",
  onTouched: "onTouched",
  all: "all"
}, Br = {
  max: "max",
  min: "min",
  maxLength: "maxLength",
  minLength: "minLength",
  pattern: "pattern",
  required: "required",
  validate: "validate"
}, QR = Z.createContext(null), Io = () => Z.useContext(QR), K7 = (e) => {
  const { children: t, ...n } = e;
  return Z.createElement(QR.Provider, { value: n }, t);
};
var JR = (e, t, n, o = !0) => {
  const r = {
    defaultValues: t._defaultValues
  };
  for (const i in e)
    Object.defineProperty(r, i, {
      get: () => {
        const s = i;
        return t._proxyFormState[s] !== Bo.all && (t._proxyFormState[s] = !o || Bo.all), n && (n[s] = !0), e[s];
      }
    });
  return r;
};
function G7(e) {
  const t = Io(), { control: n = t.control, disabled: o, name: r, exact: i } = e || {}, [s, l] = Z.useState(n._formState), c = Z.useRef({
    isDirty: !1,
    isLoading: !1,
    dirtyFields: !1,
    touchedFields: !1,
    validatingFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  }), u = Z.useRef(r);
  return u.current = r, Z.useEffect(() => n._subscribe({
    name: u.current,
    formState: c.current,
    exact: i,
    callback: (d) => {
      !o && l({
        ...n._formState,
        ...d
      });
    }
  }), [n, o, i]), Z.useEffect(() => {
    c.current.isValid && n._setValid(!0);
  }, [n]), Z.useMemo(() => JR(s, n, c.current, !1), [s, n]);
}
var xr = (e) => typeof e == "string", eI = (e, t, n, o, r) => xr(e) ? (o && t.watch.add(e), $e(n, e, r)) : Array.isArray(e) ? e.map((i) => (o && t.watch.add(i), $e(n, i))) : (o && (t.watchAll = !0), n);
function Y7(e) {
  const t = Io(), { control: n = t.control, name: o, defaultValue: r, disabled: i, exact: s } = e || {}, l = Z.useRef(o), c = Z.useRef(r);
  l.current = o, Z.useEffect(() => n._subscribe({
    name: l.current,
    formState: {
      values: !0
    },
    exact: s,
    callback: (f) => !i && d(eI(l.current, n._names, f.values || n._formValues, !1, c.current))
  }), [n, i, s]);
  const [u, d] = Z.useState(n._getWatch(o, r));
  return Z.useEffect(() => n._removeUnmounted()), u;
}
function X7(e) {
  const t = Io(), { name: n, disabled: o, control: r = t.control, shouldUnregister: i } = e, s = XR(r._names.array, n), l = Y7({
    control: r,
    name: n,
    defaultValue: $e(r._formValues, n, $e(r._defaultValues, n, e.defaultValue)),
    exact: !0
  }), c = G7({
    control: r,
    name: n,
    exact: !0
  }), u = Z.useRef(e), d = Z.useRef(r.register(n, {
    ...e.rules,
    value: l,
    ...go(e.disabled) ? { disabled: e.disabled } : {}
  })), f = Z.useMemo(() => Object.defineProperties({}, {
    invalid: {
      enumerable: !0,
      get: () => !!$e(c.errors, n)
    },
    isDirty: {
      enumerable: !0,
      get: () => !!$e(c.dirtyFields, n)
    },
    isTouched: {
      enumerable: !0,
      get: () => !!$e(c.touchedFields, n)
    },
    isValidating: {
      enumerable: !0,
      get: () => !!$e(c.validatingFields, n)
    },
    error: {
      enumerable: !0,
      get: () => $e(c.errors, n)
    }
  }), [c, n]), p = Z.useCallback((y) => d.current.onChange({
    target: {
      value: YR(y),
      name: n
    },
    type: Wd.CHANGE
  }), [n]), h = Z.useCallback(() => d.current.onBlur({
    target: {
      value: $e(r._formValues, n),
      name: n
    },
    type: Wd.BLUR
  }), [n, r._formValues]), g = Z.useCallback((y) => {
    const b = $e(r._fields, n);
    b && y && (b._f.ref = {
      focus: () => y.focus(),
      select: () => y.select(),
      setCustomValidity: (T) => y.setCustomValidity(T),
      reportValidity: () => y.reportValidity()
    });
  }, [r._fields, n]), m = Z.useMemo(() => ({
    name: n,
    value: l,
    ...go(o) || c.disabled ? { disabled: c.disabled || o } : {},
    onChange: p,
    onBlur: h,
    ref: g
  }), [n, o, c.disabled, p, h, g, l]);
  return Z.useEffect(() => {
    const y = r._options.shouldUnregister || i;
    r.register(n, {
      ...u.current.rules,
      ...go(u.current.disabled) ? { disabled: u.current.disabled } : {}
    });
    const b = (T, v) => {
      const w = $e(r._fields, T);
      w && w._f && (w._f.mount = v);
    };
    if (b(n, !0), y) {
      const T = Zt($e(r._options.defaultValues, n));
      bt(r._defaultValues, n, T), jt($e(r._formValues, n)) && bt(r._formValues, n, T);
    }
    return !s && r.register(n), () => {
      (s ? y && !r._state.action : y) ? r.unregister(n) : b(n, !1);
    };
  }, [n, r, s, i]), Z.useEffect(() => {
    r._setDisabledField({
      disabled: o,
      name: n
    });
  }, [o, n, r]), Z.useMemo(() => ({
    field: m,
    formState: c,
    fieldState: f
  }), [m, c, f]);
}
const Di = (e) => e.render(X7(e));
var tI = (e, t, n, o, r) => t ? {
  ...n[e],
  types: {
    ...n[e] && n[e].types ? n[e].types : {},
    [o]: r || !0
  }
} : {}, ro = (e) => Array.isArray(e) ? e : [e], ES = () => {
  let e = [];
  return {
    get observers() {
      return e;
    },
    next: (r) => {
      for (const i of e)
        i.next && i.next(r);
    },
    subscribe: (r) => (e.push(r), {
      unsubscribe: () => {
        e = e.filter((i) => i !== r);
      }
    }),
    unsubscribe: () => {
      e = [];
    }
  };
}, ig = (e) => Yn(e) || !GR(e);
function ui(e, t) {
  if (ig(e) || ig(t))
    return e === t;
  if (es(e) && es(t))
    return e.getTime() === t.getTime();
  const n = Object.keys(e), o = Object.keys(t);
  if (n.length !== o.length)
    return !1;
  for (const r of n) {
    const i = e[r];
    if (!o.includes(r))
      return !1;
    if (r !== "ref") {
      const s = t[r];
      if (es(i) && es(s) || un(i) && un(s) || Array.isArray(i) && Array.isArray(s) ? !ui(i, s) : i !== s)
        return !1;
    }
  }
  return !0;
}
var Ln = (e) => un(e) && !Object.keys(e).length, Bb = (e) => e.type === "file", Qo = (e) => typeof e == "function", Ud = (e) => {
  if (!Db)
    return !1;
  const t = e ? e.ownerDocument : 0;
  return e instanceof (t && t.defaultView ? t.defaultView.HTMLElement : HTMLElement);
}, nI = (e) => e.type === "select-multiple", Vb = (e) => e.type === "radio", Z7 = (e) => Vb(e) || Xc(e), Ih = (e) => Ud(e) && e.isConnected;
function Q7(e, t) {
  const n = t.slice(0, -1).length;
  let o = 0;
  for (; o < n; )
    e = jt(e) ? o++ : e[t[o++]];
  return e;
}
function J7(e) {
  for (const t in e)
    if (e.hasOwnProperty(t) && !jt(e[t]))
      return !1;
  return !0;
}
function mn(e, t) {
  const n = Array.isArray(t) ? t : Lb(t) ? [t] : ZR(t), o = n.length === 1 ? e : Q7(e, n), r = n.length - 1, i = n[r];
  return o && delete o[i], r !== 0 && (un(o) && Ln(o) || Array.isArray(o) && J7(o)) && mn(e, n.slice(0, -1)), e;
}
var oI = (e) => {
  for (const t in e)
    if (Qo(e[t]))
      return !0;
  return !1;
};
function qd(e, t = {}) {
  const n = Array.isArray(e);
  if (un(e) || n)
    for (const o in e)
      Array.isArray(e[o]) || un(e[o]) && !oI(e[o]) ? (t[o] = Array.isArray(e[o]) ? [] : {}, qd(e[o], t[o])) : Yn(e[o]) || (t[o] = !0);
  return t;
}
function rI(e, t, n) {
  const o = Array.isArray(e);
  if (un(e) || o)
    for (const r in e)
      Array.isArray(e[r]) || un(e[r]) && !oI(e[r]) ? jt(t) || ig(n[r]) ? n[r] = Array.isArray(e[r]) ? qd(e[r], []) : { ...qd(e[r]) } : rI(e[r], Yn(t) ? {} : t[r], n[r]) : n[r] = !ui(e[r], t[r]);
  return n;
}
var ol = (e, t) => rI(e, t, qd(t));
const OS = {
  value: !1,
  isValid: !1
}, PS = { value: !0, isValid: !0 };
var iI = (e) => {
  if (Array.isArray(e)) {
    if (e.length > 1) {
      const t = e.filter((n) => n && n.checked && !n.disabled).map((n) => n.value);
      return { value: t, isValid: !!t.length };
    }
    return e[0].checked && !e[0].disabled ? (
      // @ts-expect-error expected to work in the browser
      e[0].attributes && !jt(e[0].attributes.value) ? jt(e[0].value) || e[0].value === "" ? PS : { value: e[0].value, isValid: !0 } : PS
    ) : OS;
  }
  return OS;
}, sI = (e, { valueAsNumber: t, valueAsDate: n, setValueAs: o }) => jt(e) ? e : t ? e === "" ? NaN : e && +e : n && xr(e) ? new Date(e) : o ? o(e) : e;
const RS = {
  isValid: !1,
  value: null
};
var aI = (e) => Array.isArray(e) ? e.reduce((t, n) => n && n.checked && !n.disabled ? {
  isValid: !0,
  value: n.value
} : t, RS) : RS;
function IS(e) {
  const t = e.ref;
  return Bb(t) ? t.files : Vb(t) ? aI(e.refs).value : nI(t) ? [...t.selectedOptions].map(({ value: n }) => n) : Xc(t) ? iI(e.refs).value : sI(jt(t.value) ? e.ref.value : t.value, e);
}
var e9 = (e, t, n, o) => {
  const r = {};
  for (const i of e) {
    const s = $e(t, i);
    s && bt(r, i, s._f);
  }
  return {
    criteriaMode: n,
    names: [...e],
    fields: r,
    shouldUseNativeValidation: o
  };
}, Kd = (e) => e instanceof RegExp, rl = (e) => jt(e) ? e : Kd(e) ? e.source : un(e) ? Kd(e.value) ? e.value.source : e.value : e, Ks = (e) => ({
  isOnSubmit: !e || e === Bo.onSubmit,
  isOnBlur: e === Bo.onBlur,
  isOnChange: e === Bo.onChange,
  isOnAll: e === Bo.all,
  isOnTouch: e === Bo.onTouched
});
const kS = "AsyncFunction";
var t9 = (e) => !!e && !!e.validate && !!(Qo(e.validate) && e.validate.constructor.name === kS || un(e.validate) && Object.values(e.validate).find((t) => t.constructor.name === kS)), n9 = (e) => e.mount && (e.required || e.min || e.max || e.maxLength || e.minLength || e.pattern || e.validate), sg = (e, t, n) => !n && (t.watchAll || t.watch.has(e) || [...t.watch].some((o) => e.startsWith(o) && /^\.\w+/.test(e.slice(o.length))));
const ea = (e, t, n, o) => {
  for (const r of n || Object.keys(e)) {
    const i = $e(e, r);
    if (i) {
      const { _f: s, ...l } = i;
      if (s) {
        if (s.refs && s.refs[0] && t(s.refs[0], r) && !o)
          return !0;
        if (s.ref && t(s.ref, s.name) && !o)
          return !0;
        if (ea(l, t))
          break;
      } else if (un(l) && ea(l, t))
        break;
    }
  }
};
function $S(e, t, n) {
  const o = $e(e, n);
  if (o || Lb(n))
    return {
      error: o,
      name: n
    };
  const r = n.split(".");
  for (; r.length; ) {
    const i = r.join("."), s = $e(t, i), l = $e(e, i);
    if (s && !Array.isArray(s) && n !== i)
      return { name: n };
    if (l && l.type)
      return {
        name: i,
        error: l
      };
    r.pop();
  }
  return {
    name: n
  };
}
var o9 = (e, t, n, o) => {
  n(e);
  const { name: r, ...i } = e;
  return Ln(i) || Object.keys(i).length >= Object.keys(t).length || Object.keys(i).find((s) => t[s] === (!o || Bo.all));
}, r9 = (e, t, n) => !e || !t || e === t || ro(e).some((o) => o && (n ? o === t : o.startsWith(t) || t.startsWith(o))), i9 = (e, t, n, o, r) => r.isOnAll ? !1 : !n && r.isOnTouch ? !(t || e) : (n ? o.isOnBlur : r.isOnBlur) ? !e : (n ? o.isOnChange : r.isOnChange) ? e : !0, s9 = (e, t) => !Zc($e(e, t)).length && mn(e, t), lI = (e, t, n) => {
  const o = ro($e(e, n));
  return bt(o, "root", t[n]), bt(e, n, o), e;
}, id = (e) => xr(e);
function NS(e, t, n = "validate") {
  if (id(e) || Array.isArray(e) && e.every(id) || go(e) && !e)
    return {
      type: n,
      message: id(e) ? e : "",
      ref: t
    };
}
var _s = (e) => un(e) && !Kd(e) ? e : {
  value: e,
  message: ""
}, ag = async (e, t, n, o, r, i) => {
  const { ref: s, refs: l, required: c, maxLength: u, minLength: d, min: f, max: p, pattern: h, validate: g, name: m, valueAsNumber: y, mount: b } = e._f, T = $e(n, m);
  if (!b || t.has(m))
    return {};
  const v = l ? l[0] : s, w = (k) => {
    r && v.reportValidity && (v.setCustomValidity(go(k) ? "" : k || ""), v.reportValidity());
  }, S = {}, C = Vb(s), E = Xc(s), P = C || E, M = (y || Bb(s)) && jt(s.value) && jt(T) || Ud(s) && s.value === "" || T === "" || Array.isArray(T) && !T.length, x = tI.bind(null, m, o, S), I = (k, _, R, A = Br.maxLength, N = Br.minLength) => {
    const L = k ? _ : R;
    S[m] = {
      type: k ? A : N,
      message: L,
      ref: s,
      ...x(k ? A : N, L)
    };
  };
  if (i ? !Array.isArray(T) || !T.length : c && (!P && (M || Yn(T)) || go(T) && !T || E && !iI(l).isValid || C && !aI(l).isValid)) {
    const { value: k, message: _ } = id(c) ? { value: !!c, message: c } : _s(c);
    if (k && (S[m] = {
      type: Br.required,
      message: _,
      ref: v,
      ...x(Br.required, _)
    }, !o))
      return w(_), S;
  }
  if (!M && (!Yn(f) || !Yn(p))) {
    let k, _;
    const R = _s(p), A = _s(f);
    if (!Yn(T) && !isNaN(T)) {
      const N = s.valueAsNumber || T && +T;
      Yn(R.value) || (k = N > R.value), Yn(A.value) || (_ = N < A.value);
    } else {
      const N = s.valueAsDate || new Date(T), L = (B) => /* @__PURE__ */ new Date((/* @__PURE__ */ new Date()).toDateString() + " " + B), V = s.type == "time", D = s.type == "week";
      xr(R.value) && T && (k = V ? L(T) > L(R.value) : D ? T > R.value : N > new Date(R.value)), xr(A.value) && T && (_ = V ? L(T) < L(A.value) : D ? T < A.value : N < new Date(A.value));
    }
    if ((k || _) && (I(!!k, R.message, A.message, Br.max, Br.min), !o))
      return w(S[m].message), S;
  }
  if ((u || d) && !M && (xr(T) || i && Array.isArray(T))) {
    const k = _s(u), _ = _s(d), R = !Yn(k.value) && T.length > +k.value, A = !Yn(_.value) && T.length < +_.value;
    if ((R || A) && (I(R, k.message, _.message), !o))
      return w(S[m].message), S;
  }
  if (h && !M && xr(T)) {
    const { value: k, message: _ } = _s(h);
    if (Kd(k) && !T.match(k) && (S[m] = {
      type: Br.pattern,
      message: _,
      ref: s,
      ...x(Br.pattern, _)
    }, !o))
      return w(_), S;
  }
  if (g) {
    if (Qo(g)) {
      const k = await g(T, n), _ = NS(k, v);
      if (_ && (S[m] = {
        ..._,
        ...x(Br.validate, _.message)
      }, !o))
        return w(_.message), S;
    } else if (un(g)) {
      let k = {};
      for (const _ in g) {
        if (!Ln(k) && !o)
          break;
        const R = NS(await g[_](T, n), v, _);
        R && (k = {
          ...R,
          ...x(_, R.message)
        }, w(R.message), o && (S[m] = k));
      }
      if (!Ln(k) && (S[m] = {
        ref: v,
        ...k
      }, !o))
        return S;
    }
  }
  return w(!0), S;
};
const a9 = {
  mode: Bo.onSubmit,
  reValidateMode: Bo.onChange,
  shouldFocusError: !0
};
function l9(e = {}) {
  let t = {
    ...a9,
    ...e
  }, n = {
    submitCount: 0,
    isDirty: !1,
    isLoading: Qo(t.defaultValues),
    isValidating: !1,
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    touchedFields: {},
    dirtyFields: {},
    validatingFields: {},
    errors: t.errors || {},
    disabled: t.disabled || !1
  };
  const o = {};
  let r = un(t.defaultValues) || un(t.values) ? Zt(t.values || t.defaultValues) || {} : {}, i = t.shouldUnregister ? {} : Zt(r), s = {
    action: !1,
    mount: !1,
    watch: !1
  }, l = {
    mount: /* @__PURE__ */ new Set(),
    disabled: /* @__PURE__ */ new Set(),
    unMount: /* @__PURE__ */ new Set(),
    array: /* @__PURE__ */ new Set(),
    watch: /* @__PURE__ */ new Set()
  }, c, u = 0;
  const d = {
    isDirty: !1,
    dirtyFields: !1,
    validatingFields: !1,
    touchedFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  };
  let f = {
    ...d
  };
  const p = {
    array: ES(),
    state: ES()
  }, h = Ks(t.mode), g = Ks(t.reValidateMode), m = t.criteriaMode === Bo.all, y = (j) => (J) => {
    clearTimeout(u), u = setTimeout(j, J);
  }, b = async (j) => {
    if (!t.disabled && (d.isValid || f.isValid || j)) {
      const J = t.resolver ? Ln((await M()).errors) : await I(o, !0);
      J !== n.isValid && p.state.next({
        isValid: J
      });
    }
  }, T = (j, J) => {
    !t.disabled && (d.isValidating || d.validatingFields || f.isValidating || f.validatingFields) && ((j || Array.from(l.mount)).forEach((ie) => {
      ie && (J ? bt(n.validatingFields, ie, J) : mn(n.validatingFields, ie));
    }), p.state.next({
      validatingFields: n.validatingFields,
      isValidating: !Ln(n.validatingFields)
    }));
  }, v = (j, J = [], ie, Q, H = !0, X = !0) => {
    if (Q && ie && !t.disabled) {
      if (s.action = !0, X && Array.isArray($e(o, j))) {
        const se = ie($e(o, j), Q.argA, Q.argB);
        H && bt(o, j, se);
      }
      if (X && Array.isArray($e(n.errors, j))) {
        const se = ie($e(n.errors, j), Q.argA, Q.argB);
        H && bt(n.errors, j, se), s9(n.errors, j);
      }
      if ((d.touchedFields || f.touchedFields) && X && Array.isArray($e(n.touchedFields, j))) {
        const se = ie($e(n.touchedFields, j), Q.argA, Q.argB);
        H && bt(n.touchedFields, j, se);
      }
      (d.dirtyFields || f.dirtyFields) && (n.dirtyFields = ol(r, i)), p.state.next({
        name: j,
        isDirty: _(j, J),
        dirtyFields: n.dirtyFields,
        errors: n.errors,
        isValid: n.isValid
      });
    } else
      bt(i, j, J);
  }, w = (j, J) => {
    bt(n.errors, j, J), p.state.next({
      errors: n.errors
    });
  }, S = (j) => {
    n.errors = j, p.state.next({
      errors: n.errors,
      isValid: !1
    });
  }, C = (j, J, ie, Q) => {
    const H = $e(o, j);
    if (H) {
      const X = $e(i, j, jt(ie) ? $e(r, j) : ie);
      jt(X) || Q && Q.defaultChecked || J ? bt(i, j, J ? X : IS(H._f)) : N(j, X), s.mount && b();
    }
  }, E = (j, J, ie, Q, H) => {
    let X = !1, se = !1;
    const ye = {
      name: j
    };
    if (!t.disabled) {
      if (!ie || Q) {
        (d.isDirty || f.isDirty) && (se = n.isDirty, n.isDirty = ye.isDirty = _(), X = se !== ye.isDirty);
        const he = ui($e(r, j), J);
        se = !!$e(n.dirtyFields, j), he ? mn(n.dirtyFields, j) : bt(n.dirtyFields, j, !0), ye.dirtyFields = n.dirtyFields, X = X || (d.dirtyFields || f.dirtyFields) && se !== !he;
      }
      if (ie) {
        const he = $e(n.touchedFields, j);
        he || (bt(n.touchedFields, j, ie), ye.touchedFields = n.touchedFields, X = X || (d.touchedFields || f.touchedFields) && he !== ie);
      }
      X && H && p.state.next(ye);
    }
    return X ? ye : {};
  }, P = (j, J, ie, Q) => {
    const H = $e(n.errors, j), X = (d.isValid || f.isValid) && go(J) && n.isValid !== J;
    if (t.delayError && ie ? (c = y(() => w(j, ie)), c(t.delayError)) : (clearTimeout(u), c = null, ie ? bt(n.errors, j, ie) : mn(n.errors, j)), (ie ? !ui(H, ie) : H) || !Ln(Q) || X) {
      const se = {
        ...Q,
        ...X && go(J) ? { isValid: J } : {},
        errors: n.errors,
        name: j
      };
      n = {
        ...n,
        ...se
      }, p.state.next(se);
    }
  }, M = async (j) => {
    T(j, !0);
    const J = await t.resolver(i, t.context, e9(j || l.mount, o, t.criteriaMode, t.shouldUseNativeValidation));
    return T(j), J;
  }, x = async (j) => {
    const { errors: J } = await M(j);
    if (j)
      for (const ie of j) {
        const Q = $e(J, ie);
        Q ? bt(n.errors, ie, Q) : mn(n.errors, ie);
      }
    else
      n.errors = J;
    return J;
  }, I = async (j, J, ie = {
    valid: !0
  }) => {
    for (const Q in j) {
      const H = j[Q];
      if (H) {
        const { _f: X, ...se } = H;
        if (X) {
          const ye = l.array.has(X.name), he = H._f && t9(H._f);
          he && d.validatingFields && T([Q], !0);
          const le = await ag(H, l.disabled, i, m, t.shouldUseNativeValidation && !J, ye);
          if (he && d.validatingFields && T([Q]), le[X.name] && (ie.valid = !1, J))
            break;
          !J && ($e(le, X.name) ? ye ? lI(n.errors, le, X.name) : bt(n.errors, X.name, le[X.name]) : mn(n.errors, X.name));
        }
        !Ln(se) && await I(se, J, ie);
      }
    }
    return ie.valid;
  }, k = () => {
    for (const j of l.unMount) {
      const J = $e(o, j);
      J && (J._f.refs ? J._f.refs.every((ie) => !Ih(ie)) : !Ih(J._f.ref)) && ee(j);
    }
    l.unMount = /* @__PURE__ */ new Set();
  }, _ = (j, J) => !t.disabled && (j && J && bt(i, j, J), !ui(U(), r)), R = (j, J, ie) => eI(j, l, {
    ...s.mount ? i : jt(J) ? r : xr(j) ? { [j]: J } : J
  }, ie, J), A = (j) => Zc($e(s.mount ? i : r, j, t.shouldUnregister ? $e(r, j, []) : [])), N = (j, J, ie = {}) => {
    const Q = $e(o, j);
    let H = J;
    if (Q) {
      const X = Q._f;
      X && (!X.disabled && bt(i, j, sI(J, X)), H = Ud(X.ref) && Yn(J) ? "" : J, nI(X.ref) ? [...X.ref.options].forEach((se) => se.selected = H.includes(se.value)) : X.refs ? Xc(X.ref) ? X.refs.length > 1 ? X.refs.forEach((se) => (!se.defaultChecked || !se.disabled) && (se.checked = Array.isArray(H) ? !!H.find((ye) => ye === se.value) : H === se.value)) : X.refs[0] && (X.refs[0].checked = !!H) : X.refs.forEach((se) => se.checked = se.value === H) : Bb(X.ref) ? X.ref.value = "" : (X.ref.value = H, X.ref.type || p.state.next({
        name: j,
        values: Zt(i)
      })));
    }
    (ie.shouldDirty || ie.shouldTouch) && E(j, H, ie.shouldTouch, ie.shouldDirty, !0), ie.shouldValidate && F(j);
  }, L = (j, J, ie) => {
    for (const Q in J) {
      const H = J[Q], X = `${j}.${Q}`, se = $e(o, X);
      (l.array.has(j) || un(H) || se && !se._f) && !es(H) ? L(X, H, ie) : N(X, H, ie);
    }
  }, V = (j, J, ie = {}) => {
    const Q = $e(o, j), H = l.array.has(j), X = Zt(J);
    bt(i, j, X), H ? (p.array.next({
      name: j,
      values: Zt(i)
    }), (d.isDirty || d.dirtyFields || f.isDirty || f.dirtyFields) && ie.shouldDirty && p.state.next({
      name: j,
      dirtyFields: ol(r, i),
      isDirty: _(j, X)
    })) : Q && !Q._f && !Yn(X) ? L(j, X, ie) : N(j, X, ie), sg(j, l) && p.state.next({ ...n }), p.state.next({
      name: s.mount ? j : void 0,
      values: Zt(i)
    });
  }, D = async (j) => {
    s.mount = !0;
    const J = j.target;
    let ie = J.name, Q = !0;
    const H = $e(o, ie), X = (se) => {
      Q = Number.isNaN(se) || es(se) && isNaN(se.getTime()) || ui(se, $e(i, ie, se));
    };
    if (H) {
      let se, ye;
      const he = J.type ? IS(H._f) : YR(j), le = j.type === Wd.BLUR || j.type === Wd.FOCUS_OUT, ae = !n9(H._f) && !t.resolver && !$e(n.errors, ie) && !H._f.deps || i9(le, $e(n.touchedFields, ie), n.isSubmitted, g, h), ce = sg(ie, l, le);
      bt(i, ie, he), le ? (H._f.onBlur && H._f.onBlur(j), c && c(0)) : H._f.onChange && H._f.onChange(j);
      const Te = E(ie, he, le), Re = !Ln(Te) || ce;
      if (!le && p.state.next({
        name: ie,
        type: j.type,
        values: Zt(i)
      }), ae)
        return (d.isValid || f.isValid) && (t.mode === "onBlur" ? le && b() : le || b()), Re && p.state.next({ name: ie, ...ce ? {} : Te });
      if (!le && ce && p.state.next({ ...n }), t.resolver) {
        const { errors: oe } = await M([ie]);
        if (X(he), Q) {
          const be = $S(n.errors, o, ie), Ne = $S(oe, o, be.name || ie);
          se = Ne.error, ie = Ne.name, ye = Ln(oe);
        }
      } else
        T([ie], !0), se = (await ag(H, l.disabled, i, m, t.shouldUseNativeValidation))[ie], T([ie]), X(he), Q && (se ? ye = !1 : (d.isValid || f.isValid) && (ye = await I(o, !0)));
      Q && (H._f.deps && F(H._f.deps), P(ie, ye, se, Te));
    }
  }, B = (j, J) => {
    if ($e(n.errors, J) && j.focus)
      return j.focus(), 1;
  }, F = async (j, J = {}) => {
    let ie, Q;
    const H = ro(j);
    if (t.resolver) {
      const X = await x(jt(j) ? j : H);
      ie = Ln(X), Q = j ? !H.some((se) => $e(X, se)) : ie;
    } else j ? (Q = (await Promise.all(H.map(async (X) => {
      const se = $e(o, X);
      return await I(se && se._f ? { [X]: se } : se);
    }))).every(Boolean), !(!Q && !n.isValid) && b()) : Q = ie = await I(o);
    return p.state.next({
      ...!xr(j) || (d.isValid || f.isValid) && ie !== n.isValid ? {} : { name: j },
      ...t.resolver || !j ? { isValid: ie } : {},
      errors: n.errors
    }), J.shouldFocus && !Q && ea(o, B, j ? H : l.mount), Q;
  }, U = (j) => {
    const J = {
      ...s.mount ? i : r
    };
    return jt(j) ? J : xr(j) ? $e(J, j) : j.map((ie) => $e(J, ie));
  }, q = (j, J) => ({
    invalid: !!$e((J || n).errors, j),
    isDirty: !!$e((J || n).dirtyFields, j),
    error: $e((J || n).errors, j),
    isValidating: !!$e(n.validatingFields, j),
    isTouched: !!$e((J || n).touchedFields, j)
  }), G = (j) => {
    j && ro(j).forEach((J) => mn(n.errors, J)), p.state.next({
      errors: j ? n.errors : {}
    });
  }, K = (j, J, ie) => {
    const Q = ($e(o, j, { _f: {} })._f || {}).ref, H = $e(n.errors, j) || {}, { ref: X, message: se, type: ye, ...he } = H;
    bt(n.errors, j, {
      ...he,
      ...J,
      ref: Q
    }), p.state.next({
      name: j,
      errors: n.errors,
      isValid: !1
    }), ie && ie.shouldFocus && Q && Q.focus && Q.focus();
  }, te = (j, J) => Qo(j) ? p.state.subscribe({
    next: (ie) => j(R(void 0, J), ie)
  }) : R(j, J, !0), ne = (j) => p.state.subscribe({
    next: (J) => {
      r9(j.name, J.name, j.exact) && o9(J, j.formState || d, Ee, j.reRenderRoot) && j.callback({
        values: { ...i },
        ...n,
        ...J
      });
    }
  }).unsubscribe, W = (j) => (s.mount = !0, f = {
    ...f,
    ...j.formState
  }, ne({
    ...j,
    formState: f
  })), ee = (j, J = {}) => {
    for (const ie of j ? ro(j) : l.mount)
      l.mount.delete(ie), l.array.delete(ie), J.keepValue || (mn(o, ie), mn(i, ie)), !J.keepError && mn(n.errors, ie), !J.keepDirty && mn(n.dirtyFields, ie), !J.keepTouched && mn(n.touchedFields, ie), !J.keepIsValidating && mn(n.validatingFields, ie), !t.shouldUnregister && !J.keepDefaultValue && mn(r, ie);
    p.state.next({
      values: Zt(i)
    }), p.state.next({
      ...n,
      ...J.keepDirty ? { isDirty: _() } : {}
    }), !J.keepIsValid && b();
  }, Y = ({ disabled: j, name: J }) => {
    (go(j) && s.mount || j || l.disabled.has(J)) && (j ? l.disabled.add(J) : l.disabled.delete(J));
  }, re = (j, J = {}) => {
    let ie = $e(o, j);
    const Q = go(J.disabled) || go(t.disabled);
    return bt(o, j, {
      ...ie || {},
      _f: {
        ...ie && ie._f ? ie._f : { ref: { name: j } },
        name: j,
        mount: !0,
        ...J
      }
    }), l.mount.add(j), ie ? Y({
      disabled: go(J.disabled) ? J.disabled : t.disabled,
      name: j
    }) : C(j, !0, J.value), {
      ...Q ? { disabled: J.disabled || t.disabled } : {},
      ...t.progressive ? {
        required: !!J.required,
        min: rl(J.min),
        max: rl(J.max),
        minLength: rl(J.minLength),
        maxLength: rl(J.maxLength),
        pattern: rl(J.pattern)
      } : {},
      name: j,
      onChange: D,
      onBlur: D,
      ref: (H) => {
        if (H) {
          re(j, J), ie = $e(o, j);
          const X = jt(H.value) && H.querySelectorAll && H.querySelectorAll("input,select,textarea")[0] || H, se = Z7(X), ye = ie._f.refs || [];
          if (se ? ye.find((he) => he === X) : X === ie._f.ref)
            return;
          bt(o, j, {
            _f: {
              ...ie._f,
              ...se ? {
                refs: [
                  ...ye.filter(Ih),
                  X,
                  ...Array.isArray($e(r, j)) ? [{}] : []
                ],
                ref: { type: X.type, name: j }
              } : { ref: X }
            }
          }), C(j, !1, void 0, X);
        } else
          ie = $e(o, j, {}), ie._f && (ie._f.mount = !1), (t.shouldUnregister || J.shouldUnregister) && !(XR(l.array, j) && s.action) && l.unMount.add(j);
      }
    };
  }, z = () => t.shouldFocusError && ea(o, B, l.mount), de = (j) => {
    go(j) && (p.state.next({ disabled: j }), ea(o, (J, ie) => {
      const Q = $e(o, ie);
      Q && (J.disabled = Q._f.disabled || j, Array.isArray(Q._f.refs) && Q._f.refs.forEach((H) => {
        H.disabled = Q._f.disabled || j;
      }));
    }, 0, !1));
  }, ue = (j, J) => async (ie) => {
    let Q;
    ie && (ie.preventDefault && ie.preventDefault(), ie.persist && ie.persist());
    let H = Zt(i);
    if (p.state.next({
      isSubmitting: !0
    }), t.resolver) {
      const { errors: X, values: se } = await M();
      n.errors = X, H = se;
    } else
      await I(o);
    if (l.disabled.size)
      for (const X of l.disabled)
        bt(H, X, void 0);
    if (mn(n.errors, "root"), Ln(n.errors)) {
      p.state.next({
        errors: {}
      });
      try {
        await j(H, ie);
      } catch (X) {
        Q = X;
      }
    } else
      J && await J({ ...n.errors }, ie), z(), setTimeout(z);
    if (p.state.next({
      isSubmitted: !0,
      isSubmitting: !1,
      isSubmitSuccessful: Ln(n.errors) && !Q,
      submitCount: n.submitCount + 1,
      errors: n.errors
    }), Q)
      throw Q;
  }, xe = (j, J = {}) => {
    $e(o, j) && (jt(J.defaultValue) ? V(j, Zt($e(r, j))) : (V(j, J.defaultValue), bt(r, j, Zt(J.defaultValue))), J.keepTouched || mn(n.touchedFields, j), J.keepDirty || (mn(n.dirtyFields, j), n.isDirty = J.defaultValue ? _(j, Zt($e(r, j))) : _()), J.keepError || (mn(n.errors, j), d.isValid && b()), p.state.next({ ...n }));
  }, _e = (j, J = {}) => {
    const ie = j ? Zt(j) : r, Q = Zt(ie), H = Ln(j), X = H ? r : Q;
    if (J.keepDefaultValues || (r = ie), !J.keepValues) {
      if (J.keepDirtyValues) {
        const se = /* @__PURE__ */ new Set([
          ...l.mount,
          ...Object.keys(ol(r, i))
        ]);
        for (const ye of Array.from(se))
          $e(n.dirtyFields, ye) ? bt(X, ye, $e(i, ye)) : V(ye, $e(X, ye));
      } else {
        if (Db && jt(j))
          for (const se of l.mount) {
            const ye = $e(o, se);
            if (ye && ye._f) {
              const he = Array.isArray(ye._f.refs) ? ye._f.refs[0] : ye._f.ref;
              if (Ud(he)) {
                const le = he.closest("form");
                if (le) {
                  le.reset();
                  break;
                }
              }
            }
          }
        for (const se of l.mount)
          V(se, $e(X, se));
      }
      i = Zt(X), p.array.next({
        values: { ...X }
      }), p.state.next({
        values: { ...X }
      });
    }
    l = {
      mount: J.keepDirtyValues ? l.mount : /* @__PURE__ */ new Set(),
      unMount: /* @__PURE__ */ new Set(),
      array: /* @__PURE__ */ new Set(),
      disabled: /* @__PURE__ */ new Set(),
      watch: /* @__PURE__ */ new Set(),
      watchAll: !1,
      focus: ""
    }, s.mount = !d.isValid || !!J.keepIsValid || !!J.keepDirtyValues, s.watch = !!t.shouldUnregister, p.state.next({
      submitCount: J.keepSubmitCount ? n.submitCount : 0,
      isDirty: H ? !1 : J.keepDirty ? n.isDirty : !!(J.keepDefaultValues && !ui(j, r)),
      isSubmitted: J.keepIsSubmitted ? n.isSubmitted : !1,
      dirtyFields: H ? {} : J.keepDirtyValues ? J.keepDefaultValues && i ? ol(r, i) : n.dirtyFields : J.keepDefaultValues && j ? ol(r, j) : J.keepDirty ? n.dirtyFields : {},
      touchedFields: J.keepTouched ? n.touchedFields : {},
      errors: J.keepErrors ? n.errors : {},
      isSubmitSuccessful: J.keepIsSubmitSuccessful ? n.isSubmitSuccessful : !1,
      isSubmitting: !1
    });
  }, we = (j, J) => _e(Qo(j) ? j(i) : j, J), De = (j, J = {}) => {
    const ie = $e(o, j), Q = ie && ie._f;
    if (Q) {
      const H = Q.refs ? Q.refs[0] : Q.ref;
      H.focus && (H.focus(), J.shouldSelect && Qo(H.select) && H.select());
    }
  }, Ee = (j) => {
    n = {
      ...n,
      ...j
    };
  }, Me = {
    control: {
      register: re,
      unregister: ee,
      getFieldState: q,
      handleSubmit: ue,
      setError: K,
      _subscribe: ne,
      _runSchema: M,
      _getWatch: R,
      _getDirty: _,
      _setValid: b,
      _setFieldArray: v,
      _setDisabledField: Y,
      _setErrors: S,
      _getFieldArray: A,
      _reset: _e,
      _resetDefaultValues: () => Qo(t.defaultValues) && t.defaultValues().then((j) => {
        we(j, t.resetOptions), p.state.next({
          isLoading: !1
        });
      }),
      _removeUnmounted: k,
      _disableForm: de,
      _subjects: p,
      _proxyFormState: d,
      get _fields() {
        return o;
      },
      get _formValues() {
        return i;
      },
      get _state() {
        return s;
      },
      set _state(j) {
        s = j;
      },
      get _defaultValues() {
        return r;
      },
      get _names() {
        return l;
      },
      set _names(j) {
        l = j;
      },
      get _formState() {
        return n;
      },
      get _options() {
        return t;
      },
      set _options(j) {
        t = {
          ...t,
          ...j
        };
      }
    },
    subscribe: W,
    trigger: F,
    register: re,
    handleSubmit: ue,
    watch: te,
    setValue: V,
    getValues: U,
    reset: we,
    resetField: xe,
    clearErrors: G,
    unregister: ee,
    setError: K,
    setFocus: De,
    getFieldState: q
  };
  return {
    ...Me,
    formControl: Me
  };
}
var ri = () => {
  const e = typeof performance > "u" ? Date.now() : performance.now() * 1e3;
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (t) => {
    const n = (Math.random() * 16 + e) % 16 | 0;
    return (t == "x" ? n : n & 3 | 8).toString(16);
  });
}, kh = (e, t, n = {}) => n.shouldFocus || jt(n.shouldFocus) ? n.focusName || `${e}.${jt(n.focusIndex) ? t : n.focusIndex}.` : "", $h = (e, t) => [
  ...e,
  ...ro(t)
], Nh = (e) => Array.isArray(e) ? e.map(() => {
}) : void 0;
function Mh(e, t, n) {
  return [
    ...e.slice(0, t),
    ...ro(n),
    ...e.slice(t)
  ];
}
var Ah = (e, t, n) => Array.isArray(e) ? (jt(e[n]) && (e[n] = void 0), e.splice(n, 0, e.splice(t, 1)[0]), e) : [], _h = (e, t) => [
  ...ro(t),
  ...ro(e)
];
function c9(e, t) {
  let n = 0;
  const o = [...e];
  for (const r of t)
    o.splice(r - n, 1), n++;
  return Zc(o).length ? o : [];
}
var Dh = (e, t) => jt(t) ? [] : c9(e, ro(t).sort((n, o) => n - o)), Lh = (e, t, n) => {
  [e[t], e[n]] = [e[n], e[t]];
}, MS = (e, t, n) => (e[t] = n, e);
function Ite(e) {
  const t = Io(), { control: n = t.control, name: o, keyName: r = "id", shouldUnregister: i, rules: s } = e, [l, c] = Z.useState(n._getFieldArray(o)), u = Z.useRef(n._getFieldArray(o).map(ri)), d = Z.useRef(l), f = Z.useRef(o), p = Z.useRef(!1);
  f.current = o, d.current = l, n._names.array.add(o), s && n.register(o, s), Z.useEffect(() => n._subjects.array.subscribe({
    next: ({ values: C, name: E }) => {
      if (E === f.current || !E) {
        const P = $e(C, f.current);
        Array.isArray(P) && (c(P), u.current = P.map(ri));
      }
    }
  }).unsubscribe, [n]);
  const h = Z.useCallback((C) => {
    p.current = !0, n._setFieldArray(o, C);
  }, [n, o]), g = (C, E) => {
    const P = ro(Zt(C)), M = $h(n._getFieldArray(o), P);
    n._names.focus = kh(o, M.length - 1, E), u.current = $h(u.current, P.map(ri)), h(M), c(M), n._setFieldArray(o, M, $h, {
      argA: Nh(C)
    });
  }, m = (C, E) => {
    const P = ro(Zt(C)), M = _h(n._getFieldArray(o), P);
    n._names.focus = kh(o, 0, E), u.current = _h(u.current, P.map(ri)), h(M), c(M), n._setFieldArray(o, M, _h, {
      argA: Nh(C)
    });
  }, y = (C) => {
    const E = Dh(n._getFieldArray(o), C);
    u.current = Dh(u.current, C), h(E), c(E), !Array.isArray($e(n._fields, o)) && bt(n._fields, o, void 0), n._setFieldArray(o, E, Dh, {
      argA: C
    });
  }, b = (C, E, P) => {
    const M = ro(Zt(E)), x = Mh(n._getFieldArray(o), C, M);
    n._names.focus = kh(o, C, P), u.current = Mh(u.current, C, M.map(ri)), h(x), c(x), n._setFieldArray(o, x, Mh, {
      argA: C,
      argB: Nh(E)
    });
  }, T = (C, E) => {
    const P = n._getFieldArray(o);
    Lh(P, C, E), Lh(u.current, C, E), h(P), c(P), n._setFieldArray(o, P, Lh, {
      argA: C,
      argB: E
    }, !1);
  }, v = (C, E) => {
    const P = n._getFieldArray(o);
    Ah(P, C, E), Ah(u.current, C, E), h(P), c(P), n._setFieldArray(o, P, Ah, {
      argA: C,
      argB: E
    }, !1);
  }, w = (C, E) => {
    const P = Zt(E), M = MS(n._getFieldArray(o), C, P);
    u.current = [...M].map((x, I) => !x || I === C ? ri() : u.current[I]), h(M), c([...M]), n._setFieldArray(o, M, MS, {
      argA: C,
      argB: P
    }, !0, !1);
  }, S = (C) => {
    const E = ro(Zt(C));
    u.current = E.map(ri), h([...E]), c([...E]), n._setFieldArray(o, [...E], (P) => P, {}, !0, !1);
  };
  return Z.useEffect(() => {
    if (n._state.action = !1, sg(o, n._names) && n._subjects.state.next({
      ...n._formState
    }), p.current && (!Ks(n._options.mode).isOnSubmit || n._formState.isSubmitted) && !Ks(n._options.reValidateMode).isOnSubmit)
      if (n._options.resolver)
        n._runSchema([o]).then((C) => {
          const E = $e(C.errors, o), P = $e(n._formState.errors, o);
          (P ? !E && P.type || E && (P.type !== E.type || P.message !== E.message) : E && E.type) && (E ? bt(n._formState.errors, o, E) : mn(n._formState.errors, o), n._subjects.state.next({
            errors: n._formState.errors
          }));
        });
      else {
        const C = $e(n._fields, o);
        C && C._f && !(Ks(n._options.reValidateMode).isOnSubmit && Ks(n._options.mode).isOnSubmit) && ag(C, n._names.disabled, n._formValues, n._options.criteriaMode === Bo.all, n._options.shouldUseNativeValidation, !0).then((E) => !Ln(E) && n._subjects.state.next({
          errors: lI(n._formState.errors, E, o)
        }));
      }
    n._subjects.state.next({
      name: o,
      values: Zt(n._formValues)
    }), n._names.focus && ea(n._fields, (C, E) => {
      if (n._names.focus && E.startsWith(n._names.focus) && C.focus)
        return C.focus(), 1;
    }), n._names.focus = "", n._setValid(), p.current = !1;
  }, [l, o, n]), Z.useEffect(() => (!$e(n._formValues, o) && n._setFieldArray(o), () => {
    const C = (E, P) => {
      const M = $e(n._fields, E);
      M && M._f && (M._f.mount = P);
    };
    n._options.shouldUnregister || i ? n.unregister(o) : C(o, !1);
  }), [o, n, r, i]), {
    swap: Z.useCallback(T, [h, o, n]),
    move: Z.useCallback(v, [h, o, n]),
    prepend: Z.useCallback(m, [h, o, n]),
    append: Z.useCallback(g, [h, o, n]),
    remove: Z.useCallback(y, [h, o, n]),
    insert: Z.useCallback(b, [h, o, n]),
    update: Z.useCallback(w, [h, o, n]),
    replace: Z.useCallback(S, [h, o, n]),
    fields: Z.useMemo(() => l.map((C, E) => ({
      ...C,
      [r]: u.current[E] || ri()
    })), [l, r])
  };
}
function kte(e = {}) {
  const t = Z.useRef(void 0), n = Z.useRef(void 0), [o, r] = Z.useState({
    isDirty: !1,
    isValidating: !1,
    isLoading: Qo(e.defaultValues),
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    submitCount: 0,
    dirtyFields: {},
    touchedFields: {},
    validatingFields: {},
    errors: e.errors || {},
    disabled: e.disabled || !1,
    defaultValues: Qo(e.defaultValues) ? void 0 : e.defaultValues
  });
  t.current || (t.current = {
    ...e.formControl ? e.formControl : l9(e),
    formState: o
  }, e.formControl && e.defaultValues && !Qo(e.defaultValues) && e.formControl.reset(e.defaultValues, e.resetOptions));
  const i = t.current.control;
  return i._options = e, Z.useLayoutEffect(() => i._subscribe({
    formState: i._proxyFormState,
    callback: () => r({ ...i._formState }),
    reRenderRoot: !0
  }), [i]), Z.useEffect(() => i._disableForm(e.disabled), [i, e.disabled]), Z.useEffect(() => {
    if (i._proxyFormState.isDirty) {
      const s = i._getDirty();
      s !== o.isDirty && i._subjects.state.next({
        isDirty: s
      });
    }
  }, [i, o.isDirty]), Z.useEffect(() => {
    e.values && !ui(e.values, n.current) ? (i._reset(e.values, i._options.resetOptions), n.current = e.values, r((s) => ({ ...s }))) : i._resetDefaultValues();
  }, [e.values, i]), Z.useEffect(() => {
    e.errors && !Ln(e.errors) && i._setErrors(e.errors);
  }, [e.errors, i]), Z.useEffect(() => {
    i._state.mount || (i._setValid(), i._state.mount = !0), i._state.watch && (i._state.watch = !1, i._subjects.state.next({ ...i._formState })), i._removeUnmounted();
  }), Z.useEffect(() => {
    e.shouldUnregister && i._subjects.state.next({
      values: i._getWatch()
    });
  }, [e.shouldUnregister, i]), t.current.formState = JR(o, i), t.current;
}
const AS = (e, t, n) => {
  if (e && "reportValidity" in e) {
    const o = $e(n, t);
    e.setCustomValidity(o && o.message || ""), e.reportValidity();
  }
}, cI = (e, t) => {
  for (const n in t.fields) {
    const o = t.fields[n];
    o && o.ref && "reportValidity" in o.ref ? AS(o.ref, n, e) : o && o.refs && o.refs.forEach((r) => AS(r, n, e));
  }
}, u9 = (e, t) => {
  t.shouldUseNativeValidation && cI(e, t);
  const n = {};
  for (const o in e) {
    const r = $e(t.fields, o), i = Object.assign(e[o] || {}, { ref: r && r.ref });
    if (d9(t.names || Object.keys(e), o)) {
      const s = Object.assign({}, $e(n, o));
      bt(s, "root", i), bt(n, o, s);
    } else bt(n, o, i);
  }
  return n;
}, d9 = (e, t) => {
  const n = _S(t);
  return e.some((o) => _S(o).match(`^${n}\\.\\d+`));
};
function _S(e) {
  return e.replace(/\]|\[/g, "");
}
function f9(e, t) {
  for (var n = {}; e.length; ) {
    var o = e[0], r = o.code, i = o.message, s = o.path.join(".");
    if (!n[s]) if ("unionErrors" in o) {
      var l = o.unionErrors[0].errors[0];
      n[s] = { message: l.message, type: l.code };
    } else n[s] = { message: i, type: r };
    if ("unionErrors" in o && o.unionErrors.forEach(function(d) {
      return d.errors.forEach(function(f) {
        return e.push(f);
      });
    }), t) {
      var c = n[s].types, u = c && c[o.code];
      n[s] = tI(s, t, n, r, u ? [].concat(u, o.message) : o.message);
    }
    e.shift();
  }
  return n;
}
function $te(e, t, n) {
  return n === void 0 && (n = {}), function(o, r, i) {
    try {
      return Promise.resolve(function(s, l) {
        try {
          var c = Promise.resolve(e[n.mode === "sync" ? "parse" : "parseAsync"](o, t)).then(function(u) {
            return i.shouldUseNativeValidation && cI({}, i), { errors: {}, values: n.raw ? Object.assign({}, o) : u };
          });
        } catch (u) {
          return l(u);
        }
        return c && c.then ? c.then(void 0, l) : c;
      }(0, function(s) {
        if (function(l) {
          return Array.isArray(l == null ? void 0 : l.errors);
        }(s)) return { values: {}, errors: u9(f9(s.errors, !i.shouldUseNativeValidation && i.criteriaMode === "all"), i) };
        throw s;
      }));
    } catch (s) {
      return Promise.reject(s);
    }
  };
}
function p9({
  children: e,
  formInstance: t,
  onSubmit: n
}) {
  const { handleSubmit: o, trigger: r } = t;
  return et(() => {
    r();
  }, [r]), t ? /* @__PURE__ */ O(K7, { ...t, children: /* @__PURE__ */ O(Ho, { component: "form", autoComplete: "off", onSubmit: o(n), children: e }) }) : null;
}
const Nte = Pe(p9), h9 = Pe(({ name: e, ...t }) => {
  const { control: n } = Io();
  return /* @__PURE__ */ O(
    Di,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: o, value: r, ref: i }, fieldState: { error: s } }) => /* @__PURE__ */ O(
        mP,
        {
          ...t,
          value: r,
          onChange: o,
          inputRef: i,
          isError: !!s
        }
      )
    }
  );
});
h9.displayName = "CheckboxUncontrolled";
function m9({
  isSubmitting: e,
  submitButtonText: t = "Submit",
  cancelButtonText: n = "Cancel"
}) {
  const o = Io();
  if (!o)
    return null;
  const { formState: r, reset: i, trigger: s } = o, { isValid: l, isSubmitting: c, defaultValues: u } = r;
  return /* @__PURE__ */ Se(bn, { row: !0, mt: "32px", children: [
    /* @__PURE__ */ O(
      Mn,
      {
        type: "reset",
        text: n,
        isOutlined: !0,
        disabled: e || c,
        onClick: () => {
          i(u), s();
        }
      }
    ),
    /* @__PURE__ */ O(
      Mn,
      {
        type: "submit",
        text: t,
        loading: e || c,
        disabled: !l
      }
    )
  ] });
}
m9.displayName = "FormUncontrolledAction";
const g9 = Pe(({ name: e, ...t }) => {
  const { control: n } = Io();
  return /* @__PURE__ */ O(
    Di,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: o, onBlur: r, value: i, ref: s }, fieldState: { error: l } }) => /* @__PURE__ */ O(
        Yf,
        {
          ...t,
          value: i,
          onChange: o,
          onBlur: r,
          inputRef: s,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
g9.displayName = "InputUncontrolled";
const y9 = Pe(({ name: e, ...t }) => {
  const { control: n } = Io();
  return /* @__PURE__ */ O(
    Di,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: o, onBlur: r, value: i, ref: s }, fieldState: { error: l } }) => /* @__PURE__ */ O(
        bP,
        {
          ...t,
          value: i,
          onChange: o,
          onBlur: r,
          inputRef: s,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || "　"
        }
      )
    }
  );
});
y9.displayName = "NumberInputUncontrolled";
const b9 = Pe(({ name: e, ...t }) => {
  const { control: n } = Io();
  return /* @__PURE__ */ O(
    Di,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: o, onBlur: r, value: i, ref: s }, fieldState: { error: l } }) => /* @__PURE__ */ O(
        TR,
        {
          ...t,
          value: i,
          onChange: o,
          onBlur: r,
          inputRef: s,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
b9.displayName = "OtpInputUncontrolled";
const v9 = Pe(({ name: e, ...t }) => {
  const { control: n } = Io();
  return /* @__PURE__ */ O(
    Di,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: o, onBlur: r, value: i, ref: s }, fieldState: { error: l } }) => /* @__PURE__ */ O(
        CR,
        {
          ...t,
          value: i,
          onChange: o,
          onBlur: r,
          inputRef: s,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
v9.displayName = "PasswordUncontrolled";
const x9 = [], w9 = Pe(
  ({ name: e, options: t = x9, ...n }) => {
    const { control: o } = Io();
    return /* @__PURE__ */ O(
      Di,
      {
        control: o,
        name: e,
        render: ({ field: { onChange: r, value: i, ref: s }, fieldState: { error: l } }) => /* @__PURE__ */ O(
          PR,
          {
            ...n,
            name: e,
            options: t,
            value: i,
            onChange: (c) => r(c.value),
            inputRef: s,
            isError: !!l
          }
        )
      }
    );
  }
);
w9.displayName = "RadiosUncontrolled";
const S9 = [], T9 = Pe(
  ({ name: e, options: t = S9, ...n }) => {
    const { control: o } = Io();
    return /* @__PURE__ */ O(
      Di,
      {
        control: o,
        name: e,
        render: ({ field: { onChange: r, onBlur: i, value: s, ref: l }, fieldState: { error: c } }) => /* @__PURE__ */ O(
          qR,
          {
            ...n,
            options: t,
            value: s,
            onChange: (u) => r(u == null ? void 0 : u.value),
            onBlur: i,
            inputRef: l,
            isError: !!c,
            errorMessage: (c == null ? void 0 : c.message) || "　"
          }
        )
      }
    );
  }
);
T9.displayName = "SelectUncontrolled";
const C9 = Pe(({ name: e, ...t }) => {
  const { control: n } = Io();
  return /* @__PURE__ */ O(
    Di,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: o, value: r, ref: i } }) => /* @__PURE__ */ O(_b, { ...t, value: r, onChange: o, inputRef: i })
    }
  );
});
C9.displayName = "SwitchUncontrolled";
const Vs = {
  xs: 1,
  // 1行1个
  sm: 1,
  // 1行1个
  md: 2,
  // 1行2个
  lg: 3,
  // 1行3个
  xl: 4
  // 1行4个
}, E9 = [], DS = (e) => {
  let t;
  const n = /* @__PURE__ */ new Set(), o = (u, d) => {
    const f = typeof u == "function" ? u(t) : u;
    if (!Object.is(f, t)) {
      const p = t;
      t = d ?? (typeof f != "object" || f === null) ? f : Object.assign({}, t, f), n.forEach((h) => h(t, p));
    }
  }, r = () => t, l = { setState: o, getState: r, getInitialState: () => c, subscribe: (u) => (n.add(u), () => n.delete(u)) }, c = t = e(o, r, l);
  return l;
}, uI = (e) => e ? DS(e) : DS, O9 = (e) => e;
function Yr(e, t = O9) {
  const n = Z.useSyncExternalStore(
    e.subscribe,
    () => t(e.getState()),
    () => t(e.getInitialState())
  );
  return Z.useDebugValue(n), n;
}
const LS = (e) => {
  const t = uI(e), n = (o) => Yr(t, o);
  return Object.assign(n, t), n;
}, Li = (e) => e ? LS(e) : LS, BS = { BASE_URL: "/", DEV: !1, MODE: "production", PROD: !0, SSR: !1 }, lg = /* @__PURE__ */ new Map(), Nu = (e) => {
  const t = lg.get(e);
  return t ? Object.fromEntries(
    Object.entries(t.stores).map(([n, o]) => [n, o.getState()])
  ) : {};
}, P9 = (e, t, n) => {
  if (e === void 0)
    return {
      type: "untracked",
      connection: t.connect(n)
    };
  const o = lg.get(n.name);
  if (o)
    return { type: "tracked", store: e, ...o };
  const r = {
    connection: t.connect(n),
    stores: {}
  };
  return lg.set(n.name, r), { type: "tracked", store: e, ...r };
}, R9 = (e, t = {}) => (n, o, r) => {
  const { enabled: i, anonymousActionType: s, store: l, ...c } = t;
  let u;
  try {
    u = (i ?? (BS ? "production" : void 0) !== "production") && window.__REDUX_DEVTOOLS_EXTENSION__;
  } catch {
  }
  if (!u)
    return e(n, o, r);
  const { connection: d, ...f } = P9(l, u, c);
  let p = !0;
  r.setState = (m, y, b) => {
    const T = n(m, y);
    if (!p) return T;
    const v = b === void 0 ? { type: s || "anonymous" } : typeof b == "string" ? { type: b } : b;
    return l === void 0 ? (d == null || d.send(v, o()), T) : (d == null || d.send(
      {
        ...v,
        type: `${l}/${v.type}`
      },
      {
        ...Nu(c.name),
        [l]: r.getState()
      }
    ), T);
  };
  const h = (...m) => {
    const y = p;
    p = !1, n(...m), p = y;
  }, g = e(r.setState, o, r);
  if (f.type === "untracked" ? d == null || d.init(g) : (f.stores[f.store] = r, d == null || d.init(
    Object.fromEntries(
      Object.entries(f.stores).map(([m, y]) => [
        m,
        m === f.store ? g : y.getState()
      ])
    )
  )), r.dispatchFromDevtools && typeof r.dispatch == "function") {
    let m = !1;
    const y = r.dispatch;
    r.dispatch = (...b) => {
      (BS ? "production" : void 0) !== "production" && b[0].type === "__setState" && !m && (console.warn(
        '[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'
      ), m = !0), y(...b);
    };
  }
  return d.subscribe((m) => {
    var y;
    switch (m.type) {
      case "ACTION":
        if (typeof m.payload != "string") {
          console.error(
            "[zustand devtools middleware] Unsupported action format"
          );
          return;
        }
        return Bh(
          m.payload,
          (b) => {
            if (b.type === "__setState") {
              if (l === void 0) {
                h(b.state);
                return;
              }
              Object.keys(b.state).length !== 1 && console.error(
                `
                    [zustand devtools middleware] Unsupported __setState action format.
                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),
                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }
                    `
              );
              const T = b.state[l];
              if (T == null)
                return;
              JSON.stringify(r.getState()) !== JSON.stringify(T) && h(T);
              return;
            }
            r.dispatchFromDevtools && typeof r.dispatch == "function" && r.dispatch(b);
          }
        );
      case "DISPATCH":
        switch (m.payload.type) {
          case "RESET":
            return h(g), l === void 0 ? d == null ? void 0 : d.init(r.getState()) : d == null ? void 0 : d.init(Nu(c.name));
          case "COMMIT":
            if (l === void 0) {
              d == null || d.init(r.getState());
              return;
            }
            return d == null ? void 0 : d.init(Nu(c.name));
          case "ROLLBACK":
            return Bh(m.state, (b) => {
              if (l === void 0) {
                h(b), d == null || d.init(r.getState());
                return;
              }
              h(b[l]), d == null || d.init(Nu(c.name));
            });
          case "JUMP_TO_STATE":
          case "JUMP_TO_ACTION":
            return Bh(m.state, (b) => {
              if (l === void 0) {
                h(b);
                return;
              }
              JSON.stringify(r.getState()) !== JSON.stringify(b[l]) && h(b[l]);
            });
          case "IMPORT_STATE": {
            const { nextLiftedState: b } = m.payload, T = (y = b.computedStates.slice(-1)[0]) == null ? void 0 : y.state;
            if (!T) return;
            h(l === void 0 ? T : T[l]), d == null || d.send(
              null,
              // FIXME no-any
              b
            );
            return;
          }
          case "PAUSE_RECORDING":
            return p = !p;
        }
        return;
    }
  }), g;
}, vs = R9, Bh = (e, t) => {
  let n;
  try {
    n = JSON.parse(e);
  } catch (o) {
    console.error(
      "[zustand devtools middleware] Could not parse the received json",
      o
    );
  }
  n !== void 0 && t(n);
};
function I9(e, t) {
  let n;
  try {
    n = e();
  } catch {
    return;
  }
  return {
    getItem: (r) => {
      var i;
      const s = (c) => c === null ? null : JSON.parse(c, void 0), l = (i = n.getItem(r)) != null ? i : null;
      return l instanceof Promise ? l.then(s) : s(l);
    },
    setItem: (r, i) => n.setItem(
      r,
      JSON.stringify(i, void 0)
    ),
    removeItem: (r) => n.removeItem(r)
  };
}
const cg = (e) => (t) => {
  try {
    const n = e(t);
    return n instanceof Promise ? n : {
      then(o) {
        return cg(o)(n);
      },
      catch(o) {
        return this;
      }
    };
  } catch (n) {
    return {
      then(o) {
        return this;
      },
      catch(o) {
        return cg(o)(n);
      }
    };
  }
}, k9 = (e, t) => (n, o, r) => {
  let i = {
    storage: I9(() => localStorage),
    partialize: (m) => m,
    version: 0,
    merge: (m, y) => ({
      ...y,
      ...m
    }),
    ...t
  }, s = !1;
  const l = /* @__PURE__ */ new Set(), c = /* @__PURE__ */ new Set();
  let u = i.storage;
  if (!u)
    return e(
      (...m) => {
        console.warn(
          `[zustand persist middleware] Unable to update item '${i.name}', the given storage is currently unavailable.`
        ), n(...m);
      },
      o,
      r
    );
  const d = () => {
    const m = i.partialize({ ...o() });
    return u.setItem(i.name, {
      state: m,
      version: i.version
    });
  }, f = r.setState;
  r.setState = (m, y) => {
    f(m, y), d();
  };
  const p = e(
    (...m) => {
      n(...m), d();
    },
    o,
    r
  );
  r.getInitialState = () => p;
  let h;
  const g = () => {
    var m, y;
    if (!u) return;
    s = !1, l.forEach((T) => {
      var v;
      return T((v = o()) != null ? v : p);
    });
    const b = ((y = i.onRehydrateStorage) == null ? void 0 : y.call(i, (m = o()) != null ? m : p)) || void 0;
    return cg(u.getItem.bind(u))(i.name).then((T) => {
      if (T)
        if (typeof T.version == "number" && T.version !== i.version) {
          if (i.migrate) {
            const v = i.migrate(
              T.state,
              T.version
            );
            return v instanceof Promise ? v.then((w) => [!0, w]) : [!0, v];
          }
          console.error(
            "State loaded from storage couldn't be migrated since no migrate function was provided"
          );
        } else
          return [!1, T.state];
      return [!1, void 0];
    }).then((T) => {
      var v;
      const [w, S] = T;
      if (h = i.merge(
        S,
        (v = o()) != null ? v : p
      ), n(h, !0), w)
        return d();
    }).then(() => {
      b == null || b(h, void 0), h = o(), s = !0, c.forEach((T) => T(h));
    }).catch((T) => {
      b == null || b(void 0, T);
    });
  };
  return r.persist = {
    setOptions: (m) => {
      i = {
        ...i,
        ...m
      }, m.storage && (u = m.storage);
    },
    clearStorage: () => {
      u == null || u.removeItem(i.name);
    },
    getOptions: () => i,
    rehydrate: () => g(),
    hasHydrated: () => s,
    onHydrate: (m) => (l.add(m), () => {
      l.delete(m);
    }),
    onFinishHydration: (m) => (c.add(m), () => {
      c.delete(m);
    })
  }, i.skipHydration || g(), h || p;
}, dI = k9;
function VS() {
  return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
const $9 = Li()(
  vs(
    dI(
      (e) => ({
        themeMode: VS(),
        setThemeMode: (t) => e({ themeMode: t }),
        toggleThemeMode: () => e((t) => ({ themeMode: t.themeMode === "dark" ? "light" : "dark" })),
        resetThemeMode: () => e({ themeMode: VS() })
      }),
      {
        name: "VENOMOUS_UI__THEME_MODE"
      }
    )
  )
);
function vp() {
  const e = Yr($9);
  return {
    ...e,
    isDarkMode: e.themeMode === "dark"
  };
}
function fI(e) {
  return {
    origin: e,
    light: Ma(e, 0.5),
    dark: Na(e, 0.5),
    opacity: vt(e, 0.2)
  };
}
var pI = /* @__PURE__ */ ((e) => (e.Iron = "Iron", e.Cyan = "Cyan", e.Teal = "Teal", e.Coral = "Coral", e.Amber = "Amber", e.Ochre = "Ochre", e))(pI || {});
const hI = {
  Iron: "#90a4ae",
  Cyan: "#00bcd4",
  Teal: "#009688",
  Coral: "#FFA07A",
  Amber: "#ffb300",
  Ochre: "#E3D026"
};
function ug(e) {
  const t = hI[e], { light: n, dark: o, opacity: r } = fI(t);
  return {
    main: t,
    light: n,
    dark: o,
    opacity: r,
    contrastText: "#fff",
    error: "#f44336"
  };
}
const N9 = Li()(
  vs(
    dI(
      (e) => ({
        themePaletteName: "Cyan",
        themePalette: ug(
          "Cyan"
          /* Cyan */
        ),
        setThemePaletteName: (t) => e({ themePaletteName: t, themePalette: ug(t) })
      }),
      {
        name: "VENOMOUS_UI__THEME_PALETTE"
      }
    )
  )
);
function Fb() {
  return {
    ...N9(),
    allPaletteNames: Object.keys(pI),
    allPaletteMainColors: hI
  };
}
const il = FT({
  themeId: tr
});
function M9() {
  const { breakpoints: e } = Zr(), t = il(e.down("sm")), n = il(e.between("sm", "md")), o = il(e.between("md", "lg")), r = il(e.between("lg", "xl")), i = il(e.up("xl")), s = Ge(() => {
    var l;
    return ((l = [
      ["xs", t],
      ["sm", n],
      ["md", o],
      ["lg", r],
      ["xl", i]
    ].find(([, c]) => c)) == null ? void 0 : l[0].toString()) || "xs";
  }, [t, n, o, r, i]);
  return {
    isXs: t,
    isSm: n,
    isMd: o,
    isLg: r,
    isXl: i,
    breakpoints: {
      current: s,
      unit: "px",
      values: {
        xs: 0,
        sm: 600,
        md: 900,
        lg: 1200,
        xl: 1536
      }
    }
  };
}
function Mte() {
  return (e) => e;
}
function A9() {
  const e = zq(), [t, n] = Yt(!1), o = Be(() => {
    t ? document.exitFullscreen().then(() => {
      n(!1);
    }).catch(() => {
      e({
        type: "error",
        title: "Error",
        description: "Error attempting to disable full-screen mode"
      });
    }) : document.documentElement.requestFullscreen().then(() => {
      n(!0);
    }).catch(() => {
      e({
        type: "error",
        title: "Error",
        description: "Error attempting to enable full-screen mode"
      });
    });
  }, [t, e]);
  return et(() => {
    const r = () => {
      n(document.fullscreenElement !== null);
    };
    return document.addEventListener("fullscreenchange", r), () => {
      document.removeEventListener("fullscreenchange", r);
    };
  }, []), {
    isFullScreen: t,
    setIsFullScreen: n,
    toggleFullScreen: o
  };
}
function _9({
  gridStyle: e,
  cols: t
}) {
  const { isXs: n, isSm: o, isMd: r, isLg: i } = M9(), s = Ge(() => {
    let c;
    return n ? c = (t == null ? void 0 : t.xs) ?? Vs.xs : o ? c = (t == null ? void 0 : t.sm) ?? Vs.sm : r ? c = (t == null ? void 0 : t.md) ?? Vs.md : i ? c = (t == null ? void 0 : t.lg) ?? Vs.lg : c = (t == null ? void 0 : t.xl) ?? Vs.xl, `${100 / c}%`;
  }, [n, o, r, i, t]);
  return {
    gridComponents: Ge(
      () => ({
        List: ({ ref: c, style: u, children: d, ...f }) => /* @__PURE__ */ O(
          "div",
          {
            ref: c,
            ...f,
            style: { display: "flex", flexWrap: "wrap", ...u, ...e },
            children: d
          }
        ),
        Item: ({ children: c, ...u }) => /* @__PURE__ */ O(
          "div",
          {
            ...u,
            style: {
              width: s,
              display: "flex",
              boxSizing: "border-box",
              flex: "none",
              alignContent: "stretch"
            },
            children: c
          }
        )
      }),
      [s, e]
    )
  };
}
const D9 = ({
  height: e,
  width: t,
  items: n = E9,
  renderGridItem: o,
  gridStyle: r,
  cols: i = Vs
}) => {
  const { gridComponents: s } = _9({ gridStyle: r, cols: i });
  return /* @__PURE__ */ O(
    bn,
    {
      className: "VenomousUI-Grid",
      sx: {
        height: e || "100%",
        width: t || "100%",
        "& > *": {
          flex: "unset",
          width: "100%"
        }
      },
      children: /* @__PURE__ */ O(
        j5,
        {
          style: { height: "100%" },
          totalCount: n.length,
          components: s,
          itemContent: (l) => o(n[l], l)
        }
      )
    }
  );
}, L9 = Pe(D9);
var Vh = { exports: {} }, FS;
function B9() {
  return FS || (FS = 1, (() => {
    var e = { 296: (r, i, s) => {
      var l = /^\s+|\s+$/g, c = /^[-+]0x[0-9a-f]+$/i, u = /^0b[01]+$/i, d = /^0o[0-7]+$/i, f = parseInt, p = typeof s.g == "object" && s.g && s.g.Object === Object && s.g, h = typeof self == "object" && self && self.Object === Object && self, g = p || h || Function("return this")(), m = Object.prototype.toString, y = Math.max, b = Math.min, T = function() {
        return g.Date.now();
      };
      function v(S) {
        var C = typeof S;
        return !!S && (C == "object" || C == "function");
      }
      function w(S) {
        if (typeof S == "number") return S;
        if (function(P) {
          return typeof P == "symbol" || /* @__PURE__ */ function(M) {
            return !!M && typeof M == "object";
          }(P) && m.call(P) == "[object Symbol]";
        }(S)) return NaN;
        if (v(S)) {
          var C = typeof S.valueOf == "function" ? S.valueOf() : S;
          S = v(C) ? C + "" : C;
        }
        if (typeof S != "string") return S === 0 ? S : +S;
        S = S.replace(l, "");
        var E = u.test(S);
        return E || d.test(S) ? f(S.slice(2), E ? 2 : 8) : c.test(S) ? NaN : +S;
      }
      r.exports = function(S, C, E) {
        var P, M, x, I, k, _, R = 0, A = !1, N = !1, L = !0;
        if (typeof S != "function") throw new TypeError("Expected a function");
        function V(q) {
          var G = P, K = M;
          return P = M = void 0, R = q, I = S.apply(K, G);
        }
        function D(q) {
          var G = q - _;
          return _ === void 0 || G >= C || G < 0 || N && q - R >= x;
        }
        function B() {
          var q = T();
          if (D(q)) return F(q);
          k = setTimeout(B, function(G) {
            var K = C - (G - _);
            return N ? b(K, x - (G - R)) : K;
          }(q));
        }
        function F(q) {
          return k = void 0, L && P ? V(q) : (P = M = void 0, I);
        }
        function U() {
          var q = T(), G = D(q);
          if (P = arguments, M = this, _ = q, G) {
            if (k === void 0) return function(K) {
              return R = K, k = setTimeout(B, C), A ? V(K) : I;
            }(_);
            if (N) return k = setTimeout(B, C), V(_);
          }
          return k === void 0 && (k = setTimeout(B, C)), I;
        }
        return C = w(C) || 0, v(E) && (A = !!E.leading, x = (N = "maxWait" in E) ? y(w(E.maxWait) || 0, C) : x, L = "trailing" in E ? !!E.trailing : L), U.cancel = function() {
          k !== void 0 && clearTimeout(k), R = 0, P = _ = M = k = void 0;
        }, U.flush = function() {
          return k === void 0 ? I : F(T());
        }, U;
      };
    }, 96: (r, i, s) => {
      var l = "Expected a function", c = NaN, u = "[object Symbol]", d = /^\s+|\s+$/g, f = /^[-+]0x[0-9a-f]+$/i, p = /^0b[01]+$/i, h = /^0o[0-7]+$/i, g = parseInt, m = typeof s.g == "object" && s.g && s.g.Object === Object && s.g, y = typeof self == "object" && self && self.Object === Object && self, b = m || y || Function("return this")(), T = Object.prototype.toString, v = Math.max, w = Math.min, S = function() {
        return b.Date.now();
      };
      function C(P) {
        var M = typeof P;
        return !!P && (M == "object" || M == "function");
      }
      function E(P) {
        if (typeof P == "number") return P;
        if (function(I) {
          return typeof I == "symbol" || /* @__PURE__ */ function(k) {
            return !!k && typeof k == "object";
          }(I) && T.call(I) == u;
        }(P)) return c;
        if (C(P)) {
          var M = typeof P.valueOf == "function" ? P.valueOf() : P;
          P = C(M) ? M + "" : M;
        }
        if (typeof P != "string") return P === 0 ? P : +P;
        P = P.replace(d, "");
        var x = p.test(P);
        return x || h.test(P) ? g(P.slice(2), x ? 2 : 8) : f.test(P) ? c : +P;
      }
      r.exports = function(P, M, x) {
        var I = !0, k = !0;
        if (typeof P != "function") throw new TypeError(l);
        return C(x) && (I = "leading" in x ? !!x.leading : I, k = "trailing" in x ? !!x.trailing : k), function(_, R, A) {
          var N, L, V, D, B, F, U = 0, q = !1, G = !1, K = !0;
          if (typeof _ != "function") throw new TypeError(l);
          function te(re) {
            var z = N, de = L;
            return N = L = void 0, U = re, D = _.apply(de, z);
          }
          function ne(re) {
            var z = re - F;
            return F === void 0 || z >= R || z < 0 || G && re - U >= V;
          }
          function W() {
            var re = S();
            if (ne(re)) return ee(re);
            B = setTimeout(W, function(z) {
              var de = R - (z - F);
              return G ? w(de, V - (z - U)) : de;
            }(re));
          }
          function ee(re) {
            return B = void 0, K && N ? te(re) : (N = L = void 0, D);
          }
          function Y() {
            var re = S(), z = ne(re);
            if (N = arguments, L = this, F = re, z) {
              if (B === void 0) return function(de) {
                return U = de, B = setTimeout(W, R), q ? te(de) : D;
              }(F);
              if (G) return B = setTimeout(W, R), te(F);
            }
            return B === void 0 && (B = setTimeout(W, R)), D;
          }
          return R = E(R) || 0, C(A) && (q = !!A.leading, V = (G = "maxWait" in A) ? v(E(A.maxWait) || 0, R) : V, K = "trailing" in A ? !!A.trailing : K), Y.cancel = function() {
            B !== void 0 && clearTimeout(B), U = 0, N = F = L = B = void 0;
          }, Y.flush = function() {
            return B === void 0 ? D : ee(S());
          }, Y;
        }(P, M, { leading: I, maxWait: M, trailing: k });
      };
    }, 703: (r, i, s) => {
      var l = s(414);
      function c() {
      }
      function u() {
      }
      u.resetWarningCache = c, r.exports = function() {
        function d(h, g, m, y, b, T) {
          if (T !== l) {
            var v = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
            throw v.name = "Invariant Violation", v;
          }
        }
        function f() {
          return d;
        }
        d.isRequired = d;
        var p = { array: d, bigint: d, bool: d, func: d, number: d, object: d, string: d, symbol: d, any: d, arrayOf: f, element: d, elementType: d, instanceOf: f, node: d, objectOf: f, oneOf: f, oneOfType: f, shape: f, exact: f, checkPropTypes: u, resetWarningCache: c };
        return p.PropTypes = p, p;
      };
    }, 697: (r, i, s) => {
      r.exports = s(703)();
    }, 414: (r) => {
      r.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    } }, t = {};
    function n(r) {
      var i = t[r];
      if (i !== void 0) return i.exports;
      var s = t[r] = { exports: {} };
      return e[r](s, s.exports, n), s.exports;
    }
    n.n = (r) => {
      var i = r && r.__esModule ? () => r.default : () => r;
      return n.d(i, { a: i }), i;
    }, n.d = (r, i) => {
      for (var s in i) n.o(i, s) && !n.o(r, s) && Object.defineProperty(r, s, { enumerable: !0, get: i[s] });
    }, n.g = function() {
      if (typeof globalThis == "object") return globalThis;
      try {
        return this || new Function("return this")();
      } catch {
        if (typeof window == "object") return window;
      }
    }(), n.o = (r, i) => Object.prototype.hasOwnProperty.call(r, i), n.r = (r) => {
      typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(r, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(r, "__esModule", { value: !0 });
    };
    var o = {};
    (() => {
      n.r(o), n.d(o, { LazyLoadComponent: () => z, LazyLoadImage: () => ie, trackWindowScroll: () => D });
      const r = Z;
      var i = n.n(r), s = n(697);
      function l() {
        return typeof window < "u" && "IntersectionObserver" in window && "isIntersecting" in window.IntersectionObserverEntry.prototype;
      }
      function c(Q) {
        return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, c(Q);
      }
      function u(Q, H) {
        var X = Object.keys(Q);
        if (Object.getOwnPropertySymbols) {
          var se = Object.getOwnPropertySymbols(Q);
          H && (se = se.filter(function(ye) {
            return Object.getOwnPropertyDescriptor(Q, ye).enumerable;
          })), X.push.apply(X, se);
        }
        return X;
      }
      function d(Q, H, X) {
        return (H = p(H)) in Q ? Object.defineProperty(Q, H, { value: X, enumerable: !0, configurable: !0, writable: !0 }) : Q[H] = X, Q;
      }
      function f(Q, H) {
        for (var X = 0; X < H.length; X++) {
          var se = H[X];
          se.enumerable = se.enumerable || !1, se.configurable = !0, "value" in se && (se.writable = !0), Object.defineProperty(Q, p(se.key), se);
        }
      }
      function p(Q) {
        var H = function(X, se) {
          if (c(X) !== "object" || X === null) return X;
          var ye = X[Symbol.toPrimitive];
          if (ye !== void 0) {
            var he = ye.call(X, "string");
            if (c(he) !== "object") return he;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(X);
        }(Q);
        return c(H) === "symbol" ? H : String(H);
      }
      function h(Q, H) {
        return h = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(X, se) {
          return X.__proto__ = se, X;
        }, h(Q, H);
      }
      function g(Q) {
        return g = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, g(Q);
      }
      var m = function(Q) {
        Q.forEach(function(H) {
          H.isIntersecting && H.target.onVisible();
        });
      }, y = {}, b = function(Q) {
        (function(ae, ce) {
          if (typeof ce != "function" && ce !== null) throw new TypeError("Super expression must either be null or a function");
          ae.prototype = Object.create(ce && ce.prototype, { constructor: { value: ae, writable: !0, configurable: !0 } }), Object.defineProperty(ae, "prototype", { writable: !1 }), ce && h(ae, ce);
        })(le, Q);
        var H, X, se, ye, he = (se = le, ye = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var ae, ce = g(se);
          if (ye) {
            var Te = g(this).constructor;
            ae = Reflect.construct(ce, arguments, Te);
          } else ae = ce.apply(this, arguments);
          return function(Re, oe) {
            if (oe && (c(oe) === "object" || typeof oe == "function")) return oe;
            if (oe !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(be) {
              if (be === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return be;
            }(Re);
          }(this, ae);
        });
        function le(ae) {
          var ce;
          if (function(Re, oe) {
            if (!(Re instanceof oe)) throw new TypeError("Cannot call a class as a function");
          }(this, le), (ce = he.call(this, ae)).supportsObserver = !ae.scrollPosition && ae.useIntersectionObserver && l(), ce.supportsObserver) {
            var Te = ae.threshold;
            ce.observer = function(Re) {
              return y[Re] = y[Re] || new IntersectionObserver(m, { rootMargin: Re + "px" }), y[Re];
            }(Te);
          }
          return ce;
        }
        return H = le, X = [{ key: "componentDidMount", value: function() {
          this.placeholder && this.observer && (this.placeholder.onVisible = this.props.onVisible, this.observer.observe(this.placeholder)), this.supportsObserver || this.updateVisibility();
        } }, { key: "componentWillUnmount", value: function() {
          this.observer && this.placeholder && this.observer.unobserve(this.placeholder);
        } }, { key: "componentDidUpdate", value: function() {
          this.supportsObserver || this.updateVisibility();
        } }, { key: "getPlaceholderBoundingBox", value: function() {
          var ae = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props.scrollPosition, ce = this.placeholder.getBoundingClientRect(), Te = this.placeholder.style, Re = parseInt(Te.getPropertyValue("margin-left"), 10) || 0, oe = parseInt(Te.getPropertyValue("margin-top"), 10) || 0;
          return { bottom: ae.y + ce.bottom + oe, left: ae.x + ce.left + Re, right: ae.x + ce.right + Re, top: ae.y + ce.top + oe };
        } }, { key: "isPlaceholderInViewport", value: function() {
          if (typeof window > "u" || !this.placeholder) return !1;
          var ae = this.props, ce = ae.scrollPosition, Te = ae.threshold, Re = this.getPlaceholderBoundingBox(ce), oe = ce.y + window.innerHeight, be = ce.x, Ne = ce.x + window.innerWidth, We = ce.y;
          return We - Te <= Re.bottom && oe + Te >= Re.top && be - Te <= Re.right && Ne + Te >= Re.left;
        } }, { key: "updateVisibility", value: function() {
          this.isPlaceholderInViewport() && this.props.onVisible();
        } }, { key: "render", value: function() {
          var ae = this, ce = this.props, Te = ce.className, Re = ce.height, oe = ce.placeholder, be = ce.style, Ne = ce.width;
          if (oe && typeof oe.type != "function") return i().cloneElement(oe, { ref: function(Ke) {
            return ae.placeholder = Ke;
          } });
          var We = function(Ke) {
            for (var xt = 1; xt < arguments.length; xt++) {
              var ft = arguments[xt] != null ? arguments[xt] : {};
              xt % 2 ? u(Object(ft), !0).forEach(function(Ct) {
                d(Ke, Ct, ft[Ct]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(Ke, Object.getOwnPropertyDescriptors(ft)) : u(Object(ft)).forEach(function(Ct) {
                Object.defineProperty(Ke, Ct, Object.getOwnPropertyDescriptor(ft, Ct));
              });
            }
            return Ke;
          }({ display: "inline-block" }, be);
          return Ne !== void 0 && (We.width = Ne), Re !== void 0 && (We.height = Re), i().createElement("span", { className: Te, ref: function(Ke) {
            return ae.placeholder = Ke;
          }, style: We }, oe);
        } }], X && f(H.prototype, X), Object.defineProperty(H, "prototype", { writable: !1 }), le;
      }(i().Component);
      b.propTypes = { onVisible: s.PropTypes.func.isRequired, className: s.PropTypes.string, height: s.PropTypes.oneOfType([s.PropTypes.number, s.PropTypes.string]), placeholder: s.PropTypes.element, threshold: s.PropTypes.number, useIntersectionObserver: s.PropTypes.bool, scrollPosition: s.PropTypes.shape({ x: s.PropTypes.number.isRequired, y: s.PropTypes.number.isRequired }), width: s.PropTypes.oneOfType([s.PropTypes.number, s.PropTypes.string]) }, b.defaultProps = { className: "", placeholder: null, threshold: 100, useIntersectionObserver: !0 };
      const T = b;
      var v = n(296), w = n.n(v), S = n(96), C = n.n(S), E = function(Q) {
        var H = getComputedStyle(Q, null);
        return H.getPropertyValue("overflow") + H.getPropertyValue("overflow-y") + H.getPropertyValue("overflow-x");
      };
      const P = function(Q) {
        if (!(Q instanceof HTMLElement)) return window;
        for (var H = Q; H && H instanceof HTMLElement; ) {
          if (/(scroll|auto)/.test(E(H))) return H;
          H = H.parentNode;
        }
        return window;
      };
      function M(Q) {
        return M = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, M(Q);
      }
      var x = ["delayMethod", "delayTime"];
      function I() {
        return I = Object.assign ? Object.assign.bind() : function(Q) {
          for (var H = 1; H < arguments.length; H++) {
            var X = arguments[H];
            for (var se in X) Object.prototype.hasOwnProperty.call(X, se) && (Q[se] = X[se]);
          }
          return Q;
        }, I.apply(this, arguments);
      }
      function k(Q, H) {
        for (var X = 0; X < H.length; X++) {
          var se = H[X];
          se.enumerable = se.enumerable || !1, se.configurable = !0, "value" in se && (se.writable = !0), Object.defineProperty(Q, (ye = function(he, le) {
            if (M(he) !== "object" || he === null) return he;
            var ae = he[Symbol.toPrimitive];
            if (ae !== void 0) {
              var ce = ae.call(he, "string");
              if (M(ce) !== "object") return ce;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(se.key), M(ye) === "symbol" ? ye : String(ye)), se);
        }
        var ye;
      }
      function _(Q, H) {
        return _ = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(X, se) {
          return X.__proto__ = se, X;
        }, _(Q, H);
      }
      function R(Q, H) {
        if (H && (M(H) === "object" || typeof H == "function")) return H;
        if (H !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
        return A(Q);
      }
      function A(Q) {
        if (Q === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return Q;
      }
      function N(Q) {
        return N = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, N(Q);
      }
      var L = function() {
        return typeof window > "u" ? 0 : window.scrollX || window.pageXOffset;
      }, V = function() {
        return typeof window > "u" ? 0 : window.scrollY || window.pageYOffset;
      };
      const D = function(Q) {
        var H = function(X) {
          (function(Te, Re) {
            if (typeof Re != "function" && Re !== null) throw new TypeError("Super expression must either be null or a function");
            Te.prototype = Object.create(Re && Re.prototype, { constructor: { value: Te, writable: !0, configurable: !0 } }), Object.defineProperty(Te, "prototype", { writable: !1 }), Re && _(Te, Re);
          })(ce, X);
          var se, ye, he, le, ae = (he = ce, le = function() {
            if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
            if (typeof Proxy == "function") return !0;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              })), !0;
            } catch {
              return !1;
            }
          }(), function() {
            var Te, Re = N(he);
            if (le) {
              var oe = N(this).constructor;
              Te = Reflect.construct(Re, arguments, oe);
            } else Te = Re.apply(this, arguments);
            return R(this, Te);
          });
          function ce(Te) {
            var Re;
            if (function(be, Ne) {
              if (!(be instanceof Ne)) throw new TypeError("Cannot call a class as a function");
            }(this, ce), (Re = ae.call(this, Te)).useIntersectionObserver = Te.useIntersectionObserver && l(), Re.useIntersectionObserver) return R(Re);
            var oe = Re.onChangeScroll.bind(A(Re));
            return Te.delayMethod === "debounce" ? Re.delayedScroll = w()(oe, Te.delayTime) : Te.delayMethod === "throttle" && (Re.delayedScroll = C()(oe, Te.delayTime)), Re.state = { scrollPosition: { x: L(), y: V() } }, Re.baseComponentRef = i().createRef(), Re;
          }
          return se = ce, (ye = [{ key: "componentDidMount", value: function() {
            this.addListeners();
          } }, { key: "componentWillUnmount", value: function() {
            this.removeListeners();
          } }, { key: "componentDidUpdate", value: function() {
            typeof window > "u" || this.useIntersectionObserver || P(this.baseComponentRef.current) !== this.scrollElement && (this.removeListeners(), this.addListeners());
          } }, { key: "addListeners", value: function() {
            typeof window > "u" || this.useIntersectionObserver || (this.scrollElement = P(this.baseComponentRef.current), this.scrollElement.addEventListener("scroll", this.delayedScroll, { passive: !0 }), window.addEventListener("resize", this.delayedScroll, { passive: !0 }), this.scrollElement !== window && window.addEventListener("scroll", this.delayedScroll, { passive: !0 }));
          } }, { key: "removeListeners", value: function() {
            typeof window > "u" || this.useIntersectionObserver || (this.scrollElement.removeEventListener("scroll", this.delayedScroll), window.removeEventListener("resize", this.delayedScroll), this.scrollElement !== window && window.removeEventListener("scroll", this.delayedScroll));
          } }, { key: "onChangeScroll", value: function() {
            this.useIntersectionObserver || this.setState({ scrollPosition: { x: L(), y: V() } });
          } }, { key: "render", value: function() {
            var Te = this.props, Re = (Te.delayMethod, Te.delayTime, function(be, Ne) {
              if (be == null) return {};
              var We, Ke, xt = function(Ct, je) {
                if (Ct == null) return {};
                var pt, Et, Le = {}, Ft = Object.keys(Ct);
                for (Et = 0; Et < Ft.length; Et++) pt = Ft[Et], je.indexOf(pt) >= 0 || (Le[pt] = Ct[pt]);
                return Le;
              }(be, Ne);
              if (Object.getOwnPropertySymbols) {
                var ft = Object.getOwnPropertySymbols(be);
                for (Ke = 0; Ke < ft.length; Ke++) We = ft[Ke], Ne.indexOf(We) >= 0 || Object.prototype.propertyIsEnumerable.call(be, We) && (xt[We] = be[We]);
              }
              return xt;
            }(Te, x)), oe = this.useIntersectionObserver ? null : this.state.scrollPosition;
            return i().createElement(Q, I({ forwardRef: this.baseComponentRef, scrollPosition: oe }, Re));
          } }]) && k(se.prototype, ye), Object.defineProperty(se, "prototype", { writable: !1 }), ce;
        }(i().Component);
        return H.propTypes = { delayMethod: s.PropTypes.oneOf(["debounce", "throttle"]), delayTime: s.PropTypes.number, useIntersectionObserver: s.PropTypes.bool }, H.defaultProps = { delayMethod: "throttle", delayTime: 300, useIntersectionObserver: !0 }, H;
      };
      function B(Q) {
        return B = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, B(Q);
      }
      function F(Q, H) {
        for (var X = 0; X < H.length; X++) {
          var se = H[X];
          se.enumerable = se.enumerable || !1, se.configurable = !0, "value" in se && (se.writable = !0), Object.defineProperty(Q, (ye = function(he, le) {
            if (B(he) !== "object" || he === null) return he;
            var ae = he[Symbol.toPrimitive];
            if (ae !== void 0) {
              var ce = ae.call(he, "string");
              if (B(ce) !== "object") return ce;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(se.key), B(ye) === "symbol" ? ye : String(ye)), se);
        }
        var ye;
      }
      function U(Q, H) {
        return U = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(X, se) {
          return X.__proto__ = se, X;
        }, U(Q, H);
      }
      function q(Q) {
        return q = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, q(Q);
      }
      var G = function(Q) {
        (function(ae, ce) {
          if (typeof ce != "function" && ce !== null) throw new TypeError("Super expression must either be null or a function");
          ae.prototype = Object.create(ce && ce.prototype, { constructor: { value: ae, writable: !0, configurable: !0 } }), Object.defineProperty(ae, "prototype", { writable: !1 }), ce && U(ae, ce);
        })(le, Q);
        var H, X, se, ye, he = (se = le, ye = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var ae, ce = q(se);
          if (ye) {
            var Te = q(this).constructor;
            ae = Reflect.construct(ce, arguments, Te);
          } else ae = ce.apply(this, arguments);
          return function(Re, oe) {
            if (oe && (B(oe) === "object" || typeof oe == "function")) return oe;
            if (oe !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(be) {
              if (be === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return be;
            }(Re);
          }(this, ae);
        });
        function le(ae) {
          return function(ce, Te) {
            if (!(ce instanceof Te)) throw new TypeError("Cannot call a class as a function");
          }(this, le), he.call(this, ae);
        }
        return H = le, (X = [{ key: "render", value: function() {
          return i().createElement(T, this.props);
        } }]) && F(H.prototype, X), Object.defineProperty(H, "prototype", { writable: !1 }), le;
      }(i().Component);
      const K = D(G);
      function te(Q) {
        return te = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, te(Q);
      }
      function ne(Q, H) {
        for (var X = 0; X < H.length; X++) {
          var se = H[X];
          se.enumerable = se.enumerable || !1, se.configurable = !0, "value" in se && (se.writable = !0), Object.defineProperty(Q, (ye = function(he, le) {
            if (te(he) !== "object" || he === null) return he;
            var ae = he[Symbol.toPrimitive];
            if (ae !== void 0) {
              var ce = ae.call(he, "string");
              if (te(ce) !== "object") return ce;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(se.key), te(ye) === "symbol" ? ye : String(ye)), se);
        }
        var ye;
      }
      function W(Q, H) {
        return W = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(X, se) {
          return X.__proto__ = se, X;
        }, W(Q, H);
      }
      function ee(Q) {
        if (Q === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return Q;
      }
      function Y(Q) {
        return Y = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, Y(Q);
      }
      var re = function(Q) {
        (function(ae, ce) {
          if (typeof ce != "function" && ce !== null) throw new TypeError("Super expression must either be null or a function");
          ae.prototype = Object.create(ce && ce.prototype, { constructor: { value: ae, writable: !0, configurable: !0 } }), Object.defineProperty(ae, "prototype", { writable: !1 }), ce && W(ae, ce);
        })(le, Q);
        var H, X, se, ye, he = (se = le, ye = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var ae, ce = Y(se);
          if (ye) {
            var Te = Y(this).constructor;
            ae = Reflect.construct(ce, arguments, Te);
          } else ae = ce.apply(this, arguments);
          return function(Re, oe) {
            if (oe && (te(oe) === "object" || typeof oe == "function")) return oe;
            if (oe !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return ee(Re);
          }(this, ae);
        });
        function le(ae) {
          var ce;
          (function(Ne, We) {
            if (!(Ne instanceof We)) throw new TypeError("Cannot call a class as a function");
          })(this, le), ce = he.call(this, ae);
          var Te = ae.afterLoad, Re = ae.beforeLoad, oe = ae.scrollPosition, be = ae.visibleByDefault;
          return ce.state = { visible: be }, be && (Re(), Te()), ce.onVisible = ce.onVisible.bind(ee(ce)), ce.isScrollTracked = !!(oe && Number.isFinite(oe.x) && oe.x >= 0 && Number.isFinite(oe.y) && oe.y >= 0), ce;
        }
        return H = le, (X = [{ key: "componentDidUpdate", value: function(ae, ce) {
          ce.visible !== this.state.visible && this.props.afterLoad();
        } }, { key: "onVisible", value: function() {
          this.props.beforeLoad(), this.setState({ visible: !0 });
        } }, { key: "render", value: function() {
          if (this.state.visible) return this.props.children;
          var ae = this.props, ce = ae.className, Te = ae.delayMethod, Re = ae.delayTime, oe = ae.height, be = ae.placeholder, Ne = ae.scrollPosition, We = ae.style, Ke = ae.threshold, xt = ae.useIntersectionObserver, ft = ae.width;
          return this.isScrollTracked || xt && l() ? i().createElement(T, { className: ce, height: oe, onVisible: this.onVisible, placeholder: be, scrollPosition: Ne, style: We, threshold: Ke, useIntersectionObserver: xt, width: ft }) : i().createElement(K, { className: ce, delayMethod: Te, delayTime: Re, height: oe, onVisible: this.onVisible, placeholder: be, style: We, threshold: Ke, width: ft });
        } }]) && ne(H.prototype, X), Object.defineProperty(H, "prototype", { writable: !1 }), le;
      }(i().Component);
      re.propTypes = { afterLoad: s.PropTypes.func, beforeLoad: s.PropTypes.func, useIntersectionObserver: s.PropTypes.bool, visibleByDefault: s.PropTypes.bool }, re.defaultProps = { afterLoad: function() {
        return {};
      }, beforeLoad: function() {
        return {};
      }, useIntersectionObserver: !0, visibleByDefault: !1 };
      const z = re;
      function de(Q) {
        return de = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, de(Q);
      }
      var ue = ["afterLoad", "beforeLoad", "delayMethod", "delayTime", "effect", "placeholder", "placeholderSrc", "scrollPosition", "threshold", "useIntersectionObserver", "visibleByDefault", "wrapperClassName", "wrapperProps"];
      function xe(Q, H) {
        var X = Object.keys(Q);
        if (Object.getOwnPropertySymbols) {
          var se = Object.getOwnPropertySymbols(Q);
          H && (se = se.filter(function(ye) {
            return Object.getOwnPropertyDescriptor(Q, ye).enumerable;
          })), X.push.apply(X, se);
        }
        return X;
      }
      function _e(Q) {
        for (var H = 1; H < arguments.length; H++) {
          var X = arguments[H] != null ? arguments[H] : {};
          H % 2 ? xe(Object(X), !0).forEach(function(se) {
            we(Q, se, X[se]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(Q, Object.getOwnPropertyDescriptors(X)) : xe(Object(X)).forEach(function(se) {
            Object.defineProperty(Q, se, Object.getOwnPropertyDescriptor(X, se));
          });
        }
        return Q;
      }
      function we(Q, H, X) {
        return (H = Ve(H)) in Q ? Object.defineProperty(Q, H, { value: X, enumerable: !0, configurable: !0, writable: !0 }) : Q[H] = X, Q;
      }
      function De() {
        return De = Object.assign ? Object.assign.bind() : function(Q) {
          for (var H = 1; H < arguments.length; H++) {
            var X = arguments[H];
            for (var se in X) Object.prototype.hasOwnProperty.call(X, se) && (Q[se] = X[se]);
          }
          return Q;
        }, De.apply(this, arguments);
      }
      function Ee(Q, H) {
        for (var X = 0; X < H.length; X++) {
          var se = H[X];
          se.enumerable = se.enumerable || !1, se.configurable = !0, "value" in se && (se.writable = !0), Object.defineProperty(Q, Ve(se.key), se);
        }
      }
      function Ve(Q) {
        var H = function(X, se) {
          if (de(X) !== "object" || X === null) return X;
          var ye = X[Symbol.toPrimitive];
          if (ye !== void 0) {
            var he = ye.call(X, "string");
            if (de(he) !== "object") return he;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(X);
        }(Q);
        return de(H) === "symbol" ? H : String(H);
      }
      function Me(Q, H) {
        return Me = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(X, se) {
          return X.__proto__ = se, X;
        }, Me(Q, H);
      }
      function j(Q) {
        return j = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, j(Q);
      }
      var J = function(Q) {
        (function(ae, ce) {
          if (typeof ce != "function" && ce !== null) throw new TypeError("Super expression must either be null or a function");
          ae.prototype = Object.create(ce && ce.prototype, { constructor: { value: ae, writable: !0, configurable: !0 } }), Object.defineProperty(ae, "prototype", { writable: !1 }), ce && Me(ae, ce);
        })(le, Q);
        var H, X, se, ye, he = (se = le, ye = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var ae, ce = j(se);
          if (ye) {
            var Te = j(this).constructor;
            ae = Reflect.construct(ce, arguments, Te);
          } else ae = ce.apply(this, arguments);
          return function(Re, oe) {
            if (oe && (de(oe) === "object" || typeof oe == "function")) return oe;
            if (oe !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(be) {
              if (be === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return be;
            }(Re);
          }(this, ae);
        });
        function le(ae) {
          var ce;
          return function(Te, Re) {
            if (!(Te instanceof Re)) throw new TypeError("Cannot call a class as a function");
          }(this, le), (ce = he.call(this, ae)).state = { loaded: !1 }, ce;
        }
        return H = le, (X = [{ key: "onImageLoad", value: function() {
          var ae = this;
          return this.state.loaded ? null : function(ce) {
            ae.props.onLoad(ce), ae.props.afterLoad(), ae.setState({ loaded: !0 });
          };
        } }, { key: "getImg", value: function() {
          var ae = this.props, ce = (ae.afterLoad, ae.beforeLoad, ae.delayMethod, ae.delayTime, ae.effect, ae.placeholder, ae.placeholderSrc, ae.scrollPosition, ae.threshold, ae.useIntersectionObserver, ae.visibleByDefault, ae.wrapperClassName, ae.wrapperProps, function(Te, Re) {
            if (Te == null) return {};
            var oe, be, Ne = function(Ke, xt) {
              if (Ke == null) return {};
              var ft, Ct, je = {}, pt = Object.keys(Ke);
              for (Ct = 0; Ct < pt.length; Ct++) ft = pt[Ct], xt.indexOf(ft) >= 0 || (je[ft] = Ke[ft]);
              return je;
            }(Te, Re);
            if (Object.getOwnPropertySymbols) {
              var We = Object.getOwnPropertySymbols(Te);
              for (be = 0; be < We.length; be++) oe = We[be], Re.indexOf(oe) >= 0 || Object.prototype.propertyIsEnumerable.call(Te, oe) && (Ne[oe] = Te[oe]);
            }
            return Ne;
          }(ae, ue));
          return i().createElement("img", De({}, ce, { onLoad: this.onImageLoad() }));
        } }, { key: "getLazyLoadImage", value: function() {
          var ae = this.props, ce = ae.beforeLoad, Te = ae.className, Re = ae.delayMethod, oe = ae.delayTime, be = ae.height, Ne = ae.placeholder, We = ae.scrollPosition, Ke = ae.style, xt = ae.threshold, ft = ae.useIntersectionObserver, Ct = ae.visibleByDefault, je = ae.width;
          return i().createElement(z, { beforeLoad: ce, className: Te, delayMethod: Re, delayTime: oe, height: be, placeholder: Ne, scrollPosition: We, style: Ke, threshold: xt, useIntersectionObserver: ft, visibleByDefault: Ct, width: je }, this.getImg());
        } }, { key: "getWrappedLazyLoadImage", value: function(ae) {
          var ce = this.props, Te = ce.effect, Re = ce.height, oe = ce.placeholderSrc, be = ce.width, Ne = ce.wrapperClassName, We = ce.wrapperProps, Ke = this.state.loaded, xt = Ke ? " lazy-load-image-loaded" : "", ft = Ke || !oe ? {} : { backgroundImage: "url(".concat(oe, ")"), backgroundSize: "100% 100%" };
          return i().createElement("span", De({ className: Ne + " lazy-load-image-background " + Te + xt, style: _e(_e({}, ft), {}, { color: "transparent", display: "inline-block", height: Re, width: be }) }, We), ae);
        } }, { key: "render", value: function() {
          var ae = this.props, ce = ae.effect, Te = ae.placeholderSrc, Re = ae.visibleByDefault, oe = ae.wrapperClassName, be = ae.wrapperProps, Ne = this.getLazyLoadImage();
          return (ce || Te) && !Re || oe || be ? this.getWrappedLazyLoadImage(Ne) : Ne;
        } }]) && Ee(H.prototype, X), Object.defineProperty(H, "prototype", { writable: !1 }), le;
      }(i().Component);
      J.propTypes = { onLoad: s.PropTypes.func, afterLoad: s.PropTypes.func, beforeLoad: s.PropTypes.func, delayMethod: s.PropTypes.string, delayTime: s.PropTypes.number, effect: s.PropTypes.string, placeholderSrc: s.PropTypes.string, threshold: s.PropTypes.number, useIntersectionObserver: s.PropTypes.bool, visibleByDefault: s.PropTypes.bool, wrapperClassName: s.PropTypes.string, wrapperProps: s.PropTypes.object }, J.defaultProps = { onLoad: function() {
      }, afterLoad: function() {
        return {};
      }, beforeLoad: function() {
        return {};
      }, delayMethod: "throttle", delayTime: 300, effect: "", placeholderSrc: null, threshold: 100, useIntersectionObserver: !0, visibleByDefault: !1, wrapperClassName: "" };
      const ie = J;
    })(), Vh.exports = o;
  })()), Vh.exports;
}
var V9 = B9();
const F9 = Pe(({ src: e, alt: t, ...n }) => /* @__PURE__ */ O(
  V9.LazyLoadImage,
  {
    src: e,
    alt: t,
    effect: "blur",
    wrapperProps: {
      // If you need to, you can tweak the effect transition using the wrapper style.
      style: { transitionDelay: "1s" }
    },
    draggable: !1,
    ...n
  }
));
F9.displayName = "LazyImage";
function j9(e) {
  return ot("MuiLinearProgress", e);
}
at("MuiLinearProgress", ["root", "colorPrimary", "colorSecondary", "determinate", "indeterminate", "buffer", "query", "dashed", "dashedColorPrimary", "dashedColorSecondary", "bar", "bar1", "bar2", "barColorPrimary", "barColorSecondary", "bar1Indeterminate", "bar1Determinate", "bar1Buffer", "bar2Indeterminate", "bar2Buffer"]);
const dg = 4, fg = Ci`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`, z9 = typeof fg != "string" ? $a`
        animation: ${fg} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
      ` : null, pg = Ci`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`, H9 = typeof pg != "string" ? $a`
        animation: ${pg} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
      ` : null, hg = Ci`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`, W9 = typeof hg != "string" ? $a`
        animation: ${hg} 3s infinite linear;
      ` : null, U9 = (e) => {
  const {
    classes: t,
    variant: n,
    color: o
  } = e, r = {
    root: ["root", `color${fe(o)}`, n],
    dashed: ["dashed", `dashedColor${fe(o)}`],
    bar1: ["bar", "bar1", `barColor${fe(o)}`, (n === "indeterminate" || n === "query") && "bar1Indeterminate", n === "determinate" && "bar1Determinate", n === "buffer" && "bar1Buffer"],
    bar2: ["bar", "bar2", n !== "buffer" && `barColor${fe(o)}`, n === "buffer" && `color${fe(o)}`, (n === "indeterminate" || n === "query") && "bar2Indeterminate", n === "buffer" && "bar2Buffer"]
  };
  return st(r, j9, t);
}, jb = (e, t) => e.vars ? e.vars.palette.LinearProgress[`${t}Bg`] : e.palette.mode === "light" ? Ma(e.palette[t].main, 0.62) : Na(e.palette[t].main, 0.5), q9 = Ce("span", {
  name: "MuiLinearProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`color${fe(n.color)}`], t[n.variant]];
  }
})(Ye(({
  theme: e
}) => ({
  position: "relative",
  overflow: "hidden",
  display: "block",
  height: 4,
  // Fix Safari's bug during composition of different paint.
  zIndex: 0,
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [...Object.entries(e.palette).filter(Gt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: jb(e, t)
    }
  })), {
    props: ({
      ownerState: t
    }) => t.color === "inherit" && t.variant !== "buffer",
    style: {
      "&::before": {
        content: '""',
        position: "absolute",
        left: 0,
        top: 0,
        right: 0,
        bottom: 0,
        backgroundColor: "currentColor",
        opacity: 0.3
      }
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      backgroundColor: "transparent"
    }
  }, {
    props: {
      variant: "query"
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
}))), K9 = Ce("span", {
  name: "MuiLinearProgress",
  slot: "Dashed",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.dashed, t[`dashedColor${fe(n.color)}`]];
  }
})(Ye(({
  theme: e
}) => ({
  position: "absolute",
  marginTop: 0,
  height: "100%",
  width: "100%",
  backgroundSize: "10px 10px",
  backgroundPosition: "0 -23px",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3,
      backgroundImage: "radial-gradient(currentColor 0%, currentColor 16%, transparent 42%)"
    }
  }, ...Object.entries(e.palette).filter(Gt()).map(([t]) => {
    const n = jb(e, t);
    return {
      props: {
        color: t
      },
      style: {
        backgroundImage: `radial-gradient(${n} 0%, ${n} 16%, transparent 42%)`
      }
    };
  })]
})), W9 || {
  // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
  animation: `${hg} 3s infinite linear`
}), G9 = Ce("span", {
  name: "MuiLinearProgress",
  slot: "Bar1",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar1, t[`barColor${fe(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar1Indeterminate, n.variant === "determinate" && t.bar1Determinate, n.variant === "buffer" && t.bar1Buffer];
  }
})(Ye(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      backgroundColor: "currentColor"
    }
  }, ...Object.entries(e.palette).filter(Gt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main
    }
  })), {
    props: {
      variant: "determinate"
    },
    style: {
      transition: `transform .${dg}s linear`
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      zIndex: 1,
      transition: `transform .${dg}s linear`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: z9 || {
      animation: `${fg} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`
    }
  }]
}))), Y9 = Ce("span", {
  name: "MuiLinearProgress",
  slot: "Bar2",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar2, t[`barColor${fe(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar2Indeterminate, n.variant === "buffer" && t.bar2Buffer];
  }
})(Ye(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [...Object.entries(e.palette).filter(Gt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--LinearProgressBar2-barColor": (e.vars || e).palette[t].main
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color !== "inherit",
    style: {
      backgroundColor: "var(--LinearProgressBar2-barColor, currentColor)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color === "inherit",
    style: {
      backgroundColor: "currentColor"
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3
    }
  }, ...Object.entries(e.palette).filter(Gt()).map(([t]) => ({
    props: {
      color: t,
      variant: "buffer"
    },
    style: {
      backgroundColor: jb(e, t),
      transition: `transform .${dg}s linear`
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: H9 || {
      animation: `${pg} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`
    }
  }]
}))), mI = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiLinearProgress"
  }), {
    className: r,
    color: i = "primary",
    value: s,
    valueBuffer: l,
    variant: c = "indeterminate",
    ...u
  } = o, d = {
    ...o,
    color: i,
    variant: c
  }, f = U9(d), p = Ic(), h = {}, g = {
    bar1: {},
    bar2: {}
  };
  if (c === "determinate" || c === "buffer")
    if (s !== void 0) {
      h["aria-valuenow"] = Math.round(s), h["aria-valuemin"] = 0, h["aria-valuemax"] = 100;
      let m = s - 100;
      p && (m = -m), g.bar1.transform = `translateX(${m}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
  if (c === "buffer")
    if (l !== void 0) {
      let m = (l || 0) - 100;
      p && (m = -m), g.bar2.transform = `translateX(${m}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
  return /* @__PURE__ */ Se(q9, {
    className: Ie(f.root, r),
    ownerState: d,
    role: "progressbar",
    ...h,
    ref: n,
    ...u,
    children: [c === "buffer" ? /* @__PURE__ */ O(K9, {
      className: f.dashed,
      ownerState: d
    }) : null, /* @__PURE__ */ O(G9, {
      className: f.bar1,
      ownerState: d,
      style: g.bar1
    }), c === "determinate" ? null : /* @__PURE__ */ O(Y9, {
      className: f.bar2,
      ownerState: d,
      style: g.bar2
    })]
  });
});
process.env.NODE_ENV !== "production" && (mI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["inherit", "primary", "secondary"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */
  value: a.number,
  /**
   * The value for the buffer variant.
   * Value between 0 and 100.
   */
  valueBuffer: a.number,
  /**
   * The variant to use.
   * Use indeterminate or query when there is no progress value.
   * @default 'indeterminate'
   */
  variant: a.oneOf(["buffer", "determinate", "indeterminate", "query"])
});
const X9 = Pe(({ disablePortal: e, isCircle: t = !1 }) => /* @__PURE__ */ O(da, { disablePortal: e, children: /* @__PURE__ */ Se(
  Ho,
  {
    sx: {
      width: 1,
      minHeight: 1,
      flexGrow: 1,
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      position: "fixed",
      // 基于 <body>
      top: 0,
      left: 0,
      right: 0
    },
    children: [
      t && /* @__PURE__ */ O(Ac, { color: "primary", disableShrink: !0, size: 40 }),
      !t && /* @__PURE__ */ O(
        mI,
        {
          color: "primary",
          sx: { width: 1, maxWidth: 360, height: "4px", borderRadius: "8px" }
        }
      )
    ]
  }
) }));
X9.displayName = "Loading";
function Z9(e) {
  return ot("MuiDialog", e);
}
const Fh = at("MuiDialog", ["root", "scrollPaper", "scrollBody", "container", "paper", "paperScrollPaper", "paperScrollBody", "paperWidthFalse", "paperWidthXs", "paperWidthSm", "paperWidthMd", "paperWidthLg", "paperWidthXl", "paperFullWidth", "paperFullScreen"]), gI = /* @__PURE__ */ $.createContext({});
process.env.NODE_ENV !== "production" && (gI.displayName = "DialogContext");
const Q9 = Ce($y, {
  name: "MuiDialog",
  slot: "Backdrop",
  overrides: (e, t) => t.backdrop
})({
  // Improve scrollable dialog support.
  zIndex: -1
}), J9 = (e) => {
  const {
    classes: t,
    scroll: n,
    maxWidth: o,
    fullWidth: r,
    fullScreen: i
  } = e, s = {
    root: ["root"],
    container: ["container", `scroll${fe(n)}`],
    paper: ["paper", `paperScroll${fe(n)}`, `paperWidth${fe(String(o))}`, r && "paperFullWidth", i && "paperFullScreen"]
  };
  return st(s, Z9, t);
}, eq = Ce(Af, {
  name: "MuiDialog",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  "@media print": {
    // Use !important to override the Modal inline-style.
    position: "absolute !important"
  }
}), tq = Ce("div", {
  name: "MuiDialog",
  slot: "Container",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.container, t[`scroll${fe(n.scroll)}`]];
  }
})({
  height: "100%",
  "@media print": {
    height: "auto"
  },
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      justifyContent: "center",
      alignItems: "center"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      overflowY: "auto",
      overflowX: "hidden",
      textAlign: "center",
      "&::after": {
        content: '""',
        display: "inline-block",
        verticalAlign: "middle",
        height: "100%",
        width: "0"
      }
    }
  }]
}), nq = Ce(Pi, {
  name: "MuiDialog",
  slot: "Paper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.paper, t[`scrollPaper${fe(n.scroll)}`], t[`paperWidth${fe(String(n.maxWidth))}`], n.fullWidth && t.paperFullWidth, n.fullScreen && t.paperFullScreen];
  }
})(Ye(({
  theme: e
}) => ({
  margin: 32,
  position: "relative",
  overflowY: "auto",
  "@media print": {
    overflowY: "visible",
    boxShadow: "none"
  },
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      flexDirection: "column",
      maxHeight: "calc(100% - 64px)"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      display: "inline-block",
      verticalAlign: "middle",
      textAlign: "initial"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.maxWidth,
    style: {
      maxWidth: "calc(100% - 64px)"
    }
  }, {
    props: {
      maxWidth: "xs"
    },
    style: {
      maxWidth: e.breakpoints.unit === "px" ? Math.max(e.breakpoints.values.xs, 444) : `max(${e.breakpoints.values.xs}${e.breakpoints.unit}, 444px)`,
      [`&.${Fh.paperScrollBody}`]: {
        [e.breakpoints.down(Math.max(e.breakpoints.values.xs, 444) + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  }, ...Object.keys(e.breakpoints.values).filter((t) => t !== "xs").map((t) => ({
    props: {
      maxWidth: t
    },
    style: {
      maxWidth: `${e.breakpoints.values[t]}${e.breakpoints.unit}`,
      [`&.${Fh.paperScrollBody}`]: {
        [e.breakpoints.down(e.breakpoints.values[t] + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  })), {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "calc(100% - 64px)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullScreen,
    style: {
      margin: 0,
      width: "100%",
      maxWidth: "100%",
      height: "100%",
      maxHeight: "none",
      borderRadius: 0,
      [`&.${Fh.paperScrollBody}`]: {
        margin: 0,
        maxWidth: "100%"
      }
    }
  }]
}))), yI = /* @__PURE__ */ $.forwardRef(function(t, n) {
  const o = ut({
    props: t,
    name: "MuiDialog"
  }), r = Zr(), i = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    "aria-describedby": s,
    "aria-labelledby": l,
    "aria-modal": c = !0,
    BackdropComponent: u,
    BackdropProps: d,
    children: f,
    className: p,
    disableEscapeKeyDown: h = !1,
    fullScreen: g = !1,
    fullWidth: m = !1,
    maxWidth: y = "sm",
    onClick: b,
    onClose: T,
    open: v,
    PaperComponent: w = Pi,
    PaperProps: S = {},
    scroll: C = "paper",
    slots: E = {},
    slotProps: P = {},
    TransitionComponent: M = as,
    transitionDuration: x = i,
    TransitionProps: I,
    ...k
  } = o, _ = {
    ...o,
    disableEscapeKeyDown: h,
    fullScreen: g,
    fullWidth: m,
    maxWidth: y,
    scroll: C
  }, R = J9(_), A = $.useRef(), N = (de) => {
    A.current = de.target === de.currentTarget;
  }, L = (de) => {
    b && b(de), A.current && (A.current = null, T && T(de, "backdropClick"));
  }, V = hs(l), D = $.useMemo(() => ({
    titleId: V
  }), [V]), B = {
    transition: M,
    ...E
  }, F = {
    transition: I,
    paper: S,
    backdrop: d,
    ...P
  }, U = {
    slots: B,
    slotProps: F
  }, [q, G] = it("root", {
    elementType: eq,
    shouldForwardComponentProp: !0,
    externalForwardedProps: U,
    ownerState: _,
    className: Ie(R.root, p),
    ref: n
  }), [K, te] = it("backdrop", {
    elementType: Q9,
    shouldForwardComponentProp: !0,
    externalForwardedProps: U,
    ownerState: _
  }), [ne, W] = it("paper", {
    elementType: nq,
    shouldForwardComponentProp: !0,
    externalForwardedProps: U,
    ownerState: _,
    className: Ie(R.paper, S.className)
  }), [ee, Y] = it("container", {
    elementType: tq,
    externalForwardedProps: U,
    ownerState: _,
    className: Ie(R.container)
  }), [re, z] = it("transition", {
    elementType: as,
    externalForwardedProps: U,
    ownerState: _,
    additionalProps: {
      appear: !0,
      in: v,
      timeout: x,
      role: "presentation"
    }
  });
  return /* @__PURE__ */ O(q, {
    closeAfterTransition: !0,
    slots: {
      backdrop: K
    },
    slotProps: {
      backdrop: {
        transitionDuration: x,
        as: u,
        ...te
      }
    },
    disableEscapeKeyDown: h,
    onClose: T,
    open: v,
    onClick: L,
    ...G,
    ...k,
    children: /* @__PURE__ */ O(re, {
      ...z,
      children: /* @__PURE__ */ O(ee, {
        onMouseDown: N,
        ...Y,
        children: /* @__PURE__ */ O(ne, {
          as: w,
          elevation: 24,
          role: "dialog",
          "aria-describedby": s,
          "aria-labelledby": V,
          "aria-modal": c,
          ...W,
          children: /* @__PURE__ */ O(gI.Provider, {
            value: D,
            children: f
          })
        })
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (yI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The id(s) of the element(s) that describe the dialog.
   */
  "aria-describedby": a.string,
  /**
   * The id(s) of the element(s) that label the dialog.
   */
  "aria-labelledby": a.string,
  /**
   * Informs assistive technologies that the element is modal.
   * It's added on the element with role="dialog".
   * @default true
   */
  "aria-modal": a.oneOfType([a.oneOf(["false", "true"]), a.bool]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * @ignore
   */
  BackdropProps: a.object,
  /**
   * Dialog children, usually the included sub-components.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: a.bool,
  /**
   * If `true`, the dialog is full-screen.
   * @default false
   */
  fullScreen: a.bool,
  /**
   * If `true`, the dialog stretches to `maxWidth`.
   *
   * Notice that the dialog width grow is limited by the default margin.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * Determine the max-width of the dialog.
   * The dialog width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'sm'
   */
  maxWidth: a.oneOfType([a.oneOf(["xs", "sm", "md", "lg", "xl", !1]), a.string]),
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The component used to render the body of the dialog.
   * @default Paper
   */
  PaperComponent: a.elementType,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @default {}
   * @deprecated Use `slotProps.paper` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PaperProps: a.object,
  /**
   * Determine the container for scrolling the dialog.
   * @default 'paper'
   */
  scroll: a.oneOf(["body", "paper"]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    container: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    container: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: a.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated Use `slotProps.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionProps: a.object
});
const bI = Pe(
  ({
    isOpen: e,
    closeModal: t,
    isPrevented: n = !0,
    children: o,
    maxWidth: r = "sm",
    fullWidth: i = !0,
    sx: s,
    ...l
  }) => {
    const { paperCommonStyles: c } = ms();
    return /* @__PURE__ */ O(
      yI,
      {
        className: "VenomousUI-Modal",
        open: e,
        onClose: n ? void 0 : t,
        scroll: "paper",
        keepMounted: !0,
        maxWidth: r,
        fullWidth: i,
        sx: { ...s },
        slotProps: {
          paper: {
            sx: {
              ...c
            }
          }
        },
        ...l,
        children: o
      }
    );
  }
);
bI.displayName = "Modal";
function Ate() {
  const [e, t] = Yt(!1), n = Be(() => t(!0), []), o = Be(() => t(!1), []);
  return {
    isOpen: e,
    openModal: n,
    closeModal: o
  };
}
const oq = Pe(
  ({
    onSubmit: e,
    onClose: t,
    isSubmitting: n = !1,
    title: o = "",
    contentMessage: r = "",
    cancelButtonText: i = "Cancel",
    confirmButtonText: s = "Confirm",
    confirmButtonIsDisabled: l = !1,
    cancelButtonIsDisabled: c = !1,
    ...u
  }) => {
    const d = qe(u.isOpen);
    return et(() => {
      d.current && !u.isOpen && (t == null || t()), d.current = u.isOpen;
    }, [u.isOpen, t]), /* @__PURE__ */ Se(bI, { isPrevented: !0, ...u, children: [
      /* @__PURE__ */ O(Rn, { isTitle: !0, text: o, p: "8px" }),
      /* @__PURE__ */ O(Rn, { text: r, p: "8px", pb: "24px" }),
      /* @__PURE__ */ Se(bn, { row: !0, justifyContent: "flex-end", children: [
        /* @__PURE__ */ O(
          Mn,
          {
            text: i,
            onClick: u.closeModal,
            disabled: c || n,
            isOutlined: !0
          }
        ),
        /* @__PURE__ */ O(
          Mn,
          {
            text: s,
            onClick: () => {
              (async () => (await (e == null ? void 0 : e()), u.closeModal()))();
            },
            disabled: l,
            loading: n,
            autoFocus: !0
          }
        )
      ] })
    ] });
  }
);
oq.displayName = "ConfirmModal";
function jS(e) {
  return e.substring(2).toLowerCase();
}
function rq(e, t) {
  return t.documentElement.clientWidth < e.clientX || t.documentElement.clientHeight < e.clientY;
}
function Gd(e) {
  const {
    children: t,
    disableReactTree: n = !1,
    mouseEvent: o = "onClick",
    onClickAway: r,
    touchEvent: i = "onTouchEnd"
  } = e, s = $.useRef(!1), l = $.useRef(null), c = $.useRef(!1), u = $.useRef(!1);
  $.useEffect(() => (setTimeout(() => {
    c.current = !0;
  }, 0), () => {
    c.current = !1;
  }), []);
  const d = yn(Oi(t), l), f = oo((g) => {
    const m = u.current;
    u.current = !1;
    const y = Hn(l.current);
    if (!c.current || !l.current || "clientX" in g && rq(g, y))
      return;
    if (s.current) {
      s.current = !1;
      return;
    }
    let b;
    g.composedPath ? b = g.composedPath().includes(l.current) : b = !y.documentElement.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      g.target
    ) || l.current.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      g.target
    ), !b && (n || !m) && r(g);
  }), p = (g) => (m) => {
    u.current = !0;
    const y = t.props[g];
    y && y(m);
  }, h = {
    ref: d
  };
  return i !== !1 && (h[i] = p(i)), $.useEffect(() => {
    if (i !== !1) {
      const g = jS(i), m = Hn(l.current), y = () => {
        s.current = !0;
      };
      return m.addEventListener(g, f), m.addEventListener("touchmove", y), () => {
        m.removeEventListener(g, f), m.removeEventListener("touchmove", y);
      };
    }
  }, [f, i]), o !== !1 && (h[o] = p(o)), $.useEffect(() => {
    if (o !== !1) {
      const g = jS(o), m = Hn(l.current);
      return m.addEventListener(g, f), () => {
        m.removeEventListener(g, f);
      };
    }
  }, [f, o]), /* @__PURE__ */ $.cloneElement(t, h);
}
process.env.NODE_ENV !== "production" && (Gd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The wrapped element.
   */
  children: Ei.isRequired,
  /**
   * If `true`, the React tree is ignored and only the DOM tree is considered.
   * This prop changes how portaled elements are handled.
   * @default false
   */
  disableReactTree: a.bool,
  /**
   * The mouse event to listen to. You can disable the listener by providing `false`.
   * @default 'onClick'
   */
  mouseEvent: a.oneOf(["onClick", "onMouseDown", "onMouseUp", "onPointerDown", "onPointerUp", !1]),
  /**
   * Callback fired when a "click away" event is detected.
   */
  onClickAway: a.func.isRequired,
  /**
   * The touch event to listen to. You can disable the listener by providing `false`.
   * @default 'onTouchEnd'
   */
  touchEvent: a.oneOf(["onTouchEnd", "onTouchStart", !1])
});
process.env.NODE_ENV !== "production" && (Gd.propTypes = Rc(Gd.propTypes));
const iq = Li((e) => ({
  activeId: null,
  setActiveId: (t) => e({ activeId: t })
}));
function sq(e) {
  const { activeId: t, setActiveId: n } = iq(), [o, r] = Yt(null), i = !!o && (!e || t === e), s = Be(
    (c) => {
      const u = c.currentTarget;
      e ? (n(e), r(u)) : r(o ? null : u);
    },
    [e, n]
  ), l = Be(() => {
    var c;
    (c = window.getSelection()) != null && c.toString() || (e && n(null), r(null));
  }, [e, n]);
  return {
    anchorEl: o,
    isOpen: i,
    openPopper: s,
    closePopper: l
  };
}
const vI = Pe(
  ({ id: e, children: t, renderPopperHandler: n, position: o = "bottom", sx: r, contentSx: i }) => {
    const { anchorEl: s, isOpen: l, openPopper: c, closePopper: u } = sq(e);
    return /* @__PURE__ */ O(Gd, { onClickAway: u, children: /* @__PURE__ */ Se(
      Ho,
      {
        sx: { position: "relative", ...r },
        role: "presentation",
        className: "VenomousUI-Popper",
        children: [
          n({ anchorEl: s, isOpen: l, openPopper: c, closePopper: u }),
          /* @__PURE__ */ O(Aa, { open: l, anchorEl: s, placement: o, transition: !0, keepMounted: !0, children: ({ TransitionProps: d }) => /* @__PURE__ */ O(as, { ...d, children: /* @__PURE__ */ O(Wr, { isOutlined: !0, sx: { width: "100%", ...i }, children: t }) }) })
        ]
      }
    ) });
  }
);
vI.displayName = "Popper";
const mg = typeof ny({}) == "function", aq = (e, t) => ({
  WebkitFontSmoothing: "antialiased",
  // Antialiasing.
  MozOsxFontSmoothing: "grayscale",
  // Antialiasing.
  // Change from `box-sizing: content-box` so that `width`
  // is not affected by `padding` or `border`.
  boxSizing: "border-box",
  // Fix font resize problem in iOS
  WebkitTextSizeAdjust: "100%",
  // When used under CssVarsProvider, colorScheme should not be applied dynamically because it will generate the stylesheet twice for server-rendered applications.
  ...t && !e.vars && {
    colorScheme: e.palette.mode
  }
}), lq = (e) => ({
  color: (e.vars || e).palette.text.primary,
  ...e.typography.body1,
  backgroundColor: (e.vars || e).palette.background.default,
  "@media print": {
    // Save printer ink.
    backgroundColor: (e.vars || e).palette.common.white
  }
}), xI = (e, t = !1) => {
  var i, s;
  const n = {};
  t && e.colorSchemes && typeof e.getColorSchemeSelector == "function" && Object.entries(e.colorSchemes).forEach(([l, c]) => {
    var d, f;
    const u = e.getColorSchemeSelector(l);
    u.startsWith("@") ? n[u] = {
      ":root": {
        colorScheme: (d = c.palette) == null ? void 0 : d.mode
      }
    } : n[u.replace(/\s*&/, "")] = {
      colorScheme: (f = c.palette) == null ? void 0 : f.mode
    };
  });
  let o = {
    html: aq(e, t),
    "*, *::before, *::after": {
      boxSizing: "inherit"
    },
    "strong, b": {
      fontWeight: e.typography.fontWeightBold
    },
    body: {
      margin: 0,
      // Remove the margin in all browsers.
      ...lq(e),
      // Add support for document.body.requestFullScreen().
      // Other elements, if background transparent, are not supported.
      "&::backdrop": {
        backgroundColor: (e.vars || e).palette.background.default
      }
    },
    ...n
  };
  const r = (s = (i = e.components) == null ? void 0 : i.MuiCssBaseline) == null ? void 0 : s.styleOverrides;
  return r && (o = [o, r]), o;
}, sd = "mui-ecs", cq = (e) => {
  const t = xI(e, !1), n = Array.isArray(t) ? t[0] : t;
  return !e.vars && n && (n.html[`:root:has(${sd})`] = {
    colorScheme: e.palette.mode
  }), e.colorSchemes && Object.entries(e.colorSchemes).forEach(([o, r]) => {
    var s, l;
    const i = e.getColorSchemeSelector(o);
    i.startsWith("@") ? n[i] = {
      [`:root:not(:has(.${sd}))`]: {
        colorScheme: (s = r.palette) == null ? void 0 : s.mode
      }
    } : n[i.replace(/\s*&/, "")] = {
      [`&:not(:has(.${sd}))`]: {
        colorScheme: (l = r.palette) == null ? void 0 : l.mode
      }
    };
  }), t;
}, uq = ny(mg ? ({
  theme: e,
  enableColorScheme: t
}) => xI(e, t) : ({
  theme: e
}) => cq(e));
function wI(e) {
  const t = ut({
    props: e,
    name: "MuiCssBaseline"
  }), {
    children: n,
    enableColorScheme: o = !1
  } = t;
  return /* @__PURE__ */ Se($.Fragment, {
    children: [mg && /* @__PURE__ */ O(uq, {
      enableColorScheme: o
    }), !mg && !o && /* @__PURE__ */ O("span", {
      className: sd,
      style: {
        display: "none"
      }
    }), n]
  });
}
process.env.NODE_ENV !== "production" && (wI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * You can wrap a node.
   */
  children: a.node,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   * @default false
   */
  enableColorScheme: a.bool
});
function dq() {
  const { themeMode: e } = vp(), { themePalette: t } = Fb(), n = Ge(() => Cf({
    palette: {
      mode: e,
      primary: {
        main: t.main,
        dark: t.dark,
        light: t.light,
        contrastText: t.contrastText
      }
    }
  }), [e, t]);
  return fq(t), { theme: n };
}
function fq(e) {
  et(() => {
    const t = document.createElement("style");
    return t.innerHTML = `
          /* 设置选中文本的样式 */
          ::selection {
            background-color: ${e.light};                        /* 设置选中文本的背景色 */
            color: white;                                                   /* 设置选中文本的文字颜色 */
          }
    
          /* 设置滚动条的样式 */
          ::-webkit-scrollbar {
            width: 8px;                                                     /* 设置滚动条的宽度 */
            height: 8px;                                                    /* 设置滚动条的高度 */
          }
          ::-webkit-scrollbar-thumb {
            background-color: ${e.main};                         /* 设置滚动条的颜色 */
            border-radius: 4px;                                             /* 设置滚动条的圆角 */
          }
          ::-webkit-scrollbar-thumb:hover {
            background-color: ${e.dark};                         /* 悬停时加深颜色 */
          } 
          ::-webkit-scrollbar-track {
            background-color: rgba(0, 0, 0, 0.1);                         /* 滑轨颜色 */
            border-radius: 4px;                                             /* 圆角 */
            transition: opacity 0.5s ease-in-out;                           /* 滑轨过渡效果 */
          }
          /* Firefox 滚动条样式 */
          * {
            scrollbar-color: ${e.main} rgba(0, 0, 0, 0.1);     /* 滑块 和 滑轨颜色 */
            scrollbar-width: medium;                                        /* 滚动条宽度 */
          }
          /* Firefox 滚动条的过渡效果 */
          *::-webkit-scrollbar {
            transition: opacity 0.5s ease-in-out;
          }
        `, document.head.appendChild(t), () => {
      document.head.removeChild(t);
    };
  }, [e]);
}
const pq = Pe(({ children: e }) => {
  const { theme: t } = dq();
  return /* @__PURE__ */ Se(X2, { theme: t, disableTransitionOnChange: !0, children: [
    /* @__PURE__ */ O(wI, {}),
    e
  ] });
});
pq.displayName = "ThemeProvider";
function hq(e) {
  if (typeof document > "u") return;
  let t = document.head || document.getElementsByTagName("head")[0], n = document.createElement("style");
  n.type = "text/css", t.appendChild(n), n.styleSheet ? n.styleSheet.cssText = e : n.appendChild(document.createTextNode(e));
}
const mq = (e) => {
  switch (e) {
    case "success":
      return bq;
    case "info":
      return xq;
    case "warning":
      return vq;
    case "error":
      return wq;
    default:
      return null;
  }
}, gq = Array(12).fill(0), yq = ({ visible: e, className: t }) => /* @__PURE__ */ Z.createElement("div", {
  className: [
    "sonner-loading-wrapper",
    t
  ].filter(Boolean).join(" "),
  "data-visible": e
}, /* @__PURE__ */ Z.createElement("div", {
  className: "sonner-spinner"
}, gq.map((n, o) => /* @__PURE__ */ Z.createElement("div", {
  className: "sonner-loading-bar",
  key: `spinner-bar-${o}`
})))), bq = /* @__PURE__ */ Z.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ Z.createElement("path", {
  fillRule: "evenodd",
  d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
  clipRule: "evenodd"
})), vq = /* @__PURE__ */ Z.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ Z.createElement("path", {
  fillRule: "evenodd",
  d: "M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z",
  clipRule: "evenodd"
})), xq = /* @__PURE__ */ Z.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ Z.createElement("path", {
  fillRule: "evenodd",
  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z",
  clipRule: "evenodd"
})), wq = /* @__PURE__ */ Z.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ Z.createElement("path", {
  fillRule: "evenodd",
  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0110 5zm0 10a1 1 0 100-2 1 1 0 000 2z",
  clipRule: "evenodd"
})), Sq = /* @__PURE__ */ Z.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "12",
  height: "12",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "1.5",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, /* @__PURE__ */ Z.createElement("line", {
  x1: "18",
  y1: "6",
  x2: "6",
  y2: "18"
}), /* @__PURE__ */ Z.createElement("line", {
  x1: "6",
  y1: "6",
  x2: "18",
  y2: "18"
})), Tq = () => {
  const [e, t] = Z.useState(document.hidden);
  return Z.useEffect(() => {
    const n = () => {
      t(document.hidden);
    };
    return document.addEventListener("visibilitychange", n), () => window.removeEventListener("visibilitychange", n);
  }, []), e;
};
let gg = 1;
class Cq {
  constructor() {
    this.subscribe = (t) => (this.subscribers.push(t), () => {
      const n = this.subscribers.indexOf(t);
      this.subscribers.splice(n, 1);
    }), this.publish = (t) => {
      this.subscribers.forEach((n) => n(t));
    }, this.addToast = (t) => {
      this.publish(t), this.toasts = [
        ...this.toasts,
        t
      ];
    }, this.create = (t) => {
      var n;
      const { message: o, ...r } = t, i = typeof (t == null ? void 0 : t.id) == "number" || ((n = t.id) == null ? void 0 : n.length) > 0 ? t.id : gg++, s = this.toasts.find((c) => c.id === i), l = t.dismissible === void 0 ? !0 : t.dismissible;
      return this.dismissedToasts.has(i) && this.dismissedToasts.delete(i), s ? this.toasts = this.toasts.map((c) => c.id === i ? (this.publish({
        ...c,
        ...t,
        id: i,
        title: o
      }), {
        ...c,
        ...t,
        id: i,
        dismissible: l,
        title: o
      }) : c) : this.addToast({
        title: o,
        ...r,
        dismissible: l,
        id: i
      }), i;
    }, this.dismiss = (t) => (t ? (this.dismissedToasts.add(t), requestAnimationFrame(() => this.subscribers.forEach((n) => n({
      id: t,
      dismiss: !0
    })))) : this.toasts.forEach((n) => {
      this.subscribers.forEach((o) => o({
        id: n.id,
        dismiss: !0
      }));
    }), t), this.message = (t, n) => this.create({
      ...n,
      message: t
    }), this.error = (t, n) => this.create({
      ...n,
      message: t,
      type: "error"
    }), this.success = (t, n) => this.create({
      ...n,
      type: "success",
      message: t
    }), this.info = (t, n) => this.create({
      ...n,
      type: "info",
      message: t
    }), this.warning = (t, n) => this.create({
      ...n,
      type: "warning",
      message: t
    }), this.loading = (t, n) => this.create({
      ...n,
      type: "loading",
      message: t
    }), this.promise = (t, n) => {
      if (!n)
        return;
      let o;
      n.loading !== void 0 && (o = this.create({
        ...n,
        promise: t,
        type: "loading",
        message: n.loading,
        description: typeof n.description != "function" ? n.description : void 0
      }));
      const r = Promise.resolve(t instanceof Function ? t() : t);
      let i = o !== void 0, s;
      const l = r.then(async (u) => {
        if (s = [
          "resolve",
          u
        ], Z.isValidElement(u))
          i = !1, this.create({
            id: o,
            type: "default",
            message: u
          });
        else if (Oq(u) && !u.ok) {
          i = !1;
          const f = typeof n.error == "function" ? await n.error(`HTTP error! status: ${u.status}`) : n.error, p = typeof n.description == "function" ? await n.description(`HTTP error! status: ${u.status}`) : n.description, g = typeof f == "object" && !Z.isValidElement(f) ? f : {
            message: f
          };
          this.create({
            id: o,
            type: "error",
            description: p,
            ...g
          });
        } else if (u instanceof Error) {
          i = !1;
          const f = typeof n.error == "function" ? await n.error(u) : n.error, p = typeof n.description == "function" ? await n.description(u) : n.description, g = typeof f == "object" && !Z.isValidElement(f) ? f : {
            message: f
          };
          this.create({
            id: o,
            type: "error",
            description: p,
            ...g
          });
        } else if (n.success !== void 0) {
          i = !1;
          const f = typeof n.success == "function" ? await n.success(u) : n.success, p = typeof n.description == "function" ? await n.description(u) : n.description, g = typeof f == "object" && !Z.isValidElement(f) ? f : {
            message: f
          };
          this.create({
            id: o,
            type: "success",
            description: p,
            ...g
          });
        }
      }).catch(async (u) => {
        if (s = [
          "reject",
          u
        ], n.error !== void 0) {
          i = !1;
          const d = typeof n.error == "function" ? await n.error(u) : n.error, f = typeof n.description == "function" ? await n.description(u) : n.description, h = typeof d == "object" && !Z.isValidElement(d) ? d : {
            message: d
          };
          this.create({
            id: o,
            type: "error",
            description: f,
            ...h
          });
        }
      }).finally(() => {
        i && (this.dismiss(o), o = void 0), n.finally == null || n.finally.call(n);
      }), c = () => new Promise((u, d) => l.then(() => s[0] === "reject" ? d(s[1]) : u(s[1])).catch(d));
      return typeof o != "string" && typeof o != "number" ? {
        unwrap: c
      } : Object.assign(o, {
        unwrap: c
      });
    }, this.custom = (t, n) => {
      const o = (n == null ? void 0 : n.id) || gg++;
      return this.create({
        jsx: t(o),
        id: o,
        ...n
      }), o;
    }, this.getActiveToasts = () => this.toasts.filter((t) => !this.dismissedToasts.has(t.id)), this.subscribers = [], this.toasts = [], this.dismissedToasts = /* @__PURE__ */ new Set();
  }
}
const no = new Cq(), Eq = (e, t) => {
  const n = (t == null ? void 0 : t.id) || gg++;
  return no.addToast({
    title: e,
    ...t,
    id: n
  }), n;
}, Oq = (e) => e && typeof e == "object" && "ok" in e && typeof e.ok == "boolean" && "status" in e && typeof e.status == "number", Pq = Eq, Rq = () => no.toasts, Iq = () => no.getActiveToasts(), jh = Object.assign(Pq, {
  success: no.success,
  info: no.info,
  warning: no.warning,
  error: no.error,
  custom: no.custom,
  message: no.message,
  promise: no.promise,
  dismiss: no.dismiss,
  loading: no.loading
}, {
  getHistory: Rq,
  getToasts: Iq
});
hq("[data-sonner-toaster][dir=ltr],html[dir=ltr]{--toast-icon-margin-start:-3px;--toast-icon-margin-end:4px;--toast-svg-margin-start:-1px;--toast-svg-margin-end:0px;--toast-button-margin-start:auto;--toast-button-margin-end:0;--toast-close-button-start:0;--toast-close-button-end:unset;--toast-close-button-transform:translate(-35%, -35%)}[data-sonner-toaster][dir=rtl],html[dir=rtl]{--toast-icon-margin-start:4px;--toast-icon-margin-end:-3px;--toast-svg-margin-start:0px;--toast-svg-margin-end:-1px;--toast-button-margin-start:0;--toast-button-margin-end:auto;--toast-close-button-start:unset;--toast-close-button-end:0;--toast-close-button-transform:translate(35%, -35%)}[data-sonner-toaster]{position:fixed;width:var(--width);font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;--gray1:hsl(0, 0%, 99%);--gray2:hsl(0, 0%, 97.3%);--gray3:hsl(0, 0%, 95.1%);--gray4:hsl(0, 0%, 93%);--gray5:hsl(0, 0%, 90.9%);--gray6:hsl(0, 0%, 88.7%);--gray7:hsl(0, 0%, 85.8%);--gray8:hsl(0, 0%, 78%);--gray9:hsl(0, 0%, 56.1%);--gray10:hsl(0, 0%, 52.3%);--gray11:hsl(0, 0%, 43.5%);--gray12:hsl(0, 0%, 9%);--border-radius:8px;box-sizing:border-box;padding:0;margin:0;list-style:none;outline:0;z-index:999999999;transition:transform .4s ease}[data-sonner-toaster][data-lifted=true]{transform:translateY(-8px)}@media (hover:none) and (pointer:coarse){[data-sonner-toaster][data-lifted=true]{transform:none}}[data-sonner-toaster][data-x-position=right]{right:var(--offset-right)}[data-sonner-toaster][data-x-position=left]{left:var(--offset-left)}[data-sonner-toaster][data-x-position=center]{left:50%;transform:translateX(-50%)}[data-sonner-toaster][data-y-position=top]{top:var(--offset-top)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--offset-bottom)}[data-sonner-toast]{--y:translateY(100%);--lift-amount:calc(var(--lift) * var(--gap));z-index:var(--z-index);position:absolute;opacity:0;transform:var(--y);touch-action:none;transition:transform .4s,opacity .4s,height .4s,box-shadow .2s;box-sizing:border-box;outline:0;overflow-wrap:anywhere}[data-sonner-toast][data-styled=true]{padding:16px;background:var(--normal-bg);border:1px solid var(--normal-border);color:var(--normal-text);border-radius:var(--border-radius);box-shadow:0 4px 12px rgba(0,0,0,.1);width:var(--width);font-size:13px;display:flex;align-items:center;gap:6px}[data-sonner-toast]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-y-position=top]{top:0;--y:translateY(-100%);--lift:1;--lift-amount:calc(1 * var(--gap))}[data-sonner-toast][data-y-position=bottom]{bottom:0;--y:translateY(100%);--lift:-1;--lift-amount:calc(var(--lift) * var(--gap))}[data-sonner-toast][data-styled=true] [data-description]{font-weight:400;line-height:1.4;color:#3f3f3f}[data-rich-colors=true][data-sonner-toast][data-styled=true] [data-description]{color:inherit}[data-sonner-toaster][data-sonner-theme=dark] [data-description]{color:#e8e8e8}[data-sonner-toast][data-styled=true] [data-title]{font-weight:500;line-height:1.5;color:inherit}[data-sonner-toast][data-styled=true] [data-icon]{display:flex;height:16px;width:16px;position:relative;justify-content:flex-start;align-items:center;flex-shrink:0;margin-left:var(--toast-icon-margin-start);margin-right:var(--toast-icon-margin-end)}[data-sonner-toast][data-promise=true] [data-icon]>svg{opacity:0;transform:scale(.8);transform-origin:center;animation:sonner-fade-in .3s ease forwards}[data-sonner-toast][data-styled=true] [data-icon]>*{flex-shrink:0}[data-sonner-toast][data-styled=true] [data-icon] svg{margin-left:var(--toast-svg-margin-start);margin-right:var(--toast-svg-margin-end)}[data-sonner-toast][data-styled=true] [data-content]{display:flex;flex-direction:column;gap:2px}[data-sonner-toast][data-styled=true] [data-button]{border-radius:4px;padding-left:8px;padding-right:8px;height:24px;font-size:12px;color:var(--normal-bg);background:var(--normal-text);margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end);border:none;font-weight:500;cursor:pointer;outline:0;display:flex;align-items:center;flex-shrink:0;transition:opacity .4s,box-shadow .2s}[data-sonner-toast][data-styled=true] [data-button]:focus-visible{box-shadow:0 0 0 2px rgba(0,0,0,.4)}[data-sonner-toast][data-styled=true] [data-button]:first-of-type{margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end)}[data-sonner-toast][data-styled=true] [data-cancel]{color:var(--normal-text);background:rgba(0,0,0,.08)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-styled=true] [data-cancel]{background:rgba(255,255,255,.3)}[data-sonner-toast][data-styled=true] [data-close-button]{position:absolute;left:var(--toast-close-button-start);right:var(--toast-close-button-end);top:0;height:20px;width:20px;display:flex;justify-content:center;align-items:center;padding:0;color:var(--gray12);background:var(--normal-bg);border:1px solid var(--gray4);transform:var(--toast-close-button-transform);border-radius:50%;cursor:pointer;z-index:1;transition:opacity .1s,background .2s,border-color .2s}[data-sonner-toast][data-styled=true] [data-close-button]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-styled=true] [data-disabled=true]{cursor:not-allowed}[data-sonner-toast][data-styled=true]:hover [data-close-button]:hover{background:var(--gray2);border-color:var(--gray5)}[data-sonner-toast][data-swiping=true]::before{content:'';position:absolute;left:-100%;right:-100%;height:100%;z-index:-1}[data-sonner-toast][data-y-position=top][data-swiping=true]::before{bottom:50%;transform:scaleY(3) translateY(50%)}[data-sonner-toast][data-y-position=bottom][data-swiping=true]::before{top:50%;transform:scaleY(3) translateY(-50%)}[data-sonner-toast][data-swiping=false][data-removed=true]::before{content:'';position:absolute;inset:0;transform:scaleY(2)}[data-sonner-toast][data-expanded=true]::after{content:'';position:absolute;left:0;height:calc(var(--gap) + 1px);bottom:100%;width:100%}[data-sonner-toast][data-mounted=true]{--y:translateY(0);opacity:1}[data-sonner-toast][data-expanded=false][data-front=false]{--scale:var(--toasts-before) * 0.05 + 1;--y:translateY(calc(var(--lift-amount) * var(--toasts-before))) scale(calc(-1 * var(--scale)));height:var(--front-toast-height)}[data-sonner-toast]>*{transition:opacity .4s}[data-sonner-toast][data-x-position=right]{right:0}[data-sonner-toast][data-x-position=left]{left:0}[data-sonner-toast][data-expanded=false][data-front=false][data-styled=true]>*{opacity:0}[data-sonner-toast][data-visible=false]{opacity:0;pointer-events:none}[data-sonner-toast][data-mounted=true][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset)));height:var(--initial-height)}[data-sonner-toast][data-removed=true][data-front=true][data-swipe-out=false]{--y:translateY(calc(var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset) + var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=false]{--y:translateY(40%);opacity:0;transition:transform .5s,opacity .2s}[data-sonner-toast][data-removed=true][data-front=false]::before{height:calc(var(--initial-height) + 20%)}[data-sonner-toast][data-swiping=true]{transform:var(--y) translateY(var(--swipe-amount-y,0)) translateX(var(--swipe-amount-x,0));transition:none}[data-sonner-toast][data-swiped=true]{user-select:none}[data-sonner-toast][data-swipe-out=true][data-y-position=bottom],[data-sonner-toast][data-swipe-out=true][data-y-position=top]{animation-duration:.2s;animation-timing-function:ease-out;animation-fill-mode:forwards}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=left]{animation-name:swipe-out-left}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=right]{animation-name:swipe-out-right}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=up]{animation-name:swipe-out-up}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=down]{animation-name:swipe-out-down}@keyframes swipe-out-left{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) - 100%));opacity:0}}@keyframes swipe-out-right{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) + 100%));opacity:0}}@keyframes swipe-out-up{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) - 100%));opacity:0}}@keyframes swipe-out-down{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) + 100%));opacity:0}}@media (max-width:600px){[data-sonner-toaster]{position:fixed;right:var(--mobile-offset-right);left:var(--mobile-offset-left);width:100%}[data-sonner-toaster][dir=rtl]{left:calc(var(--mobile-offset-left) * -1)}[data-sonner-toaster] [data-sonner-toast]{left:0;right:0;width:calc(100% - var(--mobile-offset-left) * 2)}[data-sonner-toaster][data-x-position=left]{left:var(--mobile-offset-left)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--mobile-offset-bottom)}[data-sonner-toaster][data-y-position=top]{top:var(--mobile-offset-top)}[data-sonner-toaster][data-x-position=center]{left:var(--mobile-offset-left);right:var(--mobile-offset-right);transform:none}}[data-sonner-toaster][data-sonner-theme=light]{--normal-bg:#fff;--normal-border:var(--gray4);--normal-text:var(--gray12);--success-bg:hsl(143, 85%, 96%);--success-border:hsl(145, 92%, 87%);--success-text:hsl(140, 100%, 27%);--info-bg:hsl(208, 100%, 97%);--info-border:hsl(221, 91%, 93%);--info-text:hsl(210, 92%, 45%);--warning-bg:hsl(49, 100%, 97%);--warning-border:hsl(49, 91%, 84%);--warning-text:hsl(31, 92%, 45%);--error-bg:hsl(359, 100%, 97%);--error-border:hsl(359, 100%, 94%);--error-text:hsl(360, 100%, 45%)}[data-sonner-toaster][data-sonner-theme=light] [data-sonner-toast][data-invert=true]{--normal-bg:#000;--normal-border:hsl(0, 0%, 20%);--normal-text:var(--gray1)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-invert=true]{--normal-bg:#fff;--normal-border:var(--gray3);--normal-text:var(--gray12)}[data-sonner-toaster][data-sonner-theme=dark]{--normal-bg:#000;--normal-bg-hover:hsl(0, 0%, 12%);--normal-border:hsl(0, 0%, 20%);--normal-border-hover:hsl(0, 0%, 25%);--normal-text:var(--gray1);--success-bg:hsl(150, 100%, 6%);--success-border:hsl(147, 100%, 12%);--success-text:hsl(150, 86%, 65%);--info-bg:hsl(215, 100%, 6%);--info-border:hsl(223, 43%, 17%);--info-text:hsl(216, 87%, 65%);--warning-bg:hsl(64, 100%, 6%);--warning-border:hsl(60, 100%, 9%);--warning-text:hsl(46, 87%, 65%);--error-bg:hsl(358, 76%, 10%);--error-border:hsl(357, 89%, 16%);--error-text:hsl(358, 100%, 81%)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]{background:var(--normal-bg);border-color:var(--normal-border);color:var(--normal-text)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]:hover{background:var(--normal-bg-hover);border-color:var(--normal-border-hover)}[data-rich-colors=true][data-sonner-toast][data-type=success]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=success] [data-close-button]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=info]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=info] [data-close-button]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning] [data-close-button]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=error]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}[data-rich-colors=true][data-sonner-toast][data-type=error] [data-close-button]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}.sonner-loading-wrapper{--size:16px;height:var(--size);width:var(--size);position:absolute;inset:0;z-index:10}.sonner-loading-wrapper[data-visible=false]{transform-origin:center;animation:sonner-fade-out .2s ease forwards}.sonner-spinner{position:relative;top:50%;left:50%;height:var(--size);width:var(--size)}.sonner-loading-bar{animation:sonner-spin 1.2s linear infinite;background:var(--gray11);border-radius:6px;height:8%;left:-10%;position:absolute;top:-3.9%;width:24%}.sonner-loading-bar:first-child{animation-delay:-1.2s;transform:rotate(.0001deg) translate(146%)}.sonner-loading-bar:nth-child(2){animation-delay:-1.1s;transform:rotate(30deg) translate(146%)}.sonner-loading-bar:nth-child(3){animation-delay:-1s;transform:rotate(60deg) translate(146%)}.sonner-loading-bar:nth-child(4){animation-delay:-.9s;transform:rotate(90deg) translate(146%)}.sonner-loading-bar:nth-child(5){animation-delay:-.8s;transform:rotate(120deg) translate(146%)}.sonner-loading-bar:nth-child(6){animation-delay:-.7s;transform:rotate(150deg) translate(146%)}.sonner-loading-bar:nth-child(7){animation-delay:-.6s;transform:rotate(180deg) translate(146%)}.sonner-loading-bar:nth-child(8){animation-delay:-.5s;transform:rotate(210deg) translate(146%)}.sonner-loading-bar:nth-child(9){animation-delay:-.4s;transform:rotate(240deg) translate(146%)}.sonner-loading-bar:nth-child(10){animation-delay:-.3s;transform:rotate(270deg) translate(146%)}.sonner-loading-bar:nth-child(11){animation-delay:-.2s;transform:rotate(300deg) translate(146%)}.sonner-loading-bar:nth-child(12){animation-delay:-.1s;transform:rotate(330deg) translate(146%)}@keyframes sonner-fade-in{0%{opacity:0;transform:scale(.8)}100%{opacity:1;transform:scale(1)}}@keyframes sonner-fade-out{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(.8)}}@keyframes sonner-spin{0%{opacity:1}100%{opacity:.15}}@media (prefers-reduced-motion){.sonner-loading-bar,[data-sonner-toast],[data-sonner-toast]>*{transition:none!important;animation:none!important}}.sonner-loader{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);transform-origin:center;transition:opacity .2s,transform .2s}.sonner-loader[data-visible=false]{opacity:0;transform:scale(.8) translate(-50%,-50%)}");
function Mu(e) {
  return e.label !== void 0;
}
const kq = 3, $q = "24px", Nq = "16px", zS = 4e3, Mq = 356, Aq = 14, _q = 45, Dq = 200;
function pr(...e) {
  return e.filter(Boolean).join(" ");
}
function Lq(e) {
  const [t, n] = e.split("-"), o = [];
  return t && o.push(t), n && o.push(n), o;
}
const Bq = (e) => {
  var t, n, o, r, i, s, l, c, u;
  const { invert: d, toast: f, unstyled: p, interacting: h, setHeights: g, visibleToasts: m, heights: y, index: b, toasts: T, expanded: v, removeToast: w, defaultRichColors: S, closeButton: C, style: E, cancelButtonStyle: P, actionButtonStyle: M, className: x = "", descriptionClassName: I = "", duration: k, position: _, gap: R, expandByDefault: A, classNames: N, icons: L, closeButtonAriaLabel: V = "Close toast" } = e, [D, B] = Z.useState(null), [F, U] = Z.useState(null), [q, G] = Z.useState(!1), [K, te] = Z.useState(!1), [ne, W] = Z.useState(!1), [ee, Y] = Z.useState(!1), [re, z] = Z.useState(!1), [de, ue] = Z.useState(0), [xe, _e] = Z.useState(0), we = Z.useRef(f.duration || k || zS), De = Z.useRef(null), Ee = Z.useRef(null), Ve = b === 0, Me = b + 1 <= m, j = f.type, J = f.dismissible !== !1, ie = f.className || "", Q = f.descriptionClassName || "", H = Z.useMemo(() => y.findIndex((je) => je.toastId === f.id) || 0, [
    y,
    f.id
  ]), X = Z.useMemo(() => {
    var je;
    return (je = f.closeButton) != null ? je : C;
  }, [
    f.closeButton,
    C
  ]), se = Z.useMemo(() => f.duration || k || zS, [
    f.duration,
    k
  ]), ye = Z.useRef(0), he = Z.useRef(0), le = Z.useRef(0), ae = Z.useRef(null), [ce, Te] = _.split("-"), Re = Z.useMemo(() => y.reduce((je, pt, Et) => Et >= H ? je : je + pt.height, 0), [
    y,
    H
  ]), oe = Tq(), be = f.invert || d, Ne = j === "loading";
  he.current = Z.useMemo(() => H * R + Re, [
    H,
    Re
  ]), Z.useEffect(() => {
    we.current = se;
  }, [
    se
  ]), Z.useEffect(() => {
    G(!0);
  }, []), Z.useEffect(() => {
    const je = Ee.current;
    if (je) {
      const pt = je.getBoundingClientRect().height;
      return _e(pt), g((Et) => [
        {
          toastId: f.id,
          height: pt,
          position: f.position
        },
        ...Et
      ]), () => g((Et) => Et.filter((Le) => Le.toastId !== f.id));
    }
  }, [
    g,
    f.id
  ]), Z.useLayoutEffect(() => {
    if (!q) return;
    const je = Ee.current, pt = je.style.height;
    je.style.height = "auto";
    const Et = je.getBoundingClientRect().height;
    je.style.height = pt, _e(Et), g((Le) => Le.find((Bt) => Bt.toastId === f.id) ? Le.map((Bt) => Bt.toastId === f.id ? {
      ...Bt,
      height: Et
    } : Bt) : [
      {
        toastId: f.id,
        height: Et,
        position: f.position
      },
      ...Le
    ]);
  }, [
    q,
    f.title,
    f.description,
    g,
    f.id
  ]);
  const We = Z.useCallback(() => {
    te(!0), ue(he.current), g((je) => je.filter((pt) => pt.toastId !== f.id)), setTimeout(() => {
      w(f);
    }, Dq);
  }, [
    f,
    w,
    g,
    he
  ]);
  Z.useEffect(() => {
    if (f.promise && j === "loading" || f.duration === 1 / 0 || f.type === "loading") return;
    let je;
    return v || h || oe ? (() => {
      if (le.current < ye.current) {
        const Le = (/* @__PURE__ */ new Date()).getTime() - ye.current;
        we.current = we.current - Le;
      }
      le.current = (/* @__PURE__ */ new Date()).getTime();
    })() : (() => {
      we.current !== 1 / 0 && (ye.current = (/* @__PURE__ */ new Date()).getTime(), je = setTimeout(() => {
        f.onAutoClose == null || f.onAutoClose.call(f, f), We();
      }, we.current));
    })(), () => clearTimeout(je);
  }, [
    v,
    h,
    f,
    j,
    oe,
    We
  ]), Z.useEffect(() => {
    f.delete && We();
  }, [
    We,
    f.delete
  ]);
  function Ke() {
    var je;
    if (L != null && L.loading) {
      var pt;
      return /* @__PURE__ */ Z.createElement("div", {
        className: pr(N == null ? void 0 : N.loader, f == null || (pt = f.classNames) == null ? void 0 : pt.loader, "sonner-loader"),
        "data-visible": j === "loading"
      }, L.loading);
    }
    return /* @__PURE__ */ Z.createElement(yq, {
      className: pr(N == null ? void 0 : N.loader, f == null || (je = f.classNames) == null ? void 0 : je.loader),
      visible: j === "loading"
    });
  }
  const xt = f.icon || (L == null ? void 0 : L[j]) || mq(j);
  var ft, Ct;
  return /* @__PURE__ */ Z.createElement("li", {
    tabIndex: 0,
    ref: Ee,
    className: pr(x, ie, N == null ? void 0 : N.toast, f == null || (t = f.classNames) == null ? void 0 : t.toast, N == null ? void 0 : N.default, N == null ? void 0 : N[j], f == null || (n = f.classNames) == null ? void 0 : n[j]),
    "data-sonner-toast": "",
    "data-rich-colors": (ft = f.richColors) != null ? ft : S,
    "data-styled": !(f.jsx || f.unstyled || p),
    "data-mounted": q,
    "data-promise": !!f.promise,
    "data-swiped": re,
    "data-removed": K,
    "data-visible": Me,
    "data-y-position": ce,
    "data-x-position": Te,
    "data-index": b,
    "data-front": Ve,
    "data-swiping": ne,
    "data-dismissible": J,
    "data-type": j,
    "data-invert": be,
    "data-swipe-out": ee,
    "data-swipe-direction": F,
    "data-expanded": !!(v || A && q),
    style: {
      "--index": b,
      "--toasts-before": b,
      "--z-index": T.length - b,
      "--offset": `${K ? de : he.current}px`,
      "--initial-height": A ? "auto" : `${xe}px`,
      ...E,
      ...f.style
    },
    onDragEnd: () => {
      W(!1), B(null), ae.current = null;
    },
    onPointerDown: (je) => {
      Ne || !J || (De.current = /* @__PURE__ */ new Date(), ue(he.current), je.target.setPointerCapture(je.pointerId), je.target.tagName !== "BUTTON" && (W(!0), ae.current = {
        x: je.clientX,
        y: je.clientY
      }));
    },
    onPointerUp: () => {
      var je, pt, Et;
      if (ee || !J) return;
      ae.current = null;
      const Le = Number(((je = Ee.current) == null ? void 0 : je.style.getPropertyValue("--swipe-amount-x").replace("px", "")) || 0), Ft = Number(((pt = Ee.current) == null ? void 0 : pt.style.getPropertyValue("--swipe-amount-y").replace("px", "")) || 0), Bt = (/* @__PURE__ */ new Date()).getTime() - ((Et = De.current) == null ? void 0 : Et.getTime()), tn = D === "x" ? Le : Ft, ko = Math.abs(tn) / Bt;
      if (Math.abs(tn) >= _q || ko > 0.11) {
        ue(he.current), f.onDismiss == null || f.onDismiss.call(f, f), U(D === "x" ? Le > 0 ? "right" : "left" : Ft > 0 ? "down" : "up"), We(), Y(!0);
        return;
      } else {
        var wn, In;
        (wn = Ee.current) == null || wn.style.setProperty("--swipe-amount-x", "0px"), (In = Ee.current) == null || In.style.setProperty("--swipe-amount-y", "0px");
      }
      z(!1), W(!1), B(null);
    },
    onPointerMove: (je) => {
      var pt, Et, Le;
      if (!ae.current || !J || ((pt = window.getSelection()) == null ? void 0 : pt.toString().length) > 0) return;
      const Bt = je.clientY - ae.current.y, tn = je.clientX - ae.current.x;
      var ko;
      const wn = (ko = e.swipeDirections) != null ? ko : Lq(_);
      !D && (Math.abs(tn) > 1 || Math.abs(Bt) > 1) && B(Math.abs(tn) > Math.abs(Bt) ? "x" : "y");
      let In = {
        x: 0,
        y: 0
      };
      const ei = (fo) => 1 / (1.5 + Math.abs(fo) / 20);
      if (D === "y") {
        if (wn.includes("top") || wn.includes("bottom"))
          if (wn.includes("top") && Bt < 0 || wn.includes("bottom") && Bt > 0)
            In.y = Bt;
          else {
            const fo = Bt * ei(Bt);
            In.y = Math.abs(fo) < Math.abs(Bt) ? fo : Bt;
          }
      } else if (D === "x" && (wn.includes("left") || wn.includes("right")))
        if (wn.includes("left") && tn < 0 || wn.includes("right") && tn > 0)
          In.x = tn;
        else {
          const fo = tn * ei(tn);
          In.x = Math.abs(fo) < Math.abs(tn) ? fo : tn;
        }
      (Math.abs(In.x) > 0 || Math.abs(In.y) > 0) && z(!0), (Et = Ee.current) == null || Et.style.setProperty("--swipe-amount-x", `${In.x}px`), (Le = Ee.current) == null || Le.style.setProperty("--swipe-amount-y", `${In.y}px`);
    }
  }, X && !f.jsx && j !== "loading" ? /* @__PURE__ */ Z.createElement("button", {
    "aria-label": V,
    "data-disabled": Ne,
    "data-close-button": !0,
    onClick: Ne || !J ? () => {
    } : () => {
      We(), f.onDismiss == null || f.onDismiss.call(f, f);
    },
    className: pr(N == null ? void 0 : N.closeButton, f == null || (o = f.classNames) == null ? void 0 : o.closeButton)
  }, (Ct = L == null ? void 0 : L.close) != null ? Ct : Sq) : null, (j || f.icon || f.promise) && f.icon !== null && ((L == null ? void 0 : L[j]) !== null || f.icon) ? /* @__PURE__ */ Z.createElement("div", {
    "data-icon": "",
    className: pr(N == null ? void 0 : N.icon, f == null || (r = f.classNames) == null ? void 0 : r.icon)
  }, f.promise || f.type === "loading" && !f.icon ? f.icon || Ke() : null, f.type !== "loading" ? xt : null) : null, /* @__PURE__ */ Z.createElement("div", {
    "data-content": "",
    className: pr(N == null ? void 0 : N.content, f == null || (i = f.classNames) == null ? void 0 : i.content)
  }, /* @__PURE__ */ Z.createElement("div", {
    "data-title": "",
    className: pr(N == null ? void 0 : N.title, f == null || (s = f.classNames) == null ? void 0 : s.title)
  }, f.jsx ? f.jsx : typeof f.title == "function" ? f.title() : f.title), f.description ? /* @__PURE__ */ Z.createElement("div", {
    "data-description": "",
    className: pr(I, Q, N == null ? void 0 : N.description, f == null || (l = f.classNames) == null ? void 0 : l.description)
  }, typeof f.description == "function" ? f.description() : f.description) : null), /* @__PURE__ */ Z.isValidElement(f.cancel) ? f.cancel : f.cancel && Mu(f.cancel) ? /* @__PURE__ */ Z.createElement("button", {
    "data-button": !0,
    "data-cancel": !0,
    style: f.cancelButtonStyle || P,
    onClick: (je) => {
      Mu(f.cancel) && J && (f.cancel.onClick == null || f.cancel.onClick.call(f.cancel, je), We());
    },
    className: pr(N == null ? void 0 : N.cancelButton, f == null || (c = f.classNames) == null ? void 0 : c.cancelButton)
  }, f.cancel.label) : null, /* @__PURE__ */ Z.isValidElement(f.action) ? f.action : f.action && Mu(f.action) ? /* @__PURE__ */ Z.createElement("button", {
    "data-button": !0,
    "data-action": !0,
    style: f.actionButtonStyle || M,
    onClick: (je) => {
      Mu(f.action) && (f.action.onClick == null || f.action.onClick.call(f.action, je), !je.defaultPrevented && We());
    },
    className: pr(N == null ? void 0 : N.actionButton, f == null || (u = f.classNames) == null ? void 0 : u.actionButton)
  }, f.action.label) : null);
};
function HS() {
  if (typeof window > "u" || typeof document > "u") return "ltr";
  const e = document.documentElement.getAttribute("dir");
  return e === "auto" || !e ? window.getComputedStyle(document.documentElement).direction : e;
}
function Vq(e, t) {
  const n = {};
  return [
    e,
    t
  ].forEach((o, r) => {
    const i = r === 1, s = i ? "--mobile-offset" : "--offset", l = i ? Nq : $q;
    function c(u) {
      [
        "top",
        "right",
        "bottom",
        "left"
      ].forEach((d) => {
        n[`${s}-${d}`] = typeof u == "number" ? `${u}px` : u;
      });
    }
    typeof o == "number" || typeof o == "string" ? c(o) : typeof o == "object" ? [
      "top",
      "right",
      "bottom",
      "left"
    ].forEach((u) => {
      o[u] === void 0 ? n[`${s}-${u}`] = l : n[`${s}-${u}`] = typeof o[u] == "number" ? `${o[u]}px` : o[u];
    }) : c(l);
  }), n;
}
const Fq = /* @__PURE__ */ Z.forwardRef(function(t, n) {
  const { invert: o, position: r = "bottom-right", hotkey: i = [
    "altKey",
    "KeyT"
  ], expand: s, closeButton: l, className: c, offset: u, mobileOffset: d, theme: f = "light", richColors: p, duration: h, style: g, visibleToasts: m = kq, toastOptions: y, dir: b = HS(), gap: T = Aq, icons: v, containerAriaLabel: w = "Notifications" } = t, [S, C] = Z.useState([]), E = Z.useMemo(() => Array.from(new Set([
    r
  ].concat(S.filter((F) => F.position).map((F) => F.position)))), [
    S,
    r
  ]), [P, M] = Z.useState([]), [x, I] = Z.useState(!1), [k, _] = Z.useState(!1), [R, A] = Z.useState(f !== "system" ? f : typeof window < "u" && window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light"), N = Z.useRef(null), L = i.join("+").replace(/Key/g, "").replace(/Digit/g, ""), V = Z.useRef(null), D = Z.useRef(!1), B = Z.useCallback((F) => {
    C((U) => {
      var q;
      return (q = U.find((G) => G.id === F.id)) != null && q.delete || no.dismiss(F.id), U.filter(({ id: G }) => G !== F.id);
    });
  }, []);
  return Z.useEffect(() => no.subscribe((F) => {
    if (F.dismiss) {
      requestAnimationFrame(() => {
        C((U) => U.map((q) => q.id === F.id ? {
          ...q,
          delete: !0
        } : q));
      });
      return;
    }
    setTimeout(() => {
      Fs.flushSync(() => {
        C((U) => {
          const q = U.findIndex((G) => G.id === F.id);
          return q !== -1 ? [
            ...U.slice(0, q),
            {
              ...U[q],
              ...F
            },
            ...U.slice(q + 1)
          ] : [
            F,
            ...U
          ];
        });
      });
    });
  }), [
    S
  ]), Z.useEffect(() => {
    if (f !== "system") {
      A(f);
      return;
    }
    if (f === "system" && (window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? A("dark") : A("light")), typeof window > "u") return;
    const F = window.matchMedia("(prefers-color-scheme: dark)");
    try {
      F.addEventListener("change", ({ matches: U }) => {
        A(U ? "dark" : "light");
      });
    } catch {
      F.addListener(({ matches: q }) => {
        try {
          A(q ? "dark" : "light");
        } catch (G) {
          console.error(G);
        }
      });
    }
  }, [
    f
  ]), Z.useEffect(() => {
    S.length <= 1 && I(!1);
  }, [
    S
  ]), Z.useEffect(() => {
    const F = (U) => {
      var q;
      if (i.every((te) => U[te] || U.code === te)) {
        var K;
        I(!0), (K = N.current) == null || K.focus();
      }
      U.code === "Escape" && (document.activeElement === N.current || (q = N.current) != null && q.contains(document.activeElement)) && I(!1);
    };
    return document.addEventListener("keydown", F), () => document.removeEventListener("keydown", F);
  }, [
    i
  ]), Z.useEffect(() => {
    if (N.current)
      return () => {
        V.current && (V.current.focus({
          preventScroll: !0
        }), V.current = null, D.current = !1);
      };
  }, [
    N.current
  ]), // Remove item from normal navigation flow, only available via hotkey
  /* @__PURE__ */ Z.createElement("section", {
    ref: n,
    "aria-label": `${w} ${L}`,
    tabIndex: -1,
    "aria-live": "polite",
    "aria-relevant": "additions text",
    "aria-atomic": "false",
    suppressHydrationWarning: !0
  }, E.map((F, U) => {
    var q;
    const [G, K] = F.split("-");
    return S.length ? /* @__PURE__ */ Z.createElement("ol", {
      key: F,
      dir: b === "auto" ? HS() : b,
      tabIndex: -1,
      ref: N,
      className: c,
      "data-sonner-toaster": !0,
      "data-sonner-theme": R,
      "data-y-position": G,
      "data-lifted": x && S.length > 1 && !s,
      "data-x-position": K,
      style: {
        "--front-toast-height": `${((q = P[0]) == null ? void 0 : q.height) || 0}px`,
        "--width": `${Mq}px`,
        "--gap": `${T}px`,
        ...g,
        ...Vq(u, d)
      },
      onBlur: (te) => {
        D.current && !te.currentTarget.contains(te.relatedTarget) && (D.current = !1, V.current && (V.current.focus({
          preventScroll: !0
        }), V.current = null));
      },
      onFocus: (te) => {
        te.target instanceof HTMLElement && te.target.dataset.dismissible === "false" || D.current || (D.current = !0, V.current = te.relatedTarget);
      },
      onMouseEnter: () => I(!0),
      onMouseMove: () => I(!0),
      onMouseLeave: () => {
        k || I(!1);
      },
      onDragEnd: () => I(!1),
      onPointerDown: (te) => {
        te.target instanceof HTMLElement && te.target.dataset.dismissible === "false" || _(!0);
      },
      onPointerUp: () => _(!1)
    }, S.filter((te) => !te.position && U === 0 || te.position === F).map((te, ne) => {
      var W, ee;
      return /* @__PURE__ */ Z.createElement(Bq, {
        key: te.id,
        icons: v,
        index: ne,
        toast: te,
        defaultRichColors: p,
        duration: (W = y == null ? void 0 : y.duration) != null ? W : h,
        className: y == null ? void 0 : y.className,
        descriptionClassName: y == null ? void 0 : y.descriptionClassName,
        invert: o,
        visibleToasts: m,
        closeButton: (ee = y == null ? void 0 : y.closeButton) != null ? ee : l,
        interacting: k,
        position: F,
        style: y == null ? void 0 : y.style,
        unstyled: y == null ? void 0 : y.unstyled,
        classNames: y == null ? void 0 : y.classNames,
        cancelButtonStyle: y == null ? void 0 : y.cancelButtonStyle,
        actionButtonStyle: y == null ? void 0 : y.actionButtonStyle,
        closeButtonAriaLabel: y == null ? void 0 : y.closeButtonAriaLabel,
        removeToast: B,
        toasts: S.filter((Y) => Y.position == te.position),
        heights: P.filter((Y) => Y.position == te.position),
        setHeights: M,
        expandByDefault: s,
        gap: T,
        expanded: x,
        swipeDirections: t.swipeDirections
      });
    })) : null;
  }));
}), jq = Pe(({ position: e = "bottom-right" }) => {
  const { isDarkMode: t } = vp();
  return /* @__PURE__ */ O(
    Fq,
    {
      closeButton: !1,
      invert: t,
      visibleToasts: 3,
      position: e,
      gap: 6
    }
  );
});
jq.displayName = "Button";
function zq() {
  return Be(({ type: t, title: n, description: o }) => {
    const r = {
      description: o,
      icon: /* @__PURE__ */ O(Eo, { icon: Hq(t), color: Wq(t) }),
      cancel: {
        label: /* @__PURE__ */ O(Eo, { icon: "solar:close-circle-outline" }),
        onClick: () => {
        }
      },
      cancelButtonStyle: { background: "transparent" }
    };
    return t === "success" ? jh.success(n, r) : t === "error" ? jh.error(n, r) : jh.info(n, r);
  }, []);
}
function Hq(e) {
  switch (e) {
    case "success":
      return "solar:check-circle-bold";
    case "error":
      return "solar:danger-triangle-bold";
    case "info":
    default:
      return "solar:danger-circle-bold";
  }
}
function Wq(e) {
  switch (e) {
    case "success":
      return "success";
    case "error":
      return "error";
    case "info":
      return "auto";
    default:
      return "disabled";
  }
}
const Uq = Pe(() => {
  const { isFullScreen: e, toggleFullScreen: t } = A9();
  return /* @__PURE__ */ O(
    Mn,
    {
      isCircle: !0,
      isGhost: !0,
      color: "auto",
      icon: e ? "solar:quit-full-screen-square-line-duotone" : "solar:full-screen-square-line-duotone",
      iconWidth: 28,
      onClick: t
    }
  );
});
Uq.displayName = "AdminFullScreen";
const qq = Pe(({ children: e, sx: t }) => /* @__PURE__ */ O(
  Wr,
  {
    isOutlined: !0,
    sx: {
      width: "100%",
      position: "sticky",
      top: 0,
      left: 0,
      right: 0,
      ...t
    },
    children: /* @__PURE__ */ O(
      bn,
      {
        className: "VenomousUI-AdminHeader",
        row: !0,
        component: "header",
        sx: {
          width: "100%",
          height: 50,
          alignItems: "center",
          justifyContent: "space-between"
        },
        children: e
      }
    )
  }
));
qq.displayName = "AdminHeader";
const Kq = ({
  items: e,
  isItemSelected: t,
  isItemDisabled: n,
  onItemClick: o,
  renderItem: r
}) => /* @__PURE__ */ O(
  L9,
  {
    cols: { xs: 3, sm: 3, md: 3, lg: 3, xl: 3 },
    height: 68 * Math.ceil(e.length / 3),
    items: e,
    renderGridItem: (i) => /* @__PURE__ */ O(
      _c,
      {
        isOutlined: !t(i),
        clickable: !0,
        disabled: n ? n(i) : !1,
        onClick: () => void (o == null ? void 0 : o(i)),
        sx: {
          width: "100%",
          height: "60px",
          m: "4px",
          p: "8px",
          border: 0,
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          transition: "outline-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out",
          outlineWidth: "1px",
          outlineStyle: "solid",
          outlineColor: ({ palette: s }) => t(i) ? s.primary.main : "divider",
          color: ({ palette: s }) => `${s.text.primary} !important`
        },
        children: r(i)
      }
    )
  }
), Gq = Pe(
  Kq
), Yq = Pe(
  ({
    children: e,
    width: t = 300,
    title: n = "Settings",
    labelOfThemeMode: o = "ThemeMode",
    labelOfThemePalettes: r = "ThemePalettes",
    onChangeThemeMode: i,
    onChangeThemePalette: s
  }) => {
    const { isOpen: l, openDrawer: c, closeDrawer: u } = t3();
    return /* @__PURE__ */ Se(Jn, { children: [
      /* @__PURE__ */ O(
        Mn,
        {
          isCircle: !0,
          isGhost: !0,
          icon: "solar:settings-line-duotone",
          iconWidth: 28,
          onClick: c,
          color: "auto"
        }
      ),
      /* @__PURE__ */ Se(fP, { width: t, position: "right", isOpen: l, closeDrawer: u, children: [
        /* @__PURE__ */ O(pP, { title: n, closeDrawer: u }),
        /* @__PURE__ */ O(Rn, { text: o, isLabel: !0 }),
        /* @__PURE__ */ O(Xq, { onChangeThemeMode: i }),
        /* @__PURE__ */ O("br", {}),
        /* @__PURE__ */ O(Rn, { text: r, isLabel: !0 }),
        /* @__PURE__ */ O(Zq, { onChangeThemePalette: s }),
        /* @__PURE__ */ O("br", {}),
        e
      ] })
    ] });
  }
);
Yq.displayName = "AdminSettingsDrawer";
function Xq({
  onChangeThemeMode: e
}) {
  const { themeMode: t, isDarkMode: n, toggleThemeMode: o } = vp();
  return /* @__PURE__ */ Se(
    _c,
    {
      isOutlined: !0,
      clickable: !0,
      onClick: () => {
        o(), setTimeout(() => void (e == null ? void 0 : e(t)), 200);
      },
      sx: {
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between",
        height: "60px",
        pl: "24px",
        mt: "2px"
      },
      children: [
        /* @__PURE__ */ O(
          Eo,
          {
            icon: n ? "solar:moon-bold-duotone" : "solar:sun-2-bold-duotone",
            width: 24,
            color: "primary"
          }
        ),
        /* @__PURE__ */ O(_b, { value: n, onChange: () => {
        } })
      ]
    }
  );
}
function Zq({
  onChangeThemePalette: e
}) {
  const { allPaletteNames: t, themePaletteName: n, setThemePaletteName: o } = Fb();
  return /* @__PURE__ */ O(
    Gq,
    {
      items: t.map((r) => r),
      isItemSelected: (r) => r === n,
      isItemDisabled: (r) => r === n,
      onItemClick: async (r) => {
        o(r), await new Promise((i) => setTimeout(i, 200)), e == null || e(r);
      },
      renderItem: (r) => /* @__PURE__ */ O(
        Eo,
        {
          icon: "solar:siderbar-bold-duotone",
          width: 32,
          sx: { color: ug(r).main }
        }
      )
    }
  );
}
const Qq = Pe(
  ({
    menuHeaderHeight: e = 50,
    menuWidth: t = 220,
    collapsedWidth: n = 64,
    menuItems: o,
    currentPath: r,
    renderHeader: i,
    sx: s,
    collapseButtonSx: l
  }) => {
    const { checkIsParentItemActive: c, checkIsSubItemActive: u } = z5({
      currentPath: r
    });
    return /* @__PURE__ */ O(
      rP,
      {
        width: t,
        headerHeight: e,
        collapsedWidth: n,
        defaultIsCollapsed: !1,
        sx: s,
        collapseButtonSx: l,
        renderHeader: i,
        renderContent: ({ isCollapsed: d }) => /* @__PURE__ */ O(
          Pl,
          {
            width: "100%",
            height: `calc(100svh - ${e}px - 16px)`,
            items: o,
            renderItem: (f) => {
              var p;
              return f.subItems ? !d && ((p = f.subItems) != null && p.length) ? /* @__PURE__ */ O(
                iP,
                {
                  defaultIsCollapsed: !0,
                  renderTrigger: (h) => /* @__PURE__ */ O(
                    Yi,
                    {
                      label: f.label,
                      isActive: c(f),
                      icon: f.icon,
                      clickable: !0,
                      ellipsis: !0,
                      onClick: h.toggleCollapsed,
                      endIcon: /* @__PURE__ */ O(
                        Eo,
                        {
                          icon: h.isCollapsed ? "solar:alt-arrow-down-bold-duotone" : "solar:alt-arrow-up-bold-duotone"
                        }
                      ),
                      sx: {
                        backgroundColor: h.isCollapsed ? "transparent" : "divider"
                      }
                    }
                  ),
                  style: {
                    // width: 'calc(100% - 26px)',
                    // marginLeft: '26px',
                  },
                  children: /* @__PURE__ */ O(
                    Pl,
                    {
                      width: "100%",
                      items: f.subItems,
                      renderItem: (h) => /* @__PURE__ */ O(
                        Yi,
                        {
                          label: h.label,
                          isActive: u(h),
                          startIconPlaceholder: !0,
                          clickable: !0,
                          ellipsis: !0,
                          onClick: h.onClick,
                          sx: {}
                        },
                        h.label
                      )
                    }
                  )
                }
              ) : /* @__PURE__ */ O(
                vI,
                {
                  id: f.label,
                  position: "right",
                  sx: { width: "100%" },
                  contentSx: { p: "8px" },
                  renderPopperHandler: ({ isOpen: h, openPopper: g }) => /* @__PURE__ */ O(
                    Yi,
                    {
                      label: f.label,
                      isActive: c(f),
                      icon: f.icon,
                      clickable: !0,
                      ellipsis: !0,
                      onClick: g,
                      onMouseEnter: g,
                      sx: { backgroundColor: h ? "divider" : "transparent" }
                    }
                  ),
                  children: /* @__PURE__ */ O(
                    Pl,
                    {
                      width: t,
                      items: f.subItems,
                      renderItem: (h) => /* @__PURE__ */ O(
                        Yi,
                        {
                          label: h.label,
                          isActive: u(h),
                          icon: h.icon,
                          clickable: !0,
                          ellipsis: !0,
                          onClick: h.onClick
                        },
                        h.label
                      )
                    }
                  )
                }
              ) : /* @__PURE__ */ O(
                Yi,
                {
                  label: f.label,
                  isActive: c(f),
                  icon: f.icon,
                  clickable: !0,
                  ellipsis: !0,
                  onClick: f.onClick
                },
                f.label
              );
            }
          }
        )
      }
    );
  }
);
Qq.displayName = "AdminSideNavMenu";
function xn(e) {
  if (typeof e == "string" || typeof e == "number") return "" + e;
  let t = "";
  if (Array.isArray(e))
    for (let n = 0, o; n < e.length; n++)
      (o = xn(e[n])) !== "" && (t += (t && " ") + o);
  else
    for (let n in e)
      e[n] && (t += (t && " ") + n);
  return t;
}
var Jq = { value: () => {
} };
function xp() {
  for (var e = 0, t = arguments.length, n = {}, o; e < t; ++e) {
    if (!(o = arguments[e] + "") || o in n || /[\s.]/.test(o)) throw new Error("illegal type: " + o);
    n[o] = [];
  }
  return new ad(n);
}
function ad(e) {
  this._ = e;
}
function eK(e, t) {
  return e.trim().split(/^|\s+/).map(function(n) {
    var o = "", r = n.indexOf(".");
    if (r >= 0 && (o = n.slice(r + 1), n = n.slice(0, r)), n && !t.hasOwnProperty(n)) throw new Error("unknown type: " + n);
    return { type: n, name: o };
  });
}
ad.prototype = xp.prototype = {
  constructor: ad,
  on: function(e, t) {
    var n = this._, o = eK(e + "", n), r, i = -1, s = o.length;
    if (arguments.length < 2) {
      for (; ++i < s; ) if ((r = (e = o[i]).type) && (r = tK(n[r], e.name))) return r;
      return;
    }
    if (t != null && typeof t != "function") throw new Error("invalid callback: " + t);
    for (; ++i < s; )
      if (r = (e = o[i]).type) n[r] = WS(n[r], e.name, t);
      else if (t == null) for (r in n) n[r] = WS(n[r], e.name, null);
    return this;
  },
  copy: function() {
    var e = {}, t = this._;
    for (var n in t) e[n] = t[n].slice();
    return new ad(e);
  },
  call: function(e, t) {
    if ((r = arguments.length - 2) > 0) for (var n = new Array(r), o = 0, r, i; o < r; ++o) n[o] = arguments[o + 2];
    if (!this._.hasOwnProperty(e)) throw new Error("unknown type: " + e);
    for (i = this._[e], o = 0, r = i.length; o < r; ++o) i[o].value.apply(t, n);
  },
  apply: function(e, t, n) {
    if (!this._.hasOwnProperty(e)) throw new Error("unknown type: " + e);
    for (var o = this._[e], r = 0, i = o.length; r < i; ++r) o[r].value.apply(t, n);
  }
};
function tK(e, t) {
  for (var n = 0, o = e.length, r; n < o; ++n)
    if ((r = e[n]).name === t)
      return r.value;
}
function WS(e, t, n) {
  for (var o = 0, r = e.length; o < r; ++o)
    if (e[o].name === t) {
      e[o] = Jq, e = e.slice(0, o).concat(e.slice(o + 1));
      break;
    }
  return n != null && e.push({ name: t, value: n }), e;
}
var yg = "http://www.w3.org/1999/xhtml";
const US = {
  svg: "http://www.w3.org/2000/svg",
  xhtml: yg,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};
function wp(e) {
  var t = e += "", n = t.indexOf(":");
  return n >= 0 && (t = e.slice(0, n)) !== "xmlns" && (e = e.slice(n + 1)), US.hasOwnProperty(t) ? { space: US[t], local: e } : e;
}
function nK(e) {
  return function() {
    var t = this.ownerDocument, n = this.namespaceURI;
    return n === yg && t.documentElement.namespaceURI === yg ? t.createElement(e) : t.createElementNS(n, e);
  };
}
function oK(e) {
  return function() {
    return this.ownerDocument.createElementNS(e.space, e.local);
  };
}
function SI(e) {
  var t = wp(e);
  return (t.local ? oK : nK)(t);
}
function rK() {
}
function zb(e) {
  return e == null ? rK : function() {
    return this.querySelector(e);
  };
}
function iK(e) {
  typeof e != "function" && (e = zb(e));
  for (var t = this._groups, n = t.length, o = new Array(n), r = 0; r < n; ++r)
    for (var i = t[r], s = i.length, l = o[r] = new Array(s), c, u, d = 0; d < s; ++d)
      (c = i[d]) && (u = e.call(c, c.__data__, d, i)) && ("__data__" in c && (u.__data__ = c.__data__), l[d] = u);
  return new Po(o, this._parents);
}
function sK(e) {
  return e == null ? [] : Array.isArray(e) ? e : Array.from(e);
}
function aK() {
  return [];
}
function TI(e) {
  return e == null ? aK : function() {
    return this.querySelectorAll(e);
  };
}
function lK(e) {
  return function() {
    return sK(e.apply(this, arguments));
  };
}
function cK(e) {
  typeof e == "function" ? e = lK(e) : e = TI(e);
  for (var t = this._groups, n = t.length, o = [], r = [], i = 0; i < n; ++i)
    for (var s = t[i], l = s.length, c, u = 0; u < l; ++u)
      (c = s[u]) && (o.push(e.call(c, c.__data__, u, s)), r.push(c));
  return new Po(o, r);
}
function CI(e) {
  return function() {
    return this.matches(e);
  };
}
function EI(e) {
  return function(t) {
    return t.matches(e);
  };
}
var uK = Array.prototype.find;
function dK(e) {
  return function() {
    return uK.call(this.children, e);
  };
}
function fK() {
  return this.firstElementChild;
}
function pK(e) {
  return this.select(e == null ? fK : dK(typeof e == "function" ? e : EI(e)));
}
var hK = Array.prototype.filter;
function mK() {
  return Array.from(this.children);
}
function gK(e) {
  return function() {
    return hK.call(this.children, e);
  };
}
function yK(e) {
  return this.selectAll(e == null ? mK : gK(typeof e == "function" ? e : EI(e)));
}
function bK(e) {
  typeof e != "function" && (e = CI(e));
  for (var t = this._groups, n = t.length, o = new Array(n), r = 0; r < n; ++r)
    for (var i = t[r], s = i.length, l = o[r] = [], c, u = 0; u < s; ++u)
      (c = i[u]) && e.call(c, c.__data__, u, i) && l.push(c);
  return new Po(o, this._parents);
}
function OI(e) {
  return new Array(e.length);
}
function vK() {
  return new Po(this._enter || this._groups.map(OI), this._parents);
}
function Yd(e, t) {
  this.ownerDocument = e.ownerDocument, this.namespaceURI = e.namespaceURI, this._next = null, this._parent = e, this.__data__ = t;
}
Yd.prototype = {
  constructor: Yd,
  appendChild: function(e) {
    return this._parent.insertBefore(e, this._next);
  },
  insertBefore: function(e, t) {
    return this._parent.insertBefore(e, t);
  },
  querySelector: function(e) {
    return this._parent.querySelector(e);
  },
  querySelectorAll: function(e) {
    return this._parent.querySelectorAll(e);
  }
};
function xK(e) {
  return function() {
    return e;
  };
}
function wK(e, t, n, o, r, i) {
  for (var s = 0, l, c = t.length, u = i.length; s < u; ++s)
    (l = t[s]) ? (l.__data__ = i[s], o[s] = l) : n[s] = new Yd(e, i[s]);
  for (; s < c; ++s)
    (l = t[s]) && (r[s] = l);
}
function SK(e, t, n, o, r, i, s) {
  var l, c, u = /* @__PURE__ */ new Map(), d = t.length, f = i.length, p = new Array(d), h;
  for (l = 0; l < d; ++l)
    (c = t[l]) && (p[l] = h = s.call(c, c.__data__, l, t) + "", u.has(h) ? r[l] = c : u.set(h, c));
  for (l = 0; l < f; ++l)
    h = s.call(e, i[l], l, i) + "", (c = u.get(h)) ? (o[l] = c, c.__data__ = i[l], u.delete(h)) : n[l] = new Yd(e, i[l]);
  for (l = 0; l < d; ++l)
    (c = t[l]) && u.get(p[l]) === c && (r[l] = c);
}
function TK(e) {
  return e.__data__;
}
function CK(e, t) {
  if (!arguments.length) return Array.from(this, TK);
  var n = t ? SK : wK, o = this._parents, r = this._groups;
  typeof e != "function" && (e = xK(e));
  for (var i = r.length, s = new Array(i), l = new Array(i), c = new Array(i), u = 0; u < i; ++u) {
    var d = o[u], f = r[u], p = f.length, h = EK(e.call(d, d && d.__data__, u, o)), g = h.length, m = l[u] = new Array(g), y = s[u] = new Array(g), b = c[u] = new Array(p);
    n(d, f, m, y, b, h, t);
    for (var T = 0, v = 0, w, S; T < g; ++T)
      if (w = m[T]) {
        for (T >= v && (v = T + 1); !(S = y[v]) && ++v < g; ) ;
        w._next = S || null;
      }
  }
  return s = new Po(s, o), s._enter = l, s._exit = c, s;
}
function EK(e) {
  return typeof e == "object" && "length" in e ? e : Array.from(e);
}
function OK() {
  return new Po(this._exit || this._groups.map(OI), this._parents);
}
function PK(e, t, n) {
  var o = this.enter(), r = this, i = this.exit();
  return typeof e == "function" ? (o = e(o), o && (o = o.selection())) : o = o.append(e + ""), t != null && (r = t(r), r && (r = r.selection())), n == null ? i.remove() : n(i), o && r ? o.merge(r).order() : r;
}
function RK(e) {
  for (var t = e.selection ? e.selection() : e, n = this._groups, o = t._groups, r = n.length, i = o.length, s = Math.min(r, i), l = new Array(r), c = 0; c < s; ++c)
    for (var u = n[c], d = o[c], f = u.length, p = l[c] = new Array(f), h, g = 0; g < f; ++g)
      (h = u[g] || d[g]) && (p[g] = h);
  for (; c < r; ++c)
    l[c] = n[c];
  return new Po(l, this._parents);
}
function IK() {
  for (var e = this._groups, t = -1, n = e.length; ++t < n; )
    for (var o = e[t], r = o.length - 1, i = o[r], s; --r >= 0; )
      (s = o[r]) && (i && s.compareDocumentPosition(i) ^ 4 && i.parentNode.insertBefore(s, i), i = s);
  return this;
}
function kK(e) {
  e || (e = $K);
  function t(f, p) {
    return f && p ? e(f.__data__, p.__data__) : !f - !p;
  }
  for (var n = this._groups, o = n.length, r = new Array(o), i = 0; i < o; ++i) {
    for (var s = n[i], l = s.length, c = r[i] = new Array(l), u, d = 0; d < l; ++d)
      (u = s[d]) && (c[d] = u);
    c.sort(t);
  }
  return new Po(r, this._parents).order();
}
function $K(e, t) {
  return e < t ? -1 : e > t ? 1 : e >= t ? 0 : NaN;
}
function NK() {
  var e = arguments[0];
  return arguments[0] = this, e.apply(null, arguments), this;
}
function MK() {
  return Array.from(this);
}
function AK() {
  for (var e = this._groups, t = 0, n = e.length; t < n; ++t)
    for (var o = e[t], r = 0, i = o.length; r < i; ++r) {
      var s = o[r];
      if (s) return s;
    }
  return null;
}
function _K() {
  let e = 0;
  for (const t of this) ++e;
  return e;
}
function DK() {
  return !this.node();
}
function LK(e) {
  for (var t = this._groups, n = 0, o = t.length; n < o; ++n)
    for (var r = t[n], i = 0, s = r.length, l; i < s; ++i)
      (l = r[i]) && e.call(l, l.__data__, i, r);
  return this;
}
function BK(e) {
  return function() {
    this.removeAttribute(e);
  };
}
function VK(e) {
  return function() {
    this.removeAttributeNS(e.space, e.local);
  };
}
function FK(e, t) {
  return function() {
    this.setAttribute(e, t);
  };
}
function jK(e, t) {
  return function() {
    this.setAttributeNS(e.space, e.local, t);
  };
}
function zK(e, t) {
  return function() {
    var n = t.apply(this, arguments);
    n == null ? this.removeAttribute(e) : this.setAttribute(e, n);
  };
}
function HK(e, t) {
  return function() {
    var n = t.apply(this, arguments);
    n == null ? this.removeAttributeNS(e.space, e.local) : this.setAttributeNS(e.space, e.local, n);
  };
}
function WK(e, t) {
  var n = wp(e);
  if (arguments.length < 2) {
    var o = this.node();
    return n.local ? o.getAttributeNS(n.space, n.local) : o.getAttribute(n);
  }
  return this.each((t == null ? n.local ? VK : BK : typeof t == "function" ? n.local ? HK : zK : n.local ? jK : FK)(n, t));
}
function PI(e) {
  return e.ownerDocument && e.ownerDocument.defaultView || e.document && e || e.defaultView;
}
function UK(e) {
  return function() {
    this.style.removeProperty(e);
  };
}
function qK(e, t, n) {
  return function() {
    this.style.setProperty(e, t, n);
  };
}
function KK(e, t, n) {
  return function() {
    var o = t.apply(this, arguments);
    o == null ? this.style.removeProperty(e) : this.style.setProperty(e, o, n);
  };
}
function GK(e, t, n) {
  return arguments.length > 1 ? this.each((t == null ? UK : typeof t == "function" ? KK : qK)(e, t, n ?? "")) : ba(this.node(), e);
}
function ba(e, t) {
  return e.style.getPropertyValue(t) || PI(e).getComputedStyle(e, null).getPropertyValue(t);
}
function YK(e) {
  return function() {
    delete this[e];
  };
}
function XK(e, t) {
  return function() {
    this[e] = t;
  };
}
function ZK(e, t) {
  return function() {
    var n = t.apply(this, arguments);
    n == null ? delete this[e] : this[e] = n;
  };
}
function QK(e, t) {
  return arguments.length > 1 ? this.each((t == null ? YK : typeof t == "function" ? ZK : XK)(e, t)) : this.node()[e];
}
function RI(e) {
  return e.trim().split(/^|\s+/);
}
function Hb(e) {
  return e.classList || new II(e);
}
function II(e) {
  this._node = e, this._names = RI(e.getAttribute("class") || "");
}
II.prototype = {
  add: function(e) {
    var t = this._names.indexOf(e);
    t < 0 && (this._names.push(e), this._node.setAttribute("class", this._names.join(" ")));
  },
  remove: function(e) {
    var t = this._names.indexOf(e);
    t >= 0 && (this._names.splice(t, 1), this._node.setAttribute("class", this._names.join(" ")));
  },
  contains: function(e) {
    return this._names.indexOf(e) >= 0;
  }
};
function kI(e, t) {
  for (var n = Hb(e), o = -1, r = t.length; ++o < r; ) n.add(t[o]);
}
function $I(e, t) {
  for (var n = Hb(e), o = -1, r = t.length; ++o < r; ) n.remove(t[o]);
}
function JK(e) {
  return function() {
    kI(this, e);
  };
}
function eG(e) {
  return function() {
    $I(this, e);
  };
}
function tG(e, t) {
  return function() {
    (t.apply(this, arguments) ? kI : $I)(this, e);
  };
}
function nG(e, t) {
  var n = RI(e + "");
  if (arguments.length < 2) {
    for (var o = Hb(this.node()), r = -1, i = n.length; ++r < i; ) if (!o.contains(n[r])) return !1;
    return !0;
  }
  return this.each((typeof t == "function" ? tG : t ? JK : eG)(n, t));
}
function oG() {
  this.textContent = "";
}
function rG(e) {
  return function() {
    this.textContent = e;
  };
}
function iG(e) {
  return function() {
    var t = e.apply(this, arguments);
    this.textContent = t ?? "";
  };
}
function sG(e) {
  return arguments.length ? this.each(e == null ? oG : (typeof e == "function" ? iG : rG)(e)) : this.node().textContent;
}
function aG() {
  this.innerHTML = "";
}
function lG(e) {
  return function() {
    this.innerHTML = e;
  };
}
function cG(e) {
  return function() {
    var t = e.apply(this, arguments);
    this.innerHTML = t ?? "";
  };
}
function uG(e) {
  return arguments.length ? this.each(e == null ? aG : (typeof e == "function" ? cG : lG)(e)) : this.node().innerHTML;
}
function dG() {
  this.nextSibling && this.parentNode.appendChild(this);
}
function fG() {
  return this.each(dG);
}
function pG() {
  this.previousSibling && this.parentNode.insertBefore(this, this.parentNode.firstChild);
}
function hG() {
  return this.each(pG);
}
function mG(e) {
  var t = typeof e == "function" ? e : SI(e);
  return this.select(function() {
    return this.appendChild(t.apply(this, arguments));
  });
}
function gG() {
  return null;
}
function yG(e, t) {
  var n = typeof e == "function" ? e : SI(e), o = t == null ? gG : typeof t == "function" ? t : zb(t);
  return this.select(function() {
    return this.insertBefore(n.apply(this, arguments), o.apply(this, arguments) || null);
  });
}
function bG() {
  var e = this.parentNode;
  e && e.removeChild(this);
}
function vG() {
  return this.each(bG);
}
function xG() {
  var e = this.cloneNode(!1), t = this.parentNode;
  return t ? t.insertBefore(e, this.nextSibling) : e;
}
function wG() {
  var e = this.cloneNode(!0), t = this.parentNode;
  return t ? t.insertBefore(e, this.nextSibling) : e;
}
function SG(e) {
  return this.select(e ? wG : xG);
}
function TG(e) {
  return arguments.length ? this.property("__data__", e) : this.node().__data__;
}
function CG(e) {
  return function(t) {
    e.call(this, t, this.__data__);
  };
}
function EG(e) {
  return e.trim().split(/^|\s+/).map(function(t) {
    var n = "", o = t.indexOf(".");
    return o >= 0 && (n = t.slice(o + 1), t = t.slice(0, o)), { type: t, name: n };
  });
}
function OG(e) {
  return function() {
    var t = this.__on;
    if (t) {
      for (var n = 0, o = -1, r = t.length, i; n < r; ++n)
        i = t[n], (!e.type || i.type === e.type) && i.name === e.name ? this.removeEventListener(i.type, i.listener, i.options) : t[++o] = i;
      ++o ? t.length = o : delete this.__on;
    }
  };
}
function PG(e, t, n) {
  return function() {
    var o = this.__on, r, i = CG(t);
    if (o) {
      for (var s = 0, l = o.length; s < l; ++s)
        if ((r = o[s]).type === e.type && r.name === e.name) {
          this.removeEventListener(r.type, r.listener, r.options), this.addEventListener(r.type, r.listener = i, r.options = n), r.value = t;
          return;
        }
    }
    this.addEventListener(e.type, i, n), r = { type: e.type, name: e.name, value: t, listener: i, options: n }, o ? o.push(r) : this.__on = [r];
  };
}
function RG(e, t, n) {
  var o = EG(e + ""), r, i = o.length, s;
  if (arguments.length < 2) {
    var l = this.node().__on;
    if (l) {
      for (var c = 0, u = l.length, d; c < u; ++c)
        for (r = 0, d = l[c]; r < i; ++r)
          if ((s = o[r]).type === d.type && s.name === d.name)
            return d.value;
    }
    return;
  }
  for (l = t ? PG : OG, r = 0; r < i; ++r) this.each(l(o[r], t, n));
  return this;
}
function NI(e, t, n) {
  var o = PI(e), r = o.CustomEvent;
  typeof r == "function" ? r = new r(t, n) : (r = o.document.createEvent("Event"), n ? (r.initEvent(t, n.bubbles, n.cancelable), r.detail = n.detail) : r.initEvent(t, !1, !1)), e.dispatchEvent(r);
}
function IG(e, t) {
  return function() {
    return NI(this, e, t);
  };
}
function kG(e, t) {
  return function() {
    return NI(this, e, t.apply(this, arguments));
  };
}
function $G(e, t) {
  return this.each((typeof t == "function" ? kG : IG)(e, t));
}
function* NG() {
  for (var e = this._groups, t = 0, n = e.length; t < n; ++t)
    for (var o = e[t], r = 0, i = o.length, s; r < i; ++r)
      (s = o[r]) && (yield s);
}
var MI = [null];
function Po(e, t) {
  this._groups = e, this._parents = t;
}
function Qc() {
  return new Po([[document.documentElement]], MI);
}
function MG() {
  return this;
}
Po.prototype = Qc.prototype = {
  constructor: Po,
  select: iK,
  selectAll: cK,
  selectChild: pK,
  selectChildren: yK,
  filter: bK,
  data: CK,
  enter: vK,
  exit: OK,
  join: PK,
  merge: RK,
  selection: MG,
  order: IK,
  sort: kK,
  call: NK,
  nodes: MK,
  node: AK,
  size: _K,
  empty: DK,
  each: LK,
  attr: WK,
  style: GK,
  property: QK,
  classed: nG,
  text: sG,
  html: uG,
  raise: fG,
  lower: hG,
  append: mG,
  insert: yG,
  remove: vG,
  clone: SG,
  datum: TG,
  on: RG,
  dispatch: $G,
  [Symbol.iterator]: NG
};
function xo(e) {
  return typeof e == "string" ? new Po([[document.querySelector(e)]], [document.documentElement]) : new Po([[e]], MI);
}
function AG(e) {
  let t;
  for (; t = e.sourceEvent; ) e = t;
  return e;
}
function Zo(e, t) {
  if (e = AG(e), t === void 0 && (t = e.currentTarget), t) {
    var n = t.ownerSVGElement || t;
    if (n.createSVGPoint) {
      var o = n.createSVGPoint();
      return o.x = e.clientX, o.y = e.clientY, o = o.matrixTransform(t.getScreenCTM().inverse()), [o.x, o.y];
    }
    if (t.getBoundingClientRect) {
      var r = t.getBoundingClientRect();
      return [e.clientX - r.left - t.clientLeft, e.clientY - r.top - t.clientTop];
    }
  }
  return [e.pageX, e.pageY];
}
const _G = { passive: !1 }, pc = { capture: !0, passive: !1 };
function zh(e) {
  e.stopImmediatePropagation();
}
function ta(e) {
  e.preventDefault(), e.stopImmediatePropagation();
}
function AI(e) {
  var t = e.document.documentElement, n = xo(e).on("dragstart.drag", ta, pc);
  "onselectstart" in t ? n.on("selectstart.drag", ta, pc) : (t.__noselect = t.style.MozUserSelect, t.style.MozUserSelect = "none");
}
function _I(e, t) {
  var n = e.document.documentElement, o = xo(e).on("dragstart.drag", null);
  t && (o.on("click.drag", ta, pc), setTimeout(function() {
    o.on("click.drag", null);
  }, 0)), "onselectstart" in n ? o.on("selectstart.drag", null) : (n.style.MozUserSelect = n.__noselect, delete n.__noselect);
}
const Au = (e) => () => e;
function bg(e, {
  sourceEvent: t,
  subject: n,
  target: o,
  identifier: r,
  active: i,
  x: s,
  y: l,
  dx: c,
  dy: u,
  dispatch: d
}) {
  Object.defineProperties(this, {
    type: { value: e, enumerable: !0, configurable: !0 },
    sourceEvent: { value: t, enumerable: !0, configurable: !0 },
    subject: { value: n, enumerable: !0, configurable: !0 },
    target: { value: o, enumerable: !0, configurable: !0 },
    identifier: { value: r, enumerable: !0, configurable: !0 },
    active: { value: i, enumerable: !0, configurable: !0 },
    x: { value: s, enumerable: !0, configurable: !0 },
    y: { value: l, enumerable: !0, configurable: !0 },
    dx: { value: c, enumerable: !0, configurable: !0 },
    dy: { value: u, enumerable: !0, configurable: !0 },
    _: { value: d }
  });
}
bg.prototype.on = function() {
  var e = this._.on.apply(this._, arguments);
  return e === this._ ? this : e;
};
function DG(e) {
  return !e.ctrlKey && !e.button;
}
function LG() {
  return this.parentNode;
}
function BG(e, t) {
  return t ?? { x: e.x, y: e.y };
}
function VG() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}
function DI() {
  var e = DG, t = LG, n = BG, o = VG, r = {}, i = xp("start", "drag", "end"), s = 0, l, c, u, d, f = 0;
  function p(w) {
    w.on("mousedown.drag", h).filter(o).on("touchstart.drag", y).on("touchmove.drag", b, _G).on("touchend.drag touchcancel.drag", T).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }
  function h(w, S) {
    if (!(d || !e.call(this, w, S))) {
      var C = v(this, t.call(this, w, S), w, S, "mouse");
      C && (xo(w.view).on("mousemove.drag", g, pc).on("mouseup.drag", m, pc), AI(w.view), zh(w), u = !1, l = w.clientX, c = w.clientY, C("start", w));
    }
  }
  function g(w) {
    if (ta(w), !u) {
      var S = w.clientX - l, C = w.clientY - c;
      u = S * S + C * C > f;
    }
    r.mouse("drag", w);
  }
  function m(w) {
    xo(w.view).on("mousemove.drag mouseup.drag", null), _I(w.view, u), ta(w), r.mouse("end", w);
  }
  function y(w, S) {
    if (e.call(this, w, S)) {
      var C = w.changedTouches, E = t.call(this, w, S), P = C.length, M, x;
      for (M = 0; M < P; ++M)
        (x = v(this, E, w, S, C[M].identifier, C[M])) && (zh(w), x("start", w, C[M]));
    }
  }
  function b(w) {
    var S = w.changedTouches, C = S.length, E, P;
    for (E = 0; E < C; ++E)
      (P = r[S[E].identifier]) && (ta(w), P("drag", w, S[E]));
  }
  function T(w) {
    var S = w.changedTouches, C = S.length, E, P;
    for (d && clearTimeout(d), d = setTimeout(function() {
      d = null;
    }, 500), E = 0; E < C; ++E)
      (P = r[S[E].identifier]) && (zh(w), P("end", w, S[E]));
  }
  function v(w, S, C, E, P, M) {
    var x = i.copy(), I = Zo(M || C, S), k, _, R;
    if ((R = n.call(w, new bg("beforestart", {
      sourceEvent: C,
      target: p,
      identifier: P,
      active: s,
      x: I[0],
      y: I[1],
      dx: 0,
      dy: 0,
      dispatch: x
    }), E)) != null)
      return k = R.x - I[0] || 0, _ = R.y - I[1] || 0, function A(N, L, V) {
        var D = I, B;
        switch (N) {
          case "start":
            r[P] = A, B = s++;
            break;
          case "end":
            delete r[P], --s;
          // falls through
          case "drag":
            I = Zo(V || L, S), B = s;
            break;
        }
        x.call(
          N,
          w,
          new bg(N, {
            sourceEvent: L,
            subject: R,
            target: p,
            identifier: P,
            active: B,
            x: I[0] + k,
            y: I[1] + _,
            dx: I[0] - D[0],
            dy: I[1] - D[1],
            dispatch: x
          }),
          E
        );
      };
  }
  return p.filter = function(w) {
    return arguments.length ? (e = typeof w == "function" ? w : Au(!!w), p) : e;
  }, p.container = function(w) {
    return arguments.length ? (t = typeof w == "function" ? w : Au(w), p) : t;
  }, p.subject = function(w) {
    return arguments.length ? (n = typeof w == "function" ? w : Au(w), p) : n;
  }, p.touchable = function(w) {
    return arguments.length ? (o = typeof w == "function" ? w : Au(!!w), p) : o;
  }, p.on = function() {
    var w = i.on.apply(i, arguments);
    return w === i ? p : w;
  }, p.clickDistance = function(w) {
    return arguments.length ? (f = (w = +w) * w, p) : Math.sqrt(f);
  }, p;
}
function Wb(e, t, n) {
  e.prototype = t.prototype = n, n.constructor = e;
}
function LI(e, t) {
  var n = Object.create(e.prototype);
  for (var o in t) n[o] = t[o];
  return n;
}
function Jc() {
}
var hc = 0.7, Xd = 1 / hc, na = "\\s*([+-]?\\d+)\\s*", mc = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*", Or = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*", FG = /^#([0-9a-f]{3,8})$/, jG = new RegExp(`^rgb\\(${na},${na},${na}\\)$`), zG = new RegExp(`^rgb\\(${Or},${Or},${Or}\\)$`), HG = new RegExp(`^rgba\\(${na},${na},${na},${mc}\\)$`), WG = new RegExp(`^rgba\\(${Or},${Or},${Or},${mc}\\)$`), UG = new RegExp(`^hsl\\(${mc},${Or},${Or}\\)$`), qG = new RegExp(`^hsla\\(${mc},${Or},${Or},${mc}\\)$`), qS = {
  aliceblue: 15792383,
  antiquewhite: 16444375,
  aqua: 65535,
  aquamarine: 8388564,
  azure: 15794175,
  beige: 16119260,
  bisque: 16770244,
  black: 0,
  blanchedalmond: 16772045,
  blue: 255,
  blueviolet: 9055202,
  brown: 10824234,
  burlywood: 14596231,
  cadetblue: 6266528,
  chartreuse: 8388352,
  chocolate: 13789470,
  coral: 16744272,
  cornflowerblue: 6591981,
  cornsilk: 16775388,
  crimson: 14423100,
  cyan: 65535,
  darkblue: 139,
  darkcyan: 35723,
  darkgoldenrod: 12092939,
  darkgray: 11119017,
  darkgreen: 25600,
  darkgrey: 11119017,
  darkkhaki: 12433259,
  darkmagenta: 9109643,
  darkolivegreen: 5597999,
  darkorange: 16747520,
  darkorchid: 10040012,
  darkred: 9109504,
  darksalmon: 15308410,
  darkseagreen: 9419919,
  darkslateblue: 4734347,
  darkslategray: 3100495,
  darkslategrey: 3100495,
  darkturquoise: 52945,
  darkviolet: 9699539,
  deeppink: 16716947,
  deepskyblue: 49151,
  dimgray: 6908265,
  dimgrey: 6908265,
  dodgerblue: 2003199,
  firebrick: 11674146,
  floralwhite: 16775920,
  forestgreen: 2263842,
  fuchsia: 16711935,
  gainsboro: 14474460,
  ghostwhite: 16316671,
  gold: 16766720,
  goldenrod: 14329120,
  gray: 8421504,
  green: 32768,
  greenyellow: 11403055,
  grey: 8421504,
  honeydew: 15794160,
  hotpink: 16738740,
  indianred: 13458524,
  indigo: 4915330,
  ivory: 16777200,
  khaki: 15787660,
  lavender: 15132410,
  lavenderblush: 16773365,
  lawngreen: 8190976,
  lemonchiffon: 16775885,
  lightblue: 11393254,
  lightcoral: 15761536,
  lightcyan: 14745599,
  lightgoldenrodyellow: 16448210,
  lightgray: 13882323,
  lightgreen: 9498256,
  lightgrey: 13882323,
  lightpink: 16758465,
  lightsalmon: 16752762,
  lightseagreen: 2142890,
  lightskyblue: 8900346,
  lightslategray: 7833753,
  lightslategrey: 7833753,
  lightsteelblue: 11584734,
  lightyellow: 16777184,
  lime: 65280,
  limegreen: 3329330,
  linen: 16445670,
  magenta: 16711935,
  maroon: 8388608,
  mediumaquamarine: 6737322,
  mediumblue: 205,
  mediumorchid: 12211667,
  mediumpurple: 9662683,
  mediumseagreen: 3978097,
  mediumslateblue: 8087790,
  mediumspringgreen: 64154,
  mediumturquoise: 4772300,
  mediumvioletred: 13047173,
  midnightblue: 1644912,
  mintcream: 16121850,
  mistyrose: 16770273,
  moccasin: 16770229,
  navajowhite: 16768685,
  navy: 128,
  oldlace: 16643558,
  olive: 8421376,
  olivedrab: 7048739,
  orange: 16753920,
  orangered: 16729344,
  orchid: 14315734,
  palegoldenrod: 15657130,
  palegreen: 10025880,
  paleturquoise: 11529966,
  palevioletred: 14381203,
  papayawhip: 16773077,
  peachpuff: 16767673,
  peru: 13468991,
  pink: 16761035,
  plum: 14524637,
  powderblue: 11591910,
  purple: 8388736,
  rebeccapurple: 6697881,
  red: 16711680,
  rosybrown: 12357519,
  royalblue: 4286945,
  saddlebrown: 9127187,
  salmon: 16416882,
  sandybrown: 16032864,
  seagreen: 3050327,
  seashell: 16774638,
  sienna: 10506797,
  silver: 12632256,
  skyblue: 8900331,
  slateblue: 6970061,
  slategray: 7372944,
  slategrey: 7372944,
  snow: 16775930,
  springgreen: 65407,
  steelblue: 4620980,
  tan: 13808780,
  teal: 32896,
  thistle: 14204888,
  tomato: 16737095,
  turquoise: 4251856,
  violet: 15631086,
  wheat: 16113331,
  white: 16777215,
  whitesmoke: 16119285,
  yellow: 16776960,
  yellowgreen: 10145074
};
Wb(Jc, gc, {
  copy(e) {
    return Object.assign(new this.constructor(), this, e);
  },
  displayable() {
    return this.rgb().displayable();
  },
  hex: KS,
  // Deprecated! Use color.formatHex.
  formatHex: KS,
  formatHex8: KG,
  formatHsl: GG,
  formatRgb: GS,
  toString: GS
});
function KS() {
  return this.rgb().formatHex();
}
function KG() {
  return this.rgb().formatHex8();
}
function GG() {
  return BI(this).formatHsl();
}
function GS() {
  return this.rgb().formatRgb();
}
function gc(e) {
  var t, n;
  return e = (e + "").trim().toLowerCase(), (t = FG.exec(e)) ? (n = t[1].length, t = parseInt(t[1], 16), n === 6 ? YS(t) : n === 3 ? new io(t >> 8 & 15 | t >> 4 & 240, t >> 4 & 15 | t & 240, (t & 15) << 4 | t & 15, 1) : n === 8 ? _u(t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, (t & 255) / 255) : n === 4 ? _u(t >> 12 & 15 | t >> 8 & 240, t >> 8 & 15 | t >> 4 & 240, t >> 4 & 15 | t & 240, ((t & 15) << 4 | t & 15) / 255) : null) : (t = jG.exec(e)) ? new io(t[1], t[2], t[3], 1) : (t = zG.exec(e)) ? new io(t[1] * 255 / 100, t[2] * 255 / 100, t[3] * 255 / 100, 1) : (t = HG.exec(e)) ? _u(t[1], t[2], t[3], t[4]) : (t = WG.exec(e)) ? _u(t[1] * 255 / 100, t[2] * 255 / 100, t[3] * 255 / 100, t[4]) : (t = UG.exec(e)) ? QS(t[1], t[2] / 100, t[3] / 100, 1) : (t = qG.exec(e)) ? QS(t[1], t[2] / 100, t[3] / 100, t[4]) : qS.hasOwnProperty(e) ? YS(qS[e]) : e === "transparent" ? new io(NaN, NaN, NaN, 0) : null;
}
function YS(e) {
  return new io(e >> 16 & 255, e >> 8 & 255, e & 255, 1);
}
function _u(e, t, n, o) {
  return o <= 0 && (e = t = n = NaN), new io(e, t, n, o);
}
function YG(e) {
  return e instanceof Jc || (e = gc(e)), e ? (e = e.rgb(), new io(e.r, e.g, e.b, e.opacity)) : new io();
}
function vg(e, t, n, o) {
  return arguments.length === 1 ? YG(e) : new io(e, t, n, o ?? 1);
}
function io(e, t, n, o) {
  this.r = +e, this.g = +t, this.b = +n, this.opacity = +o;
}
Wb(io, vg, LI(Jc, {
  brighter(e) {
    return e = e == null ? Xd : Math.pow(Xd, e), new io(this.r * e, this.g * e, this.b * e, this.opacity);
  },
  darker(e) {
    return e = e == null ? hc : Math.pow(hc, e), new io(this.r * e, this.g * e, this.b * e, this.opacity);
  },
  rgb() {
    return this;
  },
  clamp() {
    return new io(is(this.r), is(this.g), is(this.b), Zd(this.opacity));
  },
  displayable() {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: XS,
  // Deprecated! Use color.formatHex.
  formatHex: XS,
  formatHex8: XG,
  formatRgb: ZS,
  toString: ZS
}));
function XS() {
  return `#${ts(this.r)}${ts(this.g)}${ts(this.b)}`;
}
function XG() {
  return `#${ts(this.r)}${ts(this.g)}${ts(this.b)}${ts((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
}
function ZS() {
  const e = Zd(this.opacity);
  return `${e === 1 ? "rgb(" : "rgba("}${is(this.r)}, ${is(this.g)}, ${is(this.b)}${e === 1 ? ")" : `, ${e})`}`;
}
function Zd(e) {
  return isNaN(e) ? 1 : Math.max(0, Math.min(1, e));
}
function is(e) {
  return Math.max(0, Math.min(255, Math.round(e) || 0));
}
function ts(e) {
  return e = is(e), (e < 16 ? "0" : "") + e.toString(16);
}
function QS(e, t, n, o) {
  return o <= 0 ? e = t = n = NaN : n <= 0 || n >= 1 ? e = t = NaN : t <= 0 && (e = NaN), new Jo(e, t, n, o);
}
function BI(e) {
  if (e instanceof Jo) return new Jo(e.h, e.s, e.l, e.opacity);
  if (e instanceof Jc || (e = gc(e)), !e) return new Jo();
  if (e instanceof Jo) return e;
  e = e.rgb();
  var t = e.r / 255, n = e.g / 255, o = e.b / 255, r = Math.min(t, n, o), i = Math.max(t, n, o), s = NaN, l = i - r, c = (i + r) / 2;
  return l ? (t === i ? s = (n - o) / l + (n < o) * 6 : n === i ? s = (o - t) / l + 2 : s = (t - n) / l + 4, l /= c < 0.5 ? i + r : 2 - i - r, s *= 60) : l = c > 0 && c < 1 ? 0 : s, new Jo(s, l, c, e.opacity);
}
function ZG(e, t, n, o) {
  return arguments.length === 1 ? BI(e) : new Jo(e, t, n, o ?? 1);
}
function Jo(e, t, n, o) {
  this.h = +e, this.s = +t, this.l = +n, this.opacity = +o;
}
Wb(Jo, ZG, LI(Jc, {
  brighter(e) {
    return e = e == null ? Xd : Math.pow(Xd, e), new Jo(this.h, this.s, this.l * e, this.opacity);
  },
  darker(e) {
    return e = e == null ? hc : Math.pow(hc, e), new Jo(this.h, this.s, this.l * e, this.opacity);
  },
  rgb() {
    var e = this.h % 360 + (this.h < 0) * 360, t = isNaN(e) || isNaN(this.s) ? 0 : this.s, n = this.l, o = n + (n < 0.5 ? n : 1 - n) * t, r = 2 * n - o;
    return new io(
      Hh(e >= 240 ? e - 240 : e + 120, r, o),
      Hh(e, r, o),
      Hh(e < 120 ? e + 240 : e - 120, r, o),
      this.opacity
    );
  },
  clamp() {
    return new Jo(JS(this.h), Du(this.s), Du(this.l), Zd(this.opacity));
  },
  displayable() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  },
  formatHsl() {
    const e = Zd(this.opacity);
    return `${e === 1 ? "hsl(" : "hsla("}${JS(this.h)}, ${Du(this.s) * 100}%, ${Du(this.l) * 100}%${e === 1 ? ")" : `, ${e})`}`;
  }
}));
function JS(e) {
  return e = (e || 0) % 360, e < 0 ? e + 360 : e;
}
function Du(e) {
  return Math.max(0, Math.min(1, e || 0));
}
function Hh(e, t, n) {
  return (e < 60 ? t + (n - t) * e / 60 : e < 180 ? n : e < 240 ? t + (n - t) * (240 - e) / 60 : t) * 255;
}
const VI = (e) => () => e;
function QG(e, t) {
  return function(n) {
    return e + n * t;
  };
}
function JG(e, t, n) {
  return e = Math.pow(e, n), t = Math.pow(t, n) - e, n = 1 / n, function(o) {
    return Math.pow(e + o * t, n);
  };
}
function eY(e) {
  return (e = +e) == 1 ? FI : function(t, n) {
    return n - t ? JG(t, n, e) : VI(isNaN(t) ? n : t);
  };
}
function FI(e, t) {
  var n = t - e;
  return n ? QG(e, n) : VI(isNaN(e) ? t : e);
}
const e1 = function e(t) {
  var n = eY(t);
  function o(r, i) {
    var s = n((r = vg(r)).r, (i = vg(i)).r), l = n(r.g, i.g), c = n(r.b, i.b), u = FI(r.opacity, i.opacity);
    return function(d) {
      return r.r = s(d), r.g = l(d), r.b = c(d), r.opacity = u(d), r + "";
    };
  }
  return o.gamma = e, o;
}(1);
function li(e, t) {
  return e = +e, t = +t, function(n) {
    return e * (1 - n) + t * n;
  };
}
var xg = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, Wh = new RegExp(xg.source, "g");
function tY(e) {
  return function() {
    return e;
  };
}
function nY(e) {
  return function(t) {
    return e(t) + "";
  };
}
function oY(e, t) {
  var n = xg.lastIndex = Wh.lastIndex = 0, o, r, i, s = -1, l = [], c = [];
  for (e = e + "", t = t + ""; (o = xg.exec(e)) && (r = Wh.exec(t)); )
    (i = r.index) > n && (i = t.slice(n, i), l[s] ? l[s] += i : l[++s] = i), (o = o[0]) === (r = r[0]) ? l[s] ? l[s] += r : l[++s] = r : (l[++s] = null, c.push({ i: s, x: li(o, r) })), n = Wh.lastIndex;
  return n < t.length && (i = t.slice(n), l[s] ? l[s] += i : l[++s] = i), l.length < 2 ? c[0] ? nY(c[0].x) : tY(t) : (t = c.length, function(u) {
    for (var d = 0, f; d < t; ++d) l[(f = c[d]).i] = f.x(u);
    return l.join("");
  });
}
var t1 = 180 / Math.PI, wg = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
function jI(e, t, n, o, r, i) {
  var s, l, c;
  return (s = Math.sqrt(e * e + t * t)) && (e /= s, t /= s), (c = e * n + t * o) && (n -= e * c, o -= t * c), (l = Math.sqrt(n * n + o * o)) && (n /= l, o /= l, c /= l), e * o < t * n && (e = -e, t = -t, c = -c, s = -s), {
    translateX: r,
    translateY: i,
    rotate: Math.atan2(t, e) * t1,
    skewX: Math.atan(c) * t1,
    scaleX: s,
    scaleY: l
  };
}
var Lu;
function rY(e) {
  const t = new (typeof DOMMatrix == "function" ? DOMMatrix : WebKitCSSMatrix)(e + "");
  return t.isIdentity ? wg : jI(t.a, t.b, t.c, t.d, t.e, t.f);
}
function iY(e) {
  return e == null || (Lu || (Lu = document.createElementNS("http://www.w3.org/2000/svg", "g")), Lu.setAttribute("transform", e), !(e = Lu.transform.baseVal.consolidate())) ? wg : (e = e.matrix, jI(e.a, e.b, e.c, e.d, e.e, e.f));
}
function zI(e, t, n, o) {
  function r(u) {
    return u.length ? u.pop() + " " : "";
  }
  function i(u, d, f, p, h, g) {
    if (u !== f || d !== p) {
      var m = h.push("translate(", null, t, null, n);
      g.push({ i: m - 4, x: li(u, f) }, { i: m - 2, x: li(d, p) });
    } else (f || p) && h.push("translate(" + f + t + p + n);
  }
  function s(u, d, f, p) {
    u !== d ? (u - d > 180 ? d += 360 : d - u > 180 && (u += 360), p.push({ i: f.push(r(f) + "rotate(", null, o) - 2, x: li(u, d) })) : d && f.push(r(f) + "rotate(" + d + o);
  }
  function l(u, d, f, p) {
    u !== d ? p.push({ i: f.push(r(f) + "skewX(", null, o) - 2, x: li(u, d) }) : d && f.push(r(f) + "skewX(" + d + o);
  }
  function c(u, d, f, p, h, g) {
    if (u !== f || d !== p) {
      var m = h.push(r(h) + "scale(", null, ",", null, ")");
      g.push({ i: m - 4, x: li(u, f) }, { i: m - 2, x: li(d, p) });
    } else (f !== 1 || p !== 1) && h.push(r(h) + "scale(" + f + "," + p + ")");
  }
  return function(u, d) {
    var f = [], p = [];
    return u = e(u), d = e(d), i(u.translateX, u.translateY, d.translateX, d.translateY, f, p), s(u.rotate, d.rotate, f, p), l(u.skewX, d.skewX, f, p), c(u.scaleX, u.scaleY, d.scaleX, d.scaleY, f, p), u = d = null, function(h) {
      for (var g = -1, m = p.length, y; ++g < m; ) f[(y = p[g]).i] = y.x(h);
      return f.join("");
    };
  };
}
var sY = zI(rY, "px, ", "px)", "deg)"), aY = zI(iY, ", ", ")", ")"), lY = 1e-12;
function n1(e) {
  return ((e = Math.exp(e)) + 1 / e) / 2;
}
function cY(e) {
  return ((e = Math.exp(e)) - 1 / e) / 2;
}
function uY(e) {
  return ((e = Math.exp(2 * e)) - 1) / (e + 1);
}
const dY = function e(t, n, o) {
  function r(i, s) {
    var l = i[0], c = i[1], u = i[2], d = s[0], f = s[1], p = s[2], h = d - l, g = f - c, m = h * h + g * g, y, b;
    if (m < lY)
      b = Math.log(p / u) / t, y = function(E) {
        return [
          l + E * h,
          c + E * g,
          u * Math.exp(t * E * b)
        ];
      };
    else {
      var T = Math.sqrt(m), v = (p * p - u * u + o * m) / (2 * u * n * T), w = (p * p - u * u - o * m) / (2 * p * n * T), S = Math.log(Math.sqrt(v * v + 1) - v), C = Math.log(Math.sqrt(w * w + 1) - w);
      b = (C - S) / t, y = function(E) {
        var P = E * b, M = n1(S), x = u / (n * T) * (M * uY(t * P + S) - cY(S));
        return [
          l + x * h,
          c + x * g,
          u * M / n1(t * P + S)
        ];
      };
    }
    return y.duration = b * 1e3 * t / Math.SQRT2, y;
  }
  return r.rho = function(i) {
    var s = Math.max(1e-3, +i), l = s * s, c = l * l;
    return e(s, l, c);
  }, r;
}(Math.SQRT2, 2, 4);
var va = 0, yl = 0, sl = 0, HI = 1e3, Qd, bl, Jd = 0, fs = 0, Sp = 0, yc = typeof performance == "object" && performance.now ? performance : Date, WI = typeof window == "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(e) {
  setTimeout(e, 17);
};
function Ub() {
  return fs || (WI(fY), fs = yc.now() + Sp);
}
function fY() {
  fs = 0;
}
function ef() {
  this._call = this._time = this._next = null;
}
ef.prototype = UI.prototype = {
  constructor: ef,
  restart: function(e, t, n) {
    if (typeof e != "function") throw new TypeError("callback is not a function");
    n = (n == null ? Ub() : +n) + (t == null ? 0 : +t), !this._next && bl !== this && (bl ? bl._next = this : Qd = this, bl = this), this._call = e, this._time = n, Sg();
  },
  stop: function() {
    this._call && (this._call = null, this._time = 1 / 0, Sg());
  }
};
function UI(e, t, n) {
  var o = new ef();
  return o.restart(e, t, n), o;
}
function pY() {
  Ub(), ++va;
  for (var e = Qd, t; e; )
    (t = fs - e._time) >= 0 && e._call.call(void 0, t), e = e._next;
  --va;
}
function o1() {
  fs = (Jd = yc.now()) + Sp, va = yl = 0;
  try {
    pY();
  } finally {
    va = 0, mY(), fs = 0;
  }
}
function hY() {
  var e = yc.now(), t = e - Jd;
  t > HI && (Sp -= t, Jd = e);
}
function mY() {
  for (var e, t = Qd, n, o = 1 / 0; t; )
    t._call ? (o > t._time && (o = t._time), e = t, t = t._next) : (n = t._next, t._next = null, t = e ? e._next = n : Qd = n);
  bl = e, Sg(o);
}
function Sg(e) {
  if (!va) {
    yl && (yl = clearTimeout(yl));
    var t = e - fs;
    t > 24 ? (e < 1 / 0 && (yl = setTimeout(o1, e - yc.now() - Sp)), sl && (sl = clearInterval(sl))) : (sl || (Jd = yc.now(), sl = setInterval(hY, HI)), va = 1, WI(o1));
  }
}
function r1(e, t, n) {
  var o = new ef();
  return t = t == null ? 0 : +t, o.restart((r) => {
    o.stop(), e(r + t);
  }, t, n), o;
}
var gY = xp("start", "end", "cancel", "interrupt"), yY = [], qI = 0, i1 = 1, Tg = 2, ld = 3, s1 = 4, Cg = 5, cd = 6;
function Tp(e, t, n, o, r, i) {
  var s = e.__transition;
  if (!s) e.__transition = {};
  else if (n in s) return;
  bY(e, n, {
    name: t,
    index: o,
    // For context during callback.
    group: r,
    // For context during callback.
    on: gY,
    tween: yY,
    time: i.time,
    delay: i.delay,
    duration: i.duration,
    ease: i.ease,
    timer: null,
    state: qI
  });
}
function qb(e, t) {
  var n = cr(e, t);
  if (n.state > qI) throw new Error("too late; already scheduled");
  return n;
}
function Ar(e, t) {
  var n = cr(e, t);
  if (n.state > ld) throw new Error("too late; already running");
  return n;
}
function cr(e, t) {
  var n = e.__transition;
  if (!n || !(n = n[t])) throw new Error("transition not found");
  return n;
}
function bY(e, t, n) {
  var o = e.__transition, r;
  o[t] = n, n.timer = UI(i, 0, n.time);
  function i(u) {
    n.state = i1, n.timer.restart(s, n.delay, n.time), n.delay <= u && s(u - n.delay);
  }
  function s(u) {
    var d, f, p, h;
    if (n.state !== i1) return c();
    for (d in o)
      if (h = o[d], h.name === n.name) {
        if (h.state === ld) return r1(s);
        h.state === s1 ? (h.state = cd, h.timer.stop(), h.on.call("interrupt", e, e.__data__, h.index, h.group), delete o[d]) : +d < t && (h.state = cd, h.timer.stop(), h.on.call("cancel", e, e.__data__, h.index, h.group), delete o[d]);
      }
    if (r1(function() {
      n.state === ld && (n.state = s1, n.timer.restart(l, n.delay, n.time), l(u));
    }), n.state = Tg, n.on.call("start", e, e.__data__, n.index, n.group), n.state === Tg) {
      for (n.state = ld, r = new Array(p = n.tween.length), d = 0, f = -1; d < p; ++d)
        (h = n.tween[d].value.call(e, e.__data__, n.index, n.group)) && (r[++f] = h);
      r.length = f + 1;
    }
  }
  function l(u) {
    for (var d = u < n.duration ? n.ease.call(null, u / n.duration) : (n.timer.restart(c), n.state = Cg, 1), f = -1, p = r.length; ++f < p; )
      r[f].call(e, d);
    n.state === Cg && (n.on.call("end", e, e.__data__, n.index, n.group), c());
  }
  function c() {
    n.state = cd, n.timer.stop(), delete o[t];
    for (var u in o) return;
    delete e.__transition;
  }
}
function ud(e, t) {
  var n = e.__transition, o, r, i = !0, s;
  if (n) {
    t = t == null ? null : t + "";
    for (s in n) {
      if ((o = n[s]).name !== t) {
        i = !1;
        continue;
      }
      r = o.state > Tg && o.state < Cg, o.state = cd, o.timer.stop(), o.on.call(r ? "interrupt" : "cancel", e, e.__data__, o.index, o.group), delete n[s];
    }
    i && delete e.__transition;
  }
}
function vY(e) {
  return this.each(function() {
    ud(this, e);
  });
}
function xY(e, t) {
  var n, o;
  return function() {
    var r = Ar(this, e), i = r.tween;
    if (i !== n) {
      o = n = i;
      for (var s = 0, l = o.length; s < l; ++s)
        if (o[s].name === t) {
          o = o.slice(), o.splice(s, 1);
          break;
        }
    }
    r.tween = o;
  };
}
function wY(e, t, n) {
  var o, r;
  if (typeof n != "function") throw new Error();
  return function() {
    var i = Ar(this, e), s = i.tween;
    if (s !== o) {
      r = (o = s).slice();
      for (var l = { name: t, value: n }, c = 0, u = r.length; c < u; ++c)
        if (r[c].name === t) {
          r[c] = l;
          break;
        }
      c === u && r.push(l);
    }
    i.tween = r;
  };
}
function SY(e, t) {
  var n = this._id;
  if (e += "", arguments.length < 2) {
    for (var o = cr(this.node(), n).tween, r = 0, i = o.length, s; r < i; ++r)
      if ((s = o[r]).name === e)
        return s.value;
    return null;
  }
  return this.each((t == null ? xY : wY)(n, e, t));
}
function Kb(e, t, n) {
  var o = e._id;
  return e.each(function() {
    var r = Ar(this, o);
    (r.value || (r.value = {}))[t] = n.apply(this, arguments);
  }), function(r) {
    return cr(r, o).value[t];
  };
}
function KI(e, t) {
  var n;
  return (typeof t == "number" ? li : t instanceof gc ? e1 : (n = gc(t)) ? (t = n, e1) : oY)(e, t);
}
function TY(e) {
  return function() {
    this.removeAttribute(e);
  };
}
function CY(e) {
  return function() {
    this.removeAttributeNS(e.space, e.local);
  };
}
function EY(e, t, n) {
  var o, r = n + "", i;
  return function() {
    var s = this.getAttribute(e);
    return s === r ? null : s === o ? i : i = t(o = s, n);
  };
}
function OY(e, t, n) {
  var o, r = n + "", i;
  return function() {
    var s = this.getAttributeNS(e.space, e.local);
    return s === r ? null : s === o ? i : i = t(o = s, n);
  };
}
function PY(e, t, n) {
  var o, r, i;
  return function() {
    var s, l = n(this), c;
    return l == null ? void this.removeAttribute(e) : (s = this.getAttribute(e), c = l + "", s === c ? null : s === o && c === r ? i : (r = c, i = t(o = s, l)));
  };
}
function RY(e, t, n) {
  var o, r, i;
  return function() {
    var s, l = n(this), c;
    return l == null ? void this.removeAttributeNS(e.space, e.local) : (s = this.getAttributeNS(e.space, e.local), c = l + "", s === c ? null : s === o && c === r ? i : (r = c, i = t(o = s, l)));
  };
}
function IY(e, t) {
  var n = wp(e), o = n === "transform" ? aY : KI;
  return this.attrTween(e, typeof t == "function" ? (n.local ? RY : PY)(n, o, Kb(this, "attr." + e, t)) : t == null ? (n.local ? CY : TY)(n) : (n.local ? OY : EY)(n, o, t));
}
function kY(e, t) {
  return function(n) {
    this.setAttribute(e, t.call(this, n));
  };
}
function $Y(e, t) {
  return function(n) {
    this.setAttributeNS(e.space, e.local, t.call(this, n));
  };
}
function NY(e, t) {
  var n, o;
  function r() {
    var i = t.apply(this, arguments);
    return i !== o && (n = (o = i) && $Y(e, i)), n;
  }
  return r._value = t, r;
}
function MY(e, t) {
  var n, o;
  function r() {
    var i = t.apply(this, arguments);
    return i !== o && (n = (o = i) && kY(e, i)), n;
  }
  return r._value = t, r;
}
function AY(e, t) {
  var n = "attr." + e;
  if (arguments.length < 2) return (n = this.tween(n)) && n._value;
  if (t == null) return this.tween(n, null);
  if (typeof t != "function") throw new Error();
  var o = wp(e);
  return this.tween(n, (o.local ? NY : MY)(o, t));
}
function _Y(e, t) {
  return function() {
    qb(this, e).delay = +t.apply(this, arguments);
  };
}
function DY(e, t) {
  return t = +t, function() {
    qb(this, e).delay = t;
  };
}
function LY(e) {
  var t = this._id;
  return arguments.length ? this.each((typeof e == "function" ? _Y : DY)(t, e)) : cr(this.node(), t).delay;
}
function BY(e, t) {
  return function() {
    Ar(this, e).duration = +t.apply(this, arguments);
  };
}
function VY(e, t) {
  return t = +t, function() {
    Ar(this, e).duration = t;
  };
}
function FY(e) {
  var t = this._id;
  return arguments.length ? this.each((typeof e == "function" ? BY : VY)(t, e)) : cr(this.node(), t).duration;
}
function jY(e, t) {
  if (typeof t != "function") throw new Error();
  return function() {
    Ar(this, e).ease = t;
  };
}
function zY(e) {
  var t = this._id;
  return arguments.length ? this.each(jY(t, e)) : cr(this.node(), t).ease;
}
function HY(e, t) {
  return function() {
    var n = t.apply(this, arguments);
    if (typeof n != "function") throw new Error();
    Ar(this, e).ease = n;
  };
}
function WY(e) {
  if (typeof e != "function") throw new Error();
  return this.each(HY(this._id, e));
}
function UY(e) {
  typeof e != "function" && (e = CI(e));
  for (var t = this._groups, n = t.length, o = new Array(n), r = 0; r < n; ++r)
    for (var i = t[r], s = i.length, l = o[r] = [], c, u = 0; u < s; ++u)
      (c = i[u]) && e.call(c, c.__data__, u, i) && l.push(c);
  return new Xr(o, this._parents, this._name, this._id);
}
function qY(e) {
  if (e._id !== this._id) throw new Error();
  for (var t = this._groups, n = e._groups, o = t.length, r = n.length, i = Math.min(o, r), s = new Array(o), l = 0; l < i; ++l)
    for (var c = t[l], u = n[l], d = c.length, f = s[l] = new Array(d), p, h = 0; h < d; ++h)
      (p = c[h] || u[h]) && (f[h] = p);
  for (; l < o; ++l)
    s[l] = t[l];
  return new Xr(s, this._parents, this._name, this._id);
}
function KY(e) {
  return (e + "").trim().split(/^|\s+/).every(function(t) {
    var n = t.indexOf(".");
    return n >= 0 && (t = t.slice(0, n)), !t || t === "start";
  });
}
function GY(e, t, n) {
  var o, r, i = KY(t) ? qb : Ar;
  return function() {
    var s = i(this, e), l = s.on;
    l !== o && (r = (o = l).copy()).on(t, n), s.on = r;
  };
}
function YY(e, t) {
  var n = this._id;
  return arguments.length < 2 ? cr(this.node(), n).on.on(e) : this.each(GY(n, e, t));
}
function XY(e) {
  return function() {
    var t = this.parentNode;
    for (var n in this.__transition) if (+n !== e) return;
    t && t.removeChild(this);
  };
}
function ZY() {
  return this.on("end.remove", XY(this._id));
}
function QY(e) {
  var t = this._name, n = this._id;
  typeof e != "function" && (e = zb(e));
  for (var o = this._groups, r = o.length, i = new Array(r), s = 0; s < r; ++s)
    for (var l = o[s], c = l.length, u = i[s] = new Array(c), d, f, p = 0; p < c; ++p)
      (d = l[p]) && (f = e.call(d, d.__data__, p, l)) && ("__data__" in d && (f.__data__ = d.__data__), u[p] = f, Tp(u[p], t, n, p, u, cr(d, n)));
  return new Xr(i, this._parents, t, n);
}
function JY(e) {
  var t = this._name, n = this._id;
  typeof e != "function" && (e = TI(e));
  for (var o = this._groups, r = o.length, i = [], s = [], l = 0; l < r; ++l)
    for (var c = o[l], u = c.length, d, f = 0; f < u; ++f)
      if (d = c[f]) {
        for (var p = e.call(d, d.__data__, f, c), h, g = cr(d, n), m = 0, y = p.length; m < y; ++m)
          (h = p[m]) && Tp(h, t, n, m, p, g);
        i.push(p), s.push(d);
      }
  return new Xr(i, s, t, n);
}
var eX = Qc.prototype.constructor;
function tX() {
  return new eX(this._groups, this._parents);
}
function nX(e, t) {
  var n, o, r;
  return function() {
    var i = ba(this, e), s = (this.style.removeProperty(e), ba(this, e));
    return i === s ? null : i === n && s === o ? r : r = t(n = i, o = s);
  };
}
function GI(e) {
  return function() {
    this.style.removeProperty(e);
  };
}
function oX(e, t, n) {
  var o, r = n + "", i;
  return function() {
    var s = ba(this, e);
    return s === r ? null : s === o ? i : i = t(o = s, n);
  };
}
function rX(e, t, n) {
  var o, r, i;
  return function() {
    var s = ba(this, e), l = n(this), c = l + "";
    return l == null && (c = l = (this.style.removeProperty(e), ba(this, e))), s === c ? null : s === o && c === r ? i : (r = c, i = t(o = s, l));
  };
}
function iX(e, t) {
  var n, o, r, i = "style." + t, s = "end." + i, l;
  return function() {
    var c = Ar(this, e), u = c.on, d = c.value[i] == null ? l || (l = GI(t)) : void 0;
    (u !== n || r !== d) && (o = (n = u).copy()).on(s, r = d), c.on = o;
  };
}
function sX(e, t, n) {
  var o = (e += "") == "transform" ? sY : KI;
  return t == null ? this.styleTween(e, nX(e, o)).on("end.style." + e, GI(e)) : typeof t == "function" ? this.styleTween(e, rX(e, o, Kb(this, "style." + e, t))).each(iX(this._id, e)) : this.styleTween(e, oX(e, o, t), n).on("end.style." + e, null);
}
function aX(e, t, n) {
  return function(o) {
    this.style.setProperty(e, t.call(this, o), n);
  };
}
function lX(e, t, n) {
  var o, r;
  function i() {
    var s = t.apply(this, arguments);
    return s !== r && (o = (r = s) && aX(e, s, n)), o;
  }
  return i._value = t, i;
}
function cX(e, t, n) {
  var o = "style." + (e += "");
  if (arguments.length < 2) return (o = this.tween(o)) && o._value;
  if (t == null) return this.tween(o, null);
  if (typeof t != "function") throw new Error();
  return this.tween(o, lX(e, t, n ?? ""));
}
function uX(e) {
  return function() {
    this.textContent = e;
  };
}
function dX(e) {
  return function() {
    var t = e(this);
    this.textContent = t ?? "";
  };
}
function fX(e) {
  return this.tween("text", typeof e == "function" ? dX(Kb(this, "text", e)) : uX(e == null ? "" : e + ""));
}
function pX(e) {
  return function(t) {
    this.textContent = e.call(this, t);
  };
}
function hX(e) {
  var t, n;
  function o() {
    var r = e.apply(this, arguments);
    return r !== n && (t = (n = r) && pX(r)), t;
  }
  return o._value = e, o;
}
function mX(e) {
  var t = "text";
  if (arguments.length < 1) return (t = this.tween(t)) && t._value;
  if (e == null) return this.tween(t, null);
  if (typeof e != "function") throw new Error();
  return this.tween(t, hX(e));
}
function gX() {
  for (var e = this._name, t = this._id, n = YI(), o = this._groups, r = o.length, i = 0; i < r; ++i)
    for (var s = o[i], l = s.length, c, u = 0; u < l; ++u)
      if (c = s[u]) {
        var d = cr(c, t);
        Tp(c, e, n, u, s, {
          time: d.time + d.delay + d.duration,
          delay: 0,
          duration: d.duration,
          ease: d.ease
        });
      }
  return new Xr(o, this._parents, e, n);
}
function yX() {
  var e, t, n = this, o = n._id, r = n.size();
  return new Promise(function(i, s) {
    var l = { value: s }, c = { value: function() {
      --r === 0 && i();
    } };
    n.each(function() {
      var u = Ar(this, o), d = u.on;
      d !== e && (t = (e = d).copy(), t._.cancel.push(l), t._.interrupt.push(l), t._.end.push(c)), u.on = t;
    }), r === 0 && i();
  });
}
var bX = 0;
function Xr(e, t, n, o) {
  this._groups = e, this._parents = t, this._name = n, this._id = o;
}
function YI() {
  return ++bX;
}
var Vr = Qc.prototype;
Xr.prototype = {
  constructor: Xr,
  select: QY,
  selectAll: JY,
  selectChild: Vr.selectChild,
  selectChildren: Vr.selectChildren,
  filter: UY,
  merge: qY,
  selection: tX,
  transition: gX,
  call: Vr.call,
  nodes: Vr.nodes,
  node: Vr.node,
  size: Vr.size,
  empty: Vr.empty,
  each: Vr.each,
  on: YY,
  attr: IY,
  attrTween: AY,
  style: sX,
  styleTween: cX,
  text: fX,
  textTween: mX,
  remove: ZY,
  tween: SY,
  delay: LY,
  duration: FY,
  ease: zY,
  easeVarying: WY,
  end: yX,
  [Symbol.iterator]: Vr[Symbol.iterator]
};
function vX(e) {
  return ((e *= 2) <= 1 ? e * e * e : (e -= 2) * e * e + 2) / 2;
}
var xX = {
  time: null,
  // Set on use.
  delay: 0,
  duration: 250,
  ease: vX
};
function wX(e, t) {
  for (var n; !(n = e.__transition) || !(n = n[t]); )
    if (!(e = e.parentNode))
      throw new Error(`transition ${t} not found`);
  return n;
}
function SX(e) {
  var t, n;
  e instanceof Xr ? (t = e._id, e = e._name) : (t = YI(), (n = xX).time = Ub(), e = e == null ? null : e + "");
  for (var o = this._groups, r = o.length, i = 0; i < r; ++i)
    for (var s = o[i], l = s.length, c, u = 0; u < l; ++u)
      (c = s[u]) && Tp(c, e, t, u, s, n || wX(c, t));
  return new Xr(o, this._parents, e, t);
}
Qc.prototype.interrupt = vY;
Qc.prototype.transition = SX;
const Bu = (e) => () => e;
function TX(e, {
  sourceEvent: t,
  target: n,
  transform: o,
  dispatch: r
}) {
  Object.defineProperties(this, {
    type: { value: e, enumerable: !0, configurable: !0 },
    sourceEvent: { value: t, enumerable: !0, configurable: !0 },
    target: { value: n, enumerable: !0, configurable: !0 },
    transform: { value: o, enumerable: !0, configurable: !0 },
    _: { value: r }
  });
}
function Fr(e, t, n) {
  this.k = e, this.x = t, this.y = n;
}
Fr.prototype = {
  constructor: Fr,
  scale: function(e) {
    return e === 1 ? this : new Fr(this.k * e, this.x, this.y);
  },
  translate: function(e, t) {
    return e === 0 & t === 0 ? this : new Fr(this.k, this.x + this.k * e, this.y + this.k * t);
  },
  apply: function(e) {
    return [e[0] * this.k + this.x, e[1] * this.k + this.y];
  },
  applyX: function(e) {
    return e * this.k + this.x;
  },
  applyY: function(e) {
    return e * this.k + this.y;
  },
  invert: function(e) {
    return [(e[0] - this.x) / this.k, (e[1] - this.y) / this.k];
  },
  invertX: function(e) {
    return (e - this.x) / this.k;
  },
  invertY: function(e) {
    return (e - this.y) / this.k;
  },
  rescaleX: function(e) {
    return e.copy().domain(e.range().map(this.invertX, this).map(e.invert, e));
  },
  rescaleY: function(e) {
    return e.copy().domain(e.range().map(this.invertY, this).map(e.invert, e));
  },
  toString: function() {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};
var Cp = new Fr(1, 0, 0);
XI.prototype = Fr.prototype;
function XI(e) {
  for (; !e.__zoom; ) if (!(e = e.parentNode)) return Cp;
  return e.__zoom;
}
function Uh(e) {
  e.stopImmediatePropagation();
}
function al(e) {
  e.preventDefault(), e.stopImmediatePropagation();
}
function CX(e) {
  return (!e.ctrlKey || e.type === "wheel") && !e.button;
}
function EX() {
  var e = this;
  return e instanceof SVGElement ? (e = e.ownerSVGElement || e, e.hasAttribute("viewBox") ? (e = e.viewBox.baseVal, [[e.x, e.y], [e.x + e.width, e.y + e.height]]) : [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]]) : [[0, 0], [e.clientWidth, e.clientHeight]];
}
function a1() {
  return this.__zoom || Cp;
}
function OX(e) {
  return -e.deltaY * (e.deltaMode === 1 ? 0.05 : e.deltaMode ? 1 : 2e-3) * (e.ctrlKey ? 10 : 1);
}
function PX() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}
function RX(e, t, n) {
  var o = e.invertX(t[0][0]) - n[0][0], r = e.invertX(t[1][0]) - n[1][0], i = e.invertY(t[0][1]) - n[0][1], s = e.invertY(t[1][1]) - n[1][1];
  return e.translate(
    r > o ? (o + r) / 2 : Math.min(0, o) || Math.max(0, r),
    s > i ? (i + s) / 2 : Math.min(0, i) || Math.max(0, s)
  );
}
function ZI() {
  var e = CX, t = EX, n = RX, o = OX, r = PX, i = [0, 1 / 0], s = [[-1 / 0, -1 / 0], [1 / 0, 1 / 0]], l = 250, c = dY, u = xp("start", "zoom", "end"), d, f, p, h = 500, g = 150, m = 0, y = 10;
  function b(R) {
    R.property("__zoom", a1).on("wheel.zoom", P, { passive: !1 }).on("mousedown.zoom", M).on("dblclick.zoom", x).filter(r).on("touchstart.zoom", I).on("touchmove.zoom", k).on("touchend.zoom touchcancel.zoom", _).style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }
  b.transform = function(R, A, N, L) {
    var V = R.selection ? R.selection() : R;
    V.property("__zoom", a1), R !== V ? S(R, A, N, L) : V.interrupt().each(function() {
      C(this, arguments).event(L).start().zoom(null, typeof A == "function" ? A.apply(this, arguments) : A).end();
    });
  }, b.scaleBy = function(R, A, N, L) {
    b.scaleTo(R, function() {
      var V = this.__zoom.k, D = typeof A == "function" ? A.apply(this, arguments) : A;
      return V * D;
    }, N, L);
  }, b.scaleTo = function(R, A, N, L) {
    b.transform(R, function() {
      var V = t.apply(this, arguments), D = this.__zoom, B = N == null ? w(V) : typeof N == "function" ? N.apply(this, arguments) : N, F = D.invert(B), U = typeof A == "function" ? A.apply(this, arguments) : A;
      return n(v(T(D, U), B, F), V, s);
    }, N, L);
  }, b.translateBy = function(R, A, N, L) {
    b.transform(R, function() {
      return n(this.__zoom.translate(
        typeof A == "function" ? A.apply(this, arguments) : A,
        typeof N == "function" ? N.apply(this, arguments) : N
      ), t.apply(this, arguments), s);
    }, null, L);
  }, b.translateTo = function(R, A, N, L, V) {
    b.transform(R, function() {
      var D = t.apply(this, arguments), B = this.__zoom, F = L == null ? w(D) : typeof L == "function" ? L.apply(this, arguments) : L;
      return n(Cp.translate(F[0], F[1]).scale(B.k).translate(
        typeof A == "function" ? -A.apply(this, arguments) : -A,
        typeof N == "function" ? -N.apply(this, arguments) : -N
      ), D, s);
    }, L, V);
  };
  function T(R, A) {
    return A = Math.max(i[0], Math.min(i[1], A)), A === R.k ? R : new Fr(A, R.x, R.y);
  }
  function v(R, A, N) {
    var L = A[0] - N[0] * R.k, V = A[1] - N[1] * R.k;
    return L === R.x && V === R.y ? R : new Fr(R.k, L, V);
  }
  function w(R) {
    return [(+R[0][0] + +R[1][0]) / 2, (+R[0][1] + +R[1][1]) / 2];
  }
  function S(R, A, N, L) {
    R.on("start.zoom", function() {
      C(this, arguments).event(L).start();
    }).on("interrupt.zoom end.zoom", function() {
      C(this, arguments).event(L).end();
    }).tween("zoom", function() {
      var V = this, D = arguments, B = C(V, D).event(L), F = t.apply(V, D), U = N == null ? w(F) : typeof N == "function" ? N.apply(V, D) : N, q = Math.max(F[1][0] - F[0][0], F[1][1] - F[0][1]), G = V.__zoom, K = typeof A == "function" ? A.apply(V, D) : A, te = c(G.invert(U).concat(q / G.k), K.invert(U).concat(q / K.k));
      return function(ne) {
        if (ne === 1) ne = K;
        else {
          var W = te(ne), ee = q / W[2];
          ne = new Fr(ee, U[0] - W[0] * ee, U[1] - W[1] * ee);
        }
        B.zoom(null, ne);
      };
    });
  }
  function C(R, A, N) {
    return !N && R.__zooming || new E(R, A);
  }
  function E(R, A) {
    this.that = R, this.args = A, this.active = 0, this.sourceEvent = null, this.extent = t.apply(R, A), this.taps = 0;
  }
  E.prototype = {
    event: function(R) {
      return R && (this.sourceEvent = R), this;
    },
    start: function() {
      return ++this.active === 1 && (this.that.__zooming = this, this.emit("start")), this;
    },
    zoom: function(R, A) {
      return this.mouse && R !== "mouse" && (this.mouse[1] = A.invert(this.mouse[0])), this.touch0 && R !== "touch" && (this.touch0[1] = A.invert(this.touch0[0])), this.touch1 && R !== "touch" && (this.touch1[1] = A.invert(this.touch1[0])), this.that.__zoom = A, this.emit("zoom"), this;
    },
    end: function() {
      return --this.active === 0 && (delete this.that.__zooming, this.emit("end")), this;
    },
    emit: function(R) {
      var A = xo(this.that).datum();
      u.call(
        R,
        this.that,
        new TX(R, {
          sourceEvent: this.sourceEvent,
          target: b,
          transform: this.that.__zoom,
          dispatch: u
        }),
        A
      );
    }
  };
  function P(R, ...A) {
    if (!e.apply(this, arguments)) return;
    var N = C(this, A).event(R), L = this.__zoom, V = Math.max(i[0], Math.min(i[1], L.k * Math.pow(2, o.apply(this, arguments)))), D = Zo(R);
    if (N.wheel)
      (N.mouse[0][0] !== D[0] || N.mouse[0][1] !== D[1]) && (N.mouse[1] = L.invert(N.mouse[0] = D)), clearTimeout(N.wheel);
    else {
      if (L.k === V) return;
      N.mouse = [D, L.invert(D)], ud(this), N.start();
    }
    al(R), N.wheel = setTimeout(B, g), N.zoom("mouse", n(v(T(L, V), N.mouse[0], N.mouse[1]), N.extent, s));
    function B() {
      N.wheel = null, N.end();
    }
  }
  function M(R, ...A) {
    if (p || !e.apply(this, arguments)) return;
    var N = R.currentTarget, L = C(this, A, !0).event(R), V = xo(R.view).on("mousemove.zoom", U, !0).on("mouseup.zoom", q, !0), D = Zo(R, N), B = R.clientX, F = R.clientY;
    AI(R.view), Uh(R), L.mouse = [D, this.__zoom.invert(D)], ud(this), L.start();
    function U(G) {
      if (al(G), !L.moved) {
        var K = G.clientX - B, te = G.clientY - F;
        L.moved = K * K + te * te > m;
      }
      L.event(G).zoom("mouse", n(v(L.that.__zoom, L.mouse[0] = Zo(G, N), L.mouse[1]), L.extent, s));
    }
    function q(G) {
      V.on("mousemove.zoom mouseup.zoom", null), _I(G.view, L.moved), al(G), L.event(G).end();
    }
  }
  function x(R, ...A) {
    if (e.apply(this, arguments)) {
      var N = this.__zoom, L = Zo(R.changedTouches ? R.changedTouches[0] : R, this), V = N.invert(L), D = N.k * (R.shiftKey ? 0.5 : 2), B = n(v(T(N, D), L, V), t.apply(this, A), s);
      al(R), l > 0 ? xo(this).transition().duration(l).call(S, B, L, R) : xo(this).call(b.transform, B, L, R);
    }
  }
  function I(R, ...A) {
    if (e.apply(this, arguments)) {
      var N = R.touches, L = N.length, V = C(this, A, R.changedTouches.length === L).event(R), D, B, F, U;
      for (Uh(R), B = 0; B < L; ++B)
        F = N[B], U = Zo(F, this), U = [U, this.__zoom.invert(U), F.identifier], V.touch0 ? !V.touch1 && V.touch0[2] !== U[2] && (V.touch1 = U, V.taps = 0) : (V.touch0 = U, D = !0, V.taps = 1 + !!d);
      d && (d = clearTimeout(d)), D && (V.taps < 2 && (f = U[0], d = setTimeout(function() {
        d = null;
      }, h)), ud(this), V.start());
    }
  }
  function k(R, ...A) {
    if (this.__zooming) {
      var N = C(this, A).event(R), L = R.changedTouches, V = L.length, D, B, F, U;
      for (al(R), D = 0; D < V; ++D)
        B = L[D], F = Zo(B, this), N.touch0 && N.touch0[2] === B.identifier ? N.touch0[0] = F : N.touch1 && N.touch1[2] === B.identifier && (N.touch1[0] = F);
      if (B = N.that.__zoom, N.touch1) {
        var q = N.touch0[0], G = N.touch0[1], K = N.touch1[0], te = N.touch1[1], ne = (ne = K[0] - q[0]) * ne + (ne = K[1] - q[1]) * ne, W = (W = te[0] - G[0]) * W + (W = te[1] - G[1]) * W;
        B = T(B, Math.sqrt(ne / W)), F = [(q[0] + K[0]) / 2, (q[1] + K[1]) / 2], U = [(G[0] + te[0]) / 2, (G[1] + te[1]) / 2];
      } else if (N.touch0) F = N.touch0[0], U = N.touch0[1];
      else return;
      N.zoom("touch", n(v(B, F, U), N.extent, s));
    }
  }
  function _(R, ...A) {
    if (this.__zooming) {
      var N = C(this, A).event(R), L = R.changedTouches, V = L.length, D, B;
      for (Uh(R), p && clearTimeout(p), p = setTimeout(function() {
        p = null;
      }, h), D = 0; D < V; ++D)
        B = L[D], N.touch0 && N.touch0[2] === B.identifier ? delete N.touch0 : N.touch1 && N.touch1[2] === B.identifier && delete N.touch1;
      if (N.touch1 && !N.touch0 && (N.touch0 = N.touch1, delete N.touch1), N.touch0) N.touch0[1] = this.__zoom.invert(N.touch0[0]);
      else if (N.end(), N.taps === 2 && (B = Zo(B, this), Math.hypot(f[0] - B[0], f[1] - B[1]) < y)) {
        var F = xo(this).on("dblclick.zoom");
        F && F.apply(this, arguments);
      }
    }
  }
  return b.wheelDelta = function(R) {
    return arguments.length ? (o = typeof R == "function" ? R : Bu(+R), b) : o;
  }, b.filter = function(R) {
    return arguments.length ? (e = typeof R == "function" ? R : Bu(!!R), b) : e;
  }, b.touchable = function(R) {
    return arguments.length ? (r = typeof R == "function" ? R : Bu(!!R), b) : r;
  }, b.extent = function(R) {
    return arguments.length ? (t = typeof R == "function" ? R : Bu([[+R[0][0], +R[0][1]], [+R[1][0], +R[1][1]]]), b) : t;
  }, b.scaleExtent = function(R) {
    return arguments.length ? (i[0] = +R[0], i[1] = +R[1], b) : [i[0], i[1]];
  }, b.translateExtent = function(R) {
    return arguments.length ? (s[0][0] = +R[0][0], s[1][0] = +R[1][0], s[0][1] = +R[0][1], s[1][1] = +R[1][1], b) : [[s[0][0], s[0][1]], [s[1][0], s[1][1]]];
  }, b.constrain = function(R) {
    return arguments.length ? (n = R, b) : n;
  }, b.duration = function(R) {
    return arguments.length ? (l = +R, b) : l;
  }, b.interpolate = function(R) {
    return arguments.length ? (c = R, b) : c;
  }, b.on = function() {
    var R = u.on.apply(u, arguments);
    return R === u ? b : R;
  }, b.clickDistance = function(R) {
    return arguments.length ? (m = (R = +R) * R, b) : Math.sqrt(m);
  }, b.tapDistance = function(R) {
    return arguments.length ? (y = +R, b) : y;
  }, b;
}
const Qn = {
  error001: () => "[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001",
  error002: () => "It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.",
  error003: (e) => `Node type "${e}" not found. Using fallback type "default".`,
  error004: () => "The React Flow parent container needs a width and a height to render the graph.",
  error005: () => "Only child nodes can use a parent extent.",
  error006: () => "Can't create edge. An edge needs a source and a target.",
  error007: (e) => `The old edge with id=${e} does not exist.`,
  error009: (e) => `Marker type "${e}" doesn't exist.`,
  error008: (e, { id: t, sourceHandle: n, targetHandle: o }) => `Couldn't create edge for ${e} handle id: "${e === "source" ? n : o}", edge id: ${t}.`,
  error010: () => "Handle: No node id found. Make sure to only use a Handle inside a custom Node.",
  error011: (e) => `Edge type "${e}" not found. Using fallback type "default".`,
  error012: (e) => `Node with id "${e}" does not exist, it may have been removed. This can happen when a node is deleted before the "onNodeClick" handler is called.`,
  error013: (e = "react") => `It seems that you haven't loaded the styles. Please import '@xyflow/${e}/dist/style.css' or base.css to make sure everything is working properly.`,
  error014: () => "useNodeConnections: No node ID found. Call useNodeConnections inside a custom Node or provide a node ID.",
  error015: () => "It seems that you are trying to drag a node that is not initialized. Please use onNodesChange as explained in the docs."
}, bc = [
  [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],
  [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY]
], QI = ["Enter", " ", "Escape"];
var xa;
(function(e) {
  e.Strict = "strict", e.Loose = "loose";
})(xa || (xa = {}));
var ss;
(function(e) {
  e.Free = "free", e.Vertical = "vertical", e.Horizontal = "horizontal";
})(ss || (ss = {}));
var vc;
(function(e) {
  e.Partial = "partial", e.Full = "full";
})(vc || (vc = {}));
const JI = {
  inProgress: !1,
  isValid: null,
  from: null,
  fromHandle: null,
  fromPosition: null,
  fromNode: null,
  to: null,
  toHandle: null,
  toPosition: null,
  toNode: null
};
var wo;
(function(e) {
  e.Bezier = "default", e.Straight = "straight", e.Step = "step", e.SmoothStep = "smoothstep", e.SimpleBezier = "simplebezier";
})(wo || (wo = {}));
var wa;
(function(e) {
  e.Arrow = "arrow", e.ArrowClosed = "arrowclosed";
})(wa || (wa = {}));
var ze;
(function(e) {
  e.Left = "left", e.Top = "top", e.Right = "right", e.Bottom = "bottom";
})(ze || (ze = {}));
const l1 = {
  [ze.Left]: ze.Right,
  [ze.Right]: ze.Left,
  [ze.Top]: ze.Bottom,
  [ze.Bottom]: ze.Top
};
function ek(e) {
  return e === null ? null : e ? "valid" : "invalid";
}
const tk = (e) => "id" in e && "source" in e && "target" in e, IX = (e) => "id" in e && "position" in e && !("source" in e) && !("target" in e), Gb = (e) => "id" in e && "internals" in e && !("source" in e) && !("target" in e), kX = (e, t, n) => {
  if (!e.id)
    return [];
  const o = /* @__PURE__ */ new Set();
  return n.forEach((r) => {
    r.source === e.id && o.add(r.target);
  }), t.filter((r) => o.has(r.id));
}, eu = (e, t = [0, 0]) => {
  const { width: n, height: o } = Jr(e), r = e.origin ?? t, i = n * r[0], s = o * r[1];
  return {
    x: e.position.x - i,
    y: e.position.y - s
  };
}, $X = (e, t = { nodeOrigin: [0, 0] }) => {
  if (process.env.NODE_ENV === "development" && !t.nodeLookup && console.warn("Please use `getNodesBounds` from `useReactFlow`/`useSvelteFlow` hook to ensure correct values for sub flows. If not possible, you have to provide a nodeLookup to support sub flows."), e.length === 0)
    return { x: 0, y: 0, width: 0, height: 0 };
  const n = e.reduce((o, r) => {
    const i = typeof r == "string";
    let s = !t.nodeLookup && !i ? r : void 0;
    t.nodeLookup && (s = i ? t.nodeLookup.get(r) : Gb(r) ? r : t.nodeLookup.get(r.id));
    const l = s ? tf(s, t.nodeOrigin) : { x: 0, y: 0, x2: 0, y2: 0 };
    return Ep(o, l);
  }, { x: 1 / 0, y: 1 / 0, x2: -1 / 0, y2: -1 / 0 });
  return Op(n);
}, tu = (e, t = {}) => {
  if (e.size === 0)
    return { x: 0, y: 0, width: 0, height: 0 };
  let n = { x: 1 / 0, y: 1 / 0, x2: -1 / 0, y2: -1 / 0 };
  return e.forEach((o) => {
    if (t.filter === void 0 || t.filter(o)) {
      const r = tf(o);
      n = Ep(n, r);
    }
  }), Op(n);
}, nk = (e, t, [n, o, r] = [0, 0, 1], i = !1, s = !1) => {
  const l = {
    ...nu(t, [n, o, r]),
    width: t.width / r,
    height: t.height / r
  }, c = [];
  for (const u of e.values()) {
    const { measured: d, selectable: f = !0, hidden: p = !1 } = u;
    if (s && !f || p)
      continue;
    const h = d.width ?? u.width ?? u.initialWidth ?? null, g = d.height ?? u.height ?? u.initialHeight ?? null, m = xc(l, Ta(u)), y = (h ?? 0) * (g ?? 0), b = i && m > 0;
    (!u.internals.handleBounds || b || m >= y || u.dragging) && c.push(u);
  }
  return c;
}, NX = (e, t) => {
  const n = /* @__PURE__ */ new Set();
  return e.forEach((o) => {
    n.add(o.id);
  }), t.filter((o) => n.has(o.source) || n.has(o.target));
};
function MX(e, t) {
  const n = /* @__PURE__ */ new Map(), o = t != null && t.nodes ? new Set(t.nodes.map((r) => r.id)) : null;
  return e.forEach((r) => {
    r.measured.width && r.measured.height && ((t == null ? void 0 : t.includeHiddenNodes) || !r.hidden) && (!o || o.has(r.id)) && n.set(r.id, r);
  }), n;
}
async function AX({ nodes: e, width: t, height: n, panZoom: o, minZoom: r, maxZoom: i }, s) {
  if (e.size === 0)
    return Promise.resolve(!0);
  const l = MX(e, s), c = tu(l), u = Yb(c, t, n, (s == null ? void 0 : s.minZoom) ?? r, (s == null ? void 0 : s.maxZoom) ?? i, (s == null ? void 0 : s.padding) ?? 0.1);
  return await o.setViewport(u, { duration: s == null ? void 0 : s.duration }), Promise.resolve(!0);
}
function ok({ nodeId: e, nextPosition: t, nodeLookup: n, nodeOrigin: o = [0, 0], nodeExtent: r, onError: i }) {
  const s = n.get(e), l = s.parentId ? n.get(s.parentId) : void 0, { x: c, y: u } = l ? l.internals.positionAbsolute : { x: 0, y: 0 }, d = s.origin ?? o;
  let f = r;
  if (s.extent === "parent" && !s.expandParent)
    if (!l)
      i == null || i("005", Qn.error005());
    else {
      const h = l.measured.width, g = l.measured.height;
      h && g && (f = [
        [c, u],
        [c + h, u + g]
      ]);
    }
  else l && Ca(s.extent) && (f = [
    [s.extent[0][0] + c, s.extent[0][1] + u],
    [s.extent[1][0] + c, s.extent[1][1] + u]
  ]);
  const p = Ca(f) ? ps(t, f, s.measured) : t;
  return (s.measured.width === void 0 || s.measured.height === void 0) && (i == null || i("015", Qn.error015())), {
    position: {
      x: p.x - c + (s.measured.width ?? 0) * d[0],
      y: p.y - u + (s.measured.height ?? 0) * d[1]
    },
    positionAbsolute: p
  };
}
async function _X({ nodesToRemove: e = [], edgesToRemove: t = [], nodes: n, edges: o, onBeforeDelete: r }) {
  const i = new Set(e.map((p) => p.id)), s = [];
  for (const p of n) {
    if (p.deletable === !1)
      continue;
    const h = i.has(p.id), g = !h && p.parentId && s.find((m) => m.id === p.parentId);
    (h || g) && s.push(p);
  }
  const l = new Set(t.map((p) => p.id)), c = o.filter((p) => p.deletable !== !1), d = NX(s, c);
  for (const p of c)
    l.has(p.id) && !d.find((g) => g.id === p.id) && d.push(p);
  if (!r)
    return {
      edges: d,
      nodes: s
    };
  const f = await r({
    nodes: s,
    edges: d
  });
  return typeof f == "boolean" ? f ? { edges: d, nodes: s } : { edges: [], nodes: [] } : f;
}
const Sa = (e, t = 0, n = 1) => Math.min(Math.max(e, t), n), ps = (e = { x: 0, y: 0 }, t, n) => ({
  x: Sa(e.x, t[0][0], t[1][0] - ((n == null ? void 0 : n.width) ?? 0)),
  y: Sa(e.y, t[0][1], t[1][1] - ((n == null ? void 0 : n.height) ?? 0))
});
function rk(e, t, n) {
  const { width: o, height: r } = Jr(n), { x: i, y: s } = n.internals.positionAbsolute;
  return ps(e, [
    [i, s],
    [i + o, s + r]
  ], t);
}
const c1 = (e, t, n) => e < t ? Sa(Math.abs(e - t), 1, t) / t : e > n ? -Sa(Math.abs(e - n), 1, t) / t : 0, ik = (e, t, n = 15, o = 40) => {
  const r = c1(e.x, o, t.width - o) * n, i = c1(e.y, o, t.height - o) * n;
  return [r, i];
}, Ep = (e, t) => ({
  x: Math.min(e.x, t.x),
  y: Math.min(e.y, t.y),
  x2: Math.max(e.x2, t.x2),
  y2: Math.max(e.y2, t.y2)
}), Eg = ({ x: e, y: t, width: n, height: o }) => ({
  x: e,
  y: t,
  x2: e + n,
  y2: t + o
}), Op = ({ x: e, y: t, x2: n, y2: o }) => ({
  x: e,
  y: t,
  width: n - e,
  height: o - t
}), Ta = (e, t = [0, 0]) => {
  var r, i;
  const { x: n, y: o } = Gb(e) ? e.internals.positionAbsolute : eu(e, t);
  return {
    x: n,
    y: o,
    width: ((r = e.measured) == null ? void 0 : r.width) ?? e.width ?? e.initialWidth ?? 0,
    height: ((i = e.measured) == null ? void 0 : i.height) ?? e.height ?? e.initialHeight ?? 0
  };
}, tf = (e, t = [0, 0]) => {
  var r, i;
  const { x: n, y: o } = Gb(e) ? e.internals.positionAbsolute : eu(e, t);
  return {
    x: n,
    y: o,
    x2: n + (((r = e.measured) == null ? void 0 : r.width) ?? e.width ?? e.initialWidth ?? 0),
    y2: o + (((i = e.measured) == null ? void 0 : i.height) ?? e.height ?? e.initialHeight ?? 0)
  };
}, sk = (e, t) => Op(Ep(Eg(e), Eg(t))), xc = (e, t) => {
  const n = Math.max(0, Math.min(e.x + e.width, t.x + t.width) - Math.max(e.x, t.x)), o = Math.max(0, Math.min(e.y + e.height, t.y + t.height) - Math.max(e.y, t.y));
  return Math.ceil(n * o);
}, u1 = (e) => er(e.width) && er(e.height) && er(e.x) && er(e.y), er = (e) => !isNaN(e) && isFinite(e), nf = (e, t) => {
  process.env.NODE_ENV === "development" && console.warn(`[React Flow]: ${t} Help: https://reactflow.dev/error#${e}`);
}, Pp = (e, t = [1, 1]) => ({
  x: t[0] * Math.round(e.x / t[0]),
  y: t[1] * Math.round(e.y / t[1])
}), nu = ({ x: e, y: t }, [n, o, r], i = !1, s = [1, 1]) => {
  const l = {
    x: (e - n) / r,
    y: (t - o) / r
  };
  return i ? Pp(l, s) : l;
}, of = ({ x: e, y: t }, [n, o, r]) => ({
  x: e * r + n,
  y: t * r + o
});
function Ds(e, t) {
  if (typeof e == "number")
    return Math.floor((t - t / (1 + e)) * 0.5);
  if (typeof e == "string" && e.endsWith("px")) {
    const n = parseFloat(e);
    if (!Number.isNaN(n))
      return Math.floor(n);
  }
  if (typeof e == "string" && e.endsWith("%")) {
    const n = parseFloat(e);
    if (!Number.isNaN(n))
      return Math.floor(t * n * 0.01);
  }
  return console.error(`[React Flow] The padding value "${e}" is invalid. Please provide a number or a string with a valid unit (px or %).`), 0;
}
function DX(e, t, n) {
  if (typeof e == "string" || typeof e == "number") {
    const o = Ds(e, n), r = Ds(e, t);
    return {
      top: o,
      right: r,
      bottom: o,
      left: r,
      x: r * 2,
      y: o * 2
    };
  }
  if (typeof e == "object") {
    const o = Ds(e.top ?? e.y ?? 0, n), r = Ds(e.bottom ?? e.y ?? 0, n), i = Ds(e.left ?? e.x ?? 0, t), s = Ds(e.right ?? e.x ?? 0, t);
    return { top: o, right: s, bottom: r, left: i, x: i + s, y: o + r };
  }
  return { top: 0, right: 0, bottom: 0, left: 0, x: 0, y: 0 };
}
function LX(e, t, n, o, r, i) {
  const { x: s, y: l } = of(e, [t, n, o]), { x: c, y: u } = of({ x: e.x + e.width, y: e.y + e.height }, [t, n, o]), d = r - c, f = i - u;
  return {
    left: Math.floor(s),
    top: Math.floor(l),
    right: Math.floor(d),
    bottom: Math.floor(f)
  };
}
const Yb = (e, t, n, o, r, i) => {
  const s = DX(i, t, n), l = (t - s.x) / e.width, c = (n - s.y) / e.height, u = Math.min(l, c), d = Sa(u, o, r), f = e.x + e.width / 2, p = e.y + e.height / 2, h = t / 2 - f * d, g = n / 2 - p * d, m = LX(e, h, g, d, t, n), y = {
    left: Math.min(m.left - s.left, 0),
    top: Math.min(m.top - s.top, 0),
    right: Math.min(m.right - s.right, 0),
    bottom: Math.min(m.bottom - s.bottom, 0)
  };
  return {
    x: h - y.left + y.right,
    y: g - y.top + y.bottom,
    zoom: d
  };
}, rf = () => {
  var e;
  return typeof navigator < "u" && ((e = navigator == null ? void 0 : navigator.userAgent) == null ? void 0 : e.indexOf("Mac")) >= 0;
};
function Ca(e) {
  return e !== void 0 && e !== "parent";
}
function Jr(e) {
  var t, n;
  return {
    width: ((t = e.measured) == null ? void 0 : t.width) ?? e.width ?? e.initialWidth ?? 0,
    height: ((n = e.measured) == null ? void 0 : n.height) ?? e.height ?? e.initialHeight ?? 0
  };
}
function ak(e) {
  var t, n;
  return (((t = e.measured) == null ? void 0 : t.width) ?? e.width ?? e.initialWidth) !== void 0 && (((n = e.measured) == null ? void 0 : n.height) ?? e.height ?? e.initialHeight) !== void 0;
}
function lk(e, t = { width: 0, height: 0 }, n, o, r) {
  const i = { ...e }, s = o.get(n);
  if (s) {
    const l = s.origin || r;
    i.x += s.internals.positionAbsolute.x - (t.width ?? 0) * l[0], i.y += s.internals.positionAbsolute.y - (t.height ?? 0) * l[1];
  }
  return i;
}
function d1(e, t) {
  if (e.size !== t.size)
    return !1;
  for (const n of e)
    if (!t.has(n))
      return !1;
  return !0;
}
function BX() {
  let e, t;
  return { promise: new Promise((o, r) => {
    e = o, t = r;
  }), resolve: e, reject: t };
}
function Bl(e, { snapGrid: t = [0, 0], snapToGrid: n = !1, transform: o, containerBounds: r }) {
  const { x: i, y: s } = zr(e), l = nu({ x: i - ((r == null ? void 0 : r.left) ?? 0), y: s - ((r == null ? void 0 : r.top) ?? 0) }, o), { x: c, y: u } = n ? Pp(l, t) : l;
  return {
    xSnapped: c,
    ySnapped: u,
    ...l
  };
}
const Xb = (e) => ({
  width: e.offsetWidth,
  height: e.offsetHeight
}), ck = (e) => {
  var t;
  return ((t = e == null ? void 0 : e.getRootNode) == null ? void 0 : t.call(e)) || (window == null ? void 0 : window.document);
}, VX = ["INPUT", "SELECT", "TEXTAREA"];
function uk(e) {
  var o, r;
  const t = ((r = (o = e.composedPath) == null ? void 0 : o.call(e)) == null ? void 0 : r[0]) || e.target;
  return (t == null ? void 0 : t.nodeType) !== 1 ? !1 : VX.includes(t.nodeName) || t.hasAttribute("contenteditable") || !!t.closest(".nokey");
}
const dk = (e) => "clientX" in e, zr = (e, t) => {
  var i, s;
  const n = dk(e), o = n ? e.clientX : (i = e.touches) == null ? void 0 : i[0].clientX, r = n ? e.clientY : (s = e.touches) == null ? void 0 : s[0].clientY;
  return {
    x: o - ((t == null ? void 0 : t.left) ?? 0),
    y: r - ((t == null ? void 0 : t.top) ?? 0)
  };
}, f1 = (e, t, n, o, r) => {
  const i = t.querySelectorAll(`.${e}`);
  return !i || !i.length ? null : Array.from(i).map((s) => {
    const l = s.getBoundingClientRect();
    return {
      id: s.getAttribute("data-handleid"),
      type: e,
      nodeId: r,
      position: s.getAttribute("data-handlepos"),
      x: (l.left - n.left) / o,
      y: (l.top - n.top) / o,
      ...Xb(s)
    };
  });
};
function fk({ sourceX: e, sourceY: t, targetX: n, targetY: o, sourceControlX: r, sourceControlY: i, targetControlX: s, targetControlY: l }) {
  const c = e * 0.125 + r * 0.375 + s * 0.375 + n * 0.125, u = t * 0.125 + i * 0.375 + l * 0.375 + o * 0.125, d = Math.abs(c - e), f = Math.abs(u - t);
  return [c, u, d, f];
}
function Vu(e, t) {
  return e >= 0 ? 0.5 * e : t * 25 * Math.sqrt(-e);
}
function p1({ pos: e, x1: t, y1: n, x2: o, y2: r, c: i }) {
  switch (e) {
    case ze.Left:
      return [t - Vu(t - o, i), n];
    case ze.Right:
      return [t + Vu(o - t, i), n];
    case ze.Top:
      return [t, n - Vu(n - r, i)];
    case ze.Bottom:
      return [t, n + Vu(r - n, i)];
  }
}
function Zb({ sourceX: e, sourceY: t, sourcePosition: n = ze.Bottom, targetX: o, targetY: r, targetPosition: i = ze.Top, curvature: s = 0.25 }) {
  const [l, c] = p1({
    pos: n,
    x1: e,
    y1: t,
    x2: o,
    y2: r,
    c: s
  }), [u, d] = p1({
    pos: i,
    x1: o,
    y1: r,
    x2: e,
    y2: t,
    c: s
  }), [f, p, h, g] = fk({
    sourceX: e,
    sourceY: t,
    targetX: o,
    targetY: r,
    sourceControlX: l,
    sourceControlY: c,
    targetControlX: u,
    targetControlY: d
  });
  return [
    `M${e},${t} C${l},${c} ${u},${d} ${o},${r}`,
    f,
    p,
    h,
    g
  ];
}
function pk({ sourceX: e, sourceY: t, targetX: n, targetY: o }) {
  const r = Math.abs(n - e) / 2, i = n < e ? n + r : n - r, s = Math.abs(o - t) / 2, l = o < t ? o + s : o - s;
  return [i, l, r, s];
}
function FX({ sourceNode: e, targetNode: t, selected: n = !1, zIndex: o = 0, elevateOnSelect: r = !1 }) {
  if (!r)
    return o;
  const i = n || t.selected || e.selected, s = Math.max(e.internals.z || 0, t.internals.z || 0, 1e3);
  return o + (i ? s : 0);
}
function jX({ sourceNode: e, targetNode: t, width: n, height: o, transform: r }) {
  const i = Ep(tf(e), tf(t));
  i.x === i.x2 && (i.x2 += 1), i.y === i.y2 && (i.y2 += 1);
  const s = {
    x: -r[0] / r[2],
    y: -r[1] / r[2],
    width: n / r[2],
    height: o / r[2]
  };
  return xc(s, Op(i)) > 0;
}
const hk = ({ source: e, sourceHandle: t, target: n, targetHandle: o }) => `xy-edge__${e}${t || ""}-${n}${o || ""}`, zX = (e, t) => t.some((n) => n.source === e.source && n.target === e.target && (n.sourceHandle === e.sourceHandle || !n.sourceHandle && !e.sourceHandle) && (n.targetHandle === e.targetHandle || !n.targetHandle && !e.targetHandle)), mk = (e, t) => {
  if (!e.source || !e.target)
    return nf("006", Qn.error006()), t;
  let n;
  return tk(e) ? n = { ...e } : n = {
    ...e,
    id: hk(e)
  }, zX(n, t) ? t : (n.sourceHandle === null && delete n.sourceHandle, n.targetHandle === null && delete n.targetHandle, t.concat(n));
}, HX = (e, t, n, o = { shouldReplaceId: !0 }) => {
  const { id: r, ...i } = e;
  if (!t.source || !t.target)
    return nf("006", Qn.error006()), n;
  if (!n.find((c) => c.id === e.id))
    return nf("007", Qn.error007(r)), n;
  const l = {
    ...i,
    id: o.shouldReplaceId ? hk(t) : r,
    source: t.source,
    target: t.target,
    sourceHandle: t.sourceHandle,
    targetHandle: t.targetHandle
  };
  return n.filter((c) => c.id !== r).concat(l);
};
function gk({ sourceX: e, sourceY: t, targetX: n, targetY: o }) {
  const [r, i, s, l] = pk({
    sourceX: e,
    sourceY: t,
    targetX: n,
    targetY: o
  });
  return [`M ${e},${t}L ${n},${o}`, r, i, s, l];
}
const h1 = {
  [ze.Left]: { x: -1, y: 0 },
  [ze.Right]: { x: 1, y: 0 },
  [ze.Top]: { x: 0, y: -1 },
  [ze.Bottom]: { x: 0, y: 1 }
}, WX = ({ source: e, sourcePosition: t = ze.Bottom, target: n }) => t === ze.Left || t === ze.Right ? e.x < n.x ? { x: 1, y: 0 } : { x: -1, y: 0 } : e.y < n.y ? { x: 0, y: 1 } : { x: 0, y: -1 }, m1 = (e, t) => Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2));
function UX({ source: e, sourcePosition: t = ze.Bottom, target: n, targetPosition: o = ze.Top, center: r, offset: i }) {
  const s = h1[t], l = h1[o], c = { x: e.x + s.x * i, y: e.y + s.y * i }, u = { x: n.x + l.x * i, y: n.y + l.y * i }, d = WX({
    source: c,
    sourcePosition: t,
    target: u
  }), f = d.x !== 0 ? "x" : "y", p = d[f];
  let h = [], g, m;
  const y = { x: 0, y: 0 }, b = { x: 0, y: 0 }, [T, v, w, S] = pk({
    sourceX: e.x,
    sourceY: e.y,
    targetX: n.x,
    targetY: n.y
  });
  if (s[f] * l[f] === -1) {
    g = r.x ?? T, m = r.y ?? v;
    const E = [
      { x: g, y: c.y },
      { x: g, y: u.y }
    ], P = [
      { x: c.x, y: m },
      { x: u.x, y: m }
    ];
    s[f] === p ? h = f === "x" ? E : P : h = f === "x" ? P : E;
  } else {
    const E = [{ x: c.x, y: u.y }], P = [{ x: u.x, y: c.y }];
    if (f === "x" ? h = s.x === p ? P : E : h = s.y === p ? E : P, t === o) {
      const _ = Math.abs(e[f] - n[f]);
      if (_ <= i) {
        const R = Math.min(i - 1, i - _);
        s[f] === p ? y[f] = (c[f] > e[f] ? -1 : 1) * R : b[f] = (u[f] > n[f] ? -1 : 1) * R;
      }
    }
    if (t !== o) {
      const _ = f === "x" ? "y" : "x", R = s[f] === l[_], A = c[_] > u[_], N = c[_] < u[_];
      (s[f] === 1 && (!R && A || R && N) || s[f] !== 1 && (!R && N || R && A)) && (h = f === "x" ? E : P);
    }
    const M = { x: c.x + y.x, y: c.y + y.y }, x = { x: u.x + b.x, y: u.y + b.y }, I = Math.max(Math.abs(M.x - h[0].x), Math.abs(x.x - h[0].x)), k = Math.max(Math.abs(M.y - h[0].y), Math.abs(x.y - h[0].y));
    I >= k ? (g = (M.x + x.x) / 2, m = h[0].y) : (g = h[0].x, m = (M.y + x.y) / 2);
  }
  return [[
    e,
    { x: c.x + y.x, y: c.y + y.y },
    ...h,
    { x: u.x + b.x, y: u.y + b.y },
    n
  ], g, m, w, S];
}
function qX(e, t, n, o) {
  const r = Math.min(m1(e, t) / 2, m1(t, n) / 2, o), { x: i, y: s } = t;
  if (e.x === i && i === n.x || e.y === s && s === n.y)
    return `L${i} ${s}`;
  if (e.y === s) {
    const u = e.x < n.x ? -1 : 1, d = e.y < n.y ? 1 : -1;
    return `L ${i + r * u},${s}Q ${i},${s} ${i},${s + r * d}`;
  }
  const l = e.x < n.x ? 1 : -1, c = e.y < n.y ? -1 : 1;
  return `L ${i},${s + r * c}Q ${i},${s} ${i + r * l},${s}`;
}
function Og({ sourceX: e, sourceY: t, sourcePosition: n = ze.Bottom, targetX: o, targetY: r, targetPosition: i = ze.Top, borderRadius: s = 5, centerX: l, centerY: c, offset: u = 20 }) {
  const [d, f, p, h, g] = UX({
    source: { x: e, y: t },
    sourcePosition: n,
    target: { x: o, y: r },
    targetPosition: i,
    center: { x: l, y: c },
    offset: u
  });
  return [d.reduce((y, b, T) => {
    let v = "";
    return T > 0 && T < d.length - 1 ? v = qX(d[T - 1], b, d[T + 1], s) : v = `${T === 0 ? "M" : "L"}${b.x} ${b.y}`, y += v, y;
  }, ""), f, p, h, g];
}
function g1(e) {
  var t;
  return e && !!(e.internals.handleBounds || (t = e.handles) != null && t.length) && !!(e.measured.width || e.width || e.initialWidth);
}
function KX(e) {
  var f;
  const { sourceNode: t, targetNode: n } = e;
  if (!g1(t) || !g1(n))
    return null;
  const o = t.internals.handleBounds || y1(t.handles), r = n.internals.handleBounds || y1(n.handles), i = b1((o == null ? void 0 : o.source) ?? [], e.sourceHandle), s = b1(
    // when connection type is loose we can define all handles as sources and connect source -> source
    e.connectionMode === xa.Strict ? (r == null ? void 0 : r.target) ?? [] : ((r == null ? void 0 : r.target) ?? []).concat((r == null ? void 0 : r.source) ?? []),
    e.targetHandle
  );
  if (!i || !s)
    return (f = e.onError) == null || f.call(e, "008", Qn.error008(i ? "target" : "source", {
      id: e.id,
      sourceHandle: e.sourceHandle,
      targetHandle: e.targetHandle
    })), null;
  const l = (i == null ? void 0 : i.position) || ze.Bottom, c = (s == null ? void 0 : s.position) || ze.Top, u = wc(t, i, l), d = wc(n, s, c);
  return {
    sourceX: u.x,
    sourceY: u.y,
    targetX: d.x,
    targetY: d.y,
    sourcePosition: l,
    targetPosition: c
  };
}
function y1(e) {
  if (!e)
    return null;
  const t = [], n = [];
  for (const o of e)
    o.width = o.width ?? 1, o.height = o.height ?? 1, o.type === "source" ? t.push(o) : o.type === "target" && n.push(o);
  return {
    source: t,
    target: n
  };
}
function wc(e, t, n = ze.Left, o = !1) {
  const r = ((t == null ? void 0 : t.x) ?? 0) + e.internals.positionAbsolute.x, i = ((t == null ? void 0 : t.y) ?? 0) + e.internals.positionAbsolute.y, { width: s, height: l } = t ?? Jr(e);
  if (o)
    return { x: r + s / 2, y: i + l / 2 };
  switch ((t == null ? void 0 : t.position) ?? n) {
    case ze.Top:
      return { x: r + s / 2, y: i };
    case ze.Right:
      return { x: r + s, y: i + l / 2 };
    case ze.Bottom:
      return { x: r + s / 2, y: i + l };
    case ze.Left:
      return { x: r, y: i + l / 2 };
  }
}
function b1(e, t) {
  return e && (t ? e.find((n) => n.id === t) : e[0]) || null;
}
function Pg(e, t) {
  return e ? typeof e == "string" ? e : `${t ? `${t}__` : ""}${Object.keys(e).sort().map((o) => `${o}=${e[o]}`).join("&")}` : "";
}
function GX(e, { id: t, defaultColor: n, defaultMarkerStart: o, defaultMarkerEnd: r }) {
  const i = /* @__PURE__ */ new Set();
  return e.reduce((s, l) => ([l.markerStart || o, l.markerEnd || r].forEach((c) => {
    if (c && typeof c == "object") {
      const u = Pg(c, t);
      i.has(u) || (s.push({ id: u, color: c.color || n, ...c }), i.add(u));
    }
  }), s), []).sort((s, l) => s.id.localeCompare(l.id));
}
const Qb = {
  nodeOrigin: [0, 0],
  nodeExtent: bc,
  elevateNodesOnSelect: !0,
  defaults: {}
}, YX = {
  ...Qb,
  checkEquality: !0
};
function Jb(e, t) {
  const n = { ...e };
  for (const o in t)
    t[o] !== void 0 && (n[o] = t[o]);
  return n;
}
function XX(e, t, n) {
  const o = Jb(Qb, n);
  for (const r of e.values())
    if (r.parentId)
      ev(r, e, t, o);
    else {
      const i = eu(r, o.nodeOrigin), s = Ca(r.extent) ? r.extent : o.nodeExtent, l = ps(i, s, Jr(r));
      r.internals.positionAbsolute = l;
    }
}
function Rg(e, t, n, o) {
  var c, u;
  const r = Jb(YX, o);
  let i = e.length > 0;
  const s = new Map(t), l = r != null && r.elevateNodesOnSelect ? 1e3 : 0;
  t.clear(), n.clear();
  for (const d of e) {
    let f = s.get(d.id);
    if (r.checkEquality && d === (f == null ? void 0 : f.internals.userNode))
      t.set(d.id, f);
    else {
      const p = eu(d, r.nodeOrigin), h = Ca(d.extent) ? d.extent : r.nodeExtent, g = ps(p, h, Jr(d));
      f = {
        ...r.defaults,
        ...d,
        measured: {
          width: (c = d.measured) == null ? void 0 : c.width,
          height: (u = d.measured) == null ? void 0 : u.height
        },
        internals: {
          positionAbsolute: g,
          // if user re-initializes the node or removes `measured` for whatever reason, we reset the handleBounds so that the node gets re-measured
          handleBounds: d.measured ? f == null ? void 0 : f.internals.handleBounds : void 0,
          z: yk(d, l),
          userNode: d
        }
      }, t.set(d.id, f);
    }
    (f.measured === void 0 || f.measured.width === void 0 || f.measured.height === void 0) && !f.hidden && (i = !1), d.parentId && ev(f, t, n, o);
  }
  return i;
}
function ZX(e, t) {
  if (!e.parentId)
    return;
  const n = t.get(e.parentId);
  n ? n.set(e.id, e) : t.set(e.parentId, /* @__PURE__ */ new Map([[e.id, e]]));
}
function ev(e, t, n, o) {
  const { elevateNodesOnSelect: r, nodeOrigin: i, nodeExtent: s } = Jb(Qb, o), l = e.parentId, c = t.get(l);
  if (!c) {
    console.warn(`Parent node ${l} not found. Please make sure that parent nodes are in front of their child nodes in the nodes array.`);
    return;
  }
  ZX(e, n);
  const u = r ? 1e3 : 0, { x: d, y: f, z: p } = QX(e, c, i, s, u), { positionAbsolute: h } = e.internals, g = d !== h.x || f !== h.y;
  (g || p !== e.internals.z) && t.set(e.id, {
    ...e,
    internals: {
      ...e.internals,
      positionAbsolute: g ? { x: d, y: f } : h,
      z: p
    }
  });
}
function yk(e, t) {
  return (er(e.zIndex) ? e.zIndex : 0) + (e.selected ? t : 0);
}
function QX(e, t, n, o, r) {
  const { x: i, y: s } = t.internals.positionAbsolute, l = Jr(e), c = eu(e, n), u = Ca(e.extent) ? ps(c, e.extent, l) : c;
  let d = ps({ x: i + u.x, y: s + u.y }, o, l);
  e.extent === "parent" && (d = rk(d, l, t));
  const f = yk(e, r), p = t.internals.z ?? 0;
  return {
    x: d.x,
    y: d.y,
    z: p > f ? p : f
  };
}
function tv(e, t, n, o = [0, 0]) {
  var s;
  const r = [], i = /* @__PURE__ */ new Map();
  for (const l of e) {
    const c = t.get(l.parentId);
    if (!c)
      continue;
    const u = ((s = i.get(l.parentId)) == null ? void 0 : s.expandedRect) ?? Ta(c), d = sk(u, l.rect);
    i.set(l.parentId, { expandedRect: d, parent: c });
  }
  return i.size > 0 && i.forEach(({ expandedRect: l, parent: c }, u) => {
    var v;
    const d = c.internals.positionAbsolute, f = Jr(c), p = c.origin ?? o, h = l.x < d.x ? Math.round(Math.abs(d.x - l.x)) : 0, g = l.y < d.y ? Math.round(Math.abs(d.y - l.y)) : 0, m = Math.max(f.width, Math.round(l.width)), y = Math.max(f.height, Math.round(l.height)), b = (m - f.width) * p[0], T = (y - f.height) * p[1];
    (h > 0 || g > 0 || b || T) && (r.push({
      id: u,
      type: "position",
      position: {
        x: c.position.x - h + b,
        y: c.position.y - g + T
      }
    }), (v = n.get(u)) == null || v.forEach((w) => {
      e.some((S) => S.id === w.id) || r.push({
        id: w.id,
        type: "position",
        position: {
          x: w.position.x + h,
          y: w.position.y + g
        }
      });
    })), (f.width < l.width || f.height < l.height || h || g) && r.push({
      id: u,
      type: "dimensions",
      setAttributes: !0,
      dimensions: {
        width: m + (h ? p[0] * h - b : 0),
        height: y + (g ? p[1] * g - T : 0)
      }
    });
  }), r;
}
function JX(e, t, n, o, r, i) {
  const s = o == null ? void 0 : o.querySelector(".xyflow__viewport");
  let l = !1;
  if (!s)
    return { changes: [], updatedInternals: l };
  const c = [], u = window.getComputedStyle(s), { m22: d } = new window.DOMMatrixReadOnly(u.transform), f = [];
  for (const p of e.values()) {
    const h = t.get(p.id);
    if (!h)
      continue;
    if (h.hidden) {
      t.set(h.id, {
        ...h,
        internals: {
          ...h.internals,
          handleBounds: void 0
        }
      }), l = !0;
      continue;
    }
    const g = Xb(p.nodeElement), m = h.measured.width !== g.width || h.measured.height !== g.height;
    if (!!(g.width && g.height && (m || !h.internals.handleBounds || p.force))) {
      const b = p.nodeElement.getBoundingClientRect(), T = Ca(h.extent) ? h.extent : i;
      let { positionAbsolute: v } = h.internals;
      h.parentId && h.extent === "parent" ? v = rk(v, g, t.get(h.parentId)) : T && (v = ps(v, T, g));
      const w = {
        ...h,
        measured: g,
        internals: {
          ...h.internals,
          positionAbsolute: v,
          handleBounds: {
            source: f1("source", p.nodeElement, b, d, h.id),
            target: f1("target", p.nodeElement, b, d, h.id)
          }
        }
      };
      t.set(h.id, w), h.parentId && ev(w, t, n, { nodeOrigin: r }), l = !0, m && (c.push({
        id: h.id,
        type: "dimensions",
        dimensions: g
      }), h.expandParent && h.parentId && f.push({
        id: h.id,
        parentId: h.parentId,
        rect: Ta(w, r)
      }));
    }
  }
  if (f.length > 0) {
    const p = tv(f, t, n, r);
    c.push(...p);
  }
  return { changes: c, updatedInternals: l };
}
async function eZ({ delta: e, panZoom: t, transform: n, translateExtent: o, width: r, height: i }) {
  if (!t || !e.x && !e.y)
    return Promise.resolve(!1);
  const s = await t.setViewportConstrained({
    x: n[0] + e.x,
    y: n[1] + e.y,
    zoom: n[2]
  }, [
    [0, 0],
    [r, i]
  ], o), l = !!s && (s.x !== n[0] || s.y !== n[1] || s.k !== n[2]);
  return Promise.resolve(l);
}
function v1(e, t, n, o, r, i) {
  let s = r;
  const l = o.get(s) || /* @__PURE__ */ new Map();
  o.set(s, l.set(n, t)), s = `${r}-${e}`;
  const c = o.get(s) || /* @__PURE__ */ new Map();
  if (o.set(s, c.set(n, t)), i) {
    s = `${r}-${e}-${i}`;
    const u = o.get(s) || /* @__PURE__ */ new Map();
    o.set(s, u.set(n, t));
  }
}
function bk(e, t, n) {
  e.clear(), t.clear();
  for (const o of n) {
    const { source: r, target: i, sourceHandle: s = null, targetHandle: l = null } = o, c = { edgeId: o.id, source: r, target: i, sourceHandle: s, targetHandle: l }, u = `${r}-${s}--${i}-${l}`, d = `${i}-${l}--${r}-${s}`;
    v1("source", c, d, e, r, s), v1("target", c, u, e, i, l), t.set(o.id, o);
  }
}
function vk(e, t) {
  if (!e.parentId)
    return !1;
  const n = t.get(e.parentId);
  return n ? n.selected ? !0 : vk(n, t) : !1;
}
function x1(e, t, n) {
  var r;
  let o = e;
  do {
    if ((r = o == null ? void 0 : o.matches) != null && r.call(o, t))
      return !0;
    if (o === n)
      return !1;
    o = o == null ? void 0 : o.parentElement;
  } while (o);
  return !1;
}
function tZ(e, t, n, o) {
  const r = /* @__PURE__ */ new Map();
  for (const [i, s] of e)
    if ((s.selected || s.id === o) && (!s.parentId || !vk(s, e)) && (s.draggable || t && typeof s.draggable > "u")) {
      const l = e.get(i);
      l && r.set(i, {
        id: i,
        position: l.position || { x: 0, y: 0 },
        distance: {
          x: n.x - l.internals.positionAbsolute.x,
          y: n.y - l.internals.positionAbsolute.y
        },
        extent: l.extent,
        parentId: l.parentId,
        origin: l.origin,
        expandParent: l.expandParent,
        internals: {
          positionAbsolute: l.internals.positionAbsolute || { x: 0, y: 0 }
        },
        measured: {
          width: l.measured.width ?? 0,
          height: l.measured.height ?? 0
        }
      });
    }
  return r;
}
function qh({ nodeId: e, dragItems: t, nodeLookup: n, dragging: o = !0 }) {
  var s, l, c;
  const r = [];
  for (const [u, d] of t) {
    const f = (s = n.get(u)) == null ? void 0 : s.internals.userNode;
    f && r.push({
      ...f,
      position: d.position,
      dragging: o
    });
  }
  if (!e)
    return [r[0], r];
  const i = (l = n.get(e)) == null ? void 0 : l.internals.userNode;
  return [
    i ? {
      ...i,
      position: ((c = t.get(e)) == null ? void 0 : c.position) || i.position,
      dragging: o
    } : r[0],
    r
  ];
}
function nZ({ onNodeMouseDown: e, getStoreItems: t, onDragStart: n, onDrag: o, onDragStop: r }) {
  let i = { x: null, y: null }, s = 0, l = /* @__PURE__ */ new Map(), c = !1, u = { x: 0, y: 0 }, d = null, f = !1, p = null, h = !1;
  function g({ noDragClassName: y, handleSelector: b, domNode: T, isSelectable: v, nodeId: w, nodeClickDistance: S = 0 }) {
    p = xo(T);
    function C({ x, y: I }, k) {
      const { nodeLookup: _, nodeExtent: R, snapGrid: A, snapToGrid: N, nodeOrigin: L, onNodeDrag: V, onSelectionDrag: D, onError: B, updateNodePositions: F } = t();
      i = { x, y: I };
      let U = !1, q = { x: 0, y: 0, x2: 0, y2: 0 };
      if (l.size > 1 && R) {
        const G = tu(l);
        q = Eg(G);
      }
      for (const [G, K] of l) {
        if (!_.has(G))
          continue;
        let te = { x: x - K.distance.x, y: I - K.distance.y };
        N && (te = Pp(te, A));
        let ne = [
          [R[0][0], R[0][1]],
          [R[1][0], R[1][1]]
        ];
        if (l.size > 1 && R && !K.extent) {
          const { positionAbsolute: Y } = K.internals, re = Y.x - q.x + R[0][0], z = Y.x + K.measured.width - q.x2 + R[1][0], de = Y.y - q.y + R[0][1], ue = Y.y + K.measured.height - q.y2 + R[1][1];
          ne = [
            [re, de],
            [z, ue]
          ];
        }
        const { position: W, positionAbsolute: ee } = ok({
          nodeId: G,
          nextPosition: te,
          nodeLookup: _,
          nodeExtent: ne,
          nodeOrigin: L,
          onError: B
        });
        U = U || K.position.x !== W.x || K.position.y !== W.y, K.position = W, K.internals.positionAbsolute = ee;
      }
      if (U && (F(l, !0), k && (o || V || !w && D))) {
        const [G, K] = qh({
          nodeId: w,
          dragItems: l,
          nodeLookup: _
        });
        o == null || o(k, l, G, K), V == null || V(k, G, K), w || D == null || D(k, K);
      }
    }
    async function E() {
      if (!d)
        return;
      const { transform: x, panBy: I, autoPanSpeed: k, autoPanOnNodeDrag: _ } = t();
      if (!_) {
        c = !1, cancelAnimationFrame(s);
        return;
      }
      const [R, A] = ik(u, d, k);
      (R !== 0 || A !== 0) && (i.x = (i.x ?? 0) - R / x[2], i.y = (i.y ?? 0) - A / x[2], await I({ x: R, y: A }) && C(i, null)), s = requestAnimationFrame(E);
    }
    function P(x) {
      var U;
      const { nodeLookup: I, multiSelectionActive: k, nodesDraggable: _, transform: R, snapGrid: A, snapToGrid: N, selectNodesOnDrag: L, onNodeDragStart: V, onSelectionDragStart: D, unselectNodesAndEdges: B } = t();
      f = !0, (!L || !v) && !k && w && ((U = I.get(w)) != null && U.selected || B()), v && L && w && (e == null || e(w));
      const F = Bl(x.sourceEvent, { transform: R, snapGrid: A, snapToGrid: N, containerBounds: d });
      if (i = F, l = tZ(I, _, F, w), l.size > 0 && (n || V || !w && D)) {
        const [q, G] = qh({
          nodeId: w,
          dragItems: l,
          nodeLookup: I
        });
        n == null || n(x.sourceEvent, l, q, G), V == null || V(x.sourceEvent, q, G), w || D == null || D(x.sourceEvent, G);
      }
    }
    const M = DI().clickDistance(S).on("start", (x) => {
      const { domNode: I, nodeDragThreshold: k, transform: _, snapGrid: R, snapToGrid: A } = t();
      d = (I == null ? void 0 : I.getBoundingClientRect()) || null, h = !1, k === 0 && P(x), i = Bl(x.sourceEvent, { transform: _, snapGrid: R, snapToGrid: A, containerBounds: d }), u = zr(x.sourceEvent, d);
    }).on("drag", (x) => {
      const { autoPanOnNodeDrag: I, transform: k, snapGrid: _, snapToGrid: R, nodeDragThreshold: A, nodeLookup: N } = t(), L = Bl(x.sourceEvent, { transform: k, snapGrid: _, snapToGrid: R, containerBounds: d });
      if ((x.sourceEvent.type === "touchmove" && x.sourceEvent.touches.length > 1 || // if user deletes a node while dragging, we need to abort the drag to prevent errors
      w && !N.has(w)) && (h = !0), !h) {
        if (!c && I && f && (c = !0, E()), !f) {
          const V = L.xSnapped - (i.x ?? 0), D = L.ySnapped - (i.y ?? 0);
          Math.sqrt(V * V + D * D) > A && P(x);
        }
        (i.x !== L.xSnapped || i.y !== L.ySnapped) && l && f && (u = zr(x.sourceEvent, d), C(L, x.sourceEvent));
      }
    }).on("end", (x) => {
      if (!(!f || h) && (c = !1, f = !1, cancelAnimationFrame(s), l.size > 0)) {
        const { nodeLookup: I, updateNodePositions: k, onNodeDragStop: _, onSelectionDragStop: R } = t();
        if (k(l, !1), r || _ || !w && R) {
          const [A, N] = qh({
            nodeId: w,
            dragItems: l,
            nodeLookup: I,
            dragging: !1
          });
          r == null || r(x.sourceEvent, l, A, N), _ == null || _(x.sourceEvent, A, N), w || R == null || R(x.sourceEvent, N);
        }
      }
    }).filter((x) => {
      const I = x.target;
      return !x.button && (!y || !x1(I, `.${y}`, T)) && (!b || x1(I, b, T));
    });
    p.call(M);
  }
  function m() {
    p == null || p.on(".drag", null);
  }
  return {
    update: g,
    destroy: m
  };
}
function oZ(e, t, n) {
  const o = [], r = {
    x: e.x - n,
    y: e.y - n,
    width: n * 2,
    height: n * 2
  };
  for (const i of t.values())
    xc(r, Ta(i)) > 0 && o.push(i);
  return o;
}
const rZ = 250;
function iZ(e, t, n, o) {
  var l, c;
  let r = [], i = 1 / 0;
  const s = oZ(e, n, t + rZ);
  for (const u of s) {
    const d = [...((l = u.internals.handleBounds) == null ? void 0 : l.source) ?? [], ...((c = u.internals.handleBounds) == null ? void 0 : c.target) ?? []];
    for (const f of d) {
      if (o.nodeId === f.nodeId && o.type === f.type && o.id === f.id)
        continue;
      const { x: p, y: h } = wc(u, f, f.position, !0), g = Math.sqrt(Math.pow(p - e.x, 2) + Math.pow(h - e.y, 2));
      g > t || (g < i ? (r = [{ ...f, x: p, y: h }], i = g) : g === i && r.push({ ...f, x: p, y: h }));
    }
  }
  if (!r.length)
    return null;
  if (r.length > 1) {
    const u = o.type === "source" ? "target" : "source";
    return r.find((d) => d.type === u) ?? r[0];
  }
  return r[0];
}
function xk(e, t, n, o, r, i = !1) {
  var u, d, f;
  const s = o.get(e);
  if (!s)
    return null;
  const l = r === "strict" ? (u = s.internals.handleBounds) == null ? void 0 : u[t] : [...((d = s.internals.handleBounds) == null ? void 0 : d.source) ?? [], ...((f = s.internals.handleBounds) == null ? void 0 : f.target) ?? []], c = (n ? l == null ? void 0 : l.find((p) => p.id === n) : l == null ? void 0 : l[0]) ?? null;
  return c && i ? { ...c, ...wc(s, c, c.position, !0) } : c;
}
function wk(e, t) {
  return e || (t != null && t.classList.contains("target") ? "target" : t != null && t.classList.contains("source") ? "source" : null);
}
function sZ(e, t) {
  let n = null;
  return t ? n = !0 : e && !t && (n = !1), n;
}
const Sk = () => !0;
function aZ(e, { connectionMode: t, connectionRadius: n, handleId: o, nodeId: r, edgeUpdaterType: i, isTarget: s, domNode: l, nodeLookup: c, lib: u, autoPanOnConnect: d, flowId: f, panBy: p, cancelConnection: h, onConnectStart: g, onConnect: m, onConnectEnd: y, isValidConnection: b = Sk, onReconnectEnd: T, updateConnection: v, getTransform: w, getFromHandle: S, autoPanSpeed: C }) {
  const E = ck(e.target);
  let P = 0, M;
  const { x, y: I } = zr(e), k = E == null ? void 0 : E.elementFromPoint(x, I), _ = wk(i, k), R = l == null ? void 0 : l.getBoundingClientRect();
  if (!R || !_)
    return;
  const A = xk(r, _, o, c, t);
  if (!A)
    return;
  let N = zr(e, R), L = !1, V = null, D = !1, B = null;
  function F() {
    if (!d || !R)
      return;
    const [ee, Y] = ik(N, R, C);
    p({ x: ee, y: Y }), P = requestAnimationFrame(F);
  }
  const U = {
    ...A,
    nodeId: r,
    type: _,
    position: A.position
  }, q = c.get(r), K = {
    inProgress: !0,
    isValid: null,
    from: wc(q, U, ze.Left, !0),
    fromHandle: U,
    fromPosition: U.position,
    fromNode: q,
    to: N,
    toHandle: null,
    toPosition: l1[U.position],
    toNode: null
  };
  v(K);
  let te = K;
  g == null || g(e, { nodeId: r, handleId: o, handleType: _ });
  function ne(ee) {
    if (!S() || !U) {
      W(ee);
      return;
    }
    const Y = w();
    N = zr(ee, R), M = iZ(nu(N, Y, !1, [1, 1]), n, c, U), L || (F(), L = !0);
    const re = Tk(ee, {
      handle: M,
      connectionMode: t,
      fromNodeId: r,
      fromHandleId: o,
      fromType: s ? "target" : "source",
      isValidConnection: b,
      doc: E,
      lib: u,
      flowId: f,
      nodeLookup: c
    });
    B = re.handleDomNode, V = re.connection, D = sZ(!!M, re.isValid);
    const z = {
      // from stays the same
      ...te,
      isValid: D,
      to: re.toHandle && D ? of({ x: re.toHandle.x, y: re.toHandle.y }, Y) : N,
      toHandle: re.toHandle,
      toPosition: D && re.toHandle ? re.toHandle.position : l1[U.position],
      toNode: re.toHandle ? c.get(re.toHandle.nodeId) : null
    };
    D && M && te.toHandle && z.toHandle && te.toHandle.type === z.toHandle.type && te.toHandle.nodeId === z.toHandle.nodeId && te.toHandle.id === z.toHandle.id && te.to.x === z.to.x && te.to.y === z.to.y || (v(z), te = z);
  }
  function W(ee) {
    (M || B) && V && D && (m == null || m(V));
    const { inProgress: Y, ...re } = te, z = {
      ...re,
      toPosition: te.toHandle ? te.toPosition : null
    };
    y == null || y(ee, z), i && (T == null || T(ee, z)), h(), cancelAnimationFrame(P), L = !1, D = !1, V = null, B = null, E.removeEventListener("mousemove", ne), E.removeEventListener("mouseup", W), E.removeEventListener("touchmove", ne), E.removeEventListener("touchend", W);
  }
  E.addEventListener("mousemove", ne), E.addEventListener("mouseup", W), E.addEventListener("touchmove", ne), E.addEventListener("touchend", W);
}
function Tk(e, { handle: t, connectionMode: n, fromNodeId: o, fromHandleId: r, fromType: i, doc: s, lib: l, flowId: c, isValidConnection: u = Sk, nodeLookup: d }) {
  const f = i === "target", p = t ? s.querySelector(`.${l}-flow__handle[data-id="${c}-${t == null ? void 0 : t.nodeId}-${t == null ? void 0 : t.id}-${t == null ? void 0 : t.type}"]`) : null, { x: h, y: g } = zr(e), m = s.elementFromPoint(h, g), y = m != null && m.classList.contains(`${l}-flow__handle`) ? m : p, b = {
    handleDomNode: y,
    isValid: !1,
    connection: null,
    toHandle: null
  };
  if (y) {
    const T = wk(void 0, y), v = y.getAttribute("data-nodeid"), w = y.getAttribute("data-handleid"), S = y.classList.contains("connectable"), C = y.classList.contains("connectableend");
    if (!v || !T)
      return b;
    const E = {
      source: f ? v : o,
      sourceHandle: f ? w : r,
      target: f ? o : v,
      targetHandle: f ? r : w
    };
    b.connection = E;
    const M = S && C && (n === xa.Strict ? f && T === "source" || !f && T === "target" : v !== o || w !== r);
    b.isValid = M && u(E), b.toHandle = xk(v, T, w, d, n, !0);
  }
  return b;
}
const Ig = {
  onPointerDown: aZ,
  isValid: Tk
};
function lZ({ domNode: e, panZoom: t, getTransform: n, getViewScale: o }) {
  const r = xo(e);
  function i({ translateExtent: l, width: c, height: u, zoomStep: d = 10, pannable: f = !0, zoomable: p = !0, inversePan: h = !1 }) {
    const g = (v) => {
      const w = n();
      if (v.sourceEvent.type !== "wheel" || !t)
        return;
      const S = -v.sourceEvent.deltaY * (v.sourceEvent.deltaMode === 1 ? 0.05 : v.sourceEvent.deltaMode ? 1 : 2e-3) * d, C = w[2] * Math.pow(2, S);
      t.scaleTo(C);
    };
    let m = [0, 0];
    const y = (v) => {
      (v.sourceEvent.type === "mousedown" || v.sourceEvent.type === "touchstart") && (m = [
        v.sourceEvent.clientX ?? v.sourceEvent.touches[0].clientX,
        v.sourceEvent.clientY ?? v.sourceEvent.touches[0].clientY
      ]);
    }, b = (v) => {
      const w = n();
      if (v.sourceEvent.type !== "mousemove" && v.sourceEvent.type !== "touchmove" || !t)
        return;
      const S = [
        v.sourceEvent.clientX ?? v.sourceEvent.touches[0].clientX,
        v.sourceEvent.clientY ?? v.sourceEvent.touches[0].clientY
      ], C = [S[0] - m[0], S[1] - m[1]];
      m = S;
      const E = o() * Math.max(w[2], Math.log(w[2])) * (h ? -1 : 1), P = {
        x: w[0] - C[0] * E,
        y: w[1] - C[1] * E
      }, M = [
        [0, 0],
        [c, u]
      ];
      t.setViewportConstrained({
        x: P.x,
        y: P.y,
        zoom: w[2]
      }, M, l);
    }, T = ZI().on("start", y).on("zoom", f ? b : null).on("zoom.wheel", p ? g : null);
    r.call(T, {});
  }
  function s() {
    r.on("zoom", null);
  }
  return {
    update: i,
    destroy: s,
    pointer: Zo
  };
}
const cZ = (e, t) => e.x !== t.x || e.y !== t.y || e.zoom !== t.k, Rp = (e) => ({
  x: e.x,
  y: e.y,
  zoom: e.k
}), Kh = ({ x: e, y: t, zoom: n }) => Cp.translate(e, t).scale(n), Gs = (e, t) => e.target.closest(`.${t}`), Ck = (e, t) => t === 2 && Array.isArray(e) && e.includes(2), Gh = (e, t = 0, n = () => {
}) => {
  const o = typeof t == "number" && t > 0;
  return o || n(), o ? e.transition().duration(t).on("end", n) : e;
}, Ek = (e) => {
  const t = e.ctrlKey && rf() ? 10 : 1;
  return -e.deltaY * (e.deltaMode === 1 ? 0.05 : e.deltaMode ? 1 : 2e-3) * t;
};
function uZ({ zoomPanValues: e, noWheelClassName: t, d3Selection: n, d3Zoom: o, panOnScrollMode: r, panOnScrollSpeed: i, zoomOnPinch: s, onPanZoomStart: l, onPanZoom: c, onPanZoomEnd: u }) {
  return (d) => {
    if (Gs(d, t))
      return !1;
    d.preventDefault(), d.stopImmediatePropagation();
    const f = n.property("__zoom").k || 1;
    if (d.ctrlKey && s) {
      const y = Zo(d), b = Ek(d), T = f * Math.pow(2, b);
      o.scaleTo(n, T, y, d);
      return;
    }
    const p = d.deltaMode === 1 ? 20 : 1;
    let h = r === ss.Vertical ? 0 : d.deltaX * p, g = r === ss.Horizontal ? 0 : d.deltaY * p;
    !rf() && d.shiftKey && r !== ss.Vertical && (h = d.deltaY * p, g = 0), o.translateBy(
      n,
      -(h / f) * i,
      -(g / f) * i,
      // @ts-ignore
      { internal: !0 }
    );
    const m = Rp(n.property("__zoom"));
    clearTimeout(e.panScrollTimeout), e.isPanScrolling || (e.isPanScrolling = !0, l == null || l(d, m)), e.isPanScrolling && (c == null || c(d, m), e.panScrollTimeout = setTimeout(() => {
      u == null || u(d, m), e.isPanScrolling = !1;
    }, 150));
  };
}
function dZ({ noWheelClassName: e, preventScrolling: t, d3ZoomHandler: n }) {
  return function(o, r) {
    const i = o.type === "wheel", s = !t && i && !o.ctrlKey, l = Gs(o, e);
    if (o.ctrlKey && i && l && o.preventDefault(), s || l)
      return null;
    o.preventDefault(), n.call(this, o, r);
  };
}
function fZ({ zoomPanValues: e, onDraggingChange: t, onPanZoomStart: n }) {
  return (o) => {
    var i, s, l;
    if ((i = o.sourceEvent) != null && i.internal)
      return;
    const r = Rp(o.transform);
    e.mouseButton = ((s = o.sourceEvent) == null ? void 0 : s.button) || 0, e.isZoomingOrPanning = !0, e.prevViewport = r, ((l = o.sourceEvent) == null ? void 0 : l.type) === "mousedown" && t(!0), n && (n == null || n(o.sourceEvent, r));
  };
}
function pZ({ zoomPanValues: e, panOnDrag: t, onPaneContextMenu: n, onTransformChange: o, onPanZoom: r }) {
  return (i) => {
    var s, l;
    e.usedRightMouseButton = !!(n && Ck(t, e.mouseButton ?? 0)), (s = i.sourceEvent) != null && s.sync || o([i.transform.x, i.transform.y, i.transform.k]), r && !((l = i.sourceEvent) != null && l.internal) && (r == null || r(i.sourceEvent, Rp(i.transform)));
  };
}
function hZ({ zoomPanValues: e, panOnDrag: t, panOnScroll: n, onDraggingChange: o, onPanZoomEnd: r, onPaneContextMenu: i }) {
  return (s) => {
    var l;
    if (!((l = s.sourceEvent) != null && l.internal) && (e.isZoomingOrPanning = !1, i && Ck(t, e.mouseButton ?? 0) && !e.usedRightMouseButton && s.sourceEvent && i(s.sourceEvent), e.usedRightMouseButton = !1, o(!1), r && cZ(e.prevViewport, s.transform))) {
      const c = Rp(s.transform);
      e.prevViewport = c, clearTimeout(e.timerId), e.timerId = setTimeout(
        () => {
          r == null || r(s.sourceEvent, c);
        },
        // we need a setTimeout for panOnScroll to supress multiple end events fired during scroll
        n ? 150 : 0
      );
    }
  };
}
function mZ({ zoomActivationKeyPressed: e, zoomOnScroll: t, zoomOnPinch: n, panOnDrag: o, panOnScroll: r, zoomOnDoubleClick: i, userSelectionActive: s, noWheelClassName: l, noPanClassName: c, lib: u }) {
  return (d) => {
    var g;
    const f = e || t, p = n && d.ctrlKey;
    if (d.button === 1 && d.type === "mousedown" && (Gs(d, `${u}-flow__node`) || Gs(d, `${u}-flow__edge`)))
      return !0;
    if (!o && !f && !r && !i && !n || s || Gs(d, l) && d.type === "wheel" || Gs(d, c) && (d.type !== "wheel" || r && d.type === "wheel" && !e) || !n && d.ctrlKey && d.type === "wheel")
      return !1;
    if (!n && d.type === "touchstart" && ((g = d.touches) == null ? void 0 : g.length) > 1)
      return d.preventDefault(), !1;
    if (!f && !r && !p && d.type === "wheel" || !o && (d.type === "mousedown" || d.type === "touchstart") || Array.isArray(o) && !o.includes(d.button) && d.type === "mousedown")
      return !1;
    const h = Array.isArray(o) && o.includes(d.button) || !d.button || d.button <= 1;
    return (!d.ctrlKey || d.type === "wheel") && h;
  };
}
function gZ({ domNode: e, minZoom: t, maxZoom: n, paneClickDistance: o, translateExtent: r, viewport: i, onPanZoom: s, onPanZoomStart: l, onPanZoomEnd: c, onDraggingChange: u }) {
  const d = {
    isZoomingOrPanning: !1,
    usedRightMouseButton: !1,
    prevViewport: { x: 0, y: 0, zoom: 0 },
    mouseButton: 0,
    timerId: void 0,
    panScrollTimeout: void 0,
    isPanScrolling: !1
  }, f = e.getBoundingClientRect(), p = ZI().clickDistance(!er(o) || o < 0 ? 0 : o).scaleExtent([t, n]).translateExtent(r), h = xo(e).call(p);
  v({
    x: i.x,
    y: i.y,
    zoom: Sa(i.zoom, t, n)
  }, [
    [0, 0],
    [f.width, f.height]
  ], r);
  const g = h.on("wheel.zoom"), m = h.on("dblclick.zoom");
  p.wheelDelta(Ek);
  function y(k, _) {
    return h ? new Promise((R) => {
      p == null || p.transform(Gh(h, _ == null ? void 0 : _.duration, () => R(!0)), k);
    }) : Promise.resolve(!1);
  }
  function b({ noWheelClassName: k, noPanClassName: _, onPaneContextMenu: R, userSelectionActive: A, panOnScroll: N, panOnDrag: L, panOnScrollMode: V, panOnScrollSpeed: D, preventScrolling: B, zoomOnPinch: F, zoomOnScroll: U, zoomOnDoubleClick: q, zoomActivationKeyPressed: G, lib: K, onTransformChange: te }) {
    A && !d.isZoomingOrPanning && T();
    const W = N && !G && !A ? uZ({
      zoomPanValues: d,
      noWheelClassName: k,
      d3Selection: h,
      d3Zoom: p,
      panOnScrollMode: V,
      panOnScrollSpeed: D,
      zoomOnPinch: F,
      onPanZoomStart: l,
      onPanZoom: s,
      onPanZoomEnd: c
    }) : dZ({
      noWheelClassName: k,
      preventScrolling: B,
      d3ZoomHandler: g
    });
    if (h.on("wheel.zoom", W, { passive: !1 }), !A) {
      const Y = fZ({
        zoomPanValues: d,
        onDraggingChange: u,
        onPanZoomStart: l
      });
      p.on("start", Y);
      const re = pZ({
        zoomPanValues: d,
        panOnDrag: L,
        onPaneContextMenu: !!R,
        onPanZoom: s,
        onTransformChange: te
      });
      p.on("zoom", re);
      const z = hZ({
        zoomPanValues: d,
        panOnDrag: L,
        panOnScroll: N,
        onPaneContextMenu: R,
        onPanZoomEnd: c,
        onDraggingChange: u
      });
      p.on("end", z);
    }
    const ee = mZ({
      zoomActivationKeyPressed: G,
      panOnDrag: L,
      zoomOnScroll: U,
      panOnScroll: N,
      zoomOnDoubleClick: q,
      zoomOnPinch: F,
      userSelectionActive: A,
      noPanClassName: _,
      noWheelClassName: k,
      lib: K
    });
    p.filter(ee), q ? h.on("dblclick.zoom", m) : h.on("dblclick.zoom", null);
  }
  function T() {
    p.on("zoom", null);
  }
  async function v(k, _, R) {
    const A = Kh(k), N = p == null ? void 0 : p.constrain()(A, _, R);
    return N && await y(N), new Promise((L) => L(N));
  }
  async function w(k, _) {
    const R = Kh(k);
    return await y(R, _), new Promise((A) => A(R));
  }
  function S(k) {
    if (h) {
      const _ = Kh(k), R = h.property("__zoom");
      (R.k !== k.zoom || R.x !== k.x || R.y !== k.y) && (p == null || p.transform(h, _, null, { sync: !0 }));
    }
  }
  function C() {
    const k = h ? XI(h.node()) : { x: 0, y: 0, k: 1 };
    return { x: k.x, y: k.y, zoom: k.k };
  }
  function E(k, _) {
    return h ? new Promise((R) => {
      p == null || p.scaleTo(Gh(h, _ == null ? void 0 : _.duration, () => R(!0)), k);
    }) : Promise.resolve(!1);
  }
  function P(k, _) {
    return h ? new Promise((R) => {
      p == null || p.scaleBy(Gh(h, _ == null ? void 0 : _.duration, () => R(!0)), k);
    }) : Promise.resolve(!1);
  }
  function M(k) {
    p == null || p.scaleExtent(k);
  }
  function x(k) {
    p == null || p.translateExtent(k);
  }
  function I(k) {
    const _ = !er(k) || k < 0 ? 0 : k;
    p == null || p.clickDistance(_);
  }
  return {
    update: b,
    destroy: T,
    setViewport: w,
    setViewportConstrained: v,
    getViewport: C,
    scaleTo: E,
    scaleBy: P,
    setScaleExtent: M,
    setTranslateExtent: x,
    syncViewport: S,
    setClickDistance: I
  };
}
var Vl;
(function(e) {
  e.Line = "line", e.Handle = "handle";
})(Vl || (Vl = {}));
function yZ({ width: e, prevWidth: t, height: n, prevHeight: o, affectsX: r, affectsY: i }) {
  const s = e - t, l = n - o, c = [s > 0 ? 1 : s < 0 ? -1 : 0, l > 0 ? 1 : l < 0 ? -1 : 0];
  return s && r && (c[0] = c[0] * -1), l && i && (c[1] = c[1] * -1), c;
}
function bZ(e) {
  const t = e.includes("right") || e.includes("left"), n = e.includes("bottom") || e.includes("top"), o = e.includes("left"), r = e.includes("top");
  return {
    isHorizontal: t,
    isVertical: n,
    affectsX: o,
    affectsY: r
  };
}
function ii(e, t) {
  return Math.max(0, t - e);
}
function si(e, t) {
  return Math.max(0, e - t);
}
function Fu(e, t, n) {
  return Math.max(0, t - e, e - n);
}
function w1(e, t) {
  return e ? !t : t;
}
function vZ(e, t, n, o, r, i, s, l) {
  let { affectsX: c, affectsY: u } = t;
  const { isHorizontal: d, isVertical: f } = t, p = d && f, { xSnapped: h, ySnapped: g } = n, { minWidth: m, maxWidth: y, minHeight: b, maxHeight: T } = o, { x: v, y: w, width: S, height: C, aspectRatio: E } = e;
  let P = Math.floor(d ? h - e.pointerX : 0), M = Math.floor(f ? g - e.pointerY : 0);
  const x = S + (c ? -P : P), I = C + (u ? -M : M), k = -i[0] * S, _ = -i[1] * C;
  let R = Fu(x, m, y), A = Fu(I, b, T);
  if (s) {
    let V = 0, D = 0;
    c && P < 0 ? V = ii(v + P + k, s[0][0]) : !c && P > 0 && (V = si(v + x + k, s[1][0])), u && M < 0 ? D = ii(w + M + _, s[0][1]) : !u && M > 0 && (D = si(w + I + _, s[1][1])), R = Math.max(R, V), A = Math.max(A, D);
  }
  if (l) {
    let V = 0, D = 0;
    c && P > 0 ? V = si(v + P, l[0][0]) : !c && P < 0 && (V = ii(v + x, l[1][0])), u && M > 0 ? D = si(w + M, l[0][1]) : !u && M < 0 && (D = ii(w + I, l[1][1])), R = Math.max(R, V), A = Math.max(A, D);
  }
  if (r) {
    if (d) {
      const V = Fu(x / E, b, T) * E;
      if (R = Math.max(R, V), s) {
        let D = 0;
        !c && !u || c && !u && p ? D = si(w + _ + x / E, s[1][1]) * E : D = ii(w + _ + (c ? P : -P) / E, s[0][1]) * E, R = Math.max(R, D);
      }
      if (l) {
        let D = 0;
        !c && !u || c && !u && p ? D = ii(w + x / E, l[1][1]) * E : D = si(w + (c ? P : -P) / E, l[0][1]) * E, R = Math.max(R, D);
      }
    }
    if (f) {
      const V = Fu(I * E, m, y) / E;
      if (A = Math.max(A, V), s) {
        let D = 0;
        !c && !u || u && !c && p ? D = si(v + I * E + k, s[1][0]) / E : D = ii(v + (u ? M : -M) * E + k, s[0][0]) / E, A = Math.max(A, D);
      }
      if (l) {
        let D = 0;
        !c && !u || u && !c && p ? D = ii(v + I * E, l[1][0]) / E : D = si(v + (u ? M : -M) * E, l[0][0]) / E, A = Math.max(A, D);
      }
    }
  }
  M = M + (M < 0 ? A : -A), P = P + (P < 0 ? R : -R), r && (p ? x > I * E ? M = (w1(c, u) ? -P : P) / E : P = (w1(c, u) ? -M : M) * E : d ? (M = P / E, u = c) : (P = M * E, c = u));
  const N = c ? v + P : v, L = u ? w + M : w;
  return {
    width: S + (c ? -P : P),
    height: C + (u ? -M : M),
    x: i[0] * P * (c ? -1 : 1) + N,
    y: i[1] * M * (u ? -1 : 1) + L
  };
}
const Ok = { width: 0, height: 0, x: 0, y: 0 }, xZ = {
  ...Ok,
  pointerX: 0,
  pointerY: 0,
  aspectRatio: 1
};
function wZ(e) {
  return [
    [0, 0],
    [e.measured.width, e.measured.height]
  ];
}
function SZ(e, t, n) {
  const o = t.position.x + e.position.x, r = t.position.y + e.position.y, i = e.measured.width ?? 0, s = e.measured.height ?? 0, l = n[0] * i, c = n[1] * s;
  return [
    [o - l, r - c],
    [o + i - l, r + s - c]
  ];
}
function TZ({ domNode: e, nodeId: t, getStoreItems: n, onChange: o, onEnd: r }) {
  const i = xo(e);
  function s({ controlPosition: c, boundaries: u, keepAspectRatio: d, resizeDirection: f, onResizeStart: p, onResize: h, onResizeEnd: g, shouldResize: m }) {
    let y = { ...Ok }, b = { ...xZ };
    const T = bZ(c);
    let v, w = null, S = [], C, E, P;
    const M = DI().on("start", (x) => {
      const { nodeLookup: I, transform: k, snapGrid: _, snapToGrid: R, nodeOrigin: A, paneDomNode: N } = n();
      if (v = I.get(t), !v)
        return;
      w = (N == null ? void 0 : N.getBoundingClientRect()) ?? null;
      const { xSnapped: L, ySnapped: V } = Bl(x.sourceEvent, {
        transform: k,
        snapGrid: _,
        snapToGrid: R,
        containerBounds: w
      });
      y = {
        width: v.measured.width ?? 0,
        height: v.measured.height ?? 0,
        x: v.position.x ?? 0,
        y: v.position.y ?? 0
      }, b = {
        ...y,
        pointerX: L,
        pointerY: V,
        aspectRatio: y.width / y.height
      }, C = void 0, v.parentId && (v.extent === "parent" || v.expandParent) && (C = I.get(v.parentId), E = C && v.extent === "parent" ? wZ(C) : void 0), S = [], P = void 0;
      for (const [D, B] of I)
        if (B.parentId === t && (S.push({
          id: D,
          position: { ...B.position },
          extent: B.extent
        }), B.extent === "parent" || B.expandParent)) {
          const F = SZ(B, v, B.origin ?? A);
          P ? P = [
            [Math.min(F[0][0], P[0][0]), Math.min(F[0][1], P[0][1])],
            [Math.max(F[1][0], P[1][0]), Math.max(F[1][1], P[1][1])]
          ] : P = F;
        }
      p == null || p(x, { ...y });
    }).on("drag", (x) => {
      const { transform: I, snapGrid: k, snapToGrid: _, nodeOrigin: R } = n(), A = Bl(x.sourceEvent, {
        transform: I,
        snapGrid: k,
        snapToGrid: _,
        containerBounds: w
      }), N = [];
      if (!v)
        return;
      const { x: L, y: V, width: D, height: B } = y, F = {}, U = v.origin ?? R, { width: q, height: G, x: K, y: te } = vZ(b, T, A, u, d, U, E, P), ne = q !== D, W = G !== B, ee = K !== L && ne, Y = te !== V && W;
      if (!ee && !Y && !ne && !W)
        return;
      if ((ee || Y || U[0] === 1 || U[1] === 1) && (F.x = ee ? K : y.x, F.y = Y ? te : y.y, y.x = F.x, y.y = F.y, S.length > 0)) {
        const ue = K - L, xe = te - V;
        for (const _e of S)
          _e.position = {
            x: _e.position.x - ue + U[0] * (q - D),
            y: _e.position.y - xe + U[1] * (G - B)
          }, N.push(_e);
      }
      if ((ne || W) && (F.width = ne && (!f || f === "horizontal") ? q : y.width, F.height = W && (!f || f === "vertical") ? G : y.height, y.width = F.width, y.height = F.height), C && v.expandParent) {
        const ue = U[0] * (F.width ?? 0);
        F.x && F.x < ue && (y.x = ue, b.x = b.x - (F.x - ue));
        const xe = U[1] * (F.height ?? 0);
        F.y && F.y < xe && (y.y = xe, b.y = b.y - (F.y - xe));
      }
      const re = yZ({
        width: y.width,
        prevWidth: D,
        height: y.height,
        prevHeight: B,
        affectsX: T.affectsX,
        affectsY: T.affectsY
      }), z = { ...y, direction: re };
      (m == null ? void 0 : m(x, z)) !== !1 && (h == null || h(x, z), o(F, N));
    }).on("end", (x) => {
      g == null || g(x, { ...y }), r == null || r({ ...y });
    });
    i.call(M);
  }
  function l() {
    i.on(".drag", null);
  }
  return {
    update: s,
    destroy: l
  };
}
var ju = { exports: {} }, Yh = {}, zu = { exports: {} }, Xh = {};
/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var S1;
function CZ() {
  if (S1) return Xh;
  S1 = 1;
  var e = Z;
  function t(f, p) {
    return f === p && (f !== 0 || 1 / f === 1 / p) || f !== f && p !== p;
  }
  var n = typeof Object.is == "function" ? Object.is : t, o = e.useState, r = e.useEffect, i = e.useLayoutEffect, s = e.useDebugValue;
  function l(f, p) {
    var h = p(), g = o({ inst: { value: h, getSnapshot: p } }), m = g[0].inst, y = g[1];
    return i(
      function() {
        m.value = h, m.getSnapshot = p, c(m) && y({ inst: m });
      },
      [f, h, p]
    ), r(
      function() {
        return c(m) && y({ inst: m }), f(function() {
          c(m) && y({ inst: m });
        });
      },
      [f]
    ), s(h), h;
  }
  function c(f) {
    var p = f.getSnapshot;
    f = f.value;
    try {
      var h = p();
      return !n(f, h);
    } catch {
      return !0;
    }
  }
  function u(f, p) {
    return p();
  }
  var d = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? u : l;
  return Xh.useSyncExternalStore = e.useSyncExternalStore !== void 0 ? e.useSyncExternalStore : d, Xh;
}
var Zh = {};
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var T1;
function EZ() {
  return T1 || (T1 = 1, process.env.NODE_ENV !== "production" && function() {
    function e(h, g) {
      return h === g && (h !== 0 || 1 / h === 1 / g) || h !== h && g !== g;
    }
    function t(h, g) {
      d || r.startTransition === void 0 || (d = !0, console.error(
        "You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."
      ));
      var m = g();
      if (!f) {
        var y = g();
        i(m, y) || (console.error(
          "The result of getSnapshot should be cached to avoid an infinite loop"
        ), f = !0);
      }
      y = s({
        inst: { value: m, getSnapshot: g }
      });
      var b = y[0].inst, T = y[1];
      return c(
        function() {
          b.value = m, b.getSnapshot = g, n(b) && T({ inst: b });
        },
        [h, m, g]
      ), l(
        function() {
          return n(b) && T({ inst: b }), h(function() {
            n(b) && T({ inst: b });
          });
        },
        [h]
      ), u(m), m;
    }
    function n(h) {
      var g = h.getSnapshot;
      h = h.value;
      try {
        var m = g();
        return !i(h, m);
      } catch {
        return !0;
      }
    }
    function o(h, g) {
      return g();
    }
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var r = Z, i = typeof Object.is == "function" ? Object.is : e, s = r.useState, l = r.useEffect, c = r.useLayoutEffect, u = r.useDebugValue, d = !1, f = !1, p = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? o : t;
    Zh.useSyncExternalStore = r.useSyncExternalStore !== void 0 ? r.useSyncExternalStore : p, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
  }()), Zh;
}
var C1;
function Pk() {
  return C1 || (C1 = 1, process.env.NODE_ENV === "production" ? zu.exports = CZ() : zu.exports = EZ()), zu.exports;
}
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var E1;
function OZ() {
  if (E1) return Yh;
  E1 = 1;
  var e = Z, t = Pk();
  function n(u, d) {
    return u === d && (u !== 0 || 1 / u === 1 / d) || u !== u && d !== d;
  }
  var o = typeof Object.is == "function" ? Object.is : n, r = t.useSyncExternalStore, i = e.useRef, s = e.useEffect, l = e.useMemo, c = e.useDebugValue;
  return Yh.useSyncExternalStoreWithSelector = function(u, d, f, p, h) {
    var g = i(null);
    if (g.current === null) {
      var m = { hasValue: !1, value: null };
      g.current = m;
    } else m = g.current;
    g = l(
      function() {
        function b(C) {
          if (!T) {
            if (T = !0, v = C, C = p(C), h !== void 0 && m.hasValue) {
              var E = m.value;
              if (h(E, C))
                return w = E;
            }
            return w = C;
          }
          if (E = w, o(v, C)) return E;
          var P = p(C);
          return h !== void 0 && h(E, P) ? (v = C, E) : (v = C, w = P);
        }
        var T = !1, v, w, S = f === void 0 ? null : f;
        return [
          function() {
            return b(d());
          },
          S === null ? void 0 : function() {
            return b(S());
          }
        ];
      },
      [d, f, p, h]
    );
    var y = r(u, g[0], g[1]);
    return s(
      function() {
        m.hasValue = !0, m.value = y;
      },
      [y]
    ), c(y), y;
  }, Yh;
}
var Qh = {};
/**
 * @license React
 * use-sync-external-store-shim/with-selector.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var O1;
function PZ() {
  return O1 || (O1 = 1, process.env.NODE_ENV !== "production" && function() {
    function e(u, d) {
      return u === d && (u !== 0 || 1 / u === 1 / d) || u !== u && d !== d;
    }
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var t = Z, n = Pk(), o = typeof Object.is == "function" ? Object.is : e, r = n.useSyncExternalStore, i = t.useRef, s = t.useEffect, l = t.useMemo, c = t.useDebugValue;
    Qh.useSyncExternalStoreWithSelector = function(u, d, f, p, h) {
      var g = i(null);
      if (g.current === null) {
        var m = { hasValue: !1, value: null };
        g.current = m;
      } else m = g.current;
      g = l(
        function() {
          function b(C) {
            if (!T) {
              if (T = !0, v = C, C = p(C), h !== void 0 && m.hasValue) {
                var E = m.value;
                if (h(E, C))
                  return w = E;
              }
              return w = C;
            }
            if (E = w, o(v, C))
              return E;
            var P = p(C);
            return h !== void 0 && h(E, P) ? (v = C, E) : (v = C, w = P);
          }
          var T = !1, v, w, S = f === void 0 ? null : f;
          return [
            function() {
              return b(d());
            },
            S === null ? void 0 : function() {
              return b(S());
            }
          ];
        },
        [d, f, p, h]
      );
      var y = r(u, g[0], g[1]);
      return s(
        function() {
          m.hasValue = !0, m.value = y;
        },
        [y]
      ), c(y), y;
    }, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
  }()), Qh;
}
var P1;
function RZ() {
  return P1 || (P1 = 1, process.env.NODE_ENV === "production" ? ju.exports = OZ() : ju.exports = PZ()), ju.exports;
}
var IZ = RZ();
const kZ = /* @__PURE__ */ lT(IZ), $Z = {}, R1 = (e) => {
  let t;
  const n = /* @__PURE__ */ new Set(), o = (d, f) => {
    const p = typeof d == "function" ? d(t) : d;
    if (!Object.is(p, t)) {
      const h = t;
      t = f ?? (typeof p != "object" || p === null) ? p : Object.assign({}, t, p), n.forEach((g) => g(t, h));
    }
  }, r = () => t, c = { setState: o, getState: r, getInitialState: () => u, subscribe: (d) => (n.add(d), () => n.delete(d)), destroy: () => {
    ($Z ? "production" : void 0) !== "production" && console.warn(
      "[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."
    ), n.clear();
  } }, u = t = e(o, r, c);
  return c;
}, NZ = (e) => e ? R1(e) : R1, { useDebugValue: MZ } = Z, { useSyncExternalStoreWithSelector: AZ } = kZ, _Z = (e) => e;
function Rk(e, t = _Z, n) {
  const o = AZ(
    e.subscribe,
    e.getState,
    e.getServerState || e.getInitialState,
    t,
    n
  );
  return MZ(o), o;
}
const I1 = (e, t) => {
  const n = NZ(e), o = (r, i = t) => Rk(n, r, i);
  return Object.assign(o, n), o;
}, DZ = (e, t) => e ? I1(e, t) : I1;
function en(e, t) {
  if (Object.is(e, t))
    return !0;
  if (typeof e != "object" || e === null || typeof t != "object" || t === null)
    return !1;
  if (e instanceof Map && t instanceof Map) {
    if (e.size !== t.size) return !1;
    for (const [o, r] of e)
      if (!Object.is(r, t.get(o)))
        return !1;
    return !0;
  }
  if (e instanceof Set && t instanceof Set) {
    if (e.size !== t.size) return !1;
    for (const o of e)
      if (!t.has(o))
        return !1;
    return !0;
  }
  const n = Object.keys(e);
  if (n.length !== Object.keys(t).length)
    return !1;
  for (const o of n)
    if (!Object.prototype.hasOwnProperty.call(t, o) || !Object.is(e[o], t[o]))
      return !1;
  return !0;
}
const Ip = lr(null), LZ = Ip.Provider, Ik = Qn.error001();
function mt(e, t) {
  const n = Kt(Ip);
  if (n === null)
    throw new Error(Ik);
  return Rk(n, e, t);
}
function Xt() {
  const e = Kt(Ip);
  if (e === null)
    throw new Error(Ik);
  return Ge(() => ({
    getState: e.getState,
    setState: e.setState,
    subscribe: e.subscribe
  }), [e]);
}
const k1 = { display: "none" }, BZ = {
  position: "absolute",
  width: 1,
  height: 1,
  margin: -1,
  border: 0,
  padding: 0,
  overflow: "hidden",
  clip: "rect(0px, 0px, 0px, 0px)",
  clipPath: "inset(100%)"
}, kk = "react-flow__node-desc", $k = "react-flow__edge-desc", VZ = "react-flow__aria-live", FZ = (e) => e.ariaLiveMessage;
function jZ({ rfId: e }) {
  const t = mt(FZ);
  return O("div", { id: `${VZ}-${e}`, "aria-live": "assertive", "aria-atomic": "true", style: BZ, children: t });
}
function zZ({ rfId: e, disableKeyboardA11y: t }) {
  return Se(Jn, { children: [Se("div", { id: `${kk}-${e}`, style: k1, children: ["Press enter or space to select a node.", !t && "You can then use the arrow keys to move the node around.", " Press delete to remove it and escape to cancel.", " "] }), O("div", { id: `${$k}-${e}`, style: k1, children: "Press enter or space to select an edge. You can then press delete to remove it or escape to cancel." }), !t && O(jZ, { rfId: e })] });
}
const HZ = (e) => e.userSelectionActive ? "none" : "all", ou = Oa(({ position: e = "top-left", children: t, className: n, style: o, ...r }, i) => {
  const s = mt(HZ), l = `${e}`.split("-");
  return O("div", { className: xn(["react-flow__panel", n, ...l]), style: { ...o, pointerEvents: s }, ref: i, ...r, children: t });
});
ou.displayName = "Panel";
function WZ({ proOptions: e, position: t = "bottom-right" }) {
  return e != null && e.hideAttribution ? null : O(ou, { position: t, className: "react-flow__attribution", "data-message": "Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev", children: O("a", { href: "https://reactflow.dev", target: "_blank", rel: "noopener noreferrer", "aria-label": "React Flow attribution", children: "React Flow" }) });
}
const UZ = (e) => {
  const t = [], n = [];
  for (const [, o] of e.nodeLookup)
    o.selected && t.push(o.internals.userNode);
  for (const [, o] of e.edgeLookup)
    o.selected && n.push(o);
  return { selectedNodes: t, selectedEdges: n };
}, Hu = (e) => e.id;
function qZ(e, t) {
  return en(e.selectedNodes.map(Hu), t.selectedNodes.map(Hu)) && en(e.selectedEdges.map(Hu), t.selectedEdges.map(Hu));
}
function KZ({ onSelectionChange: e }) {
  const t = Xt(), { selectedNodes: n, selectedEdges: o } = mt(UZ, qZ);
  return et(() => {
    const r = { nodes: n, edges: o };
    e == null || e(r), t.getState().onSelectionChangeHandlers.forEach((i) => i(r));
  }, [n, o, e]), null;
}
const GZ = (e) => !!e.onSelectionChangeHandlers;
function YZ({ onSelectionChange: e }) {
  const t = mt(GZ);
  return e || t ? O(KZ, { onSelectionChange: e }) : null;
}
const Nk = [0, 0], XZ = { x: 0, y: 0, zoom: 1 }, ZZ = [
  "nodes",
  "edges",
  "defaultNodes",
  "defaultEdges",
  "onConnect",
  "onConnectStart",
  "onConnectEnd",
  "onClickConnectStart",
  "onClickConnectEnd",
  "nodesDraggable",
  "nodesConnectable",
  "nodesFocusable",
  "edgesFocusable",
  "edgesReconnectable",
  "elevateNodesOnSelect",
  "elevateEdgesOnSelect",
  "minZoom",
  "maxZoom",
  "nodeExtent",
  "onNodesChange",
  "onEdgesChange",
  "elementsSelectable",
  "connectionMode",
  "snapGrid",
  "snapToGrid",
  "translateExtent",
  "connectOnClick",
  "defaultEdgeOptions",
  "fitView",
  "fitViewOptions",
  "onNodesDelete",
  "onEdgesDelete",
  "onDelete",
  "onNodeDrag",
  "onNodeDragStart",
  "onNodeDragStop",
  "onSelectionDrag",
  "onSelectionDragStart",
  "onSelectionDragStop",
  "onMoveStart",
  "onMove",
  "onMoveEnd",
  "noPanClassName",
  "nodeOrigin",
  "autoPanOnConnect",
  "autoPanOnNodeDrag",
  "onError",
  "connectionRadius",
  "isValidConnection",
  "selectNodesOnDrag",
  "nodeDragThreshold",
  "onBeforeDelete",
  "debug",
  "autoPanSpeed",
  "paneClickDistance"
], $1 = [...ZZ, "rfId"], QZ = (e) => ({
  setNodes: e.setNodes,
  setEdges: e.setEdges,
  setMinZoom: e.setMinZoom,
  setMaxZoom: e.setMaxZoom,
  setTranslateExtent: e.setTranslateExtent,
  setNodeExtent: e.setNodeExtent,
  reset: e.reset,
  setDefaultNodesAndEdges: e.setDefaultNodesAndEdges,
  setPaneClickDistance: e.setPaneClickDistance
}), N1 = {
  /*
   * these are values that are also passed directly to other components
   * than the StoreUpdater. We can reduce the number of setStore calls
   * by setting the same values here as prev fields.
   */
  translateExtent: bc,
  nodeOrigin: Nk,
  minZoom: 0.5,
  maxZoom: 2,
  elementsSelectable: !0,
  noPanClassName: "nopan",
  rfId: "1",
  paneClickDistance: 0
};
function JZ(e) {
  const { setNodes: t, setEdges: n, setMinZoom: o, setMaxZoom: r, setTranslateExtent: i, setNodeExtent: s, reset: l, setDefaultNodesAndEdges: c, setPaneClickDistance: u } = mt(QZ, en), d = Xt();
  et(() => (c(e.defaultNodes, e.defaultEdges), () => {
    f.current = N1, l();
  }), []);
  const f = qe(N1);
  return et(
    () => {
      for (const p of $1) {
        const h = e[p], g = f.current[p];
        h !== g && (typeof e[p] > "u" || (p === "nodes" ? t(h) : p === "edges" ? n(h) : p === "minZoom" ? o(h) : p === "maxZoom" ? r(h) : p === "translateExtent" ? i(h) : p === "nodeExtent" ? s(h) : p === "paneClickDistance" ? u(h) : p === "fitView" ? d.setState({ fitViewQueued: h }) : p === "fitViewOptions" ? d.setState({ fitViewOptions: h }) : d.setState({ [p]: h })));
      }
      f.current = e;
    },
    // Only re-run the effect if one of the fields we track changes
    $1.map((p) => e[p])
  ), null;
}
function M1() {
  return typeof window > "u" || !window.matchMedia ? null : window.matchMedia("(prefers-color-scheme: dark)");
}
function eQ(e) {
  var o;
  const [t, n] = Yt(e === "system" ? null : e);
  return et(() => {
    if (e !== "system") {
      n(e);
      return;
    }
    const r = M1(), i = () => n(r != null && r.matches ? "dark" : "light");
    return i(), r == null || r.addEventListener("change", i), () => {
      r == null || r.removeEventListener("change", i);
    };
  }, [e]), t !== null ? t : (o = M1()) != null && o.matches ? "dark" : "light";
}
const A1 = typeof document < "u" ? document : null;
function Sc(e = null, t = { target: A1, actInsideInputWithModifier: !0 }) {
  const [n, o] = Yt(!1), r = qe(!1), i = qe(/* @__PURE__ */ new Set([])), [s, l] = Ge(() => {
    if (e !== null) {
      const u = (Array.isArray(e) ? e : [e]).filter((f) => typeof f == "string").map((f) => f.replace("+", `
`).replace(`

`, `
+`).split(`
`)), d = u.reduce((f, p) => f.concat(...p), []);
      return [u, d];
    }
    return [[], []];
  }, [e]);
  return et(() => {
    const c = (t == null ? void 0 : t.target) ?? A1, u = (t == null ? void 0 : t.actInsideInputWithModifier) ?? !0;
    if (e !== null) {
      const d = (h) => {
        var y, b;
        if (r.current = h.ctrlKey || h.metaKey || h.shiftKey || h.altKey, (!r.current || r.current && !u) && uk(h))
          return !1;
        const m = D1(h.code, l);
        if (i.current.add(h[m]), _1(s, i.current, !1)) {
          const T = ((b = (y = h.composedPath) == null ? void 0 : y.call(h)) == null ? void 0 : b[0]) || h.target, v = (T == null ? void 0 : T.nodeName) === "BUTTON" || (T == null ? void 0 : T.nodeName) === "A";
          t.preventDefault !== !1 && (r.current || !v) && h.preventDefault(), o(!0);
        }
      }, f = (h) => {
        const g = D1(h.code, l);
        _1(s, i.current, !0) ? (o(!1), i.current.clear()) : i.current.delete(h[g]), h.key === "Meta" && i.current.clear(), r.current = !1;
      }, p = () => {
        i.current.clear(), o(!1);
      };
      return c == null || c.addEventListener("keydown", d), c == null || c.addEventListener("keyup", f), window.addEventListener("blur", p), window.addEventListener("contextmenu", p), () => {
        c == null || c.removeEventListener("keydown", d), c == null || c.removeEventListener("keyup", f), window.removeEventListener("blur", p), window.removeEventListener("contextmenu", p);
      };
    }
  }, [e, o]), n;
}
function _1(e, t, n) {
  return e.filter((o) => n || o.length === t.size).some((o) => o.every((r) => t.has(r)));
}
function D1(e, t) {
  return t.includes(e) ? "code" : "key";
}
const tQ = () => {
  const e = Xt();
  return Ge(() => ({
    zoomIn: (t) => {
      const { panZoom: n } = e.getState();
      return n ? n.scaleBy(1.2, { duration: t == null ? void 0 : t.duration }) : Promise.resolve(!1);
    },
    zoomOut: (t) => {
      const { panZoom: n } = e.getState();
      return n ? n.scaleBy(1 / 1.2, { duration: t == null ? void 0 : t.duration }) : Promise.resolve(!1);
    },
    zoomTo: (t, n) => {
      const { panZoom: o } = e.getState();
      return o ? o.scaleTo(t, { duration: n == null ? void 0 : n.duration }) : Promise.resolve(!1);
    },
    getZoom: () => e.getState().transform[2],
    setViewport: async (t, n) => {
      const { transform: [o, r, i], panZoom: s } = e.getState();
      return s ? (await s.setViewport({
        x: t.x ?? o,
        y: t.y ?? r,
        zoom: t.zoom ?? i
      }, { duration: n == null ? void 0 : n.duration }), Promise.resolve(!0)) : Promise.resolve(!1);
    },
    getViewport: () => {
      const [t, n, o] = e.getState().transform;
      return { x: t, y: n, zoom: o };
    },
    setCenter: async (t, n, o) => {
      const { width: r, height: i, maxZoom: s, panZoom: l } = e.getState(), c = typeof (o == null ? void 0 : o.zoom) < "u" ? o.zoom : s, u = r / 2 - t * c, d = i / 2 - n * c;
      return l ? (await l.setViewport({
        x: u,
        y: d,
        zoom: c
      }, { duration: o == null ? void 0 : o.duration }), Promise.resolve(!0)) : Promise.resolve(!1);
    },
    fitBounds: async (t, n) => {
      const { width: o, height: r, minZoom: i, maxZoom: s, panZoom: l } = e.getState(), c = Yb(t, o, r, i, s, (n == null ? void 0 : n.padding) ?? 0.1);
      return l ? (await l.setViewport(c, { duration: n == null ? void 0 : n.duration }), Promise.resolve(!0)) : Promise.resolve(!1);
    },
    screenToFlowPosition: (t, n = {}) => {
      const { transform: o, snapGrid: r, snapToGrid: i, domNode: s } = e.getState();
      if (!s)
        return t;
      const { x: l, y: c } = s.getBoundingClientRect(), u = {
        x: t.x - l,
        y: t.y - c
      }, d = n.snapGrid ?? r, f = n.snapToGrid ?? i;
      return nu(u, o, f, d);
    },
    flowToScreenPosition: (t) => {
      const { transform: n, domNode: o } = e.getState();
      if (!o)
        return t;
      const { x: r, y: i } = o.getBoundingClientRect(), s = of(t, n);
      return {
        x: s.x + r,
        y: s.y + i
      };
    }
  }), []);
};
function Mk(e, t) {
  const n = [], o = /* @__PURE__ */ new Map(), r = [];
  for (const i of e)
    if (i.type === "add") {
      r.push(i);
      continue;
    } else if (i.type === "remove" || i.type === "replace")
      o.set(i.id, [i]);
    else {
      const s = o.get(i.id);
      s ? s.push(i) : o.set(i.id, [i]);
    }
  for (const i of t) {
    const s = o.get(i.id);
    if (!s) {
      n.push(i);
      continue;
    }
    if (s[0].type === "remove")
      continue;
    if (s[0].type === "replace") {
      n.push({ ...s[0].item });
      continue;
    }
    const l = { ...i };
    for (const c of s)
      nQ(c, l);
    n.push(l);
  }
  return r.length && r.forEach((i) => {
    i.index !== void 0 ? n.splice(i.index, 0, { ...i.item }) : n.push({ ...i.item });
  }), n;
}
function nQ(e, t) {
  switch (e.type) {
    case "select": {
      t.selected = e.selected;
      break;
    }
    case "position": {
      typeof e.position < "u" && (t.position = e.position), typeof e.dragging < "u" && (t.dragging = e.dragging);
      break;
    }
    case "dimensions": {
      typeof e.dimensions < "u" && (t.measured ?? (t.measured = {}), t.measured.width = e.dimensions.width, t.measured.height = e.dimensions.height, e.setAttributes && ((e.setAttributes === !0 || e.setAttributes === "width") && (t.width = e.dimensions.width), (e.setAttributes === !0 || e.setAttributes === "height") && (t.height = e.dimensions.height))), typeof e.resizing == "boolean" && (t.resizing = e.resizing);
      break;
    }
  }
}
function oQ(e, t) {
  return Mk(e, t);
}
function rQ(e, t) {
  return Mk(e, t);
}
function Gi(e, t) {
  return {
    id: e,
    type: "select",
    selected: t
  };
}
function Ys(e, t = /* @__PURE__ */ new Set(), n = !1) {
  const o = [];
  for (const [r, i] of e) {
    const s = t.has(r);
    !(i.selected === void 0 && !s) && i.selected !== s && (n && (i.selected = s), o.push(Gi(i.id, s)));
  }
  return o;
}
function L1({ items: e = [], lookup: t }) {
  var r;
  const n = [], o = new Map(e.map((i) => [i.id, i]));
  for (const [i, s] of e.entries()) {
    const l = t.get(s.id), c = ((r = l == null ? void 0 : l.internals) == null ? void 0 : r.userNode) ?? l;
    c !== void 0 && c !== s && n.push({ id: s.id, item: s, type: "replace" }), c === void 0 && n.push({ item: s, type: "add", index: i });
  }
  for (const [i] of t)
    o.get(i) === void 0 && n.push({ id: i, type: "remove" });
  return n;
}
function B1(e) {
  return {
    id: e.id,
    type: "remove"
  };
}
const V1 = (e) => IX(e), iQ = (e) => tk(e);
function Ak(e) {
  return Oa(e);
}
const sQ = typeof window < "u" ? Ng : et;
function F1(e) {
  const [t, n] = Yt(BigInt(0)), [o] = Yt(() => aQ(() => n((r) => r + BigInt(1))));
  return sQ(() => {
    const r = o.get();
    r.length && (e(r), o.reset());
  }, [t]), o;
}
function aQ(e) {
  let t = [];
  return {
    get: () => t,
    reset: () => {
      t = [];
    },
    push: (n) => {
      t.push(n), e();
    }
  };
}
const _k = lr(null);
function lQ({ children: e }) {
  const t = Xt(), n = Be((l) => {
    const { nodes: c = [], setNodes: u, hasDefaultNodes: d, onNodesChange: f, nodeLookup: p, fitViewQueued: h } = t.getState();
    let g = c;
    for (const y of l)
      g = typeof y == "function" ? y(g) : y;
    const m = L1({
      items: g,
      lookup: p
    });
    d && u(g), m.length > 0 ? f == null || f(m) : h && window.requestAnimationFrame(() => {
      const { fitViewQueued: y, nodes: b, setNodes: T } = t.getState();
      y && T(b);
    });
  }, []), o = F1(n), r = Be((l) => {
    const { edges: c = [], setEdges: u, hasDefaultEdges: d, onEdgesChange: f, edgeLookup: p } = t.getState();
    let h = c;
    for (const g of l)
      h = typeof g == "function" ? g(h) : g;
    d ? u(h) : f && f(L1({
      items: h,
      lookup: p
    }));
  }, []), i = F1(r), s = Ge(() => ({ nodeQueue: o, edgeQueue: i }), []);
  return O(_k.Provider, { value: s, children: e });
}
function cQ() {
  const e = Kt(_k);
  if (!e)
    throw new Error("useBatchContext must be used within a BatchProvider");
  return e;
}
const uQ = (e) => !!e.panZoom;
function kp() {
  const e = tQ(), t = Xt(), n = cQ(), o = mt(uQ), r = Ge(() => {
    const i = (f) => t.getState().nodeLookup.get(f), s = (f) => {
      n.nodeQueue.push(f);
    }, l = (f) => {
      n.edgeQueue.push(f);
    }, c = (f) => {
      var b, T;
      const { nodeLookup: p, nodeOrigin: h } = t.getState(), g = V1(f) ? f : p.get(f.id), m = g.parentId ? lk(g.position, g.measured, g.parentId, p, h) : g.position, y = {
        ...g,
        position: m,
        width: ((b = g.measured) == null ? void 0 : b.width) ?? g.width,
        height: ((T = g.measured) == null ? void 0 : T.height) ?? g.height
      };
      return Ta(y);
    }, u = (f, p, h = { replace: !1 }) => {
      s((g) => g.map((m) => {
        if (m.id === f) {
          const y = typeof p == "function" ? p(m) : p;
          return h.replace && V1(y) ? y : { ...m, ...y };
        }
        return m;
      }));
    }, d = (f, p, h = { replace: !1 }) => {
      l((g) => g.map((m) => {
        if (m.id === f) {
          const y = typeof p == "function" ? p(m) : p;
          return h.replace && iQ(y) ? y : { ...m, ...y };
        }
        return m;
      }));
    };
    return {
      getNodes: () => t.getState().nodes.map((f) => ({ ...f })),
      getNode: (f) => {
        var p;
        return (p = i(f)) == null ? void 0 : p.internals.userNode;
      },
      getInternalNode: i,
      getEdges: () => {
        const { edges: f = [] } = t.getState();
        return f.map((p) => ({ ...p }));
      },
      getEdge: (f) => t.getState().edgeLookup.get(f),
      setNodes: s,
      setEdges: l,
      addNodes: (f) => {
        const p = Array.isArray(f) ? f : [f];
        n.nodeQueue.push((h) => [...h, ...p]);
      },
      addEdges: (f) => {
        const p = Array.isArray(f) ? f : [f];
        n.edgeQueue.push((h) => [...h, ...p]);
      },
      toObject: () => {
        const { nodes: f = [], edges: p = [], transform: h } = t.getState(), [g, m, y] = h;
        return {
          nodes: f.map((b) => ({ ...b })),
          edges: p.map((b) => ({ ...b })),
          viewport: {
            x: g,
            y: m,
            zoom: y
          }
        };
      },
      deleteElements: async ({ nodes: f = [], edges: p = [] }) => {
        const { nodes: h, edges: g, onNodesDelete: m, onEdgesDelete: y, triggerNodeChanges: b, triggerEdgeChanges: T, onDelete: v, onBeforeDelete: w } = t.getState(), { nodes: S, edges: C } = await _X({
          nodesToRemove: f,
          edgesToRemove: p,
          nodes: h,
          edges: g,
          onBeforeDelete: w
        }), E = C.length > 0, P = S.length > 0;
        if (E) {
          const M = C.map(B1);
          y == null || y(C), T(M);
        }
        if (P) {
          const M = S.map(B1);
          m == null || m(S), b(M);
        }
        return (P || E) && (v == null || v({ nodes: S, edges: C })), { deletedNodes: S, deletedEdges: C };
      },
      getIntersectingNodes: (f, p = !0, h) => {
        const g = u1(f), m = g ? f : c(f), y = h !== void 0;
        return m ? (h || t.getState().nodes).filter((b) => {
          const T = t.getState().nodeLookup.get(b.id);
          if (T && !g && (b.id === f.id || !T.internals.positionAbsolute))
            return !1;
          const v = Ta(y ? b : T), w = xc(v, m);
          return p && w > 0 || w >= m.width * m.height;
        }) : [];
      },
      isNodeIntersecting: (f, p, h = !0) => {
        const m = u1(f) ? f : c(f);
        if (!m)
          return !1;
        const y = xc(m, p);
        return h && y > 0 || y >= m.width * m.height;
      },
      updateNode: u,
      updateNodeData: (f, p, h = { replace: !1 }) => {
        u(f, (g) => {
          const m = typeof p == "function" ? p(g) : p;
          return h.replace ? { ...g, data: m } : { ...g, data: { ...g.data, ...m } };
        }, h);
      },
      updateEdge: d,
      updateEdgeData: (f, p, h = { replace: !1 }) => {
        d(f, (g) => {
          const m = typeof p == "function" ? p(g) : p;
          return h.replace ? { ...g, data: m } : { ...g, data: { ...g.data, ...m } };
        }, h);
      },
      getNodesBounds: (f) => {
        const { nodeLookup: p, nodeOrigin: h } = t.getState();
        return $X(f, { nodeLookup: p, nodeOrigin: h });
      },
      getHandleConnections: ({ type: f, id: p, nodeId: h }) => {
        var g;
        return Array.from(((g = t.getState().connectionLookup.get(`${h}-${f}${p ? `-${p}` : ""}`)) == null ? void 0 : g.values()) ?? []);
      },
      getNodeConnections: ({ type: f, handleId: p, nodeId: h }) => {
        var g;
        return Array.from(((g = t.getState().connectionLookup.get(`${h}${f ? p ? `-${f}-${p}` : `-${f}` : ""}`)) == null ? void 0 : g.values()) ?? []);
      },
      fitView: async (f) => {
        const p = t.getState().fitViewResolver ?? BX();
        return t.setState({ fitViewQueued: !0, fitViewOptions: f, fitViewResolver: p }), n.nodeQueue.push((h) => [...h]), p.promise;
      }
    };
  }, []);
  return Ge(() => ({
    ...r,
    ...e,
    viewportInitialized: o
  }), [o]);
}
const j1 = (e) => e.selected, dQ = typeof window < "u" ? window : void 0;
function fQ({ deleteKeyCode: e, multiSelectionKeyCode: t }) {
  const n = Xt(), { deleteElements: o } = kp(), r = Sc(e, { actInsideInputWithModifier: !1 }), i = Sc(t, { target: dQ });
  et(() => {
    if (r) {
      const { edges: s, nodes: l } = n.getState();
      o({ nodes: l.filter(j1), edges: s.filter(j1) }), n.setState({ nodesSelectionActive: !1 });
    }
  }, [r]), et(() => {
    n.setState({ multiSelectionActive: i });
  }, [i]);
}
function pQ(e) {
  const t = Xt();
  et(() => {
    const n = () => {
      var r, i;
      if (!e.current)
        return !1;
      const o = Xb(e.current);
      (o.height === 0 || o.width === 0) && ((i = (r = t.getState()).onError) == null || i.call(r, "004", Qn.error004())), t.setState({ width: o.width || 500, height: o.height || 500 });
    };
    if (e.current) {
      n(), window.addEventListener("resize", n);
      const o = new ResizeObserver(() => n());
      return o.observe(e.current), () => {
        window.removeEventListener("resize", n), o && e.current && o.unobserve(e.current);
      };
    }
  }, []);
}
const $p = {
  position: "absolute",
  width: "100%",
  height: "100%",
  top: 0,
  left: 0
}, hQ = (e) => ({
  userSelectionActive: e.userSelectionActive,
  lib: e.lib
});
function mQ({ onPaneContextMenu: e, zoomOnScroll: t = !0, zoomOnPinch: n = !0, panOnScroll: o = !1, panOnScrollSpeed: r = 0.5, panOnScrollMode: i = ss.Free, zoomOnDoubleClick: s = !0, panOnDrag: l = !0, defaultViewport: c, translateExtent: u, minZoom: d, maxZoom: f, zoomActivationKeyCode: p, preventScrolling: h = !0, children: g, noWheelClassName: m, noPanClassName: y, onViewportChange: b, isControlledViewport: T, paneClickDistance: v }) {
  const w = Xt(), S = qe(null), { userSelectionActive: C, lib: E } = mt(hQ, en), P = Sc(p), M = qe();
  pQ(S);
  const x = Be((I) => {
    b == null || b({ x: I[0], y: I[1], zoom: I[2] }), T || w.setState({ transform: I });
  }, [b, T]);
  return et(() => {
    if (S.current) {
      M.current = gZ({
        domNode: S.current,
        minZoom: d,
        maxZoom: f,
        translateExtent: u,
        viewport: c,
        paneClickDistance: v,
        onDraggingChange: (R) => w.setState({ paneDragging: R }),
        onPanZoomStart: (R, A) => {
          const { onViewportChangeStart: N, onMoveStart: L } = w.getState();
          L == null || L(R, A), N == null || N(A);
        },
        onPanZoom: (R, A) => {
          const { onViewportChange: N, onMove: L } = w.getState();
          L == null || L(R, A), N == null || N(A);
        },
        onPanZoomEnd: (R, A) => {
          const { onViewportChangeEnd: N, onMoveEnd: L } = w.getState();
          L == null || L(R, A), N == null || N(A);
        }
      });
      const { x: I, y: k, zoom: _ } = M.current.getViewport();
      return w.setState({
        panZoom: M.current,
        transform: [I, k, _],
        domNode: S.current.closest(".react-flow")
      }), () => {
        var R;
        (R = M.current) == null || R.destroy();
      };
    }
  }, []), et(() => {
    var I;
    (I = M.current) == null || I.update({
      onPaneContextMenu: e,
      zoomOnScroll: t,
      zoomOnPinch: n,
      panOnScroll: o,
      panOnScrollSpeed: r,
      panOnScrollMode: i,
      zoomOnDoubleClick: s,
      panOnDrag: l,
      zoomActivationKeyPressed: P,
      preventScrolling: h,
      noPanClassName: y,
      userSelectionActive: C,
      noWheelClassName: m,
      lib: E,
      onTransformChange: x
    });
  }, [
    e,
    t,
    n,
    o,
    r,
    i,
    s,
    l,
    P,
    h,
    y,
    C,
    m,
    E,
    x
  ]), O("div", { className: "react-flow__renderer", ref: S, style: $p, children: g });
}
const gQ = (e) => ({
  userSelectionActive: e.userSelectionActive,
  userSelectionRect: e.userSelectionRect
});
function yQ() {
  const { userSelectionActive: e, userSelectionRect: t } = mt(gQ, en);
  return e && t ? O("div", { className: "react-flow__selection react-flow__container", style: {
    width: t.width,
    height: t.height,
    transform: `translate(${t.x}px, ${t.y}px)`
  } }) : null;
}
const Jh = (e, t) => (n) => {
  n.target === t.current && (e == null || e(n));
}, bQ = (e) => ({
  userSelectionActive: e.userSelectionActive,
  elementsSelectable: e.elementsSelectable,
  connectionInProgress: e.connection.inProgress,
  dragging: e.paneDragging
});
function vQ({ isSelecting: e, selectionKeyPressed: t, selectionMode: n = vc.Full, panOnDrag: o, selectionOnDrag: r, onSelectionStart: i, onSelectionEnd: s, onPaneClick: l, onPaneContextMenu: c, onPaneScroll: u, onPaneMouseEnter: d, onPaneMouseMove: f, onPaneMouseLeave: p, children: h }) {
  const g = Xt(), { userSelectionActive: m, elementsSelectable: y, dragging: b, connectionInProgress: T } = mt(bQ, en), v = y && (e || m), w = qe(null), S = qe(), C = qe(/* @__PURE__ */ new Set()), E = qe(/* @__PURE__ */ new Set()), P = qe(!1), M = qe(!1), x = (L) => {
    if (P.current || T) {
      P.current = !1;
      return;
    }
    l == null || l(L), g.getState().resetSelectedElements(), g.setState({ nodesSelectionActive: !1 });
  }, I = (L) => {
    if (Array.isArray(o) && (o != null && o.includes(2))) {
      L.preventDefault();
      return;
    }
    c == null || c(L);
  }, k = u ? (L) => u(L) : void 0, _ = (L) => {
    var U, q;
    const { resetSelectedElements: V, domNode: D } = g.getState();
    if (S.current = D == null ? void 0 : D.getBoundingClientRect(), !y || !e || L.button !== 0 || L.target !== w.current || !S.current)
      return;
    (q = (U = L.target) == null ? void 0 : U.setPointerCapture) == null || q.call(U, L.pointerId), M.current = !0, P.current = !1;
    const { x: B, y: F } = zr(L.nativeEvent, S.current);
    V(), g.setState({
      userSelectionRect: {
        width: 0,
        height: 0,
        startX: B,
        startY: F,
        x: B,
        y: F
      }
    }), i == null || i(L);
  }, R = (L) => {
    const { userSelectionRect: V, transform: D, nodeLookup: B, edgeLookup: F, connectionLookup: U, triggerNodeChanges: q, triggerEdgeChanges: G, defaultEdgeOptions: K } = g.getState();
    if (!S.current || !V)
      return;
    P.current = !0;
    const { x: te, y: ne } = zr(L.nativeEvent, S.current), { startX: W, startY: ee } = V, Y = {
      startX: W,
      startY: ee,
      x: te < W ? te : W,
      y: ne < ee ? ne : ee,
      width: Math.abs(te - W),
      height: Math.abs(ne - ee)
    }, re = C.current, z = E.current;
    C.current = new Set(nk(B, Y, D, n === vc.Partial, !0).map((ue) => ue.id)), E.current = /* @__PURE__ */ new Set();
    const de = (K == null ? void 0 : K.selectable) ?? !0;
    for (const ue of C.current) {
      const xe = U.get(ue);
      if (xe)
        for (const { edgeId: _e } of xe.values()) {
          const we = F.get(_e);
          we && (we.selectable ?? de) && E.current.add(_e);
        }
    }
    if (!d1(re, C.current)) {
      const ue = Ys(B, C.current, !0);
      q(ue);
    }
    if (!d1(z, E.current)) {
      const ue = Ys(F, E.current);
      G(ue);
    }
    g.setState({
      userSelectionRect: Y,
      userSelectionActive: !0,
      nodesSelectionActive: !1
    });
  }, A = (L) => {
    var D, B;
    if (L.button !== 0 || !M.current)
      return;
    (B = (D = L.target) == null ? void 0 : D.releasePointerCapture) == null || B.call(D, L.pointerId);
    const { userSelectionRect: V } = g.getState();
    !m && V && L.target === w.current && (x == null || x(L)), g.setState({
      userSelectionActive: !1,
      userSelectionRect: null,
      nodesSelectionActive: C.current.size > 0
    }), s == null || s(L), (t || r) && (P.current = !1), M.current = !1;
  }, N = o === !0 || Array.isArray(o) && o.includes(0);
  return Se("div", { className: xn(["react-flow__pane", { draggable: N, dragging: b, selection: e }]), onClick: v ? void 0 : Jh(x, w), onContextMenu: Jh(I, w), onWheel: Jh(k, w), onPointerEnter: v ? void 0 : d, onPointerDown: v ? _ : f, onPointerMove: v ? R : f, onPointerUp: v ? A : void 0, onPointerLeave: p, ref: w, style: $p, children: [h, O(yQ, {})] });
}
function kg({ id: e, store: t, unselect: n = !1, nodeRef: o }) {
  const { addSelectedNodes: r, unselectNodesAndEdges: i, multiSelectionActive: s, nodeLookup: l, onError: c } = t.getState(), u = l.get(e);
  if (!u) {
    c == null || c("012", Qn.error012(e));
    return;
  }
  t.setState({ nodesSelectionActive: !1 }), u.selected ? (n || u.selected && s) && (i({ nodes: [u], edges: [] }), requestAnimationFrame(() => {
    var d;
    return (d = o == null ? void 0 : o.current) == null ? void 0 : d.blur();
  })) : r([e]);
}
function Dk({ nodeRef: e, disabled: t = !1, noDragClassName: n, handleSelector: o, nodeId: r, isSelectable: i, nodeClickDistance: s }) {
  const l = Xt(), [c, u] = Yt(!1), d = qe();
  return et(() => {
    d.current = nZ({
      getStoreItems: () => l.getState(),
      onNodeMouseDown: (f) => {
        kg({
          id: f,
          store: l,
          nodeRef: e
        });
      },
      onDragStart: () => {
        u(!0);
      },
      onDragStop: () => {
        u(!1);
      }
    });
  }, []), et(() => {
    var f, p;
    if (t)
      (f = d.current) == null || f.destroy();
    else if (e.current)
      return (p = d.current) == null || p.update({
        noDragClassName: n,
        handleSelector: o,
        domNode: e.current,
        isSelectable: i,
        nodeId: r,
        nodeClickDistance: s
      }), () => {
        var h;
        (h = d.current) == null || h.destroy();
      };
  }, [n, o, t, i, e, r]), c;
}
const xQ = (e) => (t) => t.selected && (t.draggable || e && typeof t.draggable > "u");
function Lk() {
  const e = Xt();
  return Be((n) => {
    const { nodeExtent: o, snapToGrid: r, snapGrid: i, nodesDraggable: s, onError: l, updateNodePositions: c, nodeLookup: u, nodeOrigin: d } = e.getState(), f = /* @__PURE__ */ new Map(), p = xQ(s), h = r ? i[0] : 5, g = r ? i[1] : 5, m = n.direction.x * h * n.factor, y = n.direction.y * g * n.factor;
    for (const [, b] of u) {
      if (!p(b))
        continue;
      let T = {
        x: b.internals.positionAbsolute.x + m,
        y: b.internals.positionAbsolute.y + y
      };
      r && (T = Pp(T, i));
      const { position: v, positionAbsolute: w } = ok({
        nodeId: b.id,
        nextPosition: T,
        nodeLookup: u,
        nodeExtent: o,
        nodeOrigin: d,
        onError: l
      });
      b.position = v, b.internals.positionAbsolute = w, f.set(b.id, b);
    }
    c(f);
  }, []);
}
const nv = lr(null), wQ = nv.Provider;
nv.Consumer;
const Bk = () => Kt(nv), SQ = (e) => ({
  connectOnClick: e.connectOnClick,
  noPanClassName: e.noPanClassName,
  rfId: e.rfId
}), TQ = (e, t, n) => (o) => {
  const { connectionClickStartHandle: r, connectionMode: i, connection: s } = o, { fromHandle: l, toHandle: c, isValid: u } = s, d = (c == null ? void 0 : c.nodeId) === e && (c == null ? void 0 : c.id) === t && (c == null ? void 0 : c.type) === n;
  return {
    connectingFrom: (l == null ? void 0 : l.nodeId) === e && (l == null ? void 0 : l.id) === t && (l == null ? void 0 : l.type) === n,
    connectingTo: d,
    clickConnecting: (r == null ? void 0 : r.nodeId) === e && (r == null ? void 0 : r.id) === t && (r == null ? void 0 : r.type) === n,
    isPossibleEndHandle: i === xa.Strict ? (l == null ? void 0 : l.type) !== n : e !== (l == null ? void 0 : l.nodeId) || t !== (l == null ? void 0 : l.id),
    connectionInProcess: !!l,
    clickConnectionInProcess: !!r,
    valid: d && u
  };
};
function CQ({ type: e = "source", position: t = ze.Top, isValidConnection: n, isConnectable: o = !0, isConnectableStart: r = !0, isConnectableEnd: i = !0, id: s, onConnect: l, children: c, className: u, onMouseDown: d, onTouchStart: f, ...p }, h) {
  var A, N;
  const g = s || null, m = e === "target", y = Xt(), b = Bk(), { connectOnClick: T, noPanClassName: v, rfId: w } = mt(SQ, en), { connectingFrom: S, connectingTo: C, clickConnecting: E, isPossibleEndHandle: P, connectionInProcess: M, clickConnectionInProcess: x, valid: I } = mt(TQ(b, g, e), en);
  b || (N = (A = y.getState()).onError) == null || N.call(A, "010", Qn.error010());
  const k = (L) => {
    const { defaultEdgeOptions: V, onConnect: D, hasDefaultEdges: B } = y.getState(), F = {
      ...V,
      ...L
    };
    if (B) {
      const { edges: U, setEdges: q } = y.getState();
      q(mk(F, U));
    }
    D == null || D(F), l == null || l(F);
  }, _ = (L) => {
    if (!b)
      return;
    const V = dk(L.nativeEvent);
    if (r && (V && L.button === 0 || !V)) {
      const D = y.getState();
      Ig.onPointerDown(L.nativeEvent, {
        autoPanOnConnect: D.autoPanOnConnect,
        connectionMode: D.connectionMode,
        connectionRadius: D.connectionRadius,
        domNode: D.domNode,
        nodeLookup: D.nodeLookup,
        lib: D.lib,
        isTarget: m,
        handleId: g,
        nodeId: b,
        flowId: D.rfId,
        panBy: D.panBy,
        cancelConnection: D.cancelConnection,
        onConnectStart: D.onConnectStart,
        onConnectEnd: D.onConnectEnd,
        updateConnection: D.updateConnection,
        onConnect: k,
        isValidConnection: n || D.isValidConnection,
        getTransform: () => y.getState().transform,
        getFromHandle: () => y.getState().connection.fromHandle,
        autoPanSpeed: D.autoPanSpeed
      });
    }
    V ? d == null || d(L) : f == null || f(L);
  }, R = (L) => {
    const { onClickConnectStart: V, onClickConnectEnd: D, connectionClickStartHandle: B, connectionMode: F, isValidConnection: U, lib: q, rfId: G, nodeLookup: K, connection: te } = y.getState();
    if (!b || !B && !r)
      return;
    if (!B) {
      V == null || V(L.nativeEvent, { nodeId: b, handleId: g, handleType: e }), y.setState({ connectionClickStartHandle: { nodeId: b, type: e, id: g } });
      return;
    }
    const ne = ck(L.target), W = n || U, { connection: ee, isValid: Y } = Ig.isValid(L.nativeEvent, {
      handle: {
        nodeId: b,
        id: g,
        type: e
      },
      connectionMode: F,
      fromNodeId: B.nodeId,
      fromHandleId: B.id || null,
      fromType: B.type,
      isValidConnection: W,
      flowId: G,
      doc: ne,
      lib: q,
      nodeLookup: K
    });
    Y && ee && k(ee);
    const re = structuredClone(te);
    delete re.inProgress, re.toPosition = re.toHandle ? re.toHandle.position : null, D == null || D(L, re), y.setState({ connectionClickStartHandle: null });
  };
  return O("div", { "data-handleid": g, "data-nodeid": b, "data-handlepos": t, "data-id": `${w}-${b}-${g}-${e}`, className: xn([
    "react-flow__handle",
    `react-flow__handle-${t}`,
    "nodrag",
    v,
    u,
    {
      source: !m,
      target: m,
      connectable: o,
      connectablestart: r,
      connectableend: i,
      clickconnecting: E,
      connectingfrom: S,
      connectingto: C,
      valid: I,
      /*
       * shows where you can start a connection from
       * and where you can end it while connecting
       */
      connectionindicator: o && (!M || P) && (M || x ? i : r)
    }
  ]), onMouseDown: _, onTouchStart: _, onClick: T ? R : void 0, ref: h, ...p, children: c });
}
const Tc = Pe(Ak(CQ));
function EQ({ data: e, isConnectable: t, sourcePosition: n = ze.Bottom }) {
  return Se(Jn, { children: [e == null ? void 0 : e.label, O(Tc, { type: "source", position: n, isConnectable: t })] });
}
function OQ({ data: e, isConnectable: t, targetPosition: n = ze.Top, sourcePosition: o = ze.Bottom }) {
  return Se(Jn, { children: [O(Tc, { type: "target", position: n, isConnectable: t }), e == null ? void 0 : e.label, O(Tc, { type: "source", position: o, isConnectable: t })] });
}
function PQ() {
  return null;
}
function RQ({ data: e, isConnectable: t, targetPosition: n = ze.Top }) {
  return Se(Jn, { children: [O(Tc, { type: "target", position: n, isConnectable: t }), e == null ? void 0 : e.label] });
}
const sf = {
  ArrowUp: { x: 0, y: -1 },
  ArrowDown: { x: 0, y: 1 },
  ArrowLeft: { x: -1, y: 0 },
  ArrowRight: { x: 1, y: 0 }
}, z1 = {
  input: EQ,
  default: OQ,
  output: RQ,
  group: PQ
};
function IQ(e) {
  var t, n, o, r;
  return e.internals.handleBounds === void 0 ? {
    width: e.width ?? e.initialWidth ?? ((t = e.style) == null ? void 0 : t.width),
    height: e.height ?? e.initialHeight ?? ((n = e.style) == null ? void 0 : n.height)
  } : {
    width: e.width ?? ((o = e.style) == null ? void 0 : o.width),
    height: e.height ?? ((r = e.style) == null ? void 0 : r.height)
  };
}
const kQ = (e) => {
  const { width: t, height: n, x: o, y: r } = tu(e.nodeLookup, {
    filter: (i) => !!i.selected
  });
  return {
    width: er(t) ? t : null,
    height: er(n) ? n : null,
    userSelectionActive: e.userSelectionActive,
    transformString: `translate(${e.transform[0]}px,${e.transform[1]}px) scale(${e.transform[2]}) translate(${o}px,${r}px)`
  };
};
function $Q({ onSelectionContextMenu: e, noPanClassName: t, disableKeyboardA11y: n }) {
  const o = Xt(), { width: r, height: i, transformString: s, userSelectionActive: l } = mt(kQ, en), c = Lk(), u = qe(null);
  if (et(() => {
    var p;
    n || (p = u.current) == null || p.focus({
      preventScroll: !0
    });
  }, [n]), Dk({
    nodeRef: u
  }), l || !r || !i)
    return null;
  const d = e ? (p) => {
    const h = o.getState().nodes.filter((g) => g.selected);
    e(p, h);
  } : void 0, f = (p) => {
    Object.prototype.hasOwnProperty.call(sf, p.key) && (p.preventDefault(), c({
      direction: sf[p.key],
      factor: p.shiftKey ? 4 : 1
    }));
  };
  return O("div", { className: xn(["react-flow__nodesselection", "react-flow__container", t]), style: {
    transform: s
  }, children: O("div", { ref: u, className: "react-flow__nodesselection-rect", onContextMenu: d, tabIndex: n ? void 0 : -1, onKeyDown: n ? void 0 : f, style: {
    width: r,
    height: i
  } }) });
}
const H1 = typeof window < "u" ? window : void 0, NQ = (e) => ({ nodesSelectionActive: e.nodesSelectionActive, userSelectionActive: e.userSelectionActive });
function Vk({ children: e, onPaneClick: t, onPaneMouseEnter: n, onPaneMouseMove: o, onPaneMouseLeave: r, onPaneContextMenu: i, onPaneScroll: s, paneClickDistance: l, deleteKeyCode: c, selectionKeyCode: u, selectionOnDrag: d, selectionMode: f, onSelectionStart: p, onSelectionEnd: h, multiSelectionKeyCode: g, panActivationKeyCode: m, zoomActivationKeyCode: y, elementsSelectable: b, zoomOnScroll: T, zoomOnPinch: v, panOnScroll: w, panOnScrollSpeed: S, panOnScrollMode: C, zoomOnDoubleClick: E, panOnDrag: P, defaultViewport: M, translateExtent: x, minZoom: I, maxZoom: k, preventScrolling: _, onSelectionContextMenu: R, noWheelClassName: A, noPanClassName: N, disableKeyboardA11y: L, onViewportChange: V, isControlledViewport: D }) {
  const { nodesSelectionActive: B, userSelectionActive: F } = mt(NQ), U = Sc(u, { target: H1 }), q = Sc(m, { target: H1 }), G = q || P, K = q || w, te = d && G !== !0, ne = U || F || te;
  return fQ({ deleteKeyCode: c, multiSelectionKeyCode: g }), O(mQ, { onPaneContextMenu: i, elementsSelectable: b, zoomOnScroll: T, zoomOnPinch: v, panOnScroll: K, panOnScrollSpeed: S, panOnScrollMode: C, zoomOnDoubleClick: E, panOnDrag: !U && G, defaultViewport: M, translateExtent: x, minZoom: I, maxZoom: k, zoomActivationKeyCode: y, preventScrolling: _, noWheelClassName: A, noPanClassName: N, onViewportChange: V, isControlledViewport: D, paneClickDistance: l, children: Se(vQ, { onSelectionStart: p, onSelectionEnd: h, onPaneClick: t, onPaneMouseEnter: n, onPaneMouseMove: o, onPaneMouseLeave: r, onPaneContextMenu: i, onPaneScroll: s, panOnDrag: G, isSelecting: !!ne, selectionMode: f, selectionKeyPressed: U, selectionOnDrag: te, children: [e, B && O($Q, { onSelectionContextMenu: R, noPanClassName: N, disableKeyboardA11y: L })] }) });
}
Vk.displayName = "FlowRenderer";
const MQ = Pe(Vk), AQ = (e) => (t) => e ? nk(t.nodeLookup, { x: 0, y: 0, width: t.width, height: t.height }, t.transform, !0).map((n) => n.id) : Array.from(t.nodeLookup.keys());
function _Q(e) {
  return mt(Be(AQ(e), [e]), en);
}
const DQ = (e) => e.updateNodeInternals;
function LQ() {
  const e = mt(DQ), [t] = Yt(() => typeof ResizeObserver > "u" ? null : new ResizeObserver((n) => {
    const o = /* @__PURE__ */ new Map();
    n.forEach((r) => {
      const i = r.target.getAttribute("data-id");
      o.set(i, {
        id: i,
        nodeElement: r.target,
        force: !0
      });
    }), e(o);
  }));
  return et(() => () => {
    t == null || t.disconnect();
  }, [t]), t;
}
function BQ({ node: e, nodeType: t, hasDimensions: n, resizeObserver: o }) {
  const r = Xt(), i = qe(null), s = qe(null), l = qe(e.sourcePosition), c = qe(e.targetPosition), u = qe(t), d = n && !!e.internals.handleBounds;
  return et(() => {
    i.current && !e.hidden && (!d || s.current !== i.current) && (s.current && (o == null || o.unobserve(s.current)), o == null || o.observe(i.current), s.current = i.current);
  }, [d, e.hidden]), et(() => () => {
    s.current && (o == null || o.unobserve(s.current), s.current = null);
  }, []), et(() => {
    if (i.current) {
      const f = u.current !== t, p = l.current !== e.sourcePosition, h = c.current !== e.targetPosition;
      (f || p || h) && (u.current = t, l.current = e.sourcePosition, c.current = e.targetPosition, r.getState().updateNodeInternals(/* @__PURE__ */ new Map([[e.id, { id: e.id, nodeElement: i.current, force: !0 }]])));
    }
  }, [e.id, t, e.sourcePosition, e.targetPosition]), i;
}
function VQ({ id: e, onClick: t, onMouseEnter: n, onMouseMove: o, onMouseLeave: r, onContextMenu: i, onDoubleClick: s, nodesDraggable: l, elementsSelectable: c, nodesConnectable: u, nodesFocusable: d, resizeObserver: f, noDragClassName: p, noPanClassName: h, disableKeyboardA11y: g, rfId: m, nodeTypes: y, nodeClickDistance: b, onError: T }) {
  const { node: v, internals: w, isParent: S } = mt((ne) => {
    const W = ne.nodeLookup.get(e), ee = ne.parentLookup.has(e);
    return {
      node: W,
      internals: W.internals,
      isParent: ee
    };
  }, en);
  let C = v.type || "default", E = (y == null ? void 0 : y[C]) || z1[C];
  E === void 0 && (T == null || T("003", Qn.error003(C)), C = "default", E = z1.default);
  const P = !!(v.draggable || l && typeof v.draggable > "u"), M = !!(v.selectable || c && typeof v.selectable > "u"), x = !!(v.connectable || u && typeof v.connectable > "u"), I = !!(v.focusable || d && typeof v.focusable > "u"), k = Xt(), _ = ak(v), R = BQ({ node: v, nodeType: C, hasDimensions: _, resizeObserver: f }), A = Dk({
    nodeRef: R,
    disabled: v.hidden || !P,
    noDragClassName: p,
    handleSelector: v.dragHandle,
    nodeId: e,
    isSelectable: M,
    nodeClickDistance: b
  }), N = Lk();
  if (v.hidden)
    return null;
  const L = Jr(v), V = IQ(v), D = M || P || t || n || o || r, B = n ? (ne) => n(ne, { ...w.userNode }) : void 0, F = o ? (ne) => o(ne, { ...w.userNode }) : void 0, U = r ? (ne) => r(ne, { ...w.userNode }) : void 0, q = i ? (ne) => i(ne, { ...w.userNode }) : void 0, G = s ? (ne) => s(ne, { ...w.userNode }) : void 0, K = (ne) => {
    const { selectNodesOnDrag: W, nodeDragThreshold: ee } = k.getState();
    M && (!W || !P || ee > 0) && kg({
      id: e,
      store: k,
      nodeRef: R
    }), t && t(ne, { ...w.userNode });
  }, te = (ne) => {
    if (!(uk(ne.nativeEvent) || g))
      if (QI.includes(ne.key) && M) {
        const W = ne.key === "Escape";
        kg({
          id: e,
          store: k,
          unselect: W,
          nodeRef: R
        });
      } else P && v.selected && Object.prototype.hasOwnProperty.call(sf, ne.key) && (ne.preventDefault(), k.setState({
        ariaLiveMessage: `Moved selected node ${ne.key.replace("Arrow", "").toLowerCase()}. New position, x: ${~~w.positionAbsolute.x}, y: ${~~w.positionAbsolute.y}`
      }), N({
        direction: sf[ne.key],
        factor: ne.shiftKey ? 4 : 1
      }));
  };
  return O("div", { className: xn([
    "react-flow__node",
    `react-flow__node-${C}`,
    {
      // this is overwritable by passing `nopan` as a class name
      [h]: P
    },
    v.className,
    {
      selected: v.selected,
      selectable: M,
      parent: S,
      draggable: P,
      dragging: A
    }
  ]), ref: R, style: {
    zIndex: w.z,
    transform: `translate(${w.positionAbsolute.x}px,${w.positionAbsolute.y}px)`,
    pointerEvents: D ? "all" : "none",
    visibility: _ ? "visible" : "hidden",
    ...v.style,
    ...V
  }, "data-id": e, "data-testid": `rf__node-${e}`, onMouseEnter: B, onMouseMove: F, onMouseLeave: U, onContextMenu: q, onClick: K, onDoubleClick: G, onKeyDown: I ? te : void 0, tabIndex: I ? 0 : void 0, role: I ? "button" : void 0, "aria-describedby": g ? void 0 : `${kk}-${m}`, "aria-label": v.ariaLabel, children: O(wQ, { value: e, children: O(E, { id: e, data: v.data, type: C, positionAbsoluteX: w.positionAbsolute.x, positionAbsoluteY: w.positionAbsolute.y, selected: v.selected ?? !1, selectable: M, draggable: P, deletable: v.deletable ?? !0, isConnectable: x, sourcePosition: v.sourcePosition, targetPosition: v.targetPosition, dragging: A, dragHandle: v.dragHandle, zIndex: w.z, parentId: v.parentId, ...L }) }) });
}
const FQ = (e) => ({
  nodesDraggable: e.nodesDraggable,
  nodesConnectable: e.nodesConnectable,
  nodesFocusable: e.nodesFocusable,
  elementsSelectable: e.elementsSelectable,
  onError: e.onError
});
function Fk(e) {
  const { nodesDraggable: t, nodesConnectable: n, nodesFocusable: o, elementsSelectable: r, onError: i } = mt(FQ, en), s = _Q(e.onlyRenderVisibleElements), l = LQ();
  return O("div", { className: "react-flow__nodes", style: $p, children: s.map((c) => (
    /*
     * The split of responsibilities between NodeRenderer and
     * NodeComponentWrapper may appear weird. However, it’s designed to
     * minimize the cost of updates when individual nodes change.
     *
     * For example, when you’re dragging a single node, that node gets
     * updated multiple times per second. If `NodeRenderer` were to update
     * every time, it would have to re-run the `nodes.map()` loop every
     * time. This gets pricey with hundreds of nodes, especially if every
     * loop cycle does more than just rendering a JSX element!
     *
     * As a result of this choice, we took the following implementation
     * decisions:
     * - NodeRenderer subscribes *only* to node IDs – and therefore
     *   rerender *only* when visible nodes are added or removed.
     * - NodeRenderer performs all operations the result of which can be
     *   shared between nodes (such as creating the `ResizeObserver`
     *   instance, or subscribing to `selector`). This means extra prop
     *   drilling into `NodeComponentWrapper`, but it means we need to run
     *   these operations only once – instead of once per node.
     * - Any operations that you’d normally write inside `nodes.map` are
     *   moved into `NodeComponentWrapper`. This ensures they are
     *   memorized – so if `NodeRenderer` *has* to rerender, it only
     *   needs to regenerate the list of nodes, nothing else.
     */
    O(VQ, { id: c, nodeTypes: e.nodeTypes, nodeExtent: e.nodeExtent, onClick: e.onNodeClick, onMouseEnter: e.onNodeMouseEnter, onMouseMove: e.onNodeMouseMove, onMouseLeave: e.onNodeMouseLeave, onContextMenu: e.onNodeContextMenu, onDoubleClick: e.onNodeDoubleClick, noDragClassName: e.noDragClassName, noPanClassName: e.noPanClassName, rfId: e.rfId, disableKeyboardA11y: e.disableKeyboardA11y, resizeObserver: l, nodesDraggable: t, nodesConnectable: n, nodesFocusable: o, elementsSelectable: r, nodeClickDistance: e.nodeClickDistance, onError: i }, c)
  )) });
}
Fk.displayName = "NodeRenderer";
const jQ = Pe(Fk);
function zQ(e) {
  return mt(Be((n) => {
    if (!e)
      return n.edges.map((r) => r.id);
    const o = [];
    if (n.width && n.height)
      for (const r of n.edges) {
        const i = n.nodeLookup.get(r.source), s = n.nodeLookup.get(r.target);
        i && s && jX({
          sourceNode: i,
          targetNode: s,
          width: n.width,
          height: n.height,
          transform: n.transform
        }) && o.push(r.id);
      }
    return o;
  }, [e]), en);
}
const HQ = ({ color: e = "none", strokeWidth: t = 1 }) => O("polyline", { style: {
  stroke: e,
  strokeWidth: t
}, strokeLinecap: "round", strokeLinejoin: "round", fill: "none", points: "-5,-4 0,0 -5,4" }), WQ = ({ color: e = "none", strokeWidth: t = 1 }) => O("polyline", { style: {
  stroke: e,
  fill: e,
  strokeWidth: t
}, strokeLinecap: "round", strokeLinejoin: "round", points: "-5,-4 0,0 -5,4 -5,-4" }), W1 = {
  [wa.Arrow]: HQ,
  [wa.ArrowClosed]: WQ
};
function UQ(e) {
  const t = Xt();
  return Ge(() => {
    var r, i;
    return Object.prototype.hasOwnProperty.call(W1, e) ? W1[e] : ((i = (r = t.getState()).onError) == null || i.call(r, "009", Qn.error009(e)), null);
  }, [e]);
}
const qQ = ({ id: e, type: t, color: n, width: o = 12.5, height: r = 12.5, markerUnits: i = "strokeWidth", strokeWidth: s, orient: l = "auto-start-reverse" }) => {
  const c = UQ(t);
  return c ? O("marker", { className: "react-flow__arrowhead", id: e, markerWidth: `${o}`, markerHeight: `${r}`, viewBox: "-10 -10 20 20", markerUnits: i, orient: l, refX: "0", refY: "0", children: O(c, { color: n, strokeWidth: s }) }) : null;
}, jk = ({ defaultColor: e, rfId: t }) => {
  const n = mt((i) => i.edges), o = mt((i) => i.defaultEdgeOptions), r = Ge(() => GX(n, {
    id: t,
    defaultColor: e,
    defaultMarkerStart: o == null ? void 0 : o.markerStart,
    defaultMarkerEnd: o == null ? void 0 : o.markerEnd
  }), [n, o, t, e]);
  return r.length ? O("svg", { className: "react-flow__marker", "aria-hidden": "true", children: O("defs", { children: r.map((i) => O(qQ, { id: i.id, type: i.type, color: i.color, width: i.width, height: i.height, markerUnits: i.markerUnits, strokeWidth: i.strokeWidth, orient: i.orient }, i.id)) }) }) : null;
};
jk.displayName = "MarkerDefinitions";
var KQ = Pe(jk);
function zk({ x: e, y: t, label: n, labelStyle: o, labelShowBg: r = !0, labelBgStyle: i, labelBgPadding: s = [2, 4], labelBgBorderRadius: l = 2, children: c, className: u, ...d }) {
  const [f, p] = Yt({ x: 1, y: 0, width: 0, height: 0 }), h = xn(["react-flow__edge-textwrapper", u]), g = qe(null);
  return et(() => {
    if (g.current) {
      const m = g.current.getBBox();
      p({
        x: m.x,
        y: m.y,
        width: m.width,
        height: m.height
      });
    }
  }, [n]), n ? Se("g", { transform: `translate(${e - f.width / 2} ${t - f.height / 2})`, className: h, visibility: f.width ? "visible" : "hidden", ...d, children: [r && O("rect", { width: f.width + 2 * s[0], x: -s[0], y: -s[1], height: f.height + 2 * s[1], className: "react-flow__edge-textbg", style: i, rx: l, ry: l }), O("text", { className: "react-flow__edge-text", y: f.height / 2, dy: "0.3em", ref: g, style: o, children: n }), c] }) : null;
}
zk.displayName = "EdgeText";
const GQ = Pe(zk);
function ru({ path: e, labelX: t, labelY: n, label: o, labelStyle: r, labelShowBg: i, labelBgStyle: s, labelBgPadding: l, labelBgBorderRadius: c, interactionWidth: u = 20, ...d }) {
  return Se(Jn, { children: [O("path", { ...d, d: e, fill: "none", className: xn(["react-flow__edge-path", d.className]) }), u && O("path", { d: e, fill: "none", strokeOpacity: 0, strokeWidth: u, className: "react-flow__edge-interaction" }), o && er(t) && er(n) ? O(GQ, { x: t, y: n, label: o, labelStyle: r, labelShowBg: i, labelBgStyle: s, labelBgPadding: l, labelBgBorderRadius: c }) : null] });
}
function U1({ pos: e, x1: t, y1: n, x2: o, y2: r }) {
  return e === ze.Left || e === ze.Right ? [0.5 * (t + o), n] : [t, 0.5 * (n + r)];
}
function Hk({ sourceX: e, sourceY: t, sourcePosition: n = ze.Bottom, targetX: o, targetY: r, targetPosition: i = ze.Top }) {
  const [s, l] = U1({
    pos: n,
    x1: e,
    y1: t,
    x2: o,
    y2: r
  }), [c, u] = U1({
    pos: i,
    x1: o,
    y1: r,
    x2: e,
    y2: t
  }), [d, f, p, h] = fk({
    sourceX: e,
    sourceY: t,
    targetX: o,
    targetY: r,
    sourceControlX: s,
    sourceControlY: l,
    targetControlX: c,
    targetControlY: u
  });
  return [
    `M${e},${t} C${s},${l} ${c},${u} ${o},${r}`,
    d,
    f,
    p,
    h
  ];
}
function Wk(e) {
  return Pe(({ id: t, sourceX: n, sourceY: o, targetX: r, targetY: i, sourcePosition: s, targetPosition: l, label: c, labelStyle: u, labelShowBg: d, labelBgStyle: f, labelBgPadding: p, labelBgBorderRadius: h, style: g, markerEnd: m, markerStart: y, interactionWidth: b }) => {
    const [T, v, w] = Hk({
      sourceX: n,
      sourceY: o,
      sourcePosition: s,
      targetX: r,
      targetY: i,
      targetPosition: l
    }), S = e.isInternal ? void 0 : t;
    return O(ru, { id: S, path: T, labelX: v, labelY: w, label: c, labelStyle: u, labelShowBg: d, labelBgStyle: f, labelBgPadding: p, labelBgBorderRadius: h, style: g, markerEnd: m, markerStart: y, interactionWidth: b });
  });
}
const YQ = Wk({ isInternal: !1 }), Uk = Wk({ isInternal: !0 });
YQ.displayName = "SimpleBezierEdge";
Uk.displayName = "SimpleBezierEdgeInternal";
function qk(e) {
  return Pe(({ id: t, sourceX: n, sourceY: o, targetX: r, targetY: i, label: s, labelStyle: l, labelShowBg: c, labelBgStyle: u, labelBgPadding: d, labelBgBorderRadius: f, style: p, sourcePosition: h = ze.Bottom, targetPosition: g = ze.Top, markerEnd: m, markerStart: y, pathOptions: b, interactionWidth: T }) => {
    const [v, w, S] = Og({
      sourceX: n,
      sourceY: o,
      sourcePosition: h,
      targetX: r,
      targetY: i,
      targetPosition: g,
      borderRadius: b == null ? void 0 : b.borderRadius,
      offset: b == null ? void 0 : b.offset
    }), C = e.isInternal ? void 0 : t;
    return O(ru, { id: C, path: v, labelX: w, labelY: S, label: s, labelStyle: l, labelShowBg: c, labelBgStyle: u, labelBgPadding: d, labelBgBorderRadius: f, style: p, markerEnd: m, markerStart: y, interactionWidth: T });
  });
}
const Kk = qk({ isInternal: !1 }), Gk = qk({ isInternal: !0 });
Kk.displayName = "SmoothStepEdge";
Gk.displayName = "SmoothStepEdgeInternal";
function Yk(e) {
  return Pe(({ id: t, ...n }) => {
    var r;
    const o = e.isInternal ? void 0 : t;
    return O(Kk, { ...n, id: o, pathOptions: Ge(() => {
      var i;
      return { borderRadius: 0, offset: (i = n.pathOptions) == null ? void 0 : i.offset };
    }, [(r = n.pathOptions) == null ? void 0 : r.offset]) });
  });
}
const XQ = Yk({ isInternal: !1 }), Xk = Yk({ isInternal: !0 });
XQ.displayName = "StepEdge";
Xk.displayName = "StepEdgeInternal";
function Zk(e) {
  return Pe(({ id: t, sourceX: n, sourceY: o, targetX: r, targetY: i, label: s, labelStyle: l, labelShowBg: c, labelBgStyle: u, labelBgPadding: d, labelBgBorderRadius: f, style: p, markerEnd: h, markerStart: g, interactionWidth: m }) => {
    const [y, b, T] = gk({ sourceX: n, sourceY: o, targetX: r, targetY: i }), v = e.isInternal ? void 0 : t;
    return O(ru, { id: v, path: y, labelX: b, labelY: T, label: s, labelStyle: l, labelShowBg: c, labelBgStyle: u, labelBgPadding: d, labelBgBorderRadius: f, style: p, markerEnd: h, markerStart: g, interactionWidth: m });
  });
}
const ZQ = Zk({ isInternal: !1 }), Qk = Zk({ isInternal: !0 });
ZQ.displayName = "StraightEdge";
Qk.displayName = "StraightEdgeInternal";
function Jk(e) {
  return Pe(({ id: t, sourceX: n, sourceY: o, targetX: r, targetY: i, sourcePosition: s = ze.Bottom, targetPosition: l = ze.Top, label: c, labelStyle: u, labelShowBg: d, labelBgStyle: f, labelBgPadding: p, labelBgBorderRadius: h, style: g, markerEnd: m, markerStart: y, pathOptions: b, interactionWidth: T }) => {
    const [v, w, S] = Zb({
      sourceX: n,
      sourceY: o,
      sourcePosition: s,
      targetX: r,
      targetY: i,
      targetPosition: l,
      curvature: b == null ? void 0 : b.curvature
    }), C = e.isInternal ? void 0 : t;
    return O(ru, { id: C, path: v, labelX: w, labelY: S, label: c, labelStyle: u, labelShowBg: d, labelBgStyle: f, labelBgPadding: p, labelBgBorderRadius: h, style: g, markerEnd: m, markerStart: y, interactionWidth: T });
  });
}
const QQ = Jk({ isInternal: !1 }), e$ = Jk({ isInternal: !0 });
QQ.displayName = "BezierEdge";
e$.displayName = "BezierEdgeInternal";
const q1 = {
  default: e$,
  straight: Qk,
  step: Xk,
  smoothstep: Gk,
  simplebezier: Uk
}, K1 = {
  sourceX: null,
  sourceY: null,
  targetX: null,
  targetY: null,
  sourcePosition: null,
  targetPosition: null
}, JQ = (e, t, n) => n === ze.Left ? e - t : n === ze.Right ? e + t : e, eJ = (e, t, n) => n === ze.Top ? e - t : n === ze.Bottom ? e + t : e, G1 = "react-flow__edgeupdater";
function Y1({ position: e, centerX: t, centerY: n, radius: o = 10, onMouseDown: r, onMouseEnter: i, onMouseOut: s, type: l }) {
  return O("circle", { onMouseDown: r, onMouseEnter: i, onMouseOut: s, className: xn([G1, `${G1}-${l}`]), cx: JQ(t, o, e), cy: eJ(n, o, e), r: o, stroke: "transparent", fill: "transparent" });
}
function tJ({ isReconnectable: e, reconnectRadius: t, edge: n, sourceX: o, sourceY: r, targetX: i, targetY: s, sourcePosition: l, targetPosition: c, onReconnect: u, onReconnectStart: d, onReconnectEnd: f, setReconnecting: p, setUpdateHover: h }) {
  const g = Xt(), m = (w, S) => {
    if (w.button !== 0)
      return;
    const { autoPanOnConnect: C, domNode: E, isValidConnection: P, connectionMode: M, connectionRadius: x, lib: I, onConnectStart: k, onConnectEnd: _, cancelConnection: R, nodeLookup: A, rfId: N, panBy: L, updateConnection: V } = g.getState(), D = S.type === "target";
    p(!0), d == null || d(w, n, S.type);
    const B = (U, q) => {
      p(!1), f == null || f(U, n, S.type, q);
    }, F = (U) => u == null ? void 0 : u(n, U);
    Ig.onPointerDown(w.nativeEvent, {
      autoPanOnConnect: C,
      connectionMode: M,
      connectionRadius: x,
      domNode: E,
      handleId: S.id,
      nodeId: S.nodeId,
      nodeLookup: A,
      isTarget: D,
      edgeUpdaterType: S.type,
      lib: I,
      flowId: N,
      cancelConnection: R,
      panBy: L,
      isValidConnection: P,
      onConnect: F,
      onConnectStart: k,
      onConnectEnd: _,
      onReconnectEnd: B,
      updateConnection: V,
      getTransform: () => g.getState().transform,
      getFromHandle: () => g.getState().connection.fromHandle
    });
  }, y = (w) => m(w, { nodeId: n.target, id: n.targetHandle ?? null, type: "target" }), b = (w) => m(w, { nodeId: n.source, id: n.sourceHandle ?? null, type: "source" }), T = () => h(!0), v = () => h(!1);
  return Se(Jn, { children: [(e === !0 || e === "source") && O(Y1, { position: l, centerX: o, centerY: r, radius: t, onMouseDown: y, onMouseEnter: T, onMouseOut: v, type: "source" }), (e === !0 || e === "target") && O(Y1, { position: c, centerX: i, centerY: s, radius: t, onMouseDown: b, onMouseEnter: T, onMouseOut: v, type: "target" })] });
}
function nJ({ id: e, edgesFocusable: t, edgesReconnectable: n, elementsSelectable: o, onClick: r, onDoubleClick: i, onContextMenu: s, onMouseEnter: l, onMouseMove: c, onMouseLeave: u, reconnectRadius: d, onReconnect: f, onReconnectStart: p, onReconnectEnd: h, rfId: g, edgeTypes: m, noPanClassName: y, onError: b, disableKeyboardA11y: T }) {
  let v = mt((z) => z.edgeLookup.get(e));
  const w = mt((z) => z.defaultEdgeOptions);
  v = w ? { ...w, ...v } : v;
  let S = v.type || "default", C = (m == null ? void 0 : m[S]) || q1[S];
  C === void 0 && (b == null || b("011", Qn.error011(S)), S = "default", C = q1.default);
  const E = !!(v.focusable || t && typeof v.focusable > "u"), P = typeof f < "u" && (v.reconnectable || n && typeof v.reconnectable > "u"), M = !!(v.selectable || o && typeof v.selectable > "u"), x = qe(null), [I, k] = Yt(!1), [_, R] = Yt(!1), A = Xt(), { zIndex: N, sourceX: L, sourceY: V, targetX: D, targetY: B, sourcePosition: F, targetPosition: U } = mt(Be((z) => {
    const de = z.nodeLookup.get(v.source), ue = z.nodeLookup.get(v.target);
    if (!de || !ue)
      return {
        zIndex: v.zIndex,
        ...K1
      };
    const xe = KX({
      id: e,
      sourceNode: de,
      targetNode: ue,
      sourceHandle: v.sourceHandle || null,
      targetHandle: v.targetHandle || null,
      connectionMode: z.connectionMode,
      onError: b
    });
    return {
      zIndex: FX({
        selected: v.selected,
        zIndex: v.zIndex,
        sourceNode: de,
        targetNode: ue,
        elevateOnSelect: z.elevateEdgesOnSelect
      }),
      ...xe || K1
    };
  }, [v.source, v.target, v.sourceHandle, v.targetHandle, v.selected, v.zIndex]), en), q = Ge(() => v.markerStart ? `url('#${Pg(v.markerStart, g)}')` : void 0, [v.markerStart, g]), G = Ge(() => v.markerEnd ? `url('#${Pg(v.markerEnd, g)}')` : void 0, [v.markerEnd, g]);
  if (v.hidden || L === null || V === null || D === null || B === null)
    return null;
  const K = (z) => {
    var _e;
    const { addSelectedEdges: de, unselectNodesAndEdges: ue, multiSelectionActive: xe } = A.getState();
    M && (A.setState({ nodesSelectionActive: !1 }), v.selected && xe ? (ue({ nodes: [], edges: [v] }), (_e = x.current) == null || _e.blur()) : de([e])), r && r(z, v);
  }, te = i ? (z) => {
    i(z, { ...v });
  } : void 0, ne = s ? (z) => {
    s(z, { ...v });
  } : void 0, W = l ? (z) => {
    l(z, { ...v });
  } : void 0, ee = c ? (z) => {
    c(z, { ...v });
  } : void 0, Y = u ? (z) => {
    u(z, { ...v });
  } : void 0, re = (z) => {
    var de;
    if (!T && QI.includes(z.key) && M) {
      const { unselectNodesAndEdges: ue, addSelectedEdges: xe } = A.getState();
      z.key === "Escape" ? ((de = x.current) == null || de.blur(), ue({ edges: [v] })) : xe([e]);
    }
  };
  return O("svg", { style: { zIndex: N }, children: Se("g", { className: xn([
    "react-flow__edge",
    `react-flow__edge-${S}`,
    v.className,
    y,
    {
      selected: v.selected,
      animated: v.animated,
      inactive: !M && !r,
      updating: I,
      selectable: M
    }
  ]), onClick: K, onDoubleClick: te, onContextMenu: ne, onMouseEnter: W, onMouseMove: ee, onMouseLeave: Y, onKeyDown: E ? re : void 0, tabIndex: E ? 0 : void 0, role: E ? "button" : "img", "data-id": e, "data-testid": `rf__edge-${e}`, "aria-label": v.ariaLabel === null ? void 0 : v.ariaLabel || `Edge from ${v.source} to ${v.target}`, "aria-describedby": E ? `${$k}-${g}` : void 0, ref: x, children: [!_ && O(C, { id: e, source: v.source, target: v.target, type: v.type, selected: v.selected, animated: v.animated, selectable: M, deletable: v.deletable ?? !0, label: v.label, labelStyle: v.labelStyle, labelShowBg: v.labelShowBg, labelBgStyle: v.labelBgStyle, labelBgPadding: v.labelBgPadding, labelBgBorderRadius: v.labelBgBorderRadius, sourceX: L, sourceY: V, targetX: D, targetY: B, sourcePosition: F, targetPosition: U, data: v.data, style: v.style, sourceHandleId: v.sourceHandle, targetHandleId: v.targetHandle, markerStart: q, markerEnd: G, pathOptions: "pathOptions" in v ? v.pathOptions : void 0, interactionWidth: v.interactionWidth }), P && O(tJ, { edge: v, isReconnectable: P, reconnectRadius: d, onReconnect: f, onReconnectStart: p, onReconnectEnd: h, sourceX: L, sourceY: V, targetX: D, targetY: B, sourcePosition: F, targetPosition: U, setUpdateHover: k, setReconnecting: R })] }) });
}
const oJ = (e) => ({
  edgesFocusable: e.edgesFocusable,
  edgesReconnectable: e.edgesReconnectable,
  elementsSelectable: e.elementsSelectable,
  connectionMode: e.connectionMode,
  onError: e.onError
});
function t$({ defaultMarkerColor: e, onlyRenderVisibleElements: t, rfId: n, edgeTypes: o, noPanClassName: r, onReconnect: i, onEdgeContextMenu: s, onEdgeMouseEnter: l, onEdgeMouseMove: c, onEdgeMouseLeave: u, onEdgeClick: d, reconnectRadius: f, onEdgeDoubleClick: p, onReconnectStart: h, onReconnectEnd: g, disableKeyboardA11y: m }) {
  const { edgesFocusable: y, edgesReconnectable: b, elementsSelectable: T, onError: v } = mt(oJ, en), w = zQ(t);
  return Se("div", { className: "react-flow__edges", children: [O(KQ, { defaultColor: e, rfId: n }), w.map((S) => O(nJ, { id: S, edgesFocusable: y, edgesReconnectable: b, elementsSelectable: T, noPanClassName: r, onReconnect: i, onContextMenu: s, onMouseEnter: l, onMouseMove: c, onMouseLeave: u, onClick: d, reconnectRadius: f, onDoubleClick: p, onReconnectStart: h, onReconnectEnd: g, rfId: n, onError: v, edgeTypes: o, disableKeyboardA11y: m }, S))] });
}
t$.displayName = "EdgeRenderer";
const rJ = Pe(t$), iJ = (e) => `translate(${e.transform[0]}px,${e.transform[1]}px) scale(${e.transform[2]})`;
function sJ({ children: e }) {
  const t = mt(iJ);
  return O("div", { className: "react-flow__viewport xyflow__viewport react-flow__container", style: { transform: t }, children: e });
}
function aJ(e) {
  const t = kp(), n = qe(!1);
  et(() => {
    !n.current && t.viewportInitialized && e && (setTimeout(() => e(t), 1), n.current = !0);
  }, [e, t.viewportInitialized]);
}
const lJ = (e) => {
  var t;
  return (t = e.panZoom) == null ? void 0 : t.syncViewport;
};
function cJ(e) {
  const t = mt(lJ), n = Xt();
  return et(() => {
    e && (t == null || t(e), n.setState({ transform: [e.x, e.y, e.zoom] }));
  }, [e, t]), null;
}
function uJ(e) {
  return e.connection.inProgress ? { ...e.connection, to: nu(e.connection.to, e.transform) } : { ...e.connection };
}
function dJ(e) {
  return uJ;
}
function fJ(e) {
  const t = dJ();
  return mt(t, en);
}
const pJ = (e) => ({
  nodesConnectable: e.nodesConnectable,
  isValid: e.connection.isValid,
  inProgress: e.connection.inProgress,
  width: e.width,
  height: e.height
});
function hJ({ containerStyle: e, style: t, type: n, component: o }) {
  const { nodesConnectable: r, width: i, height: s, isValid: l, inProgress: c } = mt(pJ, en);
  return !(i && r && c) ? null : O("svg", { style: e, width: i, height: s, className: "react-flow__connectionline react-flow__container", children: O("g", { className: xn(["react-flow__connection", ek(l)]), children: O(n$, { style: t, type: n, CustomComponent: o, isValid: l }) }) });
}
const n$ = ({ style: e, type: t = wo.Bezier, CustomComponent: n, isValid: o }) => {
  const { inProgress: r, from: i, fromNode: s, fromHandle: l, fromPosition: c, to: u, toNode: d, toHandle: f, toPosition: p } = fJ();
  if (!r)
    return;
  if (n)
    return O(n, { connectionLineType: t, connectionLineStyle: e, fromNode: s, fromHandle: l, fromX: i.x, fromY: i.y, toX: u.x, toY: u.y, fromPosition: c, toPosition: p, connectionStatus: ek(o), toNode: d, toHandle: f });
  let h = "";
  const g = {
    sourceX: i.x,
    sourceY: i.y,
    sourcePosition: c,
    targetX: u.x,
    targetY: u.y,
    targetPosition: p
  };
  switch (t) {
    case wo.Bezier:
      [h] = Zb(g);
      break;
    case wo.SimpleBezier:
      [h] = Hk(g);
      break;
    case wo.Step:
      [h] = Og({
        ...g,
        borderRadius: 0
      });
      break;
    case wo.SmoothStep:
      [h] = Og(g);
      break;
    default:
      [h] = gk(g);
  }
  return O("path", { d: h, fill: "none", className: "react-flow__connection-path", style: e });
};
n$.displayName = "ConnectionLine";
const mJ = {};
function X1(e = mJ) {
  const t = qe(e), n = Xt();
  et(() => {
    var o, r;
    if (process.env.NODE_ENV === "development") {
      const i = /* @__PURE__ */ new Set([...Object.keys(t.current), ...Object.keys(e)]);
      for (const s of i)
        if (t.current[s] !== e[s]) {
          (r = (o = n.getState()).onError) == null || r.call(o, "002", Qn.error002());
          break;
        }
      t.current = e;
    }
  }, [e]);
}
function gJ() {
  const e = Xt(), t = qe(!1);
  et(() => {
    var n, o;
    if (process.env.NODE_ENV === "development" && !t.current) {
      const r = document.querySelector(".react-flow__pane");
      r && window.getComputedStyle(r).zIndex !== "1" && ((o = (n = e.getState()).onError) == null || o.call(n, "013", Qn.error013("react"))), t.current = !0;
    }
  }, []);
}
function o$({ nodeTypes: e, edgeTypes: t, onInit: n, onNodeClick: o, onEdgeClick: r, onNodeDoubleClick: i, onEdgeDoubleClick: s, onNodeMouseEnter: l, onNodeMouseMove: c, onNodeMouseLeave: u, onNodeContextMenu: d, onSelectionContextMenu: f, onSelectionStart: p, onSelectionEnd: h, connectionLineType: g, connectionLineStyle: m, connectionLineComponent: y, connectionLineContainerStyle: b, selectionKeyCode: T, selectionOnDrag: v, selectionMode: w, multiSelectionKeyCode: S, panActivationKeyCode: C, zoomActivationKeyCode: E, deleteKeyCode: P, onlyRenderVisibleElements: M, elementsSelectable: x, defaultViewport: I, translateExtent: k, minZoom: _, maxZoom: R, preventScrolling: A, defaultMarkerColor: N, zoomOnScroll: L, zoomOnPinch: V, panOnScroll: D, panOnScrollSpeed: B, panOnScrollMode: F, zoomOnDoubleClick: U, panOnDrag: q, onPaneClick: G, onPaneMouseEnter: K, onPaneMouseMove: te, onPaneMouseLeave: ne, onPaneScroll: W, onPaneContextMenu: ee, paneClickDistance: Y, nodeClickDistance: re, onEdgeContextMenu: z, onEdgeMouseEnter: de, onEdgeMouseMove: ue, onEdgeMouseLeave: xe, reconnectRadius: _e, onReconnect: we, onReconnectStart: De, onReconnectEnd: Ee, noDragClassName: Ve, noWheelClassName: Me, noPanClassName: j, disableKeyboardA11y: J, nodeExtent: ie, rfId: Q, viewport: H, onViewportChange: X }) {
  return X1(e), X1(t), gJ(), aJ(n), cJ(H), O(MQ, { onPaneClick: G, onPaneMouseEnter: K, onPaneMouseMove: te, onPaneMouseLeave: ne, onPaneContextMenu: ee, onPaneScroll: W, paneClickDistance: Y, deleteKeyCode: P, selectionKeyCode: T, selectionOnDrag: v, selectionMode: w, onSelectionStart: p, onSelectionEnd: h, multiSelectionKeyCode: S, panActivationKeyCode: C, zoomActivationKeyCode: E, elementsSelectable: x, zoomOnScroll: L, zoomOnPinch: V, zoomOnDoubleClick: U, panOnScroll: D, panOnScrollSpeed: B, panOnScrollMode: F, panOnDrag: q, defaultViewport: I, translateExtent: k, minZoom: _, maxZoom: R, onSelectionContextMenu: f, preventScrolling: A, noDragClassName: Ve, noWheelClassName: Me, noPanClassName: j, disableKeyboardA11y: J, onViewportChange: X, isControlledViewport: !!H, children: Se(sJ, { children: [O(rJ, { edgeTypes: t, onEdgeClick: r, onEdgeDoubleClick: s, onReconnect: we, onReconnectStart: De, onReconnectEnd: Ee, onlyRenderVisibleElements: M, onEdgeContextMenu: z, onEdgeMouseEnter: de, onEdgeMouseMove: ue, onEdgeMouseLeave: xe, reconnectRadius: _e, defaultMarkerColor: N, noPanClassName: j, disableKeyboardA11y: J, rfId: Q }), O(hJ, { style: m, type: g, component: y, containerStyle: b }), O("div", { className: "react-flow__edgelabel-renderer" }), O(jQ, { nodeTypes: e, onNodeClick: o, onNodeDoubleClick: i, onNodeMouseEnter: l, onNodeMouseMove: c, onNodeMouseLeave: u, onNodeContextMenu: d, nodeClickDistance: re, onlyRenderVisibleElements: M, noPanClassName: j, noDragClassName: Ve, disableKeyboardA11y: J, nodeExtent: ie, rfId: Q }), O("div", { className: "react-flow__viewport-portal" })] }) });
}
o$.displayName = "GraphView";
const yJ = Pe(o$), Z1 = ({ nodes: e, edges: t, defaultNodes: n, defaultEdges: o, width: r, height: i, fitView: s, fitViewOptions: l, minZoom: c = 0.5, maxZoom: u = 2, nodeOrigin: d, nodeExtent: f } = {}) => {
  const p = /* @__PURE__ */ new Map(), h = /* @__PURE__ */ new Map(), g = /* @__PURE__ */ new Map(), m = /* @__PURE__ */ new Map(), y = o ?? t ?? [], b = n ?? e ?? [], T = d ?? [0, 0], v = f ?? bc;
  bk(g, m, y);
  const w = Rg(b, p, h, {
    nodeOrigin: T,
    nodeExtent: v,
    elevateNodesOnSelect: !1
  });
  let S = [0, 0, 1];
  if (s && r && i) {
    const C = tu(p, {
      filter: (x) => !!((x.width || x.initialWidth) && (x.height || x.initialHeight))
    }), { x: E, y: P, zoom: M } = Yb(C, r, i, c, u, (l == null ? void 0 : l.padding) ?? 0.1);
    S = [E, P, M];
  }
  return {
    rfId: "1",
    width: 0,
    height: 0,
    transform: S,
    nodes: b,
    nodesInitialized: w,
    nodeLookup: p,
    parentLookup: h,
    edges: y,
    edgeLookup: m,
    connectionLookup: g,
    onNodesChange: null,
    onEdgesChange: null,
    hasDefaultNodes: n !== void 0,
    hasDefaultEdges: o !== void 0,
    panZoom: null,
    minZoom: c,
    maxZoom: u,
    translateExtent: bc,
    nodeExtent: v,
    nodesSelectionActive: !1,
    userSelectionActive: !1,
    userSelectionRect: null,
    connectionMode: xa.Strict,
    domNode: null,
    paneDragging: !1,
    noPanClassName: "nopan",
    nodeOrigin: T,
    nodeDragThreshold: 1,
    snapGrid: [15, 15],
    snapToGrid: !1,
    nodesDraggable: !0,
    nodesConnectable: !0,
    nodesFocusable: !0,
    edgesFocusable: !0,
    edgesReconnectable: !0,
    elementsSelectable: !0,
    elevateNodesOnSelect: !0,
    elevateEdgesOnSelect: !1,
    selectNodesOnDrag: !0,
    multiSelectionActive: !1,
    fitViewQueued: s ?? !1,
    fitViewOptions: l,
    fitViewResolver: null,
    connection: { ...JI },
    connectionClickStartHandle: null,
    connectOnClick: !0,
    ariaLiveMessage: "",
    autoPanOnConnect: !0,
    autoPanOnNodeDrag: !0,
    autoPanSpeed: 15,
    connectionRadius: 20,
    onError: nf,
    isValidConnection: void 0,
    onSelectionChangeHandlers: [],
    lib: "react",
    debug: !1
  };
}, bJ = ({ nodes: e, edges: t, defaultNodes: n, defaultEdges: o, width: r, height: i, fitView: s, fitViewOptions: l, minZoom: c, maxZoom: u, nodeOrigin: d, nodeExtent: f }) => DZ((p, h) => {
  async function g() {
    const { nodeLookup: m, panZoom: y, fitViewOptions: b, fitViewResolver: T, width: v, height: w, minZoom: S, maxZoom: C } = h();
    y && (await AX({
      nodes: m,
      width: v,
      height: w,
      panZoom: y,
      minZoom: S,
      maxZoom: C
    }, b), T == null || T.resolve(!0), p({ fitViewResolver: null }));
  }
  return {
    ...Z1({
      nodes: e,
      edges: t,
      width: r,
      height: i,
      fitView: s,
      fitViewOptions: l,
      minZoom: c,
      maxZoom: u,
      nodeOrigin: d,
      nodeExtent: f,
      defaultNodes: n,
      defaultEdges: o
    }),
    setNodes: (m) => {
      const { nodeLookup: y, parentLookup: b, nodeOrigin: T, elevateNodesOnSelect: v, fitViewQueued: w } = h(), S = Rg(m, y, b, {
        nodeOrigin: T,
        nodeExtent: f,
        elevateNodesOnSelect: v,
        checkEquality: !0
      });
      w && S ? (g(), p({ nodes: m, nodesInitialized: S, fitViewQueued: !1, fitViewOptions: void 0 })) : p({ nodes: m, nodesInitialized: S });
    },
    setEdges: (m) => {
      const { connectionLookup: y, edgeLookup: b } = h();
      bk(y, b, m), p({ edges: m });
    },
    setDefaultNodesAndEdges: (m, y) => {
      if (m) {
        const { setNodes: b } = h();
        b(m), p({ hasDefaultNodes: !0 });
      }
      if (y) {
        const { setEdges: b } = h();
        b(y), p({ hasDefaultEdges: !0 });
      }
    },
    /*
     * Every node gets registerd at a ResizeObserver. Whenever a node
     * changes its dimensions, this function is called to measure the
     * new dimensions and update the nodes.
     */
    updateNodeInternals: (m) => {
      const { triggerNodeChanges: y, nodeLookup: b, parentLookup: T, domNode: v, nodeOrigin: w, nodeExtent: S, debug: C, fitViewQueued: E } = h(), { changes: P, updatedInternals: M } = JX(m, b, T, v, w, S);
      M && (XX(b, T, { nodeOrigin: w, nodeExtent: S }), E ? (g(), p({ fitViewQueued: !1, fitViewOptions: void 0 })) : p({}), (P == null ? void 0 : P.length) > 0 && (C && console.log("React Flow: trigger node changes", P), y == null || y(P)));
    },
    updateNodePositions: (m, y = !1) => {
      const b = [], T = [], { nodeLookup: v, triggerNodeChanges: w } = h();
      for (const [S, C] of m) {
        const E = v.get(S), P = !!(E != null && E.expandParent && (E != null && E.parentId) && (C != null && C.position)), M = {
          id: S,
          type: "position",
          position: P ? {
            x: Math.max(0, C.position.x),
            y: Math.max(0, C.position.y)
          } : C.position,
          dragging: y
        };
        P && E.parentId && b.push({
          id: S,
          parentId: E.parentId,
          rect: {
            ...C.internals.positionAbsolute,
            width: C.measured.width ?? 0,
            height: C.measured.height ?? 0
          }
        }), T.push(M);
      }
      if (b.length > 0) {
        const { parentLookup: S, nodeOrigin: C } = h(), E = tv(b, v, S, C);
        T.push(...E);
      }
      w(T);
    },
    triggerNodeChanges: (m) => {
      const { onNodesChange: y, setNodes: b, nodes: T, hasDefaultNodes: v, debug: w } = h();
      if (m != null && m.length) {
        if (v) {
          const S = oQ(m, T);
          b(S);
        }
        w && console.log("React Flow: trigger node changes", m), y == null || y(m);
      }
    },
    triggerEdgeChanges: (m) => {
      const { onEdgesChange: y, setEdges: b, edges: T, hasDefaultEdges: v, debug: w } = h();
      if (m != null && m.length) {
        if (v) {
          const S = rQ(m, T);
          b(S);
        }
        w && console.log("React Flow: trigger edge changes", m), y == null || y(m);
      }
    },
    addSelectedNodes: (m) => {
      const { multiSelectionActive: y, edgeLookup: b, nodeLookup: T, triggerNodeChanges: v, triggerEdgeChanges: w } = h();
      if (y) {
        const S = m.map((C) => Gi(C, !0));
        v(S);
        return;
      }
      v(Ys(T, /* @__PURE__ */ new Set([...m]), !0)), w(Ys(b));
    },
    addSelectedEdges: (m) => {
      const { multiSelectionActive: y, edgeLookup: b, nodeLookup: T, triggerNodeChanges: v, triggerEdgeChanges: w } = h();
      if (y) {
        const S = m.map((C) => Gi(C, !0));
        w(S);
        return;
      }
      w(Ys(b, /* @__PURE__ */ new Set([...m]))), v(Ys(T, /* @__PURE__ */ new Set(), !0));
    },
    unselectNodesAndEdges: ({ nodes: m, edges: y } = {}) => {
      const { edges: b, nodes: T, nodeLookup: v, triggerNodeChanges: w, triggerEdgeChanges: S } = h(), C = m || T, E = y || b, P = C.map((x) => {
        const I = v.get(x.id);
        return I && (I.selected = !1), Gi(x.id, !1);
      }), M = E.map((x) => Gi(x.id, !1));
      w(P), S(M);
    },
    setMinZoom: (m) => {
      const { panZoom: y, maxZoom: b } = h();
      y == null || y.setScaleExtent([m, b]), p({ minZoom: m });
    },
    setMaxZoom: (m) => {
      const { panZoom: y, minZoom: b } = h();
      y == null || y.setScaleExtent([b, m]), p({ maxZoom: m });
    },
    setTranslateExtent: (m) => {
      var y;
      (y = h().panZoom) == null || y.setTranslateExtent(m), p({ translateExtent: m });
    },
    setPaneClickDistance: (m) => {
      var y;
      (y = h().panZoom) == null || y.setClickDistance(m);
    },
    resetSelectedElements: () => {
      const { edges: m, nodes: y, triggerNodeChanges: b, triggerEdgeChanges: T, elementsSelectable: v } = h();
      if (!v)
        return;
      const w = y.reduce((C, E) => E.selected ? [...C, Gi(E.id, !1)] : C, []), S = m.reduce((C, E) => E.selected ? [...C, Gi(E.id, !1)] : C, []);
      b(w), T(S);
    },
    setNodeExtent: (m) => {
      const { nodes: y, nodeLookup: b, parentLookup: T, nodeOrigin: v, elevateNodesOnSelect: w, nodeExtent: S } = h();
      m[0][0] === S[0][0] && m[0][1] === S[0][1] && m[1][0] === S[1][0] && m[1][1] === S[1][1] || (Rg(y, b, T, {
        nodeOrigin: v,
        nodeExtent: m,
        elevateNodesOnSelect: w,
        checkEquality: !1
      }), p({ nodeExtent: m }));
    },
    panBy: (m) => {
      const { transform: y, width: b, height: T, panZoom: v, translateExtent: w } = h();
      return eZ({ delta: m, panZoom: v, transform: y, translateExtent: w, width: b, height: T });
    },
    cancelConnection: () => {
      p({
        connection: { ...JI }
      });
    },
    updateConnection: (m) => {
      p({ connection: m });
    },
    reset: () => p({ ...Z1() })
  };
}, Object.is);
function r$({ initialNodes: e, initialEdges: t, defaultNodes: n, defaultEdges: o, initialWidth: r, initialHeight: i, initialMinZoom: s, initialMaxZoom: l, initialFitViewOptions: c, fitView: u, nodeOrigin: d, nodeExtent: f, children: p }) {
  const [h] = Yt(() => bJ({
    nodes: e,
    edges: t,
    defaultNodes: n,
    defaultEdges: o,
    width: r,
    height: i,
    fitView: u,
    minZoom: s,
    maxZoom: l,
    fitViewOptions: c,
    nodeOrigin: d,
    nodeExtent: f
  }));
  return O(LZ, { value: h, children: O(lQ, { children: p }) });
}
function vJ({ children: e, nodes: t, edges: n, defaultNodes: o, defaultEdges: r, width: i, height: s, fitView: l, fitViewOptions: c, minZoom: u, maxZoom: d, nodeOrigin: f, nodeExtent: p }) {
  return Kt(Ip) ? O(Jn, { children: e }) : O(r$, { initialNodes: t, initialEdges: n, defaultNodes: o, defaultEdges: r, initialWidth: i, initialHeight: s, fitView: l, initialFitViewOptions: c, initialMinZoom: u, initialMaxZoom: d, nodeOrigin: f, nodeExtent: p, children: e });
}
const xJ = {
  width: "100%",
  height: "100%",
  overflow: "hidden",
  position: "relative",
  zIndex: 0
};
function wJ({ nodes: e, edges: t, defaultNodes: n, defaultEdges: o, className: r, nodeTypes: i, edgeTypes: s, onNodeClick: l, onEdgeClick: c, onInit: u, onMove: d, onMoveStart: f, onMoveEnd: p, onConnect: h, onConnectStart: g, onConnectEnd: m, onClickConnectStart: y, onClickConnectEnd: b, onNodeMouseEnter: T, onNodeMouseMove: v, onNodeMouseLeave: w, onNodeContextMenu: S, onNodeDoubleClick: C, onNodeDragStart: E, onNodeDrag: P, onNodeDragStop: M, onNodesDelete: x, onEdgesDelete: I, onDelete: k, onSelectionChange: _, onSelectionDragStart: R, onSelectionDrag: A, onSelectionDragStop: N, onSelectionContextMenu: L, onSelectionStart: V, onSelectionEnd: D, onBeforeDelete: B, connectionMode: F, connectionLineType: U = wo.Bezier, connectionLineStyle: q, connectionLineComponent: G, connectionLineContainerStyle: K, deleteKeyCode: te = "Backspace", selectionKeyCode: ne = "Shift", selectionOnDrag: W = !1, selectionMode: ee = vc.Full, panActivationKeyCode: Y = "Space", multiSelectionKeyCode: re = rf() ? "Meta" : "Control", zoomActivationKeyCode: z = rf() ? "Meta" : "Control", snapToGrid: de, snapGrid: ue, onlyRenderVisibleElements: xe = !1, selectNodesOnDrag: _e, nodesDraggable: we, nodesConnectable: De, nodesFocusable: Ee, nodeOrigin: Ve = Nk, edgesFocusable: Me, edgesReconnectable: j, elementsSelectable: J = !0, defaultViewport: ie = XZ, minZoom: Q = 0.5, maxZoom: H = 2, translateExtent: X = bc, preventScrolling: se = !0, nodeExtent: ye, defaultMarkerColor: he = "#b1b1b7", zoomOnScroll: le = !0, zoomOnPinch: ae = !0, panOnScroll: ce = !1, panOnScrollSpeed: Te = 0.5, panOnScrollMode: Re = ss.Free, zoomOnDoubleClick: oe = !0, panOnDrag: be = !0, onPaneClick: Ne, onPaneMouseEnter: We, onPaneMouseMove: Ke, onPaneMouseLeave: xt, onPaneScroll: ft, onPaneContextMenu: Ct, paneClickDistance: je = 0, nodeClickDistance: pt = 0, children: Et, onReconnect: Le, onReconnectStart: Ft, onReconnectEnd: Bt, onEdgeContextMenu: tn, onEdgeDoubleClick: ko, onEdgeMouseEnter: wn, onEdgeMouseMove: In, onEdgeMouseLeave: ei, reconnectRadius: fo = 10, onNodesChange: ws, onEdgesChange: Bi, noDragClassName: On = "nodrag", noWheelClassName: hn = "nowheel", noPanClassName: po = "nopan", fitView: Vi, fitViewOptions: ve, connectOnClick: pe, attributionPosition: Ae, proOptions: Qe, defaultEdgeOptions: tt, elevateNodesOnSelect: ht, elevateEdgesOnSelect: nn, disableKeyboardA11y: Pn = !1, autoPanOnConnect: Fi, autoPanOnNodeDrag: Mp, autoPanSpeed: su, connectionRadius: Ss, isValidConnection: Ts, onError: yt, style: $o, id: Yo, nodeDragThreshold: ji, viewport: Ap, onViewportChange: O$, width: P$, height: R$, colorMode: I$ = "light", debug: k$, onScroll: au, ...$$ }, N$) {
  const _p = Yo || "1", M$ = eQ(I$), A$ = Be((cv) => {
    cv.currentTarget.scrollTo({ top: 0, left: 0, behavior: "instant" }), au == null || au(cv);
  }, [au]);
  return O("div", { "data-testid": "rf__wrapper", ...$$, onScroll: A$, style: { ...$o, ...xJ }, ref: N$, className: xn(["react-flow", r, M$]), id: Yo, children: Se(vJ, { nodes: e, edges: t, width: P$, height: R$, fitView: Vi, fitViewOptions: ve, minZoom: Q, maxZoom: H, nodeOrigin: Ve, nodeExtent: ye, children: [O(yJ, { onInit: u, onNodeClick: l, onEdgeClick: c, onNodeMouseEnter: T, onNodeMouseMove: v, onNodeMouseLeave: w, onNodeContextMenu: S, onNodeDoubleClick: C, nodeTypes: i, edgeTypes: s, connectionLineType: U, connectionLineStyle: q, connectionLineComponent: G, connectionLineContainerStyle: K, selectionKeyCode: ne, selectionOnDrag: W, selectionMode: ee, deleteKeyCode: te, multiSelectionKeyCode: re, panActivationKeyCode: Y, zoomActivationKeyCode: z, onlyRenderVisibleElements: xe, defaultViewport: ie, translateExtent: X, minZoom: Q, maxZoom: H, preventScrolling: se, zoomOnScroll: le, zoomOnPinch: ae, zoomOnDoubleClick: oe, panOnScroll: ce, panOnScrollSpeed: Te, panOnScrollMode: Re, panOnDrag: be, onPaneClick: Ne, onPaneMouseEnter: We, onPaneMouseMove: Ke, onPaneMouseLeave: xt, onPaneScroll: ft, onPaneContextMenu: Ct, paneClickDistance: je, nodeClickDistance: pt, onSelectionContextMenu: L, onSelectionStart: V, onSelectionEnd: D, onReconnect: Le, onReconnectStart: Ft, onReconnectEnd: Bt, onEdgeContextMenu: tn, onEdgeDoubleClick: ko, onEdgeMouseEnter: wn, onEdgeMouseMove: In, onEdgeMouseLeave: ei, reconnectRadius: fo, defaultMarkerColor: he, noDragClassName: On, noWheelClassName: hn, noPanClassName: po, rfId: _p, disableKeyboardA11y: Pn, nodeExtent: ye, viewport: Ap, onViewportChange: O$ }), O(JZ, { nodes: e, edges: t, defaultNodes: n, defaultEdges: o, onConnect: h, onConnectStart: g, onConnectEnd: m, onClickConnectStart: y, onClickConnectEnd: b, nodesDraggable: we, nodesConnectable: De, nodesFocusable: Ee, edgesFocusable: Me, edgesReconnectable: j, elementsSelectable: J, elevateNodesOnSelect: ht, elevateEdgesOnSelect: nn, minZoom: Q, maxZoom: H, nodeExtent: ye, onNodesChange: ws, onEdgesChange: Bi, snapToGrid: de, snapGrid: ue, connectionMode: F, translateExtent: X, connectOnClick: pe, defaultEdgeOptions: tt, fitView: Vi, fitViewOptions: ve, onNodesDelete: x, onEdgesDelete: I, onDelete: k, onNodeDragStart: E, onNodeDrag: P, onNodeDragStop: M, onSelectionDrag: A, onSelectionDragStart: R, onSelectionDragStop: N, onMove: d, onMoveStart: f, onMoveEnd: p, noPanClassName: po, nodeOrigin: Ve, rfId: _p, autoPanOnConnect: Fi, autoPanOnNodeDrag: Mp, autoPanSpeed: su, onError: yt, connectionRadius: Ss, isValidConnection: Ts, selectNodesOnDrag: _e, nodeDragThreshold: ji, onBeforeDelete: B, paneClickDistance: je, debug: k$ }), O(YZ, { onSelectionChange: _ }), Et, O(WZ, { proOptions: Qe, position: Ae }), O(zZ, { rfId: _p, disableKeyboardA11y: Pn })] }) });
}
var SJ = Ak(wJ);
const TJ = (e) => {
  var t;
  return (t = e.domNode) == null ? void 0 : t.querySelector(".react-flow__edgelabel-renderer");
};
function CJ({ children: e }) {
  const t = mt(TJ);
  return t ? F$(e, t) : null;
}
const EJ = (e) => ({
  x: e.transform[0],
  y: e.transform[1],
  zoom: e.transform[2]
});
function OJ() {
  return mt(EJ, en);
}
function PJ({ dimensions: e, lineWidth: t, variant: n, className: o }) {
  return O("path", { strokeWidth: t, d: `M${e[0] / 2} 0 V${e[1]} M0 ${e[1] / 2} H${e[0]}`, className: xn(["react-flow__background-pattern", n, o]) });
}
function RJ({ radius: e, className: t }) {
  return O("circle", { cx: e, cy: e, r: e, className: xn(["react-flow__background-pattern", "dots", t]) });
}
var pi;
(function(e) {
  e.Lines = "lines", e.Dots = "dots", e.Cross = "cross";
})(pi || (pi = {}));
const IJ = {
  [pi.Dots]: 1,
  [pi.Lines]: 1,
  [pi.Cross]: 6
}, kJ = (e) => ({ transform: e.transform, patternId: `pattern-${e.rfId}` });
function i$({
  id: e,
  variant: t = pi.Dots,
  // only used for dots and cross
  gap: n = 20,
  // only used for lines and cross
  size: o,
  lineWidth: r = 1,
  offset: i = 0,
  color: s,
  bgColor: l,
  style: c,
  className: u,
  patternClassName: d
}) {
  const f = qe(null), { transform: p, patternId: h } = mt(kJ, en), g = o || IJ[t], m = t === pi.Dots, y = t === pi.Cross, b = Array.isArray(n) ? n : [n, n], T = [b[0] * p[2] || 1, b[1] * p[2] || 1], v = g * p[2], w = Array.isArray(i) ? i : [i, i], S = y ? [v, v] : T, C = [
    w[0] * p[2] || 1 + S[0] / 2,
    w[1] * p[2] || 1 + S[1] / 2
  ], E = `${h}${e || ""}`;
  return Se("svg", { className: xn(["react-flow__background", u]), style: {
    ...c,
    ...$p,
    "--xy-background-color-props": l,
    "--xy-background-pattern-color-props": s
  }, ref: f, "data-testid": "rf__background", children: [O("pattern", { id: E, x: p[0] % T[0], y: p[1] % T[1], width: T[0], height: T[1], patternUnits: "userSpaceOnUse", patternTransform: `translate(-${C[0]},-${C[1]})`, children: m ? O(RJ, { radius: v / 2, className: d }) : O(PJ, { dimensions: S, lineWidth: r, variant: t, className: d }) }), O("rect", { x: "0", y: "0", width: "100%", height: "100%", fill: `url(#${E})` })] });
}
i$.displayName = "Background";
Pe(i$);
function $J() {
  return O("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 32 32", children: O("path", { d: "M32 18.133H18.133V32h-4.266V18.133H0v-4.266h13.867V0h4.266v13.867H32z" }) });
}
function NJ() {
  return O("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 32 5", children: O("path", { d: "M0 0h32v4.2H0z" }) });
}
function MJ() {
  return O("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 32 30", children: O("path", { d: "M3.692 4.63c0-.53.4-.938.939-.938h5.215V0H4.708C2.13 0 0 2.054 0 4.63v5.216h3.692V4.631zM27.354 0h-5.2v3.692h5.17c.53 0 .984.4.984.939v5.215H32V4.631A4.624 4.624 0 0027.354 0zm.954 24.83c0 .532-.4.94-.939.94h-5.215v3.768h5.215c2.577 0 4.631-2.13 4.631-4.707v-5.139h-3.692v5.139zm-23.677.94c-.531 0-.939-.4-.939-.94v-5.138H0v5.139c0 2.577 2.13 4.707 4.708 4.707h5.138V25.77H4.631z" }) });
}
function AJ() {
  return O("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 25 32", children: O("path", { d: "M21.333 10.667H19.81V7.619C19.81 3.429 16.38 0 12.19 0 8 0 4.571 3.429 4.571 7.619v3.048H3.048A3.056 3.056 0 000 13.714v15.238A3.056 3.056 0 003.048 32h18.285a3.056 3.056 0 003.048-3.048V13.714a3.056 3.056 0 00-3.048-3.047zM12.19 24.533a3.056 3.056 0 01-3.047-3.047 3.056 3.056 0 013.047-3.048 3.056 3.056 0 013.048 3.048 3.056 3.056 0 01-3.048 3.047zm4.724-13.866H7.467V7.619c0-2.59 2.133-4.724 4.723-4.724 2.591 0 4.724 2.133 4.724 4.724v3.048z" }) });
}
function _J() {
  return O("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 25 32", children: O("path", { d: "M21.333 10.667H19.81V7.619C19.81 3.429 16.38 0 12.19 0c-4.114 1.828-1.37 2.133.305 2.438 1.676.305 4.42 2.59 4.42 5.181v3.048H3.047A3.056 3.056 0 000 13.714v15.238A3.056 3.056 0 003.048 32h18.285a3.056 3.056 0 003.048-3.048V13.714a3.056 3.056 0 00-3.048-3.047zM12.19 24.533a3.056 3.056 0 01-3.047-3.047 3.056 3.056 0 013.047-3.048 3.056 3.056 0 013.048 3.048 3.056 3.056 0 01-3.048 3.047z" }) });
}
function Wu({ children: e, className: t, ...n }) {
  return O("button", { type: "button", className: xn(["react-flow__controls-button", t]), ...n, children: e });
}
const DJ = (e) => ({
  isInteractive: e.nodesDraggable || e.nodesConnectable || e.elementsSelectable,
  minZoomReached: e.transform[2] <= e.minZoom,
  maxZoomReached: e.transform[2] >= e.maxZoom
});
function s$({ style: e, showZoom: t = !0, showFitView: n = !0, showInteractive: o = !0, fitViewOptions: r, onZoomIn: i, onZoomOut: s, onFitView: l, onInteractiveChange: c, className: u, children: d, position: f = "bottom-left", orientation: p = "vertical", "aria-label": h = "React Flow controls" }) {
  const g = Xt(), { isInteractive: m, minZoomReached: y, maxZoomReached: b } = mt(DJ, en), { zoomIn: T, zoomOut: v, fitView: w } = kp(), S = () => {
    T(), i == null || i();
  }, C = () => {
    v(), s == null || s();
  }, E = () => {
    w(r), l == null || l();
  }, P = () => {
    g.setState({
      nodesDraggable: !m,
      nodesConnectable: !m,
      elementsSelectable: !m
    }), c == null || c(!m);
  };
  return Se(ou, { className: xn(["react-flow__controls", p === "horizontal" ? "horizontal" : "vertical", u]), position: f, style: e, "data-testid": "rf__controls", "aria-label": h, children: [t && Se(Jn, { children: [O(Wu, { onClick: S, className: "react-flow__controls-zoomin", title: "zoom in", "aria-label": "zoom in", disabled: b, children: O($J, {}) }), O(Wu, { onClick: C, className: "react-flow__controls-zoomout", title: "zoom out", "aria-label": "zoom out", disabled: y, children: O(NJ, {}) })] }), n && O(Wu, { className: "react-flow__controls-fitview", onClick: E, title: "fit view", "aria-label": "fit view", children: O(MJ, {}) }), o && O(Wu, { className: "react-flow__controls-interactive", onClick: P, title: "toggle interactivity", "aria-label": "toggle interactivity", children: m ? O(_J, {}) : O(AJ, {}) }), d] });
}
s$.displayName = "Controls";
Pe(s$);
function LJ({ id: e, x: t, y: n, width: o, height: r, style: i, color: s, strokeColor: l, strokeWidth: c, className: u, borderRadius: d, shapeRendering: f, selected: p, onClick: h }) {
  const { background: g, backgroundColor: m } = i || {}, y = s || g || m;
  return O("rect", { className: xn(["react-flow__minimap-node", { selected: p }, u]), x: t, y: n, rx: d, ry: d, width: o, height: r, style: {
    fill: y,
    stroke: l,
    strokeWidth: c
  }, shapeRendering: f, onClick: h ? (b) => h(b, e) : void 0 });
}
const BJ = Pe(LJ), VJ = (e) => e.nodes.map((t) => t.id), em = (e) => e instanceof Function ? e : () => e;
function FJ({
  nodeStrokeColor: e,
  nodeColor: t,
  nodeClassName: n = "",
  nodeBorderRadius: o = 5,
  nodeStrokeWidth: r,
  /*
   * We need to rename the prop to be `CapitalCase` so that JSX will render it as
   * a component properly.
   */
  nodeComponent: i = BJ,
  onClick: s
}) {
  const l = mt(VJ, en), c = em(t), u = em(e), d = em(n), f = typeof window > "u" || window.chrome ? "crispEdges" : "geometricPrecision";
  return O(Jn, { children: l.map((p) => (
    /*
     * The split of responsibilities between MiniMapNodes and
     * NodeComponentWrapper may appear weird. However, it’s designed to
     * minimize the cost of updates when individual nodes change.
     *
     * For more details, see a similar commit in `NodeRenderer/index.tsx`.
     */
    O(zJ, { id: p, nodeColorFunc: c, nodeStrokeColorFunc: u, nodeClassNameFunc: d, nodeBorderRadius: o, nodeStrokeWidth: r, NodeComponent: i, onClick: s, shapeRendering: f }, p)
  )) });
}
function jJ({ id: e, nodeColorFunc: t, nodeStrokeColorFunc: n, nodeClassNameFunc: o, nodeBorderRadius: r, nodeStrokeWidth: i, shapeRendering: s, NodeComponent: l, onClick: c }) {
  const { node: u, x: d, y: f, width: p, height: h } = mt((g) => {
    const { internals: m } = g.nodeLookup.get(e), y = m.userNode, { x: b, y: T } = m.positionAbsolute, { width: v, height: w } = Jr(y);
    return {
      node: y,
      x: b,
      y: T,
      width: v,
      height: w
    };
  }, en);
  return !u || u.hidden || !ak(u) ? null : O(l, { x: d, y: f, width: p, height: h, style: u.style, selected: !!u.selected, className: o(u), color: t(u), borderRadius: r, strokeColor: n(u), strokeWidth: i, shapeRendering: s, onClick: c, id: u.id });
}
const zJ = Pe(jJ);
var HJ = Pe(FJ);
const WJ = 200, UJ = 150, qJ = (e) => !e.hidden, KJ = (e) => {
  const t = {
    x: -e.transform[0] / e.transform[2],
    y: -e.transform[1] / e.transform[2],
    width: e.width / e.transform[2],
    height: e.height / e.transform[2]
  };
  return {
    viewBB: t,
    boundingRect: e.nodeLookup.size > 0 ? sk(tu(e.nodeLookup, { filter: qJ }), t) : t,
    rfId: e.rfId,
    panZoom: e.panZoom,
    translateExtent: e.translateExtent,
    flowWidth: e.width,
    flowHeight: e.height
  };
}, GJ = "react-flow__minimap-desc";
function a$({
  style: e,
  className: t,
  nodeStrokeColor: n,
  nodeColor: o,
  nodeClassName: r = "",
  nodeBorderRadius: i = 5,
  nodeStrokeWidth: s,
  /*
   * We need to rename the prop to be `CapitalCase` so that JSX will render it as
   * a component properly.
   */
  nodeComponent: l,
  bgColor: c,
  maskColor: u,
  maskStrokeColor: d,
  maskStrokeWidth: f,
  position: p = "bottom-right",
  onClick: h,
  onNodeClick: g,
  pannable: m = !1,
  zoomable: y = !1,
  ariaLabel: b = "React Flow mini map",
  inversePan: T,
  zoomStep: v = 10,
  offsetScale: w = 5
}) {
  const S = Xt(), C = qe(null), { boundingRect: E, viewBB: P, rfId: M, panZoom: x, translateExtent: I, flowWidth: k, flowHeight: _ } = mt(KJ, en), R = (e == null ? void 0 : e.width) ?? WJ, A = (e == null ? void 0 : e.height) ?? UJ, N = E.width / R, L = E.height / A, V = Math.max(N, L), D = V * R, B = V * A, F = w * V, U = E.x - (D - E.width) / 2 - F, q = E.y - (B - E.height) / 2 - F, G = D + F * 2, K = B + F * 2, te = `${GJ}-${M}`, ne = qe(0), W = qe();
  ne.current = V, et(() => {
    if (C.current && x)
      return W.current = lZ({
        domNode: C.current,
        panZoom: x,
        getTransform: () => S.getState().transform,
        getViewScale: () => ne.current
      }), () => {
        var re;
        (re = W.current) == null || re.destroy();
      };
  }, [x]), et(() => {
    var re;
    (re = W.current) == null || re.update({
      translateExtent: I,
      width: k,
      height: _,
      inversePan: T,
      pannable: m,
      zoomStep: v,
      zoomable: y
    });
  }, [m, y, T, v, I, k, _]);
  const ee = h ? (re) => {
    var ue;
    const [z, de] = ((ue = W.current) == null ? void 0 : ue.pointer(re)) || [0, 0];
    h(re, { x: z, y: de });
  } : void 0, Y = g ? Be((re, z) => {
    const de = S.getState().nodeLookup.get(z).internals.userNode;
    g(re, de);
  }, []) : void 0;
  return O(ou, { position: p, style: {
    ...e,
    "--xy-minimap-background-color-props": typeof c == "string" ? c : void 0,
    "--xy-minimap-mask-background-color-props": typeof u == "string" ? u : void 0,
    "--xy-minimap-mask-stroke-color-props": typeof d == "string" ? d : void 0,
    "--xy-minimap-mask-stroke-width-props": typeof f == "number" ? f * V : void 0,
    "--xy-minimap-node-background-color-props": typeof o == "string" ? o : void 0,
    "--xy-minimap-node-stroke-color-props": typeof n == "string" ? n : void 0,
    "--xy-minimap-node-stroke-width-props": typeof s == "number" ? s : void 0
  }, className: xn(["react-flow__minimap", t]), "data-testid": "rf__minimap", children: Se("svg", { width: R, height: A, viewBox: `${U} ${q} ${G} ${K}`, className: "react-flow__minimap-svg", role: "img", "aria-labelledby": te, ref: C, onClick: ee, children: [b && O("title", { id: te, children: b }), O(HJ, { onClick: Y, nodeColor: o, nodeStrokeColor: n, nodeBorderRadius: i, nodeClassName: r, nodeStrokeWidth: s, nodeComponent: l }), O("path", { className: "react-flow__minimap-mask", d: `M${U - F},${q - F}h${G + F * 2}v${K + F * 2}h${-G - F * 2}z
        M${P.x},${P.y}h${P.width}v${P.height}h${-P.width}z`, fillRule: "evenodd", pointerEvents: "none" })] }) });
}
a$.displayName = "MiniMap";
const YJ = Pe(a$);
function XJ({ nodeId: e, position: t, variant: n = Vl.Handle, className: o, style: r = {}, children: i, color: s, minWidth: l = 10, minHeight: c = 10, maxWidth: u = Number.MAX_VALUE, maxHeight: d = Number.MAX_VALUE, keepAspectRatio: f = !1, resizeDirection: p, shouldResize: h, onResizeStart: g, onResize: m, onResizeEnd: y }) {
  const b = Bk(), T = typeof e == "string" ? e : b, v = Xt(), w = qe(null), S = n === Vl.Line ? "right" : "bottom-right", C = t ?? S, E = qe(null);
  et(() => {
    if (!(!w.current || !T))
      return E.current || (E.current = TZ({
        domNode: w.current,
        nodeId: T,
        getStoreItems: () => {
          const { nodeLookup: I, transform: k, snapGrid: _, snapToGrid: R, nodeOrigin: A, domNode: N } = v.getState();
          return {
            nodeLookup: I,
            transform: k,
            snapGrid: _,
            snapToGrid: R,
            nodeOrigin: A,
            paneDomNode: N
          };
        },
        onChange: (I, k) => {
          const { triggerNodeChanges: _, nodeLookup: R, parentLookup: A, nodeOrigin: N } = v.getState(), L = [], V = { x: I.x, y: I.y }, D = R.get(T);
          if (D && D.expandParent && D.parentId) {
            const B = D.origin ?? N, F = I.width ?? D.measured.width ?? 0, U = I.height ?? D.measured.height ?? 0, q = {
              id: D.id,
              parentId: D.parentId,
              rect: {
                width: F,
                height: U,
                ...lk({
                  x: I.x ?? D.position.x,
                  y: I.y ?? D.position.y
                }, { width: F, height: U }, D.parentId, R, B)
              }
            }, G = tv([q], R, A, N);
            L.push(...G), V.x = I.x ? Math.max(B[0] * F, I.x) : void 0, V.y = I.y ? Math.max(B[1] * U, I.y) : void 0;
          }
          if (V.x !== void 0 && V.y !== void 0) {
            const B = {
              id: T,
              type: "position",
              position: { ...V }
            };
            L.push(B);
          }
          if (I.width !== void 0 && I.height !== void 0) {
            const F = {
              id: T,
              type: "dimensions",
              resizing: !0,
              setAttributes: p ? p === "horizontal" ? "width" : "height" : !0,
              dimensions: {
                width: I.width,
                height: I.height
              }
            };
            L.push(F);
          }
          for (const B of k) {
            const F = {
              ...B,
              type: "position"
            };
            L.push(F);
          }
          _(L);
        },
        onEnd: ({ width: I, height: k }) => {
          const _ = {
            id: T,
            type: "dimensions",
            resizing: !1,
            dimensions: {
              width: I,
              height: k
            }
          };
          v.getState().triggerNodeChanges([_]);
        }
      })), E.current.update({
        controlPosition: C,
        boundaries: {
          minWidth: l,
          minHeight: c,
          maxWidth: u,
          maxHeight: d
        },
        keepAspectRatio: f,
        resizeDirection: p,
        onResizeStart: g,
        onResize: m,
        onResizeEnd: y,
        shouldResize: h
      }), () => {
        var I;
        (I = E.current) == null || I.destroy();
      };
  }, [
    C,
    l,
    c,
    u,
    d,
    f,
    g,
    m,
    y,
    h
  ]);
  const P = C.split("-"), M = n === Vl.Line ? "borderColor" : "backgroundColor", x = s ? { ...r, [M]: s } : r;
  return O("div", { className: xn(["react-flow__resize-control", "nodrag", ...P, n, o]), ref: w, style: x, children: i });
}
const ZJ = Pe(XJ);
var Si = /* @__PURE__ */ ((e) => (e.Base = "Base", e.Group = "Group", e))(Si || {}), af = /* @__PURE__ */ ((e) => (e.Base = "Base", e.DeleteLabel = "DeleteLabel", e))(af || {}), l$ = ((e) => (e[e.Arrow = wa.Arrow] = "Arrow", e[e.ArrowClosed = wa.ArrowClosed] = "ArrowClosed", e))(l$ || {}), c$ = ((e) => (e[e.Bezier = wo.Bezier] = "Bezier", e[e.SimpleBezier = wo.SimpleBezier] = "SimpleBezier", e[e.Step = wo.Step] = "Step", e[e.SmoothStep = wo.SmoothStep] = "SmoothStep", e[e.Straight = wo.Straight] = "Straight", e))(c$ || {});
const u$ = Li()(
  vs(
    (e) => ({
      logger: (t, n) => console.log(`${t}: ${n}`),
      hotkeys: {
        enabled: !1,
        keys: {
          copy: "mod+c",
          paste: "mod+v",
          delete: "backspace",
          cut: "mod+x",
          undo: "mod+z",
          redo: "mod+shift+z"
        }
      },
      canvas: {
        isGridLayout: !1,
        gridLayoutGap: [20, 20],
        minZoom: 0.5,
        // 50%
        maxZoom: 2,
        // 200%
        zoomDuration: 200,
        zoomStep: 1
      },
      styles: {
        nodeWidth: 250,
        nodeMinHeight: 100,
        nodeMaxHeight: "auto",
        edgeWidth: 2,
        edgeType: af.DeleteLabel,
        edgeEndMarkerType: l$.ArrowClosed,
        connectionLineType: c$.Bezier,
        connectionPosition: {
          source: "right",
          target: "left"
        }
      },
      minimap: {
        enabled: !0,
        position: "bottom-left",
        width: 160
      },
      undoRedo: {
        enabled: !0,
        position: "bottom-left",
        tooltips: { undo: "Undo", redo: "Redo", history: "Undo/Redo History" },
        maxHistoryLength: 10
      },
      setHotkeys: (t) => e((n) => ({ hotkeys: { ...n.hotkeys, ...t } })),
      setCanvas: (t) => e((n) => ({ canvas: { ...n.canvas, ...t } })),
      setStyles: (t) => e((n) => ({ styles: { ...n.styles, ...t } })),
      setMinimap: (t) => e((n) => ({ minimap: { ...n.minimap, ...t } })),
      setUndoRedo: (t) => e((n) => ({ undoRedo: { ...n.undoRedo, ...t } }))
    }),
    {
      name: "VENOMOUS_UI__WORKFLOW_CONFIGS",
      store: "VENOMOUS_UI__WORKFLOW_CONFIGS"
    }
  )
);
function QJ() {
  return u$.getState();
}
function Kn() {
  return Yr(u$);
}
function to() {
  return kp();
}
function JJ() {
  const e = Kn(), { zoomIn: t, zoomOut: n, zoomTo: o, fitView: r } = to(), i = OJ(), s = Ge(() => i, [i]), l = Be(async () => {
    await t({ duration: e.canvas.zoomDuration });
  }, [t, e.canvas.zoomDuration]), c = Be(async () => {
    await n({ duration: e.canvas.zoomDuration });
  }, [n, e.canvas.zoomDuration]), u = Be(
    async (f, p = !0) => {
      await o(f, {
        duration: p ? 0 : e.canvas.zoomDuration
      });
    },
    [o, e.canvas.zoomDuration]
  ), d = Be(
    async (f = !0) => {
      await r({ duration: f ? 0 : e.canvas.zoomDuration });
    },
    [r, e.canvas.zoomDuration]
  );
  return {
    currentViewport: s,
    increaseZoom: l,
    decreaseZoom: c,
    setZoom: u,
    autoView: d
  };
}
function eee(e, t, { signal: n, edges: o } = {}) {
  let r, i = null;
  const s = o != null && o.includes("leading"), l = o == null || o.includes("trailing"), c = () => {
    i !== null && (e.apply(r, i), r = void 0, i = null);
  }, u = () => {
    l && c(), h();
  };
  let d = null;
  const f = () => {
    d != null && clearTimeout(d), d = setTimeout(() => {
      d = null, u();
    }, t);
  }, p = () => {
    d !== null && (clearTimeout(d), d = null);
  }, h = () => {
    p(), r = void 0, i = null;
  }, g = () => {
    p(), c();
  }, m = function(...y) {
    if (n != null && n.aborted)
      return;
    r = this, i = y;
    const b = d == null;
    f(), s && b && c();
  };
  return m.schedule = f, m.cancel = h, m.flush = g, n == null || n.addEventListener("abort", h, { once: !0 }), m;
}
function tee() {
}
function Q1(e) {
  return Object.getOwnPropertySymbols(e).filter((t) => Object.prototype.propertyIsEnumerable.call(e, t));
}
function J1(e) {
  return e == null ? e === void 0 ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(e);
}
const nee = "[object RegExp]", oee = "[object String]", ree = "[object Number]", iee = "[object Boolean]", eT = "[object Arguments]", see = "[object Symbol]", aee = "[object Date]", lee = "[object Map]", cee = "[object Set]", uee = "[object Array]", dee = "[object Function]", fee = "[object ArrayBuffer]", tm = "[object Object]", pee = "[object Error]", hee = "[object DataView]", mee = "[object Uint8Array]", gee = "[object Uint8ClampedArray]", yee = "[object Uint16Array]", bee = "[object Uint32Array]", vee = "[object BigUint64Array]", xee = "[object Int8Array]", wee = "[object Int16Array]", See = "[object Int32Array]", Tee = "[object BigInt64Array]", Cee = "[object Float32Array]", Eee = "[object Float64Array]";
function tT(e) {
  if (!e || typeof e != "object")
    return !1;
  const t = Object.getPrototypeOf(e);
  return t === null || t === Object.prototype || Object.getPrototypeOf(t) === null ? Object.prototype.toString.call(e) === "[object Object]" : !1;
}
function Oee(e, t) {
  return e === t || Number.isNaN(e) && Number.isNaN(t);
}
function Pee(e, t, n) {
  return vl(e, t, void 0, void 0, void 0, void 0, n);
}
function vl(e, t, n, o, r, i, s) {
  const l = s(e, t, n, o, r, i);
  if (l !== void 0)
    return l;
  if (typeof e == typeof t)
    switch (typeof e) {
      case "bigint":
      case "string":
      case "boolean":
      case "symbol":
      case "undefined":
        return e === t;
      case "number":
        return e === t || Object.is(e, t);
      case "function":
        return e === t;
      case "object":
        return Fl(e, t, i, s);
    }
  return Fl(e, t, i, s);
}
function Fl(e, t, n, o) {
  if (Object.is(e, t))
    return !0;
  let r = J1(e), i = J1(t);
  if (r === eT && (r = tm), i === eT && (i = tm), r !== i)
    return !1;
  switch (r) {
    case oee:
      return e.toString() === t.toString();
    case ree: {
      const c = e.valueOf(), u = t.valueOf();
      return Oee(c, u);
    }
    case iee:
    case aee:
    case see:
      return Object.is(e.valueOf(), t.valueOf());
    case nee:
      return e.source === t.source && e.flags === t.flags;
    case dee:
      return e === t;
  }
  n = n ?? /* @__PURE__ */ new Map();
  const s = n.get(e), l = n.get(t);
  if (s != null && l != null)
    return s === t;
  n.set(e, t), n.set(t, e);
  try {
    switch (r) {
      case lee: {
        if (e.size !== t.size)
          return !1;
        for (const [c, u] of e.entries())
          if (!t.has(c) || !vl(u, t.get(c), c, e, t, n, o))
            return !1;
        return !0;
      }
      case cee: {
        if (e.size !== t.size)
          return !1;
        const c = Array.from(e.values()), u = Array.from(t.values());
        for (let d = 0; d < c.length; d++) {
          const f = c[d], p = u.findIndex((h) => vl(f, h, void 0, e, t, n, o));
          if (p === -1)
            return !1;
          u.splice(p, 1);
        }
        return !0;
      }
      case uee:
      case mee:
      case gee:
      case yee:
      case bee:
      case vee:
      case xee:
      case wee:
      case See:
      case Tee:
      case Cee:
      case Eee: {
        if (typeof Buffer < "u" && Buffer.isBuffer(e) !== Buffer.isBuffer(t) || e.length !== t.length)
          return !1;
        for (let c = 0; c < e.length; c++)
          if (!vl(e[c], t[c], c, e, t, n, o))
            return !1;
        return !0;
      }
      case fee:
        return e.byteLength !== t.byteLength ? !1 : Fl(new Uint8Array(e), new Uint8Array(t), n, o);
      case hee:
        return e.byteLength !== t.byteLength || e.byteOffset !== t.byteOffset ? !1 : Fl(new Uint8Array(e), new Uint8Array(t), n, o);
      case pee:
        return e.name === t.name && e.message === t.message;
      case tm: {
        if (!(Fl(e.constructor, t.constructor, n, o) || tT(e) && tT(t)))
          return !1;
        const u = [...Object.keys(e), ...Q1(e)], d = [...Object.keys(t), ...Q1(t)];
        if (u.length !== d.length)
          return !1;
        for (let f = 0; f < u.length; f++) {
          const p = u[f], h = e[p];
          if (!Object.hasOwn(t, p))
            return !1;
          const g = t[p];
          if (!vl(h, g, p, e, t, n, o))
            return !1;
        }
        return !0;
      }
      default:
        return !1;
    }
  } finally {
    n.delete(e), n.delete(t);
  }
}
function ov(e, t) {
  return Pee(e, t, tee);
}
var nT = (e, t, n) => (r, i) => ({
  pastStates: (n == null ? void 0 : n.pastStates) || [],
  futureStates: (n == null ? void 0 : n.futureStates) || [],
  undo: (s = 1) => {
    var l, c;
    if (i().pastStates.length) {
      const u = ((l = n == null ? void 0 : n.partialize) == null ? void 0 : l.call(n, t())) || t(), d = i().pastStates.splice(-s, s), f = d.shift();
      e(f), r({
        pastStates: i().pastStates,
        futureStates: i().futureStates.concat(
          ((c = n == null ? void 0 : n.diff) == null ? void 0 : c.call(n, u, f)) || u,
          d.reverse()
        )
      });
    }
  },
  redo: (s = 1) => {
    var l, c;
    if (i().futureStates.length) {
      const u = ((l = n == null ? void 0 : n.partialize) == null ? void 0 : l.call(n, t())) || t(), d = i().futureStates.splice(-s, s), f = d.shift();
      e(f), r({
        pastStates: i().pastStates.concat(
          ((c = n == null ? void 0 : n.diff) == null ? void 0 : c.call(n, u, f)) || u,
          d.reverse()
        ),
        futureStates: i().futureStates
      });
    }
  },
  clear: () => r({ pastStates: [], futureStates: [] }),
  isTracking: !0,
  pause: () => r({ isTracking: !1 }),
  resume: () => r({ isTracking: !0 }),
  setOnSave: (s) => r({ _onSave: s }),
  // Internal properties
  _onSave: n == null ? void 0 : n.onSave,
  _handleSet: (s, l, c, u) => {
    var d, f;
    n != null && n.limit && i().pastStates.length >= (n == null ? void 0 : n.limit) && i().pastStates.shift(), (f = (d = i())._onSave) == null || f.call(d, s, c), r({
      pastStates: i().pastStates.concat(u || s),
      futureStates: []
    });
  }
}), Ree = (e, t) => (o, r, i) => {
  var u, d;
  i.temporal = uI(
    ((u = t == null ? void 0 : t.wrapTemporal) == null ? void 0 : u.call(t, nT(o, r, t))) || nT(o, r, t)
  );
  const s = ((d = t == null ? void 0 : t.handleSet) == null ? void 0 : d.call(
    t,
    i.temporal.getState()._handleSet
  )) || i.temporal.getState()._handleSet, l = (f) => {
    var g, m, y;
    if (!i.temporal.getState().isTracking) return;
    const p = ((g = t == null ? void 0 : t.partialize) == null ? void 0 : g.call(t, r())) || r(), h = (m = t == null ? void 0 : t.diff) == null ? void 0 : m.call(t, f, p);
    // If the user has provided a diff function but nothing has been changed, deltaState will be null
    h === null || // If the user has provided an equality function, use it
    (y = t == null ? void 0 : t.equality) != null && y.call(t, f, p) || s(
      f,
      void 0,
      p,
      h
    );
  }, c = i.setState;
  return i.setState = (...f) => {
    var h;
    const p = ((h = t == null ? void 0 : t.partialize) == null ? void 0 : h.call(t, r())) || r();
    c(...f), l(p);
  }, e(
    // Modify the set function to call the userlandSet function
    (...f) => {
      var h;
      const p = ((h = t == null ? void 0 : t.partialize) == null ? void 0 : h.call(t, r())) || r();
      o(...f), l(p);
    },
    r,
    i
  );
}, Bn = /* @__PURE__ */ ((e) => (e.Init = "Init", e.Reset = "Reset", e.CanvasBlankClicked = "CanvasBlankClicked", e.SaveVersionChanged = "SaveVersionChanged", e.ElementsFileUploaded = "ElementsFileUploaded", e.ElementsFileDownloaded = "ElementsFileDownloaded", e.ElementsSelected = "ElementsSelected", e.ElementsDeleted = "ElementsDeleted", e.ElementsCopied = "ElementsCopied", e.ElementsPasted = "ElementsPasted", e.ElementsCut = "ElementsCut", e.NodeCreated = "NodeCreated", e.NodeDeleted = "NodeDeleted", e.NodesDeleted = "NodesDeleted", e.NodeMoved = "NodeMoved", e.NodeResized = "NodeResized", e.EdgeDeleted = "EdgeDeleted", e.EdgesDeleted = "EdgesDeleted", e.Connected = "Connected", e.ReConnected = "ReConnected", e))(Bn || {});
const oT = {
  action: null,
  timestamp: Date.now(),
  elements: { nodes: [], edges: [] }
}, Ea = Li()(
  Ree(
    vs(
      (e) => ({
        actionsHistory: oT,
        updateActionsHistory: (t) => e({ actionsHistory: t }),
        clearActionsHistory: () => e({ actionsHistory: oT })
      }),
      {
        name: "VENOMOUS_UI__WORKFLOW_ACTIONS_HISTORY",
        store: "VENOMOUS_UI__WORKFLOW_ACTIONS_HISTORY"
      }
    ),
    {
      limit: QJ().undoRedo.maxHistoryLength,
      pastStates: [],
      futureStates: [],
      equality: (e, t) => ov(e, t)
    }
  )
);
function Iee() {
  return et(() => () => {
    Ea.getState().clearActionsHistory();
  }, []), null;
}
function kee() {
  const e = Ea(), t = Yr(Ea.temporal), n = Ge(() => e.actionsHistory, [e.actionsHistory]), o = Ge(
    () => t.pastStates.map(({ actionsHistory: i }) => ({ ...i })),
    [t.pastStates]
  ), r = Ge(
    () => t.futureStates.map(({ actionsHistory: i }) => ({ ...i })),
    [t.pastStates]
  );
  return {
    currentStates: n,
    pastStates: o,
    futureStates: r
  };
}
function d$() {
  const e = Yr(Ea), t = Yr(Ea.temporal), n = Be(() => t.undo(), [t.undo]), o = Be(() => t.redo(), [t.redo]), r = t.pastStates.length > 0 && e.actionsHistory.action !== "Init", i = t.futureStates.length > 0;
  return {
    undo: n,
    redo: o,
    canUndo: r,
    canRedo: i
  };
}
function xs() {
  const { getNodes: e, getEdges: t } = to(), n = Yr(Ea), o = qe(
    eee((i) => {
      n.updateActionsHistory({
        action: i.action,
        timestamp: Date.now(),
        elements: {
          nodes: e().map((s) => ({
            ...s,
            selected: i.forceUnselected ? !1 : s.selected
          })),
          edges: t().map((s) => ({
            ...s,
            selected: i.forceUnselected ? !1 : s.selected
          }))
        }
      });
    }, 200)
  );
  return {
    updateActionsHistory: Be((i) => {
      switch (i) {
        case "Init":
        case "Reset":
        case "CanvasBlankClicked":
        case "SaveVersionChanged":
        case "ElementsFileUploaded":
        case "ElementsFileDownloaded":
        case "ElementsSelected":
        case "ElementsDeleted":
        case "ElementsCopied":
        case "ElementsPasted":
        case "ElementsCut":
        case "NodeCreated":
        case "NodeDeleted":
        case "NodeResized":
        case "EdgeDeleted":
        case "Connected":
        case "ReConnected":
          o.current({ action: i, forceUnselected: !0 });
          break;
        case "NodeMoved":
          o.current({ action: i, forceUnselected: !1 });
          break;
      }
    }, [])
  };
}
function $ee() {
  const { getNodes: e, getEdges: t, setEdges: n } = to(), { updateActionsHistory: o } = xs(), r = qe(null), i = Be(
    (c) => {
      const u = r.current;
      if (u && ov(u.connection, c))
        return u.result;
      const d = e(), f = t(), p = Nee(c, { nodes: d, edges: f });
      return r.current = {
        connection: c,
        result: p
      }, p;
    },
    [e, t]
  ), s = Be(
    (c) => {
      const u = t().filter(({ source: d, target: f, sourceHandle: p }) => {
        const h = f !== c.target, m = d === c.source && h;
        if (!c.sourceHandle)
          return m;
        const y = p === c.sourceHandle;
        return m && y;
      });
      if (!u.length) {
        n((d) => mk(c, d)), o(Bn.Connected);
        return;
      }
      if (!c.sourceHandle) {
        n(
          (d) => d.filter(
            (f) => f.source !== u[0].source || f.target !== u[0].target
          )
        ), o(Bn.ReConnected);
        return;
      }
      if (c.sourceHandle) {
        n((d) => (u.reduce((f, p) => (d = d.filter((h) => h.id !== p.id), d), d), d)), o(Bn.ReConnected);
        return;
      }
    },
    [n, o]
  ), l = Be((c, u) => {
    u.isValid && r.current && (r.current = {
      ...r.current,
      result: !0
    });
  }, []);
  return {
    isValidConnection: i,
    onConnect: s,
    onConnectEnd: l
  };
}
function Nee(e, { nodes: t, edges: n }) {
  function o(i, s = /* @__PURE__ */ new Set()) {
    if (!i || s.has(i.id)) return !1;
    s.add(i == null ? void 0 : i.id);
    for (const l of kX(i, t, n))
      if (l.id === e.source || o(l, s)) return !0;
  }
  const r = t.find((i) => i.id === e.target);
  return (r == null ? void 0 : r.id) === e.source ? !1 : !o(r);
}
function Mee() {
  const { setEdges: e } = to(), { updateActionsHistory: t } = xs(), n = qe(!0), o = Be(() => {
    n.current = !1;
  }, []), r = Be((s, l) => {
    n.current = !0, e((c) => HX(s, l, c));
  }, []), i = Be(
    (s, l) => {
      n.current || (e((c) => c.filter((u) => u.id !== l.id)), t(Bn.ReConnected)), n.current = !0;
    },
    [t]
  );
  return {
    onReconnect: r,
    onReconnectStart: o,
    onReconnectEnd: i
  };
}
const Aee = Li()(
  vs(
    (e) => ({
      nodes: [],
      edges: [],
      setNodes: (t) => e({ nodes: t }),
      setEdges: (t) => e({ edges: t }),
      clear: () => e({ nodes: [], edges: [] })
    }),
    {
      name: "VENOMOUS_UI__WORKFLOW_COPIED_ELEMENTS",
      store: "VENOMOUS_UI__WORKFLOW_COPIED_ELEMENTS"
    }
  )
);
function _ee() {
  return Yr(Aee);
}
function _te({
  id: e = `${Date.now()}`,
  type: t,
  data: n,
  ...o
}) {
  nte({
    id: e,
    type: t,
    data: {
      isMultipleSourceHandler: (n == null ? void 0 : n.isMultipleSourceHandler) || !1,
      isMultipleTargetHandler: (n == null ? void 0 : n.isMultipleSourceHandler) || !1,
      isProtected: !1,
      isInValid: !1,
      isFocus: !1,
      formValue: (n == null ? void 0 : n.formValue) || null,
      ...n
    },
    ...o
  });
}
function Dte(e, t) {
  return e.filter(
    (n) => n.source === t.source || n.target === t.target || n.sourceHandle === t.sourceHandle || n.targetHandle === t.targetHandle
  );
}
function Dee(e, t) {
  return e.filter((n) => n.source === t.id || n.target === t.id);
}
function rv() {
  const e = Kn(), { getNodes: t, getEdges: n, setNodes: o, setEdges: r } = to(), { updateActionsHistory: i } = xs(), s = Be(
    (f) => {
      r((p) => p.filter((h) => h.id !== f)), i(Bn.EdgeDeleted), e.logger("error", Bn.EdgeDeleted);
    },
    [r, i, e.logger]
  ), l = Be(() => {
    o((f) => f.filter((p) => !p.selected));
  }, [o]), c = Be(() => {
    r((f) => f.filter((p) => !p.selected));
  }, [r]), u = Be(() => {
    const f = t().filter((h) => h.selected), p = [];
    f.forEach((h) => {
      const g = Dee(n(), h);
      p.push(...g);
    }), r((h) => h.filter((g) => !p.find((m) => m.id === g.id)));
  }, [n, t, r]), d = Be(() => {
    const f = t().filter((m) => m.selected), p = n().filter((m) => m.selected), h = f.length > 0, g = p.length > 0;
    if (!(!h && !g)) {
      if (h && (l(), u()), g && c(), h && !g) {
        i(
          f.length === 1 ? Bn.NodeDeleted : Bn.NodesDeleted
        );
        return;
      }
      if (g && !h) {
        i(
          p.length === 1 ? Bn.EdgeDeleted : Bn.EdgesDeleted
        );
        return;
      }
      if (h && g) {
        i(Bn.ElementsDeleted);
        return;
      }
    }
  }, [
    t,
    n,
    l,
    c,
    u,
    i
  ]);
  return {
    deleteEdge: s,
    deleteSelectedElements: d
  };
}
function Lee() {
  const { getNodes: e, getEdges: t } = to();
  return Ge(() => {
    const o = e(), r = t();
    return {
      nodes: o.filter((i) => i.selected),
      edges: r.filter((i) => i.selected)
    };
  }, [e, t]);
}
function Bee() {
  const e = Kn(), { getNodes: t, getEdges: n, setNodes: o, setEdges: r } = to(), { updateActionsHistory: i } = xs(), { deleteSelectedElements: s } = rv(), l = _ee(), c = Lee(), u = qe(0), d = Be(() => {
    u.current = 0, l.clear();
    const h = c.nodes, g = c.edges;
    h.length && l.setNodes(h), g.length && l.setEdges(g);
  }, [t, n, o, r, l, c]), f = Be(() => {
    const h = l.nodes, g = l.edges;
    if (h.length) {
      o((T) => T.map((v) => ({ ...v, selected: !1 })));
      const m = h.map((T) => ({
        ...T,
        id: `${T.id}-copied-${u.current + 1}`,
        position: {
          x: T.position.x + e.styles.nodeWidth / 2 * (u.current + 1),
          y: T.position.y - e.styles.nodeMinHeight / 2 * (u.current + 1)
        },
        selected: !0,
        dragging: !1,
        data: { ...T.data }
      })), y = m.filter((T) => T.type === Si.Group), b = m.filter((T) => T.type !== Si.Group);
      o((T) => [...y, ...T, ...b]);
    }
    if (g.length) {
      r((y) => y.map((b) => ({ ...b, selected: !1 })));
      const m = g.map((y) => ({
        ...y,
        id: `${y.id}-copied-${u.current + 1}`,
        selected: !0,
        source: `${y.source}-copied-${u.current + 1}`,
        target: `${y.target}-copied-${u.current + 1}`,
        zIndex: 1
      }));
      r((y) => y.concat(m));
    }
    (h.length || g.length) && (u.current += 1, i(Bn.ElementsPasted));
  }, [
    t,
    n,
    o,
    r,
    l,
    c,
    e,
    i
  ]), p = Be(() => {
    d(), s();
  }, [d, s]);
  return {
    copySelectedElements: d,
    pastCopiedElement: f,
    cutSelectedElements: p
  };
}
function Lte() {
  const { setNodes: e, setEdges: t } = to(), n = Be(() => {
    e(
      (r) => r.map((i) => ({
        ...i,
        draggable: !1,
        selectable: !1,
        connectable: !1,
        deletable: !1
      }))
    ), t(
      (r) => r.map((i) => ({
        ...i,
        selectable: !1,
        reconnectable: !1,
        focusable: !1,
        editable: !1,
        deletable: !1
      }))
    );
  }, [e, t]), o = Be(() => {
    e(
      (r) => r.map((i) => ({
        ...i,
        draggable: !0,
        selectable: !0,
        connectable: !0,
        deletable: !0
      }))
    ), t(
      (r) => r.map((i) => ({
        ...i,
        selectable: !0,
        reconnectable: !0,
        focusable: !0,
        editable: !0,
        deletable: !0
      }))
    );
  }, []);
  return {
    lockElements: n,
    unlockElements: o
  };
}
const f$ = ["shift", "alt", "meta", "mod", "ctrl", "control"], Vee = {
  esc: "escape",
  return: "enter",
  left: "arrowleft",
  right: "arrowright",
  up: "arrowup",
  down: "arrowdown",
  ShiftLeft: "shift",
  ShiftRight: "shift",
  AltLeft: "alt",
  AltRight: "alt",
  MetaLeft: "meta",
  MetaRight: "meta",
  OSLeft: "meta",
  OSRight: "meta",
  ControlLeft: "ctrl",
  ControlRight: "ctrl"
};
function hi(e) {
  return (Vee[e.trim()] || e.trim()).toLowerCase().replace(/key|digit|numpad/, "");
}
function p$(e) {
  return f$.includes(e);
}
function nm(e, t = ",") {
  return e.toLowerCase().split(t);
}
function om(e, t = "+", n = ">", o = !1, r) {
  let i = [], s = !1;
  e.includes(n) ? (s = !0, i = e.toLocaleLowerCase().split(n).map((u) => hi(u))) : i = e.toLocaleLowerCase().split(t).map((u) => hi(u));
  const l = {
    alt: i.includes("alt"),
    ctrl: i.includes("ctrl") || i.includes("control"),
    shift: i.includes("shift"),
    meta: i.includes("meta"),
    mod: i.includes("mod"),
    useKey: o
  }, c = i.filter((u) => !f$.includes(u));
  return {
    ...l,
    keys: c,
    description: r,
    isSequence: s
  };
}
typeof document < "u" && (document.addEventListener("keydown", (e) => {
  e.code !== void 0 && h$([hi(e.code)]);
}), document.addEventListener("keyup", (e) => {
  e.code !== void 0 && m$([hi(e.code)]);
})), typeof window < "u" && (window.addEventListener("blur", () => {
  jr.clear();
}), window.addEventListener("contextmenu", () => {
  setTimeout(() => {
    jr.clear();
  }, 0);
}));
const jr = /* @__PURE__ */ new Set();
function iv(e) {
  return Array.isArray(e);
}
function Fee(e, t = ",") {
  return (iv(e) ? e : e.split(t)).every((n) => jr.has(n.trim().toLowerCase()));
}
function h$(e) {
  const t = Array.isArray(e) ? e : [e];
  jr.has("meta") && jr.forEach((n) => !p$(n) && jr.delete(n.toLowerCase())), t.forEach((n) => jr.add(n.toLowerCase()));
}
function m$(e) {
  const t = Array.isArray(e) ? e : [e];
  e === "meta" ? jr.clear() : t.forEach((n) => jr.delete(n.toLowerCase()));
}
function jee(e, t, n) {
  (typeof n == "function" && n(e, t) || n === !0) && e.preventDefault();
}
function zee(e, t, n) {
  return typeof n == "function" ? n(e, t) : n === !0 || n === void 0;
}
function Hee(e) {
  return g$(e, ["input", "textarea", "select"]);
}
function g$(e, t = !1) {
  const { target: n, composed: o } = e;
  let r;
  return Wee(n) && o ? r = e.composedPath()[0] && e.composedPath()[0].tagName : r = n && n.tagName, iv(t) ? !!(r && t && t.some((i) => i.toLowerCase() === r.toLowerCase())) : !!(r && t && t);
}
function Wee(e) {
  return !!e.tagName && !e.tagName.startsWith("-") && e.tagName.includes("-");
}
function Uee(e, t) {
  return e.length === 0 && t ? (console.warn(
    'A hotkey has the "scopes" option set, however no active scopes were found. If you want to use the global scopes feature, you need to wrap your app in a <HotkeysProvider>'
  ), !0) : t ? e.some((n) => t.includes(n)) || e.includes("*") : !0;
}
const qee = (e, t, n = !1) => {
  const { alt: o, meta: r, mod: i, shift: s, ctrl: l, keys: c, useKey: u } = t, { code: d, key: f, ctrlKey: p, metaKey: h, shiftKey: g, altKey: m } = e, y = hi(d);
  if (u && (c == null ? void 0 : c.length) === 1 && c.includes(f))
    return !0;
  if (!(c != null && c.includes(y)) && !["ctrl", "control", "unknown", "meta", "alt", "shift", "os"].includes(y))
    return !1;
  if (!n) {
    if (o !== m && y !== "alt" || s !== g && y !== "shift")
      return !1;
    if (i) {
      if (!h && !p)
        return !1;
    } else if (r !== h && y !== "meta" && y !== "os" || l !== p && y !== "ctrl" && y !== "control")
      return !1;
  }
  return c && c.length === 1 && c.includes(y) ? !0 : c ? Fee(c) : !c;
}, Kee = lr(void 0), Gee = () => Kt(Kee);
function y$(e, t) {
  return e && t && typeof e == "object" && typeof t == "object" ? Object.keys(e).length === Object.keys(t).length && // @ts-expect-error TS7053
  Object.keys(e).reduce((n, o) => n && y$(e[o], t[o]), !0) : e === t;
}
const Yee = lr({
  hotkeys: [],
  activeScopes: [],
  // This array has to be empty instead of containing '*' as default, to check if the provider is set or not
  toggleScope: () => {
  },
  enableScope: () => {
  },
  disableScope: () => {
  }
}), Xee = () => Kt(Yee);
function Zee(e) {
  const t = qe(void 0);
  return y$(t.current, e) || (t.current = e), t.current;
}
const rT = (e) => {
  e.stopPropagation(), e.preventDefault(), e.stopImmediatePropagation();
}, Qee = typeof window < "u" ? Ng : et;
function Ls(e, t, n, o) {
  const r = qe(null), i = qe(!1), s = n instanceof Array ? o instanceof Array ? void 0 : o : n, l = iv(e) ? e.join(s == null ? void 0 : s.delimiter) : e, c = n instanceof Array ? n : o instanceof Array ? o : void 0, u = Be(t, c ?? []), d = qe(u);
  c ? d.current = u : d.current = t;
  const f = Zee(s), { activeScopes: p } = Xee(), h = Gee();
  return Qee(() => {
    if ((f == null ? void 0 : f.enabled) === !1 || !Uee(p, f == null ? void 0 : f.scopes))
      return;
    let g = [], m;
    const y = (w, S = !1) => {
      var C;
      if (!(Hee(w) && !g$(w, f == null ? void 0 : f.enableOnFormTags))) {
        if (r.current !== null) {
          const E = r.current.getRootNode();
          if ((E instanceof Document || E instanceof ShadowRoot) && E.activeElement !== r.current && !r.current.contains(E.activeElement)) {
            rT(w);
            return;
          }
        }
        (C = w.target) != null && C.isContentEditable && !(f != null && f.enableOnContentEditable) || nm(l, f == null ? void 0 : f.delimiter).forEach((E) => {
          var P, M, x, I;
          if (E.includes((f == null ? void 0 : f.splitKey) ?? "+") && E.includes((f == null ? void 0 : f.sequenceSplitKey) ?? ">")) {
            console.warn(`Hotkey ${E} contains both ${(f == null ? void 0 : f.splitKey) ?? "+"} and ${(f == null ? void 0 : f.sequenceSplitKey) ?? ">"} which is not supported.`);
            return;
          }
          const k = om(E, f == null ? void 0 : f.splitKey, f == null ? void 0 : f.sequenceSplitKey, f == null ? void 0 : f.useKey, f == null ? void 0 : f.description);
          if (k.isSequence) {
            m = setTimeout(() => {
              g = [];
            }, (f == null ? void 0 : f.sequenceTimeoutMs) ?? 1e3);
            const _ = k.useKey ? w.key : hi(w.code);
            if (p$(_.toLowerCase()))
              return;
            g.push(_);
            const R = (P = k.keys) == null ? void 0 : P[g.length - 1];
            if (_ !== R) {
              g = [], m && clearTimeout(m);
              return;
            }
            g.length === ((M = k.keys) == null ? void 0 : M.length) && (d.current(w, k), m && clearTimeout(m), g = []);
          } else if (qee(w, k, f == null ? void 0 : f.ignoreModifiers) || (x = k.keys) != null && x.includes("*")) {
            if ((I = f == null ? void 0 : f.ignoreEventWhen) != null && I.call(f, w) || S && i.current)
              return;
            if (jee(w, k, f == null ? void 0 : f.preventDefault), !zee(w, k, f == null ? void 0 : f.enabled)) {
              rT(w);
              return;
            }
            d.current(w, k), S || (i.current = !0);
          }
        });
      }
    }, b = (w) => {
      w.code !== void 0 && (h$(hi(w.code)), ((f == null ? void 0 : f.keydown) === void 0 && (f == null ? void 0 : f.keyup) !== !0 || f != null && f.keydown) && y(w));
    }, T = (w) => {
      w.code !== void 0 && (m$(hi(w.code)), i.current = !1, f != null && f.keyup && y(w, !0));
    }, v = r.current || (s == null ? void 0 : s.document) || document;
    return v.addEventListener("keyup", T, s == null ? void 0 : s.eventListenerOptions), v.addEventListener("keydown", b, s == null ? void 0 : s.eventListenerOptions), h && nm(l, f == null ? void 0 : f.delimiter).forEach(
      (w) => h.addHotkey(
        om(w, f == null ? void 0 : f.splitKey, f == null ? void 0 : f.sequenceSplitKey, f == null ? void 0 : f.useKey, f == null ? void 0 : f.description)
      )
    ), () => {
      v.removeEventListener("keyup", T, s == null ? void 0 : s.eventListenerOptions), v.removeEventListener("keydown", b, s == null ? void 0 : s.eventListenerOptions), h && nm(l, f == null ? void 0 : f.delimiter).forEach(
        (w) => h.removeHotkey(
          om(w, f == null ? void 0 : f.splitKey, f == null ? void 0 : f.sequenceSplitKey, f == null ? void 0 : f.useKey, f == null ? void 0 : f.description)
        )
      ), g = [], m && clearTimeout(m);
    };
  }, [l, f, p]), r;
}
function Jee() {
  const e = Kn(), { undo: t, redo: n, canUndo: o, canRedo: r } = d$(), { deleteSelectedElements: i } = rv(), { copySelectedElements: s, pastCopiedElement: l, cutSelectedElements: c } = Bee();
  Ls(
    e.hotkeys.keys.copy,
    () => s(),
    { enabled: !0, preventDefault: !0 },
    [s]
  ), Ls(
    e.hotkeys.keys.paste,
    () => l(),
    { enabled: !0, preventDefault: !0 },
    [l]
  ), Ls(
    e.hotkeys.keys.cut,
    () => c(),
    { enabled: !0, preventDefault: !0 },
    [c]
  ), Ls(
    e.hotkeys.keys.delete,
    () => i(),
    { enabled: !0, preventDefault: !0, keyup: !0 },
    [i]
  ), Ls(
    e.hotkeys.keys.undo,
    () => {
      o && t();
    },
    { enabled: o, preventDefault: !0 },
    [t, o]
  ), Ls(
    e.hotkeys.keys.redo,
    () => {
      r && n();
    },
    { enabled: !0, preventDefault: !0 },
    [n, r]
  );
}
function ete({
  configs: e
}) {
  const { setHotkeys: t, setCanvas: n, setStyles: o, setMinimap: r, setUndoRedo: i } = Kn(), { updateActionsHistory: s } = xs();
  Iee();
  const l = Be(() => {
    s(Bn.Init);
  }, [s]), c = qe(null);
  return et(() => {
    if (!e || ov(e, c.current)) return;
    const { hotkeys: u, canvas: d, styles: f, minimap: p, undoRedo: h } = e;
    u && t(u), d && n(d), f && o(f), p && r(p), h && i(h), c.current = e;
  }, [e, t, n, o, r, i]), {
    onFinishedInit: l
  };
}
const sv = Li()(
  vs(
    (e) => ({
      node: null,
      setNode: (t) => e({ node: t })
    }),
    {
      name: "VENOMOUS_UI__WORKFLOW_CREATED_NODE",
      store: "VENOMOUS_UI__WORKFLOW_CREATED_NODE"
    }
  )
);
function tte() {
  return sv.getState().node;
}
function nte(e) {
  sv.setState({ node: e });
}
function ote() {
  sv.setState({ node: null });
}
function rte() {
  const e = Kn(), { getNodes: t, setNodes: n, screenToFlowPosition: o } = to(), { updateActionsHistory: r } = xs(), i = Be((l) => {
    l.preventDefault(), l.dataTransfer.dropEffect = "move";
  }, []), s = Be(
    (l) => {
      const c = tte();
      if (ote(), !c)
        return;
      const u = {
        ...c,
        id: `${Date.now()}`,
        // selected: true,
        position: o(
          { x: l.clientX, y: l.clientY },
          { snapToGrid: e.canvas.isGridLayout }
        )
      };
      n(
        (d) => u.type === Si.Group ? [u, ...d] : [...d, u]
      ), r(Bn.NodeCreated);
    },
    [t, n, o, e, r]
  );
  return {
    onDragOver: i,
    onDrop: s
  };
}
function ite() {
  const e = Kn(), { getZoom: t, setCenter: n, setNodes: o, setEdges: r, updateNode: i } = to();
  return {
    jumpToSpecificNode: Be(
      async (l, { x: c, y: u }) => {
        const d = t();
        await n(c + e.styles.nodeWidth / 2, u + e.styles.nodeMinHeight / 2, {
          duration: e.canvas.zoomDuration,
          zoom: d
        }), o((f) => f.map((p) => ({ ...p, selected: !1 }))), r((f) => f.map((p) => ({ ...p, selected: !1 }))), i(l, { selected: !0 });
      },
      [
        t,
        n,
        o,
        r,
        i,
        e.canvas.zoomDuration,
        e.styles.nodeWidth,
        e.styles.nodeMinHeight
      ]
    )
  };
}
function ste() {
  const { updateNode: e, updateNodeData: t, setNodes: n, getNodes: o, getInternalNode: r } = to(), i = Be(
    (u, d) => {
      e(u, d, {
        replace: !1
      });
    },
    [e]
  ), s = Be(
    (u, d) => {
      t(u, d, {
        replace: !1
      });
    },
    [t]
  ), l = Be(
    (u, d) => {
      s(u, { formValue: d });
    },
    [s]
  ), c = Be(
    (u) => {
      if (u.type === Si.Group)
        return n(
          (h) => h.map(
            (g) => g.id === u.id ? { ...g, parentId: void 0, position: u.position } : g
          )
        );
      const d = r(u.id);
      if (!d)
        return;
      const f = d.internals.positionAbsolute, p = o().find(
        (h) => {
          var g, m;
          return h.type === Si.Group && f.x >= h.position.x && f.x <= h.position.x + (((g = h.measured) == null ? void 0 : g.width) ?? 0) && f.y >= h.position.y && f.y <= h.position.y + (((m = h.measured) == null ? void 0 : m.height) ?? 0);
        }
      );
      if (p) {
        const h = {
          x: f.x - p.position.x,
          y: f.y - p.position.y
        };
        return n(
          (g) => g.map(
            (m) => m.id === u.id ? { ...m, parentId: p.id, position: h } : m
          )
        );
      }
      n(
        (h) => h.map((g) => g.id === u.id ? { ...g, parentId: void 0, position: f } : g)
      );
    },
    [r, o, n]
  );
  return {
    updateSpecificNode: i,
    updateSpecificNodeData: s,
    updateSpecificNodeFormValue: l,
    updateNodeMovingAroundGroupNode: c
  };
}
function ate() {
  const { setNodes: e } = to(), { updateActionsHistory: t } = xs(), { updateNodeMovingAroundGroupNode: n } = ste(), o = qe({ x: 0, y: 0 }), r = Be((l, c) => {
    o.current = {
      x: c.position.x,
      y: c.position.y
    };
  }, []), i = Be(
    (l, c) => {
      e((u) => u.map((d) => d.id === c.id ? { ...d, position: c.position } : d));
    },
    [e]
  ), s = Be(
    (l, c) => {
      n(c);
      const { x: u, y: d } = o.current;
      u === c.position.x && d === c.position.y || t(Bn.NodeMoved);
    },
    [t, n]
  );
  return {
    onNodeMoveStart: r,
    onNodeMoveStop: s,
    onNodeMoving: i
  };
}
const lte = Li()(
  vs(
    (e) => ({
      selectedNodeId: null,
      setSelectedNodeId: (t) => e({ selectedNodeId: t }),
      clear: () => e({ selectedNodeId: null })
    }),
    {
      name: "VENOMOUS_UI__WORKFLOW_PANEL",
      store: "VENOMOUS_UI__WORKFLOW_PANEL"
    }
  )
);
function b$() {
  const e = Yr(lte), { selectedNodeId: t } = e, { getNode: n } = to(), o = Ge(() => {
    if (t)
      return n(t);
  }, [t]);
  return {
    ...e,
    selectedNode: o
  };
}
const av = Pe(({ renderChildren: e, ...t }) => {
  const n = Kn(), {
    id: o,
    data: r,
    sourceX: i,
    sourceY: s,
    targetX: l,
    targetY: c,
    sourcePosition: u,
    targetPosition: d,
    markerEnd: f,
    style: p
  } = t, [h, g, m, y, b] = Zb({
    sourceX: i,
    sourceY: s,
    sourcePosition: u,
    targetX: l,
    targetY: c,
    targetPosition: d
  });
  return /* @__PURE__ */ Se(Jn, { children: [
    /* @__PURE__ */ O(
      ru,
      {
        id: o,
        path: h,
        className: "VenomousUI-WorkflowBaseEdge",
        style: {
          ...p,
          strokeWidth: n.styles.edgeWidth
        },
        markerEnd: f
      }
    ),
    (r == null ? void 0 : r.animated) && /* @__PURE__ */ O("circle", { r: n.styles.edgeWidth * 2, fill: "#ff0073", children: /* @__PURE__ */ O("animateMotion", { dur: "2s", repeatCount: "indefinite", path: h }) }),
    e == null ? void 0 : e({
      ...t,
      edgePath: h,
      edgePathLabelX: g,
      edgePathLabelY: m,
      edgePathOffsetX: y,
      edgePathOffsetY: b
    })
  ] });
});
av.displayName = "WorkflowBaseEdge";
const v$ = Pe((e) => {
  const { id: t, selected: n } = e, { deleteEdge: o } = rv(), r = Be(() => o(t), [t, o]);
  return /* @__PURE__ */ O(
    av,
    {
      ...e,
      renderChildren: ({ edgePathLabelX: i, edgePathLabelY: s }) => /* @__PURE__ */ O(CJ, { children: /* @__PURE__ */ O(
        "div",
        {
          style: {
            position: "absolute",
            pointerEvents: "all",
            transformOrigin: "center",
            transform: `translate(-50%, -50%) translate(${i}px,${s}px)`,
            display: n ? "flex" : "none"
          },
          children: /* @__PURE__ */ O(
            Mn,
            {
              isCircle: !0,
              isGhost: !0,
              icon: "solar:close-circle-linear",
              color: "error",
              onClick: r,
              sx: {
                "& svg": {
                  borderRadius: "50%",
                  backgroundColor: ({ palette: l }) => l.background.paper
                }
              }
            }
          )
        }
      ) })
    }
  );
});
v$.displayName = "WorkflowDeleteLabelEdge";
const cte = {
  [af.Base]: av,
  [af.DeleteLabel]: v$
}, ute = {
  borderWidth: "6px",
  borderRadius: "50%",
  borderColor: "#BDBDBD",
  cursor: "cell",
  zIndex: 2
}, Np = Pe(
  ({ id: e, handlerType: t = "source", handlerPosition: n, style: o, onConnect: r }) => {
    const i = Kn(), s = Be(() => {
      const l = i.styles.connectionPosition[t];
      switch (n ?? l) {
        case "left":
          return ze.Left;
        case "right":
          return ze.Right;
        case "top":
          return ze.Top;
        case "bottom":
          return ze.Bottom;
        default:
          return ze.Left;
      }
    }, [n, i.styles.connectionPosition]);
    return /* @__PURE__ */ O(
      Tc,
      {
        type: t,
        id: e,
        position: s(),
        className: "VenomousUI-WorkflowBaseNodeHandler",
        style: { ...ute, ...o },
        onConnect: r
      }
    );
  }
);
Np.displayName = "WorkflowBaseNodeHandler";
const dte = Pe(
  ({ children: e, style: t, handlerStyle: n, id: o, handlerType: r, ...i }) => {
    var l;
    const s = Kn();
    return /* @__PURE__ */ Se(
      "div",
      {
        className: "VenomousUI-WorkflowBaseNodeHandlerItem",
        style: {
          position: "relative",
          width: (l = s.styles) == null ? void 0 : l.nodeWidth
        },
        children: [
          /* @__PURE__ */ O(Ho, { sx: { typography: "body2", padding: "4px 16px", ...t }, children: e }),
          /* @__PURE__ */ O(
            Np,
            {
              id: o,
              handlerType: r,
              style: n,
              ...i
            }
          )
        ]
      }
    );
  }
);
dte.displayName = "WorkflowBaseNodeHandlerItem";
const x$ = Pe((e) => /* @__PURE__ */ O(Np, { ...e, handlerType: "source" }));
x$.displayName = "WorkflowSourceNodeHandler";
const w$ = Pe((e) => /* @__PURE__ */ O(Np, { ...e, handlerType: "target" }));
w$.displayName = "WorkflowTargetNodeHandler";
const lv = Pe(
  ({ children: e, sx: t, hideSourceHandler: n = !1, hideTargetHandler: o = !1, ...r }) => {
    const { id: i, selected: s, data: l } = r, c = l == null ? void 0 : l.isInValid, u = Kn(), { setSelectedNodeId: d } = b$(), f = Be(() => {
      d(i);
    }, [d, i]);
    return /* @__PURE__ */ Se(
      Wr,
      {
        className: "VenomousUI-WorkflowBaseNode",
        isOutlined: !0,
        onClick: f,
        sx: {
          p: "16px",
          width: u.styles.nodeWidth,
          minWidth: u.styles.nodeWidth,
          maxHeight: u.styles.nodeMaxHeight,
          minHeight: u.styles.nodeMinHeight,
          maxWidth: u.styles.nodeMaxHeight,
          position: "relative",
          outline: ({ palette: p }) => c ? `${u.styles.edgeWidth}px solid ${p.error.main}` : s ? `${u.styles.edgeWidth}px solid ${p.primary.main}` : "none",
          outlineOffset: `-${u.styles.edgeWidth}px`,
          boxShadow: (p) => s ? p.shadows[4] : p.shadows[1],
          "&:hover": { boxShadow: (p) => p.shadows[4] },
          ...t
        },
        children: [
          e,
          !o && !(l != null && l.isMultipleTargetHandler) && /* @__PURE__ */ O(w$, { id: null }),
          !n && !(l != null && l.isMultipleSourceHandler) && /* @__PURE__ */ O(x$, { id: null })
        ]
      }
    );
  }
);
lv.displayName = "WorkflowBaseNode";
const S$ = Pe(({ children: e, sx: t, ...n }) => {
  const { selected: o, data: r } = n, i = Kn(), s = Ge(() => i.styles.nodeWidth * 1.5, [i.styles.nodeWidth]), l = Ge(() => i.styles.nodeMinHeight * 3, [i.styles.nodeMinHeight]);
  return /* @__PURE__ */ Se(
    lv,
    {
      hideSourceHandler: !0,
      hideTargetHandler: !0,
      sx: {
        position: "static",
        height: "100%",
        width: "auto !important",
        minWidth: s,
        minHeight: l,
        backgroundColor: ({ palette: c }) => r.isIntersecting ? fI(c.primary.main).opacity : c.mode === "dark" ? "rgba(250,250,250,0.05)" : "rgba(0,0,0,0.05)",
        ...t
      },
      ...n,
      children: [
        e,
        /* @__PURE__ */ O(
          ZJ,
          {
            className: "VenomousUI-WorkflowGroupNode-ResizeControl",
            style: { display: o ? "flex" : "none" },
            minWidth: s,
            minHeight: l,
            children: /* @__PURE__ */ O(
              Eo,
              {
                icon: "fa:expand",
                width: 24,
                color: "primary",
                sx: { transform: "translate(-32px, -32px) rotate(90deg)" }
              }
            )
          }
        )
      ]
    }
  );
});
S$.displayName = "WorkflowGroupNode";
const fte = {
  [Si.Base]: lv,
  [Si.Group]: S$
}, pte = Mg(() => Promise.resolve().then(() => vte)), hte = Mg(() => Promise.resolve().then(() => Ste)), mte = Mg(() => Promise.resolve().then(() => wte)), gte = Pe(
  ({ children: e, sx: t, originalElements: n, configs: o, ...r }) => {
    var v, w, S;
    const { themeMode: i } = vp(), s = Kn(), { onFinishedInit: l } = ete({ configs: o });
    Jee();
    const { onDrop: c, onDragOver: u } = rte(), { onNodeMoveStart: d, onNodeMoveStop: f, onNodeMoving: p } = ate(), { isValidConnection: h, onConnect: g, onConnectEnd: m } = $ee(), { onReconnect: y, onReconnectStart: b, onReconnectEnd: T } = Mee();
    return /* @__PURE__ */ O(Wr, { isOutlined: !0, sx: { overflow: "hidden", p: 0, ...t }, children: /* @__PURE__ */ Se(
      SJ,
      {
        className: "VenomousUI-WorkflowPlayground",
        style: { width: "100%", height: "100%" },
        proOptions: { hideAttribution: !0 },
        colorMode: i,
        onlyRenderVisibleElements: !0,
        connectionLineType: s.styles.connectionLineType,
        connectionLineStyle: { strokeWidth: s.styles.edgeWidth },
        defaultEdgeOptions: {
          type: s.styles.edgeType,
          /** Edge 的种类 */
          markerEnd: { type: s.styles.edgeEndMarkerType }
          /** Edge 结束的标记 */
          // eslint-disable-line @typescript-eslint/no-explicit-any 
        },
        defaultNodes: n.nodes,
        defaultEdges: n.edges,
        nodeTypes: { ...fte, ...r.nodeTypes },
        edgeTypes: { ...cte, ...r.edgeTypes },
        elementsSelectable: !0,
        selectNodesOnDrag: !1,
        nodesConnectable: !0,
        nodesDraggable: !0,
        panOnDrag: !0,
        panOnScroll: !1,
        zoomOnScroll: !0,
        zoomOnPinch: !0,
        nodesFocusable: !1,
        edgesFocusable: !1,
        nodeDragThreshold: 5,
        connectionRadius: ((v = s == null ? void 0 : s.styles) == null ? void 0 : v.nodeWidth) / 4,
        snapToGrid: (w = s == null ? void 0 : s.canvas) == null ? void 0 : w.isGridLayout,
        snapGrid: (S = s == null ? void 0 : s.canvas) == null ? void 0 : S.gridLayoutGap,
        onInit: l,
        isValidConnection: h,
        onConnect: g,
        onConnectEnd: m,
        onReconnectStart: b,
        onReconnect: y,
        onReconnectEnd: T,
        onDragOver: u,
        onDrop: c,
        onNodeDragStart: d,
        onNodeDrag: p,
        onNodeDragStop: f,
        deleteKeyCode: null,
        ...r,
        children: [
          e,
          /* @__PURE__ */ Se(V$, { children: [
            s.minimap.enabled && /* @__PURE__ */ O(pte, {}),
            s.minimap.enabled && /* @__PURE__ */ O(hte, {}),
            s.undoRedo.enabled && /* @__PURE__ */ O(mte, {})
          ] })
        ]
      }
    ) });
  }
);
gte.displayName = "WorkflowPlayground";
const yte = Pe(({ children: e }) => /* @__PURE__ */ O(r$, { children: e }));
yte.displayName = "WorkflowWrapper";
const iu = Pe(
  ({ children: e, position: t, style: n, isPaper: o = !0, isOutlinedPaper: r = !0 }) => {
    const i = Ge(() => {
      switch (t) {
        case "top-left":
          return { transform: "translate(-8px, -8px)" };
        case "top-right":
          return { transform: "translate(8px, -8px)" };
        case "bottom-left":
          return { transform: "translate(-8px, 8px)" };
        case "bottom-right":
          return { transform: "translate(8px, 8px)" };
        default:
          return {};
      }
    }, [t]);
    return /* @__PURE__ */ Se(
      ou,
      {
        position: t,
        style: {
          ...i,
          ...n
        },
        children: [
          o && /* @__PURE__ */ O(
            Wr,
            {
              isOutlined: r,
              sx: { height: "100%", border: 1, borderColor: "divider" },
              children: e
            }
          ),
          !o && e
        ]
      }
    );
  }
);
iu.displayName = "WorkflowToolbar";
const bte = Pe(({ position: e, style: t }) => {
  const { getNodes: n, getEdges: o } = to();
  return /* @__PURE__ */ O(iu, { position: e, style: t, isPaper: !1, children: /* @__PURE__ */ O(
    Mn,
    {
      icon: "hugeicons:tools",
      iconWidth: 24,
      isSquare: !0,
      onClick: () => {
        console.log({
          nodes: n(),
          edges: o()
        });
      }
    }
  ) });
});
bte.displayName = "WorkflowDevtool";
const T$ = Pe(() => {
  var s, l, c, u, d;
  const { themePalette: e } = Fb(), { jumpToSpecificNode: t } = ite(), n = Kn(), o = Ge(() => {
    var f, p;
    if (!((f = n.minimap) != null && f.position)) return {};
    switch ((p = n.minimap) == null ? void 0 : p.position) {
      case "top-left":
        return { transform: "translate(-8px, 56px)" };
      case "top-right":
        return { transform: "translate(8px, 56px)" };
      case "bottom-left":
        return { transform: "translate(-8px, -56px)" };
      case "bottom-right":
        return { transform: "translate(8px, -56px)" };
      default:
        return {};
    }
  }, [(s = n.minimap) == null ? void 0 : s.position]), r = Be(
    (f) => {
      var b, T;
      const { type: p, selected: h, data: g } = f;
      if (g == null ? void 0 : g.isInValid) return e.error;
      const y = ((T = (b = n.styles) == null ? void 0 : b.nodeColors) == null ? void 0 : T[p]) || e.main;
      return h || g != null && g.isFocus ? y : "transparent";
    },
    [e, (l = n.styles) == null ? void 0 : l.nodeColors]
  ), i = Be(
    (f) => {
      const { data: p } = f;
      return p != null && p.isInValid ? e.error : "#e2e2e2";
    },
    [e]
  );
  return /* @__PURE__ */ O(
    YJ,
    {
      className: "VenomousUI-WorkflowMiniMap",
      position: (c = n.minimap) == null ? void 0 : c.position,
      nodeStrokeWidth: 16,
      nodeStrokeColor: r,
      nodeColor: i,
      nodeBorderRadius: 16,
      onNodeClick: (f, p) => {
        f.stopPropagation(), t(p.id, p.position);
      },
      pannable: !0,
      zoomable: !0,
      zoomStep: (u = n.canvas) == null ? void 0 : u.zoomStep,
      style: {
        ...o,
        width: (d = n.minimap) == null ? void 0 : d.width,
        borderRadius: 8,
        overflow: "hidden"
      }
    }
  );
});
T$.displayName = "WorkflowMiniMap";
const vte = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: T$
}, Symbol.toStringTag, { value: "Module" })), xte = Pe(
  ({ position: e = "bottom-right", style: t, renderContent: n }) => {
    var r;
    const { selectedNode: o } = b$();
    return (r = o == null ? void 0 : o.data) != null && r.formValue ? /* @__PURE__ */ O(
      iu,
      {
        isPaper: !0,
        isOutlinedPaper: !1,
        position: e,
        style: {
          height: "calc(100% - 16px)",
          width: 300,
          ...t
        },
        children: n == null ? void 0 : n(o)
      }
    ) : null;
  }
);
xte.displayName = "NodeDataFormValuePanel";
const C$ = Pe(() => {
  var u, d, f, p, h, g;
  const { setNodes: e, setEdges: t } = to(), { undo: n, redo: o, canUndo: r, canRedo: i } = d$(), { currentStates: s } = kee(), l = Kn();
  et(() => {
    s.action !== null && (e(s.elements.nodes), t(s.elements.edges));
  }, [e, t, s]);
  const c = Ge(() => {
    var T, v, w;
    const m = (T = l.undoRedo) == null ? void 0 : T.position, y = (v = l.minimap) == null ? void 0 : v.enabled, b = (w = l.minimap) == null ? void 0 : w.width;
    if (!m) return {};
    switch (m) {
      case "top-left":
        return { transform: `translate(${y ? b : -8}px, -8px)` };
      case "top-right":
        return { transform: `translate(${y ? -b : 8}px, -8px)` };
      case "bottom-left":
        return { transform: `translate(${y ? b : -8}px, 8px)` };
      case "bottom-right":
        return { transform: `translate(${y ? -b : 8}px, 8px)` };
      default:
        return {};
    }
  }, [(u = l.undoRedo) == null ? void 0 : u.position, l.minimap]);
  return /* @__PURE__ */ O(iu, { position: (d = l.undoRedo) == null ? void 0 : d.position, style: c, children: /* @__PURE__ */ Se(bn, { row: !0, gap: 0.5, children: [
    /* @__PURE__ */ O(fa, { tooltip: (p = (f = l.undoRedo) == null ? void 0 : f.tooltips) == null ? void 0 : p.undo, children: /* @__PURE__ */ O("span", { children: /* @__PURE__ */ O(
      Mn,
      {
        icon: "solar:multiple-forward-left-bold-duotone",
        isSquare: !0,
        disabled: !r,
        onClick: n
      }
    ) }) }),
    /* @__PURE__ */ O(fa, { tooltip: (g = (h = l.undoRedo) == null ? void 0 : h.tooltips) == null ? void 0 : g.redo, children: /* @__PURE__ */ O("span", { children: /* @__PURE__ */ O(
      Mn,
      {
        icon: "solar:multiple-forward-right-bold-duotone",
        isSquare: !0,
        disabled: !i,
        onClick: o
      }
    ) }) })
  ] }) });
});
C$.displayName = "WorkflowUndoRedo";
const wte = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: C$
}, Symbol.toStringTag, { value: "Module" })), E$ = Pe(() => {
  var c, u;
  const { currentViewport: e, increaseZoom: t, decreaseZoom: n } = JJ(), o = Kn(), { zoom: r } = e, i = Ge(() => `${(r * 100).toFixed(0)}%`, [r]), s = Ge(
    () => r >= o.canvas.maxZoom,
    [r, o.canvas.maxZoom]
  ), l = Ge(
    () => r <= o.canvas.minZoom,
    [r, o.canvas.minZoom]
  );
  return /* @__PURE__ */ O(iu, { position: (c = o.minimap) == null ? void 0 : c.position, isPaper: !0, children: /* @__PURE__ */ Se(bn, { row: !0, gap: 0, width: ((u = o.minimap) == null ? void 0 : u.width) - 16, justifyContent: "space-between", children: [
    /* @__PURE__ */ O(
      Mn,
      {
        icon: "solar:magnifer-zoom-out-linear",
        isSquare: !0,
        disabled: l,
        onClick: n
      }
    ),
    /* @__PURE__ */ O(Rn, { bold: !0, text: i, sx: { width: 100, textAlign: "right", px: 1 } }),
    /* @__PURE__ */ O(
      Mn,
      {
        icon: "solar:magnifer-zoom-in-linear",
        isSquare: !0,
        disabled: s,
        onClick: t
      }
    )
  ] }) });
});
E$.displayName = "WorkflowZoom";
const Ste = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: E$
}, Symbol.toStringTag, { value: "Module" }));
export {
  Uq as AdminFullScreen,
  qq as AdminHeader,
  Yq as AdminSettingsDrawer,
  Gq as AdminSettingsDrawerBlock,
  Qq as AdminSideNavMenu,
  VL as Avatar,
  FL as Blank,
  Mn as Button,
  _c as Card,
  mP as Checkbox,
  h9 as CheckboxUncontrolled,
  iP as Collapse,
  rP as CollapsedSidebar,
  oq as ConfirmModal,
  U4 as Container,
  pC as DotBadge,
  fP as Drawer,
  pP as DrawerHeader,
  hB as ExhibitCard,
  mV as ExhibitCardActionButton,
  bn as Flex,
  Nte as FormUncontrolled,
  m9 as FormUncontrolledAction,
  L9 as Grid,
  Eo as Icon,
  FC as IconBadge,
  Yf as Input,
  g9 as InputUncontrolled,
  cs as Label,
  Hf as Labels,
  F9 as LazyImage,
  X9 as Loading,
  Pl as Menu,
  Yi as MenuItem,
  bI as Modal,
  bP as NumberInput,
  y9 as NumberInputUncontrolled,
  LL as NumberTextBadge,
  TR as OtpInput,
  b9 as OtpInputUncontrolled,
  Wr as Paper,
  CR as Password,
  v9 as PasswordUncontrolled,
  OE as Popover,
  vI as Popper,
  PR as Radios,
  w9 as RadiosUncontrolled,
  qR as Select,
  T9 as SelectUncontrolled,
  _b as Switch,
  C9 as SwitchUncontrolled,
  Rn as Text,
  BL as TextBadge,
  pI as ThemePaletteName,
  pq as ThemeProvider,
  jq as Toast,
  fa as Tooltip,
  Bn as WorkflowAction,
  av as WorkflowBaseEdge,
  lv as WorkflowBaseNode,
  Np as WorkflowBaseNodeHandler,
  dte as WorkflowBaseNodeHandlerItem,
  bte as WorkflowDevtool,
  c$ as WorkflowEdgeConnectionLineType,
  l$ as WorkflowEdgeEndMarkerType,
  af as WorkflowEdgeTypeDefault,
  S$ as WorkflowGroupNode,
  T$ as WorkflowMiniMap,
  xte as WorkflowNodeDataFormValuePanel,
  Si as WorkflowNodeTypeDefault,
  gte as WorkflowPlayground,
  x$ as WorkflowSourceNodeHandler,
  w$ as WorkflowTargetNodeHandler,
  iu as WorkflowToolbarPanel,
  C$ as WorkflowUndoRedo,
  yte as WorkflowWrapper,
  E$ as WorkflowZoom,
  l9 as createFormControl,
  Mte as createZodSchema,
  _te as generateNewNodeToStore,
  fI as getColors,
  Dte as getRelevantEdgesByEdge,
  Dee as getRelevantEdgesByNode,
  z5 as useCheckNavMenuActive,
  X7 as useController,
  t3 as useDrawer,
  Ite as useFieldArray,
  kte as useForm,
  Io as useFormContext,
  G7 as useFormState,
  A9 as useFullScreen,
  Ate as useModal,
  ms as usePaper,
  Mc as useText,
  M9 as useThemeBreakpoint,
  vp as useThemeMode,
  Fb as useThemePalette,
  zq as useToast,
  Y7 as useWatch,
  kee as useWorkflowActionsHistoryStates,
  Iee as useWorkflowActionsHistoryStoreCleanup,
  d$ as useWorkflowActionsHistoryUndoRedo,
  xs as useWorkflowActionsHistoryUpdate,
  JJ as useWorkflowCanvasViewport,
  Kn as useWorkflowConfigs,
  _ee as useWorkflowCopiedElements,
  Bee as useWorkflowElementsCopyPasteCut,
  Lte as useWorkflowElementsProtect,
  Lee as useWorkflowElementsSelected,
  to as useWorkflowInstance,
  rte as useWorkflowNodeCreate,
  ite as useWorkflowNodeJump,
  ste as useWorkflowNodeUpdate,
  b$ as useWorkflowPanel,
  $te as zodResolver
};
