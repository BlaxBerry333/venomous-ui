var YC = Object.defineProperty;
var GC = (e, t, n) => t in e ? YC(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;
var Ar = (e, t, n) => GC(e, typeof t != "symbol" ? t + "" : t, n);
import { jsx as $, jsxs as Te, Fragment as mo } from "react/jsx-runtime";
import * as P from "react";
import Z, { forwardRef as yl, useContext as Qr, useMemo as Qe, memo as Ie, useState as yn, useEffect as dt, createElement as Oi, isValidElement as kc, cloneElement as Pc, Children as XC, Fragment as ZC, useCallback as ze, useId as Ch, useRef as et, createContext as bl, useLayoutEffect as Jv, Suspense as QC, lazy as Oh } from "react";
import * as ex from "react-dom";
import cs, { createPortal as JC } from "react-dom";
function tx(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Zl = { exports: {} }, Ql = { exports: {} }, Ct = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Tg;
function eO() {
  if (Tg) return Ct;
  Tg = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, o = e ? Symbol.for("react.fragment") : 60107, r = e ? Symbol.for("react.strict_mode") : 60108, i = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, f = e ? Symbol.for("react.forward_ref") : 60112, d = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, h = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, y = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, T = e ? Symbol.for("react.scope") : 60119;
  function b(S) {
    if (typeof S == "object" && S !== null) {
      var E = S.$$typeof;
      switch (E) {
        case t:
          switch (S = S.type, S) {
            case c:
            case u:
            case o:
            case i:
            case r:
            case d:
              return S;
            default:
              switch (S = S && S.$$typeof, S) {
                case l:
                case f:
                case g:
                case h:
                case a:
                  return S;
                default:
                  return E;
              }
          }
        case n:
          return E;
      }
    }
  }
  function w(S) {
    return b(S) === u;
  }
  return Ct.AsyncMode = c, Ct.ConcurrentMode = u, Ct.ContextConsumer = l, Ct.ContextProvider = a, Ct.Element = t, Ct.ForwardRef = f, Ct.Fragment = o, Ct.Lazy = g, Ct.Memo = h, Ct.Portal = n, Ct.Profiler = i, Ct.StrictMode = r, Ct.Suspense = d, Ct.isAsyncMode = function(S) {
    return w(S) || b(S) === c;
  }, Ct.isConcurrentMode = w, Ct.isContextConsumer = function(S) {
    return b(S) === l;
  }, Ct.isContextProvider = function(S) {
    return b(S) === a;
  }, Ct.isElement = function(S) {
    return typeof S == "object" && S !== null && S.$$typeof === t;
  }, Ct.isForwardRef = function(S) {
    return b(S) === f;
  }, Ct.isFragment = function(S) {
    return b(S) === o;
  }, Ct.isLazy = function(S) {
    return b(S) === g;
  }, Ct.isMemo = function(S) {
    return b(S) === h;
  }, Ct.isPortal = function(S) {
    return b(S) === n;
  }, Ct.isProfiler = function(S) {
    return b(S) === i;
  }, Ct.isStrictMode = function(S) {
    return b(S) === r;
  }, Ct.isSuspense = function(S) {
    return b(S) === d;
  }, Ct.isValidElementType = function(S) {
    return typeof S == "string" || typeof S == "function" || S === o || S === u || S === i || S === r || S === d || S === p || typeof S == "object" && S !== null && (S.$$typeof === g || S.$$typeof === h || S.$$typeof === a || S.$$typeof === l || S.$$typeof === f || S.$$typeof === y || S.$$typeof === x || S.$$typeof === T || S.$$typeof === m);
  }, Ct.typeOf = b, Ct;
}
var Ot = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Eg;
function tO() {
  return Eg || (Eg = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, o = e ? Symbol.for("react.fragment") : 60107, r = e ? Symbol.for("react.strict_mode") : 60108, i = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, f = e ? Symbol.for("react.forward_ref") : 60112, d = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, h = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, y = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, T = e ? Symbol.for("react.scope") : 60119;
    function b(V) {
      return typeof V == "string" || typeof V == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      V === o || V === u || V === i || V === r || V === d || V === p || typeof V == "object" && V !== null && (V.$$typeof === g || V.$$typeof === h || V.$$typeof === a || V.$$typeof === l || V.$$typeof === f || V.$$typeof === y || V.$$typeof === x || V.$$typeof === T || V.$$typeof === m);
    }
    function w(V) {
      if (typeof V == "object" && V !== null) {
        var de = V.$$typeof;
        switch (de) {
          case t:
            var ue = V.type;
            switch (ue) {
              case c:
              case u:
              case o:
              case i:
              case r:
              case d:
                return ue;
              default:
                var xe = ue && ue.$$typeof;
                switch (xe) {
                  case l:
                  case f:
                  case g:
                  case h:
                  case a:
                    return xe;
                  default:
                    return de;
                }
            }
          case n:
            return de;
        }
      }
    }
    var S = c, E = u, C = l, R = a, M = t, v = f, I = o, k = g, A = h, O = n, _ = i, N = r, L = d, F = !1;
    function D(V) {
      return F || (F = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), B(V) || w(V) === c;
    }
    function B(V) {
      return w(V) === u;
    }
    function z(V) {
      return w(V) === l;
    }
    function U(V) {
      return w(V) === a;
    }
    function q(V) {
      return typeof V == "object" && V !== null && V.$$typeof === t;
    }
    function Y(V) {
      return w(V) === f;
    }
    function K(V) {
      return w(V) === o;
    }
    function te(V) {
      return w(V) === g;
    }
    function ne(V) {
      return w(V) === h;
    }
    function W(V) {
      return w(V) === n;
    }
    function ee(V) {
      return w(V) === i;
    }
    function G(V) {
      return w(V) === r;
    }
    function re(V) {
      return w(V) === d;
    }
    Ot.AsyncMode = S, Ot.ConcurrentMode = E, Ot.ContextConsumer = C, Ot.ContextProvider = R, Ot.Element = M, Ot.ForwardRef = v, Ot.Fragment = I, Ot.Lazy = k, Ot.Memo = A, Ot.Portal = O, Ot.Profiler = _, Ot.StrictMode = N, Ot.Suspense = L, Ot.isAsyncMode = D, Ot.isConcurrentMode = B, Ot.isContextConsumer = z, Ot.isContextProvider = U, Ot.isElement = q, Ot.isForwardRef = Y, Ot.isFragment = K, Ot.isLazy = te, Ot.isMemo = ne, Ot.isPortal = W, Ot.isProfiler = ee, Ot.isStrictMode = G, Ot.isSuspense = re, Ot.isValidElementType = b, Ot.typeOf = w;
  }()), Ot;
}
var Cg;
function nx() {
  return Cg || (Cg = 1, process.env.NODE_ENV === "production" ? Ql.exports = eO() : Ql.exports = tO()), Ql.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var cf, Og;
function nO() {
  if (Og) return cf;
  Og = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
  function o(i) {
    if (i == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(i);
  }
  function r() {
    try {
      if (!Object.assign)
        return !1;
      var i = new String("abc");
      if (i[5] = "de", Object.getOwnPropertyNames(i)[0] === "5")
        return !1;
      for (var a = {}, l = 0; l < 10; l++)
        a["_" + String.fromCharCode(l)] = l;
      var c = Object.getOwnPropertyNames(a).map(function(f) {
        return a[f];
      });
      if (c.join("") !== "0123456789")
        return !1;
      var u = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(f) {
        u[f] = f;
      }), Object.keys(Object.assign({}, u)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return cf = r() ? Object.assign : function(i, a) {
    for (var l, c = o(i), u, f = 1; f < arguments.length; f++) {
      l = Object(arguments[f]);
      for (var d in l)
        t.call(l, d) && (c[d] = l[d]);
      if (e) {
        u = e(l);
        for (var p = 0; p < u.length; p++)
          n.call(l, u[p]) && (c[u[p]] = l[u[p]]);
      }
    }
    return c;
  }, cf;
}
var uf, $g;
function $h() {
  if ($g) return uf;
  $g = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return uf = e, uf;
}
var df, Ig;
function ox() {
  return Ig || (Ig = 1, df = Function.call.bind(Object.prototype.hasOwnProperty)), df;
}
var ff, Rg;
function oO() {
  if (Rg) return ff;
  Rg = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ $h(), n = {}, o = /* @__PURE__ */ ox();
    e = function(i) {
      var a = "Warning: " + i;
      typeof console < "u" && console.error(a);
      try {
        throw new Error(a);
      } catch {
      }
    };
  }
  function r(i, a, l, c, u) {
    if (process.env.NODE_ENV !== "production") {
      for (var f in i)
        if (o(i, f)) {
          var d;
          try {
            if (typeof i[f] != "function") {
              var p = Error(
                (c || "React class") + ": " + l + " type `" + f + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof i[f] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw p.name = "Invariant Violation", p;
            }
            d = i[f](a, f, c, l, null, t);
          } catch (g) {
            d = g;
          }
          if (d && !(d instanceof Error) && e(
            (c || "React class") + ": type specification of " + l + " `" + f + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof d + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), d instanceof Error && !(d.message in n)) {
            n[d.message] = !0;
            var h = u ? u() : "";
            e(
              "Failed " + l + " type: " + d.message + (h ?? "")
            );
          }
        }
    }
  }
  return r.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (n = {});
  }, ff = r, ff;
}
var pf, kg;
function rO() {
  if (kg) return pf;
  kg = 1;
  var e = nx(), t = nO(), n = /* @__PURE__ */ $h(), o = /* @__PURE__ */ ox(), r = /* @__PURE__ */ oO(), i = function() {
  };
  process.env.NODE_ENV !== "production" && (i = function(l) {
    var c = "Warning: " + l;
    typeof console < "u" && console.error(c);
    try {
      throw new Error(c);
    } catch {
    }
  });
  function a() {
    return null;
  }
  return pf = function(l, c) {
    var u = typeof Symbol == "function" && Symbol.iterator, f = "@@iterator";
    function d(B) {
      var z = B && (u && B[u] || B[f]);
      if (typeof z == "function")
        return z;
    }
    var p = "<<anonymous>>", h = {
      array: x("array"),
      bigint: x("bigint"),
      bool: x("boolean"),
      func: x("function"),
      number: x("number"),
      object: x("object"),
      string: x("string"),
      symbol: x("symbol"),
      any: T(),
      arrayOf: b,
      element: w(),
      elementType: S(),
      instanceOf: E,
      node: v(),
      objectOf: R,
      oneOf: C,
      oneOfType: M,
      shape: k,
      exact: A
    };
    function g(B, z) {
      return B === z ? B !== 0 || 1 / B === 1 / z : B !== B && z !== z;
    }
    function m(B, z) {
      this.message = B, this.data = z && typeof z == "object" ? z : {}, this.stack = "";
    }
    m.prototype = Error.prototype;
    function y(B) {
      if (process.env.NODE_ENV !== "production")
        var z = {}, U = 0;
      function q(K, te, ne, W, ee, G, re) {
        if (W = W || p, G = G || ne, re !== n) {
          if (c) {
            var V = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw V.name = "Invariant Violation", V;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var de = W + ":" + ne;
            !z[de] && // Avoid spamming the console because they are often not actionable except for lib authors
            U < 3 && (i(
              "You are manually calling a React.PropTypes validation function for the `" + G + "` prop on `" + W + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), z[de] = !0, U++);
          }
        }
        return te[ne] == null ? K ? te[ne] === null ? new m("The " + ee + " `" + G + "` is marked as required " + ("in `" + W + "`, but its value is `null`.")) : new m("The " + ee + " `" + G + "` is marked as required in " + ("`" + W + "`, but its value is `undefined`.")) : null : B(te, ne, W, ee, G);
      }
      var Y = q.bind(null, !1);
      return Y.isRequired = q.bind(null, !0), Y;
    }
    function x(B) {
      function z(U, q, Y, K, te, ne) {
        var W = U[q], ee = N(W);
        if (ee !== B) {
          var G = L(W);
          return new m(
            "Invalid " + K + " `" + te + "` of type " + ("`" + G + "` supplied to `" + Y + "`, expected ") + ("`" + B + "`."),
            { expectedType: B }
          );
        }
        return null;
      }
      return y(z);
    }
    function T() {
      return y(a);
    }
    function b(B) {
      function z(U, q, Y, K, te) {
        if (typeof B != "function")
          return new m("Property `" + te + "` of component `" + Y + "` has invalid PropType notation inside arrayOf.");
        var ne = U[q];
        if (!Array.isArray(ne)) {
          var W = N(ne);
          return new m("Invalid " + K + " `" + te + "` of type " + ("`" + W + "` supplied to `" + Y + "`, expected an array."));
        }
        for (var ee = 0; ee < ne.length; ee++) {
          var G = B(ne, ee, Y, K, te + "[" + ee + "]", n);
          if (G instanceof Error)
            return G;
        }
        return null;
      }
      return y(z);
    }
    function w() {
      function B(z, U, q, Y, K) {
        var te = z[U];
        if (!l(te)) {
          var ne = N(te);
          return new m("Invalid " + Y + " `" + K + "` of type " + ("`" + ne + "` supplied to `" + q + "`, expected a single ReactElement."));
        }
        return null;
      }
      return y(B);
    }
    function S() {
      function B(z, U, q, Y, K) {
        var te = z[U];
        if (!e.isValidElementType(te)) {
          var ne = N(te);
          return new m("Invalid " + Y + " `" + K + "` of type " + ("`" + ne + "` supplied to `" + q + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return y(B);
    }
    function E(B) {
      function z(U, q, Y, K, te) {
        if (!(U[q] instanceof B)) {
          var ne = B.name || p, W = D(U[q]);
          return new m("Invalid " + K + " `" + te + "` of type " + ("`" + W + "` supplied to `" + Y + "`, expected ") + ("instance of `" + ne + "`."));
        }
        return null;
      }
      return y(z);
    }
    function C(B) {
      if (!Array.isArray(B))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? i(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : i("Invalid argument supplied to oneOf, expected an array.")), a;
      function z(U, q, Y, K, te) {
        for (var ne = U[q], W = 0; W < B.length; W++)
          if (g(ne, B[W]))
            return null;
        var ee = JSON.stringify(B, function(re, V) {
          var de = L(V);
          return de === "symbol" ? String(V) : V;
        });
        return new m("Invalid " + K + " `" + te + "` of value `" + String(ne) + "` " + ("supplied to `" + Y + "`, expected one of " + ee + "."));
      }
      return y(z);
    }
    function R(B) {
      function z(U, q, Y, K, te) {
        if (typeof B != "function")
          return new m("Property `" + te + "` of component `" + Y + "` has invalid PropType notation inside objectOf.");
        var ne = U[q], W = N(ne);
        if (W !== "object")
          return new m("Invalid " + K + " `" + te + "` of type " + ("`" + W + "` supplied to `" + Y + "`, expected an object."));
        for (var ee in ne)
          if (o(ne, ee)) {
            var G = B(ne, ee, Y, K, te + "." + ee, n);
            if (G instanceof Error)
              return G;
          }
        return null;
      }
      return y(z);
    }
    function M(B) {
      if (!Array.isArray(B))
        return process.env.NODE_ENV !== "production" && i("Invalid argument supplied to oneOfType, expected an instance of array."), a;
      for (var z = 0; z < B.length; z++) {
        var U = B[z];
        if (typeof U != "function")
          return i(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + F(U) + " at index " + z + "."
          ), a;
      }
      function q(Y, K, te, ne, W) {
        for (var ee = [], G = 0; G < B.length; G++) {
          var re = B[G], V = re(Y, K, te, ne, W, n);
          if (V == null)
            return null;
          V.data && o(V.data, "expectedType") && ee.push(V.data.expectedType);
        }
        var de = ee.length > 0 ? ", expected one of type [" + ee.join(", ") + "]" : "";
        return new m("Invalid " + ne + " `" + W + "` supplied to " + ("`" + te + "`" + de + "."));
      }
      return y(q);
    }
    function v() {
      function B(z, U, q, Y, K) {
        return O(z[U]) ? null : new m("Invalid " + Y + " `" + K + "` supplied to " + ("`" + q + "`, expected a ReactNode."));
      }
      return y(B);
    }
    function I(B, z, U, q, Y) {
      return new m(
        (B || "React class") + ": " + z + " type `" + U + "." + q + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + Y + "`."
      );
    }
    function k(B) {
      function z(U, q, Y, K, te) {
        var ne = U[q], W = N(ne);
        if (W !== "object")
          return new m("Invalid " + K + " `" + te + "` of type `" + W + "` " + ("supplied to `" + Y + "`, expected `object`."));
        for (var ee in B) {
          var G = B[ee];
          if (typeof G != "function")
            return I(Y, K, te, ee, L(G));
          var re = G(ne, ee, Y, K, te + "." + ee, n);
          if (re)
            return re;
        }
        return null;
      }
      return y(z);
    }
    function A(B) {
      function z(U, q, Y, K, te) {
        var ne = U[q], W = N(ne);
        if (W !== "object")
          return new m("Invalid " + K + " `" + te + "` of type `" + W + "` " + ("supplied to `" + Y + "`, expected `object`."));
        var ee = t({}, U[q], B);
        for (var G in ee) {
          var re = B[G];
          if (o(B, G) && typeof re != "function")
            return I(Y, K, te, G, L(re));
          if (!re)
            return new m(
              "Invalid " + K + " `" + te + "` key `" + G + "` supplied to `" + Y + "`.\nBad object: " + JSON.stringify(U[q], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(B), null, "  ")
            );
          var V = re(ne, G, Y, K, te + "." + G, n);
          if (V)
            return V;
        }
        return null;
      }
      return y(z);
    }
    function O(B) {
      switch (typeof B) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !B;
        case "object":
          if (Array.isArray(B))
            return B.every(O);
          if (B === null || l(B))
            return !0;
          var z = d(B);
          if (z) {
            var U = z.call(B), q;
            if (z !== B.entries) {
              for (; !(q = U.next()).done; )
                if (!O(q.value))
                  return !1;
            } else
              for (; !(q = U.next()).done; ) {
                var Y = q.value;
                if (Y && !O(Y[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function _(B, z) {
      return B === "symbol" ? !0 : z ? z["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && z instanceof Symbol : !1;
    }
    function N(B) {
      var z = typeof B;
      return Array.isArray(B) ? "array" : B instanceof RegExp ? "object" : _(z, B) ? "symbol" : z;
    }
    function L(B) {
      if (typeof B > "u" || B === null)
        return "" + B;
      var z = N(B);
      if (z === "object") {
        if (B instanceof Date)
          return "date";
        if (B instanceof RegExp)
          return "regexp";
      }
      return z;
    }
    function F(B) {
      var z = L(B);
      switch (z) {
        case "array":
        case "object":
          return "an " + z;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + z;
        default:
          return z;
      }
    }
    function D(B) {
      return !B.constructor || !B.constructor.name ? p : B.constructor.name;
    }
    return h.checkPropTypes = r, h.resetWarningCache = r.resetWarningCache, h.PropTypes = h, h;
  }, pf;
}
var hf, Pg;
function iO() {
  if (Pg) return hf;
  Pg = 1;
  var e = /* @__PURE__ */ $h();
  function t() {
  }
  function n() {
  }
  return n.resetWarningCache = t, hf = function() {
    function o(a, l, c, u, f, d) {
      if (d !== e) {
        var p = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw p.name = "Invariant Violation", p;
      }
    }
    o.isRequired = o;
    function r() {
      return o;
    }
    var i = {
      array: o,
      bigint: o,
      bool: o,
      func: o,
      number: o,
      object: o,
      string: o,
      symbol: o,
      any: o,
      arrayOf: r,
      element: o,
      elementType: o,
      instanceOf: r,
      node: o,
      objectOf: r,
      oneOf: r,
      oneOfType: r,
      shape: r,
      exact: r,
      checkPropTypes: n,
      resetWarningCache: t
    };
    return i.PropTypes = i, i;
  }, hf;
}
var Ng;
function sO() {
  if (Ng) return Zl.exports;
  if (Ng = 1, process.env.NODE_ENV !== "production") {
    var e = nx(), t = !0;
    Zl.exports = /* @__PURE__ */ rO()(e.isElement, t);
  } else
    Zl.exports = /* @__PURE__ */ iO()();
  return Zl.exports;
}
var aO = /* @__PURE__ */ sO();
const s = /* @__PURE__ */ tx(aO);
function rx(e) {
  var t, n, o = "";
  if (typeof e == "string" || typeof e == "number") o += e;
  else if (typeof e == "object") if (Array.isArray(e)) {
    var r = e.length;
    for (t = 0; t < r; t++) e[t] && (n = rx(e[t])) && (o && (o += " "), o += n);
  } else for (n in e) e[n] && (o && (o += " "), o += n);
  return o;
}
function Re() {
  for (var e, t, n = 0, o = "", r = arguments.length; n < r; n++) (e = arguments[n]) && (t = rx(e)) && (o && (o += " "), o += t);
  return o;
}
function rt(e, t, n = void 0) {
  const o = {};
  for (const r in e) {
    const i = e[r];
    let a = "", l = !0;
    for (let c = 0; c < i.length; c += 1) {
      const u = i[c];
      u && (a += (l === !0 ? "" : " ") + t(u), l = !1, n && n[u] && (a += " " + n[u]));
    }
    o[r] = a;
  }
  return o;
}
function lr(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((o) => n.searchParams.append("args[]", o)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
function fe(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : lr(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
var Jl = { exports: {} }, kt = {};
/**
 * @license React
 * react-is.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Mg;
function lO() {
  if (Mg) return kt;
  Mg = 1;
  var e = Symbol.for("react.transitional.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), r = Symbol.for("react.profiler"), i = Symbol.for("react.consumer"), a = Symbol.for("react.context"), l = Symbol.for("react.forward_ref"), c = Symbol.for("react.suspense"), u = Symbol.for("react.suspense_list"), f = Symbol.for("react.memo"), d = Symbol.for("react.lazy"), p = Symbol.for("react.view_transition"), h = Symbol.for("react.client.reference");
  function g(m) {
    if (typeof m == "object" && m !== null) {
      var y = m.$$typeof;
      switch (y) {
        case e:
          switch (m = m.type, m) {
            case n:
            case r:
            case o:
            case c:
            case u:
            case p:
              return m;
            default:
              switch (m = m && m.$$typeof, m) {
                case a:
                case l:
                case d:
                case f:
                  return m;
                case i:
                  return m;
                default:
                  return y;
              }
          }
        case t:
          return y;
      }
    }
  }
  return kt.ContextConsumer = i, kt.ContextProvider = a, kt.Element = e, kt.ForwardRef = l, kt.Fragment = n, kt.Lazy = d, kt.Memo = f, kt.Portal = t, kt.Profiler = r, kt.StrictMode = o, kt.Suspense = c, kt.SuspenseList = u, kt.isContextConsumer = function(m) {
    return g(m) === i;
  }, kt.isContextProvider = function(m) {
    return g(m) === a;
  }, kt.isElement = function(m) {
    return typeof m == "object" && m !== null && m.$$typeof === e;
  }, kt.isForwardRef = function(m) {
    return g(m) === l;
  }, kt.isFragment = function(m) {
    return g(m) === n;
  }, kt.isLazy = function(m) {
    return g(m) === d;
  }, kt.isMemo = function(m) {
    return g(m) === f;
  }, kt.isPortal = function(m) {
    return g(m) === t;
  }, kt.isProfiler = function(m) {
    return g(m) === r;
  }, kt.isStrictMode = function(m) {
    return g(m) === o;
  }, kt.isSuspense = function(m) {
    return g(m) === c;
  }, kt.isSuspenseList = function(m) {
    return g(m) === u;
  }, kt.isValidElementType = function(m) {
    return typeof m == "string" || typeof m == "function" || m === n || m === r || m === o || m === c || m === u || typeof m == "object" && m !== null && (m.$$typeof === d || m.$$typeof === f || m.$$typeof === a || m.$$typeof === i || m.$$typeof === l || m.$$typeof === h || m.getModuleId !== void 0);
  }, kt.typeOf = g, kt;
}
var Pt = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var _g;
function cO() {
  return _g || (_g = 1, process.env.NODE_ENV !== "production" && function() {
    function e(m) {
      if (typeof m == "object" && m !== null) {
        var y = m.$$typeof;
        switch (y) {
          case t:
            switch (m = m.type, m) {
              case o:
              case i:
              case r:
              case u:
              case f:
              case h:
                return m;
              default:
                switch (m = m && m.$$typeof, m) {
                  case l:
                  case c:
                  case p:
                  case d:
                    return m;
                  case a:
                    return m;
                  default:
                    return y;
                }
            }
          case n:
            return y;
        }
      }
    }
    var t = Symbol.for("react.transitional.element"), n = Symbol.for("react.portal"), o = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), i = Symbol.for("react.profiler"), a = Symbol.for("react.consumer"), l = Symbol.for("react.context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), f = Symbol.for("react.suspense_list"), d = Symbol.for("react.memo"), p = Symbol.for("react.lazy"), h = Symbol.for("react.view_transition"), g = Symbol.for("react.client.reference");
    Pt.ContextConsumer = a, Pt.ContextProvider = l, Pt.Element = t, Pt.ForwardRef = c, Pt.Fragment = o, Pt.Lazy = p, Pt.Memo = d, Pt.Portal = n, Pt.Profiler = i, Pt.StrictMode = r, Pt.Suspense = u, Pt.SuspenseList = f, Pt.isContextConsumer = function(m) {
      return e(m) === a;
    }, Pt.isContextProvider = function(m) {
      return e(m) === l;
    }, Pt.isElement = function(m) {
      return typeof m == "object" && m !== null && m.$$typeof === t;
    }, Pt.isForwardRef = function(m) {
      return e(m) === c;
    }, Pt.isFragment = function(m) {
      return e(m) === o;
    }, Pt.isLazy = function(m) {
      return e(m) === p;
    }, Pt.isMemo = function(m) {
      return e(m) === d;
    }, Pt.isPortal = function(m) {
      return e(m) === n;
    }, Pt.isProfiler = function(m) {
      return e(m) === i;
    }, Pt.isStrictMode = function(m) {
      return e(m) === r;
    }, Pt.isSuspense = function(m) {
      return e(m) === u;
    }, Pt.isSuspenseList = function(m) {
      return e(m) === f;
    }, Pt.isValidElementType = function(m) {
      return typeof m == "string" || typeof m == "function" || m === o || m === i || m === r || m === u || m === f || typeof m == "object" && m !== null && (m.$$typeof === p || m.$$typeof === d || m.$$typeof === l || m.$$typeof === a || m.$$typeof === c || m.$$typeof === g || m.getModuleId !== void 0);
    }, Pt.typeOf = e;
  }()), Pt;
}
var Ag;
function uO() {
  return Ag || (Ag = 1, process.env.NODE_ENV === "production" ? Jl.exports = /* @__PURE__ */ lO() : Jl.exports = /* @__PURE__ */ cO()), Jl.exports;
}
var Xn = /* @__PURE__ */ uO();
function tr(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function ix(e) {
  if (/* @__PURE__ */ P.isValidElement(e) || Xn.isValidElementType(e) || !tr(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = ix(e[n]);
  }), t;
}
function Mn(e, t, n = {
  clone: !0
}) {
  const o = n.clone ? {
    ...e
  } : e;
  return tr(e) && tr(t) && Object.keys(t).forEach((r) => {
    /* @__PURE__ */ P.isValidElement(t[r]) || Xn.isValidElementType(t[r]) ? o[r] = t[r] : tr(t[r]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, r) && tr(e[r]) ? o[r] = Mn(e[r], t[r], n) : n.clone ? o[r] = tr(t[r]) ? ix(t[r]) : t[r] : o[r] = t[r];
  }), o;
}
function Ia(e, t) {
  return t ? Mn(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const Jr = process.env.NODE_ENV !== "production" ? s.oneOfType([s.number, s.string, s.object, s.array]) : {};
function dO(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((o) => o.startsWith("@container")).sort((o, r) => {
    var a, l;
    const i = /min-width:\s*([0-9.]+)/;
    return +(((a = o.match(i)) == null ? void 0 : a[1]) || 0) - +(((l = r.match(i)) == null ? void 0 : l[1]) || 0);
  });
  return n.length ? n.reduce((o, r) => {
    const i = t[r];
    return delete o[r], o[r] = i, o;
  }, {
    ...t
  }) : t;
}
function fO(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function pO(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : lr(18, `(${t})`));
    return null;
  }
  const [, o, r] = n, i = Number.isNaN(+o) ? o || 0 : +o;
  return e.containerQueries(r).up(i);
}
function hO(e) {
  const t = (i, a) => i.replace("@media", a ? `@container ${a}` : "@container");
  function n(i, a) {
    i.up = (...l) => t(e.breakpoints.up(...l), a), i.down = (...l) => t(e.breakpoints.down(...l), a), i.between = (...l) => t(e.breakpoints.between(...l), a), i.only = (...l) => t(e.breakpoints.only(...l), a), i.not = (...l) => {
      const c = t(e.breakpoints.not(...l), a);
      return c.includes("not all and") ? c.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : c;
    };
  }
  const o = {}, r = (i) => (n(o, i), o);
  return n(r), {
    ...e,
    containerQueries: r
  };
}
const Fu = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, Dg = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${Fu[e]}px)`
}, mO = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : Fu[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function Er(e, t, n) {
  const o = e.theme || {};
  if (Array.isArray(t)) {
    const i = o.breakpoints || Dg;
    return t.reduce((a, l, c) => (a[i.up(i.keys[c])] = n(t[c]), a), {});
  }
  if (typeof t == "object") {
    const i = o.breakpoints || Dg;
    return Object.keys(t).reduce((a, l) => {
      if (fO(i.keys, l)) {
        const c = pO(o.containerQueries ? o : mO, l);
        c && (a[c] = n(t[l], l));
      } else if (Object.keys(i.values || Fu).includes(l)) {
        const c = i.up(l);
        a[c] = n(t[l], l);
      } else {
        const c = l;
        a[c] = t[c];
      }
      return a;
    }, {});
  }
  return n(t);
}
function gO(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((o, r) => {
    const i = e.up(r);
    return o[i] = {}, o;
  }, {})) || {};
}
function yO(e, t) {
  return e.reduce((n, o) => {
    const r = n[o];
    return (!r || Object.keys(r).length === 0) && delete n[o], n;
  }, t);
}
function zu(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const o = `vars.${t}`.split(".").reduce((r, i) => r && r[i] ? r[i] : null, e);
    if (o != null)
      return o;
  }
  return t.split(".").reduce((o, r) => o && o[r] != null ? o[r] : null, e);
}
function Yc(e, t, n, o = n) {
  let r;
  return typeof e == "function" ? r = e(n) : Array.isArray(e) ? r = e[n] || o : r = zu(e, n) || o, t && (r = t(r, o, e)), r;
}
function rn(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: o,
    transform: r
  } = e, i = (a) => {
    if (a[t] == null)
      return null;
    const l = a[t], c = a.theme, u = zu(c, o) || {};
    return Er(a, l, (d) => {
      let p = Yc(u, r, d);
      return d === p && typeof d == "string" && (p = Yc(u, r, `${t}${d === "default" ? "" : fe(d)}`, d)), n === !1 ? p : {
        [n]: p
      };
    });
  };
  return i.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: Jr
  } : {}, i.filterProps = [t], i;
}
function bO(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const vO = {
  m: "margin",
  p: "padding"
}, xO = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, Lg = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, wO = bO((e) => {
  if (e.length > 2)
    if (Lg[e])
      e = Lg[e];
    else
      return [e];
  const [t, n] = e.split(""), o = vO[t], r = xO[n] || "";
  return Array.isArray(r) ? r.map((i) => o + i) : [o + r];
}), ju = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], Vu = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], SO = [...ju, ...Vu];
function vl(e, t, n, o) {
  const r = zu(e, t, !0) ?? n;
  return typeof r == "number" || typeof r == "string" ? (i) => typeof i == "string" ? i : (process.env.NODE_ENV !== "production" && typeof i != "number" && console.error(`MUI: Expected ${o} argument to be a number or a string, got ${i}.`), typeof r == "string" ? r.startsWith("var(") && i === 0 ? 0 : r.startsWith("var(") && i === 1 ? r : `calc(${i} * ${r})` : r * i) : Array.isArray(r) ? (i) => {
    if (typeof i == "string")
      return i;
    const a = Math.abs(i);
    process.env.NODE_ENV !== "production" && (Number.isInteger(a) ? a > r.length - 1 && console.error([`MUI: The value provided (${a}) overflows.`, `The supported values are: ${JSON.stringify(r)}.`, `${a} > ${r.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const l = r[a];
    return i >= 0 ? l : typeof l == "number" ? -l : typeof l == "string" && l.startsWith("var(") ? `calc(-1 * ${l})` : `-${l}`;
  } : typeof r == "function" ? r : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${r}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function Ih(e) {
  return vl(e, "spacing", 8, "spacing");
}
function xl(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function TO(e, t) {
  return (n) => e.reduce((o, r) => (o[r] = xl(t, n), o), {});
}
function EO(e, t, n, o) {
  if (!t.includes(n))
    return null;
  const r = wO(n), i = TO(r, o), a = e[n];
  return Er(e, a, i);
}
function sx(e, t) {
  const n = Ih(e.theme);
  return Object.keys(e).map((o) => EO(e, t, o, n)).reduce(Ia, {});
}
function Zt(e) {
  return sx(e, ju);
}
Zt.propTypes = process.env.NODE_ENV !== "production" ? ju.reduce((e, t) => (e[t] = Jr, e), {}) : {};
Zt.filterProps = ju;
function Qt(e) {
  return sx(e, Vu);
}
Qt.propTypes = process.env.NODE_ENV !== "production" ? Vu.reduce((e, t) => (e[t] = Jr, e), {}) : {};
Qt.filterProps = Vu;
process.env.NODE_ENV !== "production" && SO.reduce((e, t) => (e[t] = Jr, e), {});
function Hu(...e) {
  const t = e.reduce((o, r) => (r.filterProps.forEach((i) => {
    o[i] = r;
  }), o), {}), n = (o) => Object.keys(o).reduce((r, i) => t[i] ? Ia(r, t[i](o)) : r, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((o, r) => Object.assign(o, r.propTypes), {}) : {}, n.filterProps = e.reduce((o, r) => o.concat(r.filterProps), []), n;
}
function To(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function Po(e, t) {
  return rn({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const CO = Po("border", To), OO = Po("borderTop", To), $O = Po("borderRight", To), IO = Po("borderBottom", To), RO = Po("borderLeft", To), kO = Po("borderColor"), PO = Po("borderTopColor"), NO = Po("borderRightColor"), MO = Po("borderBottomColor"), _O = Po("borderLeftColor"), AO = Po("outline", To), DO = Po("outlineColor"), Wu = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = vl(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (o) => ({
      borderRadius: xl(t, o)
    });
    return Er(e, e.borderRadius, n);
  }
  return null;
};
Wu.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: Jr
} : {};
Wu.filterProps = ["borderRadius"];
Hu(CO, OO, $O, IO, RO, kO, PO, NO, MO, _O, Wu, AO, DO);
const Uu = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = vl(e.theme, "spacing", 8, "gap"), n = (o) => ({
      gap: xl(t, o)
    });
    return Er(e, e.gap, n);
  }
  return null;
};
Uu.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: Jr
} : {};
Uu.filterProps = ["gap"];
const qu = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = vl(e.theme, "spacing", 8, "columnGap"), n = (o) => ({
      columnGap: xl(t, o)
    });
    return Er(e, e.columnGap, n);
  }
  return null;
};
qu.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: Jr
} : {};
qu.filterProps = ["columnGap"];
const Ku = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = vl(e.theme, "spacing", 8, "rowGap"), n = (o) => ({
      rowGap: xl(t, o)
    });
    return Er(e, e.rowGap, n);
  }
  return null;
};
Ku.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: Jr
} : {};
Ku.filterProps = ["rowGap"];
const LO = rn({
  prop: "gridColumn"
}), BO = rn({
  prop: "gridRow"
}), FO = rn({
  prop: "gridAutoFlow"
}), zO = rn({
  prop: "gridAutoColumns"
}), jO = rn({
  prop: "gridAutoRows"
}), VO = rn({
  prop: "gridTemplateColumns"
}), HO = rn({
  prop: "gridTemplateRows"
}), WO = rn({
  prop: "gridTemplateAreas"
}), UO = rn({
  prop: "gridArea"
});
Hu(Uu, qu, Ku, LO, BO, FO, zO, jO, VO, HO, WO, UO);
function hs(e, t) {
  return t === "grey" ? t : e;
}
const qO = rn({
  prop: "color",
  themeKey: "palette",
  transform: hs
}), KO = rn({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: hs
}), YO = rn({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: hs
});
Hu(qO, KO, YO);
function ro(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const GO = rn({
  prop: "width",
  transform: ro
}), Rh = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var r, i, a, l, c;
      const o = ((a = (i = (r = e.theme) == null ? void 0 : r.breakpoints) == null ? void 0 : i.values) == null ? void 0 : a[n]) || Fu[n];
      return o ? ((c = (l = e.theme) == null ? void 0 : l.breakpoints) == null ? void 0 : c.unit) !== "px" ? {
        maxWidth: `${o}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: o
      } : {
        maxWidth: ro(n)
      };
    };
    return Er(e, e.maxWidth, t);
  }
  return null;
};
Rh.filterProps = ["maxWidth"];
const XO = rn({
  prop: "minWidth",
  transform: ro
}), ZO = rn({
  prop: "height",
  transform: ro
}), QO = rn({
  prop: "maxHeight",
  transform: ro
}), JO = rn({
  prop: "minHeight",
  transform: ro
});
rn({
  prop: "size",
  cssProperty: "width",
  transform: ro
});
rn({
  prop: "size",
  cssProperty: "height",
  transform: ro
});
const e$ = rn({
  prop: "boxSizing"
});
Hu(GO, Rh, XO, ZO, QO, JO, e$);
const wl = {
  // borders
  border: {
    themeKey: "borders",
    transform: To
  },
  borderTop: {
    themeKey: "borders",
    transform: To
  },
  borderRight: {
    themeKey: "borders",
    transform: To
  },
  borderBottom: {
    themeKey: "borders",
    transform: To
  },
  borderLeft: {
    themeKey: "borders",
    transform: To
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: To
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: Wu
  },
  // palette
  color: {
    themeKey: "palette",
    transform: hs
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: hs
  },
  backgroundColor: {
    themeKey: "palette",
    transform: hs
  },
  // spacing
  p: {
    style: Qt
  },
  pt: {
    style: Qt
  },
  pr: {
    style: Qt
  },
  pb: {
    style: Qt
  },
  pl: {
    style: Qt
  },
  px: {
    style: Qt
  },
  py: {
    style: Qt
  },
  padding: {
    style: Qt
  },
  paddingTop: {
    style: Qt
  },
  paddingRight: {
    style: Qt
  },
  paddingBottom: {
    style: Qt
  },
  paddingLeft: {
    style: Qt
  },
  paddingX: {
    style: Qt
  },
  paddingY: {
    style: Qt
  },
  paddingInline: {
    style: Qt
  },
  paddingInlineStart: {
    style: Qt
  },
  paddingInlineEnd: {
    style: Qt
  },
  paddingBlock: {
    style: Qt
  },
  paddingBlockStart: {
    style: Qt
  },
  paddingBlockEnd: {
    style: Qt
  },
  m: {
    style: Zt
  },
  mt: {
    style: Zt
  },
  mr: {
    style: Zt
  },
  mb: {
    style: Zt
  },
  ml: {
    style: Zt
  },
  mx: {
    style: Zt
  },
  my: {
    style: Zt
  },
  margin: {
    style: Zt
  },
  marginTop: {
    style: Zt
  },
  marginRight: {
    style: Zt
  },
  marginBottom: {
    style: Zt
  },
  marginLeft: {
    style: Zt
  },
  marginX: {
    style: Zt
  },
  marginY: {
    style: Zt
  },
  marginInline: {
    style: Zt
  },
  marginInlineStart: {
    style: Zt
  },
  marginInlineEnd: {
    style: Zt
  },
  marginBlock: {
    style: Zt
  },
  marginBlockStart: {
    style: Zt
  },
  marginBlockEnd: {
    style: Zt
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: Uu
  },
  rowGap: {
    style: Ku
  },
  columnGap: {
    style: qu
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: ro
  },
  maxWidth: {
    style: Rh
  },
  minWidth: {
    transform: ro
  },
  height: {
    transform: ro
  },
  maxHeight: {
    transform: ro
  },
  minHeight: {
    transform: ro
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function t$(...e) {
  const t = e.reduce((o, r) => o.concat(Object.keys(r)), []), n = new Set(t);
  return e.every((o) => n.size === Object.keys(o).length);
}
function n$(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function o$() {
  function e(n, o, r, i) {
    const a = {
      [n]: o,
      theme: r
    }, l = i[n];
    if (!l)
      return {
        [n]: o
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: f,
      style: d
    } = l;
    if (o == null)
      return null;
    if (u === "typography" && o === "inherit")
      return {
        [n]: o
      };
    const p = zu(r, u) || {};
    return d ? d(a) : Er(a, o, (g) => {
      let m = Yc(p, f, g);
      return g === m && typeof g == "string" && (m = Yc(p, f, `${n}${g === "default" ? "" : fe(g)}`, g)), c === !1 ? m : {
        [c]: m
      };
    });
  }
  function t(n) {
    const {
      sx: o,
      theme: r = {}
    } = n || {};
    if (!o)
      return null;
    const i = r.unstable_sxConfig ?? wl;
    function a(l) {
      let c = l;
      if (typeof l == "function")
        c = l(r);
      else if (typeof l != "object")
        return l;
      if (!c)
        return null;
      const u = gO(r.breakpoints), f = Object.keys(u);
      let d = u;
      return Object.keys(c).forEach((p) => {
        const h = n$(c[p], r);
        if (h != null)
          if (typeof h == "object")
            if (i[p])
              d = Ia(d, e(p, h, r, i));
            else {
              const g = Er({
                theme: r
              }, h, (m) => ({
                [p]: m
              }));
              t$(g, h) ? d[p] = t({
                sx: h,
                theme: r
              }) : d = Ia(d, g);
            }
          else
            d = Ia(d, e(p, h, r, i));
      }), dO(r, yO(f, d));
    }
    return Array.isArray(o) ? o.map(a) : a(o);
  }
  return t;
}
const Kr = o$();
Kr.filterProps = ["sx"];
const r$ = (e) => {
  var o;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((o = e == null ? void 0 : e.theme) == null ? void 0 : o.unstable_sxConfig) ?? wl;
  return Object.keys(e).forEach((r) => {
    n[r] ? t.systemProps[r] = e[r] : t.otherProps[r] = e[r];
  }), t;
};
function ax(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: o,
    otherProps: r
  } = r$(n);
  let i;
  return Array.isArray(t) ? i = [o, ...t] : typeof t == "function" ? i = (...a) => {
    const l = t(...a);
    return tr(l) ? {
      ...o,
      ...l
    } : o;
  } : i = {
    ...o,
    ...t
  }, {
    ...r,
    sx: i
  };
}
function Gc() {
  return Gc = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var o in n) ({}).hasOwnProperty.call(n, o) && (e[o] = n[o]);
    }
    return e;
  }, Gc.apply(null, arguments);
}
function i$(e) {
  if (e.sheet)
    return e.sheet;
  for (var t = 0; t < document.styleSheets.length; t++)
    if (document.styleSheets[t].ownerNode === e)
      return document.styleSheets[t];
}
function s$(e) {
  var t = document.createElement("style");
  return t.setAttribute("data-emotion", e.key), e.nonce !== void 0 && t.setAttribute("nonce", e.nonce), t.appendChild(document.createTextNode("")), t.setAttribute("data-s", ""), t;
}
var a$ = /* @__PURE__ */ function() {
  function e(n) {
    var o = this;
    this._insertTag = function(r) {
      var i;
      o.tags.length === 0 ? o.insertionPoint ? i = o.insertionPoint.nextSibling : o.prepend ? i = o.container.firstChild : i = o.before : i = o.tags[o.tags.length - 1].nextSibling, o.container.insertBefore(r, i), o.tags.push(r);
    }, this.isSpeedy = n.speedy === void 0 ? !0 : n.speedy, this.tags = [], this.ctr = 0, this.nonce = n.nonce, this.key = n.key, this.container = n.container, this.prepend = n.prepend, this.insertionPoint = n.insertionPoint, this.before = null;
  }
  var t = e.prototype;
  return t.hydrate = function(o) {
    o.forEach(this._insertTag);
  }, t.insert = function(o) {
    this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(s$(this));
    var r = this.tags[this.tags.length - 1];
    if (this.isSpeedy) {
      var i = i$(r);
      try {
        i.insertRule(o, i.cssRules.length);
      } catch {
      }
    } else
      r.appendChild(document.createTextNode(o));
    this.ctr++;
  }, t.flush = function() {
    this.tags.forEach(function(o) {
      var r;
      return (r = o.parentNode) == null ? void 0 : r.removeChild(o);
    }), this.tags = [], this.ctr = 0;
  }, e;
}(), In = "-ms-", Xc = "-moz-", xt = "-webkit-", lx = "comm", kh = "rule", Ph = "decl", l$ = "@import", cx = "@keyframes", c$ = "@layer", u$ = Math.abs, Yu = String.fromCharCode, d$ = Object.assign;
function f$(e, t) {
  return Tn(e, 0) ^ 45 ? (((t << 2 ^ Tn(e, 0)) << 2 ^ Tn(e, 1)) << 2 ^ Tn(e, 2)) << 2 ^ Tn(e, 3) : 0;
}
function ux(e) {
  return e.trim();
}
function p$(e, t) {
  return (e = t.exec(e)) ? e[0] : e;
}
function wt(e, t, n) {
  return e.replace(t, n);
}
function bp(e, t) {
  return e.indexOf(t);
}
function Tn(e, t) {
  return e.charCodeAt(t) | 0;
}
function Ha(e, t, n) {
  return e.slice(t, n);
}
function Qo(e) {
  return e.length;
}
function Nh(e) {
  return e.length;
}
function ec(e, t) {
  return t.push(e), e;
}
function h$(e, t) {
  return e.map(t).join("");
}
var Gu = 1, ws = 1, dx = 0, Zn = 0, cn = 0, Vs = "";
function Xu(e, t, n, o, r, i, a) {
  return { value: e, root: t, parent: n, type: o, props: r, children: i, line: Gu, column: ws, length: a, return: "" };
}
function ea(e, t) {
  return d$(Xu("", null, null, "", null, null, 0), e, { length: -e.length }, t);
}
function m$() {
  return cn;
}
function g$() {
  return cn = Zn > 0 ? Tn(Vs, --Zn) : 0, ws--, cn === 10 && (ws = 1, Gu--), cn;
}
function co() {
  return cn = Zn < dx ? Tn(Vs, Zn++) : 0, ws++, cn === 10 && (ws = 1, Gu++), cn;
}
function ir() {
  return Tn(Vs, Zn);
}
function Nc() {
  return Zn;
}
function Sl(e, t) {
  return Ha(Vs, e, t);
}
function Wa(e) {
  switch (e) {
    // \0 \t \n \r \s whitespace token
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    // ! + , / > @ ~ isolate token
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    // ; { } breakpoint token
    case 59:
    case 123:
    case 125:
      return 4;
    // : accompanied token
    case 58:
      return 3;
    // " ' ( [ opening delimit token
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    // ) ] closing delimit token
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function fx(e) {
  return Gu = ws = 1, dx = Qo(Vs = e), Zn = 0, [];
}
function px(e) {
  return Vs = "", e;
}
function Mc(e) {
  return ux(Sl(Zn - 1, vp(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function y$(e) {
  for (; (cn = ir()) && cn < 33; )
    co();
  return Wa(e) > 2 || Wa(cn) > 3 ? "" : " ";
}
function b$(e, t) {
  for (; --t && co() && !(cn < 48 || cn > 102 || cn > 57 && cn < 65 || cn > 70 && cn < 97); )
    ;
  return Sl(e, Nc() + (t < 6 && ir() == 32 && co() == 32));
}
function vp(e) {
  for (; co(); )
    switch (cn) {
      // ] ) " '
      case e:
        return Zn;
      // " '
      case 34:
      case 39:
        e !== 34 && e !== 39 && vp(cn);
        break;
      // (
      case 40:
        e === 41 && vp(e);
        break;
      // \
      case 92:
        co();
        break;
    }
  return Zn;
}
function v$(e, t) {
  for (; co() && e + cn !== 57; )
    if (e + cn === 84 && ir() === 47)
      break;
  return "/*" + Sl(t, Zn - 1) + "*" + Yu(e === 47 ? e : co());
}
function x$(e) {
  for (; !Wa(ir()); )
    co();
  return Sl(e, Zn);
}
function w$(e) {
  return px(_c("", null, null, null, [""], e = fx(e), 0, [0], e));
}
function _c(e, t, n, o, r, i, a, l, c) {
  for (var u = 0, f = 0, d = a, p = 0, h = 0, g = 0, m = 1, y = 1, x = 1, T = 0, b = "", w = r, S = i, E = o, C = b; y; )
    switch (g = T, T = co()) {
      // (
      case 40:
        if (g != 108 && Tn(C, d - 1) == 58) {
          bp(C += wt(Mc(T), "&", "&\f"), "&\f") != -1 && (x = -1);
          break;
        }
      // " ' [
      case 34:
      case 39:
      case 91:
        C += Mc(T);
        break;
      // \t \n \r \s
      case 9:
      case 10:
      case 13:
      case 32:
        C += y$(g);
        break;
      // \
      case 92:
        C += b$(Nc() - 1, 7);
        continue;
      // /
      case 47:
        switch (ir()) {
          case 42:
          case 47:
            ec(S$(v$(co(), Nc()), t, n), c);
            break;
          default:
            C += "/";
        }
        break;
      // {
      case 123 * m:
        l[u++] = Qo(C) * x;
      // } ; \0
      case 125 * m:
      case 59:
      case 0:
        switch (T) {
          // \0 }
          case 0:
          case 125:
            y = 0;
          // ;
          case 59 + f:
            x == -1 && (C = wt(C, /\f/g, "")), h > 0 && Qo(C) - d && ec(h > 32 ? Fg(C + ";", o, n, d - 1) : Fg(wt(C, " ", "") + ";", o, n, d - 2), c);
            break;
          // @ ;
          case 59:
            C += ";";
          // { rule/at-rule
          default:
            if (ec(E = Bg(C, t, n, u, f, r, l, b, w = [], S = [], d), i), T === 123)
              if (f === 0)
                _c(C, t, E, E, w, i, d, l, S);
              else
                switch (p === 99 && Tn(C, 3) === 110 ? 100 : p) {
                  // d l m s
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    _c(e, E, E, o && ec(Bg(e, E, E, 0, 0, r, l, b, r, w = [], d), S), r, S, d, l, o ? w : S);
                    break;
                  default:
                    _c(C, E, E, E, [""], S, 0, l, S);
                }
        }
        u = f = h = 0, m = x = 1, b = C = "", d = a;
        break;
      // :
      case 58:
        d = 1 + Qo(C), h = g;
      default:
        if (m < 1) {
          if (T == 123)
            --m;
          else if (T == 125 && m++ == 0 && g$() == 125)
            continue;
        }
        switch (C += Yu(T), T * m) {
          // &
          case 38:
            x = f > 0 ? 1 : (C += "\f", -1);
            break;
          // ,
          case 44:
            l[u++] = (Qo(C) - 1) * x, x = 1;
            break;
          // @
          case 64:
            ir() === 45 && (C += Mc(co())), p = ir(), f = d = Qo(b = C += x$(Nc())), T++;
            break;
          // -
          case 45:
            g === 45 && Qo(C) == 2 && (m = 0);
        }
    }
  return i;
}
function Bg(e, t, n, o, r, i, a, l, c, u, f) {
  for (var d = r - 1, p = r === 0 ? i : [""], h = Nh(p), g = 0, m = 0, y = 0; g < o; ++g)
    for (var x = 0, T = Ha(e, d + 1, d = u$(m = a[g])), b = e; x < h; ++x)
      (b = ux(m > 0 ? p[x] + " " + T : wt(T, /&\f/g, p[x]))) && (c[y++] = b);
  return Xu(e, t, n, r === 0 ? kh : l, c, u, f);
}
function S$(e, t, n) {
  return Xu(e, t, n, lx, Yu(m$()), Ha(e, 2, -2), 0);
}
function Fg(e, t, n, o) {
  return Xu(e, t, n, Ph, Ha(e, 0, o), Ha(e, o + 1, -1), o);
}
function ms(e, t) {
  for (var n = "", o = Nh(e), r = 0; r < o; r++)
    n += t(e[r], r, e, t) || "";
  return n;
}
function T$(e, t, n, o) {
  switch (e.type) {
    case c$:
      if (e.children.length) break;
    case l$:
    case Ph:
      return e.return = e.return || e.value;
    case lx:
      return "";
    case cx:
      return e.return = e.value + "{" + ms(e.children, o) + "}";
    case kh:
      e.value = e.props.join(",");
  }
  return Qo(n = ms(e.children, o)) ? e.return = e.value + "{" + n + "}" : "";
}
function E$(e) {
  var t = Nh(e);
  return function(n, o, r, i) {
    for (var a = "", l = 0; l < t; l++)
      a += e[l](n, o, r, i) || "";
    return a;
  };
}
function C$(e) {
  return function(t) {
    t.root || (t = t.return) && e(t);
  };
}
function hx(e) {
  var t = /* @__PURE__ */ Object.create(null);
  return function(n) {
    return t[n] === void 0 && (t[n] = e(n)), t[n];
  };
}
var O$ = function(t, n, o) {
  for (var r = 0, i = 0; r = i, i = ir(), r === 38 && i === 12 && (n[o] = 1), !Wa(i); )
    co();
  return Sl(t, Zn);
}, $$ = function(t, n) {
  var o = -1, r = 44;
  do
    switch (Wa(r)) {
      case 0:
        r === 38 && ir() === 12 && (n[o] = 1), t[o] += O$(Zn - 1, n, o);
        break;
      case 2:
        t[o] += Mc(r);
        break;
      case 4:
        if (r === 44) {
          t[++o] = ir() === 58 ? "&\f" : "", n[o] = t[o].length;
          break;
        }
      // fallthrough
      default:
        t[o] += Yu(r);
    }
  while (r = co());
  return t;
}, I$ = function(t, n) {
  return px($$(fx(t), n));
}, zg = /* @__PURE__ */ new WeakMap(), R$ = function(t) {
  if (!(t.type !== "rule" || !t.parent || // positive .length indicates that this rule contains pseudo
  // negative .length indicates that this rule has been already prefixed
  t.length < 1)) {
    for (var n = t.value, o = t.parent, r = t.column === o.column && t.line === o.line; o.type !== "rule"; )
      if (o = o.parent, !o) return;
    if (!(t.props.length === 1 && n.charCodeAt(0) !== 58 && !zg.get(o)) && !r) {
      zg.set(t, !0);
      for (var i = [], a = I$(n, i), l = o.props, c = 0, u = 0; c < a.length; c++)
        for (var f = 0; f < l.length; f++, u++)
          t.props[u] = i[c] ? a[c].replace(/&\f/g, l[f]) : l[f] + " " + a[c];
    }
  }
}, k$ = function(t) {
  if (t.type === "decl") {
    var n = t.value;
    // charcode for l
    n.charCodeAt(0) === 108 && // charcode for b
    n.charCodeAt(2) === 98 && (t.return = "", t.value = "");
  }
};
function mx(e, t) {
  switch (f$(e, t)) {
    // color-adjust
    case 5103:
      return xt + "print-" + e + e;
    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return xt + e + e;
    // appearance, user-select, transform, hyphens, text-size-adjust
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return xt + e + Xc + e + In + e + e;
    // flex, flex-direction
    case 6828:
    case 4268:
      return xt + e + In + e + e;
    // order
    case 6165:
      return xt + e + In + "flex-" + e + e;
    // align-items
    case 5187:
      return xt + e + wt(e, /(\w+).+(:[^]+)/, xt + "box-$1$2" + In + "flex-$1$2") + e;
    // align-self
    case 5443:
      return xt + e + In + "flex-item-" + wt(e, /flex-|-self/, "") + e;
    // align-content
    case 4675:
      return xt + e + In + "flex-line-pack" + wt(e, /align-content|flex-|-self/, "") + e;
    // flex-shrink
    case 5548:
      return xt + e + In + wt(e, "shrink", "negative") + e;
    // flex-basis
    case 5292:
      return xt + e + In + wt(e, "basis", "preferred-size") + e;
    // flex-grow
    case 6060:
      return xt + "box-" + wt(e, "-grow", "") + xt + e + In + wt(e, "grow", "positive") + e;
    // transition
    case 4554:
      return xt + wt(e, /([^-])(transform)/g, "$1" + xt + "$2") + e;
    // cursor
    case 6187:
      return wt(wt(wt(e, /(zoom-|grab)/, xt + "$1"), /(image-set)/, xt + "$1"), e, "") + e;
    // background, background-image
    case 5495:
    case 3959:
      return wt(e, /(image-set\([^]*)/, xt + "$1$`$1");
    // justify-content
    case 4968:
      return wt(wt(e, /(.+:)(flex-)?(.*)/, xt + "box-pack:$3" + In + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + xt + e + e;
    // (margin|padding)-inline-(start|end)
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return wt(e, /(.+)-inline(.+)/, xt + "$1$2") + e;
    // (min|max)?(width|height|inline-size|block-size)
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (Qo(e) - 1 - t > 6) switch (Tn(e, t + 1)) {
        // (m)ax-content, (m)in-content
        case 109:
          if (Tn(e, t + 4) !== 45) break;
        // (f)ill-available, (f)it-content
        case 102:
          return wt(e, /(.+:)(.+)-([^]+)/, "$1" + xt + "$2-$3$1" + Xc + (Tn(e, t + 3) == 108 ? "$3" : "$2-$3")) + e;
        // (s)tretch
        case 115:
          return ~bp(e, "stretch") ? mx(wt(e, "stretch", "fill-available"), t) + e : e;
      }
      break;
    // position: sticky
    case 4949:
      if (Tn(e, t + 1) !== 115) break;
    // display: (flex|inline-flex)
    case 6444:
      switch (Tn(e, Qo(e) - 3 - (~bp(e, "!important") && 10))) {
        // stic(k)y
        case 107:
          return wt(e, ":", ":" + xt) + e;
        // (inline-)?fl(e)x
        case 101:
          return wt(e, /(.+:)([^;!]+)(;|!.+)?/, "$1" + xt + (Tn(e, 14) === 45 ? "inline-" : "") + "box$3$1" + xt + "$2$3$1" + In + "$2box$3") + e;
      }
      break;
    // writing-mode
    case 5936:
      switch (Tn(e, t + 11)) {
        // vertical-l(r)
        case 114:
          return xt + e + In + wt(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
        // vertical-r(l)
        case 108:
          return xt + e + In + wt(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
        // horizontal(-)tb
        case 45:
          return xt + e + In + wt(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
      }
      return xt + e + In + e + e;
  }
  return e;
}
var P$ = function(t, n, o, r) {
  if (t.length > -1 && !t.return) switch (t.type) {
    case Ph:
      t.return = mx(t.value, t.length);
      break;
    case cx:
      return ms([ea(t, {
        value: wt(t.value, "@", "@" + xt)
      })], r);
    case kh:
      if (t.length) return h$(t.props, function(i) {
        switch (p$(i, /(::plac\w+|:read-\w+)/)) {
          // :read-(only|write)
          case ":read-only":
          case ":read-write":
            return ms([ea(t, {
              props: [wt(i, /:(read-\w+)/, ":" + Xc + "$1")]
            })], r);
          // :placeholder
          case "::placeholder":
            return ms([ea(t, {
              props: [wt(i, /:(plac\w+)/, ":" + xt + "input-$1")]
            }), ea(t, {
              props: [wt(i, /:(plac\w+)/, ":" + Xc + "$1")]
            }), ea(t, {
              props: [wt(i, /:(plac\w+)/, In + "input-$1")]
            })], r);
        }
        return "";
      });
  }
}, N$ = [P$], M$ = function(t) {
  var n = t.key;
  if (n === "css") {
    var o = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(o, function(m) {
      var y = m.getAttribute("data-emotion");
      y.indexOf(" ") !== -1 && (document.head.appendChild(m), m.setAttribute("data-s", ""));
    });
  }
  var r = t.stylisPlugins || N$, i = {}, a, l = [];
  a = t.container || document.head, Array.prototype.forEach.call(
    // this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll('style[data-emotion^="' + n + ' "]'),
    function(m) {
      for (var y = m.getAttribute("data-emotion").split(" "), x = 1; x < y.length; x++)
        i[y[x]] = !0;
      l.push(m);
    }
  );
  var c, u = [R$, k$];
  {
    var f, d = [T$, C$(function(m) {
      f.insert(m);
    })], p = E$(u.concat(r, d)), h = function(y) {
      return ms(w$(y), p);
    };
    c = function(y, x, T, b) {
      f = T, h(y ? y + "{" + x.styles + "}" : x.styles), b && (g.inserted[x.name] = !0);
    };
  }
  var g = {
    key: n,
    sheet: new a$({
      key: n,
      container: a,
      nonce: t.nonce,
      speedy: t.speedy,
      prepend: t.prepend,
      insertionPoint: t.insertionPoint
    }),
    nonce: t.nonce,
    inserted: i,
    registered: {},
    insert: c
  };
  return g.sheet.hydrate(l), g;
}, tc = { exports: {} }, $t = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var jg;
function _$() {
  if (jg) return $t;
  jg = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, o = e ? Symbol.for("react.fragment") : 60107, r = e ? Symbol.for("react.strict_mode") : 60108, i = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, f = e ? Symbol.for("react.forward_ref") : 60112, d = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, h = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, y = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, T = e ? Symbol.for("react.scope") : 60119;
  function b(S) {
    if (typeof S == "object" && S !== null) {
      var E = S.$$typeof;
      switch (E) {
        case t:
          switch (S = S.type, S) {
            case c:
            case u:
            case o:
            case i:
            case r:
            case d:
              return S;
            default:
              switch (S = S && S.$$typeof, S) {
                case l:
                case f:
                case g:
                case h:
                case a:
                  return S;
                default:
                  return E;
              }
          }
        case n:
          return E;
      }
    }
  }
  function w(S) {
    return b(S) === u;
  }
  return $t.AsyncMode = c, $t.ConcurrentMode = u, $t.ContextConsumer = l, $t.ContextProvider = a, $t.Element = t, $t.ForwardRef = f, $t.Fragment = o, $t.Lazy = g, $t.Memo = h, $t.Portal = n, $t.Profiler = i, $t.StrictMode = r, $t.Suspense = d, $t.isAsyncMode = function(S) {
    return w(S) || b(S) === c;
  }, $t.isConcurrentMode = w, $t.isContextConsumer = function(S) {
    return b(S) === l;
  }, $t.isContextProvider = function(S) {
    return b(S) === a;
  }, $t.isElement = function(S) {
    return typeof S == "object" && S !== null && S.$$typeof === t;
  }, $t.isForwardRef = function(S) {
    return b(S) === f;
  }, $t.isFragment = function(S) {
    return b(S) === o;
  }, $t.isLazy = function(S) {
    return b(S) === g;
  }, $t.isMemo = function(S) {
    return b(S) === h;
  }, $t.isPortal = function(S) {
    return b(S) === n;
  }, $t.isProfiler = function(S) {
    return b(S) === i;
  }, $t.isStrictMode = function(S) {
    return b(S) === r;
  }, $t.isSuspense = function(S) {
    return b(S) === d;
  }, $t.isValidElementType = function(S) {
    return typeof S == "string" || typeof S == "function" || S === o || S === u || S === i || S === r || S === d || S === p || typeof S == "object" && S !== null && (S.$$typeof === g || S.$$typeof === h || S.$$typeof === a || S.$$typeof === l || S.$$typeof === f || S.$$typeof === y || S.$$typeof === x || S.$$typeof === T || S.$$typeof === m);
  }, $t.typeOf = b, $t;
}
var It = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Vg;
function A$() {
  return Vg || (Vg = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, o = e ? Symbol.for("react.fragment") : 60107, r = e ? Symbol.for("react.strict_mode") : 60108, i = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, f = e ? Symbol.for("react.forward_ref") : 60112, d = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, h = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, y = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, T = e ? Symbol.for("react.scope") : 60119;
    function b(V) {
      return typeof V == "string" || typeof V == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      V === o || V === u || V === i || V === r || V === d || V === p || typeof V == "object" && V !== null && (V.$$typeof === g || V.$$typeof === h || V.$$typeof === a || V.$$typeof === l || V.$$typeof === f || V.$$typeof === y || V.$$typeof === x || V.$$typeof === T || V.$$typeof === m);
    }
    function w(V) {
      if (typeof V == "object" && V !== null) {
        var de = V.$$typeof;
        switch (de) {
          case t:
            var ue = V.type;
            switch (ue) {
              case c:
              case u:
              case o:
              case i:
              case r:
              case d:
                return ue;
              default:
                var xe = ue && ue.$$typeof;
                switch (xe) {
                  case l:
                  case f:
                  case g:
                  case h:
                  case a:
                    return xe;
                  default:
                    return de;
                }
            }
          case n:
            return de;
        }
      }
    }
    var S = c, E = u, C = l, R = a, M = t, v = f, I = o, k = g, A = h, O = n, _ = i, N = r, L = d, F = !1;
    function D(V) {
      return F || (F = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), B(V) || w(V) === c;
    }
    function B(V) {
      return w(V) === u;
    }
    function z(V) {
      return w(V) === l;
    }
    function U(V) {
      return w(V) === a;
    }
    function q(V) {
      return typeof V == "object" && V !== null && V.$$typeof === t;
    }
    function Y(V) {
      return w(V) === f;
    }
    function K(V) {
      return w(V) === o;
    }
    function te(V) {
      return w(V) === g;
    }
    function ne(V) {
      return w(V) === h;
    }
    function W(V) {
      return w(V) === n;
    }
    function ee(V) {
      return w(V) === i;
    }
    function G(V) {
      return w(V) === r;
    }
    function re(V) {
      return w(V) === d;
    }
    It.AsyncMode = S, It.ConcurrentMode = E, It.ContextConsumer = C, It.ContextProvider = R, It.Element = M, It.ForwardRef = v, It.Fragment = I, It.Lazy = k, It.Memo = A, It.Portal = O, It.Profiler = _, It.StrictMode = N, It.Suspense = L, It.isAsyncMode = D, It.isConcurrentMode = B, It.isContextConsumer = z, It.isContextProvider = U, It.isElement = q, It.isForwardRef = Y, It.isFragment = K, It.isLazy = te, It.isMemo = ne, It.isPortal = W, It.isProfiler = ee, It.isStrictMode = G, It.isSuspense = re, It.isValidElementType = b, It.typeOf = w;
  }()), It;
}
var Hg;
function D$() {
  return Hg || (Hg = 1, process.env.NODE_ENV === "production" ? tc.exports = _$() : tc.exports = A$()), tc.exports;
}
var mf, Wg;
function L$() {
  if (Wg) return mf;
  Wg = 1;
  var e = D$(), t = {
    childContextTypes: !0,
    contextType: !0,
    contextTypes: !0,
    defaultProps: !0,
    displayName: !0,
    getDefaultProps: !0,
    getDerivedStateFromError: !0,
    getDerivedStateFromProps: !0,
    mixins: !0,
    propTypes: !0,
    type: !0
  }, n = {
    name: !0,
    length: !0,
    prototype: !0,
    caller: !0,
    callee: !0,
    arguments: !0,
    arity: !0
  }, o = {
    $$typeof: !0,
    render: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0
  }, r = {
    $$typeof: !0,
    compare: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0,
    type: !0
  }, i = {};
  i[e.ForwardRef] = o, i[e.Memo] = r;
  function a(g) {
    return e.isMemo(g) ? r : i[g.$$typeof] || t;
  }
  var l = Object.defineProperty, c = Object.getOwnPropertyNames, u = Object.getOwnPropertySymbols, f = Object.getOwnPropertyDescriptor, d = Object.getPrototypeOf, p = Object.prototype;
  function h(g, m, y) {
    if (typeof m != "string") {
      if (p) {
        var x = d(m);
        x && x !== p && h(g, x, y);
      }
      var T = c(m);
      u && (T = T.concat(u(m)));
      for (var b = a(g), w = a(m), S = 0; S < T.length; ++S) {
        var E = T[S];
        if (!n[E] && !(y && y[E]) && !(w && w[E]) && !(b && b[E])) {
          var C = f(m, E);
          try {
            l(g, E, C);
          } catch {
          }
        }
      }
    }
    return g;
  }
  return mf = h, mf;
}
L$();
var B$ = !0;
function gx(e, t, n) {
  var o = "";
  return n.split(" ").forEach(function(r) {
    e[r] !== void 0 ? t.push(e[r] + ";") : r && (o += r + " ");
  }), o;
}
var Mh = function(t, n, o) {
  var r = t.key + "-" + n.name;
  // we only need to add the styles to the registered cache if the
  // class name could be used further down
  // the tree but if it's a string tag, we know it won't
  // so we don't have to add it to registered cache.
  // this improves memory usage since we can avoid storing the whole style string
  (o === !1 || // we need to always store it if we're in compat mode and
  // in node since emotion-server relies on whether a style is in
  // the registered cache to know whether a style is global or not
  // also, note that this check will be dead code eliminated in the browser
  B$ === !1) && t.registered[r] === void 0 && (t.registered[r] = n.styles);
}, _h = function(t, n, o) {
  Mh(t, n, o);
  var r = t.key + "-" + n.name;
  if (t.inserted[n.name] === void 0) {
    var i = n;
    do
      t.insert(n === i ? "." + r : "", i, t.sheet, !0), i = i.next;
    while (i !== void 0);
  }
};
function F$(e) {
  for (var t = 0, n, o = 0, r = e.length; r >= 4; ++o, r -= 4)
    n = e.charCodeAt(o) & 255 | (e.charCodeAt(++o) & 255) << 8 | (e.charCodeAt(++o) & 255) << 16 | (e.charCodeAt(++o) & 255) << 24, n = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16), n ^= /* k >>> r: */
    n >>> 24, t = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  switch (r) {
    case 3:
      t ^= (e.charCodeAt(o + 2) & 255) << 16;
    case 2:
      t ^= (e.charCodeAt(o + 1) & 255) << 8;
    case 1:
      t ^= e.charCodeAt(o) & 255, t = /* Math.imul(h, m): */
      (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  }
  return t ^= t >>> 13, t = /* Math.imul(h, m): */
  (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16), ((t ^ t >>> 15) >>> 0).toString(36);
}
var z$ = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  scale: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, j$ = /[A-Z]|^ms/g, V$ = /_EMO_([^_]+?)_([^]*?)_EMO_/g, yx = function(t) {
  return t.charCodeAt(1) === 45;
}, Ug = function(t) {
  return t != null && typeof t != "boolean";
}, gf = /* @__PURE__ */ hx(function(e) {
  return yx(e) ? e : e.replace(j$, "-$&").toLowerCase();
}), qg = function(t, n) {
  switch (t) {
    case "animation":
    case "animationName":
      if (typeof n == "string")
        return n.replace(V$, function(o, r, i) {
          return Jo = {
            name: r,
            styles: i,
            next: Jo
          }, r;
        });
  }
  return z$[t] !== 1 && !yx(t) && typeof n == "number" && n !== 0 ? n + "px" : n;
};
function Ua(e, t, n) {
  if (n == null)
    return "";
  var o = n;
  if (o.__emotion_styles !== void 0)
    return o;
  switch (typeof n) {
    case "boolean":
      return "";
    case "object": {
      var r = n;
      if (r.anim === 1)
        return Jo = {
          name: r.name,
          styles: r.styles,
          next: Jo
        }, r.name;
      var i = n;
      if (i.styles !== void 0) {
        var a = i.next;
        if (a !== void 0)
          for (; a !== void 0; )
            Jo = {
              name: a.name,
              styles: a.styles,
              next: Jo
            }, a = a.next;
        var l = i.styles + ";";
        return l;
      }
      return H$(e, t, n);
    }
    case "function": {
      if (e !== void 0) {
        var c = Jo, u = n(e);
        return Jo = c, Ua(e, t, u);
      }
      break;
    }
  }
  var f = n;
  if (t == null)
    return f;
  var d = t[f];
  return d !== void 0 ? d : f;
}
function H$(e, t, n) {
  var o = "";
  if (Array.isArray(n))
    for (var r = 0; r < n.length; r++)
      o += Ua(e, t, n[r]) + ";";
  else
    for (var i in n) {
      var a = n[i];
      if (typeof a != "object") {
        var l = a;
        t != null && t[l] !== void 0 ? o += i + "{" + t[l] + "}" : Ug(l) && (o += gf(i) + ":" + qg(i, l) + ";");
      } else if (Array.isArray(a) && typeof a[0] == "string" && (t == null || t[a[0]] === void 0))
        for (var c = 0; c < a.length; c++)
          Ug(a[c]) && (o += gf(i) + ":" + qg(i, a[c]) + ";");
      else {
        var u = Ua(e, t, a);
        switch (i) {
          case "animation":
          case "animationName": {
            o += gf(i) + ":" + u + ";";
            break;
          }
          default:
            o += i + "{" + u + "}";
        }
      }
    }
  return o;
}
var Kg = /label:\s*([^\s;{]+)\s*(;|$)/g, Jo;
function Hs(e, t, n) {
  if (e.length === 1 && typeof e[0] == "object" && e[0] !== null && e[0].styles !== void 0)
    return e[0];
  var o = !0, r = "";
  Jo = void 0;
  var i = e[0];
  if (i == null || i.raw === void 0)
    o = !1, r += Ua(n, t, i);
  else {
    var a = i;
    r += a[0];
  }
  for (var l = 1; l < e.length; l++)
    if (r += Ua(n, t, e[l]), o) {
      var c = i;
      r += c[l];
    }
  Kg.lastIndex = 0;
  for (var u = "", f; (f = Kg.exec(r)) !== null; )
    u += "-" + f[1];
  var d = F$(r) + u;
  return {
    name: d,
    styles: r,
    next: Jo
  };
}
var W$ = function(t) {
  return t();
}, bx = P.useInsertionEffect ? P.useInsertionEffect : !1, vx = bx || W$, Yg = bx || P.useLayoutEffect, xx = /* @__PURE__ */ P.createContext(
  // we're doing this to avoid preconstruct's dead code elimination in this one case
  // because this module is primarily intended for the browser and node
  // but it's also required in react native and similar environments sometimes
  // and we could have a special build just for that
  // but this is much easier and the native packages
  // might use a different theme context in the future anyway
  typeof HTMLElement < "u" ? /* @__PURE__ */ M$({
    key: "css"
  }) : null
);
xx.Provider;
var Ah = function(t) {
  return /* @__PURE__ */ yl(function(n, o) {
    var r = Qr(xx);
    return t(n, r, o);
  });
}, Ws = /* @__PURE__ */ P.createContext({}), Dh = {}.hasOwnProperty, xp = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__", U$ = function(t, n) {
  var o = {};
  for (var r in n)
    Dh.call(n, r) && (o[r] = n[r]);
  return o[xp] = t, o;
}, q$ = function(t) {
  var n = t.cache, o = t.serialized, r = t.isStringTag;
  return Mh(n, o, r), vx(function() {
    return _h(n, o, r);
  }), null;
}, K$ = /* @__PURE__ */ Ah(function(e, t, n) {
  var o = e.css;
  typeof o == "string" && t.registered[o] !== void 0 && (o = t.registered[o]);
  var r = e[xp], i = [o], a = "";
  typeof e.className == "string" ? a = gx(t.registered, i, e.className) : e.className != null && (a = e.className + " ");
  var l = Hs(i, void 0, P.useContext(Ws));
  a += t.key + "-" + l.name;
  var c = {};
  for (var u in e)
    Dh.call(e, u) && u !== "css" && u !== xp && (c[u] = e[u]);
  return c.className = a, n && (c.ref = n), /* @__PURE__ */ P.createElement(P.Fragment, null, /* @__PURE__ */ P.createElement(q$, {
    cache: t,
    serialized: l,
    isStringTag: typeof r == "string"
  }), /* @__PURE__ */ P.createElement(r, c));
}), Y$ = K$, Gg = function(t, n) {
  var o = arguments;
  if (n == null || !Dh.call(n, "css"))
    return P.createElement.apply(void 0, o);
  var r = o.length, i = new Array(r);
  i[0] = Y$, i[1] = U$(t, n);
  for (var a = 2; a < r; a++)
    i[a] = o[a];
  return P.createElement.apply(null, i);
};
(function(e) {
  var t;
  t || (t = e.JSX || (e.JSX = {}));
})(Gg || (Gg = {}));
var wx = /* @__PURE__ */ Ah(function(e, t) {
  var n = e.styles, o = Hs([n], void 0, P.useContext(Ws)), r = P.useRef();
  return Yg(function() {
    var i = t.key + "-global", a = new t.sheet.constructor({
      key: i,
      nonce: t.sheet.nonce,
      container: t.sheet.container,
      speedy: t.sheet.isSpeedy
    }), l = !1, c = document.querySelector('style[data-emotion="' + i + " " + o.name + '"]');
    return t.sheet.tags.length && (a.before = t.sheet.tags[0]), c !== null && (l = !0, c.setAttribute("data-emotion", i), a.hydrate([c])), r.current = [a, l], function() {
      a.flush();
    };
  }, [t]), Yg(function() {
    var i = r.current, a = i[0], l = i[1];
    if (l) {
      i[1] = !1;
      return;
    }
    if (o.next !== void 0 && _h(t, o.next, !0), a.tags.length) {
      var c = a.tags[a.tags.length - 1].nextElementSibling;
      a.before = c, a.flush();
    }
    t.insert("", o, a, !1);
  }, [t, o.name]), null;
});
function Us() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return Hs(t);
}
function ei() {
  var e = Us.apply(void 0, arguments), t = "animation-" + e.name;
  return {
    name: t,
    styles: "@keyframes " + t + "{" + e.styles + "}",
    anim: 1,
    toString: function() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
}
var G$ = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, X$ = /* @__PURE__ */ hx(
  function(e) {
    return G$.test(e) || e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && e.charCodeAt(2) < 91;
  }
  /* Z+1 */
), Z$ = X$, Q$ = function(t) {
  return t !== "theme";
}, Xg = function(t) {
  return typeof t == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  t.charCodeAt(0) > 96 ? Z$ : Q$;
}, Zg = function(t, n, o) {
  var r;
  if (n) {
    var i = n.shouldForwardProp;
    r = t.__emotion_forwardProp && i ? function(a) {
      return t.__emotion_forwardProp(a) && i(a);
    } : i;
  }
  return typeof r != "function" && o && (r = t.__emotion_forwardProp), r;
}, J$ = function(t) {
  var n = t.cache, o = t.serialized, r = t.isStringTag;
  return Mh(n, o, r), vx(function() {
    return _h(n, o, r);
  }), null;
}, eI = function e(t, n) {
  var o = t.__emotion_real === t, r = o && t.__emotion_base || t, i, a;
  n !== void 0 && (i = n.label, a = n.target);
  var l = Zg(t, n, o), c = l || Xg(r), u = !c("as");
  return function() {
    var f = arguments, d = o && t.__emotion_styles !== void 0 ? t.__emotion_styles.slice(0) : [];
    if (i !== void 0 && d.push("label:" + i + ";"), f[0] == null || f[0].raw === void 0)
      d.push.apply(d, f);
    else {
      var p = f[0];
      d.push(p[0]);
      for (var h = f.length, g = 1; g < h; g++)
        d.push(f[g], p[g]);
    }
    var m = Ah(function(y, x, T) {
      var b = u && y.as || r, w = "", S = [], E = y;
      if (y.theme == null) {
        E = {};
        for (var C in y)
          E[C] = y[C];
        E.theme = P.useContext(Ws);
      }
      typeof y.className == "string" ? w = gx(x.registered, S, y.className) : y.className != null && (w = y.className + " ");
      var R = Hs(d.concat(S), x.registered, E);
      w += x.key + "-" + R.name, a !== void 0 && (w += " " + a);
      var M = u && l === void 0 ? Xg(b) : c, v = {};
      for (var I in y)
        u && I === "as" || M(I) && (v[I] = y[I]);
      return v.className = w, T && (v.ref = T), /* @__PURE__ */ P.createElement(P.Fragment, null, /* @__PURE__ */ P.createElement(J$, {
        cache: x,
        serialized: R,
        isStringTag: typeof b == "string"
      }), /* @__PURE__ */ P.createElement(b, v));
    });
    return m.displayName = i !== void 0 ? i : "Styled(" + (typeof r == "string" ? r : r.displayName || r.name || "Component") + ")", m.defaultProps = t.defaultProps, m.__emotion_real = m, m.__emotion_base = r, m.__emotion_styles = d, m.__emotion_forwardProp = l, Object.defineProperty(m, "toString", {
      value: function() {
        return "." + a;
      }
    }), m.withComponent = function(y, x) {
      var T = e(y, Gc({}, n, x, {
        shouldForwardProp: Zg(m, x, !0)
      }));
      return T.apply(void 0, d);
    }, m;
  };
}, tI = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], Zc = eI.bind(null);
tI.forEach(function(e) {
  Zc[e] = Zc(e);
});
function nI(e) {
  return e == null || Object.keys(e).length === 0;
}
function Lh(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e;
  return /* @__PURE__ */ $(wx, {
    styles: typeof t == "function" ? (r) => t(nI(r) ? n : r) : t
  });
}
process.env.NODE_ENV !== "production" && (Lh.propTypes = {
  defaultTheme: s.object,
  styles: s.oneOfType([s.array, s.string, s.object, s.func])
});
/**
 * @mui/styled-engine v7.0.1
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function Sx(e, t) {
  const n = Zc(e, t);
  return process.env.NODE_ENV !== "production" ? (...o) => {
    const r = typeof e == "string" ? `"${e}"` : "component";
    return o.length === 0 ? console.error([`MUI: Seems like you called \`styled(${r})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : o.some((i) => i === void 0) && console.error(`MUI: the styled(${r})(...args) API requires all its args to be defined.`), n(...o);
  } : n;
}
function oI(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const Qg = [];
function Jg(e) {
  return Qg[0] = e, Hs(Qg);
}
const rI = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, o) => n.val - o.val), t.reduce((n, o) => ({
    ...n,
    [o.key]: o.val
  }), {});
};
function iI(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: o = 5,
    ...r
  } = e, i = rI(t), a = Object.keys(i);
  function l(p) {
    return `@media (min-width:${typeof t[p] == "number" ? t[p] : p}${n})`;
  }
  function c(p) {
    return `@media (max-width:${(typeof t[p] == "number" ? t[p] : p) - o / 100}${n})`;
  }
  function u(p, h) {
    const g = a.indexOf(h);
    return `@media (min-width:${typeof t[p] == "number" ? t[p] : p}${n}) and (max-width:${(g !== -1 && typeof t[a[g]] == "number" ? t[a[g]] : h) - o / 100}${n})`;
  }
  function f(p) {
    return a.indexOf(p) + 1 < a.length ? u(p, a[a.indexOf(p) + 1]) : l(p);
  }
  function d(p) {
    const h = a.indexOf(p);
    return h === 0 ? l(a[1]) : h === a.length - 1 ? c(a[h]) : u(p, a[a.indexOf(p) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: a,
    values: i,
    up: l,
    down: c,
    between: u,
    only: f,
    not: d,
    unit: n,
    ...r
  };
}
const sI = {
  borderRadius: 4
};
function Tx(e = 8, t = Ih({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...o) => (process.env.NODE_ENV !== "production" && (o.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${o.length}`)), (o.length === 0 ? [1] : o).map((i) => {
    const a = t(i);
    return typeof a == "number" ? `${a}px` : a;
  }).join(" "));
  return n.mui = !0, n;
}
function aI(e, t) {
  var o;
  const n = this;
  if (n.vars) {
    if (!((o = n.colorSchemes) != null && o[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let r = n.getColorSchemeSelector(e);
    return r === "&" ? t : ((r.includes("data-") || r.includes(".")) && (r = `*:where(${r.replace(/\s*&$/, "")}) &`), {
      [r]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function Zu(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: o = {},
    spacing: r,
    shape: i = {},
    ...a
  } = e, l = iI(n), c = Tx(r);
  let u = Mn({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...o
    },
    spacing: c,
    shape: {
      ...sI,
      ...i
    }
  }, a);
  return u = hO(u), u.applyStyles = aI, u = t.reduce((f, d) => Mn(f, d), u), u.unstable_sxConfig = {
    ...wl,
    ...a == null ? void 0 : a.unstable_sxConfig
  }, u.unstable_sx = function(d) {
    return Kr({
      sx: d,
      theme: this
    });
  }, u;
}
function lI(e) {
  return Object.keys(e).length === 0;
}
function Bh(e = null) {
  const t = P.useContext(Ws);
  return !t || lI(t) ? e : t;
}
const cI = Zu();
function Qu(e = cI) {
  return Bh(e);
}
function Ex({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const o = Qu(n), r = typeof e == "function" ? e(t && o[t] || o) : e;
  return /* @__PURE__ */ $(Lh, {
    styles: r
  });
}
process.env.NODE_ENV !== "production" && (Ex.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: s.object,
  /**
   * @ignore
   */
  styles: s.oneOfType([s.array, s.func, s.number, s.object, s.string, s.bool]),
  /**
   * @ignore
   */
  themeId: s.string
});
const ey = (e) => e, uI = () => {
  let e = ey;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = ey;
    }
  };
}, Cx = uI();
function dI(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: o = "MuiBox-root",
    generateClassName: r
  } = e, i = Sx("div", {
    shouldForwardProp: (l) => l !== "theme" && l !== "sx" && l !== "as"
  })(Kr);
  return /* @__PURE__ */ P.forwardRef(function(c, u) {
    const f = Qu(n), {
      className: d,
      component: p = "div",
      ...h
    } = ax(c);
    return /* @__PURE__ */ $(i, {
      as: p,
      ref: u,
      className: Re(d, r ? r(o) : o),
      theme: t && f[t] || f,
      ...h
    });
  });
}
const fI = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function tt(e, t, n = "Mui") {
  const o = fI[t];
  return o ? `${n}-${o}` : `${Cx.generate(e)}-${t}`;
}
function it(e, t, n = "Mui") {
  const o = {};
  return t.forEach((r) => {
    o[r] = tt(e, r, n);
  }), o;
}
function Ox(e, t = "") {
  return e.displayName || e.name || t;
}
function ty(e, t, n) {
  const o = Ox(t);
  return e.displayName || (o !== "" ? `${n}(${o})` : n);
}
function pI(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return Ox(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case Xn.ForwardRef:
          return ty(e, e.render, "ForwardRef");
        case Xn.Memo:
          return ty(e, e.type, "memo");
        default:
          return;
      }
  }
}
function $x(e) {
  const {
    variants: t,
    ...n
  } = e, o = {
    variants: t,
    style: Jg(n),
    isProcessed: !0
  };
  return o.style === n || t && t.forEach((r) => {
    typeof r.style != "function" && (r.style = Jg(r.style));
  }), o;
}
const hI = Zu();
function yf(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function mI(e) {
  return e ? (t, n) => n[e] : null;
}
function gI(e, t, n) {
  e.theme = vI(e.theme) ? n : e.theme[t] || e.theme;
}
function Ac(e, t) {
  const n = typeof t == "function" ? t(e) : t;
  if (Array.isArray(n))
    return n.flatMap((o) => Ac(e, o));
  if (Array.isArray(n == null ? void 0 : n.variants)) {
    let o;
    if (n.isProcessed)
      o = n.style;
    else {
      const {
        variants: r,
        ...i
      } = n;
      o = i;
    }
    return Ix(e, n.variants, [o]);
  }
  return n != null && n.isProcessed ? n.style : n;
}
function Ix(e, t, n = []) {
  var r;
  let o;
  e: for (let i = 0; i < t.length; i += 1) {
    const a = t[i];
    if (typeof a.props == "function") {
      if (o ?? (o = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !a.props(o))
        continue;
    } else
      for (const l in a.props)
        if (e[l] !== a.props[l] && ((r = e.ownerState) == null ? void 0 : r[l]) !== a.props[l])
          continue e;
    typeof a.style == "function" ? (o ?? (o = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(a.style(o))) : n.push(a.style);
  }
  return n;
}
function Rx(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = hI,
    rootShouldForwardProp: o = yf,
    slotShouldForwardProp: r = yf
  } = e;
  function i(l) {
    gI(l, t, n);
  }
  return (l, c = {}) => {
    oI(l, (S) => S.filter((E) => E !== Kr));
    const {
      name: u,
      slot: f,
      skipVariantsResolver: d,
      skipSx: p,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: h = mI(kx(f)),
      ...g
    } = c, m = d !== void 0 ? d : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      f && f !== "Root" && f !== "root" || !1
    ), y = p || !1;
    let x = yf;
    f === "Root" || f === "root" ? x = o : f ? x = r : xI(l) && (x = void 0);
    const T = Sx(l, {
      shouldForwardProp: x,
      label: bI(u, f),
      ...g
    }), b = (S) => {
      if (typeof S == "function" && S.__emotion_real !== S)
        return function(C) {
          return Ac(C, S);
        };
      if (tr(S)) {
        const E = $x(S);
        return E.variants ? function(R) {
          return Ac(R, E);
        } : E.style;
      }
      return S;
    }, w = (...S) => {
      const E = [], C = S.map(b), R = [];
      if (E.push(i), u && h && R.push(function(k) {
        var N, L;
        const O = (L = (N = k.theme.components) == null ? void 0 : N[u]) == null ? void 0 : L.styleOverrides;
        if (!O)
          return null;
        const _ = {};
        for (const F in O)
          _[F] = Ac(k, O[F]);
        return h(k, _);
      }), u && !m && R.push(function(k) {
        var _, N;
        const A = k.theme, O = (N = (_ = A == null ? void 0 : A.components) == null ? void 0 : _[u]) == null ? void 0 : N.variants;
        return O ? Ix(k, O) : null;
      }), y || R.push(Kr), Array.isArray(C[0])) {
        const I = C.shift(), k = new Array(E.length).fill(""), A = new Array(R.length).fill("");
        let O;
        O = [...k, ...I, ...A], O.raw = [...k, ...I.raw, ...A], E.unshift(O);
      }
      const M = [...E, ...C, ...R], v = T(...M);
      return l.muiName && (v.muiName = l.muiName), process.env.NODE_ENV !== "production" && (v.displayName = yI(u, f, l)), v;
    };
    return T.withConfig && (w.withConfig = T.withConfig), w;
  };
}
function yI(e, t, n) {
  return e ? `${e}${fe(t || "")}` : `Styled(${pI(n)})`;
}
function bI(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${kx(t || "Root")}`), n;
}
function vI(e) {
  for (const t in e)
    return !1;
  return !0;
}
function xI(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function kx(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
const wI = Rx();
function qa(e, t) {
  const n = {
    ...t
  };
  for (const o in e)
    if (Object.prototype.hasOwnProperty.call(e, o)) {
      const r = o;
      if (r === "components" || r === "slots")
        n[r] = {
          ...e[r],
          ...n[r]
        };
      else if (r === "componentsProps" || r === "slotProps") {
        const i = e[r], a = t[r];
        if (!a)
          n[r] = i || {};
        else if (!i)
          n[r] = a;
        else {
          n[r] = {
            ...a
          };
          for (const l in i)
            if (Object.prototype.hasOwnProperty.call(i, l)) {
              const c = l;
              n[r][c] = qa(i[c], a[c]);
            }
        }
      } else n[r] === void 0 && (n[r] = e[r]);
    }
  return n;
}
function Px(e) {
  const {
    theme: t,
    name: n,
    props: o
  } = e;
  return !t || !t.components || !t.components[n] || !t.components[n].defaultProps ? o : qa(t.components[n].defaultProps, o);
}
function SI({
  props: e,
  name: t,
  defaultTheme: n,
  themeId: o
}) {
  let r = Qu(n);
  return o && (r = r[o] || r), Px({
    theme: r,
    name: t,
    props: e
  });
}
const zo = typeof window < "u" ? P.useLayoutEffect : P.useEffect;
function TI(e, t, n, o, r) {
  const [i, a] = P.useState(() => r && n ? n(e).matches : o ? o(e).matches : t);
  return zo(() => {
    if (!n)
      return;
    const l = n(e), c = () => {
      a(l.matches);
    };
    return c(), l.addEventListener("change", c), () => {
      l.removeEventListener("change", c);
    };
  }, [e, n]), i;
}
const EI = {
  ...P
}, Nx = EI.useSyncExternalStore;
function CI(e, t, n, o, r) {
  const i = P.useCallback(() => t, [t]), a = P.useMemo(() => {
    if (r && n)
      return () => n(e).matches;
    if (o !== null) {
      const {
        matches: f
      } = o(e);
      return () => f;
    }
    return i;
  }, [i, e, o, r, n]), [l, c] = P.useMemo(() => {
    if (n === null)
      return [i, () => () => {
      }];
    const f = n(e);
    return [() => f.matches, (d) => (f.addEventListener("change", d), () => {
      f.removeEventListener("change", d);
    })];
  }, [i, n, e]);
  return Nx(c, l, a);
}
function Mx(e = {}) {
  const {
    themeId: t
  } = e;
  return function(o, r = {}) {
    let i = Bh();
    i && t && (i = i[t] || i);
    const a = typeof window < "u" && typeof window.matchMedia < "u", {
      defaultMatches: l = !1,
      matchMedia: c = a ? window.matchMedia : null,
      ssrMatchMedia: u = null,
      noSsr: f = !1
    } = Px({
      name: "MuiUseMediaQuery",
      props: r,
      theme: i
    });
    process.env.NODE_ENV !== "production" && typeof o == "function" && i === null && console.error(["MUI: The `query` argument provided is invalid.", "You are providing a function without a theme in the context.", "One of the parent elements needs to use a ThemeProvider."].join(`
`));
    let d = typeof o == "function" ? o(i) : o;
    d = d.replace(/^@media( ?)/m, "");
    const h = (Nx !== void 0 ? CI : TI)(d, l, c, u, f);
    return process.env.NODE_ENV !== "production" && P.useDebugValue({
      query: d,
      match: h
    }), h;
  };
}
Mx();
function OI(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function Fh(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), OI(e, t, n);
}
function $I(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((o) => o + o)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((o, r) => r < 3 ? parseInt(o, 16) : Math.round(parseInt(o, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function Yr(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return Yr($I(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : lr(9, e));
  let o = e.substring(t + 1, e.length - 1), r;
  if (n === "color") {
    if (o = o.split(" "), r = o.shift(), o.length === 4 && o[3].charAt(0) === "/" && (o[3] = o[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(r))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${r}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : lr(10, r));
  } else
    o = o.split(",");
  return o = o.map((i) => parseFloat(i)), {
    type: n,
    values: o,
    colorSpace: r
  };
}
const II = (e) => {
  const t = Yr(e);
  return t.values.slice(0, 3).map((n, o) => t.type.includes("hsl") && o !== 0 ? `${n}%` : n).join(" ");
}, ba = (e, t) => {
  try {
    return II(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function Ju(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: o
  } = e;
  return t.includes("rgb") ? o = o.map((r, i) => i < 3 ? parseInt(r, 10) : r) : t.includes("hsl") && (o[1] = `${o[1]}%`, o[2] = `${o[2]}%`), t.includes("color") ? o = `${n} ${o.join(" ")}` : o = `${o.join(", ")}`, `${t}(${o})`;
}
function _x(e) {
  e = Yr(e);
  const {
    values: t
  } = e, n = t[0], o = t[1] / 100, r = t[2] / 100, i = o * Math.min(r, 1 - r), a = (u, f = (u + n / 30) % 12) => r - i * Math.max(Math.min(f - 3, 9 - f, 1), -1);
  let l = "rgb";
  const c = [Math.round(a(0) * 255), Math.round(a(8) * 255), Math.round(a(4) * 255)];
  return e.type === "hsla" && (l += "a", c.push(t[3])), Ju({
    type: l,
    values: c
  });
}
function wp(e) {
  e = Yr(e);
  let t = e.type === "hsl" || e.type === "hsla" ? Yr(_x(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function ny(e, t) {
  const n = wp(e), o = wp(t);
  return (Math.max(n, o) + 0.05) / (Math.min(n, o) + 0.05);
}
function bt(e, t) {
  return e = Yr(e), t = Fh(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, Ju(e);
}
function nc(e, t, n) {
  try {
    return bt(e, t);
  } catch {
    return e;
  }
}
function qs(e, t) {
  if (e = Yr(e), t = Fh(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return Ju(e);
}
function Nt(e, t, n) {
  try {
    return qs(e, t);
  } catch {
    return e;
  }
}
function Ks(e, t) {
  if (e = Yr(e), t = Fh(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return Ju(e);
}
function Mt(e, t, n) {
  try {
    return Ks(e, t);
  } catch {
    return e;
  }
}
function RI(e, t = 0.15) {
  return wp(e) > 0.5 ? qs(e, t) : Ks(e, t);
}
function oc(e, t, n) {
  try {
    return RI(e, t);
  } catch {
    return e;
  }
}
function jo(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...o) {
    return e(...o) || t(...o);
  };
}
function kI(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function Ax(e, t, n, o, r) {
  const i = e[t], a = r || t;
  if (i == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  const c = i.type;
  return typeof c == "function" && !kI(c) && (l = "Did you accidentally use a plain function component for an element instead?"), l !== void 0 ? new Error(`Invalid ${o} \`${a}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const ti = jo(s.element, Ax);
ti.isRequired = jo(s.element.isRequired, Ax);
function PI(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function NI(e, t, n, o, r) {
  const i = e[t], a = r || t;
  if (i == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  return typeof i == "function" && !PI(i) && (l = "Did you accidentally provide a plain function component instead?"), l !== void 0 ? new Error(`Invalid ${o} \`${a}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const zh = jo(s.elementType, NI), MI = "exact-prop: ​";
function Tl(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [MI]: (t) => {
      const n = Object.keys(t).filter((o) => !e.hasOwnProperty(o));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((o) => `\`${o}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
function cr(e, t, n, o, r) {
  if (process.env.NODE_ENV === "production")
    return null;
  const i = e[t], a = r || t;
  return i == null ? null : i && i.nodeType !== 1 ? new Error(`Invalid ${o} \`${a}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
const Qn = s.oneOfType([s.func, s.object]);
function Sp(...e) {
  return e.reduce((t, n) => n == null ? t : function(...r) {
    t.apply(this, r), n.apply(this, r);
  }, () => {
  });
}
function jh(e, t = 166) {
  let n;
  function o(...r) {
    const i = () => {
      e.apply(this, r);
    };
    clearTimeout(n), n = setTimeout(i, t);
  }
  return o.clear = () => {
    clearTimeout(n);
  }, o;
}
function bf(e, t) {
  var n, o, r;
  return /* @__PURE__ */ P.isValidElement(e) && t.indexOf(
    // For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    e.type.muiName ?? ((r = (o = (n = e.type) == null ? void 0 : n._payload) == null ? void 0 : o.value) == null ? void 0 : r.muiName)
  ) !== -1;
}
function _n(e) {
  return e && e.ownerDocument || document;
}
function Vo(e) {
  return _n(e).defaultView || window;
}
function Qc(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
let oy = 0;
function _I(e) {
  const [t, n] = P.useState(e), o = e || t;
  return P.useEffect(() => {
    t == null && (oy += 1, n(`mui-${oy}`));
  }, [t]), o;
}
const AI = {
  ...P
}, ry = AI.useId;
function Bi(e) {
  if (ry !== void 0) {
    const t = ry();
    return e ?? t;
  }
  return _I(e);
}
function DI(e, t, n, o, r) {
  if (process.env.NODE_ENV === "production")
    return null;
  const i = r || t;
  return typeof e[t] < "u" ? new Error(`The prop \`${i}\` is not supported. Please remove it.`) : null;
}
function $i({
  controlled: e,
  default: t,
  name: n,
  state: o = "value"
}) {
  const {
    current: r
  } = P.useRef(e !== void 0), [i, a] = P.useState(t), l = r ? e : i;
  if (process.env.NODE_ENV !== "production") {
    P.useEffect(() => {
      r !== (e !== void 0) && console.error([`MUI: A component is changing the ${r ? "" : "un"}controlled ${o} state of ${n} to be ${r ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [o, n, e]);
    const {
      current: u
    } = P.useRef(t);
    P.useEffect(() => {
      !r && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${o} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = P.useCallback((u) => {
    r || a(u);
  }, []);
  return [l, c];
}
function Un(e) {
  const t = P.useRef(e);
  return zo(() => {
    t.current = e;
  }), P.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function un(...e) {
  return P.useMemo(() => e.every((t) => t == null) ? null : (t) => {
    e.forEach((n) => {
      Qc(n, t);
    });
  }, e);
}
const iy = {};
function Dx(e, t) {
  const n = P.useRef(iy);
  return n.current === iy && (n.current = e(t)), n;
}
const LI = [];
function BI(e) {
  P.useEffect(e, LI);
}
let Lx = class Bx {
  constructor() {
    Ar(this, "currentId", null);
    Ar(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    Ar(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new Bx();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
};
function us() {
  const e = Dx(Lx.create).current;
  return BI(e.disposeEffect), e;
}
function Jc(e) {
  try {
    return e.matches(":focus-visible");
  } catch {
    process.env.NODE_ENV !== "production" && !/jsdom/.test(window.navigator.userAgent) && console.warn(["MUI: The `:focus-visible` pseudo class is not supported in this browser.", "Some components rely on this feature to work properly."].join(`
`));
  }
  return !1;
}
function Fx(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
const Vh = (e) => {
  const t = P.useRef({});
  return P.useEffect(() => {
    t.current = e;
  }), t.current;
};
function FI(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function zx(e, t, n, o) {
  const r = e[t];
  if (r == null || !Number.isInteger(r)) {
    const i = FI(r);
    return new RangeError(`Invalid ${o} \`${t}\` of type \`${i}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function jx(e, t, ...n) {
  return e[t] === void 0 ? null : zx(e, t, ...n);
}
function Tp() {
  return null;
}
jx.isRequired = zx;
Tp.isRequired = Tp;
const ed = process.env.NODE_ENV === "production" ? Tp : jx;
function zI(e) {
  return typeof e == "string";
}
function Vx(e, t, n) {
  return e === void 0 || zI(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function Hx(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((o) => o.match(/^on[A-Z]/) && typeof e[o] == "function" && !t.includes(o)).forEach((o) => {
    n[o] = e[o];
  }), n;
}
function sy(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function Wx(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: o,
    externalForwardedProps: r,
    className: i
  } = e;
  if (!t) {
    const h = Re(n == null ? void 0 : n.className, i, r == null ? void 0 : r.className, o == null ? void 0 : o.className), g = {
      ...n == null ? void 0 : n.style,
      ...r == null ? void 0 : r.style,
      ...o == null ? void 0 : o.style
    }, m = {
      ...n,
      ...r,
      ...o
    };
    return h.length > 0 && (m.className = h), Object.keys(g).length > 0 && (m.style = g), {
      props: m,
      internalRef: void 0
    };
  }
  const a = Hx({
    ...r,
    ...o
  }), l = sy(o), c = sy(r), u = t(a), f = Re(u == null ? void 0 : u.className, n == null ? void 0 : n.className, i, r == null ? void 0 : r.className, o == null ? void 0 : o.className), d = {
    ...u == null ? void 0 : u.style,
    ...n == null ? void 0 : n.style,
    ...r == null ? void 0 : r.style,
    ...o == null ? void 0 : o.style
  }, p = {
    ...u,
    ...n,
    ...c,
    ...l
  };
  return f.length > 0 && (p.className = f), Object.keys(d).length > 0 && (p.style = d), {
    props: p,
    internalRef: u.ref
  };
}
function Ux(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function eu(e) {
  var d;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: o,
    skipResolvingSlotProps: r = !1,
    ...i
  } = e, a = r ? {} : Ux(n, o), {
    props: l,
    internalRef: c
  } = Wx({
    ...i,
    externalSlotProps: a
  }), u = un(c, a == null ? void 0 : a.ref, (d = e.additionalProps) == null ? void 0 : d.ref);
  return Vx(t, {
    ...l,
    ref: u
  }, o);
}
function ni(e) {
  var t;
  return parseInt(P.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
const Hh = /* @__PURE__ */ P.createContext(null);
process.env.NODE_ENV !== "production" && (Hh.displayName = "ThemeContext");
function Wh() {
  const e = P.useContext(Hh);
  return process.env.NODE_ENV !== "production" && P.useDebugValue(e), e;
}
const jI = typeof Symbol == "function" && Symbol.for, VI = jI ? Symbol.for("mui.nested") : "__THEME_NESTED__";
function HI(e, t) {
  if (typeof t == "function") {
    const n = t(e);
    return process.env.NODE_ENV !== "production" && (n || console.error(["MUI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join(`
`))), n;
  }
  return {
    ...e,
    ...t
  };
}
function tu(e) {
  const {
    children: t,
    theme: n
  } = e, o = Wh();
  process.env.NODE_ENV !== "production" && o === null && typeof n == "function" && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const r = P.useMemo(() => {
    const i = o === null ? {
      ...n
    } : HI(o, n);
    return i != null && (i[VI] = o !== null), i;
  }, [n, o]);
  return /* @__PURE__ */ $(Hh.Provider, {
    value: r,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (tu.propTypes = {
  /**
   * Your component tree.
   */
  children: s.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: s.oneOfType([s.object, s.func]).isRequired
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (tu.propTypes = Tl(tu.propTypes));
const qx = /* @__PURE__ */ P.createContext();
function Kx({
  value: e,
  ...t
}) {
  return /* @__PURE__ */ $(qx.Provider, {
    value: e ?? !0,
    ...t
  });
}
process.env.NODE_ENV !== "production" && (Kx.propTypes = {
  children: s.node,
  value: s.bool
});
const El = () => P.useContext(qx) ?? !1, Yx = /* @__PURE__ */ P.createContext(void 0);
function Gx({
  value: e,
  children: t
}) {
  return /* @__PURE__ */ $(Yx.Provider, {
    value: e,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (Gx.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: s.node,
  /**
   * @ignore
   */
  value: s.object
});
function WI(e) {
  const {
    theme: t,
    name: n,
    props: o
  } = e;
  if (!t || !t.components || !t.components[n])
    return o;
  const r = t.components[n];
  return r.defaultProps ? qa(r.defaultProps, o) : !r.styleOverrides && !r.variants ? qa(r, o) : o;
}
function UI({
  props: e,
  name: t
}) {
  const n = P.useContext(Yx);
  return WI({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
const ay = {};
function ly(e, t, n, o = !1) {
  return P.useMemo(() => {
    const r = e && t[e] || t;
    if (typeof n == "function") {
      const i = n(r), a = e ? {
        ...t,
        [e]: i
      } : i;
      return o ? () => a : a;
    }
    return e ? {
      ...t,
      [e]: n
    } : {
      ...t,
      ...n
    };
  }, [e, t, n, o]);
}
function Ka(e) {
  const {
    children: t,
    theme: n,
    themeId: o
  } = e, r = Bh(ay), i = Wh() || ay;
  process.env.NODE_ENV !== "production" && (r === null && typeof n == "function" || o && r && !r[o] && typeof n == "function") && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const a = ly(o, r, n), l = ly(o, i, n, !0), c = (o ? a[o] : a).direction === "rtl";
  return /* @__PURE__ */ $(tu, {
    theme: l,
    children: /* @__PURE__ */ $(Ws.Provider, {
      value: a,
      children: /* @__PURE__ */ $(Kx, {
        value: c,
        children: /* @__PURE__ */ $(Gx, {
          value: o ? a[o].components : a.components,
          children: t
        })
      })
    })
  });
}
process.env.NODE_ENV !== "production" && (Ka.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Your component tree.
   */
  children: s.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: s.oneOfType([s.func, s.object]).isRequired,
  /**
   * The design system's unique id for getting the corresponded theme when there are multiple design systems.
   */
  themeId: s.string
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (Ka.propTypes = Tl(Ka.propTypes));
const cy = {
  theme: void 0
};
function qI(e) {
  let t, n;
  return function(r) {
    let i = t;
    return (i === void 0 || r.theme !== n) && (cy.theme = r.theme, i = $x(e(cy)), t = i, n = r.theme), i;
  };
}
const Uh = "mode", qh = "color-scheme", KI = "data-color-scheme";
function YI(e) {
  const {
    defaultMode: t = "system",
    defaultLightColorScheme: n = "light",
    defaultDarkColorScheme: o = "dark",
    modeStorageKey: r = Uh,
    colorSchemeStorageKey: i = qh,
    attribute: a = KI,
    colorSchemeNode: l = "document.documentElement",
    nonce: c
  } = e || {};
  let u = "", f = a;
  if (a === "class" && (f = ".%s"), a === "data" && (f = "[data-%s]"), f.startsWith(".")) {
    const p = f.substring(1);
    u += `${l}.classList.remove('${p}'.replace('%s', light), '${p}'.replace('%s', dark));
      ${l}.classList.add('${p}'.replace('%s', colorScheme));`;
  }
  const d = f.match(/\[([^\]]+)\]/);
  if (d) {
    const [p, h] = d[1].split("=");
    h || (u += `${l}.removeAttribute('${p}'.replace('%s', light));
      ${l}.removeAttribute('${p}'.replace('%s', dark));`), u += `
      ${l}.setAttribute('${p}'.replace('%s', colorScheme), ${h ? `${h}.replace('%s', colorScheme)` : '""'});`;
  } else
    u += `${l}.setAttribute('${f}', colorScheme);`;
  return /* @__PURE__ */ $("script", {
    suppressHydrationWarning: !0,
    nonce: typeof window > "u" ? c : "",
    dangerouslySetInnerHTML: {
      __html: `(function() {
try {
  let colorScheme = '';
  const mode = localStorage.getItem('${r}') || '${t}';
  const dark = localStorage.getItem('${i}-dark') || '${o}';
  const light = localStorage.getItem('${i}-light') || '${n}';
  if (mode === 'system') {
    // handle system mode
    const mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = dark
    } else {
      colorScheme = light
    }
  }
  if (mode === 'light') {
    colorScheme = light;
  }
  if (mode === 'dark') {
    colorScheme = dark;
  }
  if (colorScheme) {
    ${u}
  }
} catch(e){}})();`
    }
  }, "mui-color-scheme-init");
}
function GI() {
}
const XI = ({
  key: e,
  storageWindow: t
}) => (!t && typeof window < "u" && (t = window), {
  get(n) {
    if (typeof window > "u")
      return;
    if (!t)
      return n;
    let o;
    try {
      o = t.localStorage.getItem(e);
    } catch {
    }
    return o || n;
  },
  set: (n) => {
    if (t)
      try {
        t.localStorage.setItem(e, n);
      } catch {
      }
  },
  subscribe: (n) => {
    if (!t)
      return GI;
    const o = (r) => {
      const i = r.newValue;
      r.key === e && n(i);
    };
    return t.addEventListener("storage", o), () => {
      t.removeEventListener("storage", o);
    };
  }
});
function vf() {
}
function uy(e) {
  if (typeof window < "u" && typeof window.matchMedia == "function" && e === "system")
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
function Xx(e, t) {
  if (e.mode === "light" || e.mode === "system" && e.systemMode === "light")
    return t("light");
  if (e.mode === "dark" || e.mode === "system" && e.systemMode === "dark")
    return t("dark");
}
function ZI(e) {
  return Xx(e, (t) => {
    if (t === "light")
      return e.lightColorScheme;
    if (t === "dark")
      return e.darkColorScheme;
  });
}
function QI(e) {
  const {
    defaultMode: t = "light",
    defaultLightColorScheme: n,
    defaultDarkColorScheme: o,
    supportedColorSchemes: r = [],
    modeStorageKey: i = Uh,
    colorSchemeStorageKey: a = qh,
    storageWindow: l = typeof window > "u" ? void 0 : window,
    storageManager: c = XI,
    noSsr: u = !1
  } = e, f = r.join(","), d = r.length > 1, p = P.useMemo(() => c == null ? void 0 : c({
    key: i,
    storageWindow: l
  }), [c, i, l]), h = P.useMemo(() => c == null ? void 0 : c({
    key: `${a}-light`,
    storageWindow: l
  }), [c, a, l]), g = P.useMemo(() => c == null ? void 0 : c({
    key: `${a}-dark`,
    storageWindow: l
  }), [c, a, l]), [m, y] = P.useState(() => {
    const R = (p == null ? void 0 : p.get(t)) || t, M = (h == null ? void 0 : h.get(n)) || n, v = (g == null ? void 0 : g.get(o)) || o;
    return {
      mode: R,
      systemMode: uy(R),
      lightColorScheme: M,
      darkColorScheme: v
    };
  }), [x, T] = P.useState(u || !d);
  P.useEffect(() => {
    T(!0);
  }, []);
  const b = ZI(m), w = P.useCallback((R) => {
    y((M) => {
      if (R === M.mode)
        return M;
      const v = R ?? t;
      return p == null || p.set(v), {
        ...M,
        mode: v,
        systemMode: uy(v)
      };
    });
  }, [p, t]), S = P.useCallback((R) => {
    R ? typeof R == "string" ? R && !f.includes(R) ? console.error(`\`${R}\` does not exist in \`theme.colorSchemes\`.`) : y((M) => {
      const v = {
        ...M
      };
      return Xx(M, (I) => {
        I === "light" && (h == null || h.set(R), v.lightColorScheme = R), I === "dark" && (g == null || g.set(R), v.darkColorScheme = R);
      }), v;
    }) : y((M) => {
      const v = {
        ...M
      }, I = R.light === null ? n : R.light, k = R.dark === null ? o : R.dark;
      return I && (f.includes(I) ? (v.lightColorScheme = I, h == null || h.set(I)) : console.error(`\`${I}\` does not exist in \`theme.colorSchemes\`.`)), k && (f.includes(k) ? (v.darkColorScheme = k, g == null || g.set(k)) : console.error(`\`${k}\` does not exist in \`theme.colorSchemes\`.`)), v;
    }) : y((M) => (h == null || h.set(n), g == null || g.set(o), {
      ...M,
      lightColorScheme: n,
      darkColorScheme: o
    }));
  }, [f, h, g, n, o]), E = P.useCallback((R) => {
    m.mode === "system" && y((M) => {
      const v = R != null && R.matches ? "dark" : "light";
      return M.systemMode === v ? M : {
        ...M,
        systemMode: v
      };
    });
  }, [m.mode]), C = P.useRef(E);
  return C.current = E, P.useEffect(() => {
    if (typeof window.matchMedia != "function" || !d)
      return;
    const R = (...v) => C.current(...v), M = window.matchMedia("(prefers-color-scheme: dark)");
    return M.addListener(R), R(M), () => {
      M.removeListener(R);
    };
  }, [d]), P.useEffect(() => {
    if (d) {
      const R = (p == null ? void 0 : p.subscribe((I) => {
        (!I || ["light", "dark", "system"].includes(I)) && w(I || t);
      })) || vf, M = (h == null ? void 0 : h.subscribe((I) => {
        (!I || f.match(I)) && S({
          light: I
        });
      })) || vf, v = (g == null ? void 0 : g.subscribe((I) => {
        (!I || f.match(I)) && S({
          dark: I
        });
      })) || vf;
      return () => {
        R(), M(), v();
      };
    }
  }, [S, w, f, t, l, d, p, h, g]), {
    ...m,
    mode: x ? m.mode : void 0,
    systemMode: x ? m.systemMode : void 0,
    colorScheme: x ? b : void 0,
    setMode: w,
    setColorScheme: S
  };
}
const JI = "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
function eR(e) {
  const {
    themeId: t,
    /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */
    theme: n = {},
    modeStorageKey: o = Uh,
    colorSchemeStorageKey: r = qh,
    disableTransitionOnChange: i = !1,
    defaultColorScheme: a,
    resolveTheme: l
  } = e, c = {
    allColorSchemes: [],
    colorScheme: void 0,
    darkColorScheme: void 0,
    lightColorScheme: void 0,
    mode: void 0,
    setColorScheme: () => {
    },
    setMode: () => {
    },
    systemMode: void 0
  }, u = /* @__PURE__ */ P.createContext(void 0);
  process.env.NODE_ENV !== "production" && (u.displayName = "ColorSchemeContext");
  const f = () => P.useContext(u) || c, d = {}, p = {};
  function h(x) {
    var H, X, se, ye;
    const {
      children: T,
      theme: b,
      modeStorageKey: w = o,
      colorSchemeStorageKey: S = r,
      disableTransitionOnChange: E = i,
      storageManager: C,
      storageWindow: R = typeof window > "u" ? void 0 : window,
      documentNode: M = typeof document > "u" ? void 0 : document,
      colorSchemeNode: v = typeof document > "u" ? void 0 : document.documentElement,
      disableNestedContext: I = !1,
      disableStyleSheetGeneration: k = !1,
      defaultMode: A = "system",
      forceThemeRerender: O = !1,
      noSsr: _
    } = x, N = P.useRef(!1), L = Wh(), F = P.useContext(u), D = !!F && !I, B = P.useMemo(() => b || (typeof n == "function" ? n() : n), [b]), z = B[t], U = z || B, {
      colorSchemes: q = d,
      components: Y = p,
      cssVarPrefix: K
    } = U, te = Object.keys(q).filter((he) => !!q[he]).join(","), ne = P.useMemo(() => te.split(","), [te]), W = typeof a == "string" ? a : a.light, ee = typeof a == "string" ? a : a.dark, G = q[W] && q[ee] ? A : ((X = (H = q[U.defaultColorScheme]) == null ? void 0 : H.palette) == null ? void 0 : X.mode) || ((se = U.palette) == null ? void 0 : se.mode), {
      mode: re,
      setMode: V,
      systemMode: de,
      lightColorScheme: ue,
      darkColorScheme: xe,
      colorScheme: Ae,
      setColorScheme: we
    } = QI({
      supportedColorSchemes: ne,
      defaultLightColorScheme: W,
      defaultDarkColorScheme: ee,
      modeStorageKey: w,
      colorSchemeStorageKey: S,
      defaultMode: G,
      storageManager: C,
      storageWindow: R,
      noSsr: _
    });
    let De = re, Ce = Ae;
    D && (De = F.mode, Ce = F.colorScheme), process.env.NODE_ENV !== "production" && O && !U.vars && console.warn(["MUI: The `forceThemeRerender` prop should only be used with CSS theme variables.", "Note that it will slow down the app when changing between modes, so only do this when you cannot find a better solution."].join(`
`));
    let Be = Ce || U.defaultColorScheme;
    U.vars && !O && (Be = U.defaultColorScheme);
    const Me = P.useMemo(() => {
      var ae;
      const he = ((ae = U.generateThemeVars) == null ? void 0 : ae.call(U)) || U.vars, le = {
        ...U,
        components: Y,
        colorSchemes: q,
        cssVarPrefix: K,
        vars: he
      };
      if (typeof le.generateSpacing == "function" && (le.spacing = le.generateSpacing()), Be) {
        const ce = q[Be];
        ce && typeof ce == "object" && Object.keys(ce).forEach((Se) => {
          ce[Se] && typeof ce[Se] == "object" ? le[Se] = {
            ...le[Se],
            ...ce[Se]
          } : le[Se] = ce[Se];
        });
      }
      return l ? l(le) : le;
    }, [U, Be, Y, q, K]), j = U.colorSchemeSelector;
    zo(() => {
      if (Ce && v && j && j !== "media") {
        const he = j;
        let le = j;
        if (he === "class" && (le = ".%s"), he === "data" && (le = "[data-%s]"), he != null && he.startsWith("data-") && !he.includes("%s") && (le = `[${he}="%s"]`), le.startsWith("."))
          v.classList.remove(...ne.map((ae) => le.substring(1).replace("%s", ae))), v.classList.add(le.substring(1).replace("%s", Ce));
        else {
          const ae = le.replace("%s", Ce).match(/\[([^\]]+)\]/);
          if (ae) {
            const [ce, Se] = ae[1].split("=");
            Se || ne.forEach(($e) => {
              v.removeAttribute(ce.replace(Ce, $e));
            }), v.setAttribute(ce, Se ? Se.replace(/"|'/g, "") : "");
          } else
            v.setAttribute(le, Ce);
        }
      }
    }, [Ce, j, v, ne]), P.useEffect(() => {
      let he;
      if (E && N.current && M) {
        const le = M.createElement("style");
        le.appendChild(M.createTextNode(JI)), M.head.appendChild(le), window.getComputedStyle(M.body), he = setTimeout(() => {
          M.head.removeChild(le);
        }, 1);
      }
      return () => {
        clearTimeout(he);
      };
    }, [Ce, E, M]), P.useEffect(() => (N.current = !0, () => {
      N.current = !1;
    }), []);
    const J = P.useMemo(() => ({
      allColorSchemes: ne,
      colorScheme: Ce,
      darkColorScheme: xe,
      lightColorScheme: ue,
      mode: De,
      setColorScheme: we,
      setMode: process.env.NODE_ENV === "production" ? V : (he) => {
        Me.colorSchemeSelector === "media" && console.error(["MUI: The `setMode` function has no effect if `colorSchemeSelector` is `media` (`media` is the default value).", "To toggle the mode manually, please configure `colorSchemeSelector` to use a class or data attribute.", "To learn more, visit https://mui.com/material-ui/customization/css-theme-variables/configuration/#toggling-dark-mode-manually"].join(`
`)), V(he);
      },
      systemMode: de
    }), [ne, Ce, xe, ue, De, we, V, de, Me.colorSchemeSelector]);
    let ie = !0;
    (k || U.cssVariables === !1 || D && (L == null ? void 0 : L.cssVarPrefix) === K) && (ie = !1);
    const Q = /* @__PURE__ */ Te(P.Fragment, {
      children: [/* @__PURE__ */ $(Ka, {
        themeId: z ? t : void 0,
        theme: Me,
        children: T
      }), ie && /* @__PURE__ */ $(Lh, {
        styles: ((ye = Me.generateStyleSheets) == null ? void 0 : ye.call(Me)) || []
      })]
    });
    return D ? Q : /* @__PURE__ */ $(u.Provider, {
      value: J,
      children: Q
    });
  }
  process.env.NODE_ENV !== "production" && (h.propTypes = {
    /**
     * The component tree.
     */
    children: s.node,
    /**
     * The node used to attach the color-scheme attribute
     */
    colorSchemeNode: s.any,
    /**
     * localStorage key used to store `colorScheme`
     */
    colorSchemeStorageKey: s.string,
    /**
     * The default mode when the storage is empty,
     * require the theme to have `colorSchemes` with light and dark.
     */
    defaultMode: s.string,
    /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */
    disableNestedContext: s.bool,
    /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */
    disableStyleSheetGeneration: s.bool,
    /**
     * Disable CSS transitions when switching between modes or color schemes.
     */
    disableTransitionOnChange: s.bool,
    /**
     * The document to attach the attribute to.
     */
    documentNode: s.any,
    /**
     * If `true`, theme values are recalculated when the mode changes.
     */
    forceThemeRerender: s.bool,
    /**
     * The key in the local storage used to store current color scheme.
     */
    modeStorageKey: s.string,
    /**
     * If `true`, the mode will be the same value as the storage without an extra rerendering after the hydration.
     * You should use this option in conjuction with `InitColorSchemeScript` component.
     */
    noSsr: s.bool,
    /**
     * The storage manager to be used for storing the mode and color scheme
     * @default using `window.localStorage`
     */
    storageManager: s.func,
    /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */
    storageWindow: s.any,
    /**
     * The calculated theme object that will be passed through context.
     */
    theme: s.object
  });
  const g = typeof a == "string" ? a : a.light, m = typeof a == "string" ? a : a.dark;
  return {
    CssVarsProvider: h,
    useColorScheme: f,
    getInitColorSchemeScript: (x) => YI({
      colorSchemeStorageKey: r,
      defaultLightColorScheme: g,
      defaultDarkColorScheme: m,
      modeStorageKey: o,
      ...x
    })
  };
}
function tR(e = "") {
  function t(...o) {
    if (!o.length)
      return "";
    const r = o[0];
    return typeof r == "string" && !r.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${r}${t(...o.slice(1))})` : `, ${r}`;
  }
  return (o, ...r) => `var(--${e ? `${e}-` : ""}${o}${t(...r)})`;
}
const dy = (e, t, n, o = []) => {
  let r = e;
  t.forEach((i, a) => {
    a === t.length - 1 ? Array.isArray(r) ? r[Number(i)] = n : r && typeof r == "object" && (r[i] = n) : r && typeof r == "object" && (r[i] || (r[i] = o.includes(i) ? [] : {}), r = r[i]);
  });
}, nR = (e, t, n) => {
  function o(r, i = [], a = []) {
    Object.entries(r).forEach(([l, c]) => {
      (!n || n && !n([...i, l])) && c != null && (typeof c == "object" && Object.keys(c).length > 0 ? o(c, [...i, l], Array.isArray(c) ? [...a, l] : a) : t([...i, l], c, a));
    });
  }
  o(e);
}, oR = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((o) => e.includes(o)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function xf(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: o
  } = t || {}, r = {}, i = {}, a = {};
  return nR(
    e,
    (l, c, u) => {
      if ((typeof c == "string" || typeof c == "number") && (!o || !o(l, c))) {
        const f = `--${n ? `${n}-` : ""}${l.join("-")}`, d = oR(l, c);
        Object.assign(r, {
          [f]: d
        }), dy(i, l, `var(${f})`, u), dy(a, l, `var(${f}, ${d})`, u);
      }
    },
    (l) => l[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: r,
    vars: i,
    varsWithDefaults: a
  };
}
function rR(e, t = {}) {
  const {
    getSelector: n = y,
    disableCssColorScheme: o,
    colorSchemeSelector: r
  } = t, {
    colorSchemes: i = {},
    components: a,
    defaultColorScheme: l = "light",
    ...c
  } = e, {
    vars: u,
    css: f,
    varsWithDefaults: d
  } = xf(c, t);
  let p = d;
  const h = {}, {
    [l]: g,
    ...m
  } = i;
  if (Object.entries(m || {}).forEach(([b, w]) => {
    const {
      vars: S,
      css: E,
      varsWithDefaults: C
    } = xf(w, t);
    p = Mn(p, C), h[b] = {
      css: E,
      vars: S
    };
  }), g) {
    const {
      css: b,
      vars: w,
      varsWithDefaults: S
    } = xf(g, t);
    p = Mn(p, S), h[l] = {
      css: b,
      vars: w
    };
  }
  function y(b, w) {
    var E, C;
    let S = r;
    if (r === "class" && (S = ".%s"), r === "data" && (S = "[data-%s]"), r != null && r.startsWith("data-") && !r.includes("%s") && (S = `[${r}="%s"]`), b) {
      if (S === "media")
        return e.defaultColorScheme === b ? ":root" : {
          [`@media (prefers-color-scheme: ${((C = (E = i[b]) == null ? void 0 : E.palette) == null ? void 0 : C.mode) || b})`]: {
            ":root": w
          }
        };
      if (S)
        return e.defaultColorScheme === b ? `:root, ${S.replace("%s", String(b))}` : S.replace("%s", String(b));
    }
    return ":root";
  }
  return {
    vars: p,
    generateThemeVars: () => {
      let b = {
        ...u
      };
      return Object.entries(h).forEach(([, {
        vars: w
      }]) => {
        b = Mn(b, w);
      }), b;
    },
    generateStyleSheets: () => {
      var R, M;
      const b = [], w = e.defaultColorScheme || "light";
      function S(v, I) {
        Object.keys(I).length && b.push(typeof v == "string" ? {
          [v]: {
            ...I
          }
        } : v);
      }
      S(n(void 0, {
        ...f
      }), f);
      const {
        [w]: E,
        ...C
      } = h;
      if (E) {
        const {
          css: v
        } = E, I = (M = (R = i[w]) == null ? void 0 : R.palette) == null ? void 0 : M.mode, k = !o && I ? {
          colorScheme: I,
          ...v
        } : {
          ...v
        };
        S(n(w, {
          ...k
        }), k);
      }
      return Object.entries(C).forEach(([v, {
        css: I
      }]) => {
        var O, _;
        const k = (_ = (O = i[v]) == null ? void 0 : O.palette) == null ? void 0 : _.mode, A = !o && k ? {
          colorScheme: k,
          ...I
        } : {
          ...I
        };
        S(n(v, {
          ...A
        }), A);
      }), b;
    }
  };
}
function iR(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
const sR = Zu(), aR = wI("div", {
  name: "MuiContainer",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`maxWidth${fe(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
  }
}), lR = (e) => SI({
  props: e,
  name: "MuiContainer",
  defaultTheme: sR
}), cR = (e, t) => {
  const n = (c) => tt(t, c), {
    classes: o,
    fixed: r,
    disableGutters: i,
    maxWidth: a
  } = e, l = {
    root: ["root", a && `maxWidth${fe(String(a))}`, r && "fixed", i && "disableGutters"]
  };
  return rt(l, n, o);
};
function uR(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: t = aR,
    useThemeProps: n = lR,
    componentName: o = "MuiContainer"
  } = e, r = t(({
    theme: a,
    ownerState: l
  }) => ({
    width: "100%",
    marginLeft: "auto",
    boxSizing: "border-box",
    marginRight: "auto",
    ...!l.disableGutters && {
      paddingLeft: a.spacing(2),
      paddingRight: a.spacing(2),
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [a.breakpoints.up("sm")]: {
        paddingLeft: a.spacing(3),
        paddingRight: a.spacing(3)
      }
    }
  }), ({
    theme: a,
    ownerState: l
  }) => l.fixed && Object.keys(a.breakpoints.values).reduce((c, u) => {
    const f = u, d = a.breakpoints.values[f];
    return d !== 0 && (c[a.breakpoints.up(f)] = {
      maxWidth: `${d}${a.breakpoints.unit}`
    }), c;
  }, {}), ({
    theme: a,
    ownerState: l
  }) => ({
    // @ts-ignore module augmentation fails if custom breakpoints are used
    ...l.maxWidth === "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [a.breakpoints.up("xs")]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: Math.max(a.breakpoints.values.xs, 444)
      }
    },
    ...l.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used
    l.maxWidth !== "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [a.breakpoints.up(l.maxWidth)]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: `${a.breakpoints.values[l.maxWidth]}${a.breakpoints.unit}`
      }
    }
  })), i = /* @__PURE__ */ P.forwardRef(function(l, c) {
    const u = n(l), {
      className: f,
      component: d = "div",
      disableGutters: p = !1,
      fixed: h = !1,
      maxWidth: g = "lg",
      classes: m,
      ...y
    } = u, x = {
      ...u,
      component: d,
      disableGutters: p,
      fixed: h,
      maxWidth: g
    }, T = cR(x, o);
    return (
      // @ts-ignore theme is injected by the styled util
      /* @__PURE__ */ $(r, {
        as: d,
        ownerState: x,
        className: Re(T.root, f),
        ref: c,
        ...y
      })
    );
  });
  return process.env.NODE_ENV !== "production" && (i.propTypes = {
    children: s.node,
    classes: s.object,
    className: s.string,
    component: s.elementType,
    disableGutters: s.bool,
    fixed: s.bool,
    maxWidth: s.oneOfType([s.oneOf(["xs", "sm", "md", "lg", "xl", !1]), s.string]),
    sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object])
  }), i;
}
const Ya = {
  black: "#000",
  white: "#fff"
}, dR = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, Ki = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, Yi = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, ta = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, Gi = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, Xi = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, Zi = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
};
function Zx() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: Ya.white,
      default: Ya.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const fR = Zx();
function Qx() {
  return {
    text: {
      primary: Ya.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: Ya.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const fy = Qx();
function py(e, t, n, o) {
  const r = o.light || o, i = o.dark || o * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = Ks(e.main, r) : t === "dark" && (e.dark = qs(e.main, i)));
}
function pR(e = "light") {
  return e === "dark" ? {
    main: Gi[200],
    light: Gi[50],
    dark: Gi[400]
  } : {
    main: Gi[700],
    light: Gi[400],
    dark: Gi[800]
  };
}
function hR(e = "light") {
  return e === "dark" ? {
    main: Ki[200],
    light: Ki[50],
    dark: Ki[400]
  } : {
    main: Ki[500],
    light: Ki[300],
    dark: Ki[700]
  };
}
function mR(e = "light") {
  return e === "dark" ? {
    main: Yi[500],
    light: Yi[300],
    dark: Yi[700]
  } : {
    main: Yi[700],
    light: Yi[400],
    dark: Yi[800]
  };
}
function gR(e = "light") {
  return e === "dark" ? {
    main: Xi[400],
    light: Xi[300],
    dark: Xi[700]
  } : {
    main: Xi[700],
    light: Xi[500],
    dark: Xi[900]
  };
}
function yR(e = "light") {
  return e === "dark" ? {
    main: Zi[400],
    light: Zi[300],
    dark: Zi[700]
  } : {
    main: Zi[800],
    light: Zi[500],
    dark: Zi[900]
  };
}
function bR(e = "light") {
  return e === "dark" ? {
    main: ta[400],
    light: ta[300],
    dark: ta[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: ta[500],
    dark: ta[900]
  };
}
function Kh(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: o = 0.2,
    ...r
  } = e, i = e.primary || pR(t), a = e.secondary || hR(t), l = e.error || mR(t), c = e.info || gR(t), u = e.success || yR(t), f = e.warning || bR(t);
  function d(m) {
    const y = ny(m, fy.text.primary) >= n ? fy.text.primary : fR.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const x = ny(m, y);
      x < 3 && console.error([`MUI: The contrast ratio of ${x}:1 for ${y} on ${m}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return y;
  }
  const p = ({
    color: m,
    name: y,
    mainShade: x = 500,
    lightShade: T = 300,
    darkShade: b = 700
  }) => {
    if (m = {
      ...m
    }, !m.main && m[x] && (m.main = m[x]), !m.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${y ? ` (${y})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${x}\` property.` : lr(11, y ? ` (${y})` : "", x));
    if (typeof m.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${y ? ` (${y})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(m.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : lr(12, y ? ` (${y})` : "", JSON.stringify(m.main)));
    return py(m, "light", T, o), py(m, "dark", b, o), m.contrastText || (m.contrastText = d(m.main)), m;
  };
  let h;
  return t === "light" ? h = Zx() : t === "dark" && (h = Qx()), process.env.NODE_ENV !== "production" && (h || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), Mn({
    // A collection of common colors.
    common: {
      ...Ya
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: p({
      color: i,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: p({
      color: a,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: p({
      color: l,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: p({
      color: f,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: p({
      color: c,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: p({
      color: u,
      name: "success"
    }),
    // The grey colors.
    grey: dR,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: d,
    // Generate a rich color object.
    augmentColor: p,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: o,
    // The light and dark mode object.
    ...h
  }, r);
}
function vR(e) {
  const t = {};
  return Object.entries(e).forEach((o) => {
    const [r, i] = o;
    typeof i == "object" && (t[r] = `${i.fontStyle ? `${i.fontStyle} ` : ""}${i.fontVariant ? `${i.fontVariant} ` : ""}${i.fontWeight ? `${i.fontWeight} ` : ""}${i.fontStretch ? `${i.fontStretch} ` : ""}${i.fontSize || ""}${i.lineHeight ? `/${i.lineHeight} ` : ""}${i.fontFamily || ""}`);
  }), t;
}
function xR(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function wR(e) {
  return Math.round(e * 1e5) / 1e5;
}
const hy = {
  textTransform: "uppercase"
}, my = '"Roboto", "Helvetica", "Arial", sans-serif';
function Jx(e, t) {
  const {
    fontFamily: n = my,
    // The default font size of the Material Specification.
    fontSize: o = 14,
    // px
    fontWeightLight: r = 300,
    fontWeightRegular: i = 400,
    fontWeightMedium: a = 500,
    fontWeightBold: l = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: c = 16,
    // Apply the CSS properties to all the variants.
    allVariants: u,
    pxToRem: f,
    ...d
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof o != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof c != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const p = o / 14, h = f || ((y) => `${y / c * p}rem`), g = (y, x, T, b, w) => ({
    fontFamily: n,
    fontWeight: y,
    fontSize: h(x),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: T,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === my ? {
      letterSpacing: `${wR(b / x)}em`
    } : {},
    ...w,
    ...u
  }), m = {
    h1: g(r, 96, 1.167, -1.5),
    h2: g(r, 60, 1.2, -0.5),
    h3: g(i, 48, 1.167, 0),
    h4: g(i, 34, 1.235, 0.25),
    h5: g(i, 24, 1.334, 0),
    h6: g(a, 20, 1.6, 0.15),
    subtitle1: g(i, 16, 1.75, 0.15),
    subtitle2: g(a, 14, 1.57, 0.1),
    body1: g(i, 16, 1.5, 0.15),
    body2: g(i, 14, 1.43, 0.15),
    button: g(a, 14, 1.75, 0.4, hy),
    caption: g(i, 12, 1.66, 0.4),
    overline: g(i, 12, 2.66, 1, hy),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return Mn({
    htmlFontSize: c,
    pxToRem: h,
    fontFamily: n,
    fontSize: o,
    fontWeightLight: r,
    fontWeightRegular: i,
    fontWeightMedium: a,
    fontWeightBold: l,
    ...m
  }, d, {
    clone: !1
    // No need to clone deep
  });
}
const SR = 0.2, TR = 0.14, ER = 0.12;
function Vt(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${SR})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${TR})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${ER})`].join(",");
}
const CR = ["none", Vt(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), Vt(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), Vt(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), Vt(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), Vt(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), Vt(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), Vt(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), Vt(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), Vt(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), Vt(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), Vt(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), Vt(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), Vt(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), Vt(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), Vt(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), Vt(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), Vt(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), Vt(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), Vt(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), Vt(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), Vt(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), Vt(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), Vt(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), Vt(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], OR = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, $R = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function gy(e) {
  return `${Math.round(e)}ms`;
}
function IR(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function RR(e) {
  const t = {
    ...OR,
    ...e.easing
  }, n = {
    ...$R,
    ...e.duration
  };
  return {
    getAutoHeightDuration: IR,
    create: (r = ["all"], i = {}) => {
      const {
        duration: a = n.standard,
        easing: l = t.easeInOut,
        delay: c = 0,
        ...u
      } = i;
      if (process.env.NODE_ENV !== "production") {
        const f = (p) => typeof p == "string", d = (p) => !Number.isNaN(parseFloat(p));
        !f(r) && !Array.isArray(r) && console.error('MUI: Argument "props" must be a string or Array.'), !d(a) && !f(a) && console.error(`MUI: Argument "duration" must be a number or a string but found ${a}.`), f(l) || console.error('MUI: Argument "easing" must be a string.'), !d(c) && !f(c) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof i != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(u).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(u).join(",")}].`);
      }
      return (Array.isArray(r) ? r : [r]).map((f) => `${f} ${typeof a == "string" ? a : gy(a)} ${l} ${typeof c == "string" ? c : gy(c)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const kR = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function PR(e) {
  return tr(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function ew(e = {}) {
  const t = {
    ...e
  };
  function n(o) {
    const r = Object.entries(o);
    for (let i = 0; i < r.length; i++) {
      const [a, l] = r[i];
      !PR(l) || a.startsWith("unstable_") ? delete o[a] : tr(l) && (o[a] = {
        ...l
      }, n(o[a]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function Ep(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: o = {},
    spacing: r,
    palette: i = {},
    transitions: a = {},
    typography: l = {},
    shape: c,
    ...u
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : lr(20));
  const f = Kh(i), d = Zu(e);
  let p = Mn(d, {
    mixins: xR(d.breakpoints, o),
    palette: f,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: CR.slice(),
    typography: Jx(f, l),
    transitions: RR(a),
    zIndex: {
      ...kR
    }
  });
  if (p = Mn(p, u), p = t.reduce((h, g) => Mn(h, g), p), process.env.NODE_ENV !== "production") {
    const h = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], g = (m, y) => {
      let x;
      for (x in m) {
        const T = m[x];
        if (h.includes(x) && Object.keys(T).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const b = tt("", x);
            console.error([`MUI: The \`${y}\` component increases the CSS specificity of the \`${x}\` internal state.`, "You can not override it like this: ", JSON.stringify(m, null, 2), "", `Instead, you need to use the '&.${b}' syntax:`, JSON.stringify({
              root: {
                [`&.${b}`]: T
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          m[x] = {};
        }
      }
    };
    Object.keys(p.components).forEach((m) => {
      const y = p.components[m].styleOverrides;
      y && m.startsWith("Mui") && g(y, m);
    });
  }
  return p.unstable_sxConfig = {
    ...wl,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, p.unstable_sx = function(g) {
    return Kr({
      sx: g,
      theme: this
    });
  }, p.toRuntimeSource = ew, p;
}
function Cp(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const NR = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = Cp(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function tw(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function nw(e) {
  return e === "dark" ? NR : [];
}
function MR(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: o,
    ...r
  } = e, i = Kh(t);
  return {
    palette: i,
    opacity: {
      ...tw(i.mode),
      ...n
    },
    overlays: o || nw(i.mode),
    ...r
  };
}
function _R(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const AR = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], DR = (e) => (t, n) => {
  const o = e.rootSelector || ":root", r = e.colorSchemeSelector;
  let i = r;
  if (r === "class" && (i = ".%s"), r === "data" && (i = "[data-%s]"), r != null && r.startsWith("data-") && !r.includes("%s") && (i = `[${r}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const a = {};
      return AR(e.cssVarPrefix).forEach((l) => {
        a[l] = n[l], delete n[l];
      }), i === "media" ? {
        [o]: n,
        "@media (prefers-color-scheme: dark)": {
          [o]: a
        }
      } : i ? {
        [i.replace("%s", t)]: a,
        [`${o}, ${i.replace("%s", t)}`]: n
      } : {
        [o]: {
          ...n,
          ...a
        }
      };
    }
    if (i && i !== "media")
      return `${o}, ${i.replace("%s", String(t))}`;
  } else if (t) {
    if (i === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [o]: n
        }
      };
    if (i)
      return i.replace("%s", String(t));
  }
  return o;
};
function LR(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function me(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function va(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : _x(e);
}
function gr(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = ba(va(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function BR(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const Yo = (e) => {
  try {
    return e();
  } catch {
  }
}, FR = (e = "mui") => tR(e);
function wf(e, t, n, o) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const r = o === "dark" ? "dark" : "light";
  if (!n) {
    e[o] = MR({
      ...t,
      palette: {
        mode: r,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: i,
    ...a
  } = Ep({
    ...n,
    palette: {
      mode: r,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[o] = {
    ...t,
    palette: i,
    opacity: {
      ...tw(r),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || nw(r)
  }, a;
}
function zR(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: o,
    disableCssColorScheme: r = !1,
    cssVarPrefix: i = "mui",
    shouldSkipGeneratingVar: a = _R,
    colorSchemeSelector: l = n.light && n.dark ? "media" : void 0,
    rootSelector: c = ":root",
    ...u
  } = e, f = Object.keys(n)[0], d = o || (n.light && f !== "light" ? "light" : f), p = FR(i), {
    [d]: h,
    light: g,
    dark: m,
    ...y
  } = n, x = {
    ...y
  };
  let T = h;
  if ((d === "dark" && !("dark" in n) || d === "light" && !("light" in n)) && (T = !0), !T)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${d}\` option is either missing or invalid.` : lr(21, d));
  const b = wf(x, T, u, d);
  g && !x.light && wf(x, g, void 0, "light"), m && !x.dark && wf(x, m, void 0, "dark");
  let w = {
    defaultColorScheme: d,
    ...b,
    cssVarPrefix: i,
    colorSchemeSelector: l,
    rootSelector: c,
    getCssVar: p,
    colorSchemes: x,
    font: {
      ...vR(b.typography),
      ...b.font
    },
    spacing: BR(u.spacing)
  };
  Object.keys(w.colorSchemes).forEach((M) => {
    const v = w.colorSchemes[M].palette, I = (k) => {
      const A = k.split("-"), O = A[1], _ = A[2];
      return p(k, v[O][_]);
    };
    if (v.mode === "light" && (me(v.common, "background", "#fff"), me(v.common, "onBackground", "#000")), v.mode === "dark" && (me(v.common, "background", "#000"), me(v.common, "onBackground", "#fff")), LR(v, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), v.mode === "light") {
      me(v.Alert, "errorColor", Nt(v.error.light, 0.6)), me(v.Alert, "infoColor", Nt(v.info.light, 0.6)), me(v.Alert, "successColor", Nt(v.success.light, 0.6)), me(v.Alert, "warningColor", Nt(v.warning.light, 0.6)), me(v.Alert, "errorFilledBg", I("palette-error-main")), me(v.Alert, "infoFilledBg", I("palette-info-main")), me(v.Alert, "successFilledBg", I("palette-success-main")), me(v.Alert, "warningFilledBg", I("palette-warning-main")), me(v.Alert, "errorFilledColor", Yo(() => v.getContrastText(v.error.main))), me(v.Alert, "infoFilledColor", Yo(() => v.getContrastText(v.info.main))), me(v.Alert, "successFilledColor", Yo(() => v.getContrastText(v.success.main))), me(v.Alert, "warningFilledColor", Yo(() => v.getContrastText(v.warning.main))), me(v.Alert, "errorStandardBg", Mt(v.error.light, 0.9)), me(v.Alert, "infoStandardBg", Mt(v.info.light, 0.9)), me(v.Alert, "successStandardBg", Mt(v.success.light, 0.9)), me(v.Alert, "warningStandardBg", Mt(v.warning.light, 0.9)), me(v.Alert, "errorIconColor", I("palette-error-main")), me(v.Alert, "infoIconColor", I("palette-info-main")), me(v.Alert, "successIconColor", I("palette-success-main")), me(v.Alert, "warningIconColor", I("palette-warning-main")), me(v.AppBar, "defaultBg", I("palette-grey-100")), me(v.Avatar, "defaultBg", I("palette-grey-400")), me(v.Button, "inheritContainedBg", I("palette-grey-300")), me(v.Button, "inheritContainedHoverBg", I("palette-grey-A100")), me(v.Chip, "defaultBorder", I("palette-grey-400")), me(v.Chip, "defaultAvatarColor", I("palette-grey-700")), me(v.Chip, "defaultIconColor", I("palette-grey-700")), me(v.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), me(v.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), me(v.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), me(v.LinearProgress, "primaryBg", Mt(v.primary.main, 0.62)), me(v.LinearProgress, "secondaryBg", Mt(v.secondary.main, 0.62)), me(v.LinearProgress, "errorBg", Mt(v.error.main, 0.62)), me(v.LinearProgress, "infoBg", Mt(v.info.main, 0.62)), me(v.LinearProgress, "successBg", Mt(v.success.main, 0.62)), me(v.LinearProgress, "warningBg", Mt(v.warning.main, 0.62)), me(v.Skeleton, "bg", `rgba(${I("palette-text-primaryChannel")} / 0.11)`), me(v.Slider, "primaryTrack", Mt(v.primary.main, 0.62)), me(v.Slider, "secondaryTrack", Mt(v.secondary.main, 0.62)), me(v.Slider, "errorTrack", Mt(v.error.main, 0.62)), me(v.Slider, "infoTrack", Mt(v.info.main, 0.62)), me(v.Slider, "successTrack", Mt(v.success.main, 0.62)), me(v.Slider, "warningTrack", Mt(v.warning.main, 0.62));
      const k = oc(v.background.default, 0.8);
      me(v.SnackbarContent, "bg", k), me(v.SnackbarContent, "color", Yo(() => v.getContrastText(k))), me(v.SpeedDialAction, "fabHoverBg", oc(v.background.paper, 0.15)), me(v.StepConnector, "border", I("palette-grey-400")), me(v.StepContent, "border", I("palette-grey-400")), me(v.Switch, "defaultColor", I("palette-common-white")), me(v.Switch, "defaultDisabledColor", I("palette-grey-100")), me(v.Switch, "primaryDisabledColor", Mt(v.primary.main, 0.62)), me(v.Switch, "secondaryDisabledColor", Mt(v.secondary.main, 0.62)), me(v.Switch, "errorDisabledColor", Mt(v.error.main, 0.62)), me(v.Switch, "infoDisabledColor", Mt(v.info.main, 0.62)), me(v.Switch, "successDisabledColor", Mt(v.success.main, 0.62)), me(v.Switch, "warningDisabledColor", Mt(v.warning.main, 0.62)), me(v.TableCell, "border", Mt(nc(v.divider, 1), 0.88)), me(v.Tooltip, "bg", nc(v.grey[700], 0.92));
    }
    if (v.mode === "dark") {
      me(v.Alert, "errorColor", Mt(v.error.light, 0.6)), me(v.Alert, "infoColor", Mt(v.info.light, 0.6)), me(v.Alert, "successColor", Mt(v.success.light, 0.6)), me(v.Alert, "warningColor", Mt(v.warning.light, 0.6)), me(v.Alert, "errorFilledBg", I("palette-error-dark")), me(v.Alert, "infoFilledBg", I("palette-info-dark")), me(v.Alert, "successFilledBg", I("palette-success-dark")), me(v.Alert, "warningFilledBg", I("palette-warning-dark")), me(v.Alert, "errorFilledColor", Yo(() => v.getContrastText(v.error.dark))), me(v.Alert, "infoFilledColor", Yo(() => v.getContrastText(v.info.dark))), me(v.Alert, "successFilledColor", Yo(() => v.getContrastText(v.success.dark))), me(v.Alert, "warningFilledColor", Yo(() => v.getContrastText(v.warning.dark))), me(v.Alert, "errorStandardBg", Nt(v.error.light, 0.9)), me(v.Alert, "infoStandardBg", Nt(v.info.light, 0.9)), me(v.Alert, "successStandardBg", Nt(v.success.light, 0.9)), me(v.Alert, "warningStandardBg", Nt(v.warning.light, 0.9)), me(v.Alert, "errorIconColor", I("palette-error-main")), me(v.Alert, "infoIconColor", I("palette-info-main")), me(v.Alert, "successIconColor", I("palette-success-main")), me(v.Alert, "warningIconColor", I("palette-warning-main")), me(v.AppBar, "defaultBg", I("palette-grey-900")), me(v.AppBar, "darkBg", I("palette-background-paper")), me(v.AppBar, "darkColor", I("palette-text-primary")), me(v.Avatar, "defaultBg", I("palette-grey-600")), me(v.Button, "inheritContainedBg", I("palette-grey-800")), me(v.Button, "inheritContainedHoverBg", I("palette-grey-700")), me(v.Chip, "defaultBorder", I("palette-grey-700")), me(v.Chip, "defaultAvatarColor", I("palette-grey-300")), me(v.Chip, "defaultIconColor", I("palette-grey-300")), me(v.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), me(v.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), me(v.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), me(v.LinearProgress, "primaryBg", Nt(v.primary.main, 0.5)), me(v.LinearProgress, "secondaryBg", Nt(v.secondary.main, 0.5)), me(v.LinearProgress, "errorBg", Nt(v.error.main, 0.5)), me(v.LinearProgress, "infoBg", Nt(v.info.main, 0.5)), me(v.LinearProgress, "successBg", Nt(v.success.main, 0.5)), me(v.LinearProgress, "warningBg", Nt(v.warning.main, 0.5)), me(v.Skeleton, "bg", `rgba(${I("palette-text-primaryChannel")} / 0.13)`), me(v.Slider, "primaryTrack", Nt(v.primary.main, 0.5)), me(v.Slider, "secondaryTrack", Nt(v.secondary.main, 0.5)), me(v.Slider, "errorTrack", Nt(v.error.main, 0.5)), me(v.Slider, "infoTrack", Nt(v.info.main, 0.5)), me(v.Slider, "successTrack", Nt(v.success.main, 0.5)), me(v.Slider, "warningTrack", Nt(v.warning.main, 0.5));
      const k = oc(v.background.default, 0.98);
      me(v.SnackbarContent, "bg", k), me(v.SnackbarContent, "color", Yo(() => v.getContrastText(k))), me(v.SpeedDialAction, "fabHoverBg", oc(v.background.paper, 0.15)), me(v.StepConnector, "border", I("palette-grey-600")), me(v.StepContent, "border", I("palette-grey-600")), me(v.Switch, "defaultColor", I("palette-grey-300")), me(v.Switch, "defaultDisabledColor", I("palette-grey-600")), me(v.Switch, "primaryDisabledColor", Nt(v.primary.main, 0.55)), me(v.Switch, "secondaryDisabledColor", Nt(v.secondary.main, 0.55)), me(v.Switch, "errorDisabledColor", Nt(v.error.main, 0.55)), me(v.Switch, "infoDisabledColor", Nt(v.info.main, 0.55)), me(v.Switch, "successDisabledColor", Nt(v.success.main, 0.55)), me(v.Switch, "warningDisabledColor", Nt(v.warning.main, 0.55)), me(v.TableCell, "border", Nt(nc(v.divider, 1), 0.68)), me(v.Tooltip, "bg", nc(v.grey[700], 0.92));
    }
    gr(v.background, "default"), gr(v.background, "paper"), gr(v.common, "background"), gr(v.common, "onBackground"), gr(v, "divider"), Object.keys(v).forEach((k) => {
      const A = v[k];
      k !== "tonalOffset" && A && typeof A == "object" && (A.main && me(v[k], "mainChannel", ba(va(A.main))), A.light && me(v[k], "lightChannel", ba(va(A.light))), A.dark && me(v[k], "darkChannel", ba(va(A.dark))), A.contrastText && me(v[k], "contrastTextChannel", ba(va(A.contrastText))), k === "text" && (gr(v[k], "primary"), gr(v[k], "secondary")), k === "action" && (A.active && gr(v[k], "active"), A.selected && gr(v[k], "selected")));
    });
  }), w = t.reduce((M, v) => Mn(M, v), w);
  const S = {
    prefix: i,
    disableCssColorScheme: r,
    shouldSkipGeneratingVar: a,
    getSelector: DR(w)
  }, {
    vars: E,
    generateThemeVars: C,
    generateStyleSheets: R
  } = rR(w, S);
  return w.vars = E, Object.entries(w.colorSchemes[w.defaultColorScheme]).forEach(([M, v]) => {
    w[M] = v;
  }), w.generateThemeVars = C, w.generateStyleSheets = R, w.generateSpacing = function() {
    return Tx(u.spacing, Ih(this));
  }, w.getColorSchemeSelector = iR(l), w.spacing = w.generateSpacing(), w.shouldSkipGeneratingVar = a, w.unstable_sxConfig = {
    ...wl,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, w.unstable_sx = function(v) {
    return Kr({
      sx: v,
      theme: this
    });
  }, w.toRuntimeSource = ew, w;
}
function yy(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: Kh({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function td(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: o = !1,
    colorSchemes: r = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: i = n == null ? void 0 : n.mode,
    ...a
  } = e, l = i || "light", c = r == null ? void 0 : r[l], u = {
    ...r,
    ...n ? {
      [l]: {
        ...typeof c != "boolean" && c,
        palette: n
      }
    } : void 0
  };
  if (o === !1) {
    if (!("colorSchemes" in e))
      return Ep(e, ...t);
    let f = n;
    "palette" in e || u[l] && (u[l] !== !0 ? f = u[l].palette : l === "dark" && (f = {
      mode: "dark"
    }));
    const d = Ep({
      ...e,
      palette: f
    }, ...t);
    return d.defaultColorScheme = l, d.colorSchemes = u, d.palette.mode === "light" && (d.colorSchemes.light = {
      ...u.light !== !0 && u.light,
      palette: d.palette
    }, yy(d, "dark", u.dark)), d.palette.mode === "dark" && (d.colorSchemes.dark = {
      ...u.dark !== !0 && u.dark,
      palette: d.palette
    }, yy(d, "light", u.light)), d;
  }
  return !n && !("light" in u) && l === "light" && (u.light = !0), zR({
    ...a,
    colorSchemes: u,
    defaultColorScheme: l,
    ...typeof o != "boolean" && o
  }, ...t);
}
const Yh = td(), Fo = "$$material";
function Pr() {
  const e = Qu(Yh);
  return process.env.NODE_ENV !== "production" && P.useDebugValue(e), e[Fo] || e;
}
function ow(e) {
  return /* @__PURE__ */ $(Ex, {
    ...e,
    defaultTheme: Yh,
    themeId: Fo
  });
}
process.env.NODE_ENV !== "production" && (ow.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: s.oneOfType([s.array, s.func, s.number, s.object, s.string, s.bool])
});
function rw(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const Dn = (e) => rw(e) && e !== "classes", Ee = Rx({
  themeId: Fo,
  defaultTheme: Yh,
  rootShouldForwardProp: Dn
});
function Gh(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ $(ow, {
        styles: typeof e == "function" ? (o) => e({
          theme: o,
          ...n
        }) : e
      })
    );
  };
}
function jR() {
  return ax;
}
const qe = qI;
process.env.NODE_ENV !== "production" && (s.node, s.object.isRequired);
function lt(e) {
  return UI(e);
}
function VR(e) {
  return tt("MuiSvgIcon", e);
}
it("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const HR = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: o
  } = e, r = {
    root: ["root", t !== "inherit" && `color${fe(t)}`, `fontSize${fe(n)}`]
  };
  return rt(r, VR, o);
}, WR = Ee("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${fe(n.color)}`], t[`fontSize${fe(n.fontSize)}`]];
  }
})(qe(({
  theme: e
}) => {
  var t, n, o, r, i, a, l, c, u, f, d, p, h, g;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (r = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : r.call(t, "fill", {
      duration: (o = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : o.shorter
    }),
    variants: [
      {
        props: (m) => !m.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((a = (i = e.typography) == null ? void 0 : i.pxToRem) == null ? void 0 : a.call(i, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((c = (l = e.typography) == null ? void 0 : l.pxToRem) == null ? void 0 : c.call(l, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((f = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : f.call(u, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, m]) => m && m.main).map(([m]) => {
        var y, x;
        return {
          props: {
            color: m
          },
          style: {
            color: (x = (y = (e.vars ?? e).palette) == null ? void 0 : y[m]) == null ? void 0 : x.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (p = (d = (e.vars ?? e).palette) == null ? void 0 : d.action) == null ? void 0 : p.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (g = (h = (e.vars ?? e).palette) == null ? void 0 : h.action) == null ? void 0 : g.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), Ss = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: r,
    className: i,
    color: a = "inherit",
    component: l = "svg",
    fontSize: c = "medium",
    htmlColor: u,
    inheritViewBox: f = !1,
    titleAccess: d,
    viewBox: p = "0 0 24 24",
    ...h
  } = o, g = /* @__PURE__ */ P.isValidElement(r) && r.type === "svg", m = {
    ...o,
    color: a,
    component: l,
    fontSize: c,
    instanceFontSize: t.fontSize,
    inheritViewBox: f,
    viewBox: p,
    hasSvgAsChild: g
  }, y = {};
  f || (y.viewBox = p);
  const x = HR(m);
  return /* @__PURE__ */ Te(WR, {
    as: l,
    className: Re(x.root, i),
    focusable: "false",
    color: u,
    "aria-hidden": d ? void 0 : !0,
    role: d ? "img" : void 0,
    ref: n,
    ...y,
    ...h,
    ...g && r.props,
    ownerState: m,
    children: [g ? r.props.children : r, d ? /* @__PURE__ */ $("title", {
      children: d
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (Ss.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: s.oneOfType([s.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), s.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: s.oneOfType([s.oneOf(["inherit", "large", "medium", "small"]), s.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: s.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: s.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: s.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: s.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: s.string
});
Ss.muiName = "SvgIcon";
function Nr(e, t) {
  function n(o, r) {
    return /* @__PURE__ */ $(Ss, {
      "data-testid": process.env.NODE_ENV !== "production" ? `${t}Icon` : void 0,
      ref: r,
      ...o,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = Ss.muiName, /* @__PURE__ */ P.memo(/* @__PURE__ */ P.forwardRef(n));
}
const UR = Nr(/* @__PURE__ */ $("path", {
  d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
}), "Person");
function qR(e) {
  return tt("MuiAvatar", e);
}
it("MuiAvatar", ["root", "colorDefault", "circular", "rounded", "square", "img", "fallback"]);
function ot(e, t) {
  const {
    className: n,
    elementType: o,
    ownerState: r,
    externalForwardedProps: i,
    internalForwardedProps: a,
    shouldForwardComponentProp: l = !1,
    ...c
  } = t, {
    component: u,
    slots: f = {
      [e]: void 0
    },
    slotProps: d = {
      [e]: void 0
    },
    ...p
  } = i, h = f[e] || o, g = Ux(d[e], r), {
    props: {
      component: m,
      ...y
    },
    internalRef: x
  } = Wx({
    className: n,
    ...c,
    externalForwardedProps: e === "root" ? p : void 0,
    externalSlotProps: g
  }), T = un(x, g == null ? void 0 : g.ref, t.ref), b = e === "root" ? m || u : m, w = Vx(h, {
    ...e === "root" && !u && !f[e] && a,
    ...e !== "root" && !f[e] && a,
    ...y,
    ...b && !l && {
      as: b
    },
    ...b && l && {
      component: b
    },
    ref: T
  }, r);
  return [h, w];
}
const KR = (e) => {
  const {
    classes: t,
    variant: n,
    colorDefault: o
  } = e;
  return rt({
    root: ["root", n, o && "colorDefault"],
    img: ["img"],
    fallback: ["fallback"]
  }, qR, t);
}, YR = Ee("div", {
  name: "MuiAvatar",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], n.colorDefault && t.colorDefault];
  }
})(qe(({
  theme: e
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  flexShrink: 0,
  width: 40,
  height: 40,
  fontFamily: e.typography.fontFamily,
  fontSize: e.typography.pxToRem(20),
  lineHeight: 1,
  borderRadius: "50%",
  overflow: "hidden",
  userSelect: "none",
  variants: [{
    props: {
      variant: "rounded"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius
    }
  }, {
    props: {
      variant: "square"
    },
    style: {
      borderRadius: 0
    }
  }, {
    props: {
      colorDefault: !0
    },
    style: {
      color: (e.vars || e).palette.background.default,
      ...e.vars ? {
        backgroundColor: e.vars.palette.Avatar.defaultBg
      } : {
        backgroundColor: e.palette.grey[400],
        ...e.applyStyles("dark", {
          backgroundColor: e.palette.grey[600]
        })
      }
    }
  }]
}))), GR = Ee("img", {
  name: "MuiAvatar",
  slot: "Img",
  overridesResolver: (e, t) => t.img
})({
  width: "100%",
  height: "100%",
  textAlign: "center",
  // Handle non-square image.
  objectFit: "cover",
  // Hide alt text.
  color: "transparent",
  // Hide the image broken icon, only works on Chrome.
  textIndent: 1e4
}), XR = Ee(UR, {
  name: "MuiAvatar",
  slot: "Fallback",
  overridesResolver: (e, t) => t.fallback
})({
  width: "75%",
  height: "75%"
});
function ZR({
  crossOrigin: e,
  referrerPolicy: t,
  src: n,
  srcSet: o
}) {
  const [r, i] = P.useState(!1);
  return P.useEffect(() => {
    if (!n && !o)
      return;
    i(!1);
    let a = !0;
    const l = new Image();
    return l.onload = () => {
      a && i("loaded");
    }, l.onerror = () => {
      a && i("error");
    }, l.crossOrigin = e, l.referrerPolicy = t, l.src = n, o && (l.srcset = o), () => {
      a = !1;
    };
  }, [e, t, n, o]), r;
}
const iw = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiAvatar"
  }), {
    alt: r,
    children: i,
    className: a,
    component: l = "div",
    slots: c = {},
    slotProps: u = {},
    imgProps: f,
    sizes: d,
    src: p,
    srcSet: h,
    variant: g = "circular",
    ...m
  } = o;
  let y = null;
  const x = {
    ...o,
    component: l,
    variant: g
  }, T = ZR({
    ...f,
    ...typeof u.img == "function" ? u.img(x) : u.img,
    src: p,
    srcSet: h
  }), b = p || h, w = b && T !== "error";
  x.colorDefault = !w, delete x.ownerState;
  const S = KR(x), [E, C] = ot("img", {
    className: S.img,
    elementType: GR,
    externalForwardedProps: {
      slots: c,
      slotProps: {
        img: {
          ...f,
          ...u.img
        }
      }
    },
    additionalProps: {
      alt: r,
      src: p,
      srcSet: h,
      sizes: d
    },
    ownerState: x
  });
  return w ? y = /* @__PURE__ */ $(E, {
    ...C
  }) : i || i === 0 ? y = i : b && r ? y = r[0] : y = /* @__PURE__ */ $(XR, {
    ownerState: x,
    className: S.fallback
  }), /* @__PURE__ */ $(YR, {
    as: l,
    className: Re(S.root, a),
    ref: n,
    ...m,
    ownerState: x,
    children: y
  });
});
process.env.NODE_ENV !== "production" && (iw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Used in combination with `src` or `srcSet` to
   * provide an alt attribute for the rendered `img` element.
   */
  alt: s.string,
  /**
   * Used to render icon or text elements inside the Avatar if `src` is not set.
   * This can be an element, or just a string.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.
   * It can be used to listen for the loading error event.
   * @deprecated Use `slotProps.img` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  imgProps: s.object,
  /**
   * The `sizes` attribute for the `img` element.
   */
  sizes: s.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: s.shape({
    img: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: s.shape({
    img: s.elementType
  }),
  /**
   * The `src` attribute for the `img` element.
   */
  src: s.string,
  /**
   * The `srcSet` attribute for the `img` element.
   * Use this attribute for responsive image display.
   */
  srcSet: s.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The shape of the avatar.
   * @default 'circular'
   */
  variant: s.oneOfType([s.oneOf(["circular", "rounded", "square"]), s.string])
});
function QR(e) {
  const {
    badgeContent: t,
    invisible: n = !1,
    max: o = 99,
    showZero: r = !1
  } = e, i = Vh({
    badgeContent: t,
    max: o
  });
  let a = n;
  n === !1 && t === 0 && !r && (a = !0);
  const {
    badgeContent: l,
    max: c = o
  } = a ? i : e, u = l && Number(l) > c ? `${c}+` : l;
  return {
    badgeContent: l,
    invisible: a,
    max: c,
    displayValue: u
  };
}
function JR(e) {
  return typeof e.main == "string";
}
function ek(e, t = []) {
  if (!JR(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function Ut(e = []) {
  return ([, t]) => t && ek(t, e);
}
function tk(e) {
  return tt("MuiBadge", e);
}
const Dr = it("MuiBadge", [
  "root",
  "badge",
  "dot",
  "standard",
  "anchorOriginTopRight",
  "anchorOriginBottomRight",
  "anchorOriginTopLeft",
  "anchorOriginBottomLeft",
  "invisible",
  "colorError",
  "colorInfo",
  "colorPrimary",
  "colorSecondary",
  "colorSuccess",
  "colorWarning",
  "overlapRectangular",
  "overlapCircular",
  // TODO: v6 remove the overlap value from these class keys
  "anchorOriginTopLeftCircular",
  "anchorOriginTopLeftRectangular",
  "anchorOriginTopRightCircular",
  "anchorOriginTopRightRectangular",
  "anchorOriginBottomLeftCircular",
  "anchorOriginBottomLeftRectangular",
  "anchorOriginBottomRightCircular",
  "anchorOriginBottomRightRectangular"
]), Sf = 10, Tf = 4, nk = (e) => {
  const {
    color: t,
    anchorOrigin: n,
    invisible: o,
    overlap: r,
    variant: i,
    classes: a = {}
  } = e, l = {
    root: ["root"],
    badge: ["badge", i, o && "invisible", `anchorOrigin${fe(n.vertical)}${fe(n.horizontal)}`, `anchorOrigin${fe(n.vertical)}${fe(n.horizontal)}${fe(r)}`, `overlap${fe(r)}`, t !== "default" && `color${fe(t)}`]
  };
  return rt(l, tk, a);
}, ok = Ee("span", {
  name: "MuiBadge",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  position: "relative",
  display: "inline-flex",
  // For correct alignment with the text.
  verticalAlign: "middle",
  flexShrink: 0
}), rk = Ee("span", {
  name: "MuiBadge",
  slot: "Badge",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.badge, t[n.variant], t[`anchorOrigin${fe(n.anchorOrigin.vertical)}${fe(n.anchorOrigin.horizontal)}${fe(n.overlap)}`], n.color !== "default" && t[`color${fe(n.color)}`], n.invisible && t.invisible];
  }
})(qe(({
  theme: e
}) => ({
  display: "flex",
  flexDirection: "row",
  flexWrap: "wrap",
  justifyContent: "center",
  alignContent: "center",
  alignItems: "center",
  position: "absolute",
  boxSizing: "border-box",
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(12),
  minWidth: Sf * 2,
  lineHeight: 1,
  padding: "0 6px",
  height: Sf * 2,
  borderRadius: Sf,
  zIndex: 1,
  // Render the badge on top of potential ripples.
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeInOut,
    duration: e.transitions.duration.enteringScreen
  }),
  variants: [...Object.entries(e.palette).filter(Ut(["contrastText"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main,
      color: (e.vars || e).palette[t].contrastText
    }
  })), {
    props: {
      variant: "dot"
    },
    style: {
      borderRadius: Tf,
      height: Tf * 2,
      minWidth: Tf * 2,
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      top: 0,
      right: 0,
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${Dr.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      right: 0,
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${Dr.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      top: 0,
      left: 0,
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${Dr.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      left: 0,
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${Dr.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      top: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${Dr.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      bottom: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${Dr.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      top: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${Dr.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      bottom: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${Dr.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: {
      invisible: !0
    },
    style: {
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeInOut,
        duration: e.transitions.duration.leavingScreen
      })
    }
  }]
})));
function by(e) {
  return {
    vertical: (e == null ? void 0 : e.vertical) ?? "top",
    horizontal: (e == null ? void 0 : e.horizontal) ?? "right"
  };
}
const nd = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiBadge"
  }), {
    anchorOrigin: r,
    className: i,
    classes: a,
    component: l,
    components: c = {},
    componentsProps: u = {},
    children: f,
    overlap: d = "rectangular",
    color: p = "default",
    invisible: h = !1,
    max: g = 99,
    badgeContent: m,
    slots: y,
    slotProps: x,
    showZero: T = !1,
    variant: b = "standard",
    ...w
  } = o, {
    badgeContent: S,
    invisible: E,
    max: C,
    displayValue: R
  } = QR({
    max: g,
    invisible: h,
    badgeContent: m,
    showZero: T
  }), M = Vh({
    anchorOrigin: by(r),
    color: p,
    overlap: d,
    variant: b,
    badgeContent: m
  }), v = E || S == null && b !== "dot", {
    color: I = p,
    overlap: k = d,
    anchorOrigin: A,
    variant: O = b
  } = v ? M : o, _ = by(A), N = O !== "dot" ? R : void 0, L = {
    ...o,
    badgeContent: S,
    invisible: v,
    max: C,
    displayValue: N,
    showZero: T,
    anchorOrigin: _,
    color: I,
    overlap: k,
    variant: O
  }, F = nk(L), D = (y == null ? void 0 : y.root) ?? c.Root ?? ok, B = (y == null ? void 0 : y.badge) ?? c.Badge ?? rk, z = (x == null ? void 0 : x.root) ?? u.root, U = (x == null ? void 0 : x.badge) ?? u.badge, q = eu({
    elementType: D,
    externalSlotProps: z,
    externalForwardedProps: w,
    additionalProps: {
      ref: n,
      as: l
    },
    ownerState: L,
    className: Re(z == null ? void 0 : z.className, F.root, i)
  }), Y = eu({
    elementType: B,
    externalSlotProps: U,
    ownerState: L,
    className: Re(F.badge, U == null ? void 0 : U.className)
  });
  return /* @__PURE__ */ Te(D, {
    ...q,
    children: [f, /* @__PURE__ */ $(B, {
      ...Y,
      children: N
    })]
  });
});
process.env.NODE_ENV !== "production" && (nd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The anchor of the badge.
   * @default {
   *   vertical: 'top',
   *   horizontal: 'right',
   * }
   */
  anchorOrigin: s.shape({
    horizontal: s.oneOf(["left", "right"]),
    vertical: s.oneOf(["bottom", "top"])
  }),
  /**
   * The content rendered within the badge.
   */
  badgeContent: s.node,
  /**
   * The badge will be added relative to this node.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: s.oneOfType([s.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), s.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: s.shape({
    Badge: s.elementType,
    Root: s.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: s.shape({
    badge: s.oneOfType([s.func, s.object]),
    root: s.oneOfType([s.func, s.object])
  }),
  /**
   * If `true`, the badge is invisible.
   * @default false
   */
  invisible: s.bool,
  /**
   * Max count to show.
   * @default 99
   */
  max: s.number,
  /**
   * Wrapped shape the badge should overlap.
   * @default 'rectangular'
   */
  overlap: s.oneOf(["circular", "rectangular"]),
  /**
   * Controls whether the badge is hidden when `badgeContent` is zero.
   * @default false
   */
  showZero: s.bool,
  /**
   * The props used for each slot inside the Badge.
   * @default {}
   */
  slotProps: s.shape({
    badge: s.oneOfType([s.func, s.object]),
    root: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside the Badge.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: s.shape({
    badge: s.elementType,
    root: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: s.oneOfType([s.oneOf(["dot", "standard"]), s.string])
});
function Xh({ position: e, color: t }) {
  const n = Qe(() => {
    switch (e) {
      case "top-left":
        return {
          vertical: "top",
          horizontal: "left",
          transform: "translate(-2px, -2px)"
        };
      case "bottom-left":
        return {
          vertical: "bottom",
          horizontal: "left",
          transform: "translate(-2px, 2px)"
        };
      case "bottom-right":
        return {
          vertical: "bottom",
          horizontal: "right",
          transform: "translate(2px, 2px)"
        };
      case "top-right":
      default:
        return {
          vertical: "top",
          horizontal: "right",
          transform: "translate(2px, -2px)"
        };
    }
  }, [e]), o = Qe(() => {
    switch (t) {
      case "auto":
        return "inherit";
      case "success":
        return "success.main";
      case "primary":
        return "primary.main";
      case "error":
      default:
        return "error.main";
    }
  }, [t]);
  return {
    badgePlacementAttributes: n,
    badgeColor: o
  };
}
const sw = Ie(
  ({ children: e, isVisible: t, position: n = "top-right", color: o = "error" }) => {
    const { badgePlacementAttributes: r, badgeColor: i } = Xh({ position: n, color: o }), { vertical: a, horizontal: l, transform: c } = r;
    return /* @__PURE__ */ $(
      nd,
      {
        className: "VenomousUI-DotBadge",
        variant: "dot",
        invisible: !t,
        anchorOrigin: { vertical: a, horizontal: l },
        sx: {
          ".MuiBadge-badge": {
            ...t ? {
              transform: c,
              color: i,
              backgroundColor: i,
              boxShadow: "0 0 0 2px transparent",
              "&::after": {
                position: "absolute",
                top: 0,
                left: 0,
                width: "100%",
                height: "100%",
                borderRadius: "50%",
                animation: "ripple 1.2s infinite ease-in-out",
                border: "2px solid currentColor",
                content: '""'
              },
              "@keyframes ripple": {
                "0%": { transform: "scale(.8)", opacity: 1 },
                "100%": { transform: "scale(2.4)", opacity: 0 }
              }
            } : {}
          }
        },
        children: e
      }
    );
  }
);
sw.displayName = "DotBadge";
const aw = Object.freeze(
  {
    left: 0,
    top: 0,
    width: 16,
    height: 16
  }
), nu = Object.freeze({
  rotate: 0,
  vFlip: !1,
  hFlip: !1
}), Zh = Object.freeze({
  ...aw,
  ...nu
}), Op = Object.freeze({
  ...Zh,
  body: "",
  hidden: !1
});
function ik(e, t) {
  const n = {};
  !e.hFlip != !t.hFlip && (n.hFlip = !0), !e.vFlip != !t.vFlip && (n.vFlip = !0);
  const o = ((e.rotate || 0) + (t.rotate || 0)) % 4;
  return o && (n.rotate = o), n;
}
function vy(e, t) {
  const n = ik(e, t);
  for (const o in Op)
    o in nu ? o in e && !(o in n) && (n[o] = nu[o]) : o in t ? n[o] = t[o] : o in e && (n[o] = e[o]);
  return n;
}
function sk(e, t) {
  const n = e.icons, o = e.aliases || /* @__PURE__ */ Object.create(null), r = /* @__PURE__ */ Object.create(null);
  function i(a) {
    if (n[a])
      return r[a] = [];
    if (!(a in r)) {
      r[a] = null;
      const l = o[a] && o[a].parent, c = l && i(l);
      c && (r[a] = [l].concat(c));
    }
    return r[a];
  }
  return Object.keys(n).concat(Object.keys(o)).forEach(i), r;
}
function ak(e, t, n) {
  const o = e.icons, r = e.aliases || /* @__PURE__ */ Object.create(null);
  let i = {};
  function a(l) {
    i = vy(
      o[l] || r[l],
      i
    );
  }
  return a(t), n.forEach(a), vy(e, i);
}
function lw(e, t) {
  const n = [];
  if (typeof e != "object" || typeof e.icons != "object")
    return n;
  e.not_found instanceof Array && e.not_found.forEach((r) => {
    t(r, null), n.push(r);
  });
  const o = sk(e);
  for (const r in o) {
    const i = o[r];
    i && (t(r, ak(e, r, i)), n.push(r));
  }
  return n;
}
const lk = {
  provider: "",
  aliases: {},
  not_found: {},
  ...aw
};
function Ef(e, t) {
  for (const n in t)
    if (n in e && typeof e[n] != typeof t[n])
      return !1;
  return !0;
}
function cw(e) {
  if (typeof e != "object" || e === null)
    return null;
  const t = e;
  if (typeof t.prefix != "string" || !e.icons || typeof e.icons != "object" || !Ef(e, lk))
    return null;
  const n = t.icons;
  for (const r in n) {
    const i = n[r];
    if (
      // Name cannot be empty
      !r || // Must have body
      typeof i.body != "string" || // Check other props
      !Ef(
        i,
        Op
      )
    )
      return null;
  }
  const o = t.aliases || /* @__PURE__ */ Object.create(null);
  for (const r in o) {
    const i = o[r], a = i.parent;
    if (
      // Name cannot be empty
      !r || // Parent must be set and point to existing icon
      typeof a != "string" || !n[a] && !o[a] || // Check other props
      !Ef(
        i,
        Op
      )
    )
      return null;
  }
  return t;
}
const uw = /^[a-z0-9]+(-[a-z0-9]+)*$/, od = (e, t, n, o = "") => {
  const r = e.split(":");
  if (e.slice(0, 1) === "@") {
    if (r.length < 2 || r.length > 3)
      return null;
    o = r.shift().slice(1);
  }
  if (r.length > 3 || !r.length)
    return null;
  if (r.length > 1) {
    const l = r.pop(), c = r.pop(), u = {
      // Allow provider without '@': "provider:prefix:name"
      provider: r.length > 0 ? r[0] : o,
      prefix: c,
      name: l
    };
    return t && !Dc(u) ? null : u;
  }
  const i = r[0], a = i.split("-");
  if (a.length > 1) {
    const l = {
      provider: o,
      prefix: a.shift(),
      name: a.join("-")
    };
    return t && !Dc(l) ? null : l;
  }
  if (n && o === "") {
    const l = {
      provider: o,
      prefix: "",
      name: i
    };
    return t && !Dc(l, n) ? null : l;
  }
  return null;
}, Dc = (e, t) => e ? !!// Check prefix: cannot be empty, unless allowSimpleName is enabled
// Check name: cannot be empty
((t && e.prefix === "" || e.prefix) && e.name) : !1, xy = /* @__PURE__ */ Object.create(null);
function ck(e, t) {
  return {
    provider: e,
    prefix: t,
    icons: /* @__PURE__ */ Object.create(null),
    missing: /* @__PURE__ */ new Set()
  };
}
function Ts(e, t) {
  const n = xy[e] || (xy[e] = /* @__PURE__ */ Object.create(null));
  return n[t] || (n[t] = ck(e, t));
}
function dw(e, t) {
  return cw(t) ? lw(t, (n, o) => {
    o ? e.icons[n] = o : e.missing.add(n);
  }) : [];
}
function uk(e, t, n) {
  try {
    if (typeof n.body == "string")
      return e.icons[t] = { ...n }, !0;
  } catch {
  }
  return !1;
}
let Ga = !1;
function fw(e) {
  return typeof e == "boolean" && (Ga = e), Ga;
}
function wy(e) {
  const t = typeof e == "string" ? od(e, !0, Ga) : e;
  if (t) {
    const n = Ts(t.provider, t.prefix), o = t.name;
    return n.icons[o] || (n.missing.has(o) ? null : void 0);
  }
}
function dk(e, t) {
  const n = od(e, !0, Ga);
  if (!n)
    return !1;
  const o = Ts(n.provider, n.prefix);
  return t ? uk(o, n.name, t) : (o.missing.add(n.name), !0);
}
function fk(e, t) {
  if (typeof e != "object")
    return !1;
  if (typeof t != "string" && (t = e.provider || ""), Ga && !t && !e.prefix) {
    let r = !1;
    return cw(e) && (e.prefix = "", lw(e, (i, a) => {
      dk(i, a) && (r = !0);
    })), r;
  }
  const n = e.prefix;
  if (!Dc({
    prefix: n,
    name: "a"
  }))
    return !1;
  const o = Ts(t, n);
  return !!dw(o, e);
}
const pw = Object.freeze({
  width: null,
  height: null
}), hw = Object.freeze({
  // Dimensions
  ...pw,
  // Transformations
  ...nu
}), pk = /(-?[0-9.]*[0-9]+[0-9.]*)/g, hk = /^-?[0-9.]*[0-9]+[0-9.]*$/g;
function Sy(e, t, n) {
  if (t === 1)
    return e;
  if (n = n || 100, typeof e == "number")
    return Math.ceil(e * t * n) / n;
  if (typeof e != "string")
    return e;
  const o = e.split(pk);
  if (o === null || !o.length)
    return e;
  const r = [];
  let i = o.shift(), a = hk.test(i);
  for (; ; ) {
    if (a) {
      const l = parseFloat(i);
      isNaN(l) ? r.push(i) : r.push(Math.ceil(l * t * n) / n);
    } else
      r.push(i);
    if (i = o.shift(), i === void 0)
      return r.join("");
    a = !a;
  }
}
function mk(e, t = "defs") {
  let n = "";
  const o = e.indexOf("<" + t);
  for (; o >= 0; ) {
    const r = e.indexOf(">", o), i = e.indexOf("</" + t);
    if (r === -1 || i === -1)
      break;
    const a = e.indexOf(">", i);
    if (a === -1)
      break;
    n += e.slice(r + 1, i).trim(), e = e.slice(0, o).trim() + e.slice(a + 1);
  }
  return {
    defs: n,
    content: e
  };
}
function gk(e, t) {
  return e ? "<defs>" + e + "</defs>" + t : t;
}
function yk(e, t, n) {
  const o = mk(e);
  return gk(o.defs, t + o.content + n);
}
const bk = (e) => e === "unset" || e === "undefined" || e === "none";
function vk(e, t) {
  const n = {
    ...Zh,
    ...e
  }, o = {
    ...hw,
    ...t
  }, r = {
    left: n.left,
    top: n.top,
    width: n.width,
    height: n.height
  };
  let i = n.body;
  [n, o].forEach((m) => {
    const y = [], x = m.hFlip, T = m.vFlip;
    let b = m.rotate;
    x ? T ? b += 2 : (y.push(
      "translate(" + (r.width + r.left).toString() + " " + (0 - r.top).toString() + ")"
    ), y.push("scale(-1 1)"), r.top = r.left = 0) : T && (y.push(
      "translate(" + (0 - r.left).toString() + " " + (r.height + r.top).toString() + ")"
    ), y.push("scale(1 -1)"), r.top = r.left = 0);
    let w;
    switch (b < 0 && (b -= Math.floor(b / 4) * 4), b = b % 4, b) {
      case 1:
        w = r.height / 2 + r.top, y.unshift(
          "rotate(90 " + w.toString() + " " + w.toString() + ")"
        );
        break;
      case 2:
        y.unshift(
          "rotate(180 " + (r.width / 2 + r.left).toString() + " " + (r.height / 2 + r.top).toString() + ")"
        );
        break;
      case 3:
        w = r.width / 2 + r.left, y.unshift(
          "rotate(-90 " + w.toString() + " " + w.toString() + ")"
        );
        break;
    }
    b % 2 === 1 && (r.left !== r.top && (w = r.left, r.left = r.top, r.top = w), r.width !== r.height && (w = r.width, r.width = r.height, r.height = w)), y.length && (i = yk(
      i,
      '<g transform="' + y.join(" ") + '">',
      "</g>"
    ));
  });
  const a = o.width, l = o.height, c = r.width, u = r.height;
  let f, d;
  a === null ? (d = l === null ? "1em" : l === "auto" ? u : l, f = Sy(d, c / u)) : (f = a === "auto" ? c : a, d = l === null ? Sy(f, u / c) : l === "auto" ? u : l);
  const p = {}, h = (m, y) => {
    bk(y) || (p[m] = y.toString());
  };
  h("width", f), h("height", d);
  const g = [r.left, r.top, c, u];
  return p.viewBox = g.join(" "), {
    attributes: p,
    viewBox: g,
    body: i
  };
}
const xk = /\sid="(\S+)"/g, wk = "IconifyId" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);
let Sk = 0;
function Tk(e, t = wk) {
  const n = [];
  let o;
  for (; o = xk.exec(e); )
    n.push(o[1]);
  if (!n.length)
    return e;
  const r = "suffix" + (Math.random() * 16777216 | Date.now()).toString(16);
  return n.forEach((i) => {
    const a = typeof t == "function" ? t(i) : t + (Sk++).toString(), l = i.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    e = e.replace(
      // Allowed characters before id: [#;"]
      // Allowed characters after id: [)"], .[a-z]
      new RegExp('([#;"])(' + l + ')([")]|\\.[a-z])', "g"),
      "$1" + a + r + "$3"
    );
  }), e = e.replace(new RegExp(r, "g"), ""), e;
}
const $p = /* @__PURE__ */ Object.create(null);
function Ek(e, t) {
  $p[e] = t;
}
function Ip(e) {
  return $p[e] || $p[""];
}
function Qh(e) {
  let t;
  if (typeof e.resources == "string")
    t = [e.resources];
  else if (t = e.resources, !(t instanceof Array) || !t.length)
    return null;
  return {
    // API hosts
    resources: t,
    // Root path
    path: e.path || "/",
    // URL length limit
    maxURL: e.maxURL || 500,
    // Timeout before next host is used.
    rotate: e.rotate || 750,
    // Timeout before failing query.
    timeout: e.timeout || 5e3,
    // Randomise default API end point.
    random: e.random === !0,
    // Start index
    index: e.index || 0,
    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).
    dataAfterTimeout: e.dataAfterTimeout !== !1
  };
}
const Jh = /* @__PURE__ */ Object.create(null), na = [
  "https://api.simplesvg.com",
  "https://api.unisvg.com"
], Lc = [];
for (; na.length > 0; )
  na.length === 1 || Math.random() > 0.5 ? Lc.push(na.shift()) : Lc.push(na.pop());
Jh[""] = Qh({
  resources: ["https://api.iconify.design"].concat(Lc)
});
function Ck(e, t) {
  const n = Qh(t);
  return n === null ? !1 : (Jh[e] = n, !0);
}
function em(e) {
  return Jh[e];
}
const Ok = () => {
  let e;
  try {
    if (e = fetch, typeof e == "function")
      return e;
  } catch {
  }
};
let Ty = Ok();
function $k(e, t) {
  const n = em(e);
  if (!n)
    return 0;
  let o;
  if (!n.maxURL)
    o = 0;
  else {
    let r = 0;
    n.resources.forEach((a) => {
      r = Math.max(r, a.length);
    });
    const i = t + ".json?icons=";
    o = n.maxURL - r - n.path.length - i.length;
  }
  return o;
}
function Ik(e) {
  return e === 404;
}
const Rk = (e, t, n) => {
  const o = [], r = $k(e, t), i = "icons";
  let a = {
    type: i,
    provider: e,
    prefix: t,
    icons: []
  }, l = 0;
  return n.forEach((c, u) => {
    l += c.length + 1, l >= r && u > 0 && (o.push(a), a = {
      type: i,
      provider: e,
      prefix: t,
      icons: []
    }, l = c.length), a.icons.push(c);
  }), o.push(a), o;
};
function kk(e) {
  if (typeof e == "string") {
    const t = em(e);
    if (t)
      return t.path;
  }
  return "/";
}
const Pk = (e, t, n) => {
  if (!Ty) {
    n("abort", 424);
    return;
  }
  let o = kk(t.provider);
  switch (t.type) {
    case "icons": {
      const i = t.prefix, l = t.icons.join(","), c = new URLSearchParams({
        icons: l
      });
      o += i + ".json?" + c.toString();
      break;
    }
    case "custom": {
      const i = t.uri;
      o += i.slice(0, 1) === "/" ? i.slice(1) : i;
      break;
    }
    default:
      n("abort", 400);
      return;
  }
  let r = 503;
  Ty(e + o).then((i) => {
    const a = i.status;
    if (a !== 200) {
      setTimeout(() => {
        n(Ik(a) ? "abort" : "next", a);
      });
      return;
    }
    return r = 501, i.json();
  }).then((i) => {
    if (typeof i != "object" || i === null) {
      setTimeout(() => {
        i === 404 ? n("abort", i) : n("next", r);
      });
      return;
    }
    setTimeout(() => {
      n("success", i);
    });
  }).catch(() => {
    n("next", r);
  });
}, Nk = {
  prepare: Rk,
  send: Pk
};
function Mk(e) {
  const t = {
    loaded: [],
    missing: [],
    pending: []
  }, n = /* @__PURE__ */ Object.create(null);
  e.sort((r, i) => r.provider !== i.provider ? r.provider.localeCompare(i.provider) : r.prefix !== i.prefix ? r.prefix.localeCompare(i.prefix) : r.name.localeCompare(i.name));
  let o = {
    provider: "",
    prefix: "",
    name: ""
  };
  return e.forEach((r) => {
    if (o.name === r.name && o.prefix === r.prefix && o.provider === r.provider)
      return;
    o = r;
    const i = r.provider, a = r.prefix, l = r.name, c = n[i] || (n[i] = /* @__PURE__ */ Object.create(null)), u = c[a] || (c[a] = Ts(i, a));
    let f;
    l in u.icons ? f = t.loaded : a === "" || u.missing.has(l) ? f = t.missing : f = t.pending;
    const d = {
      provider: i,
      prefix: a,
      name: l
    };
    f.push(d);
  }), t;
}
function mw(e, t) {
  e.forEach((n) => {
    const o = n.loaderCallbacks;
    o && (n.loaderCallbacks = o.filter((r) => r.id !== t));
  });
}
function _k(e) {
  e.pendingCallbacksFlag || (e.pendingCallbacksFlag = !0, setTimeout(() => {
    e.pendingCallbacksFlag = !1;
    const t = e.loaderCallbacks ? e.loaderCallbacks.slice(0) : [];
    if (!t.length)
      return;
    let n = !1;
    const o = e.provider, r = e.prefix;
    t.forEach((i) => {
      const a = i.icons, l = a.pending.length;
      a.pending = a.pending.filter((c) => {
        if (c.prefix !== r)
          return !0;
        const u = c.name;
        if (e.icons[u])
          a.loaded.push({
            provider: o,
            prefix: r,
            name: u
          });
        else if (e.missing.has(u))
          a.missing.push({
            provider: o,
            prefix: r,
            name: u
          });
        else
          return n = !0, !0;
        return !1;
      }), a.pending.length !== l && (n || mw([e], i.id), i.callback(
        a.loaded.slice(0),
        a.missing.slice(0),
        a.pending.slice(0),
        i.abort
      ));
    });
  }));
}
let Ak = 0;
function Dk(e, t, n) {
  const o = Ak++, r = mw.bind(null, n, o);
  if (!t.pending.length)
    return r;
  const i = {
    id: o,
    icons: t,
    callback: e,
    abort: r
  };
  return n.forEach((a) => {
    (a.loaderCallbacks || (a.loaderCallbacks = [])).push(i);
  }), r;
}
function Lk(e, t = !0, n = !1) {
  const o = [];
  return e.forEach((r) => {
    const i = typeof r == "string" ? od(r, t, n) : r;
    i && o.push(i);
  }), o;
}
var Bk = {
  resources: [],
  index: 0,
  timeout: 2e3,
  rotate: 750,
  random: !1,
  dataAfterTimeout: !1
};
function Fk(e, t, n, o) {
  const r = e.resources.length, i = e.random ? Math.floor(Math.random() * r) : e.index;
  let a;
  if (e.random) {
    let E = e.resources.slice(0);
    for (a = []; E.length > 1; ) {
      const C = Math.floor(Math.random() * E.length);
      a.push(E[C]), E = E.slice(0, C).concat(E.slice(C + 1));
    }
    a = a.concat(E);
  } else
    a = e.resources.slice(i).concat(e.resources.slice(0, i));
  const l = Date.now();
  let c = "pending", u = 0, f, d = null, p = [], h = [];
  typeof o == "function" && h.push(o);
  function g() {
    d && (clearTimeout(d), d = null);
  }
  function m() {
    c === "pending" && (c = "aborted"), g(), p.forEach((E) => {
      E.status === "pending" && (E.status = "aborted");
    }), p = [];
  }
  function y(E, C) {
    C && (h = []), typeof E == "function" && h.push(E);
  }
  function x() {
    return {
      startTime: l,
      payload: t,
      status: c,
      queriesSent: u,
      queriesPending: p.length,
      subscribe: y,
      abort: m
    };
  }
  function T() {
    c = "failed", h.forEach((E) => {
      E(void 0, f);
    });
  }
  function b() {
    p.forEach((E) => {
      E.status === "pending" && (E.status = "aborted");
    }), p = [];
  }
  function w(E, C, R) {
    const M = C !== "success";
    switch (p = p.filter((v) => v !== E), c) {
      case "pending":
        break;
      case "failed":
        if (M || !e.dataAfterTimeout)
          return;
        break;
      default:
        return;
    }
    if (C === "abort") {
      f = R, T();
      return;
    }
    if (M) {
      f = R, p.length || (a.length ? S() : T());
      return;
    }
    if (g(), b(), !e.random) {
      const v = e.resources.indexOf(E.resource);
      v !== -1 && v !== e.index && (e.index = v);
    }
    c = "completed", h.forEach((v) => {
      v(R);
    });
  }
  function S() {
    if (c !== "pending")
      return;
    g();
    const E = a.shift();
    if (E === void 0) {
      if (p.length) {
        d = setTimeout(() => {
          g(), c === "pending" && (b(), T());
        }, e.timeout);
        return;
      }
      T();
      return;
    }
    const C = {
      status: "pending",
      resource: E,
      callback: (R, M) => {
        w(C, R, M);
      }
    };
    p.push(C), u++, d = setTimeout(S, e.rotate), n(E, t, C.callback);
  }
  return setTimeout(S), x;
}
function gw(e) {
  const t = {
    ...Bk,
    ...e
  };
  let n = [];
  function o() {
    n = n.filter((l) => l().status === "pending");
  }
  function r(l, c, u) {
    const f = Fk(
      t,
      l,
      c,
      (d, p) => {
        o(), u && u(d, p);
      }
    );
    return n.push(f), f;
  }
  function i(l) {
    return n.find((c) => l(c)) || null;
  }
  return {
    query: r,
    find: i,
    setIndex: (l) => {
      t.index = l;
    },
    getIndex: () => t.index,
    cleanup: o
  };
}
function Ey() {
}
const Cf = /* @__PURE__ */ Object.create(null);
function zk(e) {
  if (!Cf[e]) {
    const t = em(e);
    if (!t)
      return;
    const n = gw(t), o = {
      config: t,
      redundancy: n
    };
    Cf[e] = o;
  }
  return Cf[e];
}
function jk(e, t, n) {
  let o, r;
  if (typeof e == "string") {
    const i = Ip(e);
    if (!i)
      return n(void 0, 424), Ey;
    r = i.send;
    const a = zk(e);
    a && (o = a.redundancy);
  } else {
    const i = Qh(e);
    if (i) {
      o = gw(i);
      const a = e.resources ? e.resources[0] : "", l = Ip(a);
      l && (r = l.send);
    }
  }
  return !o || !r ? (n(void 0, 424), Ey) : o.query(t, r, n)().abort;
}
function Cy() {
}
function Vk(e) {
  e.iconsLoaderFlag || (e.iconsLoaderFlag = !0, setTimeout(() => {
    e.iconsLoaderFlag = !1, _k(e);
  }));
}
function Hk(e) {
  const t = [], n = [];
  return e.forEach((o) => {
    (o.match(uw) ? t : n).push(o);
  }), {
    valid: t,
    invalid: n
  };
}
function oa(e, t, n) {
  function o() {
    const r = e.pendingIcons;
    t.forEach((i) => {
      r && r.delete(i), e.icons[i] || e.missing.add(i);
    });
  }
  if (n && typeof n == "object")
    try {
      if (!dw(e, n).length) {
        o();
        return;
      }
    } catch (r) {
      console.error(r);
    }
  o(), Vk(e);
}
function Oy(e, t) {
  e instanceof Promise ? e.then((n) => {
    t(n);
  }).catch(() => {
    t(null);
  }) : t(e);
}
function Wk(e, t) {
  e.iconsToLoad ? e.iconsToLoad = e.iconsToLoad.concat(t).sort() : e.iconsToLoad = t, e.iconsQueueFlag || (e.iconsQueueFlag = !0, setTimeout(() => {
    e.iconsQueueFlag = !1;
    const { provider: n, prefix: o } = e, r = e.iconsToLoad;
    if (delete e.iconsToLoad, !r || !r.length)
      return;
    const i = e.loadIcon;
    if (e.loadIcons && (r.length > 1 || !i)) {
      Oy(
        e.loadIcons(r, o, n),
        (f) => {
          oa(e, r, f);
        }
      );
      return;
    }
    if (i) {
      r.forEach((f) => {
        const d = i(f, o, n);
        Oy(d, (p) => {
          const h = p ? {
            prefix: o,
            icons: {
              [f]: p
            }
          } : null;
          oa(e, [f], h);
        });
      });
      return;
    }
    const { valid: a, invalid: l } = Hk(r);
    if (l.length && oa(e, l, null), !a.length)
      return;
    const c = o.match(uw) ? Ip(n) : null;
    if (!c) {
      oa(e, a, null);
      return;
    }
    c.prepare(n, o, a).forEach((f) => {
      jk(n, f, (d) => {
        oa(e, f.icons, d);
      });
    });
  }));
}
const Uk = (e, t) => {
  const n = Lk(e, !0, fw()), o = Mk(n);
  if (!o.pending.length) {
    let c = !0;
    return t && setTimeout(() => {
      c && t(
        o.loaded,
        o.missing,
        o.pending,
        Cy
      );
    }), () => {
      c = !1;
    };
  }
  const r = /* @__PURE__ */ Object.create(null), i = [];
  let a, l;
  return o.pending.forEach((c) => {
    const { provider: u, prefix: f } = c;
    if (f === l && u === a)
      return;
    a = u, l = f, i.push(Ts(u, f));
    const d = r[u] || (r[u] = /* @__PURE__ */ Object.create(null));
    d[f] || (d[f] = []);
  }), o.pending.forEach((c) => {
    const { provider: u, prefix: f, name: d } = c, p = Ts(u, f), h = p.pendingIcons || (p.pendingIcons = /* @__PURE__ */ new Set());
    h.has(d) || (h.add(d), r[u][f].push(d));
  }), i.forEach((c) => {
    const u = r[c.provider][c.prefix];
    u.length && Wk(c, u);
  }), t ? Dk(t, o, i) : Cy;
};
function qk(e, t) {
  const n = {
    ...e
  };
  for (const o in t) {
    const r = t[o], i = typeof r;
    o in pw ? (r === null || r && (i === "string" || i === "number")) && (n[o] = r) : i === typeof n[o] && (n[o] = o === "rotate" ? r % 4 : r);
  }
  return n;
}
const Kk = /[\s,]+/;
function Yk(e, t) {
  t.split(Kk).forEach((n) => {
    switch (n.trim()) {
      case "horizontal":
        e.hFlip = !0;
        break;
      case "vertical":
        e.vFlip = !0;
        break;
    }
  });
}
function Gk(e, t = 0) {
  const n = e.replace(/^-?[0-9.]*/, "");
  function o(r) {
    for (; r < 0; )
      r += 4;
    return r % 4;
  }
  if (n === "") {
    const r = parseInt(e);
    return isNaN(r) ? 0 : o(r);
  } else if (n !== e) {
    let r = 0;
    switch (n) {
      case "%":
        r = 25;
        break;
      case "deg":
        r = 90;
    }
    if (r) {
      let i = parseFloat(e.slice(0, e.length - n.length));
      return isNaN(i) ? 0 : (i = i / r, i % 1 === 0 ? o(i) : 0);
    }
  }
  return t;
}
function Xk(e, t) {
  let n = e.indexOf("xlink:") === -1 ? "" : ' xmlns:xlink="http://www.w3.org/1999/xlink"';
  for (const o in t)
    n += " " + o + '="' + t[o] + '"';
  return '<svg xmlns="http://www.w3.org/2000/svg"' + n + ">" + e + "</svg>";
}
function Zk(e) {
  return e.replace(/"/g, "'").replace(/%/g, "%25").replace(/#/g, "%23").replace(/</g, "%3C").replace(/>/g, "%3E").replace(/\s+/g, " ");
}
function Qk(e) {
  return "data:image/svg+xml," + Zk(e);
}
function Jk(e) {
  return 'url("' + Qk(e) + '")';
}
let Ra;
function eP() {
  try {
    Ra = window.trustedTypes.createPolicy("iconify", {
      // eslint-disable-next-line @typescript-eslint/no-unsafe-return
      createHTML: (e) => e
    });
  } catch {
    Ra = null;
  }
}
function tP(e) {
  return Ra === void 0 && eP(), Ra ? Ra.createHTML(e) : e;
}
const yw = {
  ...hw,
  inline: !1
}, nP = {
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink",
  "aria-hidden": !0,
  role: "img"
}, oP = {
  display: "inline-block"
}, Rp = {
  backgroundColor: "currentColor"
}, bw = {
  backgroundColor: "transparent"
}, $y = {
  Image: "var(--svg)",
  Repeat: "no-repeat",
  Size: "100% 100%"
}, Iy = {
  WebkitMask: Rp,
  mask: Rp,
  background: bw
};
for (const e in Iy) {
  const t = Iy[e];
  for (const n in $y)
    t[e + n] = $y[n];
}
const rP = {
  ...yw,
  inline: !0
};
function Ry(e) {
  return e + (e.match(/^[-0-9.]+$/) ? "px" : "");
}
const iP = (e, t, n) => {
  const o = t.inline ? rP : yw, r = qk(o, t), i = t.mode || "svg", a = {}, l = t.style || {}, c = {
    ...i === "svg" ? nP : {}
  };
  if (n) {
    const y = od(n, !1, !0);
    if (y) {
      const x = ["iconify"], T = [
        "provider",
        "prefix"
      ];
      for (const b of T)
        y[b] && x.push("iconify--" + y[b]);
      c.className = x.join(" ");
    }
  }
  for (let y in t) {
    const x = t[y];
    if (x !== void 0)
      switch (y) {
        // Properties to ignore
        case "icon":
        case "style":
        case "children":
        case "onLoad":
        case "mode":
        case "ssr":
          break;
        // Forward ref
        case "_ref":
          c.ref = x;
          break;
        // Merge class names
        case "className":
          c[y] = (c[y] ? c[y] + " " : "") + x;
          break;
        // Boolean attributes
        case "inline":
        case "hFlip":
        case "vFlip":
          r[y] = x === !0 || x === "true" || x === 1;
          break;
        // Flip as string: 'horizontal,vertical'
        case "flip":
          typeof x == "string" && Yk(r, x);
          break;
        // Color: copy to style
        case "color":
          a.color = x;
          break;
        // Rotation as string
        case "rotate":
          typeof x == "string" ? r[y] = Gk(x) : typeof x == "number" && (r[y] = x);
          break;
        // Remove aria-hidden
        case "ariaHidden":
        case "aria-hidden":
          x !== !0 && x !== "true" && delete c["aria-hidden"];
          break;
        // Copy missing property if it does not exist in customisations
        default:
          o[y] === void 0 && (c[y] = x);
      }
  }
  const u = vk(e, r), f = u.attributes;
  if (r.inline && (a.verticalAlign = "-0.125em"), i === "svg") {
    c.style = {
      ...a,
      ...l
    }, Object.assign(c, f);
    let y = 0, x = t.id;
    return typeof x == "string" && (x = x.replace(/-/g, "_")), c.dangerouslySetInnerHTML = {
      __html: tP(Tk(u.body, x ? () => x + "ID" + y++ : "iconifyReact"))
    }, Oi("svg", c);
  }
  const { body: d, width: p, height: h } = e, g = i === "mask" || (i === "bg" ? !1 : d.indexOf("currentColor") !== -1), m = Xk(d, {
    ...f,
    width: p + "",
    height: h + ""
  });
  return c.style = {
    ...a,
    "--svg": Jk(m),
    width: Ry(f.width),
    height: Ry(f.height),
    ...oP,
    ...g ? Rp : bw,
    ...l
  }, Oi("span", c);
};
fw(!0);
Ek("", Nk);
if (typeof document < "u" && typeof window < "u") {
  const e = window;
  if (e.IconifyPreload !== void 0) {
    const t = e.IconifyPreload, n = "Invalid IconifyPreload syntax.";
    typeof t == "object" && t !== null && (t instanceof Array ? t : [t]).forEach((o) => {
      try {
        // Check if item is an object and not null/array
        (typeof o != "object" || o === null || o instanceof Array || // Check for 'icons' and 'prefix'
        typeof o.icons != "object" || typeof o.prefix != "string" || // Add icon set
        !fk(o)) && console.error(n);
      } catch {
        console.error(n);
      }
    });
  }
  if (e.IconifyProviders !== void 0) {
    const t = e.IconifyProviders;
    if (typeof t == "object" && t !== null)
      for (let n in t) {
        const o = "IconifyProviders[" + n + "] is invalid.";
        try {
          const r = t[n];
          if (typeof r != "object" || !r || r.resources === void 0)
            continue;
          Ck(n, r) || console.error(o);
        } catch {
          console.error(o);
        }
      }
  }
}
function vw(e) {
  const [t, n] = yn(!!e.ssr), [o, r] = yn({});
  function i(h) {
    if (h) {
      const g = e.icon;
      if (typeof g == "object")
        return {
          name: "",
          data: g
        };
      const m = wy(g);
      if (m)
        return {
          name: g,
          data: m
        };
    }
    return {
      name: ""
    };
  }
  const [a, l] = yn(i(!!e.ssr));
  function c() {
    const h = o.callback;
    h && (h(), r({}));
  }
  function u(h) {
    if (JSON.stringify(a) !== JSON.stringify(h))
      return c(), l(h), !0;
  }
  function f() {
    var h;
    const g = e.icon;
    if (typeof g == "object") {
      u({
        name: "",
        data: g
      });
      return;
    }
    const m = wy(g);
    if (u({
      name: g,
      data: m
    }))
      if (m === void 0) {
        const y = Uk([g], f);
        r({
          callback: y
        });
      } else m && ((h = e.onLoad) === null || h === void 0 || h.call(e, g));
  }
  dt(() => (n(!0), c), []), dt(() => {
    t && f();
  }, [e.icon, t]);
  const { name: d, data: p } = a;
  return p ? iP({
    ...Zh,
    ...p
  }, e, d) : e.children ? e.children : e.fallback ? e.fallback : Oi("span", {});
}
const sP = yl((e, t) => vw({
  ...e,
  _ref: t
}));
yl((e, t) => vw({
  inline: !0,
  ...e,
  _ref: t
}));
function Of({
  theme: e,
  ...t
}) {
  const n = Fo in e ? e[Fo] : void 0;
  return /* @__PURE__ */ $(Ka, {
    ...t,
    themeId: n ? Fo : void 0,
    theme: n || e
  });
}
const rc = {
  colorSchemeStorageKey: "mui-color-scheme",
  defaultLightColorScheme: "light",
  defaultDarkColorScheme: "dark",
  modeStorageKey: "mui-mode"
}, {
  CssVarsProvider: aP
} = eR({
  themeId: Fo,
  // @ts-ignore ignore module augmentation tests
  theme: () => td({
    cssVariables: !0
  }),
  colorSchemeStorageKey: rc.colorSchemeStorageKey,
  modeStorageKey: rc.modeStorageKey,
  defaultColorScheme: {
    light: rc.defaultLightColorScheme,
    dark: rc.defaultDarkColorScheme
  },
  resolveTheme: (e) => {
    const t = {
      ...e,
      typography: Jx(e.palette, e.typography)
    };
    return t.unstable_sx = function(o) {
      return Kr({
        sx: o,
        theme: this
      });
    }, t;
  }
}), lP = aP;
function cP({
  theme: e,
  ...t
}) {
  if (typeof e == "function")
    return /* @__PURE__ */ $(Of, {
      theme: e,
      ...t
    });
  const n = Fo in e ? e[Fo] : e;
  return "colorSchemes" in n ? /* @__PURE__ */ $(lP, {
    theme: e,
    ...t
  }) : "vars" in n ? /* @__PURE__ */ $(Of, {
    theme: e,
    ...t
  }) : /* @__PURE__ */ $(Of, {
    theme: {
      ...e,
      vars: null
    },
    ...t
  });
}
const uP = it("MuiBox", ["root"]), dP = td(), Ho = dI({
  themeId: Fo,
  defaultTheme: dP,
  defaultClassName: uP.root,
  generateClassName: Cx.generate
});
process.env.NODE_ENV !== "production" && (Ho.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: s.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object])
});
const Wo = Ie(({ ref: e, icon: t, width: n = 20, color: o = "auto", sx: r, ...i }) => /* @__PURE__ */ $(
  Ho,
  {
    className: "VenomousUI-Icon",
    ssr: !0,
    ref: e,
    component: sP,
    icon: t,
    sx: {
      width: n,
      height: n,
      flexShrink: 0,
      display: "inline-flex",
      color: (a) => o === "error" ? a.palette.error.main : o === "primary" ? a.palette.primary.main : o === "success" ? a.palette.success.main : o === "disabled" ? a.palette.action.disabled : "inherit",
      ...r
    },
    ...i
  }
));
Wo.displayName = "Icon";
function fP(e) {
  return tt("MuiPaper", e);
}
it("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const pP = (e) => {
  const {
    square: t,
    elevation: n,
    variant: o,
    classes: r
  } = e, i = {
    root: ["root", o, !t && "rounded", o === "elevation" && `elevation${n}`]
  };
  return rt(i, fP, r);
}, hP = Ee("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(qe(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), oi = /* @__PURE__ */ P.forwardRef(function(t, n) {
  var h;
  const o = lt({
    props: t,
    name: "MuiPaper"
  }), r = Pr(), {
    className: i,
    component: a = "div",
    elevation: l = 1,
    square: c = !1,
    variant: u = "elevation",
    ...f
  } = o, d = {
    ...o,
    component: a,
    elevation: l,
    square: c,
    variant: u
  }, p = pP(d);
  return process.env.NODE_ENV !== "production" && r.shadows[l] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${l}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${l}]\` is defined.`].join(`
`)), /* @__PURE__ */ $(hP, {
    as: a,
    ownerState: d,
    className: Re(p.root, i),
    ref: n,
    ...f,
    style: {
      ...u === "elevation" && {
        "--Paper-shadow": (r.vars || r).shadows[l],
        ...r.vars && {
          "--Paper-overlay": (h = r.vars.overlays) == null ? void 0 : h[l]
        },
        ...!r.vars && r.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${bt("#fff", Cp(l))}, ${bt("#fff", Cp(l))})`
        }
      },
      ...f.style
    }
  });
});
process.env.NODE_ENV !== "production" && (oi.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: jo(ed, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: s.bool,
  /**
   * @ignore
   */
  style: s.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: s.oneOfType([s.oneOf(["elevation", "outlined"]), s.string])
});
function Fi() {
  return {
    paperCommonStyles: Qe(
      () => ({
        p: "8px",
        borderRadius: "8px !important",
        backgroundColor: ({ palette: t }) => t.background.paper,
        backgroundImage: "linear-gradient(rgba(255, 255, 255, 0.119), rgba(255, 255, 255, 0.119));"
      }),
      []
    )
  };
}
const Cr = Ie(({ isOutlined: e, children: t, sx: n, ...o }) => {
  const { paperCommonStyles: r } = Fi();
  return /* @__PURE__ */ $(
    oi,
    {
      className: "VenomousUI-Paper",
      variant: e ? "outlined" : "elevation",
      elevation: e ? 0 : 3,
      square: !0,
      sx: {
        ...r,
        ...n
      },
      ...o,
      children: t
    }
  );
});
Cr.displayName = "Paper";
function xw(e, t) {
  if (e == null) return {};
  var n = {};
  for (var o in e) if ({}.hasOwnProperty.call(e, o)) {
    if (t.indexOf(o) !== -1) continue;
    n[o] = e[o];
  }
  return n;
}
function kp(e, t) {
  return kp = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, o) {
    return n.__proto__ = o, n;
  }, kp(e, t);
}
function ww(e, t) {
  e.prototype = Object.create(t.prototype), e.prototype.constructor = e, kp(e, t);
}
const ky = {
  disabled: !1
};
var mP = process.env.NODE_ENV !== "production" ? s.oneOfType([s.number, s.shape({
  enter: s.number,
  exit: s.number,
  appear: s.number
}).isRequired]) : null;
process.env.NODE_ENV !== "production" && s.oneOfType([s.string, s.shape({
  enter: s.string,
  exit: s.string,
  active: s.string
}), s.shape({
  enter: s.string,
  enterDone: s.string,
  enterActive: s.string,
  exit: s.string,
  exitDone: s.string,
  exitActive: s.string
})]);
const ou = Z.createContext(null);
var gP = function(t) {
  return t.scrollTop;
}, xa = "unmounted", vi = "exited", xi = "entering", as = "entered", Pp = "exiting", go = /* @__PURE__ */ function(e) {
  ww(t, e);
  function t(o, r) {
    var i;
    i = e.call(this, o, r) || this;
    var a = r, l = a && !a.isMounting ? o.enter : o.appear, c;
    return i.appearStatus = null, o.in ? l ? (c = vi, i.appearStatus = xi) : c = as : o.unmountOnExit || o.mountOnEnter ? c = xa : c = vi, i.state = {
      status: c
    }, i.nextCallback = null, i;
  }
  t.getDerivedStateFromProps = function(r, i) {
    var a = r.in;
    return a && i.status === xa ? {
      status: vi
    } : null;
  };
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.updateStatus(!0, this.appearStatus);
  }, n.componentDidUpdate = function(r) {
    var i = null;
    if (r !== this.props) {
      var a = this.state.status;
      this.props.in ? a !== xi && a !== as && (i = xi) : (a === xi || a === as) && (i = Pp);
    }
    this.updateStatus(!1, i);
  }, n.componentWillUnmount = function() {
    this.cancelNextCallback();
  }, n.getTimeouts = function() {
    var r = this.props.timeout, i, a, l;
    return i = a = l = r, r != null && typeof r != "number" && (i = r.exit, a = r.enter, l = r.appear !== void 0 ? r.appear : a), {
      exit: i,
      enter: a,
      appear: l
    };
  }, n.updateStatus = function(r, i) {
    if (r === void 0 && (r = !1), i !== null)
      if (this.cancelNextCallback(), i === xi) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var a = this.props.nodeRef ? this.props.nodeRef.current : cs.findDOMNode(this);
          a && gP(a);
        }
        this.performEnter(r);
      } else
        this.performExit();
    else this.props.unmountOnExit && this.state.status === vi && this.setState({
      status: xa
    });
  }, n.performEnter = function(r) {
    var i = this, a = this.props.enter, l = this.context ? this.context.isMounting : r, c = this.props.nodeRef ? [l] : [cs.findDOMNode(this), l], u = c[0], f = c[1], d = this.getTimeouts(), p = l ? d.appear : d.enter;
    if (!r && !a || ky.disabled) {
      this.safeSetState({
        status: as
      }, function() {
        i.props.onEntered(u);
      });
      return;
    }
    this.props.onEnter(u, f), this.safeSetState({
      status: xi
    }, function() {
      i.props.onEntering(u, f), i.onTransitionEnd(p, function() {
        i.safeSetState({
          status: as
        }, function() {
          i.props.onEntered(u, f);
        });
      });
    });
  }, n.performExit = function() {
    var r = this, i = this.props.exit, a = this.getTimeouts(), l = this.props.nodeRef ? void 0 : cs.findDOMNode(this);
    if (!i || ky.disabled) {
      this.safeSetState({
        status: vi
      }, function() {
        r.props.onExited(l);
      });
      return;
    }
    this.props.onExit(l), this.safeSetState({
      status: Pp
    }, function() {
      r.props.onExiting(l), r.onTransitionEnd(a.exit, function() {
        r.safeSetState({
          status: vi
        }, function() {
          r.props.onExited(l);
        });
      });
    });
  }, n.cancelNextCallback = function() {
    this.nextCallback !== null && (this.nextCallback.cancel(), this.nextCallback = null);
  }, n.safeSetState = function(r, i) {
    i = this.setNextCallback(i), this.setState(r, i);
  }, n.setNextCallback = function(r) {
    var i = this, a = !0;
    return this.nextCallback = function(l) {
      a && (a = !1, i.nextCallback = null, r(l));
    }, this.nextCallback.cancel = function() {
      a = !1;
    }, this.nextCallback;
  }, n.onTransitionEnd = function(r, i) {
    this.setNextCallback(i);
    var a = this.props.nodeRef ? this.props.nodeRef.current : cs.findDOMNode(this), l = r == null && !this.props.addEndListener;
    if (!a || l) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var c = this.props.nodeRef ? [this.nextCallback] : [a, this.nextCallback], u = c[0], f = c[1];
      this.props.addEndListener(u, f);
    }
    r != null && setTimeout(this.nextCallback, r);
  }, n.render = function() {
    var r = this.state.status;
    if (r === xa)
      return null;
    var i = this.props, a = i.children;
    i.in, i.mountOnEnter, i.unmountOnExit, i.appear, i.enter, i.exit, i.timeout, i.addEndListener, i.onEnter, i.onEntering, i.onEntered, i.onExit, i.onExiting, i.onExited, i.nodeRef;
    var l = xw(i, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      /* @__PURE__ */ Z.createElement(ou.Provider, {
        value: null
      }, typeof a == "function" ? a(r, l) : Z.cloneElement(Z.Children.only(a), l))
    );
  }, t;
}(Z.Component);
go.contextType = ou;
go.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: s.shape({
    current: typeof Element > "u" ? s.any : function(e, t, n, o, r, i) {
      var a = e[t];
      return s.instanceOf(a && "ownerDocument" in a ? a.ownerDocument.defaultView.Element : Element)(e, t, n, o, r, i);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: s.oneOfType([s.func.isRequired, s.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: s.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: s.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: s.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: s.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: s.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: s.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function(t) {
    var n = mP;
    t.addEndListener || (n = n.isRequired);
    for (var o = arguments.length, r = new Array(o > 1 ? o - 1 : 0), i = 1; i < o; i++)
      r[i - 1] = arguments[i];
    return n.apply(void 0, [t].concat(r));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: s.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: s.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: s.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: s.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: s.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: s.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: s.func
} : {};
function Qi() {
}
go.defaultProps = {
  in: !1,
  mountOnEnter: !1,
  unmountOnExit: !1,
  appear: !1,
  enter: !0,
  exit: !0,
  onEnter: Qi,
  onEntering: Qi,
  onEntered: Qi,
  onExit: Qi,
  onExiting: Qi,
  onExited: Qi
};
go.UNMOUNTED = xa;
go.EXITED = vi;
go.ENTERING = xi;
go.ENTERED = as;
go.EXITING = Pp;
function yP(e) {
  if (e === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function tm(e, t) {
  var n = function(i) {
    return t && kc(i) ? t(i) : i;
  }, o = /* @__PURE__ */ Object.create(null);
  return e && XC.map(e, function(r) {
    return r;
  }).forEach(function(r) {
    o[r.key] = n(r);
  }), o;
}
function bP(e, t) {
  e = e || {}, t = t || {};
  function n(f) {
    return f in t ? t[f] : e[f];
  }
  var o = /* @__PURE__ */ Object.create(null), r = [];
  for (var i in e)
    i in t ? r.length && (o[i] = r, r = []) : r.push(i);
  var a, l = {};
  for (var c in t) {
    if (o[c])
      for (a = 0; a < o[c].length; a++) {
        var u = o[c][a];
        l[o[c][a]] = n(u);
      }
    l[c] = n(c);
  }
  for (a = 0; a < r.length; a++)
    l[r[a]] = n(r[a]);
  return l;
}
function Si(e, t, n) {
  return n[t] != null ? n[t] : e.props[t];
}
function vP(e, t) {
  return tm(e.children, function(n) {
    return Pc(n, {
      onExited: t.bind(null, n),
      in: !0,
      appear: Si(n, "appear", e),
      enter: Si(n, "enter", e),
      exit: Si(n, "exit", e)
    });
  });
}
function xP(e, t, n) {
  var o = tm(e.children), r = bP(t, o);
  return Object.keys(r).forEach(function(i) {
    var a = r[i];
    if (kc(a)) {
      var l = i in t, c = i in o, u = t[i], f = kc(u) && !u.props.in;
      c && (!l || f) ? r[i] = Pc(a, {
        onExited: n.bind(null, a),
        in: !0,
        exit: Si(a, "exit", e),
        enter: Si(a, "enter", e)
      }) : !c && l && !f ? r[i] = Pc(a, {
        in: !1
      }) : c && l && kc(u) && (r[i] = Pc(a, {
        onExited: n.bind(null, a),
        in: u.props.in,
        exit: Si(a, "exit", e),
        enter: Si(a, "enter", e)
      }));
    }
  }), r;
}
var wP = Object.values || function(e) {
  return Object.keys(e).map(function(t) {
    return e[t];
  });
}, SP = {
  component: "div",
  childFactory: function(t) {
    return t;
  }
}, nm = /* @__PURE__ */ function(e) {
  ww(t, e);
  function t(o, r) {
    var i;
    i = e.call(this, o, r) || this;
    var a = i.handleExited.bind(yP(i));
    return i.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: a,
      firstRender: !0
    }, i;
  }
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, n.componentWillUnmount = function() {
    this.mounted = !1;
  }, t.getDerivedStateFromProps = function(r, i) {
    var a = i.children, l = i.handleExited, c = i.firstRender;
    return {
      children: c ? vP(r, l) : xP(r, a, l),
      firstRender: !1
    };
  }, n.handleExited = function(r, i) {
    var a = tm(this.props.children);
    r.key in a || (r.props.onExited && r.props.onExited(i), this.mounted && this.setState(function(l) {
      var c = Gc({}, l.children);
      return delete c[r.key], {
        children: c
      };
    }));
  }, n.render = function() {
    var r = this.props, i = r.component, a = r.childFactory, l = xw(r, ["component", "childFactory"]), c = this.state.contextValue, u = wP(this.state.children).map(a);
    return delete l.appear, delete l.enter, delete l.exit, i === null ? /* @__PURE__ */ Z.createElement(ou.Provider, {
      value: c
    }, u) : /* @__PURE__ */ Z.createElement(ou.Provider, {
      value: c
    }, /* @__PURE__ */ Z.createElement(i, l, u));
  }, t;
}(Z.Component);
nm.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: s.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: s.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: s.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: s.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: s.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: s.func
} : {};
nm.defaultProps = SP;
const om = (e) => e.scrollTop;
function Es(e, t) {
  const {
    timeout: n,
    easing: o,
    style: r = {}
  } = e;
  return {
    duration: r.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: r.transitionTimingFunction ?? (typeof o == "object" ? o[t.mode] : o),
    delay: r.transitionDelay
  };
}
const TP = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, Pi = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = Pr(), r = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    addEndListener: i,
    appear: a = !0,
    children: l,
    easing: c,
    in: u,
    onEnter: f,
    onEntered: d,
    onEntering: p,
    onExit: h,
    onExited: g,
    onExiting: m,
    style: y,
    timeout: x = r,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: T = go,
    ...b
  } = t, w = P.useRef(null), S = un(w, ni(l), n), E = (O) => (_) => {
    if (O) {
      const N = w.current;
      _ === void 0 ? O(N) : O(N, _);
    }
  }, C = E(p), R = E((O, _) => {
    om(O);
    const N = Es({
      style: y,
      timeout: x,
      easing: c
    }, {
      mode: "enter"
    });
    O.style.webkitTransition = o.transitions.create("opacity", N), O.style.transition = o.transitions.create("opacity", N), f && f(O, _);
  }), M = E(d), v = E(m), I = E((O) => {
    const _ = Es({
      style: y,
      timeout: x,
      easing: c
    }, {
      mode: "exit"
    });
    O.style.webkitTransition = o.transitions.create("opacity", _), O.style.transition = o.transitions.create("opacity", _), h && h(O);
  }), k = E(g);
  return /* @__PURE__ */ $(T, {
    appear: a,
    in: u,
    nodeRef: w,
    onEnter: R,
    onEntered: M,
    onEntering: C,
    onExit: I,
    onExited: k,
    onExiting: v,
    addEndListener: (O) => {
      i && i(w.current, O);
    },
    timeout: x,
    ...b,
    children: (O, {
      ownerState: _,
      ...N
    }) => /* @__PURE__ */ P.cloneElement(l, {
      style: {
        opacity: 0,
        visibility: O === "exited" && !u ? "hidden" : void 0,
        ...TP[O],
        ...y,
        ...l.props.style
      },
      ref: S,
      ...N
    })
  });
});
process.env.NODE_ENV !== "production" && (Pi.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: s.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: s.bool,
  /**
   * A single child content element.
   */
  children: ti.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: s.oneOfType([s.shape({
    enter: s.string,
    exit: s.string
  }), s.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: s.bool,
  /**
   * @ignore
   */
  onEnter: s.func,
  /**
   * @ignore
   */
  onEntered: s.func,
  /**
   * @ignore
   */
  onEntering: s.func,
  /**
   * @ignore
   */
  onExit: s.func,
  /**
   * @ignore
   */
  onExited: s.func,
  /**
   * @ignore
   */
  onExiting: s.func,
  /**
   * @ignore
   */
  style: s.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: s.oneOfType([s.number, s.shape({
    appear: s.number,
    enter: s.number,
    exit: s.number
  })])
});
function Np(e) {
  return `scale(${e}, ${e ** 2})`;
}
const EP = {
  entering: {
    opacity: 1,
    transform: Np(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, $f = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), Xa = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const {
    addEndListener: o,
    appear: r = !0,
    children: i,
    easing: a,
    in: l,
    onEnter: c,
    onEntered: u,
    onEntering: f,
    onExit: d,
    onExited: p,
    onExiting: h,
    style: g,
    timeout: m = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: y = go,
    ...x
  } = t, T = us(), b = P.useRef(), w = Pr(), S = P.useRef(null), E = un(S, ni(i), n), C = (_) => (N) => {
    if (_) {
      const L = S.current;
      N === void 0 ? _(L) : _(L, N);
    }
  }, R = C(f), M = C((_, N) => {
    om(_);
    const {
      duration: L,
      delay: F,
      easing: D
    } = Es({
      style: g,
      timeout: m,
      easing: a
    }, {
      mode: "enter"
    });
    let B;
    m === "auto" ? (B = w.transitions.getAutoHeightDuration(_.clientHeight), b.current = B) : B = L, _.style.transition = [w.transitions.create("opacity", {
      duration: B,
      delay: F
    }), w.transitions.create("transform", {
      duration: $f ? B : B * 0.666,
      delay: F,
      easing: D
    })].join(","), c && c(_, N);
  }), v = C(u), I = C(h), k = C((_) => {
    const {
      duration: N,
      delay: L,
      easing: F
    } = Es({
      style: g,
      timeout: m,
      easing: a
    }, {
      mode: "exit"
    });
    let D;
    m === "auto" ? (D = w.transitions.getAutoHeightDuration(_.clientHeight), b.current = D) : D = N, _.style.transition = [w.transitions.create("opacity", {
      duration: D,
      delay: L
    }), w.transitions.create("transform", {
      duration: $f ? D : D * 0.666,
      delay: $f ? L : L || D * 0.333,
      easing: F
    })].join(","), _.style.opacity = 0, _.style.transform = Np(0.75), d && d(_);
  }), A = C(p);
  return /* @__PURE__ */ $(y, {
    appear: r,
    in: l,
    nodeRef: S,
    onEnter: M,
    onEntered: v,
    onEntering: R,
    onExit: k,
    onExited: A,
    onExiting: I,
    addEndListener: (_) => {
      m === "auto" && T.start(b.current || 0, _), o && o(S.current, _);
    },
    timeout: m === "auto" ? null : m,
    ...x,
    children: (_, {
      ownerState: N,
      ...L
    }) => /* @__PURE__ */ P.cloneElement(i, {
      style: {
        opacity: 0,
        transform: Np(0.75),
        visibility: _ === "exited" && !l ? "hidden" : void 0,
        ...EP[_],
        ...g,
        ...i.props.style
      },
      ref: E,
      ...L
    })
  });
});
process.env.NODE_ENV !== "production" && (Xa.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: s.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: s.bool,
  /**
   * A single child content element.
   */
  children: ti.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: s.oneOfType([s.shape({
    enter: s.string,
    exit: s.string
  }), s.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: s.bool,
  /**
   * @ignore
   */
  onEnter: s.func,
  /**
   * @ignore
   */
  onEntered: s.func,
  /**
   * @ignore
   */
  onEntering: s.func,
  /**
   * @ignore
   */
  onExit: s.func,
  /**
   * @ignore
   */
  onExited: s.func,
  /**
   * @ignore
   */
  onExiting: s.func,
  /**
   * @ignore
   */
  style: s.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: s.oneOfType([s.oneOf(["auto"]), s.number, s.shape({
    appear: s.number,
    enter: s.number,
    exit: s.number
  })])
});
Xa && (Xa.muiSupportAuto = !0);
var Yn = "top", Ro = "bottom", ko = "right", Gn = "left", rm = "auto", Cl = [Yn, Ro, ko, Gn], Cs = "start", Za = "end", CP = "clippingParents", Sw = "viewport", ra = "popper", OP = "reference", Py = /* @__PURE__ */ Cl.reduce(function(e, t) {
  return e.concat([t + "-" + Cs, t + "-" + Za]);
}, []), Tw = /* @__PURE__ */ [].concat(Cl, [rm]).reduce(function(e, t) {
  return e.concat([t, t + "-" + Cs, t + "-" + Za]);
}, []), $P = "beforeRead", IP = "read", RP = "afterRead", kP = "beforeMain", PP = "main", NP = "afterMain", MP = "beforeWrite", _P = "write", AP = "afterWrite", DP = [$P, IP, RP, kP, PP, NP, MP, _P, AP];
function ur(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function po(e) {
  if (e == null)
    return window;
  if (e.toString() !== "[object Window]") {
    var t = e.ownerDocument;
    return t && t.defaultView || window;
  }
  return e;
}
function Ni(e) {
  var t = po(e).Element;
  return e instanceof t || e instanceof Element;
}
function Io(e) {
  var t = po(e).HTMLElement;
  return e instanceof t || e instanceof HTMLElement;
}
function im(e) {
  if (typeof ShadowRoot > "u")
    return !1;
  var t = po(e).ShadowRoot;
  return e instanceof t || e instanceof ShadowRoot;
}
function LP(e) {
  var t = e.state;
  Object.keys(t.elements).forEach(function(n) {
    var o = t.styles[n] || {}, r = t.attributes[n] || {}, i = t.elements[n];
    !Io(i) || !ur(i) || (Object.assign(i.style, o), Object.keys(r).forEach(function(a) {
      var l = r[a];
      l === !1 ? i.removeAttribute(a) : i.setAttribute(a, l === !0 ? "" : l);
    }));
  });
}
function BP(e) {
  var t = e.state, n = {
    popper: {
      position: t.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(t.elements.popper.style, n.popper), t.styles = n, t.elements.arrow && Object.assign(t.elements.arrow.style, n.arrow), function() {
    Object.keys(t.elements).forEach(function(o) {
      var r = t.elements[o], i = t.attributes[o] || {}, a = Object.keys(t.styles.hasOwnProperty(o) ? t.styles[o] : n[o]), l = a.reduce(function(c, u) {
        return c[u] = "", c;
      }, {});
      !Io(r) || !ur(r) || (Object.assign(r.style, l), Object.keys(i).forEach(function(c) {
        r.removeAttribute(c);
      }));
    });
  };
}
const FP = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: LP,
  effect: BP,
  requires: ["computeStyles"]
};
function sr(e) {
  return e.split("-")[0];
}
var Ii = Math.max, ru = Math.min, Os = Math.round;
function Mp() {
  var e = navigator.userAgentData;
  return e != null && e.brands && Array.isArray(e.brands) ? e.brands.map(function(t) {
    return t.brand + "/" + t.version;
  }).join(" ") : navigator.userAgent;
}
function Ew() {
  return !/^((?!chrome|android).)*safari/i.test(Mp());
}
function $s(e, t, n) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  var o = e.getBoundingClientRect(), r = 1, i = 1;
  t && Io(e) && (r = e.offsetWidth > 0 && Os(o.width) / e.offsetWidth || 1, i = e.offsetHeight > 0 && Os(o.height) / e.offsetHeight || 1);
  var a = Ni(e) ? po(e) : window, l = a.visualViewport, c = !Ew() && n, u = (o.left + (c && l ? l.offsetLeft : 0)) / r, f = (o.top + (c && l ? l.offsetTop : 0)) / i, d = o.width / r, p = o.height / i;
  return {
    width: d,
    height: p,
    top: f,
    right: u + d,
    bottom: f + p,
    left: u,
    x: u,
    y: f
  };
}
function sm(e) {
  var t = $s(e), n = e.offsetWidth, o = e.offsetHeight;
  return Math.abs(t.width - n) <= 1 && (n = t.width), Math.abs(t.height - o) <= 1 && (o = t.height), {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: n,
    height: o
  };
}
function Cw(e, t) {
  var n = t.getRootNode && t.getRootNode();
  if (e.contains(t))
    return !0;
  if (n && im(n)) {
    var o = t;
    do {
      if (o && e.isSameNode(o))
        return !0;
      o = o.parentNode || o.host;
    } while (o);
  }
  return !1;
}
function Or(e) {
  return po(e).getComputedStyle(e);
}
function zP(e) {
  return ["table", "td", "th"].indexOf(ur(e)) >= 0;
}
function ri(e) {
  return ((Ni(e) ? e.ownerDocument : (
    // $FlowFixMe[prop-missing]
    e.document
  )) || window.document).documentElement;
}
function rd(e) {
  return ur(e) === "html" ? e : (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    e.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e.parentNode || // DOM Element detected
    (im(e) ? e.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    ri(e)
  );
}
function Ny(e) {
  return !Io(e) || // https://github.com/popperjs/popper-core/issues/837
  Or(e).position === "fixed" ? null : e.offsetParent;
}
function jP(e) {
  var t = /firefox/i.test(Mp()), n = /Trident/i.test(Mp());
  if (n && Io(e)) {
    var o = Or(e);
    if (o.position === "fixed")
      return null;
  }
  var r = rd(e);
  for (im(r) && (r = r.host); Io(r) && ["html", "body"].indexOf(ur(r)) < 0; ) {
    var i = Or(r);
    if (i.transform !== "none" || i.perspective !== "none" || i.contain === "paint" || ["transform", "perspective"].indexOf(i.willChange) !== -1 || t && i.willChange === "filter" || t && i.filter && i.filter !== "none")
      return r;
    r = r.parentNode;
  }
  return null;
}
function Ol(e) {
  for (var t = po(e), n = Ny(e); n && zP(n) && Or(n).position === "static"; )
    n = Ny(n);
  return n && (ur(n) === "html" || ur(n) === "body" && Or(n).position === "static") ? t : n || jP(e) || t;
}
function am(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function ka(e, t, n) {
  return Ii(e, ru(t, n));
}
function VP(e, t, n) {
  var o = ka(e, t, n);
  return o > n ? n : o;
}
function Ow() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function $w(e) {
  return Object.assign({}, Ow(), e);
}
function Iw(e, t) {
  return t.reduce(function(n, o) {
    return n[o] = e, n;
  }, {});
}
var HP = function(t, n) {
  return t = typeof t == "function" ? t(Object.assign({}, n.rects, {
    placement: n.placement
  })) : t, $w(typeof t != "number" ? t : Iw(t, Cl));
};
function WP(e) {
  var t, n = e.state, o = e.name, r = e.options, i = n.elements.arrow, a = n.modifiersData.popperOffsets, l = sr(n.placement), c = am(l), u = [Gn, ko].indexOf(l) >= 0, f = u ? "height" : "width";
  if (!(!i || !a)) {
    var d = HP(r.padding, n), p = sm(i), h = c === "y" ? Yn : Gn, g = c === "y" ? Ro : ko, m = n.rects.reference[f] + n.rects.reference[c] - a[c] - n.rects.popper[f], y = a[c] - n.rects.reference[c], x = Ol(i), T = x ? c === "y" ? x.clientHeight || 0 : x.clientWidth || 0 : 0, b = m / 2 - y / 2, w = d[h], S = T - p[f] - d[g], E = T / 2 - p[f] / 2 + b, C = ka(w, E, S), R = c;
    n.modifiersData[o] = (t = {}, t[R] = C, t.centerOffset = C - E, t);
  }
}
function UP(e) {
  var t = e.state, n = e.options, o = n.element, r = o === void 0 ? "[data-popper-arrow]" : o;
  r != null && (typeof r == "string" && (r = t.elements.popper.querySelector(r), !r) || Cw(t.elements.popper, r) && (t.elements.arrow = r));
}
const qP = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: WP,
  effect: UP,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function Is(e) {
  return e.split("-")[1];
}
var KP = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function YP(e, t) {
  var n = e.x, o = e.y, r = t.devicePixelRatio || 1;
  return {
    x: Os(n * r) / r || 0,
    y: Os(o * r) / r || 0
  };
}
function My(e) {
  var t, n = e.popper, o = e.popperRect, r = e.placement, i = e.variation, a = e.offsets, l = e.position, c = e.gpuAcceleration, u = e.adaptive, f = e.roundOffsets, d = e.isFixed, p = a.x, h = p === void 0 ? 0 : p, g = a.y, m = g === void 0 ? 0 : g, y = typeof f == "function" ? f({
    x: h,
    y: m
  }) : {
    x: h,
    y: m
  };
  h = y.x, m = y.y;
  var x = a.hasOwnProperty("x"), T = a.hasOwnProperty("y"), b = Gn, w = Yn, S = window;
  if (u) {
    var E = Ol(n), C = "clientHeight", R = "clientWidth";
    if (E === po(n) && (E = ri(n), Or(E).position !== "static" && l === "absolute" && (C = "scrollHeight", R = "scrollWidth")), E = E, r === Yn || (r === Gn || r === ko) && i === Za) {
      w = Ro;
      var M = d && E === S && S.visualViewport ? S.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        E[C]
      );
      m -= M - o.height, m *= c ? 1 : -1;
    }
    if (r === Gn || (r === Yn || r === Ro) && i === Za) {
      b = ko;
      var v = d && E === S && S.visualViewport ? S.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        E[R]
      );
      h -= v - o.width, h *= c ? 1 : -1;
    }
  }
  var I = Object.assign({
    position: l
  }, u && KP), k = f === !0 ? YP({
    x: h,
    y: m
  }, po(n)) : {
    x: h,
    y: m
  };
  if (h = k.x, m = k.y, c) {
    var A;
    return Object.assign({}, I, (A = {}, A[w] = T ? "0" : "", A[b] = x ? "0" : "", A.transform = (S.devicePixelRatio || 1) <= 1 ? "translate(" + h + "px, " + m + "px)" : "translate3d(" + h + "px, " + m + "px, 0)", A));
  }
  return Object.assign({}, I, (t = {}, t[w] = T ? m + "px" : "", t[b] = x ? h + "px" : "", t.transform = "", t));
}
function GP(e) {
  var t = e.state, n = e.options, o = n.gpuAcceleration, r = o === void 0 ? !0 : o, i = n.adaptive, a = i === void 0 ? !0 : i, l = n.roundOffsets, c = l === void 0 ? !0 : l, u = {
    placement: sr(t.placement),
    variation: Is(t.placement),
    popper: t.elements.popper,
    popperRect: t.rects.popper,
    gpuAcceleration: r,
    isFixed: t.options.strategy === "fixed"
  };
  t.modifiersData.popperOffsets != null && (t.styles.popper = Object.assign({}, t.styles.popper, My(Object.assign({}, u, {
    offsets: t.modifiersData.popperOffsets,
    position: t.options.strategy,
    adaptive: a,
    roundOffsets: c
  })))), t.modifiersData.arrow != null && (t.styles.arrow = Object.assign({}, t.styles.arrow, My(Object.assign({}, u, {
    offsets: t.modifiersData.arrow,
    position: "absolute",
    adaptive: !1,
    roundOffsets: c
  })))), t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-placement": t.placement
  });
}
const XP = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: GP,
  data: {}
};
var ic = {
  passive: !0
};
function ZP(e) {
  var t = e.state, n = e.instance, o = e.options, r = o.scroll, i = r === void 0 ? !0 : r, a = o.resize, l = a === void 0 ? !0 : a, c = po(t.elements.popper), u = [].concat(t.scrollParents.reference, t.scrollParents.popper);
  return i && u.forEach(function(f) {
    f.addEventListener("scroll", n.update, ic);
  }), l && c.addEventListener("resize", n.update, ic), function() {
    i && u.forEach(function(f) {
      f.removeEventListener("scroll", n.update, ic);
    }), l && c.removeEventListener("resize", n.update, ic);
  };
}
const QP = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: function() {
  },
  effect: ZP,
  data: {}
};
var JP = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function Bc(e) {
  return e.replace(/left|right|bottom|top/g, function(t) {
    return JP[t];
  });
}
var eN = {
  start: "end",
  end: "start"
};
function _y(e) {
  return e.replace(/start|end/g, function(t) {
    return eN[t];
  });
}
function lm(e) {
  var t = po(e), n = t.pageXOffset, o = t.pageYOffset;
  return {
    scrollLeft: n,
    scrollTop: o
  };
}
function cm(e) {
  return $s(ri(e)).left + lm(e).scrollLeft;
}
function tN(e, t) {
  var n = po(e), o = ri(e), r = n.visualViewport, i = o.clientWidth, a = o.clientHeight, l = 0, c = 0;
  if (r) {
    i = r.width, a = r.height;
    var u = Ew();
    (u || !u && t === "fixed") && (l = r.offsetLeft, c = r.offsetTop);
  }
  return {
    width: i,
    height: a,
    x: l + cm(e),
    y: c
  };
}
function nN(e) {
  var t, n = ri(e), o = lm(e), r = (t = e.ownerDocument) == null ? void 0 : t.body, i = Ii(n.scrollWidth, n.clientWidth, r ? r.scrollWidth : 0, r ? r.clientWidth : 0), a = Ii(n.scrollHeight, n.clientHeight, r ? r.scrollHeight : 0, r ? r.clientHeight : 0), l = -o.scrollLeft + cm(e), c = -o.scrollTop;
  return Or(r || n).direction === "rtl" && (l += Ii(n.clientWidth, r ? r.clientWidth : 0) - i), {
    width: i,
    height: a,
    x: l,
    y: c
  };
}
function um(e) {
  var t = Or(e), n = t.overflow, o = t.overflowX, r = t.overflowY;
  return /auto|scroll|overlay|hidden/.test(n + r + o);
}
function Rw(e) {
  return ["html", "body", "#document"].indexOf(ur(e)) >= 0 ? e.ownerDocument.body : Io(e) && um(e) ? e : Rw(rd(e));
}
function Pa(e, t) {
  var n;
  t === void 0 && (t = []);
  var o = Rw(e), r = o === ((n = e.ownerDocument) == null ? void 0 : n.body), i = po(o), a = r ? [i].concat(i.visualViewport || [], um(o) ? o : []) : o, l = t.concat(a);
  return r ? l : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    l.concat(Pa(rd(a)))
  );
}
function _p(e) {
  return Object.assign({}, e, {
    left: e.x,
    top: e.y,
    right: e.x + e.width,
    bottom: e.y + e.height
  });
}
function oN(e, t) {
  var n = $s(e, !1, t === "fixed");
  return n.top = n.top + e.clientTop, n.left = n.left + e.clientLeft, n.bottom = n.top + e.clientHeight, n.right = n.left + e.clientWidth, n.width = e.clientWidth, n.height = e.clientHeight, n.x = n.left, n.y = n.top, n;
}
function Ay(e, t, n) {
  return t === Sw ? _p(tN(e, n)) : Ni(t) ? oN(t, n) : _p(nN(ri(e)));
}
function rN(e) {
  var t = Pa(rd(e)), n = ["absolute", "fixed"].indexOf(Or(e).position) >= 0, o = n && Io(e) ? Ol(e) : e;
  return Ni(o) ? t.filter(function(r) {
    return Ni(r) && Cw(r, o) && ur(r) !== "body";
  }) : [];
}
function iN(e, t, n, o) {
  var r = t === "clippingParents" ? rN(e) : [].concat(t), i = [].concat(r, [n]), a = i[0], l = i.reduce(function(c, u) {
    var f = Ay(e, u, o);
    return c.top = Ii(f.top, c.top), c.right = ru(f.right, c.right), c.bottom = ru(f.bottom, c.bottom), c.left = Ii(f.left, c.left), c;
  }, Ay(e, a, o));
  return l.width = l.right - l.left, l.height = l.bottom - l.top, l.x = l.left, l.y = l.top, l;
}
function kw(e) {
  var t = e.reference, n = e.element, o = e.placement, r = o ? sr(o) : null, i = o ? Is(o) : null, a = t.x + t.width / 2 - n.width / 2, l = t.y + t.height / 2 - n.height / 2, c;
  switch (r) {
    case Yn:
      c = {
        x: a,
        y: t.y - n.height
      };
      break;
    case Ro:
      c = {
        x: a,
        y: t.y + t.height
      };
      break;
    case ko:
      c = {
        x: t.x + t.width,
        y: l
      };
      break;
    case Gn:
      c = {
        x: t.x - n.width,
        y: l
      };
      break;
    default:
      c = {
        x: t.x,
        y: t.y
      };
  }
  var u = r ? am(r) : null;
  if (u != null) {
    var f = u === "y" ? "height" : "width";
    switch (i) {
      case Cs:
        c[u] = c[u] - (t[f] / 2 - n[f] / 2);
        break;
      case Za:
        c[u] = c[u] + (t[f] / 2 - n[f] / 2);
        break;
    }
  }
  return c;
}
function Qa(e, t) {
  t === void 0 && (t = {});
  var n = t, o = n.placement, r = o === void 0 ? e.placement : o, i = n.strategy, a = i === void 0 ? e.strategy : i, l = n.boundary, c = l === void 0 ? CP : l, u = n.rootBoundary, f = u === void 0 ? Sw : u, d = n.elementContext, p = d === void 0 ? ra : d, h = n.altBoundary, g = h === void 0 ? !1 : h, m = n.padding, y = m === void 0 ? 0 : m, x = $w(typeof y != "number" ? y : Iw(y, Cl)), T = p === ra ? OP : ra, b = e.rects.popper, w = e.elements[g ? T : p], S = iN(Ni(w) ? w : w.contextElement || ri(e.elements.popper), c, f, a), E = $s(e.elements.reference), C = kw({
    reference: E,
    element: b,
    placement: r
  }), R = _p(Object.assign({}, b, C)), M = p === ra ? R : E, v = {
    top: S.top - M.top + x.top,
    bottom: M.bottom - S.bottom + x.bottom,
    left: S.left - M.left + x.left,
    right: M.right - S.right + x.right
  }, I = e.modifiersData.offset;
  if (p === ra && I) {
    var k = I[r];
    Object.keys(v).forEach(function(A) {
      var O = [ko, Ro].indexOf(A) >= 0 ? 1 : -1, _ = [Yn, Ro].indexOf(A) >= 0 ? "y" : "x";
      v[A] += k[_] * O;
    });
  }
  return v;
}
function sN(e, t) {
  t === void 0 && (t = {});
  var n = t, o = n.placement, r = n.boundary, i = n.rootBoundary, a = n.padding, l = n.flipVariations, c = n.allowedAutoPlacements, u = c === void 0 ? Tw : c, f = Is(o), d = f ? l ? Py : Py.filter(function(g) {
    return Is(g) === f;
  }) : Cl, p = d.filter(function(g) {
    return u.indexOf(g) >= 0;
  });
  p.length === 0 && (p = d);
  var h = p.reduce(function(g, m) {
    return g[m] = Qa(e, {
      placement: m,
      boundary: r,
      rootBoundary: i,
      padding: a
    })[sr(m)], g;
  }, {});
  return Object.keys(h).sort(function(g, m) {
    return h[g] - h[m];
  });
}
function aN(e) {
  if (sr(e) === rm)
    return [];
  var t = Bc(e);
  return [_y(e), t, _y(t)];
}
function lN(e) {
  var t = e.state, n = e.options, o = e.name;
  if (!t.modifiersData[o]._skip) {
    for (var r = n.mainAxis, i = r === void 0 ? !0 : r, a = n.altAxis, l = a === void 0 ? !0 : a, c = n.fallbackPlacements, u = n.padding, f = n.boundary, d = n.rootBoundary, p = n.altBoundary, h = n.flipVariations, g = h === void 0 ? !0 : h, m = n.allowedAutoPlacements, y = t.options.placement, x = sr(y), T = x === y, b = c || (T || !g ? [Bc(y)] : aN(y)), w = [y].concat(b).reduce(function(Y, K) {
      return Y.concat(sr(K) === rm ? sN(t, {
        placement: K,
        boundary: f,
        rootBoundary: d,
        padding: u,
        flipVariations: g,
        allowedAutoPlacements: m
      }) : K);
    }, []), S = t.rects.reference, E = t.rects.popper, C = /* @__PURE__ */ new Map(), R = !0, M = w[0], v = 0; v < w.length; v++) {
      var I = w[v], k = sr(I), A = Is(I) === Cs, O = [Yn, Ro].indexOf(k) >= 0, _ = O ? "width" : "height", N = Qa(t, {
        placement: I,
        boundary: f,
        rootBoundary: d,
        altBoundary: p,
        padding: u
      }), L = O ? A ? ko : Gn : A ? Ro : Yn;
      S[_] > E[_] && (L = Bc(L));
      var F = Bc(L), D = [];
      if (i && D.push(N[k] <= 0), l && D.push(N[L] <= 0, N[F] <= 0), D.every(function(Y) {
        return Y;
      })) {
        M = I, R = !1;
        break;
      }
      C.set(I, D);
    }
    if (R)
      for (var B = g ? 3 : 1, z = function(K) {
        var te = w.find(function(ne) {
          var W = C.get(ne);
          if (W)
            return W.slice(0, K).every(function(ee) {
              return ee;
            });
        });
        if (te)
          return M = te, "break";
      }, U = B; U > 0; U--) {
        var q = z(U);
        if (q === "break") break;
      }
    t.placement !== M && (t.modifiersData[o]._skip = !0, t.placement = M, t.reset = !0);
  }
}
const cN = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: lN,
  requiresIfExists: ["offset"],
  data: {
    _skip: !1
  }
};
function Dy(e, t, n) {
  return n === void 0 && (n = {
    x: 0,
    y: 0
  }), {
    top: e.top - t.height - n.y,
    right: e.right - t.width + n.x,
    bottom: e.bottom - t.height + n.y,
    left: e.left - t.width - n.x
  };
}
function Ly(e) {
  return [Yn, ko, Ro, Gn].some(function(t) {
    return e[t] >= 0;
  });
}
function uN(e) {
  var t = e.state, n = e.name, o = t.rects.reference, r = t.rects.popper, i = t.modifiersData.preventOverflow, a = Qa(t, {
    elementContext: "reference"
  }), l = Qa(t, {
    altBoundary: !0
  }), c = Dy(a, o), u = Dy(l, r, i), f = Ly(c), d = Ly(u);
  t.modifiersData[n] = {
    referenceClippingOffsets: c,
    popperEscapeOffsets: u,
    isReferenceHidden: f,
    hasPopperEscaped: d
  }, t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-reference-hidden": f,
    "data-popper-escaped": d
  });
}
const dN = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: uN
};
function fN(e, t, n) {
  var o = sr(e), r = [Gn, Yn].indexOf(o) >= 0 ? -1 : 1, i = typeof n == "function" ? n(Object.assign({}, t, {
    placement: e
  })) : n, a = i[0], l = i[1];
  return a = a || 0, l = (l || 0) * r, [Gn, ko].indexOf(o) >= 0 ? {
    x: l,
    y: a
  } : {
    x: a,
    y: l
  };
}
function pN(e) {
  var t = e.state, n = e.options, o = e.name, r = n.offset, i = r === void 0 ? [0, 0] : r, a = Tw.reduce(function(f, d) {
    return f[d] = fN(d, t.rects, i), f;
  }, {}), l = a[t.placement], c = l.x, u = l.y;
  t.modifiersData.popperOffsets != null && (t.modifiersData.popperOffsets.x += c, t.modifiersData.popperOffsets.y += u), t.modifiersData[o] = a;
}
const hN = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: pN
};
function mN(e) {
  var t = e.state, n = e.name;
  t.modifiersData[n] = kw({
    reference: t.rects.reference,
    element: t.rects.popper,
    placement: t.placement
  });
}
const gN = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: mN,
  data: {}
};
function yN(e) {
  return e === "x" ? "y" : "x";
}
function bN(e) {
  var t = e.state, n = e.options, o = e.name, r = n.mainAxis, i = r === void 0 ? !0 : r, a = n.altAxis, l = a === void 0 ? !1 : a, c = n.boundary, u = n.rootBoundary, f = n.altBoundary, d = n.padding, p = n.tether, h = p === void 0 ? !0 : p, g = n.tetherOffset, m = g === void 0 ? 0 : g, y = Qa(t, {
    boundary: c,
    rootBoundary: u,
    padding: d,
    altBoundary: f
  }), x = sr(t.placement), T = Is(t.placement), b = !T, w = am(x), S = yN(w), E = t.modifiersData.popperOffsets, C = t.rects.reference, R = t.rects.popper, M = typeof m == "function" ? m(Object.assign({}, t.rects, {
    placement: t.placement
  })) : m, v = typeof M == "number" ? {
    mainAxis: M,
    altAxis: M
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, M), I = t.modifiersData.offset ? t.modifiersData.offset[t.placement] : null, k = {
    x: 0,
    y: 0
  };
  if (E) {
    if (i) {
      var A, O = w === "y" ? Yn : Gn, _ = w === "y" ? Ro : ko, N = w === "y" ? "height" : "width", L = E[w], F = L + y[O], D = L - y[_], B = h ? -R[N] / 2 : 0, z = T === Cs ? C[N] : R[N], U = T === Cs ? -R[N] : -C[N], q = t.elements.arrow, Y = h && q ? sm(q) : {
        width: 0,
        height: 0
      }, K = t.modifiersData["arrow#persistent"] ? t.modifiersData["arrow#persistent"].padding : Ow(), te = K[O], ne = K[_], W = ka(0, C[N], Y[N]), ee = b ? C[N] / 2 - B - W - te - v.mainAxis : z - W - te - v.mainAxis, G = b ? -C[N] / 2 + B + W + ne + v.mainAxis : U + W + ne + v.mainAxis, re = t.elements.arrow && Ol(t.elements.arrow), V = re ? w === "y" ? re.clientTop || 0 : re.clientLeft || 0 : 0, de = (A = I == null ? void 0 : I[w]) != null ? A : 0, ue = L + ee - de - V, xe = L + G - de, Ae = ka(h ? ru(F, ue) : F, L, h ? Ii(D, xe) : D);
      E[w] = Ae, k[w] = Ae - L;
    }
    if (l) {
      var we, De = w === "x" ? Yn : Gn, Ce = w === "x" ? Ro : ko, Be = E[S], Me = S === "y" ? "height" : "width", j = Be + y[De], J = Be - y[Ce], ie = [Yn, Gn].indexOf(x) !== -1, Q = (we = I == null ? void 0 : I[S]) != null ? we : 0, H = ie ? j : Be - C[Me] - R[Me] - Q + v.altAxis, X = ie ? Be + C[Me] + R[Me] - Q - v.altAxis : J, se = h && ie ? VP(H, Be, X) : ka(h ? H : j, Be, h ? X : J);
      E[S] = se, k[S] = se - Be;
    }
    t.modifiersData[o] = k;
  }
}
const vN = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: bN,
  requiresIfExists: ["offset"]
};
function xN(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function wN(e) {
  return e === po(e) || !Io(e) ? lm(e) : xN(e);
}
function SN(e) {
  var t = e.getBoundingClientRect(), n = Os(t.width) / e.offsetWidth || 1, o = Os(t.height) / e.offsetHeight || 1;
  return n !== 1 || o !== 1;
}
function TN(e, t, n) {
  n === void 0 && (n = !1);
  var o = Io(t), r = Io(t) && SN(t), i = ri(t), a = $s(e, r, n), l = {
    scrollLeft: 0,
    scrollTop: 0
  }, c = {
    x: 0,
    y: 0
  };
  return (o || !o && !n) && ((ur(t) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  um(i)) && (l = wN(t)), Io(t) ? (c = $s(t, !0), c.x += t.clientLeft, c.y += t.clientTop) : i && (c.x = cm(i))), {
    x: a.left + l.scrollLeft - c.x,
    y: a.top + l.scrollTop - c.y,
    width: a.width,
    height: a.height
  };
}
function EN(e) {
  var t = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), o = [];
  e.forEach(function(i) {
    t.set(i.name, i);
  });
  function r(i) {
    n.add(i.name);
    var a = [].concat(i.requires || [], i.requiresIfExists || []);
    a.forEach(function(l) {
      if (!n.has(l)) {
        var c = t.get(l);
        c && r(c);
      }
    }), o.push(i);
  }
  return e.forEach(function(i) {
    n.has(i.name) || r(i);
  }), o;
}
function CN(e) {
  var t = EN(e);
  return DP.reduce(function(n, o) {
    return n.concat(t.filter(function(r) {
      return r.phase === o;
    }));
  }, []);
}
function ON(e) {
  var t;
  return function() {
    return t || (t = new Promise(function(n) {
      Promise.resolve().then(function() {
        t = void 0, n(e());
      });
    })), t;
  };
}
function $N(e) {
  var t = e.reduce(function(n, o) {
    var r = n[o.name];
    return n[o.name] = r ? Object.assign({}, r, o, {
      options: Object.assign({}, r.options, o.options),
      data: Object.assign({}, r.data, o.data)
    }) : o, n;
  }, {});
  return Object.keys(t).map(function(n) {
    return t[n];
  });
}
var By = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function Fy() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return !t.some(function(o) {
    return !(o && typeof o.getBoundingClientRect == "function");
  });
}
function IN(e) {
  e === void 0 && (e = {});
  var t = e, n = t.defaultModifiers, o = n === void 0 ? [] : n, r = t.defaultOptions, i = r === void 0 ? By : r;
  return function(l, c, u) {
    u === void 0 && (u = i);
    var f = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, By, i),
      modifiersData: {},
      elements: {
        reference: l,
        popper: c
      },
      attributes: {},
      styles: {}
    }, d = [], p = !1, h = {
      state: f,
      setOptions: function(x) {
        var T = typeof x == "function" ? x(f.options) : x;
        m(), f.options = Object.assign({}, i, f.options, T), f.scrollParents = {
          reference: Ni(l) ? Pa(l) : l.contextElement ? Pa(l.contextElement) : [],
          popper: Pa(c)
        };
        var b = CN($N([].concat(o, f.options.modifiers)));
        return f.orderedModifiers = b.filter(function(w) {
          return w.enabled;
        }), g(), h.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function() {
        if (!p) {
          var x = f.elements, T = x.reference, b = x.popper;
          if (Fy(T, b)) {
            f.rects = {
              reference: TN(T, Ol(b), f.options.strategy === "fixed"),
              popper: sm(b)
            }, f.reset = !1, f.placement = f.options.placement, f.orderedModifiers.forEach(function(v) {
              return f.modifiersData[v.name] = Object.assign({}, v.data);
            });
            for (var w = 0; w < f.orderedModifiers.length; w++) {
              if (f.reset === !0) {
                f.reset = !1, w = -1;
                continue;
              }
              var S = f.orderedModifiers[w], E = S.fn, C = S.options, R = C === void 0 ? {} : C, M = S.name;
              typeof E == "function" && (f = E({
                state: f,
                options: R,
                name: M,
                instance: h
              }) || f);
            }
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: ON(function() {
        return new Promise(function(y) {
          h.forceUpdate(), y(f);
        });
      }),
      destroy: function() {
        m(), p = !0;
      }
    };
    if (!Fy(l, c))
      return h;
    h.setOptions(u).then(function(y) {
      !p && u.onFirstUpdate && u.onFirstUpdate(y);
    });
    function g() {
      f.orderedModifiers.forEach(function(y) {
        var x = y.name, T = y.options, b = T === void 0 ? {} : T, w = y.effect;
        if (typeof w == "function") {
          var S = w({
            state: f,
            name: x,
            instance: h,
            options: b
          }), E = function() {
          };
          d.push(S || E);
        }
      });
    }
    function m() {
      d.forEach(function(y) {
        return y();
      }), d = [];
    }
    return h;
  };
}
var RN = [QP, gN, XP, FP, hN, cN, vN, qP, dN], kN = /* @__PURE__ */ IN({
  defaultModifiers: RN
});
function PN(e) {
  return typeof e == "function" ? e() : e;
}
const Rs = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const {
    children: o,
    container: r,
    disablePortal: i = !1
  } = t, [a, l] = P.useState(null), c = un(/* @__PURE__ */ P.isValidElement(o) ? ni(o) : null, n);
  if (zo(() => {
    i || l(PN(r) || document.body);
  }, [r, i]), zo(() => {
    if (a && !i)
      return Qc(n, a), () => {
        Qc(n, null);
      };
  }, [n, a, i]), i) {
    if (/* @__PURE__ */ P.isValidElement(o)) {
      const u = {
        ref: c
      };
      return /* @__PURE__ */ P.cloneElement(o, u);
    }
    return o;
  }
  return a && /* @__PURE__ */ ex.createPortal(o, a);
});
process.env.NODE_ENV !== "production" && (Rs.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: s.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: s.oneOfType([cr, s.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: s.bool
});
process.env.NODE_ENV !== "production" && (Rs.propTypes = Tl(Rs.propTypes));
function NN(e) {
  return tt("MuiPopper", e);
}
it("MuiPopper", ["root"]);
function MN(e, t) {
  if (t === "ltr")
    return e;
  switch (e) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return e;
  }
}
function iu(e) {
  return typeof e == "function" ? e() : e;
}
function id(e) {
  return e.nodeType !== void 0;
}
function _N(e) {
  return !id(e);
}
const AN = (e) => {
  const {
    classes: t
  } = e;
  return rt({
    root: ["root"]
  }, NN, t);
}, DN = {}, LN = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const {
    anchorEl: o,
    children: r,
    direction: i,
    disablePortal: a,
    modifiers: l,
    open: c,
    placement: u,
    popperOptions: f,
    popperRef: d,
    slotProps: p = {},
    slots: h = {},
    TransitionProps: g,
    // @ts-ignore internal logic
    ownerState: m,
    // prevent from spreading to DOM, it can come from the parent component e.g. Select.
    ...y
  } = t, x = P.useRef(null), T = un(x, n), b = P.useRef(null), w = un(b, d), S = P.useRef(w);
  zo(() => {
    S.current = w;
  }, [w]), P.useImperativeHandle(d, () => b.current, []);
  const E = MN(u, i), [C, R] = P.useState(E), [M, v] = P.useState(iu(o));
  P.useEffect(() => {
    b.current && b.current.forceUpdate();
  }), P.useEffect(() => {
    o && v(iu(o));
  }, [o]), zo(() => {
    if (!M || !c)
      return;
    const _ = (F) => {
      R(F.placement);
    };
    if (process.env.NODE_ENV !== "production" && M && id(M) && M.nodeType === 1) {
      const F = M.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && F.top === 0 && F.left === 0 && F.right === 0 && F.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    let N = [{
      name: "preventOverflow",
      options: {
        altBoundary: a
      }
    }, {
      name: "flip",
      options: {
        altBoundary: a
      }
    }, {
      name: "onUpdate",
      enabled: !0,
      phase: "afterWrite",
      fn: ({
        state: F
      }) => {
        _(F);
      }
    }];
    l != null && (N = N.concat(l)), f && f.modifiers != null && (N = N.concat(f.modifiers));
    const L = kN(M, x.current, {
      placement: E,
      ...f,
      modifiers: N
    });
    return S.current(L), () => {
      L.destroy(), S.current(null);
    };
  }, [M, a, l, c, f, E]);
  const I = {
    placement: C
  };
  g !== null && (I.TransitionProps = g);
  const k = AN(t), A = h.root ?? "div", O = eu({
    elementType: A,
    externalSlotProps: p.root,
    externalForwardedProps: y,
    additionalProps: {
      role: "tooltip",
      ref: T
    },
    ownerState: t,
    className: k.root
  });
  return /* @__PURE__ */ $(A, {
    ...O,
    children: typeof r == "function" ? r(I) : r
  });
}), Pw = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const {
    anchorEl: o,
    children: r,
    container: i,
    direction: a = "ltr",
    disablePortal: l = !1,
    keepMounted: c = !1,
    modifiers: u,
    open: f,
    placement: d = "bottom",
    popperOptions: p = DN,
    popperRef: h,
    style: g,
    transition: m = !1,
    slotProps: y = {},
    slots: x = {},
    ...T
  } = t, [b, w] = P.useState(!0), S = () => {
    w(!1);
  }, E = () => {
    w(!0);
  };
  if (!c && !f && (!m || b))
    return null;
  let C;
  if (i)
    C = i;
  else if (o) {
    const v = iu(o);
    C = v && id(v) ? _n(v).body : _n(null).body;
  }
  const R = !f && c && (!m || b) ? "none" : void 0, M = m ? {
    in: f,
    onEnter: S,
    onExited: E
  } : void 0;
  return /* @__PURE__ */ $(Rs, {
    disablePortal: l,
    container: C,
    children: /* @__PURE__ */ $(LN, {
      anchorEl: o,
      direction: a,
      disablePortal: l,
      modifiers: u,
      ref: n,
      open: m ? !b : f,
      placement: d,
      popperOptions: p,
      popperRef: h,
      slotProps: y,
      slots: x,
      ...T,
      style: {
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: "fixed",
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display: R,
        ...g
      },
      TransitionProps: M,
      children: r
    })
  });
});
process.env.NODE_ENV !== "production" && (Pw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: jo(s.oneOfType([cr, s.object, s.func]), (e) => {
    if (e.open) {
      const t = iu(e.anchorEl);
      if (t && id(t) && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || _N(t) && t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join(`
`));
    }
    return null;
  }),
  /**
   * Popper render function or node.
   */
  children: s.oneOfType([s.node, s.func]),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: s.oneOfType([cr, s.func]),
  /**
   * Direction of the text.
   * @default 'ltr'
   */
  direction: s.oneOf(["ltr", "rtl"]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: s.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: s.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: s.arrayOf(s.shape({
    data: s.object,
    effect: s.func,
    enabled: s.bool,
    fn: s.func,
    name: s.any,
    options: s.object,
    phase: s.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: s.arrayOf(s.string),
    requiresIfExists: s.arrayOf(s.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: s.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: s.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: s.shape({
    modifiers: s.array,
    onFirstUpdate: s.func,
    placement: s.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: s.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Qn,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: s.shape({
    root: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: s.shape({
    root: s.elementType
  }),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: s.bool
});
const BN = Ee(Pw, {
  name: "MuiPopper",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), Ys = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = El(), r = lt({
    props: t,
    name: "MuiPopper"
  }), {
    anchorEl: i,
    component: a,
    components: l,
    componentsProps: c,
    container: u,
    disablePortal: f,
    keepMounted: d,
    modifiers: p,
    open: h,
    placement: g,
    popperOptions: m,
    popperRef: y,
    transition: x,
    slots: T,
    slotProps: b,
    ...w
  } = r, S = (T == null ? void 0 : T.root) ?? (l == null ? void 0 : l.Root), E = {
    anchorEl: i,
    container: u,
    disablePortal: f,
    keepMounted: d,
    modifiers: p,
    open: h,
    placement: g,
    popperOptions: m,
    popperRef: y,
    transition: x,
    ...w
  };
  return /* @__PURE__ */ $(BN, {
    as: a,
    direction: o ? "rtl" : "ltr",
    slots: {
      root: S
    },
    slotProps: b ?? c,
    ...E,
    ref: n
  });
});
process.env.NODE_ENV !== "production" && (Ys.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: s.oneOfType([cr, s.object, s.func]),
  /**
   * Popper render function or node.
   */
  children: s.oneOfType([s.node, s.func]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  components: s.shape({
    Root: s.elementType
  }),
  /**
   * The props used for each slot inside the Popper.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  componentsProps: s.shape({
    root: s.oneOfType([s.func, s.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: s.oneOfType([cr, s.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: s.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: s.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: s.arrayOf(s.shape({
    data: s.object,
    effect: s.func,
    enabled: s.bool,
    fn: s.func,
    name: s.any,
    options: s.object,
    phase: s.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: s.arrayOf(s.string),
    requiresIfExists: s.arrayOf(s.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: s.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: s.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: s.shape({
    modifiers: s.array,
    onFirstUpdate: s.func,
    placement: s.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: s.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Qn,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: s.shape({
    root: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: s.shape({
    root: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: s.bool
});
function FN(e) {
  return tt("MuiTooltip", e);
}
const tn = it("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]);
function zN(e) {
  return Math.round(e * 1e5) / 1e5;
}
const jN = (e) => {
  const {
    classes: t,
    disableInteractive: n,
    arrow: o,
    touch: r,
    placement: i
  } = e, a = {
    popper: ["popper", !n && "popperInteractive", o && "popperArrow"],
    tooltip: ["tooltip", o && "tooltipArrow", r && "touch", `tooltipPlacement${fe(i.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return rt(a, FN, t);
}, VN = Ee(Ys, {
  name: "MuiTooltip",
  slot: "Popper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.popper, !n.disableInteractive && t.popperInteractive, n.arrow && t.popperArrow, !n.open && t.popperClose];
  }
})(qe(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.tooltip,
  pointerEvents: "none",
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableInteractive,
    style: {
      pointerEvents: "auto"
    }
  }, {
    props: ({
      open: t
    }) => !t,
    style: {
      pointerEvents: "none"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      [`&[data-popper-placement*="bottom"] .${tn.arrow}`]: {
        top: 0,
        marginTop: "-0.71em",
        "&::before": {
          transformOrigin: "0 100%"
        }
      },
      [`&[data-popper-placement*="top"] .${tn.arrow}`]: {
        bottom: 0,
        marginBottom: "-0.71em",
        "&::before": {
          transformOrigin: "100% 0"
        }
      },
      [`&[data-popper-placement*="right"] .${tn.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "100% 100%"
        }
      },
      [`&[data-popper-placement*="left"] .${tn.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "0 0"
        }
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${tn.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${tn.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${tn.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${tn.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }]
}))), HN = Ee("div", {
  name: "MuiTooltip",
  slot: "Tooltip",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.tooltip, n.touch && t.touch, n.arrow && t.tooltipArrow, t[`tooltipPlacement${fe(n.placement.split("-")[0])}`]];
  }
})(qe(({
  theme: e
}) => ({
  backgroundColor: e.vars ? e.vars.palette.Tooltip.bg : bt(e.palette.grey[700], 0.92),
  borderRadius: (e.vars || e).shape.borderRadius,
  color: (e.vars || e).palette.common.white,
  fontFamily: e.typography.fontFamily,
  padding: "4px 8px",
  fontSize: e.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: "break-word",
  fontWeight: e.typography.fontWeightMedium,
  [`.${tn.popper}[data-popper-placement*="left"] &`]: {
    transformOrigin: "right center"
  },
  [`.${tn.popper}[data-popper-placement*="right"] &`]: {
    transformOrigin: "left center"
  },
  [`.${tn.popper}[data-popper-placement*="top"] &`]: {
    transformOrigin: "center bottom",
    marginBottom: "14px"
  },
  [`.${tn.popper}[data-popper-placement*="bottom"] &`]: {
    transformOrigin: "center top",
    marginTop: "14px"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      position: "relative",
      margin: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      padding: "8px 16px",
      fontSize: e.typography.pxToRem(14),
      lineHeight: `${zN(16 / 14)}em`,
      fontWeight: e.typography.fontWeightRegular
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl,
    style: {
      [`.${tn.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "14px"
      },
      [`.${tn.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl && t.touch,
    style: {
      [`.${tn.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "24px"
      },
      [`.${tn.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl,
    style: {
      [`.${tn.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "14px"
      },
      [`.${tn.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl && t.touch,
    style: {
      [`.${tn.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "24px"
      },
      [`.${tn.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${tn.popper}[data-popper-placement*="top"] &`]: {
        marginBottom: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${tn.popper}[data-popper-placement*="bottom"] &`]: {
        marginTop: "24px"
      }
    }
  }]
}))), WN = Ee("span", {
  name: "MuiTooltip",
  slot: "Arrow",
  overridesResolver: (e, t) => t.arrow
})(qe(({
  theme: e
}) => ({
  overflow: "hidden",
  position: "absolute",
  width: "1em",
  height: "0.71em",
  boxSizing: "border-box",
  color: e.vars ? e.vars.palette.Tooltip.bg : bt(e.palette.grey[700], 0.9),
  "&::before": {
    content: '""',
    margin: "auto",
    display: "block",
    width: "100%",
    height: "100%",
    backgroundColor: "currentColor",
    transform: "rotate(45deg)"
  }
})));
let sc = !1;
const zy = new Lx();
let ia = {
  x: 0,
  y: 0
};
function ac(e, t) {
  return (n, ...o) => {
    t && t(n, ...o), e(n, ...o);
  };
}
const dm = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiTooltip"
  }), {
    arrow: r = !1,
    children: i,
    classes: a,
    components: l = {},
    componentsProps: c = {},
    describeChild: u = !1,
    disableFocusListener: f = !1,
    disableHoverListener: d = !1,
    disableInteractive: p = !1,
    disableTouchListener: h = !1,
    enterDelay: g = 100,
    enterNextDelay: m = 0,
    enterTouchDelay: y = 700,
    followCursor: x = !1,
    id: T,
    leaveDelay: b = 0,
    leaveTouchDelay: w = 1500,
    onClose: S,
    onOpen: E,
    open: C,
    placement: R = "bottom",
    PopperComponent: M,
    PopperProps: v = {},
    slotProps: I = {},
    slots: k = {},
    title: A,
    TransitionComponent: O,
    TransitionProps: _,
    ...N
  } = o, L = /* @__PURE__ */ P.isValidElement(i) ? i : /* @__PURE__ */ $("span", {
    children: i
  }), F = Pr(), D = El(), [B, z] = P.useState(), [U, q] = P.useState(null), Y = P.useRef(!1), K = p || x, te = us(), ne = us(), W = us(), ee = us(), [G, re] = $i({
    controlled: C,
    default: !1,
    name: "Tooltip",
    state: "open"
  });
  let V = G;
  if (process.env.NODE_ENV !== "production") {
    const {
      current: Le
    } = P.useRef(C !== void 0);
    P.useEffect(() => {
      B && B.disabled && !Le && A !== "" && B.tagName.toLowerCase() === "button" && console.warn(["MUI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join(`
`));
    }, [A, B, Le]);
  }
  const de = Bi(T), ue = P.useRef(), xe = Un(() => {
    ue.current !== void 0 && (document.body.style.WebkitUserSelect = ue.current, ue.current = void 0), ee.clear();
  });
  P.useEffect(() => xe, [xe]);
  const Ae = (Le) => {
    zy.clear(), sc = !0, re(!0), E && !V && E(Le);
  }, we = Un(
    /**
     * @param {React.SyntheticEvent | Event} event
     */
    (Le) => {
      zy.start(800 + b, () => {
        sc = !1;
      }), re(!1), S && V && S(Le), te.start(F.transitions.duration.shortest, () => {
        Y.current = !1;
      });
    }
  ), De = (Le) => {
    Y.current && Le.type !== "touchstart" || (B && B.removeAttribute("title"), ne.clear(), W.clear(), g || sc && m ? ne.start(sc ? m : g, () => {
      Ae(Le);
    }) : Ae(Le));
  }, Ce = (Le) => {
    ne.clear(), W.start(b, () => {
      we(Le);
    });
  }, [, Be] = P.useState(!1), Me = (Le) => {
    Jc(Le.target) || (Be(!1), Ce(Le));
  }, j = (Le) => {
    B || z(Le.currentTarget), Jc(Le.target) && (Be(!0), De(Le));
  }, J = (Le) => {
    Y.current = !0;
    const Bt = L.props;
    Bt.onTouchStart && Bt.onTouchStart(Le);
  }, ie = (Le) => {
    J(Le), W.clear(), te.clear(), xe(), ue.current = document.body.style.WebkitUserSelect, document.body.style.WebkitUserSelect = "none", ee.start(y, () => {
      document.body.style.WebkitUserSelect = ue.current, De(Le);
    });
  }, Q = (Le) => {
    L.props.onTouchEnd && L.props.onTouchEnd(Le), xe(), W.start(w, () => {
      we(Le);
    });
  };
  P.useEffect(() => {
    if (!V)
      return;
    function Le(Bt) {
      Bt.key === "Escape" && we(Bt);
    }
    return document.addEventListener("keydown", Le), () => {
      document.removeEventListener("keydown", Le);
    };
  }, [we, V]);
  const H = un(ni(L), z, n);
  !A && A !== 0 && (V = !1);
  const X = P.useRef(), se = (Le) => {
    const Bt = L.props;
    Bt.onMouseMove && Bt.onMouseMove(Le), ia = {
      x: Le.clientX,
      y: Le.clientY
    }, X.current && X.current.update();
  }, ye = {}, he = typeof A == "string";
  u ? (ye.title = !V && he && !d ? A : null, ye["aria-describedby"] = V ? de : null) : (ye["aria-label"] = he ? A : null, ye["aria-labelledby"] = V && !he ? de : null);
  const le = {
    ...ye,
    ...N,
    ...L.props,
    className: Re(N.className, L.props.className),
    onTouchStart: J,
    ref: H,
    ...x ? {
      onMouseMove: se
    } : {}
  };
  process.env.NODE_ENV !== "production" && (le["data-mui-internal-clone-element"] = !0, P.useEffect(() => {
    B && !B.getAttribute("data-mui-internal-clone-element") && console.error(["MUI: The `children` component of the Tooltip is not forwarding its props correctly.", "Please make sure that props are spread on the same element that the ref is applied to."].join(`
`));
  }, [B]));
  const ae = {};
  h || (le.onTouchStart = ie, le.onTouchEnd = Q), d || (le.onMouseOver = ac(De, le.onMouseOver), le.onMouseLeave = ac(Ce, le.onMouseLeave), K || (ae.onMouseOver = De, ae.onMouseLeave = Ce)), f || (le.onFocus = ac(j, le.onFocus), le.onBlur = ac(Me, le.onBlur), K || (ae.onFocus = j, ae.onBlur = Me)), process.env.NODE_ENV !== "production" && L.props.title && console.error(["MUI: You have provided a `title` prop to the child of <Tooltip />.", `Remove this title prop \`${L.props.title}\` or the Tooltip component.`].join(`
`));
  const ce = {
    ...o,
    isRtl: D,
    arrow: r,
    disableInteractive: K,
    placement: R,
    PopperComponentProp: M,
    touch: Y.current
  }, Se = typeof I.popper == "function" ? I.popper(ce) : I.popper, $e = P.useMemo(() => {
    var Bt, Lt;
    let Le = [{
      name: "arrow",
      enabled: !!U,
      options: {
        element: U,
        padding: 4
      }
    }];
    return (Bt = v.popperOptions) != null && Bt.modifiers && (Le = Le.concat(v.popperOptions.modifiers)), (Lt = Se == null ? void 0 : Se.popperOptions) != null && Lt.modifiers && (Le = Le.concat(Se.popperOptions.modifiers)), {
      ...v.popperOptions,
      ...Se == null ? void 0 : Se.popperOptions,
      modifiers: Le
    };
  }, [U, v.popperOptions, Se == null ? void 0 : Se.popperOptions]), oe = jN(ce), be = typeof I.transition == "function" ? I.transition(ce) : I.transition, Ne = {
    slots: {
      popper: l.Popper,
      transition: l.Transition ?? O,
      tooltip: l.Tooltip,
      arrow: l.Arrow,
      ...k
    },
    slotProps: {
      arrow: I.arrow ?? c.arrow,
      popper: {
        ...v,
        ...Se ?? c.popper
      },
      // resolvedPopperProps can be spread because it's already an object
      tooltip: I.tooltip ?? c.tooltip,
      transition: {
        ..._,
        ...be ?? c.transition
      }
    }
  }, [We, Ue] = ot("popper", {
    elementType: VN,
    externalForwardedProps: Ne,
    ownerState: ce,
    className: Re(oe.popper, v == null ? void 0 : v.className)
  }), [vt, ut] = ot("transition", {
    elementType: Xa,
    externalForwardedProps: Ne,
    ownerState: ce
  }), [Tt, je] = ot("tooltip", {
    elementType: HN,
    className: oe.tooltip,
    externalForwardedProps: Ne,
    ownerState: ce
  }), [ft, Et] = ot("arrow", {
    elementType: WN,
    className: oe.arrow,
    externalForwardedProps: Ne,
    ownerState: ce,
    ref: q
  });
  return /* @__PURE__ */ Te(P.Fragment, {
    children: [/* @__PURE__ */ P.cloneElement(L, le), /* @__PURE__ */ $(We, {
      as: M ?? Ys,
      placement: R,
      anchorEl: x ? {
        getBoundingClientRect: () => ({
          top: ia.y,
          left: ia.x,
          right: ia.x,
          bottom: ia.y,
          width: 0,
          height: 0
        })
      } : B,
      popperRef: X,
      open: B ? V : !1,
      id: de,
      transition: !0,
      ...ae,
      ...Ue,
      popperOptions: $e,
      children: ({
        TransitionProps: Le
      }) => /* @__PURE__ */ $(vt, {
        timeout: F.transitions.duration.shorter,
        ...Le,
        ...ut,
        children: /* @__PURE__ */ Te(Tt, {
          ...je,
          children: [A, r ? /* @__PURE__ */ $(ft, {
            ...Et
          }) : null]
        })
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (dm.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: s.bool,
  /**
   * Tooltip reference element.
   */
  children: ti.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: s.shape({
    Arrow: s.elementType,
    Popper: s.elementType,
    Tooltip: s.elementType,
    Transition: s.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: s.shape({
    arrow: s.object,
    popper: s.object,
    tooltip: s.object,
    transition: s.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: s.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: s.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: s.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: s.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: s.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: s.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: s.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: s.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: s.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: s.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: s.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: s.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: s.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: s.func,
  /**
   * If `true`, the component is shown.
   */
  open: s.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: s.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The component used for the popper.
   * @deprecated use the `slots.popper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PopperComponent: s.elementType,
  /**
   * Props applied to the [`Popper`](https://mui.com/material-ui/api/popper/) element.
   * @deprecated use the `slotProps.popper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PopperProps: s.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: s.shape({
    arrow: s.oneOfType([s.func, s.object]),
    popper: s.oneOfType([s.func, s.object]),
    tooltip: s.oneOfType([s.func, s.object]),
    transition: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: s.shape({
    arrow: s.elementType,
    popper: s.elementType,
    tooltip: s.elementType,
    transition: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: s.node,
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: s.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: s.object
});
function UN(e) {
  return tt("MuiTypography", e);
}
it("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]);
const qN = {
  primary: !0,
  secondary: !0,
  error: !0,
  info: !0,
  success: !0,
  warning: !0,
  textPrimary: !0,
  textSecondary: !0,
  textDisabled: !0
}, KN = jR(), YN = (e) => {
  const {
    align: t,
    gutterBottom: n,
    noWrap: o,
    paragraph: r,
    variant: i,
    classes: a
  } = e, l = {
    root: ["root", i, e.align !== "inherit" && `align${fe(t)}`, n && "gutterBottom", o && "noWrap", r && "paragraph"]
  };
  return rt(l, UN, a);
}, GN = Ee("span", {
  name: "MuiTypography",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.variant && t[n.variant], n.align !== "inherit" && t[`align${fe(n.align)}`], n.noWrap && t.noWrap, n.gutterBottom && t.gutterBottom, n.paragraph && t.paragraph];
  }
})(qe(({
  theme: e
}) => {
  var t;
  return {
    margin: 0,
    variants: [{
      props: {
        variant: "inherit"
      },
      style: {
        // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
        font: "inherit",
        lineHeight: "inherit",
        letterSpacing: "inherit"
      }
    }, ...Object.entries(e.typography).filter(([n, o]) => n !== "inherit" && o && typeof o == "object").map(([n, o]) => ({
      props: {
        variant: n
      },
      style: o
    })), ...Object.entries(e.palette).filter(Ut()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        color: (e.vars || e).palette[n].main
      }
    })), ...Object.entries(((t = e.palette) == null ? void 0 : t.text) || {}).filter(([, n]) => typeof n == "string").map(([n]) => ({
      props: {
        color: `text${fe(n)}`
      },
      style: {
        color: (e.vars || e).palette.text[n]
      }
    })), {
      props: ({
        ownerState: n
      }) => n.align !== "inherit",
      style: {
        textAlign: "var(--Typography-textAlign)"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.noWrap,
      style: {
        overflow: "hidden",
        textOverflow: "ellipsis",
        whiteSpace: "nowrap"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.gutterBottom,
      style: {
        marginBottom: "0.35em"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.paragraph,
      style: {
        marginBottom: 16
      }
    }]
  };
})), jy = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  inherit: "p"
}, Nw = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const {
    color: o,
    ...r
  } = lt({
    props: t,
    name: "MuiTypography"
  }), i = !qN[o], a = KN({
    ...r,
    ...i && {
      color: o
    }
  }), {
    align: l = "inherit",
    className: c,
    component: u,
    gutterBottom: f = !1,
    noWrap: d = !1,
    paragraph: p = !1,
    variant: h = "body1",
    variantMapping: g = jy,
    ...m
  } = a, y = {
    ...a,
    align: l,
    color: o,
    className: c,
    component: u,
    gutterBottom: f,
    noWrap: d,
    paragraph: p,
    variant: h,
    variantMapping: g
  }, x = u || (p ? "p" : g[h] || jy[h]) || "span", T = YN(y);
  return /* @__PURE__ */ $(GN, {
    as: x,
    ref: n,
    className: Re(T.root, c),
    ...m,
    ownerState: y,
    style: {
      ...l !== "inherit" && {
        "--Typography-textAlign": l
      },
      ...m.style
    }
  });
});
process.env.NODE_ENV !== "production" && (Nw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the component.
   * @default 'inherit'
   */
  align: s.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: s.oneOfType([s.oneOf(["primary", "secondary", "success", "error", "info", "warning", "textPrimary", "textSecondary", "textDisabled"]), s.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */
  gutterBottom: s.bool,
  /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */
  noWrap: s.bool,
  /**
   * If `true`, the element will be a paragraph element.
   * @default false
   * @deprecated Use the `component` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  paragraph: s.bool,
  /**
   * @ignore
   */
  style: s.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * Applies the theme typography styles.
   * @default 'body1'
   */
  variant: s.oneOfType([s.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), s.string]),
  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */
  variantMapping: s.object
});
function $l({
  isTitle: e = !1,
  isLabel: t = !1,
  titleLevel: n = "h6",
  textColor: o = "auto",
  bold: r = !1,
  ellipsis: i = !1
}) {
  return {
    textCommonStyles: Qe(
      () => ({
        typography: e ? n : t ? "caption" : "body1",
        fontWeight: e || t || r ? "bold" : "normal",
        color: (l) => o === "error" ? l.palette.error.main : o === "primary" ? l.palette.primary.main : o === "success" ? l.palette.success.main : o === "disabled" ? l.palette.action.disabled : "inherit",
        ...i ? {
          width: "100%",
          whiteSpace: "nowrap",
          overflow: "hidden",
          textOverflow: "ellipsis"
        } : {}
      }),
      [e, t, o, r, i]
    )
  };
}
const Cn = Ie(
  ({
    text: e,
    isLabel: t,
    isTitle: n = !1,
    titleLevel: o = "h6",
    ellipsis: r = !1,
    textColor: i = "auto",
    bold: a,
    sx: l,
    ...c
  }) => {
    const { textCommonStyles: u } = $l({
      isTitle: n,
      isLabel: t,
      titleLevel: o,
      textColor: i,
      bold: a,
      ellipsis: r
    }), f = Qe(
      () => /* @__PURE__ */ $(
        Nw,
        {
          className: "VenomousUI-Text",
          component: "div",
          variant: n ? o : t ? "caption" : "body1",
          noWrap: r,
          sx: {
            ...u,
            ...l
          },
          ...c,
          children: e
        }
      ),
      [e, n, o, r, l, c, u]
    );
    return r ? /* @__PURE__ */ $(ks, { tooltip: e, hide: !r, children: f }) : f;
  }
);
Cn.displayName = "Text";
const ks = Ie(({ children: e, tooltip: t, hide: n }) => /* @__PURE__ */ $(
  dm,
  {
    className: "VenomousUI-Tooltip",
    arrow: !0,
    title: /* @__PURE__ */ $(Cn, { isLabel: !0, bold: !0, text: t, textColor: "auto" }),
    disableHoverListener: n,
    children: e,
    slots: {
      transition: Pi
    },
    slotProps: {
      transition: { timeout: 400 }
    }
  }
));
ks.displayName = "Tooltip";
const Mw = Ie(
  ({
    children: e,
    position: t = "bottom-right",
    color: n = "error",
    icon: o,
    iconWidth: r = 16,
    iconTooltip: i = ""
  }) => {
    const { paperCommonStyles: a } = Fi(), { badgePlacementAttributes: l, badgeColor: c } = Xh({ position: t, color: n }), { vertical: u, horizontal: f, transform: d } = l;
    return /* @__PURE__ */ $(
      nd,
      {
        className: "VenomousUI-IconBadge",
        variant: "standard",
        invisible: !o,
        anchorOrigin: { vertical: u, horizontal: f },
        badgeContent: /* @__PURE__ */ $(ks, { tooltip: i, hide: !i, children: /* @__PURE__ */ $(Wo, { icon: o, width: r, color: "auto" }) }),
        sx: {
          ".MuiBadge-badge": {
            color: c,
            fontWeight: "bold",
            ...a,
            transform: d,
            p: 0,
            minHeight: Number(r) + 4,
            minWidth: Number(r) + 4,
            height: Number(r) + 4,
            width: Number(r) + 4,
            borderRadius: "50%",
            border: 1,
            borderColor: c
          }
        },
        children: e
      }
    );
  }
);
Mw.displayName = "IconBadge";
const XN = Ie(
  ({ children: e, position: t = "top-right", color: n = "primary", value: o = 0, max: r = 99, min: i = 0 }) => {
    const { badgePlacementAttributes: a, badgeColor: l } = Xh({ position: t, color: n }), { vertical: c, horizontal: u } = a, f = Qe(() => o > r ? `${r}+` : String(o), [o, r]), d = Qe(() => o > i, [o, i]);
    return /* @__PURE__ */ $(
      nd,
      {
        className: "VenomousUI-NumberTextBadge",
        variant: "standard",
        invisible: !d,
        anchorOrigin: { vertical: c, horizontal: u },
        badgeContent: /* @__PURE__ */ $(ks, { tooltip: String(o), hide: o <= r, children: /* @__PURE__ */ $("span", { children: f }) }),
        sx: {
          ".MuiBadge-badge": {
            color: "#fff !important",
            backgroundColor: l,
            fontWeight: "bold"
          }
        },
        children: e
      }
    );
  }
);
XN.displayName = "NumberTextBadge";
const ZN = Ie(
  ({
    width: e = 28,
    src: t,
    alt: n,
    onClick: o,
    sx: r,
    badgeColor: i = "primary",
    badgePosition: a = "bottom-right",
    withDotBadge: l = !1,
    dotBadgeIsVisible: c = !0,
    withIconBadge: u = !1,
    iconBadgeIcon: f = ""
  }) => {
    const d = Qe(
      () => /* @__PURE__ */ $(
        iw,
        {
          className: "VenomousUI-Avatar",
          src: t,
          alt: n,
          sx: {
            width: e,
            height: e,
            border: 1,
            borderColor: "divider",
            cursor: o ? "pointer" : "default",
            ...r
          },
          onClick: o
        }
      ),
      [e, t, n, o, r]
    );
    return l ? /* @__PURE__ */ $(sw, { isVisible: c, position: a, color: i, children: d }) : u ? /* @__PURE__ */ $(Mw, { icon: f, position: a, color: i, children: d }) : d;
  }
);
ZN.displayName = "Avatar";
const QN = Ie(({ width: e = 100, text: t = "", sx: n }) => /* @__PURE__ */ Te(Ho, { className: "VenomousUI-Blank", sx: { width: e, ...n }, children: [
  /* @__PURE__ */ $(Wo, { width: e, icon: "solar:box-linear", color: "disabled" }),
  /* @__PURE__ */ $(Cn, { text: t, isTitle: !0, titleLevel: "h6", textColor: "disabled", textAlign: "center" })
] }));
QN.displayName = "Blank";
function JN(e, t) {
  const n = e.charCodeAt(2);
  return e[0] === "o" && e[1] === "n" && n >= 65 && n <= 90 && typeof t == "function";
}
function fm(e, t) {
  if (!e)
    return t;
  function n(a, l) {
    const c = {};
    return Object.keys(l).forEach((u) => {
      JN(u, l[u]) && typeof a[u] == "function" && (c[u] = (...f) => {
        a[u](...f), l[u](...f);
      });
    }), c;
  }
  if (typeof e == "function" || typeof t == "function")
    return (a) => {
      const l = typeof t == "function" ? t(a) : t, c = typeof e == "function" ? e({
        ...a,
        ...l
      }) : e, u = Re(a == null ? void 0 : a.className, l == null ? void 0 : l.className, c == null ? void 0 : c.className), f = n(c, l);
      return {
        ...l,
        ...c,
        ...f,
        ...!!u && {
          className: u
        },
        ...(l == null ? void 0 : l.style) && (c == null ? void 0 : c.style) && {
          style: {
            ...l.style,
            ...c.style
          }
        },
        ...(l == null ? void 0 : l.sx) && (c == null ? void 0 : c.sx) && {
          sx: [...Array.isArray(l.sx) ? l.sx : [l.sx], ...Array.isArray(c.sx) ? c.sx : [c.sx]]
        }
      };
    };
  const o = t, r = n(e, o), i = Re(o == null ? void 0 : o.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...r,
    ...!!i && {
      className: i
    },
    ...(o == null ? void 0 : o.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...o.style,
        ...e.style
      }
    },
    ...(o == null ? void 0 : o.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(o.sx) ? o.sx : [o.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
class su {
  constructor() {
    Ar(this, "mountEffect", () => {
      this.shouldMount && !this.didMount && this.ref.current !== null && (this.didMount = !0, this.mounted.resolve());
    });
    this.ref = {
      current: null
    }, this.mounted = null, this.didMount = !1, this.shouldMount = !1, this.setShouldMount = null;
  }
  /** React ref to the ripple instance */
  /** If the ripple component should be mounted */
  /** Promise that resolves when the ripple component is mounted */
  /** If the ripple component has been mounted */
  /** React state hook setter */
  static create() {
    return new su();
  }
  static use() {
    const t = Dx(su.create).current, [n, o] = P.useState(!1);
    return t.shouldMount = n, t.setShouldMount = o, P.useEffect(t.mountEffect, [n]), t;
  }
  mount() {
    return this.mounted || (this.mounted = tM(), this.shouldMount = !0, this.setShouldMount(this.shouldMount)), this.mounted;
  }
  /* Ripple API */
  start(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.start(...t);
    });
  }
  stop(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.stop(...t);
    });
  }
  pulsate(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.pulsate(...t);
    });
  }
}
function eM() {
  return su.use();
}
function tM() {
  let e, t;
  const n = new Promise((o, r) => {
    e = o, t = r;
  });
  return n.resolve = e, n.reject = t, n;
}
function _w(e) {
  const {
    className: t,
    classes: n,
    pulsate: o = !1,
    rippleX: r,
    rippleY: i,
    rippleSize: a,
    in: l,
    onExited: c,
    timeout: u
  } = e, [f, d] = P.useState(!1), p = Re(t, n.ripple, n.rippleVisible, o && n.ripplePulsate), h = {
    width: a,
    height: a,
    top: -(a / 2) + i,
    left: -(a / 2) + r
  }, g = Re(n.child, f && n.childLeaving, o && n.childPulsate);
  return !l && !f && d(!0), P.useEffect(() => {
    if (!l && c != null) {
      const m = setTimeout(c, u);
      return () => {
        clearTimeout(m);
      };
    }
  }, [c, l, u]), /* @__PURE__ */ $("span", {
    className: p,
    style: h,
    children: /* @__PURE__ */ $("span", {
      className: g
    })
  });
}
process.env.NODE_ENV !== "production" && (_w.propTypes = {
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object.isRequired,
  className: s.string,
  /**
   * @ignore - injected from TransitionGroup
   */
  in: s.bool,
  /**
   * @ignore - injected from TransitionGroup
   */
  onExited: s.func,
  /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */
  pulsate: s.bool,
  /**
   * Diameter of the ripple.
   */
  rippleSize: s.number,
  /**
   * Horizontal position of the ripple center.
   */
  rippleX: s.number,
  /**
   * Vertical position of the ripple center.
   */
  rippleY: s.number,
  /**
   * exit delay
   */
  timeout: s.number.isRequired
});
const So = it("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), Ap = 550, nM = 80, oM = ei`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`, rM = ei`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`, iM = ei`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`, sM = Ee("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), aM = Ee(_w, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})`
  opacity: 0;
  position: absolute;

  &.${So.rippleVisible} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${oM};
    animation-duration: ${Ap}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  &.${So.ripplePulsate} {
    animation-duration: ${({
  theme: e
}) => e.transitions.duration.shorter}ms;
  }

  & .${So.child} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${So.childLeaving} {
    opacity: 0;
    animation-name: ${rM};
    animation-duration: ${Ap}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  & .${So.childPulsate} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${iM};
    animation-duration: 2500ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`, Aw = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiTouchRipple"
  }), {
    center: r = !1,
    classes: i = {},
    className: a,
    ...l
  } = o, [c, u] = P.useState([]), f = P.useRef(0), d = P.useRef(null);
  P.useEffect(() => {
    d.current && (d.current(), d.current = null);
  }, [c]);
  const p = P.useRef(!1), h = us(), g = P.useRef(null), m = P.useRef(null), y = P.useCallback((w) => {
    const {
      pulsate: S,
      rippleX: E,
      rippleY: C,
      rippleSize: R,
      cb: M
    } = w;
    u((v) => [...v, /* @__PURE__ */ $(aM, {
      classes: {
        ripple: Re(i.ripple, So.ripple),
        rippleVisible: Re(i.rippleVisible, So.rippleVisible),
        ripplePulsate: Re(i.ripplePulsate, So.ripplePulsate),
        child: Re(i.child, So.child),
        childLeaving: Re(i.childLeaving, So.childLeaving),
        childPulsate: Re(i.childPulsate, So.childPulsate)
      },
      timeout: Ap,
      pulsate: S,
      rippleX: E,
      rippleY: C,
      rippleSize: R
    }, f.current)]), f.current += 1, d.current = M;
  }, [i]), x = P.useCallback((w = {}, S = {}, E = () => {
  }) => {
    const {
      pulsate: C = !1,
      center: R = r || S.pulsate,
      fakeElement: M = !1
      // For test purposes
    } = S;
    if ((w == null ? void 0 : w.type) === "mousedown" && p.current) {
      p.current = !1;
      return;
    }
    (w == null ? void 0 : w.type) === "touchstart" && (p.current = !0);
    const v = M ? null : m.current, I = v ? v.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let k, A, O;
    if (R || w === void 0 || w.clientX === 0 && w.clientY === 0 || !w.clientX && !w.touches)
      k = Math.round(I.width / 2), A = Math.round(I.height / 2);
    else {
      const {
        clientX: _,
        clientY: N
      } = w.touches && w.touches.length > 0 ? w.touches[0] : w;
      k = Math.round(_ - I.left), A = Math.round(N - I.top);
    }
    if (R)
      O = Math.sqrt((2 * I.width ** 2 + I.height ** 2) / 3), O % 2 === 0 && (O += 1);
    else {
      const _ = Math.max(Math.abs((v ? v.clientWidth : 0) - k), k) * 2 + 2, N = Math.max(Math.abs((v ? v.clientHeight : 0) - A), A) * 2 + 2;
      O = Math.sqrt(_ ** 2 + N ** 2);
    }
    w != null && w.touches ? g.current === null && (g.current = () => {
      y({
        pulsate: C,
        rippleX: k,
        rippleY: A,
        rippleSize: O,
        cb: E
      });
    }, h.start(nM, () => {
      g.current && (g.current(), g.current = null);
    })) : y({
      pulsate: C,
      rippleX: k,
      rippleY: A,
      rippleSize: O,
      cb: E
    });
  }, [r, y, h]), T = P.useCallback(() => {
    x({}, {
      pulsate: !0
    });
  }, [x]), b = P.useCallback((w, S) => {
    if (h.clear(), (w == null ? void 0 : w.type) === "touchend" && g.current) {
      g.current(), g.current = null, h.start(0, () => {
        b(w, S);
      });
      return;
    }
    g.current = null, u((E) => E.length > 0 ? E.slice(1) : E), d.current = S;
  }, [h]);
  return P.useImperativeHandle(n, () => ({
    pulsate: T,
    start: x,
    stop: b
  }), [T, x, b]), /* @__PURE__ */ $(sM, {
    className: Re(So.root, i.root, a),
    ref: m,
    ...l,
    children: /* @__PURE__ */ $(nm, {
      component: null,
      exit: !0,
      children: c
    })
  });
});
process.env.NODE_ENV !== "production" && (Aw.propTypes = {
  /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */
  center: s.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string
});
function lM(e) {
  return tt("MuiButtonBase", e);
}
const cM = it("MuiButtonBase", ["root", "disabled", "focusVisible"]), uM = (e) => {
  const {
    disabled: t,
    focusVisible: n,
    focusVisibleClassName: o,
    classes: r
  } = e, a = rt({
    root: ["root", t && "disabled", n && "focusVisible"]
  }, lM, r);
  return n && o && (a.root += ` ${o}`), a;
}, dM = Ee("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  textDecoration: "none",
  // So we take precedent over the style of a native <a /> element.
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${cM.disabled}`]: {
    pointerEvents: "none",
    // Disable link interactions
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), Ps = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiButtonBase"
  }), {
    action: r,
    centerRipple: i = !1,
    children: a,
    className: l,
    component: c = "button",
    disabled: u = !1,
    disableRipple: f = !1,
    disableTouchRipple: d = !1,
    focusRipple: p = !1,
    focusVisibleClassName: h,
    LinkComponent: g = "a",
    onBlur: m,
    onClick: y,
    onContextMenu: x,
    onDragLeave: T,
    onFocus: b,
    onFocusVisible: w,
    onKeyDown: S,
    onKeyUp: E,
    onMouseDown: C,
    onMouseLeave: R,
    onMouseUp: M,
    onTouchEnd: v,
    onTouchMove: I,
    onTouchStart: k,
    tabIndex: A = 0,
    TouchRippleProps: O,
    touchRippleRef: _,
    type: N,
    ...L
  } = o, F = P.useRef(null), D = eM(), B = un(D.ref, _), [z, U] = P.useState(!1);
  u && z && U(!1), P.useImperativeHandle(r, () => ({
    focusVisible: () => {
      U(!0), F.current.focus();
    }
  }), []);
  const q = D.shouldMount && !f && !u;
  P.useEffect(() => {
    z && p && !f && D.pulsate();
  }, [f, p, z, D]);
  const Y = yr(D, "start", C, d), K = yr(D, "stop", x, d), te = yr(D, "stop", T, d), ne = yr(D, "stop", M, d), W = yr(D, "stop", (j) => {
    z && j.preventDefault(), R && R(j);
  }, d), ee = yr(D, "start", k, d), G = yr(D, "stop", v, d), re = yr(D, "stop", I, d), V = yr(D, "stop", (j) => {
    Jc(j.target) || U(!1), m && m(j);
  }, !1), de = Un((j) => {
    F.current || (F.current = j.currentTarget), Jc(j.target) && (U(!0), w && w(j)), b && b(j);
  }), ue = () => {
    const j = F.current;
    return c && c !== "button" && !(j.tagName === "A" && j.href);
  }, xe = Un((j) => {
    p && !j.repeat && z && j.key === " " && D.stop(j, () => {
      D.start(j);
    }), j.target === j.currentTarget && ue() && j.key === " " && j.preventDefault(), S && S(j), j.target === j.currentTarget && ue() && j.key === "Enter" && !u && (j.preventDefault(), y && y(j));
  }), Ae = Un((j) => {
    p && j.key === " " && z && !j.defaultPrevented && D.stop(j, () => {
      D.pulsate(j);
    }), E && E(j), y && j.target === j.currentTarget && ue() && j.key === " " && !j.defaultPrevented && y(j);
  });
  let we = c;
  we === "button" && (L.href || L.to) && (we = g);
  const De = {};
  we === "button" ? (De.type = N === void 0 ? "button" : N, De.disabled = u) : (!L.href && !L.to && (De.role = "button"), u && (De["aria-disabled"] = u));
  const Ce = un(n, F), Be = {
    ...o,
    centerRipple: i,
    component: c,
    disabled: u,
    disableRipple: f,
    disableTouchRipple: d,
    focusRipple: p,
    tabIndex: A,
    focusVisible: z
  }, Me = uM(Be);
  return /* @__PURE__ */ Te(dM, {
    as: we,
    className: Re(Me.root, l),
    ownerState: Be,
    onBlur: V,
    onClick: y,
    onContextMenu: K,
    onFocus: de,
    onKeyDown: xe,
    onKeyUp: Ae,
    onMouseDown: Y,
    onMouseLeave: W,
    onMouseUp: ne,
    onDragLeave: te,
    onTouchEnd: G,
    onTouchMove: re,
    onTouchStart: ee,
    ref: Ce,
    tabIndex: u ? -1 : A,
    type: N,
    ...De,
    ...L,
    children: [a, q ? /* @__PURE__ */ $(Aw, {
      ref: B,
      center: i,
      ...O
    }) : null]
  });
});
function yr(e, t, n, o = !1) {
  return Un((r) => (n && n(r), o || e[t](r), !0));
}
process.env.NODE_ENV !== "production" && (Ps.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: Qn,
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: s.bool,
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: zh,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: s.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: s.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: s.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: s.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: s.string,
  /**
   * @ignore
   */
  href: s.any,
  /**
   * The component used to render a link when the `href` prop is provided.
   * @default 'a'
   */
  LinkComponent: s.elementType,
  /**
   * @ignore
   */
  onBlur: s.func,
  /**
   * @ignore
   */
  onClick: s.func,
  /**
   * @ignore
   */
  onContextMenu: s.func,
  /**
   * @ignore
   */
  onDragLeave: s.func,
  /**
   * @ignore
   */
  onFocus: s.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: s.func,
  /**
   * @ignore
   */
  onKeyDown: s.func,
  /**
   * @ignore
   */
  onKeyUp: s.func,
  /**
   * @ignore
   */
  onMouseDown: s.func,
  /**
   * @ignore
   */
  onMouseLeave: s.func,
  /**
   * @ignore
   */
  onMouseUp: s.func,
  /**
   * @ignore
   */
  onTouchEnd: s.func,
  /**
   * @ignore
   */
  onTouchMove: s.func,
  /**
   * @ignore
   */
  onTouchStart: s.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * @default 0
   */
  tabIndex: s.number,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: s.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: s.oneOfType([s.func, s.shape({
    current: s.shape({
      pulsate: s.func.isRequired,
      start: s.func.isRequired,
      stop: s.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  type: s.oneOfType([s.oneOf(["button", "reset", "submit"]), s.string])
});
function fM(e) {
  return tt("MuiCircularProgress", e);
}
it("MuiCircularProgress", ["root", "determinate", "indeterminate", "colorPrimary", "colorSecondary", "svg", "circle", "circleDeterminate", "circleIndeterminate", "circleDisableShrink"]);
const Lr = 44, Dp = ei`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`, Lp = ei`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: -126px;
  }
`, pM = typeof Dp != "string" ? Us`
        animation: ${Dp} 1.4s linear infinite;
      ` : null, hM = typeof Lp != "string" ? Us`
        animation: ${Lp} 1.4s ease-in-out infinite;
      ` : null, mM = (e) => {
  const {
    classes: t,
    variant: n,
    color: o,
    disableShrink: r
  } = e, i = {
    root: ["root", n, `color${fe(o)}`],
    svg: ["svg"],
    circle: ["circle", `circle${fe(n)}`, r && "circleDisableShrink"]
  };
  return rt(i, fM, t);
}, gM = Ee("span", {
  name: "MuiCircularProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`color${fe(n.color)}`]];
  }
})(qe(({
  theme: e
}) => ({
  display: "inline-block",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("transform")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: pM || {
      animation: `${Dp} 1.4s linear infinite`
    }
  }, ...Object.entries(e.palette).filter(Ut()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  }))]
}))), yM = Ee("svg", {
  name: "MuiCircularProgress",
  slot: "Svg",
  overridesResolver: (e, t) => t.svg
})({
  display: "block"
  // Keeps the progress centered
}), bM = Ee("circle", {
  name: "MuiCircularProgress",
  slot: "Circle",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.circle, t[`circle${fe(n.variant)}`], n.disableShrink && t.circleDisableShrink];
  }
})(qe(({
  theme: e
}) => ({
  stroke: "currentColor",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("stroke-dashoffset")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: {
      // Some default value that looks fine waiting for the animation to kicks in.
      strokeDasharray: "80px, 200px",
      strokeDashoffset: 0
      // Add the unit to fix a Edge 16 and below bug.
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" && !t.disableShrink,
    style: hM || {
      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
      animation: `${Lp} 1.4s ease-in-out infinite`
    }
  }]
}))), Il = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiCircularProgress"
  }), {
    className: r,
    color: i = "primary",
    disableShrink: a = !1,
    size: l = 40,
    style: c,
    thickness: u = 3.6,
    value: f = 0,
    variant: d = "indeterminate",
    ...p
  } = o, h = {
    ...o,
    color: i,
    disableShrink: a,
    size: l,
    thickness: u,
    value: f,
    variant: d
  }, g = mM(h), m = {}, y = {}, x = {};
  if (d === "determinate") {
    const T = 2 * Math.PI * ((Lr - u) / 2);
    m.strokeDasharray = T.toFixed(3), x["aria-valuenow"] = Math.round(f), m.strokeDashoffset = `${((100 - f) / 100 * T).toFixed(3)}px`, y.transform = "rotate(-90deg)";
  }
  return /* @__PURE__ */ $(gM, {
    className: Re(g.root, r),
    style: {
      width: l,
      height: l,
      ...y,
      ...c
    },
    ownerState: h,
    ref: n,
    role: "progressbar",
    ...x,
    ...p,
    children: /* @__PURE__ */ $(yM, {
      className: g.svg,
      ownerState: h,
      viewBox: `${Lr / 2} ${Lr / 2} ${Lr} ${Lr}`,
      children: /* @__PURE__ */ $(bM, {
        className: g.circle,
        style: m,
        ownerState: h,
        cx: Lr,
        cy: Lr,
        r: (Lr - u) / 2,
        fill: "none",
        strokeWidth: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (Il.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: s.oneOfType([s.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), s.string]),
  /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   * @default false
   */
  disableShrink: jo(s.bool, (e) => e.disableShrink && e.variant && e.variant !== "indeterminate" ? new Error("MUI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.") : null),
  /**
   * The size of the component.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, for example '3rem'.
   * @default 40
   */
  size: s.oneOfType([s.number, s.string]),
  /**
   * @ignore
   */
  style: s.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The thickness of the circle.
   * @default 3.6
   */
  thickness: s.number,
  /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   * @default 0
   */
  value: s.number,
  /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   * @default 'indeterminate'
   */
  variant: s.oneOf(["determinate", "indeterminate"])
});
function vM(e) {
  return tt("MuiButton", e);
}
const yi = it("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorSuccess", "colorError", "colorInfo", "colorWarning", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "icon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge", "loading", "loadingWrapper", "loadingIconPlaceholder", "loadingIndicator", "loadingPositionCenter", "loadingPositionStart", "loadingPositionEnd"]), Dw = /* @__PURE__ */ P.createContext({});
process.env.NODE_ENV !== "production" && (Dw.displayName = "ButtonGroupContext");
const Lw = /* @__PURE__ */ P.createContext(void 0);
process.env.NODE_ENV !== "production" && (Lw.displayName = "ButtonGroupButtonContext");
const xM = (e) => {
  const {
    color: t,
    disableElevation: n,
    fullWidth: o,
    size: r,
    variant: i,
    loading: a,
    loadingPosition: l,
    classes: c
  } = e, u = {
    root: ["root", a && "loading", i, `${i}${fe(t)}`, `size${fe(r)}`, `${i}Size${fe(r)}`, `color${fe(t)}`, n && "disableElevation", o && "fullWidth", a && `loadingPosition${fe(l)}`],
    startIcon: ["icon", "startIcon", `iconSize${fe(r)}`],
    endIcon: ["icon", "endIcon", `iconSize${fe(r)}`],
    loadingIndicator: ["loadingIndicator"],
    loadingWrapper: ["loadingWrapper"]
  }, f = rt(u, vM, c);
  return {
    ...c,
    // forward the focused, disabled, etc. classes to the ButtonBase
    ...f
  };
}, Bw = [{
  props: {
    size: "small"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 18
    }
  }
}, {
  props: {
    size: "medium"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 20
    }
  }
}, {
  props: {
    size: "large"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 22
    }
  }
}], wM = Ee(Ps, {
  shouldForwardProp: (e) => Dn(e) || e === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`${n.variant}${fe(n.color)}`], t[`size${fe(n.size)}`], t[`${n.variant}Size${fe(n.size)}`], n.color === "inherit" && t.colorInherit, n.disableElevation && t.disableElevation, n.fullWidth && t.fullWidth, n.loading && t.loading];
  }
})(qe(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? e.palette.grey[300] : e.palette.grey[800], n = e.palette.mode === "light" ? e.palette.grey.A100 : e.palette.grey[700];
  return {
    ...e.typography.button,
    minWidth: 64,
    padding: "6px 16px",
    border: 0,
    borderRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: e.transitions.duration.short
    }),
    "&:hover": {
      textDecoration: "none"
    },
    [`&.${yi.disabled}`]: {
      color: (e.vars || e).palette.action.disabled
    },
    variants: [{
      props: {
        variant: "contained"
      },
      style: {
        color: "var(--variant-containedColor)",
        backgroundColor: "var(--variant-containedBg)",
        boxShadow: (e.vars || e).shadows[2],
        "&:hover": {
          boxShadow: (e.vars || e).shadows[4],
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            boxShadow: (e.vars || e).shadows[2]
          }
        },
        "&:active": {
          boxShadow: (e.vars || e).shadows[8]
        },
        [`&.${yi.focusVisible}`]: {
          boxShadow: (e.vars || e).shadows[6]
        },
        [`&.${yi.disabled}`]: {
          color: (e.vars || e).palette.action.disabled,
          boxShadow: (e.vars || e).shadows[0],
          backgroundColor: (e.vars || e).palette.action.disabledBackground
        }
      }
    }, {
      props: {
        variant: "outlined"
      },
      style: {
        padding: "5px 15px",
        border: "1px solid currentColor",
        borderColor: "var(--variant-outlinedBorder, currentColor)",
        backgroundColor: "var(--variant-outlinedBg)",
        color: "var(--variant-outlinedColor)",
        [`&.${yi.disabled}`]: {
          border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
        }
      }
    }, {
      props: {
        variant: "text"
      },
      style: {
        padding: "6px 8px",
        color: "var(--variant-textColor)",
        backgroundColor: "var(--variant-textBg)"
      }
    }, ...Object.entries(e.palette).filter(Ut()).map(([o]) => ({
      props: {
        color: o
      },
      style: {
        "--variant-textColor": (e.vars || e).palette[o].main,
        "--variant-outlinedColor": (e.vars || e).palette[o].main,
        "--variant-outlinedBorder": e.vars ? `rgba(${e.vars.palette[o].mainChannel} / 0.5)` : bt(e.palette[o].main, 0.5),
        "--variant-containedColor": (e.vars || e).palette[o].contrastText,
        "--variant-containedBg": (e.vars || e).palette[o].main,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": (e.vars || e).palette[o].dark,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette[o].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : bt(e.palette[o].main, e.palette.action.hoverOpacity),
            "--variant-outlinedBorder": (e.vars || e).palette[o].main,
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette[o].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : bt(e.palette[o].main, e.palette.action.hoverOpacity)
          }
        }
      }
    })), {
      props: {
        color: "inherit"
      },
      style: {
        color: "inherit",
        borderColor: "currentColor",
        "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedBg : t,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedHoverBg : n,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : bt(e.palette.text.primary, e.palette.action.hoverOpacity),
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : bt(e.palette.text.primary, e.palette.action.hoverOpacity)
          }
        }
      }
    }, {
      props: {
        size: "small",
        variant: "text"
      },
      style: {
        padding: "4px 5px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "text"
      },
      style: {
        padding: "8px 11px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "outlined"
      },
      style: {
        padding: "3px 9px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "outlined"
      },
      style: {
        padding: "7px 21px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "contained"
      },
      style: {
        padding: "4px 10px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "contained"
      },
      style: {
        padding: "8px 22px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        disableElevation: !0
      },
      style: {
        boxShadow: "none",
        "&:hover": {
          boxShadow: "none"
        },
        [`&.${yi.focusVisible}`]: {
          boxShadow: "none"
        },
        "&:active": {
          boxShadow: "none"
        },
        [`&.${yi.disabled}`]: {
          boxShadow: "none"
        }
      }
    }, {
      props: {
        fullWidth: !0
      },
      style: {
        width: "100%"
      }
    }, {
      props: {
        loadingPosition: "center"
      },
      style: {
        transition: e.transitions.create(["background-color", "box-shadow", "border-color"], {
          duration: e.transitions.duration.short
        }),
        [`&.${yi.loading}`]: {
          color: "transparent"
        }
      }
    }]
  };
})), SM = Ee("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.startIcon, n.loading && t.startIconLoadingStart, t[`iconSize${fe(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginLeft: -2
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginRight: -8
    }
  }, ...Bw]
})), TM = Ee("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.endIcon, n.loading && t.endIconLoadingEnd, t[`iconSize${fe(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginRight: -2
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginLeft: -8
    }
  }, ...Bw]
})), EM = Ee("span", {
  name: "MuiButton",
  slot: "LoadingIndicator",
  overridesResolver: (e, t) => t.loadingIndicator
})(({
  theme: e
}) => ({
  display: "none",
  position: "absolute",
  visibility: "visible",
  variants: [{
    props: {
      loading: !0
    },
    style: {
      display: "flex"
    }
  }, {
    props: {
      loadingPosition: "start"
    },
    style: {
      left: 14
    }
  }, {
    props: {
      loadingPosition: "start",
      size: "small"
    },
    style: {
      left: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "start"
    },
    style: {
      left: 6
    }
  }, {
    props: {
      loadingPosition: "center"
    },
    style: {
      left: "50%",
      transform: "translate(-50%)",
      color: (e.vars || e).palette.action.disabled
    }
  }, {
    props: {
      loadingPosition: "end"
    },
    style: {
      right: 14
    }
  }, {
    props: {
      loadingPosition: "end",
      size: "small"
    },
    style: {
      right: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "end"
    },
    style: {
      right: 6
    }
  }, {
    props: {
      loadingPosition: "start",
      fullWidth: !0
    },
    style: {
      position: "relative",
      left: -10
    }
  }, {
    props: {
      loadingPosition: "end",
      fullWidth: !0
    },
    style: {
      position: "relative",
      right: -10
    }
  }]
})), Vy = Ee("span", {
  name: "MuiButton",
  slot: "LoadingIconPlaceholder",
  overridesResolver: (e, t) => t.loadingIconPlaceholder
})({
  display: "inline-block",
  width: "1em",
  height: "1em"
}), pm = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = P.useContext(Dw), r = P.useContext(Lw), i = qa(o, t), a = lt({
    props: i,
    name: "MuiButton"
  }), {
    children: l,
    color: c = "primary",
    component: u = "button",
    className: f,
    disabled: d = !1,
    disableElevation: p = !1,
    disableFocusRipple: h = !1,
    endIcon: g,
    focusVisibleClassName: m,
    fullWidth: y = !1,
    id: x,
    loading: T = null,
    loadingIndicator: b,
    loadingPosition: w = "center",
    size: S = "medium",
    startIcon: E,
    type: C,
    variant: R = "text",
    ...M
  } = a, v = Bi(x), I = b ?? /* @__PURE__ */ $(Il, {
    "aria-labelledby": v,
    color: "inherit",
    size: 16
  }), k = {
    ...a,
    color: c,
    component: u,
    disabled: d,
    disableElevation: p,
    disableFocusRipple: h,
    fullWidth: y,
    loading: T,
    loadingIndicator: I,
    loadingPosition: w,
    size: S,
    type: C,
    variant: R
  }, A = xM(k), O = (E || T && w === "start") && /* @__PURE__ */ $(SM, {
    className: A.startIcon,
    ownerState: k,
    children: E || /* @__PURE__ */ $(Vy, {
      className: A.loadingIconPlaceholder,
      ownerState: k
    })
  }), _ = (g || T && w === "end") && /* @__PURE__ */ $(TM, {
    className: A.endIcon,
    ownerState: k,
    children: g || /* @__PURE__ */ $(Vy, {
      className: A.loadingIconPlaceholder,
      ownerState: k
    })
  }), N = r || "", L = typeof T == "boolean" ? (
    // use plain HTML span to minimize the runtime overhead
    /* @__PURE__ */ $("span", {
      className: A.loadingWrapper,
      style: {
        display: "contents"
      },
      children: T && /* @__PURE__ */ $(EM, {
        className: A.loadingIndicator,
        ownerState: k,
        children: I
      })
    })
  ) : null;
  return /* @__PURE__ */ Te(wM, {
    ownerState: k,
    className: Re(o.className, A.root, f, N),
    component: u,
    disabled: d || T,
    focusRipple: !h,
    focusVisibleClassName: Re(A.focusVisible, m),
    ref: n,
    type: C,
    id: T ? v : x,
    ...M,
    classes: A,
    children: [O, w !== "end" && L, l, w === "end" && L, _]
  });
});
process.env.NODE_ENV !== "production" && (pm.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: s.oneOfType([s.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), s.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: s.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: s.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: s.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: s.bool,
  /**
   * Element placed after the children.
   */
  endIcon: s.node,
  /**
   * @ignore
   */
  focusVisibleClassName: s.string,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: s.bool,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: s.string,
  /**
   * @ignore
   */
  id: s.string,
  /**
   * If `true`, the loading indicator is visible and the button is disabled.
   * If `true | false`, the loading wrapper is always rendered before the children to prevent [Google Translation Crash](https://github.com/mui/material-ui/issues/27853).
   * @default null
   */
  loading: s.bool,
  /**
   * Element placed before the children if the button is in loading state.
   * The node should contain an element with `role="progressbar"` with an accessible name.
   * By default, it renders a `CircularProgress` that is labeled by the button itself.
   * @default <CircularProgress color="inherit" size={16} />
   */
  loadingIndicator: s.node,
  /**
   * The loading indicator can be positioned on the start, end, or the center of the button.
   * @default 'center'
   */
  loadingPosition: s.oneOf(["center", "end", "start"]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: s.oneOfType([s.oneOf(["small", "medium", "large"]), s.string]),
  /**
   * Element placed before the children.
   */
  startIcon: s.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * @ignore
   */
  type: s.oneOfType([s.oneOf(["button", "reset", "submit"]), s.string]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: s.oneOfType([s.oneOf(["contained", "outlined", "text"]), s.string])
});
const On = Ie(
  ({
    text: e,
    loading: t,
    disabled: n,
    isOutlined: o,
    isGhost: r,
    isCircle: i,
    isSquare: a,
    icon: l = void 0,
    iconWidth: c = 20,
    iconPosition: u = void 0,
    color: f = "primary",
    onClick: d,
    sx: p,
    ...h
  }) => {
    const { buttonColors: g } = CM({ color: f, isGhost: r, isOutlined: o }), m = Qe(() => l ? /* @__PURE__ */ $(Wo, { icon: l, width: c }) : null, [l, c]);
    return /* @__PURE__ */ Te(
      pm,
      {
        variant: r ? "text" : o ? "outlined" : "contained",
        loading: t,
        disabled: n,
        startIcon: u === "start" && m,
        endIcon: u === "end" && m,
        sx: {
          minWidth: "40px",
          minHeight: "40px",
          width: i ? "40px" : "unset",
          height: i ? "40px" : "unset",
          textTransform: "none",
          fontWeight: "bold",
          borderRadius: i ? "50%" : "8px",
          p: i || a ? "6px" : "auto",
          px: i || a ? "0" : "16px !important",
          cursor: t ? "wait !important" : n ? "not-allowed !important" : "pointer",
          pointerEvents: "auto !important",
          transition: "background-color 0s, background-image 0s",
          "& .MuiButton-startIcon": { width: c, mr: "8px", svg: { color: "inherit" } },
          "& .MuiButton-endIcon": { width: c, mr: "8px", svg: { color: "inherit" } },
          ...g,
          ...p
        },
        onClick: (y) => {
          y.stopPropagation(), d == null || d(y);
        },
        ...h,
        children: [
          !u && m,
          !i && e
        ]
      }
    );
  }
);
On.displayName = "Button";
function CM({ color: e = "primary", isGhost: t, isOutlined: n }) {
  const o = Pr();
  return { buttonColors: Qe(() => {
    const i = o.palette.mode === "dark", a = {
      auto: o.palette.text.primary,
      disabled: o.palette.action.disabled,
      primary: o.palette.primary.main,
      success: o.palette.success.main,
      error: o.palette.error.main
    }, l = e in a ? a[e] : "inherit", c = i && ["auto", "disabled"].includes(e) ? "black" : o.palette.primary.contrastText;
    return {
      backgroundColor: t || n ? "transparent" : l,
      color: t || n ? l : c,
      borderColor: n ? l : "transparent"
    };
  }, [o, e, t, n]) };
}
const sd = Ie(
  ({ isOutlined: e, clickable: t, onClick: n, disabled: o, children: r, sx: i }) => t ? /* @__PURE__ */ $(
    pm,
    {
      className: "VenomousUI-Card",
      component: Cr,
      isOutlined: e,
      disabled: o,
      onClick: o ? void 0 : n,
      sx: {
        display: "block",
        color: "inherit",
        textTransform: "none",
        borderRadius: "8px",
        cursor: o ? "not-allowed !important" : "pointer",
        pointerEvents: "auto !important",
        p: "16px",
        ...e ? {
          border: 1,
          borderColor: "divider"
        } : {},
        ...i
      },
      children: r
    }
  ) : /* @__PURE__ */ $(Cr, { className: "VenomousUI-Card", isOutlined: e, sx: { p: "16px", ...i }, children: r })
);
sd.displayName = "Card";
const dn = Ie(
  ({ children: e, row: t, alignItems: n, justifyContent: o, gap: r = 1, sx: i, component: a, ...l }) => /* @__PURE__ */ $(
    Ho,
    {
      className: "VenomousUI-Flex",
      component: a || "div",
      sx: {
        display: "flex",
        flexDirection: t ? "row" : "column",
        alignItems: n || (t ? "center" : "start"),
        justifyContent: o || "start",
        ...Array.isArray(r) ? { rowGap: r[0], columnGap: r[1] } : { gap: r },
        ...i
      },
      ...l,
      children: e
    }
  )
);
dn.displayName = "Flex";
const OM = Ie(
  ({ title: e, subtitle: t, headerStartExtra: n, headerEndExtra: o, children: r, ...i }) => /* @__PURE__ */ Te(sd, { ...i, children: [
    /* @__PURE__ */ Te(dn, { row: !0, mb: "8px", justifyContent: "space-between", alignItems: "center", children: [
      n && /* @__PURE__ */ $("div", { style: { marginRight: t ? "8px" : 0 }, children: n }),
      /* @__PURE__ */ Te(dn, { gap: 0, children: [
        e && /* @__PURE__ */ $(Cn, { text: e, isTitle: !0, titleLevel: "h6", lineHeight: "1.25rem", ellipsis: !0 }),
        t && /* @__PURE__ */ $(Cn, { text: t, isLabel: !0, ellipsis: !0 })
      ] }),
      o && /* @__PURE__ */ $(
        "div",
        {
          style: {
            marginRight: t ? "-8px" : 0,
            marginTop: t ? "-8px" : 0,
            marginLeft: "8px"
          },
          children: o
        }
      )
    ] }),
    r
  ] })
);
OM.displayName = "ExhibitCard";
const ad = 0, ii = 1, Gs = 2, Fw = 4;
function Hy(e) {
  return () => e;
}
function $M(e) {
  e();
}
function zw(e, t) {
  return (n) => e(t(n));
}
function Wy(e, t) {
  return () => e(t);
}
function jw(e, t) {
  return (n) => e(t, n);
}
function hm(e) {
  return e !== void 0;
}
function IM(...e) {
  return () => {
    e.map($M);
  };
}
function Xs() {
}
function ld(e, t) {
  return t(e), e;
}
function RM(e, t) {
  return t(e);
}
function jt(...e) {
  return e;
}
function Rt(e, t) {
  return e(ii, t);
}
function nt(e, t) {
  e(ad, t);
}
function mm(e) {
  e(Gs);
}
function Pn(e) {
  return e(Fw);
}
function He(e, t) {
  return Rt(e, jw(t, ad));
}
function dr(e, t) {
  const n = e(ii, (o) => {
    n(), t(o);
  });
  return n;
}
function Uy(e) {
  let t, n;
  return (o) => (r) => {
    t = r, n && clearTimeout(n), n = setTimeout(() => {
      o(t);
    }, e);
  };
}
function Vw(e, t) {
  return e === t;
}
function zt(e = Vw) {
  let t;
  return (n) => (o) => {
    e(t, o) || (t = o, n(o));
  };
}
function Ke(e) {
  return (t) => (n) => {
    e(n) && t(n);
  };
}
function Fe(e) {
  return (t) => zw(t, e);
}
function er(e) {
  return (t) => () => {
    t(e);
  };
}
function Oe(e, ...t) {
  const n = kM(...t);
  return (o, r) => {
    switch (o) {
      case Gs:
        mm(e);
        return;
      case ii:
        return Rt(e, n(r));
    }
  };
}
function or(e, t) {
  return (n) => (o) => {
    n(t = e(t, o));
  };
}
function Ns(e) {
  return (t) => (n) => {
    e > 0 ? e-- : t(n);
  };
}
function Wr(e) {
  let t = null, n;
  return (o) => (r) => {
    t = r, !n && (n = setTimeout(() => {
      n = void 0, o(t);
    }, e));
  };
}
function at(...e) {
  const t = new Array(e.length);
  let n = 0, o = null;
  const r = Math.pow(2, e.length) - 1;
  return e.forEach((i, a) => {
    const l = Math.pow(2, a);
    Rt(i, (c) => {
      const u = n;
      n = n | l, t[a] = c, u !== r && n === r && o && (o(), o = null);
    });
  }), (i) => (a) => {
    const l = () => {
      i([a].concat(t));
    };
    n === r ? l() : o = l;
  };
}
function kM(...e) {
  return (t) => e.reduceRight(RM, t);
}
function PM(e) {
  let t, n;
  const o = () => t == null ? void 0 : t();
  return function(r, i) {
    switch (r) {
      case ii:
        return i ? n === i ? void 0 : (o(), n = i, t = Rt(e, i), t) : (o(), Xs);
      case Gs:
        o(), n = null;
        return;
    }
  };
}
function ke(e) {
  let t = e;
  const n = mt();
  return (o, r) => {
    switch (o) {
      case ad:
        t = r;
        break;
      case ii: {
        r(t);
        break;
      }
      case Fw:
        return t;
    }
    return n(o, r);
  };
}
function Nn(e, t) {
  return ld(ke(t), (n) => He(e, n));
}
function mt() {
  const e = [];
  return (t, n) => {
    switch (t) {
      case ad:
        e.slice().forEach((o) => {
          o(n);
        });
        return;
      case Gs:
        e.splice(0, e.length);
        return;
      case ii:
        return e.push(n), () => {
          const o = e.indexOf(n);
          o > -1 && e.splice(o, 1);
        };
    }
  };
}
function uo(e) {
  return ld(mt(), (t) => He(e, t));
}
function St(e, t = [], { singleton: n } = { singleton: !0 }) {
  return {
    constructor: e,
    dependencies: t,
    id: NM(),
    singleton: n
  };
}
const NM = () => Symbol();
function MM(e) {
  const t = /* @__PURE__ */ new Map(), n = ({ constructor: o, dependencies: r, id: i, singleton: a }) => {
    if (a && t.has(i))
      return t.get(i);
    const l = o(r.map((c) => n(c)));
    return a && t.set(i, l), l;
  };
  return n(e);
}
function gn(...e) {
  const t = mt(), n = new Array(e.length);
  let o = 0;
  const r = Math.pow(2, e.length) - 1;
  return e.forEach((i, a) => {
    const l = Math.pow(2, a);
    Rt(i, (c) => {
      n[a] = c, o = o | l, o === r && nt(t, n);
    });
  }), function(i, a) {
    switch (i) {
      case Gs: {
        mm(t);
        return;
      }
      case ii:
        return o === r && a(n), Rt(t, a);
    }
  };
}
function Ye(e, t = Vw) {
  return Oe(e, zt(t));
}
function qy(...e) {
  return function(t, n) {
    switch (t) {
      case Gs:
        return;
      case ii:
        return IM(...e.map((o) => Rt(o, n)));
    }
  };
}
var fo = /* @__PURE__ */ ((e) => (e[e.DEBUG = 0] = "DEBUG", e[e.INFO = 1] = "INFO", e[e.WARN = 2] = "WARN", e[e.ERROR = 3] = "ERROR", e))(fo || {});
const _M = {
  0: "debug",
  3: "error",
  1: "log",
  2: "warn"
}, AM = () => typeof globalThis > "u" ? window : globalThis, si = St(
  () => {
    const e = ke(
      3
      /* ERROR */
    );
    return {
      log: ke((t, n, o = 1) => {
        var r;
        const i = (r = AM().VIRTUOSO_LOG_LEVEL) != null ? r : Pn(e);
        o >= i && console[_M[o]](
          "%creact-virtuoso: %c%s %o",
          "color: #0253b3; font-weight: bold",
          "color: initial",
          t,
          n
        );
      }),
      logLevel: e
    };
  },
  [],
  { singleton: !0 }
);
function zi(e, t, n) {
  return gm(e, t, n).callbackRef;
}
function gm(e, t, n) {
  const o = Z.useRef(null);
  let r = (i) => {
  };
  if (typeof ResizeObserver < "u") {
    const i = Z.useMemo(() => new ResizeObserver((a) => {
      const l = () => {
        const c = a[0].target;
        c.offsetParent !== null && e(c);
      };
      n ? l() : requestAnimationFrame(l);
    }), [e]);
    r = (a) => {
      a && t ? (i.observe(a), o.current = a) : (o.current && i.unobserve(o.current), o.current = null);
    };
  }
  return { callbackRef: r, ref: o };
}
function DM(e, t, n, o, r, i, a, l, c) {
  const u = Z.useCallback(
    (f) => {
      const d = LM(f.children, t, l ? "offsetWidth" : "offsetHeight", r);
      let p = f.parentElement;
      for (; !p.dataset.virtuosoScroller; )
        p = p.parentElement;
      const h = p.lastElementChild.dataset.viewportType === "window";
      let g;
      h && (g = p.ownerDocument.defaultView);
      const m = a ? l ? a.scrollLeft : a.scrollTop : h ? l ? g.scrollX || g.document.documentElement.scrollLeft : g.scrollY || g.document.documentElement.scrollTop : l ? p.scrollLeft : p.scrollTop, y = a ? l ? a.scrollWidth : a.scrollHeight : h ? l ? g.document.documentElement.scrollWidth : g.document.documentElement.scrollHeight : l ? p.scrollWidth : p.scrollHeight, x = a ? l ? a.offsetWidth : a.offsetHeight : h ? l ? g.innerWidth : g.innerHeight : l ? p.offsetWidth : p.offsetHeight;
      o({
        scrollHeight: y,
        scrollTop: Math.max(m, 0),
        viewportHeight: x
      }), i == null || i(
        l ? Ky("column-gap", getComputedStyle(f).columnGap, r) : Ky("row-gap", getComputedStyle(f).rowGap, r)
      ), d !== null && e(d);
    },
    [e, t, r, i, a, o]
  );
  return gm(u, n, c);
}
function LM(e, t, n, o) {
  const r = e.length;
  if (r === 0)
    return null;
  const i = [];
  for (let a = 0; a < r; a++) {
    const l = e.item(a);
    if (l.dataset.index === void 0)
      continue;
    const c = parseInt(l.dataset.index), u = parseFloat(l.dataset.knownSize), f = t(l, n);
    if (f === 0 && o("Zero-sized element, this should not happen", { child: l }, fo.ERROR), f === u)
      continue;
    const d = i[i.length - 1];
    i.length === 0 || d.size !== f || d.endIndex !== c - 1 ? i.push({ endIndex: c, size: f, startIndex: c }) : i[i.length - 1].endIndex++;
  }
  return i;
}
function Ky(e, t, n) {
  return t !== "normal" && !(t != null && t.endsWith("px")) && n(`${e} was not resolved to pixel value correctly`, t, fo.WARN), t === "normal" ? 0 : parseInt(t ?? "0", 10);
}
function Hw(e, t, n) {
  const o = Z.useRef(null), r = Z.useCallback(
    (c) => {
      if (!(c != null && c.offsetParent))
        return;
      const u = c.getBoundingClientRect(), f = u.width;
      let d, p;
      if (t) {
        const h = t.getBoundingClientRect(), g = u.top - h.top;
        p = h.height - Math.max(0, g), d = g + t.scrollTop;
      } else {
        const h = a.current.ownerDocument.defaultView;
        p = h.innerHeight - Math.max(0, u.top), d = u.top + h.scrollY;
      }
      o.current = {
        offsetTop: d,
        visibleHeight: p,
        visibleWidth: f
      }, e(o.current);
    },
    [e, t]
  ), { callbackRef: i, ref: a } = gm(r, !0, n), l = Z.useCallback(() => {
    r(a.current);
  }, [r, a]);
  return Z.useEffect(() => {
    var c;
    if (t) {
      t.addEventListener("scroll", l);
      const u = new ResizeObserver(() => {
        requestAnimationFrame(l);
      });
      return u.observe(t), () => {
        t.removeEventListener("scroll", l), u.unobserve(t);
      };
    } else {
      const u = (c = a.current) == null ? void 0 : c.ownerDocument.defaultView;
      return u == null || u.addEventListener("scroll", l), u == null || u.addEventListener("resize", l), () => {
        u == null || u.removeEventListener("scroll", l), u == null || u.removeEventListener("resize", l);
      };
    }
  }, [l, t]), i;
}
const Hn = St(
  () => {
    const e = mt(), t = mt(), n = ke(0), o = mt(), r = ke(0), i = mt(), a = mt(), l = ke(0), c = ke(0), u = ke(0), f = ke(0), d = mt(), p = mt(), h = ke(!1), g = ke(!1), m = ke(!1);
    return He(
      Oe(
        e,
        Fe(({ scrollTop: y }) => y)
      ),
      t
    ), He(
      Oe(
        e,
        Fe(({ scrollHeight: y }) => y)
      ),
      a
    ), He(t, r), {
      deviation: n,
      fixedFooterHeight: u,
      fixedHeaderHeight: c,
      footerHeight: f,
      headerHeight: l,
      horizontalDirection: g,
      scrollBy: p,
      // input
      scrollContainerState: e,
      scrollHeight: a,
      scrollingInProgress: h,
      // signals
      scrollTo: d,
      scrollTop: t,
      skipAnimationFrameInResizeObserver: m,
      smoothScrollTargetReached: o,
      // state
      statefulScrollTop: r,
      viewportHeight: i
    };
  },
  [],
  { singleton: !0 }
), Ja = { lvl: 0 };
function Ww(e, t) {
  const n = e.length;
  if (n === 0)
    return [];
  let { index: o, value: r } = t(e[0]);
  const i = [];
  for (let a = 1; a < n; a++) {
    const { index: l, value: c } = t(e[a]);
    i.push({ end: l - 1, start: o, value: r }), o = l, r = c;
  }
  return i.push({ end: 1 / 0, start: o, value: r }), i;
}
function Dt(e) {
  return e === Ja;
}
function el(e, t) {
  if (!Dt(e))
    return t === e.k ? e.v : t < e.k ? el(e.l, t) : el(e.r, t);
}
function Uo(e, t, n = "k") {
  if (Dt(e))
    return [-1 / 0, void 0];
  if (Number(e[n]) === t)
    return [e.k, e.v];
  if (Number(e[n]) < t) {
    const o = Uo(e.r, t, n);
    return o[0] === -1 / 0 ? [e.k, e.v] : o;
  }
  return Uo(e.l, t, n);
}
function io(e, t, n) {
  return Dt(e) ? Kw(t, n, 1) : t === e.k ? mn(e, { k: t, v: n }) : t < e.k ? Yy(mn(e, { l: io(e.l, t, n) })) : Yy(mn(e, { r: io(e.r, t, n) }));
}
function gs() {
  return Ja;
}
function cd(e, t, n) {
  if (Dt(e))
    return [];
  const o = Uo(e, t)[0];
  return BM(Fp(e, o, n));
}
function Bp(e, t) {
  if (Dt(e)) return Ja;
  const { k: n, l: o, r } = e;
  if (t === n) {
    if (Dt(o))
      return r;
    if (Dt(r))
      return o;
    {
      const [i, a] = qw(o);
      return Fc(mn(e, { k: i, l: Uw(o), v: a }));
    }
  } else return t < n ? Fc(mn(e, { l: Bp(o, t) })) : Fc(mn(e, { r: Bp(r, t) }));
}
function Ti(e) {
  return Dt(e) ? [] : [...Ti(e.l), { k: e.k, v: e.v }, ...Ti(e.r)];
}
function Fp(e, t, n) {
  if (Dt(e))
    return [];
  const { k: o, l: r, r: i, v: a } = e;
  let l = [];
  return o > t && (l = l.concat(Fp(r, t, n))), o >= t && o <= n && l.push({ k: o, v: a }), o <= n && (l = l.concat(Fp(i, t, n))), l;
}
function Fc(e) {
  const { l: t, lvl: n, r: o } = e;
  if (o.lvl >= n - 1 && t.lvl >= n - 1)
    return e;
  if (n > o.lvl + 1) {
    if (If(t))
      return Yw(mn(e, { lvl: n - 1 }));
    if (!Dt(t) && !Dt(t.r))
      return mn(t.r, {
        l: mn(t, { r: t.r.l }),
        lvl: n,
        r: mn(e, {
          l: t.r.r,
          lvl: n - 1
        })
      });
    throw new Error("Unexpected empty nodes");
  } else {
    if (If(e))
      return zp(mn(e, { lvl: n - 1 }));
    if (!Dt(o) && !Dt(o.l)) {
      const r = o.l, i = If(r) ? o.lvl - 1 : o.lvl;
      return mn(r, {
        l: mn(e, {
          lvl: n - 1,
          r: r.l
        }),
        lvl: r.lvl + 1,
        r: zp(mn(o, { l: r.r, lvl: i }))
      });
    } else
      throw new Error("Unexpected empty nodes");
  }
}
function mn(e, t) {
  return Kw(
    t.k !== void 0 ? t.k : e.k,
    t.v !== void 0 ? t.v : e.v,
    t.lvl !== void 0 ? t.lvl : e.lvl,
    t.l !== void 0 ? t.l : e.l,
    t.r !== void 0 ? t.r : e.r
  );
}
function Uw(e) {
  return Dt(e.r) ? e.l : Fc(mn(e, { r: Uw(e.r) }));
}
function If(e) {
  return Dt(e) || e.lvl > e.r.lvl;
}
function qw(e) {
  return Dt(e.r) ? [e.k, e.v] : qw(e.r);
}
function Kw(e, t, n, o = Ja, r = Ja) {
  return { k: e, l: o, lvl: n, r, v: t };
}
function Yy(e) {
  return zp(Yw(e));
}
function Yw(e) {
  const { l: t } = e;
  return !Dt(t) && t.lvl === e.lvl ? mn(t, { r: mn(e, { l: t.r }) }) : e;
}
function zp(e) {
  const { lvl: t, r: n } = e;
  return !Dt(n) && !Dt(n.r) && n.lvl === t && n.r.lvl === t ? mn(n, { l: mn(e, { r: n.l }), lvl: t + 1 }) : e;
}
function BM(e) {
  return Ww(e, ({ k: t, v: n }) => ({ index: t, value: n }));
}
function Gw(e, t) {
  return !!(e && e.startIndex === t.startIndex && e.endIndex === t.endIndex);
}
function tl(e, t) {
  return !!(e && e[0] === t[0] && e[1] === t[1]);
}
const ym = St(
  () => ({ recalcInProgress: ke(!1) }),
  [],
  { singleton: !0 }
);
function Xw(e, t, n) {
  return e[au(e, t, n)];
}
function au(e, t, n, o = 0) {
  let r = e.length - 1;
  for (; o <= r; ) {
    const i = Math.floor((o + r) / 2), a = e[i], l = n(a, t);
    if (l === 0)
      return i;
    if (l === -1) {
      if (r - o < 2)
        return i - 1;
      r = i - 1;
    } else {
      if (r === o)
        return i;
      o = i + 1;
    }
  }
  throw new Error(`Failed binary finding record in array - ${e.join(",")}, searched for ${t}`);
}
function FM(e, t, n, o) {
  const r = au(e, t, o), i = au(e, n, o, r);
  return e.slice(r, i + 1);
}
function Gr(e, t) {
  return Math.round(e.getBoundingClientRect()[t]);
}
function ud(e) {
  return !Dt(e.groupOffsetTree);
}
function bm({ index: e }, t) {
  return t === e ? 0 : t < e ? -1 : 1;
}
function zM() {
  return {
    groupIndices: [],
    groupOffsetTree: gs(),
    lastIndex: 0,
    lastOffset: 0,
    lastSize: 0,
    offsetTree: [],
    sizeTree: gs()
  };
}
function jM(e, t) {
  let n = Dt(e) ? 0 : 1 / 0;
  for (const o of t) {
    const { endIndex: r, size: i, startIndex: a } = o;
    if (n = Math.min(n, a), Dt(e)) {
      e = io(e, 0, i);
      continue;
    }
    const l = cd(e, a - 1, r + 1);
    if (l.some(YM(o)))
      continue;
    let c = !1, u = !1;
    for (const { end: f, start: d, value: p } of l)
      c ? (r >= d || i === p) && (e = Bp(e, d)) : (u = p !== i, c = !0), f > r && r >= d && p !== i && (e = io(e, r + 1, p));
    u && (e = io(e, a, i));
  }
  return [e, n];
}
function VM(e) {
  return typeof e.groupIndex < "u";
}
function HM({ offset: e }, t) {
  return t === e ? 0 : t < e ? -1 : 1;
}
function nl(e, t, n) {
  if (t.length === 0)
    return 0;
  const { index: o, offset: r, size: i } = Xw(t, e, bm), a = e - o, l = i * a + (a - 1) * n + r;
  return l > 0 ? l + n : l;
}
function Zw(e, t) {
  if (!ud(t))
    return e;
  let n = 0;
  for (; t.groupIndices[n] <= e + n; )
    n++;
  return e + n;
}
function Qw(e, t, n) {
  if (VM(e))
    return t.groupIndices[e.groupIndex] + 1;
  {
    const o = e.index === "LAST" ? n : e.index;
    let r = Zw(o, t);
    return r = Math.max(0, r, Math.min(n, r)), r;
  }
}
function WM(e, t, n, o = 0) {
  return o > 0 && (t = Math.max(t, Xw(e, o, bm).offset)), Ww(FM(e, t, n, HM), KM);
}
function UM(e, [t, n, o, r]) {
  t.length > 0 && o("received item sizes", t, fo.DEBUG);
  const i = e.sizeTree;
  let a = i, l = 0;
  if (n.length > 0 && Dt(i) && t.length === 2) {
    const p = t[0].size, h = t[1].size;
    a = n.reduce((g, m) => io(io(g, m, p), m + 1, h), a);
  } else
    [a, l] = jM(a, t);
  if (a === i)
    return e;
  const { lastIndex: c, lastOffset: u, lastSize: f, offsetTree: d } = jp(e.offsetTree, l, a, r);
  return {
    groupIndices: n,
    groupOffsetTree: n.reduce((p, h) => io(p, h, nl(h, d, r)), gs()),
    lastIndex: c,
    lastOffset: u,
    lastSize: f,
    offsetTree: d,
    sizeTree: a
  };
}
function qM(e) {
  return Ti(e).map(({ k: t, v: n }, o, r) => {
    const i = r[o + 1];
    return { endIndex: i ? i.k - 1 : 1 / 0, size: n, startIndex: t };
  });
}
function Gy(e, t) {
  let n = 0, o = 0;
  for (; n < e; )
    n += t[o + 1] - t[o] - 1, o++;
  return o - (n === e ? 0 : 1);
}
function jp(e, t, n, o) {
  let r = e, i = 0, a = 0, l = 0, c = 0;
  if (t !== 0) {
    c = au(r, t - 1, bm), l = r[c].offset;
    const u = Uo(n, t - 1);
    i = u[0], a = u[1], r.length && r[c].size === Uo(n, t)[1] && (c -= 1), r = r.slice(0, c + 1);
  } else
    r = [];
  for (const { start: u, value: f } of cd(n, t, 1 / 0)) {
    const d = u - i, p = d * a + l + d * o;
    r.push({
      index: u,
      offset: p,
      size: f
    }), i = u, l = p, a = f;
  }
  return {
    lastIndex: i,
    lastOffset: l,
    lastSize: a,
    offsetTree: r
  };
}
function KM(e) {
  return { index: e.index, value: e };
}
function YM(e) {
  const { endIndex: t, size: n, startIndex: o } = e;
  return (r) => r.start === o && (r.end === t || r.end === 1 / 0) && r.value === n;
}
const GM = {
  offsetHeight: "height",
  offsetWidth: "width"
}, pr = St(
  ([{ log: e }, { recalcInProgress: t }]) => {
    const n = mt(), o = mt(), r = Nn(o, 0), i = mt(), a = mt(), l = ke(0), c = ke([]), u = ke(void 0), f = ke(void 0), d = ke((S, E) => Gr(S, GM[E])), p = ke(void 0), h = ke(0), g = zM(), m = Nn(
      Oe(n, at(c, e, h), or(UM, g), zt()),
      g
    ), y = Nn(
      Oe(
        c,
        zt(),
        or((S, E) => ({ current: E, prev: S.current }), {
          current: [],
          prev: []
        }),
        Fe(({ prev: S }) => S)
      ),
      []
    );
    He(
      Oe(
        c,
        Ke((S) => S.length > 0),
        at(m, h),
        Fe(([S, E, C]) => {
          const R = S.reduce((M, v, I) => io(M, v, nl(v, E.offsetTree, C) || I), gs());
          return {
            ...E,
            groupIndices: S,
            groupOffsetTree: R
          };
        })
      ),
      m
    ), He(
      Oe(
        o,
        at(m),
        Ke(([S, { lastIndex: E }]) => S < E),
        Fe(([S, { lastIndex: E, lastSize: C }]) => [
          {
            endIndex: E,
            size: C,
            startIndex: S
          }
        ])
      ),
      n
    ), He(u, f);
    const x = Nn(
      Oe(
        u,
        Fe((S) => S === void 0)
      ),
      !0
    );
    He(
      Oe(
        f,
        Ke((S) => S !== void 0 && Dt(Pn(m).sizeTree)),
        Fe((S) => [{ endIndex: 0, size: S, startIndex: 0 }])
      ),
      n
    );
    const T = uo(
      Oe(
        n,
        at(m),
        or(
          ({ sizes: S }, [E, C]) => ({
            changed: C !== S,
            sizes: C
          }),
          { changed: !1, sizes: g }
        ),
        Fe((S) => S.changed)
      )
    );
    Rt(
      Oe(
        l,
        or(
          (S, E) => ({ diff: S.prev - E, prev: E }),
          { diff: 0, prev: 0 }
        ),
        Fe((S) => S.diff)
      ),
      (S) => {
        const { groupIndices: E } = Pn(m);
        if (S > 0)
          nt(t, !0), nt(i, S + Gy(S, E));
        else if (S < 0) {
          const C = Pn(y);
          C.length > 0 && (S -= Gy(-S, C)), nt(a, S);
        }
      }
    ), Rt(Oe(l, at(e)), ([S, E]) => {
      S < 0 && E(
        "`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value",
        { firstItemIndex: l },
        fo.ERROR
      );
    });
    const b = uo(i);
    He(
      Oe(
        i,
        at(m),
        Fe(([S, E]) => {
          const C = E.groupIndices.length > 0, R = [], M = E.lastSize;
          if (C) {
            const v = el(E.sizeTree, 0);
            let I = 0, k = 0;
            for (; I < S; ) {
              const O = E.groupIndices[k], _ = E.groupIndices.length === k + 1 ? 1 / 0 : E.groupIndices[k + 1] - O - 1;
              R.push({
                endIndex: O,
                size: v,
                startIndex: O
              }), R.push({
                endIndex: O + 1 + _ - 1,
                size: M,
                startIndex: O + 1
              }), k++, I += _ + 1;
            }
            const A = Ti(E.sizeTree);
            return I !== S && A.shift(), A.reduce(
              (O, { k: _, v: N }) => {
                let L = O.ranges;
                return O.prevSize !== 0 && (L = [
                  ...O.ranges,
                  {
                    endIndex: _ + S - 1,
                    size: O.prevSize,
                    startIndex: O.prevIndex
                  }
                ]), {
                  prevIndex: _ + S,
                  prevSize: N,
                  ranges: L
                };
              },
              {
                prevIndex: S,
                prevSize: 0,
                ranges: R
              }
            ).ranges;
          }
          return Ti(E.sizeTree).reduce(
            (v, { k: I, v: k }) => ({
              prevIndex: I + S,
              prevSize: k,
              ranges: [...v.ranges, { endIndex: I + S - 1, size: v.prevSize, startIndex: v.prevIndex }]
            }),
            {
              prevIndex: 0,
              prevSize: M,
              ranges: []
            }
          ).ranges;
        })
      ),
      n
    );
    const w = uo(
      Oe(
        a,
        at(m, h),
        Fe(([S, { offsetTree: E }, C]) => {
          const R = -S;
          return nl(R, E, C);
        })
      )
    );
    return He(
      Oe(
        a,
        at(m, h),
        Fe(([S, E, C]) => {
          if (E.groupIndices.length > 0) {
            if (Dt(E.sizeTree))
              return E;
            let R = gs();
            const M = Pn(y);
            let v = 0, I = 0, k = 0;
            for (; v < -S; ) {
              k = M[I];
              const A = M[I + 1] - k - 1;
              I++, v += A + 1;
            }
            if (R = Ti(E.sizeTree).reduce((A, { k: O, v: _ }) => io(A, Math.max(0, O + S), _), R), v !== -S) {
              const A = el(E.sizeTree, k);
              R = io(R, 0, A);
              const O = Uo(E.sizeTree, -S + 1)[1];
              R = io(R, 1, O);
            }
            return {
              ...E,
              sizeTree: R,
              ...jp(E.offsetTree, 0, R, C)
            };
          } else {
            const R = Ti(E.sizeTree).reduce((M, { k: v, v: I }) => io(M, Math.max(0, v + S), I), gs());
            return {
              ...E,
              sizeTree: R,
              ...jp(E.offsetTree, 0, R, C)
            };
          }
        })
      ),
      m
    ), {
      beforeUnshiftWith: b,
      // input
      data: p,
      defaultItemSize: f,
      firstItemIndex: l,
      fixedItemSize: u,
      gap: h,
      groupIndices: c,
      itemSize: d,
      listRefresh: T,
      shiftWith: a,
      shiftWithOffset: w,
      sizeRanges: n,
      // output
      sizes: m,
      statefulTotalCount: r,
      totalCount: o,
      trackItemSizes: x,
      unshiftWith: i
    };
  },
  jt(si, ym),
  { singleton: !0 }
);
function XM(e) {
  return e.reduce(
    (t, n) => (t.groupIndices.push(t.totalCount), t.totalCount += n + 1, t),
    {
      groupIndices: [],
      totalCount: 0
    }
  );
}
const Jw = St(
  ([{ groupIndices: e, sizes: t, totalCount: n }, { headerHeight: o, scrollTop: r }]) => {
    const i = mt(), a = mt(), l = uo(Oe(i, Fe(XM)));
    return He(
      Oe(
        l,
        Fe((c) => c.totalCount)
      ),
      n
    ), He(
      Oe(
        l,
        Fe((c) => c.groupIndices)
      ),
      e
    ), He(
      Oe(
        gn(r, t, o),
        Ke(([c, u]) => ud(u)),
        Fe(([c, u, f]) => Uo(u.groupOffsetTree, Math.max(c - f, 0), "v")[0]),
        zt(),
        Fe((c) => [c])
      ),
      a
    ), { groupCounts: i, topItemsIndexes: a };
  },
  jt(pr, Hn)
), ai = St(
  ([{ log: e }]) => {
    const t = ke(!1), n = uo(
      Oe(
        t,
        Ke((o) => o),
        zt()
      )
    );
    return Rt(t, (o) => {
      o && Pn(e)("props updated", {}, fo.DEBUG);
    }), { didMount: n, propsReady: t };
  },
  jt(si),
  { singleton: !0 }
), ZM = typeof document < "u" && "scrollBehavior" in document.documentElement.style;
function eS(e) {
  const t = typeof e == "number" ? { index: e } : e;
  return t.align || (t.align = "start"), (!t.behavior || !ZM) && (t.behavior = "auto"), t.offset || (t.offset = 0), t;
}
const Rl = St(
  ([
    { gap: e, listRefresh: t, sizes: n, totalCount: o },
    {
      fixedFooterHeight: r,
      fixedHeaderHeight: i,
      footerHeight: a,
      headerHeight: l,
      scrollingInProgress: c,
      scrollTo: u,
      smoothScrollTargetReached: f,
      viewportHeight: d
    },
    { log: p }
  ]) => {
    const h = mt(), g = mt(), m = ke(0);
    let y = null, x = null, T = null;
    function b() {
      y && (y(), y = null), T && (T(), T = null), x && (clearTimeout(x), x = null), nt(c, !1);
    }
    return He(
      Oe(
        h,
        at(n, d, o, m, l, a, p),
        at(e, i, r),
        Fe(
          ([
            [w, S, E, C, R, M, v, I],
            k,
            A,
            O
          ]) => {
            const _ = eS(w), { align: N, behavior: L, offset: F } = _, D = C - 1, B = Qw(_, S, D);
            let z = nl(B, S.offsetTree, k) + M;
            N === "end" ? (z += A + Uo(S.sizeTree, B)[1] - E + O, B === D && (z += v)) : N === "center" ? z += (A + Uo(S.sizeTree, B)[1] - E + O) / 2 : z -= R, F && (z += F);
            const U = (q) => {
              b(), q ? (I("retrying to scroll to", { location: w }, fo.DEBUG), nt(h, w)) : (nt(g, !0), I("list did not change, scroll successful", {}, fo.DEBUG));
            };
            if (b(), L === "smooth") {
              let q = !1;
              T = Rt(t, (Y) => {
                q = q || Y;
              }), y = dr(f, () => {
                U(q);
              });
            } else
              y = dr(Oe(t, QM(150)), U);
            return x = setTimeout(() => {
              b();
            }, 1200), nt(c, !0), I("scrolling from index to", { behavior: L, index: B, top: z }, fo.DEBUG), { behavior: L, top: z };
          }
        )
      ),
      u
    ), {
      scrollTargetReached: g,
      scrollToIndex: h,
      topListHeight: m
    };
  },
  jt(pr, Hn, si),
  { singleton: !0 }
);
function QM(e) {
  return (t) => {
    const n = setTimeout(() => {
      t(!1);
    }, e);
    return (o) => {
      o && (t(!0), clearTimeout(n));
    };
  };
}
function vm(e, t) {
  e == 0 ? t() : requestAnimationFrame(() => {
    vm(e - 1, t);
  });
}
function xm(e, t) {
  const n = t - 1;
  return typeof e == "number" ? e : e.index === "LAST" ? n : e.index;
}
const kl = St(
  ([{ defaultItemSize: e, listRefresh: t, sizes: n }, { scrollTop: o }, { scrollTargetReached: r, scrollToIndex: i }, { didMount: a }]) => {
    const l = ke(!0), c = ke(0), u = ke(!0);
    return He(
      Oe(
        a,
        at(c),
        Ke(([f, d]) => !!d),
        er(!1)
      ),
      l
    ), He(
      Oe(
        a,
        at(c),
        Ke(([f, d]) => !!d),
        er(!1)
      ),
      u
    ), Rt(
      Oe(
        gn(t, a),
        at(l, n, e, u),
        Ke(([[, f], d, { sizeTree: p }, h, g]) => f && (!Dt(p) || hm(h)) && !d && !g),
        at(c)
      ),
      ([, f]) => {
        dr(r, () => {
          nt(u, !0);
        }), vm(4, () => {
          dr(o, () => {
            nt(l, !0);
          }), nt(i, f);
        });
      }
    ), {
      initialItemFinalLocationReached: u,
      initialTopMostItemIndex: c,
      scrolledToInitialItem: l
    };
  },
  jt(pr, Hn, Rl, ai),
  { singleton: !0 }
);
function tS(e, t) {
  return Math.abs(e - t) < 1.01;
}
const ol = "up", Na = "down", JM = "none", e_ = {
  atBottom: !1,
  notAtBottomBecause: "NOT_SHOWING_LAST_ITEM",
  state: {
    offsetBottom: 0,
    scrollHeight: 0,
    scrollTop: 0,
    viewportHeight: 0
  }
}, t_ = 0, Pl = St(([{ footerHeight: e, headerHeight: t, scrollBy: n, scrollContainerState: o, scrollTop: r, viewportHeight: i }]) => {
  const a = ke(!1), l = ke(!0), c = mt(), u = mt(), f = ke(4), d = ke(t_), p = Nn(
    Oe(
      qy(Oe(Ye(r), Ns(1), er(!0)), Oe(Ye(r), Ns(1), er(!1), Uy(100))),
      zt()
    ),
    !1
  ), h = Nn(
    Oe(qy(Oe(n, er(!0)), Oe(n, er(!1), Uy(200))), zt()),
    !1
  );
  He(
    Oe(
      gn(Ye(r), Ye(d)),
      Fe(([T, b]) => T <= b),
      zt()
    ),
    l
  ), He(Oe(l, Wr(50)), u);
  const g = uo(
    Oe(
      gn(o, Ye(i), Ye(t), Ye(e), Ye(f)),
      or((T, [{ scrollHeight: b, scrollTop: w }, S, E, C, R]) => {
        const M = w + S - b > -R, v = {
          scrollHeight: b,
          scrollTop: w,
          viewportHeight: S
        };
        if (M) {
          let k, A;
          return w > T.state.scrollTop ? (k = "SCROLLED_DOWN", A = T.state.scrollTop - w) : (k = "SIZE_DECREASED", A = T.state.scrollTop - w || T.scrollTopDelta), {
            atBottom: !0,
            atBottomBecause: k,
            scrollTopDelta: A,
            state: v
          };
        }
        let I;
        return v.scrollHeight > T.state.scrollHeight ? I = "SIZE_INCREASED" : S < T.state.viewportHeight ? I = "VIEWPORT_HEIGHT_DECREASING" : w < T.state.scrollTop ? I = "SCROLLING_UPWARDS" : I = "NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM", {
          atBottom: !1,
          notAtBottomBecause: I,
          state: v
        };
      }, e_),
      zt((T, b) => T && T.atBottom === b.atBottom)
    )
  ), m = Nn(
    Oe(
      o,
      or(
        (T, { scrollHeight: b, scrollTop: w, viewportHeight: S }) => {
          if (tS(T.scrollHeight, b))
            return {
              changed: !1,
              jump: 0,
              scrollHeight: b,
              scrollTop: w
            };
          {
            const E = b - (w + S) < 1;
            return T.scrollTop !== w && E ? {
              changed: !0,
              jump: T.scrollTop - w,
              scrollHeight: b,
              scrollTop: w
            } : {
              changed: !0,
              jump: 0,
              scrollHeight: b,
              scrollTop: w
            };
          }
        },
        { changed: !1, jump: 0, scrollHeight: 0, scrollTop: 0 }
      ),
      Ke((T) => T.changed),
      Fe((T) => T.jump)
    ),
    0
  );
  He(
    Oe(
      g,
      Fe((T) => T.atBottom)
    ),
    a
  ), He(Oe(a, Wr(50)), c);
  const y = ke(Na);
  He(
    Oe(
      o,
      Fe(({ scrollTop: T }) => T),
      zt(),
      or(
        (T, b) => Pn(h) ? { direction: T.direction, prevScrollTop: b } : { direction: b < T.prevScrollTop ? ol : Na, prevScrollTop: b },
        { direction: Na, prevScrollTop: 0 }
      ),
      Fe((T) => T.direction)
    ),
    y
  ), He(Oe(o, Wr(50), er(JM)), y);
  const x = ke(0);
  return He(
    Oe(
      p,
      Ke((T) => !T),
      er(0)
    ),
    x
  ), He(
    Oe(
      r,
      Wr(100),
      at(p),
      Ke(([T, b]) => !!b),
      or(([T, b], [w]) => [b, w], [0, 0]),
      Fe(([T, b]) => b - T)
    ),
    x
  ), {
    atBottomState: g,
    atBottomStateChange: c,
    atBottomThreshold: f,
    atTopStateChange: u,
    atTopThreshold: d,
    isAtBottom: a,
    isAtTop: l,
    isScrolling: p,
    lastJumpDueToItemResize: m,
    scrollDirection: y,
    scrollVelocity: x
  };
}, jt(Hn)), lu = "top", cu = "bottom", Xy = "none";
function Zy(e, t, n) {
  return typeof e == "number" ? n === ol && t === lu || n === Na && t === cu ? e : 0 : n === ol ? t === lu ? e.main : e.reverse : t === cu ? e.main : e.reverse;
}
function Qy(e, t) {
  var n;
  return typeof e == "number" ? e : (n = e[t]) != null ? n : 0;
}
const wm = St(
  ([{ deviation: e, fixedHeaderHeight: t, headerHeight: n, scrollTop: o, viewportHeight: r }]) => {
    const i = mt(), a = ke(0), l = ke(0), c = ke(0), u = Nn(
      Oe(
        gn(
          Ye(o),
          Ye(r),
          Ye(n),
          Ye(i, tl),
          Ye(c),
          Ye(a),
          Ye(t),
          Ye(e),
          Ye(l)
        ),
        Fe(
          ([
            f,
            d,
            p,
            [h, g],
            m,
            y,
            x,
            T,
            b
          ]) => {
            const w = f - T, S = y + x, E = Math.max(p - w, 0);
            let C = Xy;
            const R = Qy(b, lu), M = Qy(b, cu);
            return h -= T, h += p + x, g += p + x, g -= T, h > f + S - R && (C = ol), g < f - E + d + M && (C = Na), C !== Xy ? [
              Math.max(w - p - Zy(m, lu, C) - R, 0),
              w - E - x + d + Zy(m, cu, C) + M
            ] : null;
          }
        ),
        Ke((f) => f != null),
        zt(tl)
      ),
      [0, 0]
    );
    return {
      increaseViewportBy: l,
      // input
      listBoundary: i,
      overscan: c,
      topListHeight: a,
      // output
      visibleRange: u
    };
  },
  jt(Hn),
  { singleton: !0 }
);
function n_(e, t, n) {
  if (ud(t)) {
    const o = Zw(e, t);
    return [
      { index: Uo(t.groupOffsetTree, o)[0], offset: 0, size: 0 },
      { data: n == null ? void 0 : n[0], index: o, offset: 0, size: 0 }
    ];
  }
  return [{ data: n == null ? void 0 : n[0], index: e, offset: 0, size: 0 }];
}
const Rf = {
  bottom: 0,
  firstItemIndex: 0,
  items: [],
  offsetBottom: 0,
  offsetTop: 0,
  top: 0,
  topItems: [],
  topListHeight: 0,
  totalCount: 0
};
function zc(e, t, n, o, r, i) {
  const { lastIndex: a, lastOffset: l, lastSize: c } = r;
  let u = 0, f = 0;
  if (e.length > 0) {
    u = e[0].offset;
    const m = e[e.length - 1];
    f = m.offset + m.size;
  }
  const d = n - a, p = l + d * c + (d - 1) * o, h = u, g = p - f;
  return {
    bottom: f,
    firstItemIndex: i,
    items: Jy(e, r, i),
    offsetBottom: g,
    offsetTop: u,
    top: h,
    topItems: Jy(t, r, i),
    topListHeight: t.reduce((m, y) => y.size + m, 0),
    totalCount: n
  };
}
function nS(e, t, n, o, r, i) {
  let a = 0;
  if (n.groupIndices.length > 0)
    for (const f of n.groupIndices) {
      if (f - a >= e)
        break;
      a++;
    }
  const l = e + a, c = xm(t, l), u = Array.from({ length: l }).map((f, d) => ({
    data: i[d + c],
    index: d + c,
    offset: 0,
    size: 0
  }));
  return zc(u, [], l, r, n, o);
}
function Jy(e, t, n) {
  if (e.length === 0)
    return [];
  if (!ud(t))
    return e.map((u) => ({ ...u, index: u.index + n, originalIndex: u.index }));
  const o = e[0].index, r = e[e.length - 1].index, i = [], a = cd(t.groupOffsetTree, o, r);
  let l, c = 0;
  for (const u of e) {
    (!l || l.end < u.index) && (l = a.shift(), c = t.groupIndices.indexOf(l.start));
    let f;
    u.index === l.start ? f = {
      index: c,
      type: "group"
    } : f = {
      groupIndex: c,
      index: u.index - (c + 1) + n
    }, i.push({
      ...f,
      data: u.data,
      offset: u.offset,
      originalIndex: u.index,
      size: u.size
    });
  }
  return i;
}
const ji = St(
  ([
    { data: e, firstItemIndex: t, gap: n, sizes: o, totalCount: r },
    i,
    { listBoundary: a, topListHeight: l, visibleRange: c },
    { initialTopMostItemIndex: u, scrolledToInitialItem: f },
    { topListHeight: d },
    p,
    { didMount: h },
    { recalcInProgress: g }
  ]) => {
    const m = ke([]), y = ke(0), x = mt();
    He(i.topItemsIndexes, m);
    const T = Nn(
      Oe(
        gn(
          h,
          g,
          Ye(c, tl),
          Ye(r),
          Ye(o),
          Ye(u),
          f,
          Ye(m),
          Ye(t),
          Ye(n),
          e
        ),
        Ke(([E, C, , R, , , , , , , M]) => {
          const v = M && M.length !== R;
          return E && !C && !v;
        }),
        Fe(
          ([
            ,
            ,
            [E, C],
            R,
            M,
            v,
            I,
            k,
            A,
            O,
            _
          ]) => {
            const N = M, { offsetTree: L, sizeTree: F } = N, D = Pn(y);
            if (R === 0)
              return { ...Rf, totalCount: R };
            if (E === 0 && C === 0)
              return D === 0 ? { ...Rf, totalCount: R } : nS(D, v, M, A, O, _ || []);
            if (Dt(F))
              return D > 0 ? null : zc(
                n_(xm(v, R), N, _),
                [],
                R,
                O,
                N,
                A
              );
            const B = [];
            if (k.length > 0) {
              const K = k[0], te = k[k.length - 1];
              let ne = 0;
              for (const W of cd(F, K, te)) {
                const ee = W.value, G = Math.max(W.start, K), re = Math.min(W.end, te);
                for (let V = G; V <= re; V++)
                  B.push({ data: _ == null ? void 0 : _[V], index: V, offset: ne, size: ee }), ne += ee;
              }
            }
            if (!I)
              return zc([], B, R, O, N, A);
            const z = k.length > 0 ? k[k.length - 1] + 1 : 0, U = WM(L, E, C, z);
            if (U.length === 0)
              return null;
            const q = R - 1, Y = ld([], (K) => {
              for (const te of U) {
                const ne = te.value;
                let W = ne.offset, ee = te.start;
                const G = ne.size;
                if (ne.offset < E) {
                  ee += Math.floor((E - ne.offset + O) / (G + O));
                  const V = ee - te.start;
                  W += V * G + V * O;
                }
                ee < z && (W += (z - ee) * G, ee = z);
                const re = Math.min(te.end, q);
                for (let V = ee; V <= re && !(W >= C); V++)
                  K.push({ data: _ == null ? void 0 : _[V], index: V, offset: W, size: G }), W += G + O;
              }
            });
            return zc(Y, B, R, O, N, A);
          }
        ),
        //@ts-expect-error filter needs to be fixed
        Ke((E) => E !== null),
        zt()
      ),
      Rf
    );
    He(
      Oe(
        e,
        Ke(hm),
        Fe((E) => E == null ? void 0 : E.length)
      ),
      r
    ), He(
      Oe(
        T,
        Fe((E) => E.topListHeight)
      ),
      d
    ), He(d, l), He(
      Oe(
        T,
        Fe((E) => [E.top, E.bottom])
      ),
      a
    ), He(
      Oe(
        T,
        Fe((E) => E.items)
      ),
      x
    );
    const b = uo(
      Oe(
        T,
        Ke(({ items: E }) => E.length > 0),
        at(r, e),
        Ke(([{ items: E }, C]) => E[E.length - 1].originalIndex === C - 1),
        Fe(([, E, C]) => [E - 1, C]),
        zt(tl),
        Fe(([E]) => E)
      )
    ), w = uo(
      Oe(
        T,
        Wr(200),
        Ke(({ items: E, topItems: C }) => E.length > 0 && E[0].originalIndex === C.length),
        Fe(({ items: E }) => E[0].index),
        zt()
      )
    ), S = uo(
      Oe(
        T,
        Ke(({ items: E }) => E.length > 0),
        Fe(({ items: E }) => {
          let C = 0, R = E.length - 1;
          for (; E[C].type === "group" && C < R; )
            C++;
          for (; E[R].type === "group" && R > C; )
            R--;
          return {
            endIndex: E[R].index,
            startIndex: E[C].index
          };
        }),
        zt(Gw)
      )
    );
    return { endReached: b, initialItemCount: y, itemsRendered: x, listState: T, rangeChanged: S, startReached: w, topItemsIndexes: m, ...p };
  },
  jt(
    pr,
    Jw,
    wm,
    kl,
    Rl,
    Pl,
    ai,
    ym
  ),
  { singleton: !0 }
), oS = St(
  ([{ fixedFooterHeight: e, fixedHeaderHeight: t, footerHeight: n, headerHeight: o }, { listState: r }]) => {
    const i = mt(), a = Nn(
      Oe(
        gn(n, e, o, t, r),
        Fe(([l, c, u, f, d]) => l + c + u + f + d.offsetBottom + d.bottom)
      ),
      0
    );
    return He(Ye(a), i), { totalListHeight: a, totalListHeightChanged: i };
  },
  jt(Hn, ji),
  { singleton: !0 }
), o_ = St(
  ([{ viewportHeight: e }, { totalListHeight: t }]) => {
    const n = ke(!1), o = Nn(
      Oe(
        gn(n, e, t),
        Ke(([r]) => r),
        Fe(([, r, i]) => Math.max(0, r - i)),
        Wr(0),
        zt()
      ),
      0
    );
    return { alignToBottom: n, paddingTopAddition: o };
  },
  jt(Hn, oS),
  { singleton: !0 }
);
function eb(e) {
  return e ? e === "smooth" ? "smooth" : "auto" : !1;
}
const r_ = (e, t) => typeof e == "function" ? eb(e(t)) : t && eb(e), i_ = St(
  ([
    { listRefresh: e, totalCount: t },
    { atBottomState: n, isAtBottom: o },
    { scrollToIndex: r },
    { scrolledToInitialItem: i },
    { didMount: a, propsReady: l },
    { log: c },
    { scrollingInProgress: u }
  ]) => {
    const f = ke(!1), d = mt();
    let p = null;
    function h(m) {
      nt(r, {
        align: "end",
        behavior: m,
        index: "LAST"
      });
    }
    Rt(
      Oe(
        gn(Oe(Ye(t), Ns(1)), a),
        at(Ye(f), o, i, u),
        Fe(([[m, y], x, T, b, w]) => {
          let S = y && b, E = "auto";
          return S && (E = r_(x, T || w), S = S && !!E), { followOutputBehavior: E, shouldFollow: S, totalCount: m };
        }),
        Ke(({ shouldFollow: m }) => m)
      ),
      ({ followOutputBehavior: m, totalCount: y }) => {
        p && (p(), p = null), p = dr(e, () => {
          Pn(c)("following output to ", { totalCount: y }, fo.DEBUG), h(m), p = null;
        });
      }
    );
    function g(m) {
      const y = dr(n, (x) => {
        m && !x.atBottom && x.notAtBottomBecause === "SIZE_INCREASED" && !p && (Pn(c)("scrolling to bottom due to increased size", {}, fo.DEBUG), h("auto"));
      });
      setTimeout(y, 100);
    }
    return Rt(
      Oe(
        gn(Ye(f), t, l),
        Ke(([m, , y]) => m && y),
        or(
          ({ value: m }, [, y]) => ({ refreshed: m === y, value: y }),
          { refreshed: !1, value: 0 }
        ),
        Ke(({ refreshed: m }) => m),
        at(f, t)
      ),
      ([, m]) => {
        Pn(i) && g(m !== !1);
      }
    ), Rt(d, () => {
      g(Pn(f) !== !1);
    }), Rt(gn(Ye(f), n), ([m, y]) => {
      m && !y.atBottom && y.notAtBottomBecause === "VIEWPORT_HEIGHT_DECREASING" && h("auto");
    }), { autoscrollToBottom: d, followOutput: f };
  },
  jt(pr, Pl, Rl, kl, ai, si, Hn)
), s_ = St(
  ([{ data: e, firstItemIndex: t, gap: n, sizes: o }, { initialTopMostItemIndex: r }, { initialItemCount: i, listState: a }, { didMount: l }]) => (He(
    Oe(
      l,
      at(i),
      Ke(([, c]) => c !== 0),
      at(r, o, t, n, e),
      Fe(([[, c], u, f, d, p, h = []]) => nS(c, u, f, d, p, h))
    ),
    a
  ), {}),
  jt(pr, kl, ji, ai),
  { singleton: !0 }
), a_ = St(
  ([{ didMount: e }, { scrollTo: t }, { listState: n }]) => {
    const o = ke(0);
    return Rt(
      Oe(
        e,
        at(o),
        Ke(([, r]) => r !== 0),
        Fe(([, r]) => ({ top: r }))
      ),
      (r) => {
        dr(
          Oe(
            n,
            Ns(1),
            Ke((i) => i.items.length > 1)
          ),
          () => {
            requestAnimationFrame(() => {
              nt(t, r);
            });
          }
        );
      }
    ), {
      initialScrollTop: o
    };
  },
  jt(ai, Hn, ji),
  { singleton: !0 }
), l_ = ({
  itemBottom: e,
  itemTop: t,
  locationParams: { align: n, behavior: o, ...r },
  viewportBottom: i,
  viewportTop: a
}) => t < a ? { ...r, align: n ?? "start", behavior: o } : e > i ? { ...r, align: n ?? "end", behavior: o } : null, c_ = St(
  ([
    { gap: e, sizes: t, totalCount: n },
    { fixedFooterHeight: o, fixedHeaderHeight: r, headerHeight: i, scrollingInProgress: a, scrollTop: l, viewportHeight: c },
    { scrollToIndex: u }
  ]) => {
    const f = mt();
    return He(
      Oe(
        f,
        at(t, c, n, i, r, o, l),
        at(e),
        Fe(([[d, p, h, g, m, y, x, T], b]) => {
          const { align: w, behavior: S, calculateViewLocation: E = l_, done: C, ...R } = d, M = Qw(d, p, g - 1), v = nl(M, p.offsetTree, b) + m + y, I = v + Uo(p.sizeTree, M)[1], k = T + y, A = T + h - x, O = E({
            itemBottom: I,
            itemTop: v,
            locationParams: { align: w, behavior: S, ...R },
            viewportBottom: A,
            viewportTop: k
          });
          return O ? C && dr(
            Oe(
              a,
              Ke((_) => !_),
              // skips the initial publish of false, and the cleanup call.
              // but if scrollingInProgress is true, we skip the initial publish.
              Ns(Pn(a) ? 1 : 2)
            ),
            C
          ) : C && C(), O;
        }),
        Ke((d) => d !== null)
      ),
      u
    ), {
      scrollIntoView: f
    };
  },
  jt(pr, Hn, Rl, ji, si),
  { singleton: !0 }
), rS = St(
  ([{ scrollVelocity: e }]) => {
    const t = ke(!1), n = mt(), o = ke(!1);
    return He(
      Oe(
        e,
        at(o, t, n),
        Ke(([r, i]) => !!i),
        Fe(([r, i, a, l]) => {
          const { enter: c, exit: u } = i;
          if (a) {
            if (u(r, l))
              return !1;
          } else if (c(r, l))
            return !0;
          return a;
        }),
        zt()
      ),
      t
    ), Rt(
      Oe(gn(t, e, n), at(o)),
      ([[r, i, a], l]) => {
        r && l && l.change && l.change(i, a);
      }
    ), { isSeeking: t, scrollSeekConfiguration: o, scrollSeekRangeChanged: n, scrollVelocity: e };
  },
  jt(Pl),
  { singleton: !0 }
), Sm = St(([{ scrollContainerState: e, scrollTo: t }]) => {
  const n = mt(), o = mt(), r = mt(), i = ke(!1), a = ke(void 0);
  return He(
    Oe(
      gn(n, o),
      Fe(([{ scrollHeight: l, scrollTop: c, viewportHeight: u }, { offsetTop: f }]) => ({
        scrollHeight: l,
        scrollTop: Math.max(0, c - f),
        viewportHeight: u
      }))
    ),
    e
  ), He(
    Oe(
      t,
      at(o),
      Fe(([l, { offsetTop: c }]) => ({
        ...l,
        top: l.top + c
      }))
    ),
    r
  ), {
    customScrollParent: a,
    // config
    useWindowScroll: i,
    // input
    windowScrollContainerState: n,
    // signals
    windowScrollTo: r,
    windowViewportRect: o
  };
}, jt(Hn)), u_ = St(
  ([
    { sizeRanges: e, sizes: t },
    { headerHeight: n, scrollTop: o },
    { initialTopMostItemIndex: r },
    { didMount: i },
    { useWindowScroll: a, windowScrollContainerState: l, windowViewportRect: c }
  ]) => {
    const u = mt(), f = ke(void 0), d = ke(null), p = ke(null);
    return He(l, d), He(c, p), Rt(
      Oe(
        u,
        at(t, o, a, d, p, n)
      ),
      ([h, g, m, y, x, T, b]) => {
        const w = qM(g.sizeTree);
        y && x !== null && T !== null && (m = x.scrollTop - T.offsetTop), m -= b, h({ ranges: w, scrollTop: m });
      }
    ), He(Oe(f, Ke(hm), Fe(d_)), r), He(
      Oe(
        i,
        at(f),
        Ke(([, h]) => h !== void 0),
        zt(),
        Fe(([, h]) => h.ranges)
      ),
      e
    ), {
      getState: u,
      restoreStateFrom: f
    };
  },
  jt(pr, Hn, kl, ai, Sm)
);
function d_(e) {
  return { align: "start", index: 0, offset: e.scrollTop };
}
const f_ = St(([{ topItemsIndexes: e }]) => {
  const t = ke(0);
  return He(
    Oe(
      t,
      Ke((n) => n >= 0),
      Fe((n) => Array.from({ length: n }).map((o, r) => r))
    ),
    e
  ), { topItemCount: t };
}, jt(ji));
function iS(e) {
  let t = !1, n;
  return () => (t || (t = !0, n = e()), n);
}
const p_ = iS(() => /iP(ad|od|hone)/i.test(navigator.userAgent) && /WebKit/i.test(navigator.userAgent)), h_ = St(
  ([
    { deviation: e, scrollBy: t, scrollingInProgress: n, scrollTop: o },
    { isAtBottom: r, isScrolling: i, lastJumpDueToItemResize: a, scrollDirection: l },
    { listState: c },
    { beforeUnshiftWith: u, gap: f, shiftWithOffset: d, sizes: p },
    { log: h },
    { recalcInProgress: g }
  ]) => {
    const m = uo(
      Oe(
        c,
        at(a),
        or(
          ([, x, T, b], [{ bottom: w, items: S, offsetBottom: E, totalCount: C }, R]) => {
            const M = w + E;
            let v = 0;
            return T === C && x.length > 0 && S.length > 0 && (S[0].originalIndex === 0 && x[0].originalIndex === 0 || (v = M - b, v !== 0 && (v += R))), [v, S, C, M];
          },
          [0, [], 0, 0]
        ),
        Ke(([x]) => x !== 0),
        at(o, l, n, r, h, g),
        Ke(([, x, T, b, , , w]) => !w && !b && x !== 0 && T === ol),
        Fe(([[x], , , , , T]) => (T("Upward scrolling compensation", { amount: x }, fo.DEBUG), x))
      )
    );
    function y(x) {
      x > 0 ? (nt(t, { behavior: "auto", top: -x }), nt(e, 0)) : (nt(e, 0), nt(t, { behavior: "auto", top: -x }));
    }
    return Rt(Oe(m, at(e, i)), ([x, T, b]) => {
      b && p_() ? nt(e, T - x) : y(-x);
    }), Rt(
      Oe(
        gn(Nn(i, !1), e, g),
        Ke(([x, T, b]) => !x && !b && T !== 0),
        Fe(([x, T]) => T),
        Wr(1)
      ),
      y
    ), He(
      Oe(
        d,
        Fe((x) => ({ top: -x }))
      ),
      t
    ), Rt(
      Oe(
        u,
        at(p, f),
        Fe(([x, { groupIndices: T, lastSize: b, sizeTree: w }, S]) => {
          function E(C) {
            return C * (b + S);
          }
          if (T.length === 0)
            return E(x);
          {
            let C = 0;
            const R = el(w, 0);
            let M = 0, v = 0;
            for (; M < x; ) {
              M++, C += R;
              let I = T.length === v + 1 ? 1 / 0 : T[v + 1] - T[v] - 1;
              M + I > x && (C -= R, I = x - M + 1), M += I, C += E(I), v++;
            }
            return C;
          }
        })
      ),
      (x) => {
        nt(e, x), requestAnimationFrame(() => {
          nt(t, { top: x }), requestAnimationFrame(() => {
            nt(e, 0), nt(g, !1);
          });
        });
      }
    ), { deviation: e };
  },
  jt(Hn, Pl, ji, pr, si, ym)
), m_ = St(
  ([
    e,
    t,
    n,
    o,
    r,
    i,
    a,
    l,
    c,
    u
  ]) => ({
    ...e,
    ...t,
    ...n,
    ...o,
    ...r,
    ...i,
    ...a,
    ...l,
    ...c,
    ...u
  }),
  jt(
    wm,
    s_,
    ai,
    rS,
    oS,
    a_,
    o_,
    Sm,
    c_,
    si
  )
), sS = St(
  ([
    {
      data: e,
      defaultItemSize: t,
      firstItemIndex: n,
      fixedItemSize: o,
      gap: r,
      groupIndices: i,
      itemSize: a,
      sizeRanges: l,
      sizes: c,
      statefulTotalCount: u,
      totalCount: f,
      trackItemSizes: d
    },
    { initialItemFinalLocationReached: p, initialTopMostItemIndex: h, scrolledToInitialItem: g },
    m,
    y,
    x,
    { listState: T, topItemsIndexes: b, ...w },
    { scrollToIndex: S },
    E,
    { topItemCount: C },
    { groupCounts: R },
    M
  ]) => (He(w.rangeChanged, M.scrollSeekRangeChanged), He(
    Oe(
      M.windowViewportRect,
      Fe((v) => v.visibleHeight)
    ),
    m.viewportHeight
  ), {
    data: e,
    defaultItemHeight: t,
    firstItemIndex: n,
    fixedItemHeight: o,
    gap: r,
    groupCounts: R,
    initialItemFinalLocationReached: p,
    initialTopMostItemIndex: h,
    scrolledToInitialItem: g,
    sizeRanges: l,
    topItemCount: C,
    topItemsIndexes: b,
    // input
    totalCount: f,
    ...x,
    groupIndices: i,
    itemSize: a,
    listState: T,
    scrollToIndex: S,
    // output
    statefulTotalCount: u,
    trackItemSizes: d,
    // exported from stateFlagsSystem
    ...w,
    // the bag of IO from featureGroup1System
    ...M,
    ...m,
    sizes: c,
    ...y
  }),
  jt(
    pr,
    kl,
    Hn,
    u_,
    i_,
    ji,
    Rl,
    h_,
    f_,
    Jw,
    m_
  )
);
function g_(e, t) {
  const n = {}, o = {};
  let r = 0;
  const i = e.length;
  for (; r < i; )
    o[e[r]] = 1, r += 1;
  for (const a in t)
    Object.hasOwn(o, a) || (n[a] = t[a]);
  return n;
}
const lc = typeof document < "u" ? Z.useLayoutEffect : Z.useEffect;
function aS(e, t, n) {
  const o = Object.keys(t.required || {}), r = Object.keys(t.optional || {}), i = Object.keys(t.methods || {}), a = Object.keys(t.events || {}), l = Z.createContext({});
  function c(y, x) {
    y.propsReady && nt(y.propsReady, !1);
    for (const T of o) {
      const b = y[t.required[T]];
      nt(b, x[T]);
    }
    for (const T of r)
      if (T in x) {
        const b = y[t.optional[T]];
        nt(b, x[T]);
      }
    y.propsReady && nt(y.propsReady, !0);
  }
  function u(y) {
    return i.reduce((x, T) => (x[T] = (b) => {
      const w = y[t.methods[T]];
      nt(w, b);
    }, x), {});
  }
  function f(y) {
    return a.reduce((x, T) => (x[T] = PM(y[t.events[T]]), x), {});
  }
  const d = Z.forwardRef((y, x) => {
    const { children: T, ...b } = y, [w] = Z.useState(() => ld(MM(e), (C) => {
      c(C, b);
    })), [S] = Z.useState(Wy(f, w));
    lc(() => {
      for (const C of a)
        C in b && Rt(S[C], b[C]);
      return () => {
        Object.values(S).map(mm);
      };
    }, [b, S, w]), lc(() => {
      c(w, b);
    }), Z.useImperativeHandle(x, Hy(u(w)));
    const E = n;
    return /* @__PURE__ */ $(l.Provider, { value: w, children: n ? /* @__PURE__ */ $(E, { ...g_([...o, ...r, ...a], b), children: T }) : T });
  }), p = (y) => Z.useCallback(jw(nt, Z.useContext(l)[y]), [y]), h = (y) => {
    const x = Z.useContext(l)[y], T = Z.useCallback(
      (b) => Rt(x, b),
      [x]
    );
    return Z.useSyncExternalStore(
      T,
      () => Pn(x),
      () => Pn(x)
    );
  }, g = (y) => {
    const x = Z.useContext(l)[y], [T, b] = Z.useState(Wy(Pn, x));
    return lc(
      () => Rt(x, (w) => {
        w !== T && b(Hy(w));
      }),
      [x, T]
    ), T;
  }, m = Z.version.startsWith("18") ? h : g;
  return {
    Component: d,
    useEmitter: (y, x) => {
      const T = Z.useContext(l)[y];
      lc(() => Rt(T, x), [x, T]);
    },
    useEmitterValue: m,
    usePublisher: p
  };
}
const lS = Z.createContext(void 0), cS = Z.createContext(void 0), uS = typeof document < "u" ? Z.useLayoutEffect : Z.useEffect;
function kf(e) {
  return "self" in e;
}
function y_(e) {
  return "body" in e;
}
function dS(e, t, n, o = Xs, r, i) {
  const a = Z.useRef(null), l = Z.useRef(null), c = Z.useRef(null), u = Z.useCallback(
    (p) => {
      let h, g, m;
      const y = p.target;
      if (y_(y) || kf(y)) {
        const T = kf(y) ? y : y.defaultView;
        m = i ? T.scrollX : T.scrollY, h = i ? T.document.documentElement.scrollWidth : T.document.documentElement.scrollHeight, g = i ? T.innerWidth : T.innerHeight;
      } else
        m = i ? y.scrollLeft : y.scrollTop, h = i ? y.scrollWidth : y.scrollHeight, g = i ? y.offsetWidth : y.offsetHeight;
      const x = () => {
        e({
          scrollHeight: h,
          scrollTop: Math.max(m, 0),
          viewportHeight: g
        });
      };
      p.suppressFlushSync ? x() : cs.flushSync(x), l.current !== null && (m === l.current || m <= 0 || m === h - g) && (l.current = null, t(!0), c.current && (clearTimeout(c.current), c.current = null));
    },
    [e, t]
  );
  Z.useEffect(() => {
    const p = r || a.current;
    return o(r || a.current), u({ suppressFlushSync: !0, target: p }), p.addEventListener("scroll", u, { passive: !0 }), () => {
      o(null), p.removeEventListener("scroll", u);
    };
  }, [a, u, n, o, r]);
  function f(p) {
    const h = a.current;
    if (!h || (i ? "offsetWidth" in h && h.offsetWidth === 0 : "offsetHeight" in h && h.offsetHeight === 0))
      return;
    const g = p.behavior === "smooth";
    let m, y, x;
    kf(h) ? (y = Math.max(
      Gr(h.document.documentElement, i ? "width" : "height"),
      i ? h.document.documentElement.scrollWidth : h.document.documentElement.scrollHeight
    ), m = i ? h.innerWidth : h.innerHeight, x = i ? window.scrollX : window.scrollY) : (y = h[i ? "scrollWidth" : "scrollHeight"], m = Gr(h, i ? "width" : "height"), x = h[i ? "scrollLeft" : "scrollTop"]);
    const T = y - m;
    if (p.top = Math.ceil(Math.max(Math.min(T, p.top), 0)), tS(m, y) || p.top === x) {
      e({ scrollHeight: y, scrollTop: x, viewportHeight: m }), g && t(!0);
      return;
    }
    g ? (l.current = p.top, c.current && clearTimeout(c.current), c.current = setTimeout(() => {
      c.current = null, l.current = null, t(!0);
    }, 1e3)) : l.current = null, i && (p = { behavior: p.behavior, left: p.top }), h.scrollTo(p);
  }
  function d(p) {
    i && (p = { behavior: p.behavior, left: p.top }), a.current.scrollBy(p);
  }
  return { scrollByCallback: d, scrollerRef: a, scrollToCallback: f };
}
const Pf = "-webkit-sticky", tb = "sticky", fS = iS(() => {
  if (typeof document > "u")
    return tb;
  const e = document.createElement("div");
  return e.style.position = Pf, e.style.position === Pf ? Pf : tb;
});
function Tm(e) {
  return e;
}
const b_ = /* @__PURE__ */ St(() => {
  const e = ke((c) => `Item ${c}`), t = ke(null), n = ke((c) => `Group ${c}`), o = ke({}), r = ke(Tm), i = ke("div"), a = ke(Xs), l = (c, u = null) => Nn(
    Oe(
      o,
      Fe((f) => f[c]),
      zt()
    ),
    u
  );
  return {
    components: o,
    computeItemKey: r,
    context: t,
    EmptyPlaceholder: l("EmptyPlaceholder"),
    FooterComponent: l("Footer"),
    GroupComponent: l("Group", "div"),
    groupContent: n,
    HeaderComponent: l("Header"),
    HeaderFooterTag: i,
    ItemComponent: l("Item", "div"),
    itemContent: e,
    ListComponent: l("List", "div"),
    ScrollerComponent: l("Scroller", "div"),
    scrollerRef: a,
    ScrollSeekPlaceholder: l("ScrollSeekPlaceholder"),
    TopItemListComponent: l("TopItemList")
  };
}), v_ = /* @__PURE__ */ St(
  ([e, t]) => ({ ...e, ...t }),
  jt(sS, b_)
), x_ = ({ height: e }) => /* @__PURE__ */ $("div", { style: { height: e } }), w_ = { overflowAnchor: "none", position: fS(), zIndex: 1 }, pS = { overflowAnchor: "none" }, S_ = { ...pS, display: "inline-block", height: "100%" }, nb = /* @__PURE__ */ Z.memo(function({ showTopList: e = !1 }) {
  const t = Xe("listState"), n = Oo("sizeRanges"), o = Xe("useWindowScroll"), r = Xe("customScrollParent"), i = Oo("windowScrollContainerState"), a = Oo("scrollContainerState"), l = r || o ? i : a, c = Xe("itemContent"), u = Xe("context"), f = Xe("groupContent"), d = Xe("trackItemSizes"), p = Xe("itemSize"), h = Xe("log"), g = Oo("gap"), m = Xe("horizontalDirection"), { callbackRef: y } = DM(
    n,
    p,
    d,
    e ? Xs : l,
    h,
    g,
    r,
    m,
    Xe("skipAnimationFrameInResizeObserver")
  ), [x, T] = Z.useState(0);
  Em("deviation", (O) => {
    x !== O && T(O);
  });
  const b = Xe("EmptyPlaceholder"), w = Xe("ScrollSeekPlaceholder") || x_, S = Xe("ListComponent"), E = Xe("ItemComponent"), C = Xe("GroupComponent"), R = Xe("computeItemKey"), M = Xe("isSeeking"), v = Xe("groupIndices").length > 0, I = Xe("alignToBottom"), k = Xe("initialItemFinalLocationReached"), A = e ? {} : {
    boxSizing: "border-box",
    ...m ? {
      display: "inline-block",
      height: "100%",
      marginLeft: x !== 0 ? x : I ? "auto" : 0,
      paddingLeft: t.offsetTop,
      paddingRight: t.offsetBottom,
      whiteSpace: "nowrap"
    } : {
      marginTop: x !== 0 ? x : I ? "auto" : 0,
      paddingBottom: t.offsetBottom,
      paddingTop: t.offsetTop
    },
    ...k ? {} : { visibility: "hidden" }
  };
  return !e && t.totalCount === 0 && b ? /* @__PURE__ */ $(b, { ...En(b, u) }) : /* @__PURE__ */ $(
    S,
    {
      ...En(S, u),
      "data-testid": e ? "virtuoso-top-item-list" : "virtuoso-item-list",
      ref: y,
      style: A,
      children: (e ? t.topItems : t.items).map((O) => {
        const _ = O.originalIndex, N = R(_ + t.firstItemIndex, O.data, u);
        return M ? /* @__PURE__ */ Oi(
          w,
          {
            ...En(w, u),
            height: O.size,
            index: O.index,
            key: N,
            type: O.type || "item",
            ...O.type === "group" ? {} : { groupIndex: O.groupIndex }
          }
        ) : O.type === "group" ? /* @__PURE__ */ Oi(
          C,
          {
            ...En(C, u),
            "data-index": _,
            "data-item-index": O.index,
            "data-known-size": O.size,
            key: N,
            style: w_
          },
          f(O.index, u)
        ) : /* @__PURE__ */ Oi(
          E,
          {
            ...En(E, u),
            ...O_(E, O.data),
            "data-index": _,
            "data-item-group-index": O.groupIndex,
            "data-item-index": O.index,
            "data-known-size": O.size,
            key: N,
            style: m ? S_ : pS
          },
          v ? c(O.index, O.groupIndex, O.data, u) : c(O.index, O.data, u)
        );
      })
    }
  );
}), T_ = {
  height: "100%",
  outline: "none",
  overflowY: "auto",
  position: "relative",
  WebkitOverflowScrolling: "touch"
}, E_ = {
  outline: "none",
  overflowX: "auto",
  position: "relative"
}, dd = (e) => ({
  height: "100%",
  position: "absolute",
  top: 0,
  width: "100%",
  ...e ? { display: "flex", flexDirection: "column" } : {}
}), C_ = {
  position: fS(),
  top: 0,
  width: "100%",
  zIndex: 1
};
function En(e, t) {
  if (typeof e != "string")
    return { context: t };
}
function O_(e, t) {
  return { item: typeof e == "string" ? void 0 : t };
}
const $_ = /* @__PURE__ */ Z.memo(function() {
  const e = Xe("HeaderComponent"), t = Oo("headerHeight"), n = Xe("HeaderFooterTag"), o = zi(
    Z.useMemo(
      () => (i) => {
        t(Gr(i, "height"));
      },
      [t]
    ),
    !0,
    Xe("skipAnimationFrameInResizeObserver")
  ), r = Xe("context");
  return e ? /* @__PURE__ */ $(n, { ref: o, children: /* @__PURE__ */ $(e, { ...En(e, r) }) }) : null;
}), I_ = /* @__PURE__ */ Z.memo(function() {
  const e = Xe("FooterComponent"), t = Oo("footerHeight"), n = Xe("HeaderFooterTag"), o = zi(
    Z.useMemo(
      () => (i) => {
        t(Gr(i, "height"));
      },
      [t]
    ),
    !0,
    Xe("skipAnimationFrameInResizeObserver")
  ), r = Xe("context");
  return e ? /* @__PURE__ */ $(n, { ref: o, children: /* @__PURE__ */ $(e, { ...En(e, r) }) }) : null;
});
function hS({ useEmitter: e, useEmitterValue: t, usePublisher: n }) {
  return Z.memo(function({ children: o, style: r, ...i }) {
    const a = n("scrollContainerState"), l = t("ScrollerComponent"), c = n("smoothScrollTargetReached"), u = t("scrollerRef"), f = t("context"), d = t("horizontalDirection") || !1, { scrollByCallback: p, scrollerRef: h, scrollToCallback: g } = dS(
      a,
      c,
      l,
      u,
      void 0,
      d
    );
    return e("scrollTo", g), e("scrollBy", p), /* @__PURE__ */ $(
      l,
      {
        "data-testid": "virtuoso-scroller",
        "data-virtuoso-scroller": !0,
        ref: h,
        style: { ...d ? E_ : T_, ...r },
        tabIndex: 0,
        ...i,
        ...En(l, f),
        children: o
      }
    );
  });
}
function mS({ useEmitter: e, useEmitterValue: t, usePublisher: n }) {
  return Z.memo(function({ children: o, style: r, ...i }) {
    const a = n("windowScrollContainerState"), l = t("ScrollerComponent"), c = n("smoothScrollTargetReached"), u = t("totalListHeight"), f = t("deviation"), d = t("customScrollParent"), p = t("context"), h = Z.useRef(null), g = t("scrollerRef"), { scrollByCallback: m, scrollerRef: y, scrollToCallback: x } = dS(
      a,
      c,
      l,
      g,
      d
    );
    return uS(() => {
      var T;
      return y.current = d || ((T = h.current) == null ? void 0 : T.ownerDocument.defaultView), () => {
        y.current = null;
      };
    }, [y, d]), e("windowScrollTo", x), e("scrollBy", m), /* @__PURE__ */ $(
      l,
      {
        ref: h,
        "data-virtuoso-scroller": !0,
        style: { position: "relative", ...r, ...u !== 0 ? { height: u + f } : {} },
        ...i,
        ...En(l, p),
        children: o
      }
    );
  });
}
const R_ = ({ children: e }) => {
  const t = Z.useContext(lS), n = Oo("viewportHeight"), o = Oo("fixedItemHeight"), r = Xe("alignToBottom"), i = Xe("horizontalDirection"), a = Z.useMemo(
    () => zw(n, (c) => Gr(c, i ? "width" : "height")),
    [n, i]
  ), l = zi(a, !0, Xe("skipAnimationFrameInResizeObserver"));
  return Z.useEffect(() => {
    t && (n(t.viewportHeight), o(t.itemHeight));
  }, [t, n, o]), /* @__PURE__ */ $("div", { "data-viewport-type": "element", ref: l, style: dd(r), children: e });
}, k_ = ({ children: e }) => {
  const t = Z.useContext(lS), n = Oo("windowViewportRect"), o = Oo("fixedItemHeight"), r = Xe("customScrollParent"), i = Hw(
    n,
    r,
    Xe("skipAnimationFrameInResizeObserver")
  ), a = Xe("alignToBottom");
  return Z.useEffect(() => {
    t && (o(t.itemHeight), n({ offsetTop: 0, visibleHeight: t.viewportHeight, visibleWidth: 100 }));
  }, [t, n, o]), /* @__PURE__ */ $("div", { "data-viewport-type": "window", ref: i, style: dd(a), children: e });
}, P_ = ({ children: e }) => {
  const t = Xe("TopItemListComponent") || "div", n = Xe("headerHeight"), o = { ...C_, marginTop: `${n}px` }, r = Xe("context");
  return /* @__PURE__ */ $(t, { style: o, ...En(t, r), children: e });
}, N_ = /* @__PURE__ */ Z.memo(function(e) {
  const t = Xe("useWindowScroll"), n = Xe("topItemsIndexes").length > 0, o = Xe("customScrollParent"), r = Xe("context"), i = o || t ? A_ : __, a = o || t ? k_ : R_;
  return /* @__PURE__ */ Te(i, { ...e, ...En(i, r), children: [
    n && /* @__PURE__ */ $(P_, { children: /* @__PURE__ */ $(nb, { showTopList: !0 }) }),
    /* @__PURE__ */ Te(a, { children: [
      /* @__PURE__ */ $($_, {}),
      /* @__PURE__ */ $(nb, {}),
      /* @__PURE__ */ $(I_, {})
    ] })
  ] });
}), {
  Component: M_,
  useEmitter: Em,
  useEmitterValue: Xe,
  usePublisher: Oo
} = /* @__PURE__ */ aS(
  v_,
  {
    events: {
      atBottomStateChange: "atBottomStateChange",
      atTopStateChange: "atTopStateChange",
      endReached: "endReached",
      groupIndices: "groupIndices",
      isScrolling: "isScrolling",
      itemsRendered: "itemsRendered",
      rangeChanged: "rangeChanged",
      startReached: "startReached",
      totalListHeightChanged: "totalListHeightChanged"
    },
    methods: {
      autoscrollToBottom: "autoscrollToBottom",
      getState: "getState",
      scrollBy: "scrollBy",
      scrollIntoView: "scrollIntoView",
      scrollTo: "scrollTo",
      scrollToIndex: "scrollToIndex"
    },
    optional: {
      alignToBottom: "alignToBottom",
      atBottomThreshold: "atBottomThreshold",
      atTopThreshold: "atTopThreshold",
      components: "components",
      computeItemKey: "computeItemKey",
      context: "context",
      customScrollParent: "customScrollParent",
      data: "data",
      defaultItemHeight: "defaultItemHeight",
      firstItemIndex: "firstItemIndex",
      fixedItemHeight: "fixedItemHeight",
      followOutput: "followOutput",
      groupContent: "groupContent",
      groupCounts: "groupCounts",
      headerFooterTag: "HeaderFooterTag",
      horizontalDirection: "horizontalDirection",
      increaseViewportBy: "increaseViewportBy",
      initialItemCount: "initialItemCount",
      initialScrollTop: "initialScrollTop",
      initialTopMostItemIndex: "initialTopMostItemIndex",
      itemContent: "itemContent",
      itemSize: "itemSize",
      logLevel: "logLevel",
      overscan: "overscan",
      restoreStateFrom: "restoreStateFrom",
      scrollerRef: "scrollerRef",
      scrollSeekConfiguration: "scrollSeekConfiguration",
      skipAnimationFrameInResizeObserver: "skipAnimationFrameInResizeObserver",
      topItemCount: "topItemCount",
      totalCount: "totalCount",
      useWindowScroll: "useWindowScroll"
    },
    required: {}
  },
  N_
), __ = /* @__PURE__ */ hS({ useEmitter: Em, useEmitterValue: Xe, usePublisher: Oo }), A_ = /* @__PURE__ */ mS({ useEmitter: Em, useEmitterValue: Xe, usePublisher: Oo }), D_ = M_, L_ = /* @__PURE__ */ St(() => {
  const e = ke((c) => /* @__PURE__ */ Te("td", { children: [
    "Item $",
    c
  ] })), t = ke(null), n = ke(null), o = ke(null), r = ke({}), i = ke(Tm), a = ke(Xs), l = (c, u = null) => Nn(
    Oe(
      r,
      Fe((f) => f[c]),
      zt()
    ),
    u
  );
  return {
    components: r,
    computeItemKey: i,
    context: t,
    EmptyPlaceholder: l("EmptyPlaceholder"),
    FillerRow: l("FillerRow"),
    fixedFooterContent: o,
    fixedHeaderContent: n,
    itemContent: e,
    ScrollerComponent: l("Scroller", "div"),
    scrollerRef: a,
    ScrollSeekPlaceholder: l("ScrollSeekPlaceholder"),
    TableBodyComponent: l("TableBody", "tbody"),
    TableComponent: l("Table", "table"),
    TableFooterComponent: l("TableFoot", "tfoot"),
    TableHeadComponent: l("TableHead", "thead"),
    TableRowComponent: l("TableRow", "tr")
  };
});
jt(sS, L_);
const ob = {
  bottom: 0,
  itemHeight: 0,
  items: [],
  itemWidth: 0,
  offsetBottom: 0,
  offsetTop: 0,
  top: 0
}, B_ = {
  bottom: 0,
  itemHeight: 0,
  items: [{ index: 0 }],
  itemWidth: 0,
  offsetBottom: 0,
  offsetTop: 0,
  top: 0
}, { ceil: rb, floor: uu, max: Ma, min: Nf, round: ib } = Math;
function sb(e, t, n) {
  return Array.from({ length: t - e + 1 }).map((o, r) => ({ data: n === null ? null : n[r + e], index: r + e }));
}
function F_(e) {
  return {
    ...B_,
    items: e
  };
}
function cc(e, t) {
  return e && e.width === t.width && e.height === t.height;
}
function z_(e, t) {
  return e && e.column === t.column && e.row === t.row;
}
const j_ = /* @__PURE__ */ St(
  ([
    { increaseViewportBy: e, listBoundary: t, overscan: n, visibleRange: o },
    { footerHeight: r, headerHeight: i, scrollBy: a, scrollContainerState: l, scrollTo: c, scrollTop: u, smoothScrollTargetReached: f, viewportHeight: d },
    p,
    h,
    { didMount: g, propsReady: m },
    { customScrollParent: y, useWindowScroll: x, windowScrollContainerState: T, windowScrollTo: b, windowViewportRect: w },
    S
  ]) => {
    const E = ke(0), C = ke(0), R = ke(ob), M = ke({ height: 0, width: 0 }), v = ke({ height: 0, width: 0 }), I = mt(), k = mt(), A = ke(0), O = ke(null), _ = ke({ column: 0, row: 0 }), N = mt(), L = mt(), F = ke(!1), D = ke(0), B = ke(!0), z = ke(!1), U = ke(!1);
    Rt(
      Oe(
        g,
        at(D),
        Ke(([W, ee]) => !!ee)
      ),
      () => {
        nt(B, !1);
      }
    ), Rt(
      Oe(
        gn(g, B, v, M, D, z),
        Ke(([W, ee, G, re, , V]) => W && !ee && G.height !== 0 && re.height !== 0 && !V)
      ),
      ([, , , , W]) => {
        nt(z, !0), vm(1, () => {
          nt(I, W);
        }), dr(Oe(u), () => {
          nt(t, [0, 0]), nt(B, !0);
        });
      }
    ), He(
      Oe(
        L,
        Ke((W) => W != null && W.scrollTop > 0),
        er(0)
      ),
      C
    ), Rt(
      Oe(
        g,
        at(L),
        Ke(([, W]) => W != null)
      ),
      ([, W]) => {
        W && (nt(M, W.viewport), nt(v, W.item), nt(_, W.gap), W.scrollTop > 0 && (nt(F, !0), dr(Oe(u, Ns(1)), (ee) => {
          nt(F, !1);
        }), nt(c, { top: W.scrollTop })));
      }
    ), He(
      Oe(
        M,
        Fe(({ height: W }) => W)
      ),
      d
    ), He(
      Oe(
        gn(
          Ye(M, cc),
          Ye(v, cc),
          Ye(_, (W, ee) => W && W.column === ee.column && W.row === ee.row),
          Ye(u)
        ),
        Fe(([W, ee, G, re]) => ({
          gap: G,
          item: ee,
          scrollTop: re,
          viewport: W
        }))
      ),
      N
    ), He(
      Oe(
        gn(
          Ye(E),
          o,
          Ye(_, z_),
          Ye(v, cc),
          Ye(M, cc),
          Ye(O),
          Ye(C),
          Ye(F),
          Ye(B),
          Ye(D)
        ),
        Ke(([, , , , , , , W]) => !W),
        Fe(
          ([
            W,
            [ee, G],
            re,
            V,
            de,
            ue,
            xe,
            ,
            Ae,
            we
          ]) => {
            const { column: De, row: Ce } = re, { height: Be, width: Me } = V, { width: j } = de;
            if (xe === 0 && (W === 0 || j === 0))
              return ob;
            if (Me === 0) {
              const le = xm(we, W), ae = le + Math.max(xe - 1, 0);
              return F_(sb(le, ae, ue));
            }
            const J = gS(j, Me, De);
            let ie, Q;
            Ae ? ee === 0 && G === 0 && xe > 0 ? (ie = 0, Q = xe - 1) : (ie = J * uu((ee + Ce) / (Be + Ce)), Q = J * rb((G + Ce) / (Be + Ce)) - 1, Q = Nf(W - 1, Ma(Q, J - 1)), ie = Nf(Q, Ma(0, ie))) : (ie = 0, Q = -1);
            const H = sb(ie, Q, ue), { bottom: X, top: se } = ab(de, re, V, H), ye = rb(W / J), he = ye * Be + (ye - 1) * Ce - X;
            return { bottom: X, itemHeight: Be, items: H, itemWidth: Me, offsetBottom: he, offsetTop: se, top: se };
          }
        )
      ),
      R
    ), He(
      Oe(
        O,
        Ke((W) => W !== null),
        Fe((W) => W.length)
      ),
      E
    ), He(
      Oe(
        gn(M, v, R, _),
        Ke(([W, ee, { items: G }]) => G.length > 0 && ee.height !== 0 && W.height !== 0),
        Fe(([W, ee, { items: G }, re]) => {
          const { bottom: V, top: de } = ab(W, re, ee, G);
          return [de, V];
        }),
        zt(tl)
      ),
      t
    );
    const q = ke(!1);
    He(
      Oe(
        u,
        at(q),
        Fe(([W, ee]) => ee || W !== 0)
      ),
      q
    );
    const Y = uo(
      Oe(
        gn(R, E),
        Ke(([{ items: W }]) => W.length > 0),
        at(q),
        Ke(([[W, ee], G]) => {
          const re = W.items[W.items.length - 1].index === ee - 1;
          return (G || W.bottom > 0 && W.itemHeight > 0 && W.offsetBottom === 0 && W.items.length === ee) && re;
        }),
        Fe(([[, W]]) => W - 1),
        zt()
      )
    ), K = uo(
      Oe(
        Ye(R),
        Ke(({ items: W }) => W.length > 0 && W[0].index === 0),
        er(0),
        zt()
      )
    ), te = uo(
      Oe(
        Ye(R),
        at(F),
        Ke(([{ items: W }, ee]) => W.length > 0 && !ee),
        Fe(([{ items: W }]) => ({
          endIndex: W[W.length - 1].index,
          startIndex: W[0].index
        })),
        zt(Gw),
        Wr(0)
      )
    );
    He(te, h.scrollSeekRangeChanged), He(
      Oe(
        I,
        at(M, v, E, _),
        Fe(([W, ee, G, re, V]) => {
          const de = eS(W), { align: ue, behavior: xe, offset: Ae } = de;
          let we = de.index;
          we === "LAST" && (we = re - 1), we = Ma(0, we, Nf(re - 1, we));
          let De = Vp(ee, V, G, we);
          return ue === "end" ? De = ib(De - ee.height + G.height) : ue === "center" && (De = ib(De - ee.height / 2 + G.height / 2)), Ae && (De += Ae), { behavior: xe, top: De };
        })
      ),
      c
    );
    const ne = Nn(
      Oe(
        R,
        Fe((W) => W.offsetBottom + W.bottom)
      ),
      0
    );
    return He(
      Oe(
        w,
        Fe((W) => ({ height: W.visibleHeight, width: W.visibleWidth }))
      ),
      M
    ), {
      customScrollParent: y,
      // input
      data: O,
      deviation: A,
      footerHeight: r,
      gap: _,
      headerHeight: i,
      increaseViewportBy: e,
      initialItemCount: C,
      itemDimensions: v,
      overscan: n,
      restoreStateFrom: L,
      scrollBy: a,
      scrollContainerState: l,
      scrollHeight: k,
      scrollTo: c,
      scrollToIndex: I,
      scrollTop: u,
      smoothScrollTargetReached: f,
      totalCount: E,
      useWindowScroll: x,
      viewportDimensions: M,
      windowScrollContainerState: T,
      windowScrollTo: b,
      windowViewportRect: w,
      ...h,
      // output
      gridState: R,
      horizontalDirection: U,
      initialTopMostItemIndex: D,
      totalListHeight: ne,
      ...p,
      endReached: Y,
      propsReady: m,
      rangeChanged: te,
      startReached: K,
      stateChanged: N,
      stateRestoreInProgress: F,
      ...S
    };
  },
  jt(wm, Hn, Pl, rS, ai, Sm, si)
);
function gS(e, t, n) {
  return Ma(1, uu((e + n) / (uu(t) + n)));
}
function ab(e, t, n, o) {
  const { height: r } = n;
  if (r === void 0 || o.length === 0)
    return { bottom: 0, top: 0 };
  const i = Vp(e, t, n, o[0].index);
  return { bottom: Vp(e, t, n, o[o.length - 1].index) + r, top: i };
}
function Vp(e, t, n, o) {
  const r = gS(e.width, n.width, t.column), i = uu(o / r), a = i * n.height + Ma(0, i - 1) * t.row;
  return a > 0 ? a + t.row : a;
}
const V_ = /* @__PURE__ */ St(() => {
  const e = ke((d) => `Item ${d}`), t = ke({}), n = ke(null), o = ke("virtuoso-grid-item"), r = ke("virtuoso-grid-list"), i = ke(Tm), a = ke("div"), l = ke(Xs), c = (d, p = null) => Nn(
    Oe(
      t,
      Fe((h) => h[d]),
      zt()
    ),
    p
  ), u = ke(!1), f = ke(!1);
  return He(Ye(f), u), {
    components: t,
    computeItemKey: i,
    context: n,
    FooterComponent: c("Footer"),
    HeaderComponent: c("Header"),
    headerFooterTag: a,
    itemClassName: o,
    ItemComponent: c("Item", "div"),
    itemContent: e,
    listClassName: r,
    ListComponent: c("List", "div"),
    readyStateChanged: u,
    reportReadyState: f,
    ScrollerComponent: c("Scroller", "div"),
    scrollerRef: l,
    ScrollSeekPlaceholder: c("ScrollSeekPlaceholder", "div")
  };
}), H_ = /* @__PURE__ */ St(
  ([e, t]) => ({ ...e, ...t }),
  jt(j_, V_)
), W_ = /* @__PURE__ */ Z.memo(function() {
  const e = Wt("gridState"), t = Wt("listClassName"), n = Wt("itemClassName"), o = Wt("itemContent"), r = Wt("computeItemKey"), i = Wt("isSeeking"), a = $o("scrollHeight"), l = Wt("ItemComponent"), c = Wt("ListComponent"), u = Wt("ScrollSeekPlaceholder"), f = Wt("context"), d = $o("itemDimensions"), p = $o("gap"), h = Wt("log"), g = Wt("stateRestoreInProgress"), m = $o("reportReadyState"), y = zi(
    Z.useMemo(
      () => (x) => {
        const T = x.parentElement.parentElement.scrollHeight;
        a(T);
        const b = x.firstChild;
        if (b) {
          const { height: w, width: S } = b.getBoundingClientRect();
          d({ height: w, width: S });
        }
        p({
          column: lb("column-gap", getComputedStyle(x).columnGap, h),
          row: lb("row-gap", getComputedStyle(x).rowGap, h)
        });
      },
      [a, d, p, h]
    ),
    !0,
    !1
  );
  return uS(() => {
    e.itemHeight > 0 && e.itemWidth > 0 && m(!0);
  }, [e]), g ? null : /* @__PURE__ */ $(
    c,
    {
      className: t,
      ref: y,
      ...En(c, f),
      "data-testid": "virtuoso-item-list",
      style: { paddingBottom: e.offsetBottom, paddingTop: e.offsetTop },
      children: e.items.map((x) => {
        const T = r(x.index, x.data, f);
        return i ? /* @__PURE__ */ $(
          u,
          {
            ...En(u, f),
            height: e.itemHeight,
            index: x.index,
            width: e.itemWidth
          },
          T
        ) : /* @__PURE__ */ Oi(
          l,
          {
            ...En(l, f),
            className: n,
            "data-index": x.index,
            key: T
          },
          o(x.index, x.data, f)
        );
      })
    }
  );
}), U_ = Z.memo(function() {
  const e = Wt("HeaderComponent"), t = $o("headerHeight"), n = Wt("headerFooterTag"), o = zi(
    Z.useMemo(
      () => (i) => {
        t(Gr(i, "height"));
      },
      [t]
    ),
    !0,
    !1
  ), r = Wt("context");
  return e ? /* @__PURE__ */ $(n, { ref: o, children: /* @__PURE__ */ $(e, { ...En(e, r) }) }) : null;
}), q_ = Z.memo(function() {
  const e = Wt("FooterComponent"), t = $o("footerHeight"), n = Wt("headerFooterTag"), o = zi(
    Z.useMemo(
      () => (i) => {
        t(Gr(i, "height"));
      },
      [t]
    ),
    !0,
    !1
  ), r = Wt("context");
  return e ? /* @__PURE__ */ $(n, { ref: o, children: /* @__PURE__ */ $(e, { ...En(e, r) }) }) : null;
}), K_ = ({ children: e }) => {
  const t = Z.useContext(cS), n = $o("itemDimensions"), o = $o("viewportDimensions"), r = zi(
    Z.useMemo(
      () => (i) => {
        o(i.getBoundingClientRect());
      },
      [o]
    ),
    !0,
    !1
  );
  return Z.useEffect(() => {
    t && (o({ height: t.viewportHeight, width: t.viewportWidth }), n({ height: t.itemHeight, width: t.itemWidth }));
  }, [t, o, n]), /* @__PURE__ */ $("div", { ref: r, style: dd(!1), children: e });
}, Y_ = ({ children: e }) => {
  const t = Z.useContext(cS), n = $o("windowViewportRect"), o = $o("itemDimensions"), r = Wt("customScrollParent"), i = Hw(n, r, !1);
  return Z.useEffect(() => {
    t && (o({ height: t.itemHeight, width: t.itemWidth }), n({ offsetTop: 0, visibleHeight: t.viewportHeight, visibleWidth: t.viewportWidth }));
  }, [t, n, o]), /* @__PURE__ */ $("div", { ref: i, style: dd(!1), children: e });
}, G_ = /* @__PURE__ */ Z.memo(function({ ...e }) {
  const t = Wt("useWindowScroll"), n = Wt("customScrollParent"), o = n || t ? Q_ : Z_, r = n || t ? Y_ : K_, i = Wt("context");
  return /* @__PURE__ */ $(o, { ...e, ...En(o, i), children: /* @__PURE__ */ Te(r, { children: [
    /* @__PURE__ */ $(U_, {}),
    /* @__PURE__ */ $(W_, {}),
    /* @__PURE__ */ $(q_, {})
  ] }) });
}), {
  Component: X_,
  useEmitter: yS,
  useEmitterValue: Wt,
  usePublisher: $o
} = /* @__PURE__ */ aS(
  H_,
  {
    events: {
      atBottomStateChange: "atBottomStateChange",
      atTopStateChange: "atTopStateChange",
      endReached: "endReached",
      isScrolling: "isScrolling",
      rangeChanged: "rangeChanged",
      readyStateChanged: "readyStateChanged",
      startReached: "startReached",
      stateChanged: "stateChanged"
    },
    methods: {
      scrollBy: "scrollBy",
      scrollTo: "scrollTo",
      scrollToIndex: "scrollToIndex"
    },
    optional: {
      components: "components",
      computeItemKey: "computeItemKey",
      context: "context",
      customScrollParent: "customScrollParent",
      data: "data",
      headerFooterTag: "headerFooterTag",
      increaseViewportBy: "increaseViewportBy",
      initialItemCount: "initialItemCount",
      initialTopMostItemIndex: "initialTopMostItemIndex",
      itemClassName: "itemClassName",
      itemContent: "itemContent",
      listClassName: "listClassName",
      logLevel: "logLevel",
      overscan: "overscan",
      restoreStateFrom: "restoreStateFrom",
      scrollerRef: "scrollerRef",
      scrollSeekConfiguration: "scrollSeekConfiguration",
      totalCount: "totalCount",
      useWindowScroll: "useWindowScroll"
    }
  },
  G_
), Z_ = /* @__PURE__ */ hS({ useEmitter: yS, useEmitterValue: Wt, usePublisher: $o }), Q_ = /* @__PURE__ */ mS({ useEmitter: yS, useEmitterValue: Wt, usePublisher: $o });
function lb(e, t, n) {
  return t !== "normal" && !(t != null && t.endsWith("px")) && n(`${e} was not resolved to pixel value correctly`, t, fo.WARN), t === "normal" ? 0 : parseInt(t ?? "0", 10);
}
const J_ = X_, du = Ie(({ height: e, width: t, isVirtualized: n, items: o, renderItem: r, sx: i }) => n ? /* @__PURE__ */ $(
  dn,
  {
    className: "VenomousUI-Menu",
    sx: { height: e || "100%", width: t || "100%", ...i },
    children: /* @__PURE__ */ $(
      D_,
      {
        style: { height: "100%", width: "100%" },
        totalCount: o == null ? void 0 : o.length,
        data: o,
        itemContent: (a, l) => r ? r(l, a) : l.label
      }
    )
  }
) : /* @__PURE__ */ $(
  dn,
  {
    className: "VenomousUI-Menu",
    gap: 1,
    sx: {
      height: e || "100%",
      width: t || "100%",
      overflowY: "scroll",
      overflowX: "hidden",
      ...i,
      "& > .VenomousUI-MenuItem": {
        width: "100% !important"
      }
      // '& .VenomousUI-MenuItem': { mb: '4px' },
      // '& .VenomousUI-MenuItem:last-child': { mb: 0 },
    },
    children: o == null ? void 0 : o.map((a, l) => /* @__PURE__ */ $(ZC, { children: r ? r(a, l) : a.label }, a.label))
  }
));
du.displayName = "Menu";
const _a = Ie(
  ({
    icon: e = "",
    label: t,
    value: n,
    clickable: o,
    disabled: r,
    onClick: i,
    onMouseEnter: a,
    onMouseLeave: l,
    isActive: c,
    sx: u,
    ellipsis: f = !1
  }) => o ? /* @__PURE__ */ $(
    On,
    {
      className: "VenomousUI-MenuItem",
      value: n,
      isGhost: !0,
      text: /* @__PURE__ */ $(Cn, { text: t, ellipsis: f, sx: { textAlign: "left" } }),
      icon: e,
      iconWidth: 28,
      iconPosition: "start",
      onClick: i,
      onMouseEnter: a,
      onMouseLeave: l,
      disabled: r,
      color: c ? "primary" : "auto",
      sx: {
        py: "8px",
        px: "16px",
        width: "100%",
        justifyContent: "flex-start",
        transition: "background-color 0.2s ease; color 0.2s ease",
        backgroundColor: c ? "divider" : "transparent",
        "&:hover": { backgroundColor: "divider" },
        ...u
      }
    }
  ) : /* @__PURE__ */ Te(dn, { row: !0, py: "8px", px: "16px", sx: { width: "100%", ...u }, className: "VenomousUI-MenuItem", children: [
    /* @__PURE__ */ $(Wo, { icon: e, width: 28, color: c ? "primary" : "auto" }),
    /* @__PURE__ */ $(
      Cn,
      {
        text: t,
        ellipsis: f,
        flex: 1,
        textColor: c ? "primary" : "auto",
        sx: { cursor: "default" }
      }
    )
  ] })
);
_a.displayName = "MenuItem";
function eA({ currentPath: e }) {
  const t = ze(
    (o) => {
      let r = o.url;
      if (!r && o.subItems && o.subItems.length > 0) {
        const a = o.subItems.map((l) => l.url).filter(Boolean);
        r = tA(a);
      }
      return !!(r && (e == null ? void 0 : e.startsWith(r)) || o.subItems && o.subItems.some(
        (a) => a.url && (e == null ? void 0 : e.startsWith(a.url))
      ));
    },
    [e]
  ), n = ze(
    (o) => !!(o.url && (e != null && e.startsWith(o.url))),
    [e]
  );
  return {
    checkIsParentItemActive: t,
    checkIsSubItemActive: n
  };
}
function tA(e) {
  if (e.length === 0) return "";
  let t = e[0];
  for (let n = 1; n < e.length; n++)
    for (; e[n].indexOf(t) !== 0; )
      if (t = t.slice(0, -1), !t) return "";
  if (!t.endsWith("/")) {
    const n = t.lastIndexOf("/");
    t = t.slice(0, n + 1);
  }
  return t;
}
function Hp(e) {
  return typeof e == "string";
}
function nA(e) {
  const t = _n(e);
  return t.body === e ? Vo(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function Aa(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function cb(e) {
  return parseInt(Vo(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function oA(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), o = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || o;
}
function ub(e, t, n, o, r) {
  const i = [t, n, ...o];
  [].forEach.call(e.children, (a) => {
    const l = !i.includes(a), c = !oA(a);
    l && c && Aa(a, r);
  });
}
function Mf(e, t) {
  let n = -1;
  return e.some((o, r) => t(o) ? (n = r, !0) : !1), n;
}
function rA(e, t) {
  const n = [], o = e.container;
  if (!t.disableScrollLock) {
    if (nA(o)) {
      const a = Fx(Vo(o));
      n.push({
        value: o.style.paddingRight,
        property: "padding-right",
        el: o
      }), o.style.paddingRight = `${cb(o) + a}px`;
      const l = _n(o).querySelectorAll(".mui-fixed");
      [].forEach.call(l, (c) => {
        n.push({
          value: c.style.paddingRight,
          property: "padding-right",
          el: c
        }), c.style.paddingRight = `${cb(c) + a}px`;
      });
    }
    let i;
    if (o.parentNode instanceof DocumentFragment)
      i = _n(o).body;
    else {
      const a = o.parentElement, l = Vo(o);
      i = (a == null ? void 0 : a.nodeName) === "HTML" && l.getComputedStyle(a).overflowY === "scroll" ? a : o;
    }
    n.push({
      value: i.style.overflow,
      property: "overflow",
      el: i
    }, {
      value: i.style.overflowX,
      property: "overflow-x",
      el: i
    }, {
      value: i.style.overflowY,
      property: "overflow-y",
      el: i
    }), i.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: i,
      el: a,
      property: l
    }) => {
      i ? a.style.setProperty(l, i) : a.style.removeProperty(l);
    });
  };
}
function iA(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
let sA = class {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let o = this.modals.indexOf(t);
    if (o !== -1)
      return o;
    o = this.modals.length, this.modals.push(t), t.modalRef && Aa(t.modalRef, !1);
    const r = iA(n);
    ub(n, t.mount, t.modalRef, r, !0);
    const i = Mf(this.containers, (a) => a.container === n);
    return i !== -1 ? (this.containers[i].modals.push(t), o) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: r
    }), o);
  }
  mount(t, n) {
    const o = Mf(this.containers, (i) => i.modals.includes(t)), r = this.containers[o];
    r.restore || (r.restore = rA(r, n));
  }
  remove(t, n = !0) {
    const o = this.modals.indexOf(t);
    if (o === -1)
      return o;
    const r = Mf(this.containers, (a) => a.modals.includes(t)), i = this.containers[r];
    if (i.modals.splice(i.modals.indexOf(t), 1), this.modals.splice(o, 1), i.modals.length === 0)
      i.restore && i.restore(), t.modalRef && Aa(t.modalRef, n), ub(i.container, t.mount, t.modalRef, i.hiddenSiblings, !1), this.containers.splice(r, 1);
    else {
      const a = i.modals[i.modals.length - 1];
      a.modalRef && Aa(a.modalRef, !1);
    }
    return o;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
};
const aA = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function lA(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function cA(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (o) => e.ownerDocument.querySelector(`input[type="radio"]${o}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function uA(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || cA(e));
}
function dA(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(aA)).forEach((o, r) => {
    const i = lA(o);
    i === -1 || !uA(o) || (i === 0 ? t.push(o) : n.push({
      documentOrder: r,
      tabIndex: i,
      node: o
    }));
  }), n.sort((o, r) => o.tabIndex === r.tabIndex ? o.documentOrder - r.documentOrder : o.tabIndex - r.tabIndex).map((o) => o.node).concat(t);
}
function fA() {
  return !0;
}
function fu(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: o = !1,
    disableRestoreFocus: r = !1,
    getTabbable: i = dA,
    isEnabled: a = fA,
    open: l
  } = e, c = P.useRef(!1), u = P.useRef(null), f = P.useRef(null), d = P.useRef(null), p = P.useRef(null), h = P.useRef(!1), g = P.useRef(null), m = un(ni(t), g), y = P.useRef(null);
  P.useEffect(() => {
    !l || !g.current || (h.current = !n);
  }, [n, l]), P.useEffect(() => {
    if (!l || !g.current)
      return;
    const b = _n(g.current);
    return g.current.contains(b.activeElement) || (g.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), g.current.setAttribute("tabIndex", "-1")), h.current && g.current.focus()), () => {
      r || (d.current && d.current.focus && (c.current = !0, d.current.focus()), d.current = null);
    };
  }, [l]), P.useEffect(() => {
    if (!l || !g.current)
      return;
    const b = _n(g.current), w = (C) => {
      y.current = C, !(o || !a() || C.key !== "Tab") && b.activeElement === g.current && C.shiftKey && (c.current = !0, f.current && f.current.focus());
    }, S = () => {
      var M, v;
      const C = g.current;
      if (C === null)
        return;
      if (!b.hasFocus() || !a() || c.current) {
        c.current = !1;
        return;
      }
      if (C.contains(b.activeElement) || o && b.activeElement !== u.current && b.activeElement !== f.current)
        return;
      if (b.activeElement !== p.current)
        p.current = null;
      else if (p.current !== null)
        return;
      if (!h.current)
        return;
      let R = [];
      if ((b.activeElement === u.current || b.activeElement === f.current) && (R = i(g.current)), R.length > 0) {
        const I = !!((M = y.current) != null && M.shiftKey && ((v = y.current) == null ? void 0 : v.key) === "Tab"), k = R[0], A = R[R.length - 1];
        typeof k != "string" && typeof A != "string" && (I ? A.focus() : k.focus());
      } else
        C.focus();
    };
    b.addEventListener("focusin", S), b.addEventListener("keydown", w, !0);
    const E = setInterval(() => {
      b.activeElement && b.activeElement.tagName === "BODY" && S();
    }, 50);
    return () => {
      clearInterval(E), b.removeEventListener("focusin", S), b.removeEventListener("keydown", w, !0);
    };
  }, [n, o, r, a, l, i]);
  const x = (b) => {
    d.current === null && (d.current = b.relatedTarget), h.current = !0, p.current = b.target;
    const w = t.props.onFocus;
    w && w(b);
  }, T = (b) => {
    d.current === null && (d.current = b.relatedTarget), h.current = !0;
  };
  return /* @__PURE__ */ Te(P.Fragment, {
    children: [/* @__PURE__ */ $("div", {
      tabIndex: l ? 0 : -1,
      onFocus: T,
      ref: u,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ P.cloneElement(t, {
      ref: m,
      onFocus: x
    }), /* @__PURE__ */ $("div", {
      tabIndex: l ? 0 : -1,
      onFocus: T,
      ref: f,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (fu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: ti,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: s.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: s.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: s.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: s.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: s.func,
  /**
   * If `true`, focus is locked.
   */
  open: s.bool.isRequired
});
process.env.NODE_ENV !== "production" && (fu.propTypes = Tl(fu.propTypes));
function pA(e) {
  return tt("MuiBackdrop", e);
}
it("MuiBackdrop", ["root", "invisible"]);
const hA = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return rt({
    root: ["root", n && "invisible"]
  }, pA, t);
}, mA = Ee("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), Cm = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: r,
    className: i,
    component: a = "div",
    invisible: l = !1,
    open: c,
    components: u = {},
    componentsProps: f = {},
    slotProps: d = {},
    slots: p = {},
    TransitionComponent: h,
    transitionDuration: g,
    ...m
  } = o, y = {
    ...o,
    component: a,
    invisible: l
  }, x = hA(y), T = {
    transition: h,
    root: u.Root,
    ...p
  }, b = {
    ...f,
    ...d
  }, w = {
    slots: T,
    slotProps: b
  }, [S, E] = ot("root", {
    elementType: mA,
    externalForwardedProps: w,
    className: Re(x.root, i),
    ownerState: y
  }), [C, R] = ot("transition", {
    elementType: Pi,
    externalForwardedProps: w,
    ownerState: y
  });
  return /* @__PURE__ */ $(C, {
    in: c,
    timeout: g,
    ...m,
    ...R,
    children: /* @__PURE__ */ $(S, {
      "aria-hidden": !0,
      ...E,
      classes: x,
      ref: n,
      children: r
    })
  });
});
process.env.NODE_ENV !== "production" && (Cm.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: s.shape({
    Root: s.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: s.shape({
    root: s.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: s.bool,
  /**
   * If `true`, the component is shown.
   */
  open: s.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: s.shape({
    root: s.oneOfType([s.func, s.object]),
    transition: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: s.shape({
    root: s.elementType,
    transition: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: s.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: s.oneOfType([s.number, s.shape({
    appear: s.number,
    enter: s.number,
    exit: s.number
  })])
});
function gA(e) {
  return typeof e == "function" ? e() : e;
}
function yA(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const db = () => {
}, uc = new sA();
function bA(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: o = !1,
    closeAfterTransition: r = !1,
    onTransitionEnter: i,
    onTransitionExited: a,
    children: l,
    onClose: c,
    open: u,
    rootRef: f
  } = e, d = P.useRef({}), p = P.useRef(null), h = P.useRef(null), g = un(h, f), [m, y] = P.useState(!u), x = yA(l);
  let T = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (T = !1);
  const b = () => _n(p.current), w = () => (d.current.modalRef = h.current, d.current.mount = p.current, d.current), S = () => {
    uc.mount(w(), {
      disableScrollLock: o
    }), h.current && (h.current.scrollTop = 0);
  }, E = Un(() => {
    const _ = gA(t) || b().body;
    uc.add(w(), _), h.current && S();
  }), C = () => uc.isTopModal(w()), R = Un((_) => {
    p.current = _, _ && (u && C() ? S() : h.current && Aa(h.current, T));
  }), M = P.useCallback(() => {
    uc.remove(w(), T);
  }, [T]);
  P.useEffect(() => () => {
    M();
  }, [M]), P.useEffect(() => {
    u ? E() : (!x || !r) && M();
  }, [u, M, x, r, E]);
  const v = (_) => (N) => {
    var L;
    (L = _.onKeyDown) == null || L.call(_, N), !(N.key !== "Escape" || N.which === 229 || // Wait until IME is settled.
    !C()) && (n || (N.stopPropagation(), c && c(N, "escapeKeyDown")));
  }, I = (_) => (N) => {
    var L;
    (L = _.onClick) == null || L.call(_, N), N.target === N.currentTarget && c && c(N, "backdropClick");
  };
  return {
    getRootProps: (_ = {}) => {
      const N = Hx(e);
      delete N.onTransitionEnter, delete N.onTransitionExited;
      const L = {
        ...N,
        ..._
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...L,
        onKeyDown: v(L),
        ref: g
      };
    },
    getBackdropProps: (_ = {}) => {
      const N = _;
      return {
        "aria-hidden": !0,
        ...N,
        onClick: I(N),
        open: u
      };
    },
    getTransitionProps: () => {
      const _ = () => {
        y(!1), i && i();
      }, N = () => {
        y(!0), a && a(), r && M();
      };
      return {
        onEnter: Sp(_, (l == null ? void 0 : l.props.onEnter) ?? db),
        onExited: Sp(N, (l == null ? void 0 : l.props.onExited) ?? db)
      };
    },
    rootRef: g,
    portalRef: R,
    isTopModal: C,
    exited: m,
    hasTransition: x
  };
}
function vA(e) {
  return tt("MuiModal", e);
}
it("MuiModal", ["root", "hidden", "backdrop"]);
const xA = (e) => {
  const {
    open: t,
    exited: n,
    classes: o
  } = e;
  return rt({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, vA, o);
}, wA = Ee("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(qe(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), SA = Ee(Cm, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), fd = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: r = SA,
    BackdropProps: i,
    classes: a,
    className: l,
    closeAfterTransition: c = !1,
    children: u,
    container: f,
    component: d,
    components: p = {},
    componentsProps: h = {},
    disableAutoFocus: g = !1,
    disableEnforceFocus: m = !1,
    disableEscapeKeyDown: y = !1,
    disablePortal: x = !1,
    disableRestoreFocus: T = !1,
    disableScrollLock: b = !1,
    hideBackdrop: w = !1,
    keepMounted: S = !1,
    onClose: E,
    onTransitionEnter: C,
    onTransitionExited: R,
    open: M,
    slotProps: v = {},
    slots: I = {},
    // eslint-disable-next-line react/prop-types
    theme: k,
    ...A
  } = o, O = {
    ...o,
    closeAfterTransition: c,
    disableAutoFocus: g,
    disableEnforceFocus: m,
    disableEscapeKeyDown: y,
    disablePortal: x,
    disableRestoreFocus: T,
    disableScrollLock: b,
    hideBackdrop: w,
    keepMounted: S
  }, {
    getRootProps: _,
    getBackdropProps: N,
    getTransitionProps: L,
    portalRef: F,
    isTopModal: D,
    exited: B,
    hasTransition: z
  } = bA({
    ...O,
    rootRef: n
  }), U = {
    ...O,
    exited: B
  }, q = xA(U), Y = {};
  if (u.props.tabIndex === void 0 && (Y.tabIndex = "-1"), z) {
    const {
      onEnter: G,
      onExited: re
    } = L();
    Y.onEnter = G, Y.onExited = re;
  }
  const K = {
    slots: {
      root: p.Root,
      backdrop: p.Backdrop,
      ...I
    },
    slotProps: {
      ...h,
      ...v
    }
  }, [te, ne] = ot("root", {
    ref: n,
    elementType: wA,
    externalForwardedProps: {
      ...K,
      ...A,
      component: d
    },
    getSlotProps: _,
    ownerState: U,
    className: Re(l, q == null ? void 0 : q.root, !U.open && U.exited && (q == null ? void 0 : q.hidden))
  }), [W, ee] = ot("backdrop", {
    ref: i == null ? void 0 : i.ref,
    elementType: r,
    externalForwardedProps: K,
    shouldForwardComponentProp: !0,
    additionalProps: i,
    getSlotProps: (G) => N({
      ...G,
      onClick: (re) => {
        G != null && G.onClick && G.onClick(re);
      }
    }),
    className: Re(i == null ? void 0 : i.className, q == null ? void 0 : q.backdrop),
    ownerState: U
  });
  return !S && !M && (!z || B) ? null : /* @__PURE__ */ $(Rs, {
    ref: F,
    container: f,
    disablePortal: x,
    children: /* @__PURE__ */ Te(te, {
      ...ne,
      children: [!w && r ? /* @__PURE__ */ $(W, {
        ...ee
      }) : null, /* @__PURE__ */ $(fu, {
        disableEnforceFocus: m,
        disableAutoFocus: g,
        disableRestoreFocus: T,
        isEnabled: D,
        open: M,
        children: /* @__PURE__ */ P.cloneElement(u, Y)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (fd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: s.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: s.object,
  /**
   * A single child content element.
   */
  children: ti.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: s.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: s.shape({
    Backdrop: s.elementType,
    Root: s.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: s.shape({
    backdrop: s.oneOfType([s.func, s.object]),
    root: s.oneOfType([s.func, s.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: s.oneOfType([cr, s.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: s.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: s.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: s.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: s.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: s.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: s.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: s.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: s.bool,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: s.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: s.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: s.func,
  /**
   * If `true`, the component is shown.
   */
  open: s.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: s.shape({
    backdrop: s.oneOfType([s.func, s.object]),
    root: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: s.shape({
    backdrop: s.elementType,
    root: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object])
});
function TA(e) {
  return tt("MuiPopover", e);
}
it("MuiPopover", ["root", "paper"]);
function fb(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function pb(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function hb(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function wa(e) {
  return typeof e == "function" ? e() : e;
}
const EA = (e) => {
  const {
    classes: t
  } = e;
  return rt({
    root: ["root"],
    paper: ["paper"]
  }, TA, t);
}, CA = Ee(fd, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), bS = Ee(oi, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), Om = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiPopover"
  }), {
    action: r,
    anchorEl: i,
    anchorOrigin: a = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: l,
    anchorReference: c = "anchorEl",
    children: u,
    className: f,
    container: d,
    elevation: p = 8,
    marginThreshold: h = 16,
    open: g,
    PaperProps: m = {},
    // TODO: remove in v7
    slots: y = {},
    slotProps: x = {},
    transformOrigin: T = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: b,
    // TODO: remove in v7
    transitionDuration: w = "auto",
    TransitionProps: S = {},
    // TODO: remove in v7
    disableScrollLock: E = !1,
    ...C
  } = o, R = P.useRef(), M = {
    ...o,
    anchorOrigin: a,
    anchorReference: c,
    elevation: p,
    marginThreshold: h,
    transformOrigin: T,
    TransitionComponent: b,
    transitionDuration: w,
    TransitionProps: S
  }, v = EA(M), I = P.useCallback(() => {
    if (c === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (l || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), l;
    const G = wa(i), re = G && G.nodeType === 1 ? G : _n(R.current).body, V = re.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const de = re.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && de.top === 0 && de.left === 0 && de.right === 0 && de.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: V.top + fb(V, a.vertical),
      left: V.left + pb(V, a.horizontal)
    };
  }, [i, a.horizontal, a.vertical, l, c]), k = P.useCallback((G) => ({
    vertical: fb(G, T.vertical),
    horizontal: pb(G, T.horizontal)
  }), [T.horizontal, T.vertical]), A = P.useCallback((G) => {
    const re = {
      width: G.offsetWidth,
      height: G.offsetHeight
    }, V = k(re);
    if (c === "none")
      return {
        top: null,
        left: null,
        transformOrigin: hb(V)
      };
    const de = I();
    let ue = de.top - V.vertical, xe = de.left - V.horizontal;
    const Ae = ue + re.height, we = xe + re.width, De = Vo(wa(i)), Ce = De.innerHeight - h, Be = De.innerWidth - h;
    if (h !== null && ue < h) {
      const Me = ue - h;
      ue -= Me, V.vertical += Me;
    } else if (h !== null && Ae > Ce) {
      const Me = Ae - Ce;
      ue -= Me, V.vertical += Me;
    }
    if (process.env.NODE_ENV !== "production" && re.height > Ce && re.height && Ce && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${re.height - Ce}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), h !== null && xe < h) {
      const Me = xe - h;
      xe -= Me, V.horizontal += Me;
    } else if (we > Be) {
      const Me = we - Be;
      xe -= Me, V.horizontal += Me;
    }
    return {
      top: `${Math.round(ue)}px`,
      left: `${Math.round(xe)}px`,
      transformOrigin: hb(V)
    };
  }, [i, c, I, k, h]), [O, _] = P.useState(g), N = P.useCallback(() => {
    const G = R.current;
    if (!G)
      return;
    const re = A(G);
    re.top !== null && G.style.setProperty("top", re.top), re.left !== null && (G.style.left = re.left), G.style.transformOrigin = re.transformOrigin, _(!0);
  }, [A]);
  P.useEffect(() => (E && window.addEventListener("scroll", N), () => window.removeEventListener("scroll", N)), [i, E, N]);
  const L = () => {
    N();
  }, F = () => {
    _(!1);
  };
  P.useEffect(() => {
    g && N();
  }), P.useImperativeHandle(r, () => g ? {
    updatePosition: () => {
      N();
    }
  } : null, [g, N]), P.useEffect(() => {
    if (!g)
      return;
    const G = jh(() => {
      N();
    }), re = Vo(wa(i));
    return re.addEventListener("resize", G), () => {
      G.clear(), re.removeEventListener("resize", G);
    };
  }, [i, g, N]);
  let D = w;
  const B = {
    slots: {
      transition: b,
      ...y
    },
    slotProps: {
      transition: S,
      paper: m,
      ...x
    }
  }, [z, U] = ot("transition", {
    elementType: Xa,
    externalForwardedProps: B,
    ownerState: M,
    getSlotProps: (G) => ({
      ...G,
      onEntering: (re, V) => {
        var de;
        (de = G.onEntering) == null || de.call(G, re, V), L();
      },
      onExited: (re) => {
        var V;
        (V = G.onExited) == null || V.call(G, re), F();
      }
    }),
    additionalProps: {
      appear: !0,
      in: g
    }
  });
  w === "auto" && !z.muiSupportAuto && (D = void 0);
  const q = d || (i ? _n(wa(i)).body : void 0), [Y, {
    slots: K,
    slotProps: te,
    ...ne
  }] = ot("root", {
    ref: n,
    elementType: CA,
    externalForwardedProps: {
      ...B,
      ...C
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: y.backdrop
      },
      slotProps: {
        backdrop: fm(typeof x.backdrop == "function" ? x.backdrop(M) : x.backdrop, {
          invisible: !0
        })
      },
      container: q,
      open: g
    },
    ownerState: M,
    className: Re(v.root, f)
  }), [W, ee] = ot("paper", {
    ref: R,
    className: v.paper,
    elementType: bS,
    externalForwardedProps: B,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: p,
      style: O ? void 0 : {
        opacity: 0
      }
    },
    ownerState: M
  });
  return /* @__PURE__ */ $(Y, {
    ...ne,
    ...!Hp(Y) && {
      slots: K,
      slotProps: te,
      disableScrollLock: E
    },
    children: /* @__PURE__ */ $(z, {
      ...U,
      timeout: D,
      children: /* @__PURE__ */ $(W, {
        ...ee,
        children: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (Om.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: Qn,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: jo(s.oneOfType([cr, s.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = wa(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: s.shape({
    horizontal: s.oneOfType([s.oneOf(["center", "left", "right"]), s.number]).isRequired,
    vertical: s.oneOfType([s.oneOf(["bottom", "center", "top"]), s.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: s.shape({
    left: s.number.isRequired,
    top: s.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: s.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: s.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: s.object,
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: s.oneOfType([cr, s.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: s.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: ed,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: s.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: s.func,
  /**
   * If `true`, the component is shown.
   */
  open: s.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: s.shape({
    component: zh
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: s.shape({
    backdrop: s.oneOfType([s.func, s.object]),
    paper: s.oneOfType([s.func, s.object]),
    root: s.oneOfType([s.func, s.object]),
    transition: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: s.shape({
    backdrop: s.elementType,
    paper: s.elementType,
    root: s.elementType,
    transition: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: s.shape({
    horizontal: s.oneOfType([s.oneOf(["center", "left", "right"]), s.number]).isRequired,
    vertical: s.oneOfType([s.oneOf(["bottom", "center", "top"]), s.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: s.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: s.oneOfType([s.oneOf(["auto"]), s.number, s.shape({
    appear: s.number,
    enter: s.number,
    exit: s.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: s.object
});
function OA() {
  const [e, t] = yn(null), n = !!e, o = ze((i) => {
    const a = i.currentTarget;
    t(a);
  }, []), r = ze(() => {
    var i;
    (i = window.getSelection()) != null && i.toString() || t(null);
  }, []);
  return {
    anchorEl: e,
    isOpen: n,
    openPopover: o,
    closePopover: r
  };
}
const vS = Ie(({ children: e, renderPopoverHandler: t, sx: n }) => {
  const { paperCommonStyles: o } = Fi(), { anchorEl: r, isOpen: i, openPopover: a, closePopover: l } = OA();
  return /* @__PURE__ */ Te(mo, { children: [
    t({ anchorEl: r, isOpen: i, openPopover: a, closePopover: l }),
    /* @__PURE__ */ $(
      Om,
      {
        open: i,
        anchorEl: r,
        onClose: l,
        anchorOrigin: { vertical: "bottom", horizontal: "center" },
        transformOrigin: { vertical: "top", horizontal: "center" },
        slotProps: {
          paper: {
            elevation: 3,
            square: !0,
            sx: {
              ...o,
              border: 1,
              borderColor: "divider",
              ...n
            }
          }
        },
        children: /* @__PURE__ */ $(Pi, { in: i, children: /* @__PURE__ */ $("div", { children: e }) })
      }
    )
  ] });
});
vS.displayName = "Popover";
const $A = Ie(
  ({ icon: e = "solar:menu-dots-line-duotone", menuItems: t }) => /* @__PURE__ */ $(
    vS,
    {
      renderPopoverHandler: ({ isOpen: n, openPopover: o }) => /* @__PURE__ */ $(
        On,
        {
          isCircle: !0,
          isGhost: !0,
          color: "auto",
          icon: e,
          iconWidth: 20,
          disabled: n,
          onClick: o
        }
      ),
      children: /* @__PURE__ */ $(du, { items: t, renderItem: (n) => /* @__PURE__ */ $(_a, { ...n, clickable: !0 }) })
    }
  )
);
$A.displayName = "ExhibitCardActionButton";
const xS = uR({
  createStyledComponent: Ee("div", {
    name: "MuiContainer",
    slot: "Root",
    overridesResolver: (e, t) => {
      const {
        ownerState: n
      } = e;
      return [t.root, t[`maxWidth${fe(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
    }
  }),
  useThemeProps: (e) => lt({
    props: e,
    name: "MuiContainer"
  })
});
process.env.NODE_ENV !== "production" && (xS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: s.bool,
  /**
   * Set the max-width to match the min-width of the current breakpoint.
   * This is useful if you'd prefer to design for a fixed set of sizes
   * instead of trying to accommodate a fully fluid viewport.
   * It's fluid by default.
   * @default false
   */
  fixed: s.bool,
  /**
   * Determine the max-width of the container.
   * The container width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'lg'
   */
  maxWidth: s.oneOfType([s.oneOf(["xs", "sm", "md", "lg", "xl", !1]), s.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object])
});
const IA = Ie(({ children: e, maxWidth: t = "lg", ...n }) => /* @__PURE__ */ $(
  xS,
  {
    className: "VenomousUI-Container",
    disableGutters: !0,
    maxWidth: t === "fullwidth" ? !1 : t,
    ...n,
    children: e
  }
));
IA.displayName = "Container";
function RA(e, t, n) {
  const o = t.getBoundingClientRect(), r = n && n.getBoundingClientRect(), i = Vo(t);
  let a;
  if (t.fakeTransform)
    a = t.fakeTransform;
  else {
    const u = i.getComputedStyle(t);
    a = u.getPropertyValue("-webkit-transform") || u.getPropertyValue("transform");
  }
  let l = 0, c = 0;
  if (a && a !== "none" && typeof a == "string") {
    const u = a.split("(")[1].split(")")[0].split(",");
    l = parseInt(u[4], 10), c = parseInt(u[5], 10);
  }
  return e === "left" ? r ? `translateX(${r.right + l - o.left}px)` : `translateX(${i.innerWidth + l - o.left}px)` : e === "right" ? r ? `translateX(-${o.right - r.left - l}px)` : `translateX(-${o.left + o.width - l}px)` : e === "up" ? r ? `translateY(${r.bottom + c - o.top}px)` : `translateY(${i.innerHeight + c - o.top}px)` : r ? `translateY(-${o.top - r.top + o.height - c}px)` : `translateY(-${o.top + o.height - c}px)`;
}
function wS(e) {
  return typeof e == "function" ? e() : e;
}
function dc(e, t, n) {
  const o = wS(n), r = RA(e, t, o);
  r && (t.style.webkitTransform = r, t.style.transform = r);
}
const SS = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = Pr(), r = {
    enter: o.transitions.easing.easeOut,
    exit: o.transitions.easing.sharp
  }, i = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    addEndListener: a,
    appear: l = !0,
    children: c,
    container: u,
    direction: f = "down",
    easing: d = r,
    in: p,
    onEnter: h,
    onEntered: g,
    onEntering: m,
    onExit: y,
    onExited: x,
    onExiting: T,
    style: b,
    timeout: w = i,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: S = go,
    ...E
  } = t, C = P.useRef(null), R = un(ni(c), C, n), M = (F) => (D) => {
    F && (D === void 0 ? F(C.current) : F(C.current, D));
  }, v = M((F, D) => {
    dc(f, F, u), om(F), h && h(F, D);
  }), I = M((F, D) => {
    const B = Es({
      timeout: w,
      style: b,
      easing: d
    }, {
      mode: "enter"
    });
    F.style.webkitTransition = o.transitions.create("-webkit-transform", {
      ...B
    }), F.style.transition = o.transitions.create("transform", {
      ...B
    }), F.style.webkitTransform = "none", F.style.transform = "none", m && m(F, D);
  }), k = M(g), A = M(T), O = M((F) => {
    const D = Es({
      timeout: w,
      style: b,
      easing: d
    }, {
      mode: "exit"
    });
    F.style.webkitTransition = o.transitions.create("-webkit-transform", D), F.style.transition = o.transitions.create("transform", D), dc(f, F, u), y && y(F);
  }), _ = M((F) => {
    F.style.webkitTransition = "", F.style.transition = "", x && x(F);
  }), N = (F) => {
    a && a(C.current, F);
  }, L = P.useCallback(() => {
    C.current && dc(f, C.current, u);
  }, [f, u]);
  return P.useEffect(() => {
    if (p || f === "down" || f === "right")
      return;
    const F = jh(() => {
      C.current && dc(f, C.current, u);
    }), D = Vo(C.current);
    return D.addEventListener("resize", F), () => {
      F.clear(), D.removeEventListener("resize", F);
    };
  }, [f, p, u]), P.useEffect(() => {
    p || L();
  }, [p, L]), /* @__PURE__ */ $(S, {
    nodeRef: C,
    onEnter: v,
    onEntered: k,
    onEntering: I,
    onExit: O,
    onExited: _,
    onExiting: A,
    addEndListener: N,
    appear: l,
    in: p,
    timeout: w,
    ...E,
    children: (F, {
      ownerState: D,
      ...B
    }) => /* @__PURE__ */ P.cloneElement(c, {
      ref: R,
      style: {
        visibility: F === "exited" && !p ? "hidden" : void 0,
        ...b,
        ...c.props.style
      },
      ...B
    })
  });
});
process.env.NODE_ENV !== "production" && (SS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: s.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: s.bool,
  /**
   * A single child content element.
   */
  children: ti.isRequired,
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the container the Slide is transitioning from.
   */
  container: jo(s.oneOfType([cr, s.func]), (e) => {
    if (e.open) {
      const t = wS(e.container);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `container` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `container` prop provided to the component is invalid.", "It should be an HTML element instance."].join(`
`));
    }
    return null;
  }),
  /**
   * Direction the child node will enter from.
   * @default 'down'
   */
  direction: s.oneOf(["down", "left", "right", "up"]),
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   * @default {
   *   enter: theme.transitions.easing.easeOut,
   *   exit: theme.transitions.easing.sharp,
   * }
   */
  easing: s.oneOfType([s.shape({
    enter: s.string,
    exit: s.string
  }), s.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: s.bool,
  /**
   * @ignore
   */
  onEnter: s.func,
  /**
   * @ignore
   */
  onEntered: s.func,
  /**
   * @ignore
   */
  onEntering: s.func,
  /**
   * @ignore
   */
  onExit: s.func,
  /**
   * @ignore
   */
  onExited: s.func,
  /**
   * @ignore
   */
  onExiting: s.func,
  /**
   * @ignore
   */
  style: s.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: s.oneOfType([s.number, s.shape({
    appear: s.number,
    enter: s.number,
    exit: s.number
  })])
});
function kA(e) {
  return tt("MuiDrawer", e);
}
it("MuiDrawer", ["root", "docked", "paper", "anchorLeft", "anchorRight", "anchorTop", "anchorBottom", "paperAnchorLeft", "paperAnchorRight", "paperAnchorTop", "paperAnchorBottom", "paperAnchorDockedLeft", "paperAnchorDockedRight", "paperAnchorDockedTop", "paperAnchorDockedBottom", "modal"]);
const TS = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, (n.variant === "permanent" || n.variant === "persistent") && t.docked, t.modal];
}, PA = (e) => {
  const {
    classes: t,
    anchor: n,
    variant: o
  } = e, r = {
    root: ["root", `anchor${fe(n)}`],
    docked: [(o === "permanent" || o === "persistent") && "docked"],
    modal: ["modal"],
    paper: ["paper", `paperAnchor${fe(n)}`, o !== "temporary" && `paperAnchorDocked${fe(n)}`]
  };
  return rt(r, kA, t);
}, NA = Ee(fd, {
  name: "MuiDrawer",
  slot: "Root",
  overridesResolver: TS
})(qe(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.drawer
}))), MA = Ee("div", {
  shouldForwardProp: Dn,
  name: "MuiDrawer",
  slot: "Docked",
  skipVariantsResolver: !1,
  overridesResolver: TS
})({
  flex: "0 0 auto"
}), _A = Ee(oi, {
  name: "MuiDrawer",
  slot: "Paper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.paper, t[`paperAnchor${fe(n.anchor)}`], n.variant !== "temporary" && t[`paperAnchorDocked${fe(n.anchor)}`]];
  }
})(qe(({
  theme: e
}) => ({
  overflowY: "auto",
  display: "flex",
  flexDirection: "column",
  height: "100%",
  flex: "1 0 auto",
  zIndex: (e.vars || e).zIndex.drawer,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  // temporary style
  position: "fixed",
  top: 0,
  // We disable the focus ring for mouse, touch and keyboard users.
  // At some point, it would be better to keep it for keyboard users.
  // :focus-ring CSS pseudo-class will help.
  outline: 0,
  variants: [{
    props: {
      anchor: "left"
    },
    style: {
      left: 0
    }
  }, {
    props: {
      anchor: "top"
    },
    style: {
      top: 0,
      left: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    }
  }, {
    props: {
      anchor: "right"
    },
    style: {
      right: 0
    }
  }, {
    props: {
      anchor: "bottom"
    },
    style: {
      top: "auto",
      left: 0,
      bottom: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "left" && t.variant !== "temporary",
    style: {
      borderRight: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "top" && t.variant !== "temporary",
    style: {
      borderBottom: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "right" && t.variant !== "temporary",
    style: {
      borderLeft: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "bottom" && t.variant !== "temporary",
    style: {
      borderTop: `1px solid ${(e.vars || e).palette.divider}`
    }
  }]
}))), ES = {
  left: "right",
  right: "left",
  top: "down",
  bottom: "up"
};
function AA(e) {
  return ["left", "right"].includes(e);
}
function DA({
  direction: e
}, t) {
  return e === "rtl" && AA(t) ? ES[t] : t;
}
const CS = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiDrawer"
  }), r = Pr(), i = El(), a = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    anchor: l = "left",
    BackdropProps: c,
    children: u,
    className: f,
    elevation: d = 16,
    hideBackdrop: p = !1,
    ModalProps: {
      BackdropProps: h,
      ...g
    } = {},
    onClose: m,
    open: y = !1,
    PaperProps: x = {},
    SlideProps: T,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: b,
    transitionDuration: w = a,
    variant: S = "temporary",
    slots: E = {},
    slotProps: C = {},
    ...R
  } = o, M = P.useRef(!1);
  P.useEffect(() => {
    M.current = !0;
  }, []);
  const v = DA({
    direction: i ? "rtl" : "ltr"
  }, l), k = {
    ...o,
    anchor: l,
    elevation: d,
    open: y,
    variant: S,
    ...R
  }, A = PA(k), O = {
    slots: {
      transition: b,
      ...E
    },
    slotProps: {
      paper: x,
      transition: T,
      ...C,
      backdrop: fm(C.backdrop || {
        ...c,
        ...h
      }, {
        transitionDuration: w
      })
    }
  }, [_, N] = ot("root", {
    ref: n,
    elementType: NA,
    className: Re(A.root, A.modal, f),
    shouldForwardComponentProp: !0,
    ownerState: k,
    externalForwardedProps: {
      ...O,
      ...R,
      ...g
    },
    additionalProps: {
      open: y,
      onClose: m,
      hideBackdrop: p,
      slots: {
        backdrop: O.slots.backdrop
      },
      slotProps: {
        backdrop: O.slotProps.backdrop
      }
    }
  }), [L, F] = ot("paper", {
    elementType: _A,
    shouldForwardComponentProp: !0,
    className: Re(A.paper, x.className),
    ownerState: k,
    externalForwardedProps: O,
    additionalProps: {
      elevation: S === "temporary" ? d : 0,
      square: !0
    }
  }), [D, B] = ot("docked", {
    elementType: MA,
    ref: n,
    className: Re(A.root, A.docked, f),
    ownerState: k,
    externalForwardedProps: O,
    additionalProps: R
    // pass `other` here because `DockedSlot` is also a root slot for some variants
  }), [z, U] = ot("transition", {
    elementType: SS,
    ownerState: k,
    externalForwardedProps: O,
    additionalProps: {
      in: y,
      direction: ES[v],
      timeout: w,
      appear: M.current
    }
  }), q = /* @__PURE__ */ $(L, {
    ...F,
    children: u
  });
  if (S === "permanent")
    return /* @__PURE__ */ $(D, {
      ...B,
      children: q
    });
  const Y = /* @__PURE__ */ $(z, {
    ...U,
    children: q
  });
  return S === "persistent" ? /* @__PURE__ */ $(D, {
    ...B,
    children: Y
  }) : /* @__PURE__ */ $(_, {
    ...N,
    children: Y
  });
});
process.env.NODE_ENV !== "production" && (CS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Side from which the drawer will appear.
   * @default 'left'
   */
  anchor: s.oneOf(["bottom", "left", "right", "top"]),
  /**
   * @ignore
   */
  BackdropProps: s.object,
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The elevation of the drawer.
   * @default 16
   */
  elevation: ed,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: s.bool,
  /**
   * Props applied to the [`Modal`](https://mui.com/material-ui/api/modal/) element.
   * @default {}
   */
  ModalProps: s.object,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: s.func,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: s.bool,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @deprecated use the `slotProps.paper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PaperProps: s.object,
  /**
   * Props applied to the [`Slide`](https://mui.com/material-ui/api/slide/) element.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SlideProps: s.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: s.shape({
    backdrop: s.oneOfType([s.func, s.object]),
    docked: s.oneOfType([s.func, s.object]),
    paper: s.oneOfType([s.func, s.object]),
    root: s.oneOfType([s.func, s.object]),
    transition: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: s.shape({
    backdrop: s.elementType,
    docked: s.elementType,
    paper: s.elementType,
    root: s.elementType,
    transition: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: s.oneOfType([s.number, s.shape({
    appear: s.number,
    enter: s.number,
    exit: s.number
  })]),
  /**
   * The variant to use.
   * @default 'temporary'
   */
  variant: s.oneOf(["permanent", "persistent", "temporary"])
});
const OS = Ie(
  ({ children: e, isOpen: t, closeDrawer: n, width: o, position: r = "right", sx: i }) => {
    const { paperCommonStyles: a } = Fi();
    return /* @__PURE__ */ $(
      CS,
      {
        className: "VenomousUI-Drawer",
        open: t,
        onClose: n,
        anchor: r,
        keepMounted: !0,
        slotProps: {
          paper: {
            sx: {
              ...a,
              ...LA(r),
              width: o,
              p: "16px",
              ...i
            }
          }
        },
        children: /* @__PURE__ */ $("div", { style: { width: "100%" }, children: e })
      }
    );
  }
);
OS.displayName = "Drawer";
function LA(e) {
  switch (e) {
    case "right":
      return { borderTopRightRadius: "0px !important", borderBottomRightRadius: "0px !important" };
    case "top":
      return { borderTopLeftRadius: "0px !important", borderTopRightRadius: "0px !important" };
    case "bottom":
      return {
        borderBottomLeftRadius: "0px !important",
        borderBottomRightRadius: "0px !important"
      };
    case "left":
    default:
      return { borderTopLeftRadius: "0px !important", borderBottomLeftRadius: "0px !important" };
  }
}
function BA() {
  const [e, t] = yn(!1), n = ze(() => {
    t(!0);
  }, []), o = ze(() => {
    t(!1);
  }, []), r = ze(() => {
    t((i) => !i);
  }, []);
  return {
    isOpen: e,
    setIsOpen: t,
    openDrawer: n,
    closeDrawer: o,
    toggleDrawer: r
  };
}
const $S = Ie(({ height: e = 50, title: t, closeDrawer: n }) => {
  const { paperCommonStyles: o } = Fi();
  return /* @__PURE__ */ Te(
    dn,
    {
      className: "VenomousUI-DrawerHeader",
      row: !0,
      sx: {
        ...o,
        borderRadius: 0,
        height: e,
        width: "100%",
        position: "sticky",
        top: 0,
        left: 0,
        justifyContent: "space-between",
        transform: "translateY(-8px)"
      },
      children: [
        n && /* @__PURE__ */ $(
          On,
          {
            isCircle: !0,
            isGhost: !0,
            icon: "solar:close-circle-line-duotone",
            iconWidth: 24,
            color: "auto",
            onClick: n,
            sx: { width: 24, mr: "8px", ml: "-8px" }
          }
        ),
        /* @__PURE__ */ $(Cn, { text: t, isTitle: !0 })
      ]
    }
  );
});
$S.displayName = "DrawerHeader";
const pd = /* @__PURE__ */ P.createContext(void 0);
process.env.NODE_ENV !== "production" && (pd.displayName = "FormControlContext");
function li() {
  return P.useContext(pd);
}
function FA(e) {
  return tt("PrivateSwitchBase", e);
}
it("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);
const zA = (e) => {
  const {
    classes: t,
    checked: n,
    disabled: o,
    edge: r
  } = e, i = {
    root: ["root", n && "checked", o && "disabled", r && `edge${fe(r)}`],
    input: ["input"]
  };
  return rt(i, FA, t);
}, jA = Ee(Ps)({
  padding: 9,
  borderRadius: "50%",
  variants: [{
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "start" && t.size !== "small",
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "end" && t.size !== "small",
    style: {
      marginRight: -12
    }
  }]
}), VA = Ee("input", {
  shouldForwardProp: Dn
})({
  cursor: "inherit",
  position: "absolute",
  opacity: 0,
  width: "100%",
  height: "100%",
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
}), hd = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const {
    autoFocus: o,
    checked: r,
    checkedIcon: i,
    defaultChecked: a,
    disabled: l,
    disableFocusRipple: c = !1,
    edge: u = !1,
    icon: f,
    id: d,
    inputProps: p,
    inputRef: h,
    name: g,
    onBlur: m,
    onChange: y,
    onFocus: x,
    readOnly: T,
    required: b = !1,
    tabIndex: w,
    type: S,
    value: E,
    slots: C = {},
    slotProps: R = {},
    ...M
  } = t, [v, I] = $i({
    controlled: r,
    default: !!a,
    name: "SwitchBase",
    state: "checked"
  }), k = li(), A = (K) => {
    x && x(K), k && k.onFocus && k.onFocus(K);
  }, O = (K) => {
    m && m(K), k && k.onBlur && k.onBlur(K);
  }, _ = (K) => {
    if (K.nativeEvent.defaultPrevented)
      return;
    const te = K.target.checked;
    I(te), y && y(K, te);
  };
  let N = l;
  k && typeof N > "u" && (N = k.disabled);
  const L = S === "checkbox" || S === "radio", F = {
    ...t,
    checked: v,
    disabled: N,
    disableFocusRipple: c,
    edge: u
  }, D = zA(F), B = {
    slots: C,
    slotProps: {
      input: p,
      ...R
    }
  }, [z, U] = ot("root", {
    ref: n,
    elementType: jA,
    className: D.root,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...B,
      component: "span",
      ...M
    },
    getSlotProps: (K) => ({
      ...K,
      onFocus: (te) => {
        var ne;
        (ne = K.onFocus) == null || ne.call(K, te), A(te);
      },
      onBlur: (te) => {
        var ne;
        (ne = K.onBlur) == null || ne.call(K, te), O(te);
      }
    }),
    ownerState: F,
    additionalProps: {
      centerRipple: !0,
      focusRipple: !c,
      disabled: N,
      role: void 0,
      tabIndex: null
    }
  }), [q, Y] = ot("input", {
    ref: h,
    elementType: VA,
    className: D.input,
    externalForwardedProps: B,
    getSlotProps: (K) => ({
      ...K,
      onChange: (te) => {
        var ne;
        (ne = K.onChange) == null || ne.call(K, te), _(te);
      }
    }),
    ownerState: F,
    additionalProps: {
      autoFocus: o,
      checked: r,
      defaultChecked: a,
      disabled: N,
      id: L ? d : void 0,
      name: g,
      readOnly: T,
      required: b,
      tabIndex: w,
      type: S,
      ...S === "checkbox" && E === void 0 ? {} : {
        value: E
      }
    }
  });
  return /* @__PURE__ */ Te(z, {
    ...U,
    children: [/* @__PURE__ */ $(q, {
      ...Y
    }), v ? i : f]
  });
});
process.env.NODE_ENV !== "production" && (hd.propTypes = {
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: s.bool,
  /**
   * If `true`, the component is checked.
   */
  checked: s.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: s.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * @ignore
   */
  defaultChecked: s.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: s.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: s.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: s.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: s.node.isRequired,
  /**
   * The id of the `input` element.
   */
  id: s.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: s.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Qn,
  /*
   * @ignore
   */
  name: s.string,
  /**
   * @ignore
   */
  onBlur: s.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: s.func,
  /**
   * @ignore
   */
  onFocus: s.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: s.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: s.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: s.shape({
    input: s.oneOfType([s.func, s.object]),
    root: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: s.shape({
    input: s.elementType,
    root: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.object,
  /**
   * @ignore
   */
  tabIndex: s.oneOfType([s.number, s.string]),
  /**
   * The input component prop `type`.
   */
  type: s.string.isRequired,
  /**
   * The value of the component.
   */
  value: s.any
});
const HA = Nr(/* @__PURE__ */ $("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank"), WA = Nr(/* @__PURE__ */ $("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox"), UA = Nr(/* @__PURE__ */ $("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");
function qA(e) {
  return tt("MuiCheckbox", e);
}
const _f = it("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium"]), KA = (e) => {
  const {
    classes: t,
    indeterminate: n,
    color: o,
    size: r
  } = e, i = {
    root: ["root", n && "indeterminate", `color${fe(o)}`, `size${fe(r)}`]
  }, a = rt(i, qA, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...a
  };
}, YA = Ee(hd, {
  shouldForwardProp: (e) => Dn(e) || e === "classes",
  name: "MuiCheckbox",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.indeterminate && t.indeterminate, t[`size${fe(n.size)}`], n.color !== "default" && t[`color${fe(n.color)}`]];
  }
})(qe(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  variants: [{
    props: {
      color: "default",
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : bt(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(Ut()).map(([t]) => ({
    props: {
      color: t,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : bt(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(Ut()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${_f.checked}, &.${_f.indeterminate}`]: {
        color: (e.vars || e).palette[t].main
      },
      [`&.${_f.disabled}`]: {
        color: (e.vars || e).palette.action.disabled
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
}))), GA = /* @__PURE__ */ $(WA, {}), XA = /* @__PURE__ */ $(HA, {}), ZA = /* @__PURE__ */ $(UA, {}), IS = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiCheckbox"
  }), {
    checkedIcon: r = GA,
    color: i = "primary",
    icon: a = XA,
    indeterminate: l = !1,
    indeterminateIcon: c = ZA,
    inputProps: u,
    size: f = "medium",
    disableRipple: d = !1,
    className: p,
    slots: h = {},
    slotProps: g = {},
    ...m
  } = o, y = l ? c : a, x = l ? c : r, T = {
    ...o,
    disableRipple: d,
    color: i,
    indeterminate: l,
    size: f
  }, b = KA(T), w = g.input ?? u, [S, E] = ot("root", {
    ref: n,
    elementType: YA,
    className: Re(b.root, p),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: h,
      slotProps: g,
      ...m
    },
    ownerState: T,
    additionalProps: {
      type: "checkbox",
      icon: /* @__PURE__ */ P.cloneElement(y, {
        fontSize: y.props.fontSize ?? f
      }),
      checkedIcon: /* @__PURE__ */ P.cloneElement(x, {
        fontSize: x.props.fontSize ?? f
      }),
      disableRipple: d,
      slots: h,
      slotProps: {
        input: fm(typeof w == "function" ? w(T) : w, {
          "data-indeterminate": l
        })
      }
    }
  });
  return /* @__PURE__ */ $(S, {
    ...E,
    classes: b
  });
});
process.env.NODE_ENV !== "production" && (IS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: s.bool,
  /**
   * The icon to display when the component is checked.
   * @default <CheckBoxIcon />
   */
  checkedIcon: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: s.oneOfType([s.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), s.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: s.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: s.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: s.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <CheckBoxOutlineBlankIcon />
   */
  icon: s.node,
  /**
   * The id of the `input` element.
   */
  id: s.string,
  /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the `input`.
   * @default false
   */
  indeterminate: s.bool,
  /**
   * The icon to display when the component is indeterminate.
   * @default <IndeterminateCheckBoxIcon />
   */
  indeterminateIcon: s.node,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: s.object,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: s.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: s.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense checkbox styling.
   * @default 'medium'
   */
  size: s.oneOfType([s.oneOf(["medium", "small"]), s.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: s.shape({
    input: s.oneOfType([s.func, s.object]),
    root: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: s.shape({
    input: s.elementType,
    root: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: s.any
});
const Mi = Ie(
  ({ label: e, elementId: t, tooltip: n, isDisabled: o, isError: r, isRequired: i }) => {
    const { textCommonStyles: a } = $l({
      isTitle: !1,
      isLabel: !0,
      textColor: o ? "disabled" : r ? "error" : "auto"
    });
    return /* @__PURE__ */ Te(
      Ho,
      {
        className: "VenomousUI-Label",
        component: "label",
        htmlFor: t,
        sx: {
          ...a,
          cursor: o ? "not-allowed" : "pointer",
          display: "flex",
          alignItems: "center",
          lineHeight: "1.5rem"
        },
        children: [
          /* @__PURE__ */ $(
            Ho,
            {
              component: "i",
              sx: {
                width: "14px",
                marginLeft: "-14px",
                fontSize: "1.5rem",
                transform: "translateY(0.35rem)",
                opacity: i ? 1 : 0,
                color: "error.main"
              },
              children: "*"
            }
          ),
          e,
          n && /* @__PURE__ */ $(dm, { title: n, arrow: !0, placement: "top", children: /* @__PURE__ */ $(
            Wo,
            {
              icon: "solar:info-circle-bold",
              width: 16,
              color: r ? "error" : "primary",
              ml: "4px"
            }
          ) })
        ]
      }
    );
  }
);
Mi.displayName = "Label";
const md = Ie(
  ({ startLabel: e, endLabel: t, labelsDirection: n = "row", renderElement: o, isDisabled: r, isError: i }) => {
    const a = Ch();
    return /* @__PURE__ */ Te(dn, { className: "VenomousUI-Labels", gap: 0, row: n === "row", children: [
      e && /* @__PURE__ */ $(Mi, { label: e, elementId: a, isDisabled: r, isError: i }),
      o(a),
      t && /* @__PURE__ */ $(Mi, { label: t, elementId: a, isDisabled: r, isError: i })
    ] });
  }
);
md.displayName = "Labels";
const RS = Ie(
  ({ value: e, onChange: t, isDisabled: n, isError: o, label: r, labelDirection: i = "end" }) => {
    const a = ze(
      (l) => /* @__PURE__ */ $(
        IS,
        {
          id: l,
          checked: e,
          onChange: (c) => t(c.target.checked),
          disabled: n,
          icon: /* @__PURE__ */ $(QA, { isDisabled: n, isError: o }),
          checkedIcon: /* @__PURE__ */ $(JA, { isDisabled: n, isError: o }),
          sx: {
            "& .MuiSwitch-track": { transition: "background-color 0s" },
            "& svg.MuiSvgIcon-root": { transform: "translate(-1px, 0px)" }
          }
        }
      ),
      [e, t, n, o]
    );
    return r ? /* @__PURE__ */ $(
      md,
      {
        labelsDirection: "row",
        startLabel: i === "start" ? r : "",
        endLabel: i === "end" ? r : "",
        isDisabled: n,
        isError: o,
        renderElement: a
      }
    ) : a();
  }
);
RS.displayName = "Checkbox";
const QA = Ie(
  ({ isDisabled: e, isError: t }) => /* @__PURE__ */ $(
    Ss,
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "32",
      height: "32",
      viewBox: "0 0 20 20",
      sx: {
        color: (n) => t ? n.palette.error.main : e ? n.palette.action.disabled : "auto"
      },
      children: /* @__PURE__ */ $(
        "path",
        {
          fill: "currentColor",
          d: "M3 6a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3zm3-2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"
        }
      )
    }
  )
), JA = Ie(
  ({ isDisabled: e, isError: t }) => /* @__PURE__ */ $(
    Ss,
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "32",
      height: "32",
      viewBox: "0 0 24 24",
      sx: {
        color: (n) => t ? n.palette.error.main : e ? n.palette.action.disabled : "auto"
      },
      children: /* @__PURE__ */ $(
        "path",
        {
          fill: "currentColor",
          d: "M6.25 3A3.25 3.25 0 0 0 3 6.25v11.5A3.25 3.25 0 0 0 6.25 21h11.5A3.25 3.25 0 0 0 21 17.75V6.25A3.25 3.25 0 0 0 17.75 3zm11.03 6.28l-6.754 6.747a.75.75 0 0 1-1.06 0L6.72 13.28a.75.75 0 0 1 1.06-1.06l2.217 2.216l6.223-6.217a.75.75 0 1 1 1.06 1.062"
        }
      )
    }
  )
);
var mb;
const e2 = Ee("fieldset", {
  shouldForwardProp: Dn
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), t2 = Ee("legend", {
  shouldForwardProp: Dn
})(qe(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function kS(e) {
  const {
    children: t,
    classes: n,
    className: o,
    label: r,
    notched: i,
    ...a
  } = e, l = r != null && r !== "", c = {
    ...e,
    notched: i,
    withLabel: l
  };
  return /* @__PURE__ */ $(e2, {
    "aria-hidden": !0,
    className: o,
    ownerState: c,
    ...a,
    children: /* @__PURE__ */ $(t2, {
      ownerState: c,
      children: l ? /* @__PURE__ */ $("span", {
        children: r
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        mb || (mb = /* @__PURE__ */ $("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (kS.propTypes = {
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The label.
   */
  label: s.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: s.bool.isRequired,
  /**
   * @ignore
   */
  style: s.object
});
function Zs({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((o, r) => (o[r] = e[r], n && typeof e[r] > "u" && (o[r] = n[r]), o), {});
}
function fc(e) {
  return parseInt(e, 10) || 0;
}
const n2 = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function o2(e) {
  for (const t in e)
    return !1;
  return !0;
}
function gb(e) {
  return o2(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const PS = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const {
    onChange: o,
    maxRows: r,
    minRows: i = 1,
    style: a,
    value: l,
    ...c
  } = t, {
    current: u
  } = P.useRef(l != null), f = P.useRef(null), d = un(n, f), p = P.useRef(null), h = P.useRef(null), g = P.useCallback(() => {
    const b = f.current, w = h.current;
    if (!b || !w)
      return;
    const E = Vo(b).getComputedStyle(b);
    if (E.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    w.style.width = E.width, w.value = b.value || t.placeholder || "x", w.value.slice(-1) === `
` && (w.value += " ");
    const C = E.boxSizing, R = fc(E.paddingBottom) + fc(E.paddingTop), M = fc(E.borderBottomWidth) + fc(E.borderTopWidth), v = w.scrollHeight;
    w.value = "x";
    const I = w.scrollHeight;
    let k = v;
    i && (k = Math.max(Number(i) * I, k)), r && (k = Math.min(Number(r) * I, k)), k = Math.max(k, I);
    const A = k + (C === "border-box" ? R + M : 0), O = Math.abs(k - v) <= 1;
    return {
      outerHeightStyle: A,
      overflowing: O
    };
  }, [r, i, t.placeholder]), m = Un(() => {
    const b = f.current, w = g();
    if (!b || !w || gb(w))
      return !1;
    const S = w.outerHeightStyle;
    return p.current != null && p.current !== S;
  }), y = P.useCallback(() => {
    const b = f.current, w = g();
    if (!b || !w || gb(w))
      return;
    const S = w.outerHeightStyle;
    p.current !== S && (p.current = S, b.style.height = `${S}px`), b.style.overflow = w.overflowing ? "hidden" : "";
  }, [g]), x = P.useRef(-1);
  zo(() => {
    const b = jh(y), w = f == null ? void 0 : f.current;
    if (!w)
      return;
    const S = Vo(w);
    S.addEventListener("resize", b);
    let E;
    return typeof ResizeObserver < "u" && (E = new ResizeObserver(() => {
      m() && (E.unobserve(w), cancelAnimationFrame(x.current), y(), x.current = requestAnimationFrame(() => {
        E.observe(w);
      }));
    }), E.observe(w)), () => {
      b.clear(), cancelAnimationFrame(x.current), S.removeEventListener("resize", b), E && E.disconnect();
    };
  }, [g, y, m]), zo(() => {
    y();
  });
  const T = (b) => {
    u || y(), o && o(b);
  };
  return /* @__PURE__ */ Te(P.Fragment, {
    children: [/* @__PURE__ */ $("textarea", {
      value: l,
      onChange: T,
      ref: d,
      rows: i,
      style: a,
      ...c
    }), /* @__PURE__ */ $("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: h,
      tabIndex: -1,
      style: {
        ...n2.shadow,
        ...a,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (PS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: s.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: s.oneOfType([s.number, s.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: s.oneOfType([s.number, s.string]),
  /**
   * @ignore
   */
  onChange: s.func,
  /**
   * @ignore
   */
  placeholder: s.string,
  /**
   * @ignore
   */
  style: s.object,
  /**
   * @ignore
   */
  value: s.oneOfType([s.arrayOf(s.string), s.number, s.string])
});
function yb(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function pu(e, t = !1) {
  return e && (yb(e.value) && e.value !== "" || t && yb(e.defaultValue) && e.defaultValue !== "");
}
function r2(e) {
  return e.startAdornment;
}
function i2(e) {
  return tt("MuiInputBase", e);
}
const to = it("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var bb;
const gd = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${fe(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, yd = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, s2 = (e) => {
  const {
    classes: t,
    color: n,
    disabled: o,
    error: r,
    endAdornment: i,
    focused: a,
    formControl: l,
    fullWidth: c,
    hiddenLabel: u,
    multiline: f,
    readOnly: d,
    size: p,
    startAdornment: h,
    type: g
  } = e, m = {
    root: ["root", `color${fe(n)}`, o && "disabled", r && "error", c && "fullWidth", a && "focused", l && "formControl", p && p !== "medium" && `size${fe(p)}`, f && "multiline", h && "adornedStart", i && "adornedEnd", u && "hiddenLabel", d && "readOnly"],
    input: ["input", o && "disabled", g === "search" && "inputTypeSearch", f && "inputMultiline", p === "small" && "inputSizeSmall", u && "inputHiddenLabel", h && "inputAdornedStart", i && "inputAdornedEnd", d && "readOnly"]
  };
  return rt(m, i2, t);
}, bd = Ee("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: gd
})(qe(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${to.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), vd = Ee("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: yd
})(qe(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, o = {
    opacity: "0 !important"
  }, r = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${to.formControl} &`]: {
      "&::-webkit-input-placeholder": o,
      "&::-moz-placeholder": o,
      // Firefox 19+
      "&::-ms-input-placeholder": o,
      // Edge
      "&:focus::-webkit-input-placeholder": r,
      "&:focus::-moz-placeholder": r,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": r
      // Edge
    },
    [`&.${to.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: i
      }) => !i.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: i
      }) => i.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), vb = Gh({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), xd = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": r,
    autoComplete: i,
    autoFocus: a,
    className: l,
    color: c,
    components: u = {},
    componentsProps: f = {},
    defaultValue: d,
    disabled: p,
    disableInjectingGlobalStyles: h,
    endAdornment: g,
    error: m,
    fullWidth: y = !1,
    id: x,
    inputComponent: T = "input",
    inputProps: b = {},
    inputRef: w,
    margin: S,
    maxRows: E,
    minRows: C,
    multiline: R = !1,
    name: M,
    onBlur: v,
    onChange: I,
    onClick: k,
    onFocus: A,
    onKeyDown: O,
    onKeyUp: _,
    placeholder: N,
    readOnly: L,
    renderSuffix: F,
    rows: D,
    size: B,
    slotProps: z = {},
    slots: U = {},
    startAdornment: q,
    type: Y = "text",
    value: K,
    ...te
  } = o, ne = b.value != null ? b.value : K, {
    current: W
  } = P.useRef(ne != null), ee = P.useRef(), G = P.useCallback((le) => {
    process.env.NODE_ENV !== "production" && le && le.nodeName !== "INPUT" && !le.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), re = un(ee, w, b.ref, G), [V, de] = P.useState(!1), ue = li();
  process.env.NODE_ENV !== "production" && P.useEffect(() => {
    if (ue)
      return ue.registerEffect();
  }, [ue]);
  const xe = Zs({
    props: o,
    muiFormControl: ue,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  xe.focused = ue ? ue.focused : V, P.useEffect(() => {
    !ue && p && V && (de(!1), v && v());
  }, [ue, p, V, v]);
  const Ae = ue && ue.onFilled, we = ue && ue.onEmpty, De = P.useCallback((le) => {
    pu(le) ? Ae && Ae() : we && we();
  }, [Ae, we]);
  zo(() => {
    W && De({
      value: ne
    });
  }, [ne, De, W]);
  const Ce = (le) => {
    A && A(le), b.onFocus && b.onFocus(le), ue && ue.onFocus ? ue.onFocus(le) : de(!0);
  }, Be = (le) => {
    v && v(le), b.onBlur && b.onBlur(le), ue && ue.onBlur ? ue.onBlur(le) : de(!1);
  }, Me = (le, ...ae) => {
    if (!W) {
      const ce = le.target || ee.current;
      if (ce == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : lr(1));
      De({
        value: ce.value
      });
    }
    b.onChange && b.onChange(le, ...ae), I && I(le, ...ae);
  };
  P.useEffect(() => {
    De(ee.current);
  }, []);
  const j = (le) => {
    ee.current && le.currentTarget === le.target && ee.current.focus(), k && k(le);
  };
  let J = T, ie = b;
  R && J === "input" && (D ? (process.env.NODE_ENV !== "production" && (C || E) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), ie = {
    type: void 0,
    minRows: D,
    maxRows: D,
    ...ie
  }) : ie = {
    type: void 0,
    maxRows: E,
    minRows: C,
    ...ie
  }, J = PS);
  const Q = (le) => {
    De(le.animationName === "mui-auto-fill-cancel" ? ee.current : {
      value: "x"
    });
  };
  P.useEffect(() => {
    ue && ue.setAdornedStart(!!q);
  }, [ue, q]);
  const H = {
    ...o,
    color: xe.color || "primary",
    disabled: xe.disabled,
    endAdornment: g,
    error: xe.error,
    focused: xe.focused,
    formControl: ue,
    fullWidth: y,
    hiddenLabel: xe.hiddenLabel,
    multiline: R,
    size: xe.size,
    startAdornment: q,
    type: Y
  }, X = s2(H), se = U.root || u.Root || bd, ye = z.root || f.root || {}, he = U.input || u.Input || vd;
  return ie = {
    ...ie,
    ...z.input ?? f.input
  }, /* @__PURE__ */ Te(P.Fragment, {
    children: [!h && typeof vb == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (bb || (bb = /* @__PURE__ */ $(vb, {}))), /* @__PURE__ */ Te(se, {
      ...ye,
      ref: n,
      onClick: j,
      ...te,
      ...!Hp(se) && {
        ownerState: {
          ...H,
          ...ye.ownerState
        }
      },
      className: Re(X.root, ye.className, l, L && "MuiInputBase-readOnly"),
      children: [q, /* @__PURE__ */ $(pd.Provider, {
        value: null,
        children: /* @__PURE__ */ $(he, {
          "aria-invalid": xe.error,
          "aria-describedby": r,
          autoComplete: i,
          autoFocus: a,
          defaultValue: d,
          disabled: xe.disabled,
          id: x,
          onAnimationStart: Q,
          name: M,
          placeholder: N,
          readOnly: L,
          required: xe.required,
          rows: D,
          value: ne,
          onKeyDown: O,
          onKeyUp: _,
          type: Y,
          ...ie,
          ...!Hp(he) && {
            as: J,
            ownerState: {
              ...H,
              ...ie.ownerState
            }
          },
          ref: re,
          className: Re(X.input, ie.className, L && "MuiInputBase-readOnly"),
          onBlur: Be,
          onChange: Me,
          onFocus: Ce
        })
      }), g, F ? F({
        ...xe,
        startAdornment: q
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (xd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": s.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: s.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: s.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: s.oneOfType([s.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), s.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: s.shape({
    Input: s.elementType,
    Root: s.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: s.shape({
    input: s.object,
    root: s.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: s.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: s.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: s.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: s.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: s.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: s.bool,
  /**
   * The id of the `input` element.
   */
  id: s.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: zh,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: s.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Qn,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: s.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: s.oneOfType([s.number, s.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: s.oneOfType([s.number, s.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: s.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: s.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: s.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: s.func,
  /**
   * @ignore
   */
  onClick: s.func,
  /**
   * @ignore
   */
  onFocus: s.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: s.func,
  /**
   * @ignore
   */
  onKeyDown: s.func,
  /**
   * @ignore
   */
  onKeyUp: s.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: s.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: s.bool,
  /**
   * @ignore
   */
  renderSuffix: s.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: s.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: s.oneOfType([s.number, s.string]),
  /**
   * The size of the component.
   */
  size: s.oneOfType([s.oneOf(["medium", "small"]), s.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: s.shape({
    input: s.object,
    root: s.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: s.shape({
    input: s.elementType,
    root: s.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: s.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: s.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: s.any
});
function a2(e) {
  return tt("MuiOutlinedInput", e);
}
const wo = {
  ...to,
  ...it("MuiOutlinedInput", ["root", "notchedOutline", "input"])
}, l2 = (e) => {
  const {
    classes: t
  } = e, o = rt({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, a2, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...o
  };
}, c2 = Ee(bd, {
  shouldForwardProp: (e) => Dn(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: gd
})(qe(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${wo.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${wo.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${wo.focused} .${wo.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(Ut()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${wo.focused} .${wo.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${wo.error} .${wo.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${wo.disabled} .${wo.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: o
      }) => n.multiline && o === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), u2 = Ee(kS, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(qe(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), d2 = Ee(vd, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: yd
})(qe(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), Nl = /* @__PURE__ */ P.forwardRef(function(t, n) {
  var o;
  const r = lt({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: i = {},
    fullWidth: a = !1,
    inputComponent: l = "input",
    label: c,
    multiline: u = !1,
    notched: f,
    slots: d = {},
    type: p = "text",
    ...h
  } = r, g = l2(r), m = li(), y = Zs({
    props: r,
    muiFormControl: m,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), x = {
    ...r,
    color: y.color || "primary",
    disabled: y.disabled,
    error: y.error,
    focused: y.focused,
    formControl: m,
    fullWidth: a,
    hiddenLabel: y.hiddenLabel,
    multiline: u,
    size: y.size,
    type: p
  }, T = d.root ?? i.Root ?? c2, b = d.input ?? i.Input ?? d2;
  return /* @__PURE__ */ $(xd, {
    slots: {
      root: T,
      input: b
    },
    renderSuffix: (w) => /* @__PURE__ */ $(u2, {
      ownerState: x,
      className: g.notchedOutline,
      label: c != null && c !== "" && y.required ? o || (o = /* @__PURE__ */ Te(P.Fragment, {
        children: [c, " ", "*"]
      })) : c,
      notched: typeof f < "u" ? f : !!(w.startAdornment || w.filled || w.focused)
    }),
    fullWidth: a,
    inputComponent: l,
    multiline: u,
    ref: n,
    type: p,
    ...h,
    classes: {
      ...g,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (Nl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: s.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: s.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: s.oneOfType([s.oneOf(["primary", "secondary"]), s.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: s.shape({
    Input: s.elementType,
    Root: s.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: s.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: s.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: s.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: s.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: s.bool,
  /**
   * The id of the `input` element.
   */
  id: s.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: s.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: s.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Qn,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: s.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: s.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: s.oneOfType([s.number, s.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: s.oneOfType([s.number, s.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: s.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: s.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: s.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: s.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: s.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: s.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: s.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: s.oneOfType([s.number, s.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: s.shape({
    input: s.elementType,
    root: s.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: s.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: s.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: s.any
});
Nl.muiName = "Input";
function $m({
  isDisabled: e,
  isError: t
}) {
  return {
    inputCommonStyle: Qe(
      () => ({
        borderRadius: "8px",
        minWidth: "200px",
        "& input": {
          cursor: e ? "not-allowed" : "text",
          color: (o) => e ? "disabled" : t ? o.palette.error.main : "inherit"
        }
      }),
      [e, t]
    )
  };
}
const wd = Ie(
  ({
    label: e = "",
    tooltip: t,
    fullWidth: n = !1,
    value: o,
    onChange: r,
    isRequired: i,
    isDisabled: a,
    isError: l,
    errorMessage: c = "",
    sx: u,
    ...f
  }) => {
    const d = Ch(), { inputCommonStyle: p } = $m({
      isDisabled: a,
      isError: l
    }), { textCommonStyles: h } = $l({
      isTitle: !1,
      isLabel: !0,
      textColor: a ? "disabled" : l ? "error" : "auto"
    });
    return /* @__PURE__ */ Te(dn, { gap: 0, width: n ? "100%" : "auto", children: [
      e && /* @__PURE__ */ $(
        Mi,
        {
          label: e,
          elementId: d,
          tooltip: t,
          isRequired: i,
          isDisabled: a,
          isError: l
        }
      ),
      /* @__PURE__ */ $(
        Nl,
        {
          id: d,
          autoComplete: "off",
          fullWidth: n,
          size: "small",
          error: l,
          disabled: a,
          value: o,
          onChange: (g) => r(g.target.value, g),
          sx: { ...p, ...u },
          ...f
        }
      ),
      l && /* @__PURE__ */ $(
        Cn,
        {
          text: l ? c : "",
          isLabel: !0,
          sx: { ...h, lineHeight: "1.5rem" }
        }
      )
    ] });
  }
);
wd.displayName = "Input";
const NS = Ie(
  ({ isError: e, fullWidth: t, value: n = 0, onChange: o, sx: r, min: i = 0, max: a = 1e3, step: l = 1, ...c }) => {
    const u = ze(
      (f) => {
        if (!f || isNaN(parseInt(f, 10))) {
          o(i);
          return;
        }
        const d = Math.abs(parseInt(f, 10));
        o(d);
      },
      [i, o]
    );
    return /* @__PURE__ */ $(
      wd,
      {
        type: "number",
        fullWidth: t,
        isError: e,
        value: Math.abs(n).toString(),
        onChange: u,
        sx: {
          ...r
        },
        slotProps: {
          input: {
            type: "number",
            min: i,
            max: a,
            step: l
          }
        },
        ...c
      }
    );
  }
);
NS.displayName = "NumberInput";
function fr(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((o) => n.searchParams.append("args[]", o)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
const Sd = "$$material";
function f2(e) {
  return e == null || Object.keys(e).length === 0;
}
function MS(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e;
  return /* @__PURE__ */ $(wx, {
    styles: typeof t == "function" ? (r) => t(f2(r) ? n : r) : t
  });
}
process.env.NODE_ENV !== "production" && (MS.propTypes = {
  defaultTheme: s.object,
  styles: s.oneOfType([s.array, s.string, s.object, s.func])
});
/**
 * @mui/styled-engine v7.0.2
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function _S(e, t) {
  const n = Zc(e, t);
  return process.env.NODE_ENV !== "production" ? (...o) => {
    const r = typeof e == "string" ? `"${e}"` : "component";
    return o.length === 0 ? console.error([`MUI: Seems like you called \`styled(${r})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : o.some((i) => i === void 0) && console.error(`MUI: the styled(${r})(...args) API requires all its args to be defined.`), n(...o);
  } : n;
}
function p2(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const xb = [];
function wb(e) {
  return xb[0] = e, Hs(xb);
}
function nr(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function AS(e) {
  if (/* @__PURE__ */ P.isValidElement(e) || Xn.isValidElementType(e) || !nr(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = AS(e[n]);
  }), t;
}
function An(e, t, n = {
  clone: !0
}) {
  const o = n.clone ? {
    ...e
  } : e;
  return nr(e) && nr(t) && Object.keys(t).forEach((r) => {
    /* @__PURE__ */ P.isValidElement(t[r]) || Xn.isValidElementType(t[r]) ? o[r] = t[r] : nr(t[r]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, r) && nr(e[r]) ? o[r] = An(e[r], t[r], n) : n.clone ? o[r] = nr(t[r]) ? AS(t[r]) : t[r] : o[r] = t[r];
  }), o;
}
const h2 = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, o) => n.val - o.val), t.reduce((n, o) => ({
    ...n,
    [o.key]: o.val
  }), {});
};
function m2(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: o = 5,
    ...r
  } = e, i = h2(t), a = Object.keys(i);
  function l(p) {
    return `@media (min-width:${typeof t[p] == "number" ? t[p] : p}${n})`;
  }
  function c(p) {
    return `@media (max-width:${(typeof t[p] == "number" ? t[p] : p) - o / 100}${n})`;
  }
  function u(p, h) {
    const g = a.indexOf(h);
    return `@media (min-width:${typeof t[p] == "number" ? t[p] : p}${n}) and (max-width:${(g !== -1 && typeof t[a[g]] == "number" ? t[a[g]] : h) - o / 100}${n})`;
  }
  function f(p) {
    return a.indexOf(p) + 1 < a.length ? u(p, a[a.indexOf(p) + 1]) : l(p);
  }
  function d(p) {
    const h = a.indexOf(p);
    return h === 0 ? l(a[1]) : h === a.length - 1 ? c(a[h]) : u(p, a[a.indexOf(p) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: a,
    values: i,
    up: l,
    down: c,
    between: u,
    only: f,
    not: d,
    unit: n,
    ...r
  };
}
function g2(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((o) => o.startsWith("@container")).sort((o, r) => {
    var a, l;
    const i = /min-width:\s*([0-9.]+)/;
    return +(((a = o.match(i)) == null ? void 0 : a[1]) || 0) - +(((l = r.match(i)) == null ? void 0 : l[1]) || 0);
  });
  return n.length ? n.reduce((o, r) => {
    const i = t[r];
    return delete o[r], o[r] = i, o;
  }, {
    ...t
  }) : t;
}
function y2(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function b2(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : fr(18, `(${t})`));
    return null;
  }
  const [, o, r] = n, i = Number.isNaN(+o) ? o || 0 : +o;
  return e.containerQueries(r).up(i);
}
function v2(e) {
  const t = (i, a) => i.replace("@media", a ? `@container ${a}` : "@container");
  function n(i, a) {
    i.up = (...l) => t(e.breakpoints.up(...l), a), i.down = (...l) => t(e.breakpoints.down(...l), a), i.between = (...l) => t(e.breakpoints.between(...l), a), i.only = (...l) => t(e.breakpoints.only(...l), a), i.not = (...l) => {
      const c = t(e.breakpoints.not(...l), a);
      return c.includes("not all and") ? c.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : c;
    };
  }
  const o = {}, r = (i) => (n(o, i), o);
  return n(r), {
    ...e,
    containerQueries: r
  };
}
const x2 = {
  borderRadius: 4
}, ci = process.env.NODE_ENV !== "production" ? s.oneOfType([s.number, s.string, s.object, s.array]) : {};
function Da(e, t) {
  return t ? An(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const Td = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, Sb = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${Td[e]}px)`
}, w2 = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : Td[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function $r(e, t, n) {
  const o = e.theme || {};
  if (Array.isArray(t)) {
    const i = o.breakpoints || Sb;
    return t.reduce((a, l, c) => (a[i.up(i.keys[c])] = n(t[c]), a), {});
  }
  if (typeof t == "object") {
    const i = o.breakpoints || Sb;
    return Object.keys(t).reduce((a, l) => {
      if (y2(i.keys, l)) {
        const c = b2(o.containerQueries ? o : w2, l);
        c && (a[c] = n(t[l], l));
      } else if (Object.keys(i.values || Td).includes(l)) {
        const c = i.up(l);
        a[c] = n(t[l], l);
      } else {
        const c = l;
        a[c] = t[c];
      }
      return a;
    }, {});
  }
  return n(t);
}
function S2(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((o, r) => {
    const i = e.up(r);
    return o[i] = {}, o;
  }, {})) || {};
}
function T2(e, t) {
  return e.reduce((n, o) => {
    const r = n[o];
    return (!r || Object.keys(r).length === 0) && delete n[o], n;
  }, t);
}
function on(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : fr(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function Ed(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const o = `vars.${t}`.split(".").reduce((r, i) => r && r[i] ? r[i] : null, e);
    if (o != null)
      return o;
  }
  return t.split(".").reduce((o, r) => o && o[r] != null ? o[r] : null, e);
}
function hu(e, t, n, o = n) {
  let r;
  return typeof e == "function" ? r = e(n) : Array.isArray(e) ? r = e[n] || o : r = Ed(e, n) || o, t && (r = t(r, o, e)), r;
}
function sn(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: o,
    transform: r
  } = e, i = (a) => {
    if (a[t] == null)
      return null;
    const l = a[t], c = a.theme, u = Ed(c, o) || {};
    return $r(a, l, (d) => {
      let p = hu(u, r, d);
      return d === p && typeof d == "string" && (p = hu(u, r, `${t}${d === "default" ? "" : on(d)}`, d)), n === !1 ? p : {
        [n]: p
      };
    });
  };
  return i.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: ci
  } : {}, i.filterProps = [t], i;
}
function E2(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const C2 = {
  m: "margin",
  p: "padding"
}, O2 = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, Tb = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, $2 = E2((e) => {
  if (e.length > 2)
    if (Tb[e])
      e = Tb[e];
    else
      return [e];
  const [t, n] = e.split(""), o = C2[t], r = O2[n] || "";
  return Array.isArray(r) ? r.map((i) => o + i) : [o + r];
}), Cd = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], Od = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], I2 = [...Cd, ...Od];
function Ml(e, t, n, o) {
  const r = Ed(e, t, !0) ?? n;
  return typeof r == "number" || typeof r == "string" ? (i) => typeof i == "string" ? i : (process.env.NODE_ENV !== "production" && typeof i != "number" && console.error(`MUI: Expected ${o} argument to be a number or a string, got ${i}.`), typeof r == "string" ? r.startsWith("var(") && i === 0 ? 0 : r.startsWith("var(") && i === 1 ? r : `calc(${i} * ${r})` : r * i) : Array.isArray(r) ? (i) => {
    if (typeof i == "string")
      return i;
    const a = Math.abs(i);
    process.env.NODE_ENV !== "production" && (Number.isInteger(a) ? a > r.length - 1 && console.error([`MUI: The value provided (${a}) overflows.`, `The supported values are: ${JSON.stringify(r)}.`, `${a} > ${r.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const l = r[a];
    return i >= 0 ? l : typeof l == "number" ? -l : typeof l == "string" && l.startsWith("var(") ? `calc(-1 * ${l})` : `-${l}`;
  } : typeof r == "function" ? r : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${r}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function Im(e) {
  return Ml(e, "spacing", 8, "spacing");
}
function _l(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function R2(e, t) {
  return (n) => e.reduce((o, r) => (o[r] = _l(t, n), o), {});
}
function k2(e, t, n, o) {
  if (!t.includes(n))
    return null;
  const r = $2(n), i = R2(r, o), a = e[n];
  return $r(e, a, i);
}
function DS(e, t) {
  const n = Im(e.theme);
  return Object.keys(e).map((o) => k2(e, t, o, n)).reduce(Da, {});
}
function Jt(e) {
  return DS(e, Cd);
}
Jt.propTypes = process.env.NODE_ENV !== "production" ? Cd.reduce((e, t) => (e[t] = ci, e), {}) : {};
Jt.filterProps = Cd;
function en(e) {
  return DS(e, Od);
}
en.propTypes = process.env.NODE_ENV !== "production" ? Od.reduce((e, t) => (e[t] = ci, e), {}) : {};
en.filterProps = Od;
process.env.NODE_ENV !== "production" && I2.reduce((e, t) => (e[t] = ci, e), {});
function LS(e = 8, t = Im({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...o) => (process.env.NODE_ENV !== "production" && (o.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${o.length}`)), (o.length === 0 ? [1] : o).map((i) => {
    const a = t(i);
    return typeof a == "number" ? `${a}px` : a;
  }).join(" "));
  return n.mui = !0, n;
}
function $d(...e) {
  const t = e.reduce((o, r) => (r.filterProps.forEach((i) => {
    o[i] = r;
  }), o), {}), n = (o) => Object.keys(o).reduce((r, i) => t[i] ? Da(r, t[i](o)) : r, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((o, r) => Object.assign(o, r.propTypes), {}) : {}, n.filterProps = e.reduce((o, r) => o.concat(r.filterProps), []), n;
}
function Eo(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function No(e, t) {
  return sn({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const P2 = No("border", Eo), N2 = No("borderTop", Eo), M2 = No("borderRight", Eo), _2 = No("borderBottom", Eo), A2 = No("borderLeft", Eo), D2 = No("borderColor"), L2 = No("borderTopColor"), B2 = No("borderRightColor"), F2 = No("borderBottomColor"), z2 = No("borderLeftColor"), j2 = No("outline", Eo), V2 = No("outlineColor"), Id = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = Ml(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (o) => ({
      borderRadius: _l(t, o)
    });
    return $r(e, e.borderRadius, n);
  }
  return null;
};
Id.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: ci
} : {};
Id.filterProps = ["borderRadius"];
$d(P2, N2, M2, _2, A2, D2, L2, B2, F2, z2, Id, j2, V2);
const Rd = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = Ml(e.theme, "spacing", 8, "gap"), n = (o) => ({
      gap: _l(t, o)
    });
    return $r(e, e.gap, n);
  }
  return null;
};
Rd.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: ci
} : {};
Rd.filterProps = ["gap"];
const kd = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = Ml(e.theme, "spacing", 8, "columnGap"), n = (o) => ({
      columnGap: _l(t, o)
    });
    return $r(e, e.columnGap, n);
  }
  return null;
};
kd.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: ci
} : {};
kd.filterProps = ["columnGap"];
const Pd = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = Ml(e.theme, "spacing", 8, "rowGap"), n = (o) => ({
      rowGap: _l(t, o)
    });
    return $r(e, e.rowGap, n);
  }
  return null;
};
Pd.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: ci
} : {};
Pd.filterProps = ["rowGap"];
const H2 = sn({
  prop: "gridColumn"
}), W2 = sn({
  prop: "gridRow"
}), U2 = sn({
  prop: "gridAutoFlow"
}), q2 = sn({
  prop: "gridAutoColumns"
}), K2 = sn({
  prop: "gridAutoRows"
}), Y2 = sn({
  prop: "gridTemplateColumns"
}), G2 = sn({
  prop: "gridTemplateRows"
}), X2 = sn({
  prop: "gridTemplateAreas"
}), Z2 = sn({
  prop: "gridArea"
});
$d(Rd, kd, Pd, H2, W2, U2, q2, K2, Y2, G2, X2, Z2);
function ys(e, t) {
  return t === "grey" ? t : e;
}
const Q2 = sn({
  prop: "color",
  themeKey: "palette",
  transform: ys
}), J2 = sn({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: ys
}), eD = sn({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: ys
});
$d(Q2, J2, eD);
function so(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const tD = sn({
  prop: "width",
  transform: so
}), Rm = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var r, i, a, l, c;
      const o = ((a = (i = (r = e.theme) == null ? void 0 : r.breakpoints) == null ? void 0 : i.values) == null ? void 0 : a[n]) || Td[n];
      return o ? ((c = (l = e.theme) == null ? void 0 : l.breakpoints) == null ? void 0 : c.unit) !== "px" ? {
        maxWidth: `${o}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: o
      } : {
        maxWidth: so(n)
      };
    };
    return $r(e, e.maxWidth, t);
  }
  return null;
};
Rm.filterProps = ["maxWidth"];
const nD = sn({
  prop: "minWidth",
  transform: so
}), oD = sn({
  prop: "height",
  transform: so
}), rD = sn({
  prop: "maxHeight",
  transform: so
}), iD = sn({
  prop: "minHeight",
  transform: so
});
sn({
  prop: "size",
  cssProperty: "width",
  transform: so
});
sn({
  prop: "size",
  cssProperty: "height",
  transform: so
});
const sD = sn({
  prop: "boxSizing"
});
$d(tD, Rm, nD, oD, rD, iD, sD);
const Al = {
  // borders
  border: {
    themeKey: "borders",
    transform: Eo
  },
  borderTop: {
    themeKey: "borders",
    transform: Eo
  },
  borderRight: {
    themeKey: "borders",
    transform: Eo
  },
  borderBottom: {
    themeKey: "borders",
    transform: Eo
  },
  borderLeft: {
    themeKey: "borders",
    transform: Eo
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: Eo
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: Id
  },
  // palette
  color: {
    themeKey: "palette",
    transform: ys
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: ys
  },
  backgroundColor: {
    themeKey: "palette",
    transform: ys
  },
  // spacing
  p: {
    style: en
  },
  pt: {
    style: en
  },
  pr: {
    style: en
  },
  pb: {
    style: en
  },
  pl: {
    style: en
  },
  px: {
    style: en
  },
  py: {
    style: en
  },
  padding: {
    style: en
  },
  paddingTop: {
    style: en
  },
  paddingRight: {
    style: en
  },
  paddingBottom: {
    style: en
  },
  paddingLeft: {
    style: en
  },
  paddingX: {
    style: en
  },
  paddingY: {
    style: en
  },
  paddingInline: {
    style: en
  },
  paddingInlineStart: {
    style: en
  },
  paddingInlineEnd: {
    style: en
  },
  paddingBlock: {
    style: en
  },
  paddingBlockStart: {
    style: en
  },
  paddingBlockEnd: {
    style: en
  },
  m: {
    style: Jt
  },
  mt: {
    style: Jt
  },
  mr: {
    style: Jt
  },
  mb: {
    style: Jt
  },
  ml: {
    style: Jt
  },
  mx: {
    style: Jt
  },
  my: {
    style: Jt
  },
  margin: {
    style: Jt
  },
  marginTop: {
    style: Jt
  },
  marginRight: {
    style: Jt
  },
  marginBottom: {
    style: Jt
  },
  marginLeft: {
    style: Jt
  },
  marginX: {
    style: Jt
  },
  marginY: {
    style: Jt
  },
  marginInline: {
    style: Jt
  },
  marginInlineStart: {
    style: Jt
  },
  marginInlineEnd: {
    style: Jt
  },
  marginBlock: {
    style: Jt
  },
  marginBlockStart: {
    style: Jt
  },
  marginBlockEnd: {
    style: Jt
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: Rd
  },
  rowGap: {
    style: Pd
  },
  columnGap: {
    style: kd
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: so
  },
  maxWidth: {
    style: Rm
  },
  minWidth: {
    transform: so
  },
  height: {
    transform: so
  },
  maxHeight: {
    transform: so
  },
  minHeight: {
    transform: so
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function aD(...e) {
  const t = e.reduce((o, r) => o.concat(Object.keys(r)), []), n = new Set(t);
  return e.every((o) => n.size === Object.keys(o).length);
}
function lD(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function cD() {
  function e(n, o, r, i) {
    const a = {
      [n]: o,
      theme: r
    }, l = i[n];
    if (!l)
      return {
        [n]: o
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: f,
      style: d
    } = l;
    if (o == null)
      return null;
    if (u === "typography" && o === "inherit")
      return {
        [n]: o
      };
    const p = Ed(r, u) || {};
    return d ? d(a) : $r(a, o, (g) => {
      let m = hu(p, f, g);
      return g === m && typeof g == "string" && (m = hu(p, f, `${n}${g === "default" ? "" : on(g)}`, g)), c === !1 ? m : {
        [c]: m
      };
    });
  }
  function t(n) {
    const {
      sx: o,
      theme: r = {}
    } = n || {};
    if (!o)
      return null;
    const i = r.unstable_sxConfig ?? Al;
    function a(l) {
      let c = l;
      if (typeof l == "function")
        c = l(r);
      else if (typeof l != "object")
        return l;
      if (!c)
        return null;
      const u = S2(r.breakpoints), f = Object.keys(u);
      let d = u;
      return Object.keys(c).forEach((p) => {
        const h = lD(c[p], r);
        if (h != null)
          if (typeof h == "object")
            if (i[p])
              d = Da(d, e(p, h, r, i));
            else {
              const g = $r({
                theme: r
              }, h, (m) => ({
                [p]: m
              }));
              aD(g, h) ? d[p] = t({
                sx: h,
                theme: r
              }) : d = Da(d, g);
            }
          else
            d = Da(d, e(p, h, r, i));
      }), g2(r, T2(f, d));
    }
    return Array.isArray(o) ? o.map(a) : a(o);
  }
  return t;
}
const _i = cD();
_i.filterProps = ["sx"];
function uD(e, t) {
  var o;
  const n = this;
  if (n.vars) {
    if (!((o = n.colorSchemes) != null && o[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let r = n.getColorSchemeSelector(e);
    return r === "&" ? t : ((r.includes("data-") || r.includes(".")) && (r = `*:where(${r.replace(/\s*&$/, "")}) &`), {
      [r]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function km(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: o = {},
    spacing: r,
    shape: i = {},
    ...a
  } = e, l = m2(n), c = LS(r);
  let u = An({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...o
    },
    spacing: c,
    shape: {
      ...x2,
      ...i
    }
  }, a);
  return u = v2(u), u.applyStyles = uD, u = t.reduce((f, d) => An(f, d), u), u.unstable_sxConfig = {
    ...Al,
    ...a == null ? void 0 : a.unstable_sxConfig
  }, u.unstable_sx = function(d) {
    return _i({
      sx: d,
      theme: this
    });
  }, u;
}
function dD(e) {
  return Object.keys(e).length === 0;
}
function fD(e = null) {
  const t = P.useContext(Ws);
  return !t || dD(t) ? e : t;
}
const pD = km();
function Pm(e = pD) {
  return fD(e);
}
function BS({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const o = Pm(n), r = typeof e == "function" ? e(t && o[t] || o) : e;
  return /* @__PURE__ */ $(MS, {
    styles: r
  });
}
process.env.NODE_ENV !== "production" && (BS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: s.object,
  /**
   * @ignore
   */
  styles: s.oneOfType([s.array, s.func, s.number, s.object, s.string, s.bool]),
  /**
   * @ignore
   */
  themeId: s.string
});
const hD = (e) => {
  var o;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((o = e == null ? void 0 : e.theme) == null ? void 0 : o.unstable_sxConfig) ?? Al;
  return Object.keys(e).forEach((r) => {
    n[r] ? t.systemProps[r] = e[r] : t.otherProps[r] = e[r];
  }), t;
};
function mD(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: o,
    otherProps: r
  } = hD(n);
  let i;
  return Array.isArray(t) ? i = [o, ...t] : typeof t == "function" ? i = (...a) => {
    const l = t(...a);
    return nr(l) ? {
      ...o,
      ...l
    } : o;
  } : i = {
    ...o,
    ...t
  }, {
    ...r,
    sx: i
  };
}
const Eb = (e) => e, gD = () => {
  let e = Eb;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = Eb;
    }
  };
}, FS = gD();
function yD(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: o = "MuiBox-root",
    generateClassName: r
  } = e, i = _S("div", {
    shouldForwardProp: (l) => l !== "theme" && l !== "sx" && l !== "as"
  })(_i);
  return /* @__PURE__ */ P.forwardRef(function(c, u) {
    const f = Pm(n), {
      className: d,
      component: p = "div",
      ...h
    } = mD(c);
    return /* @__PURE__ */ $(i, {
      as: p,
      ref: u,
      className: Re(d, r ? r(o) : o),
      theme: t && f[t] || f,
      ...h
    });
  });
}
const bD = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function fn(e, t, n = "Mui") {
  const o = bD[t];
  return o ? `${n}-${o}` : `${FS.generate(e)}-${t}`;
}
function bn(e, t, n = "Mui") {
  const o = {};
  return t.forEach((r) => {
    o[r] = fn(e, r, n);
  }), o;
}
function zS(e, t = "") {
  return e.displayName || e.name || t;
}
function Cb(e, t, n) {
  const o = zS(t);
  return e.displayName || (o !== "" ? `${n}(${o})` : n);
}
function vD(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return zS(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case Xn.ForwardRef:
          return Cb(e, e.render, "ForwardRef");
        case Xn.Memo:
          return Cb(e, e.type, "memo");
        default:
          return;
      }
  }
}
function jS(e) {
  const {
    variants: t,
    ...n
  } = e, o = {
    variants: t,
    style: wb(n),
    isProcessed: !0
  };
  return o.style === n || t && t.forEach((r) => {
    typeof r.style != "function" && (r.style = wb(r.style));
  }), o;
}
const xD = km();
function Af(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function wD(e) {
  return e ? (t, n) => n[e] : null;
}
function SD(e, t, n) {
  e.theme = OD(e.theme) ? n : e.theme[t] || e.theme;
}
function jc(e, t) {
  const n = typeof t == "function" ? t(e) : t;
  if (Array.isArray(n))
    return n.flatMap((o) => jc(e, o));
  if (Array.isArray(n == null ? void 0 : n.variants)) {
    let o;
    if (n.isProcessed)
      o = n.style;
    else {
      const {
        variants: r,
        ...i
      } = n;
      o = i;
    }
    return VS(e, n.variants, [o]);
  }
  return n != null && n.isProcessed ? n.style : n;
}
function VS(e, t, n = []) {
  var r;
  let o;
  e: for (let i = 0; i < t.length; i += 1) {
    const a = t[i];
    if (typeof a.props == "function") {
      if (o ?? (o = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !a.props(o))
        continue;
    } else
      for (const l in a.props)
        if (e[l] !== a.props[l] && ((r = e.ownerState) == null ? void 0 : r[l]) !== a.props[l])
          continue e;
    typeof a.style == "function" ? (o ?? (o = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(a.style(o))) : n.push(a.style);
  }
  return n;
}
function TD(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = xD,
    rootShouldForwardProp: o = Af,
    slotShouldForwardProp: r = Af
  } = e;
  function i(l) {
    SD(l, t, n);
  }
  return (l, c = {}) => {
    p2(l, (S) => S.filter((E) => E !== _i));
    const {
      name: u,
      slot: f,
      skipVariantsResolver: d,
      skipSx: p,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: h = wD(HS(f)),
      ...g
    } = c, m = d !== void 0 ? d : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      f && f !== "Root" && f !== "root" || !1
    ), y = p || !1;
    let x = Af;
    f === "Root" || f === "root" ? x = o : f ? x = r : $D(l) && (x = void 0);
    const T = _S(l, {
      shouldForwardProp: x,
      label: CD(u, f),
      ...g
    }), b = (S) => {
      if (typeof S == "function" && S.__emotion_real !== S)
        return function(C) {
          return jc(C, S);
        };
      if (nr(S)) {
        const E = jS(S);
        return E.variants ? function(R) {
          return jc(R, E);
        } : E.style;
      }
      return S;
    }, w = (...S) => {
      const E = [], C = S.map(b), R = [];
      if (E.push(i), u && h && R.push(function(k) {
        var N, L;
        const O = (L = (N = k.theme.components) == null ? void 0 : N[u]) == null ? void 0 : L.styleOverrides;
        if (!O)
          return null;
        const _ = {};
        for (const F in O)
          _[F] = jc(k, O[F]);
        return h(k, _);
      }), u && !m && R.push(function(k) {
        var _, N;
        const A = k.theme, O = (N = (_ = A == null ? void 0 : A.components) == null ? void 0 : _[u]) == null ? void 0 : N.variants;
        return O ? VS(k, O) : null;
      }), y || R.push(_i), Array.isArray(C[0])) {
        const I = C.shift(), k = new Array(E.length).fill(""), A = new Array(R.length).fill("");
        let O;
        O = [...k, ...I, ...A], O.raw = [...k, ...I.raw, ...A], E.unshift(O);
      }
      const M = [...E, ...C, ...R], v = T(...M);
      return l.muiName && (v.muiName = l.muiName), process.env.NODE_ENV !== "production" && (v.displayName = ED(u, f, l)), v;
    };
    return T.withConfig && (w.withConfig = T.withConfig), w;
  };
}
function ED(e, t, n) {
  return e ? `${e}${on(t || "")}` : `Styled(${vD(n)})`;
}
function CD(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${HS(t || "Root")}`), n;
}
function OD(e) {
  for (const t in e)
    return !1;
  return !0;
}
function $D(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function HS(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
function Wp(e, t) {
  const n = {
    ...t
  };
  for (const o in e)
    if (Object.prototype.hasOwnProperty.call(e, o)) {
      const r = o;
      if (r === "components" || r === "slots")
        n[r] = {
          ...e[r],
          ...n[r]
        };
      else if (r === "componentsProps" || r === "slotProps") {
        const i = e[r], a = t[r];
        if (!a)
          n[r] = i || {};
        else if (!i)
          n[r] = a;
        else {
          n[r] = {
            ...a
          };
          for (const l in i)
            if (Object.prototype.hasOwnProperty.call(i, l)) {
              const c = l;
              n[r][c] = Wp(i[c], a[c]);
            }
        }
      } else n[r] === void 0 && (n[r] = e[r]);
    }
  return n;
}
const Ai = typeof window < "u" ? P.useLayoutEffect : P.useEffect;
function ID(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function Nm(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), ID(e, t, n);
}
function RD(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((o) => o + o)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((o, r) => r < 3 ? parseInt(o, 16) : Math.round(parseInt(o, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function Xr(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return Xr(RD(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : fr(9, e));
  let o = e.substring(t + 1, e.length - 1), r;
  if (n === "color") {
    if (o = o.split(" "), r = o.shift(), o.length === 4 && o[3].charAt(0) === "/" && (o[3] = o[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(r))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${r}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : fr(10, r));
  } else
    o = o.split(",");
  return o = o.map((i) => parseFloat(i)), {
    type: n,
    values: o,
    colorSpace: r
  };
}
const kD = (e) => {
  const t = Xr(e);
  return t.values.slice(0, 3).map((n, o) => t.type.includes("hsl") && o !== 0 ? `${n}%` : n).join(" ");
}, Sa = (e, t) => {
  try {
    return kD(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function Nd(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: o
  } = e;
  return t.includes("rgb") ? o = o.map((r, i) => i < 3 ? parseInt(r, 10) : r) : t.includes("hsl") && (o[1] = `${o[1]}%`, o[2] = `${o[2]}%`), t.includes("color") ? o = `${n} ${o.join(" ")}` : o = `${o.join(", ")}`, `${t}(${o})`;
}
function WS(e) {
  e = Xr(e);
  const {
    values: t
  } = e, n = t[0], o = t[1] / 100, r = t[2] / 100, i = o * Math.min(r, 1 - r), a = (u, f = (u + n / 30) % 12) => r - i * Math.max(Math.min(f - 3, 9 - f, 1), -1);
  let l = "rgb";
  const c = [Math.round(a(0) * 255), Math.round(a(8) * 255), Math.round(a(4) * 255)];
  return e.type === "hsla" && (l += "a", c.push(t[3])), Nd({
    type: l,
    values: c
  });
}
function Up(e) {
  e = Xr(e);
  let t = e.type === "hsl" || e.type === "hsla" ? Xr(WS(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function Ob(e, t) {
  const n = Up(e), o = Up(t);
  return (Math.max(n, o) + 0.05) / (Math.min(n, o) + 0.05);
}
function qp(e, t) {
  return e = Xr(e), t = Nm(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, Nd(e);
}
function pc(e, t, n) {
  try {
    return qp(e, t);
  } catch {
    return e;
  }
}
function Mm(e, t) {
  if (e = Xr(e), t = Nm(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return Nd(e);
}
function _t(e, t, n) {
  try {
    return Mm(e, t);
  } catch {
    return e;
  }
}
function _m(e, t) {
  if (e = Xr(e), t = Nm(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return Nd(e);
}
function At(e, t, n) {
  try {
    return _m(e, t);
  } catch {
    return e;
  }
}
function PD(e, t = 0.15) {
  return Up(e) > 0.5 ? Mm(e, t) : _m(e, t);
}
function hc(e, t, n) {
  try {
    return PD(e, t);
  } catch {
    return e;
  }
}
const ND = "exact-prop: ​";
function US(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [ND]: (t) => {
      const n = Object.keys(t).filter((o) => !e.hasOwnProperty(o));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((o) => `\`${o}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
const MD = /* @__PURE__ */ P.createContext();
process.env.NODE_ENV !== "production" && (s.node, s.bool);
const _D = () => P.useContext(MD) ?? !1, AD = /* @__PURE__ */ P.createContext(void 0);
process.env.NODE_ENV !== "production" && (s.node, s.object);
function DD(e) {
  const {
    theme: t,
    name: n,
    props: o
  } = e;
  if (!t || !t.components || !t.components[n])
    return o;
  const r = t.components[n];
  return r.defaultProps ? Wp(r.defaultProps, o) : !r.styleOverrides && !r.variants ? Wp(r, o) : o;
}
function LD({
  props: e,
  name: t
}) {
  const n = P.useContext(AD);
  return DD({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
const $b = {
  theme: void 0
};
function BD(e) {
  let t, n;
  return function(r) {
    let i = t;
    return (i === void 0 || r.theme !== n) && ($b.theme = r.theme, i = jS(e($b)), t = i, n = r.theme), i;
  };
}
function FD(e = "") {
  function t(...o) {
    if (!o.length)
      return "";
    const r = o[0];
    return typeof r == "string" && !r.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${r}${t(...o.slice(1))})` : `, ${r}`;
  }
  return (o, ...r) => `var(--${e ? `${e}-` : ""}${o}${t(...r)})`;
}
const Ib = (e, t, n, o = []) => {
  let r = e;
  t.forEach((i, a) => {
    a === t.length - 1 ? Array.isArray(r) ? r[Number(i)] = n : r && typeof r == "object" && (r[i] = n) : r && typeof r == "object" && (r[i] || (r[i] = o.includes(i) ? [] : {}), r = r[i]);
  });
}, zD = (e, t, n) => {
  function o(r, i = [], a = []) {
    Object.entries(r).forEach(([l, c]) => {
      (!n || n && !n([...i, l])) && c != null && (typeof c == "object" && Object.keys(c).length > 0 ? o(c, [...i, l], Array.isArray(c) ? [...a, l] : a) : t([...i, l], c, a));
    });
  }
  o(e);
}, jD = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((o) => e.includes(o)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function Df(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: o
  } = t || {}, r = {}, i = {}, a = {};
  return zD(
    e,
    (l, c, u) => {
      if ((typeof c == "string" || typeof c == "number") && (!o || !o(l, c))) {
        const f = `--${n ? `${n}-` : ""}${l.join("-")}`, d = jD(l, c);
        Object.assign(r, {
          [f]: d
        }), Ib(i, l, `var(${f})`, u), Ib(a, l, `var(${f}, ${d})`, u);
      }
    },
    (l) => l[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: r,
    vars: i,
    varsWithDefaults: a
  };
}
function VD(e, t = {}) {
  const {
    getSelector: n = y,
    disableCssColorScheme: o,
    colorSchemeSelector: r
  } = t, {
    colorSchemes: i = {},
    components: a,
    defaultColorScheme: l = "light",
    ...c
  } = e, {
    vars: u,
    css: f,
    varsWithDefaults: d
  } = Df(c, t);
  let p = d;
  const h = {}, {
    [l]: g,
    ...m
  } = i;
  if (Object.entries(m || {}).forEach(([b, w]) => {
    const {
      vars: S,
      css: E,
      varsWithDefaults: C
    } = Df(w, t);
    p = An(p, C), h[b] = {
      css: E,
      vars: S
    };
  }), g) {
    const {
      css: b,
      vars: w,
      varsWithDefaults: S
    } = Df(g, t);
    p = An(p, S), h[l] = {
      css: b,
      vars: w
    };
  }
  function y(b, w) {
    var E, C;
    let S = r;
    if (r === "class" && (S = ".%s"), r === "data" && (S = "[data-%s]"), r != null && r.startsWith("data-") && !r.includes("%s") && (S = `[${r}="%s"]`), b) {
      if (S === "media")
        return e.defaultColorScheme === b ? ":root" : {
          [`@media (prefers-color-scheme: ${((C = (E = i[b]) == null ? void 0 : E.palette) == null ? void 0 : C.mode) || b})`]: {
            ":root": w
          }
        };
      if (S)
        return e.defaultColorScheme === b ? `:root, ${S.replace("%s", String(b))}` : S.replace("%s", String(b));
    }
    return ":root";
  }
  return {
    vars: p,
    generateThemeVars: () => {
      let b = {
        ...u
      };
      return Object.entries(h).forEach(([, {
        vars: w
      }]) => {
        b = An(b, w);
      }), b;
    },
    generateStyleSheets: () => {
      var R, M;
      const b = [], w = e.defaultColorScheme || "light";
      function S(v, I) {
        Object.keys(I).length && b.push(typeof v == "string" ? {
          [v]: {
            ...I
          }
        } : v);
      }
      S(n(void 0, {
        ...f
      }), f);
      const {
        [w]: E,
        ...C
      } = h;
      if (E) {
        const {
          css: v
        } = E, I = (M = (R = i[w]) == null ? void 0 : R.palette) == null ? void 0 : M.mode, k = !o && I ? {
          colorScheme: I,
          ...v
        } : {
          ...v
        };
        S(n(w, {
          ...k
        }), k);
      }
      return Object.entries(C).forEach(([v, {
        css: I
      }]) => {
        var O, _;
        const k = (_ = (O = i[v]) == null ? void 0 : O.palette) == null ? void 0 : _.mode, A = !o && k ? {
          colorScheme: k,
          ...I
        } : {
          ...I
        };
        S(n(v, {
          ...A
        }), A);
      }), b;
    }
  };
}
function HD(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
function vn(e, t, n = void 0) {
  const o = {};
  for (const r in e) {
    const i = e[r];
    let a = "", l = !0;
    for (let c = 0; c < i.length; c += 1) {
      const u = i[c];
      u && (a += (l === !0 ? "" : " ") + t(u), l = !1, n && n[u] && (a += " " + n[u]));
    }
    o[r] = a;
  }
  return o;
}
function Lf(e, t) {
  var n, o, r;
  return /* @__PURE__ */ P.isValidElement(e) && t.indexOf(
    // For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    e.type.muiName ?? ((r = (o = (n = e.type) == null ? void 0 : n._payload) == null ? void 0 : o.value) == null ? void 0 : r.muiName)
  ) !== -1;
}
const rl = {
  black: "#000",
  white: "#fff"
}, WD = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, Ji = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, es = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, sa = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, ts = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, ns = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, os = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
};
function qS() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: rl.white,
      default: rl.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const UD = qS();
function KS() {
  return {
    text: {
      primary: rl.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: rl.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const Rb = KS();
function kb(e, t, n, o) {
  const r = o.light || o, i = o.dark || o * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = _m(e.main, r) : t === "dark" && (e.dark = Mm(e.main, i)));
}
function qD(e = "light") {
  return e === "dark" ? {
    main: ts[200],
    light: ts[50],
    dark: ts[400]
  } : {
    main: ts[700],
    light: ts[400],
    dark: ts[800]
  };
}
function KD(e = "light") {
  return e === "dark" ? {
    main: Ji[200],
    light: Ji[50],
    dark: Ji[400]
  } : {
    main: Ji[500],
    light: Ji[300],
    dark: Ji[700]
  };
}
function YD(e = "light") {
  return e === "dark" ? {
    main: es[500],
    light: es[300],
    dark: es[700]
  } : {
    main: es[700],
    light: es[400],
    dark: es[800]
  };
}
function GD(e = "light") {
  return e === "dark" ? {
    main: ns[400],
    light: ns[300],
    dark: ns[700]
  } : {
    main: ns[700],
    light: ns[500],
    dark: ns[900]
  };
}
function XD(e = "light") {
  return e === "dark" ? {
    main: os[400],
    light: os[300],
    dark: os[700]
  } : {
    main: os[800],
    light: os[500],
    dark: os[900]
  };
}
function ZD(e = "light") {
  return e === "dark" ? {
    main: sa[400],
    light: sa[300],
    dark: sa[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: sa[500],
    dark: sa[900]
  };
}
function Am(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: o = 0.2,
    ...r
  } = e, i = e.primary || qD(t), a = e.secondary || KD(t), l = e.error || YD(t), c = e.info || GD(t), u = e.success || XD(t), f = e.warning || ZD(t);
  function d(m) {
    const y = Ob(m, Rb.text.primary) >= n ? Rb.text.primary : UD.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const x = Ob(m, y);
      x < 3 && console.error([`MUI: The contrast ratio of ${x}:1 for ${y} on ${m}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return y;
  }
  const p = ({
    color: m,
    name: y,
    mainShade: x = 500,
    lightShade: T = 300,
    darkShade: b = 700
  }) => {
    if (m = {
      ...m
    }, !m.main && m[x] && (m.main = m[x]), !m.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${y ? ` (${y})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${x}\` property.` : fr(11, y ? ` (${y})` : "", x));
    if (typeof m.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${y ? ` (${y})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(m.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : fr(12, y ? ` (${y})` : "", JSON.stringify(m.main)));
    return kb(m, "light", T, o), kb(m, "dark", b, o), m.contrastText || (m.contrastText = d(m.main)), m;
  };
  let h;
  return t === "light" ? h = qS() : t === "dark" && (h = KS()), process.env.NODE_ENV !== "production" && (h || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), An({
    // A collection of common colors.
    common: {
      ...rl
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: p({
      color: i,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: p({
      color: a,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: p({
      color: l,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: p({
      color: f,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: p({
      color: c,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: p({
      color: u,
      name: "success"
    }),
    // The grey colors.
    grey: WD,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: d,
    // Generate a rich color object.
    augmentColor: p,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: o,
    // The light and dark mode object.
    ...h
  }, r);
}
function QD(e) {
  const t = {};
  return Object.entries(e).forEach((o) => {
    const [r, i] = o;
    typeof i == "object" && (t[r] = `${i.fontStyle ? `${i.fontStyle} ` : ""}${i.fontVariant ? `${i.fontVariant} ` : ""}${i.fontWeight ? `${i.fontWeight} ` : ""}${i.fontStretch ? `${i.fontStretch} ` : ""}${i.fontSize || ""}${i.lineHeight ? `/${i.lineHeight} ` : ""}${i.fontFamily || ""}`);
  }), t;
}
function JD(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function e5(e) {
  return Math.round(e * 1e5) / 1e5;
}
const Pb = {
  textTransform: "uppercase"
}, Nb = '"Roboto", "Helvetica", "Arial", sans-serif';
function t5(e, t) {
  const {
    fontFamily: n = Nb,
    // The default font size of the Material Specification.
    fontSize: o = 14,
    // px
    fontWeightLight: r = 300,
    fontWeightRegular: i = 400,
    fontWeightMedium: a = 500,
    fontWeightBold: l = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: c = 16,
    // Apply the CSS properties to all the variants.
    allVariants: u,
    pxToRem: f,
    ...d
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof o != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof c != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const p = o / 14, h = f || ((y) => `${y / c * p}rem`), g = (y, x, T, b, w) => ({
    fontFamily: n,
    fontWeight: y,
    fontSize: h(x),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: T,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === Nb ? {
      letterSpacing: `${e5(b / x)}em`
    } : {},
    ...w,
    ...u
  }), m = {
    h1: g(r, 96, 1.167, -1.5),
    h2: g(r, 60, 1.2, -0.5),
    h3: g(i, 48, 1.167, 0),
    h4: g(i, 34, 1.235, 0.25),
    h5: g(i, 24, 1.334, 0),
    h6: g(a, 20, 1.6, 0.15),
    subtitle1: g(i, 16, 1.75, 0.15),
    subtitle2: g(a, 14, 1.57, 0.1),
    body1: g(i, 16, 1.5, 0.15),
    body2: g(i, 14, 1.43, 0.15),
    button: g(a, 14, 1.75, 0.4, Pb),
    caption: g(i, 12, 1.66, 0.4),
    overline: g(i, 12, 2.66, 1, Pb),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return An({
    htmlFontSize: c,
    pxToRem: h,
    fontFamily: n,
    fontSize: o,
    fontWeightLight: r,
    fontWeightRegular: i,
    fontWeightMedium: a,
    fontWeightBold: l,
    ...m
  }, d, {
    clone: !1
    // No need to clone deep
  });
}
const n5 = 0.2, o5 = 0.14, r5 = 0.12;
function Ht(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${n5})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${o5})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${r5})`].join(",");
}
const i5 = ["none", Ht(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), Ht(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), Ht(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), Ht(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), Ht(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), Ht(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), Ht(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), Ht(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), Ht(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), Ht(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), Ht(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), Ht(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), Ht(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), Ht(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), Ht(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), Ht(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), Ht(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), Ht(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), Ht(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), Ht(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), Ht(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), Ht(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), Ht(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), Ht(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], s5 = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, a5 = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function Mb(e) {
  return `${Math.round(e)}ms`;
}
function l5(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function c5(e) {
  const t = {
    ...s5,
    ...e.easing
  }, n = {
    ...a5,
    ...e.duration
  };
  return {
    getAutoHeightDuration: l5,
    create: (r = ["all"], i = {}) => {
      const {
        duration: a = n.standard,
        easing: l = t.easeInOut,
        delay: c = 0,
        ...u
      } = i;
      if (process.env.NODE_ENV !== "production") {
        const f = (p) => typeof p == "string", d = (p) => !Number.isNaN(parseFloat(p));
        !f(r) && !Array.isArray(r) && console.error('MUI: Argument "props" must be a string or Array.'), !d(a) && !f(a) && console.error(`MUI: Argument "duration" must be a number or a string but found ${a}.`), f(l) || console.error('MUI: Argument "easing" must be a string.'), !d(c) && !f(c) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof i != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(u).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(u).join(",")}].`);
      }
      return (Array.isArray(r) ? r : [r]).map((f) => `${f} ${typeof a == "string" ? a : Mb(a)} ${l} ${typeof c == "string" ? c : Mb(c)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const u5 = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function d5(e) {
  return nr(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function YS(e = {}) {
  const t = {
    ...e
  };
  function n(o) {
    const r = Object.entries(o);
    for (let i = 0; i < r.length; i++) {
      const [a, l] = r[i];
      !d5(l) || a.startsWith("unstable_") ? delete o[a] : nr(l) && (o[a] = {
        ...l
      }, n(o[a]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function Kp(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: o = {},
    spacing: r,
    palette: i = {},
    transitions: a = {},
    typography: l = {},
    shape: c,
    ...u
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : fr(20));
  const f = Am(i), d = km(e);
  let p = An(d, {
    mixins: JD(d.breakpoints, o),
    palette: f,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: i5.slice(),
    typography: t5(f, l),
    transitions: c5(a),
    zIndex: {
      ...u5
    }
  });
  if (p = An(p, u), p = t.reduce((h, g) => An(h, g), p), process.env.NODE_ENV !== "production") {
    const h = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], g = (m, y) => {
      let x;
      for (x in m) {
        const T = m[x];
        if (h.includes(x) && Object.keys(T).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const b = fn("", x);
            console.error([`MUI: The \`${y}\` component increases the CSS specificity of the \`${x}\` internal state.`, "You can not override it like this: ", JSON.stringify(m, null, 2), "", `Instead, you need to use the '&.${b}' syntax:`, JSON.stringify({
              root: {
                [`&.${b}`]: T
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          m[x] = {};
        }
      }
    };
    Object.keys(p.components).forEach((m) => {
      const y = p.components[m].styleOverrides;
      y && m.startsWith("Mui") && g(y, m);
    });
  }
  return p.unstable_sxConfig = {
    ...Al,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, p.unstable_sx = function(g) {
    return _i({
      sx: g,
      theme: this
    });
  }, p.toRuntimeSource = YS, p;
}
function Yp(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const f5 = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = Yp(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function GS(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function XS(e) {
  return e === "dark" ? f5 : [];
}
function p5(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: o,
    ...r
  } = e, i = Am(t);
  return {
    palette: i,
    opacity: {
      ...GS(i.mode),
      ...n
    },
    overlays: o || XS(i.mode),
    ...r
  };
}
function h5(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const m5 = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], g5 = (e) => (t, n) => {
  const o = e.rootSelector || ":root", r = e.colorSchemeSelector;
  let i = r;
  if (r === "class" && (i = ".%s"), r === "data" && (i = "[data-%s]"), r != null && r.startsWith("data-") && !r.includes("%s") && (i = `[${r}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const a = {};
      return m5(e.cssVarPrefix).forEach((l) => {
        a[l] = n[l], delete n[l];
      }), i === "media" ? {
        [o]: n,
        "@media (prefers-color-scheme: dark)": {
          [o]: a
        }
      } : i ? {
        [i.replace("%s", t)]: a,
        [`${o}, ${i.replace("%s", t)}`]: n
      } : {
        [o]: {
          ...n,
          ...a
        }
      };
    }
    if (i && i !== "media")
      return `${o}, ${i.replace("%s", String(t))}`;
  } else if (t) {
    if (i === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [o]: n
        }
      };
    if (i)
      return i.replace("%s", String(t));
  }
  return o;
};
function y5(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function ge(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function Ta(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : WS(e);
}
function br(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = Sa(Ta(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function b5(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const Go = (e) => {
  try {
    return e();
  } catch {
  }
}, v5 = (e = "mui") => FD(e);
function Bf(e, t, n, o) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const r = o === "dark" ? "dark" : "light";
  if (!n) {
    e[o] = p5({
      ...t,
      palette: {
        mode: r,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: i,
    ...a
  } = Kp({
    ...n,
    palette: {
      mode: r,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[o] = {
    ...t,
    palette: i,
    opacity: {
      ...GS(r),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || XS(r)
  }, a;
}
function x5(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: o,
    disableCssColorScheme: r = !1,
    cssVarPrefix: i = "mui",
    shouldSkipGeneratingVar: a = h5,
    colorSchemeSelector: l = n.light && n.dark ? "media" : void 0,
    rootSelector: c = ":root",
    ...u
  } = e, f = Object.keys(n)[0], d = o || (n.light && f !== "light" ? "light" : f), p = v5(i), {
    [d]: h,
    light: g,
    dark: m,
    ...y
  } = n, x = {
    ...y
  };
  let T = h;
  if ((d === "dark" && !("dark" in n) || d === "light" && !("light" in n)) && (T = !0), !T)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${d}\` option is either missing or invalid.` : fr(21, d));
  const b = Bf(x, T, u, d);
  g && !x.light && Bf(x, g, void 0, "light"), m && !x.dark && Bf(x, m, void 0, "dark");
  let w = {
    defaultColorScheme: d,
    ...b,
    cssVarPrefix: i,
    colorSchemeSelector: l,
    rootSelector: c,
    getCssVar: p,
    colorSchemes: x,
    font: {
      ...QD(b.typography),
      ...b.font
    },
    spacing: b5(u.spacing)
  };
  Object.keys(w.colorSchemes).forEach((M) => {
    const v = w.colorSchemes[M].palette, I = (k) => {
      const A = k.split("-"), O = A[1], _ = A[2];
      return p(k, v[O][_]);
    };
    if (v.mode === "light" && (ge(v.common, "background", "#fff"), ge(v.common, "onBackground", "#000")), v.mode === "dark" && (ge(v.common, "background", "#000"), ge(v.common, "onBackground", "#fff")), y5(v, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), v.mode === "light") {
      ge(v.Alert, "errorColor", _t(v.error.light, 0.6)), ge(v.Alert, "infoColor", _t(v.info.light, 0.6)), ge(v.Alert, "successColor", _t(v.success.light, 0.6)), ge(v.Alert, "warningColor", _t(v.warning.light, 0.6)), ge(v.Alert, "errorFilledBg", I("palette-error-main")), ge(v.Alert, "infoFilledBg", I("palette-info-main")), ge(v.Alert, "successFilledBg", I("palette-success-main")), ge(v.Alert, "warningFilledBg", I("palette-warning-main")), ge(v.Alert, "errorFilledColor", Go(() => v.getContrastText(v.error.main))), ge(v.Alert, "infoFilledColor", Go(() => v.getContrastText(v.info.main))), ge(v.Alert, "successFilledColor", Go(() => v.getContrastText(v.success.main))), ge(v.Alert, "warningFilledColor", Go(() => v.getContrastText(v.warning.main))), ge(v.Alert, "errorStandardBg", At(v.error.light, 0.9)), ge(v.Alert, "infoStandardBg", At(v.info.light, 0.9)), ge(v.Alert, "successStandardBg", At(v.success.light, 0.9)), ge(v.Alert, "warningStandardBg", At(v.warning.light, 0.9)), ge(v.Alert, "errorIconColor", I("palette-error-main")), ge(v.Alert, "infoIconColor", I("palette-info-main")), ge(v.Alert, "successIconColor", I("palette-success-main")), ge(v.Alert, "warningIconColor", I("palette-warning-main")), ge(v.AppBar, "defaultBg", I("palette-grey-100")), ge(v.Avatar, "defaultBg", I("palette-grey-400")), ge(v.Button, "inheritContainedBg", I("palette-grey-300")), ge(v.Button, "inheritContainedHoverBg", I("palette-grey-A100")), ge(v.Chip, "defaultBorder", I("palette-grey-400")), ge(v.Chip, "defaultAvatarColor", I("palette-grey-700")), ge(v.Chip, "defaultIconColor", I("palette-grey-700")), ge(v.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), ge(v.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), ge(v.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), ge(v.LinearProgress, "primaryBg", At(v.primary.main, 0.62)), ge(v.LinearProgress, "secondaryBg", At(v.secondary.main, 0.62)), ge(v.LinearProgress, "errorBg", At(v.error.main, 0.62)), ge(v.LinearProgress, "infoBg", At(v.info.main, 0.62)), ge(v.LinearProgress, "successBg", At(v.success.main, 0.62)), ge(v.LinearProgress, "warningBg", At(v.warning.main, 0.62)), ge(v.Skeleton, "bg", `rgba(${I("palette-text-primaryChannel")} / 0.11)`), ge(v.Slider, "primaryTrack", At(v.primary.main, 0.62)), ge(v.Slider, "secondaryTrack", At(v.secondary.main, 0.62)), ge(v.Slider, "errorTrack", At(v.error.main, 0.62)), ge(v.Slider, "infoTrack", At(v.info.main, 0.62)), ge(v.Slider, "successTrack", At(v.success.main, 0.62)), ge(v.Slider, "warningTrack", At(v.warning.main, 0.62));
      const k = hc(v.background.default, 0.8);
      ge(v.SnackbarContent, "bg", k), ge(v.SnackbarContent, "color", Go(() => v.getContrastText(k))), ge(v.SpeedDialAction, "fabHoverBg", hc(v.background.paper, 0.15)), ge(v.StepConnector, "border", I("palette-grey-400")), ge(v.StepContent, "border", I("palette-grey-400")), ge(v.Switch, "defaultColor", I("palette-common-white")), ge(v.Switch, "defaultDisabledColor", I("palette-grey-100")), ge(v.Switch, "primaryDisabledColor", At(v.primary.main, 0.62)), ge(v.Switch, "secondaryDisabledColor", At(v.secondary.main, 0.62)), ge(v.Switch, "errorDisabledColor", At(v.error.main, 0.62)), ge(v.Switch, "infoDisabledColor", At(v.info.main, 0.62)), ge(v.Switch, "successDisabledColor", At(v.success.main, 0.62)), ge(v.Switch, "warningDisabledColor", At(v.warning.main, 0.62)), ge(v.TableCell, "border", At(pc(v.divider, 1), 0.88)), ge(v.Tooltip, "bg", pc(v.grey[700], 0.92));
    }
    if (v.mode === "dark") {
      ge(v.Alert, "errorColor", At(v.error.light, 0.6)), ge(v.Alert, "infoColor", At(v.info.light, 0.6)), ge(v.Alert, "successColor", At(v.success.light, 0.6)), ge(v.Alert, "warningColor", At(v.warning.light, 0.6)), ge(v.Alert, "errorFilledBg", I("palette-error-dark")), ge(v.Alert, "infoFilledBg", I("palette-info-dark")), ge(v.Alert, "successFilledBg", I("palette-success-dark")), ge(v.Alert, "warningFilledBg", I("palette-warning-dark")), ge(v.Alert, "errorFilledColor", Go(() => v.getContrastText(v.error.dark))), ge(v.Alert, "infoFilledColor", Go(() => v.getContrastText(v.info.dark))), ge(v.Alert, "successFilledColor", Go(() => v.getContrastText(v.success.dark))), ge(v.Alert, "warningFilledColor", Go(() => v.getContrastText(v.warning.dark))), ge(v.Alert, "errorStandardBg", _t(v.error.light, 0.9)), ge(v.Alert, "infoStandardBg", _t(v.info.light, 0.9)), ge(v.Alert, "successStandardBg", _t(v.success.light, 0.9)), ge(v.Alert, "warningStandardBg", _t(v.warning.light, 0.9)), ge(v.Alert, "errorIconColor", I("palette-error-main")), ge(v.Alert, "infoIconColor", I("palette-info-main")), ge(v.Alert, "successIconColor", I("palette-success-main")), ge(v.Alert, "warningIconColor", I("palette-warning-main")), ge(v.AppBar, "defaultBg", I("palette-grey-900")), ge(v.AppBar, "darkBg", I("palette-background-paper")), ge(v.AppBar, "darkColor", I("palette-text-primary")), ge(v.Avatar, "defaultBg", I("palette-grey-600")), ge(v.Button, "inheritContainedBg", I("palette-grey-800")), ge(v.Button, "inheritContainedHoverBg", I("palette-grey-700")), ge(v.Chip, "defaultBorder", I("palette-grey-700")), ge(v.Chip, "defaultAvatarColor", I("palette-grey-300")), ge(v.Chip, "defaultIconColor", I("palette-grey-300")), ge(v.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), ge(v.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), ge(v.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), ge(v.LinearProgress, "primaryBg", _t(v.primary.main, 0.5)), ge(v.LinearProgress, "secondaryBg", _t(v.secondary.main, 0.5)), ge(v.LinearProgress, "errorBg", _t(v.error.main, 0.5)), ge(v.LinearProgress, "infoBg", _t(v.info.main, 0.5)), ge(v.LinearProgress, "successBg", _t(v.success.main, 0.5)), ge(v.LinearProgress, "warningBg", _t(v.warning.main, 0.5)), ge(v.Skeleton, "bg", `rgba(${I("palette-text-primaryChannel")} / 0.13)`), ge(v.Slider, "primaryTrack", _t(v.primary.main, 0.5)), ge(v.Slider, "secondaryTrack", _t(v.secondary.main, 0.5)), ge(v.Slider, "errorTrack", _t(v.error.main, 0.5)), ge(v.Slider, "infoTrack", _t(v.info.main, 0.5)), ge(v.Slider, "successTrack", _t(v.success.main, 0.5)), ge(v.Slider, "warningTrack", _t(v.warning.main, 0.5));
      const k = hc(v.background.default, 0.98);
      ge(v.SnackbarContent, "bg", k), ge(v.SnackbarContent, "color", Go(() => v.getContrastText(k))), ge(v.SpeedDialAction, "fabHoverBg", hc(v.background.paper, 0.15)), ge(v.StepConnector, "border", I("palette-grey-600")), ge(v.StepContent, "border", I("palette-grey-600")), ge(v.Switch, "defaultColor", I("palette-grey-300")), ge(v.Switch, "defaultDisabledColor", I("palette-grey-600")), ge(v.Switch, "primaryDisabledColor", _t(v.primary.main, 0.55)), ge(v.Switch, "secondaryDisabledColor", _t(v.secondary.main, 0.55)), ge(v.Switch, "errorDisabledColor", _t(v.error.main, 0.55)), ge(v.Switch, "infoDisabledColor", _t(v.info.main, 0.55)), ge(v.Switch, "successDisabledColor", _t(v.success.main, 0.55)), ge(v.Switch, "warningDisabledColor", _t(v.warning.main, 0.55)), ge(v.TableCell, "border", _t(pc(v.divider, 1), 0.68)), ge(v.Tooltip, "bg", pc(v.grey[700], 0.92));
    }
    br(v.background, "default"), br(v.background, "paper"), br(v.common, "background"), br(v.common, "onBackground"), br(v, "divider"), Object.keys(v).forEach((k) => {
      const A = v[k];
      k !== "tonalOffset" && A && typeof A == "object" && (A.main && ge(v[k], "mainChannel", Sa(Ta(A.main))), A.light && ge(v[k], "lightChannel", Sa(Ta(A.light))), A.dark && ge(v[k], "darkChannel", Sa(Ta(A.dark))), A.contrastText && ge(v[k], "contrastTextChannel", Sa(Ta(A.contrastText))), k === "text" && (br(v[k], "primary"), br(v[k], "secondary")), k === "action" && (A.active && br(v[k], "active"), A.selected && br(v[k], "selected")));
    });
  }), w = t.reduce((M, v) => An(M, v), w);
  const S = {
    prefix: i,
    disableCssColorScheme: r,
    shouldSkipGeneratingVar: a,
    getSelector: g5(w)
  }, {
    vars: E,
    generateThemeVars: C,
    generateStyleSheets: R
  } = VD(w, S);
  return w.vars = E, Object.entries(w.colorSchemes[w.defaultColorScheme]).forEach(([M, v]) => {
    w[M] = v;
  }), w.generateThemeVars = C, w.generateStyleSheets = R, w.generateSpacing = function() {
    return LS(u.spacing, Im(this));
  }, w.getColorSchemeSelector = HD(l), w.spacing = w.generateSpacing(), w.shouldSkipGeneratingVar = a, w.unstable_sxConfig = {
    ...Al,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, w.unstable_sx = function(v) {
    return _i({
      sx: v,
      theme: this
    });
  }, w.toRuntimeSource = YS, w;
}
function _b(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: Am({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function ZS(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: o = !1,
    colorSchemes: r = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: i = n == null ? void 0 : n.mode,
    ...a
  } = e, l = i || "light", c = r == null ? void 0 : r[l], u = {
    ...r,
    ...n ? {
      [l]: {
        ...typeof c != "boolean" && c,
        palette: n
      }
    } : void 0
  };
  if (o === !1) {
    if (!("colorSchemes" in e))
      return Kp(e, ...t);
    let f = n;
    "palette" in e || u[l] && (u[l] !== !0 ? f = u[l].palette : l === "dark" && (f = {
      mode: "dark"
    }));
    const d = Kp({
      ...e,
      palette: f
    }, ...t);
    return d.defaultColorScheme = l, d.colorSchemes = u, d.palette.mode === "light" && (d.colorSchemes.light = {
      ...u.light !== !0 && u.light,
      palette: d.palette
    }, _b(d, "dark", u.dark)), d.palette.mode === "dark" && (d.colorSchemes.dark = {
      ...u.dark !== !0 && u.dark,
      palette: d.palette
    }, _b(d, "light", u.light)), d;
  }
  return !n && !("light" in u) && l === "light" && (u.light = !0), x5({
    ...a,
    colorSchemes: u,
    defaultColorScheme: l,
    ...typeof o != "boolean" && o
  }, ...t);
}
const Dm = ZS();
function Lm() {
  const e = Pm(Dm);
  return process.env.NODE_ENV !== "production" && P.useDebugValue(e), e[Sd] || e;
}
function QS(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const hr = (e) => QS(e) && e !== "classes", st = TD({
  themeId: Sd,
  defaultTheme: Dm,
  rootShouldForwardProp: hr
});
let Ab = 0;
function w5(e) {
  const [t, n] = P.useState(e), o = e || t;
  return P.useEffect(() => {
    t == null && (Ab += 1, n(`mui-${Ab}`));
  }, [t]), o;
}
const S5 = {
  ...P
}, Db = S5.useId;
function JS(e) {
  if (Db !== void 0) {
    const t = Db();
    return e ?? t;
  }
  return w5(e);
}
const ui = s.oneOfType([s.func, s.object]);
function e1(e) {
  return /* @__PURE__ */ $(BS, {
    ...e,
    defaultTheme: Dm,
    themeId: Sd
  });
}
process.env.NODE_ENV !== "production" && (e1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: s.oneOfType([s.array, s.func, s.number, s.object, s.string, s.bool])
});
function T5(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ $(e1, {
        styles: typeof e == "function" ? (o) => e({
          theme: o,
          ...n
        }) : e
      })
    );
  };
}
process.env.NODE_ENV !== "production" && (s.node, s.object.isRequired);
function $n(e) {
  return LD(e);
}
function Dl(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...o) {
    return e(...o) || t(...o);
  };
}
function E5(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function C5(e, t, n, o, r) {
  const i = e[t], a = r || t;
  if (i == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  return typeof i == "function" && !E5(i) && (l = "Did you accidentally provide a plain function component instead?"), l !== void 0 ? new Error(`Invalid ${o} \`${a}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const t1 = Dl(s.elementType, C5);
function O5(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function n1(e, t, n, o, r) {
  const i = e[t], a = r || t;
  if (i == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  const c = i.type;
  return typeof c == "function" && !O5(c) && (l = "Did you accidentally use a plain function component for an element instead?"), l !== void 0 ? new Error(`Invalid ${o} \`${a}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Ll = Dl(s.element, n1);
Ll.isRequired = Dl(s.element.isRequired, n1);
function il(e, t, n, o, r) {
  if (process.env.NODE_ENV === "production")
    return null;
  const i = e[t], a = r || t;
  return i == null ? null : i && i.nodeType !== 1 ? new Error(`Invalid ${o} \`${a}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
function Lb(...e) {
  return e.reduce((t, n) => n == null ? t : function(...r) {
    t.apply(this, r), n.apply(this, r);
  }, () => {
  });
}
function o1(e, t = 166) {
  let n;
  function o(...r) {
    const i = () => {
      e.apply(this, r);
    };
    clearTimeout(n), n = setTimeout(i, t);
  }
  return o.clear = () => {
    clearTimeout(n);
  }, o;
}
function qo(e) {
  return e && e.ownerDocument || document;
}
function Ir(e) {
  return qo(e).defaultView || window;
}
function Bb(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
function Fb({
  controlled: e,
  default: t,
  name: n,
  state: o = "value"
}) {
  const {
    current: r
  } = P.useRef(e !== void 0), [i, a] = P.useState(t), l = r ? e : i;
  if (process.env.NODE_ENV !== "production") {
    P.useEffect(() => {
      r !== (e !== void 0) && console.error([`MUI: A component is changing the ${r ? "" : "un"}controlled ${o} state of ${n} to be ${r ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [o, n, e]);
    const {
      current: u
    } = P.useRef(t);
    P.useEffect(() => {
      !r && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${o} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = P.useCallback((u) => {
    r || a(u);
  }, []);
  return [l, c];
}
function Gp(e) {
  const t = P.useRef(e);
  return Ai(() => {
    t.current = e;
  }), P.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function Mo(...e) {
  const t = P.useRef(void 0), n = P.useCallback((o) => {
    const r = e.map((i) => {
      if (i == null)
        return null;
      if (typeof i == "function") {
        const a = i, l = a(o);
        return typeof l == "function" ? l : () => {
          a(null);
        };
      }
      return i.current = o, () => {
        i.current = null;
      };
    });
    return () => {
      r.forEach((i) => i == null ? void 0 : i());
    };
  }, e);
  return P.useMemo(() => e.every((o) => o == null) ? null : (o) => {
    t.current && (t.current(), t.current = void 0), o != null && (t.current = n(o));
  }, e);
}
const zb = {};
function $5(e, t) {
  const n = P.useRef(zb);
  return n.current === zb && (n.current = e(t)), n;
}
const I5 = [];
function R5(e) {
  P.useEffect(e, I5);
}
class Bm {
  constructor() {
    Ar(this, "currentId", null);
    Ar(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    Ar(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new Bm();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
}
function k5() {
  const e = $5(Bm.create).current;
  return R5(e.disposeEffect), e;
}
function r1(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
function P5(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function i1(e, t, n, o) {
  const r = e[t];
  if (r == null || !Number.isInteger(r)) {
    const i = P5(r);
    return new RangeError(`Invalid ${o} \`${t}\` of type \`${i}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function s1(e, t, ...n) {
  return e[t] === void 0 ? null : i1(e, t, ...n);
}
function Xp() {
  return null;
}
s1.isRequired = i1;
Xp.isRequired = Xp;
const a1 = process.env.NODE_ENV === "production" ? Xp : s1;
function N5(e) {
  return typeof e == "string";
}
function l1(e, t, n) {
  return e === void 0 || N5(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function c1(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((o) => o.match(/^on[A-Z]/) && typeof e[o] == "function" && !t.includes(o)).forEach((o) => {
    n[o] = e[o];
  }), n;
}
function jb(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function u1(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: o,
    externalForwardedProps: r,
    className: i
  } = e;
  if (!t) {
    const h = Re(n == null ? void 0 : n.className, i, r == null ? void 0 : r.className, o == null ? void 0 : o.className), g = {
      ...n == null ? void 0 : n.style,
      ...r == null ? void 0 : r.style,
      ...o == null ? void 0 : o.style
    }, m = {
      ...n,
      ...r,
      ...o
    };
    return h.length > 0 && (m.className = h), Object.keys(g).length > 0 && (m.style = g), {
      props: m,
      internalRef: void 0
    };
  }
  const a = c1({
    ...r,
    ...o
  }), l = jb(o), c = jb(r), u = t(a), f = Re(u == null ? void 0 : u.className, n == null ? void 0 : n.className, i, r == null ? void 0 : r.className, o == null ? void 0 : o.className), d = {
    ...u == null ? void 0 : u.style,
    ...n == null ? void 0 : n.style,
    ...r == null ? void 0 : r.style,
    ...o == null ? void 0 : o.style
  }, p = {
    ...u,
    ...n,
    ...c,
    ...l
  };
  return f.length > 0 && (p.className = f), Object.keys(d).length > 0 && (p.style = d), {
    props: p,
    internalRef: u.ref
  };
}
function d1(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function M5(e) {
  var d;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: o,
    skipResolvingSlotProps: r = !1,
    ...i
  } = e, a = r ? {} : d1(n, o), {
    props: l,
    internalRef: c
  } = u1({
    ...i,
    externalSlotProps: a
  }), u = Mo(c, a == null ? void 0 : a.ref, (d = e.additionalProps) == null ? void 0 : d.ref);
  return l1(t, {
    ...l,
    ref: u
  }, o);
}
function Bl(e) {
  var t;
  return parseInt(P.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
function mc(e) {
  return parseInt(e, 10) || 0;
}
const _5 = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function A5(e) {
  for (const t in e)
    return !1;
  return !0;
}
function Vb(e) {
  return A5(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const f1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const {
    onChange: o,
    maxRows: r,
    minRows: i = 1,
    style: a,
    value: l,
    ...c
  } = t, {
    current: u
  } = P.useRef(l != null), f = P.useRef(null), d = Mo(n, f), p = P.useRef(null), h = P.useRef(null), g = P.useCallback(() => {
    const b = f.current, w = h.current;
    if (!b || !w)
      return;
    const E = Ir(b).getComputedStyle(b);
    if (E.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    w.style.width = E.width, w.value = b.value || t.placeholder || "x", w.value.slice(-1) === `
` && (w.value += " ");
    const C = E.boxSizing, R = mc(E.paddingBottom) + mc(E.paddingTop), M = mc(E.borderBottomWidth) + mc(E.borderTopWidth), v = w.scrollHeight;
    w.value = "x";
    const I = w.scrollHeight;
    let k = v;
    i && (k = Math.max(Number(i) * I, k)), r && (k = Math.min(Number(r) * I, k)), k = Math.max(k, I);
    const A = k + (C === "border-box" ? R + M : 0), O = Math.abs(k - v) <= 1;
    return {
      outerHeightStyle: A,
      overflowing: O
    };
  }, [r, i, t.placeholder]), m = Gp(() => {
    const b = f.current, w = g();
    if (!b || !w || Vb(w))
      return !1;
    const S = w.outerHeightStyle;
    return p.current != null && p.current !== S;
  }), y = P.useCallback(() => {
    const b = f.current, w = g();
    if (!b || !w || Vb(w))
      return;
    const S = w.outerHeightStyle;
    p.current !== S && (p.current = S, b.style.height = `${S}px`), b.style.overflow = w.overflowing ? "hidden" : "";
  }, [g]), x = P.useRef(-1);
  Ai(() => {
    const b = o1(y), w = f == null ? void 0 : f.current;
    if (!w)
      return;
    const S = Ir(w);
    S.addEventListener("resize", b);
    let E;
    return typeof ResizeObserver < "u" && (E = new ResizeObserver(() => {
      m() && (E.unobserve(w), cancelAnimationFrame(x.current), y(), x.current = requestAnimationFrame(() => {
        E.observe(w);
      }));
    }), E.observe(w)), () => {
      b.clear(), cancelAnimationFrame(x.current), S.removeEventListener("resize", b), E && E.disconnect();
    };
  }, [g, y, m]), Ai(() => {
    y();
  });
  const T = (b) => {
    u || y(), o && o(b);
  };
  return /* @__PURE__ */ Te(P.Fragment, {
    children: [/* @__PURE__ */ $("textarea", {
      value: l,
      onChange: T,
      ref: d,
      rows: i,
      style: a,
      ...c
    }), /* @__PURE__ */ $("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: h,
      tabIndex: -1,
      style: {
        ..._5.shadow,
        ...a,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (f1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: s.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: s.oneOfType([s.number, s.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: s.oneOfType([s.number, s.string]),
  /**
   * @ignore
   */
  onChange: s.func,
  /**
   * @ignore
   */
  placeholder: s.string,
  /**
   * @ignore
   */
  style: s.object,
  /**
   * @ignore
   */
  value: s.oneOfType([s.arrayOf(s.string), s.number, s.string])
});
function Zp(e) {
  return typeof e == "string";
}
function Qs({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((o, r) => (o[r] = e[r], n && typeof e[r] > "u" && (o[r] = n[r]), o), {});
}
const Md = /* @__PURE__ */ P.createContext(void 0);
process.env.NODE_ENV !== "production" && (Md.displayName = "FormControlContext");
function Js() {
  return P.useContext(Md);
}
const Ln = BD;
function Hb(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function mu(e, t = !1) {
  return e && (Hb(e.value) && e.value !== "" || t && Hb(e.defaultValue) && e.defaultValue !== "");
}
function D5(e) {
  return e.startAdornment;
}
function L5(e) {
  return fn("MuiInputBase", e);
}
const Ms = bn("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var Wb;
const _d = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${on(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, Ad = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, B5 = (e) => {
  const {
    classes: t,
    color: n,
    disabled: o,
    error: r,
    endAdornment: i,
    focused: a,
    formControl: l,
    fullWidth: c,
    hiddenLabel: u,
    multiline: f,
    readOnly: d,
    size: p,
    startAdornment: h,
    type: g
  } = e, m = {
    root: ["root", `color${on(n)}`, o && "disabled", r && "error", c && "fullWidth", a && "focused", l && "formControl", p && p !== "medium" && `size${on(p)}`, f && "multiline", h && "adornedStart", i && "adornedEnd", u && "hiddenLabel", d && "readOnly"],
    input: ["input", o && "disabled", g === "search" && "inputTypeSearch", f && "inputMultiline", p === "small" && "inputSizeSmall", u && "inputHiddenLabel", h && "inputAdornedStart", i && "inputAdornedEnd", d && "readOnly"]
  };
  return vn(m, L5, t);
}, Dd = st("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: _d
})(Ln(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${Ms.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), Ld = st("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: Ad
})(Ln(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, o = {
    opacity: "0 !important"
  }, r = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${Ms.formControl} &`]: {
      "&::-webkit-input-placeholder": o,
      "&::-moz-placeholder": o,
      // Firefox 19+
      "&::-ms-input-placeholder": o,
      // Edge
      "&:focus::-webkit-input-placeholder": r,
      "&:focus::-moz-placeholder": r,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": r
      // Edge
    },
    [`&.${Ms.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: i
      }) => !i.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: i
      }) => i.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), Ub = T5({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), Bd = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = $n({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": r,
    autoComplete: i,
    autoFocus: a,
    className: l,
    color: c,
    components: u = {},
    componentsProps: f = {},
    defaultValue: d,
    disabled: p,
    disableInjectingGlobalStyles: h,
    endAdornment: g,
    error: m,
    fullWidth: y = !1,
    id: x,
    inputComponent: T = "input",
    inputProps: b = {},
    inputRef: w,
    margin: S,
    maxRows: E,
    minRows: C,
    multiline: R = !1,
    name: M,
    onBlur: v,
    onChange: I,
    onClick: k,
    onFocus: A,
    onKeyDown: O,
    onKeyUp: _,
    placeholder: N,
    readOnly: L,
    renderSuffix: F,
    rows: D,
    size: B,
    slotProps: z = {},
    slots: U = {},
    startAdornment: q,
    type: Y = "text",
    value: K,
    ...te
  } = o, ne = b.value != null ? b.value : K, {
    current: W
  } = P.useRef(ne != null), ee = P.useRef(), G = P.useCallback((le) => {
    process.env.NODE_ENV !== "production" && le && le.nodeName !== "INPUT" && !le.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), re = Mo(ee, w, b.ref, G), [V, de] = P.useState(!1), ue = Js();
  process.env.NODE_ENV !== "production" && P.useEffect(() => {
    if (ue)
      return ue.registerEffect();
  }, [ue]);
  const xe = Qs({
    props: o,
    muiFormControl: ue,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  xe.focused = ue ? ue.focused : V, P.useEffect(() => {
    !ue && p && V && (de(!1), v && v());
  }, [ue, p, V, v]);
  const Ae = ue && ue.onFilled, we = ue && ue.onEmpty, De = P.useCallback((le) => {
    mu(le) ? Ae && Ae() : we && we();
  }, [Ae, we]);
  Ai(() => {
    W && De({
      value: ne
    });
  }, [ne, De, W]);
  const Ce = (le) => {
    A && A(le), b.onFocus && b.onFocus(le), ue && ue.onFocus ? ue.onFocus(le) : de(!0);
  }, Be = (le) => {
    v && v(le), b.onBlur && b.onBlur(le), ue && ue.onBlur ? ue.onBlur(le) : de(!1);
  }, Me = (le, ...ae) => {
    if (!W) {
      const ce = le.target || ee.current;
      if (ce == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : fr(1));
      De({
        value: ce.value
      });
    }
    b.onChange && b.onChange(le, ...ae), I && I(le, ...ae);
  };
  P.useEffect(() => {
    De(ee.current);
  }, []);
  const j = (le) => {
    ee.current && le.currentTarget === le.target && ee.current.focus(), k && k(le);
  };
  let J = T, ie = b;
  R && J === "input" && (D ? (process.env.NODE_ENV !== "production" && (C || E) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), ie = {
    type: void 0,
    minRows: D,
    maxRows: D,
    ...ie
  }) : ie = {
    type: void 0,
    maxRows: E,
    minRows: C,
    ...ie
  }, J = f1);
  const Q = (le) => {
    De(le.animationName === "mui-auto-fill-cancel" ? ee.current : {
      value: "x"
    });
  };
  P.useEffect(() => {
    ue && ue.setAdornedStart(!!q);
  }, [ue, q]);
  const H = {
    ...o,
    color: xe.color || "primary",
    disabled: xe.disabled,
    endAdornment: g,
    error: xe.error,
    focused: xe.focused,
    formControl: ue,
    fullWidth: y,
    hiddenLabel: xe.hiddenLabel,
    multiline: R,
    size: xe.size,
    startAdornment: q,
    type: Y
  }, X = B5(H), se = U.root || u.Root || Dd, ye = z.root || f.root || {}, he = U.input || u.Input || Ld;
  return ie = {
    ...ie,
    ...z.input ?? f.input
  }, /* @__PURE__ */ Te(P.Fragment, {
    children: [!h && typeof Ub == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (Wb || (Wb = /* @__PURE__ */ $(Ub, {}))), /* @__PURE__ */ Te(se, {
      ...ye,
      ref: n,
      onClick: j,
      ...te,
      ...!Zp(se) && {
        ownerState: {
          ...H,
          ...ye.ownerState
        }
      },
      className: Re(X.root, ye.className, l, L && "MuiInputBase-readOnly"),
      children: [q, /* @__PURE__ */ $(Md.Provider, {
        value: null,
        children: /* @__PURE__ */ $(he, {
          "aria-invalid": xe.error,
          "aria-describedby": r,
          autoComplete: i,
          autoFocus: a,
          defaultValue: d,
          disabled: xe.disabled,
          id: x,
          onAnimationStart: Q,
          name: M,
          placeholder: N,
          readOnly: L,
          required: xe.required,
          rows: D,
          value: ne,
          onKeyDown: O,
          onKeyUp: _,
          type: Y,
          ...ie,
          ...!Zp(he) && {
            as: J,
            ownerState: {
              ...H,
              ...ie.ownerState
            }
          },
          ref: re,
          className: Re(X.input, ie.className, L && "MuiInputBase-readOnly"),
          onBlur: Be,
          onChange: Me,
          onFocus: Ce
        })
      }), g, F ? F({
        ...xe,
        startAdornment: q
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (Bd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": s.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: s.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: s.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: s.oneOfType([s.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), s.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: s.shape({
    Input: s.elementType,
    Root: s.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: s.shape({
    input: s.object,
    root: s.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: s.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: s.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: s.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: s.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: s.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: s.bool,
  /**
   * The id of the `input` element.
   */
  id: s.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: t1,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: s.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: ui,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: s.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: s.oneOfType([s.number, s.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: s.oneOfType([s.number, s.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: s.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: s.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: s.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: s.func,
  /**
   * @ignore
   */
  onClick: s.func,
  /**
   * @ignore
   */
  onFocus: s.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: s.func,
  /**
   * @ignore
   */
  onKeyDown: s.func,
  /**
   * @ignore
   */
  onKeyUp: s.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: s.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: s.bool,
  /**
   * @ignore
   */
  renderSuffix: s.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: s.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: s.oneOfType([s.number, s.string]),
  /**
   * The size of the component.
   */
  size: s.oneOfType([s.oneOf(["medium", "small"]), s.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: s.shape({
    input: s.object,
    root: s.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: s.shape({
    input: s.elementType,
    root: s.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: s.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: s.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: s.any
});
function F5(e) {
  return typeof e.main == "string";
}
function z5(e, t = []) {
  if (!F5(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function Fd(e = []) {
  return ([, t]) => t && z5(t, e);
}
function j5(e) {
  return fn("MuiInput", e);
}
const aa = {
  ...Ms,
  ...bn("MuiInput", ["root", "underline", "input"])
}, V5 = (e) => {
  const {
    classes: t,
    disableUnderline: n
  } = e, r = vn({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, j5, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...r
  };
}, H5 = st(Dd, {
  shouldForwardProp: (e) => hr(e) || e === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [..._d(e, t), !n.disableUnderline && t.underline];
  }
})(Ln(({
  theme: e
}) => {
  let n = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e.vars && (n = `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`), {
    position: "relative",
    variants: [{
      props: ({
        ownerState: o
      }) => o.formControl,
      style: {
        "label + &": {
          marginTop: 16
        }
      }
    }, {
      props: ({
        ownerState: o
      }) => !o.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${aa.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${aa.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${aa.disabled}, .${aa.error}):before`]: {
          borderBottom: `2px solid ${(e.vars || e).palette.text.primary}`,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            borderBottom: `1px solid ${n}`
          }
        },
        [`&.${aa.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(Fd()).map(([o]) => ({
      props: {
        color: o,
        disableUnderline: !1
      },
      style: {
        "&::after": {
          borderBottom: `2px solid ${(e.vars || e).palette[o].main}`
        }
      }
    }))]
  };
})), W5 = st(Ld, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: Ad
})({}), zd = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = $n({
    props: t,
    name: "MuiInput"
  }), {
    disableUnderline: r = !1,
    components: i = {},
    componentsProps: a,
    fullWidth: l = !1,
    inputComponent: c = "input",
    multiline: u = !1,
    slotProps: f,
    slots: d = {},
    type: p = "text",
    ...h
  } = o, g = V5(o), y = {
    root: {
      ownerState: {
        disableUnderline: r
      }
    }
  }, x = f ?? a ? An(f ?? a, y) : y, T = d.root ?? i.Root ?? H5, b = d.input ?? i.Input ?? W5;
  return /* @__PURE__ */ $(Bd, {
    slots: {
      root: T,
      input: b
    },
    slotProps: x,
    fullWidth: l,
    inputComponent: c,
    multiline: u,
    ref: n,
    type: p,
    ...h,
    classes: g
  });
});
process.env.NODE_ENV !== "production" && (zd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: s.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: s.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: s.oneOfType([s.oneOf(["primary", "secondary"]), s.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: s.shape({
    Input: s.elementType,
    Root: s.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: s.shape({
    input: s.object,
    root: s.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: s.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: s.bool,
  /**
   * If `true`, the `input` will not have an underline.
   * @default false
   */
  disableUnderline: s.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: s.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: s.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: s.bool,
  /**
   * The id of the `input` element.
   */
  id: s.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: s.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: s.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: ui,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: s.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: s.oneOfType([s.number, s.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: s.oneOfType([s.number, s.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: s.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: s.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: s.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: s.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: s.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: s.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: s.oneOfType([s.number, s.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: s.shape({
    input: s.object,
    root: s.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: s.shape({
    input: s.elementType,
    root: s.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: s.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: s.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: s.any
});
zd.muiName = "Input";
function U5(e) {
  return fn("MuiFilledInput", e);
}
const bi = {
  ...Ms,
  ...bn("MuiFilledInput", ["root", "underline", "input", "adornedStart", "adornedEnd", "sizeSmall", "multiline", "hiddenLabel"])
};
function q5(e) {
  return fn("MuiSvgIcon", e);
}
bn("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const K5 = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: o
  } = e, r = {
    root: ["root", t !== "inherit" && `color${on(t)}`, `fontSize${on(n)}`]
  };
  return vn(r, q5, o);
}, Y5 = st("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${on(n.color)}`], t[`fontSize${on(n.fontSize)}`]];
  }
})(Ln(({
  theme: e
}) => {
  var t, n, o, r, i, a, l, c, u, f, d, p, h, g;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (r = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : r.call(t, "fill", {
      duration: (o = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : o.shorter
    }),
    variants: [
      {
        props: (m) => !m.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((a = (i = e.typography) == null ? void 0 : i.pxToRem) == null ? void 0 : a.call(i, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((c = (l = e.typography) == null ? void 0 : l.pxToRem) == null ? void 0 : c.call(l, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((f = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : f.call(u, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, m]) => m && m.main).map(([m]) => {
        var y, x;
        return {
          props: {
            color: m
          },
          style: {
            color: (x = (y = (e.vars ?? e).palette) == null ? void 0 : y[m]) == null ? void 0 : x.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (p = (d = (e.vars ?? e).palette) == null ? void 0 : d.action) == null ? void 0 : p.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (g = (h = (e.vars ?? e).palette) == null ? void 0 : h.action) == null ? void 0 : g.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), gu = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = $n({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: r,
    className: i,
    color: a = "inherit",
    component: l = "svg",
    fontSize: c = "medium",
    htmlColor: u,
    inheritViewBox: f = !1,
    titleAccess: d,
    viewBox: p = "0 0 24 24",
    ...h
  } = o, g = /* @__PURE__ */ P.isValidElement(r) && r.type === "svg", m = {
    ...o,
    color: a,
    component: l,
    fontSize: c,
    instanceFontSize: t.fontSize,
    inheritViewBox: f,
    viewBox: p,
    hasSvgAsChild: g
  }, y = {};
  f || (y.viewBox = p);
  const x = K5(m);
  return /* @__PURE__ */ Te(Y5, {
    as: l,
    className: Re(x.root, i),
    focusable: "false",
    color: u,
    "aria-hidden": d ? void 0 : !0,
    role: d ? "img" : void 0,
    ref: n,
    ...y,
    ...h,
    ...g && r.props,
    ownerState: m,
    children: [g ? r.props.children : r, d ? /* @__PURE__ */ $("title", {
      children: d
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (gu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: s.oneOfType([s.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), s.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: s.oneOfType([s.oneOf(["inherit", "large", "medium", "small"]), s.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: s.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: s.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Reference/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: s.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: s.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: s.string
});
gu.muiName = "SvgIcon";
function G5(e, t) {
  function n(o, r) {
    return /* @__PURE__ */ $(gu, {
      "data-testid": process.env.NODE_ENV !== "production" ? `${t}Icon` : void 0,
      ref: r,
      ...o,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = gu.muiName, /* @__PURE__ */ P.memo(/* @__PURE__ */ P.forwardRef(n));
}
function X5(e, t) {
  const n = e.charCodeAt(2);
  return e[0] === "o" && e[1] === "n" && n >= 65 && n <= 90 && typeof t == "function";
}
function Z5(e, t) {
  if (!e)
    return t;
  function n(a, l) {
    const c = {};
    return Object.keys(l).forEach((u) => {
      X5(u, l[u]) && typeof a[u] == "function" && (c[u] = (...f) => {
        a[u](...f), l[u](...f);
      });
    }), c;
  }
  if (typeof e == "function" || typeof t == "function")
    return (a) => {
      const l = typeof t == "function" ? t(a) : t, c = typeof e == "function" ? e({
        ...a,
        ...l
      }) : e, u = Re(a == null ? void 0 : a.className, l == null ? void 0 : l.className, c == null ? void 0 : c.className), f = n(c, l);
      return {
        ...l,
        ...c,
        ...f,
        ...!!u && {
          className: u
        },
        ...(l == null ? void 0 : l.style) && (c == null ? void 0 : c.style) && {
          style: {
            ...l.style,
            ...c.style
          }
        },
        ...(l == null ? void 0 : l.sx) && (c == null ? void 0 : c.sx) && {
          sx: [...Array.isArray(l.sx) ? l.sx : [l.sx], ...Array.isArray(c.sx) ? c.sx : [c.sx]]
        }
      };
    };
  const o = t, r = n(e, o), i = Re(o == null ? void 0 : o.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...r,
    ...!!i && {
      className: i
    },
    ...(o == null ? void 0 : o.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...o.style,
        ...e.style
      }
    },
    ...(o == null ? void 0 : o.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(o.sx) ? o.sx : [o.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
const Q5 = (e) => {
  const {
    classes: t,
    disableUnderline: n,
    startAdornment: o,
    endAdornment: r,
    size: i,
    hiddenLabel: a,
    multiline: l
  } = e, c = {
    root: ["root", !n && "underline", o && "adornedStart", r && "adornedEnd", i === "small" && `size${on(i)}`, a && "hiddenLabel", l && "multiline"],
    input: ["input"]
  }, u = vn(c, U5, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...u
  };
}, J5 = st(Dd, {
  shouldForwardProp: (e) => hr(e) || e === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [..._d(e, t), !n.disableUnderline && t.underline];
  }
})(Ln(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = t ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", o = t ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", r = t ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", i = t ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return {
    position: "relative",
    backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : o,
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create("background-color", {
      duration: e.transitions.duration.shorter,
      easing: e.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.hoverBg : r,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : o
      }
    },
    [`&.${bi.focused}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : o
    },
    [`&.${bi.disabled}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.disabledBg : i
    },
    variants: [{
      props: ({
        ownerState: a
      }) => !a.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${bi.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${bi.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})` : n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${bi.disabled}, .${bi.error}):before`]: {
          borderBottom: `1px solid ${(e.vars || e).palette.text.primary}`
        },
        [`&.${bi.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(Fd()).map(([a]) => {
      var l;
      return {
        props: {
          disableUnderline: !1,
          color: a
        },
        style: {
          "&::after": {
            borderBottom: `2px solid ${(l = (e.vars || e).palette[a]) == null ? void 0 : l.main}`
          }
        }
      };
    }), {
      props: ({
        ownerState: a
      }) => a.startAdornment,
      style: {
        paddingLeft: 12
      }
    }, {
      props: ({
        ownerState: a
      }) => a.endAdornment,
      style: {
        paddingRight: 12
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline,
      style: {
        padding: "25px 12px 8px"
      }
    }, {
      props: ({
        ownerState: a,
        size: l
      }) => a.multiline && l === "small",
      style: {
        paddingTop: 21,
        paddingBottom: 4
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline && a.hiddenLabel,
      style: {
        paddingTop: 16,
        paddingBottom: 17
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline && a.hiddenLabel && a.size === "small",
      style: {
        paddingTop: 8,
        paddingBottom: 9
      }
    }]
  };
})), eL = st(Ld, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: Ad
})(Ln(({
  theme: e
}) => ({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12,
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      paddingTop: 21,
      paddingBottom: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel,
    style: {
      paddingTop: 16,
      paddingBottom: 17
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel && t.size === "small",
    style: {
      paddingTop: 8,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      paddingTop: 0,
      paddingBottom: 0,
      paddingLeft: 0,
      paddingRight: 0
    }
  }]
}))), jd = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = $n({
    props: t,
    name: "MuiFilledInput"
  }), {
    disableUnderline: r = !1,
    components: i = {},
    componentsProps: a,
    fullWidth: l = !1,
    hiddenLabel: c,
    // declare here to prevent spreading to DOM
    inputComponent: u = "input",
    multiline: f = !1,
    slotProps: d,
    slots: p = {},
    type: h = "text",
    ...g
  } = o, m = {
    ...o,
    disableUnderline: r,
    fullWidth: l,
    inputComponent: u,
    multiline: f,
    type: h
  }, y = Q5(o), x = {
    root: {
      ownerState: m
    },
    input: {
      ownerState: m
    }
  }, T = d ?? a ? An(x, d ?? a) : x, b = p.root ?? i.Root ?? J5, w = p.input ?? i.Input ?? eL;
  return /* @__PURE__ */ $(Bd, {
    slots: {
      root: b,
      input: w
    },
    slotProps: T,
    fullWidth: l,
    inputComponent: u,
    multiline: f,
    ref: n,
    type: h,
    ...g,
    classes: y
  });
});
process.env.NODE_ENV !== "production" && (jd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: s.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: s.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: s.oneOfType([s.oneOf(["primary", "secondary"]), s.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: s.shape({
    Input: s.elementType,
    Root: s.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: s.shape({
    input: s.object,
    root: s.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: s.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: s.bool,
  /**
   * If `true`, the input will not have an underline.
   * @default false
   */
  disableUnderline: s.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: s.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: s.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: s.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: s.bool,
  /**
   * The id of the `input` element.
   */
  id: s.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: s.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: s.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: ui,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: s.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: s.oneOfType([s.number, s.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: s.oneOfType([s.number, s.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: s.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: s.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: s.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: s.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: s.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: s.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: s.oneOfType([s.number, s.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: s.shape({
    input: s.object,
    root: s.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: s.shape({
    input: s.elementType,
    root: s.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: s.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: s.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: s.any
});
jd.muiName = "Input";
var qb;
const tL = st("fieldset", {
  shouldForwardProp: hr
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), nL = st("legend", {
  shouldForwardProp: hr
})(Ln(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function p1(e) {
  const {
    children: t,
    classes: n,
    className: o,
    label: r,
    notched: i,
    ...a
  } = e, l = r != null && r !== "", c = {
    ...e,
    notched: i,
    withLabel: l
  };
  return /* @__PURE__ */ $(tL, {
    "aria-hidden": !0,
    className: o,
    ownerState: c,
    ...a,
    children: /* @__PURE__ */ $(nL, {
      ownerState: c,
      children: l ? /* @__PURE__ */ $("span", {
        children: r
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        qb || (qb = /* @__PURE__ */ $("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (p1.propTypes = {
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The label.
   */
  label: s.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: s.bool.isRequired,
  /**
   * @ignore
   */
  style: s.object
});
function oL(e) {
  return fn("MuiOutlinedInput", e);
}
const Xo = {
  ...Ms,
  ...bn("MuiOutlinedInput", ["root", "notchedOutline", "input"])
}, rL = (e) => {
  const {
    classes: t
  } = e, o = vn({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, oL, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...o
  };
}, iL = st(Dd, {
  shouldForwardProp: (e) => hr(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: _d
})(Ln(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${Xo.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${Xo.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${Xo.focused} .${Xo.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(Fd()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${Xo.focused} .${Xo.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${Xo.error} .${Xo.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${Xo.disabled} .${Xo.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: o
      }) => n.multiline && o === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), sL = st(p1, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(Ln(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), aL = st(Ld, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: Ad
})(Ln(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), Vd = /* @__PURE__ */ P.forwardRef(function(t, n) {
  var o;
  const r = $n({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: i = {},
    fullWidth: a = !1,
    inputComponent: l = "input",
    label: c,
    multiline: u = !1,
    notched: f,
    slots: d = {},
    type: p = "text",
    ...h
  } = r, g = rL(r), m = Js(), y = Qs({
    props: r,
    muiFormControl: m,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), x = {
    ...r,
    color: y.color || "primary",
    disabled: y.disabled,
    error: y.error,
    focused: y.focused,
    formControl: m,
    fullWidth: a,
    hiddenLabel: y.hiddenLabel,
    multiline: u,
    size: y.size,
    type: p
  }, T = d.root ?? i.Root ?? iL, b = d.input ?? i.Input ?? aL;
  return /* @__PURE__ */ $(Bd, {
    slots: {
      root: T,
      input: b
    },
    renderSuffix: (w) => /* @__PURE__ */ $(sL, {
      ownerState: x,
      className: g.notchedOutline,
      label: c != null && c !== "" && y.required ? o || (o = /* @__PURE__ */ Te(P.Fragment, {
        children: [c, " ", "*"]
      })) : c,
      notched: typeof f < "u" ? f : !!(w.startAdornment || w.filled || w.focused)
    }),
    fullWidth: a,
    inputComponent: l,
    multiline: u,
    ref: n,
    type: p,
    ...h,
    classes: {
      ...g,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (Vd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: s.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: s.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: s.oneOfType([s.oneOf(["primary", "secondary"]), s.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: s.shape({
    Input: s.elementType,
    Root: s.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: s.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: s.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: s.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: s.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: s.bool,
  /**
   * The id of the `input` element.
   */
  id: s.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: s.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: s.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: ui,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: s.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: s.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: s.oneOfType([s.number, s.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: s.oneOfType([s.number, s.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: s.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: s.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: s.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: s.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: s.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: s.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: s.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: s.oneOfType([s.number, s.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: s.shape({
    input: s.elementType,
    root: s.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: s.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: s.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: s.any
});
Vd.muiName = "Input";
function lL(e) {
  return fn("MuiFormLabel", e);
}
const La = bn("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]), cL = (e) => {
  const {
    classes: t,
    color: n,
    focused: o,
    disabled: r,
    error: i,
    filled: a,
    required: l
  } = e, c = {
    root: ["root", `color${on(n)}`, r && "disabled", i && "error", a && "filled", o && "focused", l && "required"],
    asterisk: ["asterisk", i && "error"]
  };
  return vn(c, lL, t);
}, uL = st("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color === "secondary" && t.colorSecondary, n.filled && t.filled];
  }
})(Ln(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.body1,
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  variants: [...Object.entries(e.palette).filter(Fd()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${La.focused}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    props: {},
    style: {
      [`&.${La.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      },
      [`&.${La.error}`]: {
        color: (e.vars || e).palette.error.main
      }
    }
  }]
}))), dL = st("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (e, t) => t.asterisk
})(Ln(({
  theme: e
}) => ({
  [`&.${La.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}))), h1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = $n({
    props: t,
    name: "MuiFormLabel"
  }), {
    children: r,
    className: i,
    color: a,
    component: l = "label",
    disabled: c,
    error: u,
    filled: f,
    focused: d,
    required: p,
    ...h
  } = o, g = Js(), m = Qs({
    props: o,
    muiFormControl: g,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  }), y = {
    ...o,
    color: m.color || "primary",
    component: l,
    disabled: m.disabled,
    error: m.error,
    filled: m.filled,
    focused: m.focused,
    required: m.required
  }, x = cL(y);
  return /* @__PURE__ */ Te(uL, {
    as: l,
    ownerState: y,
    className: Re(x.root, i),
    ref: n,
    ...h,
    children: [r, m.required && /* @__PURE__ */ Te(dL, {
      ownerState: y,
      "aria-hidden": !0,
      className: x.asterisk,
      children: [" ", "*"]
    })]
  });
});
process.env.NODE_ENV !== "production" && (h1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: s.oneOfType([s.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), s.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: s.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: s.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: s.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: s.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: s.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object])
});
function fL(e) {
  return fn("MuiInputLabel", e);
}
bn("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]);
const pL = (e) => {
  const {
    classes: t,
    formControl: n,
    size: o,
    shrink: r,
    disableAnimation: i,
    variant: a,
    required: l
  } = e, c = {
    root: ["root", n && "formControl", !i && "animated", r && "shrink", o && o !== "medium" && `size${on(o)}`, a],
    asterisk: [l && "asterisk"]
  }, u = vn(c, fL, t);
  return {
    ...t,
    // forward the focused, disabled, etc. classes to the FormLabel
    ...u
  };
}, hL = st(h1, {
  shouldForwardProp: (e) => hr(e) || e === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${La.asterisk}`]: t.asterisk
    }, t.root, n.formControl && t.formControl, n.size === "small" && t.sizeSmall, n.shrink && t.shrink, !n.disableAnimation && t.animated, n.focused && t.focused, t[n.variant]];
  }
})(Ln(({
  theme: e
}) => ({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%",
  variants: [{
    props: ({
      ownerState: t
    }) => t.formControl,
    style: {
      position: "absolute",
      left: 0,
      top: 0,
      // slight alteration to spec spacing to match visual spec result
      transform: "translate(0, 20px) scale(1)"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      // Compensation for the `Input.inputSizeSmall` style.
      transform: "translate(0, 17px) scale(1)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.shrink,
    style: {
      transform: "translate(0, -1.5px) scale(0.75)",
      transformOrigin: "top left",
      maxWidth: "133%"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableAnimation,
    style: {
      transition: e.transitions.create(["color", "transform", "max-width"], {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      // Chrome's autofill feature gives the input field a yellow background.
      // Since the input field is behind the label in the HTML tree,
      // the input field is drawn last and hides the label with an opaque background color.
      // zIndex: 1 will raise the label above opaque background-colors of input.
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(12px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "filled",
      size: "small"
    },
    style: {
      transform: "translate(12px, 13px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "filled" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      transform: "translate(12px, 7px) scale(0.75)",
      maxWidth: "calc(133% - 24px)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n,
      size: o
    }) => t === "filled" && n.shrink && o === "small",
    style: {
      transform: "translate(12px, 4px) scale(0.75)"
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      // see comment above on filled.zIndex
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(14px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "outlined",
      size: "small"
    },
    style: {
      transform: "translate(14px, 9px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "outlined" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      // Theoretically, we should have (8+5)*2/0.75 = 34px
      // but it feels a better when it bleeds a bit on the left, so 32px.
      maxWidth: "calc(133% - 32px)",
      transform: "translate(14px, -9px) scale(0.75)"
    }
  }]
}))), m1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = $n({
    name: "MuiInputLabel",
    props: t
  }), {
    disableAnimation: r = !1,
    margin: i,
    shrink: a,
    variant: l,
    className: c,
    ...u
  } = o, f = Js();
  let d = a;
  typeof d > "u" && f && (d = f.filled || f.focused || f.adornedStart);
  const p = Qs({
    props: o,
    muiFormControl: f,
    states: ["size", "variant", "required", "focused"]
  }), h = {
    ...o,
    disableAnimation: r,
    formControl: f,
    shrink: d,
    size: p.size,
    variant: p.variant,
    required: p.required,
    focused: p.focused
  }, g = pL(h);
  return /* @__PURE__ */ $(hL, {
    "data-shrink": d,
    ref: n,
    className: Re(g.root, c),
    ...u,
    ownerState: h,
    classes: g
  });
});
process.env.NODE_ENV !== "production" && (m1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: s.oneOfType([s.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), s.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: s.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: s.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: s.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: s.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: s.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: s.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: s.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: s.oneOfType([s.oneOf(["medium", "small"]), s.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The variant to use.
   */
  variant: s.oneOf(["filled", "outlined", "standard"])
});
function mL(e) {
  return fn("MuiFormControl", e);
}
bn("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]);
const gL = (e) => {
  const {
    classes: t,
    margin: n,
    fullWidth: o
  } = e, r = {
    root: ["root", n !== "none" && `margin${on(n)}`, o && "fullWidth"]
  };
  return vn(r, mL, t);
}, yL = st("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`margin${on(n.margin)}`], n.fullWidth && t.fullWidth];
  }
})({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top",
  // Fix alignment issue on Safari.
  variants: [{
    props: {
      margin: "normal"
    },
    style: {
      marginTop: 16,
      marginBottom: 8
    }
  }, {
    props: {
      margin: "dense"
    },
    style: {
      marginTop: 8,
      marginBottom: 4
    }
  }, {
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }]
}), g1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = $n({
    props: t,
    name: "MuiFormControl"
  }), {
    children: r,
    className: i,
    color: a = "primary",
    component: l = "div",
    disabled: c = !1,
    error: u = !1,
    focused: f,
    fullWidth: d = !1,
    hiddenLabel: p = !1,
    margin: h = "none",
    required: g = !1,
    size: m = "medium",
    variant: y = "outlined",
    ...x
  } = o, T = {
    ...o,
    color: a,
    component: l,
    disabled: c,
    error: u,
    fullWidth: d,
    hiddenLabel: p,
    margin: h,
    required: g,
    size: m,
    variant: y
  }, b = gL(T), [w, S] = P.useState(() => {
    let N = !1;
    return r && P.Children.forEach(r, (L) => {
      if (!Lf(L, ["Input", "Select"]))
        return;
      const F = Lf(L, ["Select"]) ? L.props.input : L;
      F && D5(F.props) && (N = !0);
    }), N;
  }), [E, C] = P.useState(() => {
    let N = !1;
    return r && P.Children.forEach(r, (L) => {
      Lf(L, ["Input", "Select"]) && (mu(L.props, !0) || mu(L.props.inputProps, !0)) && (N = !0);
    }), N;
  }), [R, M] = P.useState(!1);
  c && R && M(!1);
  const v = f !== void 0 && !c ? f : R;
  let I;
  const k = P.useRef(!1);
  process.env.NODE_ENV !== "production" && (I = () => (k.current && console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join(`
`)), k.current = !0, () => {
    k.current = !1;
  }));
  const A = P.useCallback(() => {
    C(!0);
  }, []), O = P.useCallback(() => {
    C(!1);
  }, []), _ = P.useMemo(() => ({
    adornedStart: w,
    setAdornedStart: S,
    color: a,
    disabled: c,
    error: u,
    filled: E,
    focused: v,
    fullWidth: d,
    hiddenLabel: p,
    size: m,
    onBlur: () => {
      M(!1);
    },
    onFocus: () => {
      M(!0);
    },
    onEmpty: O,
    onFilled: A,
    registerEffect: I,
    required: g,
    variant: y
  }), [w, a, c, u, E, v, d, p, I, O, A, g, m, y]);
  return /* @__PURE__ */ $(Md.Provider, {
    value: _,
    children: /* @__PURE__ */ $(yL, {
      as: l,
      ownerState: T,
      className: Re(b.root, i),
      ref: n,
      ...x,
      children: r
    })
  });
});
process.env.NODE_ENV !== "production" && (g1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: s.oneOfType([s.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), s.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: s.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: s.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: s.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: s.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: s.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: s.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: s.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: s.oneOfType([s.oneOf(["medium", "small"]), s.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: s.oneOf(["filled", "outlined", "standard"])
});
function bL(e) {
  return fn("MuiFormHelperText", e);
}
const Kb = bn("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]);
var Yb;
const vL = (e) => {
  const {
    classes: t,
    contained: n,
    size: o,
    disabled: r,
    error: i,
    filled: a,
    focused: l,
    required: c
  } = e, u = {
    root: ["root", r && "disabled", i && "error", o && `size${on(o)}`, n && "contained", l && "focused", a && "filled", c && "required"]
  };
  return vn(u, bL, t);
}, xL = st("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size && t[`size${on(n.size)}`], n.contained && t.contained, n.filled && t.filled];
  }
})(Ln(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.caption,
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${Kb.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${Kb.error}`]: {
    color: (e.vars || e).palette.error.main
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginTop: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.contained,
    style: {
      marginLeft: 14,
      marginRight: 14
    }
  }]
}))), y1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = $n({
    props: t,
    name: "MuiFormHelperText"
  }), {
    children: r,
    className: i,
    component: a = "p",
    disabled: l,
    error: c,
    filled: u,
    focused: f,
    margin: d,
    required: p,
    variant: h,
    ...g
  } = o, m = Js(), y = Qs({
    props: o,
    muiFormControl: m,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  }), x = {
    ...o,
    component: a,
    contained: y.variant === "filled" || y.variant === "outlined",
    variant: y.variant,
    size: y.size,
    disabled: y.disabled,
    error: y.error,
    filled: y.filled,
    focused: y.focused,
    required: y.required
  };
  delete x.ownerState;
  const T = vL(x);
  return /* @__PURE__ */ $(xL, {
    as: a,
    className: Re(T.root, i),
    ref: n,
    ...g,
    ownerState: x,
    children: r === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      Yb || (Yb = /* @__PURE__ */ $("span", {
        className: "notranslate",
        "aria-hidden": !0,
        children: "​"
      }))
    ) : r
  });
});
process.env.NODE_ENV !== "production" && (y1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: s.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: s.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: s.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: s.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: s.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: s.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The variant to use.
   */
  variant: s.oneOfType([s.oneOf(["filled", "outlined", "standard"]), s.string])
});
const b1 = /* @__PURE__ */ P.createContext({});
process.env.NODE_ENV !== "production" && (b1.displayName = "ListContext");
function wL(e) {
  return fn("MuiList", e);
}
bn("MuiList", ["root", "padding", "dense", "subheader"]);
const SL = (e) => {
  const {
    classes: t,
    disablePadding: n,
    dense: o,
    subheader: r
  } = e;
  return vn({
    root: ["root", !n && "padding", o && "dense", r && "subheader"]
  }, wL, t);
}, TL = st("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.disablePadding && t.padding, n.dense && t.dense, n.subheader && t.subheader];
  }
})({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative",
  variants: [{
    props: ({
      ownerState: e
    }) => !e.disablePadding,
    style: {
      paddingTop: 8,
      paddingBottom: 8
    }
  }, {
    props: ({
      ownerState: e
    }) => e.subheader,
    style: {
      paddingTop: 0
    }
  }]
}), v1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = $n({
    props: t,
    name: "MuiList"
  }), {
    children: r,
    className: i,
    component: a = "ul",
    dense: l = !1,
    disablePadding: c = !1,
    subheader: u,
    ...f
  } = o, d = P.useMemo(() => ({
    dense: l
  }), [l]), p = {
    ...o,
    component: a,
    dense: l,
    disablePadding: c
  }, h = SL(p);
  return /* @__PURE__ */ $(b1.Provider, {
    value: d,
    children: /* @__PURE__ */ Te(TL, {
      as: a,
      className: Re(h.root, i),
      ref: n,
      ownerState: p,
      ...f,
      children: [u, r]
    })
  });
});
process.env.NODE_ENV !== "production" && (v1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: s.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: s.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: s.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object])
});
function Ff(e, t, n) {
  return e === t ? e.firstChild : t && t.nextElementSibling ? t.nextElementSibling : n ? null : e.firstChild;
}
function Gb(e, t, n) {
  return e === t ? n ? e.firstChild : e.lastChild : t && t.previousElementSibling ? t.previousElementSibling : n ? null : e.lastChild;
}
function x1(e, t) {
  if (t === void 0)
    return !0;
  let n = e.innerText;
  return n === void 0 && (n = e.textContent), n = n.trim().toLowerCase(), n.length === 0 ? !1 : t.repeating ? n[0] === t.keys[0] : n.startsWith(t.keys.join(""));
}
function la(e, t, n, o, r, i) {
  let a = !1, l = r(e, t, t ? n : !1);
  for (; l; ) {
    if (l === e.firstChild) {
      if (a)
        return !1;
      a = !0;
    }
    const c = o ? !1 : l.disabled || l.getAttribute("aria-disabled") === "true";
    if (!l.hasAttribute("tabindex") || !x1(l, i) || c)
      l = r(e, l, n);
    else
      return l.focus(), !0;
  }
  return !1;
}
const w1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: o,
    autoFocus: r = !1,
    autoFocusItem: i = !1,
    children: a,
    className: l,
    disabledItemsFocusable: c = !1,
    disableListWrap: u = !1,
    onKeyDown: f,
    variant: d = "selectedMenu",
    ...p
  } = t, h = P.useRef(null), g = P.useRef({
    keys: [],
    repeating: !0,
    previousKeyMatched: !0,
    lastTime: null
  });
  Ai(() => {
    r && h.current.focus();
  }, [r]), P.useImperativeHandle(o, () => ({
    adjustStyleForScrollbar: (b, {
      direction: w
    }) => {
      const S = !h.current.style.width;
      if (b.clientHeight < h.current.clientHeight && S) {
        const E = `${r1(Ir(b))}px`;
        h.current.style[w === "rtl" ? "paddingLeft" : "paddingRight"] = E, h.current.style.width = `calc(100% + ${E})`;
      }
      return h.current;
    }
  }), []);
  const m = (b) => {
    const w = h.current, S = b.key;
    if (b.ctrlKey || b.metaKey || b.altKey) {
      f && f(b);
      return;
    }
    const C = qo(w).activeElement;
    if (S === "ArrowDown")
      b.preventDefault(), la(w, C, u, c, Ff);
    else if (S === "ArrowUp")
      b.preventDefault(), la(w, C, u, c, Gb);
    else if (S === "Home")
      b.preventDefault(), la(w, null, u, c, Ff);
    else if (S === "End")
      b.preventDefault(), la(w, null, u, c, Gb);
    else if (S.length === 1) {
      const R = g.current, M = S.toLowerCase(), v = performance.now();
      R.keys.length > 0 && (v - R.lastTime > 500 ? (R.keys = [], R.repeating = !0, R.previousKeyMatched = !0) : R.repeating && M !== R.keys[0] && (R.repeating = !1)), R.lastTime = v, R.keys.push(M);
      const I = C && !R.repeating && x1(C, R);
      R.previousKeyMatched && (I || la(w, C, !1, c, Ff, R)) ? b.preventDefault() : R.previousKeyMatched = !1;
    }
    f && f(b);
  }, y = Mo(h, n);
  let x = -1;
  P.Children.forEach(a, (b, w) => {
    if (!/* @__PURE__ */ P.isValidElement(b)) {
      x === w && (x += 1, x >= a.length && (x = -1));
      return;
    }
    process.env.NODE_ENV !== "production" && Xn.isFragment(b) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), b.props.disabled || (d === "selectedMenu" && b.props.selected || x === -1) && (x = w), x === w && (b.props.disabled || b.props.muiSkipListHighlight || b.type.muiSkipListHighlight) && (x += 1, x >= a.length && (x = -1));
  });
  const T = P.Children.map(a, (b, w) => {
    if (w === x) {
      const S = {};
      return i && (S.autoFocus = !0), b.props.tabIndex === void 0 && d === "selectedMenu" && (S.tabIndex = 0), /* @__PURE__ */ P.cloneElement(b, S);
    }
    return b;
  });
  return /* @__PURE__ */ $(v1, {
    role: "menu",
    ref: y,
    className: l,
    onKeyDown: m,
    tabIndex: r ? 0 : -1,
    ...p,
    children: T
  });
});
process.env.NODE_ENV !== "production" && (w1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: s.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: s.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: s.node,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: s.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: s.bool,
  /**
   * @ignore
   */
  onKeyDown: s.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: s.oneOf(["menu", "selectedMenu"])
});
const S1 = (e) => e.scrollTop;
function yu(e, t) {
  const {
    timeout: n,
    easing: o,
    style: r = {}
  } = e;
  return {
    duration: r.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: r.transitionTimingFunction ?? (typeof o == "object" ? o[t.mode] : o),
    delay: r.transitionDelay
  };
}
function Qp(e) {
  return `scale(${e}, ${e ** 2})`;
}
const EL = {
  entering: {
    opacity: 1,
    transform: Qp(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, zf = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), bu = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const {
    addEndListener: o,
    appear: r = !0,
    children: i,
    easing: a,
    in: l,
    onEnter: c,
    onEntered: u,
    onEntering: f,
    onExit: d,
    onExited: p,
    onExiting: h,
    style: g,
    timeout: m = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: y = go,
    ...x
  } = t, T = k5(), b = P.useRef(), w = Lm(), S = P.useRef(null), E = Mo(S, Bl(i), n), C = (_) => (N) => {
    if (_) {
      const L = S.current;
      N === void 0 ? _(L) : _(L, N);
    }
  }, R = C(f), M = C((_, N) => {
    S1(_);
    const {
      duration: L,
      delay: F,
      easing: D
    } = yu({
      style: g,
      timeout: m,
      easing: a
    }, {
      mode: "enter"
    });
    let B;
    m === "auto" ? (B = w.transitions.getAutoHeightDuration(_.clientHeight), b.current = B) : B = L, _.style.transition = [w.transitions.create("opacity", {
      duration: B,
      delay: F
    }), w.transitions.create("transform", {
      duration: zf ? B : B * 0.666,
      delay: F,
      easing: D
    })].join(","), c && c(_, N);
  }), v = C(u), I = C(h), k = C((_) => {
    const {
      duration: N,
      delay: L,
      easing: F
    } = yu({
      style: g,
      timeout: m,
      easing: a
    }, {
      mode: "exit"
    });
    let D;
    m === "auto" ? (D = w.transitions.getAutoHeightDuration(_.clientHeight), b.current = D) : D = N, _.style.transition = [w.transitions.create("opacity", {
      duration: D,
      delay: L
    }), w.transitions.create("transform", {
      duration: zf ? D : D * 0.666,
      delay: zf ? L : L || D * 0.333,
      easing: F
    })].join(","), _.style.opacity = 0, _.style.transform = Qp(0.75), d && d(_);
  }), A = C(p);
  return /* @__PURE__ */ $(y, {
    appear: r,
    in: l,
    nodeRef: S,
    onEnter: M,
    onEntered: v,
    onEntering: R,
    onExit: k,
    onExited: A,
    onExiting: I,
    addEndListener: (_) => {
      m === "auto" && T.start(b.current || 0, _), o && o(S.current, _);
    },
    timeout: m === "auto" ? null : m,
    ...x,
    children: (_, {
      ownerState: N,
      ...L
    }) => /* @__PURE__ */ P.cloneElement(i, {
      style: {
        opacity: 0,
        transform: Qp(0.75),
        visibility: _ === "exited" && !l ? "hidden" : void 0,
        ...EL[_],
        ...g,
        ...i.props.style
      },
      ref: E,
      ...L
    })
  });
});
process.env.NODE_ENV !== "production" && (bu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: s.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: s.bool,
  /**
   * A single child content element.
   */
  children: Ll.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: s.oneOfType([s.shape({
    enter: s.string,
    exit: s.string
  }), s.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: s.bool,
  /**
   * @ignore
   */
  onEnter: s.func,
  /**
   * @ignore
   */
  onEntered: s.func,
  /**
   * @ignore
   */
  onEntering: s.func,
  /**
   * @ignore
   */
  onExit: s.func,
  /**
   * @ignore
   */
  onExited: s.func,
  /**
   * @ignore
   */
  onExiting: s.func,
  /**
   * @ignore
   */
  style: s.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: s.oneOfType([s.oneOf(["auto"]), s.number, s.shape({
    appear: s.number,
    enter: s.number,
    exit: s.number
  })])
});
bu && (bu.muiSupportAuto = !0);
function CL(e) {
  const t = qo(e);
  return t.body === e ? Ir(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function Ba(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function Xb(e) {
  return parseInt(Ir(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function OL(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), o = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || o;
}
function Zb(e, t, n, o, r) {
  const i = [t, n, ...o];
  [].forEach.call(e.children, (a) => {
    const l = !i.includes(a), c = !OL(a);
    l && c && Ba(a, r);
  });
}
function jf(e, t) {
  let n = -1;
  return e.some((o, r) => t(o) ? (n = r, !0) : !1), n;
}
function $L(e, t) {
  const n = [], o = e.container;
  if (!t.disableScrollLock) {
    if (CL(o)) {
      const a = r1(Ir(o));
      n.push({
        value: o.style.paddingRight,
        property: "padding-right",
        el: o
      }), o.style.paddingRight = `${Xb(o) + a}px`;
      const l = qo(o).querySelectorAll(".mui-fixed");
      [].forEach.call(l, (c) => {
        n.push({
          value: c.style.paddingRight,
          property: "padding-right",
          el: c
        }), c.style.paddingRight = `${Xb(c) + a}px`;
      });
    }
    let i;
    if (o.parentNode instanceof DocumentFragment)
      i = qo(o).body;
    else {
      const a = o.parentElement, l = Ir(o);
      i = (a == null ? void 0 : a.nodeName) === "HTML" && l.getComputedStyle(a).overflowY === "scroll" ? a : o;
    }
    n.push({
      value: i.style.overflow,
      property: "overflow",
      el: i
    }, {
      value: i.style.overflowX,
      property: "overflow-x",
      el: i
    }, {
      value: i.style.overflowY,
      property: "overflow-y",
      el: i
    }), i.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: i,
      el: a,
      property: l
    }) => {
      i ? a.style.setProperty(l, i) : a.style.removeProperty(l);
    });
  };
}
function IL(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
class RL {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let o = this.modals.indexOf(t);
    if (o !== -1)
      return o;
    o = this.modals.length, this.modals.push(t), t.modalRef && Ba(t.modalRef, !1);
    const r = IL(n);
    Zb(n, t.mount, t.modalRef, r, !0);
    const i = jf(this.containers, (a) => a.container === n);
    return i !== -1 ? (this.containers[i].modals.push(t), o) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: r
    }), o);
  }
  mount(t, n) {
    const o = jf(this.containers, (i) => i.modals.includes(t)), r = this.containers[o];
    r.restore || (r.restore = $L(r, n));
  }
  remove(t, n = !0) {
    const o = this.modals.indexOf(t);
    if (o === -1)
      return o;
    const r = jf(this.containers, (a) => a.modals.includes(t)), i = this.containers[r];
    if (i.modals.splice(i.modals.indexOf(t), 1), this.modals.splice(o, 1), i.modals.length === 0)
      i.restore && i.restore(), t.modalRef && Ba(t.modalRef, n), Zb(i.container, t.mount, t.modalRef, i.hiddenSiblings, !1), this.containers.splice(r, 1);
    else {
      const a = i.modals[i.modals.length - 1];
      a.modalRef && Ba(a.modalRef, !1);
    }
    return o;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
}
const kL = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function PL(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function NL(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (o) => e.ownerDocument.querySelector(`input[type="radio"]${o}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function ML(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || NL(e));
}
function _L(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(kL)).forEach((o, r) => {
    const i = PL(o);
    i === -1 || !ML(o) || (i === 0 ? t.push(o) : n.push({
      documentOrder: r,
      tabIndex: i,
      node: o
    }));
  }), n.sort((o, r) => o.tabIndex === r.tabIndex ? o.documentOrder - r.documentOrder : o.tabIndex - r.tabIndex).map((o) => o.node).concat(t);
}
function AL() {
  return !0;
}
function vu(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: o = !1,
    disableRestoreFocus: r = !1,
    getTabbable: i = _L,
    isEnabled: a = AL,
    open: l
  } = e, c = P.useRef(!1), u = P.useRef(null), f = P.useRef(null), d = P.useRef(null), p = P.useRef(null), h = P.useRef(!1), g = P.useRef(null), m = Mo(Bl(t), g), y = P.useRef(null);
  P.useEffect(() => {
    !l || !g.current || (h.current = !n);
  }, [n, l]), P.useEffect(() => {
    if (!l || !g.current)
      return;
    const b = qo(g.current);
    return g.current.contains(b.activeElement) || (g.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), g.current.setAttribute("tabIndex", "-1")), h.current && g.current.focus()), () => {
      r || (d.current && d.current.focus && (c.current = !0, d.current.focus()), d.current = null);
    };
  }, [l]), P.useEffect(() => {
    if (!l || !g.current)
      return;
    const b = qo(g.current), w = (C) => {
      y.current = C, !(o || !a() || C.key !== "Tab") && b.activeElement === g.current && C.shiftKey && (c.current = !0, f.current && f.current.focus());
    }, S = () => {
      var M, v;
      const C = g.current;
      if (C === null)
        return;
      if (!b.hasFocus() || !a() || c.current) {
        c.current = !1;
        return;
      }
      if (C.contains(b.activeElement) || o && b.activeElement !== u.current && b.activeElement !== f.current)
        return;
      if (b.activeElement !== p.current)
        p.current = null;
      else if (p.current !== null)
        return;
      if (!h.current)
        return;
      let R = [];
      if ((b.activeElement === u.current || b.activeElement === f.current) && (R = i(g.current)), R.length > 0) {
        const I = !!((M = y.current) != null && M.shiftKey && ((v = y.current) == null ? void 0 : v.key) === "Tab"), k = R[0], A = R[R.length - 1];
        typeof k != "string" && typeof A != "string" && (I ? A.focus() : k.focus());
      } else
        C.focus();
    };
    b.addEventListener("focusin", S), b.addEventListener("keydown", w, !0);
    const E = setInterval(() => {
      b.activeElement && b.activeElement.tagName === "BODY" && S();
    }, 50);
    return () => {
      clearInterval(E), b.removeEventListener("focusin", S), b.removeEventListener("keydown", w, !0);
    };
  }, [n, o, r, a, l, i]);
  const x = (b) => {
    d.current === null && (d.current = b.relatedTarget), h.current = !0, p.current = b.target;
    const w = t.props.onFocus;
    w && w(b);
  }, T = (b) => {
    d.current === null && (d.current = b.relatedTarget), h.current = !0;
  };
  return /* @__PURE__ */ Te(P.Fragment, {
    children: [/* @__PURE__ */ $("div", {
      tabIndex: l ? 0 : -1,
      onFocus: T,
      ref: u,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ P.cloneElement(t, {
      ref: m,
      onFocus: x
    }), /* @__PURE__ */ $("div", {
      tabIndex: l ? 0 : -1,
      onFocus: T,
      ref: f,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (vu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: Ll,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: s.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: s.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: s.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: s.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: s.func,
  /**
   * If `true`, focus is locked.
   */
  open: s.bool.isRequired
});
process.env.NODE_ENV !== "production" && (vu.propTypes = US(vu.propTypes));
function DL(e) {
  return typeof e == "function" ? e() : e;
}
const xu = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const {
    children: o,
    container: r,
    disablePortal: i = !1
  } = t, [a, l] = P.useState(null), c = Mo(/* @__PURE__ */ P.isValidElement(o) ? Bl(o) : null, n);
  if (Ai(() => {
    i || l(DL(r) || document.body);
  }, [r, i]), Ai(() => {
    if (a && !i)
      return Bb(n, a), () => {
        Bb(n, null);
      };
  }, [n, a, i]), i) {
    if (/* @__PURE__ */ P.isValidElement(o)) {
      const u = {
        ref: c
      };
      return /* @__PURE__ */ P.cloneElement(o, u);
    }
    return o;
  }
  return a && /* @__PURE__ */ ex.createPortal(o, a);
});
process.env.NODE_ENV !== "production" && (xu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: s.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: s.oneOfType([il, s.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: s.bool
});
process.env.NODE_ENV !== "production" && (xu.propTypes = US(xu.propTypes));
function jn(e, t) {
  const {
    className: n,
    elementType: o,
    ownerState: r,
    externalForwardedProps: i,
    internalForwardedProps: a,
    shouldForwardComponentProp: l = !1,
    ...c
  } = t, {
    component: u,
    slots: f = {
      [e]: void 0
    },
    slotProps: d = {
      [e]: void 0
    },
    ...p
  } = i, h = f[e] || o, g = d1(d[e], r), {
    props: {
      component: m,
      ...y
    },
    internalRef: x
  } = u1({
    className: n,
    ...c,
    externalForwardedProps: e === "root" ? p : void 0,
    externalSlotProps: g
  }), T = Mo(x, g == null ? void 0 : g.ref, t.ref), b = e === "root" ? m || u : m, w = l1(h, {
    ...e === "root" && !u && !f[e] && a,
    ...e !== "root" && !f[e] && a,
    ...y,
    ...b && !l && {
      as: b
    },
    ...b && l && {
      component: b
    },
    ref: T
  }, r);
  return [h, w];
}
const LL = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, T1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = Lm(), r = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    addEndListener: i,
    appear: a = !0,
    children: l,
    easing: c,
    in: u,
    onEnter: f,
    onEntered: d,
    onEntering: p,
    onExit: h,
    onExited: g,
    onExiting: m,
    style: y,
    timeout: x = r,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: T = go,
    ...b
  } = t, w = P.useRef(null), S = Mo(w, Bl(l), n), E = (O) => (_) => {
    if (O) {
      const N = w.current;
      _ === void 0 ? O(N) : O(N, _);
    }
  }, C = E(p), R = E((O, _) => {
    S1(O);
    const N = yu({
      style: y,
      timeout: x,
      easing: c
    }, {
      mode: "enter"
    });
    O.style.webkitTransition = o.transitions.create("opacity", N), O.style.transition = o.transitions.create("opacity", N), f && f(O, _);
  }), M = E(d), v = E(m), I = E((O) => {
    const _ = yu({
      style: y,
      timeout: x,
      easing: c
    }, {
      mode: "exit"
    });
    O.style.webkitTransition = o.transitions.create("opacity", _), O.style.transition = o.transitions.create("opacity", _), h && h(O);
  }), k = E(g);
  return /* @__PURE__ */ $(T, {
    appear: a,
    in: u,
    nodeRef: w,
    onEnter: R,
    onEntered: M,
    onEntering: C,
    onExit: I,
    onExited: k,
    onExiting: v,
    addEndListener: (O) => {
      i && i(w.current, O);
    },
    timeout: x,
    ...b,
    children: (O, {
      ownerState: _,
      ...N
    }) => /* @__PURE__ */ P.cloneElement(l, {
      style: {
        opacity: 0,
        visibility: O === "exited" && !u ? "hidden" : void 0,
        ...LL[O],
        ...y,
        ...l.props.style
      },
      ref: S,
      ...N
    })
  });
});
process.env.NODE_ENV !== "production" && (T1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: s.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: s.bool,
  /**
   * A single child content element.
   */
  children: Ll.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: s.oneOfType([s.shape({
    enter: s.string,
    exit: s.string
  }), s.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: s.bool,
  /**
   * @ignore
   */
  onEnter: s.func,
  /**
   * @ignore
   */
  onEntered: s.func,
  /**
   * @ignore
   */
  onEntering: s.func,
  /**
   * @ignore
   */
  onExit: s.func,
  /**
   * @ignore
   */
  onExited: s.func,
  /**
   * @ignore
   */
  onExiting: s.func,
  /**
   * @ignore
   */
  style: s.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: s.oneOfType([s.number, s.shape({
    appear: s.number,
    enter: s.number,
    exit: s.number
  })])
});
function BL(e) {
  return fn("MuiBackdrop", e);
}
bn("MuiBackdrop", ["root", "invisible"]);
const FL = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return vn({
    root: ["root", n && "invisible"]
  }, BL, t);
}, zL = st("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), E1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = $n({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: r,
    className: i,
    component: a = "div",
    invisible: l = !1,
    open: c,
    components: u = {},
    componentsProps: f = {},
    slotProps: d = {},
    slots: p = {},
    TransitionComponent: h,
    transitionDuration: g,
    ...m
  } = o, y = {
    ...o,
    component: a,
    invisible: l
  }, x = FL(y), T = {
    transition: h,
    root: u.Root,
    ...p
  }, b = {
    ...f,
    ...d
  }, w = {
    slots: T,
    slotProps: b
  }, [S, E] = jn("root", {
    elementType: zL,
    externalForwardedProps: w,
    className: Re(x.root, i),
    ownerState: y
  }), [C, R] = jn("transition", {
    elementType: T1,
    externalForwardedProps: w,
    ownerState: y
  });
  return /* @__PURE__ */ $(C, {
    in: c,
    timeout: g,
    ...m,
    ...R,
    children: /* @__PURE__ */ $(S, {
      "aria-hidden": !0,
      ...E,
      classes: x,
      ref: n,
      children: r
    })
  });
});
process.env.NODE_ENV !== "production" && (E1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: s.shape({
    Root: s.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: s.shape({
    root: s.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: s.bool,
  /**
   * If `true`, the component is shown.
   */
  open: s.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: s.shape({
    root: s.oneOfType([s.func, s.object]),
    transition: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: s.shape({
    root: s.elementType,
    transition: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: s.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: s.oneOfType([s.number, s.shape({
    appear: s.number,
    enter: s.number,
    exit: s.number
  })])
});
function jL(e) {
  return typeof e == "function" ? e() : e;
}
function VL(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const Qb = () => {
}, gc = new RL();
function HL(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: o = !1,
    closeAfterTransition: r = !1,
    onTransitionEnter: i,
    onTransitionExited: a,
    children: l,
    onClose: c,
    open: u,
    rootRef: f
  } = e, d = P.useRef({}), p = P.useRef(null), h = P.useRef(null), g = Mo(h, f), [m, y] = P.useState(!u), x = VL(l);
  let T = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (T = !1);
  const b = () => qo(p.current), w = () => (d.current.modalRef = h.current, d.current.mount = p.current, d.current), S = () => {
    gc.mount(w(), {
      disableScrollLock: o
    }), h.current && (h.current.scrollTop = 0);
  }, E = Gp(() => {
    const _ = jL(t) || b().body;
    gc.add(w(), _), h.current && S();
  }), C = () => gc.isTopModal(w()), R = Gp((_) => {
    p.current = _, _ && (u && C() ? S() : h.current && Ba(h.current, T));
  }), M = P.useCallback(() => {
    gc.remove(w(), T);
  }, [T]);
  P.useEffect(() => () => {
    M();
  }, [M]), P.useEffect(() => {
    u ? E() : (!x || !r) && M();
  }, [u, M, x, r, E]);
  const v = (_) => (N) => {
    var L;
    (L = _.onKeyDown) == null || L.call(_, N), !(N.key !== "Escape" || N.which === 229 || // Wait until IME is settled.
    !C()) && (n || (N.stopPropagation(), c && c(N, "escapeKeyDown")));
  }, I = (_) => (N) => {
    var L;
    (L = _.onClick) == null || L.call(_, N), N.target === N.currentTarget && c && c(N, "backdropClick");
  };
  return {
    getRootProps: (_ = {}) => {
      const N = c1(e);
      delete N.onTransitionEnter, delete N.onTransitionExited;
      const L = {
        ...N,
        ..._
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...L,
        onKeyDown: v(L),
        ref: g
      };
    },
    getBackdropProps: (_ = {}) => {
      const N = _;
      return {
        "aria-hidden": !0,
        ...N,
        onClick: I(N),
        open: u
      };
    },
    getTransitionProps: () => {
      const _ = () => {
        y(!1), i && i();
      }, N = () => {
        y(!0), a && a(), r && M();
      };
      return {
        onEnter: Lb(_, (l == null ? void 0 : l.props.onEnter) ?? Qb),
        onExited: Lb(N, (l == null ? void 0 : l.props.onExited) ?? Qb)
      };
    },
    rootRef: g,
    portalRef: R,
    isTopModal: C,
    exited: m,
    hasTransition: x
  };
}
function WL(e) {
  return fn("MuiModal", e);
}
bn("MuiModal", ["root", "hidden", "backdrop"]);
const UL = (e) => {
  const {
    open: t,
    exited: n,
    classes: o
  } = e;
  return vn({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, WL, o);
}, qL = st("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(Ln(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), KL = st(E1, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), C1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = $n({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: r = KL,
    BackdropProps: i,
    classes: a,
    className: l,
    closeAfterTransition: c = !1,
    children: u,
    container: f,
    component: d,
    components: p = {},
    componentsProps: h = {},
    disableAutoFocus: g = !1,
    disableEnforceFocus: m = !1,
    disableEscapeKeyDown: y = !1,
    disablePortal: x = !1,
    disableRestoreFocus: T = !1,
    disableScrollLock: b = !1,
    hideBackdrop: w = !1,
    keepMounted: S = !1,
    onClose: E,
    onTransitionEnter: C,
    onTransitionExited: R,
    open: M,
    slotProps: v = {},
    slots: I = {},
    // eslint-disable-next-line react/prop-types
    theme: k,
    ...A
  } = o, O = {
    ...o,
    closeAfterTransition: c,
    disableAutoFocus: g,
    disableEnforceFocus: m,
    disableEscapeKeyDown: y,
    disablePortal: x,
    disableRestoreFocus: T,
    disableScrollLock: b,
    hideBackdrop: w,
    keepMounted: S
  }, {
    getRootProps: _,
    getBackdropProps: N,
    getTransitionProps: L,
    portalRef: F,
    isTopModal: D,
    exited: B,
    hasTransition: z
  } = HL({
    ...O,
    rootRef: n
  }), U = {
    ...O,
    exited: B
  }, q = UL(U), Y = {};
  if (u.props.tabIndex === void 0 && (Y.tabIndex = "-1"), z) {
    const {
      onEnter: G,
      onExited: re
    } = L();
    Y.onEnter = G, Y.onExited = re;
  }
  const K = {
    slots: {
      root: p.Root,
      backdrop: p.Backdrop,
      ...I
    },
    slotProps: {
      ...h,
      ...v
    }
  }, [te, ne] = jn("root", {
    ref: n,
    elementType: qL,
    externalForwardedProps: {
      ...K,
      ...A,
      component: d
    },
    getSlotProps: _,
    ownerState: U,
    className: Re(l, q == null ? void 0 : q.root, !U.open && U.exited && (q == null ? void 0 : q.hidden))
  }), [W, ee] = jn("backdrop", {
    ref: i == null ? void 0 : i.ref,
    elementType: r,
    externalForwardedProps: K,
    shouldForwardComponentProp: !0,
    additionalProps: i,
    getSlotProps: (G) => N({
      ...G,
      onClick: (re) => {
        G != null && G.onClick && G.onClick(re);
      }
    }),
    className: Re(i == null ? void 0 : i.className, q == null ? void 0 : q.backdrop),
    ownerState: U
  });
  return !S && !M && (!z || B) ? null : /* @__PURE__ */ $(xu, {
    ref: F,
    container: f,
    disablePortal: x,
    children: /* @__PURE__ */ Te(te, {
      ...ne,
      children: [!w && r ? /* @__PURE__ */ $(W, {
        ...ee
      }) : null, /* @__PURE__ */ $(vu, {
        disableEnforceFocus: m,
        disableAutoFocus: g,
        disableRestoreFocus: T,
        isEnabled: D,
        open: M,
        children: /* @__PURE__ */ P.cloneElement(u, Y)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (C1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: s.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: s.object,
  /**
   * A single child content element.
   */
  children: Ll.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: s.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: s.shape({
    Backdrop: s.elementType,
    Root: s.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: s.shape({
    backdrop: s.oneOfType([s.func, s.object]),
    root: s.oneOfType([s.func, s.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: s.oneOfType([il, s.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: s.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: s.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: s.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: s.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: s.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: s.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: s.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: s.bool,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: s.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: s.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: s.func,
  /**
   * If `true`, the component is shown.
   */
  open: s.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: s.shape({
    backdrop: s.oneOfType([s.func, s.object]),
    root: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: s.shape({
    backdrop: s.elementType,
    root: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object])
});
function YL(e) {
  return fn("MuiPaper", e);
}
bn("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const GL = (e) => {
  const {
    square: t,
    elevation: n,
    variant: o,
    classes: r
  } = e, i = {
    root: ["root", o, !t && "rounded", o === "elevation" && `elevation${n}`]
  };
  return vn(i, YL, r);
}, XL = st("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(Ln(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), O1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  var h;
  const o = $n({
    props: t,
    name: "MuiPaper"
  }), r = Lm(), {
    className: i,
    component: a = "div",
    elevation: l = 1,
    square: c = !1,
    variant: u = "elevation",
    ...f
  } = o, d = {
    ...o,
    component: a,
    elevation: l,
    square: c,
    variant: u
  }, p = GL(d);
  return process.env.NODE_ENV !== "production" && r.shadows[l] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${l}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${l}]\` is defined.`].join(`
`)), /* @__PURE__ */ $(XL, {
    as: a,
    ownerState: d,
    className: Re(p.root, i),
    ref: n,
    ...f,
    style: {
      ...u === "elevation" && {
        "--Paper-shadow": (r.vars || r).shadows[l],
        ...r.vars && {
          "--Paper-overlay": (h = r.vars.overlays) == null ? void 0 : h[l]
        },
        ...!r.vars && r.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${qp("#fff", Yp(l))}, ${qp("#fff", Yp(l))})`
        }
      },
      ...f.style
    }
  });
});
process.env.NODE_ENV !== "production" && (O1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: Dl(a1, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: s.bool,
  /**
   * @ignore
   */
  style: s.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: s.oneOfType([s.oneOf(["elevation", "outlined"]), s.string])
});
function ZL(e) {
  return fn("MuiPopover", e);
}
bn("MuiPopover", ["root", "paper"]);
function Jb(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function e0(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function t0(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function Ea(e) {
  return typeof e == "function" ? e() : e;
}
const QL = (e) => {
  const {
    classes: t
  } = e;
  return vn({
    root: ["root"],
    paper: ["paper"]
  }, ZL, t);
}, JL = st(C1, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), $1 = st(O1, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), I1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = $n({
    props: t,
    name: "MuiPopover"
  }), {
    action: r,
    anchorEl: i,
    anchorOrigin: a = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: l,
    anchorReference: c = "anchorEl",
    children: u,
    className: f,
    container: d,
    elevation: p = 8,
    marginThreshold: h = 16,
    open: g,
    PaperProps: m = {},
    // TODO: remove in v7
    slots: y = {},
    slotProps: x = {},
    transformOrigin: T = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: b,
    // TODO: remove in v7
    transitionDuration: w = "auto",
    TransitionProps: S = {},
    // TODO: remove in v7
    disableScrollLock: E = !1,
    ...C
  } = o, R = P.useRef(), M = {
    ...o,
    anchorOrigin: a,
    anchorReference: c,
    elevation: p,
    marginThreshold: h,
    transformOrigin: T,
    TransitionComponent: b,
    transitionDuration: w,
    TransitionProps: S
  }, v = QL(M), I = P.useCallback(() => {
    if (c === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (l || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), l;
    const G = Ea(i), re = G && G.nodeType === 1 ? G : qo(R.current).body, V = re.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const de = re.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && de.top === 0 && de.left === 0 && de.right === 0 && de.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: V.top + Jb(V, a.vertical),
      left: V.left + e0(V, a.horizontal)
    };
  }, [i, a.horizontal, a.vertical, l, c]), k = P.useCallback((G) => ({
    vertical: Jb(G, T.vertical),
    horizontal: e0(G, T.horizontal)
  }), [T.horizontal, T.vertical]), A = P.useCallback((G) => {
    const re = {
      width: G.offsetWidth,
      height: G.offsetHeight
    }, V = k(re);
    if (c === "none")
      return {
        top: null,
        left: null,
        transformOrigin: t0(V)
      };
    const de = I();
    let ue = de.top - V.vertical, xe = de.left - V.horizontal;
    const Ae = ue + re.height, we = xe + re.width, De = Ir(Ea(i)), Ce = De.innerHeight - h, Be = De.innerWidth - h;
    if (h !== null && ue < h) {
      const Me = ue - h;
      ue -= Me, V.vertical += Me;
    } else if (h !== null && Ae > Ce) {
      const Me = Ae - Ce;
      ue -= Me, V.vertical += Me;
    }
    if (process.env.NODE_ENV !== "production" && re.height > Ce && re.height && Ce && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${re.height - Ce}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), h !== null && xe < h) {
      const Me = xe - h;
      xe -= Me, V.horizontal += Me;
    } else if (we > Be) {
      const Me = we - Be;
      xe -= Me, V.horizontal += Me;
    }
    return {
      top: `${Math.round(ue)}px`,
      left: `${Math.round(xe)}px`,
      transformOrigin: t0(V)
    };
  }, [i, c, I, k, h]), [O, _] = P.useState(g), N = P.useCallback(() => {
    const G = R.current;
    if (!G)
      return;
    const re = A(G);
    re.top !== null && G.style.setProperty("top", re.top), re.left !== null && (G.style.left = re.left), G.style.transformOrigin = re.transformOrigin, _(!0);
  }, [A]);
  P.useEffect(() => (E && window.addEventListener("scroll", N), () => window.removeEventListener("scroll", N)), [i, E, N]);
  const L = () => {
    N();
  }, F = () => {
    _(!1);
  };
  P.useEffect(() => {
    g && N();
  }), P.useImperativeHandle(r, () => g ? {
    updatePosition: () => {
      N();
    }
  } : null, [g, N]), P.useEffect(() => {
    if (!g)
      return;
    const G = o1(() => {
      N();
    }), re = Ir(Ea(i));
    return re.addEventListener("resize", G), () => {
      G.clear(), re.removeEventListener("resize", G);
    };
  }, [i, g, N]);
  let D = w;
  const B = {
    slots: {
      transition: b,
      ...y
    },
    slotProps: {
      transition: S,
      paper: m,
      ...x
    }
  }, [z, U] = jn("transition", {
    elementType: bu,
    externalForwardedProps: B,
    ownerState: M,
    getSlotProps: (G) => ({
      ...G,
      onEntering: (re, V) => {
        var de;
        (de = G.onEntering) == null || de.call(G, re, V), L();
      },
      onExited: (re) => {
        var V;
        (V = G.onExited) == null || V.call(G, re), F();
      }
    }),
    additionalProps: {
      appear: !0,
      in: g
    }
  });
  w === "auto" && !z.muiSupportAuto && (D = void 0);
  const q = d || (i ? qo(Ea(i)).body : void 0), [Y, {
    slots: K,
    slotProps: te,
    ...ne
  }] = jn("root", {
    ref: n,
    elementType: JL,
    externalForwardedProps: {
      ...B,
      ...C
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: y.backdrop
      },
      slotProps: {
        backdrop: Z5(typeof x.backdrop == "function" ? x.backdrop(M) : x.backdrop, {
          invisible: !0
        })
      },
      container: q,
      open: g
    },
    ownerState: M,
    className: Re(v.root, f)
  }), [W, ee] = jn("paper", {
    ref: R,
    className: v.paper,
    elementType: $1,
    externalForwardedProps: B,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: p,
      style: O ? void 0 : {
        opacity: 0
      }
    },
    ownerState: M
  });
  return /* @__PURE__ */ $(Y, {
    ...ne,
    ...!Zp(Y) && {
      slots: K,
      slotProps: te,
      disableScrollLock: E
    },
    children: /* @__PURE__ */ $(z, {
      ...U,
      timeout: D,
      children: /* @__PURE__ */ $(W, {
        ...ee,
        children: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (I1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: ui,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: Dl(s.oneOfType([il, s.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = Ea(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: s.shape({
    horizontal: s.oneOfType([s.oneOf(["center", "left", "right"]), s.number]).isRequired,
    vertical: s.oneOfType([s.oneOf(["bottom", "center", "top"]), s.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: s.shape({
    left: s.number.isRequired,
    top: s.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: s.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: s.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: s.object,
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: s.oneOfType([il, s.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: s.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: a1,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: s.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: s.func,
  /**
   * If `true`, the component is shown.
   */
  open: s.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: s.shape({
    component: t1
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: s.shape({
    backdrop: s.oneOfType([s.func, s.object]),
    paper: s.oneOfType([s.func, s.object]),
    root: s.oneOfType([s.func, s.object]),
    transition: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: s.shape({
    backdrop: s.elementType,
    paper: s.elementType,
    root: s.elementType,
    transition: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: s.shape({
    horizontal: s.oneOfType([s.oneOf(["center", "left", "right"]), s.number]).isRequired,
    vertical: s.oneOfType([s.oneOf(["bottom", "center", "top"]), s.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: s.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: s.oneOfType([s.oneOf(["auto"]), s.number, s.shape({
    appear: s.number,
    enter: s.number,
    exit: s.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: s.object
});
function eB(e) {
  return fn("MuiMenu", e);
}
bn("MuiMenu", ["root", "paper", "list"]);
const tB = {
  vertical: "top",
  horizontal: "right"
}, nB = {
  vertical: "top",
  horizontal: "left"
}, oB = (e) => {
  const {
    classes: t
  } = e;
  return vn({
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  }, eB, t);
}, rB = st(I1, {
  shouldForwardProp: (e) => hr(e) || e === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), iB = st($1, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}), sB = st(w1, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (e, t) => t.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), R1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = $n({
    props: t,
    name: "MuiMenu"
  }), {
    autoFocus: r = !0,
    children: i,
    className: a,
    disableAutoFocusItem: l = !1,
    MenuListProps: c = {},
    onClose: u,
    open: f,
    PaperProps: d = {},
    PopoverClasses: p,
    transitionDuration: h = "auto",
    TransitionProps: {
      onEntering: g,
      ...m
    } = {},
    variant: y = "selectedMenu",
    slots: x = {},
    slotProps: T = {},
    ...b
  } = o, w = _D(), S = {
    ...o,
    autoFocus: r,
    disableAutoFocusItem: l,
    MenuListProps: c,
    onEntering: g,
    PaperProps: d,
    transitionDuration: h,
    TransitionProps: m,
    variant: y
  }, E = oB(S), C = r && !l && f, R = P.useRef(null), M = (D, B) => {
    R.current && R.current.adjustStyleForScrollbar(D, {
      direction: w ? "rtl" : "ltr"
    }), g && g(D, B);
  }, v = (D) => {
    D.key === "Tab" && (D.preventDefault(), u && u(D, "tabKeyDown"));
  };
  let I = -1;
  P.Children.map(i, (D, B) => {
    /* @__PURE__ */ P.isValidElement(D) && (process.env.NODE_ENV !== "production" && Xn.isFragment(D) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), D.props.disabled || (y === "selectedMenu" && D.props.selected || I === -1) && (I = B));
  });
  const k = {
    slots: x,
    slotProps: {
      list: c,
      transition: m,
      paper: d,
      ...T
    }
  }, A = M5({
    elementType: x.root,
    externalSlotProps: T.root,
    ownerState: S,
    className: [E.root, a]
  }), [O, _] = jn("paper", {
    className: E.paper,
    elementType: iB,
    externalForwardedProps: k,
    shouldForwardComponentProp: !0,
    ownerState: S
  }), [N, L] = jn("list", {
    className: Re(E.list, c.className),
    elementType: sB,
    shouldForwardComponentProp: !0,
    externalForwardedProps: k,
    getSlotProps: (D) => ({
      ...D,
      onKeyDown: (B) => {
        var z;
        v(B), (z = D.onKeyDown) == null || z.call(D, B);
      }
    }),
    ownerState: S
  }), F = typeof k.slotProps.transition == "function" ? k.slotProps.transition(S) : k.slotProps.transition;
  return /* @__PURE__ */ $(rB, {
    onClose: u,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: w ? "right" : "left"
    },
    transformOrigin: w ? tB : nB,
    slots: {
      root: x.root,
      paper: O,
      backdrop: x.backdrop,
      ...x.transition && {
        // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover
        transition: x.transition
      }
    },
    slotProps: {
      root: A,
      paper: _,
      backdrop: typeof T.backdrop == "function" ? T.backdrop(S) : T.backdrop,
      transition: {
        ...F,
        onEntering: (...D) => {
          var B;
          M(...D), (B = F == null ? void 0 : F.onEntering) == null || B.call(F, ...D);
        }
      }
    },
    open: f,
    ref: n,
    transitionDuration: h,
    ownerState: S,
    ...b,
    classes: p,
    children: /* @__PURE__ */ $(N, {
      actions: R,
      autoFocus: r && (I === -1 || l),
      autoFocusItem: C,
      variant: y,
      ...L,
      children: i
    })
  });
});
process.env.NODE_ENV !== "production" && (R1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: s.oneOfType([il, s.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: s.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: s.bool,
  /**
   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.
   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  MenuListProps: s.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: s.func,
  /**
   * If `true`, the component is shown.
   */
  open: s.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: s.object,
  /**
   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.
   */
  PopoverClasses: s.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: s.shape({
    backdrop: s.oneOfType([s.func, s.object]),
    list: s.oneOfType([s.func, s.object]),
    paper: s.oneOfType([s.func, s.object]),
    root: s.oneOfType([s.func, s.object]),
    transition: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: s.shape({
    backdrop: s.elementType,
    list: s.elementType,
    paper: s.elementType,
    root: s.elementType,
    transition: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: s.oneOfType([s.oneOf(["auto"]), s.number, s.shape({
    appear: s.number,
    enter: s.number,
    exit: s.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: s.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: s.oneOf(["menu", "selectedMenu"])
});
function aB(e) {
  return fn("MuiNativeSelect", e);
}
const Fm = bn("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), lB = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: o,
    multiple: r,
    open: i,
    error: a
  } = e, l = {
    select: ["select", n, o && "disabled", r && "multiple", a && "error"],
    icon: ["icon", `icon${on(n)}`, i && "iconOpen", o && "disabled"]
  };
  return vn(l, aB, t);
}, k1 = st("select")(({
  theme: e
}) => ({
  // Reset
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  // Reset
  borderRadius: 0,
  cursor: "pointer",
  "&:focus": {
    // Reset Chrome style
    borderRadius: 0
  },
  [`&.${Fm.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (e.vars || e).palette.background.paper
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.variant !== "filled" && t.variant !== "outlined",
    style: {
      // Bump specificity to allow extending custom inputs
      "&&&": {
        paddingRight: 24,
        minWidth: 16
        // So it doesn't collapse.
      }
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      "&&&": {
        paddingRight: 32
      }
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius,
      "&:focus": {
        borderRadius: (e.vars || e).shape.borderRadius
        // Reset the reset for Chrome style
      },
      "&&&": {
        paddingRight: 32
      }
    }
  }]
})), cB = st(k1, {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: hr,
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.select, t[n.variant], n.error && t.error, {
      [`&.${Fm.multiple}`]: t.multiple
    }];
  }
})({}), P1 = st("svg")(({
  theme: e
}) => ({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  // Center vertically, height is 1em
  top: "calc(50% - .5em)",
  // Don't block pointer events on the select under the icon.
  pointerEvents: "none",
  color: (e.vars || e).palette.action.active,
  [`&.${Fm.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.open,
    style: {
      transform: "rotate(180deg)"
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      right: 7
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      right: 7
    }
  }]
})), uB = st(P1, {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${on(n.variant)}`], n.open && t.iconOpen];
  }
})({}), N1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const {
    className: o,
    disabled: r,
    error: i,
    IconComponent: a,
    inputRef: l,
    variant: c = "standard",
    ...u
  } = t, f = {
    ...t,
    disabled: r,
    variant: c,
    error: i
  }, d = lB(f);
  return /* @__PURE__ */ Te(P.Fragment, {
    children: [/* @__PURE__ */ $(cB, {
      ownerState: f,
      className: Re(d.select, o),
      disabled: r,
      ref: l || n,
      ...u
    }), t.multiple ? null : /* @__PURE__ */ $(uB, {
      as: a,
      ownerState: f,
      className: d.icon
    })]
  });
});
process.env.NODE_ENV !== "production" && (N1.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * The CSS class name of the select element.
   */
  className: s.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: s.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: s.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: s.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: ui,
  /**
   * @ignore
   */
  multiple: s.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: s.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: s.func,
  /**
   * The input value.
   */
  value: s.any,
  /**
   * The variant to use.
   */
  variant: s.oneOf(["standard", "outlined", "filled"])
});
function M1(e) {
  return fn("MuiSelect", e);
}
const ca = bn("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]);
var n0;
const dB = st(k1, {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [
      // Win specificity over the input base
      {
        [`&.${ca.select}`]: t.select
      },
      {
        [`&.${ca.select}`]: t[n.variant]
      },
      {
        [`&.${ca.error}`]: t.error
      },
      {
        [`&.${ca.multiple}`]: t.multiple
      }
    ];
  }
})({
  // Win specificity over the input base
  [`&.${ca.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
}), fB = st(P1, {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${on(n.variant)}`], n.open && t.iconOpen];
  }
})({}), pB = st("input", {
  shouldForwardProp: (e) => QS(e) && e !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (e, t) => t.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function o0(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
function hB(e) {
  return e == null || typeof e == "string" && !e.trim();
}
const mB = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: o,
    multiple: r,
    open: i,
    error: a
  } = e, l = {
    select: ["select", n, o && "disabled", r && "multiple", a && "error"],
    icon: ["icon", `icon${on(n)}`, i && "iconOpen", o && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return vn(l, M1, t);
}, _1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  var $e;
  const {
    "aria-describedby": o,
    "aria-label": r,
    autoFocus: i,
    autoWidth: a,
    children: l,
    className: c,
    defaultOpen: u,
    defaultValue: f,
    disabled: d,
    displayEmpty: p,
    error: h = !1,
    IconComponent: g,
    inputRef: m,
    labelId: y,
    MenuProps: x = {},
    multiple: T,
    name: b,
    onBlur: w,
    onChange: S,
    onClose: E,
    onFocus: C,
    onOpen: R,
    open: M,
    readOnly: v,
    renderValue: I,
    required: k,
    SelectDisplayProps: A = {},
    tabIndex: O,
    // catching `type` from Input which makes no sense for SelectInput
    type: _,
    value: N,
    variant: L = "standard",
    ...F
  } = t, [D, B] = Fb({
    controlled: N,
    default: f,
    name: "Select"
  }), [z, U] = Fb({
    controlled: M,
    default: u,
    name: "Select"
  }), q = P.useRef(null), Y = P.useRef(null), [K, te] = P.useState(null), {
    current: ne
  } = P.useRef(M != null), [W, ee] = P.useState(), G = Mo(n, m), re = P.useCallback((oe) => {
    Y.current = oe, oe && te(oe);
  }, []), V = K == null ? void 0 : K.parentNode;
  P.useImperativeHandle(G, () => ({
    focus: () => {
      Y.current.focus();
    },
    node: q.current,
    value: D
  }), [D]), P.useEffect(() => {
    u && z && K && !ne && (ee(a ? null : V.clientWidth), Y.current.focus());
  }, [K, a]), P.useEffect(() => {
    i && Y.current.focus();
  }, [i]), P.useEffect(() => {
    if (!y)
      return;
    const oe = qo(Y.current).getElementById(y);
    if (oe) {
      const be = () => {
        getSelection().isCollapsed && Y.current.focus();
      };
      return oe.addEventListener("click", be), () => {
        oe.removeEventListener("click", be);
      };
    }
  }, [y]);
  const de = (oe, be) => {
    oe ? R && R(be) : E && E(be), ne || (ee(a ? null : V.clientWidth), U(oe));
  }, ue = (oe) => {
    oe.button === 0 && (oe.preventDefault(), Y.current.focus(), de(!0, oe));
  }, xe = (oe) => {
    de(!1, oe);
  }, Ae = P.Children.toArray(l), we = (oe) => {
    const be = Ae.find((Ne) => Ne.props.value === oe.target.value);
    be !== void 0 && (B(be.props.value), S && S(oe, be));
  }, De = (oe) => (be) => {
    let Ne;
    if (be.currentTarget.hasAttribute("tabindex")) {
      if (T) {
        Ne = Array.isArray(D) ? D.slice() : [];
        const We = D.indexOf(oe.props.value);
        We === -1 ? Ne.push(oe.props.value) : Ne.splice(We, 1);
      } else
        Ne = oe.props.value;
      if (oe.props.onClick && oe.props.onClick(be), D !== Ne && (B(Ne), S)) {
        const We = be.nativeEvent || be, Ue = new We.constructor(We.type, We);
        Object.defineProperty(Ue, "target", {
          writable: !0,
          value: {
            value: Ne,
            name: b
          }
        }), S(Ue, oe);
      }
      T || de(!1, be);
    }
  }, Ce = (oe) => {
    v || [
      " ",
      "ArrowUp",
      "ArrowDown",
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
      "Enter"
    ].includes(oe.key) && (oe.preventDefault(), de(!0, oe));
  }, Be = K !== null && z, Me = (oe) => {
    !Be && w && (Object.defineProperty(oe, "target", {
      writable: !0,
      value: {
        value: D,
        name: b
      }
    }), w(oe));
  };
  delete F["aria-invalid"];
  let j, J;
  const ie = [];
  let Q = !1, H = !1;
  (mu({
    value: D
  }) || p) && (I ? j = I(D) : Q = !0);
  const X = Ae.map((oe) => {
    if (!/* @__PURE__ */ P.isValidElement(oe))
      return null;
    process.env.NODE_ENV !== "production" && Xn.isFragment(oe) && console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    let be;
    if (T) {
      if (!Array.isArray(D))
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `value` prop must be an array when using the `Select` component with `multiple`." : fr(2));
      be = D.some((Ne) => o0(Ne, oe.props.value)), be && Q && ie.push(oe.props.children);
    } else
      be = o0(D, oe.props.value), be && Q && (J = oe.props.children);
    return be && (H = !0), /* @__PURE__ */ P.cloneElement(oe, {
      "aria-selected": be ? "true" : "false",
      onClick: De(oe),
      onKeyUp: (Ne) => {
        Ne.key === " " && Ne.preventDefault(), oe.props.onKeyUp && oe.props.onKeyUp(Ne);
      },
      role: "option",
      selected: be,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": oe.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  process.env.NODE_ENV !== "production" && P.useEffect(() => {
    if (!H && !T && D !== "") {
      const oe = Ae.map((be) => be.props.value);
      console.warn([`MUI: You have provided an out-of-range value \`${D}\` for the select ${b ? `(name="${b}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${oe.filter((be) => be != null).map((be) => `\`${be}\``).join(", ") || '""'}.`].join(`
`));
    }
  }, [H, Ae, T, b, D]), Q && (T ? ie.length === 0 ? j = null : j = ie.reduce((oe, be, Ne) => (oe.push(be), Ne < ie.length - 1 && oe.push(", "), oe), []) : j = J);
  let se = W;
  !a && ne && K && (se = V.clientWidth);
  let ye;
  typeof O < "u" ? ye = O : ye = d ? null : 0;
  const he = A.id || (b ? `mui-component-select-${b}` : void 0), le = {
    ...t,
    variant: L,
    value: D,
    open: Be,
    error: h
  }, ae = mB(le), ce = {
    ...x.PaperProps,
    ...($e = x.slotProps) == null ? void 0 : $e.paper
  }, Se = JS();
  return /* @__PURE__ */ Te(P.Fragment, {
    children: [/* @__PURE__ */ $(dB, {
      as: "div",
      ref: re,
      tabIndex: ye,
      role: "combobox",
      "aria-controls": Be ? Se : void 0,
      "aria-disabled": d ? "true" : void 0,
      "aria-expanded": Be ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": r,
      "aria-labelledby": [y, he].filter(Boolean).join(" ") || void 0,
      "aria-describedby": o,
      "aria-required": k ? "true" : void 0,
      "aria-invalid": h ? "true" : void 0,
      onKeyDown: Ce,
      onMouseDown: d || v ? null : ue,
      onBlur: Me,
      onFocus: C,
      ...A,
      ownerState: le,
      className: Re(A.className, ae.select, c),
      id: he,
      children: hB(j) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        n0 || (n0 = /* @__PURE__ */ $("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      ) : j
    }), /* @__PURE__ */ $(pB, {
      "aria-invalid": h,
      value: Array.isArray(D) ? D.join(",") : D,
      name: b,
      ref: q,
      "aria-hidden": !0,
      onChange: we,
      tabIndex: -1,
      disabled: d,
      className: ae.nativeInput,
      autoFocus: i,
      required: k,
      ...F,
      ownerState: le
    }), /* @__PURE__ */ $(fB, {
      as: g,
      className: ae.icon,
      ownerState: le
    }), /* @__PURE__ */ $(R1, {
      id: `menu-${b || ""}`,
      anchorEl: V,
      open: Be,
      onClose: xe,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      },
      ...x,
      slotProps: {
        ...x.slotProps,
        list: {
          "aria-labelledby": y,
          role: "listbox",
          "aria-multiselectable": T ? "true" : void 0,
          disableListWrap: !0,
          id: Se,
          ...x.MenuListProps
        },
        paper: {
          ...ce,
          style: {
            minWidth: se,
            ...ce != null ? ce.style : null
          }
        }
      },
      children: X
    })]
  });
});
process.env.NODE_ENV !== "production" && (_1.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": s.string,
  /**
   * @ignore
   */
  "aria-label": s.string,
  /**
   * @ignore
   */
  autoFocus: s.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: s.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * The CSS class name of the select element.
   */
  className: s.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: s.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: s.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: s.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: s.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: s.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: s.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: ui,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: s.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: s.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: s.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: s.string,
  /**
   * @ignore
   */
  onBlur: s.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: s.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: s.func,
  /**
   * @ignore
   */
  onFocus: s.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: s.func,
  /**
   * If `true`, the component is shown.
   */
  open: s.bool,
  /**
   * @ignore
   */
  readOnly: s.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: s.func,
  /**
   * If `true`, the component is required.
   */
  required: s.bool,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: s.object,
  /**
   * @ignore
   */
  tabIndex: s.oneOfType([s.number, s.string]),
  /**
   * @ignore
   */
  type: s.any,
  /**
   * The input value.
   */
  value: s.any,
  /**
   * The variant to use.
   */
  variant: s.oneOf(["standard", "outlined", "filled"])
});
const gB = G5(/* @__PURE__ */ $("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown"), yB = (e) => {
  const {
    classes: t
  } = e, o = vn({
    root: ["root"]
  }, M1, t);
  return {
    ...t,
    ...o
  };
}, zm = {
  name: "MuiSelect",
  overridesResolver: (e, t) => t.root,
  shouldForwardProp: (e) => hr(e) && e !== "variant",
  slot: "Root"
}, bB = st(zd, zm)(""), vB = st(Vd, zm)(""), xB = st(jd, zm)(""), jm = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = $n({
    name: "MuiSelect",
    props: t
  }), {
    autoWidth: r = !1,
    children: i,
    classes: a = {},
    className: l,
    defaultOpen: c = !1,
    displayEmpty: u = !1,
    IconComponent: f = gB,
    id: d,
    input: p,
    inputProps: h,
    label: g,
    labelId: m,
    MenuProps: y,
    multiple: x = !1,
    native: T = !1,
    onClose: b,
    onOpen: w,
    open: S,
    renderValue: E,
    SelectDisplayProps: C,
    variant: R = "outlined",
    ...M
  } = o, v = T ? N1 : _1, I = Js(), k = Qs({
    props: o,
    muiFormControl: I,
    states: ["variant", "error"]
  }), A = k.variant || R, O = {
    ...o,
    variant: A,
    classes: a
  }, _ = yB(O), {
    root: N,
    ...L
  } = _, F = p || {
    standard: /* @__PURE__ */ $(bB, {
      ownerState: O
    }),
    outlined: /* @__PURE__ */ $(vB, {
      label: g,
      ownerState: O
    }),
    filled: /* @__PURE__ */ $(xB, {
      ownerState: O
    })
  }[A], D = Mo(n, Bl(F));
  return /* @__PURE__ */ $(P.Fragment, {
    children: /* @__PURE__ */ P.cloneElement(F, {
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: v,
      inputProps: {
        children: i,
        error: k.error,
        IconComponent: f,
        variant: A,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: x,
        ...T ? {
          id: d
        } : {
          autoWidth: r,
          defaultOpen: c,
          displayEmpty: u,
          labelId: m,
          MenuProps: y,
          onClose: b,
          onOpen: w,
          open: S,
          renderValue: E,
          SelectDisplayProps: {
            id: d,
            ...C
          }
        },
        ...h,
        classes: h ? An(L, h.classes) : L,
        ...p ? p.props.inputProps : {}
      },
      ...(x && T || u) && A === "outlined" ? {
        notched: !0
      } : {},
      ref: D,
      className: Re(F.props.className, l, _.root),
      // If a custom input is provided via 'input' prop, do not allow 'variant' to be propagated to it's root element. See https://github.com/mui/material-ui/issues/33894.
      ...!p && {
        variant: A
      },
      ...M
    })
  });
});
process.env.NODE_ENV !== "production" && (jm.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: s.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: s.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: s.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: s.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: s.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: s.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: s.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: s.object,
  /**
   * See [OutlinedInput#label](https://mui.com/material-ui/api/outlined-input/#props)
   */
  label: s.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: s.string,
  /**
   * Props applied to the [`Menu`](https://mui.com/material-ui/api/menu/) element.
   */
  MenuProps: s.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: s.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: s.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: s.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: s.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: s.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: s.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: s.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: s.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: s.oneOfType([s.oneOf([""]), s.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: s.oneOf(["filled", "outlined", "standard"])
});
jm.muiName = "Select";
function wB(e) {
  return fn("MuiTextField", e);
}
bn("MuiTextField", ["root"]);
const SB = {
  standard: zd,
  filled: jd,
  outlined: Vd
}, TB = (e) => {
  const {
    classes: t
  } = e;
  return vn({
    root: ["root"]
  }, wB, t);
}, EB = st(g1, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), A1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = $n({
    props: t,
    name: "MuiTextField"
  }), {
    autoComplete: r,
    autoFocus: i = !1,
    children: a,
    className: l,
    color: c = "primary",
    defaultValue: u,
    disabled: f = !1,
    error: d = !1,
    FormHelperTextProps: p,
    fullWidth: h = !1,
    helperText: g,
    id: m,
    InputLabelProps: y,
    inputProps: x,
    InputProps: T,
    inputRef: b,
    label: w,
    maxRows: S,
    minRows: E,
    multiline: C = !1,
    name: R,
    onBlur: M,
    onChange: v,
    onFocus: I,
    placeholder: k,
    required: A = !1,
    rows: O,
    select: _ = !1,
    SelectProps: N,
    slots: L = {},
    slotProps: F = {},
    type: D,
    value: B,
    variant: z = "outlined",
    ...U
  } = o, q = {
    ...o,
    autoFocus: i,
    color: c,
    disabled: f,
    error: d,
    fullWidth: h,
    multiline: C,
    required: A,
    select: _,
    variant: z
  }, Y = TB(q);
  process.env.NODE_ENV !== "production" && _ && !a && console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
  const K = JS(m), te = g && K ? `${K}-helper-text` : void 0, ne = w && K ? `${K}-label` : void 0, W = SB[z], ee = {
    slots: L,
    slotProps: {
      input: T,
      inputLabel: y,
      htmlInput: x,
      formHelperText: p,
      select: N,
      ...F
    }
  }, G = {}, re = ee.slotProps.inputLabel;
  z === "outlined" && (re && typeof re.shrink < "u" && (G.notched = re.shrink), G.label = w), _ && ((!N || !N.native) && (G.id = void 0), G["aria-describedby"] = void 0);
  const [V, de] = jn("root", {
    elementType: EB,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...ee,
      ...U
    },
    ownerState: q,
    className: Re(Y.root, l),
    ref: n,
    additionalProps: {
      disabled: f,
      error: d,
      fullWidth: h,
      required: A,
      color: c,
      variant: z
    }
  }), [ue, xe] = jn("input", {
    elementType: W,
    externalForwardedProps: ee,
    additionalProps: G,
    ownerState: q
  }), [Ae, we] = jn("inputLabel", {
    elementType: m1,
    externalForwardedProps: ee,
    ownerState: q
  }), [De, Ce] = jn("htmlInput", {
    elementType: "input",
    externalForwardedProps: ee,
    ownerState: q
  }), [Be, Me] = jn("formHelperText", {
    elementType: y1,
    externalForwardedProps: ee,
    ownerState: q
  }), [j, J] = jn("select", {
    elementType: jm,
    externalForwardedProps: ee,
    ownerState: q
  }), ie = /* @__PURE__ */ $(ue, {
    "aria-describedby": te,
    autoComplete: r,
    autoFocus: i,
    defaultValue: u,
    fullWidth: h,
    multiline: C,
    name: R,
    rows: O,
    maxRows: S,
    minRows: E,
    type: D,
    value: B,
    id: K,
    inputRef: b,
    onBlur: M,
    onChange: v,
    onFocus: I,
    placeholder: k,
    inputProps: Ce,
    slots: {
      input: L.htmlInput ? De : void 0
    },
    ...xe
  });
  return /* @__PURE__ */ Te(V, {
    ...de,
    children: [w != null && w !== "" && /* @__PURE__ */ $(Ae, {
      htmlFor: K,
      id: ne,
      ...we,
      children: w
    }), _ ? /* @__PURE__ */ $(j, {
      "aria-describedby": te,
      id: K,
      labelId: ne,
      value: B,
      input: ie,
      ...J,
      children: a
    }) : ie, g && /* @__PURE__ */ $(Be, {
      id: te,
      ...Me,
      children: g
    })]
  });
});
process.env.NODE_ENV !== "production" && (A1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: s.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: s.bool,
  /**
   * @ignore
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: s.oneOfType([s.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), s.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: s.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: s.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: s.bool,
  /**
   * Props applied to the [`FormHelperText`](https://mui.com/material-ui/api/form-helper-text/) element.
   * @deprecated Use `slotProps.formHelperText` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  FormHelperTextProps: s.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: s.bool,
  /**
   * The helper text content.
   */
  helperText: s.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: s.string,
  /**
   * Props applied to the [`InputLabel`](https://mui.com/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   * @deprecated Use `slotProps.inputLabel` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputLabelProps: s.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.htmlInput` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: s.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](https://mui.com/material-ui/api/filled-input/),
   * [`OutlinedInput`](https://mui.com/material-ui/api/outlined-input/) or [`Input`](https://mui.com/material-ui/api/input/)
   * component depending on the `variant` prop value.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputProps: s.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: ui,
  /**
   * The label content.
   */
  label: s.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: s.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: s.oneOfType([s.number, s.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: s.oneOfType([s.number, s.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: s.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: s.string,
  /**
   * @ignore
   */
  onBlur: s.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: s.func,
  /**
   * @ignore
   */
  onFocus: s.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: s.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: s.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: s.oneOfType([s.number, s.string]),
  /**
   * Render a [`Select`](https://mui.com/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: s.bool,
  /**
   * Props applied to the [`Select`](https://mui.com/material-ui/api/select/) element.
   * @deprecated Use `slotProps.select` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SelectProps: s.object,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: s.oneOfType([s.oneOf(["medium", "small"]), s.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: s.shape({
    formHelperText: s.oneOfType([s.func, s.object]),
    htmlInput: s.oneOfType([s.func, s.object]),
    input: s.oneOfType([s.func, s.object]),
    inputLabel: s.oneOfType([s.func, s.object]),
    select: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: s.shape({
    formHelperText: s.elementType,
    htmlInput: s.elementType,
    input: s.elementType,
    inputLabel: s.elementType,
    root: s.elementType,
    select: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: s.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: s.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: s.oneOf(["filled", "outlined", "standard"])
});
const CB = bn("MuiBox", ["root"]), OB = ZS(), D1 = yD({
  themeId: Sd,
  defaultTheme: OB,
  defaultClassName: CB.root,
  generateClassName: FS.generate
});
process.env.NODE_ENV !== "production" && (D1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: s.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object])
});
const $B = st(A1)`
  input {
    text-align: center;
  }
`, IB = {
  TextFieldStyled: $B
}, RB = (e) => /* @__PURE__ */ $(IB.TextFieldStyled, { ...e }), ua = {
  left: "ArrowLeft",
  right: "ArrowRight",
  backspace: "Backspace",
  home: "Home",
  end: "End"
};
function kB(e, t) {
  return e <= 0 ? [] : Array.from({ length: e }, t);
}
function PB(e, t, n) {
  return e.map((o, r) => t === r ? n : o);
}
function r0(e) {
  return e.join("");
}
function i0(e, t) {
  return [...e, t];
}
function NB(e, t, n) {
  return e.reduce(
    (o, r, i) => {
      const { characters: a, restArrayMerged: l } = o;
      if (i < n)
        return {
          restArrayMerged: l,
          characters: i0(a, r)
        };
      const [c, ...u] = l;
      return {
        restArrayMerged: u,
        characters: i0(a, c || "")
      };
    },
    {
      restArrayMerged: t,
      characters: []
    }
  ).characters;
}
function MB(e) {
  return (t) => {
    e.forEach((n) => {
      typeof n == "function" ? n(t) : n != null && (n.current = t);
    });
  };
}
function _B(e) {
  return e.split("");
}
function s0(e) {
  const t = Z.useRef(() => {
    throw new Error("Cannot call an event handler while rendering.");
  });
  return Z.useInsertionEffect(() => {
    t.current = e;
  }), Z.useCallback((...n) => {
    var o;
    return (o = t.current) == null ? void 0 : o.call(t, ...n);
  }, []);
}
const AB = () => !0, DB = Z.forwardRef(
  (e, t) => {
    const {
      value: n = "",
      length: o = 4,
      autoFocus: r = !1,
      onChange: i,
      TextFieldsProps: a,
      onComplete: l,
      validateChar: c = AB,
      className: u,
      onBlur: f,
      ...d
    } = e, p = Z.useRef(n), h = s0(l), g = s0((I) => {
      const k = I.slice(0, o);
      return {
        isCompleted: k.length === o,
        finalValue: k
      };
    });
    Z.useEffect(() => {
      const { isCompleted: I, finalValue: k } = g(
        p.current
      );
      I && h(k);
    }, [o, h, g]);
    const m = kB(
      o,
      (I, k) => ({
        character: n[k] || "",
        inputRef: Z.createRef()
      })
    ), y = (I) => m.findIndex(({ inputRef: k }) => k.current === I), x = () => m.map(({ character: I }) => I), T = (I, k) => {
      const A = PB(
        x(),
        I,
        k
      );
      return r0(A);
    }, b = (I) => {
      var k, A;
      (A = (k = m[I]) == null ? void 0 : k.inputRef.current) == null || A.focus();
    }, w = (I) => {
      var k, A;
      (A = (k = m[I]) == null ? void 0 : k.inputRef.current) == null || A.select();
    }, S = (I) => {
      I + 1 !== o && (m[I + 1].character ? w(I + 1) : b(I + 1));
    }, E = (I, k) => typeof c != "function" ? !0 : c(I, k), C = (I) => {
      const k = y(I.target);
      if (k === 0 && I.target.value.length > 1) {
        const { finalValue: F, isCompleted: D } = g(
          I.target.value
        );
        i == null || i(F), D && (l == null || l(F)), w(F.length - 1);
        return;
      }
      const A = I.target.value[0] || "";
      let O = A;
      O && !E(O, k) && (O = "");
      const _ = T(k, O);
      i == null || i(_);
      const { isCompleted: N, finalValue: L } = g(_);
      N && (l == null || l(L)), O !== "" ? _.length - 1 < k ? w(_.length) : S(k) : A === "" && _.length <= k && w(k - 1);
    }, R = (I) => {
      const k = I.target, A = k.selectionStart, O = k.selectionEnd, _ = y(k), N = A === 0 && O === 0;
      if (k.value === I.key)
        I.preventDefault(), S(_);
      else if (ua.backspace === I.key) {
        if (!k.value)
          I.preventDefault(), w(_ - 1);
        else if (N) {
          I.preventDefault();
          const L = T(_, "");
          i == null || i(L), L.length <= _ && w(_ - 1);
        }
      } else ua.left === I.key ? (I.preventDefault(), w(_ - 1)) : ua.right === I.key ? (I.preventDefault(), w(_ + 1)) : ua.home === I.key ? (I.preventDefault(), w(0)) : ua.end === I.key && (I.preventDefault(), w(m.length - 1));
    }, M = (I) => {
      const k = I.clipboardData.getData("text/plain"), A = I.target, O = m.findIndex(
        ({ character: B, inputRef: z }) => B === "" || z.current === A
      ), _ = x(), N = NB(
        _,
        _B(k),
        O
      ).map((B, z) => E(B, z) ? B : ""), L = r0(N);
      i == null || i(L);
      const { isCompleted: F, finalValue: D } = g(L);
      F ? (l == null || l(D), w(o - 1)) : w(L.length);
    }, v = (I) => {
      if (!m.some(({ inputRef: k }) => k.current === I.relatedTarget)) {
        const { isCompleted: k, finalValue: A } = g(n);
        f == null || f(A, k);
      }
    };
    return /* @__PURE__ */ $(
      D1,
      {
        display: "flex",
        gap: "20px",
        alignItems: "center",
        ref: t,
        className: `MuiOtpInput-Box ${u || ""}`,
        ...d,
        children: m.map(({ character: I, inputRef: k }, A) => {
          const {
            onPaste: O,
            onFocus: _,
            onKeyDown: N,
            className: L,
            onBlur: F,
            inputRef: D,
            ...B
          } = typeof a == "function" ? a(A) || {} : a || {};
          return /* @__PURE__ */ $(
            RB,
            {
              autoFocus: r ? A === 0 : !1,
              autoComplete: "one-time-code",
              value: I,
              inputRef: MB([k, D]),
              className: `MuiOtpInput-TextField MuiOtpInput-TextField-${A + 1} ${L || ""}`,
              onPaste: (z) => {
                z.preventDefault(), M(z), O == null || O(z);
              },
              onFocus: (z) => {
                z.preventDefault(), z.target.select(), _ == null || _(z);
              },
              onChange: C,
              onKeyDown: (z) => {
                R(z), N == null || N(z);
              },
              onBlur: (z) => {
                F == null || F(z), v(z);
              },
              ...B
            },
            A
          );
        })
      }
    );
  }
), L1 = Ie(
  ({
    label: e = "",
    tooltip: t,
    value: n,
    onChange: o,
    isRequired: r,
    isDisabled: i,
    isError: a,
    errorMessage: l = ""
  }) => {
    const { textCommonStyles: c } = $l({
      isTitle: !1,
      isLabel: !0,
      textColor: i ? "disabled" : a ? "error" : "auto"
    });
    return /* @__PURE__ */ Te(dn, { gap: 0, children: [
      /* @__PURE__ */ $(
        Mi,
        {
          label: e,
          elementId: void 0,
          tooltip: t,
          isRequired: r,
          isDisabled: i,
          isError: a
        }
      ),
      /* @__PURE__ */ $(
        DB,
        {
          value: n,
          onChange: o,
          length: 6,
          TextFieldsProps: {
            disabled: i,
            error: a
          },
          sx: {
            "& .MuiInputBase-root": {
              borderRadius: "8px"
            },
            "& input": {
              width: "8px",
              height: "8px",
              p: "16px",
              borderRadius: "8px"
            }
          }
        }
      ),
      /* @__PURE__ */ $(
        Cn,
        {
          text: a ? l : "",
          isLabel: !0,
          sx: { ...c, minHeight: "24px" }
        }
      )
    ] });
  }
);
L1.displayName = "OtpInput";
const B1 = Ie(({ isError: e, isDisabled: t, fullWidth: n, sx: o, ...r }) => {
  const { inputCommonStyle: i } = $m({
    isDisabled: t,
    isError: e
  }), [a, l] = yn(!1);
  return /* @__PURE__ */ $(
    wd,
    {
      type: a ? "text" : "password",
      fullWidth: n,
      isError: e,
      endAdornment: /* @__PURE__ */ $(
        On,
        {
          isCircle: !0,
          isGhost: !0,
          icon: a ? "solar:eye-closed-bold-duotone" : "solar:eye-bold-duotone",
          color: e ? "error" : "primary",
          sx: { mr: -2 },
          onClick: () => l((c) => !c)
        }
      ),
      sx: {
        width: n ? "100%" : `calc(${i.minWidth} - 40px) !important`,
        ...o
      },
      ...r
    }
  );
});
B1.displayName = "Password";
const LB = Nr(/* @__PURE__ */ $("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "RadioButtonUnchecked"), BB = Nr(/* @__PURE__ */ $("path", {
  d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
}), "RadioButtonChecked"), FB = Ee("span", {
  shouldForwardProp: Dn
})({
  position: "relative",
  display: "flex"
}), zB = Ee(LB)({
  // Scale applied to prevent dot misalignment in Safari
  transform: "scale(1)"
}), jB = Ee(BB)(qe(({
  theme: e
}) => ({
  left: 0,
  position: "absolute",
  transform: "scale(0)",
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeIn,
    duration: e.transitions.duration.shortest
  }),
  variants: [{
    props: {
      checked: !0
    },
    style: {
      transform: "scale(1)",
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeOut,
        duration: e.transitions.duration.shortest
      })
    }
  }]
})));
function Vm(e) {
  const {
    checked: t = !1,
    classes: n = {},
    fontSize: o
  } = e, r = {
    ...e,
    checked: t
  };
  return /* @__PURE__ */ Te(FB, {
    className: n.root,
    ownerState: r,
    children: [/* @__PURE__ */ $(zB, {
      fontSize: o,
      className: n.background,
      ownerState: r
    }), /* @__PURE__ */ $(jB, {
      fontSize: o,
      className: n.dot,
      ownerState: r
    })]
  });
}
process.env.NODE_ENV !== "production" && (Vm.propTypes = {
  /**
   * If `true`, the component is checked.
   */
  checked: s.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   */
  fontSize: s.oneOf(["small", "medium"])
});
const F1 = /* @__PURE__ */ P.createContext(void 0);
process.env.NODE_ENV !== "production" && (F1.displayName = "RadioGroupContext");
function VB() {
  return P.useContext(F1);
}
function HB(e) {
  return tt("MuiRadio", e);
}
const a0 = it("MuiRadio", ["root", "checked", "disabled", "colorPrimary", "colorSecondary", "sizeSmall"]), WB = (e) => {
  const {
    classes: t,
    color: n,
    size: o
  } = e, r = {
    root: ["root", `color${fe(n)}`, o !== "medium" && `size${fe(o)}`]
  };
  return {
    ...t,
    ...rt(r, HB, t)
  };
}, UB = Ee(hd, {
  shouldForwardProp: (e) => Dn(e) || e === "classes",
  name: "MuiRadio",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size !== "medium" && t[`size${fe(n.size)}`], t[`color${fe(n.color)}`]];
  }
})(qe(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  [`&.${a0.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: {
      color: "default",
      disabled: !1,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : bt(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(Ut()).map(([t]) => ({
    props: {
      color: t,
      disabled: !1,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : bt(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(Ut()).map(([t]) => ({
    props: {
      color: t,
      disabled: !1
    },
    style: {
      [`&.${a0.checked}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
})));
function qB(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
const KB = /* @__PURE__ */ $(Vm, {
  checked: !0
}), YB = /* @__PURE__ */ $(Vm, {}), z1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiRadio"
  }), {
    checked: r,
    checkedIcon: i = KB,
    color: a = "primary",
    icon: l = YB,
    name: c,
    onChange: u,
    size: f = "medium",
    className: d,
    disabled: p,
    disableRipple: h = !1,
    slots: g = {},
    slotProps: m = {},
    inputProps: y,
    ...x
  } = o, T = li();
  let b = p;
  T && typeof b > "u" && (b = T.disabled), b ?? (b = !1);
  const w = {
    ...o,
    disabled: b,
    disableRipple: h,
    color: a,
    size: f
  }, S = WB(w), E = VB();
  let C = r;
  const R = Sp(u, E && E.onChange);
  let M = c;
  E && (typeof C > "u" && (C = qB(E.value, o.value)), typeof M > "u" && (M = E.name));
  const v = m.input ?? y, [I, k] = ot("root", {
    ref: n,
    elementType: UB,
    className: Re(S.root, d),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: g,
      slotProps: m,
      ...x
    },
    getSlotProps: (A) => ({
      ...A,
      onChange: (O, ..._) => {
        var N;
        (N = A.onChange) == null || N.call(A, O, ..._), R(O, ..._);
      }
    }),
    ownerState: w,
    additionalProps: {
      type: "radio",
      icon: /* @__PURE__ */ P.cloneElement(l, {
        fontSize: l.props.fontSize ?? f
      }),
      checkedIcon: /* @__PURE__ */ P.cloneElement(i, {
        fontSize: i.props.fontSize ?? f
      }),
      disabled: b,
      name: M,
      checked: C,
      slots: g,
      slotProps: {
        // Do not forward `slotProps.root` again because it's already handled by the `RootSlot` in this file.
        input: typeof v == "function" ? v(w) : v
      }
    }
  });
  return /* @__PURE__ */ $(I, {
    ...k,
    classes: S
  });
});
process.env.NODE_ENV !== "production" && (z1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: s.bool,
  /**
   * The icon to display when the component is checked.
   * @default <RadioButtonIcon checked />
   */
  checkedIcon: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: s.oneOfType([s.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), s.string]),
  /**
   * If `true`, the component is disabled.
   */
  disabled: s.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: s.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <RadioButtonIcon />
   */
  icon: s.node,
  /**
   * The id of the `input` element.
   */
  id: s.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: s.object,
  /**
   * Pass a ref to the `input` element.
   * @deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputRef: Qn,
  /**
   * Name attribute of the `input` element.
   */
  name: s.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: s.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: s.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   * @default 'medium'
   */
  size: s.oneOfType([s.oneOf(["medium", "small"]), s.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: s.shape({
    input: s.oneOfType([s.func, s.object]),
    root: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: s.shape({
    input: s.elementType,
    root: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   */
  value: s.any
});
const j1 = Ie(
  ({ label: e = "", tooltip: t, name: n, options: o, optionLabelDirection: r = "end", value: i, onChange: a }) => /* @__PURE__ */ Te(dn, { gap: 0, children: [
    /* @__PURE__ */ $(Mi, { label: e, elementId: void 0, tooltip: t }),
    /* @__PURE__ */ $(dn, { gap: 0, children: o.map((l) => /* @__PURE__ */ $(
      md,
      {
        labelsDirection: "row",
        startLabel: r === "start" ? l.label : "",
        endLabel: r === "end" ? l.label : "",
        isDisabled: l.isDisabled,
        renderElement: (c) => /* @__PURE__ */ $(
          z1,
          {
            id: c,
            name: n,
            value: l.value,
            checked: i === l.value,
            disabled: l.isDisabled,
            onChange: (u) => a(o.find(({ value: f }) => f === u.target.value)),
            sx: {
              py: "6px",
              px: 0,
              mr: r === "start" ? "2px" : "8px",
              ml: r === "end" ? "2px" : "8px"
            }
          }
        )
      },
      l.value
    )) })
  ] })
);
j1.displayName = "Radios";
function l0(e) {
  return e.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
}
function GB(e = {}) {
  const {
    ignoreAccents: t = !0,
    ignoreCase: n = !0,
    limit: o,
    matchFrom: r = "any",
    stringify: i,
    trim: a = !1
  } = e;
  return (l, {
    inputValue: c,
    getOptionLabel: u
  }) => {
    let f = a ? c.trim() : c;
    n && (f = f.toLowerCase()), t && (f = l0(f));
    const d = f ? l.filter((p) => {
      let h = (i || u)(p);
      return n && (h = h.toLowerCase()), t && (h = l0(h)), r === "start" ? h.startsWith(f) : h.includes(f);
    }) : l;
    return typeof o == "number" ? d.slice(0, o) : d;
  };
}
const XB = GB(), ZB = 5, QB = (e) => {
  var t;
  return e.current !== null && ((t = e.current.parentElement) == null ? void 0 : t.contains(document.activeElement));
}, JB = [];
function c0(e, t, n) {
  if (t || e == null)
    return "";
  const o = n(e);
  return typeof o == "string" ? o : "";
}
function eF(e) {
  const {
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_isActiveElementInListbox: t = QB,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_classNamePrefix: n = "Mui",
    autoComplete: o = !1,
    autoHighlight: r = !1,
    autoSelect: i = !1,
    blurOnSelect: a = !1,
    clearOnBlur: l = !e.freeSolo,
    clearOnEscape: c = !1,
    componentName: u = "useAutocomplete",
    defaultValue: f = e.multiple ? JB : null,
    disableClearable: d = !1,
    disableCloseOnSelect: p = !1,
    disabled: h,
    disabledItemsFocusable: g = !1,
    disableListWrap: m = !1,
    filterOptions: y = XB,
    filterSelectedOptions: x = !1,
    freeSolo: T = !1,
    getOptionDisabled: b,
    getOptionKey: w,
    getOptionLabel: S = (ve) => ve.label ?? ve,
    groupBy: E,
    handleHomeEndKeys: C = !e.freeSolo,
    id: R,
    includeInputInList: M = !1,
    inputValue: v,
    isOptionEqualToValue: I = (ve, pe) => ve === pe,
    multiple: k = !1,
    onChange: A,
    onClose: O,
    onHighlightChange: _,
    onInputChange: N,
    onOpen: L,
    open: F,
    openOnFocus: D = !1,
    options: B,
    readOnly: z = !1,
    selectOnFocus: U = !e.freeSolo,
    value: q
  } = e, Y = Bi(R);
  let K = S;
  K = (ve) => {
    const pe = S(ve);
    if (typeof pe != "string") {
      if (process.env.NODE_ENV !== "production") {
        const _e = pe === void 0 ? "undefined" : `${typeof pe} (${pe})`;
        console.error(`MUI: The \`getOptionLabel\` method of ${u} returned ${_e} instead of a string for ${JSON.stringify(ve)}.`);
      }
      return String(pe);
    }
    return pe;
  };
  const te = P.useRef(!1), ne = P.useRef(!0), W = P.useRef(null), ee = P.useRef(null), [G, re] = P.useState(null), [V, de] = P.useState(-1), ue = r ? 0 : -1, xe = P.useRef(ue), Ae = P.useRef(c0(f, k, K)).current, [we, De] = $i({
    controlled: q,
    default: f,
    name: u
  }), [Ce, Be] = $i({
    controlled: v,
    default: Ae,
    name: u,
    state: "inputValue"
  }), [Me, j] = P.useState(!1), J = P.useCallback((ve, pe, _e) => {
    if (!(k ? we.length < pe.length : pe !== null) && !l)
      return;
    const Ze = c0(pe, k, K);
    Ce !== Ze && (Be(Ze), N && N(ve, Ze, _e));
  }, [K, Ce, k, N, Be, l, we]), [ie, Q] = $i({
    controlled: F,
    default: !1,
    name: u,
    state: "open"
  }), [H, X] = P.useState(!0), se = !k && we != null && Ce === K(we), ye = ie && !z, he = ye ? y(
    B.filter((ve) => !(x && (k ? we : [we]).some((pe) => pe !== null && I(ve, pe)))),
    // we use the empty string to manipulate `filterOptions` to not filter any options
    // i.e. the filter predicate always returns true
    {
      inputValue: se && H ? "" : Ce,
      getOptionLabel: K
    }
  ) : [], le = Vh({
    filteredOptions: he,
    value: we,
    inputValue: Ce
  });
  P.useEffect(() => {
    const ve = we !== le.value;
    Me && !ve || T && !ve || J(null, we, "reset");
  }, [we, J, Me, le.value, T]);
  const ae = ie && he.length > 0 && !z, ce = Un((ve) => {
    ve === -1 ? W.current.focus() : G.querySelector(`[data-tag-index="${ve}"]`).focus();
  });
  P.useEffect(() => {
    k && V > we.length - 1 && (de(-1), ce(-1));
  }, [we, k, V, ce]);
  function Se(ve, pe) {
    if (!ee.current || ve < 0 || ve >= he.length)
      return -1;
    let _e = ve;
    for (; ; ) {
      const Ge = ee.current.querySelector(`[data-option-index="${_e}"]`), Ze = g ? !1 : !Ge || Ge.disabled || Ge.getAttribute("aria-disabled") === "true";
      if (Ge && Ge.hasAttribute("tabindex") && !Ze)
        return _e;
      if (pe === "next" ? _e = (_e + 1) % he.length : _e = (_e - 1 + he.length) % he.length, _e === ve)
        return -1;
    }
  }
  const $e = Un(({
    event: ve,
    index: pe,
    reason: _e
  }) => {
    if (xe.current = pe, pe === -1 ? W.current.removeAttribute("aria-activedescendant") : W.current.setAttribute("aria-activedescendant", `${Y}-option-${pe}`), _ && ["mouse", "keyboard", "touch"].includes(_e) && _(ve, pe === -1 ? null : he[pe], _e), !ee.current)
      return;
    const Ge = ee.current.querySelector(`[role="option"].${n}-focused`);
    Ge && (Ge.classList.remove(`${n}-focused`), Ge.classList.remove(`${n}-focusVisible`));
    let Ze = ee.current;
    if (ee.current.getAttribute("role") !== "listbox" && (Ze = ee.current.parentElement.querySelector('[role="listbox"]')), !Ze)
      return;
    if (pe === -1) {
      Ze.scrollTop = 0;
      return;
    }
    const pt = ee.current.querySelector(`[data-option-index="${pe}"]`);
    if (pt && (pt.classList.add(`${n}-focused`), _e === "keyboard" && pt.classList.add(`${n}-focusVisible`), Ze.scrollHeight > Ze.clientHeight && _e !== "mouse" && _e !== "touch")) {
      const Xt = pt, wn = Ze.clientHeight + Ze.scrollTop, mi = Xt.offsetTop + Xt.offsetHeight;
      mi > wn ? Ze.scrollTop = mi - Ze.clientHeight : Xt.offsetTop - Xt.offsetHeight * (E ? 1.3 : 0) < Ze.scrollTop && (Ze.scrollTop = Xt.offsetTop - Xt.offsetHeight * (E ? 1.3 : 0));
    }
  }), oe = Un(({
    event: ve,
    diff: pe,
    direction: _e = "next",
    reason: Ge
  }) => {
    if (!ye)
      return;
    const pt = Se((() => {
      const Xt = he.length - 1;
      if (pe === "reset")
        return ue;
      if (pe === "start")
        return 0;
      if (pe === "end")
        return Xt;
      const wn = xe.current + pe;
      return wn < 0 ? wn === -1 && M ? -1 : m && xe.current !== -1 || Math.abs(pe) > 1 ? 0 : Xt : wn > Xt ? wn === Xt + 1 && M ? -1 : m || Math.abs(pe) > 1 ? Xt : 0 : wn;
    })(), _e);
    if ($e({
      index: pt,
      reason: Ge,
      event: ve
    }), o && pe !== "reset")
      if (pt === -1)
        W.current.value = Ce;
      else {
        const Xt = K(he[pt]);
        W.current.value = Xt, Xt.toLowerCase().indexOf(Ce.toLowerCase()) === 0 && Ce.length > 0 && W.current.setSelectionRange(Ce.length, Xt.length);
      }
  }), be = () => {
    const ve = (pe, _e) => {
      const Ge = pe ? K(pe) : "", Ze = _e ? K(_e) : "";
      return Ge === Ze;
    };
    if (xe.current !== -1 && le.filteredOptions && le.filteredOptions.length !== he.length && le.inputValue === Ce && (k ? we.length === le.value.length && le.value.every((pe, _e) => K(we[_e]) === K(pe)) : ve(le.value, we))) {
      const pe = le.filteredOptions[xe.current];
      if (pe)
        return he.findIndex((_e) => K(_e) === K(pe));
    }
    return -1;
  }, Ne = P.useCallback(() => {
    if (!ye)
      return;
    const ve = be();
    if (ve !== -1) {
      xe.current = ve;
      return;
    }
    const pe = k ? we[0] : we;
    if (he.length === 0 || pe == null) {
      oe({
        diff: "reset"
      });
      return;
    }
    if (ee.current) {
      if (pe != null) {
        const _e = he[xe.current];
        if (k && _e && we.findIndex((Ze) => I(_e, Ze)) !== -1)
          return;
        const Ge = he.findIndex((Ze) => I(Ze, pe));
        Ge === -1 ? oe({
          diff: "reset"
        }) : $e({
          index: Ge
        });
        return;
      }
      if (xe.current >= he.length - 1) {
        $e({
          index: he.length - 1
        });
        return;
      }
      $e({
        index: xe.current
      });
    }
  }, [
    // Only sync the highlighted index when the option switch between empty and not
    he.length,
    // Don't sync the highlighted index with the value when multiple
    // eslint-disable-next-line react-hooks/exhaustive-deps
    k ? !1 : we,
    x,
    oe,
    $e,
    ye,
    Ce,
    k
  ]), We = Un((ve) => {
    Qc(ee, ve), ve && Ne();
  });
  process.env.NODE_ENV !== "production" && P.useEffect(() => {
    (!W.current || W.current.nodeName !== "INPUT") && (W.current && W.current.nodeName === "TEXTAREA" ? console.warn([`A textarea element was provided to ${u} where input was expected.`, "This is not a supported scenario but it may work under certain conditions.", "A textarea keyboard navigation may conflict with Autocomplete controls (for example enter and arrow keys).", "Make sure to test keyboard navigation and add custom event handlers if necessary."].join(`
`)) : console.error([`MUI: Unable to find the input element. It was resolved to ${W.current} while an HTMLInputElement was expected.`, `Instead, ${u} expects an input element.`, "", u === "useAutocomplete" ? "Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed." : "Make sure you have customized the input component correctly."].join(`
`)));
  }, [u]), P.useEffect(() => {
    Ne();
  }, [Ne]);
  const Ue = (ve) => {
    ie || (Q(!0), X(!0), L && L(ve));
  }, vt = (ve, pe) => {
    ie && (Q(!1), O && O(ve, pe));
  }, ut = (ve, pe, _e, Ge) => {
    if (k) {
      if (we.length === pe.length && we.every((Ze, pt) => Ze === pe[pt]))
        return;
    } else if (we === pe)
      return;
    A && A(ve, pe, _e, Ge), De(pe);
  }, Tt = P.useRef(!1), je = (ve, pe, _e = "selectOption", Ge = "options") => {
    let Ze = _e, pt = pe;
    if (k) {
      if (pt = Array.isArray(we) ? we.slice() : [], process.env.NODE_ENV !== "production") {
        const wn = pt.filter((mi) => I(pe, mi));
        wn.length > 1 && console.error([`MUI: The \`isOptionEqualToValue\` method of ${u} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${wn.length} matches.`].join(`
`));
      }
      const Xt = pt.findIndex((wn) => I(pe, wn));
      Xt === -1 ? pt.push(pe) : Ge !== "freeSolo" && (pt.splice(Xt, 1), Ze = "removeOption");
    }
    J(ve, pt, Ze), ut(ve, pt, Ze, {
      option: pe
    }), !p && (!ve || !ve.ctrlKey && !ve.metaKey) && vt(ve, Ze), (a === !0 || a === "touch" && Tt.current || a === "mouse" && !Tt.current) && W.current.blur();
  };
  function ft(ve, pe) {
    if (ve === -1)
      return -1;
    let _e = ve;
    for (; ; ) {
      if (pe === "next" && _e === we.length || pe === "previous" && _e === -1)
        return -1;
      const Ge = G.querySelector(`[data-tag-index="${_e}"]`);
      if (!Ge || !Ge.hasAttribute("tabindex") || Ge.disabled || Ge.getAttribute("aria-disabled") === "true")
        _e += pe === "next" ? 1 : -1;
      else
        return _e;
    }
  }
  const Et = (ve, pe) => {
    if (!k)
      return;
    Ce === "" && vt(ve, "toggleInput");
    let _e = V;
    V === -1 ? Ce === "" && pe === "previous" && (_e = we.length - 1) : (_e += pe === "next" ? 1 : -1, _e < 0 && (_e = 0), _e === we.length && (_e = -1)), _e = ft(_e, pe), de(_e), ce(_e);
  }, Le = (ve) => {
    te.current = !0, Be(""), N && N(ve, "", "clear"), ut(ve, k ? [] : null, "clear");
  }, Bt = (ve) => (pe) => {
    if (ve.onKeyDown && ve.onKeyDown(pe), !pe.defaultMuiPrevented && (V !== -1 && !["ArrowLeft", "ArrowRight"].includes(pe.key) && (de(-1), ce(-1)), pe.which !== 229))
      switch (pe.key) {
        case "Home":
          ye && C && (pe.preventDefault(), oe({
            diff: "start",
            direction: "next",
            reason: "keyboard",
            event: pe
          }));
          break;
        case "End":
          ye && C && (pe.preventDefault(), oe({
            diff: "end",
            direction: "previous",
            reason: "keyboard",
            event: pe
          }));
          break;
        case "PageUp":
          pe.preventDefault(), oe({
            diff: -5,
            direction: "previous",
            reason: "keyboard",
            event: pe
          }), Ue(pe);
          break;
        case "PageDown":
          pe.preventDefault(), oe({
            diff: ZB,
            direction: "next",
            reason: "keyboard",
            event: pe
          }), Ue(pe);
          break;
        case "ArrowDown":
          pe.preventDefault(), oe({
            diff: 1,
            direction: "next",
            reason: "keyboard",
            event: pe
          }), Ue(pe);
          break;
        case "ArrowUp":
          pe.preventDefault(), oe({
            diff: -1,
            direction: "previous",
            reason: "keyboard",
            event: pe
          }), Ue(pe);
          break;
        case "ArrowLeft":
          Et(pe, "previous");
          break;
        case "ArrowRight":
          Et(pe, "next");
          break;
        case "Enter":
          if (xe.current !== -1 && ye) {
            const _e = he[xe.current], Ge = b ? b(_e) : !1;
            if (pe.preventDefault(), Ge)
              return;
            je(pe, _e, "selectOption"), o && W.current.setSelectionRange(W.current.value.length, W.current.value.length);
          } else T && Ce !== "" && se === !1 && (k && pe.preventDefault(), je(pe, Ce, "createOption", "freeSolo"));
          break;
        case "Escape":
          ye ? (pe.preventDefault(), pe.stopPropagation(), vt(pe, "escape")) : c && (Ce !== "" || k && we.length > 0) && (pe.preventDefault(), pe.stopPropagation(), Le(pe));
          break;
        case "Backspace":
          if (k && !z && Ce === "" && we.length > 0) {
            const _e = V === -1 ? we.length - 1 : V, Ge = we.slice();
            Ge.splice(_e, 1), ut(pe, Ge, "removeOption", {
              option: we[_e]
            });
          }
          break;
        case "Delete":
          if (k && !z && Ce === "" && we.length > 0 && V !== -1) {
            const _e = V, Ge = we.slice();
            Ge.splice(_e, 1), ut(pe, Ge, "removeOption", {
              option: we[_e]
            });
          }
          break;
      }
  }, Lt = (ve) => {
    j(!0), D && !te.current && Ue(ve);
  }, Gt = (ve) => {
    if (t(ee)) {
      W.current.focus();
      return;
    }
    j(!1), ne.current = !0, te.current = !1, i && xe.current !== -1 && ye ? je(ve, he[xe.current], "blur") : i && T && Ce !== "" ? je(ve, Ce, "blur", "freeSolo") : l && J(ve, we, "blur"), vt(ve, "blur");
  }, vo = (ve) => {
    const pe = ve.target.value;
    Ce !== pe && (Be(pe), X(!1), N && N(ve, pe, "input")), pe === "" ? !d && !k && ut(ve, null, "clear") : Ue(ve);
  }, hn = (ve) => {
    const pe = Number(ve.currentTarget.getAttribute("data-option-index"));
    xe.current !== pe && $e({
      event: ve,
      index: pe,
      reason: "mouse"
    });
  }, Sn = (ve) => {
    $e({
      event: ve,
      index: Number(ve.currentTarget.getAttribute("data-option-index")),
      reason: "touch"
    }), Tt.current = !0;
  }, _r = (ve) => {
    const pe = Number(ve.currentTarget.getAttribute("data-option-index"));
    je(ve, he[pe], "selectOption"), Tt.current = !1;
  }, Jn = (ve) => (pe) => {
    const _e = we.slice();
    _e.splice(ve, 1), ut(pe, _e, "removeOption", {
      option: we[ve]
    });
  }, Wi = (ve) => {
    ie ? vt(ve, "toggleInput") : Ue(ve);
  }, pi = (ve) => {
    ve.currentTarget.contains(ve.target) && ve.target.getAttribute("id") !== Y && ve.preventDefault();
  }, xn = (ve) => {
    ve.currentTarget.contains(ve.target) && (W.current.focus(), U && ne.current && W.current.selectionEnd - W.current.selectionStart === 0 && W.current.select(), ne.current = !1);
  }, an = (ve) => {
    !h && (Ce === "" || !ie) && Wi(ve);
  };
  let eo = T && Ce.length > 0;
  eo = eo || (k ? we.length > 0 : we !== null);
  let hi = he;
  if (E) {
    const ve = /* @__PURE__ */ new Map();
    let pe = !1;
    hi = he.reduce((_e, Ge, Ze) => {
      const pt = E(Ge);
      return _e.length > 0 && _e[_e.length - 1].group === pt ? _e[_e.length - 1].options.push(Ge) : (process.env.NODE_ENV !== "production" && (ve.get(pt) && !pe && (console.warn(`MUI: The options provided combined with the \`groupBy\` method of ${u} returns duplicated headers.`, "You can solve the issue by sorting the options with the output of `groupBy`."), pe = !0), ve.set(pt, !0)), _e.push({
        key: Ze,
        index: Ze,
        group: pt,
        options: [Ge]
      })), _e;
    }, []);
  }
  return h && Me && Gt(), {
    getRootProps: (ve = {}) => ({
      ...ve,
      onKeyDown: Bt(ve),
      onMouseDown: pi,
      onClick: xn
    }),
    getInputLabelProps: () => ({
      id: `${Y}-label`,
      htmlFor: Y
    }),
    getInputProps: () => ({
      id: Y,
      value: Ce,
      onBlur: Gt,
      onFocus: Lt,
      onChange: vo,
      onMouseDown: an,
      // if open then this is handled imperatively so don't let react override
      // only have an opinion about this when closed
      "aria-activedescendant": ye ? "" : null,
      "aria-autocomplete": o ? "both" : "list",
      "aria-controls": ae ? `${Y}-listbox` : void 0,
      "aria-expanded": ae,
      // Disable browser's suggestion that might overlap with the popup.
      // Handle autocomplete but not autofill.
      autoComplete: "off",
      ref: W,
      autoCapitalize: "none",
      spellCheck: "false",
      role: "combobox",
      disabled: h
    }),
    getClearProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: Le
    }),
    getPopupIndicatorProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: Wi
    }),
    getTagProps: ({
      index: ve
    }) => ({
      key: ve,
      "data-tag-index": ve,
      tabIndex: -1,
      ...!z && {
        onDelete: Jn(ve)
      }
    }),
    getListboxProps: () => ({
      role: "listbox",
      id: `${Y}-listbox`,
      "aria-labelledby": `${Y}-label`,
      ref: We,
      onMouseDown: (ve) => {
        ve.preventDefault();
      }
    }),
    getOptionProps: ({
      index: ve,
      option: pe
    }) => {
      const _e = (k ? we : [we]).some((Ze) => Ze != null && I(pe, Ze)), Ge = b ? b(pe) : !1;
      return {
        key: (w == null ? void 0 : w(pe)) ?? K(pe),
        tabIndex: -1,
        role: "option",
        id: `${Y}-option-${ve}`,
        onMouseMove: hn,
        onClick: _r,
        onTouchStart: Sn,
        "data-option-index": ve,
        "aria-disabled": Ge,
        "aria-selected": _e
      };
    },
    id: Y,
    inputValue: Ce,
    value: we,
    dirty: eo,
    expanded: ye && G,
    popupOpen: ye,
    focused: Me || V !== -1,
    anchorEl: G,
    setAnchorEl: re,
    focusedTag: V,
    groupedOptions: hi
  };
}
function tF(e) {
  return tt("MuiListSubheader", e);
}
it("MuiListSubheader", ["root", "colorPrimary", "colorInherit", "gutters", "inset", "sticky"]);
const nF = (e) => {
  const {
    classes: t,
    color: n,
    disableGutters: o,
    inset: r,
    disableSticky: i
  } = e, a = {
    root: ["root", n !== "default" && `color${fe(n)}`, !o && "gutters", r && "inset", !i && "sticky"]
  };
  return rt(a, tF, t);
}, oF = Ee("li", {
  name: "MuiListSubheader",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "default" && t[`color${fe(n.color)}`], !n.disableGutters && t.gutters, n.inset && t.inset, !n.disableSticky && t.sticky];
  }
})(qe(({
  theme: e
}) => ({
  boxSizing: "border-box",
  lineHeight: "48px",
  listStyle: "none",
  color: (e.vars || e).palette.text.secondary,
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(14),
  variants: [{
    props: {
      color: "primary"
    },
    style: {
      color: (e.vars || e).palette.primary.main
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      color: "inherit"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableGutters,
    style: {
      paddingLeft: 16,
      paddingRight: 16
    }
  }, {
    props: ({
      ownerState: t
    }) => t.inset,
    style: {
      paddingLeft: 72
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableSticky,
    style: {
      position: "sticky",
      top: 0,
      zIndex: 1,
      backgroundColor: (e.vars || e).palette.background.paper
    }
  }]
}))), wu = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiListSubheader"
  }), {
    className: r,
    color: i = "default",
    component: a = "li",
    disableGutters: l = !1,
    disableSticky: c = !1,
    inset: u = !1,
    ...f
  } = o, d = {
    ...o,
    color: i,
    component: a,
    disableGutters: l,
    disableSticky: c,
    inset: u
  }, p = nF(d);
  return /* @__PURE__ */ $(oF, {
    as: a,
    className: Re(p.root, r),
    ref: n,
    ownerState: d,
    ...f
  });
});
wu && (wu.muiSkipListHighlight = !0);
process.env.NODE_ENV !== "production" && (wu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component. It supports those theme colors that make sense for this component.
   * @default 'default'
   */
  color: s.oneOf(["default", "inherit", "primary"]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * If `true`, the List Subheader will not have gutters.
   * @default false
   */
  disableGutters: s.bool,
  /**
   * If `true`, the List Subheader will not stick to the top during scroll.
   * @default false
   */
  disableSticky: s.bool,
  /**
   * If `true`, the List Subheader is indented.
   * @default false
   */
  inset: s.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object])
});
function rF(e) {
  return tt("MuiIconButton", e);
}
const u0 = it("MuiIconButton", ["root", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorError", "colorInfo", "colorSuccess", "colorWarning", "edgeStart", "edgeEnd", "sizeSmall", "sizeMedium", "sizeLarge", "loading", "loadingIndicator", "loadingWrapper"]), iF = (e) => {
  const {
    classes: t,
    disabled: n,
    color: o,
    edge: r,
    size: i,
    loading: a
  } = e, l = {
    root: ["root", a && "loading", n && "disabled", o !== "default" && `color${fe(o)}`, r && `edge${fe(r)}`, `size${fe(i)}`],
    loadingIndicator: ["loadingIndicator"],
    loadingWrapper: ["loadingWrapper"]
  };
  return rt(l, rF, t);
}, sF = Ee(Ps, {
  name: "MuiIconButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.loading && t.loading, n.color !== "default" && t[`color${fe(n.color)}`], n.edge && t[`edge${fe(n.edge)}`], t[`size${fe(n.size)}`]];
  }
})(qe(({
  theme: e
}) => ({
  textAlign: "center",
  flex: "0 0 auto",
  fontSize: e.typography.pxToRem(24),
  padding: 8,
  borderRadius: "50%",
  color: (e.vars || e).palette.action.active,
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.shortest
  }),
  variants: [{
    props: (t) => !t.disableRipple,
    style: {
      "--IconButton-hoverBg": e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : bt(e.palette.action.active, e.palette.action.hoverOpacity),
      "&:hover": {
        backgroundColor: "var(--IconButton-hoverBg)",
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }, {
    props: {
      edge: "start"
    },
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: {
      edge: "end"
    },
    style: {
      marginRight: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }]
})), qe(({
  theme: e
}) => ({
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      color: "inherit"
    }
  }, ...Object.entries(e.palette).filter(Ut()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  })), ...Object.entries(e.palette).filter(Ut()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--IconButton-hoverBg": e.vars ? `rgba(${(e.vars || e).palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : bt((e.vars || e).palette[t].main, e.palette.action.hoverOpacity)
    }
  })), {
    props: {
      size: "small"
    },
    style: {
      padding: 5,
      fontSize: e.typography.pxToRem(18)
    }
  }, {
    props: {
      size: "large"
    },
    style: {
      padding: 12,
      fontSize: e.typography.pxToRem(28)
    }
  }],
  [`&.${u0.disabled}`]: {
    backgroundColor: "transparent",
    color: (e.vars || e).palette.action.disabled
  },
  [`&.${u0.loading}`]: {
    color: "transparent"
  }
}))), aF = Ee("span", {
  name: "MuiIconButton",
  slot: "LoadingIndicator",
  overridesResolver: (e, t) => t.loadingIndicator
})(({
  theme: e
}) => ({
  display: "none",
  position: "absolute",
  visibility: "visible",
  top: "50%",
  left: "50%",
  transform: "translate(-50%, -50%)",
  color: (e.vars || e).palette.action.disabled,
  variants: [{
    props: {
      loading: !0
    },
    style: {
      display: "flex"
    }
  }]
})), Hm = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiIconButton"
  }), {
    edge: r = !1,
    children: i,
    className: a,
    color: l = "default",
    disabled: c = !1,
    disableFocusRipple: u = !1,
    size: f = "medium",
    id: d,
    loading: p = null,
    loadingIndicator: h,
    ...g
  } = o, m = Bi(d), y = h ?? /* @__PURE__ */ $(Il, {
    "aria-labelledby": m,
    color: "inherit",
    size: 16
  }), x = {
    ...o,
    edge: r,
    color: l,
    disabled: c,
    disableFocusRipple: u,
    loading: p,
    loadingIndicator: y,
    size: f
  }, T = iF(x);
  return /* @__PURE__ */ Te(sF, {
    id: p ? m : d,
    className: Re(T.root, a),
    centerRipple: !0,
    focusRipple: !u,
    disabled: c || p,
    ref: n,
    ...g,
    ownerState: x,
    children: [typeof p == "boolean" && // use plain HTML span to minimize the runtime overhead
    /* @__PURE__ */ $("span", {
      className: T.loadingWrapper,
      style: {
        display: "contents"
      },
      children: /* @__PURE__ */ $(aF, {
        className: T.loadingIndicator,
        ownerState: x,
        children: p && y
      })
    }), i]
  });
});
process.env.NODE_ENV !== "production" && (Hm.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The icon to display.
   */
  children: jo(s.node, (e) => P.Children.toArray(e.children).some((n) => /* @__PURE__ */ P.isValidElement(n) && n.props.onClick) ? new Error(["MUI: You are providing an onClick event listener to a child of a button element.", "Prefer applying it to the IconButton directly.", "This guarantees that the whole <button> will be responsive to click events."].join(`
`)) : null),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: s.oneOfType([s.oneOf(["inherit", "default", "primary", "secondary", "error", "info", "success", "warning"]), s.string]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: s.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: s.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: s.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: s.oneOf(["end", "start", !1]),
  /**
   * @ignore
   */
  id: s.string,
  /**
   * If `true`, the loading indicator is visible and the button is disabled.
   * If `true | false`, the loading wrapper is always rendered before the children to prevent [Google Translation Crash](https://github.com/mui/material-ui/issues/27853).
   * @default null
   */
  loading: s.bool,
  /**
   * Element placed before the children if the button is in loading state.
   * The node should contain an element with `role="progressbar"` with an accessible name.
   * By default, it renders a `CircularProgress` that is labeled by the button itself.
   * @default <CircularProgress color="inherit" size={16} />
   */
  loadingIndicator: s.node,
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: s.oneOfType([s.oneOf(["small", "medium", "large"]), s.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object])
});
const lF = Nr(/* @__PURE__ */ $("path", {
  d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
}), "Cancel");
function cF(e) {
  return tt("MuiChip", e);
}
const ct = it("MuiChip", ["root", "sizeSmall", "sizeMedium", "colorDefault", "colorError", "colorInfo", "colorPrimary", "colorSecondary", "colorSuccess", "colorWarning", "disabled", "clickable", "clickableColorPrimary", "clickableColorSecondary", "deletable", "deletableColorPrimary", "deletableColorSecondary", "outlined", "filled", "outlinedPrimary", "outlinedSecondary", "filledPrimary", "filledSecondary", "avatar", "avatarSmall", "avatarMedium", "avatarColorPrimary", "avatarColorSecondary", "icon", "iconSmall", "iconMedium", "iconColorPrimary", "iconColorSecondary", "label", "labelSmall", "labelMedium", "deleteIcon", "deleteIconSmall", "deleteIconMedium", "deleteIconColorPrimary", "deleteIconColorSecondary", "deleteIconOutlinedColorPrimary", "deleteIconOutlinedColorSecondary", "deleteIconFilledColorPrimary", "deleteIconFilledColorSecondary", "focusVisible"]), uF = (e) => {
  const {
    classes: t,
    disabled: n,
    size: o,
    color: r,
    iconColor: i,
    onDelete: a,
    clickable: l,
    variant: c
  } = e, u = {
    root: ["root", c, n && "disabled", `size${fe(o)}`, `color${fe(r)}`, l && "clickable", l && `clickableColor${fe(r)}`, a && "deletable", a && `deletableColor${fe(r)}`, `${c}${fe(r)}`],
    label: ["label", `label${fe(o)}`],
    avatar: ["avatar", `avatar${fe(o)}`, `avatarColor${fe(r)}`],
    icon: ["icon", `icon${fe(o)}`, `iconColor${fe(i)}`],
    deleteIcon: ["deleteIcon", `deleteIcon${fe(o)}`, `deleteIconColor${fe(r)}`, `deleteIcon${fe(c)}Color${fe(r)}`]
  };
  return rt(u, cF, t);
}, dF = Ee("div", {
  name: "MuiChip",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      color: o,
      iconColor: r,
      clickable: i,
      onDelete: a,
      size: l,
      variant: c
    } = n;
    return [{
      [`& .${ct.avatar}`]: t.avatar
    }, {
      [`& .${ct.avatar}`]: t[`avatar${fe(l)}`]
    }, {
      [`& .${ct.avatar}`]: t[`avatarColor${fe(o)}`]
    }, {
      [`& .${ct.icon}`]: t.icon
    }, {
      [`& .${ct.icon}`]: t[`icon${fe(l)}`]
    }, {
      [`& .${ct.icon}`]: t[`iconColor${fe(r)}`]
    }, {
      [`& .${ct.deleteIcon}`]: t.deleteIcon
    }, {
      [`& .${ct.deleteIcon}`]: t[`deleteIcon${fe(l)}`]
    }, {
      [`& .${ct.deleteIcon}`]: t[`deleteIconColor${fe(o)}`]
    }, {
      [`& .${ct.deleteIcon}`]: t[`deleteIcon${fe(c)}Color${fe(o)}`]
    }, t.root, t[`size${fe(l)}`], t[`color${fe(o)}`], i && t.clickable, i && o !== "default" && t[`clickableColor${fe(o)})`], a && t.deletable, a && o !== "default" && t[`deletableColor${fe(o)}`], t[c], t[`${c}${fe(o)}`]];
  }
})(qe(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? e.palette.grey[700] : e.palette.grey[300];
  return {
    maxWidth: "100%",
    fontFamily: e.typography.fontFamily,
    fontSize: e.typography.pxToRem(13),
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    height: 32,
    color: (e.vars || e).palette.text.primary,
    backgroundColor: (e.vars || e).palette.action.selected,
    borderRadius: 32 / 2,
    whiteSpace: "nowrap",
    transition: e.transitions.create(["background-color", "box-shadow"]),
    // reset cursor explicitly in case ButtonBase is used
    cursor: "unset",
    // We disable the focus ring for mouse, touch and keyboard users.
    outline: 0,
    textDecoration: "none",
    border: 0,
    // Remove `button` border
    padding: 0,
    // Remove `button` padding
    verticalAlign: "middle",
    boxSizing: "border-box",
    [`&.${ct.disabled}`]: {
      opacity: (e.vars || e).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`& .${ct.avatar}`]: {
      marginLeft: 5,
      marginRight: -6,
      width: 24,
      height: 24,
      color: e.vars ? e.vars.palette.Chip.defaultAvatarColor : t,
      fontSize: e.typography.pxToRem(12)
    },
    [`& .${ct.avatarColorPrimary}`]: {
      color: (e.vars || e).palette.primary.contrastText,
      backgroundColor: (e.vars || e).palette.primary.dark
    },
    [`& .${ct.avatarColorSecondary}`]: {
      color: (e.vars || e).palette.secondary.contrastText,
      backgroundColor: (e.vars || e).palette.secondary.dark
    },
    [`& .${ct.avatarSmall}`]: {
      marginLeft: 4,
      marginRight: -4,
      width: 18,
      height: 18,
      fontSize: e.typography.pxToRem(10)
    },
    [`& .${ct.icon}`]: {
      marginLeft: 5,
      marginRight: -6
    },
    [`& .${ct.deleteIcon}`]: {
      WebkitTapHighlightColor: "transparent",
      color: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / 0.26)` : bt(e.palette.text.primary, 0.26),
      fontSize: 22,
      cursor: "pointer",
      margin: "0 5px 0 -6px",
      "&:hover": {
        color: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / 0.4)` : bt(e.palette.text.primary, 0.4)
      }
    },
    variants: [{
      props: {
        size: "small"
      },
      style: {
        height: 24,
        [`& .${ct.icon}`]: {
          fontSize: 18,
          marginLeft: 4,
          marginRight: -4
        },
        [`& .${ct.deleteIcon}`]: {
          fontSize: 16,
          marginRight: 4,
          marginLeft: -4
        }
      }
    }, ...Object.entries(e.palette).filter(Ut(["contrastText"])).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        backgroundColor: (e.vars || e).palette[n].main,
        color: (e.vars || e).palette[n].contrastText,
        [`& .${ct.deleteIcon}`]: {
          color: e.vars ? `rgba(${e.vars.palette[n].contrastTextChannel} / 0.7)` : bt(e.palette[n].contrastText, 0.7),
          "&:hover, &:active": {
            color: (e.vars || e).palette[n].contrastText
          }
        }
      }
    })), {
      props: (n) => n.iconColor === n.color,
      style: {
        [`& .${ct.icon}`]: {
          color: e.vars ? e.vars.palette.Chip.defaultIconColor : t
        }
      }
    }, {
      props: (n) => n.iconColor === n.color && n.color !== "default",
      style: {
        [`& .${ct.icon}`]: {
          color: "inherit"
        }
      }
    }, {
      props: {
        onDelete: !0
      },
      style: {
        [`&.${ct.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : bt(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
        }
      }
    }, ...Object.entries(e.palette).filter(Ut(["dark"])).map(([n]) => ({
      props: {
        color: n,
        onDelete: !0
      },
      style: {
        [`&.${ct.focusVisible}`]: {
          background: (e.vars || e).palette[n].dark
        }
      }
    })), {
      props: {
        clickable: !0
      },
      style: {
        userSelect: "none",
        WebkitTapHighlightColor: "transparent",
        cursor: "pointer",
        "&:hover": {
          backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : bt(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity)
        },
        [`&.${ct.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : bt(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
        },
        "&:active": {
          boxShadow: (e.vars || e).shadows[1]
        }
      }
    }, ...Object.entries(e.palette).filter(Ut(["dark"])).map(([n]) => ({
      props: {
        color: n,
        clickable: !0
      },
      style: {
        [`&:hover, &.${ct.focusVisible}`]: {
          backgroundColor: (e.vars || e).palette[n].dark
        }
      }
    })), {
      props: {
        variant: "outlined"
      },
      style: {
        backgroundColor: "transparent",
        border: e.vars ? `1px solid ${e.vars.palette.Chip.defaultBorder}` : `1px solid ${e.palette.mode === "light" ? e.palette.grey[400] : e.palette.grey[700]}`,
        [`&.${ct.clickable}:hover`]: {
          backgroundColor: (e.vars || e).palette.action.hover
        },
        [`&.${ct.focusVisible}`]: {
          backgroundColor: (e.vars || e).palette.action.focus
        },
        [`& .${ct.avatar}`]: {
          marginLeft: 4
        },
        [`& .${ct.avatarSmall}`]: {
          marginLeft: 2
        },
        [`& .${ct.icon}`]: {
          marginLeft: 4
        },
        [`& .${ct.iconSmall}`]: {
          marginLeft: 2
        },
        [`& .${ct.deleteIcon}`]: {
          marginRight: 5
        },
        [`& .${ct.deleteIconSmall}`]: {
          marginRight: 3
        }
      }
    }, ...Object.entries(e.palette).filter(Ut()).map(([n]) => ({
      props: {
        variant: "outlined",
        color: n
      },
      style: {
        color: (e.vars || e).palette[n].main,
        border: `1px solid ${e.vars ? `rgba(${e.vars.palette[n].mainChannel} / 0.7)` : bt(e.palette[n].main, 0.7)}`,
        [`&.${ct.clickable}:hover`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[n].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : bt(e.palette[n].main, e.palette.action.hoverOpacity)
        },
        [`&.${ct.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[n].mainChannel} / ${e.vars.palette.action.focusOpacity})` : bt(e.palette[n].main, e.palette.action.focusOpacity)
        },
        [`& .${ct.deleteIcon}`]: {
          color: e.vars ? `rgba(${e.vars.palette[n].mainChannel} / 0.7)` : bt(e.palette[n].main, 0.7),
          "&:hover, &:active": {
            color: (e.vars || e).palette[n].main
          }
        }
      }
    }))]
  };
})), fF = Ee("span", {
  name: "MuiChip",
  slot: "Label",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      size: o
    } = n;
    return [t.label, t[`label${fe(o)}`]];
  }
})({
  overflow: "hidden",
  textOverflow: "ellipsis",
  paddingLeft: 12,
  paddingRight: 12,
  whiteSpace: "nowrap",
  variants: [{
    props: {
      variant: "outlined"
    },
    style: {
      paddingLeft: 11,
      paddingRight: 11
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      paddingLeft: 8,
      paddingRight: 8
    }
  }, {
    props: {
      size: "small",
      variant: "outlined"
    },
    style: {
      paddingLeft: 7,
      paddingRight: 7
    }
  }]
});
function d0(e) {
  return e.key === "Backspace" || e.key === "Delete";
}
const V1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiChip"
  }), {
    avatar: r,
    className: i,
    clickable: a,
    color: l = "default",
    component: c,
    deleteIcon: u,
    disabled: f = !1,
    icon: d,
    label: p,
    onClick: h,
    onDelete: g,
    onKeyDown: m,
    onKeyUp: y,
    size: x = "medium",
    variant: T = "filled",
    tabIndex: b,
    skipFocusWhenDisabled: w = !1,
    // TODO v6: Rename to `focusableWhenDisabled`.
    ...S
  } = o, E = P.useRef(null), C = un(E, n), R = (D) => {
    D.stopPropagation(), g && g(D);
  }, M = (D) => {
    D.currentTarget === D.target && d0(D) && D.preventDefault(), m && m(D);
  }, v = (D) => {
    D.currentTarget === D.target && g && d0(D) && g(D), y && y(D);
  }, I = a !== !1 && h ? !0 : a, k = I || g ? Ps : c || "div", A = {
    ...o,
    component: k,
    disabled: f,
    size: x,
    color: l,
    iconColor: /* @__PURE__ */ P.isValidElement(d) && d.props.color || l,
    onDelete: !!g,
    clickable: I,
    variant: T
  }, O = uF(A), _ = k === Ps ? {
    component: c || "div",
    focusVisibleClassName: O.focusVisible,
    ...g && {
      disableRipple: !0
    }
  } : {};
  let N = null;
  g && (N = u && /* @__PURE__ */ P.isValidElement(u) ? /* @__PURE__ */ P.cloneElement(u, {
    className: Re(u.props.className, O.deleteIcon),
    onClick: R
  }) : /* @__PURE__ */ $(lF, {
    className: Re(O.deleteIcon),
    onClick: R
  }));
  let L = null;
  r && /* @__PURE__ */ P.isValidElement(r) && (L = /* @__PURE__ */ P.cloneElement(r, {
    className: Re(O.avatar, r.props.className)
  }));
  let F = null;
  return d && /* @__PURE__ */ P.isValidElement(d) && (F = /* @__PURE__ */ P.cloneElement(d, {
    className: Re(O.icon, d.props.className)
  })), process.env.NODE_ENV !== "production" && L && F && console.error("MUI: The Chip component can not handle the avatar and the icon prop at the same time. Pick one."), /* @__PURE__ */ Te(dF, {
    as: k,
    className: Re(O.root, i),
    disabled: I && f ? !0 : void 0,
    onClick: h,
    onKeyDown: M,
    onKeyUp: v,
    ref: C,
    tabIndex: w && f ? -1 : b,
    ownerState: A,
    ..._,
    ...S,
    children: [L || F, /* @__PURE__ */ $(fF, {
      className: Re(O.label),
      ownerState: A,
      children: p
    }), N]
  });
});
process.env.NODE_ENV !== "production" && (V1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The Avatar element to display.
   */
  avatar: s.element,
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: DI,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * If `true`, the chip will appear clickable, and will raise when pressed,
   * even if the onClick prop is not defined.
   * If `false`, the chip will not appear clickable, even if onClick prop is defined.
   * This can be used, for example,
   * along with the component prop to indicate an anchor Chip is clickable.
   * Note: this controls the UI and does not affect the onClick event.
   */
  clickable: s.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: s.oneOfType([s.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), s.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * Override the default delete icon element. Shown only if `onDelete` is set.
   */
  deleteIcon: s.element,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: s.bool,
  /**
   * Icon element.
   */
  icon: s.element,
  /**
   * The content of the component.
   */
  label: s.node,
  /**
   * @ignore
   */
  onClick: s.func,
  /**
   * Callback fired when the delete icon is clicked.
   * If set, the delete icon will be shown.
   */
  onDelete: s.func,
  /**
   * @ignore
   */
  onKeyDown: s.func,
  /**
   * @ignore
   */
  onKeyUp: s.func,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: s.oneOfType([s.oneOf(["medium", "small"]), s.string]),
  /**
   * If `true`, allows the disabled chip to escape focus.
   * If `false`, allows the disabled chip to receive focus.
   * @default false
   */
  skipFocusWhenDisabled: s.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * @ignore
   */
  tabIndex: s.number,
  /**
   * The variant to use.
   * @default 'filled'
   */
  variant: s.oneOfType([s.oneOf(["filled", "outlined"]), s.string])
});
function pF(e) {
  return tt("MuiInput", e);
}
const Vr = {
  ...to,
  ...it("MuiInput", ["root", "underline", "input"])
};
function hF(e) {
  return tt("MuiFilledInput", e);
}
const no = {
  ...to,
  ...it("MuiFilledInput", ["root", "underline", "input", "adornedStart", "adornedEnd", "sizeSmall", "multiline", "hiddenLabel"])
}, mF = Nr(/* @__PURE__ */ $("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close"), H1 = Nr(/* @__PURE__ */ $("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown");
function gF(e) {
  return tt("MuiAutocomplete", e);
}
const Je = it("MuiAutocomplete", ["root", "expanded", "fullWidth", "focused", "focusVisible", "tag", "tagSizeSmall", "tagSizeMedium", "hasPopupIcon", "hasClearIcon", "inputRoot", "input", "inputFocused", "endAdornment", "clearIndicator", "popupIndicator", "popupIndicatorOpen", "popper", "popperDisablePortal", "paper", "listbox", "loading", "noOptions", "option", "groupLabel", "groupUl"]);
var f0, p0;
const yF = (e) => {
  const {
    classes: t,
    disablePortal: n,
    expanded: o,
    focused: r,
    fullWidth: i,
    hasClearIcon: a,
    hasPopupIcon: l,
    inputFocused: c,
    popupOpen: u,
    size: f
  } = e, d = {
    root: ["root", o && "expanded", r && "focused", i && "fullWidth", a && "hasClearIcon", l && "hasPopupIcon"],
    inputRoot: ["inputRoot"],
    input: ["input", c && "inputFocused"],
    tag: ["tag", `tagSize${fe(f)}`],
    endAdornment: ["endAdornment"],
    clearIndicator: ["clearIndicator"],
    popupIndicator: ["popupIndicator", u && "popupIndicatorOpen"],
    popper: ["popper", n && "popperDisablePortal"],
    paper: ["paper"],
    listbox: ["listbox"],
    loading: ["loading"],
    noOptions: ["noOptions"],
    option: ["option"],
    groupLabel: ["groupLabel"],
    groupUl: ["groupUl"]
  };
  return rt(d, gF, t);
}, bF = Ee("div", {
  name: "MuiAutocomplete",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      fullWidth: o,
      hasClearIcon: r,
      hasPopupIcon: i,
      inputFocused: a,
      size: l
    } = n;
    return [{
      [`& .${Je.tag}`]: t.tag
    }, {
      [`& .${Je.tag}`]: t[`tagSize${fe(l)}`]
    }, {
      [`& .${Je.inputRoot}`]: t.inputRoot
    }, {
      [`& .${Je.input}`]: t.input
    }, {
      [`& .${Je.input}`]: a && t.inputFocused
    }, t.root, o && t.fullWidth, i && t.hasPopupIcon, r && t.hasClearIcon];
  }
})({
  [`&.${Je.focused} .${Je.clearIndicator}`]: {
    visibility: "visible"
  },
  /* Avoid double tap issue on iOS */
  "@media (pointer: fine)": {
    [`&:hover .${Je.clearIndicator}`]: {
      visibility: "visible"
    }
  },
  [`& .${Je.tag}`]: {
    margin: 3,
    maxWidth: "calc(100% - 6px)"
  },
  [`& .${Je.inputRoot}`]: {
    [`.${Je.hasPopupIcon}&, .${Je.hasClearIcon}&`]: {
      paddingRight: 30
    },
    [`.${Je.hasPopupIcon}.${Je.hasClearIcon}&`]: {
      paddingRight: 56
    },
    [`& .${Je.input}`]: {
      width: 0,
      minWidth: 30
    }
  },
  [`& .${Vr.root}`]: {
    paddingBottom: 1,
    "& .MuiInput-input": {
      padding: "4px 4px 4px 0px"
    }
  },
  [`& .${Vr.root}.${to.sizeSmall}`]: {
    [`& .${Vr.input}`]: {
      padding: "2px 4px 3px 0"
    }
  },
  [`& .${wo.root}`]: {
    padding: 9,
    [`.${Je.hasPopupIcon}&, .${Je.hasClearIcon}&`]: {
      paddingRight: 39
    },
    [`.${Je.hasPopupIcon}.${Je.hasClearIcon}&`]: {
      paddingRight: 65
    },
    [`& .${Je.input}`]: {
      padding: "7.5px 4px 7.5px 5px"
    },
    [`& .${Je.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${wo.root}.${to.sizeSmall}`]: {
    // Don't specify paddingRight, as it overrides the default value set when there is only
    // one of the popup or clear icon as the specificity is equal so the latter one wins
    paddingTop: 6,
    paddingBottom: 6,
    paddingLeft: 6,
    [`& .${Je.input}`]: {
      padding: "2.5px 4px 2.5px 8px"
    }
  },
  [`& .${no.root}`]: {
    paddingTop: 19,
    paddingLeft: 8,
    [`.${Je.hasPopupIcon}&, .${Je.hasClearIcon}&`]: {
      paddingRight: 39
    },
    [`.${Je.hasPopupIcon}.${Je.hasClearIcon}&`]: {
      paddingRight: 65
    },
    [`& .${no.input}`]: {
      padding: "7px 4px"
    },
    [`& .${Je.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${no.root}.${to.sizeSmall}`]: {
    paddingBottom: 1,
    [`& .${no.input}`]: {
      padding: "2.5px 4px"
    }
  },
  [`& .${to.hiddenLabel}`]: {
    paddingTop: 8
  },
  [`& .${no.root}.${to.hiddenLabel}`]: {
    paddingTop: 0,
    paddingBottom: 0,
    [`& .${Je.input}`]: {
      paddingTop: 16,
      paddingBottom: 17
    }
  },
  [`& .${no.root}.${to.hiddenLabel}.${to.sizeSmall}`]: {
    [`& .${Je.input}`]: {
      paddingTop: 8,
      paddingBottom: 9
    }
  },
  [`& .${Je.input}`]: {
    flexGrow: 1,
    textOverflow: "ellipsis",
    opacity: 0
  },
  variants: [{
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      [`& .${Je.tag}`]: {
        margin: 2,
        maxWidth: "calc(100% - 4px)"
      }
    }
  }, {
    props: {
      inputFocused: !0
    },
    style: {
      [`& .${Je.input}`]: {
        opacity: 1
      }
    }
  }, {
    props: {
      multiple: !0
    },
    style: {
      [`& .${Je.inputRoot}`]: {
        flexWrap: "wrap"
      }
    }
  }]
}), vF = Ee("div", {
  name: "MuiAutocomplete",
  slot: "EndAdornment",
  overridesResolver: (e, t) => t.endAdornment
})({
  // We use a position absolute to support wrapping tags.
  position: "absolute",
  right: 0,
  top: "50%",
  transform: "translate(0, -50%)"
}), xF = Ee(Hm, {
  name: "MuiAutocomplete",
  slot: "ClearIndicator",
  overridesResolver: (e, t) => t.clearIndicator
})({
  marginRight: -2,
  padding: 4,
  visibility: "hidden"
}), wF = Ee(Hm, {
  name: "MuiAutocomplete",
  slot: "PopupIndicator",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.popupIndicator, n.popupOpen && t.popupIndicatorOpen];
  }
})({
  padding: 2,
  marginRight: -2,
  variants: [{
    props: {
      popupOpen: !0
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
}), SF = Ee(Ys, {
  name: "MuiAutocomplete",
  slot: "Popper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${Je.option}`]: t.option
    }, t.popper, n.disablePortal && t.popperDisablePortal];
  }
})(qe(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.modal,
  variants: [{
    props: {
      disablePortal: !0
    },
    style: {
      position: "absolute"
    }
  }]
}))), TF = Ee(oi, {
  name: "MuiAutocomplete",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})(qe(({
  theme: e
}) => ({
  ...e.typography.body1,
  overflow: "auto"
}))), EF = Ee("div", {
  name: "MuiAutocomplete",
  slot: "Loading",
  overridesResolver: (e, t) => t.loading
})(qe(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  padding: "14px 16px"
}))), CF = Ee("div", {
  name: "MuiAutocomplete",
  slot: "NoOptions",
  overridesResolver: (e, t) => t.noOptions
})(qe(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  padding: "14px 16px"
}))), OF = Ee("ul", {
  name: "MuiAutocomplete",
  slot: "Listbox",
  overridesResolver: (e, t) => t.listbox
})(qe(({
  theme: e
}) => ({
  listStyle: "none",
  margin: 0,
  padding: "8px 0",
  maxHeight: "40vh",
  overflow: "auto",
  position: "relative",
  [`& .${Je.option}`]: {
    minHeight: 48,
    display: "flex",
    overflow: "hidden",
    justifyContent: "flex-start",
    alignItems: "center",
    cursor: "pointer",
    paddingTop: 6,
    boxSizing: "border-box",
    outline: "0",
    WebkitTapHighlightColor: "transparent",
    paddingBottom: 6,
    paddingLeft: 16,
    paddingRight: 16,
    [e.breakpoints.up("sm")]: {
      minHeight: "auto"
    },
    [`&.${Je.focused}`]: {
      backgroundColor: (e.vars || e).palette.action.hover,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    '&[aria-disabled="true"]': {
      opacity: (e.vars || e).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`&.${Je.focusVisible}`]: {
      backgroundColor: (e.vars || e).palette.action.focus
    },
    '&[aria-selected="true"]': {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : bt(e.palette.primary.main, e.palette.action.selectedOpacity),
      [`&.${Je.focused}`]: {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : bt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: (e.vars || e).palette.action.selected
        }
      },
      [`&.${Je.focusVisible}`]: {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : bt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
      }
    }
  }
}))), $F = Ee(wu, {
  name: "MuiAutocomplete",
  slot: "GroupLabel",
  overridesResolver: (e, t) => t.groupLabel
})(qe(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  top: -8
}))), IF = Ee("ul", {
  name: "MuiAutocomplete",
  slot: "GroupUl",
  overridesResolver: (e, t) => t.groupUl
})({
  padding: 0,
  [`& .${Je.option}`]: {
    paddingLeft: 24
  }
}), W1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiAutocomplete"
  }), {
    autoComplete: r = !1,
    autoHighlight: i = !1,
    autoSelect: a = !1,
    blurOnSelect: l = !1,
    ChipProps: c,
    className: u,
    clearIcon: f = f0 || (f0 = /* @__PURE__ */ $(mF, {
      fontSize: "small"
    })),
    clearOnBlur: d = !o.freeSolo,
    clearOnEscape: p = !1,
    clearText: h = "Clear",
    closeText: g = "Close",
    componentsProps: m,
    defaultValue: y = o.multiple ? [] : null,
    disableClearable: x = !1,
    disableCloseOnSelect: T = !1,
    disabled: b = !1,
    disabledItemsFocusable: w = !1,
    disableListWrap: S = !1,
    disablePortal: E = !1,
    filterOptions: C,
    filterSelectedOptions: R = !1,
    forcePopupIcon: M = "auto",
    freeSolo: v = !1,
    fullWidth: I = !1,
    getLimitTagsText: k = (gt) => `+${gt}`,
    getOptionDisabled: A,
    getOptionKey: O,
    getOptionLabel: _,
    isOptionEqualToValue: N,
    groupBy: L,
    handleHomeEndKeys: F = !o.freeSolo,
    id: D,
    includeInputInList: B = !1,
    inputValue: z,
    limitTags: U = -1,
    ListboxComponent: q,
    ListboxProps: Y,
    loading: K = !1,
    loadingText: te = "Loading…",
    multiple: ne = !1,
    noOptionsText: W = "No options",
    onChange: ee,
    onClose: G,
    onHighlightChange: re,
    onInputChange: V,
    onOpen: de,
    open: ue,
    openOnFocus: xe = !1,
    openText: Ae = "Open",
    options: we,
    PaperComponent: De,
    PopperComponent: Ce,
    popupIcon: Be = p0 || (p0 = /* @__PURE__ */ $(H1, {})),
    readOnly: Me = !1,
    renderGroup: j,
    renderInput: J,
    renderOption: ie,
    renderTags: Q,
    selectOnFocus: H = !o.freeSolo,
    size: X = "medium",
    slots: se = {},
    slotProps: ye = {},
    value: he,
    ...le
  } = o, {
    getRootProps: ae,
    getInputProps: ce,
    getInputLabelProps: Se,
    getPopupIndicatorProps: $e,
    getClearProps: oe,
    getTagProps: be,
    getListboxProps: Ne,
    getOptionProps: We,
    value: Ue,
    dirty: vt,
    expanded: ut,
    id: Tt,
    popupOpen: je,
    focused: ft,
    focusedTag: Et,
    anchorEl: Le,
    setAnchorEl: Bt,
    inputValue: Lt,
    groupedOptions: Gt
  } = eF({
    ...o,
    componentName: "Autocomplete"
  }), vo = !x && !b && vt && !Me, hn = (!v || M === !0) && M !== !1, {
    onMouseDown: Sn
  } = ce(), {
    ref: _r,
    ...Jn
  } = Ne(), pi = _ || ((gt) => gt.label ?? gt), xn = {
    ...o,
    disablePortal: E,
    expanded: ut,
    focused: ft,
    fullWidth: I,
    getOptionLabel: pi,
    hasClearIcon: vo,
    hasPopupIcon: hn,
    inputFocused: Et === -1,
    popupOpen: je,
    size: X
  }, an = yF(xn), eo = {
    slots: {
      paper: De,
      popper: Ce,
      ...se
    },
    slotProps: {
      chip: c,
      listbox: Y,
      ...m,
      ...ye
    }
  }, [hi, ve] = ot("listbox", {
    elementType: OF,
    externalForwardedProps: eo,
    ownerState: xn,
    className: an.listbox,
    additionalProps: Jn,
    ref: _r
  }), [pe, _e] = ot("paper", {
    elementType: oi,
    externalForwardedProps: eo,
    ownerState: xn,
    className: an.paper
  }), [Ge, Ze] = ot("popper", {
    elementType: Ys,
    externalForwardedProps: eo,
    ownerState: xn,
    className: an.popper,
    additionalProps: {
      disablePortal: E,
      style: {
        width: Le ? Le.clientWidth : null
      },
      role: "presentation",
      anchorEl: Le,
      open: je
    }
  });
  let pt;
  if (ne && Ue.length > 0) {
    const gt = (xo) => ({
      className: an.tag,
      disabled: b,
      ...be(xo)
    });
    Q ? pt = Q(Ue, gt, xn) : pt = Ue.map((xo, _o) => {
      const {
        key: gi,
        ...af
      } = gt({
        index: _o
      });
      return /* @__PURE__ */ $(V1, {
        label: pi(xo),
        size: X,
        ...af,
        ...eo.slotProps.chip
      }, gi);
    });
  }
  if (U > -1 && Array.isArray(pt)) {
    const gt = pt.length - U;
    !ft && gt > 0 && (pt = pt.splice(0, U), pt.push(/* @__PURE__ */ $("span", {
      className: an.tag,
      children: k(gt)
    }, pt.length)));
  }
  const wn = j || ((gt) => /* @__PURE__ */ Te("li", {
    children: [/* @__PURE__ */ $($F, {
      className: an.groupLabel,
      ownerState: xn,
      component: "div",
      children: gt.group
    }), /* @__PURE__ */ $(IF, {
      className: an.groupUl,
      ownerState: xn,
      children: gt.children
    })]
  }, gt.key)), sf = ie || ((gt, xo) => {
    const {
      key: _o,
      ...gi
    } = gt;
    return /* @__PURE__ */ $("li", {
      ...gi,
      children: pi(xo)
    }, _o);
  }), Gl = (gt, xo) => {
    const _o = We({
      option: gt,
      index: xo
    });
    return sf({
      ..._o,
      className: an.option
    }, gt, {
      selected: _o["aria-selected"],
      index: xo,
      inputValue: Lt
    }, xn);
  }, Ui = eo.slotProps.clearIndicator, qi = eo.slotProps.popupIndicator;
  return /* @__PURE__ */ Te(P.Fragment, {
    children: [/* @__PURE__ */ $(bF, {
      ref: n,
      className: Re(an.root, u),
      ownerState: xn,
      ...ae(le),
      children: J({
        id: Tt,
        disabled: b,
        fullWidth: !0,
        size: X === "small" ? "small" : void 0,
        InputLabelProps: Se(),
        InputProps: {
          ref: Bt,
          className: an.inputRoot,
          startAdornment: pt,
          onMouseDown: (gt) => {
            gt.target === gt.currentTarget && Sn(gt);
          },
          ...(vo || hn) && {
            endAdornment: /* @__PURE__ */ Te(vF, {
              className: an.endAdornment,
              ownerState: xn,
              children: [vo ? /* @__PURE__ */ $(xF, {
                ...oe(),
                "aria-label": h,
                title: h,
                ownerState: xn,
                ...Ui,
                className: Re(an.clearIndicator, Ui == null ? void 0 : Ui.className),
                children: f
              }) : null, hn ? /* @__PURE__ */ $(wF, {
                ...$e(),
                disabled: b,
                "aria-label": je ? g : Ae,
                title: je ? g : Ae,
                ownerState: xn,
                ...qi,
                className: Re(an.popupIndicator, qi == null ? void 0 : qi.className),
                children: Be
              }) : null]
            })
          }
        },
        inputProps: {
          className: an.input,
          disabled: b,
          readOnly: Me,
          ...ce()
        }
      })
    }), Le ? /* @__PURE__ */ $(SF, {
      as: Ge,
      ...Ze,
      children: /* @__PURE__ */ Te(TF, {
        as: pe,
        ..._e,
        children: [K && Gt.length === 0 ? /* @__PURE__ */ $(EF, {
          className: an.loading,
          ownerState: xn,
          children: te
        }) : null, Gt.length === 0 && !v && !K ? /* @__PURE__ */ $(CF, {
          className: an.noOptions,
          ownerState: xn,
          role: "presentation",
          onMouseDown: (gt) => {
            gt.preventDefault();
          },
          children: W
        }) : null, Gt.length > 0 ? /* @__PURE__ */ $(hi, {
          as: q,
          ...ve,
          children: Gt.map((gt, xo) => L ? wn({
            key: gt.key,
            group: gt.group,
            children: gt.options.map((_o, gi) => Gl(_o, gt.index + gi))
          }) : Gl(gt, xo))
        }) : null]
      })
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (W1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the portion of the selected suggestion that the user hasn't typed,
   * known as the completion string, appears inline after the input cursor in the textbox.
   * The inline completion string is visually highlighted and has a selected state.
   * @default false
   */
  autoComplete: s.bool,
  /**
   * If `true`, the first option is automatically highlighted.
   * @default false
   */
  autoHighlight: s.bool,
  /**
   * If `true`, the selected option becomes the value of the input
   * when the Autocomplete loses focus unless the user chooses
   * a different option or changes the character string in the input.
   *
   * When using the `freeSolo` mode, the typed value will be the input value
   * if the Autocomplete loses focus without highlighting an option.
   * @default false
   */
  autoSelect: s.bool,
  /**
   * Control if the input should be blurred when an option is selected:
   *
   * - `false` the input is not blurred.
   * - `true` the input is always blurred.
   * - `touch` the input is blurred after a touch event.
   * - `mouse` the input is blurred after a mouse event.
   * @default false
   */
  blurOnSelect: s.oneOfType([s.oneOf(["mouse", "touch"]), s.bool]),
  /**
   * Props applied to the [`Chip`](https://mui.com/material-ui/api/chip/) element.
   * @deprecated Use `slotProps.chip` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ChipProps: s.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The icon to display in place of the default clear icon.
   * @default <ClearIcon fontSize="small" />
   */
  clearIcon: s.node,
  /**
   * If `true`, the input's text is cleared on blur if no value is selected.
   *
   * Set it to `true` if you want to help the user enter a new value.
   * Set it to `false` if you want to help the user resume their search.
   * @default !props.freeSolo
   */
  clearOnBlur: s.bool,
  /**
   * If `true`, clear all values when the user presses escape and the popup is closed.
   * @default false
   */
  clearOnEscape: s.bool,
  /**
   * Override the default text for the *clear* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Clear'
   */
  clearText: s.string,
  /**
   * Override the default text for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: s.string,
  /**
   * The props used for each slot inside.
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  componentsProps: s.shape({
    clearIndicator: s.object,
    paper: s.object,
    popper: s.object,
    popupIndicator: s.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   * @default props.multiple ? [] : null
   */
  defaultValue: jo(s.any, (e) => e.multiple && e.defaultValue !== void 0 && !Array.isArray(e.defaultValue) ? new Error(["MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.", `However, ${e.defaultValue} was provided.`].join(`
`)) : null),
  /**
   * If `true`, the input can't be cleared.
   * @default false
   */
  disableClearable: s.bool,
  /**
   * If `true`, the popup won't close when a value is selected.
   * @default false
   */
  disableCloseOnSelect: s.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: s.bool,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: s.bool,
  /**
   * If `true`, the list box in the popup will not wrap focus.
   * @default false
   */
  disableListWrap: s.bool,
  /**
   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: s.bool,
  /**
   * A function that determines the filtered options to be rendered on search.
   *
   * @default createFilterOptions()
   * @param {Value[]} options The options to render.
   * @param {object} state The state of the component.
   * @returns {Value[]}
   */
  filterOptions: s.func,
  /**
   * If `true`, hide the selected options from the list box.
   * @default false
   */
  filterSelectedOptions: s.bool,
  /**
   * Force the visibility display of the popup icon.
   * @default 'auto'
   */
  forcePopupIcon: s.oneOfType([s.oneOf(["auto"]), s.bool]),
  /**
   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.
   * @default false
   */
  freeSolo: s.bool,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: s.bool,
  /**
   * The label to display when the tags are truncated (`limitTags`).
   *
   * @param {number} more The number of truncated tags.
   * @returns {ReactNode}
   * @default (more) => `+${more}`
   */
  getLimitTagsText: s.func,
  /**
   * Used to determine the disabled state for a given option.
   *
   * @param {Value} option The option to test.
   * @returns {boolean}
   */
  getOptionDisabled: s.func,
  /**
   * Used to determine the key for a given option.
   * This can be useful when the labels of options are not unique (since labels are used as keys by default).
   *
   * @param {Value} option The option to get the key for.
   * @returns {string | number}
   */
  getOptionKey: s.func,
  /**
   * Used to determine the string value for a given option.
   * It's used to fill the input (and the list box options if `renderOption` is not provided).
   *
   * If used in free solo mode, it must accept both the type of the options and a string.
   *
   * @param {Value} option
   * @returns {string}
   * @default (option) => option.label ?? option
   */
  getOptionLabel: s.func,
  /**
   * If provided, the options will be grouped under the returned string.
   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.
   *
   * @param {Value} option The Autocomplete option.
   * @returns {string}
   */
  groupBy: s.func,
  /**
   * If `true`, the component handles the "Home" and "End" keys when the popup is open.
   * It should move focus to the first option and last option, respectively.
   * @default !props.freeSolo
   */
  handleHomeEndKeys: s.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide an id it will fall back to a randomly generated one.
   */
  id: s.string,
  /**
   * If `true`, the highlight can move to the input.
   * @default false
   */
  includeInputInList: s.bool,
  /**
   * The input value.
   */
  inputValue: s.string,
  /**
   * Used to determine if the option represents the given value.
   * Uses strict equality by default.
   * ⚠️ Both arguments need to be handled, an option can only match with one value.
   *
   * @param {Value} option The option to test.
   * @param {Value} value The value to test against.
   * @returns {boolean}
   */
  isOptionEqualToValue: s.func,
  /**
   * The maximum number of tags that will be visible when not focused.
   * Set `-1` to disable the limit.
   * @default -1
   */
  limitTags: ed,
  /**
   * The component used to render the listbox.
   * @default 'ul'
   * @deprecated Use `slotProps.listbox.component` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ListboxComponent: s.elementType,
  /**
   * Props applied to the Listbox element.
   * @deprecated Use `slotProps.listbox` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ListboxProps: s.object,
  /**
   * If `true`, the component is in a loading state.
   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, for example `options` are empty).
   * @default false
   */
  loading: s.bool,
  /**
   * Text to display when in a loading state.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Loading…'
   */
  loadingText: s.node,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: s.bool,
  /**
   * Text to display when there are no options.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'No options'
   */
  noOptionsText: s.node,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value|Value[]} value The new value of the component.
   * @param {string} reason One of "createOption", "selectOption", "removeOption", "blur" or "clear".
   * @param {string} [details]
   */
  onChange: s.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} reason Can be: `"toggleInput"`, `"escape"`, `"selectOption"`, `"removeOption"`, `"blur"`.
   */
  onClose: s.func,
  /**
   * Callback fired when the highlight option changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value} option The highlighted option.
   * @param {string} reason Can be: `"keyboard"`, `"mouse"`, `"touch"`.
   */
  onHighlightChange: s.func,
  /**
   * Callback fired when the input value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} value The new value of the text input.
   * @param {string} reason Can be: `"input"` (user input), `"reset"` (programmatic change), `"clear"`, `"blur"`, `"selectOption"`, `"removeOption"`
   */
  onInputChange: s.func,
  /**
   * @ignore
   */
  onKeyDown: s.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: s.func,
  /**
   * If `true`, the component is shown.
   */
  open: s.bool,
  /**
   * If `true`, the popup will open on input focus.
   * @default false
   */
  openOnFocus: s.bool,
  /**
   * Override the default text for the *open popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Open'
   */
  openText: s.string,
  /**
   * A list of options that will be shown in the Autocomplete.
   */
  options: s.array.isRequired,
  /**
   * The component used to render the body of the popup.
   * @default Paper
   * @deprecated Use `slots.paper` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PaperComponent: s.elementType,
  /**
   * The component used to position the popup.
   * @default Popper
   * @deprecated Use `slots.popper` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PopperComponent: s.elementType,
  /**
   * The icon to display in place of the default popup icon.
   * @default <ArrowDropDownIcon />
   */
  popupIcon: s.node,
  /**
   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.
   * @default false
   */
  readOnly: s.bool,
  /**
   * Render the group.
   *
   * @param {AutocompleteRenderGroupParams} params The group to render.
   * @returns {ReactNode}
   */
  renderGroup: s.func,
  /**
   * Render the input.
   *
   * @param {object} params
   * @returns {ReactNode}
   */
  renderInput: s.func.isRequired,
  /**
   * Render the option, use `getOptionLabel` by default.
   *
   * @param {object} props The props to apply on the li element.
   * @param {Value} option The option to render.
   * @param {object} state The state of each option.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderOption: s.func,
  /**
   * Render the selected value.
   *
   * @param {Value[]} value The `value` provided to the component.
   * @param {function} getTagProps A tag props getter.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderTags: s.func,
  /**
   * If `true`, the input's text is selected on focus.
   * It helps the user clear the selected value.
   * @default !props.freeSolo
   */
  selectOnFocus: s.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: s.oneOfType([s.oneOf(["small", "medium"]), s.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: s.shape({
    chip: s.oneOfType([s.func, s.object]),
    clearIndicator: s.oneOfType([s.func, s.object]),
    listbox: s.oneOfType([s.func, s.object]),
    paper: s.oneOfType([s.func, s.object]),
    popper: s.oneOfType([s.func, s.object]),
    popupIndicator: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: s.shape({
    listbox: s.elementType,
    paper: s.elementType,
    popper: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The value of the autocomplete.
   *
   * The value must have reference equality with the option in order to be selected.
   * You can customize the equality behavior with the `isOptionEqualToValue` prop.
   */
  value: jo(s.any, (e) => e.multiple && e.value !== void 0 && !Array.isArray(e.value) ? new Error(["MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.", `However, ${e.value} was provided.`].join(`
`)) : null)
});
const RF = (e) => {
  const {
    classes: t,
    disableUnderline: n
  } = e, r = rt({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, pF, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...r
  };
}, kF = Ee(bd, {
  shouldForwardProp: (e) => Dn(e) || e === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...gd(e, t), !n.disableUnderline && t.underline];
  }
})(qe(({
  theme: e
}) => {
  let n = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e.vars && (n = `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`), {
    position: "relative",
    variants: [{
      props: ({
        ownerState: o
      }) => o.formControl,
      style: {
        "label + &": {
          marginTop: 16
        }
      }
    }, {
      props: ({
        ownerState: o
      }) => !o.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${Vr.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${Vr.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${Vr.disabled}, .${Vr.error}):before`]: {
          borderBottom: `2px solid ${(e.vars || e).palette.text.primary}`,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            borderBottom: `1px solid ${n}`
          }
        },
        [`&.${Vr.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(Ut()).map(([o]) => ({
      props: {
        color: o,
        disableUnderline: !1
      },
      style: {
        "&::after": {
          borderBottom: `2px solid ${(e.vars || e).palette[o].main}`
        }
      }
    }))]
  };
})), PF = Ee(vd, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: yd
})({}), Hd = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiInput"
  }), {
    disableUnderline: r = !1,
    components: i = {},
    componentsProps: a,
    fullWidth: l = !1,
    inputComponent: c = "input",
    multiline: u = !1,
    slotProps: f,
    slots: d = {},
    type: p = "text",
    ...h
  } = o, g = RF(o), y = {
    root: {
      ownerState: {
        disableUnderline: r
      }
    }
  }, x = f ?? a ? Mn(f ?? a, y) : y, T = d.root ?? i.Root ?? kF, b = d.input ?? i.Input ?? PF;
  return /* @__PURE__ */ $(xd, {
    slots: {
      root: T,
      input: b
    },
    slotProps: x,
    fullWidth: l,
    inputComponent: c,
    multiline: u,
    ref: n,
    type: p,
    ...h,
    classes: g
  });
});
process.env.NODE_ENV !== "production" && (Hd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: s.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: s.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: s.oneOfType([s.oneOf(["primary", "secondary"]), s.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: s.shape({
    Input: s.elementType,
    Root: s.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: s.shape({
    input: s.object,
    root: s.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: s.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: s.bool,
  /**
   * If `true`, the `input` will not have an underline.
   * @default false
   */
  disableUnderline: s.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: s.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: s.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: s.bool,
  /**
   * The id of the `input` element.
   */
  id: s.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: s.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: s.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Qn,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: s.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: s.oneOfType([s.number, s.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: s.oneOfType([s.number, s.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: s.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: s.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: s.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: s.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: s.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: s.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: s.oneOfType([s.number, s.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: s.shape({
    input: s.object,
    root: s.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: s.shape({
    input: s.elementType,
    root: s.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: s.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: s.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: s.any
});
Hd.muiName = "Input";
const NF = (e) => {
  const {
    classes: t,
    disableUnderline: n,
    startAdornment: o,
    endAdornment: r,
    size: i,
    hiddenLabel: a,
    multiline: l
  } = e, c = {
    root: ["root", !n && "underline", o && "adornedStart", r && "adornedEnd", i === "small" && `size${fe(i)}`, a && "hiddenLabel", l && "multiline"],
    input: ["input"]
  }, u = rt(c, hF, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...u
  };
}, MF = Ee(bd, {
  shouldForwardProp: (e) => Dn(e) || e === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...gd(e, t), !n.disableUnderline && t.underline];
  }
})(qe(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = t ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", o = t ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", r = t ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", i = t ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return {
    position: "relative",
    backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : o,
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create("background-color", {
      duration: e.transitions.duration.shorter,
      easing: e.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.hoverBg : r,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : o
      }
    },
    [`&.${no.focused}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : o
    },
    [`&.${no.disabled}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.disabledBg : i
    },
    variants: [{
      props: ({
        ownerState: a
      }) => !a.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${no.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${no.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})` : n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${no.disabled}, .${no.error}):before`]: {
          borderBottom: `1px solid ${(e.vars || e).palette.text.primary}`
        },
        [`&.${no.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(Ut()).map(([a]) => {
      var l;
      return {
        props: {
          disableUnderline: !1,
          color: a
        },
        style: {
          "&::after": {
            borderBottom: `2px solid ${(l = (e.vars || e).palette[a]) == null ? void 0 : l.main}`
          }
        }
      };
    }), {
      props: ({
        ownerState: a
      }) => a.startAdornment,
      style: {
        paddingLeft: 12
      }
    }, {
      props: ({
        ownerState: a
      }) => a.endAdornment,
      style: {
        paddingRight: 12
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline,
      style: {
        padding: "25px 12px 8px"
      }
    }, {
      props: ({
        ownerState: a,
        size: l
      }) => a.multiline && l === "small",
      style: {
        paddingTop: 21,
        paddingBottom: 4
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline && a.hiddenLabel,
      style: {
        paddingTop: 16,
        paddingBottom: 17
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline && a.hiddenLabel && a.size === "small",
      style: {
        paddingTop: 8,
        paddingBottom: 9
      }
    }]
  };
})), _F = Ee(vd, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: yd
})(qe(({
  theme: e
}) => ({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12,
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      paddingTop: 21,
      paddingBottom: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel,
    style: {
      paddingTop: 16,
      paddingBottom: 17
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel && t.size === "small",
    style: {
      paddingTop: 8,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      paddingTop: 0,
      paddingBottom: 0,
      paddingLeft: 0,
      paddingRight: 0
    }
  }]
}))), Wd = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiFilledInput"
  }), {
    disableUnderline: r = !1,
    components: i = {},
    componentsProps: a,
    fullWidth: l = !1,
    hiddenLabel: c,
    // declare here to prevent spreading to DOM
    inputComponent: u = "input",
    multiline: f = !1,
    slotProps: d,
    slots: p = {},
    type: h = "text",
    ...g
  } = o, m = {
    ...o,
    disableUnderline: r,
    fullWidth: l,
    inputComponent: u,
    multiline: f,
    type: h
  }, y = NF(o), x = {
    root: {
      ownerState: m
    },
    input: {
      ownerState: m
    }
  }, T = d ?? a ? Mn(x, d ?? a) : x, b = p.root ?? i.Root ?? MF, w = p.input ?? i.Input ?? _F;
  return /* @__PURE__ */ $(xd, {
    slots: {
      root: b,
      input: w
    },
    slotProps: T,
    fullWidth: l,
    inputComponent: u,
    multiline: f,
    ref: n,
    type: h,
    ...g,
    classes: y
  });
});
process.env.NODE_ENV !== "production" && (Wd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: s.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: s.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: s.oneOfType([s.oneOf(["primary", "secondary"]), s.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: s.shape({
    Input: s.elementType,
    Root: s.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: s.shape({
    input: s.object,
    root: s.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: s.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: s.bool,
  /**
   * If `true`, the input will not have an underline.
   * @default false
   */
  disableUnderline: s.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: s.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: s.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: s.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: s.bool,
  /**
   * The id of the `input` element.
   */
  id: s.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: s.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: s.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Qn,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: s.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: s.oneOfType([s.number, s.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: s.oneOfType([s.number, s.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: s.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: s.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: s.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: s.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: s.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: s.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: s.oneOfType([s.number, s.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: s.shape({
    input: s.object,
    root: s.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: s.shape({
    input: s.elementType,
    root: s.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: s.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: s.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: s.any
});
Wd.muiName = "Input";
function AF(e) {
  return tt("MuiFormLabel", e);
}
const Fa = it("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]), DF = (e) => {
  const {
    classes: t,
    color: n,
    focused: o,
    disabled: r,
    error: i,
    filled: a,
    required: l
  } = e, c = {
    root: ["root", `color${fe(n)}`, r && "disabled", i && "error", a && "filled", o && "focused", l && "required"],
    asterisk: ["asterisk", i && "error"]
  };
  return rt(c, AF, t);
}, LF = Ee("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color === "secondary" && t.colorSecondary, n.filled && t.filled];
  }
})(qe(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.body1,
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  variants: [...Object.entries(e.palette).filter(Ut()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${Fa.focused}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    props: {},
    style: {
      [`&.${Fa.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      },
      [`&.${Fa.error}`]: {
        color: (e.vars || e).palette.error.main
      }
    }
  }]
}))), BF = Ee("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (e, t) => t.asterisk
})(qe(({
  theme: e
}) => ({
  [`&.${Fa.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}))), U1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiFormLabel"
  }), {
    children: r,
    className: i,
    color: a,
    component: l = "label",
    disabled: c,
    error: u,
    filled: f,
    focused: d,
    required: p,
    ...h
  } = o, g = li(), m = Zs({
    props: o,
    muiFormControl: g,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  }), y = {
    ...o,
    color: m.color || "primary",
    component: l,
    disabled: m.disabled,
    error: m.error,
    filled: m.filled,
    focused: m.focused,
    required: m.required
  }, x = DF(y);
  return /* @__PURE__ */ Te(LF, {
    as: l,
    ownerState: y,
    className: Re(x.root, i),
    ref: n,
    ...h,
    children: [r, m.required && /* @__PURE__ */ Te(BF, {
      ownerState: y,
      "aria-hidden": !0,
      className: x.asterisk,
      children: [" ", "*"]
    })]
  });
});
process.env.NODE_ENV !== "production" && (U1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: s.oneOfType([s.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), s.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: s.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: s.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: s.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: s.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: s.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object])
});
function FF(e) {
  return tt("MuiInputLabel", e);
}
it("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]);
const zF = (e) => {
  const {
    classes: t,
    formControl: n,
    size: o,
    shrink: r,
    disableAnimation: i,
    variant: a,
    required: l
  } = e, c = {
    root: ["root", n && "formControl", !i && "animated", r && "shrink", o && o !== "medium" && `size${fe(o)}`, a],
    asterisk: [l && "asterisk"]
  }, u = rt(c, FF, t);
  return {
    ...t,
    // forward the focused, disabled, etc. classes to the FormLabel
    ...u
  };
}, jF = Ee(U1, {
  shouldForwardProp: (e) => Dn(e) || e === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${Fa.asterisk}`]: t.asterisk
    }, t.root, n.formControl && t.formControl, n.size === "small" && t.sizeSmall, n.shrink && t.shrink, !n.disableAnimation && t.animated, n.focused && t.focused, t[n.variant]];
  }
})(qe(({
  theme: e
}) => ({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%",
  variants: [{
    props: ({
      ownerState: t
    }) => t.formControl,
    style: {
      position: "absolute",
      left: 0,
      top: 0,
      // slight alteration to spec spacing to match visual spec result
      transform: "translate(0, 20px) scale(1)"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      // Compensation for the `Input.inputSizeSmall` style.
      transform: "translate(0, 17px) scale(1)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.shrink,
    style: {
      transform: "translate(0, -1.5px) scale(0.75)",
      transformOrigin: "top left",
      maxWidth: "133%"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableAnimation,
    style: {
      transition: e.transitions.create(["color", "transform", "max-width"], {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      // Chrome's autofill feature gives the input field a yellow background.
      // Since the input field is behind the label in the HTML tree,
      // the input field is drawn last and hides the label with an opaque background color.
      // zIndex: 1 will raise the label above opaque background-colors of input.
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(12px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "filled",
      size: "small"
    },
    style: {
      transform: "translate(12px, 13px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "filled" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      transform: "translate(12px, 7px) scale(0.75)",
      maxWidth: "calc(133% - 24px)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n,
      size: o
    }) => t === "filled" && n.shrink && o === "small",
    style: {
      transform: "translate(12px, 4px) scale(0.75)"
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      // see comment above on filled.zIndex
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(14px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "outlined",
      size: "small"
    },
    style: {
      transform: "translate(14px, 9px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "outlined" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      // Theoretically, we should have (8+5)*2/0.75 = 34px
      // but it feels a better when it bleeds a bit on the left, so 32px.
      maxWidth: "calc(133% - 32px)",
      transform: "translate(14px, -9px) scale(0.75)"
    }
  }]
}))), q1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    name: "MuiInputLabel",
    props: t
  }), {
    disableAnimation: r = !1,
    margin: i,
    shrink: a,
    variant: l,
    className: c,
    ...u
  } = o, f = li();
  let d = a;
  typeof d > "u" && f && (d = f.filled || f.focused || f.adornedStart);
  const p = Zs({
    props: o,
    muiFormControl: f,
    states: ["size", "variant", "required", "focused"]
  }), h = {
    ...o,
    disableAnimation: r,
    formControl: f,
    shrink: d,
    size: p.size,
    variant: p.variant,
    required: p.required,
    focused: p.focused
  }, g = zF(h);
  return /* @__PURE__ */ $(jF, {
    "data-shrink": d,
    ref: n,
    className: Re(g.root, c),
    ...u,
    ownerState: h,
    classes: g
  });
});
process.env.NODE_ENV !== "production" && (q1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: s.oneOfType([s.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), s.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: s.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: s.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: s.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: s.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: s.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: s.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: s.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: s.oneOfType([s.oneOf(["medium", "small"]), s.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The variant to use.
   */
  variant: s.oneOf(["filled", "outlined", "standard"])
});
function VF(e) {
  return tt("MuiFormControl", e);
}
it("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]);
const HF = (e) => {
  const {
    classes: t,
    margin: n,
    fullWidth: o
  } = e, r = {
    root: ["root", n !== "none" && `margin${fe(n)}`, o && "fullWidth"]
  };
  return rt(r, VF, t);
}, WF = Ee("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`margin${fe(n.margin)}`], n.fullWidth && t.fullWidth];
  }
})({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top",
  // Fix alignment issue on Safari.
  variants: [{
    props: {
      margin: "normal"
    },
    style: {
      marginTop: 16,
      marginBottom: 8
    }
  }, {
    props: {
      margin: "dense"
    },
    style: {
      marginTop: 8,
      marginBottom: 4
    }
  }, {
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }]
}), K1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiFormControl"
  }), {
    children: r,
    className: i,
    color: a = "primary",
    component: l = "div",
    disabled: c = !1,
    error: u = !1,
    focused: f,
    fullWidth: d = !1,
    hiddenLabel: p = !1,
    margin: h = "none",
    required: g = !1,
    size: m = "medium",
    variant: y = "outlined",
    ...x
  } = o, T = {
    ...o,
    color: a,
    component: l,
    disabled: c,
    error: u,
    fullWidth: d,
    hiddenLabel: p,
    margin: h,
    required: g,
    size: m,
    variant: y
  }, b = HF(T), [w, S] = P.useState(() => {
    let N = !1;
    return r && P.Children.forEach(r, (L) => {
      if (!bf(L, ["Input", "Select"]))
        return;
      const F = bf(L, ["Select"]) ? L.props.input : L;
      F && r2(F.props) && (N = !0);
    }), N;
  }), [E, C] = P.useState(() => {
    let N = !1;
    return r && P.Children.forEach(r, (L) => {
      bf(L, ["Input", "Select"]) && (pu(L.props, !0) || pu(L.props.inputProps, !0)) && (N = !0);
    }), N;
  }), [R, M] = P.useState(!1);
  c && R && M(!1);
  const v = f !== void 0 && !c ? f : R;
  let I;
  const k = P.useRef(!1);
  process.env.NODE_ENV !== "production" && (I = () => (k.current && console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join(`
`)), k.current = !0, () => {
    k.current = !1;
  }));
  const A = P.useCallback(() => {
    C(!0);
  }, []), O = P.useCallback(() => {
    C(!1);
  }, []), _ = P.useMemo(() => ({
    adornedStart: w,
    setAdornedStart: S,
    color: a,
    disabled: c,
    error: u,
    filled: E,
    focused: v,
    fullWidth: d,
    hiddenLabel: p,
    size: m,
    onBlur: () => {
      M(!1);
    },
    onFocus: () => {
      M(!0);
    },
    onEmpty: O,
    onFilled: A,
    registerEffect: I,
    required: g,
    variant: y
  }), [w, a, c, u, E, v, d, p, I, O, A, g, m, y]);
  return /* @__PURE__ */ $(pd.Provider, {
    value: _,
    children: /* @__PURE__ */ $(WF, {
      as: l,
      ownerState: T,
      className: Re(b.root, i),
      ref: n,
      ...x,
      children: r
    })
  });
});
process.env.NODE_ENV !== "production" && (K1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: s.oneOfType([s.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), s.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: s.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: s.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: s.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: s.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: s.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: s.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: s.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: s.oneOfType([s.oneOf(["medium", "small"]), s.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: s.oneOf(["filled", "outlined", "standard"])
});
function UF(e) {
  return tt("MuiFormHelperText", e);
}
const h0 = it("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]);
var m0;
const qF = (e) => {
  const {
    classes: t,
    contained: n,
    size: o,
    disabled: r,
    error: i,
    filled: a,
    focused: l,
    required: c
  } = e, u = {
    root: ["root", r && "disabled", i && "error", o && `size${fe(o)}`, n && "contained", l && "focused", a && "filled", c && "required"]
  };
  return rt(u, UF, t);
}, KF = Ee("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size && t[`size${fe(n.size)}`], n.contained && t.contained, n.filled && t.filled];
  }
})(qe(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.caption,
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${h0.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${h0.error}`]: {
    color: (e.vars || e).palette.error.main
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginTop: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.contained,
    style: {
      marginLeft: 14,
      marginRight: 14
    }
  }]
}))), Y1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiFormHelperText"
  }), {
    children: r,
    className: i,
    component: a = "p",
    disabled: l,
    error: c,
    filled: u,
    focused: f,
    margin: d,
    required: p,
    variant: h,
    ...g
  } = o, m = li(), y = Zs({
    props: o,
    muiFormControl: m,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  }), x = {
    ...o,
    component: a,
    contained: y.variant === "filled" || y.variant === "outlined",
    variant: y.variant,
    size: y.size,
    disabled: y.disabled,
    error: y.error,
    filled: y.filled,
    focused: y.focused,
    required: y.required
  };
  delete x.ownerState;
  const T = qF(x);
  return /* @__PURE__ */ $(KF, {
    as: a,
    className: Re(T.root, i),
    ref: n,
    ...g,
    ownerState: x,
    children: r === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      m0 || (m0 = /* @__PURE__ */ $("span", {
        className: "notranslate",
        "aria-hidden": !0,
        children: "​"
      }))
    ) : r
  });
});
process.env.NODE_ENV !== "production" && (Y1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: s.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: s.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: s.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: s.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: s.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: s.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The variant to use.
   */
  variant: s.oneOfType([s.oneOf(["filled", "outlined", "standard"]), s.string])
});
const G1 = /* @__PURE__ */ P.createContext({});
process.env.NODE_ENV !== "production" && (G1.displayName = "ListContext");
function YF(e) {
  return tt("MuiList", e);
}
it("MuiList", ["root", "padding", "dense", "subheader"]);
const GF = (e) => {
  const {
    classes: t,
    disablePadding: n,
    dense: o,
    subheader: r
  } = e;
  return rt({
    root: ["root", !n && "padding", o && "dense", r && "subheader"]
  }, YF, t);
}, XF = Ee("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.disablePadding && t.padding, n.dense && t.dense, n.subheader && t.subheader];
  }
})({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative",
  variants: [{
    props: ({
      ownerState: e
    }) => !e.disablePadding,
    style: {
      paddingTop: 8,
      paddingBottom: 8
    }
  }, {
    props: ({
      ownerState: e
    }) => e.subheader,
    style: {
      paddingTop: 0
    }
  }]
}), X1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiList"
  }), {
    children: r,
    className: i,
    component: a = "ul",
    dense: l = !1,
    disablePadding: c = !1,
    subheader: u,
    ...f
  } = o, d = P.useMemo(() => ({
    dense: l
  }), [l]), p = {
    ...o,
    component: a,
    dense: l,
    disablePadding: c
  }, h = GF(p);
  return /* @__PURE__ */ $(G1.Provider, {
    value: d,
    children: /* @__PURE__ */ Te(XF, {
      as: a,
      className: Re(h.root, i),
      ref: n,
      ownerState: p,
      ...f,
      children: [u, r]
    })
  });
});
process.env.NODE_ENV !== "production" && (X1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: s.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: s.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: s.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: s.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object])
});
function Vf(e, t, n) {
  return e === t ? e.firstChild : t && t.nextElementSibling ? t.nextElementSibling : n ? null : e.firstChild;
}
function g0(e, t, n) {
  return e === t ? n ? e.firstChild : e.lastChild : t && t.previousElementSibling ? t.previousElementSibling : n ? null : e.lastChild;
}
function Z1(e, t) {
  if (t === void 0)
    return !0;
  let n = e.innerText;
  return n === void 0 && (n = e.textContent), n = n.trim().toLowerCase(), n.length === 0 ? !1 : t.repeating ? n[0] === t.keys[0] : n.startsWith(t.keys.join(""));
}
function da(e, t, n, o, r, i) {
  let a = !1, l = r(e, t, t ? n : !1);
  for (; l; ) {
    if (l === e.firstChild) {
      if (a)
        return !1;
      a = !0;
    }
    const c = o ? !1 : l.disabled || l.getAttribute("aria-disabled") === "true";
    if (!l.hasAttribute("tabindex") || !Z1(l, i) || c)
      l = r(e, l, n);
    else
      return l.focus(), !0;
  }
  return !1;
}
const Q1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: o,
    autoFocus: r = !1,
    autoFocusItem: i = !1,
    children: a,
    className: l,
    disabledItemsFocusable: c = !1,
    disableListWrap: u = !1,
    onKeyDown: f,
    variant: d = "selectedMenu",
    ...p
  } = t, h = P.useRef(null), g = P.useRef({
    keys: [],
    repeating: !0,
    previousKeyMatched: !0,
    lastTime: null
  });
  zo(() => {
    r && h.current.focus();
  }, [r]), P.useImperativeHandle(o, () => ({
    adjustStyleForScrollbar: (b, {
      direction: w
    }) => {
      const S = !h.current.style.width;
      if (b.clientHeight < h.current.clientHeight && S) {
        const E = `${Fx(Vo(b))}px`;
        h.current.style[w === "rtl" ? "paddingLeft" : "paddingRight"] = E, h.current.style.width = `calc(100% + ${E})`;
      }
      return h.current;
    }
  }), []);
  const m = (b) => {
    const w = h.current, S = b.key;
    if (b.ctrlKey || b.metaKey || b.altKey) {
      f && f(b);
      return;
    }
    const C = _n(w).activeElement;
    if (S === "ArrowDown")
      b.preventDefault(), da(w, C, u, c, Vf);
    else if (S === "ArrowUp")
      b.preventDefault(), da(w, C, u, c, g0);
    else if (S === "Home")
      b.preventDefault(), da(w, null, u, c, Vf);
    else if (S === "End")
      b.preventDefault(), da(w, null, u, c, g0);
    else if (S.length === 1) {
      const R = g.current, M = S.toLowerCase(), v = performance.now();
      R.keys.length > 0 && (v - R.lastTime > 500 ? (R.keys = [], R.repeating = !0, R.previousKeyMatched = !0) : R.repeating && M !== R.keys[0] && (R.repeating = !1)), R.lastTime = v, R.keys.push(M);
      const I = C && !R.repeating && Z1(C, R);
      R.previousKeyMatched && (I || da(w, C, !1, c, Vf, R)) ? b.preventDefault() : R.previousKeyMatched = !1;
    }
    f && f(b);
  }, y = un(h, n);
  let x = -1;
  P.Children.forEach(a, (b, w) => {
    if (!/* @__PURE__ */ P.isValidElement(b)) {
      x === w && (x += 1, x >= a.length && (x = -1));
      return;
    }
    process.env.NODE_ENV !== "production" && Xn.isFragment(b) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), b.props.disabled || (d === "selectedMenu" && b.props.selected || x === -1) && (x = w), x === w && (b.props.disabled || b.props.muiSkipListHighlight || b.type.muiSkipListHighlight) && (x += 1, x >= a.length && (x = -1));
  });
  const T = P.Children.map(a, (b, w) => {
    if (w === x) {
      const S = {};
      return i && (S.autoFocus = !0), b.props.tabIndex === void 0 && d === "selectedMenu" && (S.tabIndex = 0), /* @__PURE__ */ P.cloneElement(b, S);
    }
    return b;
  });
  return /* @__PURE__ */ $(X1, {
    role: "menu",
    ref: y,
    className: l,
    onKeyDown: m,
    tabIndex: r ? 0 : -1,
    ...p,
    children: T
  });
});
process.env.NODE_ENV !== "production" && (Q1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: s.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: s.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: s.node,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: s.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: s.bool,
  /**
   * @ignore
   */
  onKeyDown: s.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: s.oneOf(["menu", "selectedMenu"])
});
function ZF(e) {
  return tt("MuiMenu", e);
}
it("MuiMenu", ["root", "paper", "list"]);
const QF = {
  vertical: "top",
  horizontal: "right"
}, JF = {
  vertical: "top",
  horizontal: "left"
}, ez = (e) => {
  const {
    classes: t
  } = e;
  return rt({
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  }, ZF, t);
}, tz = Ee(Om, {
  shouldForwardProp: (e) => Dn(e) || e === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), nz = Ee(bS, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}), oz = Ee(Q1, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (e, t) => t.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), J1 = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiMenu"
  }), {
    autoFocus: r = !0,
    children: i,
    className: a,
    disableAutoFocusItem: l = !1,
    MenuListProps: c = {},
    onClose: u,
    open: f,
    PaperProps: d = {},
    PopoverClasses: p,
    transitionDuration: h = "auto",
    TransitionProps: {
      onEntering: g,
      ...m
    } = {},
    variant: y = "selectedMenu",
    slots: x = {},
    slotProps: T = {},
    ...b
  } = o, w = El(), S = {
    ...o,
    autoFocus: r,
    disableAutoFocusItem: l,
    MenuListProps: c,
    onEntering: g,
    PaperProps: d,
    transitionDuration: h,
    TransitionProps: m,
    variant: y
  }, E = ez(S), C = r && !l && f, R = P.useRef(null), M = (D, B) => {
    R.current && R.current.adjustStyleForScrollbar(D, {
      direction: w ? "rtl" : "ltr"
    }), g && g(D, B);
  }, v = (D) => {
    D.key === "Tab" && (D.preventDefault(), u && u(D, "tabKeyDown"));
  };
  let I = -1;
  P.Children.map(i, (D, B) => {
    /* @__PURE__ */ P.isValidElement(D) && (process.env.NODE_ENV !== "production" && Xn.isFragment(D) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), D.props.disabled || (y === "selectedMenu" && D.props.selected || I === -1) && (I = B));
  });
  const k = {
    slots: x,
    slotProps: {
      list: c,
      transition: m,
      paper: d,
      ...T
    }
  }, A = eu({
    elementType: x.root,
    externalSlotProps: T.root,
    ownerState: S,
    className: [E.root, a]
  }), [O, _] = ot("paper", {
    className: E.paper,
    elementType: nz,
    externalForwardedProps: k,
    shouldForwardComponentProp: !0,
    ownerState: S
  }), [N, L] = ot("list", {
    className: Re(E.list, c.className),
    elementType: oz,
    shouldForwardComponentProp: !0,
    externalForwardedProps: k,
    getSlotProps: (D) => ({
      ...D,
      onKeyDown: (B) => {
        var z;
        v(B), (z = D.onKeyDown) == null || z.call(D, B);
      }
    }),
    ownerState: S
  }), F = typeof k.slotProps.transition == "function" ? k.slotProps.transition(S) : k.slotProps.transition;
  return /* @__PURE__ */ $(tz, {
    onClose: u,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: w ? "right" : "left"
    },
    transformOrigin: w ? QF : JF,
    slots: {
      root: x.root,
      paper: O,
      backdrop: x.backdrop,
      ...x.transition && {
        // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover
        transition: x.transition
      }
    },
    slotProps: {
      root: A,
      paper: _,
      backdrop: typeof T.backdrop == "function" ? T.backdrop(S) : T.backdrop,
      transition: {
        ...F,
        onEntering: (...D) => {
          var B;
          M(...D), (B = F == null ? void 0 : F.onEntering) == null || B.call(F, ...D);
        }
      }
    },
    open: f,
    ref: n,
    transitionDuration: h,
    ownerState: S,
    ...b,
    classes: p,
    children: /* @__PURE__ */ $(N, {
      actions: R,
      autoFocus: r && (I === -1 || l),
      autoFocusItem: C,
      variant: y,
      ...L,
      children: i
    })
  });
});
process.env.NODE_ENV !== "production" && (J1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: s.oneOfType([cr, s.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: s.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: s.bool,
  /**
   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.
   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  MenuListProps: s.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: s.func,
  /**
   * If `true`, the component is shown.
   */
  open: s.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: s.object,
  /**
   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.
   */
  PopoverClasses: s.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: s.shape({
    backdrop: s.oneOfType([s.func, s.object]),
    list: s.oneOfType([s.func, s.object]),
    paper: s.oneOfType([s.func, s.object]),
    root: s.oneOfType([s.func, s.object]),
    transition: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: s.shape({
    backdrop: s.elementType,
    list: s.elementType,
    paper: s.elementType,
    root: s.elementType,
    transition: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: s.oneOfType([s.oneOf(["auto"]), s.number, s.shape({
    appear: s.number,
    enter: s.number,
    exit: s.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: s.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: s.oneOf(["menu", "selectedMenu"])
});
function rz(e) {
  return tt("MuiNativeSelect", e);
}
const Wm = it("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), iz = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: o,
    multiple: r,
    open: i,
    error: a
  } = e, l = {
    select: ["select", n, o && "disabled", r && "multiple", a && "error"],
    icon: ["icon", `icon${fe(n)}`, i && "iconOpen", o && "disabled"]
  };
  return rt(l, rz, t);
}, eT = Ee("select")(({
  theme: e
}) => ({
  // Reset
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  // Reset
  borderRadius: 0,
  cursor: "pointer",
  "&:focus": {
    // Reset Chrome style
    borderRadius: 0
  },
  [`&.${Wm.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (e.vars || e).palette.background.paper
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.variant !== "filled" && t.variant !== "outlined",
    style: {
      // Bump specificity to allow extending custom inputs
      "&&&": {
        paddingRight: 24,
        minWidth: 16
        // So it doesn't collapse.
      }
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      "&&&": {
        paddingRight: 32
      }
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius,
      "&:focus": {
        borderRadius: (e.vars || e).shape.borderRadius
        // Reset the reset for Chrome style
      },
      "&&&": {
        paddingRight: 32
      }
    }
  }]
})), sz = Ee(eT, {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: Dn,
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.select, t[n.variant], n.error && t.error, {
      [`&.${Wm.multiple}`]: t.multiple
    }];
  }
})({}), tT = Ee("svg")(({
  theme: e
}) => ({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  // Center vertically, height is 1em
  top: "calc(50% - .5em)",
  // Don't block pointer events on the select under the icon.
  pointerEvents: "none",
  color: (e.vars || e).palette.action.active,
  [`&.${Wm.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.open,
    style: {
      transform: "rotate(180deg)"
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      right: 7
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      right: 7
    }
  }]
})), az = Ee(tT, {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${fe(n.variant)}`], n.open && t.iconOpen];
  }
})({}), nT = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const {
    className: o,
    disabled: r,
    error: i,
    IconComponent: a,
    inputRef: l,
    variant: c = "standard",
    ...u
  } = t, f = {
    ...t,
    disabled: r,
    variant: c,
    error: i
  }, d = iz(f);
  return /* @__PURE__ */ Te(P.Fragment, {
    children: [/* @__PURE__ */ $(sz, {
      ownerState: f,
      className: Re(d.select, o),
      disabled: r,
      ref: l || n,
      ...u
    }), t.multiple ? null : /* @__PURE__ */ $(az, {
      as: a,
      ownerState: f,
      className: d.icon
    })]
  });
});
process.env.NODE_ENV !== "production" && (nT.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * The CSS class name of the select element.
   */
  className: s.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: s.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: s.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: s.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: Qn,
  /**
   * @ignore
   */
  multiple: s.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: s.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: s.func,
  /**
   * The input value.
   */
  value: s.any,
  /**
   * The variant to use.
   */
  variant: s.oneOf(["standard", "outlined", "filled"])
});
function oT(e) {
  return tt("MuiSelect", e);
}
const fa = it("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]);
var y0;
const lz = Ee(eT, {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [
      // Win specificity over the input base
      {
        [`&.${fa.select}`]: t.select
      },
      {
        [`&.${fa.select}`]: t[n.variant]
      },
      {
        [`&.${fa.error}`]: t.error
      },
      {
        [`&.${fa.multiple}`]: t.multiple
      }
    ];
  }
})({
  // Win specificity over the input base
  [`&.${fa.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
}), cz = Ee(tT, {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${fe(n.variant)}`], n.open && t.iconOpen];
  }
})({}), uz = Ee("input", {
  shouldForwardProp: (e) => rw(e) && e !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (e, t) => t.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function b0(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
function dz(e) {
  return e == null || typeof e == "string" && !e.trim();
}
const fz = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: o,
    multiple: r,
    open: i,
    error: a
  } = e, l = {
    select: ["select", n, o && "disabled", r && "multiple", a && "error"],
    icon: ["icon", `icon${fe(n)}`, i && "iconOpen", o && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return rt(l, oT, t);
}, rT = /* @__PURE__ */ P.forwardRef(function(t, n) {
  var $e;
  const {
    "aria-describedby": o,
    "aria-label": r,
    autoFocus: i,
    autoWidth: a,
    children: l,
    className: c,
    defaultOpen: u,
    defaultValue: f,
    disabled: d,
    displayEmpty: p,
    error: h = !1,
    IconComponent: g,
    inputRef: m,
    labelId: y,
    MenuProps: x = {},
    multiple: T,
    name: b,
    onBlur: w,
    onChange: S,
    onClose: E,
    onFocus: C,
    onOpen: R,
    open: M,
    readOnly: v,
    renderValue: I,
    required: k,
    SelectDisplayProps: A = {},
    tabIndex: O,
    // catching `type` from Input which makes no sense for SelectInput
    type: _,
    value: N,
    variant: L = "standard",
    ...F
  } = t, [D, B] = $i({
    controlled: N,
    default: f,
    name: "Select"
  }), [z, U] = $i({
    controlled: M,
    default: u,
    name: "Select"
  }), q = P.useRef(null), Y = P.useRef(null), [K, te] = P.useState(null), {
    current: ne
  } = P.useRef(M != null), [W, ee] = P.useState(), G = un(n, m), re = P.useCallback((oe) => {
    Y.current = oe, oe && te(oe);
  }, []), V = K == null ? void 0 : K.parentNode;
  P.useImperativeHandle(G, () => ({
    focus: () => {
      Y.current.focus();
    },
    node: q.current,
    value: D
  }), [D]), P.useEffect(() => {
    u && z && K && !ne && (ee(a ? null : V.clientWidth), Y.current.focus());
  }, [K, a]), P.useEffect(() => {
    i && Y.current.focus();
  }, [i]), P.useEffect(() => {
    if (!y)
      return;
    const oe = _n(Y.current).getElementById(y);
    if (oe) {
      const be = () => {
        getSelection().isCollapsed && Y.current.focus();
      };
      return oe.addEventListener("click", be), () => {
        oe.removeEventListener("click", be);
      };
    }
  }, [y]);
  const de = (oe, be) => {
    oe ? R && R(be) : E && E(be), ne || (ee(a ? null : V.clientWidth), U(oe));
  }, ue = (oe) => {
    oe.button === 0 && (oe.preventDefault(), Y.current.focus(), de(!0, oe));
  }, xe = (oe) => {
    de(!1, oe);
  }, Ae = P.Children.toArray(l), we = (oe) => {
    const be = Ae.find((Ne) => Ne.props.value === oe.target.value);
    be !== void 0 && (B(be.props.value), S && S(oe, be));
  }, De = (oe) => (be) => {
    let Ne;
    if (be.currentTarget.hasAttribute("tabindex")) {
      if (T) {
        Ne = Array.isArray(D) ? D.slice() : [];
        const We = D.indexOf(oe.props.value);
        We === -1 ? Ne.push(oe.props.value) : Ne.splice(We, 1);
      } else
        Ne = oe.props.value;
      if (oe.props.onClick && oe.props.onClick(be), D !== Ne && (B(Ne), S)) {
        const We = be.nativeEvent || be, Ue = new We.constructor(We.type, We);
        Object.defineProperty(Ue, "target", {
          writable: !0,
          value: {
            value: Ne,
            name: b
          }
        }), S(Ue, oe);
      }
      T || de(!1, be);
    }
  }, Ce = (oe) => {
    v || [
      " ",
      "ArrowUp",
      "ArrowDown",
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
      "Enter"
    ].includes(oe.key) && (oe.preventDefault(), de(!0, oe));
  }, Be = K !== null && z, Me = (oe) => {
    !Be && w && (Object.defineProperty(oe, "target", {
      writable: !0,
      value: {
        value: D,
        name: b
      }
    }), w(oe));
  };
  delete F["aria-invalid"];
  let j, J;
  const ie = [];
  let Q = !1, H = !1;
  (pu({
    value: D
  }) || p) && (I ? j = I(D) : Q = !0);
  const X = Ae.map((oe) => {
    if (!/* @__PURE__ */ P.isValidElement(oe))
      return null;
    process.env.NODE_ENV !== "production" && Xn.isFragment(oe) && console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    let be;
    if (T) {
      if (!Array.isArray(D))
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `value` prop must be an array when using the `Select` component with `multiple`." : lr(2));
      be = D.some((Ne) => b0(Ne, oe.props.value)), be && Q && ie.push(oe.props.children);
    } else
      be = b0(D, oe.props.value), be && Q && (J = oe.props.children);
    return be && (H = !0), /* @__PURE__ */ P.cloneElement(oe, {
      "aria-selected": be ? "true" : "false",
      onClick: De(oe),
      onKeyUp: (Ne) => {
        Ne.key === " " && Ne.preventDefault(), oe.props.onKeyUp && oe.props.onKeyUp(Ne);
      },
      role: "option",
      selected: be,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": oe.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  process.env.NODE_ENV !== "production" && P.useEffect(() => {
    if (!H && !T && D !== "") {
      const oe = Ae.map((be) => be.props.value);
      console.warn([`MUI: You have provided an out-of-range value \`${D}\` for the select ${b ? `(name="${b}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${oe.filter((be) => be != null).map((be) => `\`${be}\``).join(", ") || '""'}.`].join(`
`));
    }
  }, [H, Ae, T, b, D]), Q && (T ? ie.length === 0 ? j = null : j = ie.reduce((oe, be, Ne) => (oe.push(be), Ne < ie.length - 1 && oe.push(", "), oe), []) : j = J);
  let se = W;
  !a && ne && K && (se = V.clientWidth);
  let ye;
  typeof O < "u" ? ye = O : ye = d ? null : 0;
  const he = A.id || (b ? `mui-component-select-${b}` : void 0), le = {
    ...t,
    variant: L,
    value: D,
    open: Be,
    error: h
  }, ae = fz(le), ce = {
    ...x.PaperProps,
    ...($e = x.slotProps) == null ? void 0 : $e.paper
  }, Se = Bi();
  return /* @__PURE__ */ Te(P.Fragment, {
    children: [/* @__PURE__ */ $(lz, {
      as: "div",
      ref: re,
      tabIndex: ye,
      role: "combobox",
      "aria-controls": Be ? Se : void 0,
      "aria-disabled": d ? "true" : void 0,
      "aria-expanded": Be ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": r,
      "aria-labelledby": [y, he].filter(Boolean).join(" ") || void 0,
      "aria-describedby": o,
      "aria-required": k ? "true" : void 0,
      "aria-invalid": h ? "true" : void 0,
      onKeyDown: Ce,
      onMouseDown: d || v ? null : ue,
      onBlur: Me,
      onFocus: C,
      ...A,
      ownerState: le,
      className: Re(A.className, ae.select, c),
      id: he,
      children: dz(j) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        y0 || (y0 = /* @__PURE__ */ $("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      ) : j
    }), /* @__PURE__ */ $(uz, {
      "aria-invalid": h,
      value: Array.isArray(D) ? D.join(",") : D,
      name: b,
      ref: q,
      "aria-hidden": !0,
      onChange: we,
      tabIndex: -1,
      disabled: d,
      className: ae.nativeInput,
      autoFocus: i,
      required: k,
      ...F,
      ownerState: le
    }), /* @__PURE__ */ $(cz, {
      as: g,
      className: ae.icon,
      ownerState: le
    }), /* @__PURE__ */ $(J1, {
      id: `menu-${b || ""}`,
      anchorEl: V,
      open: Be,
      onClose: xe,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      },
      ...x,
      slotProps: {
        ...x.slotProps,
        list: {
          "aria-labelledby": y,
          role: "listbox",
          "aria-multiselectable": T ? "true" : void 0,
          disableListWrap: !0,
          id: Se,
          ...x.MenuListProps
        },
        paper: {
          ...ce,
          style: {
            minWidth: se,
            ...ce != null ? ce.style : null
          }
        }
      },
      children: X
    })]
  });
});
process.env.NODE_ENV !== "production" && (rT.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": s.string,
  /**
   * @ignore
   */
  "aria-label": s.string,
  /**
   * @ignore
   */
  autoFocus: s.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: s.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * The CSS class name of the select element.
   */
  className: s.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: s.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: s.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: s.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: s.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: s.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: s.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: Qn,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: s.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: s.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: s.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: s.string,
  /**
   * @ignore
   */
  onBlur: s.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: s.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: s.func,
  /**
   * @ignore
   */
  onFocus: s.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: s.func,
  /**
   * If `true`, the component is shown.
   */
  open: s.bool,
  /**
   * @ignore
   */
  readOnly: s.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: s.func,
  /**
   * If `true`, the component is required.
   */
  required: s.bool,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: s.object,
  /**
   * @ignore
   */
  tabIndex: s.oneOfType([s.number, s.string]),
  /**
   * @ignore
   */
  type: s.any,
  /**
   * The input value.
   */
  value: s.any,
  /**
   * The variant to use.
   */
  variant: s.oneOf(["standard", "outlined", "filled"])
});
const pz = (e) => {
  const {
    classes: t
  } = e, o = rt({
    root: ["root"]
  }, oT, t);
  return {
    ...t,
    ...o
  };
}, Um = {
  name: "MuiSelect",
  overridesResolver: (e, t) => t.root,
  shouldForwardProp: (e) => Dn(e) && e !== "variant",
  slot: "Root"
}, hz = Ee(Hd, Um)(""), mz = Ee(Nl, Um)(""), gz = Ee(Wd, Um)(""), qm = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    name: "MuiSelect",
    props: t
  }), {
    autoWidth: r = !1,
    children: i,
    classes: a = {},
    className: l,
    defaultOpen: c = !1,
    displayEmpty: u = !1,
    IconComponent: f = H1,
    id: d,
    input: p,
    inputProps: h,
    label: g,
    labelId: m,
    MenuProps: y,
    multiple: x = !1,
    native: T = !1,
    onClose: b,
    onOpen: w,
    open: S,
    renderValue: E,
    SelectDisplayProps: C,
    variant: R = "outlined",
    ...M
  } = o, v = T ? nT : rT, I = li(), k = Zs({
    props: o,
    muiFormControl: I,
    states: ["variant", "error"]
  }), A = k.variant || R, O = {
    ...o,
    variant: A,
    classes: a
  }, _ = pz(O), {
    root: N,
    ...L
  } = _, F = p || {
    standard: /* @__PURE__ */ $(hz, {
      ownerState: O
    }),
    outlined: /* @__PURE__ */ $(mz, {
      label: g,
      ownerState: O
    }),
    filled: /* @__PURE__ */ $(gz, {
      ownerState: O
    })
  }[A], D = un(n, ni(F));
  return /* @__PURE__ */ $(P.Fragment, {
    children: /* @__PURE__ */ P.cloneElement(F, {
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: v,
      inputProps: {
        children: i,
        error: k.error,
        IconComponent: f,
        variant: A,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: x,
        ...T ? {
          id: d
        } : {
          autoWidth: r,
          defaultOpen: c,
          displayEmpty: u,
          labelId: m,
          MenuProps: y,
          onClose: b,
          onOpen: w,
          open: S,
          renderValue: E,
          SelectDisplayProps: {
            id: d,
            ...C
          }
        },
        ...h,
        classes: h ? Mn(L, h.classes) : L,
        ...p ? p.props.inputProps : {}
      },
      ...(x && T || u) && A === "outlined" ? {
        notched: !0
      } : {},
      ref: D,
      className: Re(F.props.className, l, _.root),
      // If a custom input is provided via 'input' prop, do not allow 'variant' to be propagated to it's root element. See https://github.com/mui/material-ui/issues/33894.
      ...!p && {
        variant: A
      },
      ...M
    })
  });
});
process.env.NODE_ENV !== "production" && (qm.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: s.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: s.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: s.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: s.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: s.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: s.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: s.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: s.object,
  /**
   * See [OutlinedInput#label](https://mui.com/material-ui/api/outlined-input/#props)
   */
  label: s.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: s.string,
  /**
   * Props applied to the [`Menu`](https://mui.com/material-ui/api/menu/) element.
   */
  MenuProps: s.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: s.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: s.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: s.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: s.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: s.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: s.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: s.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: s.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: s.oneOfType([s.oneOf([""]), s.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: s.oneOf(["filled", "outlined", "standard"])
});
qm.muiName = "Select";
function yz(e) {
  return tt("MuiTextField", e);
}
it("MuiTextField", ["root"]);
const bz = {
  standard: Hd,
  filled: Wd,
  outlined: Nl
}, vz = (e) => {
  const {
    classes: t
  } = e;
  return rt({
    root: ["root"]
  }, yz, t);
}, xz = Ee(K1, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), iT = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiTextField"
  }), {
    autoComplete: r,
    autoFocus: i = !1,
    children: a,
    className: l,
    color: c = "primary",
    defaultValue: u,
    disabled: f = !1,
    error: d = !1,
    FormHelperTextProps: p,
    fullWidth: h = !1,
    helperText: g,
    id: m,
    InputLabelProps: y,
    inputProps: x,
    InputProps: T,
    inputRef: b,
    label: w,
    maxRows: S,
    minRows: E,
    multiline: C = !1,
    name: R,
    onBlur: M,
    onChange: v,
    onFocus: I,
    placeholder: k,
    required: A = !1,
    rows: O,
    select: _ = !1,
    SelectProps: N,
    slots: L = {},
    slotProps: F = {},
    type: D,
    value: B,
    variant: z = "outlined",
    ...U
  } = o, q = {
    ...o,
    autoFocus: i,
    color: c,
    disabled: f,
    error: d,
    fullWidth: h,
    multiline: C,
    required: A,
    select: _,
    variant: z
  }, Y = vz(q);
  process.env.NODE_ENV !== "production" && _ && !a && console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
  const K = Bi(m), te = g && K ? `${K}-helper-text` : void 0, ne = w && K ? `${K}-label` : void 0, W = bz[z], ee = {
    slots: L,
    slotProps: {
      input: T,
      inputLabel: y,
      htmlInput: x,
      formHelperText: p,
      select: N,
      ...F
    }
  }, G = {}, re = ee.slotProps.inputLabel;
  z === "outlined" && (re && typeof re.shrink < "u" && (G.notched = re.shrink), G.label = w), _ && ((!N || !N.native) && (G.id = void 0), G["aria-describedby"] = void 0);
  const [V, de] = ot("root", {
    elementType: xz,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...ee,
      ...U
    },
    ownerState: q,
    className: Re(Y.root, l),
    ref: n,
    additionalProps: {
      disabled: f,
      error: d,
      fullWidth: h,
      required: A,
      color: c,
      variant: z
    }
  }), [ue, xe] = ot("input", {
    elementType: W,
    externalForwardedProps: ee,
    additionalProps: G,
    ownerState: q
  }), [Ae, we] = ot("inputLabel", {
    elementType: q1,
    externalForwardedProps: ee,
    ownerState: q
  }), [De, Ce] = ot("htmlInput", {
    elementType: "input",
    externalForwardedProps: ee,
    ownerState: q
  }), [Be, Me] = ot("formHelperText", {
    elementType: Y1,
    externalForwardedProps: ee,
    ownerState: q
  }), [j, J] = ot("select", {
    elementType: qm,
    externalForwardedProps: ee,
    ownerState: q
  }), ie = /* @__PURE__ */ $(ue, {
    "aria-describedby": te,
    autoComplete: r,
    autoFocus: i,
    defaultValue: u,
    fullWidth: h,
    multiline: C,
    name: R,
    rows: O,
    maxRows: S,
    minRows: E,
    type: D,
    value: B,
    id: K,
    inputRef: b,
    onBlur: M,
    onChange: v,
    onFocus: I,
    placeholder: k,
    inputProps: Ce,
    slots: {
      input: L.htmlInput ? De : void 0
    },
    ...xe
  });
  return /* @__PURE__ */ Te(V, {
    ...de,
    children: [w != null && w !== "" && /* @__PURE__ */ $(Ae, {
      htmlFor: K,
      id: ne,
      ...we,
      children: w
    }), _ ? /* @__PURE__ */ $(j, {
      "aria-describedby": te,
      id: K,
      labelId: ne,
      value: B,
      input: ie,
      ...J,
      children: a
    }) : ie, g && /* @__PURE__ */ $(Be, {
      id: te,
      ...Me,
      children: g
    })]
  });
});
process.env.NODE_ENV !== "production" && (iT.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: s.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: s.bool,
  /**
   * @ignore
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: s.oneOfType([s.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), s.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: s.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: s.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: s.bool,
  /**
   * Props applied to the [`FormHelperText`](https://mui.com/material-ui/api/form-helper-text/) element.
   * @deprecated Use `slotProps.formHelperText` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  FormHelperTextProps: s.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: s.bool,
  /**
   * The helper text content.
   */
  helperText: s.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: s.string,
  /**
   * Props applied to the [`InputLabel`](https://mui.com/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   * @deprecated Use `slotProps.inputLabel` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputLabelProps: s.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.htmlInput` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: s.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](https://mui.com/material-ui/api/filled-input/),
   * [`OutlinedInput`](https://mui.com/material-ui/api/outlined-input/) or [`Input`](https://mui.com/material-ui/api/input/)
   * component depending on the `variant` prop value.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputProps: s.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Qn,
  /**
   * The label content.
   */
  label: s.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: s.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: s.oneOfType([s.number, s.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: s.oneOfType([s.number, s.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: s.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: s.string,
  /**
   * @ignore
   */
  onBlur: s.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: s.func,
  /**
   * @ignore
   */
  onFocus: s.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: s.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: s.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: s.oneOfType([s.number, s.string]),
  /**
   * Render a [`Select`](https://mui.com/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: s.bool,
  /**
   * Props applied to the [`Select`](https://mui.com/material-ui/api/select/) element.
   * @deprecated Use `slotProps.select` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SelectProps: s.object,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: s.oneOfType([s.oneOf(["medium", "small"]), s.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: s.shape({
    formHelperText: s.oneOfType([s.func, s.object]),
    htmlInput: s.oneOfType([s.func, s.object]),
    input: s.oneOfType([s.func, s.object]),
    inputLabel: s.oneOfType([s.func, s.object]),
    select: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: s.shape({
    formHelperText: s.elementType,
    htmlInput: s.elementType,
    input: s.elementType,
    inputLabel: s.elementType,
    root: s.elementType,
    select: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: s.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: s.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: s.oneOf(["filled", "outlined", "standard"])
});
const wz = [], sT = Ie(
  ({
    label: e = "",
    tooltip: t,
    fullWidth: n = !1,
    options: o = wz,
    value: r,
    onChange: i,
    isRequired: a,
    isDisabled: l,
    isError: c,
    errorMessage: u = "",
    emptyOptionMessage: f = "No Options",
    hideOptionsWhenEmpty: d = !1,
    isLoadingOptions: p = !1,
    renderOption: h
  }) => {
    const g = Ch(), { inputCommonStyle: m } = $m({
      isDisabled: l,
      isError: c
    }), { textCommonStyles: y } = $l({
      isTitle: !1,
      isLabel: !0,
      textColor: l ? "disabled" : c ? "error" : "auto"
    }), { paperCommonStyles: x } = Fi(), T = Qe(() => d ? o.length === 0 : !1, [d, o]), b = Qe(() => o.find((w) => w.value === r) || null, [r, o]);
    return /* @__PURE__ */ Te(dn, { gap: 0, width: n ? "100%" : "auto", children: [
      e && /* @__PURE__ */ $(
        Mi,
        {
          label: e,
          elementId: g,
          tooltip: t,
          isRequired: a,
          isDisabled: l,
          isError: c
        }
      ),
      /* @__PURE__ */ $(
        W1,
        {
          className: "VenomousUI-SelectInput",
          multiple: !1,
          id: g,
          fullWidth: n,
          disabled: l || p,
          value: b,
          onChange: (w, S) => i == null ? void 0 : i(S, w),
          renderInput: (w) => /* @__PURE__ */ $(
            iT,
            {
              ...w,
              autoComplete: "off",
              size: "small",
              error: c,
              slotProps: {
                input: {
                  ...w.InputProps,
                  sx: { ...m },
                  endAdornment: /* @__PURE__ */ Te(mo, { children: [
                    p ? /* @__PURE__ */ $(Il, { color: "primary", disableShrink: !0, size: 20 }) : null,
                    w.InputProps.endAdornment
                  ] })
                }
              }
            }
          ),
          loading: p,
          options: o,
          noOptionsText: T ? null : f,
          isOptionEqualToValue: (w, S) => w.value === S.value,
          getOptionDisabled: (w) => !!w.isDisabled,
          getOptionLabel: (w) => w.label,
          renderOption: ({ key: w, ...S }, E) => /* @__PURE__ */ $(
            Ho,
            {
              component: "li",
              ...S,
              style: { minHeight: 40, padding: 0, borderRadius: "8px" },
              sx: { mb: "4px", "&:last-child": { mb: 0 } },
              children: h ? h(E) : /* @__PURE__ */ $(
                Cn,
                {
                  text: E.label,
                  sx: {
                    width: 1,
                    flex: 1,
                    padding: 0,
                    paddingLeft: "6px",
                    paddingRight: "6px"
                  }
                }
              )
            },
            w
          ),
          slotProps: {
            paper: {
              sx: { ...x, display: T ? "none" : "display" }
            },
            listbox: {
              sx: { p: 0 }
            }
          }
        }
      ),
      c && /* @__PURE__ */ $(
        Cn,
        {
          text: c ? u : "",
          isLabel: !0,
          sx: { ...y, lineHeight: "1.5rem" }
        }
      )
    ] });
  }
);
sT.displayName = "Select";
function Sz(e) {
  return tt("MuiSwitch", e);
}
const Fn = it("MuiSwitch", ["root", "edgeStart", "edgeEnd", "switchBase", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium", "checked", "disabled", "input", "thumb", "track"]), Tz = (e) => {
  const {
    classes: t,
    edge: n,
    size: o,
    color: r,
    checked: i,
    disabled: a
  } = e, l = {
    root: ["root", n && `edge${fe(n)}`, `size${fe(o)}`],
    switchBase: ["switchBase", `color${fe(r)}`, i && "checked", a && "disabled"],
    thumb: ["thumb"],
    track: ["track"],
    input: ["input"]
  }, c = rt(l, Sz, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...c
  };
}, Ez = Ee("span", {
  name: "MuiSwitch",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.edge && t[`edge${fe(n.edge)}`], t[`size${fe(n.size)}`]];
  }
})({
  display: "inline-flex",
  width: 34 + 12 * 2,
  height: 14 + 12 * 2,
  overflow: "hidden",
  padding: 12,
  boxSizing: "border-box",
  position: "relative",
  flexShrink: 0,
  zIndex: 0,
  // Reset the stacking context.
  verticalAlign: "middle",
  // For correct alignment with the text.
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [{
    props: {
      edge: "start"
    },
    style: {
      marginLeft: -8
    }
  }, {
    props: {
      edge: "end"
    },
    style: {
      marginRight: -8
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      width: 40,
      height: 24,
      padding: 7,
      [`& .${Fn.thumb}`]: {
        width: 16,
        height: 16
      },
      [`& .${Fn.switchBase}`]: {
        padding: 4,
        [`&.${Fn.checked}`]: {
          transform: "translateX(16px)"
        }
      }
    }
  }]
}), Cz = Ee(hd, {
  name: "MuiSwitch",
  slot: "SwitchBase",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.switchBase, {
      [`& .${Fn.input}`]: t.input
    }, n.color !== "default" && t[`color${fe(n.color)}`]];
  }
})(qe(({
  theme: e
}) => ({
  position: "absolute",
  top: 0,
  left: 0,
  zIndex: 1,
  // Render above the focus ripple.
  color: e.vars ? e.vars.palette.Switch.defaultColor : `${e.palette.mode === "light" ? e.palette.common.white : e.palette.grey[300]}`,
  transition: e.transitions.create(["left", "transform"], {
    duration: e.transitions.duration.shortest
  }),
  [`&.${Fn.checked}`]: {
    transform: "translateX(20px)"
  },
  [`&.${Fn.disabled}`]: {
    color: e.vars ? e.vars.palette.Switch.defaultDisabledColor : `${e.palette.mode === "light" ? e.palette.grey[100] : e.palette.grey[600]}`
  },
  [`&.${Fn.checked} + .${Fn.track}`]: {
    opacity: 0.5
  },
  [`&.${Fn.disabled} + .${Fn.track}`]: {
    opacity: e.vars ? e.vars.opacity.switchTrackDisabled : `${e.palette.mode === "light" ? 0.12 : 0.2}`
  },
  [`& .${Fn.input}`]: {
    left: "-100%",
    width: "300%"
  }
})), qe(({
  theme: e
}) => ({
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : bt(e.palette.action.active, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  variants: [...Object.entries(e.palette).filter(Ut(["light"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${Fn.checked}`]: {
        color: (e.vars || e).palette[t].main,
        "&:hover": {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : bt(e.palette[t].main, e.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        },
        [`&.${Fn.disabled}`]: {
          color: e.vars ? e.vars.palette.Switch[`${t}DisabledColor`] : `${e.palette.mode === "light" ? Ks(e.palette[t].main, 0.62) : qs(e.palette[t].main, 0.55)}`
        }
      },
      [`&.${Fn.checked} + .${Fn.track}`]: {
        backgroundColor: (e.vars || e).palette[t].main
      }
    }
  }))]
}))), Oz = Ee("span", {
  name: "MuiSwitch",
  slot: "Track",
  overridesResolver: (e, t) => t.track
})(qe(({
  theme: e
}) => ({
  height: "100%",
  width: "100%",
  borderRadius: 14 / 2,
  zIndex: -1,
  transition: e.transitions.create(["opacity", "background-color"], {
    duration: e.transitions.duration.shortest
  }),
  backgroundColor: e.vars ? e.vars.palette.common.onBackground : `${e.palette.mode === "light" ? e.palette.common.black : e.palette.common.white}`,
  opacity: e.vars ? e.vars.opacity.switchTrack : `${e.palette.mode === "light" ? 0.38 : 0.3}`
}))), $z = Ee("span", {
  name: "MuiSwitch",
  slot: "Thumb",
  overridesResolver: (e, t) => t.thumb
})(qe(({
  theme: e
}) => ({
  boxShadow: (e.vars || e).shadows[1],
  backgroundColor: "currentColor",
  width: 20,
  height: 20,
  borderRadius: "50%"
}))), aT = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiSwitch"
  }), {
    className: r,
    color: i = "primary",
    edge: a = !1,
    size: l = "medium",
    sx: c,
    slots: u = {},
    slotProps: f = {},
    ...d
  } = o, p = {
    ...o,
    color: i,
    edge: a,
    size: l
  }, h = Tz(p), g = {
    slots: u,
    slotProps: f
  }, [m, y] = ot("root", {
    className: Re(h.root, r),
    elementType: Ez,
    externalForwardedProps: g,
    ownerState: p,
    additionalProps: {
      sx: c
    }
  }), [x, T] = ot("thumb", {
    className: h.thumb,
    elementType: $z,
    externalForwardedProps: g,
    ownerState: p
  }), b = /* @__PURE__ */ $(x, {
    ...T
  }), [w, S] = ot("track", {
    className: h.track,
    elementType: Oz,
    externalForwardedProps: g,
    ownerState: p
  });
  return /* @__PURE__ */ Te(m, {
    ...y,
    children: [/* @__PURE__ */ $(Cz, {
      type: "checkbox",
      icon: b,
      checkedIcon: b,
      ref: n,
      ownerState: p,
      ...d,
      classes: {
        ...h,
        root: h.switchBase
      },
      slots: {
        ...u.switchBase && {
          root: u.switchBase
        },
        ...u.input && {
          input: u.input
        }
      },
      slotProps: {
        ...f.switchBase && {
          root: typeof f.switchBase == "function" ? f.switchBase(p) : f.switchBase
        },
        ...f.input && {
          input: typeof f.input == "function" ? f.input(p) : f.input
        }
      }
    }), /* @__PURE__ */ $(w, {
      ...S
    })]
  });
});
process.env.NODE_ENV !== "production" && (aT.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: s.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: s.oneOfType([s.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), s.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: s.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: s.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: s.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: s.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: s.node,
  /**
   * The id of the `input` element.
   */
  id: s.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: s.object,
  /**
   * Pass a ref to the `input` element.
   * @deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputRef: Qn,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: s.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: s.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense switch styling.
   * @default 'medium'
   */
  size: s.oneOfType([s.oneOf(["medium", "small"]), s.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: s.shape({
    input: s.oneOfType([s.func, s.object]),
    root: s.oneOfType([s.func, s.object]),
    switchBase: s.oneOfType([s.func, s.object]),
    thumb: s.oneOfType([s.func, s.object]),
    track: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: s.shape({
    input: s.elementType,
    root: s.elementType,
    switchBase: s.elementType,
    thumb: s.elementType,
    track: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: s.any
});
const Km = Ie(
  ({ value: e, onChange: t, startLabel: n, endLabel: o, labelsDirection: r = "row", isDisabled: i }) => {
    const a = ze(
      (l) => /* @__PURE__ */ $(
        aT,
        {
          id: l,
          color: "primary",
          checked: e,
          disabled: i,
          onChange: (c) => t(c.target.checked),
          sx: {
            "& .MuiSwitch-track": {
              transition: "background-color 0s"
            }
          }
        }
      ),
      [e, t]
    );
    return n || o ? /* @__PURE__ */ $(
      md,
      {
        labelsDirection: r,
        startLabel: n,
        endLabel: o,
        isDisabled: i,
        renderElement: a
      }
    ) : a();
  }
);
Km.displayName = "Switch";
var Fl = (e) => e.type === "checkbox", Ei = (e) => e instanceof Date, zn = (e) => e == null;
const lT = (e) => typeof e == "object";
var nn = (e) => !zn(e) && !Array.isArray(e) && lT(e) && !Ei(e), cT = (e) => nn(e) && e.target ? Fl(e.target) ? e.target.checked : e.target.value : e, Iz = (e) => e.substring(0, e.search(/\.\d+(\.|$)/)) || e, uT = (e, t) => e.has(Iz(t)), Rz = (e) => {
  const t = e.constructor && e.constructor.prototype;
  return nn(t) && t.hasOwnProperty("isPrototypeOf");
}, Ym = typeof window < "u" && typeof window.HTMLElement < "u" && typeof document < "u";
function Kt(e) {
  let t;
  const n = Array.isArray(e), o = typeof FileList < "u" ? e instanceof FileList : !1;
  if (e instanceof Date)
    t = new Date(e);
  else if (e instanceof Set)
    t = new Set(e);
  else if (!(Ym && (e instanceof Blob || o)) && (n || nn(e)))
    if (t = n ? [] : {}, !n && !Rz(e))
      t = e;
    else
      for (const r in e)
        e.hasOwnProperty(r) && (t[r] = Kt(e[r]));
  else
    return e;
  return t;
}
var zl = (e) => Array.isArray(e) ? e.filter(Boolean) : [], Ft = (e) => e === void 0, Pe = (e, t, n) => {
  if (!t || !nn(e))
    return n;
  const o = zl(t.split(/[,[\].]+?/)).reduce((r, i) => zn(r) ? r : r[i], e);
  return Ft(o) || o === e ? Ft(e[t]) ? n : e[t] : o;
}, oo = (e) => typeof e == "boolean", Gm = (e) => /^\w*$/.test(e), dT = (e) => zl(e.replace(/["|']|\]/g, "").split(/\.|\[/)), yt = (e, t, n) => {
  let o = -1;
  const r = Gm(t) ? [t] : dT(t), i = r.length, a = i - 1;
  for (; ++o < i; ) {
    const l = r[o];
    let c = n;
    if (o !== a) {
      const u = e[l];
      c = nn(u) || Array.isArray(u) ? u : isNaN(+r[o + 1]) ? {} : [];
    }
    if (l === "__proto__" || l === "constructor" || l === "prototype")
      return;
    e[l] = c, e = e[l];
  }
};
const Su = {
  BLUR: "blur",
  FOCUS_OUT: "focusout",
  CHANGE: "change"
}, Co = {
  onBlur: "onBlur",
  onChange: "onChange",
  onSubmit: "onSubmit",
  onTouched: "onTouched",
  all: "all"
}, vr = {
  max: "max",
  min: "min",
  maxLength: "maxLength",
  minLength: "minLength",
  pattern: "pattern",
  required: "required",
  validate: "validate"
}, fT = Z.createContext(null), yo = () => Z.useContext(fT), kz = (e) => {
  const { children: t, ...n } = e;
  return Z.createElement(fT.Provider, { value: n }, t);
};
var pT = (e, t, n, o = !0) => {
  const r = {
    defaultValues: t._defaultValues
  };
  for (const i in e)
    Object.defineProperty(r, i, {
      get: () => {
        const a = i;
        return t._proxyFormState[a] !== Co.all && (t._proxyFormState[a] = !o || Co.all), n && (n[a] = !0), e[a];
      }
    });
  return r;
};
function Pz(e) {
  const t = yo(), { control: n = t.control, disabled: o, name: r, exact: i } = e || {}, [a, l] = Z.useState(n._formState), c = Z.useRef({
    isDirty: !1,
    isLoading: !1,
    dirtyFields: !1,
    touchedFields: !1,
    validatingFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  }), u = Z.useRef(r);
  return u.current = r, Z.useEffect(() => n._subscribe({
    name: u.current,
    formState: c.current,
    exact: i,
    callback: (f) => {
      !o && l({
        ...n._formState,
        ...f
      });
    }
  }), [n, o, i]), Z.useEffect(() => {
    c.current.isValid && n._setValid(!0);
  }, [n]), Z.useMemo(() => pT(a, n, c.current, !1), [a, n]);
}
var rr = (e) => typeof e == "string", hT = (e, t, n, o, r) => rr(e) ? (o && t.watch.add(e), Pe(n, e, r)) : Array.isArray(e) ? e.map((i) => (o && t.watch.add(i), Pe(n, i))) : (o && (t.watchAll = !0), n);
function Nz(e) {
  const t = yo(), { control: n = t.control, name: o, defaultValue: r, disabled: i, exact: a } = e || {}, l = Z.useRef(o), c = Z.useRef(r);
  l.current = o, Z.useEffect(() => n._subscribe({
    name: l.current,
    formState: {
      values: !0
    },
    exact: a,
    callback: (d) => !i && f(hT(l.current, n._names, d.values || n._formValues, !1, c.current))
  }), [n, i, a]);
  const [u, f] = Z.useState(n._getWatch(o, r));
  return Z.useEffect(() => n._removeUnmounted()), u;
}
function Mz(e) {
  const t = yo(), { name: n, disabled: o, control: r = t.control, shouldUnregister: i } = e, a = uT(r._names.array, n), l = Nz({
    control: r,
    name: n,
    defaultValue: Pe(r._formValues, n, Pe(r._defaultValues, n, e.defaultValue)),
    exact: !0
  }), c = Pz({
    control: r,
    name: n,
    exact: !0
  }), u = Z.useRef(e), f = Z.useRef(r.register(n, {
    ...e.rules,
    value: l,
    ...oo(e.disabled) ? { disabled: e.disabled } : {}
  })), d = Z.useMemo(() => Object.defineProperties({}, {
    invalid: {
      enumerable: !0,
      get: () => !!Pe(c.errors, n)
    },
    isDirty: {
      enumerable: !0,
      get: () => !!Pe(c.dirtyFields, n)
    },
    isTouched: {
      enumerable: !0,
      get: () => !!Pe(c.touchedFields, n)
    },
    isValidating: {
      enumerable: !0,
      get: () => !!Pe(c.validatingFields, n)
    },
    error: {
      enumerable: !0,
      get: () => Pe(c.errors, n)
    }
  }), [c, n]), p = Z.useCallback((y) => f.current.onChange({
    target: {
      value: cT(y),
      name: n
    },
    type: Su.CHANGE
  }), [n]), h = Z.useCallback(() => f.current.onBlur({
    target: {
      value: Pe(r._formValues, n),
      name: n
    },
    type: Su.BLUR
  }), [n, r._formValues]), g = Z.useCallback((y) => {
    const x = Pe(r._fields, n);
    x && y && (x._f.ref = {
      focus: () => y.focus(),
      select: () => y.select(),
      setCustomValidity: (T) => y.setCustomValidity(T),
      reportValidity: () => y.reportValidity()
    });
  }, [r._fields, n]), m = Z.useMemo(() => ({
    name: n,
    value: l,
    ...oo(o) || c.disabled ? { disabled: c.disabled || o } : {},
    onChange: p,
    onBlur: h,
    ref: g
  }), [n, o, c.disabled, p, h, g, l]);
  return Z.useEffect(() => {
    const y = r._options.shouldUnregister || i;
    r.register(n, {
      ...u.current.rules,
      ...oo(u.current.disabled) ? { disabled: u.current.disabled } : {}
    });
    const x = (T, b) => {
      const w = Pe(r._fields, T);
      w && w._f && (w._f.mount = b);
    };
    if (x(n, !0), y) {
      const T = Kt(Pe(r._options.defaultValues, n));
      yt(r._defaultValues, n, T), Ft(Pe(r._formValues, n)) && yt(r._formValues, n, T);
    }
    return !a && r.register(n), () => {
      (a ? y && !r._state.action : y) ? r.unregister(n) : x(n, !1);
    };
  }, [n, r, a, i]), Z.useEffect(() => {
    r._setDisabledField({
      disabled: o,
      name: n
    });
  }, [o, n, r]), Z.useMemo(() => ({
    field: m,
    formState: c,
    fieldState: d
  }), [m, c, d]);
}
const di = (e) => e.render(Mz(e));
var mT = (e, t, n, o, r) => t ? {
  ...n[e],
  types: {
    ...n[e] && n[e].types ? n[e].types : {},
    [o]: r || !0
  }
} : {}, qn = (e) => Array.isArray(e) ? e : [e], v0 = () => {
  let e = [];
  return {
    get observers() {
      return e;
    },
    next: (r) => {
      for (const i of e)
        i.next && i.next(r);
    },
    subscribe: (r) => (e.push(r), {
      unsubscribe: () => {
        e = e.filter((i) => i !== r);
      }
    }),
    unsubscribe: () => {
      e = [];
    }
  };
}, Jp = (e) => zn(e) || !lT(e);
function Hr(e, t) {
  if (Jp(e) || Jp(t))
    return e === t;
  if (Ei(e) && Ei(t))
    return e.getTime() === t.getTime();
  const n = Object.keys(e), o = Object.keys(t);
  if (n.length !== o.length)
    return !1;
  for (const r of n) {
    const i = e[r];
    if (!o.includes(r))
      return !1;
    if (r !== "ref") {
      const a = t[r];
      if (Ei(i) && Ei(a) || nn(i) && nn(a) || Array.isArray(i) && Array.isArray(a) ? !Hr(i, a) : i !== a)
        return !1;
    }
  }
  return !0;
}
var Rn = (e) => nn(e) && !Object.keys(e).length, Xm = (e) => e.type === "file", Do = (e) => typeof e == "function", Tu = (e) => {
  if (!Ym)
    return !1;
  const t = e ? e.ownerDocument : 0;
  return e instanceof (t && t.defaultView ? t.defaultView.HTMLElement : HTMLElement);
}, gT = (e) => e.type === "select-multiple", Zm = (e) => e.type === "radio", _z = (e) => Zm(e) || Fl(e), Hf = (e) => Tu(e) && e.isConnected;
function Az(e, t) {
  const n = t.slice(0, -1).length;
  let o = 0;
  for (; o < n; )
    e = Ft(e) ? o++ : e[t[o++]];
  return e;
}
function Dz(e) {
  for (const t in e)
    if (e.hasOwnProperty(t) && !Ft(e[t]))
      return !1;
  return !0;
}
function ln(e, t) {
  const n = Array.isArray(t) ? t : Gm(t) ? [t] : dT(t), o = n.length === 1 ? e : Az(e, n), r = n.length - 1, i = n[r];
  return o && delete o[i], r !== 0 && (nn(o) && Rn(o) || Array.isArray(o) && Dz(o)) && ln(e, n.slice(0, -1)), e;
}
var yT = (e) => {
  for (const t in e)
    if (Do(e[t]))
      return !0;
  return !1;
};
function Eu(e, t = {}) {
  const n = Array.isArray(e);
  if (nn(e) || n)
    for (const o in e)
      Array.isArray(e[o]) || nn(e[o]) && !yT(e[o]) ? (t[o] = Array.isArray(e[o]) ? [] : {}, Eu(e[o], t[o])) : zn(e[o]) || (t[o] = !0);
  return t;
}
function bT(e, t, n) {
  const o = Array.isArray(e);
  if (nn(e) || o)
    for (const r in e)
      Array.isArray(e[r]) || nn(e[r]) && !yT(e[r]) ? Ft(t) || Jp(n[r]) ? n[r] = Array.isArray(e[r]) ? Eu(e[r], []) : { ...Eu(e[r]) } : bT(e[r], zn(t) ? {} : t[r], n[r]) : n[r] = !Hr(e[r], t[r]);
  return n;
}
var pa = (e, t) => bT(e, t, Eu(t));
const x0 = {
  value: !1,
  isValid: !1
}, w0 = { value: !0, isValid: !0 };
var vT = (e) => {
  if (Array.isArray(e)) {
    if (e.length > 1) {
      const t = e.filter((n) => n && n.checked && !n.disabled).map((n) => n.value);
      return { value: t, isValid: !!t.length };
    }
    return e[0].checked && !e[0].disabled ? (
      // @ts-expect-error expected to work in the browser
      e[0].attributes && !Ft(e[0].attributes.value) ? Ft(e[0].value) || e[0].value === "" ? w0 : { value: e[0].value, isValid: !0 } : w0
    ) : x0;
  }
  return x0;
}, xT = (e, { valueAsNumber: t, valueAsDate: n, setValueAs: o }) => Ft(e) ? e : t ? e === "" ? NaN : e && +e : n && rr(e) ? new Date(e) : o ? o(e) : e;
const S0 = {
  isValid: !1,
  value: null
};
var wT = (e) => Array.isArray(e) ? e.reduce((t, n) => n && n.checked && !n.disabled ? {
  isValid: !0,
  value: n.value
} : t, S0) : S0;
function T0(e) {
  const t = e.ref;
  return Xm(t) ? t.files : Zm(t) ? wT(e.refs).value : gT(t) ? [...t.selectedOptions].map(({ value: n }) => n) : Fl(t) ? vT(e.refs).value : xT(Ft(t.value) ? e.ref.value : t.value, e);
}
var Lz = (e, t, n, o) => {
  const r = {};
  for (const i of e) {
    const a = Pe(t, i);
    a && yt(r, i, a._f);
  }
  return {
    criteriaMode: n,
    names: [...e],
    fields: r,
    shouldUseNativeValidation: o
  };
}, Cu = (e) => e instanceof RegExp, ha = (e) => Ft(e) ? e : Cu(e) ? e.source : nn(e) ? Cu(e.value) ? e.value.source : e.value : e, ds = (e) => ({
  isOnSubmit: !e || e === Co.onSubmit,
  isOnBlur: e === Co.onBlur,
  isOnChange: e === Co.onChange,
  isOnAll: e === Co.all,
  isOnTouch: e === Co.onTouched
});
const E0 = "AsyncFunction";
var Bz = (e) => !!e && !!e.validate && !!(Do(e.validate) && e.validate.constructor.name === E0 || nn(e.validate) && Object.values(e.validate).find((t) => t.constructor.name === E0)), Fz = (e) => e.mount && (e.required || e.min || e.max || e.maxLength || e.minLength || e.pattern || e.validate), eh = (e, t, n) => !n && (t.watchAll || t.watch.has(e) || [...t.watch].some((o) => e.startsWith(o) && /^\.\w+/.test(e.slice(o.length))));
const bs = (e, t, n, o) => {
  for (const r of n || Object.keys(e)) {
    const i = Pe(e, r);
    if (i) {
      const { _f: a, ...l } = i;
      if (a) {
        if (a.refs && a.refs[0] && t(a.refs[0], r) && !o)
          return !0;
        if (a.ref && t(a.ref, a.name) && !o)
          return !0;
        if (bs(l, t))
          break;
      } else if (nn(l) && bs(l, t))
        break;
    }
  }
};
function C0(e, t, n) {
  const o = Pe(e, n);
  if (o || Gm(n))
    return {
      error: o,
      name: n
    };
  const r = n.split(".");
  for (; r.length; ) {
    const i = r.join("."), a = Pe(t, i), l = Pe(e, i);
    if (a && !Array.isArray(a) && n !== i)
      return { name: n };
    if (l && l.type)
      return {
        name: i,
        error: l
      };
    r.pop();
  }
  return {
    name: n
  };
}
var zz = (e, t, n, o) => {
  n(e);
  const { name: r, ...i } = e;
  return Rn(i) || Object.keys(i).length >= Object.keys(t).length || Object.keys(i).find((a) => t[a] === (!o || Co.all));
}, jz = (e, t, n) => !e || !t || e === t || qn(e).some((o) => o && (n ? o === t : o.startsWith(t) || t.startsWith(o))), Vz = (e, t, n, o, r) => r.isOnAll ? !1 : !n && r.isOnTouch ? !(t || e) : (n ? o.isOnBlur : r.isOnBlur) ? !e : (n ? o.isOnChange : r.isOnChange) ? e : !0, Hz = (e, t) => !zl(Pe(e, t)).length && ln(e, t), ST = (e, t, n) => {
  const o = qn(Pe(e, n));
  return yt(o, "root", t[n]), yt(e, n, o), e;
}, Vc = (e) => rr(e);
function O0(e, t, n = "validate") {
  if (Vc(e) || Array.isArray(e) && e.every(Vc) || oo(e) && !e)
    return {
      type: n,
      message: Vc(e) ? e : "",
      ref: t
    };
}
var rs = (e) => nn(e) && !Cu(e) ? e : {
  value: e,
  message: ""
}, th = async (e, t, n, o, r, i) => {
  const { ref: a, refs: l, required: c, maxLength: u, minLength: f, min: d, max: p, pattern: h, validate: g, name: m, valueAsNumber: y, mount: x } = e._f, T = Pe(n, m);
  if (!x || t.has(m))
    return {};
  const b = l ? l[0] : a, w = (k) => {
    r && b.reportValidity && (b.setCustomValidity(oo(k) ? "" : k || ""), b.reportValidity());
  }, S = {}, E = Zm(a), C = Fl(a), R = E || C, M = (y || Xm(a)) && Ft(a.value) && Ft(T) || Tu(a) && a.value === "" || T === "" || Array.isArray(T) && !T.length, v = mT.bind(null, m, o, S), I = (k, A, O, _ = vr.maxLength, N = vr.minLength) => {
    const L = k ? A : O;
    S[m] = {
      type: k ? _ : N,
      message: L,
      ref: a,
      ...v(k ? _ : N, L)
    };
  };
  if (i ? !Array.isArray(T) || !T.length : c && (!R && (M || zn(T)) || oo(T) && !T || C && !vT(l).isValid || E && !wT(l).isValid)) {
    const { value: k, message: A } = Vc(c) ? { value: !!c, message: c } : rs(c);
    if (k && (S[m] = {
      type: vr.required,
      message: A,
      ref: b,
      ...v(vr.required, A)
    }, !o))
      return w(A), S;
  }
  if (!M && (!zn(d) || !zn(p))) {
    let k, A;
    const O = rs(p), _ = rs(d);
    if (!zn(T) && !isNaN(T)) {
      const N = a.valueAsNumber || T && +T;
      zn(O.value) || (k = N > O.value), zn(_.value) || (A = N < _.value);
    } else {
      const N = a.valueAsDate || new Date(T), L = (B) => /* @__PURE__ */ new Date((/* @__PURE__ */ new Date()).toDateString() + " " + B), F = a.type == "time", D = a.type == "week";
      rr(O.value) && T && (k = F ? L(T) > L(O.value) : D ? T > O.value : N > new Date(O.value)), rr(_.value) && T && (A = F ? L(T) < L(_.value) : D ? T < _.value : N < new Date(_.value));
    }
    if ((k || A) && (I(!!k, O.message, _.message, vr.max, vr.min), !o))
      return w(S[m].message), S;
  }
  if ((u || f) && !M && (rr(T) || i && Array.isArray(T))) {
    const k = rs(u), A = rs(f), O = !zn(k.value) && T.length > +k.value, _ = !zn(A.value) && T.length < +A.value;
    if ((O || _) && (I(O, k.message, A.message), !o))
      return w(S[m].message), S;
  }
  if (h && !M && rr(T)) {
    const { value: k, message: A } = rs(h);
    if (Cu(k) && !T.match(k) && (S[m] = {
      type: vr.pattern,
      message: A,
      ref: a,
      ...v(vr.pattern, A)
    }, !o))
      return w(A), S;
  }
  if (g) {
    if (Do(g)) {
      const k = await g(T, n), A = O0(k, b);
      if (A && (S[m] = {
        ...A,
        ...v(vr.validate, A.message)
      }, !o))
        return w(A.message), S;
    } else if (nn(g)) {
      let k = {};
      for (const A in g) {
        if (!Rn(k) && !o)
          break;
        const O = O0(await g[A](T, n), b, A);
        O && (k = {
          ...O,
          ...v(A, O.message)
        }, w(O.message), o && (S[m] = k));
      }
      if (!Rn(k) && (S[m] = {
        ref: b,
        ...k
      }, !o))
        return S;
    }
  }
  return w(!0), S;
};
const Wz = {
  mode: Co.onSubmit,
  reValidateMode: Co.onChange,
  shouldFocusError: !0
};
function Uz(e = {}) {
  let t = {
    ...Wz,
    ...e
  }, n = {
    submitCount: 0,
    isDirty: !1,
    isLoading: Do(t.defaultValues),
    isValidating: !1,
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    touchedFields: {},
    dirtyFields: {},
    validatingFields: {},
    errors: t.errors || {},
    disabled: t.disabled || !1
  };
  const o = {};
  let r = nn(t.defaultValues) || nn(t.values) ? Kt(t.values || t.defaultValues) || {} : {}, i = t.shouldUnregister ? {} : Kt(r), a = {
    action: !1,
    mount: !1,
    watch: !1
  }, l = {
    mount: /* @__PURE__ */ new Set(),
    disabled: /* @__PURE__ */ new Set(),
    unMount: /* @__PURE__ */ new Set(),
    array: /* @__PURE__ */ new Set(),
    watch: /* @__PURE__ */ new Set()
  }, c, u = 0;
  const f = {
    isDirty: !1,
    dirtyFields: !1,
    validatingFields: !1,
    touchedFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  };
  let d = {
    ...f
  };
  const p = {
    array: v0(),
    state: v0()
  }, h = ds(t.mode), g = ds(t.reValidateMode), m = t.criteriaMode === Co.all, y = (j) => (J) => {
    clearTimeout(u), u = setTimeout(j, J);
  }, x = async (j) => {
    if (!t.disabled && (f.isValid || d.isValid || j)) {
      const J = t.resolver ? Rn((await M()).errors) : await I(o, !0);
      J !== n.isValid && p.state.next({
        isValid: J
      });
    }
  }, T = (j, J) => {
    !t.disabled && (f.isValidating || f.validatingFields || d.isValidating || d.validatingFields) && ((j || Array.from(l.mount)).forEach((ie) => {
      ie && (J ? yt(n.validatingFields, ie, J) : ln(n.validatingFields, ie));
    }), p.state.next({
      validatingFields: n.validatingFields,
      isValidating: !Rn(n.validatingFields)
    }));
  }, b = (j, J = [], ie, Q, H = !0, X = !0) => {
    if (Q && ie && !t.disabled) {
      if (a.action = !0, X && Array.isArray(Pe(o, j))) {
        const se = ie(Pe(o, j), Q.argA, Q.argB);
        H && yt(o, j, se);
      }
      if (X && Array.isArray(Pe(n.errors, j))) {
        const se = ie(Pe(n.errors, j), Q.argA, Q.argB);
        H && yt(n.errors, j, se), Hz(n.errors, j);
      }
      if ((f.touchedFields || d.touchedFields) && X && Array.isArray(Pe(n.touchedFields, j))) {
        const se = ie(Pe(n.touchedFields, j), Q.argA, Q.argB);
        H && yt(n.touchedFields, j, se);
      }
      (f.dirtyFields || d.dirtyFields) && (n.dirtyFields = pa(r, i)), p.state.next({
        name: j,
        isDirty: A(j, J),
        dirtyFields: n.dirtyFields,
        errors: n.errors,
        isValid: n.isValid
      });
    } else
      yt(i, j, J);
  }, w = (j, J) => {
    yt(n.errors, j, J), p.state.next({
      errors: n.errors
    });
  }, S = (j) => {
    n.errors = j, p.state.next({
      errors: n.errors,
      isValid: !1
    });
  }, E = (j, J, ie, Q) => {
    const H = Pe(o, j);
    if (H) {
      const X = Pe(i, j, Ft(ie) ? Pe(r, j) : ie);
      Ft(X) || Q && Q.defaultChecked || J ? yt(i, j, J ? X : T0(H._f)) : N(j, X), a.mount && x();
    }
  }, C = (j, J, ie, Q, H) => {
    let X = !1, se = !1;
    const ye = {
      name: j
    };
    if (!t.disabled) {
      if (!ie || Q) {
        (f.isDirty || d.isDirty) && (se = n.isDirty, n.isDirty = ye.isDirty = A(), X = se !== ye.isDirty);
        const he = Hr(Pe(r, j), J);
        se = !!Pe(n.dirtyFields, j), he ? ln(n.dirtyFields, j) : yt(n.dirtyFields, j, !0), ye.dirtyFields = n.dirtyFields, X = X || (f.dirtyFields || d.dirtyFields) && se !== !he;
      }
      if (ie) {
        const he = Pe(n.touchedFields, j);
        he || (yt(n.touchedFields, j, ie), ye.touchedFields = n.touchedFields, X = X || (f.touchedFields || d.touchedFields) && he !== ie);
      }
      X && H && p.state.next(ye);
    }
    return X ? ye : {};
  }, R = (j, J, ie, Q) => {
    const H = Pe(n.errors, j), X = (f.isValid || d.isValid) && oo(J) && n.isValid !== J;
    if (t.delayError && ie ? (c = y(() => w(j, ie)), c(t.delayError)) : (clearTimeout(u), c = null, ie ? yt(n.errors, j, ie) : ln(n.errors, j)), (ie ? !Hr(H, ie) : H) || !Rn(Q) || X) {
      const se = {
        ...Q,
        ...X && oo(J) ? { isValid: J } : {},
        errors: n.errors,
        name: j
      };
      n = {
        ...n,
        ...se
      }, p.state.next(se);
    }
  }, M = async (j) => {
    T(j, !0);
    const J = await t.resolver(i, t.context, Lz(j || l.mount, o, t.criteriaMode, t.shouldUseNativeValidation));
    return T(j), J;
  }, v = async (j) => {
    const { errors: J } = await M(j);
    if (j)
      for (const ie of j) {
        const Q = Pe(J, ie);
        Q ? yt(n.errors, ie, Q) : ln(n.errors, ie);
      }
    else
      n.errors = J;
    return J;
  }, I = async (j, J, ie = {
    valid: !0
  }) => {
    for (const Q in j) {
      const H = j[Q];
      if (H) {
        const { _f: X, ...se } = H;
        if (X) {
          const ye = l.array.has(X.name), he = H._f && Bz(H._f);
          he && f.validatingFields && T([Q], !0);
          const le = await th(H, l.disabled, i, m, t.shouldUseNativeValidation && !J, ye);
          if (he && f.validatingFields && T([Q]), le[X.name] && (ie.valid = !1, J))
            break;
          !J && (Pe(le, X.name) ? ye ? ST(n.errors, le, X.name) : yt(n.errors, X.name, le[X.name]) : ln(n.errors, X.name));
        }
        !Rn(se) && await I(se, J, ie);
      }
    }
    return ie.valid;
  }, k = () => {
    for (const j of l.unMount) {
      const J = Pe(o, j);
      J && (J._f.refs ? J._f.refs.every((ie) => !Hf(ie)) : !Hf(J._f.ref)) && ee(j);
    }
    l.unMount = /* @__PURE__ */ new Set();
  }, A = (j, J) => !t.disabled && (j && J && yt(i, j, J), !Hr(U(), r)), O = (j, J, ie) => hT(j, l, {
    ...a.mount ? i : Ft(J) ? r : rr(j) ? { [j]: J } : J
  }, ie, J), _ = (j) => zl(Pe(a.mount ? i : r, j, t.shouldUnregister ? Pe(r, j, []) : [])), N = (j, J, ie = {}) => {
    const Q = Pe(o, j);
    let H = J;
    if (Q) {
      const X = Q._f;
      X && (!X.disabled && yt(i, j, xT(J, X)), H = Tu(X.ref) && zn(J) ? "" : J, gT(X.ref) ? [...X.ref.options].forEach((se) => se.selected = H.includes(se.value)) : X.refs ? Fl(X.ref) ? X.refs.length > 1 ? X.refs.forEach((se) => (!se.defaultChecked || !se.disabled) && (se.checked = Array.isArray(H) ? !!H.find((ye) => ye === se.value) : H === se.value)) : X.refs[0] && (X.refs[0].checked = !!H) : X.refs.forEach((se) => se.checked = se.value === H) : Xm(X.ref) ? X.ref.value = "" : (X.ref.value = H, X.ref.type || p.state.next({
        name: j,
        values: Kt(i)
      })));
    }
    (ie.shouldDirty || ie.shouldTouch) && C(j, H, ie.shouldTouch, ie.shouldDirty, !0), ie.shouldValidate && z(j);
  }, L = (j, J, ie) => {
    for (const Q in J) {
      const H = J[Q], X = `${j}.${Q}`, se = Pe(o, X);
      (l.array.has(j) || nn(H) || se && !se._f) && !Ei(H) ? L(X, H, ie) : N(X, H, ie);
    }
  }, F = (j, J, ie = {}) => {
    const Q = Pe(o, j), H = l.array.has(j), X = Kt(J);
    yt(i, j, X), H ? (p.array.next({
      name: j,
      values: Kt(i)
    }), (f.isDirty || f.dirtyFields || d.isDirty || d.dirtyFields) && ie.shouldDirty && p.state.next({
      name: j,
      dirtyFields: pa(r, i),
      isDirty: A(j, X)
    })) : Q && !Q._f && !zn(X) ? L(j, X, ie) : N(j, X, ie), eh(j, l) && p.state.next({ ...n }), p.state.next({
      name: a.mount ? j : void 0,
      values: Kt(i)
    });
  }, D = async (j) => {
    a.mount = !0;
    const J = j.target;
    let ie = J.name, Q = !0;
    const H = Pe(o, ie), X = (se) => {
      Q = Number.isNaN(se) || Ei(se) && isNaN(se.getTime()) || Hr(se, Pe(i, ie, se));
    };
    if (H) {
      let se, ye;
      const he = J.type ? T0(H._f) : cT(j), le = j.type === Su.BLUR || j.type === Su.FOCUS_OUT, ae = !Fz(H._f) && !t.resolver && !Pe(n.errors, ie) && !H._f.deps || Vz(le, Pe(n.touchedFields, ie), n.isSubmitted, g, h), ce = eh(ie, l, le);
      yt(i, ie, he), le ? (H._f.onBlur && H._f.onBlur(j), c && c(0)) : H._f.onChange && H._f.onChange(j);
      const Se = C(ie, he, le), $e = !Rn(Se) || ce;
      if (!le && p.state.next({
        name: ie,
        type: j.type,
        values: Kt(i)
      }), ae)
        return (f.isValid || d.isValid) && (t.mode === "onBlur" ? le && x() : le || x()), $e && p.state.next({ name: ie, ...ce ? {} : Se });
      if (!le && ce && p.state.next({ ...n }), t.resolver) {
        const { errors: oe } = await M([ie]);
        if (X(he), Q) {
          const be = C0(n.errors, o, ie), Ne = C0(oe, o, be.name || ie);
          se = Ne.error, ie = Ne.name, ye = Rn(oe);
        }
      } else
        T([ie], !0), se = (await th(H, l.disabled, i, m, t.shouldUseNativeValidation))[ie], T([ie]), X(he), Q && (se ? ye = !1 : (f.isValid || d.isValid) && (ye = await I(o, !0)));
      Q && (H._f.deps && z(H._f.deps), R(ie, ye, se, Se));
    }
  }, B = (j, J) => {
    if (Pe(n.errors, J) && j.focus)
      return j.focus(), 1;
  }, z = async (j, J = {}) => {
    let ie, Q;
    const H = qn(j);
    if (t.resolver) {
      const X = await v(Ft(j) ? j : H);
      ie = Rn(X), Q = j ? !H.some((se) => Pe(X, se)) : ie;
    } else j ? (Q = (await Promise.all(H.map(async (X) => {
      const se = Pe(o, X);
      return await I(se && se._f ? { [X]: se } : se);
    }))).every(Boolean), !(!Q && !n.isValid) && x()) : Q = ie = await I(o);
    return p.state.next({
      ...!rr(j) || (f.isValid || d.isValid) && ie !== n.isValid ? {} : { name: j },
      ...t.resolver || !j ? { isValid: ie } : {},
      errors: n.errors
    }), J.shouldFocus && !Q && bs(o, B, j ? H : l.mount), Q;
  }, U = (j) => {
    const J = {
      ...a.mount ? i : r
    };
    return Ft(j) ? J : rr(j) ? Pe(J, j) : j.map((ie) => Pe(J, ie));
  }, q = (j, J) => ({
    invalid: !!Pe((J || n).errors, j),
    isDirty: !!Pe((J || n).dirtyFields, j),
    error: Pe((J || n).errors, j),
    isValidating: !!Pe(n.validatingFields, j),
    isTouched: !!Pe((J || n).touchedFields, j)
  }), Y = (j) => {
    j && qn(j).forEach((J) => ln(n.errors, J)), p.state.next({
      errors: j ? n.errors : {}
    });
  }, K = (j, J, ie) => {
    const Q = (Pe(o, j, { _f: {} })._f || {}).ref, H = Pe(n.errors, j) || {}, { ref: X, message: se, type: ye, ...he } = H;
    yt(n.errors, j, {
      ...he,
      ...J,
      ref: Q
    }), p.state.next({
      name: j,
      errors: n.errors,
      isValid: !1
    }), ie && ie.shouldFocus && Q && Q.focus && Q.focus();
  }, te = (j, J) => Do(j) ? p.state.subscribe({
    next: (ie) => j(O(void 0, J), ie)
  }) : O(j, J, !0), ne = (j) => p.state.subscribe({
    next: (J) => {
      jz(j.name, J.name, j.exact) && zz(J, j.formState || f, Ce, j.reRenderRoot) && j.callback({
        values: { ...i },
        ...n,
        ...J
      });
    }
  }).unsubscribe, W = (j) => (a.mount = !0, d = {
    ...d,
    ...j.formState
  }, ne({
    ...j,
    formState: d
  })), ee = (j, J = {}) => {
    for (const ie of j ? qn(j) : l.mount)
      l.mount.delete(ie), l.array.delete(ie), J.keepValue || (ln(o, ie), ln(i, ie)), !J.keepError && ln(n.errors, ie), !J.keepDirty && ln(n.dirtyFields, ie), !J.keepTouched && ln(n.touchedFields, ie), !J.keepIsValidating && ln(n.validatingFields, ie), !t.shouldUnregister && !J.keepDefaultValue && ln(r, ie);
    p.state.next({
      values: Kt(i)
    }), p.state.next({
      ...n,
      ...J.keepDirty ? { isDirty: A() } : {}
    }), !J.keepIsValid && x();
  }, G = ({ disabled: j, name: J }) => {
    (oo(j) && a.mount || j || l.disabled.has(J)) && (j ? l.disabled.add(J) : l.disabled.delete(J));
  }, re = (j, J = {}) => {
    let ie = Pe(o, j);
    const Q = oo(J.disabled) || oo(t.disabled);
    return yt(o, j, {
      ...ie || {},
      _f: {
        ...ie && ie._f ? ie._f : { ref: { name: j } },
        name: j,
        mount: !0,
        ...J
      }
    }), l.mount.add(j), ie ? G({
      disabled: oo(J.disabled) ? J.disabled : t.disabled,
      name: j
    }) : E(j, !0, J.value), {
      ...Q ? { disabled: J.disabled || t.disabled } : {},
      ...t.progressive ? {
        required: !!J.required,
        min: ha(J.min),
        max: ha(J.max),
        minLength: ha(J.minLength),
        maxLength: ha(J.maxLength),
        pattern: ha(J.pattern)
      } : {},
      name: j,
      onChange: D,
      onBlur: D,
      ref: (H) => {
        if (H) {
          re(j, J), ie = Pe(o, j);
          const X = Ft(H.value) && H.querySelectorAll && H.querySelectorAll("input,select,textarea")[0] || H, se = _z(X), ye = ie._f.refs || [];
          if (se ? ye.find((he) => he === X) : X === ie._f.ref)
            return;
          yt(o, j, {
            _f: {
              ...ie._f,
              ...se ? {
                refs: [
                  ...ye.filter(Hf),
                  X,
                  ...Array.isArray(Pe(r, j)) ? [{}] : []
                ],
                ref: { type: X.type, name: j }
              } : { ref: X }
            }
          }), E(j, !1, void 0, X);
        } else
          ie = Pe(o, j, {}), ie._f && (ie._f.mount = !1), (t.shouldUnregister || J.shouldUnregister) && !(uT(l.array, j) && a.action) && l.unMount.add(j);
      }
    };
  }, V = () => t.shouldFocusError && bs(o, B, l.mount), de = (j) => {
    oo(j) && (p.state.next({ disabled: j }), bs(o, (J, ie) => {
      const Q = Pe(o, ie);
      Q && (J.disabled = Q._f.disabled || j, Array.isArray(Q._f.refs) && Q._f.refs.forEach((H) => {
        H.disabled = Q._f.disabled || j;
      }));
    }, 0, !1));
  }, ue = (j, J) => async (ie) => {
    let Q;
    ie && (ie.preventDefault && ie.preventDefault(), ie.persist && ie.persist());
    let H = Kt(i);
    if (p.state.next({
      isSubmitting: !0
    }), t.resolver) {
      const { errors: X, values: se } = await M();
      n.errors = X, H = se;
    } else
      await I(o);
    if (l.disabled.size)
      for (const X of l.disabled)
        yt(H, X, void 0);
    if (ln(n.errors, "root"), Rn(n.errors)) {
      p.state.next({
        errors: {}
      });
      try {
        await j(H, ie);
      } catch (X) {
        Q = X;
      }
    } else
      J && await J({ ...n.errors }, ie), V(), setTimeout(V);
    if (p.state.next({
      isSubmitted: !0,
      isSubmitting: !1,
      isSubmitSuccessful: Rn(n.errors) && !Q,
      submitCount: n.submitCount + 1,
      errors: n.errors
    }), Q)
      throw Q;
  }, xe = (j, J = {}) => {
    Pe(o, j) && (Ft(J.defaultValue) ? F(j, Kt(Pe(r, j))) : (F(j, J.defaultValue), yt(r, j, Kt(J.defaultValue))), J.keepTouched || ln(n.touchedFields, j), J.keepDirty || (ln(n.dirtyFields, j), n.isDirty = J.defaultValue ? A(j, Kt(Pe(r, j))) : A()), J.keepError || (ln(n.errors, j), f.isValid && x()), p.state.next({ ...n }));
  }, Ae = (j, J = {}) => {
    const ie = j ? Kt(j) : r, Q = Kt(ie), H = Rn(j), X = H ? r : Q;
    if (J.keepDefaultValues || (r = ie), !J.keepValues) {
      if (J.keepDirtyValues) {
        const se = /* @__PURE__ */ new Set([
          ...l.mount,
          ...Object.keys(pa(r, i))
        ]);
        for (const ye of Array.from(se))
          Pe(n.dirtyFields, ye) ? yt(X, ye, Pe(i, ye)) : F(ye, Pe(X, ye));
      } else {
        if (Ym && Ft(j))
          for (const se of l.mount) {
            const ye = Pe(o, se);
            if (ye && ye._f) {
              const he = Array.isArray(ye._f.refs) ? ye._f.refs[0] : ye._f.ref;
              if (Tu(he)) {
                const le = he.closest("form");
                if (le) {
                  le.reset();
                  break;
                }
              }
            }
          }
        for (const se of l.mount)
          F(se, Pe(X, se));
      }
      i = Kt(X), p.array.next({
        values: { ...X }
      }), p.state.next({
        values: { ...X }
      });
    }
    l = {
      mount: J.keepDirtyValues ? l.mount : /* @__PURE__ */ new Set(),
      unMount: /* @__PURE__ */ new Set(),
      array: /* @__PURE__ */ new Set(),
      disabled: /* @__PURE__ */ new Set(),
      watch: /* @__PURE__ */ new Set(),
      watchAll: !1,
      focus: ""
    }, a.mount = !f.isValid || !!J.keepIsValid || !!J.keepDirtyValues, a.watch = !!t.shouldUnregister, p.state.next({
      submitCount: J.keepSubmitCount ? n.submitCount : 0,
      isDirty: H ? !1 : J.keepDirty ? n.isDirty : !!(J.keepDefaultValues && !Hr(j, r)),
      isSubmitted: J.keepIsSubmitted ? n.isSubmitted : !1,
      dirtyFields: H ? {} : J.keepDirtyValues ? J.keepDefaultValues && i ? pa(r, i) : n.dirtyFields : J.keepDefaultValues && j ? pa(r, j) : J.keepDirty ? n.dirtyFields : {},
      touchedFields: J.keepTouched ? n.touchedFields : {},
      errors: J.keepErrors ? n.errors : {},
      isSubmitSuccessful: J.keepIsSubmitSuccessful ? n.isSubmitSuccessful : !1,
      isSubmitting: !1
    });
  }, we = (j, J) => Ae(Do(j) ? j(i) : j, J), De = (j, J = {}) => {
    const ie = Pe(o, j), Q = ie && ie._f;
    if (Q) {
      const H = Q.refs ? Q.refs[0] : Q.ref;
      H.focus && (H.focus(), J.shouldSelect && Do(H.select) && H.select());
    }
  }, Ce = (j) => {
    n = {
      ...n,
      ...j
    };
  }, Me = {
    control: {
      register: re,
      unregister: ee,
      getFieldState: q,
      handleSubmit: ue,
      setError: K,
      _subscribe: ne,
      _runSchema: M,
      _getWatch: O,
      _getDirty: A,
      _setValid: x,
      _setFieldArray: b,
      _setDisabledField: G,
      _setErrors: S,
      _getFieldArray: _,
      _reset: Ae,
      _resetDefaultValues: () => Do(t.defaultValues) && t.defaultValues().then((j) => {
        we(j, t.resetOptions), p.state.next({
          isLoading: !1
        });
      }),
      _removeUnmounted: k,
      _disableForm: de,
      _subjects: p,
      _proxyFormState: f,
      get _fields() {
        return o;
      },
      get _formValues() {
        return i;
      },
      get _state() {
        return a;
      },
      set _state(j) {
        a = j;
      },
      get _defaultValues() {
        return r;
      },
      get _names() {
        return l;
      },
      set _names(j) {
        l = j;
      },
      get _formState() {
        return n;
      },
      get _options() {
        return t;
      },
      set _options(j) {
        t = {
          ...t,
          ...j
        };
      }
    },
    subscribe: W,
    trigger: z,
    register: re,
    handleSubmit: ue,
    watch: te,
    setValue: F,
    getValues: U,
    reset: we,
    resetField: xe,
    clearErrors: Y,
    unregister: ee,
    setError: K,
    setFocus: De,
    getFieldState: q
  };
  return {
    ...Me,
    formControl: Me
  };
}
var Br = () => {
  const e = typeof performance > "u" ? Date.now() : performance.now() * 1e3;
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (t) => {
    const n = (Math.random() * 16 + e) % 16 | 0;
    return (t == "x" ? n : n & 3 | 8).toString(16);
  });
}, Wf = (e, t, n = {}) => n.shouldFocus || Ft(n.shouldFocus) ? n.focusName || `${e}.${Ft(n.focusIndex) ? t : n.focusIndex}.` : "", Uf = (e, t) => [
  ...e,
  ...qn(t)
], qf = (e) => Array.isArray(e) ? e.map(() => {
}) : void 0;
function Kf(e, t, n) {
  return [
    ...e.slice(0, t),
    ...qn(n),
    ...e.slice(t)
  ];
}
var Yf = (e, t, n) => Array.isArray(e) ? (Ft(e[n]) && (e[n] = void 0), e.splice(n, 0, e.splice(t, 1)[0]), e) : [], Gf = (e, t) => [
  ...qn(t),
  ...qn(e)
];
function qz(e, t) {
  let n = 0;
  const o = [...e];
  for (const r of t)
    o.splice(r - n, 1), n++;
  return zl(o).length ? o : [];
}
var Xf = (e, t) => Ft(t) ? [] : qz(e, qn(t).sort((n, o) => n - o)), Zf = (e, t, n) => {
  [e[t], e[n]] = [e[n], e[t]];
}, $0 = (e, t, n) => (e[t] = n, e);
function d9(e) {
  const t = yo(), { control: n = t.control, name: o, keyName: r = "id", shouldUnregister: i, rules: a } = e, [l, c] = Z.useState(n._getFieldArray(o)), u = Z.useRef(n._getFieldArray(o).map(Br)), f = Z.useRef(l), d = Z.useRef(o), p = Z.useRef(!1);
  d.current = o, f.current = l, n._names.array.add(o), a && n.register(o, a), Z.useEffect(() => n._subjects.array.subscribe({
    next: ({ values: E, name: C }) => {
      if (C === d.current || !C) {
        const R = Pe(E, d.current);
        Array.isArray(R) && (c(R), u.current = R.map(Br));
      }
    }
  }).unsubscribe, [n]);
  const h = Z.useCallback((E) => {
    p.current = !0, n._setFieldArray(o, E);
  }, [n, o]), g = (E, C) => {
    const R = qn(Kt(E)), M = Uf(n._getFieldArray(o), R);
    n._names.focus = Wf(o, M.length - 1, C), u.current = Uf(u.current, R.map(Br)), h(M), c(M), n._setFieldArray(o, M, Uf, {
      argA: qf(E)
    });
  }, m = (E, C) => {
    const R = qn(Kt(E)), M = Gf(n._getFieldArray(o), R);
    n._names.focus = Wf(o, 0, C), u.current = Gf(u.current, R.map(Br)), h(M), c(M), n._setFieldArray(o, M, Gf, {
      argA: qf(E)
    });
  }, y = (E) => {
    const C = Xf(n._getFieldArray(o), E);
    u.current = Xf(u.current, E), h(C), c(C), !Array.isArray(Pe(n._fields, o)) && yt(n._fields, o, void 0), n._setFieldArray(o, C, Xf, {
      argA: E
    });
  }, x = (E, C, R) => {
    const M = qn(Kt(C)), v = Kf(n._getFieldArray(o), E, M);
    n._names.focus = Wf(o, E, R), u.current = Kf(u.current, E, M.map(Br)), h(v), c(v), n._setFieldArray(o, v, Kf, {
      argA: E,
      argB: qf(C)
    });
  }, T = (E, C) => {
    const R = n._getFieldArray(o);
    Zf(R, E, C), Zf(u.current, E, C), h(R), c(R), n._setFieldArray(o, R, Zf, {
      argA: E,
      argB: C
    }, !1);
  }, b = (E, C) => {
    const R = n._getFieldArray(o);
    Yf(R, E, C), Yf(u.current, E, C), h(R), c(R), n._setFieldArray(o, R, Yf, {
      argA: E,
      argB: C
    }, !1);
  }, w = (E, C) => {
    const R = Kt(C), M = $0(n._getFieldArray(o), E, R);
    u.current = [...M].map((v, I) => !v || I === E ? Br() : u.current[I]), h(M), c([...M]), n._setFieldArray(o, M, $0, {
      argA: E,
      argB: R
    }, !0, !1);
  }, S = (E) => {
    const C = qn(Kt(E));
    u.current = C.map(Br), h([...C]), c([...C]), n._setFieldArray(o, [...C], (R) => R, {}, !0, !1);
  };
  return Z.useEffect(() => {
    if (n._state.action = !1, eh(o, n._names) && n._subjects.state.next({
      ...n._formState
    }), p.current && (!ds(n._options.mode).isOnSubmit || n._formState.isSubmitted) && !ds(n._options.reValidateMode).isOnSubmit)
      if (n._options.resolver)
        n._runSchema([o]).then((E) => {
          const C = Pe(E.errors, o), R = Pe(n._formState.errors, o);
          (R ? !C && R.type || C && (R.type !== C.type || R.message !== C.message) : C && C.type) && (C ? yt(n._formState.errors, o, C) : ln(n._formState.errors, o), n._subjects.state.next({
            errors: n._formState.errors
          }));
        });
      else {
        const E = Pe(n._fields, o);
        E && E._f && !(ds(n._options.reValidateMode).isOnSubmit && ds(n._options.mode).isOnSubmit) && th(E, n._names.disabled, n._formValues, n._options.criteriaMode === Co.all, n._options.shouldUseNativeValidation, !0).then((C) => !Rn(C) && n._subjects.state.next({
          errors: ST(n._formState.errors, C, o)
        }));
      }
    n._subjects.state.next({
      name: o,
      values: Kt(n._formValues)
    }), n._names.focus && bs(n._fields, (E, C) => {
      if (n._names.focus && C.startsWith(n._names.focus) && E.focus)
        return E.focus(), 1;
    }), n._names.focus = "", n._setValid(), p.current = !1;
  }, [l, o, n]), Z.useEffect(() => (!Pe(n._formValues, o) && n._setFieldArray(o), () => {
    const E = (C, R) => {
      const M = Pe(n._fields, C);
      M && M._f && (M._f.mount = R);
    };
    n._options.shouldUnregister || i ? n.unregister(o) : E(o, !1);
  }), [o, n, r, i]), {
    swap: Z.useCallback(T, [h, o, n]),
    move: Z.useCallback(b, [h, o, n]),
    prepend: Z.useCallback(m, [h, o, n]),
    append: Z.useCallback(g, [h, o, n]),
    remove: Z.useCallback(y, [h, o, n]),
    insert: Z.useCallback(x, [h, o, n]),
    update: Z.useCallback(w, [h, o, n]),
    replace: Z.useCallback(S, [h, o, n]),
    fields: Z.useMemo(() => l.map((E, C) => ({
      ...E,
      [r]: u.current[C] || Br()
    })), [l, r])
  };
}
function f9(e = {}) {
  const t = Z.useRef(void 0), n = Z.useRef(void 0), [o, r] = Z.useState({
    isDirty: !1,
    isValidating: !1,
    isLoading: Do(e.defaultValues),
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    submitCount: 0,
    dirtyFields: {},
    touchedFields: {},
    validatingFields: {},
    errors: e.errors || {},
    disabled: e.disabled || !1,
    defaultValues: Do(e.defaultValues) ? void 0 : e.defaultValues
  });
  t.current || (t.current = {
    ...e.formControl ? e.formControl : Uz(e),
    formState: o
  }, e.formControl && e.defaultValues && !Do(e.defaultValues) && e.formControl.reset(e.defaultValues, e.resetOptions));
  const i = t.current.control;
  return i._options = e, Z.useLayoutEffect(() => i._subscribe({
    formState: i._proxyFormState,
    callback: () => r({ ...i._formState }),
    reRenderRoot: !0
  }), [i]), Z.useEffect(() => i._disableForm(e.disabled), [i, e.disabled]), Z.useEffect(() => {
    if (i._proxyFormState.isDirty) {
      const a = i._getDirty();
      a !== o.isDirty && i._subjects.state.next({
        isDirty: a
      });
    }
  }, [i, o.isDirty]), Z.useEffect(() => {
    e.values && !Hr(e.values, n.current) ? (i._reset(e.values, i._options.resetOptions), n.current = e.values, r((a) => ({ ...a }))) : i._resetDefaultValues();
  }, [e.values, i]), Z.useEffect(() => {
    e.errors && !Rn(e.errors) && i._setErrors(e.errors);
  }, [e.errors, i]), Z.useEffect(() => {
    i._state.mount || (i._setValid(), i._state.mount = !0), i._state.watch && (i._state.watch = !1, i._subjects.state.next({ ...i._formState })), i._removeUnmounted();
  }), Z.useEffect(() => {
    e.shouldUnregister && i._subjects.state.next({
      values: i._getWatch()
    });
  }, [e.shouldUnregister, i]), t.current.formState = pT(o, i), t.current;
}
const I0 = (e, t, n) => {
  if (e && "reportValidity" in e) {
    const o = Pe(n, t);
    e.setCustomValidity(o && o.message || ""), e.reportValidity();
  }
}, TT = (e, t) => {
  for (const n in t.fields) {
    const o = t.fields[n];
    o && o.ref && "reportValidity" in o.ref ? I0(o.ref, n, e) : o && o.refs && o.refs.forEach((r) => I0(r, n, e));
  }
}, Kz = (e, t) => {
  t.shouldUseNativeValidation && TT(e, t);
  const n = {};
  for (const o in e) {
    const r = Pe(t.fields, o), i = Object.assign(e[o] || {}, { ref: r && r.ref });
    if (Yz(t.names || Object.keys(e), o)) {
      const a = Object.assign({}, Pe(n, o));
      yt(a, "root", i), yt(n, o, a);
    } else yt(n, o, i);
  }
  return n;
}, Yz = (e, t) => {
  const n = R0(t);
  return e.some((o) => R0(o).match(`^${n}\\.\\d+`));
};
function R0(e) {
  return e.replace(/\]|\[/g, "");
}
function Gz(e, t) {
  for (var n = {}; e.length; ) {
    var o = e[0], r = o.code, i = o.message, a = o.path.join(".");
    if (!n[a]) if ("unionErrors" in o) {
      var l = o.unionErrors[0].errors[0];
      n[a] = { message: l.message, type: l.code };
    } else n[a] = { message: i, type: r };
    if ("unionErrors" in o && o.unionErrors.forEach(function(f) {
      return f.errors.forEach(function(d) {
        return e.push(d);
      });
    }), t) {
      var c = n[a].types, u = c && c[o.code];
      n[a] = mT(a, t, n, r, u ? [].concat(u, o.message) : o.message);
    }
    e.shift();
  }
  return n;
}
function p9(e, t, n) {
  return n === void 0 && (n = {}), function(o, r, i) {
    try {
      return Promise.resolve(function(a, l) {
        try {
          var c = Promise.resolve(e[n.mode === "sync" ? "parse" : "parseAsync"](o, t)).then(function(u) {
            return i.shouldUseNativeValidation && TT({}, i), { errors: {}, values: n.raw ? Object.assign({}, o) : u };
          });
        } catch (u) {
          return l(u);
        }
        return c && c.then ? c.then(void 0, l) : c;
      }(0, function(a) {
        if (function(l) {
          return Array.isArray(l == null ? void 0 : l.errors);
        }(a)) return { values: {}, errors: Kz(Gz(a.errors, !i.shouldUseNativeValidation && i.criteriaMode === "all"), i) };
        throw a;
      }));
    } catch (a) {
      return Promise.reject(a);
    }
  };
}
function Xz({
  children: e,
  formInstance: t,
  onSubmit: n
}) {
  const { handleSubmit: o, trigger: r } = t;
  return dt(() => {
    r();
  }, [r]), t ? /* @__PURE__ */ $(kz, { ...t, children: /* @__PURE__ */ $(Ho, { component: "form", autoComplete: "off", onSubmit: o(n), children: e }) }) : null;
}
const h9 = Ie(Xz), Zz = Ie(({ name: e, ...t }) => {
  const { control: n } = yo();
  return /* @__PURE__ */ $(
    di,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: o, value: r, ref: i }, fieldState: { error: a } }) => /* @__PURE__ */ $(
        RS,
        {
          ...t,
          value: r,
          onChange: o,
          inputRef: i,
          isError: !!a
        }
      )
    }
  );
});
Zz.displayName = "CheckboxUncontrolled";
function Qz({
  isSubmitting: e,
  submitButtonText: t = "Submit",
  cancelButtonText: n = "Cancel"
}) {
  const o = yo();
  if (!o)
    return null;
  const { formState: r, reset: i, trigger: a } = o, { isValid: l, isSubmitting: c, defaultValues: u } = r;
  return /* @__PURE__ */ Te(dn, { row: !0, mt: "32px", children: [
    /* @__PURE__ */ $(
      On,
      {
        type: "reset",
        text: n,
        isOutlined: !0,
        disabled: e || c,
        onClick: () => {
          i(u), a();
        }
      }
    ),
    /* @__PURE__ */ $(
      On,
      {
        type: "submit",
        text: t,
        loading: e || c,
        disabled: !l
      }
    )
  ] });
}
Qz.displayName = "FormUncontrolledAction";
const Jz = Ie(({ name: e, ...t }) => {
  const { control: n } = yo();
  return /* @__PURE__ */ $(
    di,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: o, onBlur: r, value: i, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ $(
        wd,
        {
          ...t,
          value: i,
          onChange: o,
          onBlur: r,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
Jz.displayName = "InputUncontrolled";
const ej = Ie(({ name: e, ...t }) => {
  const { control: n } = yo();
  return /* @__PURE__ */ $(
    di,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: o, onBlur: r, value: i, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ $(
        NS,
        {
          ...t,
          value: i,
          onChange: o,
          onBlur: r,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || "　"
        }
      )
    }
  );
});
ej.displayName = "NumberInputUncontrolled";
const tj = Ie(({ name: e, ...t }) => {
  const { control: n } = yo();
  return /* @__PURE__ */ $(
    di,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: o, onBlur: r, value: i, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ $(
        L1,
        {
          ...t,
          value: i,
          onChange: o,
          onBlur: r,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
tj.displayName = "OtpInputUncontrolled";
const nj = Ie(({ name: e, ...t }) => {
  const { control: n } = yo();
  return /* @__PURE__ */ $(
    di,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: o, onBlur: r, value: i, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ $(
        B1,
        {
          ...t,
          value: i,
          onChange: o,
          onBlur: r,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
nj.displayName = "PasswordUncontrolled";
const oj = [], rj = Ie(
  ({ name: e, options: t = oj, ...n }) => {
    const { control: o } = yo();
    return /* @__PURE__ */ $(
      di,
      {
        control: o,
        name: e,
        render: ({ field: { onChange: r, value: i, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ $(
          j1,
          {
            ...n,
            name: e,
            options: t,
            value: i,
            onChange: (c) => r(c.value),
            inputRef: a,
            isError: !!l
          }
        )
      }
    );
  }
);
rj.displayName = "RadiosUncontrolled";
const ij = [], sj = Ie(
  ({ name: e, options: t = ij, ...n }) => {
    const { control: o } = yo();
    return /* @__PURE__ */ $(
      di,
      {
        control: o,
        name: e,
        render: ({ field: { onChange: r, onBlur: i, value: a, ref: l }, fieldState: { error: c } }) => /* @__PURE__ */ $(
          sT,
          {
            ...n,
            options: t,
            value: a,
            onChange: (u) => r(u == null ? void 0 : u.value),
            onBlur: i,
            inputRef: l,
            isError: !!c,
            errorMessage: (c == null ? void 0 : c.message) || "　"
          }
        )
      }
    );
  }
);
sj.displayName = "SelectUncontrolled";
const aj = Ie(({ name: e, ...t }) => {
  const { control: n } = yo();
  return /* @__PURE__ */ $(
    di,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: o, value: r, ref: i } }) => /* @__PURE__ */ $(Km, { ...t, value: r, onChange: o, inputRef: i })
    }
  );
});
aj.displayName = "SwitchUncontrolled";
const ls = {
  xs: 1,
  // 1行1个
  sm: 1,
  // 1行1个
  md: 2,
  // 1行2个
  lg: 3,
  // 1行3个
  xl: 4
  // 1行4个
}, lj = [], k0 = (e) => {
  let t;
  const n = /* @__PURE__ */ new Set(), o = (u, f) => {
    const d = typeof u == "function" ? u(t) : u;
    if (!Object.is(d, t)) {
      const p = t;
      t = f ?? (typeof d != "object" || d === null) ? d : Object.assign({}, t, d), n.forEach((h) => h(t, p));
    }
  }, r = () => t, l = { setState: o, getState: r, getInitialState: () => c, subscribe: (u) => (n.add(u), () => n.delete(u)) }, c = t = e(o, r, l);
  return l;
}, ET = (e) => e ? k0(e) : k0, cj = (e) => e;
function Rr(e, t = cj) {
  const n = Z.useSyncExternalStore(
    e.subscribe,
    () => t(e.getState()),
    () => t(e.getInitialState())
  );
  return Z.useDebugValue(n), n;
}
const P0 = (e) => {
  const t = ET(e), n = (o) => Rr(t, o);
  return Object.assign(n, t), n;
}, fi = (e) => e ? P0(e) : P0, N0 = { BASE_URL: "/", DEV: !1, MODE: "production", PROD: !0, SSR: !1 }, nh = /* @__PURE__ */ new Map(), yc = (e) => {
  const t = nh.get(e);
  return t ? Object.fromEntries(
    Object.entries(t.stores).map(([n, o]) => [n, o.getState()])
  ) : {};
}, uj = (e, t, n) => {
  if (e === void 0)
    return {
      type: "untracked",
      connection: t.connect(n)
    };
  const o = nh.get(n.name);
  if (o)
    return { type: "tracked", store: e, ...o };
  const r = {
    connection: t.connect(n),
    stores: {}
  };
  return nh.set(n.name, r), { type: "tracked", store: e, ...r };
}, dj = (e, t = {}) => (n, o, r) => {
  const { enabled: i, anonymousActionType: a, store: l, ...c } = t;
  let u;
  try {
    u = (i ?? (N0 ? "production" : void 0) !== "production") && window.__REDUX_DEVTOOLS_EXTENSION__;
  } catch {
  }
  if (!u)
    return e(n, o, r);
  const { connection: f, ...d } = uj(l, u, c);
  let p = !0;
  r.setState = (m, y, x) => {
    const T = n(m, y);
    if (!p) return T;
    const b = x === void 0 ? { type: a || "anonymous" } : typeof x == "string" ? { type: x } : x;
    return l === void 0 ? (f == null || f.send(b, o()), T) : (f == null || f.send(
      {
        ...b,
        type: `${l}/${b.type}`
      },
      {
        ...yc(c.name),
        [l]: r.getState()
      }
    ), T);
  };
  const h = (...m) => {
    const y = p;
    p = !1, n(...m), p = y;
  }, g = e(r.setState, o, r);
  if (d.type === "untracked" ? f == null || f.init(g) : (d.stores[d.store] = r, f == null || f.init(
    Object.fromEntries(
      Object.entries(d.stores).map(([m, y]) => [
        m,
        m === d.store ? g : y.getState()
      ])
    )
  )), r.dispatchFromDevtools && typeof r.dispatch == "function") {
    let m = !1;
    const y = r.dispatch;
    r.dispatch = (...x) => {
      (N0 ? "production" : void 0) !== "production" && x[0].type === "__setState" && !m && (console.warn(
        '[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'
      ), m = !0), y(...x);
    };
  }
  return f.subscribe((m) => {
    var y;
    switch (m.type) {
      case "ACTION":
        if (typeof m.payload != "string") {
          console.error(
            "[zustand devtools middleware] Unsupported action format"
          );
          return;
        }
        return Qf(
          m.payload,
          (x) => {
            if (x.type === "__setState") {
              if (l === void 0) {
                h(x.state);
                return;
              }
              Object.keys(x.state).length !== 1 && console.error(
                `
                    [zustand devtools middleware] Unsupported __setState action format.
                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),
                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }
                    `
              );
              const T = x.state[l];
              if (T == null)
                return;
              JSON.stringify(r.getState()) !== JSON.stringify(T) && h(T);
              return;
            }
            r.dispatchFromDevtools && typeof r.dispatch == "function" && r.dispatch(x);
          }
        );
      case "DISPATCH":
        switch (m.payload.type) {
          case "RESET":
            return h(g), l === void 0 ? f == null ? void 0 : f.init(r.getState()) : f == null ? void 0 : f.init(yc(c.name));
          case "COMMIT":
            if (l === void 0) {
              f == null || f.init(r.getState());
              return;
            }
            return f == null ? void 0 : f.init(yc(c.name));
          case "ROLLBACK":
            return Qf(m.state, (x) => {
              if (l === void 0) {
                h(x), f == null || f.init(r.getState());
                return;
              }
              h(x[l]), f == null || f.init(yc(c.name));
            });
          case "JUMP_TO_STATE":
          case "JUMP_TO_ACTION":
            return Qf(m.state, (x) => {
              if (l === void 0) {
                h(x);
                return;
              }
              JSON.stringify(r.getState()) !== JSON.stringify(x[l]) && h(x[l]);
            });
          case "IMPORT_STATE": {
            const { nextLiftedState: x } = m.payload, T = (y = x.computedStates.slice(-1)[0]) == null ? void 0 : y.state;
            if (!T) return;
            h(l === void 0 ? T : T[l]), f == null || f.send(
              null,
              // FIXME no-any
              x
            );
            return;
          }
          case "PAUSE_RECORDING":
            return p = !p;
        }
        return;
    }
  }), g;
}, Vi = dj, Qf = (e, t) => {
  let n;
  try {
    n = JSON.parse(e);
  } catch (o) {
    console.error(
      "[zustand devtools middleware] Could not parse the received json",
      o
    );
  }
  n !== void 0 && t(n);
};
function fj(e, t) {
  let n;
  try {
    n = e();
  } catch {
    return;
  }
  return {
    getItem: (r) => {
      var i;
      const a = (c) => c === null ? null : JSON.parse(c, void 0), l = (i = n.getItem(r)) != null ? i : null;
      return l instanceof Promise ? l.then(a) : a(l);
    },
    setItem: (r, i) => n.setItem(
      r,
      JSON.stringify(i, void 0)
    ),
    removeItem: (r) => n.removeItem(r)
  };
}
const oh = (e) => (t) => {
  try {
    const n = e(t);
    return n instanceof Promise ? n : {
      then(o) {
        return oh(o)(n);
      },
      catch(o) {
        return this;
      }
    };
  } catch (n) {
    return {
      then(o) {
        return this;
      },
      catch(o) {
        return oh(o)(n);
      }
    };
  }
}, pj = (e, t) => (n, o, r) => {
  let i = {
    storage: fj(() => localStorage),
    partialize: (m) => m,
    version: 0,
    merge: (m, y) => ({
      ...y,
      ...m
    }),
    ...t
  }, a = !1;
  const l = /* @__PURE__ */ new Set(), c = /* @__PURE__ */ new Set();
  let u = i.storage;
  if (!u)
    return e(
      (...m) => {
        console.warn(
          `[zustand persist middleware] Unable to update item '${i.name}', the given storage is currently unavailable.`
        ), n(...m);
      },
      o,
      r
    );
  const f = () => {
    const m = i.partialize({ ...o() });
    return u.setItem(i.name, {
      state: m,
      version: i.version
    });
  }, d = r.setState;
  r.setState = (m, y) => {
    d(m, y), f();
  };
  const p = e(
    (...m) => {
      n(...m), f();
    },
    o,
    r
  );
  r.getInitialState = () => p;
  let h;
  const g = () => {
    var m, y;
    if (!u) return;
    a = !1, l.forEach((T) => {
      var b;
      return T((b = o()) != null ? b : p);
    });
    const x = ((y = i.onRehydrateStorage) == null ? void 0 : y.call(i, (m = o()) != null ? m : p)) || void 0;
    return oh(u.getItem.bind(u))(i.name).then((T) => {
      if (T)
        if (typeof T.version == "number" && T.version !== i.version) {
          if (i.migrate) {
            const b = i.migrate(
              T.state,
              T.version
            );
            return b instanceof Promise ? b.then((w) => [!0, w]) : [!0, b];
          }
          console.error(
            "State loaded from storage couldn't be migrated since no migrate function was provided"
          );
        } else
          return [!1, T.state];
      return [!1, void 0];
    }).then((T) => {
      var b;
      const [w, S] = T;
      if (h = i.merge(
        S,
        (b = o()) != null ? b : p
      ), n(h, !0), w)
        return f();
    }).then(() => {
      x == null || x(h, void 0), h = o(), a = !0, c.forEach((T) => T(h));
    }).catch((T) => {
      x == null || x(void 0, T);
    });
  };
  return r.persist = {
    setOptions: (m) => {
      i = {
        ...i,
        ...m
      }, m.storage && (u = m.storage);
    },
    clearStorage: () => {
      u == null || u.removeItem(i.name);
    },
    getOptions: () => i,
    rehydrate: () => g(),
    hasHydrated: () => a,
    onHydrate: (m) => (l.add(m), () => {
      l.delete(m);
    }),
    onFinishHydration: (m) => (c.add(m), () => {
      c.delete(m);
    })
  }, i.skipHydration || g(), h || p;
}, CT = pj;
function M0() {
  return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
const hj = fi()(
  Vi(
    CT(
      (e) => ({
        themeMode: M0(),
        setThemeMode: (t) => e({ themeMode: t }),
        toggleThemeMode: () => e((t) => ({ themeMode: t.themeMode === "dark" ? "light" : "dark" })),
        resetThemeMode: () => e({ themeMode: M0() })
      }),
      {
        name: "VENOMOUS_UI__THEME_MODE"
      }
    )
  )
);
function Ud() {
  const e = Rr(hj);
  return {
    ...e,
    isDarkMode: e.themeMode === "dark"
  };
}
function OT(e) {
  return {
    origin: e,
    light: Ks(e, 0.5),
    dark: qs(e, 0.5),
    opacity: bt(e, 0.2)
  };
}
var $T = /* @__PURE__ */ ((e) => (e.Iron = "Iron", e.Cyan = "Cyan", e.Teal = "Teal", e.Coral = "Coral", e.Amber = "Amber", e.Ochre = "Ochre", e))($T || {});
const IT = {
  Iron: "#90a4ae",
  Cyan: "#00bcd4",
  Teal: "#009688",
  Coral: "#FFA07A",
  Amber: "#ffb300",
  Ochre: "#E3D026"
};
function rh(e) {
  const t = IT[e], { light: n, dark: o, opacity: r } = OT(t);
  return {
    main: t,
    light: n,
    dark: o,
    opacity: r,
    contrastText: "#fff",
    error: "#f44336"
  };
}
const mj = fi()(
  Vi(
    CT(
      (e) => ({
        themePaletteName: "Cyan",
        themePalette: rh(
          "Cyan"
          /* Cyan */
        ),
        setThemePaletteName: (t) => e({ themePaletteName: t, themePalette: rh(t) })
      }),
      {
        name: "VENOMOUS_UI__THEME_PALETTE"
      }
    )
  )
);
function Qm() {
  return {
    ...mj(),
    allPaletteNames: Object.keys($T),
    allPaletteMainColors: IT
  };
}
const ma = Mx({
  themeId: Fo
});
function gj() {
  const { breakpoints: e } = Pr(), t = ma(e.down("sm")), n = ma(e.between("sm", "md")), o = ma(e.between("md", "lg")), r = ma(e.between("lg", "xl")), i = ma(e.up("xl")), a = Qe(() => {
    var l;
    return ((l = [
      ["xs", t],
      ["sm", n],
      ["md", o],
      ["lg", r],
      ["xl", i]
    ].find(([, c]) => c)) == null ? void 0 : l[0].toString()) || "xs";
  }, [t, n, o, r, i]);
  return {
    isXs: t,
    isSm: n,
    isMd: o,
    isLg: r,
    isXl: i,
    breakpoints: {
      current: a,
      unit: "px",
      values: {
        xs: 0,
        sm: 600,
        md: 900,
        lg: 1200,
        xl: 1536
      }
    }
  };
}
function m9() {
  return (e) => e;
}
function yj() {
  const e = CV(), [t, n] = yn(!1), o = ze(() => {
    t ? document.exitFullscreen().then(() => {
      n(!1);
    }).catch(() => {
      e({
        type: "error",
        title: "Error",
        description: "Error attempting to disable full-screen mode"
      });
    }) : document.documentElement.requestFullscreen().then(() => {
      n(!0);
    }).catch(() => {
      e({
        type: "error",
        title: "Error",
        description: "Error attempting to enable full-screen mode"
      });
    });
  }, [t, e]);
  return dt(() => {
    const r = () => {
      n(document.fullscreenElement !== null);
    };
    return document.addEventListener("fullscreenchange", r), () => {
      document.removeEventListener("fullscreenchange", r);
    };
  }, []), {
    isFullScreen: t,
    setIsFullScreen: n,
    toggleFullScreen: o
  };
}
function bj({
  gridStyle: e,
  cols: t
}) {
  const { isXs: n, isSm: o, isMd: r, isLg: i } = gj(), a = Qe(() => {
    let c;
    return n ? c = (t == null ? void 0 : t.xs) ?? ls.xs : o ? c = (t == null ? void 0 : t.sm) ?? ls.sm : r ? c = (t == null ? void 0 : t.md) ?? ls.md : i ? c = (t == null ? void 0 : t.lg) ?? ls.lg : c = (t == null ? void 0 : t.xl) ?? ls.xl, `${100 / c}%`;
  }, [n, o, r, i, t]);
  return {
    gridComponents: Qe(
      () => ({
        List: ({ ref: c, style: u, children: f, ...d }) => /* @__PURE__ */ $(
          "div",
          {
            ref: c,
            ...d,
            style: { display: "flex", flexWrap: "wrap", ...u, ...e },
            children: f
          }
        ),
        Item: ({ children: c, ...u }) => /* @__PURE__ */ $(
          "div",
          {
            ...u,
            style: {
              width: a,
              display: "flex",
              boxSizing: "border-box",
              flex: "none",
              alignContent: "stretch"
            },
            children: c
          }
        )
      }),
      [a, e]
    )
  };
}
const vj = ({
  height: e,
  width: t,
  items: n = lj,
  renderGridItem: o,
  gridStyle: r,
  cols: i = ls
}) => {
  const { gridComponents: a } = bj({ gridStyle: r, cols: i });
  return /* @__PURE__ */ $(
    dn,
    {
      className: "VenomousUI-Grid",
      sx: {
        height: e || "100%",
        width: t || "100%",
        "& > *": {
          flex: "unset",
          width: "100%"
        }
      },
      children: /* @__PURE__ */ $(
        J_,
        {
          style: { height: "100%" },
          totalCount: n.length,
          components: a,
          itemContent: (l) => o(n[l], l)
        }
      )
    }
  );
}, xj = Ie(vj);
var Jf = { exports: {} }, _0;
function wj() {
  return _0 || (_0 = 1, (() => {
    var e = { 296: (r, i, a) => {
      var l = /^\s+|\s+$/g, c = /^[-+]0x[0-9a-f]+$/i, u = /^0b[01]+$/i, f = /^0o[0-7]+$/i, d = parseInt, p = typeof a.g == "object" && a.g && a.g.Object === Object && a.g, h = typeof self == "object" && self && self.Object === Object && self, g = p || h || Function("return this")(), m = Object.prototype.toString, y = Math.max, x = Math.min, T = function() {
        return g.Date.now();
      };
      function b(S) {
        var E = typeof S;
        return !!S && (E == "object" || E == "function");
      }
      function w(S) {
        if (typeof S == "number") return S;
        if (function(R) {
          return typeof R == "symbol" || /* @__PURE__ */ function(M) {
            return !!M && typeof M == "object";
          }(R) && m.call(R) == "[object Symbol]";
        }(S)) return NaN;
        if (b(S)) {
          var E = typeof S.valueOf == "function" ? S.valueOf() : S;
          S = b(E) ? E + "" : E;
        }
        if (typeof S != "string") return S === 0 ? S : +S;
        S = S.replace(l, "");
        var C = u.test(S);
        return C || f.test(S) ? d(S.slice(2), C ? 2 : 8) : c.test(S) ? NaN : +S;
      }
      r.exports = function(S, E, C) {
        var R, M, v, I, k, A, O = 0, _ = !1, N = !1, L = !0;
        if (typeof S != "function") throw new TypeError("Expected a function");
        function F(q) {
          var Y = R, K = M;
          return R = M = void 0, O = q, I = S.apply(K, Y);
        }
        function D(q) {
          var Y = q - A;
          return A === void 0 || Y >= E || Y < 0 || N && q - O >= v;
        }
        function B() {
          var q = T();
          if (D(q)) return z(q);
          k = setTimeout(B, function(Y) {
            var K = E - (Y - A);
            return N ? x(K, v - (Y - O)) : K;
          }(q));
        }
        function z(q) {
          return k = void 0, L && R ? F(q) : (R = M = void 0, I);
        }
        function U() {
          var q = T(), Y = D(q);
          if (R = arguments, M = this, A = q, Y) {
            if (k === void 0) return function(K) {
              return O = K, k = setTimeout(B, E), _ ? F(K) : I;
            }(A);
            if (N) return k = setTimeout(B, E), F(A);
          }
          return k === void 0 && (k = setTimeout(B, E)), I;
        }
        return E = w(E) || 0, b(C) && (_ = !!C.leading, v = (N = "maxWait" in C) ? y(w(C.maxWait) || 0, E) : v, L = "trailing" in C ? !!C.trailing : L), U.cancel = function() {
          k !== void 0 && clearTimeout(k), O = 0, R = A = M = k = void 0;
        }, U.flush = function() {
          return k === void 0 ? I : z(T());
        }, U;
      };
    }, 96: (r, i, a) => {
      var l = "Expected a function", c = NaN, u = "[object Symbol]", f = /^\s+|\s+$/g, d = /^[-+]0x[0-9a-f]+$/i, p = /^0b[01]+$/i, h = /^0o[0-7]+$/i, g = parseInt, m = typeof a.g == "object" && a.g && a.g.Object === Object && a.g, y = typeof self == "object" && self && self.Object === Object && self, x = m || y || Function("return this")(), T = Object.prototype.toString, b = Math.max, w = Math.min, S = function() {
        return x.Date.now();
      };
      function E(R) {
        var M = typeof R;
        return !!R && (M == "object" || M == "function");
      }
      function C(R) {
        if (typeof R == "number") return R;
        if (function(I) {
          return typeof I == "symbol" || /* @__PURE__ */ function(k) {
            return !!k && typeof k == "object";
          }(I) && T.call(I) == u;
        }(R)) return c;
        if (E(R)) {
          var M = typeof R.valueOf == "function" ? R.valueOf() : R;
          R = E(M) ? M + "" : M;
        }
        if (typeof R != "string") return R === 0 ? R : +R;
        R = R.replace(f, "");
        var v = p.test(R);
        return v || h.test(R) ? g(R.slice(2), v ? 2 : 8) : d.test(R) ? c : +R;
      }
      r.exports = function(R, M, v) {
        var I = !0, k = !0;
        if (typeof R != "function") throw new TypeError(l);
        return E(v) && (I = "leading" in v ? !!v.leading : I, k = "trailing" in v ? !!v.trailing : k), function(A, O, _) {
          var N, L, F, D, B, z, U = 0, q = !1, Y = !1, K = !0;
          if (typeof A != "function") throw new TypeError(l);
          function te(re) {
            var V = N, de = L;
            return N = L = void 0, U = re, D = A.apply(de, V);
          }
          function ne(re) {
            var V = re - z;
            return z === void 0 || V >= O || V < 0 || Y && re - U >= F;
          }
          function W() {
            var re = S();
            if (ne(re)) return ee(re);
            B = setTimeout(W, function(V) {
              var de = O - (V - z);
              return Y ? w(de, F - (V - U)) : de;
            }(re));
          }
          function ee(re) {
            return B = void 0, K && N ? te(re) : (N = L = void 0, D);
          }
          function G() {
            var re = S(), V = ne(re);
            if (N = arguments, L = this, z = re, V) {
              if (B === void 0) return function(de) {
                return U = de, B = setTimeout(W, O), q ? te(de) : D;
              }(z);
              if (Y) return B = setTimeout(W, O), te(z);
            }
            return B === void 0 && (B = setTimeout(W, O)), D;
          }
          return O = C(O) || 0, E(_) && (q = !!_.leading, F = (Y = "maxWait" in _) ? b(C(_.maxWait) || 0, O) : F, K = "trailing" in _ ? !!_.trailing : K), G.cancel = function() {
            B !== void 0 && clearTimeout(B), U = 0, N = z = L = B = void 0;
          }, G.flush = function() {
            return B === void 0 ? D : ee(S());
          }, G;
        }(R, M, { leading: I, maxWait: M, trailing: k });
      };
    }, 703: (r, i, a) => {
      var l = a(414);
      function c() {
      }
      function u() {
      }
      u.resetWarningCache = c, r.exports = function() {
        function f(h, g, m, y, x, T) {
          if (T !== l) {
            var b = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
            throw b.name = "Invariant Violation", b;
          }
        }
        function d() {
          return f;
        }
        f.isRequired = f;
        var p = { array: f, bigint: f, bool: f, func: f, number: f, object: f, string: f, symbol: f, any: f, arrayOf: d, element: f, elementType: f, instanceOf: d, node: f, objectOf: d, oneOf: d, oneOfType: d, shape: d, exact: d, checkPropTypes: u, resetWarningCache: c };
        return p.PropTypes = p, p;
      };
    }, 697: (r, i, a) => {
      r.exports = a(703)();
    }, 414: (r) => {
      r.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    } }, t = {};
    function n(r) {
      var i = t[r];
      if (i !== void 0) return i.exports;
      var a = t[r] = { exports: {} };
      return e[r](a, a.exports, n), a.exports;
    }
    n.n = (r) => {
      var i = r && r.__esModule ? () => r.default : () => r;
      return n.d(i, { a: i }), i;
    }, n.d = (r, i) => {
      for (var a in i) n.o(i, a) && !n.o(r, a) && Object.defineProperty(r, a, { enumerable: !0, get: i[a] });
    }, n.g = function() {
      if (typeof globalThis == "object") return globalThis;
      try {
        return this || new Function("return this")();
      } catch {
        if (typeof window == "object") return window;
      }
    }(), n.o = (r, i) => Object.prototype.hasOwnProperty.call(r, i), n.r = (r) => {
      typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(r, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(r, "__esModule", { value: !0 });
    };
    var o = {};
    (() => {
      n.r(o), n.d(o, { LazyLoadComponent: () => V, LazyLoadImage: () => ie, trackWindowScroll: () => D });
      const r = Z;
      var i = n.n(r), a = n(697);
      function l() {
        return typeof window < "u" && "IntersectionObserver" in window && "isIntersecting" in window.IntersectionObserverEntry.prototype;
      }
      function c(Q) {
        return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, c(Q);
      }
      function u(Q, H) {
        var X = Object.keys(Q);
        if (Object.getOwnPropertySymbols) {
          var se = Object.getOwnPropertySymbols(Q);
          H && (se = se.filter(function(ye) {
            return Object.getOwnPropertyDescriptor(Q, ye).enumerable;
          })), X.push.apply(X, se);
        }
        return X;
      }
      function f(Q, H, X) {
        return (H = p(H)) in Q ? Object.defineProperty(Q, H, { value: X, enumerable: !0, configurable: !0, writable: !0 }) : Q[H] = X, Q;
      }
      function d(Q, H) {
        for (var X = 0; X < H.length; X++) {
          var se = H[X];
          se.enumerable = se.enumerable || !1, se.configurable = !0, "value" in se && (se.writable = !0), Object.defineProperty(Q, p(se.key), se);
        }
      }
      function p(Q) {
        var H = function(X, se) {
          if (c(X) !== "object" || X === null) return X;
          var ye = X[Symbol.toPrimitive];
          if (ye !== void 0) {
            var he = ye.call(X, "string");
            if (c(he) !== "object") return he;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(X);
        }(Q);
        return c(H) === "symbol" ? H : String(H);
      }
      function h(Q, H) {
        return h = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(X, se) {
          return X.__proto__ = se, X;
        }, h(Q, H);
      }
      function g(Q) {
        return g = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, g(Q);
      }
      var m = function(Q) {
        Q.forEach(function(H) {
          H.isIntersecting && H.target.onVisible();
        });
      }, y = {}, x = function(Q) {
        (function(ae, ce) {
          if (typeof ce != "function" && ce !== null) throw new TypeError("Super expression must either be null or a function");
          ae.prototype = Object.create(ce && ce.prototype, { constructor: { value: ae, writable: !0, configurable: !0 } }), Object.defineProperty(ae, "prototype", { writable: !1 }), ce && h(ae, ce);
        })(le, Q);
        var H, X, se, ye, he = (se = le, ye = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var ae, ce = g(se);
          if (ye) {
            var Se = g(this).constructor;
            ae = Reflect.construct(ce, arguments, Se);
          } else ae = ce.apply(this, arguments);
          return function($e, oe) {
            if (oe && (c(oe) === "object" || typeof oe == "function")) return oe;
            if (oe !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(be) {
              if (be === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return be;
            }($e);
          }(this, ae);
        });
        function le(ae) {
          var ce;
          if (function($e, oe) {
            if (!($e instanceof oe)) throw new TypeError("Cannot call a class as a function");
          }(this, le), (ce = he.call(this, ae)).supportsObserver = !ae.scrollPosition && ae.useIntersectionObserver && l(), ce.supportsObserver) {
            var Se = ae.threshold;
            ce.observer = function($e) {
              return y[$e] = y[$e] || new IntersectionObserver(m, { rootMargin: $e + "px" }), y[$e];
            }(Se);
          }
          return ce;
        }
        return H = le, X = [{ key: "componentDidMount", value: function() {
          this.placeholder && this.observer && (this.placeholder.onVisible = this.props.onVisible, this.observer.observe(this.placeholder)), this.supportsObserver || this.updateVisibility();
        } }, { key: "componentWillUnmount", value: function() {
          this.observer && this.placeholder && this.observer.unobserve(this.placeholder);
        } }, { key: "componentDidUpdate", value: function() {
          this.supportsObserver || this.updateVisibility();
        } }, { key: "getPlaceholderBoundingBox", value: function() {
          var ae = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props.scrollPosition, ce = this.placeholder.getBoundingClientRect(), Se = this.placeholder.style, $e = parseInt(Se.getPropertyValue("margin-left"), 10) || 0, oe = parseInt(Se.getPropertyValue("margin-top"), 10) || 0;
          return { bottom: ae.y + ce.bottom + oe, left: ae.x + ce.left + $e, right: ae.x + ce.right + $e, top: ae.y + ce.top + oe };
        } }, { key: "isPlaceholderInViewport", value: function() {
          if (typeof window > "u" || !this.placeholder) return !1;
          var ae = this.props, ce = ae.scrollPosition, Se = ae.threshold, $e = this.getPlaceholderBoundingBox(ce), oe = ce.y + window.innerHeight, be = ce.x, Ne = ce.x + window.innerWidth, We = ce.y;
          return We - Se <= $e.bottom && oe + Se >= $e.top && be - Se <= $e.right && Ne + Se >= $e.left;
        } }, { key: "updateVisibility", value: function() {
          this.isPlaceholderInViewport() && this.props.onVisible();
        } }, { key: "render", value: function() {
          var ae = this, ce = this.props, Se = ce.className, $e = ce.height, oe = ce.placeholder, be = ce.style, Ne = ce.width;
          if (oe && typeof oe.type != "function") return i().cloneElement(oe, { ref: function(Ue) {
            return ae.placeholder = Ue;
          } });
          var We = function(Ue) {
            for (var vt = 1; vt < arguments.length; vt++) {
              var ut = arguments[vt] != null ? arguments[vt] : {};
              vt % 2 ? u(Object(ut), !0).forEach(function(Tt) {
                f(Ue, Tt, ut[Tt]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(Ue, Object.getOwnPropertyDescriptors(ut)) : u(Object(ut)).forEach(function(Tt) {
                Object.defineProperty(Ue, Tt, Object.getOwnPropertyDescriptor(ut, Tt));
              });
            }
            return Ue;
          }({ display: "inline-block" }, be);
          return Ne !== void 0 && (We.width = Ne), $e !== void 0 && (We.height = $e), i().createElement("span", { className: Se, ref: function(Ue) {
            return ae.placeholder = Ue;
          }, style: We }, oe);
        } }], X && d(H.prototype, X), Object.defineProperty(H, "prototype", { writable: !1 }), le;
      }(i().Component);
      x.propTypes = { onVisible: a.PropTypes.func.isRequired, className: a.PropTypes.string, height: a.PropTypes.oneOfType([a.PropTypes.number, a.PropTypes.string]), placeholder: a.PropTypes.element, threshold: a.PropTypes.number, useIntersectionObserver: a.PropTypes.bool, scrollPosition: a.PropTypes.shape({ x: a.PropTypes.number.isRequired, y: a.PropTypes.number.isRequired }), width: a.PropTypes.oneOfType([a.PropTypes.number, a.PropTypes.string]) }, x.defaultProps = { className: "", placeholder: null, threshold: 100, useIntersectionObserver: !0 };
      const T = x;
      var b = n(296), w = n.n(b), S = n(96), E = n.n(S), C = function(Q) {
        var H = getComputedStyle(Q, null);
        return H.getPropertyValue("overflow") + H.getPropertyValue("overflow-y") + H.getPropertyValue("overflow-x");
      };
      const R = function(Q) {
        if (!(Q instanceof HTMLElement)) return window;
        for (var H = Q; H && H instanceof HTMLElement; ) {
          if (/(scroll|auto)/.test(C(H))) return H;
          H = H.parentNode;
        }
        return window;
      };
      function M(Q) {
        return M = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, M(Q);
      }
      var v = ["delayMethod", "delayTime"];
      function I() {
        return I = Object.assign ? Object.assign.bind() : function(Q) {
          for (var H = 1; H < arguments.length; H++) {
            var X = arguments[H];
            for (var se in X) Object.prototype.hasOwnProperty.call(X, se) && (Q[se] = X[se]);
          }
          return Q;
        }, I.apply(this, arguments);
      }
      function k(Q, H) {
        for (var X = 0; X < H.length; X++) {
          var se = H[X];
          se.enumerable = se.enumerable || !1, se.configurable = !0, "value" in se && (se.writable = !0), Object.defineProperty(Q, (ye = function(he, le) {
            if (M(he) !== "object" || he === null) return he;
            var ae = he[Symbol.toPrimitive];
            if (ae !== void 0) {
              var ce = ae.call(he, "string");
              if (M(ce) !== "object") return ce;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(se.key), M(ye) === "symbol" ? ye : String(ye)), se);
        }
        var ye;
      }
      function A(Q, H) {
        return A = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(X, se) {
          return X.__proto__ = se, X;
        }, A(Q, H);
      }
      function O(Q, H) {
        if (H && (M(H) === "object" || typeof H == "function")) return H;
        if (H !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
        return _(Q);
      }
      function _(Q) {
        if (Q === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return Q;
      }
      function N(Q) {
        return N = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, N(Q);
      }
      var L = function() {
        return typeof window > "u" ? 0 : window.scrollX || window.pageXOffset;
      }, F = function() {
        return typeof window > "u" ? 0 : window.scrollY || window.pageYOffset;
      };
      const D = function(Q) {
        var H = function(X) {
          (function(Se, $e) {
            if (typeof $e != "function" && $e !== null) throw new TypeError("Super expression must either be null or a function");
            Se.prototype = Object.create($e && $e.prototype, { constructor: { value: Se, writable: !0, configurable: !0 } }), Object.defineProperty(Se, "prototype", { writable: !1 }), $e && A(Se, $e);
          })(ce, X);
          var se, ye, he, le, ae = (he = ce, le = function() {
            if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
            if (typeof Proxy == "function") return !0;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              })), !0;
            } catch {
              return !1;
            }
          }(), function() {
            var Se, $e = N(he);
            if (le) {
              var oe = N(this).constructor;
              Se = Reflect.construct($e, arguments, oe);
            } else Se = $e.apply(this, arguments);
            return O(this, Se);
          });
          function ce(Se) {
            var $e;
            if (function(be, Ne) {
              if (!(be instanceof Ne)) throw new TypeError("Cannot call a class as a function");
            }(this, ce), ($e = ae.call(this, Se)).useIntersectionObserver = Se.useIntersectionObserver && l(), $e.useIntersectionObserver) return O($e);
            var oe = $e.onChangeScroll.bind(_($e));
            return Se.delayMethod === "debounce" ? $e.delayedScroll = w()(oe, Se.delayTime) : Se.delayMethod === "throttle" && ($e.delayedScroll = E()(oe, Se.delayTime)), $e.state = { scrollPosition: { x: L(), y: F() } }, $e.baseComponentRef = i().createRef(), $e;
          }
          return se = ce, (ye = [{ key: "componentDidMount", value: function() {
            this.addListeners();
          } }, { key: "componentWillUnmount", value: function() {
            this.removeListeners();
          } }, { key: "componentDidUpdate", value: function() {
            typeof window > "u" || this.useIntersectionObserver || R(this.baseComponentRef.current) !== this.scrollElement && (this.removeListeners(), this.addListeners());
          } }, { key: "addListeners", value: function() {
            typeof window > "u" || this.useIntersectionObserver || (this.scrollElement = R(this.baseComponentRef.current), this.scrollElement.addEventListener("scroll", this.delayedScroll, { passive: !0 }), window.addEventListener("resize", this.delayedScroll, { passive: !0 }), this.scrollElement !== window && window.addEventListener("scroll", this.delayedScroll, { passive: !0 }));
          } }, { key: "removeListeners", value: function() {
            typeof window > "u" || this.useIntersectionObserver || (this.scrollElement.removeEventListener("scroll", this.delayedScroll), window.removeEventListener("resize", this.delayedScroll), this.scrollElement !== window && window.removeEventListener("scroll", this.delayedScroll));
          } }, { key: "onChangeScroll", value: function() {
            this.useIntersectionObserver || this.setState({ scrollPosition: { x: L(), y: F() } });
          } }, { key: "render", value: function() {
            var Se = this.props, $e = (Se.delayMethod, Se.delayTime, function(be, Ne) {
              if (be == null) return {};
              var We, Ue, vt = function(Tt, je) {
                if (Tt == null) return {};
                var ft, Et, Le = {}, Bt = Object.keys(Tt);
                for (Et = 0; Et < Bt.length; Et++) ft = Bt[Et], je.indexOf(ft) >= 0 || (Le[ft] = Tt[ft]);
                return Le;
              }(be, Ne);
              if (Object.getOwnPropertySymbols) {
                var ut = Object.getOwnPropertySymbols(be);
                for (Ue = 0; Ue < ut.length; Ue++) We = ut[Ue], Ne.indexOf(We) >= 0 || Object.prototype.propertyIsEnumerable.call(be, We) && (vt[We] = be[We]);
              }
              return vt;
            }(Se, v)), oe = this.useIntersectionObserver ? null : this.state.scrollPosition;
            return i().createElement(Q, I({ forwardRef: this.baseComponentRef, scrollPosition: oe }, $e));
          } }]) && k(se.prototype, ye), Object.defineProperty(se, "prototype", { writable: !1 }), ce;
        }(i().Component);
        return H.propTypes = { delayMethod: a.PropTypes.oneOf(["debounce", "throttle"]), delayTime: a.PropTypes.number, useIntersectionObserver: a.PropTypes.bool }, H.defaultProps = { delayMethod: "throttle", delayTime: 300, useIntersectionObserver: !0 }, H;
      };
      function B(Q) {
        return B = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, B(Q);
      }
      function z(Q, H) {
        for (var X = 0; X < H.length; X++) {
          var se = H[X];
          se.enumerable = se.enumerable || !1, se.configurable = !0, "value" in se && (se.writable = !0), Object.defineProperty(Q, (ye = function(he, le) {
            if (B(he) !== "object" || he === null) return he;
            var ae = he[Symbol.toPrimitive];
            if (ae !== void 0) {
              var ce = ae.call(he, "string");
              if (B(ce) !== "object") return ce;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(se.key), B(ye) === "symbol" ? ye : String(ye)), se);
        }
        var ye;
      }
      function U(Q, H) {
        return U = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(X, se) {
          return X.__proto__ = se, X;
        }, U(Q, H);
      }
      function q(Q) {
        return q = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, q(Q);
      }
      var Y = function(Q) {
        (function(ae, ce) {
          if (typeof ce != "function" && ce !== null) throw new TypeError("Super expression must either be null or a function");
          ae.prototype = Object.create(ce && ce.prototype, { constructor: { value: ae, writable: !0, configurable: !0 } }), Object.defineProperty(ae, "prototype", { writable: !1 }), ce && U(ae, ce);
        })(le, Q);
        var H, X, se, ye, he = (se = le, ye = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var ae, ce = q(se);
          if (ye) {
            var Se = q(this).constructor;
            ae = Reflect.construct(ce, arguments, Se);
          } else ae = ce.apply(this, arguments);
          return function($e, oe) {
            if (oe && (B(oe) === "object" || typeof oe == "function")) return oe;
            if (oe !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(be) {
              if (be === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return be;
            }($e);
          }(this, ae);
        });
        function le(ae) {
          return function(ce, Se) {
            if (!(ce instanceof Se)) throw new TypeError("Cannot call a class as a function");
          }(this, le), he.call(this, ae);
        }
        return H = le, (X = [{ key: "render", value: function() {
          return i().createElement(T, this.props);
        } }]) && z(H.prototype, X), Object.defineProperty(H, "prototype", { writable: !1 }), le;
      }(i().Component);
      const K = D(Y);
      function te(Q) {
        return te = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, te(Q);
      }
      function ne(Q, H) {
        for (var X = 0; X < H.length; X++) {
          var se = H[X];
          se.enumerable = se.enumerable || !1, se.configurable = !0, "value" in se && (se.writable = !0), Object.defineProperty(Q, (ye = function(he, le) {
            if (te(he) !== "object" || he === null) return he;
            var ae = he[Symbol.toPrimitive];
            if (ae !== void 0) {
              var ce = ae.call(he, "string");
              if (te(ce) !== "object") return ce;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(se.key), te(ye) === "symbol" ? ye : String(ye)), se);
        }
        var ye;
      }
      function W(Q, H) {
        return W = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(X, se) {
          return X.__proto__ = se, X;
        }, W(Q, H);
      }
      function ee(Q) {
        if (Q === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return Q;
      }
      function G(Q) {
        return G = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, G(Q);
      }
      var re = function(Q) {
        (function(ae, ce) {
          if (typeof ce != "function" && ce !== null) throw new TypeError("Super expression must either be null or a function");
          ae.prototype = Object.create(ce && ce.prototype, { constructor: { value: ae, writable: !0, configurable: !0 } }), Object.defineProperty(ae, "prototype", { writable: !1 }), ce && W(ae, ce);
        })(le, Q);
        var H, X, se, ye, he = (se = le, ye = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var ae, ce = G(se);
          if (ye) {
            var Se = G(this).constructor;
            ae = Reflect.construct(ce, arguments, Se);
          } else ae = ce.apply(this, arguments);
          return function($e, oe) {
            if (oe && (te(oe) === "object" || typeof oe == "function")) return oe;
            if (oe !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return ee($e);
          }(this, ae);
        });
        function le(ae) {
          var ce;
          (function(Ne, We) {
            if (!(Ne instanceof We)) throw new TypeError("Cannot call a class as a function");
          })(this, le), ce = he.call(this, ae);
          var Se = ae.afterLoad, $e = ae.beforeLoad, oe = ae.scrollPosition, be = ae.visibleByDefault;
          return ce.state = { visible: be }, be && ($e(), Se()), ce.onVisible = ce.onVisible.bind(ee(ce)), ce.isScrollTracked = !!(oe && Number.isFinite(oe.x) && oe.x >= 0 && Number.isFinite(oe.y) && oe.y >= 0), ce;
        }
        return H = le, (X = [{ key: "componentDidUpdate", value: function(ae, ce) {
          ce.visible !== this.state.visible && this.props.afterLoad();
        } }, { key: "onVisible", value: function() {
          this.props.beforeLoad(), this.setState({ visible: !0 });
        } }, { key: "render", value: function() {
          if (this.state.visible) return this.props.children;
          var ae = this.props, ce = ae.className, Se = ae.delayMethod, $e = ae.delayTime, oe = ae.height, be = ae.placeholder, Ne = ae.scrollPosition, We = ae.style, Ue = ae.threshold, vt = ae.useIntersectionObserver, ut = ae.width;
          return this.isScrollTracked || vt && l() ? i().createElement(T, { className: ce, height: oe, onVisible: this.onVisible, placeholder: be, scrollPosition: Ne, style: We, threshold: Ue, useIntersectionObserver: vt, width: ut }) : i().createElement(K, { className: ce, delayMethod: Se, delayTime: $e, height: oe, onVisible: this.onVisible, placeholder: be, style: We, threshold: Ue, width: ut });
        } }]) && ne(H.prototype, X), Object.defineProperty(H, "prototype", { writable: !1 }), le;
      }(i().Component);
      re.propTypes = { afterLoad: a.PropTypes.func, beforeLoad: a.PropTypes.func, useIntersectionObserver: a.PropTypes.bool, visibleByDefault: a.PropTypes.bool }, re.defaultProps = { afterLoad: function() {
        return {};
      }, beforeLoad: function() {
        return {};
      }, useIntersectionObserver: !0, visibleByDefault: !1 };
      const V = re;
      function de(Q) {
        return de = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, de(Q);
      }
      var ue = ["afterLoad", "beforeLoad", "delayMethod", "delayTime", "effect", "placeholder", "placeholderSrc", "scrollPosition", "threshold", "useIntersectionObserver", "visibleByDefault", "wrapperClassName", "wrapperProps"];
      function xe(Q, H) {
        var X = Object.keys(Q);
        if (Object.getOwnPropertySymbols) {
          var se = Object.getOwnPropertySymbols(Q);
          H && (se = se.filter(function(ye) {
            return Object.getOwnPropertyDescriptor(Q, ye).enumerable;
          })), X.push.apply(X, se);
        }
        return X;
      }
      function Ae(Q) {
        for (var H = 1; H < arguments.length; H++) {
          var X = arguments[H] != null ? arguments[H] : {};
          H % 2 ? xe(Object(X), !0).forEach(function(se) {
            we(Q, se, X[se]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(Q, Object.getOwnPropertyDescriptors(X)) : xe(Object(X)).forEach(function(se) {
            Object.defineProperty(Q, se, Object.getOwnPropertyDescriptor(X, se));
          });
        }
        return Q;
      }
      function we(Q, H, X) {
        return (H = Be(H)) in Q ? Object.defineProperty(Q, H, { value: X, enumerable: !0, configurable: !0, writable: !0 }) : Q[H] = X, Q;
      }
      function De() {
        return De = Object.assign ? Object.assign.bind() : function(Q) {
          for (var H = 1; H < arguments.length; H++) {
            var X = arguments[H];
            for (var se in X) Object.prototype.hasOwnProperty.call(X, se) && (Q[se] = X[se]);
          }
          return Q;
        }, De.apply(this, arguments);
      }
      function Ce(Q, H) {
        for (var X = 0; X < H.length; X++) {
          var se = H[X];
          se.enumerable = se.enumerable || !1, se.configurable = !0, "value" in se && (se.writable = !0), Object.defineProperty(Q, Be(se.key), se);
        }
      }
      function Be(Q) {
        var H = function(X, se) {
          if (de(X) !== "object" || X === null) return X;
          var ye = X[Symbol.toPrimitive];
          if (ye !== void 0) {
            var he = ye.call(X, "string");
            if (de(he) !== "object") return he;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(X);
        }(Q);
        return de(H) === "symbol" ? H : String(H);
      }
      function Me(Q, H) {
        return Me = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(X, se) {
          return X.__proto__ = se, X;
        }, Me(Q, H);
      }
      function j(Q) {
        return j = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, j(Q);
      }
      var J = function(Q) {
        (function(ae, ce) {
          if (typeof ce != "function" && ce !== null) throw new TypeError("Super expression must either be null or a function");
          ae.prototype = Object.create(ce && ce.prototype, { constructor: { value: ae, writable: !0, configurable: !0 } }), Object.defineProperty(ae, "prototype", { writable: !1 }), ce && Me(ae, ce);
        })(le, Q);
        var H, X, se, ye, he = (se = le, ye = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var ae, ce = j(se);
          if (ye) {
            var Se = j(this).constructor;
            ae = Reflect.construct(ce, arguments, Se);
          } else ae = ce.apply(this, arguments);
          return function($e, oe) {
            if (oe && (de(oe) === "object" || typeof oe == "function")) return oe;
            if (oe !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(be) {
              if (be === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return be;
            }($e);
          }(this, ae);
        });
        function le(ae) {
          var ce;
          return function(Se, $e) {
            if (!(Se instanceof $e)) throw new TypeError("Cannot call a class as a function");
          }(this, le), (ce = he.call(this, ae)).state = { loaded: !1 }, ce;
        }
        return H = le, (X = [{ key: "onImageLoad", value: function() {
          var ae = this;
          return this.state.loaded ? null : function(ce) {
            ae.props.onLoad(ce), ae.props.afterLoad(), ae.setState({ loaded: !0 });
          };
        } }, { key: "getImg", value: function() {
          var ae = this.props, ce = (ae.afterLoad, ae.beforeLoad, ae.delayMethod, ae.delayTime, ae.effect, ae.placeholder, ae.placeholderSrc, ae.scrollPosition, ae.threshold, ae.useIntersectionObserver, ae.visibleByDefault, ae.wrapperClassName, ae.wrapperProps, function(Se, $e) {
            if (Se == null) return {};
            var oe, be, Ne = function(Ue, vt) {
              if (Ue == null) return {};
              var ut, Tt, je = {}, ft = Object.keys(Ue);
              for (Tt = 0; Tt < ft.length; Tt++) ut = ft[Tt], vt.indexOf(ut) >= 0 || (je[ut] = Ue[ut]);
              return je;
            }(Se, $e);
            if (Object.getOwnPropertySymbols) {
              var We = Object.getOwnPropertySymbols(Se);
              for (be = 0; be < We.length; be++) oe = We[be], $e.indexOf(oe) >= 0 || Object.prototype.propertyIsEnumerable.call(Se, oe) && (Ne[oe] = Se[oe]);
            }
            return Ne;
          }(ae, ue));
          return i().createElement("img", De({}, ce, { onLoad: this.onImageLoad() }));
        } }, { key: "getLazyLoadImage", value: function() {
          var ae = this.props, ce = ae.beforeLoad, Se = ae.className, $e = ae.delayMethod, oe = ae.delayTime, be = ae.height, Ne = ae.placeholder, We = ae.scrollPosition, Ue = ae.style, vt = ae.threshold, ut = ae.useIntersectionObserver, Tt = ae.visibleByDefault, je = ae.width;
          return i().createElement(V, { beforeLoad: ce, className: Se, delayMethod: $e, delayTime: oe, height: be, placeholder: Ne, scrollPosition: We, style: Ue, threshold: vt, useIntersectionObserver: ut, visibleByDefault: Tt, width: je }, this.getImg());
        } }, { key: "getWrappedLazyLoadImage", value: function(ae) {
          var ce = this.props, Se = ce.effect, $e = ce.height, oe = ce.placeholderSrc, be = ce.width, Ne = ce.wrapperClassName, We = ce.wrapperProps, Ue = this.state.loaded, vt = Ue ? " lazy-load-image-loaded" : "", ut = Ue || !oe ? {} : { backgroundImage: "url(".concat(oe, ")"), backgroundSize: "100% 100%" };
          return i().createElement("span", De({ className: Ne + " lazy-load-image-background " + Se + vt, style: Ae(Ae({}, ut), {}, { color: "transparent", display: "inline-block", height: $e, width: be }) }, We), ae);
        } }, { key: "render", value: function() {
          var ae = this.props, ce = ae.effect, Se = ae.placeholderSrc, $e = ae.visibleByDefault, oe = ae.wrapperClassName, be = ae.wrapperProps, Ne = this.getLazyLoadImage();
          return (ce || Se) && !$e || oe || be ? this.getWrappedLazyLoadImage(Ne) : Ne;
        } }]) && Ce(H.prototype, X), Object.defineProperty(H, "prototype", { writable: !1 }), le;
      }(i().Component);
      J.propTypes = { onLoad: a.PropTypes.func, afterLoad: a.PropTypes.func, beforeLoad: a.PropTypes.func, delayMethod: a.PropTypes.string, delayTime: a.PropTypes.number, effect: a.PropTypes.string, placeholderSrc: a.PropTypes.string, threshold: a.PropTypes.number, useIntersectionObserver: a.PropTypes.bool, visibleByDefault: a.PropTypes.bool, wrapperClassName: a.PropTypes.string, wrapperProps: a.PropTypes.object }, J.defaultProps = { onLoad: function() {
      }, afterLoad: function() {
        return {};
      }, beforeLoad: function() {
        return {};
      }, delayMethod: "throttle", delayTime: 300, effect: "", placeholderSrc: null, threshold: 100, useIntersectionObserver: !0, visibleByDefault: !1, wrapperClassName: "" };
      const ie = J;
    })(), Jf.exports = o;
  })()), Jf.exports;
}
var Sj = wj();
const Tj = Ie(({ src: e, alt: t, ...n }) => /* @__PURE__ */ $(
  Sj.LazyLoadImage,
  {
    src: e,
    alt: t,
    effect: "blur",
    wrapperProps: {
      // If you need to, you can tweak the effect transition using the wrapper style.
      style: { transitionDelay: "1s" }
    },
    draggable: !1,
    ...n
  }
));
Tj.displayName = "LazyImage";
function Ej(e) {
  return tt("MuiLinearProgress", e);
}
it("MuiLinearProgress", ["root", "colorPrimary", "colorSecondary", "determinate", "indeterminate", "buffer", "query", "dashed", "dashedColorPrimary", "dashedColorSecondary", "bar", "bar1", "bar2", "barColorPrimary", "barColorSecondary", "bar1Indeterminate", "bar1Determinate", "bar1Buffer", "bar2Indeterminate", "bar2Buffer"]);
const ih = 4, sh = ei`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`, Cj = typeof sh != "string" ? Us`
        animation: ${sh} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
      ` : null, ah = ei`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`, Oj = typeof ah != "string" ? Us`
        animation: ${ah} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
      ` : null, lh = ei`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`, $j = typeof lh != "string" ? Us`
        animation: ${lh} 3s infinite linear;
      ` : null, Ij = (e) => {
  const {
    classes: t,
    variant: n,
    color: o
  } = e, r = {
    root: ["root", `color${fe(o)}`, n],
    dashed: ["dashed", `dashedColor${fe(o)}`],
    bar1: ["bar", "bar1", `barColor${fe(o)}`, (n === "indeterminate" || n === "query") && "bar1Indeterminate", n === "determinate" && "bar1Determinate", n === "buffer" && "bar1Buffer"],
    bar2: ["bar", "bar2", n !== "buffer" && `barColor${fe(o)}`, n === "buffer" && `color${fe(o)}`, (n === "indeterminate" || n === "query") && "bar2Indeterminate", n === "buffer" && "bar2Buffer"]
  };
  return rt(r, Ej, t);
}, Jm = (e, t) => e.vars ? e.vars.palette.LinearProgress[`${t}Bg`] : e.palette.mode === "light" ? Ks(e.palette[t].main, 0.62) : qs(e.palette[t].main, 0.5), Rj = Ee("span", {
  name: "MuiLinearProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`color${fe(n.color)}`], t[n.variant]];
  }
})(qe(({
  theme: e
}) => ({
  position: "relative",
  overflow: "hidden",
  display: "block",
  height: 4,
  // Fix Safari's bug during composition of different paint.
  zIndex: 0,
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [...Object.entries(e.palette).filter(Ut()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: Jm(e, t)
    }
  })), {
    props: ({
      ownerState: t
    }) => t.color === "inherit" && t.variant !== "buffer",
    style: {
      "&::before": {
        content: '""',
        position: "absolute",
        left: 0,
        top: 0,
        right: 0,
        bottom: 0,
        backgroundColor: "currentColor",
        opacity: 0.3
      }
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      backgroundColor: "transparent"
    }
  }, {
    props: {
      variant: "query"
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
}))), kj = Ee("span", {
  name: "MuiLinearProgress",
  slot: "Dashed",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.dashed, t[`dashedColor${fe(n.color)}`]];
  }
})(qe(({
  theme: e
}) => ({
  position: "absolute",
  marginTop: 0,
  height: "100%",
  width: "100%",
  backgroundSize: "10px 10px",
  backgroundPosition: "0 -23px",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3,
      backgroundImage: "radial-gradient(currentColor 0%, currentColor 16%, transparent 42%)"
    }
  }, ...Object.entries(e.palette).filter(Ut()).map(([t]) => {
    const n = Jm(e, t);
    return {
      props: {
        color: t
      },
      style: {
        backgroundImage: `radial-gradient(${n} 0%, ${n} 16%, transparent 42%)`
      }
    };
  })]
})), $j || {
  // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
  animation: `${lh} 3s infinite linear`
}), Pj = Ee("span", {
  name: "MuiLinearProgress",
  slot: "Bar1",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar1, t[`barColor${fe(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar1Indeterminate, n.variant === "determinate" && t.bar1Determinate, n.variant === "buffer" && t.bar1Buffer];
  }
})(qe(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      backgroundColor: "currentColor"
    }
  }, ...Object.entries(e.palette).filter(Ut()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main
    }
  })), {
    props: {
      variant: "determinate"
    },
    style: {
      transition: `transform .${ih}s linear`
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      zIndex: 1,
      transition: `transform .${ih}s linear`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: Cj || {
      animation: `${sh} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`
    }
  }]
}))), Nj = Ee("span", {
  name: "MuiLinearProgress",
  slot: "Bar2",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar2, t[`barColor${fe(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar2Indeterminate, n.variant === "buffer" && t.bar2Buffer];
  }
})(qe(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [...Object.entries(e.palette).filter(Ut()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--LinearProgressBar2-barColor": (e.vars || e).palette[t].main
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color !== "inherit",
    style: {
      backgroundColor: "var(--LinearProgressBar2-barColor, currentColor)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color === "inherit",
    style: {
      backgroundColor: "currentColor"
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3
    }
  }, ...Object.entries(e.palette).filter(Ut()).map(([t]) => ({
    props: {
      color: t,
      variant: "buffer"
    },
    style: {
      backgroundColor: Jm(e, t),
      transition: `transform .${ih}s linear`
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: Oj || {
      animation: `${ah} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`
    }
  }]
}))), RT = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiLinearProgress"
  }), {
    className: r,
    color: i = "primary",
    value: a,
    valueBuffer: l,
    variant: c = "indeterminate",
    ...u
  } = o, f = {
    ...o,
    color: i,
    variant: c
  }, d = Ij(f), p = El(), h = {}, g = {
    bar1: {},
    bar2: {}
  };
  if (c === "determinate" || c === "buffer")
    if (a !== void 0) {
      h["aria-valuenow"] = Math.round(a), h["aria-valuemin"] = 0, h["aria-valuemax"] = 100;
      let m = a - 100;
      p && (m = -m), g.bar1.transform = `translateX(${m}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
  if (c === "buffer")
    if (l !== void 0) {
      let m = (l || 0) - 100;
      p && (m = -m), g.bar2.transform = `translateX(${m}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
  return /* @__PURE__ */ Te(Rj, {
    className: Re(d.root, r),
    ownerState: f,
    role: "progressbar",
    ...h,
    ref: n,
    ...u,
    children: [c === "buffer" ? /* @__PURE__ */ $(kj, {
      className: d.dashed,
      ownerState: f
    }) : null, /* @__PURE__ */ $(Pj, {
      className: d.bar1,
      ownerState: f,
      style: g.bar1
    }), c === "determinate" ? null : /* @__PURE__ */ $(Nj, {
      className: d.bar2,
      ownerState: f,
      style: g.bar2
    })]
  });
});
process.env.NODE_ENV !== "production" && (RT.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: s.oneOfType([s.oneOf(["inherit", "primary", "secondary"]), s.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */
  value: s.number,
  /**
   * The value for the buffer variant.
   * Value between 0 and 100.
   */
  valueBuffer: s.number,
  /**
   * The variant to use.
   * Use indeterminate or query when there is no progress value.
   * @default 'indeterminate'
   */
  variant: s.oneOf(["buffer", "determinate", "indeterminate", "query"])
});
const Mj = Ie(({ disablePortal: e, isCircle: t = !1 }) => /* @__PURE__ */ $(Rs, { disablePortal: e, children: /* @__PURE__ */ Te(
  Ho,
  {
    sx: {
      width: 1,
      minHeight: 1,
      flexGrow: 1,
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      position: "fixed",
      // 基于 <body>
      top: 0,
      left: 0,
      right: 0
    },
    children: [
      t && /* @__PURE__ */ $(Il, { color: "primary", disableShrink: !0, size: 40 }),
      !t && /* @__PURE__ */ $(
        RT,
        {
          color: "primary",
          sx: { width: 1, maxWidth: 360, height: "4px", borderRadius: "8px" }
        }
      )
    ]
  }
) }));
Mj.displayName = "Loading";
function _j(e) {
  return tt("MuiDialog", e);
}
const ep = it("MuiDialog", ["root", "scrollPaper", "scrollBody", "container", "paper", "paperScrollPaper", "paperScrollBody", "paperWidthFalse", "paperWidthXs", "paperWidthSm", "paperWidthMd", "paperWidthLg", "paperWidthXl", "paperFullWidth", "paperFullScreen"]), kT = /* @__PURE__ */ P.createContext({});
process.env.NODE_ENV !== "production" && (kT.displayName = "DialogContext");
const Aj = Ee(Cm, {
  name: "MuiDialog",
  slot: "Backdrop",
  overrides: (e, t) => t.backdrop
})({
  // Improve scrollable dialog support.
  zIndex: -1
}), Dj = (e) => {
  const {
    classes: t,
    scroll: n,
    maxWidth: o,
    fullWidth: r,
    fullScreen: i
  } = e, a = {
    root: ["root"],
    container: ["container", `scroll${fe(n)}`],
    paper: ["paper", `paperScroll${fe(n)}`, `paperWidth${fe(String(o))}`, r && "paperFullWidth", i && "paperFullScreen"]
  };
  return rt(a, _j, t);
}, Lj = Ee(fd, {
  name: "MuiDialog",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  "@media print": {
    // Use !important to override the Modal inline-style.
    position: "absolute !important"
  }
}), Bj = Ee("div", {
  name: "MuiDialog",
  slot: "Container",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.container, t[`scroll${fe(n.scroll)}`]];
  }
})({
  height: "100%",
  "@media print": {
    height: "auto"
  },
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      justifyContent: "center",
      alignItems: "center"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      overflowY: "auto",
      overflowX: "hidden",
      textAlign: "center",
      "&::after": {
        content: '""',
        display: "inline-block",
        verticalAlign: "middle",
        height: "100%",
        width: "0"
      }
    }
  }]
}), Fj = Ee(oi, {
  name: "MuiDialog",
  slot: "Paper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.paper, t[`scrollPaper${fe(n.scroll)}`], t[`paperWidth${fe(String(n.maxWidth))}`], n.fullWidth && t.paperFullWidth, n.fullScreen && t.paperFullScreen];
  }
})(qe(({
  theme: e
}) => ({
  margin: 32,
  position: "relative",
  overflowY: "auto",
  "@media print": {
    overflowY: "visible",
    boxShadow: "none"
  },
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      flexDirection: "column",
      maxHeight: "calc(100% - 64px)"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      display: "inline-block",
      verticalAlign: "middle",
      textAlign: "initial"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.maxWidth,
    style: {
      maxWidth: "calc(100% - 64px)"
    }
  }, {
    props: {
      maxWidth: "xs"
    },
    style: {
      maxWidth: e.breakpoints.unit === "px" ? Math.max(e.breakpoints.values.xs, 444) : `max(${e.breakpoints.values.xs}${e.breakpoints.unit}, 444px)`,
      [`&.${ep.paperScrollBody}`]: {
        [e.breakpoints.down(Math.max(e.breakpoints.values.xs, 444) + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  }, ...Object.keys(e.breakpoints.values).filter((t) => t !== "xs").map((t) => ({
    props: {
      maxWidth: t
    },
    style: {
      maxWidth: `${e.breakpoints.values[t]}${e.breakpoints.unit}`,
      [`&.${ep.paperScrollBody}`]: {
        [e.breakpoints.down(e.breakpoints.values[t] + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  })), {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "calc(100% - 64px)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullScreen,
    style: {
      margin: 0,
      width: "100%",
      maxWidth: "100%",
      height: "100%",
      maxHeight: "none",
      borderRadius: 0,
      [`&.${ep.paperScrollBody}`]: {
        margin: 0,
        maxWidth: "100%"
      }
    }
  }]
}))), PT = /* @__PURE__ */ P.forwardRef(function(t, n) {
  const o = lt({
    props: t,
    name: "MuiDialog"
  }), r = Pr(), i = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    "aria-describedby": a,
    "aria-labelledby": l,
    "aria-modal": c = !0,
    BackdropComponent: u,
    BackdropProps: f,
    children: d,
    className: p,
    disableEscapeKeyDown: h = !1,
    fullScreen: g = !1,
    fullWidth: m = !1,
    maxWidth: y = "sm",
    onClick: x,
    onClose: T,
    open: b,
    PaperComponent: w = oi,
    PaperProps: S = {},
    scroll: E = "paper",
    slots: C = {},
    slotProps: R = {},
    TransitionComponent: M = Pi,
    transitionDuration: v = i,
    TransitionProps: I,
    ...k
  } = o, A = {
    ...o,
    disableEscapeKeyDown: h,
    fullScreen: g,
    fullWidth: m,
    maxWidth: y,
    scroll: E
  }, O = Dj(A), _ = P.useRef(), N = (de) => {
    _.current = de.target === de.currentTarget;
  }, L = (de) => {
    x && x(de), _.current && (_.current = null, T && T(de, "backdropClick"));
  }, F = Bi(l), D = P.useMemo(() => ({
    titleId: F
  }), [F]), B = {
    transition: M,
    ...C
  }, z = {
    transition: I,
    paper: S,
    backdrop: f,
    ...R
  }, U = {
    slots: B,
    slotProps: z
  }, [q, Y] = ot("root", {
    elementType: Lj,
    shouldForwardComponentProp: !0,
    externalForwardedProps: U,
    ownerState: A,
    className: Re(O.root, p),
    ref: n
  }), [K, te] = ot("backdrop", {
    elementType: Aj,
    shouldForwardComponentProp: !0,
    externalForwardedProps: U,
    ownerState: A
  }), [ne, W] = ot("paper", {
    elementType: Fj,
    shouldForwardComponentProp: !0,
    externalForwardedProps: U,
    ownerState: A,
    className: Re(O.paper, S.className)
  }), [ee, G] = ot("container", {
    elementType: Bj,
    externalForwardedProps: U,
    ownerState: A,
    className: Re(O.container)
  }), [re, V] = ot("transition", {
    elementType: Pi,
    externalForwardedProps: U,
    ownerState: A,
    additionalProps: {
      appear: !0,
      in: b,
      timeout: v,
      role: "presentation"
    }
  });
  return /* @__PURE__ */ $(q, {
    closeAfterTransition: !0,
    slots: {
      backdrop: K
    },
    slotProps: {
      backdrop: {
        transitionDuration: v,
        as: u,
        ...te
      }
    },
    disableEscapeKeyDown: h,
    onClose: T,
    open: b,
    onClick: L,
    ...Y,
    ...k,
    children: /* @__PURE__ */ $(re, {
      ...V,
      children: /* @__PURE__ */ $(ee, {
        onMouseDown: N,
        ...G,
        children: /* @__PURE__ */ $(ne, {
          as: w,
          elevation: 24,
          role: "dialog",
          "aria-describedby": a,
          "aria-labelledby": F,
          "aria-modal": c,
          ...W,
          children: /* @__PURE__ */ $(kT.Provider, {
            value: D,
            children: d
          })
        })
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (PT.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The id(s) of the element(s) that describe the dialog.
   */
  "aria-describedby": s.string,
  /**
   * The id(s) of the element(s) that label the dialog.
   */
  "aria-labelledby": s.string,
  /**
   * Informs assistive technologies that the element is modal.
   * It's added on the element with role="dialog".
   * @default true
   */
  "aria-modal": s.oneOfType([s.oneOf(["false", "true"]), s.bool]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: s.elementType,
  /**
   * @ignore
   */
  BackdropProps: s.object,
  /**
   * Dialog children, usually the included sub-components.
   */
  children: s.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: s.object,
  /**
   * @ignore
   */
  className: s.string,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: s.bool,
  /**
   * If `true`, the dialog is full-screen.
   * @default false
   */
  fullScreen: s.bool,
  /**
   * If `true`, the dialog stretches to `maxWidth`.
   *
   * Notice that the dialog width grow is limited by the default margin.
   * @default false
   */
  fullWidth: s.bool,
  /**
   * Determine the max-width of the dialog.
   * The dialog width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'sm'
   */
  maxWidth: s.oneOfType([s.oneOf(["xs", "sm", "md", "lg", "xl", !1]), s.string]),
  /**
   * @ignore
   */
  onClick: s.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: s.func,
  /**
   * If `true`, the component is shown.
   */
  open: s.bool.isRequired,
  /**
   * The component used to render the body of the dialog.
   * @default Paper
   */
  PaperComponent: s.elementType,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @default {}
   * @deprecated Use `slotProps.paper` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PaperProps: s.object,
  /**
   * Determine the container for scrolling the dialog.
   * @default 'paper'
   */
  scroll: s.oneOf(["body", "paper"]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: s.shape({
    backdrop: s.oneOfType([s.func, s.object]),
    container: s.oneOfType([s.func, s.object]),
    paper: s.oneOfType([s.func, s.object]),
    root: s.oneOfType([s.func, s.object]),
    transition: s.oneOfType([s.func, s.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: s.shape({
    backdrop: s.elementType,
    container: s.elementType,
    paper: s.elementType,
    root: s.elementType,
    transition: s.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: s.oneOfType([s.arrayOf(s.oneOfType([s.func, s.object, s.bool])), s.func, s.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: s.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: s.oneOfType([s.number, s.shape({
    appear: s.number,
    enter: s.number,
    exit: s.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated Use `slotProps.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionProps: s.object
});
const NT = Ie(
  ({
    isOpen: e,
    closeModal: t,
    isPrevented: n = !0,
    children: o,
    maxWidth: r = "sm",
    fullWidth: i = !0,
    sx: a,
    ...l
  }) => {
    const { paperCommonStyles: c } = Fi();
    return /* @__PURE__ */ $(
      PT,
      {
        className: "VenomousUI-Modal",
        open: e,
        onClose: n ? void 0 : t,
        scroll: "paper",
        keepMounted: !0,
        maxWidth: r,
        fullWidth: i,
        sx: { ...a },
        slotProps: {
          paper: {
            sx: {
              ...c
            }
          }
        },
        ...l,
        children: o
      }
    );
  }
);
NT.displayName = "Modal";
function g9() {
  const [e, t] = yn(!1), n = ze(() => t(!0), []), o = ze(() => t(!1), []);
  return {
    isOpen: e,
    openModal: n,
    closeModal: o
  };
}
const zj = Ie(
  ({
    onSubmit: e,
    onClose: t,
    isSubmitting: n = !1,
    title: o = "",
    contentMessage: r = "",
    cancelButtonText: i = "Cancel",
    confirmButtonText: a = "Confirm",
    confirmButtonIsDisabled: l = !1,
    cancelButtonIsDisabled: c = !1,
    ...u
  }) => {
    const f = et(u.isOpen);
    return dt(() => {
      f.current && !u.isOpen && (t == null || t()), f.current = u.isOpen;
    }, [u.isOpen, t]), /* @__PURE__ */ Te(NT, { isPrevented: !0, ...u, children: [
      /* @__PURE__ */ $(Cn, { isTitle: !0, text: o, p: "8px" }),
      /* @__PURE__ */ $(Cn, { text: r, p: "8px", pb: "24px" }),
      /* @__PURE__ */ Te(dn, { row: !0, justifyContent: "flex-end", children: [
        /* @__PURE__ */ $(
          On,
          {
            text: i,
            onClick: u.closeModal,
            disabled: c || n,
            isOutlined: !0
          }
        ),
        /* @__PURE__ */ $(
          On,
          {
            text: a,
            onClick: () => {
              (async () => (await (e == null ? void 0 : e()), u.closeModal()))();
            },
            disabled: l,
            loading: n,
            autoFocus: !0
          }
        )
      ] })
    ] });
  }
);
zj.displayName = "ConfirmModal";
function A0(e) {
  return e.substring(2).toLowerCase();
}
function jj(e, t) {
  return t.documentElement.clientWidth < e.clientX || t.documentElement.clientHeight < e.clientY;
}
function Ou(e) {
  const {
    children: t,
    disableReactTree: n = !1,
    mouseEvent: o = "onClick",
    onClickAway: r,
    touchEvent: i = "onTouchEnd"
  } = e, a = P.useRef(!1), l = P.useRef(null), c = P.useRef(!1), u = P.useRef(!1);
  P.useEffect(() => (setTimeout(() => {
    c.current = !0;
  }, 0), () => {
    c.current = !1;
  }), []);
  const f = un(ni(t), l), d = Un((g) => {
    const m = u.current;
    u.current = !1;
    const y = _n(l.current);
    if (!c.current || !l.current || "clientX" in g && jj(g, y))
      return;
    if (a.current) {
      a.current = !1;
      return;
    }
    let x;
    g.composedPath ? x = g.composedPath().includes(l.current) : x = !y.documentElement.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      g.target
    ) || l.current.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      g.target
    ), !x && (n || !m) && r(g);
  }), p = (g) => (m) => {
    u.current = !0;
    const y = t.props[g];
    y && y(m);
  }, h = {
    ref: f
  };
  return i !== !1 && (h[i] = p(i)), P.useEffect(() => {
    if (i !== !1) {
      const g = A0(i), m = _n(l.current), y = () => {
        a.current = !0;
      };
      return m.addEventListener(g, d), m.addEventListener("touchmove", y), () => {
        m.removeEventListener(g, d), m.removeEventListener("touchmove", y);
      };
    }
  }, [d, i]), o !== !1 && (h[o] = p(o)), P.useEffect(() => {
    if (o !== !1) {
      const g = A0(o), m = _n(l.current);
      return m.addEventListener(g, d), () => {
        m.removeEventListener(g, d);
      };
    }
  }, [d, o]), /* @__PURE__ */ P.cloneElement(t, h);
}
process.env.NODE_ENV !== "production" && (Ou.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The wrapped element.
   */
  children: ti.isRequired,
  /**
   * If `true`, the React tree is ignored and only the DOM tree is considered.
   * This prop changes how portaled elements are handled.
   * @default false
   */
  disableReactTree: s.bool,
  /**
   * The mouse event to listen to. You can disable the listener by providing `false`.
   * @default 'onClick'
   */
  mouseEvent: s.oneOf(["onClick", "onMouseDown", "onMouseUp", "onPointerDown", "onPointerUp", !1]),
  /**
   * Callback fired when a "click away" event is detected.
   */
  onClickAway: s.func.isRequired,
  /**
   * The touch event to listen to. You can disable the listener by providing `false`.
   * @default 'onTouchEnd'
   */
  touchEvent: s.oneOf(["onTouchEnd", "onTouchStart", !1])
});
process.env.NODE_ENV !== "production" && (Ou.propTypes = Tl(Ou.propTypes));
const Vj = fi((e) => ({
  activeId: null,
  setActiveId: (t) => e({ activeId: t })
}));
function Hj(e) {
  const { activeId: t, setActiveId: n } = Vj(), [o, r] = yn(null), i = !!o && (!e || t === e), a = ze(
    (c) => {
      const u = c.currentTarget;
      e ? (n(e), r(u)) : r(o ? null : u);
    },
    [e, n]
  ), l = ze(() => {
    var c;
    (c = window.getSelection()) != null && c.toString() || (e && n(null), r(null));
  }, [e, n]);
  return {
    anchorEl: o,
    isOpen: i,
    openPopper: a,
    closePopper: l
  };
}
const MT = Ie(
  ({ id: e, children: t, renderPopperHandler: n, position: o = "bottom", sx: r, contentSx: i }) => {
    const { anchorEl: a, isOpen: l, openPopper: c, closePopper: u } = Hj(e);
    return /* @__PURE__ */ $(Ou, { onClickAway: u, children: /* @__PURE__ */ Te(
      Ho,
      {
        sx: { position: "relative", ...r },
        role: "presentation",
        className: "VenomousUI-Popper",
        children: [
          n({ anchorEl: a, isOpen: l, openPopper: c, closePopper: u }),
          /* @__PURE__ */ $(Ys, { open: l, anchorEl: a, placement: o, transition: !0, keepMounted: !0, children: ({ TransitionProps: f }) => /* @__PURE__ */ $(Pi, { ...f, children: /* @__PURE__ */ $(Cr, { isOutlined: !0, sx: { width: "100%", ...i }, children: t }) }) })
        ]
      }
    ) });
  }
);
MT.displayName = "Popper";
const ch = typeof Gh({}) == "function", Wj = (e, t) => ({
  WebkitFontSmoothing: "antialiased",
  // Antialiasing.
  MozOsxFontSmoothing: "grayscale",
  // Antialiasing.
  // Change from `box-sizing: content-box` so that `width`
  // is not affected by `padding` or `border`.
  boxSizing: "border-box",
  // Fix font resize problem in iOS
  WebkitTextSizeAdjust: "100%",
  // When used under CssVarsProvider, colorScheme should not be applied dynamically because it will generate the stylesheet twice for server-rendered applications.
  ...t && !e.vars && {
    colorScheme: e.palette.mode
  }
}), Uj = (e) => ({
  color: (e.vars || e).palette.text.primary,
  ...e.typography.body1,
  backgroundColor: (e.vars || e).palette.background.default,
  "@media print": {
    // Save printer ink.
    backgroundColor: (e.vars || e).palette.common.white
  }
}), _T = (e, t = !1) => {
  var i, a;
  const n = {};
  t && e.colorSchemes && typeof e.getColorSchemeSelector == "function" && Object.entries(e.colorSchemes).forEach(([l, c]) => {
    var f, d;
    const u = e.getColorSchemeSelector(l);
    u.startsWith("@") ? n[u] = {
      ":root": {
        colorScheme: (f = c.palette) == null ? void 0 : f.mode
      }
    } : n[u.replace(/\s*&/, "")] = {
      colorScheme: (d = c.palette) == null ? void 0 : d.mode
    };
  });
  let o = {
    html: Wj(e, t),
    "*, *::before, *::after": {
      boxSizing: "inherit"
    },
    "strong, b": {
      fontWeight: e.typography.fontWeightBold
    },
    body: {
      margin: 0,
      // Remove the margin in all browsers.
      ...Uj(e),
      // Add support for document.body.requestFullScreen().
      // Other elements, if background transparent, are not supported.
      "&::backdrop": {
        backgroundColor: (e.vars || e).palette.background.default
      }
    },
    ...n
  };
  const r = (a = (i = e.components) == null ? void 0 : i.MuiCssBaseline) == null ? void 0 : a.styleOverrides;
  return r && (o = [o, r]), o;
}, Hc = "mui-ecs", qj = (e) => {
  const t = _T(e, !1), n = Array.isArray(t) ? t[0] : t;
  return !e.vars && n && (n.html[`:root:has(${Hc})`] = {
    colorScheme: e.palette.mode
  }), e.colorSchemes && Object.entries(e.colorSchemes).forEach(([o, r]) => {
    var a, l;
    const i = e.getColorSchemeSelector(o);
    i.startsWith("@") ? n[i] = {
      [`:root:not(:has(.${Hc}))`]: {
        colorScheme: (a = r.palette) == null ? void 0 : a.mode
      }
    } : n[i.replace(/\s*&/, "")] = {
      [`&:not(:has(.${Hc}))`]: {
        colorScheme: (l = r.palette) == null ? void 0 : l.mode
      }
    };
  }), t;
}, Kj = Gh(ch ? ({
  theme: e,
  enableColorScheme: t
}) => _T(e, t) : ({
  theme: e
}) => qj(e));
function AT(e) {
  const t = lt({
    props: e,
    name: "MuiCssBaseline"
  }), {
    children: n,
    enableColorScheme: o = !1
  } = t;
  return /* @__PURE__ */ Te(P.Fragment, {
    children: [ch && /* @__PURE__ */ $(Kj, {
      enableColorScheme: o
    }), !ch && !o && /* @__PURE__ */ $("span", {
      className: Hc,
      style: {
        display: "none"
      }
    }), n]
  });
}
process.env.NODE_ENV !== "production" && (AT.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * You can wrap a node.
   */
  children: s.node,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   * @default false
   */
  enableColorScheme: s.bool
});
function Yj() {
  const { themeMode: e } = Ud(), { themePalette: t } = Qm(), n = Qe(() => td({
    palette: {
      mode: e,
      primary: {
        main: t.main,
        dark: t.dark,
        light: t.light,
        contrastText: t.contrastText
      }
    }
  }), [e, t]);
  return Gj(t), { theme: n };
}
function Gj(e) {
  dt(() => {
    const t = document.createElement("style");
    return t.innerHTML = `
          /* 设置选中文本的样式 */
          ::selection {
            background-color: ${e.light};                        /* 设置选中文本的背景色 */
            color: white;                                                   /* 设置选中文本的文字颜色 */
          }
    
          /* 设置滚动条的样式 */
          ::-webkit-scrollbar {
            width: 8px;                                                     /* 设置滚动条的宽度 */
            height: 8px;                                                    /* 设置滚动条的高度 */
          }
          ::-webkit-scrollbar-thumb {
            background-color: ${e.main};                         /* 设置滚动条的颜色 */
            border-radius: 4px;                                             /* 设置滚动条的圆角 */
          }
          ::-webkit-scrollbar-thumb:hover {
            background-color: ${e.dark};                         /* 悬停时加深颜色 */
          } 
          ::-webkit-scrollbar-track {
            background-color: rgba(0, 0, 0, 0.1);                         /* 滑轨颜色 */
            border-radius: 4px;                                             /* 圆角 */
            transition: opacity 0.5s ease-in-out;                           /* 滑轨过渡效果 */
          }
          /* Firefox 滚动条样式 */
          * {
            scrollbar-color: ${e.main} rgba(0, 0, 0, 0.1);     /* 滑块 和 滑轨颜色 */
            scrollbar-width: medium;                                        /* 滚动条宽度 */
          }
          /* Firefox 滚动条的过渡效果 */
          *::-webkit-scrollbar {
            transition: opacity 0.5s ease-in-out;
          }
        `, document.head.appendChild(t), () => {
      document.head.removeChild(t);
    };
  }, [e]);
}
const Xj = Ie(({ children: e }) => {
  const { theme: t } = Yj();
  return /* @__PURE__ */ Te(cP, { theme: t, disableTransitionOnChange: !0, children: [
    /* @__PURE__ */ $(AT, {}),
    e
  ] });
});
Xj.displayName = "ThemeProvider";
function Zj(e) {
  if (typeof document > "u") return;
  let t = document.head || document.getElementsByTagName("head")[0], n = document.createElement("style");
  n.type = "text/css", t.appendChild(n), n.styleSheet ? n.styleSheet.cssText = e : n.appendChild(document.createTextNode(e));
}
const Qj = (e) => {
  switch (e) {
    case "success":
      return tV;
    case "info":
      return oV;
    case "warning":
      return nV;
    case "error":
      return rV;
    default:
      return null;
  }
}, Jj = Array(12).fill(0), eV = ({ visible: e, className: t }) => /* @__PURE__ */ Z.createElement("div", {
  className: [
    "sonner-loading-wrapper",
    t
  ].filter(Boolean).join(" "),
  "data-visible": e
}, /* @__PURE__ */ Z.createElement("div", {
  className: "sonner-spinner"
}, Jj.map((n, o) => /* @__PURE__ */ Z.createElement("div", {
  className: "sonner-loading-bar",
  key: `spinner-bar-${o}`
})))), tV = /* @__PURE__ */ Z.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ Z.createElement("path", {
  fillRule: "evenodd",
  d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
  clipRule: "evenodd"
})), nV = /* @__PURE__ */ Z.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ Z.createElement("path", {
  fillRule: "evenodd",
  d: "M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z",
  clipRule: "evenodd"
})), oV = /* @__PURE__ */ Z.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ Z.createElement("path", {
  fillRule: "evenodd",
  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z",
  clipRule: "evenodd"
})), rV = /* @__PURE__ */ Z.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ Z.createElement("path", {
  fillRule: "evenodd",
  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0110 5zm0 10a1 1 0 100-2 1 1 0 000 2z",
  clipRule: "evenodd"
})), iV = /* @__PURE__ */ Z.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "12",
  height: "12",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "1.5",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, /* @__PURE__ */ Z.createElement("line", {
  x1: "18",
  y1: "6",
  x2: "6",
  y2: "18"
}), /* @__PURE__ */ Z.createElement("line", {
  x1: "6",
  y1: "6",
  x2: "18",
  y2: "18"
})), sV = () => {
  const [e, t] = Z.useState(document.hidden);
  return Z.useEffect(() => {
    const n = () => {
      t(document.hidden);
    };
    return document.addEventListener("visibilitychange", n), () => window.removeEventListener("visibilitychange", n);
  }, []), e;
};
let uh = 1;
class aV {
  constructor() {
    this.subscribe = (t) => (this.subscribers.push(t), () => {
      const n = this.subscribers.indexOf(t);
      this.subscribers.splice(n, 1);
    }), this.publish = (t) => {
      this.subscribers.forEach((n) => n(t));
    }, this.addToast = (t) => {
      this.publish(t), this.toasts = [
        ...this.toasts,
        t
      ];
    }, this.create = (t) => {
      var n;
      const { message: o, ...r } = t, i = typeof (t == null ? void 0 : t.id) == "number" || ((n = t.id) == null ? void 0 : n.length) > 0 ? t.id : uh++, a = this.toasts.find((c) => c.id === i), l = t.dismissible === void 0 ? !0 : t.dismissible;
      return this.dismissedToasts.has(i) && this.dismissedToasts.delete(i), a ? this.toasts = this.toasts.map((c) => c.id === i ? (this.publish({
        ...c,
        ...t,
        id: i,
        title: o
      }), {
        ...c,
        ...t,
        id: i,
        dismissible: l,
        title: o
      }) : c) : this.addToast({
        title: o,
        ...r,
        dismissible: l,
        id: i
      }), i;
    }, this.dismiss = (t) => (t ? (this.dismissedToasts.add(t), requestAnimationFrame(() => this.subscribers.forEach((n) => n({
      id: t,
      dismiss: !0
    })))) : this.toasts.forEach((n) => {
      this.subscribers.forEach((o) => o({
        id: n.id,
        dismiss: !0
      }));
    }), t), this.message = (t, n) => this.create({
      ...n,
      message: t
    }), this.error = (t, n) => this.create({
      ...n,
      message: t,
      type: "error"
    }), this.success = (t, n) => this.create({
      ...n,
      type: "success",
      message: t
    }), this.info = (t, n) => this.create({
      ...n,
      type: "info",
      message: t
    }), this.warning = (t, n) => this.create({
      ...n,
      type: "warning",
      message: t
    }), this.loading = (t, n) => this.create({
      ...n,
      type: "loading",
      message: t
    }), this.promise = (t, n) => {
      if (!n)
        return;
      let o;
      n.loading !== void 0 && (o = this.create({
        ...n,
        promise: t,
        type: "loading",
        message: n.loading,
        description: typeof n.description != "function" ? n.description : void 0
      }));
      const r = Promise.resolve(t instanceof Function ? t() : t);
      let i = o !== void 0, a;
      const l = r.then(async (u) => {
        if (a = [
          "resolve",
          u
        ], Z.isValidElement(u))
          i = !1, this.create({
            id: o,
            type: "default",
            message: u
          });
        else if (cV(u) && !u.ok) {
          i = !1;
          const d = typeof n.error == "function" ? await n.error(`HTTP error! status: ${u.status}`) : n.error, p = typeof n.description == "function" ? await n.description(`HTTP error! status: ${u.status}`) : n.description, g = typeof d == "object" && !Z.isValidElement(d) ? d : {
            message: d
          };
          this.create({
            id: o,
            type: "error",
            description: p,
            ...g
          });
        } else if (u instanceof Error) {
          i = !1;
          const d = typeof n.error == "function" ? await n.error(u) : n.error, p = typeof n.description == "function" ? await n.description(u) : n.description, g = typeof d == "object" && !Z.isValidElement(d) ? d : {
            message: d
          };
          this.create({
            id: o,
            type: "error",
            description: p,
            ...g
          });
        } else if (n.success !== void 0) {
          i = !1;
          const d = typeof n.success == "function" ? await n.success(u) : n.success, p = typeof n.description == "function" ? await n.description(u) : n.description, g = typeof d == "object" && !Z.isValidElement(d) ? d : {
            message: d
          };
          this.create({
            id: o,
            type: "success",
            description: p,
            ...g
          });
        }
      }).catch(async (u) => {
        if (a = [
          "reject",
          u
        ], n.error !== void 0) {
          i = !1;
          const f = typeof n.error == "function" ? await n.error(u) : n.error, d = typeof n.description == "function" ? await n.description(u) : n.description, h = typeof f == "object" && !Z.isValidElement(f) ? f : {
            message: f
          };
          this.create({
            id: o,
            type: "error",
            description: d,
            ...h
          });
        }
      }).finally(() => {
        i && (this.dismiss(o), o = void 0), n.finally == null || n.finally.call(n);
      }), c = () => new Promise((u, f) => l.then(() => a[0] === "reject" ? f(a[1]) : u(a[1])).catch(f));
      return typeof o != "string" && typeof o != "number" ? {
        unwrap: c
      } : Object.assign(o, {
        unwrap: c
      });
    }, this.custom = (t, n) => {
      const o = (n == null ? void 0 : n.id) || uh++;
      return this.create({
        jsx: t(o),
        id: o,
        ...n
      }), o;
    }, this.getActiveToasts = () => this.toasts.filter((t) => !this.dismissedToasts.has(t.id)), this.subscribers = [], this.toasts = [], this.dismissedToasts = /* @__PURE__ */ new Set();
  }
}
const Wn = new aV(), lV = (e, t) => {
  const n = (t == null ? void 0 : t.id) || uh++;
  return Wn.addToast({
    title: e,
    ...t,
    id: n
  }), n;
}, cV = (e) => e && typeof e == "object" && "ok" in e && typeof e.ok == "boolean" && "status" in e && typeof e.status == "number", uV = lV, dV = () => Wn.toasts, fV = () => Wn.getActiveToasts(), tp = Object.assign(uV, {
  success: Wn.success,
  info: Wn.info,
  warning: Wn.warning,
  error: Wn.error,
  custom: Wn.custom,
  message: Wn.message,
  promise: Wn.promise,
  dismiss: Wn.dismiss,
  loading: Wn.loading
}, {
  getHistory: dV,
  getToasts: fV
});
Zj("[data-sonner-toaster][dir=ltr],html[dir=ltr]{--toast-icon-margin-start:-3px;--toast-icon-margin-end:4px;--toast-svg-margin-start:-1px;--toast-svg-margin-end:0px;--toast-button-margin-start:auto;--toast-button-margin-end:0;--toast-close-button-start:0;--toast-close-button-end:unset;--toast-close-button-transform:translate(-35%, -35%)}[data-sonner-toaster][dir=rtl],html[dir=rtl]{--toast-icon-margin-start:4px;--toast-icon-margin-end:-3px;--toast-svg-margin-start:0px;--toast-svg-margin-end:-1px;--toast-button-margin-start:0;--toast-button-margin-end:auto;--toast-close-button-start:unset;--toast-close-button-end:0;--toast-close-button-transform:translate(35%, -35%)}[data-sonner-toaster]{position:fixed;width:var(--width);font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;--gray1:hsl(0, 0%, 99%);--gray2:hsl(0, 0%, 97.3%);--gray3:hsl(0, 0%, 95.1%);--gray4:hsl(0, 0%, 93%);--gray5:hsl(0, 0%, 90.9%);--gray6:hsl(0, 0%, 88.7%);--gray7:hsl(0, 0%, 85.8%);--gray8:hsl(0, 0%, 78%);--gray9:hsl(0, 0%, 56.1%);--gray10:hsl(0, 0%, 52.3%);--gray11:hsl(0, 0%, 43.5%);--gray12:hsl(0, 0%, 9%);--border-radius:8px;box-sizing:border-box;padding:0;margin:0;list-style:none;outline:0;z-index:999999999;transition:transform .4s ease}[data-sonner-toaster][data-lifted=true]{transform:translateY(-8px)}@media (hover:none) and (pointer:coarse){[data-sonner-toaster][data-lifted=true]{transform:none}}[data-sonner-toaster][data-x-position=right]{right:var(--offset-right)}[data-sonner-toaster][data-x-position=left]{left:var(--offset-left)}[data-sonner-toaster][data-x-position=center]{left:50%;transform:translateX(-50%)}[data-sonner-toaster][data-y-position=top]{top:var(--offset-top)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--offset-bottom)}[data-sonner-toast]{--y:translateY(100%);--lift-amount:calc(var(--lift) * var(--gap));z-index:var(--z-index);position:absolute;opacity:0;transform:var(--y);touch-action:none;transition:transform .4s,opacity .4s,height .4s,box-shadow .2s;box-sizing:border-box;outline:0;overflow-wrap:anywhere}[data-sonner-toast][data-styled=true]{padding:16px;background:var(--normal-bg);border:1px solid var(--normal-border);color:var(--normal-text);border-radius:var(--border-radius);box-shadow:0 4px 12px rgba(0,0,0,.1);width:var(--width);font-size:13px;display:flex;align-items:center;gap:6px}[data-sonner-toast]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-y-position=top]{top:0;--y:translateY(-100%);--lift:1;--lift-amount:calc(1 * var(--gap))}[data-sonner-toast][data-y-position=bottom]{bottom:0;--y:translateY(100%);--lift:-1;--lift-amount:calc(var(--lift) * var(--gap))}[data-sonner-toast][data-styled=true] [data-description]{font-weight:400;line-height:1.4;color:#3f3f3f}[data-rich-colors=true][data-sonner-toast][data-styled=true] [data-description]{color:inherit}[data-sonner-toaster][data-sonner-theme=dark] [data-description]{color:#e8e8e8}[data-sonner-toast][data-styled=true] [data-title]{font-weight:500;line-height:1.5;color:inherit}[data-sonner-toast][data-styled=true] [data-icon]{display:flex;height:16px;width:16px;position:relative;justify-content:flex-start;align-items:center;flex-shrink:0;margin-left:var(--toast-icon-margin-start);margin-right:var(--toast-icon-margin-end)}[data-sonner-toast][data-promise=true] [data-icon]>svg{opacity:0;transform:scale(.8);transform-origin:center;animation:sonner-fade-in .3s ease forwards}[data-sonner-toast][data-styled=true] [data-icon]>*{flex-shrink:0}[data-sonner-toast][data-styled=true] [data-icon] svg{margin-left:var(--toast-svg-margin-start);margin-right:var(--toast-svg-margin-end)}[data-sonner-toast][data-styled=true] [data-content]{display:flex;flex-direction:column;gap:2px}[data-sonner-toast][data-styled=true] [data-button]{border-radius:4px;padding-left:8px;padding-right:8px;height:24px;font-size:12px;color:var(--normal-bg);background:var(--normal-text);margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end);border:none;font-weight:500;cursor:pointer;outline:0;display:flex;align-items:center;flex-shrink:0;transition:opacity .4s,box-shadow .2s}[data-sonner-toast][data-styled=true] [data-button]:focus-visible{box-shadow:0 0 0 2px rgba(0,0,0,.4)}[data-sonner-toast][data-styled=true] [data-button]:first-of-type{margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end)}[data-sonner-toast][data-styled=true] [data-cancel]{color:var(--normal-text);background:rgba(0,0,0,.08)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-styled=true] [data-cancel]{background:rgba(255,255,255,.3)}[data-sonner-toast][data-styled=true] [data-close-button]{position:absolute;left:var(--toast-close-button-start);right:var(--toast-close-button-end);top:0;height:20px;width:20px;display:flex;justify-content:center;align-items:center;padding:0;color:var(--gray12);background:var(--normal-bg);border:1px solid var(--gray4);transform:var(--toast-close-button-transform);border-radius:50%;cursor:pointer;z-index:1;transition:opacity .1s,background .2s,border-color .2s}[data-sonner-toast][data-styled=true] [data-close-button]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-styled=true] [data-disabled=true]{cursor:not-allowed}[data-sonner-toast][data-styled=true]:hover [data-close-button]:hover{background:var(--gray2);border-color:var(--gray5)}[data-sonner-toast][data-swiping=true]::before{content:'';position:absolute;left:-100%;right:-100%;height:100%;z-index:-1}[data-sonner-toast][data-y-position=top][data-swiping=true]::before{bottom:50%;transform:scaleY(3) translateY(50%)}[data-sonner-toast][data-y-position=bottom][data-swiping=true]::before{top:50%;transform:scaleY(3) translateY(-50%)}[data-sonner-toast][data-swiping=false][data-removed=true]::before{content:'';position:absolute;inset:0;transform:scaleY(2)}[data-sonner-toast][data-expanded=true]::after{content:'';position:absolute;left:0;height:calc(var(--gap) + 1px);bottom:100%;width:100%}[data-sonner-toast][data-mounted=true]{--y:translateY(0);opacity:1}[data-sonner-toast][data-expanded=false][data-front=false]{--scale:var(--toasts-before) * 0.05 + 1;--y:translateY(calc(var(--lift-amount) * var(--toasts-before))) scale(calc(-1 * var(--scale)));height:var(--front-toast-height)}[data-sonner-toast]>*{transition:opacity .4s}[data-sonner-toast][data-x-position=right]{right:0}[data-sonner-toast][data-x-position=left]{left:0}[data-sonner-toast][data-expanded=false][data-front=false][data-styled=true]>*{opacity:0}[data-sonner-toast][data-visible=false]{opacity:0;pointer-events:none}[data-sonner-toast][data-mounted=true][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset)));height:var(--initial-height)}[data-sonner-toast][data-removed=true][data-front=true][data-swipe-out=false]{--y:translateY(calc(var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset) + var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=false]{--y:translateY(40%);opacity:0;transition:transform .5s,opacity .2s}[data-sonner-toast][data-removed=true][data-front=false]::before{height:calc(var(--initial-height) + 20%)}[data-sonner-toast][data-swiping=true]{transform:var(--y) translateY(var(--swipe-amount-y,0)) translateX(var(--swipe-amount-x,0));transition:none}[data-sonner-toast][data-swiped=true]{user-select:none}[data-sonner-toast][data-swipe-out=true][data-y-position=bottom],[data-sonner-toast][data-swipe-out=true][data-y-position=top]{animation-duration:.2s;animation-timing-function:ease-out;animation-fill-mode:forwards}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=left]{animation-name:swipe-out-left}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=right]{animation-name:swipe-out-right}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=up]{animation-name:swipe-out-up}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=down]{animation-name:swipe-out-down}@keyframes swipe-out-left{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) - 100%));opacity:0}}@keyframes swipe-out-right{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) + 100%));opacity:0}}@keyframes swipe-out-up{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) - 100%));opacity:0}}@keyframes swipe-out-down{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) + 100%));opacity:0}}@media (max-width:600px){[data-sonner-toaster]{position:fixed;right:var(--mobile-offset-right);left:var(--mobile-offset-left);width:100%}[data-sonner-toaster][dir=rtl]{left:calc(var(--mobile-offset-left) * -1)}[data-sonner-toaster] [data-sonner-toast]{left:0;right:0;width:calc(100% - var(--mobile-offset-left) * 2)}[data-sonner-toaster][data-x-position=left]{left:var(--mobile-offset-left)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--mobile-offset-bottom)}[data-sonner-toaster][data-y-position=top]{top:var(--mobile-offset-top)}[data-sonner-toaster][data-x-position=center]{left:var(--mobile-offset-left);right:var(--mobile-offset-right);transform:none}}[data-sonner-toaster][data-sonner-theme=light]{--normal-bg:#fff;--normal-border:var(--gray4);--normal-text:var(--gray12);--success-bg:hsl(143, 85%, 96%);--success-border:hsl(145, 92%, 87%);--success-text:hsl(140, 100%, 27%);--info-bg:hsl(208, 100%, 97%);--info-border:hsl(221, 91%, 93%);--info-text:hsl(210, 92%, 45%);--warning-bg:hsl(49, 100%, 97%);--warning-border:hsl(49, 91%, 84%);--warning-text:hsl(31, 92%, 45%);--error-bg:hsl(359, 100%, 97%);--error-border:hsl(359, 100%, 94%);--error-text:hsl(360, 100%, 45%)}[data-sonner-toaster][data-sonner-theme=light] [data-sonner-toast][data-invert=true]{--normal-bg:#000;--normal-border:hsl(0, 0%, 20%);--normal-text:var(--gray1)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-invert=true]{--normal-bg:#fff;--normal-border:var(--gray3);--normal-text:var(--gray12)}[data-sonner-toaster][data-sonner-theme=dark]{--normal-bg:#000;--normal-bg-hover:hsl(0, 0%, 12%);--normal-border:hsl(0, 0%, 20%);--normal-border-hover:hsl(0, 0%, 25%);--normal-text:var(--gray1);--success-bg:hsl(150, 100%, 6%);--success-border:hsl(147, 100%, 12%);--success-text:hsl(150, 86%, 65%);--info-bg:hsl(215, 100%, 6%);--info-border:hsl(223, 43%, 17%);--info-text:hsl(216, 87%, 65%);--warning-bg:hsl(64, 100%, 6%);--warning-border:hsl(60, 100%, 9%);--warning-text:hsl(46, 87%, 65%);--error-bg:hsl(358, 76%, 10%);--error-border:hsl(357, 89%, 16%);--error-text:hsl(358, 100%, 81%)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]{background:var(--normal-bg);border-color:var(--normal-border);color:var(--normal-text)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]:hover{background:var(--normal-bg-hover);border-color:var(--normal-border-hover)}[data-rich-colors=true][data-sonner-toast][data-type=success]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=success] [data-close-button]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=info]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=info] [data-close-button]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning] [data-close-button]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=error]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}[data-rich-colors=true][data-sonner-toast][data-type=error] [data-close-button]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}.sonner-loading-wrapper{--size:16px;height:var(--size);width:var(--size);position:absolute;inset:0;z-index:10}.sonner-loading-wrapper[data-visible=false]{transform-origin:center;animation:sonner-fade-out .2s ease forwards}.sonner-spinner{position:relative;top:50%;left:50%;height:var(--size);width:var(--size)}.sonner-loading-bar{animation:sonner-spin 1.2s linear infinite;background:var(--gray11);border-radius:6px;height:8%;left:-10%;position:absolute;top:-3.9%;width:24%}.sonner-loading-bar:first-child{animation-delay:-1.2s;transform:rotate(.0001deg) translate(146%)}.sonner-loading-bar:nth-child(2){animation-delay:-1.1s;transform:rotate(30deg) translate(146%)}.sonner-loading-bar:nth-child(3){animation-delay:-1s;transform:rotate(60deg) translate(146%)}.sonner-loading-bar:nth-child(4){animation-delay:-.9s;transform:rotate(90deg) translate(146%)}.sonner-loading-bar:nth-child(5){animation-delay:-.8s;transform:rotate(120deg) translate(146%)}.sonner-loading-bar:nth-child(6){animation-delay:-.7s;transform:rotate(150deg) translate(146%)}.sonner-loading-bar:nth-child(7){animation-delay:-.6s;transform:rotate(180deg) translate(146%)}.sonner-loading-bar:nth-child(8){animation-delay:-.5s;transform:rotate(210deg) translate(146%)}.sonner-loading-bar:nth-child(9){animation-delay:-.4s;transform:rotate(240deg) translate(146%)}.sonner-loading-bar:nth-child(10){animation-delay:-.3s;transform:rotate(270deg) translate(146%)}.sonner-loading-bar:nth-child(11){animation-delay:-.2s;transform:rotate(300deg) translate(146%)}.sonner-loading-bar:nth-child(12){animation-delay:-.1s;transform:rotate(330deg) translate(146%)}@keyframes sonner-fade-in{0%{opacity:0;transform:scale(.8)}100%{opacity:1;transform:scale(1)}}@keyframes sonner-fade-out{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(.8)}}@keyframes sonner-spin{0%{opacity:1}100%{opacity:.15}}@media (prefers-reduced-motion){.sonner-loading-bar,[data-sonner-toast],[data-sonner-toast]>*{transition:none!important;animation:none!important}}.sonner-loader{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);transform-origin:center;transition:opacity .2s,transform .2s}.sonner-loader[data-visible=false]{opacity:0;transform:scale(.8) translate(-50%,-50%)}");
function bc(e) {
  return e.label !== void 0;
}
const pV = 3, hV = "24px", mV = "16px", D0 = 4e3, gV = 356, yV = 14, bV = 45, vV = 200;
function Zo(...e) {
  return e.filter(Boolean).join(" ");
}
function xV(e) {
  const [t, n] = e.split("-"), o = [];
  return t && o.push(t), n && o.push(n), o;
}
const wV = (e) => {
  var t, n, o, r, i, a, l, c, u;
  const { invert: f, toast: d, unstyled: p, interacting: h, setHeights: g, visibleToasts: m, heights: y, index: x, toasts: T, expanded: b, removeToast: w, defaultRichColors: S, closeButton: E, style: C, cancelButtonStyle: R, actionButtonStyle: M, className: v = "", descriptionClassName: I = "", duration: k, position: A, gap: O, expandByDefault: _, classNames: N, icons: L, closeButtonAriaLabel: F = "Close toast" } = e, [D, B] = Z.useState(null), [z, U] = Z.useState(null), [q, Y] = Z.useState(!1), [K, te] = Z.useState(!1), [ne, W] = Z.useState(!1), [ee, G] = Z.useState(!1), [re, V] = Z.useState(!1), [de, ue] = Z.useState(0), [xe, Ae] = Z.useState(0), we = Z.useRef(d.duration || k || D0), De = Z.useRef(null), Ce = Z.useRef(null), Be = x === 0, Me = x + 1 <= m, j = d.type, J = d.dismissible !== !1, ie = d.className || "", Q = d.descriptionClassName || "", H = Z.useMemo(() => y.findIndex((je) => je.toastId === d.id) || 0, [
    y,
    d.id
  ]), X = Z.useMemo(() => {
    var je;
    return (je = d.closeButton) != null ? je : E;
  }, [
    d.closeButton,
    E
  ]), se = Z.useMemo(() => d.duration || k || D0, [
    d.duration,
    k
  ]), ye = Z.useRef(0), he = Z.useRef(0), le = Z.useRef(0), ae = Z.useRef(null), [ce, Se] = A.split("-"), $e = Z.useMemo(() => y.reduce((je, ft, Et) => Et >= H ? je : je + ft.height, 0), [
    y,
    H
  ]), oe = sV(), be = d.invert || f, Ne = j === "loading";
  he.current = Z.useMemo(() => H * O + $e, [
    H,
    $e
  ]), Z.useEffect(() => {
    we.current = se;
  }, [
    se
  ]), Z.useEffect(() => {
    Y(!0);
  }, []), Z.useEffect(() => {
    const je = Ce.current;
    if (je) {
      const ft = je.getBoundingClientRect().height;
      return Ae(ft), g((Et) => [
        {
          toastId: d.id,
          height: ft,
          position: d.position
        },
        ...Et
      ]), () => g((Et) => Et.filter((Le) => Le.toastId !== d.id));
    }
  }, [
    g,
    d.id
  ]), Z.useLayoutEffect(() => {
    if (!q) return;
    const je = Ce.current, ft = je.style.height;
    je.style.height = "auto";
    const Et = je.getBoundingClientRect().height;
    je.style.height = ft, Ae(Et), g((Le) => Le.find((Lt) => Lt.toastId === d.id) ? Le.map((Lt) => Lt.toastId === d.id ? {
      ...Lt,
      height: Et
    } : Lt) : [
      {
        toastId: d.id,
        height: Et,
        position: d.position
      },
      ...Le
    ]);
  }, [
    q,
    d.title,
    d.description,
    g,
    d.id
  ]);
  const We = Z.useCallback(() => {
    te(!0), ue(he.current), g((je) => je.filter((ft) => ft.toastId !== d.id)), setTimeout(() => {
      w(d);
    }, vV);
  }, [
    d,
    w,
    g,
    he
  ]);
  Z.useEffect(() => {
    if (d.promise && j === "loading" || d.duration === 1 / 0 || d.type === "loading") return;
    let je;
    return b || h || oe ? (() => {
      if (le.current < ye.current) {
        const Le = (/* @__PURE__ */ new Date()).getTime() - ye.current;
        we.current = we.current - Le;
      }
      le.current = (/* @__PURE__ */ new Date()).getTime();
    })() : (() => {
      we.current !== 1 / 0 && (ye.current = (/* @__PURE__ */ new Date()).getTime(), je = setTimeout(() => {
        d.onAutoClose == null || d.onAutoClose.call(d, d), We();
      }, we.current));
    })(), () => clearTimeout(je);
  }, [
    b,
    h,
    d,
    j,
    oe,
    We
  ]), Z.useEffect(() => {
    d.delete && We();
  }, [
    We,
    d.delete
  ]);
  function Ue() {
    var je;
    if (L != null && L.loading) {
      var ft;
      return /* @__PURE__ */ Z.createElement("div", {
        className: Zo(N == null ? void 0 : N.loader, d == null || (ft = d.classNames) == null ? void 0 : ft.loader, "sonner-loader"),
        "data-visible": j === "loading"
      }, L.loading);
    }
    return /* @__PURE__ */ Z.createElement(eV, {
      className: Zo(N == null ? void 0 : N.loader, d == null || (je = d.classNames) == null ? void 0 : je.loader),
      visible: j === "loading"
    });
  }
  const vt = d.icon || (L == null ? void 0 : L[j]) || Qj(j);
  var ut, Tt;
  return /* @__PURE__ */ Z.createElement("li", {
    tabIndex: 0,
    ref: Ce,
    className: Zo(v, ie, N == null ? void 0 : N.toast, d == null || (t = d.classNames) == null ? void 0 : t.toast, N == null ? void 0 : N.default, N == null ? void 0 : N[j], d == null || (n = d.classNames) == null ? void 0 : n[j]),
    "data-sonner-toast": "",
    "data-rich-colors": (ut = d.richColors) != null ? ut : S,
    "data-styled": !(d.jsx || d.unstyled || p),
    "data-mounted": q,
    "data-promise": !!d.promise,
    "data-swiped": re,
    "data-removed": K,
    "data-visible": Me,
    "data-y-position": ce,
    "data-x-position": Se,
    "data-index": x,
    "data-front": Be,
    "data-swiping": ne,
    "data-dismissible": J,
    "data-type": j,
    "data-invert": be,
    "data-swipe-out": ee,
    "data-swipe-direction": z,
    "data-expanded": !!(b || _ && q),
    style: {
      "--index": x,
      "--toasts-before": x,
      "--z-index": T.length - x,
      "--offset": `${K ? de : he.current}px`,
      "--initial-height": _ ? "auto" : `${xe}px`,
      ...C,
      ...d.style
    },
    onDragEnd: () => {
      W(!1), B(null), ae.current = null;
    },
    onPointerDown: (je) => {
      Ne || !J || (De.current = /* @__PURE__ */ new Date(), ue(he.current), je.target.setPointerCapture(je.pointerId), je.target.tagName !== "BUTTON" && (W(!0), ae.current = {
        x: je.clientX,
        y: je.clientY
      }));
    },
    onPointerUp: () => {
      var je, ft, Et;
      if (ee || !J) return;
      ae.current = null;
      const Le = Number(((je = Ce.current) == null ? void 0 : je.style.getPropertyValue("--swipe-amount-x").replace("px", "")) || 0), Bt = Number(((ft = Ce.current) == null ? void 0 : ft.style.getPropertyValue("--swipe-amount-y").replace("px", "")) || 0), Lt = (/* @__PURE__ */ new Date()).getTime() - ((Et = De.current) == null ? void 0 : Et.getTime()), Gt = D === "x" ? Le : Bt, vo = Math.abs(Gt) / Lt;
      if (Math.abs(Gt) >= bV || vo > 0.11) {
        ue(he.current), d.onDismiss == null || d.onDismiss.call(d, d), U(D === "x" ? Le > 0 ? "right" : "left" : Bt > 0 ? "down" : "up"), We(), G(!0);
        return;
      } else {
        var hn, Sn;
        (hn = Ce.current) == null || hn.style.setProperty("--swipe-amount-x", "0px"), (Sn = Ce.current) == null || Sn.style.setProperty("--swipe-amount-y", "0px");
      }
      V(!1), W(!1), B(null);
    },
    onPointerMove: (je) => {
      var ft, Et, Le;
      if (!ae.current || !J || ((ft = window.getSelection()) == null ? void 0 : ft.toString().length) > 0) return;
      const Lt = je.clientY - ae.current.y, Gt = je.clientX - ae.current.x;
      var vo;
      const hn = (vo = e.swipeDirections) != null ? vo : xV(A);
      !D && (Math.abs(Gt) > 1 || Math.abs(Lt) > 1) && B(Math.abs(Gt) > Math.abs(Lt) ? "x" : "y");
      let Sn = {
        x: 0,
        y: 0
      };
      const _r = (Jn) => 1 / (1.5 + Math.abs(Jn) / 20);
      if (D === "y") {
        if (hn.includes("top") || hn.includes("bottom"))
          if (hn.includes("top") && Lt < 0 || hn.includes("bottom") && Lt > 0)
            Sn.y = Lt;
          else {
            const Jn = Lt * _r(Lt);
            Sn.y = Math.abs(Jn) < Math.abs(Lt) ? Jn : Lt;
          }
      } else if (D === "x" && (hn.includes("left") || hn.includes("right")))
        if (hn.includes("left") && Gt < 0 || hn.includes("right") && Gt > 0)
          Sn.x = Gt;
        else {
          const Jn = Gt * _r(Gt);
          Sn.x = Math.abs(Jn) < Math.abs(Gt) ? Jn : Gt;
        }
      (Math.abs(Sn.x) > 0 || Math.abs(Sn.y) > 0) && V(!0), (Et = Ce.current) == null || Et.style.setProperty("--swipe-amount-x", `${Sn.x}px`), (Le = Ce.current) == null || Le.style.setProperty("--swipe-amount-y", `${Sn.y}px`);
    }
  }, X && !d.jsx && j !== "loading" ? /* @__PURE__ */ Z.createElement("button", {
    "aria-label": F,
    "data-disabled": Ne,
    "data-close-button": !0,
    onClick: Ne || !J ? () => {
    } : () => {
      We(), d.onDismiss == null || d.onDismiss.call(d, d);
    },
    className: Zo(N == null ? void 0 : N.closeButton, d == null || (o = d.classNames) == null ? void 0 : o.closeButton)
  }, (Tt = L == null ? void 0 : L.close) != null ? Tt : iV) : null, (j || d.icon || d.promise) && d.icon !== null && ((L == null ? void 0 : L[j]) !== null || d.icon) ? /* @__PURE__ */ Z.createElement("div", {
    "data-icon": "",
    className: Zo(N == null ? void 0 : N.icon, d == null || (r = d.classNames) == null ? void 0 : r.icon)
  }, d.promise || d.type === "loading" && !d.icon ? d.icon || Ue() : null, d.type !== "loading" ? vt : null) : null, /* @__PURE__ */ Z.createElement("div", {
    "data-content": "",
    className: Zo(N == null ? void 0 : N.content, d == null || (i = d.classNames) == null ? void 0 : i.content)
  }, /* @__PURE__ */ Z.createElement("div", {
    "data-title": "",
    className: Zo(N == null ? void 0 : N.title, d == null || (a = d.classNames) == null ? void 0 : a.title)
  }, d.jsx ? d.jsx : typeof d.title == "function" ? d.title() : d.title), d.description ? /* @__PURE__ */ Z.createElement("div", {
    "data-description": "",
    className: Zo(I, Q, N == null ? void 0 : N.description, d == null || (l = d.classNames) == null ? void 0 : l.description)
  }, typeof d.description == "function" ? d.description() : d.description) : null), /* @__PURE__ */ Z.isValidElement(d.cancel) ? d.cancel : d.cancel && bc(d.cancel) ? /* @__PURE__ */ Z.createElement("button", {
    "data-button": !0,
    "data-cancel": !0,
    style: d.cancelButtonStyle || R,
    onClick: (je) => {
      bc(d.cancel) && J && (d.cancel.onClick == null || d.cancel.onClick.call(d.cancel, je), We());
    },
    className: Zo(N == null ? void 0 : N.cancelButton, d == null || (c = d.classNames) == null ? void 0 : c.cancelButton)
  }, d.cancel.label) : null, /* @__PURE__ */ Z.isValidElement(d.action) ? d.action : d.action && bc(d.action) ? /* @__PURE__ */ Z.createElement("button", {
    "data-button": !0,
    "data-action": !0,
    style: d.actionButtonStyle || M,
    onClick: (je) => {
      bc(d.action) && (d.action.onClick == null || d.action.onClick.call(d.action, je), !je.defaultPrevented && We());
    },
    className: Zo(N == null ? void 0 : N.actionButton, d == null || (u = d.classNames) == null ? void 0 : u.actionButton)
  }, d.action.label) : null);
};
function L0() {
  if (typeof window > "u" || typeof document > "u") return "ltr";
  const e = document.documentElement.getAttribute("dir");
  return e === "auto" || !e ? window.getComputedStyle(document.documentElement).direction : e;
}
function SV(e, t) {
  const n = {};
  return [
    e,
    t
  ].forEach((o, r) => {
    const i = r === 1, a = i ? "--mobile-offset" : "--offset", l = i ? mV : hV;
    function c(u) {
      [
        "top",
        "right",
        "bottom",
        "left"
      ].forEach((f) => {
        n[`${a}-${f}`] = typeof u == "number" ? `${u}px` : u;
      });
    }
    typeof o == "number" || typeof o == "string" ? c(o) : typeof o == "object" ? [
      "top",
      "right",
      "bottom",
      "left"
    ].forEach((u) => {
      o[u] === void 0 ? n[`${a}-${u}`] = l : n[`${a}-${u}`] = typeof o[u] == "number" ? `${o[u]}px` : o[u];
    }) : c(l);
  }), n;
}
const TV = /* @__PURE__ */ Z.forwardRef(function(t, n) {
  const { invert: o, position: r = "bottom-right", hotkey: i = [
    "altKey",
    "KeyT"
  ], expand: a, closeButton: l, className: c, offset: u, mobileOffset: f, theme: d = "light", richColors: p, duration: h, style: g, visibleToasts: m = pV, toastOptions: y, dir: x = L0(), gap: T = yV, icons: b, containerAriaLabel: w = "Notifications" } = t, [S, E] = Z.useState([]), C = Z.useMemo(() => Array.from(new Set([
    r
  ].concat(S.filter((z) => z.position).map((z) => z.position)))), [
    S,
    r
  ]), [R, M] = Z.useState([]), [v, I] = Z.useState(!1), [k, A] = Z.useState(!1), [O, _] = Z.useState(d !== "system" ? d : typeof window < "u" && window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light"), N = Z.useRef(null), L = i.join("+").replace(/Key/g, "").replace(/Digit/g, ""), F = Z.useRef(null), D = Z.useRef(!1), B = Z.useCallback((z) => {
    E((U) => {
      var q;
      return (q = U.find((Y) => Y.id === z.id)) != null && q.delete || Wn.dismiss(z.id), U.filter(({ id: Y }) => Y !== z.id);
    });
  }, []);
  return Z.useEffect(() => Wn.subscribe((z) => {
    if (z.dismiss) {
      requestAnimationFrame(() => {
        E((U) => U.map((q) => q.id === z.id ? {
          ...q,
          delete: !0
        } : q));
      });
      return;
    }
    setTimeout(() => {
      cs.flushSync(() => {
        E((U) => {
          const q = U.findIndex((Y) => Y.id === z.id);
          return q !== -1 ? [
            ...U.slice(0, q),
            {
              ...U[q],
              ...z
            },
            ...U.slice(q + 1)
          ] : [
            z,
            ...U
          ];
        });
      });
    });
  }), [
    S
  ]), Z.useEffect(() => {
    if (d !== "system") {
      _(d);
      return;
    }
    if (d === "system" && (window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? _("dark") : _("light")), typeof window > "u") return;
    const z = window.matchMedia("(prefers-color-scheme: dark)");
    try {
      z.addEventListener("change", ({ matches: U }) => {
        _(U ? "dark" : "light");
      });
    } catch {
      z.addListener(({ matches: q }) => {
        try {
          _(q ? "dark" : "light");
        } catch (Y) {
          console.error(Y);
        }
      });
    }
  }, [
    d
  ]), Z.useEffect(() => {
    S.length <= 1 && I(!1);
  }, [
    S
  ]), Z.useEffect(() => {
    const z = (U) => {
      var q;
      if (i.every((te) => U[te] || U.code === te)) {
        var K;
        I(!0), (K = N.current) == null || K.focus();
      }
      U.code === "Escape" && (document.activeElement === N.current || (q = N.current) != null && q.contains(document.activeElement)) && I(!1);
    };
    return document.addEventListener("keydown", z), () => document.removeEventListener("keydown", z);
  }, [
    i
  ]), Z.useEffect(() => {
    if (N.current)
      return () => {
        F.current && (F.current.focus({
          preventScroll: !0
        }), F.current = null, D.current = !1);
      };
  }, [
    N.current
  ]), // Remove item from normal navigation flow, only available via hotkey
  /* @__PURE__ */ Z.createElement("section", {
    ref: n,
    "aria-label": `${w} ${L}`,
    tabIndex: -1,
    "aria-live": "polite",
    "aria-relevant": "additions text",
    "aria-atomic": "false",
    suppressHydrationWarning: !0
  }, C.map((z, U) => {
    var q;
    const [Y, K] = z.split("-");
    return S.length ? /* @__PURE__ */ Z.createElement("ol", {
      key: z,
      dir: x === "auto" ? L0() : x,
      tabIndex: -1,
      ref: N,
      className: c,
      "data-sonner-toaster": !0,
      "data-sonner-theme": O,
      "data-y-position": Y,
      "data-lifted": v && S.length > 1 && !a,
      "data-x-position": K,
      style: {
        "--front-toast-height": `${((q = R[0]) == null ? void 0 : q.height) || 0}px`,
        "--width": `${gV}px`,
        "--gap": `${T}px`,
        ...g,
        ...SV(u, f)
      },
      onBlur: (te) => {
        D.current && !te.currentTarget.contains(te.relatedTarget) && (D.current = !1, F.current && (F.current.focus({
          preventScroll: !0
        }), F.current = null));
      },
      onFocus: (te) => {
        te.target instanceof HTMLElement && te.target.dataset.dismissible === "false" || D.current || (D.current = !0, F.current = te.relatedTarget);
      },
      onMouseEnter: () => I(!0),
      onMouseMove: () => I(!0),
      onMouseLeave: () => {
        k || I(!1);
      },
      onDragEnd: () => I(!1),
      onPointerDown: (te) => {
        te.target instanceof HTMLElement && te.target.dataset.dismissible === "false" || A(!0);
      },
      onPointerUp: () => A(!1)
    }, S.filter((te) => !te.position && U === 0 || te.position === z).map((te, ne) => {
      var W, ee;
      return /* @__PURE__ */ Z.createElement(wV, {
        key: te.id,
        icons: b,
        index: ne,
        toast: te,
        defaultRichColors: p,
        duration: (W = y == null ? void 0 : y.duration) != null ? W : h,
        className: y == null ? void 0 : y.className,
        descriptionClassName: y == null ? void 0 : y.descriptionClassName,
        invert: o,
        visibleToasts: m,
        closeButton: (ee = y == null ? void 0 : y.closeButton) != null ? ee : l,
        interacting: k,
        position: z,
        style: y == null ? void 0 : y.style,
        unstyled: y == null ? void 0 : y.unstyled,
        classNames: y == null ? void 0 : y.classNames,
        cancelButtonStyle: y == null ? void 0 : y.cancelButtonStyle,
        actionButtonStyle: y == null ? void 0 : y.actionButtonStyle,
        closeButtonAriaLabel: y == null ? void 0 : y.closeButtonAriaLabel,
        removeToast: B,
        toasts: S.filter((G) => G.position == te.position),
        heights: R.filter((G) => G.position == te.position),
        setHeights: M,
        expandByDefault: a,
        gap: T,
        expanded: v,
        swipeDirections: t.swipeDirections
      });
    })) : null;
  }));
}), EV = Ie(({ position: e = "bottom-right" }) => {
  const { isDarkMode: t } = Ud();
  return /* @__PURE__ */ $(
    TV,
    {
      closeButton: !1,
      invert: t,
      visibleToasts: 3,
      position: e,
      gap: 6
    }
  );
});
EV.displayName = "Button";
function CV() {
  return ze(({ type: t, title: n, description: o }) => {
    const r = {
      description: o,
      icon: /* @__PURE__ */ $(Wo, { icon: OV(t), color: $V(t) }),
      cancel: {
        label: /* @__PURE__ */ $(Wo, { icon: "solar:close-circle-outline" }),
        onClick: () => {
        }
      },
      cancelButtonStyle: { background: "transparent" }
    };
    return t === "success" ? tp.success(n, r) : t === "error" ? tp.error(n, r) : tp.info(n, r);
  }, []);
}
function OV(e) {
  switch (e) {
    case "success":
      return "solar:check-circle-bold";
    case "error":
      return "solar:danger-triangle-bold";
    case "info":
    default:
      return "solar:danger-circle-bold";
  }
}
function $V(e) {
  switch (e) {
    case "success":
      return "success";
    case "error":
      return "error";
    case "info":
      return "auto";
    default:
      return "disabled";
  }
}
const IV = Ie(() => {
  const { isFullScreen: e, toggleFullScreen: t } = yj();
  return /* @__PURE__ */ $(
    On,
    {
      isCircle: !0,
      isGhost: !0,
      color: "auto",
      icon: e ? "solar:quit-full-screen-square-line-duotone" : "solar:full-screen-square-line-duotone",
      iconWidth: 28,
      onClick: t
    }
  );
});
IV.displayName = "AdminFullScreen";
const RV = Ie(({ children: e, sx: t }) => /* @__PURE__ */ $(
  Cr,
  {
    isOutlined: !0,
    sx: {
      width: "100%",
      position: "sticky",
      top: 0,
      left: 0,
      right: 0,
      ...t
    },
    children: /* @__PURE__ */ $(
      dn,
      {
        className: "VenomousUI-AdminHeader",
        row: !0,
        component: "header",
        sx: {
          width: "100%",
          height: 50,
          alignItems: "center",
          justifyContent: "space-between"
        },
        children: e
      }
    )
  }
));
RV.displayName = "AdminHeader";
const kV = ({
  items: e,
  isItemSelected: t,
  isItemDisabled: n,
  onItemClick: o,
  renderItem: r
}) => /* @__PURE__ */ $(
  xj,
  {
    cols: { xs: 3, sm: 3, md: 3, lg: 3, xl: 3 },
    height: 68 * Math.ceil(e.length / 3),
    items: e,
    renderGridItem: (i) => /* @__PURE__ */ $(
      sd,
      {
        isOutlined: !t(i),
        clickable: !0,
        disabled: n ? n(i) : !1,
        onClick: () => void (o == null ? void 0 : o(i)),
        sx: {
          width: "100%",
          height: "60px",
          m: "4px",
          p: "8px",
          border: 0,
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          transition: "outline-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out",
          outlineWidth: "1px",
          outlineStyle: "solid",
          outlineColor: ({ palette: a }) => t(i) ? a.primary.main : "divider",
          color: ({ palette: a }) => `${a.text.primary} !important`
        },
        children: r(i)
      }
    )
  }
), PV = Ie(
  kV
), NV = Ie(
  ({
    children: e,
    width: t = 300,
    title: n = "Settings",
    labelOfThemeMode: o = "ThemeMode",
    labelOfThemePalettes: r = "ThemePalettes",
    onChangeThemeMode: i,
    onChangeThemePalette: a
  }) => {
    const { isOpen: l, openDrawer: c, closeDrawer: u } = BA();
    return /* @__PURE__ */ Te(mo, { children: [
      /* @__PURE__ */ $(
        On,
        {
          isCircle: !0,
          isGhost: !0,
          icon: "solar:settings-line-duotone",
          iconWidth: 28,
          onClick: c,
          color: "auto"
        }
      ),
      /* @__PURE__ */ Te(OS, { width: t, position: "right", isOpen: l, closeDrawer: u, children: [
        /* @__PURE__ */ $($S, { title: n, closeDrawer: u }),
        /* @__PURE__ */ $(Cn, { text: o, isLabel: !0 }),
        /* @__PURE__ */ $(MV, { onChangeThemeMode: i }),
        /* @__PURE__ */ $("br", {}),
        /* @__PURE__ */ $(Cn, { text: r, isLabel: !0 }),
        /* @__PURE__ */ $(_V, { onChangeThemePalette: a }),
        /* @__PURE__ */ $("br", {}),
        e
      ] })
    ] });
  }
);
NV.displayName = "AdminSettingsDrawer";
function MV({
  onChangeThemeMode: e
}) {
  const { themeMode: t, isDarkMode: n, toggleThemeMode: o } = Ud();
  return /* @__PURE__ */ Te(
    sd,
    {
      isOutlined: !0,
      clickable: !0,
      onClick: () => {
        o(), setTimeout(() => void (e == null ? void 0 : e(t)), 200);
      },
      sx: {
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between",
        height: "60px",
        pl: "24px",
        mt: "2px"
      },
      children: [
        /* @__PURE__ */ $(
          Wo,
          {
            icon: n ? "solar:moon-bold-duotone" : "solar:sun-2-bold-duotone",
            width: 24,
            color: "primary"
          }
        ),
        /* @__PURE__ */ $(Km, { value: n, onChange: () => {
        } })
      ]
    }
  );
}
function _V({
  onChangeThemePalette: e
}) {
  const { allPaletteNames: t, themePaletteName: n, setThemePaletteName: o } = Qm();
  return /* @__PURE__ */ $(
    PV,
    {
      items: t.map((r) => r),
      isItemSelected: (r) => r === n,
      isItemDisabled: (r) => r === n,
      onItemClick: async (r) => {
        o(r), await new Promise((i) => setTimeout(i, 200)), e == null || e(r);
      },
      renderItem: (r) => /* @__PURE__ */ $(
        Wo,
        {
          icon: "solar:siderbar-bold-duotone",
          width: 32,
          sx: { color: rh(r).main }
        }
      )
    }
  );
}
const AV = Ie(
  ({ menuHeaderHeight: e = 50, menuWidth: t = 220, menuItems: n, currentPath: o, menuHeaderElement: r, sx: i }) => {
    const { checkIsParentItemActive: a, checkIsSubItemActive: l } = eA({
      currentPath: o
    });
    return /* @__PURE__ */ Te(
      Cr,
      {
        className: "VenomousUI-AdminSideNavMenu",
        isOutlined: !0,
        sx: { width: t, height: "100svh", ...i },
        children: [
          /* @__PURE__ */ $(dn, { row: !0, gap: 0, height: e, px: "8px", mb: "8px", children: r }),
          /* @__PURE__ */ $(
            du,
            {
              width: "100%",
              height: `calc(100svh - ${e}px - 16px)`,
              items: n,
              renderItem: (c) => c.subItems ? /* @__PURE__ */ $(
                MT,
                {
                  id: c.label,
                  position: "right",
                  sx: { width: "100%" },
                  contentSx: { p: "8px" },
                  renderPopperHandler: ({ isOpen: u, openPopper: f }) => /* @__PURE__ */ $(
                    _a,
                    {
                      label: c.label,
                      isActive: a(c),
                      icon: c.icon,
                      clickable: !0,
                      ellipsis: !0,
                      onClick: f,
                      onMouseEnter: f,
                      sx: { backgroundColor: u ? "divider" : "transparent" }
                    }
                  ),
                  children: /* @__PURE__ */ $(
                    du,
                    {
                      width: t,
                      items: c.subItems,
                      renderItem: (u) => /* @__PURE__ */ $(
                        _a,
                        {
                          label: u.label,
                          isActive: l(u),
                          icon: u.icon,
                          clickable: !0,
                          ellipsis: !0,
                          onClick: u.onClick
                        },
                        u.label
                      )
                    }
                  )
                }
              ) : /* @__PURE__ */ $(
                _a,
                {
                  label: c.label,
                  isActive: a(c),
                  icon: c.icon,
                  clickable: !0,
                  ellipsis: !0,
                  onClick: c.onClick
                },
                c.label
              )
            }
          )
        ]
      }
    );
  }
);
AV.displayName = "AdminSideNavMenu";
function pn(e) {
  if (typeof e == "string" || typeof e == "number") return "" + e;
  let t = "";
  if (Array.isArray(e))
    for (let n = 0, o; n < e.length; n++)
      (o = pn(e[n])) !== "" && (t += (t && " ") + o);
  else
    for (let n in e)
      e[n] && (t += (t && " ") + n);
  return t;
}
var DV = { value: () => {
} };
function qd() {
  for (var e = 0, t = arguments.length, n = {}, o; e < t; ++e) {
    if (!(o = arguments[e] + "") || o in n || /[\s.]/.test(o)) throw new Error("illegal type: " + o);
    n[o] = [];
  }
  return new Wc(n);
}
function Wc(e) {
  this._ = e;
}
function LV(e, t) {
  return e.trim().split(/^|\s+/).map(function(n) {
    var o = "", r = n.indexOf(".");
    if (r >= 0 && (o = n.slice(r + 1), n = n.slice(0, r)), n && !t.hasOwnProperty(n)) throw new Error("unknown type: " + n);
    return { type: n, name: o };
  });
}
Wc.prototype = qd.prototype = {
  constructor: Wc,
  on: function(e, t) {
    var n = this._, o = LV(e + "", n), r, i = -1, a = o.length;
    if (arguments.length < 2) {
      for (; ++i < a; ) if ((r = (e = o[i]).type) && (r = BV(n[r], e.name))) return r;
      return;
    }
    if (t != null && typeof t != "function") throw new Error("invalid callback: " + t);
    for (; ++i < a; )
      if (r = (e = o[i]).type) n[r] = B0(n[r], e.name, t);
      else if (t == null) for (r in n) n[r] = B0(n[r], e.name, null);
    return this;
  },
  copy: function() {
    var e = {}, t = this._;
    for (var n in t) e[n] = t[n].slice();
    return new Wc(e);
  },
  call: function(e, t) {
    if ((r = arguments.length - 2) > 0) for (var n = new Array(r), o = 0, r, i; o < r; ++o) n[o] = arguments[o + 2];
    if (!this._.hasOwnProperty(e)) throw new Error("unknown type: " + e);
    for (i = this._[e], o = 0, r = i.length; o < r; ++o) i[o].value.apply(t, n);
  },
  apply: function(e, t, n) {
    if (!this._.hasOwnProperty(e)) throw new Error("unknown type: " + e);
    for (var o = this._[e], r = 0, i = o.length; r < i; ++r) o[r].value.apply(t, n);
  }
};
function BV(e, t) {
  for (var n = 0, o = e.length, r; n < o; ++n)
    if ((r = e[n]).name === t)
      return r.value;
}
function B0(e, t, n) {
  for (var o = 0, r = e.length; o < r; ++o)
    if (e[o].name === t) {
      e[o] = DV, e = e.slice(0, o).concat(e.slice(o + 1));
      break;
    }
  return n != null && e.push({ name: t, value: n }), e;
}
var dh = "http://www.w3.org/1999/xhtml";
const F0 = {
  svg: "http://www.w3.org/2000/svg",
  xhtml: dh,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};
function Kd(e) {
  var t = e += "", n = t.indexOf(":");
  return n >= 0 && (t = e.slice(0, n)) !== "xmlns" && (e = e.slice(n + 1)), F0.hasOwnProperty(t) ? { space: F0[t], local: e } : e;
}
function FV(e) {
  return function() {
    var t = this.ownerDocument, n = this.namespaceURI;
    return n === dh && t.documentElement.namespaceURI === dh ? t.createElement(e) : t.createElementNS(n, e);
  };
}
function zV(e) {
  return function() {
    return this.ownerDocument.createElementNS(e.space, e.local);
  };
}
function DT(e) {
  var t = Kd(e);
  return (t.local ? zV : FV)(t);
}
function jV() {
}
function eg(e) {
  return e == null ? jV : function() {
    return this.querySelector(e);
  };
}
function VV(e) {
  typeof e != "function" && (e = eg(e));
  for (var t = this._groups, n = t.length, o = new Array(n), r = 0; r < n; ++r)
    for (var i = t[r], a = i.length, l = o[r] = new Array(a), c, u, f = 0; f < a; ++f)
      (c = i[f]) && (u = e.call(c, c.__data__, f, i)) && ("__data__" in c && (u.__data__ = c.__data__), l[f] = u);
  return new ho(o, this._parents);
}
function HV(e) {
  return e == null ? [] : Array.isArray(e) ? e : Array.from(e);
}
function WV() {
  return [];
}
function LT(e) {
  return e == null ? WV : function() {
    return this.querySelectorAll(e);
  };
}
function UV(e) {
  return function() {
    return HV(e.apply(this, arguments));
  };
}
function qV(e) {
  typeof e == "function" ? e = UV(e) : e = LT(e);
  for (var t = this._groups, n = t.length, o = [], r = [], i = 0; i < n; ++i)
    for (var a = t[i], l = a.length, c, u = 0; u < l; ++u)
      (c = a[u]) && (o.push(e.call(c, c.__data__, u, a)), r.push(c));
  return new ho(o, r);
}
function BT(e) {
  return function() {
    return this.matches(e);
  };
}
function FT(e) {
  return function(t) {
    return t.matches(e);
  };
}
var KV = Array.prototype.find;
function YV(e) {
  return function() {
    return KV.call(this.children, e);
  };
}
function GV() {
  return this.firstElementChild;
}
function XV(e) {
  return this.select(e == null ? GV : YV(typeof e == "function" ? e : FT(e)));
}
var ZV = Array.prototype.filter;
function QV() {
  return Array.from(this.children);
}
function JV(e) {
  return function() {
    return ZV.call(this.children, e);
  };
}
function e4(e) {
  return this.selectAll(e == null ? QV : JV(typeof e == "function" ? e : FT(e)));
}
function t4(e) {
  typeof e != "function" && (e = BT(e));
  for (var t = this._groups, n = t.length, o = new Array(n), r = 0; r < n; ++r)
    for (var i = t[r], a = i.length, l = o[r] = [], c, u = 0; u < a; ++u)
      (c = i[u]) && e.call(c, c.__data__, u, i) && l.push(c);
  return new ho(o, this._parents);
}
function zT(e) {
  return new Array(e.length);
}
function n4() {
  return new ho(this._enter || this._groups.map(zT), this._parents);
}
function $u(e, t) {
  this.ownerDocument = e.ownerDocument, this.namespaceURI = e.namespaceURI, this._next = null, this._parent = e, this.__data__ = t;
}
$u.prototype = {
  constructor: $u,
  appendChild: function(e) {
    return this._parent.insertBefore(e, this._next);
  },
  insertBefore: function(e, t) {
    return this._parent.insertBefore(e, t);
  },
  querySelector: function(e) {
    return this._parent.querySelector(e);
  },
  querySelectorAll: function(e) {
    return this._parent.querySelectorAll(e);
  }
};
function o4(e) {
  return function() {
    return e;
  };
}
function r4(e, t, n, o, r, i) {
  for (var a = 0, l, c = t.length, u = i.length; a < u; ++a)
    (l = t[a]) ? (l.__data__ = i[a], o[a] = l) : n[a] = new $u(e, i[a]);
  for (; a < c; ++a)
    (l = t[a]) && (r[a] = l);
}
function i4(e, t, n, o, r, i, a) {
  var l, c, u = /* @__PURE__ */ new Map(), f = t.length, d = i.length, p = new Array(f), h;
  for (l = 0; l < f; ++l)
    (c = t[l]) && (p[l] = h = a.call(c, c.__data__, l, t) + "", u.has(h) ? r[l] = c : u.set(h, c));
  for (l = 0; l < d; ++l)
    h = a.call(e, i[l], l, i) + "", (c = u.get(h)) ? (o[l] = c, c.__data__ = i[l], u.delete(h)) : n[l] = new $u(e, i[l]);
  for (l = 0; l < f; ++l)
    (c = t[l]) && u.get(p[l]) === c && (r[l] = c);
}
function s4(e) {
  return e.__data__;
}
function a4(e, t) {
  if (!arguments.length) return Array.from(this, s4);
  var n = t ? i4 : r4, o = this._parents, r = this._groups;
  typeof e != "function" && (e = o4(e));
  for (var i = r.length, a = new Array(i), l = new Array(i), c = new Array(i), u = 0; u < i; ++u) {
    var f = o[u], d = r[u], p = d.length, h = l4(e.call(f, f && f.__data__, u, o)), g = h.length, m = l[u] = new Array(g), y = a[u] = new Array(g), x = c[u] = new Array(p);
    n(f, d, m, y, x, h, t);
    for (var T = 0, b = 0, w, S; T < g; ++T)
      if (w = m[T]) {
        for (T >= b && (b = T + 1); !(S = y[b]) && ++b < g; ) ;
        w._next = S || null;
      }
  }
  return a = new ho(a, o), a._enter = l, a._exit = c, a;
}
function l4(e) {
  return typeof e == "object" && "length" in e ? e : Array.from(e);
}
function c4() {
  return new ho(this._exit || this._groups.map(zT), this._parents);
}
function u4(e, t, n) {
  var o = this.enter(), r = this, i = this.exit();
  return typeof e == "function" ? (o = e(o), o && (o = o.selection())) : o = o.append(e + ""), t != null && (r = t(r), r && (r = r.selection())), n == null ? i.remove() : n(i), o && r ? o.merge(r).order() : r;
}
function d4(e) {
  for (var t = e.selection ? e.selection() : e, n = this._groups, o = t._groups, r = n.length, i = o.length, a = Math.min(r, i), l = new Array(r), c = 0; c < a; ++c)
    for (var u = n[c], f = o[c], d = u.length, p = l[c] = new Array(d), h, g = 0; g < d; ++g)
      (h = u[g] || f[g]) && (p[g] = h);
  for (; c < r; ++c)
    l[c] = n[c];
  return new ho(l, this._parents);
}
function f4() {
  for (var e = this._groups, t = -1, n = e.length; ++t < n; )
    for (var o = e[t], r = o.length - 1, i = o[r], a; --r >= 0; )
      (a = o[r]) && (i && a.compareDocumentPosition(i) ^ 4 && i.parentNode.insertBefore(a, i), i = a);
  return this;
}
function p4(e) {
  e || (e = h4);
  function t(d, p) {
    return d && p ? e(d.__data__, p.__data__) : !d - !p;
  }
  for (var n = this._groups, o = n.length, r = new Array(o), i = 0; i < o; ++i) {
    for (var a = n[i], l = a.length, c = r[i] = new Array(l), u, f = 0; f < l; ++f)
      (u = a[f]) && (c[f] = u);
    c.sort(t);
  }
  return new ho(r, this._parents).order();
}
function h4(e, t) {
  return e < t ? -1 : e > t ? 1 : e >= t ? 0 : NaN;
}
function m4() {
  var e = arguments[0];
  return arguments[0] = this, e.apply(null, arguments), this;
}
function g4() {
  return Array.from(this);
}
function y4() {
  for (var e = this._groups, t = 0, n = e.length; t < n; ++t)
    for (var o = e[t], r = 0, i = o.length; r < i; ++r) {
      var a = o[r];
      if (a) return a;
    }
  return null;
}
function b4() {
  let e = 0;
  for (const t of this) ++e;
  return e;
}
function v4() {
  return !this.node();
}
function x4(e) {
  for (var t = this._groups, n = 0, o = t.length; n < o; ++n)
    for (var r = t[n], i = 0, a = r.length, l; i < a; ++i)
      (l = r[i]) && e.call(l, l.__data__, i, r);
  return this;
}
function w4(e) {
  return function() {
    this.removeAttribute(e);
  };
}
function S4(e) {
  return function() {
    this.removeAttributeNS(e.space, e.local);
  };
}
function T4(e, t) {
  return function() {
    this.setAttribute(e, t);
  };
}
function E4(e, t) {
  return function() {
    this.setAttributeNS(e.space, e.local, t);
  };
}
function C4(e, t) {
  return function() {
    var n = t.apply(this, arguments);
    n == null ? this.removeAttribute(e) : this.setAttribute(e, n);
  };
}
function O4(e, t) {
  return function() {
    var n = t.apply(this, arguments);
    n == null ? this.removeAttributeNS(e.space, e.local) : this.setAttributeNS(e.space, e.local, n);
  };
}
function $4(e, t) {
  var n = Kd(e);
  if (arguments.length < 2) {
    var o = this.node();
    return n.local ? o.getAttributeNS(n.space, n.local) : o.getAttribute(n);
  }
  return this.each((t == null ? n.local ? S4 : w4 : typeof t == "function" ? n.local ? O4 : C4 : n.local ? E4 : T4)(n, t));
}
function jT(e) {
  return e.ownerDocument && e.ownerDocument.defaultView || e.document && e || e.defaultView;
}
function I4(e) {
  return function() {
    this.style.removeProperty(e);
  };
}
function R4(e, t, n) {
  return function() {
    this.style.setProperty(e, t, n);
  };
}
function k4(e, t, n) {
  return function() {
    var o = t.apply(this, arguments);
    o == null ? this.style.removeProperty(e) : this.style.setProperty(e, o, n);
  };
}
function P4(e, t, n) {
  return arguments.length > 1 ? this.each((t == null ? I4 : typeof t == "function" ? k4 : R4)(e, t, n ?? "")) : _s(this.node(), e);
}
function _s(e, t) {
  return e.style.getPropertyValue(t) || jT(e).getComputedStyle(e, null).getPropertyValue(t);
}
function N4(e) {
  return function() {
    delete this[e];
  };
}
function M4(e, t) {
  return function() {
    this[e] = t;
  };
}
function _4(e, t) {
  return function() {
    var n = t.apply(this, arguments);
    n == null ? delete this[e] : this[e] = n;
  };
}
function A4(e, t) {
  return arguments.length > 1 ? this.each((t == null ? N4 : typeof t == "function" ? _4 : M4)(e, t)) : this.node()[e];
}
function VT(e) {
  return e.trim().split(/^|\s+/);
}
function tg(e) {
  return e.classList || new HT(e);
}
function HT(e) {
  this._node = e, this._names = VT(e.getAttribute("class") || "");
}
HT.prototype = {
  add: function(e) {
    var t = this._names.indexOf(e);
    t < 0 && (this._names.push(e), this._node.setAttribute("class", this._names.join(" ")));
  },
  remove: function(e) {
    var t = this._names.indexOf(e);
    t >= 0 && (this._names.splice(t, 1), this._node.setAttribute("class", this._names.join(" ")));
  },
  contains: function(e) {
    return this._names.indexOf(e) >= 0;
  }
};
function WT(e, t) {
  for (var n = tg(e), o = -1, r = t.length; ++o < r; ) n.add(t[o]);
}
function UT(e, t) {
  for (var n = tg(e), o = -1, r = t.length; ++o < r; ) n.remove(t[o]);
}
function D4(e) {
  return function() {
    WT(this, e);
  };
}
function L4(e) {
  return function() {
    UT(this, e);
  };
}
function B4(e, t) {
  return function() {
    (t.apply(this, arguments) ? WT : UT)(this, e);
  };
}
function F4(e, t) {
  var n = VT(e + "");
  if (arguments.length < 2) {
    for (var o = tg(this.node()), r = -1, i = n.length; ++r < i; ) if (!o.contains(n[r])) return !1;
    return !0;
  }
  return this.each((typeof t == "function" ? B4 : t ? D4 : L4)(n, t));
}
function z4() {
  this.textContent = "";
}
function j4(e) {
  return function() {
    this.textContent = e;
  };
}
function V4(e) {
  return function() {
    var t = e.apply(this, arguments);
    this.textContent = t ?? "";
  };
}
function H4(e) {
  return arguments.length ? this.each(e == null ? z4 : (typeof e == "function" ? V4 : j4)(e)) : this.node().textContent;
}
function W4() {
  this.innerHTML = "";
}
function U4(e) {
  return function() {
    this.innerHTML = e;
  };
}
function q4(e) {
  return function() {
    var t = e.apply(this, arguments);
    this.innerHTML = t ?? "";
  };
}
function K4(e) {
  return arguments.length ? this.each(e == null ? W4 : (typeof e == "function" ? q4 : U4)(e)) : this.node().innerHTML;
}
function Y4() {
  this.nextSibling && this.parentNode.appendChild(this);
}
function G4() {
  return this.each(Y4);
}
function X4() {
  this.previousSibling && this.parentNode.insertBefore(this, this.parentNode.firstChild);
}
function Z4() {
  return this.each(X4);
}
function Q4(e) {
  var t = typeof e == "function" ? e : DT(e);
  return this.select(function() {
    return this.appendChild(t.apply(this, arguments));
  });
}
function J4() {
  return null;
}
function eH(e, t) {
  var n = typeof e == "function" ? e : DT(e), o = t == null ? J4 : typeof t == "function" ? t : eg(t);
  return this.select(function() {
    return this.insertBefore(n.apply(this, arguments), o.apply(this, arguments) || null);
  });
}
function tH() {
  var e = this.parentNode;
  e && e.removeChild(this);
}
function nH() {
  return this.each(tH);
}
function oH() {
  var e = this.cloneNode(!1), t = this.parentNode;
  return t ? t.insertBefore(e, this.nextSibling) : e;
}
function rH() {
  var e = this.cloneNode(!0), t = this.parentNode;
  return t ? t.insertBefore(e, this.nextSibling) : e;
}
function iH(e) {
  return this.select(e ? rH : oH);
}
function sH(e) {
  return arguments.length ? this.property("__data__", e) : this.node().__data__;
}
function aH(e) {
  return function(t) {
    e.call(this, t, this.__data__);
  };
}
function lH(e) {
  return e.trim().split(/^|\s+/).map(function(t) {
    var n = "", o = t.indexOf(".");
    return o >= 0 && (n = t.slice(o + 1), t = t.slice(0, o)), { type: t, name: n };
  });
}
function cH(e) {
  return function() {
    var t = this.__on;
    if (t) {
      for (var n = 0, o = -1, r = t.length, i; n < r; ++n)
        i = t[n], (!e.type || i.type === e.type) && i.name === e.name ? this.removeEventListener(i.type, i.listener, i.options) : t[++o] = i;
      ++o ? t.length = o : delete this.__on;
    }
  };
}
function uH(e, t, n) {
  return function() {
    var o = this.__on, r, i = aH(t);
    if (o) {
      for (var a = 0, l = o.length; a < l; ++a)
        if ((r = o[a]).type === e.type && r.name === e.name) {
          this.removeEventListener(r.type, r.listener, r.options), this.addEventListener(r.type, r.listener = i, r.options = n), r.value = t;
          return;
        }
    }
    this.addEventListener(e.type, i, n), r = { type: e.type, name: e.name, value: t, listener: i, options: n }, o ? o.push(r) : this.__on = [r];
  };
}
function dH(e, t, n) {
  var o = lH(e + ""), r, i = o.length, a;
  if (arguments.length < 2) {
    var l = this.node().__on;
    if (l) {
      for (var c = 0, u = l.length, f; c < u; ++c)
        for (r = 0, f = l[c]; r < i; ++r)
          if ((a = o[r]).type === f.type && a.name === f.name)
            return f.value;
    }
    return;
  }
  for (l = t ? uH : cH, r = 0; r < i; ++r) this.each(l(o[r], t, n));
  return this;
}
function qT(e, t, n) {
  var o = jT(e), r = o.CustomEvent;
  typeof r == "function" ? r = new r(t, n) : (r = o.document.createEvent("Event"), n ? (r.initEvent(t, n.bubbles, n.cancelable), r.detail = n.detail) : r.initEvent(t, !1, !1)), e.dispatchEvent(r);
}
function fH(e, t) {
  return function() {
    return qT(this, e, t);
  };
}
function pH(e, t) {
  return function() {
    return qT(this, e, t.apply(this, arguments));
  };
}
function hH(e, t) {
  return this.each((typeof t == "function" ? pH : fH)(e, t));
}
function* mH() {
  for (var e = this._groups, t = 0, n = e.length; t < n; ++t)
    for (var o = e[t], r = 0, i = o.length, a; r < i; ++r)
      (a = o[r]) && (yield a);
}
var KT = [null];
function ho(e, t) {
  this._groups = e, this._parents = t;
}
function jl() {
  return new ho([[document.documentElement]], KT);
}
function gH() {
  return this;
}
ho.prototype = jl.prototype = {
  constructor: ho,
  select: VV,
  selectAll: qV,
  selectChild: XV,
  selectChildren: e4,
  filter: t4,
  data: a4,
  enter: n4,
  exit: c4,
  join: u4,
  merge: d4,
  selection: gH,
  order: f4,
  sort: p4,
  call: m4,
  nodes: g4,
  node: y4,
  size: b4,
  empty: v4,
  each: x4,
  attr: $4,
  style: P4,
  property: A4,
  classed: F4,
  text: H4,
  html: K4,
  raise: G4,
  lower: Z4,
  append: Q4,
  insert: eH,
  remove: nH,
  clone: iH,
  datum: sH,
  on: dH,
  dispatch: hH,
  [Symbol.iterator]: mH
};
function ao(e) {
  return typeof e == "string" ? new ho([[document.querySelector(e)]], [document.documentElement]) : new ho([[e]], KT);
}
function yH(e) {
  let t;
  for (; t = e.sourceEvent; ) e = t;
  return e;
}
function Ao(e, t) {
  if (e = yH(e), t === void 0 && (t = e.currentTarget), t) {
    var n = t.ownerSVGElement || t;
    if (n.createSVGPoint) {
      var o = n.createSVGPoint();
      return o.x = e.clientX, o.y = e.clientY, o = o.matrixTransform(t.getScreenCTM().inverse()), [o.x, o.y];
    }
    if (t.getBoundingClientRect) {
      var r = t.getBoundingClientRect();
      return [e.clientX - r.left - t.clientLeft, e.clientY - r.top - t.clientTop];
    }
  }
  return [e.pageX, e.pageY];
}
const bH = { passive: !1 }, sl = { capture: !0, passive: !1 };
function np(e) {
  e.stopImmediatePropagation();
}
function vs(e) {
  e.preventDefault(), e.stopImmediatePropagation();
}
function YT(e) {
  var t = e.document.documentElement, n = ao(e).on("dragstart.drag", vs, sl);
  "onselectstart" in t ? n.on("selectstart.drag", vs, sl) : (t.__noselect = t.style.MozUserSelect, t.style.MozUserSelect = "none");
}
function GT(e, t) {
  var n = e.document.documentElement, o = ao(e).on("dragstart.drag", null);
  t && (o.on("click.drag", vs, sl), setTimeout(function() {
    o.on("click.drag", null);
  }, 0)), "onselectstart" in n ? o.on("selectstart.drag", null) : (n.style.MozUserSelect = n.__noselect, delete n.__noselect);
}
const vc = (e) => () => e;
function fh(e, {
  sourceEvent: t,
  subject: n,
  target: o,
  identifier: r,
  active: i,
  x: a,
  y: l,
  dx: c,
  dy: u,
  dispatch: f
}) {
  Object.defineProperties(this, {
    type: { value: e, enumerable: !0, configurable: !0 },
    sourceEvent: { value: t, enumerable: !0, configurable: !0 },
    subject: { value: n, enumerable: !0, configurable: !0 },
    target: { value: o, enumerable: !0, configurable: !0 },
    identifier: { value: r, enumerable: !0, configurable: !0 },
    active: { value: i, enumerable: !0, configurable: !0 },
    x: { value: a, enumerable: !0, configurable: !0 },
    y: { value: l, enumerable: !0, configurable: !0 },
    dx: { value: c, enumerable: !0, configurable: !0 },
    dy: { value: u, enumerable: !0, configurable: !0 },
    _: { value: f }
  });
}
fh.prototype.on = function() {
  var e = this._.on.apply(this._, arguments);
  return e === this._ ? this : e;
};
function vH(e) {
  return !e.ctrlKey && !e.button;
}
function xH() {
  return this.parentNode;
}
function wH(e, t) {
  return t ?? { x: e.x, y: e.y };
}
function SH() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}
function XT() {
  var e = vH, t = xH, n = wH, o = SH, r = {}, i = qd("start", "drag", "end"), a = 0, l, c, u, f, d = 0;
  function p(w) {
    w.on("mousedown.drag", h).filter(o).on("touchstart.drag", y).on("touchmove.drag", x, bH).on("touchend.drag touchcancel.drag", T).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }
  function h(w, S) {
    if (!(f || !e.call(this, w, S))) {
      var E = b(this, t.call(this, w, S), w, S, "mouse");
      E && (ao(w.view).on("mousemove.drag", g, sl).on("mouseup.drag", m, sl), YT(w.view), np(w), u = !1, l = w.clientX, c = w.clientY, E("start", w));
    }
  }
  function g(w) {
    if (vs(w), !u) {
      var S = w.clientX - l, E = w.clientY - c;
      u = S * S + E * E > d;
    }
    r.mouse("drag", w);
  }
  function m(w) {
    ao(w.view).on("mousemove.drag mouseup.drag", null), GT(w.view, u), vs(w), r.mouse("end", w);
  }
  function y(w, S) {
    if (e.call(this, w, S)) {
      var E = w.changedTouches, C = t.call(this, w, S), R = E.length, M, v;
      for (M = 0; M < R; ++M)
        (v = b(this, C, w, S, E[M].identifier, E[M])) && (np(w), v("start", w, E[M]));
    }
  }
  function x(w) {
    var S = w.changedTouches, E = S.length, C, R;
    for (C = 0; C < E; ++C)
      (R = r[S[C].identifier]) && (vs(w), R("drag", w, S[C]));
  }
  function T(w) {
    var S = w.changedTouches, E = S.length, C, R;
    for (f && clearTimeout(f), f = setTimeout(function() {
      f = null;
    }, 500), C = 0; C < E; ++C)
      (R = r[S[C].identifier]) && (np(w), R("end", w, S[C]));
  }
  function b(w, S, E, C, R, M) {
    var v = i.copy(), I = Ao(M || E, S), k, A, O;
    if ((O = n.call(w, new fh("beforestart", {
      sourceEvent: E,
      target: p,
      identifier: R,
      active: a,
      x: I[0],
      y: I[1],
      dx: 0,
      dy: 0,
      dispatch: v
    }), C)) != null)
      return k = O.x - I[0] || 0, A = O.y - I[1] || 0, function _(N, L, F) {
        var D = I, B;
        switch (N) {
          case "start":
            r[R] = _, B = a++;
            break;
          case "end":
            delete r[R], --a;
          // falls through
          case "drag":
            I = Ao(F || L, S), B = a;
            break;
        }
        v.call(
          N,
          w,
          new fh(N, {
            sourceEvent: L,
            subject: O,
            target: p,
            identifier: R,
            active: B,
            x: I[0] + k,
            y: I[1] + A,
            dx: I[0] - D[0],
            dy: I[1] - D[1],
            dispatch: v
          }),
          C
        );
      };
  }
  return p.filter = function(w) {
    return arguments.length ? (e = typeof w == "function" ? w : vc(!!w), p) : e;
  }, p.container = function(w) {
    return arguments.length ? (t = typeof w == "function" ? w : vc(w), p) : t;
  }, p.subject = function(w) {
    return arguments.length ? (n = typeof w == "function" ? w : vc(w), p) : n;
  }, p.touchable = function(w) {
    return arguments.length ? (o = typeof w == "function" ? w : vc(!!w), p) : o;
  }, p.on = function() {
    var w = i.on.apply(i, arguments);
    return w === i ? p : w;
  }, p.clickDistance = function(w) {
    return arguments.length ? (d = (w = +w) * w, p) : Math.sqrt(d);
  }, p;
}
function ng(e, t, n) {
  e.prototype = t.prototype = n, n.constructor = e;
}
function ZT(e, t) {
  var n = Object.create(e.prototype);
  for (var o in t) n[o] = t[o];
  return n;
}
function Vl() {
}
var al = 0.7, Iu = 1 / al, xs = "\\s*([+-]?\\d+)\\s*", ll = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*", ar = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*", TH = /^#([0-9a-f]{3,8})$/, EH = new RegExp(`^rgb\\(${xs},${xs},${xs}\\)$`), CH = new RegExp(`^rgb\\(${ar},${ar},${ar}\\)$`), OH = new RegExp(`^rgba\\(${xs},${xs},${xs},${ll}\\)$`), $H = new RegExp(`^rgba\\(${ar},${ar},${ar},${ll}\\)$`), IH = new RegExp(`^hsl\\(${ll},${ar},${ar}\\)$`), RH = new RegExp(`^hsla\\(${ll},${ar},${ar},${ll}\\)$`), z0 = {
  aliceblue: 15792383,
  antiquewhite: 16444375,
  aqua: 65535,
  aquamarine: 8388564,
  azure: 15794175,
  beige: 16119260,
  bisque: 16770244,
  black: 0,
  blanchedalmond: 16772045,
  blue: 255,
  blueviolet: 9055202,
  brown: 10824234,
  burlywood: 14596231,
  cadetblue: 6266528,
  chartreuse: 8388352,
  chocolate: 13789470,
  coral: 16744272,
  cornflowerblue: 6591981,
  cornsilk: 16775388,
  crimson: 14423100,
  cyan: 65535,
  darkblue: 139,
  darkcyan: 35723,
  darkgoldenrod: 12092939,
  darkgray: 11119017,
  darkgreen: 25600,
  darkgrey: 11119017,
  darkkhaki: 12433259,
  darkmagenta: 9109643,
  darkolivegreen: 5597999,
  darkorange: 16747520,
  darkorchid: 10040012,
  darkred: 9109504,
  darksalmon: 15308410,
  darkseagreen: 9419919,
  darkslateblue: 4734347,
  darkslategray: 3100495,
  darkslategrey: 3100495,
  darkturquoise: 52945,
  darkviolet: 9699539,
  deeppink: 16716947,
  deepskyblue: 49151,
  dimgray: 6908265,
  dimgrey: 6908265,
  dodgerblue: 2003199,
  firebrick: 11674146,
  floralwhite: 16775920,
  forestgreen: 2263842,
  fuchsia: 16711935,
  gainsboro: 14474460,
  ghostwhite: 16316671,
  gold: 16766720,
  goldenrod: 14329120,
  gray: 8421504,
  green: 32768,
  greenyellow: 11403055,
  grey: 8421504,
  honeydew: 15794160,
  hotpink: 16738740,
  indianred: 13458524,
  indigo: 4915330,
  ivory: 16777200,
  khaki: 15787660,
  lavender: 15132410,
  lavenderblush: 16773365,
  lawngreen: 8190976,
  lemonchiffon: 16775885,
  lightblue: 11393254,
  lightcoral: 15761536,
  lightcyan: 14745599,
  lightgoldenrodyellow: 16448210,
  lightgray: 13882323,
  lightgreen: 9498256,
  lightgrey: 13882323,
  lightpink: 16758465,
  lightsalmon: 16752762,
  lightseagreen: 2142890,
  lightskyblue: 8900346,
  lightslategray: 7833753,
  lightslategrey: 7833753,
  lightsteelblue: 11584734,
  lightyellow: 16777184,
  lime: 65280,
  limegreen: 3329330,
  linen: 16445670,
  magenta: 16711935,
  maroon: 8388608,
  mediumaquamarine: 6737322,
  mediumblue: 205,
  mediumorchid: 12211667,
  mediumpurple: 9662683,
  mediumseagreen: 3978097,
  mediumslateblue: 8087790,
  mediumspringgreen: 64154,
  mediumturquoise: 4772300,
  mediumvioletred: 13047173,
  midnightblue: 1644912,
  mintcream: 16121850,
  mistyrose: 16770273,
  moccasin: 16770229,
  navajowhite: 16768685,
  navy: 128,
  oldlace: 16643558,
  olive: 8421376,
  olivedrab: 7048739,
  orange: 16753920,
  orangered: 16729344,
  orchid: 14315734,
  palegoldenrod: 15657130,
  palegreen: 10025880,
  paleturquoise: 11529966,
  palevioletred: 14381203,
  papayawhip: 16773077,
  peachpuff: 16767673,
  peru: 13468991,
  pink: 16761035,
  plum: 14524637,
  powderblue: 11591910,
  purple: 8388736,
  rebeccapurple: 6697881,
  red: 16711680,
  rosybrown: 12357519,
  royalblue: 4286945,
  saddlebrown: 9127187,
  salmon: 16416882,
  sandybrown: 16032864,
  seagreen: 3050327,
  seashell: 16774638,
  sienna: 10506797,
  silver: 12632256,
  skyblue: 8900331,
  slateblue: 6970061,
  slategray: 7372944,
  slategrey: 7372944,
  snow: 16775930,
  springgreen: 65407,
  steelblue: 4620980,
  tan: 13808780,
  teal: 32896,
  thistle: 14204888,
  tomato: 16737095,
  turquoise: 4251856,
  violet: 15631086,
  wheat: 16113331,
  white: 16777215,
  whitesmoke: 16119285,
  yellow: 16776960,
  yellowgreen: 10145074
};
ng(Vl, cl, {
  copy(e) {
    return Object.assign(new this.constructor(), this, e);
  },
  displayable() {
    return this.rgb().displayable();
  },
  hex: j0,
  // Deprecated! Use color.formatHex.
  formatHex: j0,
  formatHex8: kH,
  formatHsl: PH,
  formatRgb: V0,
  toString: V0
});
function j0() {
  return this.rgb().formatHex();
}
function kH() {
  return this.rgb().formatHex8();
}
function PH() {
  return QT(this).formatHsl();
}
function V0() {
  return this.rgb().formatRgb();
}
function cl(e) {
  var t, n;
  return e = (e + "").trim().toLowerCase(), (t = TH.exec(e)) ? (n = t[1].length, t = parseInt(t[1], 16), n === 6 ? H0(t) : n === 3 ? new Kn(t >> 8 & 15 | t >> 4 & 240, t >> 4 & 15 | t & 240, (t & 15) << 4 | t & 15, 1) : n === 8 ? xc(t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, (t & 255) / 255) : n === 4 ? xc(t >> 12 & 15 | t >> 8 & 240, t >> 8 & 15 | t >> 4 & 240, t >> 4 & 15 | t & 240, ((t & 15) << 4 | t & 15) / 255) : null) : (t = EH.exec(e)) ? new Kn(t[1], t[2], t[3], 1) : (t = CH.exec(e)) ? new Kn(t[1] * 255 / 100, t[2] * 255 / 100, t[3] * 255 / 100, 1) : (t = OH.exec(e)) ? xc(t[1], t[2], t[3], t[4]) : (t = $H.exec(e)) ? xc(t[1] * 255 / 100, t[2] * 255 / 100, t[3] * 255 / 100, t[4]) : (t = IH.exec(e)) ? q0(t[1], t[2] / 100, t[3] / 100, 1) : (t = RH.exec(e)) ? q0(t[1], t[2] / 100, t[3] / 100, t[4]) : z0.hasOwnProperty(e) ? H0(z0[e]) : e === "transparent" ? new Kn(NaN, NaN, NaN, 0) : null;
}
function H0(e) {
  return new Kn(e >> 16 & 255, e >> 8 & 255, e & 255, 1);
}
function xc(e, t, n, o) {
  return o <= 0 && (e = t = n = NaN), new Kn(e, t, n, o);
}
function NH(e) {
  return e instanceof Vl || (e = cl(e)), e ? (e = e.rgb(), new Kn(e.r, e.g, e.b, e.opacity)) : new Kn();
}
function ph(e, t, n, o) {
  return arguments.length === 1 ? NH(e) : new Kn(e, t, n, o ?? 1);
}
function Kn(e, t, n, o) {
  this.r = +e, this.g = +t, this.b = +n, this.opacity = +o;
}
ng(Kn, ph, ZT(Vl, {
  brighter(e) {
    return e = e == null ? Iu : Math.pow(Iu, e), new Kn(this.r * e, this.g * e, this.b * e, this.opacity);
  },
  darker(e) {
    return e = e == null ? al : Math.pow(al, e), new Kn(this.r * e, this.g * e, this.b * e, this.opacity);
  },
  rgb() {
    return this;
  },
  clamp() {
    return new Kn(Ri(this.r), Ri(this.g), Ri(this.b), Ru(this.opacity));
  },
  displayable() {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: W0,
  // Deprecated! Use color.formatHex.
  formatHex: W0,
  formatHex8: MH,
  formatRgb: U0,
  toString: U0
}));
function W0() {
  return `#${Ci(this.r)}${Ci(this.g)}${Ci(this.b)}`;
}
function MH() {
  return `#${Ci(this.r)}${Ci(this.g)}${Ci(this.b)}${Ci((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
}
function U0() {
  const e = Ru(this.opacity);
  return `${e === 1 ? "rgb(" : "rgba("}${Ri(this.r)}, ${Ri(this.g)}, ${Ri(this.b)}${e === 1 ? ")" : `, ${e})`}`;
}
function Ru(e) {
  return isNaN(e) ? 1 : Math.max(0, Math.min(1, e));
}
function Ri(e) {
  return Math.max(0, Math.min(255, Math.round(e) || 0));
}
function Ci(e) {
  return e = Ri(e), (e < 16 ? "0" : "") + e.toString(16);
}
function q0(e, t, n, o) {
  return o <= 0 ? e = t = n = NaN : n <= 0 || n >= 1 ? e = t = NaN : t <= 0 && (e = NaN), new Lo(e, t, n, o);
}
function QT(e) {
  if (e instanceof Lo) return new Lo(e.h, e.s, e.l, e.opacity);
  if (e instanceof Vl || (e = cl(e)), !e) return new Lo();
  if (e instanceof Lo) return e;
  e = e.rgb();
  var t = e.r / 255, n = e.g / 255, o = e.b / 255, r = Math.min(t, n, o), i = Math.max(t, n, o), a = NaN, l = i - r, c = (i + r) / 2;
  return l ? (t === i ? a = (n - o) / l + (n < o) * 6 : n === i ? a = (o - t) / l + 2 : a = (t - n) / l + 4, l /= c < 0.5 ? i + r : 2 - i - r, a *= 60) : l = c > 0 && c < 1 ? 0 : a, new Lo(a, l, c, e.opacity);
}
function _H(e, t, n, o) {
  return arguments.length === 1 ? QT(e) : new Lo(e, t, n, o ?? 1);
}
function Lo(e, t, n, o) {
  this.h = +e, this.s = +t, this.l = +n, this.opacity = +o;
}
ng(Lo, _H, ZT(Vl, {
  brighter(e) {
    return e = e == null ? Iu : Math.pow(Iu, e), new Lo(this.h, this.s, this.l * e, this.opacity);
  },
  darker(e) {
    return e = e == null ? al : Math.pow(al, e), new Lo(this.h, this.s, this.l * e, this.opacity);
  },
  rgb() {
    var e = this.h % 360 + (this.h < 0) * 360, t = isNaN(e) || isNaN(this.s) ? 0 : this.s, n = this.l, o = n + (n < 0.5 ? n : 1 - n) * t, r = 2 * n - o;
    return new Kn(
      op(e >= 240 ? e - 240 : e + 120, r, o),
      op(e, r, o),
      op(e < 120 ? e + 240 : e - 120, r, o),
      this.opacity
    );
  },
  clamp() {
    return new Lo(K0(this.h), wc(this.s), wc(this.l), Ru(this.opacity));
  },
  displayable() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  },
  formatHsl() {
    const e = Ru(this.opacity);
    return `${e === 1 ? "hsl(" : "hsla("}${K0(this.h)}, ${wc(this.s) * 100}%, ${wc(this.l) * 100}%${e === 1 ? ")" : `, ${e})`}`;
  }
}));
function K0(e) {
  return e = (e || 0) % 360, e < 0 ? e + 360 : e;
}
function wc(e) {
  return Math.max(0, Math.min(1, e || 0));
}
function op(e, t, n) {
  return (e < 60 ? t + (n - t) * e / 60 : e < 180 ? n : e < 240 ? t + (n - t) * (240 - e) / 60 : t) * 255;
}
const JT = (e) => () => e;
function AH(e, t) {
  return function(n) {
    return e + n * t;
  };
}
function DH(e, t, n) {
  return e = Math.pow(e, n), t = Math.pow(t, n) - e, n = 1 / n, function(o) {
    return Math.pow(e + o * t, n);
  };
}
function LH(e) {
  return (e = +e) == 1 ? eE : function(t, n) {
    return n - t ? DH(t, n, e) : JT(isNaN(t) ? n : t);
  };
}
function eE(e, t) {
  var n = t - e;
  return n ? AH(e, n) : JT(isNaN(e) ? t : e);
}
const Y0 = function e(t) {
  var n = LH(t);
  function o(r, i) {
    var a = n((r = ph(r)).r, (i = ph(i)).r), l = n(r.g, i.g), c = n(r.b, i.b), u = eE(r.opacity, i.opacity);
    return function(f) {
      return r.r = a(f), r.g = l(f), r.b = c(f), r.opacity = u(f), r + "";
    };
  }
  return o.gamma = e, o;
}(1);
function jr(e, t) {
  return e = +e, t = +t, function(n) {
    return e * (1 - n) + t * n;
  };
}
var hh = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, rp = new RegExp(hh.source, "g");
function BH(e) {
  return function() {
    return e;
  };
}
function FH(e) {
  return function(t) {
    return e(t) + "";
  };
}
function zH(e, t) {
  var n = hh.lastIndex = rp.lastIndex = 0, o, r, i, a = -1, l = [], c = [];
  for (e = e + "", t = t + ""; (o = hh.exec(e)) && (r = rp.exec(t)); )
    (i = r.index) > n && (i = t.slice(n, i), l[a] ? l[a] += i : l[++a] = i), (o = o[0]) === (r = r[0]) ? l[a] ? l[a] += r : l[++a] = r : (l[++a] = null, c.push({ i: a, x: jr(o, r) })), n = rp.lastIndex;
  return n < t.length && (i = t.slice(n), l[a] ? l[a] += i : l[++a] = i), l.length < 2 ? c[0] ? FH(c[0].x) : BH(t) : (t = c.length, function(u) {
    for (var f = 0, d; f < t; ++f) l[(d = c[f]).i] = d.x(u);
    return l.join("");
  });
}
var G0 = 180 / Math.PI, mh = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
function tE(e, t, n, o, r, i) {
  var a, l, c;
  return (a = Math.sqrt(e * e + t * t)) && (e /= a, t /= a), (c = e * n + t * o) && (n -= e * c, o -= t * c), (l = Math.sqrt(n * n + o * o)) && (n /= l, o /= l, c /= l), e * o < t * n && (e = -e, t = -t, c = -c, a = -a), {
    translateX: r,
    translateY: i,
    rotate: Math.atan2(t, e) * G0,
    skewX: Math.atan(c) * G0,
    scaleX: a,
    scaleY: l
  };
}
var Sc;
function jH(e) {
  const t = new (typeof DOMMatrix == "function" ? DOMMatrix : WebKitCSSMatrix)(e + "");
  return t.isIdentity ? mh : tE(t.a, t.b, t.c, t.d, t.e, t.f);
}
function VH(e) {
  return e == null || (Sc || (Sc = document.createElementNS("http://www.w3.org/2000/svg", "g")), Sc.setAttribute("transform", e), !(e = Sc.transform.baseVal.consolidate())) ? mh : (e = e.matrix, tE(e.a, e.b, e.c, e.d, e.e, e.f));
}
function nE(e, t, n, o) {
  function r(u) {
    return u.length ? u.pop() + " " : "";
  }
  function i(u, f, d, p, h, g) {
    if (u !== d || f !== p) {
      var m = h.push("translate(", null, t, null, n);
      g.push({ i: m - 4, x: jr(u, d) }, { i: m - 2, x: jr(f, p) });
    } else (d || p) && h.push("translate(" + d + t + p + n);
  }
  function a(u, f, d, p) {
    u !== f ? (u - f > 180 ? f += 360 : f - u > 180 && (u += 360), p.push({ i: d.push(r(d) + "rotate(", null, o) - 2, x: jr(u, f) })) : f && d.push(r(d) + "rotate(" + f + o);
  }
  function l(u, f, d, p) {
    u !== f ? p.push({ i: d.push(r(d) + "skewX(", null, o) - 2, x: jr(u, f) }) : f && d.push(r(d) + "skewX(" + f + o);
  }
  function c(u, f, d, p, h, g) {
    if (u !== d || f !== p) {
      var m = h.push(r(h) + "scale(", null, ",", null, ")");
      g.push({ i: m - 4, x: jr(u, d) }, { i: m - 2, x: jr(f, p) });
    } else (d !== 1 || p !== 1) && h.push(r(h) + "scale(" + d + "," + p + ")");
  }
  return function(u, f) {
    var d = [], p = [];
    return u = e(u), f = e(f), i(u.translateX, u.translateY, f.translateX, f.translateY, d, p), a(u.rotate, f.rotate, d, p), l(u.skewX, f.skewX, d, p), c(u.scaleX, u.scaleY, f.scaleX, f.scaleY, d, p), u = f = null, function(h) {
      for (var g = -1, m = p.length, y; ++g < m; ) d[(y = p[g]).i] = y.x(h);
      return d.join("");
    };
  };
}
var HH = nE(jH, "px, ", "px)", "deg)"), WH = nE(VH, ", ", ")", ")"), UH = 1e-12;
function X0(e) {
  return ((e = Math.exp(e)) + 1 / e) / 2;
}
function qH(e) {
  return ((e = Math.exp(e)) - 1 / e) / 2;
}
function KH(e) {
  return ((e = Math.exp(2 * e)) - 1) / (e + 1);
}
const YH = function e(t, n, o) {
  function r(i, a) {
    var l = i[0], c = i[1], u = i[2], f = a[0], d = a[1], p = a[2], h = f - l, g = d - c, m = h * h + g * g, y, x;
    if (m < UH)
      x = Math.log(p / u) / t, y = function(C) {
        return [
          l + C * h,
          c + C * g,
          u * Math.exp(t * C * x)
        ];
      };
    else {
      var T = Math.sqrt(m), b = (p * p - u * u + o * m) / (2 * u * n * T), w = (p * p - u * u - o * m) / (2 * p * n * T), S = Math.log(Math.sqrt(b * b + 1) - b), E = Math.log(Math.sqrt(w * w + 1) - w);
      x = (E - S) / t, y = function(C) {
        var R = C * x, M = X0(S), v = u / (n * T) * (M * KH(t * R + S) - qH(S));
        return [
          l + v * h,
          c + v * g,
          u * M / X0(t * R + S)
        ];
      };
    }
    return y.duration = x * 1e3 * t / Math.SQRT2, y;
  }
  return r.rho = function(i) {
    var a = Math.max(1e-3, +i), l = a * a, c = l * l;
    return e(a, l, c);
  }, r;
}(Math.SQRT2, 2, 4);
var As = 0, Ca = 0, ga = 0, oE = 1e3, ku, Oa, Pu = 0, Di = 0, Yd = 0, ul = typeof performance == "object" && performance.now ? performance : Date, rE = typeof window == "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(e) {
  setTimeout(e, 17);
};
function og() {
  return Di || (rE(GH), Di = ul.now() + Yd);
}
function GH() {
  Di = 0;
}
function Nu() {
  this._call = this._time = this._next = null;
}
Nu.prototype = iE.prototype = {
  constructor: Nu,
  restart: function(e, t, n) {
    if (typeof e != "function") throw new TypeError("callback is not a function");
    n = (n == null ? og() : +n) + (t == null ? 0 : +t), !this._next && Oa !== this && (Oa ? Oa._next = this : ku = this, Oa = this), this._call = e, this._time = n, gh();
  },
  stop: function() {
    this._call && (this._call = null, this._time = 1 / 0, gh());
  }
};
function iE(e, t, n) {
  var o = new Nu();
  return o.restart(e, t, n), o;
}
function XH() {
  og(), ++As;
  for (var e = ku, t; e; )
    (t = Di - e._time) >= 0 && e._call.call(void 0, t), e = e._next;
  --As;
}
function Z0() {
  Di = (Pu = ul.now()) + Yd, As = Ca = 0;
  try {
    XH();
  } finally {
    As = 0, QH(), Di = 0;
  }
}
function ZH() {
  var e = ul.now(), t = e - Pu;
  t > oE && (Yd -= t, Pu = e);
}
function QH() {
  for (var e, t = ku, n, o = 1 / 0; t; )
    t._call ? (o > t._time && (o = t._time), e = t, t = t._next) : (n = t._next, t._next = null, t = e ? e._next = n : ku = n);
  Oa = e, gh(o);
}
function gh(e) {
  if (!As) {
    Ca && (Ca = clearTimeout(Ca));
    var t = e - Di;
    t > 24 ? (e < 1 / 0 && (Ca = setTimeout(Z0, e - ul.now() - Yd)), ga && (ga = clearInterval(ga))) : (ga || (Pu = ul.now(), ga = setInterval(ZH, oE)), As = 1, rE(Z0));
  }
}
function Q0(e, t, n) {
  var o = new Nu();
  return t = t == null ? 0 : +t, o.restart((r) => {
    o.stop(), e(r + t);
  }, t, n), o;
}
var JH = qd("start", "end", "cancel", "interrupt"), e3 = [], sE = 0, J0 = 1, yh = 2, Uc = 3, ev = 4, bh = 5, qc = 6;
function Gd(e, t, n, o, r, i) {
  var a = e.__transition;
  if (!a) e.__transition = {};
  else if (n in a) return;
  t3(e, n, {
    name: t,
    index: o,
    // For context during callback.
    group: r,
    // For context during callback.
    on: JH,
    tween: e3,
    time: i.time,
    delay: i.delay,
    duration: i.duration,
    ease: i.ease,
    timer: null,
    state: sE
  });
}
function rg(e, t) {
  var n = Ko(e, t);
  if (n.state > sE) throw new Error("too late; already scheduled");
  return n;
}
function mr(e, t) {
  var n = Ko(e, t);
  if (n.state > Uc) throw new Error("too late; already running");
  return n;
}
function Ko(e, t) {
  var n = e.__transition;
  if (!n || !(n = n[t])) throw new Error("transition not found");
  return n;
}
function t3(e, t, n) {
  var o = e.__transition, r;
  o[t] = n, n.timer = iE(i, 0, n.time);
  function i(u) {
    n.state = J0, n.timer.restart(a, n.delay, n.time), n.delay <= u && a(u - n.delay);
  }
  function a(u) {
    var f, d, p, h;
    if (n.state !== J0) return c();
    for (f in o)
      if (h = o[f], h.name === n.name) {
        if (h.state === Uc) return Q0(a);
        h.state === ev ? (h.state = qc, h.timer.stop(), h.on.call("interrupt", e, e.__data__, h.index, h.group), delete o[f]) : +f < t && (h.state = qc, h.timer.stop(), h.on.call("cancel", e, e.__data__, h.index, h.group), delete o[f]);
      }
    if (Q0(function() {
      n.state === Uc && (n.state = ev, n.timer.restart(l, n.delay, n.time), l(u));
    }), n.state = yh, n.on.call("start", e, e.__data__, n.index, n.group), n.state === yh) {
      for (n.state = Uc, r = new Array(p = n.tween.length), f = 0, d = -1; f < p; ++f)
        (h = n.tween[f].value.call(e, e.__data__, n.index, n.group)) && (r[++d] = h);
      r.length = d + 1;
    }
  }
  function l(u) {
    for (var f = u < n.duration ? n.ease.call(null, u / n.duration) : (n.timer.restart(c), n.state = bh, 1), d = -1, p = r.length; ++d < p; )
      r[d].call(e, f);
    n.state === bh && (n.on.call("end", e, e.__data__, n.index, n.group), c());
  }
  function c() {
    n.state = qc, n.timer.stop(), delete o[t];
    for (var u in o) return;
    delete e.__transition;
  }
}
function Kc(e, t) {
  var n = e.__transition, o, r, i = !0, a;
  if (n) {
    t = t == null ? null : t + "";
    for (a in n) {
      if ((o = n[a]).name !== t) {
        i = !1;
        continue;
      }
      r = o.state > yh && o.state < bh, o.state = qc, o.timer.stop(), o.on.call(r ? "interrupt" : "cancel", e, e.__data__, o.index, o.group), delete n[a];
    }
    i && delete e.__transition;
  }
}
function n3(e) {
  return this.each(function() {
    Kc(this, e);
  });
}
function o3(e, t) {
  var n, o;
  return function() {
    var r = mr(this, e), i = r.tween;
    if (i !== n) {
      o = n = i;
      for (var a = 0, l = o.length; a < l; ++a)
        if (o[a].name === t) {
          o = o.slice(), o.splice(a, 1);
          break;
        }
    }
    r.tween = o;
  };
}
function r3(e, t, n) {
  var o, r;
  if (typeof n != "function") throw new Error();
  return function() {
    var i = mr(this, e), a = i.tween;
    if (a !== o) {
      r = (o = a).slice();
      for (var l = { name: t, value: n }, c = 0, u = r.length; c < u; ++c)
        if (r[c].name === t) {
          r[c] = l;
          break;
        }
      c === u && r.push(l);
    }
    i.tween = r;
  };
}
function i3(e, t) {
  var n = this._id;
  if (e += "", arguments.length < 2) {
    for (var o = Ko(this.node(), n).tween, r = 0, i = o.length, a; r < i; ++r)
      if ((a = o[r]).name === e)
        return a.value;
    return null;
  }
  return this.each((t == null ? o3 : r3)(n, e, t));
}
function ig(e, t, n) {
  var o = e._id;
  return e.each(function() {
    var r = mr(this, o);
    (r.value || (r.value = {}))[t] = n.apply(this, arguments);
  }), function(r) {
    return Ko(r, o).value[t];
  };
}
function aE(e, t) {
  var n;
  return (typeof t == "number" ? jr : t instanceof cl ? Y0 : (n = cl(t)) ? (t = n, Y0) : zH)(e, t);
}
function s3(e) {
  return function() {
    this.removeAttribute(e);
  };
}
function a3(e) {
  return function() {
    this.removeAttributeNS(e.space, e.local);
  };
}
function l3(e, t, n) {
  var o, r = n + "", i;
  return function() {
    var a = this.getAttribute(e);
    return a === r ? null : a === o ? i : i = t(o = a, n);
  };
}
function c3(e, t, n) {
  var o, r = n + "", i;
  return function() {
    var a = this.getAttributeNS(e.space, e.local);
    return a === r ? null : a === o ? i : i = t(o = a, n);
  };
}
function u3(e, t, n) {
  var o, r, i;
  return function() {
    var a, l = n(this), c;
    return l == null ? void this.removeAttribute(e) : (a = this.getAttribute(e), c = l + "", a === c ? null : a === o && c === r ? i : (r = c, i = t(o = a, l)));
  };
}
function d3(e, t, n) {
  var o, r, i;
  return function() {
    var a, l = n(this), c;
    return l == null ? void this.removeAttributeNS(e.space, e.local) : (a = this.getAttributeNS(e.space, e.local), c = l + "", a === c ? null : a === o && c === r ? i : (r = c, i = t(o = a, l)));
  };
}
function f3(e, t) {
  var n = Kd(e), o = n === "transform" ? WH : aE;
  return this.attrTween(e, typeof t == "function" ? (n.local ? d3 : u3)(n, o, ig(this, "attr." + e, t)) : t == null ? (n.local ? a3 : s3)(n) : (n.local ? c3 : l3)(n, o, t));
}
function p3(e, t) {
  return function(n) {
    this.setAttribute(e, t.call(this, n));
  };
}
function h3(e, t) {
  return function(n) {
    this.setAttributeNS(e.space, e.local, t.call(this, n));
  };
}
function m3(e, t) {
  var n, o;
  function r() {
    var i = t.apply(this, arguments);
    return i !== o && (n = (o = i) && h3(e, i)), n;
  }
  return r._value = t, r;
}
function g3(e, t) {
  var n, o;
  function r() {
    var i = t.apply(this, arguments);
    return i !== o && (n = (o = i) && p3(e, i)), n;
  }
  return r._value = t, r;
}
function y3(e, t) {
  var n = "attr." + e;
  if (arguments.length < 2) return (n = this.tween(n)) && n._value;
  if (t == null) return this.tween(n, null);
  if (typeof t != "function") throw new Error();
  var o = Kd(e);
  return this.tween(n, (o.local ? m3 : g3)(o, t));
}
function b3(e, t) {
  return function() {
    rg(this, e).delay = +t.apply(this, arguments);
  };
}
function v3(e, t) {
  return t = +t, function() {
    rg(this, e).delay = t;
  };
}
function x3(e) {
  var t = this._id;
  return arguments.length ? this.each((typeof e == "function" ? b3 : v3)(t, e)) : Ko(this.node(), t).delay;
}
function w3(e, t) {
  return function() {
    mr(this, e).duration = +t.apply(this, arguments);
  };
}
function S3(e, t) {
  return t = +t, function() {
    mr(this, e).duration = t;
  };
}
function T3(e) {
  var t = this._id;
  return arguments.length ? this.each((typeof e == "function" ? w3 : S3)(t, e)) : Ko(this.node(), t).duration;
}
function E3(e, t) {
  if (typeof t != "function") throw new Error();
  return function() {
    mr(this, e).ease = t;
  };
}
function C3(e) {
  var t = this._id;
  return arguments.length ? this.each(E3(t, e)) : Ko(this.node(), t).ease;
}
function O3(e, t) {
  return function() {
    var n = t.apply(this, arguments);
    if (typeof n != "function") throw new Error();
    mr(this, e).ease = n;
  };
}
function $3(e) {
  if (typeof e != "function") throw new Error();
  return this.each(O3(this._id, e));
}
function I3(e) {
  typeof e != "function" && (e = BT(e));
  for (var t = this._groups, n = t.length, o = new Array(n), r = 0; r < n; ++r)
    for (var i = t[r], a = i.length, l = o[r] = [], c, u = 0; u < a; ++u)
      (c = i[u]) && e.call(c, c.__data__, u, i) && l.push(c);
  return new kr(o, this._parents, this._name, this._id);
}
function R3(e) {
  if (e._id !== this._id) throw new Error();
  for (var t = this._groups, n = e._groups, o = t.length, r = n.length, i = Math.min(o, r), a = new Array(o), l = 0; l < i; ++l)
    for (var c = t[l], u = n[l], f = c.length, d = a[l] = new Array(f), p, h = 0; h < f; ++h)
      (p = c[h] || u[h]) && (d[h] = p);
  for (; l < o; ++l)
    a[l] = t[l];
  return new kr(a, this._parents, this._name, this._id);
}
function k3(e) {
  return (e + "").trim().split(/^|\s+/).every(function(t) {
    var n = t.indexOf(".");
    return n >= 0 && (t = t.slice(0, n)), !t || t === "start";
  });
}
function P3(e, t, n) {
  var o, r, i = k3(t) ? rg : mr;
  return function() {
    var a = i(this, e), l = a.on;
    l !== o && (r = (o = l).copy()).on(t, n), a.on = r;
  };
}
function N3(e, t) {
  var n = this._id;
  return arguments.length < 2 ? Ko(this.node(), n).on.on(e) : this.each(P3(n, e, t));
}
function M3(e) {
  return function() {
    var t = this.parentNode;
    for (var n in this.__transition) if (+n !== e) return;
    t && t.removeChild(this);
  };
}
function _3() {
  return this.on("end.remove", M3(this._id));
}
function A3(e) {
  var t = this._name, n = this._id;
  typeof e != "function" && (e = eg(e));
  for (var o = this._groups, r = o.length, i = new Array(r), a = 0; a < r; ++a)
    for (var l = o[a], c = l.length, u = i[a] = new Array(c), f, d, p = 0; p < c; ++p)
      (f = l[p]) && (d = e.call(f, f.__data__, p, l)) && ("__data__" in f && (d.__data__ = f.__data__), u[p] = d, Gd(u[p], t, n, p, u, Ko(f, n)));
  return new kr(i, this._parents, t, n);
}
function D3(e) {
  var t = this._name, n = this._id;
  typeof e != "function" && (e = LT(e));
  for (var o = this._groups, r = o.length, i = [], a = [], l = 0; l < r; ++l)
    for (var c = o[l], u = c.length, f, d = 0; d < u; ++d)
      if (f = c[d]) {
        for (var p = e.call(f, f.__data__, d, c), h, g = Ko(f, n), m = 0, y = p.length; m < y; ++m)
          (h = p[m]) && Gd(h, t, n, m, p, g);
        i.push(p), a.push(f);
      }
  return new kr(i, a, t, n);
}
var L3 = jl.prototype.constructor;
function B3() {
  return new L3(this._groups, this._parents);
}
function F3(e, t) {
  var n, o, r;
  return function() {
    var i = _s(this, e), a = (this.style.removeProperty(e), _s(this, e));
    return i === a ? null : i === n && a === o ? r : r = t(n = i, o = a);
  };
}
function lE(e) {
  return function() {
    this.style.removeProperty(e);
  };
}
function z3(e, t, n) {
  var o, r = n + "", i;
  return function() {
    var a = _s(this, e);
    return a === r ? null : a === o ? i : i = t(o = a, n);
  };
}
function j3(e, t, n) {
  var o, r, i;
  return function() {
    var a = _s(this, e), l = n(this), c = l + "";
    return l == null && (c = l = (this.style.removeProperty(e), _s(this, e))), a === c ? null : a === o && c === r ? i : (r = c, i = t(o = a, l));
  };
}
function V3(e, t) {
  var n, o, r, i = "style." + t, a = "end." + i, l;
  return function() {
    var c = mr(this, e), u = c.on, f = c.value[i] == null ? l || (l = lE(t)) : void 0;
    (u !== n || r !== f) && (o = (n = u).copy()).on(a, r = f), c.on = o;
  };
}
function H3(e, t, n) {
  var o = (e += "") == "transform" ? HH : aE;
  return t == null ? this.styleTween(e, F3(e, o)).on("end.style." + e, lE(e)) : typeof t == "function" ? this.styleTween(e, j3(e, o, ig(this, "style." + e, t))).each(V3(this._id, e)) : this.styleTween(e, z3(e, o, t), n).on("end.style." + e, null);
}
function W3(e, t, n) {
  return function(o) {
    this.style.setProperty(e, t.call(this, o), n);
  };
}
function U3(e, t, n) {
  var o, r;
  function i() {
    var a = t.apply(this, arguments);
    return a !== r && (o = (r = a) && W3(e, a, n)), o;
  }
  return i._value = t, i;
}
function q3(e, t, n) {
  var o = "style." + (e += "");
  if (arguments.length < 2) return (o = this.tween(o)) && o._value;
  if (t == null) return this.tween(o, null);
  if (typeof t != "function") throw new Error();
  return this.tween(o, U3(e, t, n ?? ""));
}
function K3(e) {
  return function() {
    this.textContent = e;
  };
}
function Y3(e) {
  return function() {
    var t = e(this);
    this.textContent = t ?? "";
  };
}
function G3(e) {
  return this.tween("text", typeof e == "function" ? Y3(ig(this, "text", e)) : K3(e == null ? "" : e + ""));
}
function X3(e) {
  return function(t) {
    this.textContent = e.call(this, t);
  };
}
function Z3(e) {
  var t, n;
  function o() {
    var r = e.apply(this, arguments);
    return r !== n && (t = (n = r) && X3(r)), t;
  }
  return o._value = e, o;
}
function Q3(e) {
  var t = "text";
  if (arguments.length < 1) return (t = this.tween(t)) && t._value;
  if (e == null) return this.tween(t, null);
  if (typeof e != "function") throw new Error();
  return this.tween(t, Z3(e));
}
function J3() {
  for (var e = this._name, t = this._id, n = cE(), o = this._groups, r = o.length, i = 0; i < r; ++i)
    for (var a = o[i], l = a.length, c, u = 0; u < l; ++u)
      if (c = a[u]) {
        var f = Ko(c, t);
        Gd(c, e, n, u, a, {
          time: f.time + f.delay + f.duration,
          delay: 0,
          duration: f.duration,
          ease: f.ease
        });
      }
  return new kr(o, this._parents, e, n);
}
function eW() {
  var e, t, n = this, o = n._id, r = n.size();
  return new Promise(function(i, a) {
    var l = { value: a }, c = { value: function() {
      --r === 0 && i();
    } };
    n.each(function() {
      var u = mr(this, o), f = u.on;
      f !== e && (t = (e = f).copy(), t._.cancel.push(l), t._.interrupt.push(l), t._.end.push(c)), u.on = t;
    }), r === 0 && i();
  });
}
var tW = 0;
function kr(e, t, n, o) {
  this._groups = e, this._parents = t, this._name = n, this._id = o;
}
function cE() {
  return ++tW;
}
var xr = jl.prototype;
kr.prototype = {
  constructor: kr,
  select: A3,
  selectAll: D3,
  selectChild: xr.selectChild,
  selectChildren: xr.selectChildren,
  filter: I3,
  merge: R3,
  selection: B3,
  transition: J3,
  call: xr.call,
  nodes: xr.nodes,
  node: xr.node,
  size: xr.size,
  empty: xr.empty,
  each: xr.each,
  on: N3,
  attr: f3,
  attrTween: y3,
  style: H3,
  styleTween: q3,
  text: G3,
  textTween: Q3,
  remove: _3,
  tween: i3,
  delay: x3,
  duration: T3,
  ease: C3,
  easeVarying: $3,
  end: eW,
  [Symbol.iterator]: xr[Symbol.iterator]
};
function nW(e) {
  return ((e *= 2) <= 1 ? e * e * e : (e -= 2) * e * e + 2) / 2;
}
var oW = {
  time: null,
  // Set on use.
  delay: 0,
  duration: 250,
  ease: nW
};
function rW(e, t) {
  for (var n; !(n = e.__transition) || !(n = n[t]); )
    if (!(e = e.parentNode))
      throw new Error(`transition ${t} not found`);
  return n;
}
function iW(e) {
  var t, n;
  e instanceof kr ? (t = e._id, e = e._name) : (t = cE(), (n = oW).time = og(), e = e == null ? null : e + "");
  for (var o = this._groups, r = o.length, i = 0; i < r; ++i)
    for (var a = o[i], l = a.length, c, u = 0; u < l; ++u)
      (c = a[u]) && Gd(c, e, t, u, a, n || rW(c, t));
  return new kr(o, this._parents, e, t);
}
jl.prototype.interrupt = n3;
jl.prototype.transition = iW;
const Tc = (e) => () => e;
function sW(e, {
  sourceEvent: t,
  target: n,
  transform: o,
  dispatch: r
}) {
  Object.defineProperties(this, {
    type: { value: e, enumerable: !0, configurable: !0 },
    sourceEvent: { value: t, enumerable: !0, configurable: !0 },
    target: { value: n, enumerable: !0, configurable: !0 },
    transform: { value: o, enumerable: !0, configurable: !0 },
    _: { value: r }
  });
}
function wr(e, t, n) {
  this.k = e, this.x = t, this.y = n;
}
wr.prototype = {
  constructor: wr,
  scale: function(e) {
    return e === 1 ? this : new wr(this.k * e, this.x, this.y);
  },
  translate: function(e, t) {
    return e === 0 & t === 0 ? this : new wr(this.k, this.x + this.k * e, this.y + this.k * t);
  },
  apply: function(e) {
    return [e[0] * this.k + this.x, e[1] * this.k + this.y];
  },
  applyX: function(e) {
    return e * this.k + this.x;
  },
  applyY: function(e) {
    return e * this.k + this.y;
  },
  invert: function(e) {
    return [(e[0] - this.x) / this.k, (e[1] - this.y) / this.k];
  },
  invertX: function(e) {
    return (e - this.x) / this.k;
  },
  invertY: function(e) {
    return (e - this.y) / this.k;
  },
  rescaleX: function(e) {
    return e.copy().domain(e.range().map(this.invertX, this).map(e.invert, e));
  },
  rescaleY: function(e) {
    return e.copy().domain(e.range().map(this.invertY, this).map(e.invert, e));
  },
  toString: function() {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};
var Xd = new wr(1, 0, 0);
uE.prototype = wr.prototype;
function uE(e) {
  for (; !e.__zoom; ) if (!(e = e.parentNode)) return Xd;
  return e.__zoom;
}
function ip(e) {
  e.stopImmediatePropagation();
}
function ya(e) {
  e.preventDefault(), e.stopImmediatePropagation();
}
function aW(e) {
  return (!e.ctrlKey || e.type === "wheel") && !e.button;
}
function lW() {
  var e = this;
  return e instanceof SVGElement ? (e = e.ownerSVGElement || e, e.hasAttribute("viewBox") ? (e = e.viewBox.baseVal, [[e.x, e.y], [e.x + e.width, e.y + e.height]]) : [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]]) : [[0, 0], [e.clientWidth, e.clientHeight]];
}
function tv() {
  return this.__zoom || Xd;
}
function cW(e) {
  return -e.deltaY * (e.deltaMode === 1 ? 0.05 : e.deltaMode ? 1 : 2e-3) * (e.ctrlKey ? 10 : 1);
}
function uW() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}
function dW(e, t, n) {
  var o = e.invertX(t[0][0]) - n[0][0], r = e.invertX(t[1][0]) - n[1][0], i = e.invertY(t[0][1]) - n[0][1], a = e.invertY(t[1][1]) - n[1][1];
  return e.translate(
    r > o ? (o + r) / 2 : Math.min(0, o) || Math.max(0, r),
    a > i ? (i + a) / 2 : Math.min(0, i) || Math.max(0, a)
  );
}
function dE() {
  var e = aW, t = lW, n = dW, o = cW, r = uW, i = [0, 1 / 0], a = [[-1 / 0, -1 / 0], [1 / 0, 1 / 0]], l = 250, c = YH, u = qd("start", "zoom", "end"), f, d, p, h = 500, g = 150, m = 0, y = 10;
  function x(O) {
    O.property("__zoom", tv).on("wheel.zoom", R, { passive: !1 }).on("mousedown.zoom", M).on("dblclick.zoom", v).filter(r).on("touchstart.zoom", I).on("touchmove.zoom", k).on("touchend.zoom touchcancel.zoom", A).style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }
  x.transform = function(O, _, N, L) {
    var F = O.selection ? O.selection() : O;
    F.property("__zoom", tv), O !== F ? S(O, _, N, L) : F.interrupt().each(function() {
      E(this, arguments).event(L).start().zoom(null, typeof _ == "function" ? _.apply(this, arguments) : _).end();
    });
  }, x.scaleBy = function(O, _, N, L) {
    x.scaleTo(O, function() {
      var F = this.__zoom.k, D = typeof _ == "function" ? _.apply(this, arguments) : _;
      return F * D;
    }, N, L);
  }, x.scaleTo = function(O, _, N, L) {
    x.transform(O, function() {
      var F = t.apply(this, arguments), D = this.__zoom, B = N == null ? w(F) : typeof N == "function" ? N.apply(this, arguments) : N, z = D.invert(B), U = typeof _ == "function" ? _.apply(this, arguments) : _;
      return n(b(T(D, U), B, z), F, a);
    }, N, L);
  }, x.translateBy = function(O, _, N, L) {
    x.transform(O, function() {
      return n(this.__zoom.translate(
        typeof _ == "function" ? _.apply(this, arguments) : _,
        typeof N == "function" ? N.apply(this, arguments) : N
      ), t.apply(this, arguments), a);
    }, null, L);
  }, x.translateTo = function(O, _, N, L, F) {
    x.transform(O, function() {
      var D = t.apply(this, arguments), B = this.__zoom, z = L == null ? w(D) : typeof L == "function" ? L.apply(this, arguments) : L;
      return n(Xd.translate(z[0], z[1]).scale(B.k).translate(
        typeof _ == "function" ? -_.apply(this, arguments) : -_,
        typeof N == "function" ? -N.apply(this, arguments) : -N
      ), D, a);
    }, L, F);
  };
  function T(O, _) {
    return _ = Math.max(i[0], Math.min(i[1], _)), _ === O.k ? O : new wr(_, O.x, O.y);
  }
  function b(O, _, N) {
    var L = _[0] - N[0] * O.k, F = _[1] - N[1] * O.k;
    return L === O.x && F === O.y ? O : new wr(O.k, L, F);
  }
  function w(O) {
    return [(+O[0][0] + +O[1][0]) / 2, (+O[0][1] + +O[1][1]) / 2];
  }
  function S(O, _, N, L) {
    O.on("start.zoom", function() {
      E(this, arguments).event(L).start();
    }).on("interrupt.zoom end.zoom", function() {
      E(this, arguments).event(L).end();
    }).tween("zoom", function() {
      var F = this, D = arguments, B = E(F, D).event(L), z = t.apply(F, D), U = N == null ? w(z) : typeof N == "function" ? N.apply(F, D) : N, q = Math.max(z[1][0] - z[0][0], z[1][1] - z[0][1]), Y = F.__zoom, K = typeof _ == "function" ? _.apply(F, D) : _, te = c(Y.invert(U).concat(q / Y.k), K.invert(U).concat(q / K.k));
      return function(ne) {
        if (ne === 1) ne = K;
        else {
          var W = te(ne), ee = q / W[2];
          ne = new wr(ee, U[0] - W[0] * ee, U[1] - W[1] * ee);
        }
        B.zoom(null, ne);
      };
    });
  }
  function E(O, _, N) {
    return !N && O.__zooming || new C(O, _);
  }
  function C(O, _) {
    this.that = O, this.args = _, this.active = 0, this.sourceEvent = null, this.extent = t.apply(O, _), this.taps = 0;
  }
  C.prototype = {
    event: function(O) {
      return O && (this.sourceEvent = O), this;
    },
    start: function() {
      return ++this.active === 1 && (this.that.__zooming = this, this.emit("start")), this;
    },
    zoom: function(O, _) {
      return this.mouse && O !== "mouse" && (this.mouse[1] = _.invert(this.mouse[0])), this.touch0 && O !== "touch" && (this.touch0[1] = _.invert(this.touch0[0])), this.touch1 && O !== "touch" && (this.touch1[1] = _.invert(this.touch1[0])), this.that.__zoom = _, this.emit("zoom"), this;
    },
    end: function() {
      return --this.active === 0 && (delete this.that.__zooming, this.emit("end")), this;
    },
    emit: function(O) {
      var _ = ao(this.that).datum();
      u.call(
        O,
        this.that,
        new sW(O, {
          sourceEvent: this.sourceEvent,
          target: x,
          transform: this.that.__zoom,
          dispatch: u
        }),
        _
      );
    }
  };
  function R(O, ..._) {
    if (!e.apply(this, arguments)) return;
    var N = E(this, _).event(O), L = this.__zoom, F = Math.max(i[0], Math.min(i[1], L.k * Math.pow(2, o.apply(this, arguments)))), D = Ao(O);
    if (N.wheel)
      (N.mouse[0][0] !== D[0] || N.mouse[0][1] !== D[1]) && (N.mouse[1] = L.invert(N.mouse[0] = D)), clearTimeout(N.wheel);
    else {
      if (L.k === F) return;
      N.mouse = [D, L.invert(D)], Kc(this), N.start();
    }
    ya(O), N.wheel = setTimeout(B, g), N.zoom("mouse", n(b(T(L, F), N.mouse[0], N.mouse[1]), N.extent, a));
    function B() {
      N.wheel = null, N.end();
    }
  }
  function M(O, ..._) {
    if (p || !e.apply(this, arguments)) return;
    var N = O.currentTarget, L = E(this, _, !0).event(O), F = ao(O.view).on("mousemove.zoom", U, !0).on("mouseup.zoom", q, !0), D = Ao(O, N), B = O.clientX, z = O.clientY;
    YT(O.view), ip(O), L.mouse = [D, this.__zoom.invert(D)], Kc(this), L.start();
    function U(Y) {
      if (ya(Y), !L.moved) {
        var K = Y.clientX - B, te = Y.clientY - z;
        L.moved = K * K + te * te > m;
      }
      L.event(Y).zoom("mouse", n(b(L.that.__zoom, L.mouse[0] = Ao(Y, N), L.mouse[1]), L.extent, a));
    }
    function q(Y) {
      F.on("mousemove.zoom mouseup.zoom", null), GT(Y.view, L.moved), ya(Y), L.event(Y).end();
    }
  }
  function v(O, ..._) {
    if (e.apply(this, arguments)) {
      var N = this.__zoom, L = Ao(O.changedTouches ? O.changedTouches[0] : O, this), F = N.invert(L), D = N.k * (O.shiftKey ? 0.5 : 2), B = n(b(T(N, D), L, F), t.apply(this, _), a);
      ya(O), l > 0 ? ao(this).transition().duration(l).call(S, B, L, O) : ao(this).call(x.transform, B, L, O);
    }
  }
  function I(O, ..._) {
    if (e.apply(this, arguments)) {
      var N = O.touches, L = N.length, F = E(this, _, O.changedTouches.length === L).event(O), D, B, z, U;
      for (ip(O), B = 0; B < L; ++B)
        z = N[B], U = Ao(z, this), U = [U, this.__zoom.invert(U), z.identifier], F.touch0 ? !F.touch1 && F.touch0[2] !== U[2] && (F.touch1 = U, F.taps = 0) : (F.touch0 = U, D = !0, F.taps = 1 + !!f);
      f && (f = clearTimeout(f)), D && (F.taps < 2 && (d = U[0], f = setTimeout(function() {
        f = null;
      }, h)), Kc(this), F.start());
    }
  }
  function k(O, ..._) {
    if (this.__zooming) {
      var N = E(this, _).event(O), L = O.changedTouches, F = L.length, D, B, z, U;
      for (ya(O), D = 0; D < F; ++D)
        B = L[D], z = Ao(B, this), N.touch0 && N.touch0[2] === B.identifier ? N.touch0[0] = z : N.touch1 && N.touch1[2] === B.identifier && (N.touch1[0] = z);
      if (B = N.that.__zoom, N.touch1) {
        var q = N.touch0[0], Y = N.touch0[1], K = N.touch1[0], te = N.touch1[1], ne = (ne = K[0] - q[0]) * ne + (ne = K[1] - q[1]) * ne, W = (W = te[0] - Y[0]) * W + (W = te[1] - Y[1]) * W;
        B = T(B, Math.sqrt(ne / W)), z = [(q[0] + K[0]) / 2, (q[1] + K[1]) / 2], U = [(Y[0] + te[0]) / 2, (Y[1] + te[1]) / 2];
      } else if (N.touch0) z = N.touch0[0], U = N.touch0[1];
      else return;
      N.zoom("touch", n(b(B, z, U), N.extent, a));
    }
  }
  function A(O, ..._) {
    if (this.__zooming) {
      var N = E(this, _).event(O), L = O.changedTouches, F = L.length, D, B;
      for (ip(O), p && clearTimeout(p), p = setTimeout(function() {
        p = null;
      }, h), D = 0; D < F; ++D)
        B = L[D], N.touch0 && N.touch0[2] === B.identifier ? delete N.touch0 : N.touch1 && N.touch1[2] === B.identifier && delete N.touch1;
      if (N.touch1 && !N.touch0 && (N.touch0 = N.touch1, delete N.touch1), N.touch0) N.touch0[1] = this.__zoom.invert(N.touch0[0]);
      else if (N.end(), N.taps === 2 && (B = Ao(B, this), Math.hypot(d[0] - B[0], d[1] - B[1]) < y)) {
        var z = ao(this).on("dblclick.zoom");
        z && z.apply(this, arguments);
      }
    }
  }
  return x.wheelDelta = function(O) {
    return arguments.length ? (o = typeof O == "function" ? O : Tc(+O), x) : o;
  }, x.filter = function(O) {
    return arguments.length ? (e = typeof O == "function" ? O : Tc(!!O), x) : e;
  }, x.touchable = function(O) {
    return arguments.length ? (r = typeof O == "function" ? O : Tc(!!O), x) : r;
  }, x.extent = function(O) {
    return arguments.length ? (t = typeof O == "function" ? O : Tc([[+O[0][0], +O[0][1]], [+O[1][0], +O[1][1]]]), x) : t;
  }, x.scaleExtent = function(O) {
    return arguments.length ? (i[0] = +O[0], i[1] = +O[1], x) : [i[0], i[1]];
  }, x.translateExtent = function(O) {
    return arguments.length ? (a[0][0] = +O[0][0], a[1][0] = +O[1][0], a[0][1] = +O[0][1], a[1][1] = +O[1][1], x) : [[a[0][0], a[0][1]], [a[1][0], a[1][1]]];
  }, x.constrain = function(O) {
    return arguments.length ? (n = O, x) : n;
  }, x.duration = function(O) {
    return arguments.length ? (l = +O, x) : l;
  }, x.interpolate = function(O) {
    return arguments.length ? (c = O, x) : c;
  }, x.on = function() {
    var O = u.on.apply(u, arguments);
    return O === u ? x : O;
  }, x.clickDistance = function(O) {
    return arguments.length ? (m = (O = +O) * O, x) : Math.sqrt(m);
  }, x.tapDistance = function(O) {
    return arguments.length ? (y = +O, x) : y;
  }, x;
}
const Vn = {
  error001: () => "[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001",
  error002: () => "It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.",
  error003: (e) => `Node type "${e}" not found. Using fallback type "default".`,
  error004: () => "The React Flow parent container needs a width and a height to render the graph.",
  error005: () => "Only child nodes can use a parent extent.",
  error006: () => "Can't create edge. An edge needs a source and a target.",
  error007: (e) => `The old edge with id=${e} does not exist.`,
  error009: (e) => `Marker type "${e}" doesn't exist.`,
  error008: (e, { id: t, sourceHandle: n, targetHandle: o }) => `Couldn't create edge for ${e} handle id: "${e === "source" ? n : o}", edge id: ${t}.`,
  error010: () => "Handle: No node id found. Make sure to only use a Handle inside a custom Node.",
  error011: (e) => `Edge type "${e}" not found. Using fallback type "default".`,
  error012: (e) => `Node with id "${e}" does not exist, it may have been removed. This can happen when a node is deleted before the "onNodeClick" handler is called.`,
  error013: (e = "react") => `It seems that you haven't loaded the styles. Please import '@xyflow/${e}/dist/style.css' or base.css to make sure everything is working properly.`,
  error014: () => "useNodeConnections: No node ID found. Call useNodeConnections inside a custom Node or provide a node ID.",
  error015: () => "It seems that you are trying to drag a node that is not initialized. Please use onNodesChange as explained in the docs."
}, dl = [
  [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],
  [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY]
], fE = ["Enter", " ", "Escape"];
var Ds;
(function(e) {
  e.Strict = "strict", e.Loose = "loose";
})(Ds || (Ds = {}));
var ki;
(function(e) {
  e.Free = "free", e.Vertical = "vertical", e.Horizontal = "horizontal";
})(ki || (ki = {}));
var fl;
(function(e) {
  e.Partial = "partial", e.Full = "full";
})(fl || (fl = {}));
const pE = {
  inProgress: !1,
  isValid: null,
  from: null,
  fromHandle: null,
  fromPosition: null,
  fromNode: null,
  to: null,
  toHandle: null,
  toPosition: null,
  toNode: null
};
var lo;
(function(e) {
  e.Bezier = "default", e.Straight = "straight", e.Step = "step", e.SmoothStep = "smoothstep", e.SimpleBezier = "simplebezier";
})(lo || (lo = {}));
var Ls;
(function(e) {
  e.Arrow = "arrow", e.ArrowClosed = "arrowclosed";
})(Ls || (Ls = {}));
var Ve;
(function(e) {
  e.Left = "left", e.Top = "top", e.Right = "right", e.Bottom = "bottom";
})(Ve || (Ve = {}));
const nv = {
  [Ve.Left]: Ve.Right,
  [Ve.Right]: Ve.Left,
  [Ve.Top]: Ve.Bottom,
  [Ve.Bottom]: Ve.Top
};
function hE(e) {
  return e === null ? null : e ? "valid" : "invalid";
}
const mE = (e) => "id" in e && "source" in e && "target" in e, fW = (e) => "id" in e && "position" in e && !("source" in e) && !("target" in e), sg = (e) => "id" in e && "internals" in e && !("source" in e) && !("target" in e), pW = (e, t, n) => {
  if (!e.id)
    return [];
  const o = /* @__PURE__ */ new Set();
  return n.forEach((r) => {
    r.source === e.id && o.add(r.target);
  }), t.filter((r) => o.has(r.id));
}, Hl = (e, t = [0, 0]) => {
  const { width: n, height: o } = Mr(e), r = e.origin ?? t, i = n * r[0], a = o * r[1];
  return {
    x: e.position.x - i,
    y: e.position.y - a
  };
}, hW = (e, t = { nodeOrigin: [0, 0] }) => {
  if (process.env.NODE_ENV === "development" && !t.nodeLookup && console.warn("Please use `getNodesBounds` from `useReactFlow`/`useSvelteFlow` hook to ensure correct values for sub flows. If not possible, you have to provide a nodeLookup to support sub flows."), e.length === 0)
    return { x: 0, y: 0, width: 0, height: 0 };
  const n = e.reduce((o, r) => {
    const i = typeof r == "string";
    let a = !t.nodeLookup && !i ? r : void 0;
    t.nodeLookup && (a = i ? t.nodeLookup.get(r) : sg(r) ? r : t.nodeLookup.get(r.id));
    const l = a ? Mu(a, t.nodeOrigin) : { x: 0, y: 0, x2: 0, y2: 0 };
    return Zd(o, l);
  }, { x: 1 / 0, y: 1 / 0, x2: -1 / 0, y2: -1 / 0 });
  return Qd(n);
}, Wl = (e, t = {}) => {
  if (e.size === 0)
    return { x: 0, y: 0, width: 0, height: 0 };
  let n = { x: 1 / 0, y: 1 / 0, x2: -1 / 0, y2: -1 / 0 };
  return e.forEach((o) => {
    if (t.filter === void 0 || t.filter(o)) {
      const r = Mu(o);
      n = Zd(n, r);
    }
  }), Qd(n);
}, gE = (e, t, [n, o, r] = [0, 0, 1], i = !1, a = !1) => {
  const l = {
    ...Ul(t, [n, o, r]),
    width: t.width / r,
    height: t.height / r
  }, c = [];
  for (const u of e.values()) {
    const { measured: f, selectable: d = !0, hidden: p = !1 } = u;
    if (a && !d || p)
      continue;
    const h = f.width ?? u.width ?? u.initialWidth ?? null, g = f.height ?? u.height ?? u.initialHeight ?? null, m = pl(l, Fs(u)), y = (h ?? 0) * (g ?? 0), x = i && m > 0;
    (!u.internals.handleBounds || x || m >= y || u.dragging) && c.push(u);
  }
  return c;
}, mW = (e, t) => {
  const n = /* @__PURE__ */ new Set();
  return e.forEach((o) => {
    n.add(o.id);
  }), t.filter((o) => n.has(o.source) || n.has(o.target));
};
function gW(e, t) {
  const n = /* @__PURE__ */ new Map(), o = t != null && t.nodes ? new Set(t.nodes.map((r) => r.id)) : null;
  return e.forEach((r) => {
    r.measured.width && r.measured.height && ((t == null ? void 0 : t.includeHiddenNodes) || !r.hidden) && (!o || o.has(r.id)) && n.set(r.id, r);
  }), n;
}
async function yW({ nodes: e, width: t, height: n, panZoom: o, minZoom: r, maxZoom: i }, a) {
  if (e.size === 0)
    return Promise.resolve(!0);
  const l = gW(e, a), c = Wl(l), u = ag(c, t, n, (a == null ? void 0 : a.minZoom) ?? r, (a == null ? void 0 : a.maxZoom) ?? i, (a == null ? void 0 : a.padding) ?? 0.1);
  return await o.setViewport(u, { duration: a == null ? void 0 : a.duration }), Promise.resolve(!0);
}
function yE({ nodeId: e, nextPosition: t, nodeLookup: n, nodeOrigin: o = [0, 0], nodeExtent: r, onError: i }) {
  const a = n.get(e), l = a.parentId ? n.get(a.parentId) : void 0, { x: c, y: u } = l ? l.internals.positionAbsolute : { x: 0, y: 0 }, f = a.origin ?? o;
  let d = r;
  if (a.extent === "parent" && !a.expandParent)
    if (!l)
      i == null || i("005", Vn.error005());
    else {
      const h = l.measured.width, g = l.measured.height;
      h && g && (d = [
        [c, u],
        [c + h, u + g]
      ]);
    }
  else l && zs(a.extent) && (d = [
    [a.extent[0][0] + c, a.extent[0][1] + u],
    [a.extent[1][0] + c, a.extent[1][1] + u]
  ]);
  const p = zs(d) ? Li(t, d, a.measured) : t;
  return (a.measured.width === void 0 || a.measured.height === void 0) && (i == null || i("015", Vn.error015())), {
    position: {
      x: p.x - c + (a.measured.width ?? 0) * f[0],
      y: p.y - u + (a.measured.height ?? 0) * f[1]
    },
    positionAbsolute: p
  };
}
async function bW({ nodesToRemove: e = [], edgesToRemove: t = [], nodes: n, edges: o, onBeforeDelete: r }) {
  const i = new Set(e.map((p) => p.id)), a = [];
  for (const p of n) {
    if (p.deletable === !1)
      continue;
    const h = i.has(p.id), g = !h && p.parentId && a.find((m) => m.id === p.parentId);
    (h || g) && a.push(p);
  }
  const l = new Set(t.map((p) => p.id)), c = o.filter((p) => p.deletable !== !1), f = mW(a, c);
  for (const p of c)
    l.has(p.id) && !f.find((g) => g.id === p.id) && f.push(p);
  if (!r)
    return {
      edges: f,
      nodes: a
    };
  const d = await r({
    nodes: a,
    edges: f
  });
  return typeof d == "boolean" ? d ? { edges: f, nodes: a } : { edges: [], nodes: [] } : d;
}
const Bs = (e, t = 0, n = 1) => Math.min(Math.max(e, t), n), Li = (e = { x: 0, y: 0 }, t, n) => ({
  x: Bs(e.x, t[0][0], t[1][0] - ((n == null ? void 0 : n.width) ?? 0)),
  y: Bs(e.y, t[0][1], t[1][1] - ((n == null ? void 0 : n.height) ?? 0))
});
function bE(e, t, n) {
  const { width: o, height: r } = Mr(n), { x: i, y: a } = n.internals.positionAbsolute;
  return Li(e, [
    [i, a],
    [i + o, a + r]
  ], t);
}
const ov = (e, t, n) => e < t ? Bs(Math.abs(e - t), 1, t) / t : e > n ? -Bs(Math.abs(e - n), 1, t) / t : 0, vE = (e, t, n = 15, o = 40) => {
  const r = ov(e.x, o, t.width - o) * n, i = ov(e.y, o, t.height - o) * n;
  return [r, i];
}, Zd = (e, t) => ({
  x: Math.min(e.x, t.x),
  y: Math.min(e.y, t.y),
  x2: Math.max(e.x2, t.x2),
  y2: Math.max(e.y2, t.y2)
}), vh = ({ x: e, y: t, width: n, height: o }) => ({
  x: e,
  y: t,
  x2: e + n,
  y2: t + o
}), Qd = ({ x: e, y: t, x2: n, y2: o }) => ({
  x: e,
  y: t,
  width: n - e,
  height: o - t
}), Fs = (e, t = [0, 0]) => {
  var r, i;
  const { x: n, y: o } = sg(e) ? e.internals.positionAbsolute : Hl(e, t);
  return {
    x: n,
    y: o,
    width: ((r = e.measured) == null ? void 0 : r.width) ?? e.width ?? e.initialWidth ?? 0,
    height: ((i = e.measured) == null ? void 0 : i.height) ?? e.height ?? e.initialHeight ?? 0
  };
}, Mu = (e, t = [0, 0]) => {
  var r, i;
  const { x: n, y: o } = sg(e) ? e.internals.positionAbsolute : Hl(e, t);
  return {
    x: n,
    y: o,
    x2: n + (((r = e.measured) == null ? void 0 : r.width) ?? e.width ?? e.initialWidth ?? 0),
    y2: o + (((i = e.measured) == null ? void 0 : i.height) ?? e.height ?? e.initialHeight ?? 0)
  };
}, xE = (e, t) => Qd(Zd(vh(e), vh(t))), pl = (e, t) => {
  const n = Math.max(0, Math.min(e.x + e.width, t.x + t.width) - Math.max(e.x, t.x)), o = Math.max(0, Math.min(e.y + e.height, t.y + t.height) - Math.max(e.y, t.y));
  return Math.ceil(n * o);
}, rv = (e) => Bo(e.width) && Bo(e.height) && Bo(e.x) && Bo(e.y), Bo = (e) => !isNaN(e) && isFinite(e), _u = (e, t) => {
  process.env.NODE_ENV === "development" && console.warn(`[React Flow]: ${t} Help: https://reactflow.dev/error#${e}`);
}, Jd = (e, t = [1, 1]) => ({
  x: t[0] * Math.round(e.x / t[0]),
  y: t[1] * Math.round(e.y / t[1])
}), Ul = ({ x: e, y: t }, [n, o, r], i = !1, a = [1, 1]) => {
  const l = {
    x: (e - n) / r,
    y: (t - o) / r
  };
  return i ? Jd(l, a) : l;
}, Au = ({ x: e, y: t }, [n, o, r]) => ({
  x: e * r + n,
  y: t * r + o
});
function is(e, t) {
  if (typeof e == "number")
    return Math.floor((t - t / (1 + e)) * 0.5);
  if (typeof e == "string" && e.endsWith("px")) {
    const n = parseFloat(e);
    if (!Number.isNaN(n))
      return Math.floor(n);
  }
  if (typeof e == "string" && e.endsWith("%")) {
    const n = parseFloat(e);
    if (!Number.isNaN(n))
      return Math.floor(t * n * 0.01);
  }
  return console.error(`[React Flow] The padding value "${e}" is invalid. Please provide a number or a string with a valid unit (px or %).`), 0;
}
function vW(e, t, n) {
  if (typeof e == "string" || typeof e == "number") {
    const o = is(e, n), r = is(e, t);
    return {
      top: o,
      right: r,
      bottom: o,
      left: r,
      x: r * 2,
      y: o * 2
    };
  }
  if (typeof e == "object") {
    const o = is(e.top ?? e.y ?? 0, n), r = is(e.bottom ?? e.y ?? 0, n), i = is(e.left ?? e.x ?? 0, t), a = is(e.right ?? e.x ?? 0, t);
    return { top: o, right: a, bottom: r, left: i, x: i + a, y: o + r };
  }
  return { top: 0, right: 0, bottom: 0, left: 0, x: 0, y: 0 };
}
function xW(e, t, n, o, r, i) {
  const { x: a, y: l } = Au(e, [t, n, o]), { x: c, y: u } = Au({ x: e.x + e.width, y: e.y + e.height }, [t, n, o]), f = r - c, d = i - u;
  return {
    left: Math.floor(a),
    top: Math.floor(l),
    right: Math.floor(f),
    bottom: Math.floor(d)
  };
}
const ag = (e, t, n, o, r, i) => {
  const a = vW(i, t, n), l = (t - a.x) / e.width, c = (n - a.y) / e.height, u = Math.min(l, c), f = Bs(u, o, r), d = e.x + e.width / 2, p = e.y + e.height / 2, h = t / 2 - d * f, g = n / 2 - p * f, m = xW(e, h, g, f, t, n), y = {
    left: Math.min(m.left - a.left, 0),
    top: Math.min(m.top - a.top, 0),
    right: Math.min(m.right - a.right, 0),
    bottom: Math.min(m.bottom - a.bottom, 0)
  };
  return {
    x: h - y.left + y.right,
    y: g - y.top + y.bottom,
    zoom: f
  };
}, Du = () => {
  var e;
  return typeof navigator < "u" && ((e = navigator == null ? void 0 : navigator.userAgent) == null ? void 0 : e.indexOf("Mac")) >= 0;
};
function zs(e) {
  return e !== void 0 && e !== "parent";
}
function Mr(e) {
  var t, n;
  return {
    width: ((t = e.measured) == null ? void 0 : t.width) ?? e.width ?? e.initialWidth ?? 0,
    height: ((n = e.measured) == null ? void 0 : n.height) ?? e.height ?? e.initialHeight ?? 0
  };
}
function wE(e) {
  var t, n;
  return (((t = e.measured) == null ? void 0 : t.width) ?? e.width ?? e.initialWidth) !== void 0 && (((n = e.measured) == null ? void 0 : n.height) ?? e.height ?? e.initialHeight) !== void 0;
}
function SE(e, t = { width: 0, height: 0 }, n, o, r) {
  const i = { ...e }, a = o.get(n);
  if (a) {
    const l = a.origin || r;
    i.x += a.internals.positionAbsolute.x - (t.width ?? 0) * l[0], i.y += a.internals.positionAbsolute.y - (t.height ?? 0) * l[1];
  }
  return i;
}
function iv(e, t) {
  if (e.size !== t.size)
    return !1;
  for (const n of e)
    if (!t.has(n))
      return !1;
  return !0;
}
function wW() {
  let e, t;
  return { promise: new Promise((o, r) => {
    e = o, t = r;
  }), resolve: e, reject: t };
}
function za(e, { snapGrid: t = [0, 0], snapToGrid: n = !1, transform: o, containerBounds: r }) {
  const { x: i, y: a } = Tr(e), l = Ul({ x: i - ((r == null ? void 0 : r.left) ?? 0), y: a - ((r == null ? void 0 : r.top) ?? 0) }, o), { x: c, y: u } = n ? Jd(l, t) : l;
  return {
    xSnapped: c,
    ySnapped: u,
    ...l
  };
}
const lg = (e) => ({
  width: e.offsetWidth,
  height: e.offsetHeight
}), TE = (e) => {
  var t;
  return ((t = e == null ? void 0 : e.getRootNode) == null ? void 0 : t.call(e)) || (window == null ? void 0 : window.document);
}, SW = ["INPUT", "SELECT", "TEXTAREA"];
function EE(e) {
  var o, r;
  const t = ((r = (o = e.composedPath) == null ? void 0 : o.call(e)) == null ? void 0 : r[0]) || e.target;
  return (t == null ? void 0 : t.nodeType) !== 1 ? !1 : SW.includes(t.nodeName) || t.hasAttribute("contenteditable") || !!t.closest(".nokey");
}
const CE = (e) => "clientX" in e, Tr = (e, t) => {
  var i, a;
  const n = CE(e), o = n ? e.clientX : (i = e.touches) == null ? void 0 : i[0].clientX, r = n ? e.clientY : (a = e.touches) == null ? void 0 : a[0].clientY;
  return {
    x: o - ((t == null ? void 0 : t.left) ?? 0),
    y: r - ((t == null ? void 0 : t.top) ?? 0)
  };
}, sv = (e, t, n, o, r) => {
  const i = t.querySelectorAll(`.${e}`);
  return !i || !i.length ? null : Array.from(i).map((a) => {
    const l = a.getBoundingClientRect();
    return {
      id: a.getAttribute("data-handleid"),
      type: e,
      nodeId: r,
      position: a.getAttribute("data-handlepos"),
      x: (l.left - n.left) / o,
      y: (l.top - n.top) / o,
      ...lg(a)
    };
  });
};
function OE({ sourceX: e, sourceY: t, targetX: n, targetY: o, sourceControlX: r, sourceControlY: i, targetControlX: a, targetControlY: l }) {
  const c = e * 0.125 + r * 0.375 + a * 0.375 + n * 0.125, u = t * 0.125 + i * 0.375 + l * 0.375 + o * 0.125, f = Math.abs(c - e), d = Math.abs(u - t);
  return [c, u, f, d];
}
function Ec(e, t) {
  return e >= 0 ? 0.5 * e : t * 25 * Math.sqrt(-e);
}
function av({ pos: e, x1: t, y1: n, x2: o, y2: r, c: i }) {
  switch (e) {
    case Ve.Left:
      return [t - Ec(t - o, i), n];
    case Ve.Right:
      return [t + Ec(o - t, i), n];
    case Ve.Top:
      return [t, n - Ec(n - r, i)];
    case Ve.Bottom:
      return [t, n + Ec(r - n, i)];
  }
}
function cg({ sourceX: e, sourceY: t, sourcePosition: n = Ve.Bottom, targetX: o, targetY: r, targetPosition: i = Ve.Top, curvature: a = 0.25 }) {
  const [l, c] = av({
    pos: n,
    x1: e,
    y1: t,
    x2: o,
    y2: r,
    c: a
  }), [u, f] = av({
    pos: i,
    x1: o,
    y1: r,
    x2: e,
    y2: t,
    c: a
  }), [d, p, h, g] = OE({
    sourceX: e,
    sourceY: t,
    targetX: o,
    targetY: r,
    sourceControlX: l,
    sourceControlY: c,
    targetControlX: u,
    targetControlY: f
  });
  return [
    `M${e},${t} C${l},${c} ${u},${f} ${o},${r}`,
    d,
    p,
    h,
    g
  ];
}
function $E({ sourceX: e, sourceY: t, targetX: n, targetY: o }) {
  const r = Math.abs(n - e) / 2, i = n < e ? n + r : n - r, a = Math.abs(o - t) / 2, l = o < t ? o + a : o - a;
  return [i, l, r, a];
}
function TW({ sourceNode: e, targetNode: t, selected: n = !1, zIndex: o = 0, elevateOnSelect: r = !1 }) {
  if (!r)
    return o;
  const i = n || t.selected || e.selected, a = Math.max(e.internals.z || 0, t.internals.z || 0, 1e3);
  return o + (i ? a : 0);
}
function EW({ sourceNode: e, targetNode: t, width: n, height: o, transform: r }) {
  const i = Zd(Mu(e), Mu(t));
  i.x === i.x2 && (i.x2 += 1), i.y === i.y2 && (i.y2 += 1);
  const a = {
    x: -r[0] / r[2],
    y: -r[1] / r[2],
    width: n / r[2],
    height: o / r[2]
  };
  return pl(a, Qd(i)) > 0;
}
const IE = ({ source: e, sourceHandle: t, target: n, targetHandle: o }) => `xy-edge__${e}${t || ""}-${n}${o || ""}`, CW = (e, t) => t.some((n) => n.source === e.source && n.target === e.target && (n.sourceHandle === e.sourceHandle || !n.sourceHandle && !e.sourceHandle) && (n.targetHandle === e.targetHandle || !n.targetHandle && !e.targetHandle)), RE = (e, t) => {
  if (!e.source || !e.target)
    return _u("006", Vn.error006()), t;
  let n;
  return mE(e) ? n = { ...e } : n = {
    ...e,
    id: IE(e)
  }, CW(n, t) ? t : (n.sourceHandle === null && delete n.sourceHandle, n.targetHandle === null && delete n.targetHandle, t.concat(n));
}, OW = (e, t, n, o = { shouldReplaceId: !0 }) => {
  const { id: r, ...i } = e;
  if (!t.source || !t.target)
    return _u("006", Vn.error006()), n;
  if (!n.find((c) => c.id === e.id))
    return _u("007", Vn.error007(r)), n;
  const l = {
    ...i,
    id: o.shouldReplaceId ? IE(t) : r,
    source: t.source,
    target: t.target,
    sourceHandle: t.sourceHandle,
    targetHandle: t.targetHandle
  };
  return n.filter((c) => c.id !== r).concat(l);
};
function kE({ sourceX: e, sourceY: t, targetX: n, targetY: o }) {
  const [r, i, a, l] = $E({
    sourceX: e,
    sourceY: t,
    targetX: n,
    targetY: o
  });
  return [`M ${e},${t}L ${n},${o}`, r, i, a, l];
}
const lv = {
  [Ve.Left]: { x: -1, y: 0 },
  [Ve.Right]: { x: 1, y: 0 },
  [Ve.Top]: { x: 0, y: -1 },
  [Ve.Bottom]: { x: 0, y: 1 }
}, $W = ({ source: e, sourcePosition: t = Ve.Bottom, target: n }) => t === Ve.Left || t === Ve.Right ? e.x < n.x ? { x: 1, y: 0 } : { x: -1, y: 0 } : e.y < n.y ? { x: 0, y: 1 } : { x: 0, y: -1 }, cv = (e, t) => Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2));
function IW({ source: e, sourcePosition: t = Ve.Bottom, target: n, targetPosition: o = Ve.Top, center: r, offset: i }) {
  const a = lv[t], l = lv[o], c = { x: e.x + a.x * i, y: e.y + a.y * i }, u = { x: n.x + l.x * i, y: n.y + l.y * i }, f = $W({
    source: c,
    sourcePosition: t,
    target: u
  }), d = f.x !== 0 ? "x" : "y", p = f[d];
  let h = [], g, m;
  const y = { x: 0, y: 0 }, x = { x: 0, y: 0 }, [T, b, w, S] = $E({
    sourceX: e.x,
    sourceY: e.y,
    targetX: n.x,
    targetY: n.y
  });
  if (a[d] * l[d] === -1) {
    g = r.x ?? T, m = r.y ?? b;
    const C = [
      { x: g, y: c.y },
      { x: g, y: u.y }
    ], R = [
      { x: c.x, y: m },
      { x: u.x, y: m }
    ];
    a[d] === p ? h = d === "x" ? C : R : h = d === "x" ? R : C;
  } else {
    const C = [{ x: c.x, y: u.y }], R = [{ x: u.x, y: c.y }];
    if (d === "x" ? h = a.x === p ? R : C : h = a.y === p ? C : R, t === o) {
      const A = Math.abs(e[d] - n[d]);
      if (A <= i) {
        const O = Math.min(i - 1, i - A);
        a[d] === p ? y[d] = (c[d] > e[d] ? -1 : 1) * O : x[d] = (u[d] > n[d] ? -1 : 1) * O;
      }
    }
    if (t !== o) {
      const A = d === "x" ? "y" : "x", O = a[d] === l[A], _ = c[A] > u[A], N = c[A] < u[A];
      (a[d] === 1 && (!O && _ || O && N) || a[d] !== 1 && (!O && N || O && _)) && (h = d === "x" ? C : R);
    }
    const M = { x: c.x + y.x, y: c.y + y.y }, v = { x: u.x + x.x, y: u.y + x.y }, I = Math.max(Math.abs(M.x - h[0].x), Math.abs(v.x - h[0].x)), k = Math.max(Math.abs(M.y - h[0].y), Math.abs(v.y - h[0].y));
    I >= k ? (g = (M.x + v.x) / 2, m = h[0].y) : (g = h[0].x, m = (M.y + v.y) / 2);
  }
  return [[
    e,
    { x: c.x + y.x, y: c.y + y.y },
    ...h,
    { x: u.x + x.x, y: u.y + x.y },
    n
  ], g, m, w, S];
}
function RW(e, t, n, o) {
  const r = Math.min(cv(e, t) / 2, cv(t, n) / 2, o), { x: i, y: a } = t;
  if (e.x === i && i === n.x || e.y === a && a === n.y)
    return `L${i} ${a}`;
  if (e.y === a) {
    const u = e.x < n.x ? -1 : 1, f = e.y < n.y ? 1 : -1;
    return `L ${i + r * u},${a}Q ${i},${a} ${i},${a + r * f}`;
  }
  const l = e.x < n.x ? 1 : -1, c = e.y < n.y ? -1 : 1;
  return `L ${i},${a + r * c}Q ${i},${a} ${i + r * l},${a}`;
}
function xh({ sourceX: e, sourceY: t, sourcePosition: n = Ve.Bottom, targetX: o, targetY: r, targetPosition: i = Ve.Top, borderRadius: a = 5, centerX: l, centerY: c, offset: u = 20 }) {
  const [f, d, p, h, g] = IW({
    source: { x: e, y: t },
    sourcePosition: n,
    target: { x: o, y: r },
    targetPosition: i,
    center: { x: l, y: c },
    offset: u
  });
  return [f.reduce((y, x, T) => {
    let b = "";
    return T > 0 && T < f.length - 1 ? b = RW(f[T - 1], x, f[T + 1], a) : b = `${T === 0 ? "M" : "L"}${x.x} ${x.y}`, y += b, y;
  }, ""), d, p, h, g];
}
function uv(e) {
  var t;
  return e && !!(e.internals.handleBounds || (t = e.handles) != null && t.length) && !!(e.measured.width || e.width || e.initialWidth);
}
function kW(e) {
  var d;
  const { sourceNode: t, targetNode: n } = e;
  if (!uv(t) || !uv(n))
    return null;
  const o = t.internals.handleBounds || dv(t.handles), r = n.internals.handleBounds || dv(n.handles), i = fv((o == null ? void 0 : o.source) ?? [], e.sourceHandle), a = fv(
    // when connection type is loose we can define all handles as sources and connect source -> source
    e.connectionMode === Ds.Strict ? (r == null ? void 0 : r.target) ?? [] : ((r == null ? void 0 : r.target) ?? []).concat((r == null ? void 0 : r.source) ?? []),
    e.targetHandle
  );
  if (!i || !a)
    return (d = e.onError) == null || d.call(e, "008", Vn.error008(i ? "target" : "source", {
      id: e.id,
      sourceHandle: e.sourceHandle,
      targetHandle: e.targetHandle
    })), null;
  const l = (i == null ? void 0 : i.position) || Ve.Bottom, c = (a == null ? void 0 : a.position) || Ve.Top, u = hl(t, i, l), f = hl(n, a, c);
  return {
    sourceX: u.x,
    sourceY: u.y,
    targetX: f.x,
    targetY: f.y,
    sourcePosition: l,
    targetPosition: c
  };
}
function dv(e) {
  if (!e)
    return null;
  const t = [], n = [];
  for (const o of e)
    o.width = o.width ?? 1, o.height = o.height ?? 1, o.type === "source" ? t.push(o) : o.type === "target" && n.push(o);
  return {
    source: t,
    target: n
  };
}
function hl(e, t, n = Ve.Left, o = !1) {
  const r = ((t == null ? void 0 : t.x) ?? 0) + e.internals.positionAbsolute.x, i = ((t == null ? void 0 : t.y) ?? 0) + e.internals.positionAbsolute.y, { width: a, height: l } = t ?? Mr(e);
  if (o)
    return { x: r + a / 2, y: i + l / 2 };
  switch ((t == null ? void 0 : t.position) ?? n) {
    case Ve.Top:
      return { x: r + a / 2, y: i };
    case Ve.Right:
      return { x: r + a, y: i + l / 2 };
    case Ve.Bottom:
      return { x: r + a / 2, y: i + l };
    case Ve.Left:
      return { x: r, y: i + l / 2 };
  }
}
function fv(e, t) {
  return e && (t ? e.find((n) => n.id === t) : e[0]) || null;
}
function wh(e, t) {
  return e ? typeof e == "string" ? e : `${t ? `${t}__` : ""}${Object.keys(e).sort().map((o) => `${o}=${e[o]}`).join("&")}` : "";
}
function PW(e, { id: t, defaultColor: n, defaultMarkerStart: o, defaultMarkerEnd: r }) {
  const i = /* @__PURE__ */ new Set();
  return e.reduce((a, l) => ([l.markerStart || o, l.markerEnd || r].forEach((c) => {
    if (c && typeof c == "object") {
      const u = wh(c, t);
      i.has(u) || (a.push({ id: u, color: c.color || n, ...c }), i.add(u));
    }
  }), a), []).sort((a, l) => a.id.localeCompare(l.id));
}
const ug = {
  nodeOrigin: [0, 0],
  nodeExtent: dl,
  elevateNodesOnSelect: !0,
  defaults: {}
}, NW = {
  ...ug,
  checkEquality: !0
};
function dg(e, t) {
  const n = { ...e };
  for (const o in t)
    t[o] !== void 0 && (n[o] = t[o]);
  return n;
}
function MW(e, t, n) {
  const o = dg(ug, n);
  for (const r of e.values())
    if (r.parentId)
      fg(r, e, t, o);
    else {
      const i = Hl(r, o.nodeOrigin), a = zs(r.extent) ? r.extent : o.nodeExtent, l = Li(i, a, Mr(r));
      r.internals.positionAbsolute = l;
    }
}
function Sh(e, t, n, o) {
  var c, u;
  const r = dg(NW, o);
  let i = e.length > 0;
  const a = new Map(t), l = r != null && r.elevateNodesOnSelect ? 1e3 : 0;
  t.clear(), n.clear();
  for (const f of e) {
    let d = a.get(f.id);
    if (r.checkEquality && f === (d == null ? void 0 : d.internals.userNode))
      t.set(f.id, d);
    else {
      const p = Hl(f, r.nodeOrigin), h = zs(f.extent) ? f.extent : r.nodeExtent, g = Li(p, h, Mr(f));
      d = {
        ...r.defaults,
        ...f,
        measured: {
          width: (c = f.measured) == null ? void 0 : c.width,
          height: (u = f.measured) == null ? void 0 : u.height
        },
        internals: {
          positionAbsolute: g,
          // if user re-initializes the node or removes `measured` for whatever reason, we reset the handleBounds so that the node gets re-measured
          handleBounds: f.measured ? d == null ? void 0 : d.internals.handleBounds : void 0,
          z: PE(f, l),
          userNode: f
        }
      }, t.set(f.id, d);
    }
    (d.measured === void 0 || d.measured.width === void 0 || d.measured.height === void 0) && !d.hidden && (i = !1), f.parentId && fg(d, t, n, o);
  }
  return i;
}
function _W(e, t) {
  if (!e.parentId)
    return;
  const n = t.get(e.parentId);
  n ? n.set(e.id, e) : t.set(e.parentId, /* @__PURE__ */ new Map([[e.id, e]]));
}
function fg(e, t, n, o) {
  const { elevateNodesOnSelect: r, nodeOrigin: i, nodeExtent: a } = dg(ug, o), l = e.parentId, c = t.get(l);
  if (!c) {
    console.warn(`Parent node ${l} not found. Please make sure that parent nodes are in front of their child nodes in the nodes array.`);
    return;
  }
  _W(e, n);
  const u = r ? 1e3 : 0, { x: f, y: d, z: p } = AW(e, c, i, a, u), { positionAbsolute: h } = e.internals, g = f !== h.x || d !== h.y;
  (g || p !== e.internals.z) && t.set(e.id, {
    ...e,
    internals: {
      ...e.internals,
      positionAbsolute: g ? { x: f, y: d } : h,
      z: p
    }
  });
}
function PE(e, t) {
  return (Bo(e.zIndex) ? e.zIndex : 0) + (e.selected ? t : 0);
}
function AW(e, t, n, o, r) {
  const { x: i, y: a } = t.internals.positionAbsolute, l = Mr(e), c = Hl(e, n), u = zs(e.extent) ? Li(c, e.extent, l) : c;
  let f = Li({ x: i + u.x, y: a + u.y }, o, l);
  e.extent === "parent" && (f = bE(f, l, t));
  const d = PE(e, r), p = t.internals.z ?? 0;
  return {
    x: f.x,
    y: f.y,
    z: p > d ? p : d
  };
}
function pg(e, t, n, o = [0, 0]) {
  var a;
  const r = [], i = /* @__PURE__ */ new Map();
  for (const l of e) {
    const c = t.get(l.parentId);
    if (!c)
      continue;
    const u = ((a = i.get(l.parentId)) == null ? void 0 : a.expandedRect) ?? Fs(c), f = xE(u, l.rect);
    i.set(l.parentId, { expandedRect: f, parent: c });
  }
  return i.size > 0 && i.forEach(({ expandedRect: l, parent: c }, u) => {
    var b;
    const f = c.internals.positionAbsolute, d = Mr(c), p = c.origin ?? o, h = l.x < f.x ? Math.round(Math.abs(f.x - l.x)) : 0, g = l.y < f.y ? Math.round(Math.abs(f.y - l.y)) : 0, m = Math.max(d.width, Math.round(l.width)), y = Math.max(d.height, Math.round(l.height)), x = (m - d.width) * p[0], T = (y - d.height) * p[1];
    (h > 0 || g > 0 || x || T) && (r.push({
      id: u,
      type: "position",
      position: {
        x: c.position.x - h + x,
        y: c.position.y - g + T
      }
    }), (b = n.get(u)) == null || b.forEach((w) => {
      e.some((S) => S.id === w.id) || r.push({
        id: w.id,
        type: "position",
        position: {
          x: w.position.x + h,
          y: w.position.y + g
        }
      });
    })), (d.width < l.width || d.height < l.height || h || g) && r.push({
      id: u,
      type: "dimensions",
      setAttributes: !0,
      dimensions: {
        width: m + (h ? p[0] * h - x : 0),
        height: y + (g ? p[1] * g - T : 0)
      }
    });
  }), r;
}
function DW(e, t, n, o, r, i) {
  const a = o == null ? void 0 : o.querySelector(".xyflow__viewport");
  let l = !1;
  if (!a)
    return { changes: [], updatedInternals: l };
  const c = [], u = window.getComputedStyle(a), { m22: f } = new window.DOMMatrixReadOnly(u.transform), d = [];
  for (const p of e.values()) {
    const h = t.get(p.id);
    if (!h)
      continue;
    if (h.hidden) {
      t.set(h.id, {
        ...h,
        internals: {
          ...h.internals,
          handleBounds: void 0
        }
      }), l = !0;
      continue;
    }
    const g = lg(p.nodeElement), m = h.measured.width !== g.width || h.measured.height !== g.height;
    if (!!(g.width && g.height && (m || !h.internals.handleBounds || p.force))) {
      const x = p.nodeElement.getBoundingClientRect(), T = zs(h.extent) ? h.extent : i;
      let { positionAbsolute: b } = h.internals;
      h.parentId && h.extent === "parent" ? b = bE(b, g, t.get(h.parentId)) : T && (b = Li(b, T, g));
      const w = {
        ...h,
        measured: g,
        internals: {
          ...h.internals,
          positionAbsolute: b,
          handleBounds: {
            source: sv("source", p.nodeElement, x, f, h.id),
            target: sv("target", p.nodeElement, x, f, h.id)
          }
        }
      };
      t.set(h.id, w), h.parentId && fg(w, t, n, { nodeOrigin: r }), l = !0, m && (c.push({
        id: h.id,
        type: "dimensions",
        dimensions: g
      }), h.expandParent && h.parentId && d.push({
        id: h.id,
        parentId: h.parentId,
        rect: Fs(w, r)
      }));
    }
  }
  if (d.length > 0) {
    const p = pg(d, t, n, r);
    c.push(...p);
  }
  return { changes: c, updatedInternals: l };
}
async function LW({ delta: e, panZoom: t, transform: n, translateExtent: o, width: r, height: i }) {
  if (!t || !e.x && !e.y)
    return Promise.resolve(!1);
  const a = await t.setViewportConstrained({
    x: n[0] + e.x,
    y: n[1] + e.y,
    zoom: n[2]
  }, [
    [0, 0],
    [r, i]
  ], o), l = !!a && (a.x !== n[0] || a.y !== n[1] || a.k !== n[2]);
  return Promise.resolve(l);
}
function pv(e, t, n, o, r, i) {
  let a = r;
  const l = o.get(a) || /* @__PURE__ */ new Map();
  o.set(a, l.set(n, t)), a = `${r}-${e}`;
  const c = o.get(a) || /* @__PURE__ */ new Map();
  if (o.set(a, c.set(n, t)), i) {
    a = `${r}-${e}-${i}`;
    const u = o.get(a) || /* @__PURE__ */ new Map();
    o.set(a, u.set(n, t));
  }
}
function NE(e, t, n) {
  e.clear(), t.clear();
  for (const o of n) {
    const { source: r, target: i, sourceHandle: a = null, targetHandle: l = null } = o, c = { edgeId: o.id, source: r, target: i, sourceHandle: a, targetHandle: l }, u = `${r}-${a}--${i}-${l}`, f = `${i}-${l}--${r}-${a}`;
    pv("source", c, f, e, r, a), pv("target", c, u, e, i, l), t.set(o.id, o);
  }
}
function ME(e, t) {
  if (!e.parentId)
    return !1;
  const n = t.get(e.parentId);
  return n ? n.selected ? !0 : ME(n, t) : !1;
}
function hv(e, t, n) {
  var r;
  let o = e;
  do {
    if ((r = o == null ? void 0 : o.matches) != null && r.call(o, t))
      return !0;
    if (o === n)
      return !1;
    o = o == null ? void 0 : o.parentElement;
  } while (o);
  return !1;
}
function BW(e, t, n, o) {
  const r = /* @__PURE__ */ new Map();
  for (const [i, a] of e)
    if ((a.selected || a.id === o) && (!a.parentId || !ME(a, e)) && (a.draggable || t && typeof a.draggable > "u")) {
      const l = e.get(i);
      l && r.set(i, {
        id: i,
        position: l.position || { x: 0, y: 0 },
        distance: {
          x: n.x - l.internals.positionAbsolute.x,
          y: n.y - l.internals.positionAbsolute.y
        },
        extent: l.extent,
        parentId: l.parentId,
        origin: l.origin,
        expandParent: l.expandParent,
        internals: {
          positionAbsolute: l.internals.positionAbsolute || { x: 0, y: 0 }
        },
        measured: {
          width: l.measured.width ?? 0,
          height: l.measured.height ?? 0
        }
      });
    }
  return r;
}
function sp({ nodeId: e, dragItems: t, nodeLookup: n, dragging: o = !0 }) {
  var a, l, c;
  const r = [];
  for (const [u, f] of t) {
    const d = (a = n.get(u)) == null ? void 0 : a.internals.userNode;
    d && r.push({
      ...d,
      position: f.position,
      dragging: o
    });
  }
  if (!e)
    return [r[0], r];
  const i = (l = n.get(e)) == null ? void 0 : l.internals.userNode;
  return [
    i ? {
      ...i,
      position: ((c = t.get(e)) == null ? void 0 : c.position) || i.position,
      dragging: o
    } : r[0],
    r
  ];
}
function FW({ onNodeMouseDown: e, getStoreItems: t, onDragStart: n, onDrag: o, onDragStop: r }) {
  let i = { x: null, y: null }, a = 0, l = /* @__PURE__ */ new Map(), c = !1, u = { x: 0, y: 0 }, f = null, d = !1, p = null, h = !1;
  function g({ noDragClassName: y, handleSelector: x, domNode: T, isSelectable: b, nodeId: w, nodeClickDistance: S = 0 }) {
    p = ao(T);
    function E({ x: v, y: I }, k) {
      const { nodeLookup: A, nodeExtent: O, snapGrid: _, snapToGrid: N, nodeOrigin: L, onNodeDrag: F, onSelectionDrag: D, onError: B, updateNodePositions: z } = t();
      i = { x: v, y: I };
      let U = !1, q = { x: 0, y: 0, x2: 0, y2: 0 };
      if (l.size > 1 && O) {
        const Y = Wl(l);
        q = vh(Y);
      }
      for (const [Y, K] of l) {
        if (!A.has(Y))
          continue;
        let te = { x: v - K.distance.x, y: I - K.distance.y };
        N && (te = Jd(te, _));
        let ne = [
          [O[0][0], O[0][1]],
          [O[1][0], O[1][1]]
        ];
        if (l.size > 1 && O && !K.extent) {
          const { positionAbsolute: G } = K.internals, re = G.x - q.x + O[0][0], V = G.x + K.measured.width - q.x2 + O[1][0], de = G.y - q.y + O[0][1], ue = G.y + K.measured.height - q.y2 + O[1][1];
          ne = [
            [re, de],
            [V, ue]
          ];
        }
        const { position: W, positionAbsolute: ee } = yE({
          nodeId: Y,
          nextPosition: te,
          nodeLookup: A,
          nodeExtent: ne,
          nodeOrigin: L,
          onError: B
        });
        U = U || K.position.x !== W.x || K.position.y !== W.y, K.position = W, K.internals.positionAbsolute = ee;
      }
      if (U && (z(l, !0), k && (o || F || !w && D))) {
        const [Y, K] = sp({
          nodeId: w,
          dragItems: l,
          nodeLookup: A
        });
        o == null || o(k, l, Y, K), F == null || F(k, Y, K), w || D == null || D(k, K);
      }
    }
    async function C() {
      if (!f)
        return;
      const { transform: v, panBy: I, autoPanSpeed: k, autoPanOnNodeDrag: A } = t();
      if (!A) {
        c = !1, cancelAnimationFrame(a);
        return;
      }
      const [O, _] = vE(u, f, k);
      (O !== 0 || _ !== 0) && (i.x = (i.x ?? 0) - O / v[2], i.y = (i.y ?? 0) - _ / v[2], await I({ x: O, y: _ }) && E(i, null)), a = requestAnimationFrame(C);
    }
    function R(v) {
      var U;
      const { nodeLookup: I, multiSelectionActive: k, nodesDraggable: A, transform: O, snapGrid: _, snapToGrid: N, selectNodesOnDrag: L, onNodeDragStart: F, onSelectionDragStart: D, unselectNodesAndEdges: B } = t();
      d = !0, (!L || !b) && !k && w && ((U = I.get(w)) != null && U.selected || B()), b && L && w && (e == null || e(w));
      const z = za(v.sourceEvent, { transform: O, snapGrid: _, snapToGrid: N, containerBounds: f });
      if (i = z, l = BW(I, A, z, w), l.size > 0 && (n || F || !w && D)) {
        const [q, Y] = sp({
          nodeId: w,
          dragItems: l,
          nodeLookup: I
        });
        n == null || n(v.sourceEvent, l, q, Y), F == null || F(v.sourceEvent, q, Y), w || D == null || D(v.sourceEvent, Y);
      }
    }
    const M = XT().clickDistance(S).on("start", (v) => {
      const { domNode: I, nodeDragThreshold: k, transform: A, snapGrid: O, snapToGrid: _ } = t();
      f = (I == null ? void 0 : I.getBoundingClientRect()) || null, h = !1, k === 0 && R(v), i = za(v.sourceEvent, { transform: A, snapGrid: O, snapToGrid: _, containerBounds: f }), u = Tr(v.sourceEvent, f);
    }).on("drag", (v) => {
      const { autoPanOnNodeDrag: I, transform: k, snapGrid: A, snapToGrid: O, nodeDragThreshold: _, nodeLookup: N } = t(), L = za(v.sourceEvent, { transform: k, snapGrid: A, snapToGrid: O, containerBounds: f });
      if ((v.sourceEvent.type === "touchmove" && v.sourceEvent.touches.length > 1 || // if user deletes a node while dragging, we need to abort the drag to prevent errors
      w && !N.has(w)) && (h = !0), !h) {
        if (!c && I && d && (c = !0, C()), !d) {
          const F = L.xSnapped - (i.x ?? 0), D = L.ySnapped - (i.y ?? 0);
          Math.sqrt(F * F + D * D) > _ && R(v);
        }
        (i.x !== L.xSnapped || i.y !== L.ySnapped) && l && d && (u = Tr(v.sourceEvent, f), E(L, v.sourceEvent));
      }
    }).on("end", (v) => {
      if (!(!d || h) && (c = !1, d = !1, cancelAnimationFrame(a), l.size > 0)) {
        const { nodeLookup: I, updateNodePositions: k, onNodeDragStop: A, onSelectionDragStop: O } = t();
        if (k(l, !1), r || A || !w && O) {
          const [_, N] = sp({
            nodeId: w,
            dragItems: l,
            nodeLookup: I,
            dragging: !1
          });
          r == null || r(v.sourceEvent, l, _, N), A == null || A(v.sourceEvent, _, N), w || O == null || O(v.sourceEvent, N);
        }
      }
    }).filter((v) => {
      const I = v.target;
      return !v.button && (!y || !hv(I, `.${y}`, T)) && (!x || hv(I, x, T));
    });
    p.call(M);
  }
  function m() {
    p == null || p.on(".drag", null);
  }
  return {
    update: g,
    destroy: m
  };
}
function zW(e, t, n) {
  const o = [], r = {
    x: e.x - n,
    y: e.y - n,
    width: n * 2,
    height: n * 2
  };
  for (const i of t.values())
    pl(r, Fs(i)) > 0 && o.push(i);
  return o;
}
const jW = 250;
function VW(e, t, n, o) {
  var l, c;
  let r = [], i = 1 / 0;
  const a = zW(e, n, t + jW);
  for (const u of a) {
    const f = [...((l = u.internals.handleBounds) == null ? void 0 : l.source) ?? [], ...((c = u.internals.handleBounds) == null ? void 0 : c.target) ?? []];
    for (const d of f) {
      if (o.nodeId === d.nodeId && o.type === d.type && o.id === d.id)
        continue;
      const { x: p, y: h } = hl(u, d, d.position, !0), g = Math.sqrt(Math.pow(p - e.x, 2) + Math.pow(h - e.y, 2));
      g > t || (g < i ? (r = [{ ...d, x: p, y: h }], i = g) : g === i && r.push({ ...d, x: p, y: h }));
    }
  }
  if (!r.length)
    return null;
  if (r.length > 1) {
    const u = o.type === "source" ? "target" : "source";
    return r.find((f) => f.type === u) ?? r[0];
  }
  return r[0];
}
function _E(e, t, n, o, r, i = !1) {
  var u, f, d;
  const a = o.get(e);
  if (!a)
    return null;
  const l = r === "strict" ? (u = a.internals.handleBounds) == null ? void 0 : u[t] : [...((f = a.internals.handleBounds) == null ? void 0 : f.source) ?? [], ...((d = a.internals.handleBounds) == null ? void 0 : d.target) ?? []], c = (n ? l == null ? void 0 : l.find((p) => p.id === n) : l == null ? void 0 : l[0]) ?? null;
  return c && i ? { ...c, ...hl(a, c, c.position, !0) } : c;
}
function AE(e, t) {
  return e || (t != null && t.classList.contains("target") ? "target" : t != null && t.classList.contains("source") ? "source" : null);
}
function HW(e, t) {
  let n = null;
  return t ? n = !0 : e && !t && (n = !1), n;
}
const DE = () => !0;
function WW(e, { connectionMode: t, connectionRadius: n, handleId: o, nodeId: r, edgeUpdaterType: i, isTarget: a, domNode: l, nodeLookup: c, lib: u, autoPanOnConnect: f, flowId: d, panBy: p, cancelConnection: h, onConnectStart: g, onConnect: m, onConnectEnd: y, isValidConnection: x = DE, onReconnectEnd: T, updateConnection: b, getTransform: w, getFromHandle: S, autoPanSpeed: E }) {
  const C = TE(e.target);
  let R = 0, M;
  const { x: v, y: I } = Tr(e), k = C == null ? void 0 : C.elementFromPoint(v, I), A = AE(i, k), O = l == null ? void 0 : l.getBoundingClientRect();
  if (!O || !A)
    return;
  const _ = _E(r, A, o, c, t);
  if (!_)
    return;
  let N = Tr(e, O), L = !1, F = null, D = !1, B = null;
  function z() {
    if (!f || !O)
      return;
    const [ee, G] = vE(N, O, E);
    p({ x: ee, y: G }), R = requestAnimationFrame(z);
  }
  const U = {
    ..._,
    nodeId: r,
    type: A,
    position: _.position
  }, q = c.get(r), K = {
    inProgress: !0,
    isValid: null,
    from: hl(q, U, Ve.Left, !0),
    fromHandle: U,
    fromPosition: U.position,
    fromNode: q,
    to: N,
    toHandle: null,
    toPosition: nv[U.position],
    toNode: null
  };
  b(K);
  let te = K;
  g == null || g(e, { nodeId: r, handleId: o, handleType: A });
  function ne(ee) {
    if (!S() || !U) {
      W(ee);
      return;
    }
    const G = w();
    N = Tr(ee, O), M = VW(Ul(N, G, !1, [1, 1]), n, c, U), L || (z(), L = !0);
    const re = LE(ee, {
      handle: M,
      connectionMode: t,
      fromNodeId: r,
      fromHandleId: o,
      fromType: a ? "target" : "source",
      isValidConnection: x,
      doc: C,
      lib: u,
      flowId: d,
      nodeLookup: c
    });
    B = re.handleDomNode, F = re.connection, D = HW(!!M, re.isValid);
    const V = {
      // from stays the same
      ...te,
      isValid: D,
      to: re.toHandle && D ? Au({ x: re.toHandle.x, y: re.toHandle.y }, G) : N,
      toHandle: re.toHandle,
      toPosition: D && re.toHandle ? re.toHandle.position : nv[U.position],
      toNode: re.toHandle ? c.get(re.toHandle.nodeId) : null
    };
    D && M && te.toHandle && V.toHandle && te.toHandle.type === V.toHandle.type && te.toHandle.nodeId === V.toHandle.nodeId && te.toHandle.id === V.toHandle.id && te.to.x === V.to.x && te.to.y === V.to.y || (b(V), te = V);
  }
  function W(ee) {
    (M || B) && F && D && (m == null || m(F));
    const { inProgress: G, ...re } = te, V = {
      ...re,
      toPosition: te.toHandle ? te.toPosition : null
    };
    y == null || y(ee, V), i && (T == null || T(ee, V)), h(), cancelAnimationFrame(R), L = !1, D = !1, F = null, B = null, C.removeEventListener("mousemove", ne), C.removeEventListener("mouseup", W), C.removeEventListener("touchmove", ne), C.removeEventListener("touchend", W);
  }
  C.addEventListener("mousemove", ne), C.addEventListener("mouseup", W), C.addEventListener("touchmove", ne), C.addEventListener("touchend", W);
}
function LE(e, { handle: t, connectionMode: n, fromNodeId: o, fromHandleId: r, fromType: i, doc: a, lib: l, flowId: c, isValidConnection: u = DE, nodeLookup: f }) {
  const d = i === "target", p = t ? a.querySelector(`.${l}-flow__handle[data-id="${c}-${t == null ? void 0 : t.nodeId}-${t == null ? void 0 : t.id}-${t == null ? void 0 : t.type}"]`) : null, { x: h, y: g } = Tr(e), m = a.elementFromPoint(h, g), y = m != null && m.classList.contains(`${l}-flow__handle`) ? m : p, x = {
    handleDomNode: y,
    isValid: !1,
    connection: null,
    toHandle: null
  };
  if (y) {
    const T = AE(void 0, y), b = y.getAttribute("data-nodeid"), w = y.getAttribute("data-handleid"), S = y.classList.contains("connectable"), E = y.classList.contains("connectableend");
    if (!b || !T)
      return x;
    const C = {
      source: d ? b : o,
      sourceHandle: d ? w : r,
      target: d ? o : b,
      targetHandle: d ? r : w
    };
    x.connection = C;
    const M = S && E && (n === Ds.Strict ? d && T === "source" || !d && T === "target" : b !== o || w !== r);
    x.isValid = M && u(C), x.toHandle = _E(b, T, w, f, n, !0);
  }
  return x;
}
const Th = {
  onPointerDown: WW,
  isValid: LE
};
function UW({ domNode: e, panZoom: t, getTransform: n, getViewScale: o }) {
  const r = ao(e);
  function i({ translateExtent: l, width: c, height: u, zoomStep: f = 10, pannable: d = !0, zoomable: p = !0, inversePan: h = !1 }) {
    const g = (b) => {
      const w = n();
      if (b.sourceEvent.type !== "wheel" || !t)
        return;
      const S = -b.sourceEvent.deltaY * (b.sourceEvent.deltaMode === 1 ? 0.05 : b.sourceEvent.deltaMode ? 1 : 2e-3) * f, E = w[2] * Math.pow(2, S);
      t.scaleTo(E);
    };
    let m = [0, 0];
    const y = (b) => {
      (b.sourceEvent.type === "mousedown" || b.sourceEvent.type === "touchstart") && (m = [
        b.sourceEvent.clientX ?? b.sourceEvent.touches[0].clientX,
        b.sourceEvent.clientY ?? b.sourceEvent.touches[0].clientY
      ]);
    }, x = (b) => {
      const w = n();
      if (b.sourceEvent.type !== "mousemove" && b.sourceEvent.type !== "touchmove" || !t)
        return;
      const S = [
        b.sourceEvent.clientX ?? b.sourceEvent.touches[0].clientX,
        b.sourceEvent.clientY ?? b.sourceEvent.touches[0].clientY
      ], E = [S[0] - m[0], S[1] - m[1]];
      m = S;
      const C = o() * Math.max(w[2], Math.log(w[2])) * (h ? -1 : 1), R = {
        x: w[0] - E[0] * C,
        y: w[1] - E[1] * C
      }, M = [
        [0, 0],
        [c, u]
      ];
      t.setViewportConstrained({
        x: R.x,
        y: R.y,
        zoom: w[2]
      }, M, l);
    }, T = dE().on("start", y).on("zoom", d ? x : null).on("zoom.wheel", p ? g : null);
    r.call(T, {});
  }
  function a() {
    r.on("zoom", null);
  }
  return {
    update: i,
    destroy: a,
    pointer: Ao
  };
}
const qW = (e, t) => e.x !== t.x || e.y !== t.y || e.zoom !== t.k, ef = (e) => ({
  x: e.x,
  y: e.y,
  zoom: e.k
}), ap = ({ x: e, y: t, zoom: n }) => Xd.translate(e, t).scale(n), fs = (e, t) => e.target.closest(`.${t}`), BE = (e, t) => t === 2 && Array.isArray(e) && e.includes(2), lp = (e, t = 0, n = () => {
}) => {
  const o = typeof t == "number" && t > 0;
  return o || n(), o ? e.transition().duration(t).on("end", n) : e;
}, FE = (e) => {
  const t = e.ctrlKey && Du() ? 10 : 1;
  return -e.deltaY * (e.deltaMode === 1 ? 0.05 : e.deltaMode ? 1 : 2e-3) * t;
};
function KW({ zoomPanValues: e, noWheelClassName: t, d3Selection: n, d3Zoom: o, panOnScrollMode: r, panOnScrollSpeed: i, zoomOnPinch: a, onPanZoomStart: l, onPanZoom: c, onPanZoomEnd: u }) {
  return (f) => {
    if (fs(f, t))
      return !1;
    f.preventDefault(), f.stopImmediatePropagation();
    const d = n.property("__zoom").k || 1;
    if (f.ctrlKey && a) {
      const y = Ao(f), x = FE(f), T = d * Math.pow(2, x);
      o.scaleTo(n, T, y, f);
      return;
    }
    const p = f.deltaMode === 1 ? 20 : 1;
    let h = r === ki.Vertical ? 0 : f.deltaX * p, g = r === ki.Horizontal ? 0 : f.deltaY * p;
    !Du() && f.shiftKey && r !== ki.Vertical && (h = f.deltaY * p, g = 0), o.translateBy(
      n,
      -(h / d) * i,
      -(g / d) * i,
      // @ts-ignore
      { internal: !0 }
    );
    const m = ef(n.property("__zoom"));
    clearTimeout(e.panScrollTimeout), e.isPanScrolling || (e.isPanScrolling = !0, l == null || l(f, m)), e.isPanScrolling && (c == null || c(f, m), e.panScrollTimeout = setTimeout(() => {
      u == null || u(f, m), e.isPanScrolling = !1;
    }, 150));
  };
}
function YW({ noWheelClassName: e, preventScrolling: t, d3ZoomHandler: n }) {
  return function(o, r) {
    const i = o.type === "wheel", a = !t && i && !o.ctrlKey, l = fs(o, e);
    if (o.ctrlKey && i && l && o.preventDefault(), a || l)
      return null;
    o.preventDefault(), n.call(this, o, r);
  };
}
function GW({ zoomPanValues: e, onDraggingChange: t, onPanZoomStart: n }) {
  return (o) => {
    var i, a, l;
    if ((i = o.sourceEvent) != null && i.internal)
      return;
    const r = ef(o.transform);
    e.mouseButton = ((a = o.sourceEvent) == null ? void 0 : a.button) || 0, e.isZoomingOrPanning = !0, e.prevViewport = r, ((l = o.sourceEvent) == null ? void 0 : l.type) === "mousedown" && t(!0), n && (n == null || n(o.sourceEvent, r));
  };
}
function XW({ zoomPanValues: e, panOnDrag: t, onPaneContextMenu: n, onTransformChange: o, onPanZoom: r }) {
  return (i) => {
    var a, l;
    e.usedRightMouseButton = !!(n && BE(t, e.mouseButton ?? 0)), (a = i.sourceEvent) != null && a.sync || o([i.transform.x, i.transform.y, i.transform.k]), r && !((l = i.sourceEvent) != null && l.internal) && (r == null || r(i.sourceEvent, ef(i.transform)));
  };
}
function ZW({ zoomPanValues: e, panOnDrag: t, panOnScroll: n, onDraggingChange: o, onPanZoomEnd: r, onPaneContextMenu: i }) {
  return (a) => {
    var l;
    if (!((l = a.sourceEvent) != null && l.internal) && (e.isZoomingOrPanning = !1, i && BE(t, e.mouseButton ?? 0) && !e.usedRightMouseButton && a.sourceEvent && i(a.sourceEvent), e.usedRightMouseButton = !1, o(!1), r && qW(e.prevViewport, a.transform))) {
      const c = ef(a.transform);
      e.prevViewport = c, clearTimeout(e.timerId), e.timerId = setTimeout(
        () => {
          r == null || r(a.sourceEvent, c);
        },
        // we need a setTimeout for panOnScroll to supress multiple end events fired during scroll
        n ? 150 : 0
      );
    }
  };
}
function QW({ zoomActivationKeyPressed: e, zoomOnScroll: t, zoomOnPinch: n, panOnDrag: o, panOnScroll: r, zoomOnDoubleClick: i, userSelectionActive: a, noWheelClassName: l, noPanClassName: c, lib: u }) {
  return (f) => {
    var g;
    const d = e || t, p = n && f.ctrlKey;
    if (f.button === 1 && f.type === "mousedown" && (fs(f, `${u}-flow__node`) || fs(f, `${u}-flow__edge`)))
      return !0;
    if (!o && !d && !r && !i && !n || a || fs(f, l) && f.type === "wheel" || fs(f, c) && (f.type !== "wheel" || r && f.type === "wheel" && !e) || !n && f.ctrlKey && f.type === "wheel")
      return !1;
    if (!n && f.type === "touchstart" && ((g = f.touches) == null ? void 0 : g.length) > 1)
      return f.preventDefault(), !1;
    if (!d && !r && !p && f.type === "wheel" || !o && (f.type === "mousedown" || f.type === "touchstart") || Array.isArray(o) && !o.includes(f.button) && f.type === "mousedown")
      return !1;
    const h = Array.isArray(o) && o.includes(f.button) || !f.button || f.button <= 1;
    return (!f.ctrlKey || f.type === "wheel") && h;
  };
}
function JW({ domNode: e, minZoom: t, maxZoom: n, paneClickDistance: o, translateExtent: r, viewport: i, onPanZoom: a, onPanZoomStart: l, onPanZoomEnd: c, onDraggingChange: u }) {
  const f = {
    isZoomingOrPanning: !1,
    usedRightMouseButton: !1,
    prevViewport: { x: 0, y: 0, zoom: 0 },
    mouseButton: 0,
    timerId: void 0,
    panScrollTimeout: void 0,
    isPanScrolling: !1
  }, d = e.getBoundingClientRect(), p = dE().clickDistance(!Bo(o) || o < 0 ? 0 : o).scaleExtent([t, n]).translateExtent(r), h = ao(e).call(p);
  b({
    x: i.x,
    y: i.y,
    zoom: Bs(i.zoom, t, n)
  }, [
    [0, 0],
    [d.width, d.height]
  ], r);
  const g = h.on("wheel.zoom"), m = h.on("dblclick.zoom");
  p.wheelDelta(FE);
  function y(k, A) {
    return h ? new Promise((O) => {
      p == null || p.transform(lp(h, A == null ? void 0 : A.duration, () => O(!0)), k);
    }) : Promise.resolve(!1);
  }
  function x({ noWheelClassName: k, noPanClassName: A, onPaneContextMenu: O, userSelectionActive: _, panOnScroll: N, panOnDrag: L, panOnScrollMode: F, panOnScrollSpeed: D, preventScrolling: B, zoomOnPinch: z, zoomOnScroll: U, zoomOnDoubleClick: q, zoomActivationKeyPressed: Y, lib: K, onTransformChange: te }) {
    _ && !f.isZoomingOrPanning && T();
    const W = N && !Y && !_ ? KW({
      zoomPanValues: f,
      noWheelClassName: k,
      d3Selection: h,
      d3Zoom: p,
      panOnScrollMode: F,
      panOnScrollSpeed: D,
      zoomOnPinch: z,
      onPanZoomStart: l,
      onPanZoom: a,
      onPanZoomEnd: c
    }) : YW({
      noWheelClassName: k,
      preventScrolling: B,
      d3ZoomHandler: g
    });
    if (h.on("wheel.zoom", W, { passive: !1 }), !_) {
      const G = GW({
        zoomPanValues: f,
        onDraggingChange: u,
        onPanZoomStart: l
      });
      p.on("start", G);
      const re = XW({
        zoomPanValues: f,
        panOnDrag: L,
        onPaneContextMenu: !!O,
        onPanZoom: a,
        onTransformChange: te
      });
      p.on("zoom", re);
      const V = ZW({
        zoomPanValues: f,
        panOnDrag: L,
        panOnScroll: N,
        onPaneContextMenu: O,
        onPanZoomEnd: c,
        onDraggingChange: u
      });
      p.on("end", V);
    }
    const ee = QW({
      zoomActivationKeyPressed: Y,
      panOnDrag: L,
      zoomOnScroll: U,
      panOnScroll: N,
      zoomOnDoubleClick: q,
      zoomOnPinch: z,
      userSelectionActive: _,
      noPanClassName: A,
      noWheelClassName: k,
      lib: K
    });
    p.filter(ee), q ? h.on("dblclick.zoom", m) : h.on("dblclick.zoom", null);
  }
  function T() {
    p.on("zoom", null);
  }
  async function b(k, A, O) {
    const _ = ap(k), N = p == null ? void 0 : p.constrain()(_, A, O);
    return N && await y(N), new Promise((L) => L(N));
  }
  async function w(k, A) {
    const O = ap(k);
    return await y(O, A), new Promise((_) => _(O));
  }
  function S(k) {
    if (h) {
      const A = ap(k), O = h.property("__zoom");
      (O.k !== k.zoom || O.x !== k.x || O.y !== k.y) && (p == null || p.transform(h, A, null, { sync: !0 }));
    }
  }
  function E() {
    const k = h ? uE(h.node()) : { x: 0, y: 0, k: 1 };
    return { x: k.x, y: k.y, zoom: k.k };
  }
  function C(k, A) {
    return h ? new Promise((O) => {
      p == null || p.scaleTo(lp(h, A == null ? void 0 : A.duration, () => O(!0)), k);
    }) : Promise.resolve(!1);
  }
  function R(k, A) {
    return h ? new Promise((O) => {
      p == null || p.scaleBy(lp(h, A == null ? void 0 : A.duration, () => O(!0)), k);
    }) : Promise.resolve(!1);
  }
  function M(k) {
    p == null || p.scaleExtent(k);
  }
  function v(k) {
    p == null || p.translateExtent(k);
  }
  function I(k) {
    const A = !Bo(k) || k < 0 ? 0 : k;
    p == null || p.clickDistance(A);
  }
  return {
    update: x,
    destroy: T,
    setViewport: w,
    setViewportConstrained: b,
    getViewport: E,
    scaleTo: C,
    scaleBy: R,
    setScaleExtent: M,
    setTranslateExtent: v,
    syncViewport: S,
    setClickDistance: I
  };
}
var ja;
(function(e) {
  e.Line = "line", e.Handle = "handle";
})(ja || (ja = {}));
function e6({ width: e, prevWidth: t, height: n, prevHeight: o, affectsX: r, affectsY: i }) {
  const a = e - t, l = n - o, c = [a > 0 ? 1 : a < 0 ? -1 : 0, l > 0 ? 1 : l < 0 ? -1 : 0];
  return a && r && (c[0] = c[0] * -1), l && i && (c[1] = c[1] * -1), c;
}
function t6(e) {
  const t = e.includes("right") || e.includes("left"), n = e.includes("bottom") || e.includes("top"), o = e.includes("left"), r = e.includes("top");
  return {
    isHorizontal: t,
    isVertical: n,
    affectsX: o,
    affectsY: r
  };
}
function Fr(e, t) {
  return Math.max(0, t - e);
}
function zr(e, t) {
  return Math.max(0, e - t);
}
function Cc(e, t, n) {
  return Math.max(0, t - e, e - n);
}
function mv(e, t) {
  return e ? !t : t;
}
function n6(e, t, n, o, r, i, a, l) {
  let { affectsX: c, affectsY: u } = t;
  const { isHorizontal: f, isVertical: d } = t, p = f && d, { xSnapped: h, ySnapped: g } = n, { minWidth: m, maxWidth: y, minHeight: x, maxHeight: T } = o, { x: b, y: w, width: S, height: E, aspectRatio: C } = e;
  let R = Math.floor(f ? h - e.pointerX : 0), M = Math.floor(d ? g - e.pointerY : 0);
  const v = S + (c ? -R : R), I = E + (u ? -M : M), k = -i[0] * S, A = -i[1] * E;
  let O = Cc(v, m, y), _ = Cc(I, x, T);
  if (a) {
    let F = 0, D = 0;
    c && R < 0 ? F = Fr(b + R + k, a[0][0]) : !c && R > 0 && (F = zr(b + v + k, a[1][0])), u && M < 0 ? D = Fr(w + M + A, a[0][1]) : !u && M > 0 && (D = zr(w + I + A, a[1][1])), O = Math.max(O, F), _ = Math.max(_, D);
  }
  if (l) {
    let F = 0, D = 0;
    c && R > 0 ? F = zr(b + R, l[0][0]) : !c && R < 0 && (F = Fr(b + v, l[1][0])), u && M > 0 ? D = zr(w + M, l[0][1]) : !u && M < 0 && (D = Fr(w + I, l[1][1])), O = Math.max(O, F), _ = Math.max(_, D);
  }
  if (r) {
    if (f) {
      const F = Cc(v / C, x, T) * C;
      if (O = Math.max(O, F), a) {
        let D = 0;
        !c && !u || c && !u && p ? D = zr(w + A + v / C, a[1][1]) * C : D = Fr(w + A + (c ? R : -R) / C, a[0][1]) * C, O = Math.max(O, D);
      }
      if (l) {
        let D = 0;
        !c && !u || c && !u && p ? D = Fr(w + v / C, l[1][1]) * C : D = zr(w + (c ? R : -R) / C, l[0][1]) * C, O = Math.max(O, D);
      }
    }
    if (d) {
      const F = Cc(I * C, m, y) / C;
      if (_ = Math.max(_, F), a) {
        let D = 0;
        !c && !u || u && !c && p ? D = zr(b + I * C + k, a[1][0]) / C : D = Fr(b + (u ? M : -M) * C + k, a[0][0]) / C, _ = Math.max(_, D);
      }
      if (l) {
        let D = 0;
        !c && !u || u && !c && p ? D = Fr(b + I * C, l[1][0]) / C : D = zr(b + (u ? M : -M) * C, l[0][0]) / C, _ = Math.max(_, D);
      }
    }
  }
  M = M + (M < 0 ? _ : -_), R = R + (R < 0 ? O : -O), r && (p ? v > I * C ? M = (mv(c, u) ? -R : R) / C : R = (mv(c, u) ? -M : M) * C : f ? (M = R / C, u = c) : (R = M * C, c = u));
  const N = c ? b + R : b, L = u ? w + M : w;
  return {
    width: S + (c ? -R : R),
    height: E + (u ? -M : M),
    x: i[0] * R * (c ? -1 : 1) + N,
    y: i[1] * M * (u ? -1 : 1) + L
  };
}
const zE = { width: 0, height: 0, x: 0, y: 0 }, o6 = {
  ...zE,
  pointerX: 0,
  pointerY: 0,
  aspectRatio: 1
};
function r6(e) {
  return [
    [0, 0],
    [e.measured.width, e.measured.height]
  ];
}
function i6(e, t, n) {
  const o = t.position.x + e.position.x, r = t.position.y + e.position.y, i = e.measured.width ?? 0, a = e.measured.height ?? 0, l = n[0] * i, c = n[1] * a;
  return [
    [o - l, r - c],
    [o + i - l, r + a - c]
  ];
}
function s6({ domNode: e, nodeId: t, getStoreItems: n, onChange: o, onEnd: r }) {
  const i = ao(e);
  function a({ controlPosition: c, boundaries: u, keepAspectRatio: f, resizeDirection: d, onResizeStart: p, onResize: h, onResizeEnd: g, shouldResize: m }) {
    let y = { ...zE }, x = { ...o6 };
    const T = t6(c);
    let b, w = null, S = [], E, C, R;
    const M = XT().on("start", (v) => {
      const { nodeLookup: I, transform: k, snapGrid: A, snapToGrid: O, nodeOrigin: _, paneDomNode: N } = n();
      if (b = I.get(t), !b)
        return;
      w = (N == null ? void 0 : N.getBoundingClientRect()) ?? null;
      const { xSnapped: L, ySnapped: F } = za(v.sourceEvent, {
        transform: k,
        snapGrid: A,
        snapToGrid: O,
        containerBounds: w
      });
      y = {
        width: b.measured.width ?? 0,
        height: b.measured.height ?? 0,
        x: b.position.x ?? 0,
        y: b.position.y ?? 0
      }, x = {
        ...y,
        pointerX: L,
        pointerY: F,
        aspectRatio: y.width / y.height
      }, E = void 0, b.parentId && (b.extent === "parent" || b.expandParent) && (E = I.get(b.parentId), C = E && b.extent === "parent" ? r6(E) : void 0), S = [], R = void 0;
      for (const [D, B] of I)
        if (B.parentId === t && (S.push({
          id: D,
          position: { ...B.position },
          extent: B.extent
        }), B.extent === "parent" || B.expandParent)) {
          const z = i6(B, b, B.origin ?? _);
          R ? R = [
            [Math.min(z[0][0], R[0][0]), Math.min(z[0][1], R[0][1])],
            [Math.max(z[1][0], R[1][0]), Math.max(z[1][1], R[1][1])]
          ] : R = z;
        }
      p == null || p(v, { ...y });
    }).on("drag", (v) => {
      const { transform: I, snapGrid: k, snapToGrid: A, nodeOrigin: O } = n(), _ = za(v.sourceEvent, {
        transform: I,
        snapGrid: k,
        snapToGrid: A,
        containerBounds: w
      }), N = [];
      if (!b)
        return;
      const { x: L, y: F, width: D, height: B } = y, z = {}, U = b.origin ?? O, { width: q, height: Y, x: K, y: te } = n6(x, T, _, u, f, U, C, R), ne = q !== D, W = Y !== B, ee = K !== L && ne, G = te !== F && W;
      if (!ee && !G && !ne && !W)
        return;
      if ((ee || G || U[0] === 1 || U[1] === 1) && (z.x = ee ? K : y.x, z.y = G ? te : y.y, y.x = z.x, y.y = z.y, S.length > 0)) {
        const ue = K - L, xe = te - F;
        for (const Ae of S)
          Ae.position = {
            x: Ae.position.x - ue + U[0] * (q - D),
            y: Ae.position.y - xe + U[1] * (Y - B)
          }, N.push(Ae);
      }
      if ((ne || W) && (z.width = ne && (!d || d === "horizontal") ? q : y.width, z.height = W && (!d || d === "vertical") ? Y : y.height, y.width = z.width, y.height = z.height), E && b.expandParent) {
        const ue = U[0] * (z.width ?? 0);
        z.x && z.x < ue && (y.x = ue, x.x = x.x - (z.x - ue));
        const xe = U[1] * (z.height ?? 0);
        z.y && z.y < xe && (y.y = xe, x.y = x.y - (z.y - xe));
      }
      const re = e6({
        width: y.width,
        prevWidth: D,
        height: y.height,
        prevHeight: B,
        affectsX: T.affectsX,
        affectsY: T.affectsY
      }), V = { ...y, direction: re };
      (m == null ? void 0 : m(v, V)) !== !1 && (h == null || h(v, V), o(z, N));
    }).on("end", (v) => {
      g == null || g(v, { ...y }), r == null || r({ ...y });
    });
    i.call(M);
  }
  function l() {
    i.on(".drag", null);
  }
  return {
    update: a,
    destroy: l
  };
}
var Oc = { exports: {} }, cp = {}, $c = { exports: {} }, up = {};
/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var gv;
function a6() {
  if (gv) return up;
  gv = 1;
  var e = Z;
  function t(d, p) {
    return d === p && (d !== 0 || 1 / d === 1 / p) || d !== d && p !== p;
  }
  var n = typeof Object.is == "function" ? Object.is : t, o = e.useState, r = e.useEffect, i = e.useLayoutEffect, a = e.useDebugValue;
  function l(d, p) {
    var h = p(), g = o({ inst: { value: h, getSnapshot: p } }), m = g[0].inst, y = g[1];
    return i(
      function() {
        m.value = h, m.getSnapshot = p, c(m) && y({ inst: m });
      },
      [d, h, p]
    ), r(
      function() {
        return c(m) && y({ inst: m }), d(function() {
          c(m) && y({ inst: m });
        });
      },
      [d]
    ), a(h), h;
  }
  function c(d) {
    var p = d.getSnapshot;
    d = d.value;
    try {
      var h = p();
      return !n(d, h);
    } catch {
      return !0;
    }
  }
  function u(d, p) {
    return p();
  }
  var f = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? u : l;
  return up.useSyncExternalStore = e.useSyncExternalStore !== void 0 ? e.useSyncExternalStore : f, up;
}
var dp = {};
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var yv;
function l6() {
  return yv || (yv = 1, process.env.NODE_ENV !== "production" && function() {
    function e(h, g) {
      return h === g && (h !== 0 || 1 / h === 1 / g) || h !== h && g !== g;
    }
    function t(h, g) {
      f || r.startTransition === void 0 || (f = !0, console.error(
        "You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."
      ));
      var m = g();
      if (!d) {
        var y = g();
        i(m, y) || (console.error(
          "The result of getSnapshot should be cached to avoid an infinite loop"
        ), d = !0);
      }
      y = a({
        inst: { value: m, getSnapshot: g }
      });
      var x = y[0].inst, T = y[1];
      return c(
        function() {
          x.value = m, x.getSnapshot = g, n(x) && T({ inst: x });
        },
        [h, m, g]
      ), l(
        function() {
          return n(x) && T({ inst: x }), h(function() {
            n(x) && T({ inst: x });
          });
        },
        [h]
      ), u(m), m;
    }
    function n(h) {
      var g = h.getSnapshot;
      h = h.value;
      try {
        var m = g();
        return !i(h, m);
      } catch {
        return !0;
      }
    }
    function o(h, g) {
      return g();
    }
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var r = Z, i = typeof Object.is == "function" ? Object.is : e, a = r.useState, l = r.useEffect, c = r.useLayoutEffect, u = r.useDebugValue, f = !1, d = !1, p = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? o : t;
    dp.useSyncExternalStore = r.useSyncExternalStore !== void 0 ? r.useSyncExternalStore : p, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
  }()), dp;
}
var bv;
function jE() {
  return bv || (bv = 1, process.env.NODE_ENV === "production" ? $c.exports = a6() : $c.exports = l6()), $c.exports;
}
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var vv;
function c6() {
  if (vv) return cp;
  vv = 1;
  var e = Z, t = jE();
  function n(u, f) {
    return u === f && (u !== 0 || 1 / u === 1 / f) || u !== u && f !== f;
  }
  var o = typeof Object.is == "function" ? Object.is : n, r = t.useSyncExternalStore, i = e.useRef, a = e.useEffect, l = e.useMemo, c = e.useDebugValue;
  return cp.useSyncExternalStoreWithSelector = function(u, f, d, p, h) {
    var g = i(null);
    if (g.current === null) {
      var m = { hasValue: !1, value: null };
      g.current = m;
    } else m = g.current;
    g = l(
      function() {
        function x(E) {
          if (!T) {
            if (T = !0, b = E, E = p(E), h !== void 0 && m.hasValue) {
              var C = m.value;
              if (h(C, E))
                return w = C;
            }
            return w = E;
          }
          if (C = w, o(b, E)) return C;
          var R = p(E);
          return h !== void 0 && h(C, R) ? (b = E, C) : (b = E, w = R);
        }
        var T = !1, b, w, S = d === void 0 ? null : d;
        return [
          function() {
            return x(f());
          },
          S === null ? void 0 : function() {
            return x(S());
          }
        ];
      },
      [f, d, p, h]
    );
    var y = r(u, g[0], g[1]);
    return a(
      function() {
        m.hasValue = !0, m.value = y;
      },
      [y]
    ), c(y), y;
  }, cp;
}
var fp = {};
/**
 * @license React
 * use-sync-external-store-shim/with-selector.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var xv;
function u6() {
  return xv || (xv = 1, process.env.NODE_ENV !== "production" && function() {
    function e(u, f) {
      return u === f && (u !== 0 || 1 / u === 1 / f) || u !== u && f !== f;
    }
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var t = Z, n = jE(), o = typeof Object.is == "function" ? Object.is : e, r = n.useSyncExternalStore, i = t.useRef, a = t.useEffect, l = t.useMemo, c = t.useDebugValue;
    fp.useSyncExternalStoreWithSelector = function(u, f, d, p, h) {
      var g = i(null);
      if (g.current === null) {
        var m = { hasValue: !1, value: null };
        g.current = m;
      } else m = g.current;
      g = l(
        function() {
          function x(E) {
            if (!T) {
              if (T = !0, b = E, E = p(E), h !== void 0 && m.hasValue) {
                var C = m.value;
                if (h(C, E))
                  return w = C;
              }
              return w = E;
            }
            if (C = w, o(b, E))
              return C;
            var R = p(E);
            return h !== void 0 && h(C, R) ? (b = E, C) : (b = E, w = R);
          }
          var T = !1, b, w, S = d === void 0 ? null : d;
          return [
            function() {
              return x(f());
            },
            S === null ? void 0 : function() {
              return x(S());
            }
          ];
        },
        [f, d, p, h]
      );
      var y = r(u, g[0], g[1]);
      return a(
        function() {
          m.hasValue = !0, m.value = y;
        },
        [y]
      ), c(y), y;
    }, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
  }()), fp;
}
var wv;
function d6() {
  return wv || (wv = 1, process.env.NODE_ENV === "production" ? Oc.exports = c6() : Oc.exports = u6()), Oc.exports;
}
var f6 = d6();
const p6 = /* @__PURE__ */ tx(f6), h6 = {}, Sv = (e) => {
  let t;
  const n = /* @__PURE__ */ new Set(), o = (f, d) => {
    const p = typeof f == "function" ? f(t) : f;
    if (!Object.is(p, t)) {
      const h = t;
      t = d ?? (typeof p != "object" || p === null) ? p : Object.assign({}, t, p), n.forEach((g) => g(t, h));
    }
  }, r = () => t, c = { setState: o, getState: r, getInitialState: () => u, subscribe: (f) => (n.add(f), () => n.delete(f)), destroy: () => {
    (h6 ? "production" : void 0) !== "production" && console.warn(
      "[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."
    ), n.clear();
  } }, u = t = e(o, r, c);
  return c;
}, m6 = (e) => e ? Sv(e) : Sv, { useDebugValue: g6 } = Z, { useSyncExternalStoreWithSelector: y6 } = p6, b6 = (e) => e;
function VE(e, t = b6, n) {
  const o = y6(
    e.subscribe,
    e.getState,
    e.getServerState || e.getInitialState,
    t,
    n
  );
  return g6(o), o;
}
const Tv = (e, t) => {
  const n = m6(e), o = (r, i = t) => VE(n, r, i);
  return Object.assign(o, n), o;
}, v6 = (e, t) => e ? Tv(e, t) : Tv;
function Yt(e, t) {
  if (Object.is(e, t))
    return !0;
  if (typeof e != "object" || e === null || typeof t != "object" || t === null)
    return !1;
  if (e instanceof Map && t instanceof Map) {
    if (e.size !== t.size) return !1;
    for (const [o, r] of e)
      if (!Object.is(r, t.get(o)))
        return !1;
    return !0;
  }
  if (e instanceof Set && t instanceof Set) {
    if (e.size !== t.size) return !1;
    for (const o of e)
      if (!t.has(o))
        return !1;
    return !0;
  }
  const n = Object.keys(e);
  if (n.length !== Object.keys(t).length)
    return !1;
  for (const o of n)
    if (!Object.prototype.hasOwnProperty.call(t, o) || !Object.is(e[o], t[o]))
      return !1;
  return !0;
}
const tf = bl(null), x6 = tf.Provider, HE = Vn.error001();
function ht(e, t) {
  const n = Qr(tf);
  if (n === null)
    throw new Error(HE);
  return VE(n, e, t);
}
function qt() {
  const e = Qr(tf);
  if (e === null)
    throw new Error(HE);
  return Qe(() => ({
    getState: e.getState,
    setState: e.setState,
    subscribe: e.subscribe
  }), [e]);
}
const Ev = { display: "none" }, w6 = {
  position: "absolute",
  width: 1,
  height: 1,
  margin: -1,
  border: 0,
  padding: 0,
  overflow: "hidden",
  clip: "rect(0px, 0px, 0px, 0px)",
  clipPath: "inset(100%)"
}, WE = "react-flow__node-desc", UE = "react-flow__edge-desc", S6 = "react-flow__aria-live", T6 = (e) => e.ariaLiveMessage;
function E6({ rfId: e }) {
  const t = ht(T6);
  return $("div", { id: `${S6}-${e}`, "aria-live": "assertive", "aria-atomic": "true", style: w6, children: t });
}
function C6({ rfId: e, disableKeyboardA11y: t }) {
  return Te(mo, { children: [Te("div", { id: `${WE}-${e}`, style: Ev, children: ["Press enter or space to select a node.", !t && "You can then use the arrow keys to move the node around.", " Press delete to remove it and escape to cancel.", " "] }), $("div", { id: `${UE}-${e}`, style: Ev, children: "Press enter or space to select an edge. You can then press delete to remove it or escape to cancel." }), !t && $(E6, { rfId: e })] });
}
const O6 = (e) => e.userSelectionActive ? "none" : "all", ql = yl(({ position: e = "top-left", children: t, className: n, style: o, ...r }, i) => {
  const a = ht(O6), l = `${e}`.split("-");
  return $("div", { className: pn(["react-flow__panel", n, ...l]), style: { ...o, pointerEvents: a }, ref: i, ...r, children: t });
});
ql.displayName = "Panel";
function $6({ proOptions: e, position: t = "bottom-right" }) {
  return e != null && e.hideAttribution ? null : $(ql, { position: t, className: "react-flow__attribution", "data-message": "Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev", children: $("a", { href: "https://reactflow.dev", target: "_blank", rel: "noopener noreferrer", "aria-label": "React Flow attribution", children: "React Flow" }) });
}
const I6 = (e) => {
  const t = [], n = [];
  for (const [, o] of e.nodeLookup)
    o.selected && t.push(o.internals.userNode);
  for (const [, o] of e.edgeLookup)
    o.selected && n.push(o);
  return { selectedNodes: t, selectedEdges: n };
}, Ic = (e) => e.id;
function R6(e, t) {
  return Yt(e.selectedNodes.map(Ic), t.selectedNodes.map(Ic)) && Yt(e.selectedEdges.map(Ic), t.selectedEdges.map(Ic));
}
function k6({ onSelectionChange: e }) {
  const t = qt(), { selectedNodes: n, selectedEdges: o } = ht(I6, R6);
  return dt(() => {
    const r = { nodes: n, edges: o };
    e == null || e(r), t.getState().onSelectionChangeHandlers.forEach((i) => i(r));
  }, [n, o, e]), null;
}
const P6 = (e) => !!e.onSelectionChangeHandlers;
function N6({ onSelectionChange: e }) {
  const t = ht(P6);
  return e || t ? $(k6, { onSelectionChange: e }) : null;
}
const qE = [0, 0], M6 = { x: 0, y: 0, zoom: 1 }, _6 = [
  "nodes",
  "edges",
  "defaultNodes",
  "defaultEdges",
  "onConnect",
  "onConnectStart",
  "onConnectEnd",
  "onClickConnectStart",
  "onClickConnectEnd",
  "nodesDraggable",
  "nodesConnectable",
  "nodesFocusable",
  "edgesFocusable",
  "edgesReconnectable",
  "elevateNodesOnSelect",
  "elevateEdgesOnSelect",
  "minZoom",
  "maxZoom",
  "nodeExtent",
  "onNodesChange",
  "onEdgesChange",
  "elementsSelectable",
  "connectionMode",
  "snapGrid",
  "snapToGrid",
  "translateExtent",
  "connectOnClick",
  "defaultEdgeOptions",
  "fitView",
  "fitViewOptions",
  "onNodesDelete",
  "onEdgesDelete",
  "onDelete",
  "onNodeDrag",
  "onNodeDragStart",
  "onNodeDragStop",
  "onSelectionDrag",
  "onSelectionDragStart",
  "onSelectionDragStop",
  "onMoveStart",
  "onMove",
  "onMoveEnd",
  "noPanClassName",
  "nodeOrigin",
  "autoPanOnConnect",
  "autoPanOnNodeDrag",
  "onError",
  "connectionRadius",
  "isValidConnection",
  "selectNodesOnDrag",
  "nodeDragThreshold",
  "onBeforeDelete",
  "debug",
  "autoPanSpeed",
  "paneClickDistance"
], Cv = [..._6, "rfId"], A6 = (e) => ({
  setNodes: e.setNodes,
  setEdges: e.setEdges,
  setMinZoom: e.setMinZoom,
  setMaxZoom: e.setMaxZoom,
  setTranslateExtent: e.setTranslateExtent,
  setNodeExtent: e.setNodeExtent,
  reset: e.reset,
  setDefaultNodesAndEdges: e.setDefaultNodesAndEdges,
  setPaneClickDistance: e.setPaneClickDistance
}), Ov = {
  /*
   * these are values that are also passed directly to other components
   * than the StoreUpdater. We can reduce the number of setStore calls
   * by setting the same values here as prev fields.
   */
  translateExtent: dl,
  nodeOrigin: qE,
  minZoom: 0.5,
  maxZoom: 2,
  elementsSelectable: !0,
  noPanClassName: "nopan",
  rfId: "1",
  paneClickDistance: 0
};
function D6(e) {
  const { setNodes: t, setEdges: n, setMinZoom: o, setMaxZoom: r, setTranslateExtent: i, setNodeExtent: a, reset: l, setDefaultNodesAndEdges: c, setPaneClickDistance: u } = ht(A6, Yt), f = qt();
  dt(() => (c(e.defaultNodes, e.defaultEdges), () => {
    d.current = Ov, l();
  }), []);
  const d = et(Ov);
  return dt(
    () => {
      for (const p of Cv) {
        const h = e[p], g = d.current[p];
        h !== g && (typeof e[p] > "u" || (p === "nodes" ? t(h) : p === "edges" ? n(h) : p === "minZoom" ? o(h) : p === "maxZoom" ? r(h) : p === "translateExtent" ? i(h) : p === "nodeExtent" ? a(h) : p === "paneClickDistance" ? u(h) : p === "fitView" ? f.setState({ fitViewQueued: h }) : p === "fitViewOptions" ? f.setState({ fitViewOptions: h }) : f.setState({ [p]: h })));
      }
      d.current = e;
    },
    // Only re-run the effect if one of the fields we track changes
    Cv.map((p) => e[p])
  ), null;
}
function $v() {
  return typeof window > "u" || !window.matchMedia ? null : window.matchMedia("(prefers-color-scheme: dark)");
}
function L6(e) {
  var o;
  const [t, n] = yn(e === "system" ? null : e);
  return dt(() => {
    if (e !== "system") {
      n(e);
      return;
    }
    const r = $v(), i = () => n(r != null && r.matches ? "dark" : "light");
    return i(), r == null || r.addEventListener("change", i), () => {
      r == null || r.removeEventListener("change", i);
    };
  }, [e]), t !== null ? t : (o = $v()) != null && o.matches ? "dark" : "light";
}
const Iv = typeof document < "u" ? document : null;
function ml(e = null, t = { target: Iv, actInsideInputWithModifier: !0 }) {
  const [n, o] = yn(!1), r = et(!1), i = et(/* @__PURE__ */ new Set([])), [a, l] = Qe(() => {
    if (e !== null) {
      const u = (Array.isArray(e) ? e : [e]).filter((d) => typeof d == "string").map((d) => d.replace("+", `
`).replace(`

`, `
+`).split(`
`)), f = u.reduce((d, p) => d.concat(...p), []);
      return [u, f];
    }
    return [[], []];
  }, [e]);
  return dt(() => {
    const c = (t == null ? void 0 : t.target) ?? Iv, u = (t == null ? void 0 : t.actInsideInputWithModifier) ?? !0;
    if (e !== null) {
      const f = (h) => {
        var y, x;
        if (r.current = h.ctrlKey || h.metaKey || h.shiftKey || h.altKey, (!r.current || r.current && !u) && EE(h))
          return !1;
        const m = kv(h.code, l);
        if (i.current.add(h[m]), Rv(a, i.current, !1)) {
          const T = ((x = (y = h.composedPath) == null ? void 0 : y.call(h)) == null ? void 0 : x[0]) || h.target, b = (T == null ? void 0 : T.nodeName) === "BUTTON" || (T == null ? void 0 : T.nodeName) === "A";
          t.preventDefault !== !1 && (r.current || !b) && h.preventDefault(), o(!0);
        }
      }, d = (h) => {
        const g = kv(h.code, l);
        Rv(a, i.current, !0) ? (o(!1), i.current.clear()) : i.current.delete(h[g]), h.key === "Meta" && i.current.clear(), r.current = !1;
      }, p = () => {
        i.current.clear(), o(!1);
      };
      return c == null || c.addEventListener("keydown", f), c == null || c.addEventListener("keyup", d), window.addEventListener("blur", p), window.addEventListener("contextmenu", p), () => {
        c == null || c.removeEventListener("keydown", f), c == null || c.removeEventListener("keyup", d), window.removeEventListener("blur", p), window.removeEventListener("contextmenu", p);
      };
    }
  }, [e, o]), n;
}
function Rv(e, t, n) {
  return e.filter((o) => n || o.length === t.size).some((o) => o.every((r) => t.has(r)));
}
function kv(e, t) {
  return t.includes(e) ? "code" : "key";
}
const B6 = () => {
  const e = qt();
  return Qe(() => ({
    zoomIn: (t) => {
      const { panZoom: n } = e.getState();
      return n ? n.scaleBy(1.2, { duration: t == null ? void 0 : t.duration }) : Promise.resolve(!1);
    },
    zoomOut: (t) => {
      const { panZoom: n } = e.getState();
      return n ? n.scaleBy(1 / 1.2, { duration: t == null ? void 0 : t.duration }) : Promise.resolve(!1);
    },
    zoomTo: (t, n) => {
      const { panZoom: o } = e.getState();
      return o ? o.scaleTo(t, { duration: n == null ? void 0 : n.duration }) : Promise.resolve(!1);
    },
    getZoom: () => e.getState().transform[2],
    setViewport: async (t, n) => {
      const { transform: [o, r, i], panZoom: a } = e.getState();
      return a ? (await a.setViewport({
        x: t.x ?? o,
        y: t.y ?? r,
        zoom: t.zoom ?? i
      }, { duration: n == null ? void 0 : n.duration }), Promise.resolve(!0)) : Promise.resolve(!1);
    },
    getViewport: () => {
      const [t, n, o] = e.getState().transform;
      return { x: t, y: n, zoom: o };
    },
    setCenter: async (t, n, o) => {
      const { width: r, height: i, maxZoom: a, panZoom: l } = e.getState(), c = typeof (o == null ? void 0 : o.zoom) < "u" ? o.zoom : a, u = r / 2 - t * c, f = i / 2 - n * c;
      return l ? (await l.setViewport({
        x: u,
        y: f,
        zoom: c
      }, { duration: o == null ? void 0 : o.duration }), Promise.resolve(!0)) : Promise.resolve(!1);
    },
    fitBounds: async (t, n) => {
      const { width: o, height: r, minZoom: i, maxZoom: a, panZoom: l } = e.getState(), c = ag(t, o, r, i, a, (n == null ? void 0 : n.padding) ?? 0.1);
      return l ? (await l.setViewport(c, { duration: n == null ? void 0 : n.duration }), Promise.resolve(!0)) : Promise.resolve(!1);
    },
    screenToFlowPosition: (t, n = {}) => {
      const { transform: o, snapGrid: r, snapToGrid: i, domNode: a } = e.getState();
      if (!a)
        return t;
      const { x: l, y: c } = a.getBoundingClientRect(), u = {
        x: t.x - l,
        y: t.y - c
      }, f = n.snapGrid ?? r, d = n.snapToGrid ?? i;
      return Ul(u, o, d, f);
    },
    flowToScreenPosition: (t) => {
      const { transform: n, domNode: o } = e.getState();
      if (!o)
        return t;
      const { x: r, y: i } = o.getBoundingClientRect(), a = Au(t, n);
      return {
        x: a.x + r,
        y: a.y + i
      };
    }
  }), []);
};
function KE(e, t) {
  const n = [], o = /* @__PURE__ */ new Map(), r = [];
  for (const i of e)
    if (i.type === "add") {
      r.push(i);
      continue;
    } else if (i.type === "remove" || i.type === "replace")
      o.set(i.id, [i]);
    else {
      const a = o.get(i.id);
      a ? a.push(i) : o.set(i.id, [i]);
    }
  for (const i of t) {
    const a = o.get(i.id);
    if (!a) {
      n.push(i);
      continue;
    }
    if (a[0].type === "remove")
      continue;
    if (a[0].type === "replace") {
      n.push({ ...a[0].item });
      continue;
    }
    const l = { ...i };
    for (const c of a)
      F6(c, l);
    n.push(l);
  }
  return r.length && r.forEach((i) => {
    i.index !== void 0 ? n.splice(i.index, 0, { ...i.item }) : n.push({ ...i.item });
  }), n;
}
function F6(e, t) {
  switch (e.type) {
    case "select": {
      t.selected = e.selected;
      break;
    }
    case "position": {
      typeof e.position < "u" && (t.position = e.position), typeof e.dragging < "u" && (t.dragging = e.dragging);
      break;
    }
    case "dimensions": {
      typeof e.dimensions < "u" && (t.measured ?? (t.measured = {}), t.measured.width = e.dimensions.width, t.measured.height = e.dimensions.height, e.setAttributes && ((e.setAttributes === !0 || e.setAttributes === "width") && (t.width = e.dimensions.width), (e.setAttributes === !0 || e.setAttributes === "height") && (t.height = e.dimensions.height))), typeof e.resizing == "boolean" && (t.resizing = e.resizing);
      break;
    }
  }
}
function z6(e, t) {
  return KE(e, t);
}
function j6(e, t) {
  return KE(e, t);
}
function wi(e, t) {
  return {
    id: e,
    type: "select",
    selected: t
  };
}
function ps(e, t = /* @__PURE__ */ new Set(), n = !1) {
  const o = [];
  for (const [r, i] of e) {
    const a = t.has(r);
    !(i.selected === void 0 && !a) && i.selected !== a && (n && (i.selected = a), o.push(wi(i.id, a)));
  }
  return o;
}
function Pv({ items: e = [], lookup: t }) {
  var r;
  const n = [], o = new Map(e.map((i) => [i.id, i]));
  for (const [i, a] of e.entries()) {
    const l = t.get(a.id), c = ((r = l == null ? void 0 : l.internals) == null ? void 0 : r.userNode) ?? l;
    c !== void 0 && c !== a && n.push({ id: a.id, item: a, type: "replace" }), c === void 0 && n.push({ item: a, type: "add", index: i });
  }
  for (const [i] of t)
    o.get(i) === void 0 && n.push({ id: i, type: "remove" });
  return n;
}
function Nv(e) {
  return {
    id: e.id,
    type: "remove"
  };
}
const Mv = (e) => fW(e), V6 = (e) => mE(e);
function YE(e) {
  return yl(e);
}
const H6 = typeof window < "u" ? Jv : dt;
function _v(e) {
  const [t, n] = yn(BigInt(0)), [o] = yn(() => W6(() => n((r) => r + BigInt(1))));
  return H6(() => {
    const r = o.get();
    r.length && (e(r), o.reset());
  }, [t]), o;
}
function W6(e) {
  let t = [];
  return {
    get: () => t,
    reset: () => {
      t = [];
    },
    push: (n) => {
      t.push(n), e();
    }
  };
}
const GE = bl(null);
function U6({ children: e }) {
  const t = qt(), n = ze((l) => {
    const { nodes: c = [], setNodes: u, hasDefaultNodes: f, onNodesChange: d, nodeLookup: p, fitViewQueued: h } = t.getState();
    let g = c;
    for (const y of l)
      g = typeof y == "function" ? y(g) : y;
    const m = Pv({
      items: g,
      lookup: p
    });
    f && u(g), m.length > 0 ? d == null || d(m) : h && window.requestAnimationFrame(() => {
      const { fitViewQueued: y, nodes: x, setNodes: T } = t.getState();
      y && T(x);
    });
  }, []), o = _v(n), r = ze((l) => {
    const { edges: c = [], setEdges: u, hasDefaultEdges: f, onEdgesChange: d, edgeLookup: p } = t.getState();
    let h = c;
    for (const g of l)
      h = typeof g == "function" ? g(h) : g;
    f ? u(h) : d && d(Pv({
      items: h,
      lookup: p
    }));
  }, []), i = _v(r), a = Qe(() => ({ nodeQueue: o, edgeQueue: i }), []);
  return $(GE.Provider, { value: a, children: e });
}
function q6() {
  const e = Qr(GE);
  if (!e)
    throw new Error("useBatchContext must be used within a BatchProvider");
  return e;
}
const K6 = (e) => !!e.panZoom;
function nf() {
  const e = B6(), t = qt(), n = q6(), o = ht(K6), r = Qe(() => {
    const i = (d) => t.getState().nodeLookup.get(d), a = (d) => {
      n.nodeQueue.push(d);
    }, l = (d) => {
      n.edgeQueue.push(d);
    }, c = (d) => {
      var x, T;
      const { nodeLookup: p, nodeOrigin: h } = t.getState(), g = Mv(d) ? d : p.get(d.id), m = g.parentId ? SE(g.position, g.measured, g.parentId, p, h) : g.position, y = {
        ...g,
        position: m,
        width: ((x = g.measured) == null ? void 0 : x.width) ?? g.width,
        height: ((T = g.measured) == null ? void 0 : T.height) ?? g.height
      };
      return Fs(y);
    }, u = (d, p, h = { replace: !1 }) => {
      a((g) => g.map((m) => {
        if (m.id === d) {
          const y = typeof p == "function" ? p(m) : p;
          return h.replace && Mv(y) ? y : { ...m, ...y };
        }
        return m;
      }));
    }, f = (d, p, h = { replace: !1 }) => {
      l((g) => g.map((m) => {
        if (m.id === d) {
          const y = typeof p == "function" ? p(m) : p;
          return h.replace && V6(y) ? y : { ...m, ...y };
        }
        return m;
      }));
    };
    return {
      getNodes: () => t.getState().nodes.map((d) => ({ ...d })),
      getNode: (d) => {
        var p;
        return (p = i(d)) == null ? void 0 : p.internals.userNode;
      },
      getInternalNode: i,
      getEdges: () => {
        const { edges: d = [] } = t.getState();
        return d.map((p) => ({ ...p }));
      },
      getEdge: (d) => t.getState().edgeLookup.get(d),
      setNodes: a,
      setEdges: l,
      addNodes: (d) => {
        const p = Array.isArray(d) ? d : [d];
        n.nodeQueue.push((h) => [...h, ...p]);
      },
      addEdges: (d) => {
        const p = Array.isArray(d) ? d : [d];
        n.edgeQueue.push((h) => [...h, ...p]);
      },
      toObject: () => {
        const { nodes: d = [], edges: p = [], transform: h } = t.getState(), [g, m, y] = h;
        return {
          nodes: d.map((x) => ({ ...x })),
          edges: p.map((x) => ({ ...x })),
          viewport: {
            x: g,
            y: m,
            zoom: y
          }
        };
      },
      deleteElements: async ({ nodes: d = [], edges: p = [] }) => {
        const { nodes: h, edges: g, onNodesDelete: m, onEdgesDelete: y, triggerNodeChanges: x, triggerEdgeChanges: T, onDelete: b, onBeforeDelete: w } = t.getState(), { nodes: S, edges: E } = await bW({
          nodesToRemove: d,
          edgesToRemove: p,
          nodes: h,
          edges: g,
          onBeforeDelete: w
        }), C = E.length > 0, R = S.length > 0;
        if (C) {
          const M = E.map(Nv);
          y == null || y(E), T(M);
        }
        if (R) {
          const M = S.map(Nv);
          m == null || m(S), x(M);
        }
        return (R || C) && (b == null || b({ nodes: S, edges: E })), { deletedNodes: S, deletedEdges: E };
      },
      getIntersectingNodes: (d, p = !0, h) => {
        const g = rv(d), m = g ? d : c(d), y = h !== void 0;
        return m ? (h || t.getState().nodes).filter((x) => {
          const T = t.getState().nodeLookup.get(x.id);
          if (T && !g && (x.id === d.id || !T.internals.positionAbsolute))
            return !1;
          const b = Fs(y ? x : T), w = pl(b, m);
          return p && w > 0 || w >= m.width * m.height;
        }) : [];
      },
      isNodeIntersecting: (d, p, h = !0) => {
        const m = rv(d) ? d : c(d);
        if (!m)
          return !1;
        const y = pl(m, p);
        return h && y > 0 || y >= m.width * m.height;
      },
      updateNode: u,
      updateNodeData: (d, p, h = { replace: !1 }) => {
        u(d, (g) => {
          const m = typeof p == "function" ? p(g) : p;
          return h.replace ? { ...g, data: m } : { ...g, data: { ...g.data, ...m } };
        }, h);
      },
      updateEdge: f,
      updateEdgeData: (d, p, h = { replace: !1 }) => {
        f(d, (g) => {
          const m = typeof p == "function" ? p(g) : p;
          return h.replace ? { ...g, data: m } : { ...g, data: { ...g.data, ...m } };
        }, h);
      },
      getNodesBounds: (d) => {
        const { nodeLookup: p, nodeOrigin: h } = t.getState();
        return hW(d, { nodeLookup: p, nodeOrigin: h });
      },
      getHandleConnections: ({ type: d, id: p, nodeId: h }) => {
        var g;
        return Array.from(((g = t.getState().connectionLookup.get(`${h}-${d}${p ? `-${p}` : ""}`)) == null ? void 0 : g.values()) ?? []);
      },
      getNodeConnections: ({ type: d, handleId: p, nodeId: h }) => {
        var g;
        return Array.from(((g = t.getState().connectionLookup.get(`${h}${d ? p ? `-${d}-${p}` : `-${d}` : ""}`)) == null ? void 0 : g.values()) ?? []);
      },
      fitView: async (d) => {
        const p = t.getState().fitViewResolver ?? wW();
        return t.setState({ fitViewQueued: !0, fitViewOptions: d, fitViewResolver: p }), n.nodeQueue.push((h) => [...h]), p.promise;
      }
    };
  }, []);
  return Qe(() => ({
    ...r,
    ...e,
    viewportInitialized: o
  }), [o]);
}
const Av = (e) => e.selected, Y6 = typeof window < "u" ? window : void 0;
function G6({ deleteKeyCode: e, multiSelectionKeyCode: t }) {
  const n = qt(), { deleteElements: o } = nf(), r = ml(e, { actInsideInputWithModifier: !1 }), i = ml(t, { target: Y6 });
  dt(() => {
    if (r) {
      const { edges: a, nodes: l } = n.getState();
      o({ nodes: l.filter(Av), edges: a.filter(Av) }), n.setState({ nodesSelectionActive: !1 });
    }
  }, [r]), dt(() => {
    n.setState({ multiSelectionActive: i });
  }, [i]);
}
function X6(e) {
  const t = qt();
  dt(() => {
    const n = () => {
      var r, i;
      if (!e.current)
        return !1;
      const o = lg(e.current);
      (o.height === 0 || o.width === 0) && ((i = (r = t.getState()).onError) == null || i.call(r, "004", Vn.error004())), t.setState({ width: o.width || 500, height: o.height || 500 });
    };
    if (e.current) {
      n(), window.addEventListener("resize", n);
      const o = new ResizeObserver(() => n());
      return o.observe(e.current), () => {
        window.removeEventListener("resize", n), o && e.current && o.unobserve(e.current);
      };
    }
  }, []);
}
const of = {
  position: "absolute",
  width: "100%",
  height: "100%",
  top: 0,
  left: 0
}, Z6 = (e) => ({
  userSelectionActive: e.userSelectionActive,
  lib: e.lib
});
function Q6({ onPaneContextMenu: e, zoomOnScroll: t = !0, zoomOnPinch: n = !0, panOnScroll: o = !1, panOnScrollSpeed: r = 0.5, panOnScrollMode: i = ki.Free, zoomOnDoubleClick: a = !0, panOnDrag: l = !0, defaultViewport: c, translateExtent: u, minZoom: f, maxZoom: d, zoomActivationKeyCode: p, preventScrolling: h = !0, children: g, noWheelClassName: m, noPanClassName: y, onViewportChange: x, isControlledViewport: T, paneClickDistance: b }) {
  const w = qt(), S = et(null), { userSelectionActive: E, lib: C } = ht(Z6, Yt), R = ml(p), M = et();
  X6(S);
  const v = ze((I) => {
    x == null || x({ x: I[0], y: I[1], zoom: I[2] }), T || w.setState({ transform: I });
  }, [x, T]);
  return dt(() => {
    if (S.current) {
      M.current = JW({
        domNode: S.current,
        minZoom: f,
        maxZoom: d,
        translateExtent: u,
        viewport: c,
        paneClickDistance: b,
        onDraggingChange: (O) => w.setState({ paneDragging: O }),
        onPanZoomStart: (O, _) => {
          const { onViewportChangeStart: N, onMoveStart: L } = w.getState();
          L == null || L(O, _), N == null || N(_);
        },
        onPanZoom: (O, _) => {
          const { onViewportChange: N, onMove: L } = w.getState();
          L == null || L(O, _), N == null || N(_);
        },
        onPanZoomEnd: (O, _) => {
          const { onViewportChangeEnd: N, onMoveEnd: L } = w.getState();
          L == null || L(O, _), N == null || N(_);
        }
      });
      const { x: I, y: k, zoom: A } = M.current.getViewport();
      return w.setState({
        panZoom: M.current,
        transform: [I, k, A],
        domNode: S.current.closest(".react-flow")
      }), () => {
        var O;
        (O = M.current) == null || O.destroy();
      };
    }
  }, []), dt(() => {
    var I;
    (I = M.current) == null || I.update({
      onPaneContextMenu: e,
      zoomOnScroll: t,
      zoomOnPinch: n,
      panOnScroll: o,
      panOnScrollSpeed: r,
      panOnScrollMode: i,
      zoomOnDoubleClick: a,
      panOnDrag: l,
      zoomActivationKeyPressed: R,
      preventScrolling: h,
      noPanClassName: y,
      userSelectionActive: E,
      noWheelClassName: m,
      lib: C,
      onTransformChange: v
    });
  }, [
    e,
    t,
    n,
    o,
    r,
    i,
    a,
    l,
    R,
    h,
    y,
    E,
    m,
    C,
    v
  ]), $("div", { className: "react-flow__renderer", ref: S, style: of, children: g });
}
const J6 = (e) => ({
  userSelectionActive: e.userSelectionActive,
  userSelectionRect: e.userSelectionRect
});
function eU() {
  const { userSelectionActive: e, userSelectionRect: t } = ht(J6, Yt);
  return e && t ? $("div", { className: "react-flow__selection react-flow__container", style: {
    width: t.width,
    height: t.height,
    transform: `translate(${t.x}px, ${t.y}px)`
  } }) : null;
}
const pp = (e, t) => (n) => {
  n.target === t.current && (e == null || e(n));
}, tU = (e) => ({
  userSelectionActive: e.userSelectionActive,
  elementsSelectable: e.elementsSelectable,
  connectionInProgress: e.connection.inProgress,
  dragging: e.paneDragging
});
function nU({ isSelecting: e, selectionKeyPressed: t, selectionMode: n = fl.Full, panOnDrag: o, selectionOnDrag: r, onSelectionStart: i, onSelectionEnd: a, onPaneClick: l, onPaneContextMenu: c, onPaneScroll: u, onPaneMouseEnter: f, onPaneMouseMove: d, onPaneMouseLeave: p, children: h }) {
  const g = qt(), { userSelectionActive: m, elementsSelectable: y, dragging: x, connectionInProgress: T } = ht(tU, Yt), b = y && (e || m), w = et(null), S = et(), E = et(/* @__PURE__ */ new Set()), C = et(/* @__PURE__ */ new Set()), R = et(!1), M = et(!1), v = (L) => {
    if (R.current || T) {
      R.current = !1;
      return;
    }
    l == null || l(L), g.getState().resetSelectedElements(), g.setState({ nodesSelectionActive: !1 });
  }, I = (L) => {
    if (Array.isArray(o) && (o != null && o.includes(2))) {
      L.preventDefault();
      return;
    }
    c == null || c(L);
  }, k = u ? (L) => u(L) : void 0, A = (L) => {
    var U, q;
    const { resetSelectedElements: F, domNode: D } = g.getState();
    if (S.current = D == null ? void 0 : D.getBoundingClientRect(), !y || !e || L.button !== 0 || L.target !== w.current || !S.current)
      return;
    (q = (U = L.target) == null ? void 0 : U.setPointerCapture) == null || q.call(U, L.pointerId), M.current = !0, R.current = !1;
    const { x: B, y: z } = Tr(L.nativeEvent, S.current);
    F(), g.setState({
      userSelectionRect: {
        width: 0,
        height: 0,
        startX: B,
        startY: z,
        x: B,
        y: z
      }
    }), i == null || i(L);
  }, O = (L) => {
    const { userSelectionRect: F, transform: D, nodeLookup: B, edgeLookup: z, connectionLookup: U, triggerNodeChanges: q, triggerEdgeChanges: Y, defaultEdgeOptions: K } = g.getState();
    if (!S.current || !F)
      return;
    R.current = !0;
    const { x: te, y: ne } = Tr(L.nativeEvent, S.current), { startX: W, startY: ee } = F, G = {
      startX: W,
      startY: ee,
      x: te < W ? te : W,
      y: ne < ee ? ne : ee,
      width: Math.abs(te - W),
      height: Math.abs(ne - ee)
    }, re = E.current, V = C.current;
    E.current = new Set(gE(B, G, D, n === fl.Partial, !0).map((ue) => ue.id)), C.current = /* @__PURE__ */ new Set();
    const de = (K == null ? void 0 : K.selectable) ?? !0;
    for (const ue of E.current) {
      const xe = U.get(ue);
      if (xe)
        for (const { edgeId: Ae } of xe.values()) {
          const we = z.get(Ae);
          we && (we.selectable ?? de) && C.current.add(Ae);
        }
    }
    if (!iv(re, E.current)) {
      const ue = ps(B, E.current, !0);
      q(ue);
    }
    if (!iv(V, C.current)) {
      const ue = ps(z, C.current);
      Y(ue);
    }
    g.setState({
      userSelectionRect: G,
      userSelectionActive: !0,
      nodesSelectionActive: !1
    });
  }, _ = (L) => {
    var D, B;
    if (L.button !== 0 || !M.current)
      return;
    (B = (D = L.target) == null ? void 0 : D.releasePointerCapture) == null || B.call(D, L.pointerId);
    const { userSelectionRect: F } = g.getState();
    !m && F && L.target === w.current && (v == null || v(L)), g.setState({
      userSelectionActive: !1,
      userSelectionRect: null,
      nodesSelectionActive: E.current.size > 0
    }), a == null || a(L), (t || r) && (R.current = !1), M.current = !1;
  }, N = o === !0 || Array.isArray(o) && o.includes(0);
  return Te("div", { className: pn(["react-flow__pane", { draggable: N, dragging: x, selection: e }]), onClick: b ? void 0 : pp(v, w), onContextMenu: pp(I, w), onWheel: pp(k, w), onPointerEnter: b ? void 0 : f, onPointerDown: b ? A : d, onPointerMove: b ? O : d, onPointerUp: b ? _ : void 0, onPointerLeave: p, ref: w, style: of, children: [h, $(eU, {})] });
}
function Eh({ id: e, store: t, unselect: n = !1, nodeRef: o }) {
  const { addSelectedNodes: r, unselectNodesAndEdges: i, multiSelectionActive: a, nodeLookup: l, onError: c } = t.getState(), u = l.get(e);
  if (!u) {
    c == null || c("012", Vn.error012(e));
    return;
  }
  t.setState({ nodesSelectionActive: !1 }), u.selected ? (n || u.selected && a) && (i({ nodes: [u], edges: [] }), requestAnimationFrame(() => {
    var f;
    return (f = o == null ? void 0 : o.current) == null ? void 0 : f.blur();
  })) : r([e]);
}
function XE({ nodeRef: e, disabled: t = !1, noDragClassName: n, handleSelector: o, nodeId: r, isSelectable: i, nodeClickDistance: a }) {
  const l = qt(), [c, u] = yn(!1), f = et();
  return dt(() => {
    f.current = FW({
      getStoreItems: () => l.getState(),
      onNodeMouseDown: (d) => {
        Eh({
          id: d,
          store: l,
          nodeRef: e
        });
      },
      onDragStart: () => {
        u(!0);
      },
      onDragStop: () => {
        u(!1);
      }
    });
  }, []), dt(() => {
    var d, p;
    if (t)
      (d = f.current) == null || d.destroy();
    else if (e.current)
      return (p = f.current) == null || p.update({
        noDragClassName: n,
        handleSelector: o,
        domNode: e.current,
        isSelectable: i,
        nodeId: r,
        nodeClickDistance: a
      }), () => {
        var h;
        (h = f.current) == null || h.destroy();
      };
  }, [n, o, t, i, e, r]), c;
}
const oU = (e) => (t) => t.selected && (t.draggable || e && typeof t.draggable > "u");
function ZE() {
  const e = qt();
  return ze((n) => {
    const { nodeExtent: o, snapToGrid: r, snapGrid: i, nodesDraggable: a, onError: l, updateNodePositions: c, nodeLookup: u, nodeOrigin: f } = e.getState(), d = /* @__PURE__ */ new Map(), p = oU(a), h = r ? i[0] : 5, g = r ? i[1] : 5, m = n.direction.x * h * n.factor, y = n.direction.y * g * n.factor;
    for (const [, x] of u) {
      if (!p(x))
        continue;
      let T = {
        x: x.internals.positionAbsolute.x + m,
        y: x.internals.positionAbsolute.y + y
      };
      r && (T = Jd(T, i));
      const { position: b, positionAbsolute: w } = yE({
        nodeId: x.id,
        nextPosition: T,
        nodeLookup: u,
        nodeExtent: o,
        nodeOrigin: f,
        onError: l
      });
      x.position = b, x.internals.positionAbsolute = w, d.set(x.id, x);
    }
    c(d);
  }, []);
}
const hg = bl(null), rU = hg.Provider;
hg.Consumer;
const QE = () => Qr(hg), iU = (e) => ({
  connectOnClick: e.connectOnClick,
  noPanClassName: e.noPanClassName,
  rfId: e.rfId
}), sU = (e, t, n) => (o) => {
  const { connectionClickStartHandle: r, connectionMode: i, connection: a } = o, { fromHandle: l, toHandle: c, isValid: u } = a, f = (c == null ? void 0 : c.nodeId) === e && (c == null ? void 0 : c.id) === t && (c == null ? void 0 : c.type) === n;
  return {
    connectingFrom: (l == null ? void 0 : l.nodeId) === e && (l == null ? void 0 : l.id) === t && (l == null ? void 0 : l.type) === n,
    connectingTo: f,
    clickConnecting: (r == null ? void 0 : r.nodeId) === e && (r == null ? void 0 : r.id) === t && (r == null ? void 0 : r.type) === n,
    isPossibleEndHandle: i === Ds.Strict ? (l == null ? void 0 : l.type) !== n : e !== (l == null ? void 0 : l.nodeId) || t !== (l == null ? void 0 : l.id),
    connectionInProcess: !!l,
    clickConnectionInProcess: !!r,
    valid: f && u
  };
};
function aU({ type: e = "source", position: t = Ve.Top, isValidConnection: n, isConnectable: o = !0, isConnectableStart: r = !0, isConnectableEnd: i = !0, id: a, onConnect: l, children: c, className: u, onMouseDown: f, onTouchStart: d, ...p }, h) {
  var _, N;
  const g = a || null, m = e === "target", y = qt(), x = QE(), { connectOnClick: T, noPanClassName: b, rfId: w } = ht(iU, Yt), { connectingFrom: S, connectingTo: E, clickConnecting: C, isPossibleEndHandle: R, connectionInProcess: M, clickConnectionInProcess: v, valid: I } = ht(sU(x, g, e), Yt);
  x || (N = (_ = y.getState()).onError) == null || N.call(_, "010", Vn.error010());
  const k = (L) => {
    const { defaultEdgeOptions: F, onConnect: D, hasDefaultEdges: B } = y.getState(), z = {
      ...F,
      ...L
    };
    if (B) {
      const { edges: U, setEdges: q } = y.getState();
      q(RE(z, U));
    }
    D == null || D(z), l == null || l(z);
  }, A = (L) => {
    if (!x)
      return;
    const F = CE(L.nativeEvent);
    if (r && (F && L.button === 0 || !F)) {
      const D = y.getState();
      Th.onPointerDown(L.nativeEvent, {
        autoPanOnConnect: D.autoPanOnConnect,
        connectionMode: D.connectionMode,
        connectionRadius: D.connectionRadius,
        domNode: D.domNode,
        nodeLookup: D.nodeLookup,
        lib: D.lib,
        isTarget: m,
        handleId: g,
        nodeId: x,
        flowId: D.rfId,
        panBy: D.panBy,
        cancelConnection: D.cancelConnection,
        onConnectStart: D.onConnectStart,
        onConnectEnd: D.onConnectEnd,
        updateConnection: D.updateConnection,
        onConnect: k,
        isValidConnection: n || D.isValidConnection,
        getTransform: () => y.getState().transform,
        getFromHandle: () => y.getState().connection.fromHandle,
        autoPanSpeed: D.autoPanSpeed
      });
    }
    F ? f == null || f(L) : d == null || d(L);
  }, O = (L) => {
    const { onClickConnectStart: F, onClickConnectEnd: D, connectionClickStartHandle: B, connectionMode: z, isValidConnection: U, lib: q, rfId: Y, nodeLookup: K, connection: te } = y.getState();
    if (!x || !B && !r)
      return;
    if (!B) {
      F == null || F(L.nativeEvent, { nodeId: x, handleId: g, handleType: e }), y.setState({ connectionClickStartHandle: { nodeId: x, type: e, id: g } });
      return;
    }
    const ne = TE(L.target), W = n || U, { connection: ee, isValid: G } = Th.isValid(L.nativeEvent, {
      handle: {
        nodeId: x,
        id: g,
        type: e
      },
      connectionMode: z,
      fromNodeId: B.nodeId,
      fromHandleId: B.id || null,
      fromType: B.type,
      isValidConnection: W,
      flowId: Y,
      doc: ne,
      lib: q,
      nodeLookup: K
    });
    G && ee && k(ee);
    const re = structuredClone(te);
    delete re.inProgress, re.toPosition = re.toHandle ? re.toHandle.position : null, D == null || D(L, re), y.setState({ connectionClickStartHandle: null });
  };
  return $("div", { "data-handleid": g, "data-nodeid": x, "data-handlepos": t, "data-id": `${w}-${x}-${g}-${e}`, className: pn([
    "react-flow__handle",
    `react-flow__handle-${t}`,
    "nodrag",
    b,
    u,
    {
      source: !m,
      target: m,
      connectable: o,
      connectablestart: r,
      connectableend: i,
      clickconnecting: C,
      connectingfrom: S,
      connectingto: E,
      valid: I,
      /*
       * shows where you can start a connection from
       * and where you can end it while connecting
       */
      connectionindicator: o && (!M || R) && (M || v ? i : r)
    }
  ]), onMouseDown: A, onTouchStart: A, onClick: T ? O : void 0, ref: h, ...p, children: c });
}
const gl = Ie(YE(aU));
function lU({ data: e, isConnectable: t, sourcePosition: n = Ve.Bottom }) {
  return Te(mo, { children: [e == null ? void 0 : e.label, $(gl, { type: "source", position: n, isConnectable: t })] });
}
function cU({ data: e, isConnectable: t, targetPosition: n = Ve.Top, sourcePosition: o = Ve.Bottom }) {
  return Te(mo, { children: [$(gl, { type: "target", position: n, isConnectable: t }), e == null ? void 0 : e.label, $(gl, { type: "source", position: o, isConnectable: t })] });
}
function uU() {
  return null;
}
function dU({ data: e, isConnectable: t, targetPosition: n = Ve.Top }) {
  return Te(mo, { children: [$(gl, { type: "target", position: n, isConnectable: t }), e == null ? void 0 : e.label] });
}
const Lu = {
  ArrowUp: { x: 0, y: -1 },
  ArrowDown: { x: 0, y: 1 },
  ArrowLeft: { x: -1, y: 0 },
  ArrowRight: { x: 1, y: 0 }
}, Dv = {
  input: lU,
  default: cU,
  output: dU,
  group: uU
};
function fU(e) {
  var t, n, o, r;
  return e.internals.handleBounds === void 0 ? {
    width: e.width ?? e.initialWidth ?? ((t = e.style) == null ? void 0 : t.width),
    height: e.height ?? e.initialHeight ?? ((n = e.style) == null ? void 0 : n.height)
  } : {
    width: e.width ?? ((o = e.style) == null ? void 0 : o.width),
    height: e.height ?? ((r = e.style) == null ? void 0 : r.height)
  };
}
const pU = (e) => {
  const { width: t, height: n, x: o, y: r } = Wl(e.nodeLookup, {
    filter: (i) => !!i.selected
  });
  return {
    width: Bo(t) ? t : null,
    height: Bo(n) ? n : null,
    userSelectionActive: e.userSelectionActive,
    transformString: `translate(${e.transform[0]}px,${e.transform[1]}px) scale(${e.transform[2]}) translate(${o}px,${r}px)`
  };
};
function hU({ onSelectionContextMenu: e, noPanClassName: t, disableKeyboardA11y: n }) {
  const o = qt(), { width: r, height: i, transformString: a, userSelectionActive: l } = ht(pU, Yt), c = ZE(), u = et(null);
  if (dt(() => {
    var p;
    n || (p = u.current) == null || p.focus({
      preventScroll: !0
    });
  }, [n]), XE({
    nodeRef: u
  }), l || !r || !i)
    return null;
  const f = e ? (p) => {
    const h = o.getState().nodes.filter((g) => g.selected);
    e(p, h);
  } : void 0, d = (p) => {
    Object.prototype.hasOwnProperty.call(Lu, p.key) && (p.preventDefault(), c({
      direction: Lu[p.key],
      factor: p.shiftKey ? 4 : 1
    }));
  };
  return $("div", { className: pn(["react-flow__nodesselection", "react-flow__container", t]), style: {
    transform: a
  }, children: $("div", { ref: u, className: "react-flow__nodesselection-rect", onContextMenu: f, tabIndex: n ? void 0 : -1, onKeyDown: n ? void 0 : d, style: {
    width: r,
    height: i
  } }) });
}
const Lv = typeof window < "u" ? window : void 0, mU = (e) => ({ nodesSelectionActive: e.nodesSelectionActive, userSelectionActive: e.userSelectionActive });
function JE({ children: e, onPaneClick: t, onPaneMouseEnter: n, onPaneMouseMove: o, onPaneMouseLeave: r, onPaneContextMenu: i, onPaneScroll: a, paneClickDistance: l, deleteKeyCode: c, selectionKeyCode: u, selectionOnDrag: f, selectionMode: d, onSelectionStart: p, onSelectionEnd: h, multiSelectionKeyCode: g, panActivationKeyCode: m, zoomActivationKeyCode: y, elementsSelectable: x, zoomOnScroll: T, zoomOnPinch: b, panOnScroll: w, panOnScrollSpeed: S, panOnScrollMode: E, zoomOnDoubleClick: C, panOnDrag: R, defaultViewport: M, translateExtent: v, minZoom: I, maxZoom: k, preventScrolling: A, onSelectionContextMenu: O, noWheelClassName: _, noPanClassName: N, disableKeyboardA11y: L, onViewportChange: F, isControlledViewport: D }) {
  const { nodesSelectionActive: B, userSelectionActive: z } = ht(mU), U = ml(u, { target: Lv }), q = ml(m, { target: Lv }), Y = q || R, K = q || w, te = f && Y !== !0, ne = U || z || te;
  return G6({ deleteKeyCode: c, multiSelectionKeyCode: g }), $(Q6, { onPaneContextMenu: i, elementsSelectable: x, zoomOnScroll: T, zoomOnPinch: b, panOnScroll: K, panOnScrollSpeed: S, panOnScrollMode: E, zoomOnDoubleClick: C, panOnDrag: !U && Y, defaultViewport: M, translateExtent: v, minZoom: I, maxZoom: k, zoomActivationKeyCode: y, preventScrolling: A, noWheelClassName: _, noPanClassName: N, onViewportChange: F, isControlledViewport: D, paneClickDistance: l, children: Te(nU, { onSelectionStart: p, onSelectionEnd: h, onPaneClick: t, onPaneMouseEnter: n, onPaneMouseMove: o, onPaneMouseLeave: r, onPaneContextMenu: i, onPaneScroll: a, panOnDrag: Y, isSelecting: !!ne, selectionMode: d, selectionKeyPressed: U, selectionOnDrag: te, children: [e, B && $(hU, { onSelectionContextMenu: O, noPanClassName: N, disableKeyboardA11y: L })] }) });
}
JE.displayName = "FlowRenderer";
const gU = Ie(JE), yU = (e) => (t) => e ? gE(t.nodeLookup, { x: 0, y: 0, width: t.width, height: t.height }, t.transform, !0).map((n) => n.id) : Array.from(t.nodeLookup.keys());
function bU(e) {
  return ht(ze(yU(e), [e]), Yt);
}
const vU = (e) => e.updateNodeInternals;
function xU() {
  const e = ht(vU), [t] = yn(() => typeof ResizeObserver > "u" ? null : new ResizeObserver((n) => {
    const o = /* @__PURE__ */ new Map();
    n.forEach((r) => {
      const i = r.target.getAttribute("data-id");
      o.set(i, {
        id: i,
        nodeElement: r.target,
        force: !0
      });
    }), e(o);
  }));
  return dt(() => () => {
    t == null || t.disconnect();
  }, [t]), t;
}
function wU({ node: e, nodeType: t, hasDimensions: n, resizeObserver: o }) {
  const r = qt(), i = et(null), a = et(null), l = et(e.sourcePosition), c = et(e.targetPosition), u = et(t), f = n && !!e.internals.handleBounds;
  return dt(() => {
    i.current && !e.hidden && (!f || a.current !== i.current) && (a.current && (o == null || o.unobserve(a.current)), o == null || o.observe(i.current), a.current = i.current);
  }, [f, e.hidden]), dt(() => () => {
    a.current && (o == null || o.unobserve(a.current), a.current = null);
  }, []), dt(() => {
    if (i.current) {
      const d = u.current !== t, p = l.current !== e.sourcePosition, h = c.current !== e.targetPosition;
      (d || p || h) && (u.current = t, l.current = e.sourcePosition, c.current = e.targetPosition, r.getState().updateNodeInternals(/* @__PURE__ */ new Map([[e.id, { id: e.id, nodeElement: i.current, force: !0 }]])));
    }
  }, [e.id, t, e.sourcePosition, e.targetPosition]), i;
}
function SU({ id: e, onClick: t, onMouseEnter: n, onMouseMove: o, onMouseLeave: r, onContextMenu: i, onDoubleClick: a, nodesDraggable: l, elementsSelectable: c, nodesConnectable: u, nodesFocusable: f, resizeObserver: d, noDragClassName: p, noPanClassName: h, disableKeyboardA11y: g, rfId: m, nodeTypes: y, nodeClickDistance: x, onError: T }) {
  const { node: b, internals: w, isParent: S } = ht((ne) => {
    const W = ne.nodeLookup.get(e), ee = ne.parentLookup.has(e);
    return {
      node: W,
      internals: W.internals,
      isParent: ee
    };
  }, Yt);
  let E = b.type || "default", C = (y == null ? void 0 : y[E]) || Dv[E];
  C === void 0 && (T == null || T("003", Vn.error003(E)), E = "default", C = Dv.default);
  const R = !!(b.draggable || l && typeof b.draggable > "u"), M = !!(b.selectable || c && typeof b.selectable > "u"), v = !!(b.connectable || u && typeof b.connectable > "u"), I = !!(b.focusable || f && typeof b.focusable > "u"), k = qt(), A = wE(b), O = wU({ node: b, nodeType: E, hasDimensions: A, resizeObserver: d }), _ = XE({
    nodeRef: O,
    disabled: b.hidden || !R,
    noDragClassName: p,
    handleSelector: b.dragHandle,
    nodeId: e,
    isSelectable: M,
    nodeClickDistance: x
  }), N = ZE();
  if (b.hidden)
    return null;
  const L = Mr(b), F = fU(b), D = M || R || t || n || o || r, B = n ? (ne) => n(ne, { ...w.userNode }) : void 0, z = o ? (ne) => o(ne, { ...w.userNode }) : void 0, U = r ? (ne) => r(ne, { ...w.userNode }) : void 0, q = i ? (ne) => i(ne, { ...w.userNode }) : void 0, Y = a ? (ne) => a(ne, { ...w.userNode }) : void 0, K = (ne) => {
    const { selectNodesOnDrag: W, nodeDragThreshold: ee } = k.getState();
    M && (!W || !R || ee > 0) && Eh({
      id: e,
      store: k,
      nodeRef: O
    }), t && t(ne, { ...w.userNode });
  }, te = (ne) => {
    if (!(EE(ne.nativeEvent) || g))
      if (fE.includes(ne.key) && M) {
        const W = ne.key === "Escape";
        Eh({
          id: e,
          store: k,
          unselect: W,
          nodeRef: O
        });
      } else R && b.selected && Object.prototype.hasOwnProperty.call(Lu, ne.key) && (ne.preventDefault(), k.setState({
        ariaLiveMessage: `Moved selected node ${ne.key.replace("Arrow", "").toLowerCase()}. New position, x: ${~~w.positionAbsolute.x}, y: ${~~w.positionAbsolute.y}`
      }), N({
        direction: Lu[ne.key],
        factor: ne.shiftKey ? 4 : 1
      }));
  };
  return $("div", { className: pn([
    "react-flow__node",
    `react-flow__node-${E}`,
    {
      // this is overwritable by passing `nopan` as a class name
      [h]: R
    },
    b.className,
    {
      selected: b.selected,
      selectable: M,
      parent: S,
      draggable: R,
      dragging: _
    }
  ]), ref: O, style: {
    zIndex: w.z,
    transform: `translate(${w.positionAbsolute.x}px,${w.positionAbsolute.y}px)`,
    pointerEvents: D ? "all" : "none",
    visibility: A ? "visible" : "hidden",
    ...b.style,
    ...F
  }, "data-id": e, "data-testid": `rf__node-${e}`, onMouseEnter: B, onMouseMove: z, onMouseLeave: U, onContextMenu: q, onClick: K, onDoubleClick: Y, onKeyDown: I ? te : void 0, tabIndex: I ? 0 : void 0, role: I ? "button" : void 0, "aria-describedby": g ? void 0 : `${WE}-${m}`, "aria-label": b.ariaLabel, children: $(rU, { value: e, children: $(C, { id: e, data: b.data, type: E, positionAbsoluteX: w.positionAbsolute.x, positionAbsoluteY: w.positionAbsolute.y, selected: b.selected ?? !1, selectable: M, draggable: R, deletable: b.deletable ?? !0, isConnectable: v, sourcePosition: b.sourcePosition, targetPosition: b.targetPosition, dragging: _, dragHandle: b.dragHandle, zIndex: w.z, parentId: b.parentId, ...L }) }) });
}
const TU = (e) => ({
  nodesDraggable: e.nodesDraggable,
  nodesConnectable: e.nodesConnectable,
  nodesFocusable: e.nodesFocusable,
  elementsSelectable: e.elementsSelectable,
  onError: e.onError
});
function eC(e) {
  const { nodesDraggable: t, nodesConnectable: n, nodesFocusable: o, elementsSelectable: r, onError: i } = ht(TU, Yt), a = bU(e.onlyRenderVisibleElements), l = xU();
  return $("div", { className: "react-flow__nodes", style: of, children: a.map((c) => (
    /*
     * The split of responsibilities between NodeRenderer and
     * NodeComponentWrapper may appear weird. However, it’s designed to
     * minimize the cost of updates when individual nodes change.
     *
     * For example, when you’re dragging a single node, that node gets
     * updated multiple times per second. If `NodeRenderer` were to update
     * every time, it would have to re-run the `nodes.map()` loop every
     * time. This gets pricey with hundreds of nodes, especially if every
     * loop cycle does more than just rendering a JSX element!
     *
     * As a result of this choice, we took the following implementation
     * decisions:
     * - NodeRenderer subscribes *only* to node IDs – and therefore
     *   rerender *only* when visible nodes are added or removed.
     * - NodeRenderer performs all operations the result of which can be
     *   shared between nodes (such as creating the `ResizeObserver`
     *   instance, or subscribing to `selector`). This means extra prop
     *   drilling into `NodeComponentWrapper`, but it means we need to run
     *   these operations only once – instead of once per node.
     * - Any operations that you’d normally write inside `nodes.map` are
     *   moved into `NodeComponentWrapper`. This ensures they are
     *   memorized – so if `NodeRenderer` *has* to rerender, it only
     *   needs to regenerate the list of nodes, nothing else.
     */
    $(SU, { id: c, nodeTypes: e.nodeTypes, nodeExtent: e.nodeExtent, onClick: e.onNodeClick, onMouseEnter: e.onNodeMouseEnter, onMouseMove: e.onNodeMouseMove, onMouseLeave: e.onNodeMouseLeave, onContextMenu: e.onNodeContextMenu, onDoubleClick: e.onNodeDoubleClick, noDragClassName: e.noDragClassName, noPanClassName: e.noPanClassName, rfId: e.rfId, disableKeyboardA11y: e.disableKeyboardA11y, resizeObserver: l, nodesDraggable: t, nodesConnectable: n, nodesFocusable: o, elementsSelectable: r, nodeClickDistance: e.nodeClickDistance, onError: i }, c)
  )) });
}
eC.displayName = "NodeRenderer";
const EU = Ie(eC);
function CU(e) {
  return ht(ze((n) => {
    if (!e)
      return n.edges.map((r) => r.id);
    const o = [];
    if (n.width && n.height)
      for (const r of n.edges) {
        const i = n.nodeLookup.get(r.source), a = n.nodeLookup.get(r.target);
        i && a && EW({
          sourceNode: i,
          targetNode: a,
          width: n.width,
          height: n.height,
          transform: n.transform
        }) && o.push(r.id);
      }
    return o;
  }, [e]), Yt);
}
const OU = ({ color: e = "none", strokeWidth: t = 1 }) => $("polyline", { style: {
  stroke: e,
  strokeWidth: t
}, strokeLinecap: "round", strokeLinejoin: "round", fill: "none", points: "-5,-4 0,0 -5,4" }), $U = ({ color: e = "none", strokeWidth: t = 1 }) => $("polyline", { style: {
  stroke: e,
  fill: e,
  strokeWidth: t
}, strokeLinecap: "round", strokeLinejoin: "round", points: "-5,-4 0,0 -5,4 -5,-4" }), Bv = {
  [Ls.Arrow]: OU,
  [Ls.ArrowClosed]: $U
};
function IU(e) {
  const t = qt();
  return Qe(() => {
    var r, i;
    return Object.prototype.hasOwnProperty.call(Bv, e) ? Bv[e] : ((i = (r = t.getState()).onError) == null || i.call(r, "009", Vn.error009(e)), null);
  }, [e]);
}
const RU = ({ id: e, type: t, color: n, width: o = 12.5, height: r = 12.5, markerUnits: i = "strokeWidth", strokeWidth: a, orient: l = "auto-start-reverse" }) => {
  const c = IU(t);
  return c ? $("marker", { className: "react-flow__arrowhead", id: e, markerWidth: `${o}`, markerHeight: `${r}`, viewBox: "-10 -10 20 20", markerUnits: i, orient: l, refX: "0", refY: "0", children: $(c, { color: n, strokeWidth: a }) }) : null;
}, tC = ({ defaultColor: e, rfId: t }) => {
  const n = ht((i) => i.edges), o = ht((i) => i.defaultEdgeOptions), r = Qe(() => PW(n, {
    id: t,
    defaultColor: e,
    defaultMarkerStart: o == null ? void 0 : o.markerStart,
    defaultMarkerEnd: o == null ? void 0 : o.markerEnd
  }), [n, o, t, e]);
  return r.length ? $("svg", { className: "react-flow__marker", "aria-hidden": "true", children: $("defs", { children: r.map((i) => $(RU, { id: i.id, type: i.type, color: i.color, width: i.width, height: i.height, markerUnits: i.markerUnits, strokeWidth: i.strokeWidth, orient: i.orient }, i.id)) }) }) : null;
};
tC.displayName = "MarkerDefinitions";
var kU = Ie(tC);
function nC({ x: e, y: t, label: n, labelStyle: o, labelShowBg: r = !0, labelBgStyle: i, labelBgPadding: a = [2, 4], labelBgBorderRadius: l = 2, children: c, className: u, ...f }) {
  const [d, p] = yn({ x: 1, y: 0, width: 0, height: 0 }), h = pn(["react-flow__edge-textwrapper", u]), g = et(null);
  return dt(() => {
    if (g.current) {
      const m = g.current.getBBox();
      p({
        x: m.x,
        y: m.y,
        width: m.width,
        height: m.height
      });
    }
  }, [n]), n ? Te("g", { transform: `translate(${e - d.width / 2} ${t - d.height / 2})`, className: h, visibility: d.width ? "visible" : "hidden", ...f, children: [r && $("rect", { width: d.width + 2 * a[0], x: -a[0], y: -a[1], height: d.height + 2 * a[1], className: "react-flow__edge-textbg", style: i, rx: l, ry: l }), $("text", { className: "react-flow__edge-text", y: d.height / 2, dy: "0.3em", ref: g, style: o, children: n }), c] }) : null;
}
nC.displayName = "EdgeText";
const PU = Ie(nC);
function Kl({ path: e, labelX: t, labelY: n, label: o, labelStyle: r, labelShowBg: i, labelBgStyle: a, labelBgPadding: l, labelBgBorderRadius: c, interactionWidth: u = 20, ...f }) {
  return Te(mo, { children: [$("path", { ...f, d: e, fill: "none", className: pn(["react-flow__edge-path", f.className]) }), u && $("path", { d: e, fill: "none", strokeOpacity: 0, strokeWidth: u, className: "react-flow__edge-interaction" }), o && Bo(t) && Bo(n) ? $(PU, { x: t, y: n, label: o, labelStyle: r, labelShowBg: i, labelBgStyle: a, labelBgPadding: l, labelBgBorderRadius: c }) : null] });
}
function Fv({ pos: e, x1: t, y1: n, x2: o, y2: r }) {
  return e === Ve.Left || e === Ve.Right ? [0.5 * (t + o), n] : [t, 0.5 * (n + r)];
}
function oC({ sourceX: e, sourceY: t, sourcePosition: n = Ve.Bottom, targetX: o, targetY: r, targetPosition: i = Ve.Top }) {
  const [a, l] = Fv({
    pos: n,
    x1: e,
    y1: t,
    x2: o,
    y2: r
  }), [c, u] = Fv({
    pos: i,
    x1: o,
    y1: r,
    x2: e,
    y2: t
  }), [f, d, p, h] = OE({
    sourceX: e,
    sourceY: t,
    targetX: o,
    targetY: r,
    sourceControlX: a,
    sourceControlY: l,
    targetControlX: c,
    targetControlY: u
  });
  return [
    `M${e},${t} C${a},${l} ${c},${u} ${o},${r}`,
    f,
    d,
    p,
    h
  ];
}
function rC(e) {
  return Ie(({ id: t, sourceX: n, sourceY: o, targetX: r, targetY: i, sourcePosition: a, targetPosition: l, label: c, labelStyle: u, labelShowBg: f, labelBgStyle: d, labelBgPadding: p, labelBgBorderRadius: h, style: g, markerEnd: m, markerStart: y, interactionWidth: x }) => {
    const [T, b, w] = oC({
      sourceX: n,
      sourceY: o,
      sourcePosition: a,
      targetX: r,
      targetY: i,
      targetPosition: l
    }), S = e.isInternal ? void 0 : t;
    return $(Kl, { id: S, path: T, labelX: b, labelY: w, label: c, labelStyle: u, labelShowBg: f, labelBgStyle: d, labelBgPadding: p, labelBgBorderRadius: h, style: g, markerEnd: m, markerStart: y, interactionWidth: x });
  });
}
const NU = rC({ isInternal: !1 }), iC = rC({ isInternal: !0 });
NU.displayName = "SimpleBezierEdge";
iC.displayName = "SimpleBezierEdgeInternal";
function sC(e) {
  return Ie(({ id: t, sourceX: n, sourceY: o, targetX: r, targetY: i, label: a, labelStyle: l, labelShowBg: c, labelBgStyle: u, labelBgPadding: f, labelBgBorderRadius: d, style: p, sourcePosition: h = Ve.Bottom, targetPosition: g = Ve.Top, markerEnd: m, markerStart: y, pathOptions: x, interactionWidth: T }) => {
    const [b, w, S] = xh({
      sourceX: n,
      sourceY: o,
      sourcePosition: h,
      targetX: r,
      targetY: i,
      targetPosition: g,
      borderRadius: x == null ? void 0 : x.borderRadius,
      offset: x == null ? void 0 : x.offset
    }), E = e.isInternal ? void 0 : t;
    return $(Kl, { id: E, path: b, labelX: w, labelY: S, label: a, labelStyle: l, labelShowBg: c, labelBgStyle: u, labelBgPadding: f, labelBgBorderRadius: d, style: p, markerEnd: m, markerStart: y, interactionWidth: T });
  });
}
const aC = sC({ isInternal: !1 }), lC = sC({ isInternal: !0 });
aC.displayName = "SmoothStepEdge";
lC.displayName = "SmoothStepEdgeInternal";
function cC(e) {
  return Ie(({ id: t, ...n }) => {
    var r;
    const o = e.isInternal ? void 0 : t;
    return $(aC, { ...n, id: o, pathOptions: Qe(() => {
      var i;
      return { borderRadius: 0, offset: (i = n.pathOptions) == null ? void 0 : i.offset };
    }, [(r = n.pathOptions) == null ? void 0 : r.offset]) });
  });
}
const MU = cC({ isInternal: !1 }), uC = cC({ isInternal: !0 });
MU.displayName = "StepEdge";
uC.displayName = "StepEdgeInternal";
function dC(e) {
  return Ie(({ id: t, sourceX: n, sourceY: o, targetX: r, targetY: i, label: a, labelStyle: l, labelShowBg: c, labelBgStyle: u, labelBgPadding: f, labelBgBorderRadius: d, style: p, markerEnd: h, markerStart: g, interactionWidth: m }) => {
    const [y, x, T] = kE({ sourceX: n, sourceY: o, targetX: r, targetY: i }), b = e.isInternal ? void 0 : t;
    return $(Kl, { id: b, path: y, labelX: x, labelY: T, label: a, labelStyle: l, labelShowBg: c, labelBgStyle: u, labelBgPadding: f, labelBgBorderRadius: d, style: p, markerEnd: h, markerStart: g, interactionWidth: m });
  });
}
const _U = dC({ isInternal: !1 }), fC = dC({ isInternal: !0 });
_U.displayName = "StraightEdge";
fC.displayName = "StraightEdgeInternal";
function pC(e) {
  return Ie(({ id: t, sourceX: n, sourceY: o, targetX: r, targetY: i, sourcePosition: a = Ve.Bottom, targetPosition: l = Ve.Top, label: c, labelStyle: u, labelShowBg: f, labelBgStyle: d, labelBgPadding: p, labelBgBorderRadius: h, style: g, markerEnd: m, markerStart: y, pathOptions: x, interactionWidth: T }) => {
    const [b, w, S] = cg({
      sourceX: n,
      sourceY: o,
      sourcePosition: a,
      targetX: r,
      targetY: i,
      targetPosition: l,
      curvature: x == null ? void 0 : x.curvature
    }), E = e.isInternal ? void 0 : t;
    return $(Kl, { id: E, path: b, labelX: w, labelY: S, label: c, labelStyle: u, labelShowBg: f, labelBgStyle: d, labelBgPadding: p, labelBgBorderRadius: h, style: g, markerEnd: m, markerStart: y, interactionWidth: T });
  });
}
const AU = pC({ isInternal: !1 }), hC = pC({ isInternal: !0 });
AU.displayName = "BezierEdge";
hC.displayName = "BezierEdgeInternal";
const zv = {
  default: hC,
  straight: fC,
  step: uC,
  smoothstep: lC,
  simplebezier: iC
}, jv = {
  sourceX: null,
  sourceY: null,
  targetX: null,
  targetY: null,
  sourcePosition: null,
  targetPosition: null
}, DU = (e, t, n) => n === Ve.Left ? e - t : n === Ve.Right ? e + t : e, LU = (e, t, n) => n === Ve.Top ? e - t : n === Ve.Bottom ? e + t : e, Vv = "react-flow__edgeupdater";
function Hv({ position: e, centerX: t, centerY: n, radius: o = 10, onMouseDown: r, onMouseEnter: i, onMouseOut: a, type: l }) {
  return $("circle", { onMouseDown: r, onMouseEnter: i, onMouseOut: a, className: pn([Vv, `${Vv}-${l}`]), cx: DU(t, o, e), cy: LU(n, o, e), r: o, stroke: "transparent", fill: "transparent" });
}
function BU({ isReconnectable: e, reconnectRadius: t, edge: n, sourceX: o, sourceY: r, targetX: i, targetY: a, sourcePosition: l, targetPosition: c, onReconnect: u, onReconnectStart: f, onReconnectEnd: d, setReconnecting: p, setUpdateHover: h }) {
  const g = qt(), m = (w, S) => {
    if (w.button !== 0)
      return;
    const { autoPanOnConnect: E, domNode: C, isValidConnection: R, connectionMode: M, connectionRadius: v, lib: I, onConnectStart: k, onConnectEnd: A, cancelConnection: O, nodeLookup: _, rfId: N, panBy: L, updateConnection: F } = g.getState(), D = S.type === "target";
    p(!0), f == null || f(w, n, S.type);
    const B = (U, q) => {
      p(!1), d == null || d(U, n, S.type, q);
    }, z = (U) => u == null ? void 0 : u(n, U);
    Th.onPointerDown(w.nativeEvent, {
      autoPanOnConnect: E,
      connectionMode: M,
      connectionRadius: v,
      domNode: C,
      handleId: S.id,
      nodeId: S.nodeId,
      nodeLookup: _,
      isTarget: D,
      edgeUpdaterType: S.type,
      lib: I,
      flowId: N,
      cancelConnection: O,
      panBy: L,
      isValidConnection: R,
      onConnect: z,
      onConnectStart: k,
      onConnectEnd: A,
      onReconnectEnd: B,
      updateConnection: F,
      getTransform: () => g.getState().transform,
      getFromHandle: () => g.getState().connection.fromHandle
    });
  }, y = (w) => m(w, { nodeId: n.target, id: n.targetHandle ?? null, type: "target" }), x = (w) => m(w, { nodeId: n.source, id: n.sourceHandle ?? null, type: "source" }), T = () => h(!0), b = () => h(!1);
  return Te(mo, { children: [(e === !0 || e === "source") && $(Hv, { position: l, centerX: o, centerY: r, radius: t, onMouseDown: y, onMouseEnter: T, onMouseOut: b, type: "source" }), (e === !0 || e === "target") && $(Hv, { position: c, centerX: i, centerY: a, radius: t, onMouseDown: x, onMouseEnter: T, onMouseOut: b, type: "target" })] });
}
function FU({ id: e, edgesFocusable: t, edgesReconnectable: n, elementsSelectable: o, onClick: r, onDoubleClick: i, onContextMenu: a, onMouseEnter: l, onMouseMove: c, onMouseLeave: u, reconnectRadius: f, onReconnect: d, onReconnectStart: p, onReconnectEnd: h, rfId: g, edgeTypes: m, noPanClassName: y, onError: x, disableKeyboardA11y: T }) {
  let b = ht((V) => V.edgeLookup.get(e));
  const w = ht((V) => V.defaultEdgeOptions);
  b = w ? { ...w, ...b } : b;
  let S = b.type || "default", E = (m == null ? void 0 : m[S]) || zv[S];
  E === void 0 && (x == null || x("011", Vn.error011(S)), S = "default", E = zv.default);
  const C = !!(b.focusable || t && typeof b.focusable > "u"), R = typeof d < "u" && (b.reconnectable || n && typeof b.reconnectable > "u"), M = !!(b.selectable || o && typeof b.selectable > "u"), v = et(null), [I, k] = yn(!1), [A, O] = yn(!1), _ = qt(), { zIndex: N, sourceX: L, sourceY: F, targetX: D, targetY: B, sourcePosition: z, targetPosition: U } = ht(ze((V) => {
    const de = V.nodeLookup.get(b.source), ue = V.nodeLookup.get(b.target);
    if (!de || !ue)
      return {
        zIndex: b.zIndex,
        ...jv
      };
    const xe = kW({
      id: e,
      sourceNode: de,
      targetNode: ue,
      sourceHandle: b.sourceHandle || null,
      targetHandle: b.targetHandle || null,
      connectionMode: V.connectionMode,
      onError: x
    });
    return {
      zIndex: TW({
        selected: b.selected,
        zIndex: b.zIndex,
        sourceNode: de,
        targetNode: ue,
        elevateOnSelect: V.elevateEdgesOnSelect
      }),
      ...xe || jv
    };
  }, [b.source, b.target, b.sourceHandle, b.targetHandle, b.selected, b.zIndex]), Yt), q = Qe(() => b.markerStart ? `url('#${wh(b.markerStart, g)}')` : void 0, [b.markerStart, g]), Y = Qe(() => b.markerEnd ? `url('#${wh(b.markerEnd, g)}')` : void 0, [b.markerEnd, g]);
  if (b.hidden || L === null || F === null || D === null || B === null)
    return null;
  const K = (V) => {
    var Ae;
    const { addSelectedEdges: de, unselectNodesAndEdges: ue, multiSelectionActive: xe } = _.getState();
    M && (_.setState({ nodesSelectionActive: !1 }), b.selected && xe ? (ue({ nodes: [], edges: [b] }), (Ae = v.current) == null || Ae.blur()) : de([e])), r && r(V, b);
  }, te = i ? (V) => {
    i(V, { ...b });
  } : void 0, ne = a ? (V) => {
    a(V, { ...b });
  } : void 0, W = l ? (V) => {
    l(V, { ...b });
  } : void 0, ee = c ? (V) => {
    c(V, { ...b });
  } : void 0, G = u ? (V) => {
    u(V, { ...b });
  } : void 0, re = (V) => {
    var de;
    if (!T && fE.includes(V.key) && M) {
      const { unselectNodesAndEdges: ue, addSelectedEdges: xe } = _.getState();
      V.key === "Escape" ? ((de = v.current) == null || de.blur(), ue({ edges: [b] })) : xe([e]);
    }
  };
  return $("svg", { style: { zIndex: N }, children: Te("g", { className: pn([
    "react-flow__edge",
    `react-flow__edge-${S}`,
    b.className,
    y,
    {
      selected: b.selected,
      animated: b.animated,
      inactive: !M && !r,
      updating: I,
      selectable: M
    }
  ]), onClick: K, onDoubleClick: te, onContextMenu: ne, onMouseEnter: W, onMouseMove: ee, onMouseLeave: G, onKeyDown: C ? re : void 0, tabIndex: C ? 0 : void 0, role: C ? "button" : "img", "data-id": e, "data-testid": `rf__edge-${e}`, "aria-label": b.ariaLabel === null ? void 0 : b.ariaLabel || `Edge from ${b.source} to ${b.target}`, "aria-describedby": C ? `${UE}-${g}` : void 0, ref: v, children: [!A && $(E, { id: e, source: b.source, target: b.target, type: b.type, selected: b.selected, animated: b.animated, selectable: M, deletable: b.deletable ?? !0, label: b.label, labelStyle: b.labelStyle, labelShowBg: b.labelShowBg, labelBgStyle: b.labelBgStyle, labelBgPadding: b.labelBgPadding, labelBgBorderRadius: b.labelBgBorderRadius, sourceX: L, sourceY: F, targetX: D, targetY: B, sourcePosition: z, targetPosition: U, data: b.data, style: b.style, sourceHandleId: b.sourceHandle, targetHandleId: b.targetHandle, markerStart: q, markerEnd: Y, pathOptions: "pathOptions" in b ? b.pathOptions : void 0, interactionWidth: b.interactionWidth }), R && $(BU, { edge: b, isReconnectable: R, reconnectRadius: f, onReconnect: d, onReconnectStart: p, onReconnectEnd: h, sourceX: L, sourceY: F, targetX: D, targetY: B, sourcePosition: z, targetPosition: U, setUpdateHover: k, setReconnecting: O })] }) });
}
const zU = (e) => ({
  edgesFocusable: e.edgesFocusable,
  edgesReconnectable: e.edgesReconnectable,
  elementsSelectable: e.elementsSelectable,
  connectionMode: e.connectionMode,
  onError: e.onError
});
function mC({ defaultMarkerColor: e, onlyRenderVisibleElements: t, rfId: n, edgeTypes: o, noPanClassName: r, onReconnect: i, onEdgeContextMenu: a, onEdgeMouseEnter: l, onEdgeMouseMove: c, onEdgeMouseLeave: u, onEdgeClick: f, reconnectRadius: d, onEdgeDoubleClick: p, onReconnectStart: h, onReconnectEnd: g, disableKeyboardA11y: m }) {
  const { edgesFocusable: y, edgesReconnectable: x, elementsSelectable: T, onError: b } = ht(zU, Yt), w = CU(t);
  return Te("div", { className: "react-flow__edges", children: [$(kU, { defaultColor: e, rfId: n }), w.map((S) => $(FU, { id: S, edgesFocusable: y, edgesReconnectable: x, elementsSelectable: T, noPanClassName: r, onReconnect: i, onContextMenu: a, onMouseEnter: l, onMouseMove: c, onMouseLeave: u, onClick: f, reconnectRadius: d, onDoubleClick: p, onReconnectStart: h, onReconnectEnd: g, rfId: n, onError: b, edgeTypes: o, disableKeyboardA11y: m }, S))] });
}
mC.displayName = "EdgeRenderer";
const jU = Ie(mC), VU = (e) => `translate(${e.transform[0]}px,${e.transform[1]}px) scale(${e.transform[2]})`;
function HU({ children: e }) {
  const t = ht(VU);
  return $("div", { className: "react-flow__viewport xyflow__viewport react-flow__container", style: { transform: t }, children: e });
}
function WU(e) {
  const t = nf(), n = et(!1);
  dt(() => {
    !n.current && t.viewportInitialized && e && (setTimeout(() => e(t), 1), n.current = !0);
  }, [e, t.viewportInitialized]);
}
const UU = (e) => {
  var t;
  return (t = e.panZoom) == null ? void 0 : t.syncViewport;
};
function qU(e) {
  const t = ht(UU), n = qt();
  return dt(() => {
    e && (t == null || t(e), n.setState({ transform: [e.x, e.y, e.zoom] }));
  }, [e, t]), null;
}
function KU(e) {
  return e.connection.inProgress ? { ...e.connection, to: Ul(e.connection.to, e.transform) } : { ...e.connection };
}
function YU(e) {
  return KU;
}
function GU(e) {
  const t = YU();
  return ht(t, Yt);
}
const XU = (e) => ({
  nodesConnectable: e.nodesConnectable,
  isValid: e.connection.isValid,
  inProgress: e.connection.inProgress,
  width: e.width,
  height: e.height
});
function ZU({ containerStyle: e, style: t, type: n, component: o }) {
  const { nodesConnectable: r, width: i, height: a, isValid: l, inProgress: c } = ht(XU, Yt);
  return !(i && r && c) ? null : $("svg", { style: e, width: i, height: a, className: "react-flow__connectionline react-flow__container", children: $("g", { className: pn(["react-flow__connection", hE(l)]), children: $(gC, { style: t, type: n, CustomComponent: o, isValid: l }) }) });
}
const gC = ({ style: e, type: t = lo.Bezier, CustomComponent: n, isValid: o }) => {
  const { inProgress: r, from: i, fromNode: a, fromHandle: l, fromPosition: c, to: u, toNode: f, toHandle: d, toPosition: p } = GU();
  if (!r)
    return;
  if (n)
    return $(n, { connectionLineType: t, connectionLineStyle: e, fromNode: a, fromHandle: l, fromX: i.x, fromY: i.y, toX: u.x, toY: u.y, fromPosition: c, toPosition: p, connectionStatus: hE(o), toNode: f, toHandle: d });
  let h = "";
  const g = {
    sourceX: i.x,
    sourceY: i.y,
    sourcePosition: c,
    targetX: u.x,
    targetY: u.y,
    targetPosition: p
  };
  switch (t) {
    case lo.Bezier:
      [h] = cg(g);
      break;
    case lo.SimpleBezier:
      [h] = oC(g);
      break;
    case lo.Step:
      [h] = xh({
        ...g,
        borderRadius: 0
      });
      break;
    case lo.SmoothStep:
      [h] = xh(g);
      break;
    default:
      [h] = kE(g);
  }
  return $("path", { d: h, fill: "none", className: "react-flow__connection-path", style: e });
};
gC.displayName = "ConnectionLine";
const QU = {};
function Wv(e = QU) {
  const t = et(e), n = qt();
  dt(() => {
    var o, r;
    if (process.env.NODE_ENV === "development") {
      const i = /* @__PURE__ */ new Set([...Object.keys(t.current), ...Object.keys(e)]);
      for (const a of i)
        if (t.current[a] !== e[a]) {
          (r = (o = n.getState()).onError) == null || r.call(o, "002", Vn.error002());
          break;
        }
      t.current = e;
    }
  }, [e]);
}
function JU() {
  const e = qt(), t = et(!1);
  dt(() => {
    var n, o;
    if (process.env.NODE_ENV === "development" && !t.current) {
      const r = document.querySelector(".react-flow__pane");
      r && window.getComputedStyle(r).zIndex !== "1" && ((o = (n = e.getState()).onError) == null || o.call(n, "013", Vn.error013("react"))), t.current = !0;
    }
  }, []);
}
function yC({ nodeTypes: e, edgeTypes: t, onInit: n, onNodeClick: o, onEdgeClick: r, onNodeDoubleClick: i, onEdgeDoubleClick: a, onNodeMouseEnter: l, onNodeMouseMove: c, onNodeMouseLeave: u, onNodeContextMenu: f, onSelectionContextMenu: d, onSelectionStart: p, onSelectionEnd: h, connectionLineType: g, connectionLineStyle: m, connectionLineComponent: y, connectionLineContainerStyle: x, selectionKeyCode: T, selectionOnDrag: b, selectionMode: w, multiSelectionKeyCode: S, panActivationKeyCode: E, zoomActivationKeyCode: C, deleteKeyCode: R, onlyRenderVisibleElements: M, elementsSelectable: v, defaultViewport: I, translateExtent: k, minZoom: A, maxZoom: O, preventScrolling: _, defaultMarkerColor: N, zoomOnScroll: L, zoomOnPinch: F, panOnScroll: D, panOnScrollSpeed: B, panOnScrollMode: z, zoomOnDoubleClick: U, panOnDrag: q, onPaneClick: Y, onPaneMouseEnter: K, onPaneMouseMove: te, onPaneMouseLeave: ne, onPaneScroll: W, onPaneContextMenu: ee, paneClickDistance: G, nodeClickDistance: re, onEdgeContextMenu: V, onEdgeMouseEnter: de, onEdgeMouseMove: ue, onEdgeMouseLeave: xe, reconnectRadius: Ae, onReconnect: we, onReconnectStart: De, onReconnectEnd: Ce, noDragClassName: Be, noWheelClassName: Me, noPanClassName: j, disableKeyboardA11y: J, nodeExtent: ie, rfId: Q, viewport: H, onViewportChange: X }) {
  return Wv(e), Wv(t), JU(), WU(n), qU(H), $(gU, { onPaneClick: Y, onPaneMouseEnter: K, onPaneMouseMove: te, onPaneMouseLeave: ne, onPaneContextMenu: ee, onPaneScroll: W, paneClickDistance: G, deleteKeyCode: R, selectionKeyCode: T, selectionOnDrag: b, selectionMode: w, onSelectionStart: p, onSelectionEnd: h, multiSelectionKeyCode: S, panActivationKeyCode: E, zoomActivationKeyCode: C, elementsSelectable: v, zoomOnScroll: L, zoomOnPinch: F, zoomOnDoubleClick: U, panOnScroll: D, panOnScrollSpeed: B, panOnScrollMode: z, panOnDrag: q, defaultViewport: I, translateExtent: k, minZoom: A, maxZoom: O, onSelectionContextMenu: d, preventScrolling: _, noDragClassName: Be, noWheelClassName: Me, noPanClassName: j, disableKeyboardA11y: J, onViewportChange: X, isControlledViewport: !!H, children: Te(HU, { children: [$(jU, { edgeTypes: t, onEdgeClick: r, onEdgeDoubleClick: a, onReconnect: we, onReconnectStart: De, onReconnectEnd: Ce, onlyRenderVisibleElements: M, onEdgeContextMenu: V, onEdgeMouseEnter: de, onEdgeMouseMove: ue, onEdgeMouseLeave: xe, reconnectRadius: Ae, defaultMarkerColor: N, noPanClassName: j, disableKeyboardA11y: J, rfId: Q }), $(ZU, { style: m, type: g, component: y, containerStyle: x }), $("div", { className: "react-flow__edgelabel-renderer" }), $(EU, { nodeTypes: e, onNodeClick: o, onNodeDoubleClick: i, onNodeMouseEnter: l, onNodeMouseMove: c, onNodeMouseLeave: u, onNodeContextMenu: f, nodeClickDistance: re, onlyRenderVisibleElements: M, noPanClassName: j, noDragClassName: Be, disableKeyboardA11y: J, nodeExtent: ie, rfId: Q }), $("div", { className: "react-flow__viewport-portal" })] }) });
}
yC.displayName = "GraphView";
const e8 = Ie(yC), Uv = ({ nodes: e, edges: t, defaultNodes: n, defaultEdges: o, width: r, height: i, fitView: a, fitViewOptions: l, minZoom: c = 0.5, maxZoom: u = 2, nodeOrigin: f, nodeExtent: d } = {}) => {
  const p = /* @__PURE__ */ new Map(), h = /* @__PURE__ */ new Map(), g = /* @__PURE__ */ new Map(), m = /* @__PURE__ */ new Map(), y = o ?? t ?? [], x = n ?? e ?? [], T = f ?? [0, 0], b = d ?? dl;
  NE(g, m, y);
  const w = Sh(x, p, h, {
    nodeOrigin: T,
    nodeExtent: b,
    elevateNodesOnSelect: !1
  });
  let S = [0, 0, 1];
  if (a && r && i) {
    const E = Wl(p, {
      filter: (v) => !!((v.width || v.initialWidth) && (v.height || v.initialHeight))
    }), { x: C, y: R, zoom: M } = ag(E, r, i, c, u, (l == null ? void 0 : l.padding) ?? 0.1);
    S = [C, R, M];
  }
  return {
    rfId: "1",
    width: 0,
    height: 0,
    transform: S,
    nodes: x,
    nodesInitialized: w,
    nodeLookup: p,
    parentLookup: h,
    edges: y,
    edgeLookup: m,
    connectionLookup: g,
    onNodesChange: null,
    onEdgesChange: null,
    hasDefaultNodes: n !== void 0,
    hasDefaultEdges: o !== void 0,
    panZoom: null,
    minZoom: c,
    maxZoom: u,
    translateExtent: dl,
    nodeExtent: b,
    nodesSelectionActive: !1,
    userSelectionActive: !1,
    userSelectionRect: null,
    connectionMode: Ds.Strict,
    domNode: null,
    paneDragging: !1,
    noPanClassName: "nopan",
    nodeOrigin: T,
    nodeDragThreshold: 1,
    snapGrid: [15, 15],
    snapToGrid: !1,
    nodesDraggable: !0,
    nodesConnectable: !0,
    nodesFocusable: !0,
    edgesFocusable: !0,
    edgesReconnectable: !0,
    elementsSelectable: !0,
    elevateNodesOnSelect: !0,
    elevateEdgesOnSelect: !1,
    selectNodesOnDrag: !0,
    multiSelectionActive: !1,
    fitViewQueued: a ?? !1,
    fitViewOptions: l,
    fitViewResolver: null,
    connection: { ...pE },
    connectionClickStartHandle: null,
    connectOnClick: !0,
    ariaLiveMessage: "",
    autoPanOnConnect: !0,
    autoPanOnNodeDrag: !0,
    autoPanSpeed: 15,
    connectionRadius: 20,
    onError: _u,
    isValidConnection: void 0,
    onSelectionChangeHandlers: [],
    lib: "react",
    debug: !1
  };
}, t8 = ({ nodes: e, edges: t, defaultNodes: n, defaultEdges: o, width: r, height: i, fitView: a, fitViewOptions: l, minZoom: c, maxZoom: u, nodeOrigin: f, nodeExtent: d }) => v6((p, h) => {
  async function g() {
    const { nodeLookup: m, panZoom: y, fitViewOptions: x, fitViewResolver: T, width: b, height: w, minZoom: S, maxZoom: E } = h();
    y && (await yW({
      nodes: m,
      width: b,
      height: w,
      panZoom: y,
      minZoom: S,
      maxZoom: E
    }, x), T == null || T.resolve(!0), p({ fitViewResolver: null }));
  }
  return {
    ...Uv({
      nodes: e,
      edges: t,
      width: r,
      height: i,
      fitView: a,
      fitViewOptions: l,
      minZoom: c,
      maxZoom: u,
      nodeOrigin: f,
      nodeExtent: d,
      defaultNodes: n,
      defaultEdges: o
    }),
    setNodes: (m) => {
      const { nodeLookup: y, parentLookup: x, nodeOrigin: T, elevateNodesOnSelect: b, fitViewQueued: w } = h(), S = Sh(m, y, x, {
        nodeOrigin: T,
        nodeExtent: d,
        elevateNodesOnSelect: b,
        checkEquality: !0
      });
      w && S ? (g(), p({ nodes: m, nodesInitialized: S, fitViewQueued: !1, fitViewOptions: void 0 })) : p({ nodes: m, nodesInitialized: S });
    },
    setEdges: (m) => {
      const { connectionLookup: y, edgeLookup: x } = h();
      NE(y, x, m), p({ edges: m });
    },
    setDefaultNodesAndEdges: (m, y) => {
      if (m) {
        const { setNodes: x } = h();
        x(m), p({ hasDefaultNodes: !0 });
      }
      if (y) {
        const { setEdges: x } = h();
        x(y), p({ hasDefaultEdges: !0 });
      }
    },
    /*
     * Every node gets registerd at a ResizeObserver. Whenever a node
     * changes its dimensions, this function is called to measure the
     * new dimensions and update the nodes.
     */
    updateNodeInternals: (m) => {
      const { triggerNodeChanges: y, nodeLookup: x, parentLookup: T, domNode: b, nodeOrigin: w, nodeExtent: S, debug: E, fitViewQueued: C } = h(), { changes: R, updatedInternals: M } = DW(m, x, T, b, w, S);
      M && (MW(x, T, { nodeOrigin: w, nodeExtent: S }), C ? (g(), p({ fitViewQueued: !1, fitViewOptions: void 0 })) : p({}), (R == null ? void 0 : R.length) > 0 && (E && console.log("React Flow: trigger node changes", R), y == null || y(R)));
    },
    updateNodePositions: (m, y = !1) => {
      const x = [], T = [], { nodeLookup: b, triggerNodeChanges: w } = h();
      for (const [S, E] of m) {
        const C = b.get(S), R = !!(C != null && C.expandParent && (C != null && C.parentId) && (E != null && E.position)), M = {
          id: S,
          type: "position",
          position: R ? {
            x: Math.max(0, E.position.x),
            y: Math.max(0, E.position.y)
          } : E.position,
          dragging: y
        };
        R && C.parentId && x.push({
          id: S,
          parentId: C.parentId,
          rect: {
            ...E.internals.positionAbsolute,
            width: E.measured.width ?? 0,
            height: E.measured.height ?? 0
          }
        }), T.push(M);
      }
      if (x.length > 0) {
        const { parentLookup: S, nodeOrigin: E } = h(), C = pg(x, b, S, E);
        T.push(...C);
      }
      w(T);
    },
    triggerNodeChanges: (m) => {
      const { onNodesChange: y, setNodes: x, nodes: T, hasDefaultNodes: b, debug: w } = h();
      if (m != null && m.length) {
        if (b) {
          const S = z6(m, T);
          x(S);
        }
        w && console.log("React Flow: trigger node changes", m), y == null || y(m);
      }
    },
    triggerEdgeChanges: (m) => {
      const { onEdgesChange: y, setEdges: x, edges: T, hasDefaultEdges: b, debug: w } = h();
      if (m != null && m.length) {
        if (b) {
          const S = j6(m, T);
          x(S);
        }
        w && console.log("React Flow: trigger edge changes", m), y == null || y(m);
      }
    },
    addSelectedNodes: (m) => {
      const { multiSelectionActive: y, edgeLookup: x, nodeLookup: T, triggerNodeChanges: b, triggerEdgeChanges: w } = h();
      if (y) {
        const S = m.map((E) => wi(E, !0));
        b(S);
        return;
      }
      b(ps(T, /* @__PURE__ */ new Set([...m]), !0)), w(ps(x));
    },
    addSelectedEdges: (m) => {
      const { multiSelectionActive: y, edgeLookup: x, nodeLookup: T, triggerNodeChanges: b, triggerEdgeChanges: w } = h();
      if (y) {
        const S = m.map((E) => wi(E, !0));
        w(S);
        return;
      }
      w(ps(x, /* @__PURE__ */ new Set([...m]))), b(ps(T, /* @__PURE__ */ new Set(), !0));
    },
    unselectNodesAndEdges: ({ nodes: m, edges: y } = {}) => {
      const { edges: x, nodes: T, nodeLookup: b, triggerNodeChanges: w, triggerEdgeChanges: S } = h(), E = m || T, C = y || x, R = E.map((v) => {
        const I = b.get(v.id);
        return I && (I.selected = !1), wi(v.id, !1);
      }), M = C.map((v) => wi(v.id, !1));
      w(R), S(M);
    },
    setMinZoom: (m) => {
      const { panZoom: y, maxZoom: x } = h();
      y == null || y.setScaleExtent([m, x]), p({ minZoom: m });
    },
    setMaxZoom: (m) => {
      const { panZoom: y, minZoom: x } = h();
      y == null || y.setScaleExtent([x, m]), p({ maxZoom: m });
    },
    setTranslateExtent: (m) => {
      var y;
      (y = h().panZoom) == null || y.setTranslateExtent(m), p({ translateExtent: m });
    },
    setPaneClickDistance: (m) => {
      var y;
      (y = h().panZoom) == null || y.setClickDistance(m);
    },
    resetSelectedElements: () => {
      const { edges: m, nodes: y, triggerNodeChanges: x, triggerEdgeChanges: T, elementsSelectable: b } = h();
      if (!b)
        return;
      const w = y.reduce((E, C) => C.selected ? [...E, wi(C.id, !1)] : E, []), S = m.reduce((E, C) => C.selected ? [...E, wi(C.id, !1)] : E, []);
      x(w), T(S);
    },
    setNodeExtent: (m) => {
      const { nodes: y, nodeLookup: x, parentLookup: T, nodeOrigin: b, elevateNodesOnSelect: w, nodeExtent: S } = h();
      m[0][0] === S[0][0] && m[0][1] === S[0][1] && m[1][0] === S[1][0] && m[1][1] === S[1][1] || (Sh(y, x, T, {
        nodeOrigin: b,
        nodeExtent: m,
        elevateNodesOnSelect: w,
        checkEquality: !1
      }), p({ nodeExtent: m }));
    },
    panBy: (m) => {
      const { transform: y, width: x, height: T, panZoom: b, translateExtent: w } = h();
      return LW({ delta: m, panZoom: b, transform: y, translateExtent: w, width: x, height: T });
    },
    cancelConnection: () => {
      p({
        connection: { ...pE }
      });
    },
    updateConnection: (m) => {
      p({ connection: m });
    },
    reset: () => p({ ...Uv() })
  };
}, Object.is);
function bC({ initialNodes: e, initialEdges: t, defaultNodes: n, defaultEdges: o, initialWidth: r, initialHeight: i, initialMinZoom: a, initialMaxZoom: l, initialFitViewOptions: c, fitView: u, nodeOrigin: f, nodeExtent: d, children: p }) {
  const [h] = yn(() => t8({
    nodes: e,
    edges: t,
    defaultNodes: n,
    defaultEdges: o,
    width: r,
    height: i,
    fitView: u,
    minZoom: a,
    maxZoom: l,
    fitViewOptions: c,
    nodeOrigin: f,
    nodeExtent: d
  }));
  return $(x6, { value: h, children: $(U6, { children: p }) });
}
function n8({ children: e, nodes: t, edges: n, defaultNodes: o, defaultEdges: r, width: i, height: a, fitView: l, fitViewOptions: c, minZoom: u, maxZoom: f, nodeOrigin: d, nodeExtent: p }) {
  return Qr(tf) ? $(mo, { children: e }) : $(bC, { initialNodes: t, initialEdges: n, defaultNodes: o, defaultEdges: r, initialWidth: i, initialHeight: a, fitView: l, initialFitViewOptions: c, initialMinZoom: u, initialMaxZoom: f, nodeOrigin: d, nodeExtent: p, children: e });
}
const o8 = {
  width: "100%",
  height: "100%",
  overflow: "hidden",
  position: "relative",
  zIndex: 0
};
function r8({ nodes: e, edges: t, defaultNodes: n, defaultEdges: o, className: r, nodeTypes: i, edgeTypes: a, onNodeClick: l, onEdgeClick: c, onInit: u, onMove: f, onMoveStart: d, onMoveEnd: p, onConnect: h, onConnectStart: g, onConnectEnd: m, onClickConnectStart: y, onClickConnectEnd: x, onNodeMouseEnter: T, onNodeMouseMove: b, onNodeMouseLeave: w, onNodeContextMenu: S, onNodeDoubleClick: E, onNodeDragStart: C, onNodeDrag: R, onNodeDragStop: M, onNodesDelete: v, onEdgesDelete: I, onDelete: k, onSelectionChange: A, onSelectionDragStart: O, onSelectionDrag: _, onSelectionDragStop: N, onSelectionContextMenu: L, onSelectionStart: F, onSelectionEnd: D, onBeforeDelete: B, connectionMode: z, connectionLineType: U = lo.Bezier, connectionLineStyle: q, connectionLineComponent: Y, connectionLineContainerStyle: K, deleteKeyCode: te = "Backspace", selectionKeyCode: ne = "Shift", selectionOnDrag: W = !1, selectionMode: ee = fl.Full, panActivationKeyCode: G = "Space", multiSelectionKeyCode: re = Du() ? "Meta" : "Control", zoomActivationKeyCode: V = Du() ? "Meta" : "Control", snapToGrid: de, snapGrid: ue, onlyRenderVisibleElements: xe = !1, selectNodesOnDrag: Ae, nodesDraggable: we, nodesConnectable: De, nodesFocusable: Ce, nodeOrigin: Be = qE, edgesFocusable: Me, edgesReconnectable: j, elementsSelectable: J = !0, defaultViewport: ie = M6, minZoom: Q = 0.5, maxZoom: H = 2, translateExtent: X = dl, preventScrolling: se = !0, nodeExtent: ye, defaultMarkerColor: he = "#b1b1b7", zoomOnScroll: le = !0, zoomOnPinch: ae = !0, panOnScroll: ce = !1, panOnScrollSpeed: Se = 0.5, panOnScrollMode: $e = ki.Free, zoomOnDoubleClick: oe = !0, panOnDrag: be = !0, onPaneClick: Ne, onPaneMouseEnter: We, onPaneMouseMove: Ue, onPaneMouseLeave: vt, onPaneScroll: ut, onPaneContextMenu: Tt, paneClickDistance: je = 0, nodeClickDistance: ft = 0, children: Et, onReconnect: Le, onReconnectStart: Bt, onReconnectEnd: Lt, onEdgeContextMenu: Gt, onEdgeDoubleClick: vo, onEdgeMouseEnter: hn, onEdgeMouseMove: Sn, onEdgeMouseLeave: _r, reconnectRadius: Jn = 10, onNodesChange: Wi, onEdgesChange: pi, noDragClassName: xn = "nodrag", noWheelClassName: an = "nowheel", noPanClassName: eo = "nopan", fitView: hi, fitViewOptions: ve, connectOnClick: pe, attributionPosition: _e, proOptions: Ge, defaultEdgeOptions: Ze, elevateNodesOnSelect: pt, elevateEdgesOnSelect: Xt, disableKeyboardA11y: wn = !1, autoPanOnConnect: mi, autoPanOnNodeDrag: sf, autoPanSpeed: Gl, connectionRadius: Ui, isValidConnection: qi, onError: gt, style: xo, id: _o, nodeDragThreshold: gi, viewport: af, onViewportChange: FC, width: zC, height: jC, colorMode: VC = "light", debug: HC, onScroll: Xl, ...WC }, UC) {
  const lf = _o || "1", qC = L6(VC), KC = ze((Sg) => {
    Sg.currentTarget.scrollTo({ top: 0, left: 0, behavior: "instant" }), Xl == null || Xl(Sg);
  }, [Xl]);
  return $("div", { "data-testid": "rf__wrapper", ...WC, onScroll: KC, style: { ...xo, ...o8 }, ref: UC, className: pn(["react-flow", r, qC]), id: _o, children: Te(n8, { nodes: e, edges: t, width: zC, height: jC, fitView: hi, fitViewOptions: ve, minZoom: Q, maxZoom: H, nodeOrigin: Be, nodeExtent: ye, children: [$(e8, { onInit: u, onNodeClick: l, onEdgeClick: c, onNodeMouseEnter: T, onNodeMouseMove: b, onNodeMouseLeave: w, onNodeContextMenu: S, onNodeDoubleClick: E, nodeTypes: i, edgeTypes: a, connectionLineType: U, connectionLineStyle: q, connectionLineComponent: Y, connectionLineContainerStyle: K, selectionKeyCode: ne, selectionOnDrag: W, selectionMode: ee, deleteKeyCode: te, multiSelectionKeyCode: re, panActivationKeyCode: G, zoomActivationKeyCode: V, onlyRenderVisibleElements: xe, defaultViewport: ie, translateExtent: X, minZoom: Q, maxZoom: H, preventScrolling: se, zoomOnScroll: le, zoomOnPinch: ae, zoomOnDoubleClick: oe, panOnScroll: ce, panOnScrollSpeed: Se, panOnScrollMode: $e, panOnDrag: be, onPaneClick: Ne, onPaneMouseEnter: We, onPaneMouseMove: Ue, onPaneMouseLeave: vt, onPaneScroll: ut, onPaneContextMenu: Tt, paneClickDistance: je, nodeClickDistance: ft, onSelectionContextMenu: L, onSelectionStart: F, onSelectionEnd: D, onReconnect: Le, onReconnectStart: Bt, onReconnectEnd: Lt, onEdgeContextMenu: Gt, onEdgeDoubleClick: vo, onEdgeMouseEnter: hn, onEdgeMouseMove: Sn, onEdgeMouseLeave: _r, reconnectRadius: Jn, defaultMarkerColor: he, noDragClassName: xn, noWheelClassName: an, noPanClassName: eo, rfId: lf, disableKeyboardA11y: wn, nodeExtent: ye, viewport: af, onViewportChange: FC }), $(D6, { nodes: e, edges: t, defaultNodes: n, defaultEdges: o, onConnect: h, onConnectStart: g, onConnectEnd: m, onClickConnectStart: y, onClickConnectEnd: x, nodesDraggable: we, nodesConnectable: De, nodesFocusable: Ce, edgesFocusable: Me, edgesReconnectable: j, elementsSelectable: J, elevateNodesOnSelect: pt, elevateEdgesOnSelect: Xt, minZoom: Q, maxZoom: H, nodeExtent: ye, onNodesChange: Wi, onEdgesChange: pi, snapToGrid: de, snapGrid: ue, connectionMode: z, translateExtent: X, connectOnClick: pe, defaultEdgeOptions: Ze, fitView: hi, fitViewOptions: ve, onNodesDelete: v, onEdgesDelete: I, onDelete: k, onNodeDragStart: C, onNodeDrag: R, onNodeDragStop: M, onSelectionDrag: _, onSelectionDragStart: O, onSelectionDragStop: N, onMove: f, onMoveStart: d, onMoveEnd: p, noPanClassName: eo, nodeOrigin: Be, rfId: lf, autoPanOnConnect: mi, autoPanOnNodeDrag: sf, autoPanSpeed: Gl, onError: gt, connectionRadius: Ui, isValidConnection: qi, selectNodesOnDrag: Ae, nodeDragThreshold: gi, onBeforeDelete: B, paneClickDistance: je, debug: HC }), $(N6, { onSelectionChange: A }), Et, $($6, { proOptions: Ge, position: _e }), $(C6, { rfId: lf, disableKeyboardA11y: wn })] }) });
}
var i8 = YE(r8);
const s8 = (e) => {
  var t;
  return (t = e.domNode) == null ? void 0 : t.querySelector(".react-flow__edgelabel-renderer");
};
function a8({ children: e }) {
  const t = ht(s8);
  return t ? JC(e, t) : null;
}
const l8 = (e) => ({
  x: e.transform[0],
  y: e.transform[1],
  zoom: e.transform[2]
});
function c8() {
  return ht(l8, Yt);
}
function u8({ dimensions: e, lineWidth: t, variant: n, className: o }) {
  return $("path", { strokeWidth: t, d: `M${e[0] / 2} 0 V${e[1]} M0 ${e[1] / 2} H${e[0]}`, className: pn(["react-flow__background-pattern", n, o]) });
}
function d8({ radius: e, className: t }) {
  return $("circle", { cx: e, cy: e, r: e, className: pn(["react-flow__background-pattern", "dots", t]) });
}
var Ur;
(function(e) {
  e.Lines = "lines", e.Dots = "dots", e.Cross = "cross";
})(Ur || (Ur = {}));
const f8 = {
  [Ur.Dots]: 1,
  [Ur.Lines]: 1,
  [Ur.Cross]: 6
}, p8 = (e) => ({ transform: e.transform, patternId: `pattern-${e.rfId}` });
function vC({
  id: e,
  variant: t = Ur.Dots,
  // only used for dots and cross
  gap: n = 20,
  // only used for lines and cross
  size: o,
  lineWidth: r = 1,
  offset: i = 0,
  color: a,
  bgColor: l,
  style: c,
  className: u,
  patternClassName: f
}) {
  const d = et(null), { transform: p, patternId: h } = ht(p8, Yt), g = o || f8[t], m = t === Ur.Dots, y = t === Ur.Cross, x = Array.isArray(n) ? n : [n, n], T = [x[0] * p[2] || 1, x[1] * p[2] || 1], b = g * p[2], w = Array.isArray(i) ? i : [i, i], S = y ? [b, b] : T, E = [
    w[0] * p[2] || 1 + S[0] / 2,
    w[1] * p[2] || 1 + S[1] / 2
  ], C = `${h}${e || ""}`;
  return Te("svg", { className: pn(["react-flow__background", u]), style: {
    ...c,
    ...of,
    "--xy-background-color-props": l,
    "--xy-background-pattern-color-props": a
  }, ref: d, "data-testid": "rf__background", children: [$("pattern", { id: C, x: p[0] % T[0], y: p[1] % T[1], width: T[0], height: T[1], patternUnits: "userSpaceOnUse", patternTransform: `translate(-${E[0]},-${E[1]})`, children: m ? $(d8, { radius: b / 2, className: f }) : $(u8, { dimensions: S, lineWidth: r, variant: t, className: f }) }), $("rect", { x: "0", y: "0", width: "100%", height: "100%", fill: `url(#${C})` })] });
}
vC.displayName = "Background";
Ie(vC);
function h8() {
  return $("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 32 32", children: $("path", { d: "M32 18.133H18.133V32h-4.266V18.133H0v-4.266h13.867V0h4.266v13.867H32z" }) });
}
function m8() {
  return $("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 32 5", children: $("path", { d: "M0 0h32v4.2H0z" }) });
}
function g8() {
  return $("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 32 30", children: $("path", { d: "M3.692 4.63c0-.53.4-.938.939-.938h5.215V0H4.708C2.13 0 0 2.054 0 4.63v5.216h3.692V4.631zM27.354 0h-5.2v3.692h5.17c.53 0 .984.4.984.939v5.215H32V4.631A4.624 4.624 0 0027.354 0zm.954 24.83c0 .532-.4.94-.939.94h-5.215v3.768h5.215c2.577 0 4.631-2.13 4.631-4.707v-5.139h-3.692v5.139zm-23.677.94c-.531 0-.939-.4-.939-.94v-5.138H0v5.139c0 2.577 2.13 4.707 4.708 4.707h5.138V25.77H4.631z" }) });
}
function y8() {
  return $("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 25 32", children: $("path", { d: "M21.333 10.667H19.81V7.619C19.81 3.429 16.38 0 12.19 0 8 0 4.571 3.429 4.571 7.619v3.048H3.048A3.056 3.056 0 000 13.714v15.238A3.056 3.056 0 003.048 32h18.285a3.056 3.056 0 003.048-3.048V13.714a3.056 3.056 0 00-3.048-3.047zM12.19 24.533a3.056 3.056 0 01-3.047-3.047 3.056 3.056 0 013.047-3.048 3.056 3.056 0 013.048 3.048 3.056 3.056 0 01-3.048 3.047zm4.724-13.866H7.467V7.619c0-2.59 2.133-4.724 4.723-4.724 2.591 0 4.724 2.133 4.724 4.724v3.048z" }) });
}
function b8() {
  return $("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 25 32", children: $("path", { d: "M21.333 10.667H19.81V7.619C19.81 3.429 16.38 0 12.19 0c-4.114 1.828-1.37 2.133.305 2.438 1.676.305 4.42 2.59 4.42 5.181v3.048H3.047A3.056 3.056 0 000 13.714v15.238A3.056 3.056 0 003.048 32h18.285a3.056 3.056 0 003.048-3.048V13.714a3.056 3.056 0 00-3.048-3.047zM12.19 24.533a3.056 3.056 0 01-3.047-3.047 3.056 3.056 0 013.047-3.048 3.056 3.056 0 013.048 3.048 3.056 3.056 0 01-3.048 3.047z" }) });
}
function Rc({ children: e, className: t, ...n }) {
  return $("button", { type: "button", className: pn(["react-flow__controls-button", t]), ...n, children: e });
}
const v8 = (e) => ({
  isInteractive: e.nodesDraggable || e.nodesConnectable || e.elementsSelectable,
  minZoomReached: e.transform[2] <= e.minZoom,
  maxZoomReached: e.transform[2] >= e.maxZoom
});
function xC({ style: e, showZoom: t = !0, showFitView: n = !0, showInteractive: o = !0, fitViewOptions: r, onZoomIn: i, onZoomOut: a, onFitView: l, onInteractiveChange: c, className: u, children: f, position: d = "bottom-left", orientation: p = "vertical", "aria-label": h = "React Flow controls" }) {
  const g = qt(), { isInteractive: m, minZoomReached: y, maxZoomReached: x } = ht(v8, Yt), { zoomIn: T, zoomOut: b, fitView: w } = nf(), S = () => {
    T(), i == null || i();
  }, E = () => {
    b(), a == null || a();
  }, C = () => {
    w(r), l == null || l();
  }, R = () => {
    g.setState({
      nodesDraggable: !m,
      nodesConnectable: !m,
      elementsSelectable: !m
    }), c == null || c(!m);
  };
  return Te(ql, { className: pn(["react-flow__controls", p === "horizontal" ? "horizontal" : "vertical", u]), position: d, style: e, "data-testid": "rf__controls", "aria-label": h, children: [t && Te(mo, { children: [$(Rc, { onClick: S, className: "react-flow__controls-zoomin", title: "zoom in", "aria-label": "zoom in", disabled: x, children: $(h8, {}) }), $(Rc, { onClick: E, className: "react-flow__controls-zoomout", title: "zoom out", "aria-label": "zoom out", disabled: y, children: $(m8, {}) })] }), n && $(Rc, { className: "react-flow__controls-fitview", onClick: C, title: "fit view", "aria-label": "fit view", children: $(g8, {}) }), o && $(Rc, { className: "react-flow__controls-interactive", onClick: R, title: "toggle interactivity", "aria-label": "toggle interactivity", children: m ? $(b8, {}) : $(y8, {}) }), f] });
}
xC.displayName = "Controls";
Ie(xC);
function x8({ id: e, x: t, y: n, width: o, height: r, style: i, color: a, strokeColor: l, strokeWidth: c, className: u, borderRadius: f, shapeRendering: d, selected: p, onClick: h }) {
  const { background: g, backgroundColor: m } = i || {}, y = a || g || m;
  return $("rect", { className: pn(["react-flow__minimap-node", { selected: p }, u]), x: t, y: n, rx: f, ry: f, width: o, height: r, style: {
    fill: y,
    stroke: l,
    strokeWidth: c
  }, shapeRendering: d, onClick: h ? (x) => h(x, e) : void 0 });
}
const w8 = Ie(x8), S8 = (e) => e.nodes.map((t) => t.id), hp = (e) => e instanceof Function ? e : () => e;
function T8({
  nodeStrokeColor: e,
  nodeColor: t,
  nodeClassName: n = "",
  nodeBorderRadius: o = 5,
  nodeStrokeWidth: r,
  /*
   * We need to rename the prop to be `CapitalCase` so that JSX will render it as
   * a component properly.
   */
  nodeComponent: i = w8,
  onClick: a
}) {
  const l = ht(S8, Yt), c = hp(t), u = hp(e), f = hp(n), d = typeof window > "u" || window.chrome ? "crispEdges" : "geometricPrecision";
  return $(mo, { children: l.map((p) => (
    /*
     * The split of responsibilities between MiniMapNodes and
     * NodeComponentWrapper may appear weird. However, it’s designed to
     * minimize the cost of updates when individual nodes change.
     *
     * For more details, see a similar commit in `NodeRenderer/index.tsx`.
     */
    $(C8, { id: p, nodeColorFunc: c, nodeStrokeColorFunc: u, nodeClassNameFunc: f, nodeBorderRadius: o, nodeStrokeWidth: r, NodeComponent: i, onClick: a, shapeRendering: d }, p)
  )) });
}
function E8({ id: e, nodeColorFunc: t, nodeStrokeColorFunc: n, nodeClassNameFunc: o, nodeBorderRadius: r, nodeStrokeWidth: i, shapeRendering: a, NodeComponent: l, onClick: c }) {
  const { node: u, x: f, y: d, width: p, height: h } = ht((g) => {
    const { internals: m } = g.nodeLookup.get(e), y = m.userNode, { x, y: T } = m.positionAbsolute, { width: b, height: w } = Mr(y);
    return {
      node: y,
      x,
      y: T,
      width: b,
      height: w
    };
  }, Yt);
  return !u || u.hidden || !wE(u) ? null : $(l, { x: f, y: d, width: p, height: h, style: u.style, selected: !!u.selected, className: o(u), color: t(u), borderRadius: r, strokeColor: n(u), strokeWidth: i, shapeRendering: a, onClick: c, id: u.id });
}
const C8 = Ie(E8);
var O8 = Ie(T8);
const $8 = 200, I8 = 150, R8 = (e) => !e.hidden, k8 = (e) => {
  const t = {
    x: -e.transform[0] / e.transform[2],
    y: -e.transform[1] / e.transform[2],
    width: e.width / e.transform[2],
    height: e.height / e.transform[2]
  };
  return {
    viewBB: t,
    boundingRect: e.nodeLookup.size > 0 ? xE(Wl(e.nodeLookup, { filter: R8 }), t) : t,
    rfId: e.rfId,
    panZoom: e.panZoom,
    translateExtent: e.translateExtent,
    flowWidth: e.width,
    flowHeight: e.height
  };
}, P8 = "react-flow__minimap-desc";
function wC({
  style: e,
  className: t,
  nodeStrokeColor: n,
  nodeColor: o,
  nodeClassName: r = "",
  nodeBorderRadius: i = 5,
  nodeStrokeWidth: a,
  /*
   * We need to rename the prop to be `CapitalCase` so that JSX will render it as
   * a component properly.
   */
  nodeComponent: l,
  bgColor: c,
  maskColor: u,
  maskStrokeColor: f,
  maskStrokeWidth: d,
  position: p = "bottom-right",
  onClick: h,
  onNodeClick: g,
  pannable: m = !1,
  zoomable: y = !1,
  ariaLabel: x = "React Flow mini map",
  inversePan: T,
  zoomStep: b = 10,
  offsetScale: w = 5
}) {
  const S = qt(), E = et(null), { boundingRect: C, viewBB: R, rfId: M, panZoom: v, translateExtent: I, flowWidth: k, flowHeight: A } = ht(k8, Yt), O = (e == null ? void 0 : e.width) ?? $8, _ = (e == null ? void 0 : e.height) ?? I8, N = C.width / O, L = C.height / _, F = Math.max(N, L), D = F * O, B = F * _, z = w * F, U = C.x - (D - C.width) / 2 - z, q = C.y - (B - C.height) / 2 - z, Y = D + z * 2, K = B + z * 2, te = `${P8}-${M}`, ne = et(0), W = et();
  ne.current = F, dt(() => {
    if (E.current && v)
      return W.current = UW({
        domNode: E.current,
        panZoom: v,
        getTransform: () => S.getState().transform,
        getViewScale: () => ne.current
      }), () => {
        var re;
        (re = W.current) == null || re.destroy();
      };
  }, [v]), dt(() => {
    var re;
    (re = W.current) == null || re.update({
      translateExtent: I,
      width: k,
      height: A,
      inversePan: T,
      pannable: m,
      zoomStep: b,
      zoomable: y
    });
  }, [m, y, T, b, I, k, A]);
  const ee = h ? (re) => {
    var ue;
    const [V, de] = ((ue = W.current) == null ? void 0 : ue.pointer(re)) || [0, 0];
    h(re, { x: V, y: de });
  } : void 0, G = g ? ze((re, V) => {
    const de = S.getState().nodeLookup.get(V).internals.userNode;
    g(re, de);
  }, []) : void 0;
  return $(ql, { position: p, style: {
    ...e,
    "--xy-minimap-background-color-props": typeof c == "string" ? c : void 0,
    "--xy-minimap-mask-background-color-props": typeof u == "string" ? u : void 0,
    "--xy-minimap-mask-stroke-color-props": typeof f == "string" ? f : void 0,
    "--xy-minimap-mask-stroke-width-props": typeof d == "number" ? d * F : void 0,
    "--xy-minimap-node-background-color-props": typeof o == "string" ? o : void 0,
    "--xy-minimap-node-stroke-color-props": typeof n == "string" ? n : void 0,
    "--xy-minimap-node-stroke-width-props": typeof a == "number" ? a : void 0
  }, className: pn(["react-flow__minimap", t]), "data-testid": "rf__minimap", children: Te("svg", { width: O, height: _, viewBox: `${U} ${q} ${Y} ${K}`, className: "react-flow__minimap-svg", role: "img", "aria-labelledby": te, ref: E, onClick: ee, children: [x && $("title", { id: te, children: x }), $(O8, { onClick: G, nodeColor: o, nodeStrokeColor: n, nodeBorderRadius: i, nodeClassName: r, nodeStrokeWidth: a, nodeComponent: l }), $("path", { className: "react-flow__minimap-mask", d: `M${U - z},${q - z}h${Y + z * 2}v${K + z * 2}h${-Y - z * 2}z
        M${R.x},${R.y}h${R.width}v${R.height}h${-R.width}z`, fillRule: "evenodd", pointerEvents: "none" })] }) });
}
wC.displayName = "MiniMap";
const N8 = Ie(wC);
function M8({ nodeId: e, position: t, variant: n = ja.Handle, className: o, style: r = {}, children: i, color: a, minWidth: l = 10, minHeight: c = 10, maxWidth: u = Number.MAX_VALUE, maxHeight: f = Number.MAX_VALUE, keepAspectRatio: d = !1, resizeDirection: p, shouldResize: h, onResizeStart: g, onResize: m, onResizeEnd: y }) {
  const x = QE(), T = typeof e == "string" ? e : x, b = qt(), w = et(null), S = n === ja.Line ? "right" : "bottom-right", E = t ?? S, C = et(null);
  dt(() => {
    if (!(!w.current || !T))
      return C.current || (C.current = s6({
        domNode: w.current,
        nodeId: T,
        getStoreItems: () => {
          const { nodeLookup: I, transform: k, snapGrid: A, snapToGrid: O, nodeOrigin: _, domNode: N } = b.getState();
          return {
            nodeLookup: I,
            transform: k,
            snapGrid: A,
            snapToGrid: O,
            nodeOrigin: _,
            paneDomNode: N
          };
        },
        onChange: (I, k) => {
          const { triggerNodeChanges: A, nodeLookup: O, parentLookup: _, nodeOrigin: N } = b.getState(), L = [], F = { x: I.x, y: I.y }, D = O.get(T);
          if (D && D.expandParent && D.parentId) {
            const B = D.origin ?? N, z = I.width ?? D.measured.width ?? 0, U = I.height ?? D.measured.height ?? 0, q = {
              id: D.id,
              parentId: D.parentId,
              rect: {
                width: z,
                height: U,
                ...SE({
                  x: I.x ?? D.position.x,
                  y: I.y ?? D.position.y
                }, { width: z, height: U }, D.parentId, O, B)
              }
            }, Y = pg([q], O, _, N);
            L.push(...Y), F.x = I.x ? Math.max(B[0] * z, I.x) : void 0, F.y = I.y ? Math.max(B[1] * U, I.y) : void 0;
          }
          if (F.x !== void 0 && F.y !== void 0) {
            const B = {
              id: T,
              type: "position",
              position: { ...F }
            };
            L.push(B);
          }
          if (I.width !== void 0 && I.height !== void 0) {
            const z = {
              id: T,
              type: "dimensions",
              resizing: !0,
              setAttributes: p ? p === "horizontal" ? "width" : "height" : !0,
              dimensions: {
                width: I.width,
                height: I.height
              }
            };
            L.push(z);
          }
          for (const B of k) {
            const z = {
              ...B,
              type: "position"
            };
            L.push(z);
          }
          A(L);
        },
        onEnd: ({ width: I, height: k }) => {
          const A = {
            id: T,
            type: "dimensions",
            resizing: !1,
            dimensions: {
              width: I,
              height: k
            }
          };
          b.getState().triggerNodeChanges([A]);
        }
      })), C.current.update({
        controlPosition: E,
        boundaries: {
          minWidth: l,
          minHeight: c,
          maxWidth: u,
          maxHeight: f
        },
        keepAspectRatio: d,
        resizeDirection: p,
        onResizeStart: g,
        onResize: m,
        onResizeEnd: y,
        shouldResize: h
      }), () => {
        var I;
        (I = C.current) == null || I.destroy();
      };
  }, [
    E,
    l,
    c,
    u,
    f,
    d,
    g,
    m,
    y,
    h
  ]);
  const R = E.split("-"), M = n === ja.Line ? "borderColor" : "backgroundColor", v = a ? { ...r, [M]: a } : r;
  return $("div", { className: pn(["react-flow__resize-control", "nodrag", ...R, n, o]), ref: w, style: v, children: i });
}
const _8 = Ie(M8);
var Zr = /* @__PURE__ */ ((e) => (e.Base = "Base", e.Group = "Group", e))(Zr || {}), Bu = /* @__PURE__ */ ((e) => (e.Base = "Base", e.DeleteLabel = "DeleteLabel", e))(Bu || {}), SC = ((e) => (e[e.Arrow = Ls.Arrow] = "Arrow", e[e.ArrowClosed = Ls.ArrowClosed] = "ArrowClosed", e))(SC || {}), TC = ((e) => (e[e.Bezier = lo.Bezier] = "Bezier", e[e.SimpleBezier = lo.SimpleBezier] = "SimpleBezier", e[e.Step = lo.Step] = "Step", e[e.SmoothStep = lo.SmoothStep] = "SmoothStep", e[e.Straight = lo.Straight] = "Straight", e))(TC || {});
const EC = fi()(
  Vi(
    (e) => ({
      logger: (t, n) => console.log(`${t}: ${n}`),
      hotkeys: {
        enabled: !1,
        keys: {
          copy: "mod+c",
          paste: "mod+v",
          delete: "backspace",
          cut: "mod+x",
          undo: "mod+z",
          redo: "mod+shift+z"
        }
      },
      canvas: {
        isGridLayout: !1,
        gridLayoutGap: [20, 20],
        minZoom: 0.5,
        // 50%
        maxZoom: 2,
        // 200%
        zoomDuration: 200,
        zoomStep: 1
      },
      styles: {
        nodeWidth: 250,
        nodeMinHeight: 100,
        nodeMaxHeight: "auto",
        edgeWidth: 2,
        edgeType: Bu.DeleteLabel,
        edgeEndMarkerType: SC.ArrowClosed,
        connectionLineType: TC.Bezier,
        connectionPosition: {
          source: "right",
          target: "left"
        }
      },
      minimap: {
        enabled: !0,
        position: "bottom-left",
        width: 160
      },
      undoRedo: {
        enabled: !0,
        position: "bottom-left",
        tooltips: { undo: "Undo", redo: "Redo", history: "Undo/Redo History" },
        maxHistoryLength: 10
      },
      setHotkeys: (t) => e((n) => ({ hotkeys: { ...n.hotkeys, ...t } })),
      setCanvas: (t) => e((n) => ({ canvas: { ...n.canvas, ...t } })),
      setStyles: (t) => e((n) => ({ styles: { ...n.styles, ...t } })),
      setMinimap: (t) => e((n) => ({ minimap: { ...n.minimap, ...t } })),
      setUndoRedo: (t) => e((n) => ({ undoRedo: { ...n.undoRedo, ...t } }))
    }),
    {
      name: "VENOMOUS_UI__WORKFLOW_CONFIGS",
      store: "VENOMOUS_UI__WORKFLOW_CONFIGS"
    }
  )
);
function A8() {
  return EC.getState();
}
function Bn() {
  return Rr(EC);
}
function bo() {
  return nf();
}
function D8() {
  const e = Bn(), { zoomIn: t, zoomOut: n, zoomTo: o, fitView: r } = bo(), i = c8(), a = Qe(() => i, [i]), l = ze(async () => {
    await t({ duration: e.canvas.zoomDuration });
  }, [t, e.canvas.zoomDuration]), c = ze(async () => {
    await n({ duration: e.canvas.zoomDuration });
  }, [n, e.canvas.zoomDuration]), u = ze(
    async (d, p = !0) => {
      await o(d, {
        duration: p ? 0 : e.canvas.zoomDuration
      });
    },
    [o, e.canvas.zoomDuration]
  ), f = ze(
    async (d = !0) => {
      await r({ duration: d ? 0 : e.canvas.zoomDuration });
    },
    [r, e.canvas.zoomDuration]
  );
  return {
    currentViewport: a,
    increaseZoom: l,
    decreaseZoom: c,
    setZoom: u,
    autoView: f
  };
}
function L8(e, t, { signal: n, edges: o } = {}) {
  let r, i = null;
  const a = o != null && o.includes("leading"), l = o == null || o.includes("trailing"), c = () => {
    i !== null && (e.apply(r, i), r = void 0, i = null);
  }, u = () => {
    l && c(), h();
  };
  let f = null;
  const d = () => {
    f != null && clearTimeout(f), f = setTimeout(() => {
      f = null, u();
    }, t);
  }, p = () => {
    f !== null && (clearTimeout(f), f = null);
  }, h = () => {
    p(), r = void 0, i = null;
  }, g = () => {
    p(), c();
  }, m = function(...y) {
    if (n != null && n.aborted)
      return;
    r = this, i = y;
    const x = f == null;
    d(), a && x && c();
  };
  return m.schedule = d, m.cancel = h, m.flush = g, n == null || n.addEventListener("abort", h, { once: !0 }), m;
}
function B8() {
}
function qv(e) {
  return Object.getOwnPropertySymbols(e).filter((t) => Object.prototype.propertyIsEnumerable.call(e, t));
}
function Kv(e) {
  return e == null ? e === void 0 ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(e);
}
const F8 = "[object RegExp]", z8 = "[object String]", j8 = "[object Number]", V8 = "[object Boolean]", Yv = "[object Arguments]", H8 = "[object Symbol]", W8 = "[object Date]", U8 = "[object Map]", q8 = "[object Set]", K8 = "[object Array]", Y8 = "[object Function]", G8 = "[object ArrayBuffer]", mp = "[object Object]", X8 = "[object Error]", Z8 = "[object DataView]", Q8 = "[object Uint8Array]", J8 = "[object Uint8ClampedArray]", e7 = "[object Uint16Array]", t7 = "[object Uint32Array]", n7 = "[object BigUint64Array]", o7 = "[object Int8Array]", r7 = "[object Int16Array]", i7 = "[object Int32Array]", s7 = "[object BigInt64Array]", a7 = "[object Float32Array]", l7 = "[object Float64Array]";
function Gv(e) {
  if (!e || typeof e != "object")
    return !1;
  const t = Object.getPrototypeOf(e);
  return t === null || t === Object.prototype || Object.getPrototypeOf(t) === null ? Object.prototype.toString.call(e) === "[object Object]" : !1;
}
function c7(e, t) {
  return e === t || Number.isNaN(e) && Number.isNaN(t);
}
function u7(e, t, n) {
  return $a(e, t, void 0, void 0, void 0, void 0, n);
}
function $a(e, t, n, o, r, i, a) {
  const l = a(e, t, n, o, r, i);
  if (l !== void 0)
    return l;
  if (typeof e == typeof t)
    switch (typeof e) {
      case "bigint":
      case "string":
      case "boolean":
      case "symbol":
      case "undefined":
        return e === t;
      case "number":
        return e === t || Object.is(e, t);
      case "function":
        return e === t;
      case "object":
        return Va(e, t, i, a);
    }
  return Va(e, t, i, a);
}
function Va(e, t, n, o) {
  if (Object.is(e, t))
    return !0;
  let r = Kv(e), i = Kv(t);
  if (r === Yv && (r = mp), i === Yv && (i = mp), r !== i)
    return !1;
  switch (r) {
    case z8:
      return e.toString() === t.toString();
    case j8: {
      const c = e.valueOf(), u = t.valueOf();
      return c7(c, u);
    }
    case V8:
    case W8:
    case H8:
      return Object.is(e.valueOf(), t.valueOf());
    case F8:
      return e.source === t.source && e.flags === t.flags;
    case Y8:
      return e === t;
  }
  n = n ?? /* @__PURE__ */ new Map();
  const a = n.get(e), l = n.get(t);
  if (a != null && l != null)
    return a === t;
  n.set(e, t), n.set(t, e);
  try {
    switch (r) {
      case U8: {
        if (e.size !== t.size)
          return !1;
        for (const [c, u] of e.entries())
          if (!t.has(c) || !$a(u, t.get(c), c, e, t, n, o))
            return !1;
        return !0;
      }
      case q8: {
        if (e.size !== t.size)
          return !1;
        const c = Array.from(e.values()), u = Array.from(t.values());
        for (let f = 0; f < c.length; f++) {
          const d = c[f], p = u.findIndex((h) => $a(d, h, void 0, e, t, n, o));
          if (p === -1)
            return !1;
          u.splice(p, 1);
        }
        return !0;
      }
      case K8:
      case Q8:
      case J8:
      case e7:
      case t7:
      case n7:
      case o7:
      case r7:
      case i7:
      case s7:
      case a7:
      case l7: {
        if (typeof Buffer < "u" && Buffer.isBuffer(e) !== Buffer.isBuffer(t) || e.length !== t.length)
          return !1;
        for (let c = 0; c < e.length; c++)
          if (!$a(e[c], t[c], c, e, t, n, o))
            return !1;
        return !0;
      }
      case G8:
        return e.byteLength !== t.byteLength ? !1 : Va(new Uint8Array(e), new Uint8Array(t), n, o);
      case Z8:
        return e.byteLength !== t.byteLength || e.byteOffset !== t.byteOffset ? !1 : Va(new Uint8Array(e), new Uint8Array(t), n, o);
      case X8:
        return e.name === t.name && e.message === t.message;
      case mp: {
        if (!(Va(e.constructor, t.constructor, n, o) || Gv(e) && Gv(t)))
          return !1;
        const u = [...Object.keys(e), ...qv(e)], f = [...Object.keys(t), ...qv(t)];
        if (u.length !== f.length)
          return !1;
        for (let d = 0; d < u.length; d++) {
          const p = u[d], h = e[p];
          if (!Object.hasOwn(t, p))
            return !1;
          const g = t[p];
          if (!$a(h, g, p, e, t, n, o))
            return !1;
        }
        return !0;
      }
      default:
        return !1;
    }
  } finally {
    n.delete(e), n.delete(t);
  }
}
function mg(e, t) {
  return u7(e, t, B8);
}
var Xv = (e, t, n) => (r, i) => ({
  pastStates: (n == null ? void 0 : n.pastStates) || [],
  futureStates: (n == null ? void 0 : n.futureStates) || [],
  undo: (a = 1) => {
    var l, c;
    if (i().pastStates.length) {
      const u = ((l = n == null ? void 0 : n.partialize) == null ? void 0 : l.call(n, t())) || t(), f = i().pastStates.splice(-a, a), d = f.shift();
      e(d), r({
        pastStates: i().pastStates,
        futureStates: i().futureStates.concat(
          ((c = n == null ? void 0 : n.diff) == null ? void 0 : c.call(n, u, d)) || u,
          f.reverse()
        )
      });
    }
  },
  redo: (a = 1) => {
    var l, c;
    if (i().futureStates.length) {
      const u = ((l = n == null ? void 0 : n.partialize) == null ? void 0 : l.call(n, t())) || t(), f = i().futureStates.splice(-a, a), d = f.shift();
      e(d), r({
        pastStates: i().pastStates.concat(
          ((c = n == null ? void 0 : n.diff) == null ? void 0 : c.call(n, u, d)) || u,
          f.reverse()
        ),
        futureStates: i().futureStates
      });
    }
  },
  clear: () => r({ pastStates: [], futureStates: [] }),
  isTracking: !0,
  pause: () => r({ isTracking: !1 }),
  resume: () => r({ isTracking: !0 }),
  setOnSave: (a) => r({ _onSave: a }),
  // Internal properties
  _onSave: n == null ? void 0 : n.onSave,
  _handleSet: (a, l, c, u) => {
    var f, d;
    n != null && n.limit && i().pastStates.length >= (n == null ? void 0 : n.limit) && i().pastStates.shift(), (d = (f = i())._onSave) == null || d.call(f, a, c), r({
      pastStates: i().pastStates.concat(u || a),
      futureStates: []
    });
  }
}), d7 = (e, t) => (o, r, i) => {
  var u, f;
  i.temporal = ET(
    ((u = t == null ? void 0 : t.wrapTemporal) == null ? void 0 : u.call(t, Xv(o, r, t))) || Xv(o, r, t)
  );
  const a = ((f = t == null ? void 0 : t.handleSet) == null ? void 0 : f.call(
    t,
    i.temporal.getState()._handleSet
  )) || i.temporal.getState()._handleSet, l = (d) => {
    var g, m, y;
    if (!i.temporal.getState().isTracking) return;
    const p = ((g = t == null ? void 0 : t.partialize) == null ? void 0 : g.call(t, r())) || r(), h = (m = t == null ? void 0 : t.diff) == null ? void 0 : m.call(t, d, p);
    // If the user has provided a diff function but nothing has been changed, deltaState will be null
    h === null || // If the user has provided an equality function, use it
    (y = t == null ? void 0 : t.equality) != null && y.call(t, d, p) || a(
      d,
      void 0,
      p,
      h
    );
  }, c = i.setState;
  return i.setState = (...d) => {
    var h;
    const p = ((h = t == null ? void 0 : t.partialize) == null ? void 0 : h.call(t, r())) || r();
    c(...d), l(p);
  }, e(
    // Modify the set function to call the userlandSet function
    (...d) => {
      var h;
      const p = ((h = t == null ? void 0 : t.partialize) == null ? void 0 : h.call(t, r())) || r();
      o(...d), l(p);
    },
    r,
    i
  );
}, kn = /* @__PURE__ */ ((e) => (e.Init = "Init", e.Reset = "Reset", e.CanvasBlankClicked = "CanvasBlankClicked", e.SaveVersionChanged = "SaveVersionChanged", e.ElementsFileUploaded = "ElementsFileUploaded", e.ElementsFileDownloaded = "ElementsFileDownloaded", e.ElementsSelected = "ElementsSelected", e.ElementsDeleted = "ElementsDeleted", e.ElementsCopied = "ElementsCopied", e.ElementsPasted = "ElementsPasted", e.ElementsCut = "ElementsCut", e.NodeCreated = "NodeCreated", e.NodeDeleted = "NodeDeleted", e.NodesDeleted = "NodesDeleted", e.NodeMoved = "NodeMoved", e.NodeResized = "NodeResized", e.EdgeDeleted = "EdgeDeleted", e.EdgesDeleted = "EdgesDeleted", e.Connected = "Connected", e.ReConnected = "ReConnected", e))(kn || {});
const Zv = {
  action: null,
  timestamp: Date.now(),
  elements: { nodes: [], edges: [] }
}, js = fi()(
  d7(
    Vi(
      (e) => ({
        actionsHistory: Zv,
        updateActionsHistory: (t) => e({ actionsHistory: t }),
        clearActionsHistory: () => e({ actionsHistory: Zv })
      }),
      {
        name: "VENOMOUS_UI__WORKFLOW_ACTIONS_HISTORY",
        store: "VENOMOUS_UI__WORKFLOW_ACTIONS_HISTORY"
      }
    ),
    {
      limit: A8().undoRedo.maxHistoryLength,
      pastStates: [],
      futureStates: [],
      equality: (e, t) => mg(e, t)
    }
  )
);
function f7() {
  return dt(() => () => {
    js.getState().clearActionsHistory();
  }, []), null;
}
function p7() {
  const e = js(), t = Rr(js.temporal), n = Qe(() => e.actionsHistory, [e.actionsHistory]), o = Qe(
    () => t.pastStates.map(({ actionsHistory: i }) => ({ ...i })),
    [t.pastStates]
  ), r = Qe(
    () => t.futureStates.map(({ actionsHistory: i }) => ({ ...i })),
    [t.pastStates]
  );
  return {
    currentStates: n,
    pastStates: o,
    futureStates: r
  };
}
function CC() {
  const e = Rr(js), t = Rr(js.temporal), n = ze(() => t.undo(), [t.undo]), o = ze(() => t.redo(), [t.redo]), r = t.pastStates.length > 0 && e.actionsHistory.action !== "Init", i = t.futureStates.length > 0;
  return {
    undo: n,
    redo: o,
    canUndo: r,
    canRedo: i
  };
}
function Hi() {
  const { getNodes: e, getEdges: t } = bo(), n = Rr(js), o = et(
    L8((i) => {
      n.updateActionsHistory({
        action: i.action,
        timestamp: Date.now(),
        elements: {
          nodes: e().map((a) => ({
            ...a,
            selected: i.forceUnselected ? !1 : a.selected
          })),
          edges: t().map((a) => ({
            ...a,
            selected: i.forceUnselected ? !1 : a.selected
          }))
        }
      });
    }, 200)
  );
  return {
    updateActionsHistory: ze((i) => {
      switch (i) {
        case "Init":
        case "Reset":
        case "CanvasBlankClicked":
        case "SaveVersionChanged":
        case "ElementsFileUploaded":
        case "ElementsFileDownloaded":
        case "ElementsSelected":
        case "ElementsDeleted":
        case "ElementsCopied":
        case "ElementsPasted":
        case "ElementsCut":
        case "NodeCreated":
        case "NodeDeleted":
        case "NodeResized":
        case "EdgeDeleted":
        case "Connected":
        case "ReConnected":
          o.current({ action: i, forceUnselected: !0 });
          break;
        case "NodeMoved":
          o.current({ action: i, forceUnselected: !1 });
          break;
      }
    }, [])
  };
}
function h7() {
  const { getNodes: e, getEdges: t, setEdges: n } = bo(), { updateActionsHistory: o } = Hi(), r = et(null), i = ze(
    (c) => {
      const u = r.current;
      if (u && mg(u.connection, c))
        return u.result;
      const f = e(), d = t(), p = m7(c, { nodes: f, edges: d });
      return r.current = {
        connection: c,
        result: p
      }, p;
    },
    [e, t]
  ), a = ze(
    (c) => {
      const u = t().filter(({ source: f, target: d, sourceHandle: p }) => {
        const h = d !== c.target, m = f === c.source && h;
        if (!c.sourceHandle)
          return m;
        const y = p === c.sourceHandle;
        return m && y;
      });
      if (!u.length) {
        n((f) => RE(c, f)), o(kn.Connected);
        return;
      }
      if (!c.sourceHandle) {
        n(
          (f) => f.filter(
            (d) => d.source !== u[0].source || d.target !== u[0].target
          )
        ), o(kn.ReConnected);
        return;
      }
      if (c.sourceHandle) {
        n((f) => (u.reduce((d, p) => (f = f.filter((h) => h.id !== p.id), f), f), f)), o(kn.ReConnected);
        return;
      }
    },
    [n, o]
  ), l = ze((c, u) => {
    u.isValid && r.current && (r.current = {
      ...r.current,
      result: !0
    });
  }, []);
  return {
    isValidConnection: i,
    onConnect: a,
    onConnectEnd: l
  };
}
function m7(e, { nodes: t, edges: n }) {
  function o(i, a = /* @__PURE__ */ new Set()) {
    if (!i || a.has(i.id)) return !1;
    a.add(i == null ? void 0 : i.id);
    for (const l of pW(i, t, n))
      if (l.id === e.source || o(l, a)) return !0;
  }
  const r = t.find((i) => i.id === e.target);
  return (r == null ? void 0 : r.id) === e.source ? !1 : !o(r);
}
function g7() {
  const { setEdges: e } = bo(), { updateActionsHistory: t } = Hi(), n = et(!0), o = ze(() => {
    n.current = !1;
  }, []), r = ze((a, l) => {
    n.current = !0, e((c) => OW(a, l, c));
  }, []), i = ze(
    (a, l) => {
      n.current || (e((c) => c.filter((u) => u.id !== l.id)), t(kn.ReConnected)), n.current = !0;
    },
    [t]
  );
  return {
    onReconnect: r,
    onReconnectStart: o,
    onReconnectEnd: i
  };
}
const y7 = fi()(
  Vi(
    (e) => ({
      nodes: [],
      edges: [],
      setNodes: (t) => e({ nodes: t }),
      setEdges: (t) => e({ edges: t }),
      clear: () => e({ nodes: [], edges: [] })
    }),
    {
      name: "VENOMOUS_UI__WORKFLOW_COPIED_ELEMENTS",
      store: "VENOMOUS_UI__WORKFLOW_COPIED_ELEMENTS"
    }
  )
);
function b7() {
  return Rr(y7);
}
const v7 = fi()(
  Vi(
    (e) => ({
      nodes: [],
      edges: [],
      setNodes: (t) => e({ nodes: t }),
      setEdges: (t) => e({ edges: t }),
      clear: () => e({ nodes: [], edges: [] })
    }),
    {
      name: "VENOMOUS_UI__WORKFLOW_SELECTED_ELEMENTS",
      store: "VENOMOUS_UI__WORKFLOW_SELECTED_ELEMENTS"
    }
  )
);
function gg() {
  return Rr(v7);
}
function y9({
  id: e = `${Date.now()}`,
  type: t,
  data: n,
  ...o
}) {
  z7({
    id: e,
    type: t,
    data: {
      isMultipleSourceHandler: (n == null ? void 0 : n.isMultipleSourceHandler) || !1,
      isMultipleTargetHandler: (n == null ? void 0 : n.isMultipleSourceHandler) || !1,
      isProtected: !1,
      isInValid: !1,
      isFocus: !1,
      formValue: (n == null ? void 0 : n.formValue) || null,
      ...n
    },
    ...o
  });
}
function b9(e, t) {
  return e.filter(
    (n) => n.source === t.source || n.target === t.target || n.sourceHandle === t.sourceHandle || n.targetHandle === t.targetHandle
  );
}
function x7(e, t) {
  return e.filter((n) => n.source === t.id || n.target === t.id);
}
function yg() {
  const e = Bn(), { getNodes: t, getEdges: n, setNodes: o, setEdges: r } = bo(), { updateActionsHistory: i } = Hi(), a = ze(
    (d) => {
      r((p) => p.filter((h) => h.id !== d)), i(kn.EdgeDeleted), e.logger("error", kn.EdgeDeleted);
    },
    [r, i, e.logger]
  ), l = ze(() => {
    o((d) => d.filter((p) => !p.selected));
  }, [o]), c = ze(() => {
    r((d) => d.filter((p) => !p.selected));
  }, [r]), u = ze(() => {
    const d = t().filter((h) => h.selected), p = [];
    d.forEach((h) => {
      const g = x7(n(), h);
      p.push(...g);
    }), r((h) => h.filter((g) => !p.find((m) => m.id === g.id)));
  }, [n, t, r]), f = ze(() => {
    const d = t().filter((m) => m.selected), p = n().filter((m) => m.selected), h = d.length > 0, g = p.length > 0;
    if (!(!h && !g)) {
      if (h && (l(), u()), g && c(), h && !g) {
        i(
          d.length === 1 ? kn.NodeDeleted : kn.NodesDeleted
        );
        return;
      }
      if (g && !h) {
        i(
          p.length === 1 ? kn.EdgeDeleted : kn.EdgesDeleted
        );
        return;
      }
      if (h && g) {
        i(kn.ElementsDeleted);
        return;
      }
    }
  }, [
    t,
    n,
    l,
    c,
    u,
    i
  ]);
  return {
    deleteEdge: a,
    deleteSelectedElements: f
  };
}
function w7() {
  const e = Bn(), { getNodes: t, getEdges: n, setNodes: o, setEdges: r } = bo(), { updateActionsHistory: i } = Hi(), { deleteSelectedElements: a } = yg(), l = b7(), c = gg(), u = et(0), f = ze(() => {
    u.current = 0, l.clear();
    const h = c.nodes, g = c.edges;
    h.length && l.setNodes(h), g.length && l.setEdges(g);
  }, [t, n, o, r, l, c]), d = ze(() => {
    const h = l.nodes, g = l.edges;
    if (h.length) {
      o((T) => T.map((b) => ({ ...b, selected: !1 })));
      const m = h.map((T) => ({
        ...T,
        id: `${T.id}-copied-${u.current + 1}`,
        position: {
          x: T.position.x + e.styles.nodeWidth / 2 * (u.current + 1),
          y: T.position.y - e.styles.nodeMinHeight / 2 * (u.current + 1)
        },
        selected: !0,
        dragging: !1,
        data: { ...T.data }
      })), y = m.filter((T) => T.type === Zr.Group), x = m.filter((T) => T.type !== Zr.Group);
      o((T) => [...y, ...T, ...x]);
    }
    if (g.length) {
      r((y) => y.map((x) => ({ ...x, selected: !1 })));
      const m = g.map((y) => ({
        ...y,
        id: `${y.id}-copied-${u.current + 1}`,
        selected: !0,
        source: `${y.source}-copied-${u.current + 1}`,
        target: `${y.target}-copied-${u.current + 1}`,
        zIndex: 1
      }));
      r((y) => y.concat(m));
    }
    (h.length || g.length) && (u.current += 1, i(kn.ElementsPasted));
  }, [
    t,
    n,
    o,
    r,
    l,
    c,
    e,
    i
  ]), p = ze(() => {
    f(), a();
  }, [f, a]);
  return {
    copySelectedElements: f,
    pastCopiedElement: d,
    cutSelectedElements: p
  };
}
function S7() {
  const { setNodes: e, setEdges: t } = gg();
  return {
    onSelectionChange: ze(
      ({ nodes: o, edges: r }) => {
        e(o), t(r);
      },
      [e, t]
    )
  };
}
const OC = ["shift", "alt", "meta", "mod", "ctrl", "control"], T7 = {
  esc: "escape",
  return: "enter",
  left: "arrowleft",
  right: "arrowright",
  up: "arrowup",
  down: "arrowdown",
  ShiftLeft: "shift",
  ShiftRight: "shift",
  AltLeft: "alt",
  AltRight: "alt",
  MetaLeft: "meta",
  MetaRight: "meta",
  OSLeft: "meta",
  OSRight: "meta",
  ControlLeft: "ctrl",
  ControlRight: "ctrl"
};
function qr(e) {
  return (T7[e.trim()] || e.trim()).toLowerCase().replace(/key|digit|numpad/, "");
}
function $C(e) {
  return OC.includes(e);
}
function gp(e, t = ",") {
  return e.toLowerCase().split(t);
}
function yp(e, t = "+", n = ">", o = !1, r) {
  let i = [], a = !1;
  e.includes(n) ? (a = !0, i = e.toLocaleLowerCase().split(n).map((u) => qr(u))) : i = e.toLocaleLowerCase().split(t).map((u) => qr(u));
  const l = {
    alt: i.includes("alt"),
    ctrl: i.includes("ctrl") || i.includes("control"),
    shift: i.includes("shift"),
    meta: i.includes("meta"),
    mod: i.includes("mod"),
    useKey: o
  }, c = i.filter((u) => !OC.includes(u));
  return {
    ...l,
    keys: c,
    description: r,
    isSequence: a
  };
}
typeof document < "u" && (document.addEventListener("keydown", (e) => {
  e.code !== void 0 && IC([qr(e.code)]);
}), document.addEventListener("keyup", (e) => {
  e.code !== void 0 && RC([qr(e.code)]);
})), typeof window < "u" && (window.addEventListener("blur", () => {
  Sr.clear();
}), window.addEventListener("contextmenu", () => {
  setTimeout(() => {
    Sr.clear();
  }, 0);
}));
const Sr = /* @__PURE__ */ new Set();
function bg(e) {
  return Array.isArray(e);
}
function E7(e, t = ",") {
  return (bg(e) ? e : e.split(t)).every((n) => Sr.has(n.trim().toLowerCase()));
}
function IC(e) {
  const t = Array.isArray(e) ? e : [e];
  Sr.has("meta") && Sr.forEach((n) => !$C(n) && Sr.delete(n.toLowerCase())), t.forEach((n) => Sr.add(n.toLowerCase()));
}
function RC(e) {
  const t = Array.isArray(e) ? e : [e];
  e === "meta" ? Sr.clear() : t.forEach((n) => Sr.delete(n.toLowerCase()));
}
function C7(e, t, n) {
  (typeof n == "function" && n(e, t) || n === !0) && e.preventDefault();
}
function O7(e, t, n) {
  return typeof n == "function" ? n(e, t) : n === !0 || n === void 0;
}
function $7(e) {
  return kC(e, ["input", "textarea", "select"]);
}
function kC(e, t = !1) {
  const { target: n, composed: o } = e;
  let r;
  return I7(n) && o ? r = e.composedPath()[0] && e.composedPath()[0].tagName : r = n && n.tagName, bg(t) ? !!(r && t && t.some((i) => i.toLowerCase() === r.toLowerCase())) : !!(r && t && t);
}
function I7(e) {
  return !!e.tagName && !e.tagName.startsWith("-") && e.tagName.includes("-");
}
function R7(e, t) {
  return e.length === 0 && t ? (console.warn(
    'A hotkey has the "scopes" option set, however no active scopes were found. If you want to use the global scopes feature, you need to wrap your app in a <HotkeysProvider>'
  ), !0) : t ? e.some((n) => t.includes(n)) || e.includes("*") : !0;
}
const k7 = (e, t, n = !1) => {
  const { alt: o, meta: r, mod: i, shift: a, ctrl: l, keys: c, useKey: u } = t, { code: f, key: d, ctrlKey: p, metaKey: h, shiftKey: g, altKey: m } = e, y = qr(f);
  if (u && (c == null ? void 0 : c.length) === 1 && c.includes(d))
    return !0;
  if (!(c != null && c.includes(y)) && !["ctrl", "control", "unknown", "meta", "alt", "shift", "os"].includes(y))
    return !1;
  if (!n) {
    if (o !== m && y !== "alt" || a !== g && y !== "shift")
      return !1;
    if (i) {
      if (!h && !p)
        return !1;
    } else if (r !== h && y !== "meta" && y !== "os" || l !== p && y !== "ctrl" && y !== "control")
      return !1;
  }
  return c && c.length === 1 && c.includes(y) ? !0 : c ? E7(c) : !c;
}, P7 = bl(void 0), N7 = () => Qr(P7);
function PC(e, t) {
  return e && t && typeof e == "object" && typeof t == "object" ? Object.keys(e).length === Object.keys(t).length && // @ts-expect-error TS7053
  Object.keys(e).reduce((n, o) => n && PC(e[o], t[o]), !0) : e === t;
}
const M7 = bl({
  hotkeys: [],
  activeScopes: [],
  // This array has to be empty instead of containing '*' as default, to check if the provider is set or not
  toggleScope: () => {
  },
  enableScope: () => {
  },
  disableScope: () => {
  }
}), _7 = () => Qr(M7);
function A7(e) {
  const t = et(void 0);
  return PC(t.current, e) || (t.current = e), t.current;
}
const Qv = (e) => {
  e.stopPropagation(), e.preventDefault(), e.stopImmediatePropagation();
}, D7 = typeof window < "u" ? Jv : dt;
function ss(e, t, n, o) {
  const r = et(null), i = et(!1), a = n instanceof Array ? o instanceof Array ? void 0 : o : n, l = bg(e) ? e.join(a == null ? void 0 : a.delimiter) : e, c = n instanceof Array ? n : o instanceof Array ? o : void 0, u = ze(t, c ?? []), f = et(u);
  c ? f.current = u : f.current = t;
  const d = A7(a), { activeScopes: p } = _7(), h = N7();
  return D7(() => {
    if ((d == null ? void 0 : d.enabled) === !1 || !R7(p, d == null ? void 0 : d.scopes))
      return;
    let g = [], m;
    const y = (w, S = !1) => {
      var E;
      if (!($7(w) && !kC(w, d == null ? void 0 : d.enableOnFormTags))) {
        if (r.current !== null) {
          const C = r.current.getRootNode();
          if ((C instanceof Document || C instanceof ShadowRoot) && C.activeElement !== r.current && !r.current.contains(C.activeElement)) {
            Qv(w);
            return;
          }
        }
        (E = w.target) != null && E.isContentEditable && !(d != null && d.enableOnContentEditable) || gp(l, d == null ? void 0 : d.delimiter).forEach((C) => {
          var R, M, v, I;
          if (C.includes((d == null ? void 0 : d.splitKey) ?? "+") && C.includes((d == null ? void 0 : d.sequenceSplitKey) ?? ">")) {
            console.warn(`Hotkey ${C} contains both ${(d == null ? void 0 : d.splitKey) ?? "+"} and ${(d == null ? void 0 : d.sequenceSplitKey) ?? ">"} which is not supported.`);
            return;
          }
          const k = yp(C, d == null ? void 0 : d.splitKey, d == null ? void 0 : d.sequenceSplitKey, d == null ? void 0 : d.useKey, d == null ? void 0 : d.description);
          if (k.isSequence) {
            m = setTimeout(() => {
              g = [];
            }, (d == null ? void 0 : d.sequenceTimeoutMs) ?? 1e3);
            const A = k.useKey ? w.key : qr(w.code);
            if ($C(A.toLowerCase()))
              return;
            g.push(A);
            const O = (R = k.keys) == null ? void 0 : R[g.length - 1];
            if (A !== O) {
              g = [], m && clearTimeout(m);
              return;
            }
            g.length === ((M = k.keys) == null ? void 0 : M.length) && (f.current(w, k), m && clearTimeout(m), g = []);
          } else if (k7(w, k, d == null ? void 0 : d.ignoreModifiers) || (v = k.keys) != null && v.includes("*")) {
            if ((I = d == null ? void 0 : d.ignoreEventWhen) != null && I.call(d, w) || S && i.current)
              return;
            if (C7(w, k, d == null ? void 0 : d.preventDefault), !O7(w, k, d == null ? void 0 : d.enabled)) {
              Qv(w);
              return;
            }
            f.current(w, k), S || (i.current = !0);
          }
        });
      }
    }, x = (w) => {
      w.code !== void 0 && (IC(qr(w.code)), ((d == null ? void 0 : d.keydown) === void 0 && (d == null ? void 0 : d.keyup) !== !0 || d != null && d.keydown) && y(w));
    }, T = (w) => {
      w.code !== void 0 && (RC(qr(w.code)), i.current = !1, d != null && d.keyup && y(w, !0));
    }, b = r.current || (a == null ? void 0 : a.document) || document;
    return b.addEventListener("keyup", T, a == null ? void 0 : a.eventListenerOptions), b.addEventListener("keydown", x, a == null ? void 0 : a.eventListenerOptions), h && gp(l, d == null ? void 0 : d.delimiter).forEach(
      (w) => h.addHotkey(
        yp(w, d == null ? void 0 : d.splitKey, d == null ? void 0 : d.sequenceSplitKey, d == null ? void 0 : d.useKey, d == null ? void 0 : d.description)
      )
    ), () => {
      b.removeEventListener("keyup", T, a == null ? void 0 : a.eventListenerOptions), b.removeEventListener("keydown", x, a == null ? void 0 : a.eventListenerOptions), h && gp(l, d == null ? void 0 : d.delimiter).forEach(
        (w) => h.removeHotkey(
          yp(w, d == null ? void 0 : d.splitKey, d == null ? void 0 : d.sequenceSplitKey, d == null ? void 0 : d.useKey, d == null ? void 0 : d.description)
        )
      ), g = [], m && clearTimeout(m);
    };
  }, [l, d, p]), r;
}
function L7() {
  const e = Bn(), { undo: t, redo: n, canUndo: o, canRedo: r } = CC(), { deleteSelectedElements: i } = yg(), { copySelectedElements: a, pastCopiedElement: l, cutSelectedElements: c } = w7();
  ss(
    e.hotkeys.keys.copy,
    () => a(),
    { enabled: !0, preventDefault: !0 },
    [a]
  ), ss(
    e.hotkeys.keys.paste,
    () => l(),
    { enabled: !0, preventDefault: !0 },
    [l]
  ), ss(
    e.hotkeys.keys.cut,
    () => c(),
    { enabled: !0, preventDefault: !0 },
    [c]
  ), ss(
    e.hotkeys.keys.delete,
    () => i(),
    { enabled: !0, preventDefault: !0, keyup: !0 },
    [i]
  ), ss(
    e.hotkeys.keys.undo,
    () => {
      o && t();
    },
    { enabled: o, preventDefault: !0 },
    [t, o]
  ), ss(
    e.hotkeys.keys.redo,
    () => {
      r && n();
    },
    { enabled: !0, preventDefault: !0 },
    [n, r]
  );
}
function B7({
  configs: e
}) {
  const { setHotkeys: t, setCanvas: n, setStyles: o, setMinimap: r, setUndoRedo: i } = Bn(), { updateActionsHistory: a } = Hi();
  f7();
  const l = ze(() => {
    a(kn.Init);
  }, [a]), c = et(null);
  return dt(() => {
    if (!e || mg(e, c.current)) return;
    const { hotkeys: u, canvas: f, styles: d, minimap: p, undoRedo: h } = e;
    u && t(u), f && n(f), d && o(d), p && r(p), h && i(h), c.current = e;
  }, [e, t, n, o, r, i]), {
    onFinishedInit: l
  };
}
const vg = fi()(
  Vi(
    (e) => ({
      node: null,
      setNode: (t) => e({ node: t })
    }),
    {
      name: "VENOMOUS_UI__WORKFLOW_CREATED_NODE",
      store: "VENOMOUS_UI__WORKFLOW_CREATED_NODE"
    }
  )
);
function F7() {
  return vg.getState().node;
}
function z7(e) {
  vg.setState({ node: e });
}
function j7() {
  vg.setState({ node: null });
}
function V7() {
  const e = Bn(), { getNodes: t, setNodes: n, screenToFlowPosition: o } = bo(), { updateActionsHistory: r } = Hi(), i = ze((l) => {
    l.preventDefault(), l.dataTransfer.dropEffect = "move";
  }, []), a = ze(
    (l) => {
      const c = F7();
      if (j7(), !c)
        return;
      const u = {
        ...c,
        id: `${Date.now()}`,
        selected: !0,
        position: o(
          { x: l.clientX, y: l.clientY },
          { snapToGrid: e.canvas.isGridLayout }
        )
      };
      n(
        (f) => u.type === Zr.Group ? [u, ...f] : [...f, u]
      ), r(kn.NodeCreated);
    },
    [t, n, o, e, r]
  );
  return {
    onDragOver: i,
    onDrop: a
  };
}
function H7() {
  const e = Bn(), { getZoom: t, setCenter: n, setNodes: o, setEdges: r, updateNode: i } = bo();
  return {
    jumpToSpecificNode: ze(
      async (l, { x: c, y: u }) => {
        const f = t();
        await n(c + e.styles.nodeWidth / 2, u + e.styles.nodeMinHeight / 2, {
          duration: e.canvas.zoomDuration,
          zoom: f
        }), o((d) => d.map((p) => ({ ...p, selected: !1 }))), r((d) => d.map((p) => ({ ...p, selected: !1 }))), i(l, { selected: !0 });
      },
      [
        t,
        n,
        o,
        r,
        i,
        e.canvas.zoomDuration,
        e.styles.nodeWidth,
        e.styles.nodeMinHeight
      ]
    )
  };
}
function W7() {
  const { updateNode: e, updateNodeData: t, setNodes: n, getNodes: o, getInternalNode: r } = bo(), i = ze(
    (u, f) => {
      e(u, f, {
        replace: !1
      });
    },
    [e]
  ), a = ze(
    (u, f) => {
      t(u, f, {
        replace: !1
      });
    },
    [t]
  ), l = ze(
    (u, f) => {
      a(u, { formValue: f });
    },
    [a]
  ), c = ze(
    (u) => {
      if (u.type === Zr.Group)
        return n(
          (h) => h.map(
            (g) => g.id === u.id ? { ...g, parentId: void 0, position: u.position } : g
          )
        );
      const f = r(u.id);
      if (!f)
        return;
      const d = f.internals.positionAbsolute, p = o().find(
        (h) => {
          var g, m;
          return h.type === Zr.Group && d.x >= h.position.x && d.x <= h.position.x + (((g = h.measured) == null ? void 0 : g.width) ?? 0) && d.y >= h.position.y && d.y <= h.position.y + (((m = h.measured) == null ? void 0 : m.height) ?? 0);
        }
      );
      if (p) {
        const h = {
          x: d.x - p.position.x,
          y: d.y - p.position.y
        };
        return n(
          (g) => g.map(
            (m) => m.id === u.id ? { ...m, parentId: p.id, position: h } : m
          )
        );
      }
      n(
        (h) => h.map((g) => g.id === u.id ? { ...g, parentId: void 0, position: d } : g)
      );
    },
    [r, o, n]
  );
  return {
    updateSpecificNode: i,
    updateSpecificNodeData: a,
    updateSpecificNodeFormValue: l,
    updateNodeMovingAroundGroupNode: c
  };
}
function U7() {
  const { setNodes: e } = bo(), { updateActionsHistory: t } = Hi(), { updateNodeMovingAroundGroupNode: n } = W7(), o = et({ x: 0, y: 0 }), r = ze((l, c) => {
    o.current = {
      x: c.position.x,
      y: c.position.y
    };
  }, []), i = ze(
    (l, c) => {
      e((u) => u.map((f) => f.id === c.id ? { ...f, position: c.position } : f));
    },
    [e]
  ), a = ze(
    (l, c) => {
      n(c);
      const { x: u, y: f } = o.current;
      u === c.position.x && f === c.position.y || t(kn.NodeMoved);
    },
    [t, n]
  );
  return {
    onNodeMoveStart: r,
    onNodeMoveStop: a,
    onNodeMoving: i
  };
}
function v9() {
  const { setNodes: e, setEdges: t } = bo(), n = ze(() => {
    e(
      (r) => r.map((i) => ({
        ...i,
        draggable: !1,
        selectable: !1,
        connectable: !1,
        deletable: !1
      }))
    ), t(
      (r) => r.map((i) => ({
        ...i,
        selectable: !1,
        reconnectable: !1,
        focusable: !1,
        editable: !1,
        deletable: !1
      }))
    );
  }, [e, t]), o = ze(() => {
    e(
      (r) => r.map((i) => ({
        ...i,
        draggable: !0,
        selectable: !0,
        connectable: !0,
        deletable: !0
      }))
    ), t(
      (r) => r.map((i) => ({
        ...i,
        selectable: !0,
        reconnectable: !0,
        focusable: !0,
        editable: !0,
        deletable: !0
      }))
    );
  }, []);
  return {
    lockElements: n,
    unlockElements: o
  };
}
const xg = Ie(({ renderChildren: e, ...t }) => {
  const n = Bn(), {
    id: o,
    data: r,
    sourceX: i,
    sourceY: a,
    targetX: l,
    targetY: c,
    sourcePosition: u,
    targetPosition: f,
    markerEnd: d,
    style: p
  } = t, [h, g, m, y, x] = cg({
    sourceX: i,
    sourceY: a,
    sourcePosition: u,
    targetX: l,
    targetY: c,
    targetPosition: f
  });
  return /* @__PURE__ */ Te(mo, { children: [
    /* @__PURE__ */ $(
      Kl,
      {
        id: o,
        path: h,
        className: "VenomousUI-WorkflowBaseEdge",
        style: {
          ...p,
          strokeWidth: n.styles.edgeWidth
        },
        markerEnd: d
      }
    ),
    (r == null ? void 0 : r.animated) && /* @__PURE__ */ $("circle", { r: n.styles.edgeWidth * 2, fill: "#ff0073", children: /* @__PURE__ */ $("animateMotion", { dur: "2s", repeatCount: "indefinite", path: h }) }),
    e == null ? void 0 : e({
      ...t,
      edgePath: h,
      edgePathLabelX: g,
      edgePathLabelY: m,
      edgePathOffsetX: y,
      edgePathOffsetY: x
    })
  ] });
});
xg.displayName = "WorkflowBaseEdge";
const NC = Ie((e) => {
  const { id: t, selected: n } = e, { deleteEdge: o } = yg(), r = ze(() => o(t), [t, o]);
  return /* @__PURE__ */ $(
    xg,
    {
      ...e,
      renderChildren: ({ edgePathLabelX: i, edgePathLabelY: a }) => /* @__PURE__ */ $(a8, { children: /* @__PURE__ */ $(
        "div",
        {
          style: {
            position: "absolute",
            pointerEvents: "all",
            transformOrigin: "center",
            transform: `translate(-50%, -50%) translate(${i}px,${a}px)`,
            display: n ? "flex" : "none"
          },
          children: /* @__PURE__ */ $(
            On,
            {
              isCircle: !0,
              isGhost: !0,
              icon: "solar:close-circle-linear",
              color: "error",
              onClick: r,
              sx: {
                "& svg": {
                  borderRadius: "50%",
                  backgroundColor: ({ palette: l }) => l.background.paper
                }
              }
            }
          )
        }
      ) })
    }
  );
});
NC.displayName = "WorkflowDeleteLabelEdge";
const q7 = {
  [Bu.Base]: xg,
  [Bu.DeleteLabel]: NC
}, K7 = {
  borderWidth: "6px",
  borderRadius: "50%",
  borderColor: "#BDBDBD",
  cursor: "cell",
  zIndex: 2
}, rf = Ie(
  ({ id: e, handlerType: t = "source", handlerPosition: n, style: o, onConnect: r }) => {
    const i = Bn(), a = ze(() => {
      const l = i.styles.connectionPosition[t];
      switch (n ?? l) {
        case "left":
          return Ve.Left;
        case "right":
          return Ve.Right;
        case "top":
          return Ve.Top;
        case "bottom":
          return Ve.Bottom;
        default:
          return Ve.Left;
      }
    }, [n, i.styles.connectionPosition]);
    return /* @__PURE__ */ $(
      gl,
      {
        type: t,
        id: e,
        position: a(),
        className: "VenomousUI-WorkflowBaseNodeHandler",
        style: { ...K7, ...o },
        onConnect: r
      }
    );
  }
);
rf.displayName = "WorkflowBaseNodeHandler";
const Y7 = Ie(
  ({ children: e, style: t, handlerStyle: n, id: o, handlerType: r, ...i }) => {
    var l;
    const a = Bn();
    return /* @__PURE__ */ Te(
      "div",
      {
        className: "VenomousUI-WorkflowBaseNodeHandlerItem",
        style: {
          position: "relative",
          width: (l = a.styles) == null ? void 0 : l.nodeWidth,
          ...t
        },
        children: [
          /* @__PURE__ */ $(Ho, { sx: { typography: "body2", padding: "4px 16px" }, children: e }),
          /* @__PURE__ */ $(
            rf,
            {
              id: o,
              handlerType: r,
              style: n,
              ...i
            }
          )
        ]
      }
    );
  }
);
Y7.displayName = "WorkflowBaseNodeHandlerItem";
const MC = Ie((e) => /* @__PURE__ */ $(rf, { ...e, handlerType: "source" }));
MC.displayName = "WorkflowSourceNodeHandler";
const _C = Ie((e) => /* @__PURE__ */ $(rf, { ...e, handlerType: "target" }));
_C.displayName = "WorkflowTargetNodeHandler";
const wg = Ie(
  ({ children: e, sx: t, hideSourceHandler: n = !1, hideTargetHandler: o = !1, ...r }) => {
    const { selected: i, data: a } = r, l = Bn();
    return /* @__PURE__ */ Te(
      Cr,
      {
        className: "VenomousUI-WorkflowBaseNode",
        isOutlined: !0,
        sx: {
          p: "16px",
          width: l.styles.nodeWidth,
          minWidth: l.styles.nodeWidth,
          maxHeight: l.styles.nodeMaxHeight,
          minHeight: l.styles.nodeMinHeight,
          maxWidth: l.styles.nodeMaxHeight,
          position: "relative",
          outline: ({ palette: c }) => i ? `${l.styles.edgeWidth}px solid ${c.primary.main}` : "none",
          outlineOffset: `-${l.styles.edgeWidth}px`,
          boxShadow: (c) => i ? c.shadows[4] : c.shadows[1],
          "&:hover": { boxShadow: (c) => c.shadows[4] },
          ...t
        },
        children: [
          e,
          !o && !(a != null && a.isMultipleTargetHandler) && /* @__PURE__ */ $(_C, { id: null }),
          !n && !(a != null && a.isMultipleSourceHandler) && /* @__PURE__ */ $(MC, { id: null })
        ]
      }
    );
  }
);
wg.displayName = "WorkflowBaseNode";
const AC = Ie(({ children: e, sx: t, ...n }) => {
  const { selected: o, data: r } = n, i = Bn(), a = Qe(() => i.styles.nodeWidth * 1.5, [i.styles.nodeWidth]), l = Qe(() => i.styles.nodeMinHeight * 3, [i.styles.nodeMinHeight]);
  return /* @__PURE__ */ Te(
    wg,
    {
      hideSourceHandler: !0,
      hideTargetHandler: !0,
      sx: {
        position: "static",
        height: "100%",
        width: "auto !important",
        minWidth: a,
        minHeight: l,
        backgroundColor: ({ palette: c }) => r.isIntersecting ? OT(c.primary.main).opacity : c.mode === "dark" ? "rgba(250,250,250,0.05)" : "rgba(0,0,0,0.05)",
        ...t
      },
      ...n,
      children: [
        e,
        /* @__PURE__ */ $(
          _8,
          {
            className: "VenomousUI-WorkflowGroupNode-ResizeControl",
            style: { display: o ? "flex" : "none" },
            minWidth: a,
            minHeight: l,
            children: /* @__PURE__ */ $(
              Wo,
              {
                icon: "fa:expand",
                width: 24,
                color: "primary",
                sx: { transform: "translate(-32px, -32px) rotate(90deg)" }
              }
            )
          }
        )
      ]
    }
  );
});
AC.displayName = "WorkflowGroupNode";
const G7 = {
  [Zr.Base]: wg,
  [Zr.Group]: AC
}, X7 = Oh(() => Promise.resolve().then(() => n9)), Z7 = Oh(() => Promise.resolve().then(() => i9)), Q7 = Oh(() => Promise.resolve().then(() => r9)), J7 = Ie(
  ({ children: e, sx: t, originalElements: n, configs: o, ...r }) => {
    var w, S, E;
    const { themeMode: i } = Ud(), a = Bn(), { onFinishedInit: l } = B7({ configs: o });
    L7();
    const { onDrop: c, onDragOver: u } = V7(), { onNodeMoveStart: f, onNodeMoveStop: d, onNodeMoving: p } = U7(), { isValidConnection: h, onConnect: g, onConnectEnd: m } = h7(), { onReconnect: y, onReconnectStart: x, onReconnectEnd: T } = g7(), { onSelectionChange: b } = S7();
    return /* @__PURE__ */ $(Cr, { isOutlined: !0, sx: { overflow: "hidden", p: 0, ...t }, children: /* @__PURE__ */ Te(
      i8,
      {
        className: "VenomousUI-WorkflowPlayground",
        style: { width: "100%", height: "100%" },
        proOptions: { hideAttribution: !0 },
        colorMode: i,
        onlyRenderVisibleElements: !0,
        connectionLineType: a.styles.connectionLineType,
        connectionLineStyle: { strokeWidth: a.styles.edgeWidth },
        defaultEdgeOptions: {
          type: a.styles.edgeType,
          /** Edge 的种类 */
          markerEnd: { type: a.styles.edgeEndMarkerType }
          /** Edge 结束的标记 */
          // eslint-disable-line @typescript-eslint/no-explicit-any 
        },
        defaultNodes: n.nodes,
        defaultEdges: n.edges,
        nodeTypes: { ...G7, ...r.nodeTypes },
        edgeTypes: { ...q7, ...r.edgeTypes },
        elementsSelectable: !0,
        selectNodesOnDrag: !1,
        nodesConnectable: !0,
        nodesDraggable: !0,
        panOnDrag: !0,
        panOnScroll: !1,
        zoomOnScroll: !0,
        zoomOnPinch: !0,
        nodesFocusable: !1,
        edgesFocusable: !1,
        nodeDragThreshold: 5,
        connectionRadius: ((w = a == null ? void 0 : a.styles) == null ? void 0 : w.nodeWidth) / 4,
        snapToGrid: (S = a == null ? void 0 : a.canvas) == null ? void 0 : S.isGridLayout,
        snapGrid: (E = a == null ? void 0 : a.canvas) == null ? void 0 : E.gridLayoutGap,
        onInit: l,
        isValidConnection: h,
        onConnect: g,
        onConnectEnd: m,
        onReconnectStart: x,
        onReconnect: y,
        onReconnectEnd: T,
        onDragOver: u,
        onDrop: c,
        onNodeDragStart: f,
        onNodeDrag: p,
        onNodeDragStop: d,
        onSelectionChange: b,
        deleteKeyCode: null,
        ...r,
        children: [
          e,
          /* @__PURE__ */ Te(QC, { children: [
            a.minimap.enabled && /* @__PURE__ */ $(X7, {}),
            a.minimap.enabled && /* @__PURE__ */ $(Z7, {}),
            a.undoRedo.enabled && /* @__PURE__ */ $(Q7, {})
          ] })
        ]
      }
    ) });
  }
);
J7.displayName = "WorkflowPlayground";
const e9 = Ie(({ children: e }) => /* @__PURE__ */ $(bC, { children: e }));
e9.displayName = "WorkflowWrapper";
const Yl = Ie(
  ({ children: e, position: t, style: n, isPaper: o = !0, isOutlinedPaper: r = !0 }) => {
    const i = Qe(() => {
      switch (t) {
        case "top-left":
          return { transform: "translate(-8px, -8px)" };
        case "top-right":
          return { transform: "translate(8px, -8px)" };
        case "bottom-left":
          return { transform: "translate(-8px, 8px)" };
        case "bottom-right":
          return { transform: "translate(8px, 8px)" };
        default:
          return {};
      }
    }, [t]);
    return /* @__PURE__ */ Te(
      ql,
      {
        position: t,
        style: {
          ...i,
          ...n
        },
        children: [
          o && /* @__PURE__ */ $(Cr, { isOutlined: r, sx: { height: "100%" }, children: e }),
          !o && e
        ]
      }
    );
  }
);
Yl.displayName = "WorkflowToolbar";
const t9 = Ie(({ position: e, style: t }) => {
  const { getNodes: n, getEdges: o } = bo();
  return /* @__PURE__ */ $(Yl, { position: e, style: t, isPaper: !1, children: /* @__PURE__ */ $(
    On,
    {
      icon: "hugeicons:tools",
      iconWidth: 24,
      isSquare: !0,
      onClick: () => {
        console.log({
          nodes: n(),
          edges: o()
        });
      }
    }
  ) });
});
t9.displayName = "WorkflowDevtool";
const DC = Ie(() => {
  var a, l, c, u, f;
  const { themePalette: e } = Qm(), { jumpToSpecificNode: t } = H7(), n = Bn(), o = Qe(() => {
    var d, p;
    if (!((d = n.minimap) != null && d.position)) return {};
    switch ((p = n.minimap) == null ? void 0 : p.position) {
      case "top-left":
        return { transform: "translate(-8px, 56px)" };
      case "top-right":
        return { transform: "translate(8px, 56px)" };
      case "bottom-left":
        return { transform: "translate(-8px, -56px)" };
      case "bottom-right":
        return { transform: "translate(8px, -56px)" };
      default:
        return {};
    }
  }, [(a = n.minimap) == null ? void 0 : a.position]), r = ze(
    (d) => {
      var y, x;
      const { type: p, selected: h, data: g } = d, m = ((x = (y = n.styles) == null ? void 0 : y.nodeColors) == null ? void 0 : x[p]) || e.main;
      return h || g != null && g.isFocus ? m : "transparent";
    },
    [e, (l = n.styles) == null ? void 0 : l.nodeColors]
  ), i = ze(
    (d) => {
      const { data: p } = d;
      return p != null && p.isInValid ? e.error : "#e2e2e2";
    },
    [e]
  );
  return /* @__PURE__ */ $(
    N8,
    {
      className: "VenomousUI-WorkflowMiniMap",
      position: (c = n.minimap) == null ? void 0 : c.position,
      nodeStrokeWidth: 16,
      nodeStrokeColor: r,
      nodeColor: i,
      nodeBorderRadius: 16,
      onNodeClick: (d, p) => {
        d.stopPropagation(), t(p.id, p.position);
      },
      pannable: !0,
      zoomable: !0,
      zoomStep: (u = n.canvas) == null ? void 0 : u.zoomStep,
      style: {
        ...o,
        width: (f = n.minimap) == null ? void 0 : f.width,
        borderRadius: 8,
        overflow: "hidden"
      }
    }
  );
});
DC.displayName = "WorkflowMiniMap";
const n9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: DC
}, Symbol.toStringTag, { value: "Module" })), o9 = Ie(
  ({ position: e = "bottom-right", style: t, renderContent: n }) => {
    var i;
    const o = gg(), r = Qe(() => o.nodes.length === 1 ? o.nodes[0] : null, [o.nodes]);
    return (i = r == null ? void 0 : r.data) != null && i.formValue ? /* @__PURE__ */ $(
      Yl,
      {
        isPaper: !0,
        isOutlinedPaper: !1,
        position: e,
        style: {
          height: "calc(100% - 16px)",
          width: 300,
          ...t
        },
        children: n == null ? void 0 : n(r)
      }
    ) : null;
  }
);
o9.displayName = "NodeDataFormValuePanel";
const LC = Ie(() => {
  var u, f, d, p, h, g;
  const { setNodes: e, setEdges: t } = bo(), { undo: n, redo: o, canUndo: r, canRedo: i } = CC(), { currentStates: a } = p7(), l = Bn();
  dt(() => {
    a.action !== null && (e(a.elements.nodes), t(a.elements.edges));
  }, [e, t, a]);
  const c = Qe(() => {
    var T, b, w;
    const m = (T = l.undoRedo) == null ? void 0 : T.position, y = (b = l.minimap) == null ? void 0 : b.enabled, x = (w = l.minimap) == null ? void 0 : w.width;
    if (!m) return {};
    switch (m) {
      case "top-left":
        return { transform: `translate(${y ? x : -8}px, -8px)` };
      case "top-right":
        return { transform: `translate(${y ? -x : 8}px, -8px)` };
      case "bottom-left":
        return { transform: `translate(${y ? x : -8}px, 8px)` };
      case "bottom-right":
        return { transform: `translate(${y ? -x : 8}px, 8px)` };
      default:
        return {};
    }
  }, [(u = l.undoRedo) == null ? void 0 : u.position, l.minimap]);
  return /* @__PURE__ */ $(Yl, { position: (f = l.undoRedo) == null ? void 0 : f.position, style: c, children: /* @__PURE__ */ Te(dn, { row: !0, gap: 0.5, children: [
    /* @__PURE__ */ $(ks, { tooltip: (p = (d = l.undoRedo) == null ? void 0 : d.tooltips) == null ? void 0 : p.undo, children: /* @__PURE__ */ $("span", { children: /* @__PURE__ */ $(
      On,
      {
        icon: "solar:multiple-forward-left-bold-duotone",
        isSquare: !0,
        disabled: !r,
        onClick: n
      }
    ) }) }),
    /* @__PURE__ */ $(ks, { tooltip: (g = (h = l.undoRedo) == null ? void 0 : h.tooltips) == null ? void 0 : g.redo, children: /* @__PURE__ */ $("span", { children: /* @__PURE__ */ $(
      On,
      {
        icon: "solar:multiple-forward-right-bold-duotone",
        isSquare: !0,
        disabled: !i,
        onClick: o
      }
    ) }) })
  ] }) });
});
LC.displayName = "WorkflowUndoRedo";
const r9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: LC
}, Symbol.toStringTag, { value: "Module" })), BC = Ie(() => {
  var c, u;
  const { currentViewport: e, increaseZoom: t, decreaseZoom: n } = D8(), o = Bn(), { zoom: r } = e, i = Qe(() => `${(r * 100).toFixed(0)}%`, [r]), a = Qe(
    () => r >= o.canvas.maxZoom,
    [r, o.canvas.maxZoom]
  ), l = Qe(
    () => r <= o.canvas.minZoom,
    [r, o.canvas.minZoom]
  );
  return /* @__PURE__ */ $(Yl, { position: (c = o.minimap) == null ? void 0 : c.position, isPaper: !0, children: /* @__PURE__ */ Te(dn, { row: !0, gap: 0, width: ((u = o.minimap) == null ? void 0 : u.width) - 16, justifyContent: "space-between", children: [
    /* @__PURE__ */ $(
      On,
      {
        icon: "solar:magnifer-zoom-out-linear",
        isSquare: !0,
        disabled: l,
        onClick: n
      }
    ),
    /* @__PURE__ */ $(Cn, { bold: !0, text: i, sx: { width: 100, textAlign: "right", px: 1 } }),
    /* @__PURE__ */ $(
      On,
      {
        icon: "solar:magnifer-zoom-in-linear",
        isSquare: !0,
        disabled: a,
        onClick: t
      }
    )
  ] }) });
});
BC.displayName = "WorkflowZoom";
const i9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: BC
}, Symbol.toStringTag, { value: "Module" }));
export {
  IV as AdminFullScreen,
  RV as AdminHeader,
  NV as AdminSettingsDrawer,
  PV as AdminSettingsDrawerBlock,
  AV as AdminSideNavMenu,
  ZN as Avatar,
  QN as Blank,
  On as Button,
  sd as Card,
  RS as Checkbox,
  Zz as CheckboxUncontrolled,
  zj as ConfirmModal,
  IA as Container,
  sw as DotBadge,
  OS as Drawer,
  $S as DrawerHeader,
  OM as ExhibitCard,
  $A as ExhibitCardActionButton,
  dn as Flex,
  h9 as FormUncontrolled,
  Qz as FormUncontrolledAction,
  xj as Grid,
  Wo as Icon,
  Mw as IconBadge,
  wd as Input,
  Jz as InputUncontrolled,
  Mi as Label,
  md as Labels,
  Tj as LazyImage,
  Mj as Loading,
  du as Menu,
  _a as MenuItem,
  NT as Modal,
  NS as NumberInput,
  XN as NumberTextBadge,
  ej as NumberUncontrolled,
  L1 as OtpInput,
  tj as OtpInputUncontrolled,
  Cr as Paper,
  B1 as Password,
  nj as PasswordUncontrolled,
  vS as Popover,
  MT as Popper,
  j1 as Radios,
  rj as RadiosUncontrolled,
  sT as Select,
  sj as SelectUncontrolled,
  Km as Switch,
  aj as SwitchUncontrolled,
  Cn as Text,
  $T as ThemePaletteName,
  Xj as ThemeProvider,
  EV as Toast,
  ks as Tooltip,
  kn as WorkflowAction,
  xg as WorkflowBaseEdge,
  wg as WorkflowBaseNode,
  rf as WorkflowBaseNodeHandler,
  Y7 as WorkflowBaseNodeHandlerItem,
  t9 as WorkflowDevtool,
  TC as WorkflowEdgeConnectionLineType,
  SC as WorkflowEdgeEndMarkerType,
  Bu as WorkflowEdgeTypeDefault,
  AC as WorkflowGroupNode,
  DC as WorkflowMiniMap,
  o9 as WorkflowNodeDataFormValuePanel,
  Zr as WorkflowNodeTypeDefault,
  J7 as WorkflowPlayground,
  MC as WorkflowSourceNodeHandler,
  _C as WorkflowTargetNodeHandler,
  Yl as WorkflowToolbarPanel,
  LC as WorkflowUndoRedo,
  e9 as WorkflowWrapper,
  BC as WorkflowZoom,
  Uz as createFormControl,
  m9 as createZodSchema,
  y9 as generateNewNodeToStore,
  OT as getColors,
  b9 as getRelevantEdgesByEdge,
  x7 as getRelevantEdgesByNode,
  eA as useCheckNavMenuActive,
  Mz as useController,
  BA as useDrawer,
  d9 as useFieldArray,
  f9 as useForm,
  yo as useFormContext,
  Pz as useFormState,
  yj as useFullScreen,
  g9 as useModal,
  Fi as usePaper,
  $l as useText,
  gj as useThemeBreakpoint,
  Ud as useThemeMode,
  Qm as useThemePalette,
  CV as useToast,
  Nz as useWatch,
  p7 as useWorkflowActionsHistoryStates,
  f7 as useWorkflowActionsHistoryStoreCleanup,
  CC as useWorkflowActionsHistoryUndoRedo,
  Hi as useWorkflowActionsHistoryUpdate,
  D8 as useWorkflowCanvasViewport,
  Bn as useWorkflowConfigs,
  b7 as useWorkflowCopiedElements,
  w7 as useWorkflowElementsCopyPasteCut,
  v9 as useWorkflowElementsProtect,
  bo as useWorkflowInstance,
  V7 as useWorkflowNodeCreate,
  H7 as useWorkflowNodeJump,
  W7 as useWorkflowNodeUpdate,
  gg as useWorkflowSelectedElements,
  p9 as zodResolver
};
