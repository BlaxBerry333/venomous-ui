var $v = Object.defineProperty;
var kv = (e, t, n) => t in e ? $v(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;
var Nr = (e, t, n) => kv(e, typeof t != "symbol" ? t + "" : t, n);
import { jsx as P, jsxs as Pe, Fragment as ih } from "react/jsx-runtime";
import * as C from "react";
import L, { forwardRef as Ru, useContext as Pv, useState as jr, useEffect as Hi, createElement as lo, memo as je, isValidElement as Js, cloneElement as Zs, Children as Iv, useMemo as cr, Fragment as Nv, useCallback as an, useId as sh, useRef as Av } from "react";
import * as ah from "react-dom";
import Mo from "react-dom";
function Sr(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((r) => n.searchParams.append("args[]", r)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
function fa() {
  return fa = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var r in n) ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
    }
    return e;
  }, fa.apply(null, arguments);
}
function Mv(e) {
  if (e.sheet)
    return e.sheet;
  for (var t = 0; t < document.styleSheets.length; t++)
    if (document.styleSheets[t].ownerNode === e)
      return document.styleSheets[t];
}
function _v(e) {
  var t = document.createElement("style");
  return t.setAttribute("data-emotion", e.key), e.nonce !== void 0 && t.setAttribute("nonce", e.nonce), t.appendChild(document.createTextNode("")), t.setAttribute("data-s", ""), t;
}
var Dv = /* @__PURE__ */ function() {
  function e(n) {
    var r = this;
    this._insertTag = function(o) {
      var s;
      r.tags.length === 0 ? r.insertionPoint ? s = r.insertionPoint.nextSibling : r.prepend ? s = r.container.firstChild : s = r.before : s = r.tags[r.tags.length - 1].nextSibling, r.container.insertBefore(o, s), r.tags.push(o);
    }, this.isSpeedy = n.speedy === void 0 ? !0 : n.speedy, this.tags = [], this.ctr = 0, this.nonce = n.nonce, this.key = n.key, this.container = n.container, this.prepend = n.prepend, this.insertionPoint = n.insertionPoint, this.before = null;
  }
  var t = e.prototype;
  return t.hydrate = function(r) {
    r.forEach(this._insertTag);
  }, t.insert = function(r) {
    this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(_v(this));
    var o = this.tags[this.tags.length - 1];
    if (this.isSpeedy) {
      var s = Mv(o);
      try {
        s.insertRule(r, s.cssRules.length);
      } catch {
      }
    } else
      o.appendChild(document.createTextNode(r));
    this.ctr++;
  }, t.flush = function() {
    this.tags.forEach(function(r) {
      var o;
      return (o = r.parentNode) == null ? void 0 : o.removeChild(r);
    }), this.tags = [], this.ctr = 0;
  }, e;
}(), Qt = "-ms-", pa = "-moz-", Ke = "-webkit-", lh = "comm", $u = "rule", ku = "decl", Bv = "@import", ch = "@keyframes", Fv = "@layer", jv = Math.abs, Ua = String.fromCharCode, Lv = Object.assign;
function Vv(e, t) {
  return qt(e, 0) ^ 45 ? (((t << 2 ^ qt(e, 0)) << 2 ^ qt(e, 1)) << 2 ^ qt(e, 2)) << 2 ^ qt(e, 3) : 0;
}
function uh(e) {
  return e.trim();
}
function zv(e, t) {
  return (e = t.exec(e)) ? e[0] : e;
}
function Xe(e, t, n) {
  return e.replace(t, n);
}
function Mc(e, t) {
  return e.indexOf(t);
}
function qt(e, t) {
  return e.charCodeAt(t) | 0;
}
function qi(e, t, n) {
  return e.slice(t, n);
}
function Zn(e) {
  return e.length;
}
function Pu(e) {
  return e.length;
}
function Ps(e, t) {
  return t.push(e), e;
}
function Wv(e, t) {
  return e.map(t).join("");
}
var Ha = 1, zo = 1, dh = 0, mn = 0, Ft = 0, ti = "";
function qa(e, t, n, r, o, s, a) {
  return { value: e, root: t, parent: n, type: r, props: o, children: s, line: Ha, column: zo, length: a, return: "" };
}
function pi(e, t) {
  return Lv(qa("", null, null, "", null, null, 0), e, { length: -e.length }, t);
}
function Uv() {
  return Ft;
}
function Hv() {
  return Ft = mn > 0 ? qt(ti, --mn) : 0, zo--, Ft === 10 && (zo = 1, Ha--), Ft;
}
function xn() {
  return Ft = mn < dh ? qt(ti, mn++) : 0, zo++, Ft === 10 && (zo = 1, Ha++), Ft;
}
function ir() {
  return qt(ti, mn);
}
function ea() {
  return mn;
}
function us(e, t) {
  return qi(ti, e, t);
}
function Yi(e) {
  switch (e) {
    // \0 \t \n \r \s whitespace token
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    // ! + , / > @ ~ isolate token
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    // ; { } breakpoint token
    case 59:
    case 123:
    case 125:
      return 4;
    // : accompanied token
    case 58:
      return 3;
    // " ' ( [ opening delimit token
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    // ) ] closing delimit token
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function fh(e) {
  return Ha = zo = 1, dh = Zn(ti = e), mn = 0, [];
}
function ph(e) {
  return ti = "", e;
}
function ta(e) {
  return uh(us(mn - 1, _c(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function qv(e) {
  for (; (Ft = ir()) && Ft < 33; )
    xn();
  return Yi(e) > 2 || Yi(Ft) > 3 ? "" : " ";
}
function Yv(e, t) {
  for (; --t && xn() && !(Ft < 48 || Ft > 102 || Ft > 57 && Ft < 65 || Ft > 70 && Ft < 97); )
    ;
  return us(e, ea() + (t < 6 && ir() == 32 && xn() == 32));
}
function _c(e) {
  for (; xn(); )
    switch (Ft) {
      // ] ) " '
      case e:
        return mn;
      // " '
      case 34:
      case 39:
        e !== 34 && e !== 39 && _c(Ft);
        break;
      // (
      case 40:
        e === 41 && _c(e);
        break;
      // \
      case 92:
        xn();
        break;
    }
  return mn;
}
function Gv(e, t) {
  for (; xn() && e + Ft !== 57; )
    if (e + Ft === 84 && ir() === 47)
      break;
  return "/*" + us(t, mn - 1) + "*" + Ua(e === 47 ? e : xn());
}
function Kv(e) {
  for (; !Yi(ir()); )
    xn();
  return us(e, mn);
}
function Xv(e) {
  return ph(na("", null, null, null, [""], e = fh(e), 0, [0], e));
}
function na(e, t, n, r, o, s, a, l, c) {
  for (var u = 0, d = 0, f = a, h = 0, g = 0, y = 0, m = 1, v = 1, x = 1, E = 0, w = "", S = o, b = s, T = r, R = w; v; )
    switch (y = E, E = xn()) {
      // (
      case 40:
        if (y != 108 && qt(R, f - 1) == 58) {
          Mc(R += Xe(ta(E), "&", "&\f"), "&\f") != -1 && (x = -1);
          break;
        }
      // " ' [
      case 34:
      case 39:
      case 91:
        R += ta(E);
        break;
      // \t \n \r \s
      case 9:
      case 10:
      case 13:
      case 32:
        R += qv(y);
        break;
      // \
      case 92:
        R += Yv(ea() - 1, 7);
        continue;
      // /
      case 47:
        switch (ir()) {
          case 42:
          case 47:
            Ps(Qv(Gv(xn(), ea()), t, n), c);
            break;
          default:
            R += "/";
        }
        break;
      // {
      case 123 * m:
        l[u++] = Zn(R) * x;
      // } ; \0
      case 125 * m:
      case 59:
      case 0:
        switch (E) {
          // \0 }
          case 0:
          case 125:
            v = 0;
          // ;
          case 59 + d:
            x == -1 && (R = Xe(R, /\f/g, "")), g > 0 && Zn(R) - f && Ps(g > 32 ? nf(R + ";", r, n, f - 1) : nf(Xe(R, " ", "") + ";", r, n, f - 2), c);
            break;
          // @ ;
          case 59:
            R += ";";
          // { rule/at-rule
          default:
            if (Ps(T = tf(R, t, n, u, d, o, l, w, S = [], b = [], f), s), E === 123)
              if (d === 0)
                na(R, t, T, T, S, s, f, l, b);
              else
                switch (h === 99 && qt(R, 3) === 110 ? 100 : h) {
                  // d l m s
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    na(e, T, T, r && Ps(tf(e, T, T, 0, 0, o, l, w, o, S = [], f), b), o, b, f, l, r ? S : b);
                    break;
                  default:
                    na(R, T, T, T, [""], b, 0, l, b);
                }
        }
        u = d = g = 0, m = x = 1, w = R = "", f = a;
        break;
      // :
      case 58:
        f = 1 + Zn(R), g = y;
      default:
        if (m < 1) {
          if (E == 123)
            --m;
          else if (E == 125 && m++ == 0 && Hv() == 125)
            continue;
        }
        switch (R += Ua(E), E * m) {
          // &
          case 38:
            x = d > 0 ? 1 : (R += "\f", -1);
            break;
          // ,
          case 44:
            l[u++] = (Zn(R) - 1) * x, x = 1;
            break;
          // @
          case 64:
            ir() === 45 && (R += ta(xn())), h = ir(), d = f = Zn(w = R += Kv(ea())), E++;
            break;
          // -
          case 45:
            y === 45 && Zn(R) == 2 && (m = 0);
        }
    }
  return s;
}
function tf(e, t, n, r, o, s, a, l, c, u, d) {
  for (var f = o - 1, h = o === 0 ? s : [""], g = Pu(h), y = 0, m = 0, v = 0; y < r; ++y)
    for (var x = 0, E = qi(e, f + 1, f = jv(m = a[y])), w = e; x < g; ++x)
      (w = uh(m > 0 ? h[x] + " " + E : Xe(E, /&\f/g, h[x]))) && (c[v++] = w);
  return qa(e, t, n, o === 0 ? $u : l, c, u, d);
}
function Qv(e, t, n) {
  return qa(e, t, n, lh, Ua(Uv()), qi(e, 2, -2), 0);
}
function nf(e, t, n, r) {
  return qa(e, t, n, ku, qi(e, 0, r), qi(e, r + 1, -1), r);
}
function Bo(e, t) {
  for (var n = "", r = Pu(e), o = 0; o < r; o++)
    n += t(e[o], o, e, t) || "";
  return n;
}
function Jv(e, t, n, r) {
  switch (e.type) {
    case Fv:
      if (e.children.length) break;
    case Bv:
    case ku:
      return e.return = e.return || e.value;
    case lh:
      return "";
    case ch:
      return e.return = e.value + "{" + Bo(e.children, r) + "}";
    case $u:
      e.value = e.props.join(",");
  }
  return Zn(n = Bo(e.children, r)) ? e.return = e.value + "{" + n + "}" : "";
}
function Zv(e) {
  var t = Pu(e);
  return function(n, r, o, s) {
    for (var a = "", l = 0; l < t; l++)
      a += e[l](n, r, o, s) || "";
    return a;
  };
}
function e0(e) {
  return function(t) {
    t.root || (t = t.return) && e(t);
  };
}
function mh(e) {
  var t = /* @__PURE__ */ Object.create(null);
  return function(n) {
    return t[n] === void 0 && (t[n] = e(n)), t[n];
  };
}
var t0 = function(t, n, r) {
  for (var o = 0, s = 0; o = s, s = ir(), o === 38 && s === 12 && (n[r] = 1), !Yi(s); )
    xn();
  return us(t, mn);
}, n0 = function(t, n) {
  var r = -1, o = 44;
  do
    switch (Yi(o)) {
      case 0:
        o === 38 && ir() === 12 && (n[r] = 1), t[r] += t0(mn - 1, n, r);
        break;
      case 2:
        t[r] += ta(o);
        break;
      case 4:
        if (o === 44) {
          t[++r] = ir() === 58 ? "&\f" : "", n[r] = t[r].length;
          break;
        }
      // fallthrough
      default:
        t[r] += Ua(o);
    }
  while (o = xn());
  return t;
}, r0 = function(t, n) {
  return ph(n0(fh(t), n));
}, rf = /* @__PURE__ */ new WeakMap(), o0 = function(t) {
  if (!(t.type !== "rule" || !t.parent || // positive .length indicates that this rule contains pseudo
  // negative .length indicates that this rule has been already prefixed
  t.length < 1)) {
    for (var n = t.value, r = t.parent, o = t.column === r.column && t.line === r.line; r.type !== "rule"; )
      if (r = r.parent, !r) return;
    if (!(t.props.length === 1 && n.charCodeAt(0) !== 58 && !rf.get(r)) && !o) {
      rf.set(t, !0);
      for (var s = [], a = r0(n, s), l = r.props, c = 0, u = 0; c < a.length; c++)
        for (var d = 0; d < l.length; d++, u++)
          t.props[u] = s[c] ? a[c].replace(/&\f/g, l[d]) : l[d] + " " + a[c];
    }
  }
}, i0 = function(t) {
  if (t.type === "decl") {
    var n = t.value;
    // charcode for l
    n.charCodeAt(0) === 108 && // charcode for b
    n.charCodeAt(2) === 98 && (t.return = "", t.value = "");
  }
};
function hh(e, t) {
  switch (Vv(e, t)) {
    // color-adjust
    case 5103:
      return Ke + "print-" + e + e;
    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return Ke + e + e;
    // appearance, user-select, transform, hyphens, text-size-adjust
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return Ke + e + pa + e + Qt + e + e;
    // flex, flex-direction
    case 6828:
    case 4268:
      return Ke + e + Qt + e + e;
    // order
    case 6165:
      return Ke + e + Qt + "flex-" + e + e;
    // align-items
    case 5187:
      return Ke + e + Xe(e, /(\w+).+(:[^]+)/, Ke + "box-$1$2" + Qt + "flex-$1$2") + e;
    // align-self
    case 5443:
      return Ke + e + Qt + "flex-item-" + Xe(e, /flex-|-self/, "") + e;
    // align-content
    case 4675:
      return Ke + e + Qt + "flex-line-pack" + Xe(e, /align-content|flex-|-self/, "") + e;
    // flex-shrink
    case 5548:
      return Ke + e + Qt + Xe(e, "shrink", "negative") + e;
    // flex-basis
    case 5292:
      return Ke + e + Qt + Xe(e, "basis", "preferred-size") + e;
    // flex-grow
    case 6060:
      return Ke + "box-" + Xe(e, "-grow", "") + Ke + e + Qt + Xe(e, "grow", "positive") + e;
    // transition
    case 4554:
      return Ke + Xe(e, /([^-])(transform)/g, "$1" + Ke + "$2") + e;
    // cursor
    case 6187:
      return Xe(Xe(Xe(e, /(zoom-|grab)/, Ke + "$1"), /(image-set)/, Ke + "$1"), e, "") + e;
    // background, background-image
    case 5495:
    case 3959:
      return Xe(e, /(image-set\([^]*)/, Ke + "$1$`$1");
    // justify-content
    case 4968:
      return Xe(Xe(e, /(.+:)(flex-)?(.*)/, Ke + "box-pack:$3" + Qt + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + Ke + e + e;
    // (margin|padding)-inline-(start|end)
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return Xe(e, /(.+)-inline(.+)/, Ke + "$1$2") + e;
    // (min|max)?(width|height|inline-size|block-size)
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (Zn(e) - 1 - t > 6) switch (qt(e, t + 1)) {
        // (m)ax-content, (m)in-content
        case 109:
          if (qt(e, t + 4) !== 45) break;
        // (f)ill-available, (f)it-content
        case 102:
          return Xe(e, /(.+:)(.+)-([^]+)/, "$1" + Ke + "$2-$3$1" + pa + (qt(e, t + 3) == 108 ? "$3" : "$2-$3")) + e;
        // (s)tretch
        case 115:
          return ~Mc(e, "stretch") ? hh(Xe(e, "stretch", "fill-available"), t) + e : e;
      }
      break;
    // position: sticky
    case 4949:
      if (qt(e, t + 1) !== 115) break;
    // display: (flex|inline-flex)
    case 6444:
      switch (qt(e, Zn(e) - 3 - (~Mc(e, "!important") && 10))) {
        // stic(k)y
        case 107:
          return Xe(e, ":", ":" + Ke) + e;
        // (inline-)?fl(e)x
        case 101:
          return Xe(e, /(.+:)([^;!]+)(;|!.+)?/, "$1" + Ke + (qt(e, 14) === 45 ? "inline-" : "") + "box$3$1" + Ke + "$2$3$1" + Qt + "$2box$3") + e;
      }
      break;
    // writing-mode
    case 5936:
      switch (qt(e, t + 11)) {
        // vertical-l(r)
        case 114:
          return Ke + e + Qt + Xe(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
        // vertical-r(l)
        case 108:
          return Ke + e + Qt + Xe(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
        // horizontal(-)tb
        case 45:
          return Ke + e + Qt + Xe(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
      }
      return Ke + e + Qt + e + e;
  }
  return e;
}
var s0 = function(t, n, r, o) {
  if (t.length > -1 && !t.return) switch (t.type) {
    case ku:
      t.return = hh(t.value, t.length);
      break;
    case ch:
      return Bo([pi(t, {
        value: Xe(t.value, "@", "@" + Ke)
      })], o);
    case $u:
      if (t.length) return Wv(t.props, function(s) {
        switch (zv(s, /(::plac\w+|:read-\w+)/)) {
          // :read-(only|write)
          case ":read-only":
          case ":read-write":
            return Bo([pi(t, {
              props: [Xe(s, /:(read-\w+)/, ":" + pa + "$1")]
            })], o);
          // :placeholder
          case "::placeholder":
            return Bo([pi(t, {
              props: [Xe(s, /:(plac\w+)/, ":" + Ke + "input-$1")]
            }), pi(t, {
              props: [Xe(s, /:(plac\w+)/, ":" + pa + "$1")]
            }), pi(t, {
              props: [Xe(s, /:(plac\w+)/, Qt + "input-$1")]
            })], o);
        }
        return "";
      });
  }
}, a0 = [s0], l0 = function(t) {
  var n = t.key;
  if (n === "css") {
    var r = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(r, function(m) {
      var v = m.getAttribute("data-emotion");
      v.indexOf(" ") !== -1 && (document.head.appendChild(m), m.setAttribute("data-s", ""));
    });
  }
  var o = t.stylisPlugins || a0, s = {}, a, l = [];
  a = t.container || document.head, Array.prototype.forEach.call(
    // this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll('style[data-emotion^="' + n + ' "]'),
    function(m) {
      for (var v = m.getAttribute("data-emotion").split(" "), x = 1; x < v.length; x++)
        s[v[x]] = !0;
      l.push(m);
    }
  );
  var c, u = [o0, i0];
  {
    var d, f = [Jv, e0(function(m) {
      d.insert(m);
    })], h = Zv(u.concat(o, f)), g = function(v) {
      return Bo(Xv(v), h);
    };
    c = function(v, x, E, w) {
      d = E, g(v ? v + "{" + x.styles + "}" : x.styles), w && (y.inserted[x.name] = !0);
    };
  }
  var y = {
    key: n,
    sheet: new Dv({
      key: n,
      container: a,
      nonce: t.nonce,
      speedy: t.speedy,
      prepend: t.prepend,
      insertionPoint: t.insertionPoint
    }),
    nonce: t.nonce,
    inserted: s,
    registered: {},
    insert: c
  };
  return y.sheet.hydrate(l), y;
};
function c0(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Is = { exports: {} }, Je = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var of;
function u0() {
  if (of) return Je;
  of = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, h = e ? Symbol.for("react.suspense_list") : 60120, g = e ? Symbol.for("react.memo") : 60115, y = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, v = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
  function w(b) {
    if (typeof b == "object" && b !== null) {
      var T = b.$$typeof;
      switch (T) {
        case t:
          switch (b = b.type, b) {
            case c:
            case u:
            case r:
            case s:
            case o:
            case f:
              return b;
            default:
              switch (b = b && b.$$typeof, b) {
                case l:
                case d:
                case y:
                case g:
                case a:
                  return b;
                default:
                  return T;
              }
          }
        case n:
          return T;
      }
    }
  }
  function S(b) {
    return w(b) === u;
  }
  return Je.AsyncMode = c, Je.ConcurrentMode = u, Je.ContextConsumer = l, Je.ContextProvider = a, Je.Element = t, Je.ForwardRef = d, Je.Fragment = r, Je.Lazy = y, Je.Memo = g, Je.Portal = n, Je.Profiler = s, Je.StrictMode = o, Je.Suspense = f, Je.isAsyncMode = function(b) {
    return S(b) || w(b) === c;
  }, Je.isConcurrentMode = S, Je.isContextConsumer = function(b) {
    return w(b) === l;
  }, Je.isContextProvider = function(b) {
    return w(b) === a;
  }, Je.isElement = function(b) {
    return typeof b == "object" && b !== null && b.$$typeof === t;
  }, Je.isForwardRef = function(b) {
    return w(b) === d;
  }, Je.isFragment = function(b) {
    return w(b) === r;
  }, Je.isLazy = function(b) {
    return w(b) === y;
  }, Je.isMemo = function(b) {
    return w(b) === g;
  }, Je.isPortal = function(b) {
    return w(b) === n;
  }, Je.isProfiler = function(b) {
    return w(b) === s;
  }, Je.isStrictMode = function(b) {
    return w(b) === o;
  }, Je.isSuspense = function(b) {
    return w(b) === f;
  }, Je.isValidElementType = function(b) {
    return typeof b == "string" || typeof b == "function" || b === r || b === u || b === s || b === o || b === f || b === h || typeof b == "object" && b !== null && (b.$$typeof === y || b.$$typeof === g || b.$$typeof === a || b.$$typeof === l || b.$$typeof === d || b.$$typeof === v || b.$$typeof === x || b.$$typeof === E || b.$$typeof === m);
  }, Je.typeOf = w, Je;
}
var Ze = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var sf;
function d0() {
  return sf || (sf = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, h = e ? Symbol.for("react.suspense_list") : 60120, g = e ? Symbol.for("react.memo") : 60115, y = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, v = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
    function w(F) {
      return typeof F == "string" || typeof F == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      F === r || F === u || F === s || F === o || F === f || F === h || typeof F == "object" && F !== null && (F.$$typeof === y || F.$$typeof === g || F.$$typeof === a || F.$$typeof === l || F.$$typeof === d || F.$$typeof === v || F.$$typeof === x || F.$$typeof === E || F.$$typeof === m);
    }
    function S(F) {
      if (typeof F == "object" && F !== null) {
        var he = F.$$typeof;
        switch (he) {
          case t:
            var fe = F.type;
            switch (fe) {
              case c:
              case u:
              case r:
              case s:
              case o:
              case f:
                return fe;
              default:
                var Se = fe && fe.$$typeof;
                switch (Se) {
                  case l:
                  case d:
                  case y:
                  case g:
                  case a:
                    return Se;
                  default:
                    return he;
                }
            }
          case n:
            return he;
        }
      }
    }
    var b = c, T = u, R = l, $ = a, I = t, p = d, O = r, k = y, A = g, D = n, _ = s, M = o, z = f, Y = !1;
    function H(F) {
      return Y || (Y = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), j(F) || S(F) === c;
    }
    function j(F) {
      return S(F) === u;
    }
    function W(F) {
      return S(F) === l;
    }
    function ee(F) {
      return S(F) === a;
    }
    function K(F) {
      return typeof F == "object" && F !== null && F.$$typeof === t;
    }
    function oe(F) {
      return S(F) === d;
    }
    function ne(F) {
      return S(F) === r;
    }
    function se(F) {
      return S(F) === y;
    }
    function de(F) {
      return S(F) === g;
    }
    function X(F) {
      return S(F) === n;
    }
    function ae(F) {
      return S(F) === s;
    }
    function Q(F) {
      return S(F) === o;
    }
    function ie(F) {
      return S(F) === f;
    }
    Ze.AsyncMode = b, Ze.ConcurrentMode = T, Ze.ContextConsumer = R, Ze.ContextProvider = $, Ze.Element = I, Ze.ForwardRef = p, Ze.Fragment = O, Ze.Lazy = k, Ze.Memo = A, Ze.Portal = D, Ze.Profiler = _, Ze.StrictMode = M, Ze.Suspense = z, Ze.isAsyncMode = H, Ze.isConcurrentMode = j, Ze.isContextConsumer = W, Ze.isContextProvider = ee, Ze.isElement = K, Ze.isForwardRef = oe, Ze.isFragment = ne, Ze.isLazy = se, Ze.isMemo = de, Ze.isPortal = X, Ze.isProfiler = ae, Ze.isStrictMode = Q, Ze.isSuspense = ie, Ze.isValidElementType = w, Ze.typeOf = S;
  }()), Ze;
}
var af;
function f0() {
  return af || (af = 1, process.env.NODE_ENV === "production" ? Is.exports = u0() : Is.exports = d0()), Is.exports;
}
var Hl, lf;
function p0() {
  if (lf) return Hl;
  lf = 1;
  var e = f0(), t = {
    childContextTypes: !0,
    contextType: !0,
    contextTypes: !0,
    defaultProps: !0,
    displayName: !0,
    getDefaultProps: !0,
    getDerivedStateFromError: !0,
    getDerivedStateFromProps: !0,
    mixins: !0,
    propTypes: !0,
    type: !0
  }, n = {
    name: !0,
    length: !0,
    prototype: !0,
    caller: !0,
    callee: !0,
    arguments: !0,
    arity: !0
  }, r = {
    $$typeof: !0,
    render: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0
  }, o = {
    $$typeof: !0,
    compare: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0,
    type: !0
  }, s = {};
  s[e.ForwardRef] = r, s[e.Memo] = o;
  function a(y) {
    return e.isMemo(y) ? o : s[y.$$typeof] || t;
  }
  var l = Object.defineProperty, c = Object.getOwnPropertyNames, u = Object.getOwnPropertySymbols, d = Object.getOwnPropertyDescriptor, f = Object.getPrototypeOf, h = Object.prototype;
  function g(y, m, v) {
    if (typeof m != "string") {
      if (h) {
        var x = f(m);
        x && x !== h && g(y, x, v);
      }
      var E = c(m);
      u && (E = E.concat(u(m)));
      for (var w = a(y), S = a(m), b = 0; b < E.length; ++b) {
        var T = E[b];
        if (!n[T] && !(v && v[T]) && !(S && S[T]) && !(w && w[T])) {
          var R = d(m, T);
          try {
            l(y, T, R);
          } catch {
          }
        }
      }
    }
    return y;
  }
  return Hl = g, Hl;
}
p0();
var m0 = !0;
function gh(e, t, n) {
  var r = "";
  return n.split(" ").forEach(function(o) {
    e[o] !== void 0 ? t.push(e[o] + ";") : o && (r += o + " ");
  }), r;
}
var Iu = function(t, n, r) {
  var o = t.key + "-" + n.name;
  // we only need to add the styles to the registered cache if the
  // class name could be used further down
  // the tree but if it's a string tag, we know it won't
  // so we don't have to add it to registered cache.
  // this improves memory usage since we can avoid storing the whole style string
  (r === !1 || // we need to always store it if we're in compat mode and
  // in node since emotion-server relies on whether a style is in
  // the registered cache to know whether a style is global or not
  // also, note that this check will be dead code eliminated in the browser
  m0 === !1) && t.registered[o] === void 0 && (t.registered[o] = n.styles);
}, Nu = function(t, n, r) {
  Iu(t, n, r);
  var o = t.key + "-" + n.name;
  if (t.inserted[n.name] === void 0) {
    var s = n;
    do
      t.insert(n === s ? "." + o : "", s, t.sheet, !0), s = s.next;
    while (s !== void 0);
  }
};
function h0(e) {
  for (var t = 0, n, r = 0, o = e.length; o >= 4; ++r, o -= 4)
    n = e.charCodeAt(r) & 255 | (e.charCodeAt(++r) & 255) << 8 | (e.charCodeAt(++r) & 255) << 16 | (e.charCodeAt(++r) & 255) << 24, n = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16), n ^= /* k >>> r: */
    n >>> 24, t = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  switch (o) {
    case 3:
      t ^= (e.charCodeAt(r + 2) & 255) << 16;
    case 2:
      t ^= (e.charCodeAt(r + 1) & 255) << 8;
    case 1:
      t ^= e.charCodeAt(r) & 255, t = /* Math.imul(h, m): */
      (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  }
  return t ^= t >>> 13, t = /* Math.imul(h, m): */
  (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16), ((t ^ t >>> 15) >>> 0).toString(36);
}
var g0 = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  scale: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, y0 = /[A-Z]|^ms/g, b0 = /_EMO_([^_]+?)_([^]*?)_EMO_/g, yh = function(t) {
  return t.charCodeAt(1) === 45;
}, cf = function(t) {
  return t != null && typeof t != "boolean";
}, ql = /* @__PURE__ */ mh(function(e) {
  return yh(e) ? e : e.replace(y0, "-$&").toLowerCase();
}), uf = function(t, n) {
  switch (t) {
    case "animation":
    case "animationName":
      if (typeof n == "string")
        return n.replace(b0, function(r, o, s) {
          return er = {
            name: o,
            styles: s,
            next: er
          }, o;
        });
  }
  return g0[t] !== 1 && !yh(t) && typeof n == "number" && n !== 0 ? n + "px" : n;
};
function Gi(e, t, n) {
  if (n == null)
    return "";
  var r = n;
  if (r.__emotion_styles !== void 0)
    return r;
  switch (typeof n) {
    case "boolean":
      return "";
    case "object": {
      var o = n;
      if (o.anim === 1)
        return er = {
          name: o.name,
          styles: o.styles,
          next: er
        }, o.name;
      var s = n;
      if (s.styles !== void 0) {
        var a = s.next;
        if (a !== void 0)
          for (; a !== void 0; )
            er = {
              name: a.name,
              styles: a.styles,
              next: er
            }, a = a.next;
        var l = s.styles + ";";
        return l;
      }
      return v0(e, t, n);
    }
    case "function": {
      if (e !== void 0) {
        var c = er, u = n(e);
        return er = c, Gi(e, t, u);
      }
      break;
    }
  }
  var d = n;
  if (t == null)
    return d;
  var f = t[d];
  return f !== void 0 ? f : d;
}
function v0(e, t, n) {
  var r = "";
  if (Array.isArray(n))
    for (var o = 0; o < n.length; o++)
      r += Gi(e, t, n[o]) + ";";
  else
    for (var s in n) {
      var a = n[s];
      if (typeof a != "object") {
        var l = a;
        t != null && t[l] !== void 0 ? r += s + "{" + t[l] + "}" : cf(l) && (r += ql(s) + ":" + uf(s, l) + ";");
      } else if (Array.isArray(a) && typeof a[0] == "string" && (t == null || t[a[0]] === void 0))
        for (var c = 0; c < a.length; c++)
          cf(a[c]) && (r += ql(s) + ":" + uf(s, a[c]) + ";");
      else {
        var u = Gi(e, t, a);
        switch (s) {
          case "animation":
          case "animationName": {
            r += ql(s) + ":" + u + ";";
            break;
          }
          default:
            r += s + "{" + u + "}";
        }
      }
    }
  return r;
}
var df = /label:\s*([^\s;{]+)\s*(;|$)/g, er;
function ni(e, t, n) {
  if (e.length === 1 && typeof e[0] == "object" && e[0] !== null && e[0].styles !== void 0)
    return e[0];
  var r = !0, o = "";
  er = void 0;
  var s = e[0];
  if (s == null || s.raw === void 0)
    r = !1, o += Gi(n, t, s);
  else {
    var a = s;
    o += a[0];
  }
  for (var l = 1; l < e.length; l++)
    if (o += Gi(n, t, e[l]), r) {
      var c = s;
      o += c[l];
    }
  df.lastIndex = 0;
  for (var u = "", d; (d = df.exec(o)) !== null; )
    u += "-" + d[1];
  var f = h0(o) + u;
  return {
    name: f,
    styles: o,
    next: er
  };
}
var x0 = function(t) {
  return t();
}, bh = C.useInsertionEffect ? C.useInsertionEffect : !1, vh = bh || x0, ff = bh || C.useLayoutEffect, xh = /* @__PURE__ */ C.createContext(
  // we're doing this to avoid preconstruct's dead code elimination in this one case
  // because this module is primarily intended for the browser and node
  // but it's also required in react native and similar environments sometimes
  // and we could have a special build just for that
  // but this is much easier and the native packages
  // might use a different theme context in the future anyway
  typeof HTMLElement < "u" ? /* @__PURE__ */ l0({
    key: "css"
  }) : null
);
xh.Provider;
var Au = function(t) {
  return /* @__PURE__ */ Ru(function(n, r) {
    var o = Pv(xh);
    return t(n, o, r);
  });
}, ri = /* @__PURE__ */ C.createContext({}), Mu = {}.hasOwnProperty, Dc = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__", w0 = function(t, n) {
  var r = {};
  for (var o in n)
    Mu.call(n, o) && (r[o] = n[o]);
  return r[Dc] = t, r;
}, S0 = function(t) {
  var n = t.cache, r = t.serialized, o = t.isStringTag;
  return Iu(n, r, o), vh(function() {
    return Nu(n, r, o);
  }), null;
}, T0 = /* @__PURE__ */ Au(function(e, t, n) {
  var r = e.css;
  typeof r == "string" && t.registered[r] !== void 0 && (r = t.registered[r]);
  var o = e[Dc], s = [r], a = "";
  typeof e.className == "string" ? a = gh(t.registered, s, e.className) : e.className != null && (a = e.className + " ");
  var l = ni(s, void 0, C.useContext(ri));
  a += t.key + "-" + l.name;
  var c = {};
  for (var u in e)
    Mu.call(e, u) && u !== "css" && u !== Dc && (c[u] = e[u]);
  return c.className = a, n && (c.ref = n), /* @__PURE__ */ C.createElement(C.Fragment, null, /* @__PURE__ */ C.createElement(S0, {
    cache: t,
    serialized: l,
    isStringTag: typeof o == "string"
  }), /* @__PURE__ */ C.createElement(o, c));
}), E0 = T0, pf = function(t, n) {
  var r = arguments;
  if (n == null || !Mu.call(n, "css"))
    return C.createElement.apply(void 0, r);
  var o = r.length, s = new Array(o);
  s[0] = E0, s[1] = w0(t, n);
  for (var a = 2; a < o; a++)
    s[a] = r[a];
  return C.createElement.apply(null, s);
};
(function(e) {
  var t;
  t || (t = e.JSX || (e.JSX = {}));
})(pf || (pf = {}));
var wh = /* @__PURE__ */ Au(function(e, t) {
  var n = e.styles, r = ni([n], void 0, C.useContext(ri)), o = C.useRef();
  return ff(function() {
    var s = t.key + "-global", a = new t.sheet.constructor({
      key: s,
      nonce: t.sheet.nonce,
      container: t.sheet.container,
      speedy: t.sheet.isSpeedy
    }), l = !1, c = document.querySelector('style[data-emotion="' + s + " " + r.name + '"]');
    return t.sheet.tags.length && (a.before = t.sheet.tags[0]), c !== null && (l = !0, c.setAttribute("data-emotion", s), a.hydrate([c])), o.current = [a, l], function() {
      a.flush();
    };
  }, [t]), ff(function() {
    var s = o.current, a = s[0], l = s[1];
    if (l) {
      s[1] = !1;
      return;
    }
    if (r.next !== void 0 && Nu(t, r.next, !0), a.tags.length) {
      var c = a.tags[a.tags.length - 1].nextElementSibling;
      a.before = c, a.flush();
    }
    t.insert("", r, a, !1);
  }, [t, r.name]), null;
});
function oi() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return ni(t);
}
function Ur() {
  var e = oi.apply(void 0, arguments), t = "animation-" + e.name;
  return {
    name: t,
    styles: "@keyframes " + t + "{" + e.styles + "}",
    anim: 1,
    toString: function() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
}
var C0 = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, O0 = /* @__PURE__ */ mh(
  function(e) {
    return C0.test(e) || e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && e.charCodeAt(2) < 91;
  }
  /* Z+1 */
), R0 = O0, $0 = function(t) {
  return t !== "theme";
}, mf = function(t) {
  return typeof t == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  t.charCodeAt(0) > 96 ? R0 : $0;
}, hf = function(t, n, r) {
  var o;
  if (n) {
    var s = n.shouldForwardProp;
    o = t.__emotion_forwardProp && s ? function(a) {
      return t.__emotion_forwardProp(a) && s(a);
    } : s;
  }
  return typeof o != "function" && r && (o = t.__emotion_forwardProp), o;
}, k0 = function(t) {
  var n = t.cache, r = t.serialized, o = t.isStringTag;
  return Iu(n, r, o), vh(function() {
    return Nu(n, r, o);
  }), null;
}, P0 = function e(t, n) {
  var r = t.__emotion_real === t, o = r && t.__emotion_base || t, s, a;
  n !== void 0 && (s = n.label, a = n.target);
  var l = hf(t, n, r), c = l || mf(o), u = !c("as");
  return function() {
    var d = arguments, f = r && t.__emotion_styles !== void 0 ? t.__emotion_styles.slice(0) : [];
    if (s !== void 0 && f.push("label:" + s + ";"), d[0] == null || d[0].raw === void 0)
      f.push.apply(f, d);
    else {
      var h = d[0];
      f.push(h[0]);
      for (var g = d.length, y = 1; y < g; y++)
        f.push(d[y], h[y]);
    }
    var m = Au(function(v, x, E) {
      var w = u && v.as || o, S = "", b = [], T = v;
      if (v.theme == null) {
        T = {};
        for (var R in v)
          T[R] = v[R];
        T.theme = C.useContext(ri);
      }
      typeof v.className == "string" ? S = gh(x.registered, b, v.className) : v.className != null && (S = v.className + " ");
      var $ = ni(f.concat(b), x.registered, T);
      S += x.key + "-" + $.name, a !== void 0 && (S += " " + a);
      var I = u && l === void 0 ? mf(w) : c, p = {};
      for (var O in v)
        u && O === "as" || I(O) && (p[O] = v[O]);
      return p.className = S, E && (p.ref = E), /* @__PURE__ */ C.createElement(C.Fragment, null, /* @__PURE__ */ C.createElement(k0, {
        cache: x,
        serialized: $,
        isStringTag: typeof w == "string"
      }), /* @__PURE__ */ C.createElement(w, p));
    });
    return m.displayName = s !== void 0 ? s : "Styled(" + (typeof o == "string" ? o : o.displayName || o.name || "Component") + ")", m.defaultProps = t.defaultProps, m.__emotion_real = m, m.__emotion_base = o, m.__emotion_styles = f, m.__emotion_forwardProp = l, Object.defineProperty(m, "toString", {
      value: function() {
        return "." + a;
      }
    }), m.withComponent = function(v, x) {
      var E = e(v, fa({}, n, x, {
        shouldForwardProp: hf(m, x, !0)
      }));
      return E.apply(void 0, f);
    }, m;
  };
}, I0 = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], ma = P0.bind(null);
I0.forEach(function(e) {
  ma[e] = ma(e);
});
var Ns = { exports: {} }, As = { exports: {} }, et = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var gf;
function N0() {
  if (gf) return et;
  gf = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, h = e ? Symbol.for("react.suspense_list") : 60120, g = e ? Symbol.for("react.memo") : 60115, y = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, v = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
  function w(b) {
    if (typeof b == "object" && b !== null) {
      var T = b.$$typeof;
      switch (T) {
        case t:
          switch (b = b.type, b) {
            case c:
            case u:
            case r:
            case s:
            case o:
            case f:
              return b;
            default:
              switch (b = b && b.$$typeof, b) {
                case l:
                case d:
                case y:
                case g:
                case a:
                  return b;
                default:
                  return T;
              }
          }
        case n:
          return T;
      }
    }
  }
  function S(b) {
    return w(b) === u;
  }
  return et.AsyncMode = c, et.ConcurrentMode = u, et.ContextConsumer = l, et.ContextProvider = a, et.Element = t, et.ForwardRef = d, et.Fragment = r, et.Lazy = y, et.Memo = g, et.Portal = n, et.Profiler = s, et.StrictMode = o, et.Suspense = f, et.isAsyncMode = function(b) {
    return S(b) || w(b) === c;
  }, et.isConcurrentMode = S, et.isContextConsumer = function(b) {
    return w(b) === l;
  }, et.isContextProvider = function(b) {
    return w(b) === a;
  }, et.isElement = function(b) {
    return typeof b == "object" && b !== null && b.$$typeof === t;
  }, et.isForwardRef = function(b) {
    return w(b) === d;
  }, et.isFragment = function(b) {
    return w(b) === r;
  }, et.isLazy = function(b) {
    return w(b) === y;
  }, et.isMemo = function(b) {
    return w(b) === g;
  }, et.isPortal = function(b) {
    return w(b) === n;
  }, et.isProfiler = function(b) {
    return w(b) === s;
  }, et.isStrictMode = function(b) {
    return w(b) === o;
  }, et.isSuspense = function(b) {
    return w(b) === f;
  }, et.isValidElementType = function(b) {
    return typeof b == "string" || typeof b == "function" || b === r || b === u || b === s || b === o || b === f || b === h || typeof b == "object" && b !== null && (b.$$typeof === y || b.$$typeof === g || b.$$typeof === a || b.$$typeof === l || b.$$typeof === d || b.$$typeof === v || b.$$typeof === x || b.$$typeof === E || b.$$typeof === m);
  }, et.typeOf = w, et;
}
var tt = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var yf;
function A0() {
  return yf || (yf = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, h = e ? Symbol.for("react.suspense_list") : 60120, g = e ? Symbol.for("react.memo") : 60115, y = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, v = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
    function w(F) {
      return typeof F == "string" || typeof F == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      F === r || F === u || F === s || F === o || F === f || F === h || typeof F == "object" && F !== null && (F.$$typeof === y || F.$$typeof === g || F.$$typeof === a || F.$$typeof === l || F.$$typeof === d || F.$$typeof === v || F.$$typeof === x || F.$$typeof === E || F.$$typeof === m);
    }
    function S(F) {
      if (typeof F == "object" && F !== null) {
        var he = F.$$typeof;
        switch (he) {
          case t:
            var fe = F.type;
            switch (fe) {
              case c:
              case u:
              case r:
              case s:
              case o:
              case f:
                return fe;
              default:
                var Se = fe && fe.$$typeof;
                switch (Se) {
                  case l:
                  case d:
                  case y:
                  case g:
                  case a:
                    return Se;
                  default:
                    return he;
                }
            }
          case n:
            return he;
        }
      }
    }
    var b = c, T = u, R = l, $ = a, I = t, p = d, O = r, k = y, A = g, D = n, _ = s, M = o, z = f, Y = !1;
    function H(F) {
      return Y || (Y = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), j(F) || S(F) === c;
    }
    function j(F) {
      return S(F) === u;
    }
    function W(F) {
      return S(F) === l;
    }
    function ee(F) {
      return S(F) === a;
    }
    function K(F) {
      return typeof F == "object" && F !== null && F.$$typeof === t;
    }
    function oe(F) {
      return S(F) === d;
    }
    function ne(F) {
      return S(F) === r;
    }
    function se(F) {
      return S(F) === y;
    }
    function de(F) {
      return S(F) === g;
    }
    function X(F) {
      return S(F) === n;
    }
    function ae(F) {
      return S(F) === s;
    }
    function Q(F) {
      return S(F) === o;
    }
    function ie(F) {
      return S(F) === f;
    }
    tt.AsyncMode = b, tt.ConcurrentMode = T, tt.ContextConsumer = R, tt.ContextProvider = $, tt.Element = I, tt.ForwardRef = p, tt.Fragment = O, tt.Lazy = k, tt.Memo = A, tt.Portal = D, tt.Profiler = _, tt.StrictMode = M, tt.Suspense = z, tt.isAsyncMode = H, tt.isConcurrentMode = j, tt.isContextConsumer = W, tt.isContextProvider = ee, tt.isElement = K, tt.isForwardRef = oe, tt.isFragment = ne, tt.isLazy = se, tt.isMemo = de, tt.isPortal = X, tt.isProfiler = ae, tt.isStrictMode = Q, tt.isSuspense = ie, tt.isValidElementType = w, tt.typeOf = S;
  }()), tt;
}
var bf;
function Sh() {
  return bf || (bf = 1, process.env.NODE_ENV === "production" ? As.exports = N0() : As.exports = A0()), As.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var Yl, vf;
function M0() {
  if (vf) return Yl;
  vf = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
  function r(s) {
    if (s == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(s);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var s = new String("abc");
      if (s[5] = "de", Object.getOwnPropertyNames(s)[0] === "5")
        return !1;
      for (var a = {}, l = 0; l < 10; l++)
        a["_" + String.fromCharCode(l)] = l;
      var c = Object.getOwnPropertyNames(a).map(function(d) {
        return a[d];
      });
      if (c.join("") !== "0123456789")
        return !1;
      var u = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(d) {
        u[d] = d;
      }), Object.keys(Object.assign({}, u)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return Yl = o() ? Object.assign : function(s, a) {
    for (var l, c = r(s), u, d = 1; d < arguments.length; d++) {
      l = Object(arguments[d]);
      for (var f in l)
        t.call(l, f) && (c[f] = l[f]);
      if (e) {
        u = e(l);
        for (var h = 0; h < u.length; h++)
          n.call(l, u[h]) && (c[u[h]] = l[u[h]]);
      }
    }
    return c;
  }, Yl;
}
var Gl, xf;
function _u() {
  if (xf) return Gl;
  xf = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return Gl = e, Gl;
}
var Kl, wf;
function Th() {
  return wf || (wf = 1, Kl = Function.call.bind(Object.prototype.hasOwnProperty)), Kl;
}
var Xl, Sf;
function _0() {
  if (Sf) return Xl;
  Sf = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ _u(), n = {}, r = /* @__PURE__ */ Th();
    e = function(s) {
      var a = "Warning: " + s;
      typeof console < "u" && console.error(a);
      try {
        throw new Error(a);
      } catch {
      }
    };
  }
  function o(s, a, l, c, u) {
    if (process.env.NODE_ENV !== "production") {
      for (var d in s)
        if (r(s, d)) {
          var f;
          try {
            if (typeof s[d] != "function") {
              var h = Error(
                (c || "React class") + ": " + l + " type `" + d + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof s[d] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw h.name = "Invariant Violation", h;
            }
            f = s[d](a, d, c, l, null, t);
          } catch (y) {
            f = y;
          }
          if (f && !(f instanceof Error) && e(
            (c || "React class") + ": type specification of " + l + " `" + d + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof f + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), f instanceof Error && !(f.message in n)) {
            n[f.message] = !0;
            var g = u ? u() : "";
            e(
              "Failed " + l + " type: " + f.message + (g ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (n = {});
  }, Xl = o, Xl;
}
var Ql, Tf;
function D0() {
  if (Tf) return Ql;
  Tf = 1;
  var e = Sh(), t = M0(), n = /* @__PURE__ */ _u(), r = /* @__PURE__ */ Th(), o = /* @__PURE__ */ _0(), s = function() {
  };
  process.env.NODE_ENV !== "production" && (s = function(l) {
    var c = "Warning: " + l;
    typeof console < "u" && console.error(c);
    try {
      throw new Error(c);
    } catch {
    }
  });
  function a() {
    return null;
  }
  return Ql = function(l, c) {
    var u = typeof Symbol == "function" && Symbol.iterator, d = "@@iterator";
    function f(j) {
      var W = j && (u && j[u] || j[d]);
      if (typeof W == "function")
        return W;
    }
    var h = "<<anonymous>>", g = {
      array: x("array"),
      bigint: x("bigint"),
      bool: x("boolean"),
      func: x("function"),
      number: x("number"),
      object: x("object"),
      string: x("string"),
      symbol: x("symbol"),
      any: E(),
      arrayOf: w,
      element: S(),
      elementType: b(),
      instanceOf: T,
      node: p(),
      objectOf: $,
      oneOf: R,
      oneOfType: I,
      shape: k,
      exact: A
    };
    function y(j, W) {
      return j === W ? j !== 0 || 1 / j === 1 / W : j !== j && W !== W;
    }
    function m(j, W) {
      this.message = j, this.data = W && typeof W == "object" ? W : {}, this.stack = "";
    }
    m.prototype = Error.prototype;
    function v(j) {
      if (process.env.NODE_ENV !== "production")
        var W = {}, ee = 0;
      function K(ne, se, de, X, ae, Q, ie) {
        if (X = X || h, Q = Q || de, ie !== n) {
          if (c) {
            var F = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw F.name = "Invariant Violation", F;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var he = X + ":" + de;
            !W[he] && // Avoid spamming the console because they are often not actionable except for lib authors
            ee < 3 && (s(
              "You are manually calling a React.PropTypes validation function for the `" + Q + "` prop on `" + X + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), W[he] = !0, ee++);
          }
        }
        return se[de] == null ? ne ? se[de] === null ? new m("The " + ae + " `" + Q + "` is marked as required " + ("in `" + X + "`, but its value is `null`.")) : new m("The " + ae + " `" + Q + "` is marked as required in " + ("`" + X + "`, but its value is `undefined`.")) : null : j(se, de, X, ae, Q);
      }
      var oe = K.bind(null, !1);
      return oe.isRequired = K.bind(null, !0), oe;
    }
    function x(j) {
      function W(ee, K, oe, ne, se, de) {
        var X = ee[K], ae = M(X);
        if (ae !== j) {
          var Q = z(X);
          return new m(
            "Invalid " + ne + " `" + se + "` of type " + ("`" + Q + "` supplied to `" + oe + "`, expected ") + ("`" + j + "`."),
            { expectedType: j }
          );
        }
        return null;
      }
      return v(W);
    }
    function E() {
      return v(a);
    }
    function w(j) {
      function W(ee, K, oe, ne, se) {
        if (typeof j != "function")
          return new m("Property `" + se + "` of component `" + oe + "` has invalid PropType notation inside arrayOf.");
        var de = ee[K];
        if (!Array.isArray(de)) {
          var X = M(de);
          return new m("Invalid " + ne + " `" + se + "` of type " + ("`" + X + "` supplied to `" + oe + "`, expected an array."));
        }
        for (var ae = 0; ae < de.length; ae++) {
          var Q = j(de, ae, oe, ne, se + "[" + ae + "]", n);
          if (Q instanceof Error)
            return Q;
        }
        return null;
      }
      return v(W);
    }
    function S() {
      function j(W, ee, K, oe, ne) {
        var se = W[ee];
        if (!l(se)) {
          var de = M(se);
          return new m("Invalid " + oe + " `" + ne + "` of type " + ("`" + de + "` supplied to `" + K + "`, expected a single ReactElement."));
        }
        return null;
      }
      return v(j);
    }
    function b() {
      function j(W, ee, K, oe, ne) {
        var se = W[ee];
        if (!e.isValidElementType(se)) {
          var de = M(se);
          return new m("Invalid " + oe + " `" + ne + "` of type " + ("`" + de + "` supplied to `" + K + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return v(j);
    }
    function T(j) {
      function W(ee, K, oe, ne, se) {
        if (!(ee[K] instanceof j)) {
          var de = j.name || h, X = H(ee[K]);
          return new m("Invalid " + ne + " `" + se + "` of type " + ("`" + X + "` supplied to `" + oe + "`, expected ") + ("instance of `" + de + "`."));
        }
        return null;
      }
      return v(W);
    }
    function R(j) {
      if (!Array.isArray(j))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? s(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : s("Invalid argument supplied to oneOf, expected an array.")), a;
      function W(ee, K, oe, ne, se) {
        for (var de = ee[K], X = 0; X < j.length; X++)
          if (y(de, j[X]))
            return null;
        var ae = JSON.stringify(j, function(ie, F) {
          var he = z(F);
          return he === "symbol" ? String(F) : F;
        });
        return new m("Invalid " + ne + " `" + se + "` of value `" + String(de) + "` " + ("supplied to `" + oe + "`, expected one of " + ae + "."));
      }
      return v(W);
    }
    function $(j) {
      function W(ee, K, oe, ne, se) {
        if (typeof j != "function")
          return new m("Property `" + se + "` of component `" + oe + "` has invalid PropType notation inside objectOf.");
        var de = ee[K], X = M(de);
        if (X !== "object")
          return new m("Invalid " + ne + " `" + se + "` of type " + ("`" + X + "` supplied to `" + oe + "`, expected an object."));
        for (var ae in de)
          if (r(de, ae)) {
            var Q = j(de, ae, oe, ne, se + "." + ae, n);
            if (Q instanceof Error)
              return Q;
          }
        return null;
      }
      return v(W);
    }
    function I(j) {
      if (!Array.isArray(j))
        return process.env.NODE_ENV !== "production" && s("Invalid argument supplied to oneOfType, expected an instance of array."), a;
      for (var W = 0; W < j.length; W++) {
        var ee = j[W];
        if (typeof ee != "function")
          return s(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + Y(ee) + " at index " + W + "."
          ), a;
      }
      function K(oe, ne, se, de, X) {
        for (var ae = [], Q = 0; Q < j.length; Q++) {
          var ie = j[Q], F = ie(oe, ne, se, de, X, n);
          if (F == null)
            return null;
          F.data && r(F.data, "expectedType") && ae.push(F.data.expectedType);
        }
        var he = ae.length > 0 ? ", expected one of type [" + ae.join(", ") + "]" : "";
        return new m("Invalid " + de + " `" + X + "` supplied to " + ("`" + se + "`" + he + "."));
      }
      return v(K);
    }
    function p() {
      function j(W, ee, K, oe, ne) {
        return D(W[ee]) ? null : new m("Invalid " + oe + " `" + ne + "` supplied to " + ("`" + K + "`, expected a ReactNode."));
      }
      return v(j);
    }
    function O(j, W, ee, K, oe) {
      return new m(
        (j || "React class") + ": " + W + " type `" + ee + "." + K + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + oe + "`."
      );
    }
    function k(j) {
      function W(ee, K, oe, ne, se) {
        var de = ee[K], X = M(de);
        if (X !== "object")
          return new m("Invalid " + ne + " `" + se + "` of type `" + X + "` " + ("supplied to `" + oe + "`, expected `object`."));
        for (var ae in j) {
          var Q = j[ae];
          if (typeof Q != "function")
            return O(oe, ne, se, ae, z(Q));
          var ie = Q(de, ae, oe, ne, se + "." + ae, n);
          if (ie)
            return ie;
        }
        return null;
      }
      return v(W);
    }
    function A(j) {
      function W(ee, K, oe, ne, se) {
        var de = ee[K], X = M(de);
        if (X !== "object")
          return new m("Invalid " + ne + " `" + se + "` of type `" + X + "` " + ("supplied to `" + oe + "`, expected `object`."));
        var ae = t({}, ee[K], j);
        for (var Q in ae) {
          var ie = j[Q];
          if (r(j, Q) && typeof ie != "function")
            return O(oe, ne, se, Q, z(ie));
          if (!ie)
            return new m(
              "Invalid " + ne + " `" + se + "` key `" + Q + "` supplied to `" + oe + "`.\nBad object: " + JSON.stringify(ee[K], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(j), null, "  ")
            );
          var F = ie(de, Q, oe, ne, se + "." + Q, n);
          if (F)
            return F;
        }
        return null;
      }
      return v(W);
    }
    function D(j) {
      switch (typeof j) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !j;
        case "object":
          if (Array.isArray(j))
            return j.every(D);
          if (j === null || l(j))
            return !0;
          var W = f(j);
          if (W) {
            var ee = W.call(j), K;
            if (W !== j.entries) {
              for (; !(K = ee.next()).done; )
                if (!D(K.value))
                  return !1;
            } else
              for (; !(K = ee.next()).done; ) {
                var oe = K.value;
                if (oe && !D(oe[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function _(j, W) {
      return j === "symbol" ? !0 : W ? W["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && W instanceof Symbol : !1;
    }
    function M(j) {
      var W = typeof j;
      return Array.isArray(j) ? "array" : j instanceof RegExp ? "object" : _(W, j) ? "symbol" : W;
    }
    function z(j) {
      if (typeof j > "u" || j === null)
        return "" + j;
      var W = M(j);
      if (W === "object") {
        if (j instanceof Date)
          return "date";
        if (j instanceof RegExp)
          return "regexp";
      }
      return W;
    }
    function Y(j) {
      var W = z(j);
      switch (W) {
        case "array":
        case "object":
          return "an " + W;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + W;
        default:
          return W;
      }
    }
    function H(j) {
      return !j.constructor || !j.constructor.name ? h : j.constructor.name;
    }
    return g.checkPropTypes = o, g.resetWarningCache = o.resetWarningCache, g.PropTypes = g, g;
  }, Ql;
}
var Jl, Ef;
function B0() {
  if (Ef) return Jl;
  Ef = 1;
  var e = /* @__PURE__ */ _u();
  function t() {
  }
  function n() {
  }
  return n.resetWarningCache = t, Jl = function() {
    function r(a, l, c, u, d, f) {
      if (f !== e) {
        var h = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw h.name = "Invariant Violation", h;
      }
    }
    r.isRequired = r;
    function o() {
      return r;
    }
    var s = {
      array: r,
      bigint: r,
      bool: r,
      func: r,
      number: r,
      object: r,
      string: r,
      symbol: r,
      any: r,
      arrayOf: o,
      element: r,
      elementType: r,
      instanceOf: o,
      node: r,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: n,
      resetWarningCache: t
    };
    return s.PropTypes = s, s;
  }, Jl;
}
var Cf;
function F0() {
  if (Cf) return Ns.exports;
  if (Cf = 1, process.env.NODE_ENV !== "production") {
    var e = Sh(), t = !0;
    Ns.exports = /* @__PURE__ */ D0()(e.isElement, t);
  } else
    Ns.exports = /* @__PURE__ */ B0()();
  return Ns.exports;
}
var j0 = /* @__PURE__ */ F0();
const i = /* @__PURE__ */ c0(j0);
function L0(e) {
  return e == null || Object.keys(e).length === 0;
}
function Du(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e;
  return /* @__PURE__ */ P(wh, {
    styles: typeof t == "function" ? (o) => t(L0(o) ? n : o) : t
  });
}
process.env.NODE_ENV !== "production" && (Du.propTypes = {
  defaultTheme: i.object,
  styles: i.oneOfType([i.array, i.string, i.object, i.func])
});
/**
 * @mui/styled-engine v7.0.1
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function Eh(e, t) {
  const n = ma(e, t);
  return process.env.NODE_ENV !== "production" ? (...r) => {
    const o = typeof e == "string" ? `"${e}"` : "component";
    return r.length === 0 ? console.error([`MUI: Seems like you called \`styled(${o})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : r.some((s) => s === void 0) && console.error(`MUI: the styled(${o})(...args) API requires all its args to be defined.`), n(...r);
  } : n;
}
function V0(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const Of = [];
function Rf(e) {
  return Of[0] = e, ni(Of);
}
var Ms = { exports: {} }, it = {};
/**
 * @license React
 * react-is.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var $f;
function z0() {
  if ($f) return it;
  $f = 1;
  var e = Symbol.for("react.transitional.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), o = Symbol.for("react.profiler"), s = Symbol.for("react.consumer"), a = Symbol.for("react.context"), l = Symbol.for("react.forward_ref"), c = Symbol.for("react.suspense"), u = Symbol.for("react.suspense_list"), d = Symbol.for("react.memo"), f = Symbol.for("react.lazy"), h = Symbol.for("react.view_transition"), g = Symbol.for("react.client.reference");
  function y(m) {
    if (typeof m == "object" && m !== null) {
      var v = m.$$typeof;
      switch (v) {
        case e:
          switch (m = m.type, m) {
            case n:
            case o:
            case r:
            case c:
            case u:
            case h:
              return m;
            default:
              switch (m = m && m.$$typeof, m) {
                case a:
                case l:
                case f:
                case d:
                  return m;
                case s:
                  return m;
                default:
                  return v;
              }
          }
        case t:
          return v;
      }
    }
  }
  return it.ContextConsumer = s, it.ContextProvider = a, it.Element = e, it.ForwardRef = l, it.Fragment = n, it.Lazy = f, it.Memo = d, it.Portal = t, it.Profiler = o, it.StrictMode = r, it.Suspense = c, it.SuspenseList = u, it.isContextConsumer = function(m) {
    return y(m) === s;
  }, it.isContextProvider = function(m) {
    return y(m) === a;
  }, it.isElement = function(m) {
    return typeof m == "object" && m !== null && m.$$typeof === e;
  }, it.isForwardRef = function(m) {
    return y(m) === l;
  }, it.isFragment = function(m) {
    return y(m) === n;
  }, it.isLazy = function(m) {
    return y(m) === f;
  }, it.isMemo = function(m) {
    return y(m) === d;
  }, it.isPortal = function(m) {
    return y(m) === t;
  }, it.isProfiler = function(m) {
    return y(m) === o;
  }, it.isStrictMode = function(m) {
    return y(m) === r;
  }, it.isSuspense = function(m) {
    return y(m) === c;
  }, it.isSuspenseList = function(m) {
    return y(m) === u;
  }, it.isValidElementType = function(m) {
    return typeof m == "string" || typeof m == "function" || m === n || m === o || m === r || m === c || m === u || typeof m == "object" && m !== null && (m.$$typeof === f || m.$$typeof === d || m.$$typeof === a || m.$$typeof === s || m.$$typeof === l || m.$$typeof === g || m.getModuleId !== void 0);
  }, it.typeOf = y, it;
}
var st = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var kf;
function W0() {
  return kf || (kf = 1, process.env.NODE_ENV !== "production" && function() {
    function e(m) {
      if (typeof m == "object" && m !== null) {
        var v = m.$$typeof;
        switch (v) {
          case t:
            switch (m = m.type, m) {
              case r:
              case s:
              case o:
              case u:
              case d:
              case g:
                return m;
              default:
                switch (m = m && m.$$typeof, m) {
                  case l:
                  case c:
                  case h:
                  case f:
                    return m;
                  case a:
                    return m;
                  default:
                    return v;
                }
            }
          case n:
            return v;
        }
      }
    }
    var t = Symbol.for("react.transitional.element"), n = Symbol.for("react.portal"), r = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), s = Symbol.for("react.profiler"), a = Symbol.for("react.consumer"), l = Symbol.for("react.context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), d = Symbol.for("react.suspense_list"), f = Symbol.for("react.memo"), h = Symbol.for("react.lazy"), g = Symbol.for("react.view_transition"), y = Symbol.for("react.client.reference");
    st.ContextConsumer = a, st.ContextProvider = l, st.Element = t, st.ForwardRef = c, st.Fragment = r, st.Lazy = h, st.Memo = f, st.Portal = n, st.Profiler = s, st.StrictMode = o, st.Suspense = u, st.SuspenseList = d, st.isContextConsumer = function(m) {
      return e(m) === a;
    }, st.isContextProvider = function(m) {
      return e(m) === l;
    }, st.isElement = function(m) {
      return typeof m == "object" && m !== null && m.$$typeof === t;
    }, st.isForwardRef = function(m) {
      return e(m) === c;
    }, st.isFragment = function(m) {
      return e(m) === r;
    }, st.isLazy = function(m) {
      return e(m) === h;
    }, st.isMemo = function(m) {
      return e(m) === f;
    }, st.isPortal = function(m) {
      return e(m) === n;
    }, st.isProfiler = function(m) {
      return e(m) === s;
    }, st.isStrictMode = function(m) {
      return e(m) === o;
    }, st.isSuspense = function(m) {
      return e(m) === u;
    }, st.isSuspenseList = function(m) {
      return e(m) === d;
    }, st.isValidElementType = function(m) {
      return typeof m == "string" || typeof m == "function" || m === r || m === s || m === o || m === u || m === d || typeof m == "object" && m !== null && (m.$$typeof === h || m.$$typeof === f || m.$$typeof === l || m.$$typeof === a || m.$$typeof === c || m.$$typeof === y || m.getModuleId !== void 0);
    }, st.typeOf = e;
  }()), st;
}
var Pf;
function U0() {
  return Pf || (Pf = 1, process.env.NODE_ENV === "production" ? Ms.exports = /* @__PURE__ */ z0() : Ms.exports = /* @__PURE__ */ W0()), Ms.exports;
}
var En = /* @__PURE__ */ U0();
function nr(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function Ch(e) {
  if (/* @__PURE__ */ C.isValidElement(e) || En.isValidElementType(e) || !nr(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = Ch(e[n]);
  }), t;
}
function wn(e, t, n = {
  clone: !0
}) {
  const r = n.clone ? {
    ...e
  } : e;
  return nr(e) && nr(t) && Object.keys(t).forEach((o) => {
    /* @__PURE__ */ C.isValidElement(t[o]) || En.isValidElementType(t[o]) ? r[o] = t[o] : nr(t[o]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, o) && nr(e[o]) ? r[o] = wn(e[o], t[o], n) : n.clone ? r[o] = nr(t[o]) ? Ch(t[o]) : t[o] : r[o] = t[o];
  }), r;
}
const H0 = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, r) => n.val - r.val), t.reduce((n, r) => ({
    ...n,
    [r.key]: r.val
  }), {});
};
function q0(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: r = 5,
    ...o
  } = e, s = H0(t), a = Object.keys(s);
  function l(h) {
    return `@media (min-width:${typeof t[h] == "number" ? t[h] : h}${n})`;
  }
  function c(h) {
    return `@media (max-width:${(typeof t[h] == "number" ? t[h] : h) - r / 100}${n})`;
  }
  function u(h, g) {
    const y = a.indexOf(g);
    return `@media (min-width:${typeof t[h] == "number" ? t[h] : h}${n}) and (max-width:${(y !== -1 && typeof t[a[y]] == "number" ? t[a[y]] : g) - r / 100}${n})`;
  }
  function d(h) {
    return a.indexOf(h) + 1 < a.length ? u(h, a[a.indexOf(h) + 1]) : l(h);
  }
  function f(h) {
    const g = a.indexOf(h);
    return g === 0 ? l(a[1]) : g === a.length - 1 ? c(a[g]) : u(h, a[a.indexOf(h) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: a,
    values: s,
    up: l,
    down: c,
    between: u,
    only: d,
    not: f,
    unit: n,
    ...o
  };
}
function Y0(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((r) => r.startsWith("@container")).sort((r, o) => {
    var a, l;
    const s = /min-width:\s*([0-9.]+)/;
    return +(((a = r.match(s)) == null ? void 0 : a[1]) || 0) - +(((l = o.match(s)) == null ? void 0 : l[1]) || 0);
  });
  return n.length ? n.reduce((r, o) => {
    const s = t[o];
    return delete r[o], r[o] = s, r;
  }, {
    ...t
  }) : t;
}
function G0(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function K0(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : Sr(18, `(${t})`));
    return null;
  }
  const [, r, o] = n, s = Number.isNaN(+r) ? r || 0 : +r;
  return e.containerQueries(o).up(s);
}
function X0(e) {
  const t = (s, a) => s.replace("@media", a ? `@container ${a}` : "@container");
  function n(s, a) {
    s.up = (...l) => t(e.breakpoints.up(...l), a), s.down = (...l) => t(e.breakpoints.down(...l), a), s.between = (...l) => t(e.breakpoints.between(...l), a), s.only = (...l) => t(e.breakpoints.only(...l), a), s.not = (...l) => {
      const c = t(e.breakpoints.not(...l), a);
      return c.includes("not all and") ? c.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : c;
    };
  }
  const r = {}, o = (s) => (n(r, s), r);
  return n(o), {
    ...e,
    containerQueries: o
  };
}
const Q0 = {
  borderRadius: 4
}, Hr = process.env.NODE_ENV !== "production" ? i.oneOfType([i.number, i.string, i.object, i.array]) : {};
function Mi(e, t) {
  return t ? wn(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const Ya = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, If = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${Ya[e]}px)`
}, J0 = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : Ya[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function Tr(e, t, n) {
  const r = e.theme || {};
  if (Array.isArray(t)) {
    const s = r.breakpoints || If;
    return t.reduce((a, l, c) => (a[s.up(s.keys[c])] = n(t[c]), a), {});
  }
  if (typeof t == "object") {
    const s = r.breakpoints || If;
    return Object.keys(t).reduce((a, l) => {
      if (G0(s.keys, l)) {
        const c = K0(r.containerQueries ? r : J0, l);
        c && (a[c] = n(t[l], l));
      } else if (Object.keys(s.values || Ya).includes(l)) {
        const c = s.up(l);
        a[c] = n(t[l], l);
      } else {
        const c = l;
        a[c] = t[c];
      }
      return a;
    }, {});
  }
  return n(t);
}
function Z0(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((r, o) => {
    const s = e.up(o);
    return r[s] = {}, r;
  }, {})) || {};
}
function ex(e, t) {
  return e.reduce((n, r) => {
    const o = n[r];
    return (!o || Object.keys(o).length === 0) && delete n[r], n;
  }, t);
}
function Te(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : Sr(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function Ga(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const r = `vars.${t}`.split(".").reduce((o, s) => o && o[s] ? o[s] : null, e);
    if (r != null)
      return r;
  }
  return t.split(".").reduce((r, o) => r && r[o] != null ? r[o] : null, e);
}
function ha(e, t, n, r = n) {
  let o;
  return typeof e == "function" ? o = e(n) : Array.isArray(e) ? o = e[n] || r : o = Ga(e, n) || r, t && (o = t(o, r, e)), o;
}
function At(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: r,
    transform: o
  } = e, s = (a) => {
    if (a[t] == null)
      return null;
    const l = a[t], c = a.theme, u = Ga(c, r) || {};
    return Tr(a, l, (f) => {
      let h = ha(u, o, f);
      return f === h && typeof f == "string" && (h = ha(u, o, `${t}${f === "default" ? "" : Te(f)}`, f)), n === !1 ? h : {
        [n]: h
      };
    });
  };
  return s.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: Hr
  } : {}, s.filterProps = [t], s;
}
function tx(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const nx = {
  m: "margin",
  p: "padding"
}, rx = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, Nf = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, ox = tx((e) => {
  if (e.length > 2)
    if (Nf[e])
      e = Nf[e];
    else
      return [e];
  const [t, n] = e.split(""), r = nx[t], o = rx[n] || "";
  return Array.isArray(o) ? o.map((s) => r + s) : [r + o];
}), Ka = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], Xa = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], ix = [...Ka, ...Xa];
function ds(e, t, n, r) {
  const o = Ga(e, t, !0) ?? n;
  return typeof o == "number" || typeof o == "string" ? (s) => typeof s == "string" ? s : (process.env.NODE_ENV !== "production" && typeof s != "number" && console.error(`MUI: Expected ${r} argument to be a number or a string, got ${s}.`), typeof o == "string" ? o.startsWith("var(") && s === 0 ? 0 : o.startsWith("var(") && s === 1 ? o : `calc(${s} * ${o})` : o * s) : Array.isArray(o) ? (s) => {
    if (typeof s == "string")
      return s;
    const a = Math.abs(s);
    process.env.NODE_ENV !== "production" && (Number.isInteger(a) ? a > o.length - 1 && console.error([`MUI: The value provided (${a}) overflows.`, `The supported values are: ${JSON.stringify(o)}.`, `${a} > ${o.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const l = o[a];
    return s >= 0 ? l : typeof l == "number" ? -l : typeof l == "string" && l.startsWith("var(") ? `calc(-1 * ${l})` : `-${l}`;
  } : typeof o == "function" ? o : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${o}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function Bu(e) {
  return ds(e, "spacing", 8, "spacing");
}
function fs(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function sx(e, t) {
  return (n) => e.reduce((r, o) => (r[o] = fs(t, n), r), {});
}
function ax(e, t, n, r) {
  if (!t.includes(n))
    return null;
  const o = ox(n), s = sx(o, r), a = e[n];
  return Tr(e, a, s);
}
function Oh(e, t) {
  const n = Bu(e.theme);
  return Object.keys(e).map((r) => ax(e, t, r, n)).reduce(Mi, {});
}
function Tt(e) {
  return Oh(e, Ka);
}
Tt.propTypes = process.env.NODE_ENV !== "production" ? Ka.reduce((e, t) => (e[t] = Hr, e), {}) : {};
Tt.filterProps = Ka;
function Et(e) {
  return Oh(e, Xa);
}
Et.propTypes = process.env.NODE_ENV !== "production" ? Xa.reduce((e, t) => (e[t] = Hr, e), {}) : {};
Et.filterProps = Xa;
process.env.NODE_ENV !== "production" && ix.reduce((e, t) => (e[t] = Hr, e), {});
function Rh(e = 8, t = Bu({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...r) => (process.env.NODE_ENV !== "production" && (r.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${r.length}`)), (r.length === 0 ? [1] : r).map((s) => {
    const a = t(s);
    return typeof a == "number" ? `${a}px` : a;
  }).join(" "));
  return n.mui = !0, n;
}
function Qa(...e) {
  const t = e.reduce((r, o) => (o.filterProps.forEach((s) => {
    r[s] = o;
  }), r), {}), n = (r) => Object.keys(r).reduce((o, s) => t[s] ? Mi(o, t[s](r)) : o, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((r, o) => Object.assign(r, o.propTypes), {}) : {}, n.filterProps = e.reduce((r, o) => r.concat(o.filterProps), []), n;
}
function Pn(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function Fn(e, t) {
  return At({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const lx = Fn("border", Pn), cx = Fn("borderTop", Pn), ux = Fn("borderRight", Pn), dx = Fn("borderBottom", Pn), fx = Fn("borderLeft", Pn), px = Fn("borderColor"), mx = Fn("borderTopColor"), hx = Fn("borderRightColor"), gx = Fn("borderBottomColor"), yx = Fn("borderLeftColor"), bx = Fn("outline", Pn), vx = Fn("outlineColor"), Ja = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = ds(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (r) => ({
      borderRadius: fs(t, r)
    });
    return Tr(e, e.borderRadius, n);
  }
  return null;
};
Ja.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: Hr
} : {};
Ja.filterProps = ["borderRadius"];
Qa(lx, cx, ux, dx, fx, px, mx, hx, gx, yx, Ja, bx, vx);
const Za = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = ds(e.theme, "spacing", 8, "gap"), n = (r) => ({
      gap: fs(t, r)
    });
    return Tr(e, e.gap, n);
  }
  return null;
};
Za.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: Hr
} : {};
Za.filterProps = ["gap"];
const el = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = ds(e.theme, "spacing", 8, "columnGap"), n = (r) => ({
      columnGap: fs(t, r)
    });
    return Tr(e, e.columnGap, n);
  }
  return null;
};
el.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: Hr
} : {};
el.filterProps = ["columnGap"];
const tl = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = ds(e.theme, "spacing", 8, "rowGap"), n = (r) => ({
      rowGap: fs(t, r)
    });
    return Tr(e, e.rowGap, n);
  }
  return null;
};
tl.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: Hr
} : {};
tl.filterProps = ["rowGap"];
const xx = At({
  prop: "gridColumn"
}), wx = At({
  prop: "gridRow"
}), Sx = At({
  prop: "gridAutoFlow"
}), Tx = At({
  prop: "gridAutoColumns"
}), Ex = At({
  prop: "gridAutoRows"
}), Cx = At({
  prop: "gridTemplateColumns"
}), Ox = At({
  prop: "gridTemplateRows"
}), Rx = At({
  prop: "gridTemplateAreas"
}), $x = At({
  prop: "gridArea"
});
Qa(Za, el, tl, xx, wx, Sx, Tx, Ex, Cx, Ox, Rx, $x);
function Fo(e, t) {
  return t === "grey" ? t : e;
}
const kx = At({
  prop: "color",
  themeKey: "palette",
  transform: Fo
}), Px = At({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: Fo
}), Ix = At({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: Fo
});
Qa(kx, Px, Ix);
function yn(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const Nx = At({
  prop: "width",
  transform: yn
}), Fu = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var o, s, a, l, c;
      const r = ((a = (s = (o = e.theme) == null ? void 0 : o.breakpoints) == null ? void 0 : s.values) == null ? void 0 : a[n]) || Ya[n];
      return r ? ((c = (l = e.theme) == null ? void 0 : l.breakpoints) == null ? void 0 : c.unit) !== "px" ? {
        maxWidth: `${r}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: r
      } : {
        maxWidth: yn(n)
      };
    };
    return Tr(e, e.maxWidth, t);
  }
  return null;
};
Fu.filterProps = ["maxWidth"];
const Ax = At({
  prop: "minWidth",
  transform: yn
}), Mx = At({
  prop: "height",
  transform: yn
}), _x = At({
  prop: "maxHeight",
  transform: yn
}), Dx = At({
  prop: "minHeight",
  transform: yn
});
At({
  prop: "size",
  cssProperty: "width",
  transform: yn
});
At({
  prop: "size",
  cssProperty: "height",
  transform: yn
});
const Bx = At({
  prop: "boxSizing"
});
Qa(Nx, Fu, Ax, Mx, _x, Dx, Bx);
const ps = {
  // borders
  border: {
    themeKey: "borders",
    transform: Pn
  },
  borderTop: {
    themeKey: "borders",
    transform: Pn
  },
  borderRight: {
    themeKey: "borders",
    transform: Pn
  },
  borderBottom: {
    themeKey: "borders",
    transform: Pn
  },
  borderLeft: {
    themeKey: "borders",
    transform: Pn
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: Pn
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: Ja
  },
  // palette
  color: {
    themeKey: "palette",
    transform: Fo
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: Fo
  },
  backgroundColor: {
    themeKey: "palette",
    transform: Fo
  },
  // spacing
  p: {
    style: Et
  },
  pt: {
    style: Et
  },
  pr: {
    style: Et
  },
  pb: {
    style: Et
  },
  pl: {
    style: Et
  },
  px: {
    style: Et
  },
  py: {
    style: Et
  },
  padding: {
    style: Et
  },
  paddingTop: {
    style: Et
  },
  paddingRight: {
    style: Et
  },
  paddingBottom: {
    style: Et
  },
  paddingLeft: {
    style: Et
  },
  paddingX: {
    style: Et
  },
  paddingY: {
    style: Et
  },
  paddingInline: {
    style: Et
  },
  paddingInlineStart: {
    style: Et
  },
  paddingInlineEnd: {
    style: Et
  },
  paddingBlock: {
    style: Et
  },
  paddingBlockStart: {
    style: Et
  },
  paddingBlockEnd: {
    style: Et
  },
  m: {
    style: Tt
  },
  mt: {
    style: Tt
  },
  mr: {
    style: Tt
  },
  mb: {
    style: Tt
  },
  ml: {
    style: Tt
  },
  mx: {
    style: Tt
  },
  my: {
    style: Tt
  },
  margin: {
    style: Tt
  },
  marginTop: {
    style: Tt
  },
  marginRight: {
    style: Tt
  },
  marginBottom: {
    style: Tt
  },
  marginLeft: {
    style: Tt
  },
  marginX: {
    style: Tt
  },
  marginY: {
    style: Tt
  },
  marginInline: {
    style: Tt
  },
  marginInlineStart: {
    style: Tt
  },
  marginInlineEnd: {
    style: Tt
  },
  marginBlock: {
    style: Tt
  },
  marginBlockStart: {
    style: Tt
  },
  marginBlockEnd: {
    style: Tt
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: Za
  },
  rowGap: {
    style: tl
  },
  columnGap: {
    style: el
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: yn
  },
  maxWidth: {
    style: Fu
  },
  minWidth: {
    transform: yn
  },
  height: {
    transform: yn
  },
  maxHeight: {
    transform: yn
  },
  minHeight: {
    transform: yn
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function Fx(...e) {
  const t = e.reduce((r, o) => r.concat(Object.keys(o)), []), n = new Set(t);
  return e.every((r) => n.size === Object.keys(r).length);
}
function jx(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function Lx() {
  function e(n, r, o, s) {
    const a = {
      [n]: r,
      theme: o
    }, l = s[n];
    if (!l)
      return {
        [n]: r
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: d,
      style: f
    } = l;
    if (r == null)
      return null;
    if (u === "typography" && r === "inherit")
      return {
        [n]: r
      };
    const h = Ga(o, u) || {};
    return f ? f(a) : Tr(a, r, (y) => {
      let m = ha(h, d, y);
      return y === m && typeof y == "string" && (m = ha(h, d, `${n}${y === "default" ? "" : Te(y)}`, y)), c === !1 ? m : {
        [c]: m
      };
    });
  }
  function t(n) {
    const {
      sx: r,
      theme: o = {}
    } = n || {};
    if (!r)
      return null;
    const s = o.unstable_sxConfig ?? ps;
    function a(l) {
      let c = l;
      if (typeof l == "function")
        c = l(o);
      else if (typeof l != "object")
        return l;
      if (!c)
        return null;
      const u = Z0(o.breakpoints), d = Object.keys(u);
      let f = u;
      return Object.keys(c).forEach((h) => {
        const g = jx(c[h], o);
        if (g != null)
          if (typeof g == "object")
            if (s[h])
              f = Mi(f, e(h, g, o, s));
            else {
              const y = Tr({
                theme: o
              }, g, (m) => ({
                [h]: m
              }));
              Fx(y, g) ? f[h] = t({
                sx: g,
                theme: o
              }) : f = Mi(f, y);
            }
          else
            f = Mi(f, e(h, g, o, s));
      }), Y0(o, ex(d, f));
    }
    return Array.isArray(r) ? r.map(a) : a(r);
  }
  return t;
}
const Lr = Lx();
Lr.filterProps = ["sx"];
function Vx(e, t) {
  var r;
  const n = this;
  if (n.vars) {
    if (!((r = n.colorSchemes) != null && r[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let o = n.getColorSchemeSelector(e);
    return o === "&" ? t : ((o.includes("data-") || o.includes(".")) && (o = `*:where(${o.replace(/\s*&$/, "")}) &`), {
      [o]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function nl(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: r = {},
    spacing: o,
    shape: s = {},
    ...a
  } = e, l = q0(n), c = Rh(o);
  let u = wn({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...r
    },
    spacing: c,
    shape: {
      ...Q0,
      ...s
    }
  }, a);
  return u = X0(u), u.applyStyles = Vx, u = t.reduce((d, f) => wn(d, f), u), u.unstable_sxConfig = {
    ...ps,
    ...a == null ? void 0 : a.unstable_sxConfig
  }, u.unstable_sx = function(f) {
    return Lr({
      sx: f,
      theme: this
    });
  }, u;
}
function zx(e) {
  return Object.keys(e).length === 0;
}
function ju(e = null) {
  const t = C.useContext(ri);
  return !t || zx(t) ? e : t;
}
const Wx = nl();
function rl(e = Wx) {
  return ju(e);
}
function $h({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const r = rl(n), o = typeof e == "function" ? e(t && r[t] || r) : e;
  return /* @__PURE__ */ P(Du, {
    styles: o
  });
}
process.env.NODE_ENV !== "production" && ($h.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: i.object,
  /**
   * @ignore
   */
  styles: i.oneOfType([i.array, i.func, i.number, i.object, i.string, i.bool]),
  /**
   * @ignore
   */
  themeId: i.string
});
const Ux = (e) => {
  var r;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((r = e == null ? void 0 : e.theme) == null ? void 0 : r.unstable_sxConfig) ?? ps;
  return Object.keys(e).forEach((o) => {
    n[o] ? t.systemProps[o] = e[o] : t.otherProps[o] = e[o];
  }), t;
};
function kh(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: r,
    otherProps: o
  } = Ux(n);
  let s;
  return Array.isArray(t) ? s = [r, ...t] : typeof t == "function" ? s = (...a) => {
    const l = t(...a);
    return nr(l) ? {
      ...r,
      ...l
    } : r;
  } : s = {
    ...r,
    ...t
  }, {
    ...o,
    sx: s
  };
}
const Af = (e) => e, Hx = () => {
  let e = Af;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = Af;
    }
  };
}, Ph = Hx();
function Ih(e) {
  var t, n, r = "";
  if (typeof e == "string" || typeof e == "number") r += e;
  else if (typeof e == "object") if (Array.isArray(e)) {
    var o = e.length;
    for (t = 0; t < o; t++) e[t] && (n = Ih(e[t])) && (r && (r += " "), r += n);
  } else for (n in e) e[n] && (r && (r += " "), r += n);
  return r;
}
function Ce() {
  for (var e, t, n = 0, r = "", o = arguments.length; n < o; n++) (e = arguments[n]) && (t = Ih(e)) && (r && (r += " "), r += t);
  return r;
}
function qx(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: r = "MuiBox-root",
    generateClassName: o
  } = e, s = Eh("div", {
    shouldForwardProp: (l) => l !== "theme" && l !== "sx" && l !== "as"
  })(Lr);
  return /* @__PURE__ */ C.forwardRef(function(c, u) {
    const d = rl(n), {
      className: f,
      component: h = "div",
      ...g
    } = kh(c);
    return /* @__PURE__ */ P(s, {
      as: h,
      ref: u,
      className: Ce(f, o ? o(r) : r),
      theme: t && d[t] || d,
      ...g
    });
  });
}
const Yx = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function St(e, t, n = "Mui") {
  const r = Yx[t];
  return r ? `${n}-${r}` : `${Ph.generate(e)}-${t}`;
}
function $t(e, t, n = "Mui") {
  const r = {};
  return t.forEach((o) => {
    r[o] = St(e, o, n);
  }), r;
}
function Nh(e, t = "") {
  return e.displayName || e.name || t;
}
function Mf(e, t, n) {
  const r = Nh(t);
  return e.displayName || (r !== "" ? `${n}(${r})` : n);
}
function Gx(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return Nh(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case En.ForwardRef:
          return Mf(e, e.render, "ForwardRef");
        case En.Memo:
          return Mf(e, e.type, "memo");
        default:
          return;
      }
  }
}
function Ah(e) {
  const {
    variants: t,
    ...n
  } = e, r = {
    variants: t,
    style: Rf(n),
    isProcessed: !0
  };
  return r.style === n || t && t.forEach((o) => {
    typeof o.style != "function" && (o.style = Rf(o.style));
  }), r;
}
const Kx = nl();
function Zl(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function Xx(e) {
  return e ? (t, n) => n[e] : null;
}
function Qx(e, t, n) {
  e.theme = ew(e.theme) ? n : e.theme[t] || e.theme;
}
function ra(e, t) {
  const n = typeof t == "function" ? t(e) : t;
  if (Array.isArray(n))
    return n.flatMap((r) => ra(e, r));
  if (Array.isArray(n == null ? void 0 : n.variants)) {
    let r;
    if (n.isProcessed)
      r = n.style;
    else {
      const {
        variants: o,
        ...s
      } = n;
      r = s;
    }
    return Mh(e, n.variants, [r]);
  }
  return n != null && n.isProcessed ? n.style : n;
}
function Mh(e, t, n = []) {
  var o;
  let r;
  e: for (let s = 0; s < t.length; s += 1) {
    const a = t[s];
    if (typeof a.props == "function") {
      if (r ?? (r = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !a.props(r))
        continue;
    } else
      for (const l in a.props)
        if (e[l] !== a.props[l] && ((o = e.ownerState) == null ? void 0 : o[l]) !== a.props[l])
          continue e;
    typeof a.style == "function" ? (r ?? (r = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(a.style(r))) : n.push(a.style);
  }
  return n;
}
function _h(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = Kx,
    rootShouldForwardProp: r = Zl,
    slotShouldForwardProp: o = Zl
  } = e;
  function s(l) {
    Qx(l, t, n);
  }
  return (l, c = {}) => {
    V0(l, (b) => b.filter((T) => T !== Lr));
    const {
      name: u,
      slot: d,
      skipVariantsResolver: f,
      skipSx: h,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: g = Xx(Dh(d)),
      ...y
    } = c, m = f !== void 0 ? f : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      d && d !== "Root" && d !== "root" || !1
    ), v = h || !1;
    let x = Zl;
    d === "Root" || d === "root" ? x = r : d ? x = o : tw(l) && (x = void 0);
    const E = Eh(l, {
      shouldForwardProp: x,
      label: Zx(u, d),
      ...y
    }), w = (b) => {
      if (typeof b == "function" && b.__emotion_real !== b)
        return function(R) {
          return ra(R, b);
        };
      if (nr(b)) {
        const T = Ah(b);
        return T.variants ? function($) {
          return ra($, T);
        } : T.style;
      }
      return b;
    }, S = (...b) => {
      const T = [], R = b.map(w), $ = [];
      if (T.push(s), u && g && $.push(function(k) {
        var M, z;
        const D = (z = (M = k.theme.components) == null ? void 0 : M[u]) == null ? void 0 : z.styleOverrides;
        if (!D)
          return null;
        const _ = {};
        for (const Y in D)
          _[Y] = ra(k, D[Y]);
        return g(k, _);
      }), u && !m && $.push(function(k) {
        var _, M;
        const A = k.theme, D = (M = (_ = A == null ? void 0 : A.components) == null ? void 0 : _[u]) == null ? void 0 : M.variants;
        return D ? Mh(k, D) : null;
      }), v || $.push(Lr), Array.isArray(R[0])) {
        const O = R.shift(), k = new Array(T.length).fill(""), A = new Array($.length).fill("");
        let D;
        D = [...k, ...O, ...A], D.raw = [...k, ...O.raw, ...A], T.unshift(D);
      }
      const I = [...T, ...R, ...$], p = E(...I);
      return l.muiName && (p.muiName = l.muiName), process.env.NODE_ENV !== "production" && (p.displayName = Jx(u, d, l)), p;
    };
    return E.withConfig && (S.withConfig = E.withConfig), S;
  };
}
function Jx(e, t, n) {
  return e ? `${e}${Te(t || "")}` : `Styled(${Gx(n)})`;
}
function Zx(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${Dh(t || "Root")}`), n;
}
function ew(e) {
  for (const t in e)
    return !1;
  return !0;
}
function tw(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function Dh(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
const nw = _h();
function Ki(e, t) {
  const n = {
    ...t
  };
  for (const r in e)
    if (Object.prototype.hasOwnProperty.call(e, r)) {
      const o = r;
      if (o === "components" || o === "slots")
        n[o] = {
          ...e[o],
          ...n[o]
        };
      else if (o === "componentsProps" || o === "slotProps") {
        const s = e[o], a = t[o];
        if (!a)
          n[o] = s || {};
        else if (!s)
          n[o] = a;
        else {
          n[o] = {
            ...a
          };
          for (const l in s)
            if (Object.prototype.hasOwnProperty.call(s, l)) {
              const c = l;
              n[o][c] = Ki(s[c], a[c]);
            }
        }
      } else n[o] === void 0 && (n[o] = e[o]);
    }
  return n;
}
function Bh(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  return !t || !t.components || !t.components[n] || !t.components[n].defaultProps ? r : Ki(t.components[n].defaultProps, r);
}
function rw({
  props: e,
  name: t,
  defaultTheme: n,
  themeId: r
}) {
  let o = rl(n);
  return r && (o = o[r] || o), Bh({
    theme: o,
    name: t,
    props: e
  });
}
const ur = typeof window < "u" ? C.useLayoutEffect : C.useEffect;
function ow(e, t, n, r, o) {
  const [s, a] = C.useState(() => o && n ? n(e).matches : r ? r(e).matches : t);
  return ur(() => {
    if (!n)
      return;
    const l = n(e), c = () => {
      a(l.matches);
    };
    return c(), l.addEventListener("change", c), () => {
      l.removeEventListener("change", c);
    };
  }, [e, n]), s;
}
const iw = {
  ...C
}, Fh = iw.useSyncExternalStore;
function sw(e, t, n, r, o) {
  const s = C.useCallback(() => t, [t]), a = C.useMemo(() => {
    if (o && n)
      return () => n(e).matches;
    if (r !== null) {
      const {
        matches: d
      } = r(e);
      return () => d;
    }
    return s;
  }, [s, e, r, o, n]), [l, c] = C.useMemo(() => {
    if (n === null)
      return [s, () => () => {
      }];
    const d = n(e);
    return [() => d.matches, (f) => (d.addEventListener("change", f), () => {
      d.removeEventListener("change", f);
    })];
  }, [s, n, e]);
  return Fh(c, l, a);
}
function jh(e = {}) {
  const {
    themeId: t
  } = e;
  return function(r, o = {}) {
    let s = ju();
    s && t && (s = s[t] || s);
    const a = typeof window < "u" && typeof window.matchMedia < "u", {
      defaultMatches: l = !1,
      matchMedia: c = a ? window.matchMedia : null,
      ssrMatchMedia: u = null,
      noSsr: d = !1
    } = Bh({
      name: "MuiUseMediaQuery",
      props: o,
      theme: s
    });
    process.env.NODE_ENV !== "production" && typeof r == "function" && s === null && console.error(["MUI: The `query` argument provided is invalid.", "You are providing a function without a theme in the context.", "One of the parent elements needs to use a ThemeProvider."].join(`
`));
    let f = typeof r == "function" ? r(s) : r;
    f = f.replace(/^@media( ?)/m, "");
    const g = (Fh !== void 0 ? sw : ow)(f, l, c, u, d);
    return process.env.NODE_ENV !== "production" && C.useDebugValue({
      query: f,
      match: g
    }), g;
  };
}
jh();
function aw(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function Lu(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), aw(e, t, n);
}
function lw(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((r) => r + r)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((r, o) => o < 3 ? parseInt(r, 16) : Math.round(parseInt(r, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function Vr(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return Vr(lw(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : Sr(9, e));
  let r = e.substring(t + 1, e.length - 1), o;
  if (n === "color") {
    if (r = r.split(" "), o = r.shift(), r.length === 4 && r[3].charAt(0) === "/" && (r[3] = r[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(o))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${o}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : Sr(10, o));
  } else
    r = r.split(",");
  return r = r.map((s) => parseFloat(s)), {
    type: n,
    values: r,
    colorSpace: o
  };
}
const cw = (e) => {
  const t = Vr(e);
  return t.values.slice(0, 3).map((n, r) => t.type.includes("hsl") && r !== 0 ? `${n}%` : n).join(" ");
}, Ri = (e, t) => {
  try {
    return cw(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function ol(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: r
  } = e;
  return t.includes("rgb") ? r = r.map((o, s) => s < 3 ? parseInt(o, 10) : o) : t.includes("hsl") && (r[1] = `${r[1]}%`, r[2] = `${r[2]}%`), t.includes("color") ? r = `${n} ${r.join(" ")}` : r = `${r.join(", ")}`, `${t}(${r})`;
}
function Lh(e) {
  e = Vr(e);
  const {
    values: t
  } = e, n = t[0], r = t[1] / 100, o = t[2] / 100, s = r * Math.min(o, 1 - o), a = (u, d = (u + n / 30) % 12) => o - s * Math.max(Math.min(d - 3, 9 - d, 1), -1);
  let l = "rgb";
  const c = [Math.round(a(0) * 255), Math.round(a(8) * 255), Math.round(a(4) * 255)];
  return e.type === "hsla" && (l += "a", c.push(t[3])), ol({
    type: l,
    values: c
  });
}
function Bc(e) {
  e = Vr(e);
  let t = e.type === "hsl" || e.type === "hsla" ? Vr(Lh(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function _f(e, t) {
  const n = Bc(e), r = Bc(t);
  return (Math.max(n, r) + 0.05) / (Math.min(n, r) + 0.05);
}
function Yt(e, t) {
  return e = Vr(e), t = Lu(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, ol(e);
}
function _s(e, t, n) {
  try {
    return Yt(e, t);
  } catch {
    return e;
  }
}
function ii(e, t) {
  if (e = Vr(e), t = Lu(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return ol(e);
}
function at(e, t, n) {
  try {
    return ii(e, t);
  } catch {
    return e;
  }
}
function si(e, t) {
  if (e = Vr(e), t = Lu(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return ol(e);
}
function lt(e, t, n) {
  try {
    return si(e, t);
  } catch {
    return e;
  }
}
function uw(e, t = 0.15) {
  return Bc(e) > 0.5 ? ii(e, t) : si(e, t);
}
function Ds(e, t, n) {
  try {
    return uw(e, t);
  } catch {
    return e;
  }
}
function qr(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...r) {
    return e(...r) || t(...r);
  };
}
function dw(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function Vh(e, t, n, r, o) {
  const s = e[t], a = o || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  const c = s.type;
  return typeof c == "function" && !dw(c) && (l = "Did you accidentally use a plain function component for an element instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Yr = qr(i.element, Vh);
Yr.isRequired = qr(i.element.isRequired, Vh);
function fw(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function pw(e, t, n, r, o) {
  const s = e[t], a = o || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  return typeof s == "function" && !fw(s) && (l = "Did you accidentally provide a plain function component instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Vu = qr(i.elementType, pw), mw = "exact-prop: ​";
function ms(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [mw]: (t) => {
      const n = Object.keys(t).filter((r) => !e.hasOwnProperty(r));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((r) => `\`${r}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
function Er(e, t, n, r, o) {
  if (process.env.NODE_ENV === "production")
    return null;
  const s = e[t], a = o || t;
  return s == null ? null : s && s.nodeType !== 1 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
const Pr = i.oneOfType([i.func, i.object]);
function Fc(...e) {
  return e.reduce((t, n) => n == null ? t : function(...o) {
    t.apply(this, o), n.apply(this, o);
  }, () => {
  });
}
function zu(e, t = 166) {
  let n;
  function r(...o) {
    const s = () => {
      e.apply(this, o);
    };
    clearTimeout(n), n = setTimeout(s, t);
  }
  return r.clear = () => {
    clearTimeout(n);
  }, r;
}
function dn(e) {
  return e && e.ownerDocument || document;
}
function dr(e) {
  return dn(e).defaultView || window;
}
function jc(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
let Df = 0;
function hw(e) {
  const [t, n] = C.useState(e), r = e || t;
  return C.useEffect(() => {
    t == null && (Df += 1, n(`mui-${Df}`));
  }, [t]), r;
}
const gw = {
  ...C
}, Bf = gw.useId;
function Wu(e) {
  if (Bf !== void 0) {
    const t = Bf();
    return e ?? t;
  }
  return hw(e);
}
function zh({
  controlled: e,
  default: t,
  name: n,
  state: r = "value"
}) {
  const {
    current: o
  } = C.useRef(e !== void 0), [s, a] = C.useState(t), l = o ? e : s;
  if (process.env.NODE_ENV !== "production") {
    C.useEffect(() => {
      o !== (e !== void 0) && console.error([`MUI: A component is changing the ${o ? "" : "un"}controlled ${r} state of ${n} to be ${o ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [r, n, e]);
    const {
      current: u
    } = C.useRef(t);
    C.useEffect(() => {
      !o && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${r} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = C.useCallback((u) => {
    o || a(u);
  }, []);
  return [l, c];
}
function sr(e) {
  const t = C.useRef(e);
  return ur(() => {
    t.current = e;
  }), C.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function tn(...e) {
  return C.useMemo(() => e.every((t) => t == null) ? null : (t) => {
    e.forEach((n) => {
      jc(n, t);
    });
  }, e);
}
const Ff = {};
function Wh(e, t) {
  const n = C.useRef(Ff);
  return n.current === Ff && (n.current = e(t)), n;
}
const yw = [];
function bw(e) {
  C.useEffect(e, yw);
}
let Uh = class Hh {
  constructor() {
    Nr(this, "currentId", null);
    Nr(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    Nr(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new Hh();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
};
function _o() {
  const e = Wh(Uh.create).current;
  return bw(e.disposeEffect), e;
}
function ga(e) {
  try {
    return e.matches(":focus-visible");
  } catch {
    process.env.NODE_ENV !== "production" && !/jsdom/.test(window.navigator.userAgent) && console.warn(["MUI: The `:focus-visible` pseudo class is not supported in this browser.", "Some components rely on this feature to work properly."].join(`
`));
  }
  return !1;
}
function vw(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
function xw(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function qh(e, t, n, r) {
  const o = e[t];
  if (o == null || !Number.isInteger(o)) {
    const s = xw(o);
    return new RangeError(`Invalid ${r} \`${t}\` of type \`${s}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function Yh(e, t, ...n) {
  return e[t] === void 0 ? null : qh(e, t, ...n);
}
function Lc() {
  return null;
}
Yh.isRequired = qh;
Lc.isRequired = Lc;
const Uu = process.env.NODE_ENV === "production" ? Lc : Yh;
function Mt(e, t, n = void 0) {
  const r = {};
  for (const o in e) {
    const s = e[o];
    let a = "", l = !0;
    for (let c = 0; c < s.length; c += 1) {
      const u = s[c];
      u && (a += (l === !0 ? "" : " ") + t(u), l = !1, n && n[u] && (a += " " + n[u]));
    }
    r[o] = a;
  }
  return r;
}
function ww(e) {
  return typeof e == "string";
}
function Gh(e, t, n) {
  return e === void 0 || ww(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function Kh(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((r) => r.match(/^on[A-Z]/) && typeof e[r] == "function" && !t.includes(r)).forEach((r) => {
    n[r] = e[r];
  }), n;
}
function jf(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function Xh(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: r,
    externalForwardedProps: o,
    className: s
  } = e;
  if (!t) {
    const g = Ce(n == null ? void 0 : n.className, s, o == null ? void 0 : o.className, r == null ? void 0 : r.className), y = {
      ...n == null ? void 0 : n.style,
      ...o == null ? void 0 : o.style,
      ...r == null ? void 0 : r.style
    }, m = {
      ...n,
      ...o,
      ...r
    };
    return g.length > 0 && (m.className = g), Object.keys(y).length > 0 && (m.style = y), {
      props: m,
      internalRef: void 0
    };
  }
  const a = Kh({
    ...o,
    ...r
  }), l = jf(r), c = jf(o), u = t(a), d = Ce(u == null ? void 0 : u.className, n == null ? void 0 : n.className, s, o == null ? void 0 : o.className, r == null ? void 0 : r.className), f = {
    ...u == null ? void 0 : u.style,
    ...n == null ? void 0 : n.style,
    ...o == null ? void 0 : o.style,
    ...r == null ? void 0 : r.style
  }, h = {
    ...u,
    ...n,
    ...c,
    ...l
  };
  return d.length > 0 && (h.className = d), Object.keys(f).length > 0 && (h.style = f), {
    props: h,
    internalRef: u.ref
  };
}
function Qh(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function Sw(e) {
  var f;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: r,
    skipResolvingSlotProps: o = !1,
    ...s
  } = e, a = o ? {} : Qh(n, r), {
    props: l,
    internalRef: c
  } = Xh({
    ...s,
    externalSlotProps: a
  }), u = tn(c, a == null ? void 0 : a.ref, (f = e.additionalProps) == null ? void 0 : f.ref);
  return Gh(t, {
    ...l,
    ref: u
  }, r);
}
function go(e) {
  var t;
  return parseInt(C.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
const Hu = /* @__PURE__ */ C.createContext(null);
process.env.NODE_ENV !== "production" && (Hu.displayName = "ThemeContext");
function qu() {
  const e = C.useContext(Hu);
  return process.env.NODE_ENV !== "production" && C.useDebugValue(e), e;
}
const Tw = typeof Symbol == "function" && Symbol.for, Ew = Tw ? Symbol.for("mui.nested") : "__THEME_NESTED__";
function Cw(e, t) {
  if (typeof t == "function") {
    const n = t(e);
    return process.env.NODE_ENV !== "production" && (n || console.error(["MUI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join(`
`))), n;
  }
  return {
    ...e,
    ...t
  };
}
function ya(e) {
  const {
    children: t,
    theme: n
  } = e, r = qu();
  process.env.NODE_ENV !== "production" && r === null && typeof n == "function" && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const o = C.useMemo(() => {
    const s = r === null ? {
      ...n
    } : Cw(r, n);
    return s != null && (s[Ew] = r !== null), s;
  }, [n, r]);
  return /* @__PURE__ */ P(Hu.Provider, {
    value: o,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (ya.propTypes = {
  /**
   * Your component tree.
   */
  children: i.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: i.oneOfType([i.object, i.func]).isRequired
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (ya.propTypes = ms(ya.propTypes));
const Jh = /* @__PURE__ */ C.createContext();
function Zh({
  value: e,
  ...t
}) {
  return /* @__PURE__ */ P(Jh.Provider, {
    value: e ?? !0,
    ...t
  });
}
process.env.NODE_ENV !== "production" && (Zh.propTypes = {
  children: i.node,
  value: i.bool
});
const il = () => C.useContext(Jh) ?? !1, eg = /* @__PURE__ */ C.createContext(void 0);
function tg({
  value: e,
  children: t
}) {
  return /* @__PURE__ */ P(eg.Provider, {
    value: e,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (tg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * @ignore
   */
  value: i.object
});
function Ow(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  if (!t || !t.components || !t.components[n])
    return r;
  const o = t.components[n];
  return o.defaultProps ? Ki(o.defaultProps, r) : !o.styleOverrides && !o.variants ? Ki(o, r) : r;
}
function Rw({
  props: e,
  name: t
}) {
  const n = C.useContext(eg);
  return Ow({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
const Lf = {};
function Vf(e, t, n, r = !1) {
  return C.useMemo(() => {
    const o = e && t[e] || t;
    if (typeof n == "function") {
      const s = n(o), a = e ? {
        ...t,
        [e]: s
      } : s;
      return r ? () => a : a;
    }
    return e ? {
      ...t,
      [e]: n
    } : {
      ...t,
      ...n
    };
  }, [e, t, n, r]);
}
function Xi(e) {
  const {
    children: t,
    theme: n,
    themeId: r
  } = e, o = ju(Lf), s = qu() || Lf;
  process.env.NODE_ENV !== "production" && (o === null && typeof n == "function" || r && o && !o[r] && typeof n == "function") && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const a = Vf(r, o, n), l = Vf(r, s, n, !0), c = (r ? a[r] : a).direction === "rtl";
  return /* @__PURE__ */ P(ya, {
    theme: l,
    children: /* @__PURE__ */ P(ri.Provider, {
      value: a,
      children: /* @__PURE__ */ P(Zh, {
        value: c,
        children: /* @__PURE__ */ P(tg, {
          value: r ? a[r].components : a.components,
          children: t
        })
      })
    })
  });
}
process.env.NODE_ENV !== "production" && (Xi.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Your component tree.
   */
  children: i.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: i.oneOfType([i.func, i.object]).isRequired,
  /**
   * The design system's unique id for getting the corresponded theme when there are multiple design systems.
   */
  themeId: i.string
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (Xi.propTypes = ms(Xi.propTypes));
const zf = {
  theme: void 0
};
function $w(e) {
  let t, n;
  return function(o) {
    let s = t;
    return (s === void 0 || o.theme !== n) && (zf.theme = o.theme, s = Ah(e(zf)), t = s, n = o.theme), s;
  };
}
const Yu = "mode", Gu = "color-scheme", kw = "data-color-scheme";
function Pw(e) {
  const {
    defaultMode: t = "system",
    defaultLightColorScheme: n = "light",
    defaultDarkColorScheme: r = "dark",
    modeStorageKey: o = Yu,
    colorSchemeStorageKey: s = Gu,
    attribute: a = kw,
    colorSchemeNode: l = "document.documentElement",
    nonce: c
  } = e || {};
  let u = "", d = a;
  if (a === "class" && (d = ".%s"), a === "data" && (d = "[data-%s]"), d.startsWith(".")) {
    const h = d.substring(1);
    u += `${l}.classList.remove('${h}'.replace('%s', light), '${h}'.replace('%s', dark));
      ${l}.classList.add('${h}'.replace('%s', colorScheme));`;
  }
  const f = d.match(/\[([^\]]+)\]/);
  if (f) {
    const [h, g] = f[1].split("=");
    g || (u += `${l}.removeAttribute('${h}'.replace('%s', light));
      ${l}.removeAttribute('${h}'.replace('%s', dark));`), u += `
      ${l}.setAttribute('${h}'.replace('%s', colorScheme), ${g ? `${g}.replace('%s', colorScheme)` : '""'});`;
  } else
    u += `${l}.setAttribute('${d}', colorScheme);`;
  return /* @__PURE__ */ P("script", {
    suppressHydrationWarning: !0,
    nonce: typeof window > "u" ? c : "",
    dangerouslySetInnerHTML: {
      __html: `(function() {
try {
  let colorScheme = '';
  const mode = localStorage.getItem('${o}') || '${t}';
  const dark = localStorage.getItem('${s}-dark') || '${r}';
  const light = localStorage.getItem('${s}-light') || '${n}';
  if (mode === 'system') {
    // handle system mode
    const mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = dark
    } else {
      colorScheme = light
    }
  }
  if (mode === 'light') {
    colorScheme = light;
  }
  if (mode === 'dark') {
    colorScheme = dark;
  }
  if (colorScheme) {
    ${u}
  }
} catch(e){}})();`
    }
  }, "mui-color-scheme-init");
}
function Iw() {
}
const Nw = ({
  key: e,
  storageWindow: t
}) => (!t && typeof window < "u" && (t = window), {
  get(n) {
    if (typeof window > "u")
      return;
    if (!t)
      return n;
    let r;
    try {
      r = t.localStorage.getItem(e);
    } catch {
    }
    return r || n;
  },
  set: (n) => {
    if (t)
      try {
        t.localStorage.setItem(e, n);
      } catch {
      }
  },
  subscribe: (n) => {
    if (!t)
      return Iw;
    const r = (o) => {
      const s = o.newValue;
      o.key === e && n(s);
    };
    return t.addEventListener("storage", r), () => {
      t.removeEventListener("storage", r);
    };
  }
});
function ec() {
}
function Wf(e) {
  if (typeof window < "u" && typeof window.matchMedia == "function" && e === "system")
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
function ng(e, t) {
  if (e.mode === "light" || e.mode === "system" && e.systemMode === "light")
    return t("light");
  if (e.mode === "dark" || e.mode === "system" && e.systemMode === "dark")
    return t("dark");
}
function Aw(e) {
  return ng(e, (t) => {
    if (t === "light")
      return e.lightColorScheme;
    if (t === "dark")
      return e.darkColorScheme;
  });
}
function Mw(e) {
  const {
    defaultMode: t = "light",
    defaultLightColorScheme: n,
    defaultDarkColorScheme: r,
    supportedColorSchemes: o = [],
    modeStorageKey: s = Yu,
    colorSchemeStorageKey: a = Gu,
    storageWindow: l = typeof window > "u" ? void 0 : window,
    storageManager: c = Nw,
    noSsr: u = !1
  } = e, d = o.join(","), f = o.length > 1, h = C.useMemo(() => c == null ? void 0 : c({
    key: s,
    storageWindow: l
  }), [c, s, l]), g = C.useMemo(() => c == null ? void 0 : c({
    key: `${a}-light`,
    storageWindow: l
  }), [c, a, l]), y = C.useMemo(() => c == null ? void 0 : c({
    key: `${a}-dark`,
    storageWindow: l
  }), [c, a, l]), [m, v] = C.useState(() => {
    const $ = (h == null ? void 0 : h.get(t)) || t, I = (g == null ? void 0 : g.get(n)) || n, p = (y == null ? void 0 : y.get(r)) || r;
    return {
      mode: $,
      systemMode: Wf($),
      lightColorScheme: I,
      darkColorScheme: p
    };
  }), [x, E] = C.useState(u || !f);
  C.useEffect(() => {
    E(!0);
  }, []);
  const w = Aw(m), S = C.useCallback(($) => {
    v((I) => {
      if ($ === I.mode)
        return I;
      const p = $ ?? t;
      return h == null || h.set(p), {
        ...I,
        mode: p,
        systemMode: Wf(p)
      };
    });
  }, [h, t]), b = C.useCallback(($) => {
    $ ? typeof $ == "string" ? $ && !d.includes($) ? console.error(`\`${$}\` does not exist in \`theme.colorSchemes\`.`) : v((I) => {
      const p = {
        ...I
      };
      return ng(I, (O) => {
        O === "light" && (g == null || g.set($), p.lightColorScheme = $), O === "dark" && (y == null || y.set($), p.darkColorScheme = $);
      }), p;
    }) : v((I) => {
      const p = {
        ...I
      }, O = $.light === null ? n : $.light, k = $.dark === null ? r : $.dark;
      return O && (d.includes(O) ? (p.lightColorScheme = O, g == null || g.set(O)) : console.error(`\`${O}\` does not exist in \`theme.colorSchemes\`.`)), k && (d.includes(k) ? (p.darkColorScheme = k, y == null || y.set(k)) : console.error(`\`${k}\` does not exist in \`theme.colorSchemes\`.`)), p;
    }) : v((I) => (g == null || g.set(n), y == null || y.set(r), {
      ...I,
      lightColorScheme: n,
      darkColorScheme: r
    }));
  }, [d, g, y, n, r]), T = C.useCallback(($) => {
    m.mode === "system" && v((I) => {
      const p = $ != null && $.matches ? "dark" : "light";
      return I.systemMode === p ? I : {
        ...I,
        systemMode: p
      };
    });
  }, [m.mode]), R = C.useRef(T);
  return R.current = T, C.useEffect(() => {
    if (typeof window.matchMedia != "function" || !f)
      return;
    const $ = (...p) => R.current(...p), I = window.matchMedia("(prefers-color-scheme: dark)");
    return I.addListener($), $(I), () => {
      I.removeListener($);
    };
  }, [f]), C.useEffect(() => {
    if (f) {
      const $ = (h == null ? void 0 : h.subscribe((O) => {
        (!O || ["light", "dark", "system"].includes(O)) && S(O || t);
      })) || ec, I = (g == null ? void 0 : g.subscribe((O) => {
        (!O || d.match(O)) && b({
          light: O
        });
      })) || ec, p = (y == null ? void 0 : y.subscribe((O) => {
        (!O || d.match(O)) && b({
          dark: O
        });
      })) || ec;
      return () => {
        $(), I(), p();
      };
    }
  }, [b, S, d, t, l, f, h, g, y]), {
    ...m,
    mode: x ? m.mode : void 0,
    systemMode: x ? m.systemMode : void 0,
    colorScheme: x ? w : void 0,
    setMode: S,
    setColorScheme: b
  };
}
const _w = "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
function Dw(e) {
  const {
    themeId: t,
    /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */
    theme: n = {},
    modeStorageKey: r = Yu,
    colorSchemeStorageKey: o = Gu,
    disableTransitionOnChange: s = !1,
    defaultColorScheme: a,
    resolveTheme: l
  } = e, c = {
    allColorSchemes: [],
    colorScheme: void 0,
    darkColorScheme: void 0,
    lightColorScheme: void 0,
    mode: void 0,
    setColorScheme: () => {
    },
    setMode: () => {
    },
    systemMode: void 0
  }, u = /* @__PURE__ */ C.createContext(void 0);
  process.env.NODE_ENV !== "production" && (u.displayName = "ColorSchemeContext");
  const d = () => C.useContext(u) || c, f = {}, h = {};
  function g(x) {
    var B, V, G, pe;
    const {
      children: E,
      theme: w,
      modeStorageKey: S = r,
      colorSchemeStorageKey: b = o,
      disableTransitionOnChange: T = s,
      storageManager: R,
      storageWindow: $ = typeof window > "u" ? void 0 : window,
      documentNode: I = typeof document > "u" ? void 0 : document,
      colorSchemeNode: p = typeof document > "u" ? void 0 : document.documentElement,
      disableNestedContext: O = !1,
      disableStyleSheetGeneration: k = !1,
      defaultMode: A = "system",
      forceThemeRerender: D = !1,
      noSsr: _
    } = x, M = C.useRef(!1), z = qu(), Y = C.useContext(u), H = !!Y && !O, j = C.useMemo(() => w || (typeof n == "function" ? n() : n), [w]), W = j[t], ee = W || j, {
      colorSchemes: K = f,
      components: oe = h,
      cssVarPrefix: ne
    } = ee, se = Object.keys(K).filter((me) => !!K[me]).join(","), de = C.useMemo(() => se.split(","), [se]), X = typeof a == "string" ? a : a.light, ae = typeof a == "string" ? a : a.dark, Q = K[X] && K[ae] ? A : ((V = (B = K[ee.defaultColorScheme]) == null ? void 0 : B.palette) == null ? void 0 : V.mode) || ((G = ee.palette) == null ? void 0 : G.mode), {
      mode: ie,
      setMode: F,
      systemMode: he,
      lightColorScheme: fe,
      darkColorScheme: Se,
      colorScheme: Le,
      setColorScheme: Ne
    } = Mw({
      supportedColorSchemes: de,
      defaultLightColorScheme: X,
      defaultDarkColorScheme: ae,
      modeStorageKey: S,
      colorSchemeStorageKey: b,
      defaultMode: Q,
      storageManager: R,
      storageWindow: $,
      noSsr: _
    });
    let ke = ie, Re = Le;
    H && (ke = Y.mode, Re = Y.colorScheme), process.env.NODE_ENV !== "production" && D && !ee.vars && console.warn(["MUI: The `forceThemeRerender` prop should only be used with CSS theme variables.", "Note that it will slow down the app when changing between modes, so only do this when you cannot find a better solution."].join(`
`));
    let De = Re || ee.defaultColorScheme;
    ee.vars && !D && (De = ee.defaultColorScheme);
    const Oe = C.useMemo(() => {
      var Z;
      const me = ((Z = ee.generateThemeVars) == null ? void 0 : Z.call(ee)) || ee.vars, re = {
        ...ee,
        components: oe,
        colorSchemes: K,
        cssVarPrefix: ne,
        vars: me
      };
      if (typeof re.generateSpacing == "function" && (re.spacing = re.generateSpacing()), De) {
        const te = K[De];
        te && typeof te == "object" && Object.keys(te).forEach((ye) => {
          te[ye] && typeof te[ye] == "object" ? re[ye] = {
            ...re[ye],
            ...te[ye]
          } : re[ye] = te[ye];
        });
      }
      return l ? l(re) : re;
    }, [ee, De, oe, K, ne]), N = ee.colorSchemeSelector;
    ur(() => {
      if (Re && p && N && N !== "media") {
        const me = N;
        let re = N;
        if (me === "class" && (re = ".%s"), me === "data" && (re = "[data-%s]"), me != null && me.startsWith("data-") && !me.includes("%s") && (re = `[${me}="%s"]`), re.startsWith("."))
          p.classList.remove(...de.map((Z) => re.substring(1).replace("%s", Z))), p.classList.add(re.substring(1).replace("%s", Re));
        else {
          const Z = re.replace("%s", Re).match(/\[([^\]]+)\]/);
          if (Z) {
            const [te, ye] = Z[1].split("=");
            ye || de.forEach((we) => {
              p.removeAttribute(te.replace(Re, we));
            }), p.setAttribute(te, ye ? ye.replace(/"|'/g, "") : "");
          } else
            p.setAttribute(re, Re);
        }
      }
    }, [Re, N, p, de]), C.useEffect(() => {
      let me;
      if (T && M.current && I) {
        const re = I.createElement("style");
        re.appendChild(I.createTextNode(_w)), I.head.appendChild(re), window.getComputedStyle(I.body), me = setTimeout(() => {
          I.head.removeChild(re);
        }, 1);
      }
      return () => {
        clearTimeout(me);
      };
    }, [Re, T, I]), C.useEffect(() => (M.current = !0, () => {
      M.current = !1;
    }), []);
    const q = C.useMemo(() => ({
      allColorSchemes: de,
      colorScheme: Re,
      darkColorScheme: Se,
      lightColorScheme: fe,
      mode: ke,
      setColorScheme: Ne,
      setMode: process.env.NODE_ENV === "production" ? F : (me) => {
        Oe.colorSchemeSelector === "media" && console.error(["MUI: The `setMode` function has no effect if `colorSchemeSelector` is `media` (`media` is the default value).", "To toggle the mode manually, please configure `colorSchemeSelector` to use a class or data attribute.", "To learn more, visit https://mui.com/material-ui/customization/css-theme-variables/configuration/#toggling-dark-mode-manually"].join(`
`)), F(me);
      },
      systemMode: he
    }), [de, Re, Se, fe, ke, Ne, F, he, Oe.colorSchemeSelector]);
    let J = !0;
    (k || ee.cssVariables === !1 || H && (z == null ? void 0 : z.cssVarPrefix) === ne) && (J = !1);
    const U = /* @__PURE__ */ Pe(C.Fragment, {
      children: [/* @__PURE__ */ P(Xi, {
        themeId: W ? t : void 0,
        theme: Oe,
        children: E
      }), J && /* @__PURE__ */ P(Du, {
        styles: ((pe = Oe.generateStyleSheets) == null ? void 0 : pe.call(Oe)) || []
      })]
    });
    return H ? U : /* @__PURE__ */ P(u.Provider, {
      value: q,
      children: U
    });
  }
  process.env.NODE_ENV !== "production" && (g.propTypes = {
    /**
     * The component tree.
     */
    children: i.node,
    /**
     * The node used to attach the color-scheme attribute
     */
    colorSchemeNode: i.any,
    /**
     * localStorage key used to store `colorScheme`
     */
    colorSchemeStorageKey: i.string,
    /**
     * The default mode when the storage is empty,
     * require the theme to have `colorSchemes` with light and dark.
     */
    defaultMode: i.string,
    /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */
    disableNestedContext: i.bool,
    /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */
    disableStyleSheetGeneration: i.bool,
    /**
     * Disable CSS transitions when switching between modes or color schemes.
     */
    disableTransitionOnChange: i.bool,
    /**
     * The document to attach the attribute to.
     */
    documentNode: i.any,
    /**
     * If `true`, theme values are recalculated when the mode changes.
     */
    forceThemeRerender: i.bool,
    /**
     * The key in the local storage used to store current color scheme.
     */
    modeStorageKey: i.string,
    /**
     * If `true`, the mode will be the same value as the storage without an extra rerendering after the hydration.
     * You should use this option in conjuction with `InitColorSchemeScript` component.
     */
    noSsr: i.bool,
    /**
     * The storage manager to be used for storing the mode and color scheme
     * @default using `window.localStorage`
     */
    storageManager: i.func,
    /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */
    storageWindow: i.any,
    /**
     * The calculated theme object that will be passed through context.
     */
    theme: i.object
  });
  const y = typeof a == "string" ? a : a.light, m = typeof a == "string" ? a : a.dark;
  return {
    CssVarsProvider: g,
    useColorScheme: d,
    getInitColorSchemeScript: (x) => Pw({
      colorSchemeStorageKey: o,
      defaultLightColorScheme: y,
      defaultDarkColorScheme: m,
      modeStorageKey: r,
      ...x
    })
  };
}
function Bw(e = "") {
  function t(...r) {
    if (!r.length)
      return "";
    const o = r[0];
    return typeof o == "string" && !o.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${o}${t(...r.slice(1))})` : `, ${o}`;
  }
  return (r, ...o) => `var(--${e ? `${e}-` : ""}${r}${t(...o)})`;
}
const Uf = (e, t, n, r = []) => {
  let o = e;
  t.forEach((s, a) => {
    a === t.length - 1 ? Array.isArray(o) ? o[Number(s)] = n : o && typeof o == "object" && (o[s] = n) : o && typeof o == "object" && (o[s] || (o[s] = r.includes(s) ? [] : {}), o = o[s]);
  });
}, Fw = (e, t, n) => {
  function r(o, s = [], a = []) {
    Object.entries(o).forEach(([l, c]) => {
      (!n || n && !n([...s, l])) && c != null && (typeof c == "object" && Object.keys(c).length > 0 ? r(c, [...s, l], Array.isArray(c) ? [...a, l] : a) : t([...s, l], c, a));
    });
  }
  r(e);
}, jw = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((r) => e.includes(r)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function tc(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: r
  } = t || {}, o = {}, s = {}, a = {};
  return Fw(
    e,
    (l, c, u) => {
      if ((typeof c == "string" || typeof c == "number") && (!r || !r(l, c))) {
        const d = `--${n ? `${n}-` : ""}${l.join("-")}`, f = jw(l, c);
        Object.assign(o, {
          [d]: f
        }), Uf(s, l, `var(${d})`, u), Uf(a, l, `var(${d}, ${f})`, u);
      }
    },
    (l) => l[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: o,
    vars: s,
    varsWithDefaults: a
  };
}
function Lw(e, t = {}) {
  const {
    getSelector: n = v,
    disableCssColorScheme: r,
    colorSchemeSelector: o
  } = t, {
    colorSchemes: s = {},
    components: a,
    defaultColorScheme: l = "light",
    ...c
  } = e, {
    vars: u,
    css: d,
    varsWithDefaults: f
  } = tc(c, t);
  let h = f;
  const g = {}, {
    [l]: y,
    ...m
  } = s;
  if (Object.entries(m || {}).forEach(([w, S]) => {
    const {
      vars: b,
      css: T,
      varsWithDefaults: R
    } = tc(S, t);
    h = wn(h, R), g[w] = {
      css: T,
      vars: b
    };
  }), y) {
    const {
      css: w,
      vars: S,
      varsWithDefaults: b
    } = tc(y, t);
    h = wn(h, b), g[l] = {
      css: w,
      vars: S
    };
  }
  function v(w, S) {
    var T, R;
    let b = o;
    if (o === "class" && (b = ".%s"), o === "data" && (b = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (b = `[${o}="%s"]`), w) {
      if (b === "media")
        return e.defaultColorScheme === w ? ":root" : {
          [`@media (prefers-color-scheme: ${((R = (T = s[w]) == null ? void 0 : T.palette) == null ? void 0 : R.mode) || w})`]: {
            ":root": S
          }
        };
      if (b)
        return e.defaultColorScheme === w ? `:root, ${b.replace("%s", String(w))}` : b.replace("%s", String(w));
    }
    return ":root";
  }
  return {
    vars: h,
    generateThemeVars: () => {
      let w = {
        ...u
      };
      return Object.entries(g).forEach(([, {
        vars: S
      }]) => {
        w = wn(w, S);
      }), w;
    },
    generateStyleSheets: () => {
      var $, I;
      const w = [], S = e.defaultColorScheme || "light";
      function b(p, O) {
        Object.keys(O).length && w.push(typeof p == "string" ? {
          [p]: {
            ...O
          }
        } : p);
      }
      b(n(void 0, {
        ...d
      }), d);
      const {
        [S]: T,
        ...R
      } = g;
      if (T) {
        const {
          css: p
        } = T, O = (I = ($ = s[S]) == null ? void 0 : $.palette) == null ? void 0 : I.mode, k = !r && O ? {
          colorScheme: O,
          ...p
        } : {
          ...p
        };
        b(n(S, {
          ...k
        }), k);
      }
      return Object.entries(R).forEach(([p, {
        css: O
      }]) => {
        var D, _;
        const k = (_ = (D = s[p]) == null ? void 0 : D.palette) == null ? void 0 : _.mode, A = !r && k ? {
          colorScheme: k,
          ...O
        } : {
          ...O
        };
        b(n(p, {
          ...A
        }), A);
      }), w;
    }
  };
}
function Vw(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
const zw = nl(), Ww = nw("div", {
  name: "MuiContainer",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`maxWidth${Te(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
  }
}), Uw = (e) => rw({
  props: e,
  name: "MuiContainer",
  defaultTheme: zw
}), Hw = (e, t) => {
  const n = (c) => St(t, c), {
    classes: r,
    fixed: o,
    disableGutters: s,
    maxWidth: a
  } = e, l = {
    root: ["root", a && `maxWidth${Te(String(a))}`, o && "fixed", s && "disableGutters"]
  };
  return Mt(l, n, r);
};
function qw(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: t = Ww,
    useThemeProps: n = Uw,
    componentName: r = "MuiContainer"
  } = e, o = t(({
    theme: a,
    ownerState: l
  }) => ({
    width: "100%",
    marginLeft: "auto",
    boxSizing: "border-box",
    marginRight: "auto",
    ...!l.disableGutters && {
      paddingLeft: a.spacing(2),
      paddingRight: a.spacing(2),
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [a.breakpoints.up("sm")]: {
        paddingLeft: a.spacing(3),
        paddingRight: a.spacing(3)
      }
    }
  }), ({
    theme: a,
    ownerState: l
  }) => l.fixed && Object.keys(a.breakpoints.values).reduce((c, u) => {
    const d = u, f = a.breakpoints.values[d];
    return f !== 0 && (c[a.breakpoints.up(d)] = {
      maxWidth: `${f}${a.breakpoints.unit}`
    }), c;
  }, {}), ({
    theme: a,
    ownerState: l
  }) => ({
    // @ts-ignore module augmentation fails if custom breakpoints are used
    ...l.maxWidth === "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [a.breakpoints.up("xs")]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: Math.max(a.breakpoints.values.xs, 444)
      }
    },
    ...l.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used
    l.maxWidth !== "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [a.breakpoints.up(l.maxWidth)]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: `${a.breakpoints.values[l.maxWidth]}${a.breakpoints.unit}`
      }
    }
  })), s = /* @__PURE__ */ C.forwardRef(function(l, c) {
    const u = n(l), {
      className: d,
      component: f = "div",
      disableGutters: h = !1,
      fixed: g = !1,
      maxWidth: y = "lg",
      classes: m,
      ...v
    } = u, x = {
      ...u,
      component: f,
      disableGutters: h,
      fixed: g,
      maxWidth: y
    }, E = Hw(x, r);
    return (
      // @ts-ignore theme is injected by the styled util
      /* @__PURE__ */ P(o, {
        as: f,
        ownerState: x,
        className: Ce(E.root, d),
        ref: c,
        ...v
      })
    );
  });
  return process.env.NODE_ENV !== "production" && (s.propTypes = {
    children: i.node,
    classes: i.object,
    className: i.string,
    component: i.elementType,
    disableGutters: i.bool,
    fixed: i.bool,
    maxWidth: i.oneOfType([i.oneOf(["xs", "sm", "md", "lg", "xl", !1]), i.string]),
    sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
  }), s;
}
const Hn = "$$material", Qi = {
  black: "#000",
  white: "#fff"
}, Yw = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, xo = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, wo = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, mi = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, So = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, To = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, Eo = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
};
function rg() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: Qi.white,
      default: Qi.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const Gw = rg();
function og() {
  return {
    text: {
      primary: Qi.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: Qi.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const Hf = og();
function qf(e, t, n, r) {
  const o = r.light || r, s = r.dark || r * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = si(e.main, o) : t === "dark" && (e.dark = ii(e.main, s)));
}
function Kw(e = "light") {
  return e === "dark" ? {
    main: So[200],
    light: So[50],
    dark: So[400]
  } : {
    main: So[700],
    light: So[400],
    dark: So[800]
  };
}
function Xw(e = "light") {
  return e === "dark" ? {
    main: xo[200],
    light: xo[50],
    dark: xo[400]
  } : {
    main: xo[500],
    light: xo[300],
    dark: xo[700]
  };
}
function Qw(e = "light") {
  return e === "dark" ? {
    main: wo[500],
    light: wo[300],
    dark: wo[700]
  } : {
    main: wo[700],
    light: wo[400],
    dark: wo[800]
  };
}
function Jw(e = "light") {
  return e === "dark" ? {
    main: To[400],
    light: To[300],
    dark: To[700]
  } : {
    main: To[700],
    light: To[500],
    dark: To[900]
  };
}
function Zw(e = "light") {
  return e === "dark" ? {
    main: Eo[400],
    light: Eo[300],
    dark: Eo[700]
  } : {
    main: Eo[800],
    light: Eo[500],
    dark: Eo[900]
  };
}
function eS(e = "light") {
  return e === "dark" ? {
    main: mi[400],
    light: mi[300],
    dark: mi[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: mi[500],
    dark: mi[900]
  };
}
function Ku(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: r = 0.2,
    ...o
  } = e, s = e.primary || Kw(t), a = e.secondary || Xw(t), l = e.error || Qw(t), c = e.info || Jw(t), u = e.success || Zw(t), d = e.warning || eS(t);
  function f(m) {
    const v = _f(m, Hf.text.primary) >= n ? Hf.text.primary : Gw.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const x = _f(m, v);
      x < 3 && console.error([`MUI: The contrast ratio of ${x}:1 for ${v} on ${m}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return v;
  }
  const h = ({
    color: m,
    name: v,
    mainShade: x = 500,
    lightShade: E = 300,
    darkShade: w = 700
  }) => {
    if (m = {
      ...m
    }, !m.main && m[x] && (m.main = m[x]), !m.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${v ? ` (${v})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${x}\` property.` : Sr(11, v ? ` (${v})` : "", x));
    if (typeof m.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${v ? ` (${v})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(m.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : Sr(12, v ? ` (${v})` : "", JSON.stringify(m.main)));
    return qf(m, "light", E, r), qf(m, "dark", w, r), m.contrastText || (m.contrastText = f(m.main)), m;
  };
  let g;
  return t === "light" ? g = rg() : t === "dark" && (g = og()), process.env.NODE_ENV !== "production" && (g || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), wn({
    // A collection of common colors.
    common: {
      ...Qi
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: h({
      color: s,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: h({
      color: a,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: h({
      color: l,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: h({
      color: d,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: h({
      color: c,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: h({
      color: u,
      name: "success"
    }),
    // The grey colors.
    grey: Yw,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: f,
    // Generate a rich color object.
    augmentColor: h,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: r,
    // The light and dark mode object.
    ...g
  }, o);
}
function tS(e) {
  const t = {};
  return Object.entries(e).forEach((r) => {
    const [o, s] = r;
    typeof s == "object" && (t[o] = `${s.fontStyle ? `${s.fontStyle} ` : ""}${s.fontVariant ? `${s.fontVariant} ` : ""}${s.fontWeight ? `${s.fontWeight} ` : ""}${s.fontStretch ? `${s.fontStretch} ` : ""}${s.fontSize || ""}${s.lineHeight ? `/${s.lineHeight} ` : ""}${s.fontFamily || ""}`);
  }), t;
}
function nS(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function rS(e) {
  return Math.round(e * 1e5) / 1e5;
}
const Yf = {
  textTransform: "uppercase"
}, Gf = '"Roboto", "Helvetica", "Arial", sans-serif';
function ig(e, t) {
  const {
    fontFamily: n = Gf,
    // The default font size of the Material Specification.
    fontSize: r = 14,
    // px
    fontWeightLight: o = 300,
    fontWeightRegular: s = 400,
    fontWeightMedium: a = 500,
    fontWeightBold: l = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: c = 16,
    // Apply the CSS properties to all the variants.
    allVariants: u,
    pxToRem: d,
    ...f
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof r != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof c != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const h = r / 14, g = d || ((v) => `${v / c * h}rem`), y = (v, x, E, w, S) => ({
    fontFamily: n,
    fontWeight: v,
    fontSize: g(x),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: E,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === Gf ? {
      letterSpacing: `${rS(w / x)}em`
    } : {},
    ...S,
    ...u
  }), m = {
    h1: y(o, 96, 1.167, -1.5),
    h2: y(o, 60, 1.2, -0.5),
    h3: y(s, 48, 1.167, 0),
    h4: y(s, 34, 1.235, 0.25),
    h5: y(s, 24, 1.334, 0),
    h6: y(a, 20, 1.6, 0.15),
    subtitle1: y(s, 16, 1.75, 0.15),
    subtitle2: y(a, 14, 1.57, 0.1),
    body1: y(s, 16, 1.5, 0.15),
    body2: y(s, 14, 1.43, 0.15),
    button: y(a, 14, 1.75, 0.4, Yf),
    caption: y(s, 12, 1.66, 0.4),
    overline: y(s, 12, 2.66, 1, Yf),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return wn({
    htmlFontSize: c,
    pxToRem: g,
    fontFamily: n,
    fontSize: r,
    fontWeightLight: o,
    fontWeightRegular: s,
    fontWeightMedium: a,
    fontWeightBold: l,
    ...m
  }, f, {
    clone: !1
    // No need to clone deep
  });
}
const oS = 0.2, iS = 0.14, sS = 0.12;
function yt(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${oS})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${iS})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${sS})`].join(",");
}
const aS = ["none", yt(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), yt(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), yt(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), yt(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), yt(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), yt(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), yt(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), yt(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), yt(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), yt(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), yt(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), yt(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), yt(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), yt(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), yt(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), yt(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), yt(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), yt(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), yt(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), yt(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), yt(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), yt(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), yt(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), yt(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], lS = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, cS = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function Kf(e) {
  return `${Math.round(e)}ms`;
}
function uS(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function dS(e) {
  const t = {
    ...lS,
    ...e.easing
  }, n = {
    ...cS,
    ...e.duration
  };
  return {
    getAutoHeightDuration: uS,
    create: (o = ["all"], s = {}) => {
      const {
        duration: a = n.standard,
        easing: l = t.easeInOut,
        delay: c = 0,
        ...u
      } = s;
      if (process.env.NODE_ENV !== "production") {
        const d = (h) => typeof h == "string", f = (h) => !Number.isNaN(parseFloat(h));
        !d(o) && !Array.isArray(o) && console.error('MUI: Argument "props" must be a string or Array.'), !f(a) && !d(a) && console.error(`MUI: Argument "duration" must be a number or a string but found ${a}.`), d(l) || console.error('MUI: Argument "easing" must be a string.'), !f(c) && !d(c) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof s != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(u).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(u).join(",")}].`);
      }
      return (Array.isArray(o) ? o : [o]).map((d) => `${d} ${typeof a == "string" ? a : Kf(a)} ${l} ${typeof c == "string" ? c : Kf(c)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const fS = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function pS(e) {
  return nr(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function sg(e = {}) {
  const t = {
    ...e
  };
  function n(r) {
    const o = Object.entries(r);
    for (let s = 0; s < o.length; s++) {
      const [a, l] = o[s];
      !pS(l) || a.startsWith("unstable_") ? delete r[a] : nr(l) && (r[a] = {
        ...l
      }, n(r[a]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function Vc(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: r = {},
    spacing: o,
    palette: s = {},
    transitions: a = {},
    typography: l = {},
    shape: c,
    ...u
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : Sr(20));
  const d = Ku(s), f = nl(e);
  let h = wn(f, {
    mixins: nS(f.breakpoints, r),
    palette: d,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: aS.slice(),
    typography: ig(d, l),
    transitions: dS(a),
    zIndex: {
      ...fS
    }
  });
  if (h = wn(h, u), h = t.reduce((g, y) => wn(g, y), h), process.env.NODE_ENV !== "production") {
    const g = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], y = (m, v) => {
      let x;
      for (x in m) {
        const E = m[x];
        if (g.includes(x) && Object.keys(E).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const w = St("", x);
            console.error([`MUI: The \`${v}\` component increases the CSS specificity of the \`${x}\` internal state.`, "You can not override it like this: ", JSON.stringify(m, null, 2), "", `Instead, you need to use the '&.${w}' syntax:`, JSON.stringify({
              root: {
                [`&.${w}`]: E
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          m[x] = {};
        }
      }
    };
    Object.keys(h.components).forEach((m) => {
      const v = h.components[m].styleOverrides;
      v && m.startsWith("Mui") && y(v, m);
    });
  }
  return h.unstable_sxConfig = {
    ...ps,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, h.unstable_sx = function(y) {
    return Lr({
      sx: y,
      theme: this
    });
  }, h.toRuntimeSource = sg, h;
}
function zc(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const mS = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = zc(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function ag(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function lg(e) {
  return e === "dark" ? mS : [];
}
function hS(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: r,
    ...o
  } = e, s = Ku(t);
  return {
    palette: s,
    opacity: {
      ...ag(s.mode),
      ...n
    },
    overlays: r || lg(s.mode),
    ...o
  };
}
function gS(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const yS = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], bS = (e) => (t, n) => {
  const r = e.rootSelector || ":root", o = e.colorSchemeSelector;
  let s = o;
  if (o === "class" && (s = ".%s"), o === "data" && (s = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (s = `[${o}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const a = {};
      return yS(e.cssVarPrefix).forEach((l) => {
        a[l] = n[l], delete n[l];
      }), s === "media" ? {
        [r]: n,
        "@media (prefers-color-scheme: dark)": {
          [r]: a
        }
      } : s ? {
        [s.replace("%s", t)]: a,
        [`${r}, ${s.replace("%s", t)}`]: n
      } : {
        [r]: {
          ...n,
          ...a
        }
      };
    }
    if (s && s !== "media")
      return `${r}, ${s.replace("%s", String(t))}`;
  } else if (t) {
    if (s === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [r]: n
        }
      };
    if (s)
      return s.replace("%s", String(t));
  }
  return r;
};
function vS(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function ce(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function $i(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : Lh(e);
}
function br(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = Ri($i(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function xS(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const Gn = (e) => {
  try {
    return e();
  } catch {
  }
}, wS = (e = "mui") => Bw(e);
function nc(e, t, n, r) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const o = r === "dark" ? "dark" : "light";
  if (!n) {
    e[r] = hS({
      ...t,
      palette: {
        mode: o,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: s,
    ...a
  } = Vc({
    ...n,
    palette: {
      mode: o,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[r] = {
    ...t,
    palette: s,
    opacity: {
      ...ag(o),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || lg(o)
  }, a;
}
function SS(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: r,
    disableCssColorScheme: o = !1,
    cssVarPrefix: s = "mui",
    shouldSkipGeneratingVar: a = gS,
    colorSchemeSelector: l = n.light && n.dark ? "media" : void 0,
    rootSelector: c = ":root",
    ...u
  } = e, d = Object.keys(n)[0], f = r || (n.light && d !== "light" ? "light" : d), h = wS(s), {
    [f]: g,
    light: y,
    dark: m,
    ...v
  } = n, x = {
    ...v
  };
  let E = g;
  if ((f === "dark" && !("dark" in n) || f === "light" && !("light" in n)) && (E = !0), !E)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${f}\` option is either missing or invalid.` : Sr(21, f));
  const w = nc(x, E, u, f);
  y && !x.light && nc(x, y, void 0, "light"), m && !x.dark && nc(x, m, void 0, "dark");
  let S = {
    defaultColorScheme: f,
    ...w,
    cssVarPrefix: s,
    colorSchemeSelector: l,
    rootSelector: c,
    getCssVar: h,
    colorSchemes: x,
    font: {
      ...tS(w.typography),
      ...w.font
    },
    spacing: xS(u.spacing)
  };
  Object.keys(S.colorSchemes).forEach((I) => {
    const p = S.colorSchemes[I].palette, O = (k) => {
      const A = k.split("-"), D = A[1], _ = A[2];
      return h(k, p[D][_]);
    };
    if (p.mode === "light" && (ce(p.common, "background", "#fff"), ce(p.common, "onBackground", "#000")), p.mode === "dark" && (ce(p.common, "background", "#000"), ce(p.common, "onBackground", "#fff")), vS(p, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), p.mode === "light") {
      ce(p.Alert, "errorColor", at(p.error.light, 0.6)), ce(p.Alert, "infoColor", at(p.info.light, 0.6)), ce(p.Alert, "successColor", at(p.success.light, 0.6)), ce(p.Alert, "warningColor", at(p.warning.light, 0.6)), ce(p.Alert, "errorFilledBg", O("palette-error-main")), ce(p.Alert, "infoFilledBg", O("palette-info-main")), ce(p.Alert, "successFilledBg", O("palette-success-main")), ce(p.Alert, "warningFilledBg", O("palette-warning-main")), ce(p.Alert, "errorFilledColor", Gn(() => p.getContrastText(p.error.main))), ce(p.Alert, "infoFilledColor", Gn(() => p.getContrastText(p.info.main))), ce(p.Alert, "successFilledColor", Gn(() => p.getContrastText(p.success.main))), ce(p.Alert, "warningFilledColor", Gn(() => p.getContrastText(p.warning.main))), ce(p.Alert, "errorStandardBg", lt(p.error.light, 0.9)), ce(p.Alert, "infoStandardBg", lt(p.info.light, 0.9)), ce(p.Alert, "successStandardBg", lt(p.success.light, 0.9)), ce(p.Alert, "warningStandardBg", lt(p.warning.light, 0.9)), ce(p.Alert, "errorIconColor", O("palette-error-main")), ce(p.Alert, "infoIconColor", O("palette-info-main")), ce(p.Alert, "successIconColor", O("palette-success-main")), ce(p.Alert, "warningIconColor", O("palette-warning-main")), ce(p.AppBar, "defaultBg", O("palette-grey-100")), ce(p.Avatar, "defaultBg", O("palette-grey-400")), ce(p.Button, "inheritContainedBg", O("palette-grey-300")), ce(p.Button, "inheritContainedHoverBg", O("palette-grey-A100")), ce(p.Chip, "defaultBorder", O("palette-grey-400")), ce(p.Chip, "defaultAvatarColor", O("palette-grey-700")), ce(p.Chip, "defaultIconColor", O("palette-grey-700")), ce(p.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), ce(p.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), ce(p.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), ce(p.LinearProgress, "primaryBg", lt(p.primary.main, 0.62)), ce(p.LinearProgress, "secondaryBg", lt(p.secondary.main, 0.62)), ce(p.LinearProgress, "errorBg", lt(p.error.main, 0.62)), ce(p.LinearProgress, "infoBg", lt(p.info.main, 0.62)), ce(p.LinearProgress, "successBg", lt(p.success.main, 0.62)), ce(p.LinearProgress, "warningBg", lt(p.warning.main, 0.62)), ce(p.Skeleton, "bg", `rgba(${O("palette-text-primaryChannel")} / 0.11)`), ce(p.Slider, "primaryTrack", lt(p.primary.main, 0.62)), ce(p.Slider, "secondaryTrack", lt(p.secondary.main, 0.62)), ce(p.Slider, "errorTrack", lt(p.error.main, 0.62)), ce(p.Slider, "infoTrack", lt(p.info.main, 0.62)), ce(p.Slider, "successTrack", lt(p.success.main, 0.62)), ce(p.Slider, "warningTrack", lt(p.warning.main, 0.62));
      const k = Ds(p.background.default, 0.8);
      ce(p.SnackbarContent, "bg", k), ce(p.SnackbarContent, "color", Gn(() => p.getContrastText(k))), ce(p.SpeedDialAction, "fabHoverBg", Ds(p.background.paper, 0.15)), ce(p.StepConnector, "border", O("palette-grey-400")), ce(p.StepContent, "border", O("palette-grey-400")), ce(p.Switch, "defaultColor", O("palette-common-white")), ce(p.Switch, "defaultDisabledColor", O("palette-grey-100")), ce(p.Switch, "primaryDisabledColor", lt(p.primary.main, 0.62)), ce(p.Switch, "secondaryDisabledColor", lt(p.secondary.main, 0.62)), ce(p.Switch, "errorDisabledColor", lt(p.error.main, 0.62)), ce(p.Switch, "infoDisabledColor", lt(p.info.main, 0.62)), ce(p.Switch, "successDisabledColor", lt(p.success.main, 0.62)), ce(p.Switch, "warningDisabledColor", lt(p.warning.main, 0.62)), ce(p.TableCell, "border", lt(_s(p.divider, 1), 0.88)), ce(p.Tooltip, "bg", _s(p.grey[700], 0.92));
    }
    if (p.mode === "dark") {
      ce(p.Alert, "errorColor", lt(p.error.light, 0.6)), ce(p.Alert, "infoColor", lt(p.info.light, 0.6)), ce(p.Alert, "successColor", lt(p.success.light, 0.6)), ce(p.Alert, "warningColor", lt(p.warning.light, 0.6)), ce(p.Alert, "errorFilledBg", O("palette-error-dark")), ce(p.Alert, "infoFilledBg", O("palette-info-dark")), ce(p.Alert, "successFilledBg", O("palette-success-dark")), ce(p.Alert, "warningFilledBg", O("palette-warning-dark")), ce(p.Alert, "errorFilledColor", Gn(() => p.getContrastText(p.error.dark))), ce(p.Alert, "infoFilledColor", Gn(() => p.getContrastText(p.info.dark))), ce(p.Alert, "successFilledColor", Gn(() => p.getContrastText(p.success.dark))), ce(p.Alert, "warningFilledColor", Gn(() => p.getContrastText(p.warning.dark))), ce(p.Alert, "errorStandardBg", at(p.error.light, 0.9)), ce(p.Alert, "infoStandardBg", at(p.info.light, 0.9)), ce(p.Alert, "successStandardBg", at(p.success.light, 0.9)), ce(p.Alert, "warningStandardBg", at(p.warning.light, 0.9)), ce(p.Alert, "errorIconColor", O("palette-error-main")), ce(p.Alert, "infoIconColor", O("palette-info-main")), ce(p.Alert, "successIconColor", O("palette-success-main")), ce(p.Alert, "warningIconColor", O("palette-warning-main")), ce(p.AppBar, "defaultBg", O("palette-grey-900")), ce(p.AppBar, "darkBg", O("palette-background-paper")), ce(p.AppBar, "darkColor", O("palette-text-primary")), ce(p.Avatar, "defaultBg", O("palette-grey-600")), ce(p.Button, "inheritContainedBg", O("palette-grey-800")), ce(p.Button, "inheritContainedHoverBg", O("palette-grey-700")), ce(p.Chip, "defaultBorder", O("palette-grey-700")), ce(p.Chip, "defaultAvatarColor", O("palette-grey-300")), ce(p.Chip, "defaultIconColor", O("palette-grey-300")), ce(p.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), ce(p.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), ce(p.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), ce(p.LinearProgress, "primaryBg", at(p.primary.main, 0.5)), ce(p.LinearProgress, "secondaryBg", at(p.secondary.main, 0.5)), ce(p.LinearProgress, "errorBg", at(p.error.main, 0.5)), ce(p.LinearProgress, "infoBg", at(p.info.main, 0.5)), ce(p.LinearProgress, "successBg", at(p.success.main, 0.5)), ce(p.LinearProgress, "warningBg", at(p.warning.main, 0.5)), ce(p.Skeleton, "bg", `rgba(${O("palette-text-primaryChannel")} / 0.13)`), ce(p.Slider, "primaryTrack", at(p.primary.main, 0.5)), ce(p.Slider, "secondaryTrack", at(p.secondary.main, 0.5)), ce(p.Slider, "errorTrack", at(p.error.main, 0.5)), ce(p.Slider, "infoTrack", at(p.info.main, 0.5)), ce(p.Slider, "successTrack", at(p.success.main, 0.5)), ce(p.Slider, "warningTrack", at(p.warning.main, 0.5));
      const k = Ds(p.background.default, 0.98);
      ce(p.SnackbarContent, "bg", k), ce(p.SnackbarContent, "color", Gn(() => p.getContrastText(k))), ce(p.SpeedDialAction, "fabHoverBg", Ds(p.background.paper, 0.15)), ce(p.StepConnector, "border", O("palette-grey-600")), ce(p.StepContent, "border", O("palette-grey-600")), ce(p.Switch, "defaultColor", O("palette-grey-300")), ce(p.Switch, "defaultDisabledColor", O("palette-grey-600")), ce(p.Switch, "primaryDisabledColor", at(p.primary.main, 0.55)), ce(p.Switch, "secondaryDisabledColor", at(p.secondary.main, 0.55)), ce(p.Switch, "errorDisabledColor", at(p.error.main, 0.55)), ce(p.Switch, "infoDisabledColor", at(p.info.main, 0.55)), ce(p.Switch, "successDisabledColor", at(p.success.main, 0.55)), ce(p.Switch, "warningDisabledColor", at(p.warning.main, 0.55)), ce(p.TableCell, "border", at(_s(p.divider, 1), 0.68)), ce(p.Tooltip, "bg", _s(p.grey[700], 0.92));
    }
    br(p.background, "default"), br(p.background, "paper"), br(p.common, "background"), br(p.common, "onBackground"), br(p, "divider"), Object.keys(p).forEach((k) => {
      const A = p[k];
      k !== "tonalOffset" && A && typeof A == "object" && (A.main && ce(p[k], "mainChannel", Ri($i(A.main))), A.light && ce(p[k], "lightChannel", Ri($i(A.light))), A.dark && ce(p[k], "darkChannel", Ri($i(A.dark))), A.contrastText && ce(p[k], "contrastTextChannel", Ri($i(A.contrastText))), k === "text" && (br(p[k], "primary"), br(p[k], "secondary")), k === "action" && (A.active && br(p[k], "active"), A.selected && br(p[k], "selected")));
    });
  }), S = t.reduce((I, p) => wn(I, p), S);
  const b = {
    prefix: s,
    disableCssColorScheme: o,
    shouldSkipGeneratingVar: a,
    getSelector: bS(S)
  }, {
    vars: T,
    generateThemeVars: R,
    generateStyleSheets: $
  } = Lw(S, b);
  return S.vars = T, Object.entries(S.colorSchemes[S.defaultColorScheme]).forEach(([I, p]) => {
    S[I] = p;
  }), S.generateThemeVars = R, S.generateStyleSheets = $, S.generateSpacing = function() {
    return Rh(u.spacing, Bu(this));
  }, S.getColorSchemeSelector = Vw(l), S.spacing = S.generateSpacing(), S.shouldSkipGeneratingVar = a, S.unstable_sxConfig = {
    ...ps,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, S.unstable_sx = function(p) {
    return Lr({
      sx: p,
      theme: this
    });
  }, S.toRuntimeSource = sg, S;
}
function Xf(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: Ku({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function sl(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: r = !1,
    colorSchemes: o = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: s = n == null ? void 0 : n.mode,
    ...a
  } = e, l = s || "light", c = o == null ? void 0 : o[l], u = {
    ...o,
    ...n ? {
      [l]: {
        ...typeof c != "boolean" && c,
        palette: n
      }
    } : void 0
  };
  if (r === !1) {
    if (!("colorSchemes" in e))
      return Vc(e, ...t);
    let d = n;
    "palette" in e || u[l] && (u[l] !== !0 ? d = u[l].palette : l === "dark" && (d = {
      mode: "dark"
    }));
    const f = Vc({
      ...e,
      palette: d
    }, ...t);
    return f.defaultColorScheme = l, f.colorSchemes = u, f.palette.mode === "light" && (f.colorSchemes.light = {
      ...u.light !== !0 && u.light,
      palette: f.palette
    }, Xf(f, "dark", u.dark)), f.palette.mode === "dark" && (f.colorSchemes.dark = {
      ...u.dark !== !0 && u.dark,
      palette: f.palette
    }, Xf(f, "light", u.light)), f;
  }
  return !n && !("light" in u) && l === "light" && (u.light = !0), SS({
    ...a,
    colorSchemes: u,
    defaultColorScheme: l,
    ...typeof r != "boolean" && r
  }, ...t);
}
const Xu = sl();
function Ir() {
  const e = rl(Xu);
  return process.env.NODE_ENV !== "production" && C.useDebugValue(e), e[Hn] || e;
}
function TS(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const hr = (e) => TS(e) && e !== "classes", Me = _h({
  themeId: Hn,
  defaultTheme: Xu,
  rootShouldForwardProp: hr
});
function rc({
  theme: e,
  ...t
}) {
  const n = Hn in e ? e[Hn] : void 0;
  return /* @__PURE__ */ P(Xi, {
    ...t,
    themeId: n ? Hn : void 0,
    theme: n || e
  });
}
const Bs = {
  colorSchemeStorageKey: "mui-color-scheme",
  defaultLightColorScheme: "light",
  defaultDarkColorScheme: "dark",
  modeStorageKey: "mui-mode"
}, {
  CssVarsProvider: ES
} = Dw({
  themeId: Hn,
  // @ts-ignore ignore module augmentation tests
  theme: () => sl({
    cssVariables: !0
  }),
  colorSchemeStorageKey: Bs.colorSchemeStorageKey,
  modeStorageKey: Bs.modeStorageKey,
  defaultColorScheme: {
    light: Bs.defaultLightColorScheme,
    dark: Bs.defaultDarkColorScheme
  },
  resolveTheme: (e) => {
    const t = {
      ...e,
      typography: ig(e.palette, e.typography)
    };
    return t.unstable_sx = function(r) {
      return Lr({
        sx: r,
        theme: this
      });
    }, t;
  }
}), CS = ES;
function OS({
  theme: e,
  ...t
}) {
  if (typeof e == "function")
    return /* @__PURE__ */ P(rc, {
      theme: e,
      ...t
    });
  const n = Hn in e ? e[Hn] : e;
  return "colorSchemes" in n ? /* @__PURE__ */ P(CS, {
    theme: e,
    ...t
  }) : "vars" in n ? /* @__PURE__ */ P(rc, {
    theme: e,
    ...t
  }) : /* @__PURE__ */ P(rc, {
    theme: {
      ...e,
      vars: null
    },
    ...t
  });
}
const RS = $t("MuiBox", ["root"]), $S = sl(), Cr = qx({
  themeId: Hn,
  defaultTheme: $S,
  defaultClassName: RS.root,
  generateClassName: Ph.generate
});
process.env.NODE_ENV !== "production" && (Cr.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
const cg = Object.freeze(
  {
    left: 0,
    top: 0,
    width: 16,
    height: 16
  }
), ba = Object.freeze({
  rotate: 0,
  vFlip: !1,
  hFlip: !1
}), Qu = Object.freeze({
  ...cg,
  ...ba
}), Wc = Object.freeze({
  ...Qu,
  body: "",
  hidden: !1
});
function kS(e, t) {
  const n = {};
  !e.hFlip != !t.hFlip && (n.hFlip = !0), !e.vFlip != !t.vFlip && (n.vFlip = !0);
  const r = ((e.rotate || 0) + (t.rotate || 0)) % 4;
  return r && (n.rotate = r), n;
}
function Qf(e, t) {
  const n = kS(e, t);
  for (const r in Wc)
    r in ba ? r in e && !(r in n) && (n[r] = ba[r]) : r in t ? n[r] = t[r] : r in e && (n[r] = e[r]);
  return n;
}
function PS(e, t) {
  const n = e.icons, r = e.aliases || /* @__PURE__ */ Object.create(null), o = /* @__PURE__ */ Object.create(null);
  function s(a) {
    if (n[a])
      return o[a] = [];
    if (!(a in o)) {
      o[a] = null;
      const l = r[a] && r[a].parent, c = l && s(l);
      c && (o[a] = [l].concat(c));
    }
    return o[a];
  }
  return Object.keys(n).concat(Object.keys(r)).forEach(s), o;
}
function IS(e, t, n) {
  const r = e.icons, o = e.aliases || /* @__PURE__ */ Object.create(null);
  let s = {};
  function a(l) {
    s = Qf(
      r[l] || o[l],
      s
    );
  }
  return a(t), n.forEach(a), Qf(e, s);
}
function ug(e, t) {
  const n = [];
  if (typeof e != "object" || typeof e.icons != "object")
    return n;
  e.not_found instanceof Array && e.not_found.forEach((o) => {
    t(o, null), n.push(o);
  });
  const r = PS(e);
  for (const o in r) {
    const s = r[o];
    s && (t(o, IS(e, o, s)), n.push(o));
  }
  return n;
}
const NS = {
  provider: "",
  aliases: {},
  not_found: {},
  ...cg
};
function oc(e, t) {
  for (const n in t)
    if (n in e && typeof e[n] != typeof t[n])
      return !1;
  return !0;
}
function dg(e) {
  if (typeof e != "object" || e === null)
    return null;
  const t = e;
  if (typeof t.prefix != "string" || !e.icons || typeof e.icons != "object" || !oc(e, NS))
    return null;
  const n = t.icons;
  for (const o in n) {
    const s = n[o];
    if (
      // Name cannot be empty
      !o || // Must have body
      typeof s.body != "string" || // Check other props
      !oc(
        s,
        Wc
      )
    )
      return null;
  }
  const r = t.aliases || /* @__PURE__ */ Object.create(null);
  for (const o in r) {
    const s = r[o], a = s.parent;
    if (
      // Name cannot be empty
      !o || // Parent must be set and point to existing icon
      typeof a != "string" || !n[a] && !r[a] || // Check other props
      !oc(
        s,
        Wc
      )
    )
      return null;
  }
  return t;
}
const fg = /^[a-z0-9]+(-[a-z0-9]+)*$/, al = (e, t, n, r = "") => {
  const o = e.split(":");
  if (e.slice(0, 1) === "@") {
    if (o.length < 2 || o.length > 3)
      return null;
    r = o.shift().slice(1);
  }
  if (o.length > 3 || !o.length)
    return null;
  if (o.length > 1) {
    const l = o.pop(), c = o.pop(), u = {
      // Allow provider without '@': "provider:prefix:name"
      provider: o.length > 0 ? o[0] : r,
      prefix: c,
      name: l
    };
    return t && !oa(u) ? null : u;
  }
  const s = o[0], a = s.split("-");
  if (a.length > 1) {
    const l = {
      provider: r,
      prefix: a.shift(),
      name: a.join("-")
    };
    return t && !oa(l) ? null : l;
  }
  if (n && r === "") {
    const l = {
      provider: r,
      prefix: "",
      name: s
    };
    return t && !oa(l, n) ? null : l;
  }
  return null;
}, oa = (e, t) => e ? !!// Check prefix: cannot be empty, unless allowSimpleName is enabled
// Check name: cannot be empty
((t && e.prefix === "" || e.prefix) && e.name) : !1, Jf = /* @__PURE__ */ Object.create(null);
function AS(e, t) {
  return {
    provider: e,
    prefix: t,
    icons: /* @__PURE__ */ Object.create(null),
    missing: /* @__PURE__ */ new Set()
  };
}
function Wo(e, t) {
  const n = Jf[e] || (Jf[e] = /* @__PURE__ */ Object.create(null));
  return n[t] || (n[t] = AS(e, t));
}
function pg(e, t) {
  return dg(t) ? ug(t, (n, r) => {
    r ? e.icons[n] = r : e.missing.add(n);
  }) : [];
}
function MS(e, t, n) {
  try {
    if (typeof n.body == "string")
      return e.icons[t] = { ...n }, !0;
  } catch {
  }
  return !1;
}
let Ji = !1;
function mg(e) {
  return typeof e == "boolean" && (Ji = e), Ji;
}
function Zf(e) {
  const t = typeof e == "string" ? al(e, !0, Ji) : e;
  if (t) {
    const n = Wo(t.provider, t.prefix), r = t.name;
    return n.icons[r] || (n.missing.has(r) ? null : void 0);
  }
}
function _S(e, t) {
  const n = al(e, !0, Ji);
  if (!n)
    return !1;
  const r = Wo(n.provider, n.prefix);
  return t ? MS(r, n.name, t) : (r.missing.add(n.name), !0);
}
function DS(e, t) {
  if (typeof e != "object")
    return !1;
  if (typeof t != "string" && (t = e.provider || ""), Ji && !t && !e.prefix) {
    let o = !1;
    return dg(e) && (e.prefix = "", ug(e, (s, a) => {
      _S(s, a) && (o = !0);
    })), o;
  }
  const n = e.prefix;
  if (!oa({
    prefix: n,
    name: "a"
  }))
    return !1;
  const r = Wo(t, n);
  return !!pg(r, e);
}
const hg = Object.freeze({
  width: null,
  height: null
}), gg = Object.freeze({
  // Dimensions
  ...hg,
  // Transformations
  ...ba
}), BS = /(-?[0-9.]*[0-9]+[0-9.]*)/g, FS = /^-?[0-9.]*[0-9]+[0-9.]*$/g;
function ep(e, t, n) {
  if (t === 1)
    return e;
  if (n = n || 100, typeof e == "number")
    return Math.ceil(e * t * n) / n;
  if (typeof e != "string")
    return e;
  const r = e.split(BS);
  if (r === null || !r.length)
    return e;
  const o = [];
  let s = r.shift(), a = FS.test(s);
  for (; ; ) {
    if (a) {
      const l = parseFloat(s);
      isNaN(l) ? o.push(s) : o.push(Math.ceil(l * t * n) / n);
    } else
      o.push(s);
    if (s = r.shift(), s === void 0)
      return o.join("");
    a = !a;
  }
}
function jS(e, t = "defs") {
  let n = "";
  const r = e.indexOf("<" + t);
  for (; r >= 0; ) {
    const o = e.indexOf(">", r), s = e.indexOf("</" + t);
    if (o === -1 || s === -1)
      break;
    const a = e.indexOf(">", s);
    if (a === -1)
      break;
    n += e.slice(o + 1, s).trim(), e = e.slice(0, r).trim() + e.slice(a + 1);
  }
  return {
    defs: n,
    content: e
  };
}
function LS(e, t) {
  return e ? "<defs>" + e + "</defs>" + t : t;
}
function VS(e, t, n) {
  const r = jS(e);
  return LS(r.defs, t + r.content + n);
}
const zS = (e) => e === "unset" || e === "undefined" || e === "none";
function WS(e, t) {
  const n = {
    ...Qu,
    ...e
  }, r = {
    ...gg,
    ...t
  }, o = {
    left: n.left,
    top: n.top,
    width: n.width,
    height: n.height
  };
  let s = n.body;
  [n, r].forEach((m) => {
    const v = [], x = m.hFlip, E = m.vFlip;
    let w = m.rotate;
    x ? E ? w += 2 : (v.push(
      "translate(" + (o.width + o.left).toString() + " " + (0 - o.top).toString() + ")"
    ), v.push("scale(-1 1)"), o.top = o.left = 0) : E && (v.push(
      "translate(" + (0 - o.left).toString() + " " + (o.height + o.top).toString() + ")"
    ), v.push("scale(1 -1)"), o.top = o.left = 0);
    let S;
    switch (w < 0 && (w -= Math.floor(w / 4) * 4), w = w % 4, w) {
      case 1:
        S = o.height / 2 + o.top, v.unshift(
          "rotate(90 " + S.toString() + " " + S.toString() + ")"
        );
        break;
      case 2:
        v.unshift(
          "rotate(180 " + (o.width / 2 + o.left).toString() + " " + (o.height / 2 + o.top).toString() + ")"
        );
        break;
      case 3:
        S = o.width / 2 + o.left, v.unshift(
          "rotate(-90 " + S.toString() + " " + S.toString() + ")"
        );
        break;
    }
    w % 2 === 1 && (o.left !== o.top && (S = o.left, o.left = o.top, o.top = S), o.width !== o.height && (S = o.width, o.width = o.height, o.height = S)), v.length && (s = VS(
      s,
      '<g transform="' + v.join(" ") + '">',
      "</g>"
    ));
  });
  const a = r.width, l = r.height, c = o.width, u = o.height;
  let d, f;
  a === null ? (f = l === null ? "1em" : l === "auto" ? u : l, d = ep(f, c / u)) : (d = a === "auto" ? c : a, f = l === null ? ep(d, u / c) : l === "auto" ? u : l);
  const h = {}, g = (m, v) => {
    zS(v) || (h[m] = v.toString());
  };
  g("width", d), g("height", f);
  const y = [o.left, o.top, c, u];
  return h.viewBox = y.join(" "), {
    attributes: h,
    viewBox: y,
    body: s
  };
}
const US = /\sid="(\S+)"/g, HS = "IconifyId" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);
let qS = 0;
function YS(e, t = HS) {
  const n = [];
  let r;
  for (; r = US.exec(e); )
    n.push(r[1]);
  if (!n.length)
    return e;
  const o = "suffix" + (Math.random() * 16777216 | Date.now()).toString(16);
  return n.forEach((s) => {
    const a = typeof t == "function" ? t(s) : t + (qS++).toString(), l = s.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    e = e.replace(
      // Allowed characters before id: [#;"]
      // Allowed characters after id: [)"], .[a-z]
      new RegExp('([#;"])(' + l + ')([")]|\\.[a-z])', "g"),
      "$1" + a + o + "$3"
    );
  }), e = e.replace(new RegExp(o, "g"), ""), e;
}
const Uc = /* @__PURE__ */ Object.create(null);
function GS(e, t) {
  Uc[e] = t;
}
function Hc(e) {
  return Uc[e] || Uc[""];
}
function Ju(e) {
  let t;
  if (typeof e.resources == "string")
    t = [e.resources];
  else if (t = e.resources, !(t instanceof Array) || !t.length)
    return null;
  return {
    // API hosts
    resources: t,
    // Root path
    path: e.path || "/",
    // URL length limit
    maxURL: e.maxURL || 500,
    // Timeout before next host is used.
    rotate: e.rotate || 750,
    // Timeout before failing query.
    timeout: e.timeout || 5e3,
    // Randomise default API end point.
    random: e.random === !0,
    // Start index
    index: e.index || 0,
    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).
    dataAfterTimeout: e.dataAfterTimeout !== !1
  };
}
const Zu = /* @__PURE__ */ Object.create(null), hi = [
  "https://api.simplesvg.com",
  "https://api.unisvg.com"
], ia = [];
for (; hi.length > 0; )
  hi.length === 1 || Math.random() > 0.5 ? ia.push(hi.shift()) : ia.push(hi.pop());
Zu[""] = Ju({
  resources: ["https://api.iconify.design"].concat(ia)
});
function KS(e, t) {
  const n = Ju(t);
  return n === null ? !1 : (Zu[e] = n, !0);
}
function ed(e) {
  return Zu[e];
}
const XS = () => {
  let e;
  try {
    if (e = fetch, typeof e == "function")
      return e;
  } catch {
  }
};
let tp = XS();
function QS(e, t) {
  const n = ed(e);
  if (!n)
    return 0;
  let r;
  if (!n.maxURL)
    r = 0;
  else {
    let o = 0;
    n.resources.forEach((a) => {
      o = Math.max(o, a.length);
    });
    const s = t + ".json?icons=";
    r = n.maxURL - o - n.path.length - s.length;
  }
  return r;
}
function JS(e) {
  return e === 404;
}
const ZS = (e, t, n) => {
  const r = [], o = QS(e, t), s = "icons";
  let a = {
    type: s,
    provider: e,
    prefix: t,
    icons: []
  }, l = 0;
  return n.forEach((c, u) => {
    l += c.length + 1, l >= o && u > 0 && (r.push(a), a = {
      type: s,
      provider: e,
      prefix: t,
      icons: []
    }, l = c.length), a.icons.push(c);
  }), r.push(a), r;
};
function eT(e) {
  if (typeof e == "string") {
    const t = ed(e);
    if (t)
      return t.path;
  }
  return "/";
}
const tT = (e, t, n) => {
  if (!tp) {
    n("abort", 424);
    return;
  }
  let r = eT(t.provider);
  switch (t.type) {
    case "icons": {
      const s = t.prefix, l = t.icons.join(","), c = new URLSearchParams({
        icons: l
      });
      r += s + ".json?" + c.toString();
      break;
    }
    case "custom": {
      const s = t.uri;
      r += s.slice(0, 1) === "/" ? s.slice(1) : s;
      break;
    }
    default:
      n("abort", 400);
      return;
  }
  let o = 503;
  tp(e + r).then((s) => {
    const a = s.status;
    if (a !== 200) {
      setTimeout(() => {
        n(JS(a) ? "abort" : "next", a);
      });
      return;
    }
    return o = 501, s.json();
  }).then((s) => {
    if (typeof s != "object" || s === null) {
      setTimeout(() => {
        s === 404 ? n("abort", s) : n("next", o);
      });
      return;
    }
    setTimeout(() => {
      n("success", s);
    });
  }).catch(() => {
    n("next", o);
  });
}, nT = {
  prepare: ZS,
  send: tT
};
function rT(e) {
  const t = {
    loaded: [],
    missing: [],
    pending: []
  }, n = /* @__PURE__ */ Object.create(null);
  e.sort((o, s) => o.provider !== s.provider ? o.provider.localeCompare(s.provider) : o.prefix !== s.prefix ? o.prefix.localeCompare(s.prefix) : o.name.localeCompare(s.name));
  let r = {
    provider: "",
    prefix: "",
    name: ""
  };
  return e.forEach((o) => {
    if (r.name === o.name && r.prefix === o.prefix && r.provider === o.provider)
      return;
    r = o;
    const s = o.provider, a = o.prefix, l = o.name, c = n[s] || (n[s] = /* @__PURE__ */ Object.create(null)), u = c[a] || (c[a] = Wo(s, a));
    let d;
    l in u.icons ? d = t.loaded : a === "" || u.missing.has(l) ? d = t.missing : d = t.pending;
    const f = {
      provider: s,
      prefix: a,
      name: l
    };
    d.push(f);
  }), t;
}
function yg(e, t) {
  e.forEach((n) => {
    const r = n.loaderCallbacks;
    r && (n.loaderCallbacks = r.filter((o) => o.id !== t));
  });
}
function oT(e) {
  e.pendingCallbacksFlag || (e.pendingCallbacksFlag = !0, setTimeout(() => {
    e.pendingCallbacksFlag = !1;
    const t = e.loaderCallbacks ? e.loaderCallbacks.slice(0) : [];
    if (!t.length)
      return;
    let n = !1;
    const r = e.provider, o = e.prefix;
    t.forEach((s) => {
      const a = s.icons, l = a.pending.length;
      a.pending = a.pending.filter((c) => {
        if (c.prefix !== o)
          return !0;
        const u = c.name;
        if (e.icons[u])
          a.loaded.push({
            provider: r,
            prefix: o,
            name: u
          });
        else if (e.missing.has(u))
          a.missing.push({
            provider: r,
            prefix: o,
            name: u
          });
        else
          return n = !0, !0;
        return !1;
      }), a.pending.length !== l && (n || yg([e], s.id), s.callback(
        a.loaded.slice(0),
        a.missing.slice(0),
        a.pending.slice(0),
        s.abort
      ));
    });
  }));
}
let iT = 0;
function sT(e, t, n) {
  const r = iT++, o = yg.bind(null, n, r);
  if (!t.pending.length)
    return o;
  const s = {
    id: r,
    icons: t,
    callback: e,
    abort: o
  };
  return n.forEach((a) => {
    (a.loaderCallbacks || (a.loaderCallbacks = [])).push(s);
  }), o;
}
function aT(e, t = !0, n = !1) {
  const r = [];
  return e.forEach((o) => {
    const s = typeof o == "string" ? al(o, t, n) : o;
    s && r.push(s);
  }), r;
}
var lT = {
  resources: [],
  index: 0,
  timeout: 2e3,
  rotate: 750,
  random: !1,
  dataAfterTimeout: !1
};
function cT(e, t, n, r) {
  const o = e.resources.length, s = e.random ? Math.floor(Math.random() * o) : e.index;
  let a;
  if (e.random) {
    let T = e.resources.slice(0);
    for (a = []; T.length > 1; ) {
      const R = Math.floor(Math.random() * T.length);
      a.push(T[R]), T = T.slice(0, R).concat(T.slice(R + 1));
    }
    a = a.concat(T);
  } else
    a = e.resources.slice(s).concat(e.resources.slice(0, s));
  const l = Date.now();
  let c = "pending", u = 0, d, f = null, h = [], g = [];
  typeof r == "function" && g.push(r);
  function y() {
    f && (clearTimeout(f), f = null);
  }
  function m() {
    c === "pending" && (c = "aborted"), y(), h.forEach((T) => {
      T.status === "pending" && (T.status = "aborted");
    }), h = [];
  }
  function v(T, R) {
    R && (g = []), typeof T == "function" && g.push(T);
  }
  function x() {
    return {
      startTime: l,
      payload: t,
      status: c,
      queriesSent: u,
      queriesPending: h.length,
      subscribe: v,
      abort: m
    };
  }
  function E() {
    c = "failed", g.forEach((T) => {
      T(void 0, d);
    });
  }
  function w() {
    h.forEach((T) => {
      T.status === "pending" && (T.status = "aborted");
    }), h = [];
  }
  function S(T, R, $) {
    const I = R !== "success";
    switch (h = h.filter((p) => p !== T), c) {
      case "pending":
        break;
      case "failed":
        if (I || !e.dataAfterTimeout)
          return;
        break;
      default:
        return;
    }
    if (R === "abort") {
      d = $, E();
      return;
    }
    if (I) {
      d = $, h.length || (a.length ? b() : E());
      return;
    }
    if (y(), w(), !e.random) {
      const p = e.resources.indexOf(T.resource);
      p !== -1 && p !== e.index && (e.index = p);
    }
    c = "completed", g.forEach((p) => {
      p($);
    });
  }
  function b() {
    if (c !== "pending")
      return;
    y();
    const T = a.shift();
    if (T === void 0) {
      if (h.length) {
        f = setTimeout(() => {
          y(), c === "pending" && (w(), E());
        }, e.timeout);
        return;
      }
      E();
      return;
    }
    const R = {
      status: "pending",
      resource: T,
      callback: ($, I) => {
        S(R, $, I);
      }
    };
    h.push(R), u++, f = setTimeout(b, e.rotate), n(T, t, R.callback);
  }
  return setTimeout(b), x;
}
function bg(e) {
  const t = {
    ...lT,
    ...e
  };
  let n = [];
  function r() {
    n = n.filter((l) => l().status === "pending");
  }
  function o(l, c, u) {
    const d = cT(
      t,
      l,
      c,
      (f, h) => {
        r(), u && u(f, h);
      }
    );
    return n.push(d), d;
  }
  function s(l) {
    return n.find((c) => l(c)) || null;
  }
  return {
    query: o,
    find: s,
    setIndex: (l) => {
      t.index = l;
    },
    getIndex: () => t.index,
    cleanup: r
  };
}
function np() {
}
const ic = /* @__PURE__ */ Object.create(null);
function uT(e) {
  if (!ic[e]) {
    const t = ed(e);
    if (!t)
      return;
    const n = bg(t), r = {
      config: t,
      redundancy: n
    };
    ic[e] = r;
  }
  return ic[e];
}
function dT(e, t, n) {
  let r, o;
  if (typeof e == "string") {
    const s = Hc(e);
    if (!s)
      return n(void 0, 424), np;
    o = s.send;
    const a = uT(e);
    a && (r = a.redundancy);
  } else {
    const s = Ju(e);
    if (s) {
      r = bg(s);
      const a = e.resources ? e.resources[0] : "", l = Hc(a);
      l && (o = l.send);
    }
  }
  return !r || !o ? (n(void 0, 424), np) : r.query(t, o, n)().abort;
}
function rp() {
}
function fT(e) {
  e.iconsLoaderFlag || (e.iconsLoaderFlag = !0, setTimeout(() => {
    e.iconsLoaderFlag = !1, oT(e);
  }));
}
function pT(e) {
  const t = [], n = [];
  return e.forEach((r) => {
    (r.match(fg) ? t : n).push(r);
  }), {
    valid: t,
    invalid: n
  };
}
function gi(e, t, n) {
  function r() {
    const o = e.pendingIcons;
    t.forEach((s) => {
      o && o.delete(s), e.icons[s] || e.missing.add(s);
    });
  }
  if (n && typeof n == "object")
    try {
      if (!pg(e, n).length) {
        r();
        return;
      }
    } catch (o) {
      console.error(o);
    }
  r(), fT(e);
}
function op(e, t) {
  e instanceof Promise ? e.then((n) => {
    t(n);
  }).catch(() => {
    t(null);
  }) : t(e);
}
function mT(e, t) {
  e.iconsToLoad ? e.iconsToLoad = e.iconsToLoad.concat(t).sort() : e.iconsToLoad = t, e.iconsQueueFlag || (e.iconsQueueFlag = !0, setTimeout(() => {
    e.iconsQueueFlag = !1;
    const { provider: n, prefix: r } = e, o = e.iconsToLoad;
    if (delete e.iconsToLoad, !o || !o.length)
      return;
    const s = e.loadIcon;
    if (e.loadIcons && (o.length > 1 || !s)) {
      op(
        e.loadIcons(o, r, n),
        (d) => {
          gi(e, o, d);
        }
      );
      return;
    }
    if (s) {
      o.forEach((d) => {
        const f = s(d, r, n);
        op(f, (h) => {
          const g = h ? {
            prefix: r,
            icons: {
              [d]: h
            }
          } : null;
          gi(e, [d], g);
        });
      });
      return;
    }
    const { valid: a, invalid: l } = pT(o);
    if (l.length && gi(e, l, null), !a.length)
      return;
    const c = r.match(fg) ? Hc(n) : null;
    if (!c) {
      gi(e, a, null);
      return;
    }
    c.prepare(n, r, a).forEach((d) => {
      dT(n, d, (f) => {
        gi(e, d.icons, f);
      });
    });
  }));
}
const hT = (e, t) => {
  const n = aT(e, !0, mg()), r = rT(n);
  if (!r.pending.length) {
    let c = !0;
    return t && setTimeout(() => {
      c && t(
        r.loaded,
        r.missing,
        r.pending,
        rp
      );
    }), () => {
      c = !1;
    };
  }
  const o = /* @__PURE__ */ Object.create(null), s = [];
  let a, l;
  return r.pending.forEach((c) => {
    const { provider: u, prefix: d } = c;
    if (d === l && u === a)
      return;
    a = u, l = d, s.push(Wo(u, d));
    const f = o[u] || (o[u] = /* @__PURE__ */ Object.create(null));
    f[d] || (f[d] = []);
  }), r.pending.forEach((c) => {
    const { provider: u, prefix: d, name: f } = c, h = Wo(u, d), g = h.pendingIcons || (h.pendingIcons = /* @__PURE__ */ new Set());
    g.has(f) || (g.add(f), o[u][d].push(f));
  }), s.forEach((c) => {
    const u = o[c.provider][c.prefix];
    u.length && mT(c, u);
  }), t ? sT(t, r, s) : rp;
};
function gT(e, t) {
  const n = {
    ...e
  };
  for (const r in t) {
    const o = t[r], s = typeof o;
    r in hg ? (o === null || o && (s === "string" || s === "number")) && (n[r] = o) : s === typeof n[r] && (n[r] = r === "rotate" ? o % 4 : o);
  }
  return n;
}
const yT = /[\s,]+/;
function bT(e, t) {
  t.split(yT).forEach((n) => {
    switch (n.trim()) {
      case "horizontal":
        e.hFlip = !0;
        break;
      case "vertical":
        e.vFlip = !0;
        break;
    }
  });
}
function vT(e, t = 0) {
  const n = e.replace(/^-?[0-9.]*/, "");
  function r(o) {
    for (; o < 0; )
      o += 4;
    return o % 4;
  }
  if (n === "") {
    const o = parseInt(e);
    return isNaN(o) ? 0 : r(o);
  } else if (n !== e) {
    let o = 0;
    switch (n) {
      case "%":
        o = 25;
        break;
      case "deg":
        o = 90;
    }
    if (o) {
      let s = parseFloat(e.slice(0, e.length - n.length));
      return isNaN(s) ? 0 : (s = s / o, s % 1 === 0 ? r(s) : 0);
    }
  }
  return t;
}
function xT(e, t) {
  let n = e.indexOf("xlink:") === -1 ? "" : ' xmlns:xlink="http://www.w3.org/1999/xlink"';
  for (const r in t)
    n += " " + r + '="' + t[r] + '"';
  return '<svg xmlns="http://www.w3.org/2000/svg"' + n + ">" + e + "</svg>";
}
function wT(e) {
  return e.replace(/"/g, "'").replace(/%/g, "%25").replace(/#/g, "%23").replace(/</g, "%3C").replace(/>/g, "%3E").replace(/\s+/g, " ");
}
function ST(e) {
  return "data:image/svg+xml," + wT(e);
}
function TT(e) {
  return 'url("' + ST(e) + '")';
}
let _i;
function ET() {
  try {
    _i = window.trustedTypes.createPolicy("iconify", {
      // eslint-disable-next-line @typescript-eslint/no-unsafe-return
      createHTML: (e) => e
    });
  } catch {
    _i = null;
  }
}
function CT(e) {
  return _i === void 0 && ET(), _i ? _i.createHTML(e) : e;
}
const vg = {
  ...gg,
  inline: !1
}, OT = {
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink",
  "aria-hidden": !0,
  role: "img"
}, RT = {
  display: "inline-block"
}, qc = {
  backgroundColor: "currentColor"
}, xg = {
  backgroundColor: "transparent"
}, ip = {
  Image: "var(--svg)",
  Repeat: "no-repeat",
  Size: "100% 100%"
}, sp = {
  WebkitMask: qc,
  mask: qc,
  background: xg
};
for (const e in sp) {
  const t = sp[e];
  for (const n in ip)
    t[e + n] = ip[n];
}
const $T = {
  ...vg,
  inline: !0
};
function ap(e) {
  return e + (e.match(/^[-0-9.]+$/) ? "px" : "");
}
const kT = (e, t, n) => {
  const r = t.inline ? $T : vg, o = gT(r, t), s = t.mode || "svg", a = {}, l = t.style || {}, c = {
    ...s === "svg" ? OT : {}
  };
  if (n) {
    const v = al(n, !1, !0);
    if (v) {
      const x = ["iconify"], E = [
        "provider",
        "prefix"
      ];
      for (const w of E)
        v[w] && x.push("iconify--" + v[w]);
      c.className = x.join(" ");
    }
  }
  for (let v in t) {
    const x = t[v];
    if (x !== void 0)
      switch (v) {
        // Properties to ignore
        case "icon":
        case "style":
        case "children":
        case "onLoad":
        case "mode":
        case "ssr":
          break;
        // Forward ref
        case "_ref":
          c.ref = x;
          break;
        // Merge class names
        case "className":
          c[v] = (c[v] ? c[v] + " " : "") + x;
          break;
        // Boolean attributes
        case "inline":
        case "hFlip":
        case "vFlip":
          o[v] = x === !0 || x === "true" || x === 1;
          break;
        // Flip as string: 'horizontal,vertical'
        case "flip":
          typeof x == "string" && bT(o, x);
          break;
        // Color: copy to style
        case "color":
          a.color = x;
          break;
        // Rotation as string
        case "rotate":
          typeof x == "string" ? o[v] = vT(x) : typeof x == "number" && (o[v] = x);
          break;
        // Remove aria-hidden
        case "ariaHidden":
        case "aria-hidden":
          x !== !0 && x !== "true" && delete c["aria-hidden"];
          break;
        // Copy missing property if it does not exist in customisations
        default:
          r[v] === void 0 && (c[v] = x);
      }
  }
  const u = WS(e, o), d = u.attributes;
  if (o.inline && (a.verticalAlign = "-0.125em"), s === "svg") {
    c.style = {
      ...a,
      ...l
    }, Object.assign(c, d);
    let v = 0, x = t.id;
    return typeof x == "string" && (x = x.replace(/-/g, "_")), c.dangerouslySetInnerHTML = {
      __html: CT(YS(u.body, x ? () => x + "ID" + v++ : "iconifyReact"))
    }, lo("svg", c);
  }
  const { body: f, width: h, height: g } = e, y = s === "mask" || (s === "bg" ? !1 : f.indexOf("currentColor") !== -1), m = xT(f, {
    ...d,
    width: h + "",
    height: g + ""
  });
  return c.style = {
    ...a,
    "--svg": TT(m),
    width: ap(d.width),
    height: ap(d.height),
    ...RT,
    ...y ? qc : xg,
    ...l
  }, lo("span", c);
};
mg(!0);
GS("", nT);
if (typeof document < "u" && typeof window < "u") {
  const e = window;
  if (e.IconifyPreload !== void 0) {
    const t = e.IconifyPreload, n = "Invalid IconifyPreload syntax.";
    typeof t == "object" && t !== null && (t instanceof Array ? t : [t]).forEach((r) => {
      try {
        // Check if item is an object and not null/array
        (typeof r != "object" || r === null || r instanceof Array || // Check for 'icons' and 'prefix'
        typeof r.icons != "object" || typeof r.prefix != "string" || // Add icon set
        !DS(r)) && console.error(n);
      } catch {
        console.error(n);
      }
    });
  }
  if (e.IconifyProviders !== void 0) {
    const t = e.IconifyProviders;
    if (typeof t == "object" && t !== null)
      for (let n in t) {
        const r = "IconifyProviders[" + n + "] is invalid.";
        try {
          const o = t[n];
          if (typeof o != "object" || !o || o.resources === void 0)
            continue;
          KS(n, o) || console.error(r);
        } catch {
          console.error(r);
        }
      }
  }
}
function wg(e) {
  const [t, n] = jr(!!e.ssr), [r, o] = jr({});
  function s(g) {
    if (g) {
      const y = e.icon;
      if (typeof y == "object")
        return {
          name: "",
          data: y
        };
      const m = Zf(y);
      if (m)
        return {
          name: y,
          data: m
        };
    }
    return {
      name: ""
    };
  }
  const [a, l] = jr(s(!!e.ssr));
  function c() {
    const g = r.callback;
    g && (g(), o({}));
  }
  function u(g) {
    if (JSON.stringify(a) !== JSON.stringify(g))
      return c(), l(g), !0;
  }
  function d() {
    var g;
    const y = e.icon;
    if (typeof y == "object") {
      u({
        name: "",
        data: y
      });
      return;
    }
    const m = Zf(y);
    if (u({
      name: y,
      data: m
    }))
      if (m === void 0) {
        const v = hT([y], d);
        o({
          callback: v
        });
      } else m && ((g = e.onLoad) === null || g === void 0 || g.call(e, y));
  }
  Hi(() => (n(!0), c), []), Hi(() => {
    t && d();
  }, [e.icon, t]);
  const { name: f, data: h } = a;
  return h ? kT({
    ...Qu,
    ...h
  }, e, f) : e.children ? e.children : e.fallback ? e.fallback : lo("span", {});
}
const PT = Ru((e, t) => wg({
  ...e,
  _ref: t
}));
Ru((e, t) => wg({
  inline: !0,
  ...e,
  _ref: t
}));
const Or = je(({ ref: e, icon: t, width: n = 20, color: r = "auto", sx: o, ...s }) => /* @__PURE__ */ P(
  Cr,
  {
    id: "VenomousUI-Icon",
    ssr: !0,
    ref: e,
    component: PT,
    icon: t,
    sx: {
      width: n,
      height: n,
      flexShrink: 0,
      display: "inline-flex",
      color: (a) => r === "error" ? a.palette.error.main : r === "primary" ? a.palette.primary.main : r === "success" ? a.palette.success.main : r === "disabled" ? a.palette.action.disabled : "inherit",
      ...o
    },
    ...s
  }
));
Or.displayName = "Icon";
function Sg(e) {
  return /* @__PURE__ */ P($h, {
    ...e,
    defaultTheme: Xu,
    themeId: Hn
  });
}
process.env.NODE_ENV !== "production" && (Sg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: i.oneOfType([i.array, i.func, i.number, i.object, i.string, i.bool])
});
function td(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ P(Sg, {
        styles: typeof e == "function" ? (r) => e({
          theme: r,
          ...n
        }) : e
      })
    );
  };
}
function IT() {
  return kh;
}
const nt = $w;
process.env.NODE_ENV !== "production" && (i.node, i.object.isRequired);
function kt(e) {
  return Rw(e);
}
function Tg(e, t) {
  if (e == null) return {};
  var n = {};
  for (var r in e) if ({}.hasOwnProperty.call(e, r)) {
    if (t.indexOf(r) !== -1) continue;
    n[r] = e[r];
  }
  return n;
}
function Yc(e, t) {
  return Yc = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, r) {
    return n.__proto__ = r, n;
  }, Yc(e, t);
}
function Eg(e, t) {
  e.prototype = Object.create(t.prototype), e.prototype.constructor = e, Yc(e, t);
}
const lp = {
  disabled: !1
};
var NT = process.env.NODE_ENV !== "production" ? i.oneOfType([i.number, i.shape({
  enter: i.number,
  exit: i.number,
  appear: i.number
}).isRequired]) : null;
process.env.NODE_ENV !== "production" && i.oneOfType([i.string, i.shape({
  enter: i.string,
  exit: i.string,
  active: i.string
}), i.shape({
  enter: i.string,
  enterDone: i.string,
  enterActive: i.string,
  exit: i.string,
  exitDone: i.string,
  exitActive: i.string
})]);
const va = L.createContext(null);
var AT = function(t) {
  return t.scrollTop;
}, ki = "unmounted", ro = "exited", oo = "entering", No = "entered", Gc = "exiting", Rn = /* @__PURE__ */ function(e) {
  Eg(t, e);
  function t(r, o) {
    var s;
    s = e.call(this, r, o) || this;
    var a = o, l = a && !a.isMounting ? r.enter : r.appear, c;
    return s.appearStatus = null, r.in ? l ? (c = ro, s.appearStatus = oo) : c = No : r.unmountOnExit || r.mountOnEnter ? c = ki : c = ro, s.state = {
      status: c
    }, s.nextCallback = null, s;
  }
  t.getDerivedStateFromProps = function(o, s) {
    var a = o.in;
    return a && s.status === ki ? {
      status: ro
    } : null;
  };
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.updateStatus(!0, this.appearStatus);
  }, n.componentDidUpdate = function(o) {
    var s = null;
    if (o !== this.props) {
      var a = this.state.status;
      this.props.in ? a !== oo && a !== No && (s = oo) : (a === oo || a === No) && (s = Gc);
    }
    this.updateStatus(!1, s);
  }, n.componentWillUnmount = function() {
    this.cancelNextCallback();
  }, n.getTimeouts = function() {
    var o = this.props.timeout, s, a, l;
    return s = a = l = o, o != null && typeof o != "number" && (s = o.exit, a = o.enter, l = o.appear !== void 0 ? o.appear : a), {
      exit: s,
      enter: a,
      appear: l
    };
  }, n.updateStatus = function(o, s) {
    if (o === void 0 && (o = !1), s !== null)
      if (this.cancelNextCallback(), s === oo) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var a = this.props.nodeRef ? this.props.nodeRef.current : Mo.findDOMNode(this);
          a && AT(a);
        }
        this.performEnter(o);
      } else
        this.performExit();
    else this.props.unmountOnExit && this.state.status === ro && this.setState({
      status: ki
    });
  }, n.performEnter = function(o) {
    var s = this, a = this.props.enter, l = this.context ? this.context.isMounting : o, c = this.props.nodeRef ? [l] : [Mo.findDOMNode(this), l], u = c[0], d = c[1], f = this.getTimeouts(), h = l ? f.appear : f.enter;
    if (!o && !a || lp.disabled) {
      this.safeSetState({
        status: No
      }, function() {
        s.props.onEntered(u);
      });
      return;
    }
    this.props.onEnter(u, d), this.safeSetState({
      status: oo
    }, function() {
      s.props.onEntering(u, d), s.onTransitionEnd(h, function() {
        s.safeSetState({
          status: No
        }, function() {
          s.props.onEntered(u, d);
        });
      });
    });
  }, n.performExit = function() {
    var o = this, s = this.props.exit, a = this.getTimeouts(), l = this.props.nodeRef ? void 0 : Mo.findDOMNode(this);
    if (!s || lp.disabled) {
      this.safeSetState({
        status: ro
      }, function() {
        o.props.onExited(l);
      });
      return;
    }
    this.props.onExit(l), this.safeSetState({
      status: Gc
    }, function() {
      o.props.onExiting(l), o.onTransitionEnd(a.exit, function() {
        o.safeSetState({
          status: ro
        }, function() {
          o.props.onExited(l);
        });
      });
    });
  }, n.cancelNextCallback = function() {
    this.nextCallback !== null && (this.nextCallback.cancel(), this.nextCallback = null);
  }, n.safeSetState = function(o, s) {
    s = this.setNextCallback(s), this.setState(o, s);
  }, n.setNextCallback = function(o) {
    var s = this, a = !0;
    return this.nextCallback = function(l) {
      a && (a = !1, s.nextCallback = null, o(l));
    }, this.nextCallback.cancel = function() {
      a = !1;
    }, this.nextCallback;
  }, n.onTransitionEnd = function(o, s) {
    this.setNextCallback(s);
    var a = this.props.nodeRef ? this.props.nodeRef.current : Mo.findDOMNode(this), l = o == null && !this.props.addEndListener;
    if (!a || l) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var c = this.props.nodeRef ? [this.nextCallback] : [a, this.nextCallback], u = c[0], d = c[1];
      this.props.addEndListener(u, d);
    }
    o != null && setTimeout(this.nextCallback, o);
  }, n.render = function() {
    var o = this.state.status;
    if (o === ki)
      return null;
    var s = this.props, a = s.children;
    s.in, s.mountOnEnter, s.unmountOnExit, s.appear, s.enter, s.exit, s.timeout, s.addEndListener, s.onEnter, s.onEntering, s.onEntered, s.onExit, s.onExiting, s.onExited, s.nodeRef;
    var l = Tg(s, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      /* @__PURE__ */ L.createElement(va.Provider, {
        value: null
      }, typeof a == "function" ? a(o, l) : L.cloneElement(L.Children.only(a), l))
    );
  }, t;
}(L.Component);
Rn.contextType = va;
Rn.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: i.shape({
    current: typeof Element > "u" ? i.any : function(e, t, n, r, o, s) {
      var a = e[t];
      return i.instanceOf(a && "ownerDocument" in a ? a.ownerDocument.defaultView.Element : Element)(e, t, n, r, o, s);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: i.oneOfType([i.func.isRequired, i.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: i.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: i.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: i.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: i.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: i.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: i.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function(t) {
    var n = NT;
    t.addEndListener || (n = n.isRequired);
    for (var r = arguments.length, o = new Array(r > 1 ? r - 1 : 0), s = 1; s < r; s++)
      o[s - 1] = arguments[s];
    return n.apply(void 0, [t].concat(o));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: i.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: i.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: i.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: i.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: i.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: i.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: i.func
} : {};
function Co() {
}
Rn.defaultProps = {
  in: !1,
  mountOnEnter: !1,
  unmountOnExit: !1,
  appear: !1,
  enter: !0,
  exit: !0,
  onEnter: Co,
  onEntering: Co,
  onEntered: Co,
  onExit: Co,
  onExiting: Co,
  onExited: Co
};
Rn.UNMOUNTED = ki;
Rn.EXITED = ro;
Rn.ENTERING = oo;
Rn.ENTERED = No;
Rn.EXITING = Gc;
function MT(e) {
  if (e === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function nd(e, t) {
  var n = function(s) {
    return t && Js(s) ? t(s) : s;
  }, r = /* @__PURE__ */ Object.create(null);
  return e && Iv.map(e, function(o) {
    return o;
  }).forEach(function(o) {
    r[o.key] = n(o);
  }), r;
}
function _T(e, t) {
  e = e || {}, t = t || {};
  function n(d) {
    return d in t ? t[d] : e[d];
  }
  var r = /* @__PURE__ */ Object.create(null), o = [];
  for (var s in e)
    s in t ? o.length && (r[s] = o, o = []) : o.push(s);
  var a, l = {};
  for (var c in t) {
    if (r[c])
      for (a = 0; a < r[c].length; a++) {
        var u = r[c][a];
        l[r[c][a]] = n(u);
      }
    l[c] = n(c);
  }
  for (a = 0; a < o.length; a++)
    l[o[a]] = n(o[a]);
  return l;
}
function io(e, t, n) {
  return n[t] != null ? n[t] : e.props[t];
}
function DT(e, t) {
  return nd(e.children, function(n) {
    return Zs(n, {
      onExited: t.bind(null, n),
      in: !0,
      appear: io(n, "appear", e),
      enter: io(n, "enter", e),
      exit: io(n, "exit", e)
    });
  });
}
function BT(e, t, n) {
  var r = nd(e.children), o = _T(t, r);
  return Object.keys(o).forEach(function(s) {
    var a = o[s];
    if (Js(a)) {
      var l = s in t, c = s in r, u = t[s], d = Js(u) && !u.props.in;
      c && (!l || d) ? o[s] = Zs(a, {
        onExited: n.bind(null, a),
        in: !0,
        exit: io(a, "exit", e),
        enter: io(a, "enter", e)
      }) : !c && l && !d ? o[s] = Zs(a, {
        in: !1
      }) : c && l && Js(u) && (o[s] = Zs(a, {
        onExited: n.bind(null, a),
        in: u.props.in,
        exit: io(a, "exit", e),
        enter: io(a, "enter", e)
      }));
    }
  }), o;
}
var FT = Object.values || function(e) {
  return Object.keys(e).map(function(t) {
    return e[t];
  });
}, jT = {
  component: "div",
  childFactory: function(t) {
    return t;
  }
}, rd = /* @__PURE__ */ function(e) {
  Eg(t, e);
  function t(r, o) {
    var s;
    s = e.call(this, r, o) || this;
    var a = s.handleExited.bind(MT(s));
    return s.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: a,
      firstRender: !0
    }, s;
  }
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, n.componentWillUnmount = function() {
    this.mounted = !1;
  }, t.getDerivedStateFromProps = function(o, s) {
    var a = s.children, l = s.handleExited, c = s.firstRender;
    return {
      children: c ? DT(o, l) : BT(o, a, l),
      firstRender: !1
    };
  }, n.handleExited = function(o, s) {
    var a = nd(this.props.children);
    o.key in a || (o.props.onExited && o.props.onExited(s), this.mounted && this.setState(function(l) {
      var c = fa({}, l.children);
      return delete c[o.key], {
        children: c
      };
    }));
  }, n.render = function() {
    var o = this.props, s = o.component, a = o.childFactory, l = Tg(o, ["component", "childFactory"]), c = this.state.contextValue, u = FT(this.state.children).map(a);
    return delete l.appear, delete l.enter, delete l.exit, s === null ? /* @__PURE__ */ L.createElement(va.Provider, {
      value: c
    }, u) : /* @__PURE__ */ L.createElement(va.Provider, {
      value: c
    }, /* @__PURE__ */ L.createElement(s, l, u));
  }, t;
}(L.Component);
rd.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: i.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: i.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: i.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: i.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: i.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: i.func
} : {};
rd.defaultProps = jT;
const od = (e) => e.scrollTop;
function Uo(e, t) {
  const {
    timeout: n,
    easing: r,
    style: o = {}
  } = e;
  return {
    duration: o.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: o.transitionTimingFunction ?? (typeof r == "object" ? r[t.mode] : r),
    delay: o.transitionDelay
  };
}
function Kc(e) {
  return `scale(${e}, ${e ** 2})`;
}
const LT = {
  entering: {
    opacity: 1,
    transform: Kc(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, sc = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), Zi = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    addEndListener: r,
    appear: o = !0,
    children: s,
    easing: a,
    in: l,
    onEnter: c,
    onEntered: u,
    onEntering: d,
    onExit: f,
    onExited: h,
    onExiting: g,
    style: y,
    timeout: m = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: v = Rn,
    ...x
  } = t, E = _o(), w = C.useRef(), S = Ir(), b = C.useRef(null), T = tn(b, go(s), n), R = (_) => (M) => {
    if (_) {
      const z = b.current;
      M === void 0 ? _(z) : _(z, M);
    }
  }, $ = R(d), I = R((_, M) => {
    od(_);
    const {
      duration: z,
      delay: Y,
      easing: H
    } = Uo({
      style: y,
      timeout: m,
      easing: a
    }, {
      mode: "enter"
    });
    let j;
    m === "auto" ? (j = S.transitions.getAutoHeightDuration(_.clientHeight), w.current = j) : j = z, _.style.transition = [S.transitions.create("opacity", {
      duration: j,
      delay: Y
    }), S.transitions.create("transform", {
      duration: sc ? j : j * 0.666,
      delay: Y,
      easing: H
    })].join(","), c && c(_, M);
  }), p = R(u), O = R(g), k = R((_) => {
    const {
      duration: M,
      delay: z,
      easing: Y
    } = Uo({
      style: y,
      timeout: m,
      easing: a
    }, {
      mode: "exit"
    });
    let H;
    m === "auto" ? (H = S.transitions.getAutoHeightDuration(_.clientHeight), w.current = H) : H = M, _.style.transition = [S.transitions.create("opacity", {
      duration: H,
      delay: z
    }), S.transitions.create("transform", {
      duration: sc ? H : H * 0.666,
      delay: sc ? z : z || H * 0.333,
      easing: Y
    })].join(","), _.style.opacity = 0, _.style.transform = Kc(0.75), f && f(_);
  }), A = R(h);
  return /* @__PURE__ */ P(v, {
    appear: o,
    in: l,
    nodeRef: b,
    onEnter: I,
    onEntered: p,
    onEntering: $,
    onExit: k,
    onExited: A,
    onExiting: O,
    addEndListener: (_) => {
      m === "auto" && E.start(w.current || 0, _), r && r(b.current, _);
    },
    timeout: m === "auto" ? null : m,
    ...x,
    children: (_, {
      ownerState: M,
      ...z
    }) => /* @__PURE__ */ C.cloneElement(s, {
      style: {
        opacity: 0,
        transform: Kc(0.75),
        visibility: _ === "exited" && !l ? "hidden" : void 0,
        ...LT[_],
        ...y,
        ...s.props.style
      },
      ref: T,
      ...z
    })
  });
});
process.env.NODE_ENV !== "production" && (Zi.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: Yr.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
Zi && (Zi.muiSupportAuto = !0);
var fn = "top", Dn = "bottom", Bn = "right", pn = "left", id = "auto", hs = [fn, Dn, Bn, pn], Ho = "start", es = "end", VT = "clippingParents", Cg = "viewport", yi = "popper", zT = "reference", cp = /* @__PURE__ */ hs.reduce(function(e, t) {
  return e.concat([t + "-" + Ho, t + "-" + es]);
}, []), Og = /* @__PURE__ */ [].concat(hs, [id]).reduce(function(e, t) {
  return e.concat([t, t + "-" + Ho, t + "-" + es]);
}, []), WT = "beforeRead", UT = "read", HT = "afterRead", qT = "beforeMain", YT = "main", GT = "afterMain", KT = "beforeWrite", XT = "write", QT = "afterWrite", JT = [WT, UT, HT, qT, YT, GT, KT, XT, QT];
function fr(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function Cn(e) {
  if (e == null)
    return window;
  if (e.toString() !== "[object Window]") {
    var t = e.ownerDocument;
    return t && t.defaultView || window;
  }
  return e;
}
function fo(e) {
  var t = Cn(e).Element;
  return e instanceof t || e instanceof Element;
}
function _n(e) {
  var t = Cn(e).HTMLElement;
  return e instanceof t || e instanceof HTMLElement;
}
function sd(e) {
  if (typeof ShadowRoot > "u")
    return !1;
  var t = Cn(e).ShadowRoot;
  return e instanceof t || e instanceof ShadowRoot;
}
function ZT(e) {
  var t = e.state;
  Object.keys(t.elements).forEach(function(n) {
    var r = t.styles[n] || {}, o = t.attributes[n] || {}, s = t.elements[n];
    !_n(s) || !fr(s) || (Object.assign(s.style, r), Object.keys(o).forEach(function(a) {
      var l = o[a];
      l === !1 ? s.removeAttribute(a) : s.setAttribute(a, l === !0 ? "" : l);
    }));
  });
}
function e1(e) {
  var t = e.state, n = {
    popper: {
      position: t.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(t.elements.popper.style, n.popper), t.styles = n, t.elements.arrow && Object.assign(t.elements.arrow.style, n.arrow), function() {
    Object.keys(t.elements).forEach(function(r) {
      var o = t.elements[r], s = t.attributes[r] || {}, a = Object.keys(t.styles.hasOwnProperty(r) ? t.styles[r] : n[r]), l = a.reduce(function(c, u) {
        return c[u] = "", c;
      }, {});
      !_n(o) || !fr(o) || (Object.assign(o.style, l), Object.keys(s).forEach(function(c) {
        o.removeAttribute(c);
      }));
    });
  };
}
const t1 = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: ZT,
  effect: e1,
  requires: ["computeStyles"]
};
function ar(e) {
  return e.split("-")[0];
}
var co = Math.max, xa = Math.min, qo = Math.round;
function Xc() {
  var e = navigator.userAgentData;
  return e != null && e.brands && Array.isArray(e.brands) ? e.brands.map(function(t) {
    return t.brand + "/" + t.version;
  }).join(" ") : navigator.userAgent;
}
function Rg() {
  return !/^((?!chrome|android).)*safari/i.test(Xc());
}
function Yo(e, t, n) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  var r = e.getBoundingClientRect(), o = 1, s = 1;
  t && _n(e) && (o = e.offsetWidth > 0 && qo(r.width) / e.offsetWidth || 1, s = e.offsetHeight > 0 && qo(r.height) / e.offsetHeight || 1);
  var a = fo(e) ? Cn(e) : window, l = a.visualViewport, c = !Rg() && n, u = (r.left + (c && l ? l.offsetLeft : 0)) / o, d = (r.top + (c && l ? l.offsetTop : 0)) / s, f = r.width / o, h = r.height / s;
  return {
    width: f,
    height: h,
    top: d,
    right: u + f,
    bottom: d + h,
    left: u,
    x: u,
    y: d
  };
}
function ad(e) {
  var t = Yo(e), n = e.offsetWidth, r = e.offsetHeight;
  return Math.abs(t.width - n) <= 1 && (n = t.width), Math.abs(t.height - r) <= 1 && (r = t.height), {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: n,
    height: r
  };
}
function $g(e, t) {
  var n = t.getRootNode && t.getRootNode();
  if (e.contains(t))
    return !0;
  if (n && sd(n)) {
    var r = t;
    do {
      if (r && e.isSameNode(r))
        return !0;
      r = r.parentNode || r.host;
    } while (r);
  }
  return !1;
}
function Rr(e) {
  return Cn(e).getComputedStyle(e);
}
function n1(e) {
  return ["table", "td", "th"].indexOf(fr(e)) >= 0;
}
function Gr(e) {
  return ((fo(e) ? e.ownerDocument : (
    // $FlowFixMe[prop-missing]
    e.document
  )) || window.document).documentElement;
}
function ll(e) {
  return fr(e) === "html" ? e : (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    e.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e.parentNode || // DOM Element detected
    (sd(e) ? e.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    Gr(e)
  );
}
function up(e) {
  return !_n(e) || // https://github.com/popperjs/popper-core/issues/837
  Rr(e).position === "fixed" ? null : e.offsetParent;
}
function r1(e) {
  var t = /firefox/i.test(Xc()), n = /Trident/i.test(Xc());
  if (n && _n(e)) {
    var r = Rr(e);
    if (r.position === "fixed")
      return null;
  }
  var o = ll(e);
  for (sd(o) && (o = o.host); _n(o) && ["html", "body"].indexOf(fr(o)) < 0; ) {
    var s = Rr(o);
    if (s.transform !== "none" || s.perspective !== "none" || s.contain === "paint" || ["transform", "perspective"].indexOf(s.willChange) !== -1 || t && s.willChange === "filter" || t && s.filter && s.filter !== "none")
      return o;
    o = o.parentNode;
  }
  return null;
}
function gs(e) {
  for (var t = Cn(e), n = up(e); n && n1(n) && Rr(n).position === "static"; )
    n = up(n);
  return n && (fr(n) === "html" || fr(n) === "body" && Rr(n).position === "static") ? t : n || r1(e) || t;
}
function ld(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function Di(e, t, n) {
  return co(e, xa(t, n));
}
function o1(e, t, n) {
  var r = Di(e, t, n);
  return r > n ? n : r;
}
function kg() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function Pg(e) {
  return Object.assign({}, kg(), e);
}
function Ig(e, t) {
  return t.reduce(function(n, r) {
    return n[r] = e, n;
  }, {});
}
var i1 = function(t, n) {
  return t = typeof t == "function" ? t(Object.assign({}, n.rects, {
    placement: n.placement
  })) : t, Pg(typeof t != "number" ? t : Ig(t, hs));
};
function s1(e) {
  var t, n = e.state, r = e.name, o = e.options, s = n.elements.arrow, a = n.modifiersData.popperOffsets, l = ar(n.placement), c = ld(l), u = [pn, Bn].indexOf(l) >= 0, d = u ? "height" : "width";
  if (!(!s || !a)) {
    var f = i1(o.padding, n), h = ad(s), g = c === "y" ? fn : pn, y = c === "y" ? Dn : Bn, m = n.rects.reference[d] + n.rects.reference[c] - a[c] - n.rects.popper[d], v = a[c] - n.rects.reference[c], x = gs(s), E = x ? c === "y" ? x.clientHeight || 0 : x.clientWidth || 0 : 0, w = m / 2 - v / 2, S = f[g], b = E - h[d] - f[y], T = E / 2 - h[d] / 2 + w, R = Di(S, T, b), $ = c;
    n.modifiersData[r] = (t = {}, t[$] = R, t.centerOffset = R - T, t);
  }
}
function a1(e) {
  var t = e.state, n = e.options, r = n.element, o = r === void 0 ? "[data-popper-arrow]" : r;
  o != null && (typeof o == "string" && (o = t.elements.popper.querySelector(o), !o) || $g(t.elements.popper, o) && (t.elements.arrow = o));
}
const l1 = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: s1,
  effect: a1,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function Go(e) {
  return e.split("-")[1];
}
var c1 = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function u1(e, t) {
  var n = e.x, r = e.y, o = t.devicePixelRatio || 1;
  return {
    x: qo(n * o) / o || 0,
    y: qo(r * o) / o || 0
  };
}
function dp(e) {
  var t, n = e.popper, r = e.popperRect, o = e.placement, s = e.variation, a = e.offsets, l = e.position, c = e.gpuAcceleration, u = e.adaptive, d = e.roundOffsets, f = e.isFixed, h = a.x, g = h === void 0 ? 0 : h, y = a.y, m = y === void 0 ? 0 : y, v = typeof d == "function" ? d({
    x: g,
    y: m
  }) : {
    x: g,
    y: m
  };
  g = v.x, m = v.y;
  var x = a.hasOwnProperty("x"), E = a.hasOwnProperty("y"), w = pn, S = fn, b = window;
  if (u) {
    var T = gs(n), R = "clientHeight", $ = "clientWidth";
    if (T === Cn(n) && (T = Gr(n), Rr(T).position !== "static" && l === "absolute" && (R = "scrollHeight", $ = "scrollWidth")), T = T, o === fn || (o === pn || o === Bn) && s === es) {
      S = Dn;
      var I = f && T === b && b.visualViewport ? b.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        T[R]
      );
      m -= I - r.height, m *= c ? 1 : -1;
    }
    if (o === pn || (o === fn || o === Dn) && s === es) {
      w = Bn;
      var p = f && T === b && b.visualViewport ? b.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        T[$]
      );
      g -= p - r.width, g *= c ? 1 : -1;
    }
  }
  var O = Object.assign({
    position: l
  }, u && c1), k = d === !0 ? u1({
    x: g,
    y: m
  }, Cn(n)) : {
    x: g,
    y: m
  };
  if (g = k.x, m = k.y, c) {
    var A;
    return Object.assign({}, O, (A = {}, A[S] = E ? "0" : "", A[w] = x ? "0" : "", A.transform = (b.devicePixelRatio || 1) <= 1 ? "translate(" + g + "px, " + m + "px)" : "translate3d(" + g + "px, " + m + "px, 0)", A));
  }
  return Object.assign({}, O, (t = {}, t[S] = E ? m + "px" : "", t[w] = x ? g + "px" : "", t.transform = "", t));
}
function d1(e) {
  var t = e.state, n = e.options, r = n.gpuAcceleration, o = r === void 0 ? !0 : r, s = n.adaptive, a = s === void 0 ? !0 : s, l = n.roundOffsets, c = l === void 0 ? !0 : l, u = {
    placement: ar(t.placement),
    variation: Go(t.placement),
    popper: t.elements.popper,
    popperRect: t.rects.popper,
    gpuAcceleration: o,
    isFixed: t.options.strategy === "fixed"
  };
  t.modifiersData.popperOffsets != null && (t.styles.popper = Object.assign({}, t.styles.popper, dp(Object.assign({}, u, {
    offsets: t.modifiersData.popperOffsets,
    position: t.options.strategy,
    adaptive: a,
    roundOffsets: c
  })))), t.modifiersData.arrow != null && (t.styles.arrow = Object.assign({}, t.styles.arrow, dp(Object.assign({}, u, {
    offsets: t.modifiersData.arrow,
    position: "absolute",
    adaptive: !1,
    roundOffsets: c
  })))), t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-placement": t.placement
  });
}
const f1 = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: d1,
  data: {}
};
var Fs = {
  passive: !0
};
function p1(e) {
  var t = e.state, n = e.instance, r = e.options, o = r.scroll, s = o === void 0 ? !0 : o, a = r.resize, l = a === void 0 ? !0 : a, c = Cn(t.elements.popper), u = [].concat(t.scrollParents.reference, t.scrollParents.popper);
  return s && u.forEach(function(d) {
    d.addEventListener("scroll", n.update, Fs);
  }), l && c.addEventListener("resize", n.update, Fs), function() {
    s && u.forEach(function(d) {
      d.removeEventListener("scroll", n.update, Fs);
    }), l && c.removeEventListener("resize", n.update, Fs);
  };
}
const m1 = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: function() {
  },
  effect: p1,
  data: {}
};
var h1 = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function sa(e) {
  return e.replace(/left|right|bottom|top/g, function(t) {
    return h1[t];
  });
}
var g1 = {
  start: "end",
  end: "start"
};
function fp(e) {
  return e.replace(/start|end/g, function(t) {
    return g1[t];
  });
}
function cd(e) {
  var t = Cn(e), n = t.pageXOffset, r = t.pageYOffset;
  return {
    scrollLeft: n,
    scrollTop: r
  };
}
function ud(e) {
  return Yo(Gr(e)).left + cd(e).scrollLeft;
}
function y1(e, t) {
  var n = Cn(e), r = Gr(e), o = n.visualViewport, s = r.clientWidth, a = r.clientHeight, l = 0, c = 0;
  if (o) {
    s = o.width, a = o.height;
    var u = Rg();
    (u || !u && t === "fixed") && (l = o.offsetLeft, c = o.offsetTop);
  }
  return {
    width: s,
    height: a,
    x: l + ud(e),
    y: c
  };
}
function b1(e) {
  var t, n = Gr(e), r = cd(e), o = (t = e.ownerDocument) == null ? void 0 : t.body, s = co(n.scrollWidth, n.clientWidth, o ? o.scrollWidth : 0, o ? o.clientWidth : 0), a = co(n.scrollHeight, n.clientHeight, o ? o.scrollHeight : 0, o ? o.clientHeight : 0), l = -r.scrollLeft + ud(e), c = -r.scrollTop;
  return Rr(o || n).direction === "rtl" && (l += co(n.clientWidth, o ? o.clientWidth : 0) - s), {
    width: s,
    height: a,
    x: l,
    y: c
  };
}
function dd(e) {
  var t = Rr(e), n = t.overflow, r = t.overflowX, o = t.overflowY;
  return /auto|scroll|overlay|hidden/.test(n + o + r);
}
function Ng(e) {
  return ["html", "body", "#document"].indexOf(fr(e)) >= 0 ? e.ownerDocument.body : _n(e) && dd(e) ? e : Ng(ll(e));
}
function Bi(e, t) {
  var n;
  t === void 0 && (t = []);
  var r = Ng(e), o = r === ((n = e.ownerDocument) == null ? void 0 : n.body), s = Cn(r), a = o ? [s].concat(s.visualViewport || [], dd(r) ? r : []) : r, l = t.concat(a);
  return o ? l : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    l.concat(Bi(ll(a)))
  );
}
function Qc(e) {
  return Object.assign({}, e, {
    left: e.x,
    top: e.y,
    right: e.x + e.width,
    bottom: e.y + e.height
  });
}
function v1(e, t) {
  var n = Yo(e, !1, t === "fixed");
  return n.top = n.top + e.clientTop, n.left = n.left + e.clientLeft, n.bottom = n.top + e.clientHeight, n.right = n.left + e.clientWidth, n.width = e.clientWidth, n.height = e.clientHeight, n.x = n.left, n.y = n.top, n;
}
function pp(e, t, n) {
  return t === Cg ? Qc(y1(e, n)) : fo(t) ? v1(t, n) : Qc(b1(Gr(e)));
}
function x1(e) {
  var t = Bi(ll(e)), n = ["absolute", "fixed"].indexOf(Rr(e).position) >= 0, r = n && _n(e) ? gs(e) : e;
  return fo(r) ? t.filter(function(o) {
    return fo(o) && $g(o, r) && fr(o) !== "body";
  }) : [];
}
function w1(e, t, n, r) {
  var o = t === "clippingParents" ? x1(e) : [].concat(t), s = [].concat(o, [n]), a = s[0], l = s.reduce(function(c, u) {
    var d = pp(e, u, r);
    return c.top = co(d.top, c.top), c.right = xa(d.right, c.right), c.bottom = xa(d.bottom, c.bottom), c.left = co(d.left, c.left), c;
  }, pp(e, a, r));
  return l.width = l.right - l.left, l.height = l.bottom - l.top, l.x = l.left, l.y = l.top, l;
}
function Ag(e) {
  var t = e.reference, n = e.element, r = e.placement, o = r ? ar(r) : null, s = r ? Go(r) : null, a = t.x + t.width / 2 - n.width / 2, l = t.y + t.height / 2 - n.height / 2, c;
  switch (o) {
    case fn:
      c = {
        x: a,
        y: t.y - n.height
      };
      break;
    case Dn:
      c = {
        x: a,
        y: t.y + t.height
      };
      break;
    case Bn:
      c = {
        x: t.x + t.width,
        y: l
      };
      break;
    case pn:
      c = {
        x: t.x - n.width,
        y: l
      };
      break;
    default:
      c = {
        x: t.x,
        y: t.y
      };
  }
  var u = o ? ld(o) : null;
  if (u != null) {
    var d = u === "y" ? "height" : "width";
    switch (s) {
      case Ho:
        c[u] = c[u] - (t[d] / 2 - n[d] / 2);
        break;
      case es:
        c[u] = c[u] + (t[d] / 2 - n[d] / 2);
        break;
    }
  }
  return c;
}
function ts(e, t) {
  t === void 0 && (t = {});
  var n = t, r = n.placement, o = r === void 0 ? e.placement : r, s = n.strategy, a = s === void 0 ? e.strategy : s, l = n.boundary, c = l === void 0 ? VT : l, u = n.rootBoundary, d = u === void 0 ? Cg : u, f = n.elementContext, h = f === void 0 ? yi : f, g = n.altBoundary, y = g === void 0 ? !1 : g, m = n.padding, v = m === void 0 ? 0 : m, x = Pg(typeof v != "number" ? v : Ig(v, hs)), E = h === yi ? zT : yi, w = e.rects.popper, S = e.elements[y ? E : h], b = w1(fo(S) ? S : S.contextElement || Gr(e.elements.popper), c, d, a), T = Yo(e.elements.reference), R = Ag({
    reference: T,
    element: w,
    placement: o
  }), $ = Qc(Object.assign({}, w, R)), I = h === yi ? $ : T, p = {
    top: b.top - I.top + x.top,
    bottom: I.bottom - b.bottom + x.bottom,
    left: b.left - I.left + x.left,
    right: I.right - b.right + x.right
  }, O = e.modifiersData.offset;
  if (h === yi && O) {
    var k = O[o];
    Object.keys(p).forEach(function(A) {
      var D = [Bn, Dn].indexOf(A) >= 0 ? 1 : -1, _ = [fn, Dn].indexOf(A) >= 0 ? "y" : "x";
      p[A] += k[_] * D;
    });
  }
  return p;
}
function S1(e, t) {
  t === void 0 && (t = {});
  var n = t, r = n.placement, o = n.boundary, s = n.rootBoundary, a = n.padding, l = n.flipVariations, c = n.allowedAutoPlacements, u = c === void 0 ? Og : c, d = Go(r), f = d ? l ? cp : cp.filter(function(y) {
    return Go(y) === d;
  }) : hs, h = f.filter(function(y) {
    return u.indexOf(y) >= 0;
  });
  h.length === 0 && (h = f);
  var g = h.reduce(function(y, m) {
    return y[m] = ts(e, {
      placement: m,
      boundary: o,
      rootBoundary: s,
      padding: a
    })[ar(m)], y;
  }, {});
  return Object.keys(g).sort(function(y, m) {
    return g[y] - g[m];
  });
}
function T1(e) {
  if (ar(e) === id)
    return [];
  var t = sa(e);
  return [fp(e), t, fp(t)];
}
function E1(e) {
  var t = e.state, n = e.options, r = e.name;
  if (!t.modifiersData[r]._skip) {
    for (var o = n.mainAxis, s = o === void 0 ? !0 : o, a = n.altAxis, l = a === void 0 ? !0 : a, c = n.fallbackPlacements, u = n.padding, d = n.boundary, f = n.rootBoundary, h = n.altBoundary, g = n.flipVariations, y = g === void 0 ? !0 : g, m = n.allowedAutoPlacements, v = t.options.placement, x = ar(v), E = x === v, w = c || (E || !y ? [sa(v)] : T1(v)), S = [v].concat(w).reduce(function(oe, ne) {
      return oe.concat(ar(ne) === id ? S1(t, {
        placement: ne,
        boundary: d,
        rootBoundary: f,
        padding: u,
        flipVariations: y,
        allowedAutoPlacements: m
      }) : ne);
    }, []), b = t.rects.reference, T = t.rects.popper, R = /* @__PURE__ */ new Map(), $ = !0, I = S[0], p = 0; p < S.length; p++) {
      var O = S[p], k = ar(O), A = Go(O) === Ho, D = [fn, Dn].indexOf(k) >= 0, _ = D ? "width" : "height", M = ts(t, {
        placement: O,
        boundary: d,
        rootBoundary: f,
        altBoundary: h,
        padding: u
      }), z = D ? A ? Bn : pn : A ? Dn : fn;
      b[_] > T[_] && (z = sa(z));
      var Y = sa(z), H = [];
      if (s && H.push(M[k] <= 0), l && H.push(M[z] <= 0, M[Y] <= 0), H.every(function(oe) {
        return oe;
      })) {
        I = O, $ = !1;
        break;
      }
      R.set(O, H);
    }
    if ($)
      for (var j = y ? 3 : 1, W = function(ne) {
        var se = S.find(function(de) {
          var X = R.get(de);
          if (X)
            return X.slice(0, ne).every(function(ae) {
              return ae;
            });
        });
        if (se)
          return I = se, "break";
      }, ee = j; ee > 0; ee--) {
        var K = W(ee);
        if (K === "break") break;
      }
    t.placement !== I && (t.modifiersData[r]._skip = !0, t.placement = I, t.reset = !0);
  }
}
const C1 = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: E1,
  requiresIfExists: ["offset"],
  data: {
    _skip: !1
  }
};
function mp(e, t, n) {
  return n === void 0 && (n = {
    x: 0,
    y: 0
  }), {
    top: e.top - t.height - n.y,
    right: e.right - t.width + n.x,
    bottom: e.bottom - t.height + n.y,
    left: e.left - t.width - n.x
  };
}
function hp(e) {
  return [fn, Bn, Dn, pn].some(function(t) {
    return e[t] >= 0;
  });
}
function O1(e) {
  var t = e.state, n = e.name, r = t.rects.reference, o = t.rects.popper, s = t.modifiersData.preventOverflow, a = ts(t, {
    elementContext: "reference"
  }), l = ts(t, {
    altBoundary: !0
  }), c = mp(a, r), u = mp(l, o, s), d = hp(c), f = hp(u);
  t.modifiersData[n] = {
    referenceClippingOffsets: c,
    popperEscapeOffsets: u,
    isReferenceHidden: d,
    hasPopperEscaped: f
  }, t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-reference-hidden": d,
    "data-popper-escaped": f
  });
}
const R1 = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: O1
};
function $1(e, t, n) {
  var r = ar(e), o = [pn, fn].indexOf(r) >= 0 ? -1 : 1, s = typeof n == "function" ? n(Object.assign({}, t, {
    placement: e
  })) : n, a = s[0], l = s[1];
  return a = a || 0, l = (l || 0) * o, [pn, Bn].indexOf(r) >= 0 ? {
    x: l,
    y: a
  } : {
    x: a,
    y: l
  };
}
function k1(e) {
  var t = e.state, n = e.options, r = e.name, o = n.offset, s = o === void 0 ? [0, 0] : o, a = Og.reduce(function(d, f) {
    return d[f] = $1(f, t.rects, s), d;
  }, {}), l = a[t.placement], c = l.x, u = l.y;
  t.modifiersData.popperOffsets != null && (t.modifiersData.popperOffsets.x += c, t.modifiersData.popperOffsets.y += u), t.modifiersData[r] = a;
}
const P1 = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: k1
};
function I1(e) {
  var t = e.state, n = e.name;
  t.modifiersData[n] = Ag({
    reference: t.rects.reference,
    element: t.rects.popper,
    placement: t.placement
  });
}
const N1 = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: I1,
  data: {}
};
function A1(e) {
  return e === "x" ? "y" : "x";
}
function M1(e) {
  var t = e.state, n = e.options, r = e.name, o = n.mainAxis, s = o === void 0 ? !0 : o, a = n.altAxis, l = a === void 0 ? !1 : a, c = n.boundary, u = n.rootBoundary, d = n.altBoundary, f = n.padding, h = n.tether, g = h === void 0 ? !0 : h, y = n.tetherOffset, m = y === void 0 ? 0 : y, v = ts(t, {
    boundary: c,
    rootBoundary: u,
    padding: f,
    altBoundary: d
  }), x = ar(t.placement), E = Go(t.placement), w = !E, S = ld(x), b = A1(S), T = t.modifiersData.popperOffsets, R = t.rects.reference, $ = t.rects.popper, I = typeof m == "function" ? m(Object.assign({}, t.rects, {
    placement: t.placement
  })) : m, p = typeof I == "number" ? {
    mainAxis: I,
    altAxis: I
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, I), O = t.modifiersData.offset ? t.modifiersData.offset[t.placement] : null, k = {
    x: 0,
    y: 0
  };
  if (T) {
    if (s) {
      var A, D = S === "y" ? fn : pn, _ = S === "y" ? Dn : Bn, M = S === "y" ? "height" : "width", z = T[S], Y = z + v[D], H = z - v[_], j = g ? -$[M] / 2 : 0, W = E === Ho ? R[M] : $[M], ee = E === Ho ? -$[M] : -R[M], K = t.elements.arrow, oe = g && K ? ad(K) : {
        width: 0,
        height: 0
      }, ne = t.modifiersData["arrow#persistent"] ? t.modifiersData["arrow#persistent"].padding : kg(), se = ne[D], de = ne[_], X = Di(0, R[M], oe[M]), ae = w ? R[M] / 2 - j - X - se - p.mainAxis : W - X - se - p.mainAxis, Q = w ? -R[M] / 2 + j + X + de + p.mainAxis : ee + X + de + p.mainAxis, ie = t.elements.arrow && gs(t.elements.arrow), F = ie ? S === "y" ? ie.clientTop || 0 : ie.clientLeft || 0 : 0, he = (A = O == null ? void 0 : O[S]) != null ? A : 0, fe = z + ae - he - F, Se = z + Q - he, Le = Di(g ? xa(Y, fe) : Y, z, g ? co(H, Se) : H);
      T[S] = Le, k[S] = Le - z;
    }
    if (l) {
      var Ne, ke = S === "x" ? fn : pn, Re = S === "x" ? Dn : Bn, De = T[b], Oe = b === "y" ? "height" : "width", N = De + v[ke], q = De - v[Re], J = [fn, pn].indexOf(x) !== -1, U = (Ne = O == null ? void 0 : O[b]) != null ? Ne : 0, B = J ? N : De - R[Oe] - $[Oe] - U + p.altAxis, V = J ? De + R[Oe] + $[Oe] - U - p.altAxis : q, G = g && J ? o1(B, De, V) : Di(g ? B : N, De, g ? V : q);
      T[b] = G, k[b] = G - De;
    }
    t.modifiersData[r] = k;
  }
}
const _1 = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: M1,
  requiresIfExists: ["offset"]
};
function D1(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function B1(e) {
  return e === Cn(e) || !_n(e) ? cd(e) : D1(e);
}
function F1(e) {
  var t = e.getBoundingClientRect(), n = qo(t.width) / e.offsetWidth || 1, r = qo(t.height) / e.offsetHeight || 1;
  return n !== 1 || r !== 1;
}
function j1(e, t, n) {
  n === void 0 && (n = !1);
  var r = _n(t), o = _n(t) && F1(t), s = Gr(t), a = Yo(e, o, n), l = {
    scrollLeft: 0,
    scrollTop: 0
  }, c = {
    x: 0,
    y: 0
  };
  return (r || !r && !n) && ((fr(t) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  dd(s)) && (l = B1(t)), _n(t) ? (c = Yo(t, !0), c.x += t.clientLeft, c.y += t.clientTop) : s && (c.x = ud(s))), {
    x: a.left + l.scrollLeft - c.x,
    y: a.top + l.scrollTop - c.y,
    width: a.width,
    height: a.height
  };
}
function L1(e) {
  var t = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), r = [];
  e.forEach(function(s) {
    t.set(s.name, s);
  });
  function o(s) {
    n.add(s.name);
    var a = [].concat(s.requires || [], s.requiresIfExists || []);
    a.forEach(function(l) {
      if (!n.has(l)) {
        var c = t.get(l);
        c && o(c);
      }
    }), r.push(s);
  }
  return e.forEach(function(s) {
    n.has(s.name) || o(s);
  }), r;
}
function V1(e) {
  var t = L1(e);
  return JT.reduce(function(n, r) {
    return n.concat(t.filter(function(o) {
      return o.phase === r;
    }));
  }, []);
}
function z1(e) {
  var t;
  return function() {
    return t || (t = new Promise(function(n) {
      Promise.resolve().then(function() {
        t = void 0, n(e());
      });
    })), t;
  };
}
function W1(e) {
  var t = e.reduce(function(n, r) {
    var o = n[r.name];
    return n[r.name] = o ? Object.assign({}, o, r, {
      options: Object.assign({}, o.options, r.options),
      data: Object.assign({}, o.data, r.data)
    }) : r, n;
  }, {});
  return Object.keys(t).map(function(n) {
    return t[n];
  });
}
var gp = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function yp() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return !t.some(function(r) {
    return !(r && typeof r.getBoundingClientRect == "function");
  });
}
function U1(e) {
  e === void 0 && (e = {});
  var t = e, n = t.defaultModifiers, r = n === void 0 ? [] : n, o = t.defaultOptions, s = o === void 0 ? gp : o;
  return function(l, c, u) {
    u === void 0 && (u = s);
    var d = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, gp, s),
      modifiersData: {},
      elements: {
        reference: l,
        popper: c
      },
      attributes: {},
      styles: {}
    }, f = [], h = !1, g = {
      state: d,
      setOptions: function(x) {
        var E = typeof x == "function" ? x(d.options) : x;
        m(), d.options = Object.assign({}, s, d.options, E), d.scrollParents = {
          reference: fo(l) ? Bi(l) : l.contextElement ? Bi(l.contextElement) : [],
          popper: Bi(c)
        };
        var w = V1(W1([].concat(r, d.options.modifiers)));
        return d.orderedModifiers = w.filter(function(S) {
          return S.enabled;
        }), y(), g.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function() {
        if (!h) {
          var x = d.elements, E = x.reference, w = x.popper;
          if (yp(E, w)) {
            d.rects = {
              reference: j1(E, gs(w), d.options.strategy === "fixed"),
              popper: ad(w)
            }, d.reset = !1, d.placement = d.options.placement, d.orderedModifiers.forEach(function(p) {
              return d.modifiersData[p.name] = Object.assign({}, p.data);
            });
            for (var S = 0; S < d.orderedModifiers.length; S++) {
              if (d.reset === !0) {
                d.reset = !1, S = -1;
                continue;
              }
              var b = d.orderedModifiers[S], T = b.fn, R = b.options, $ = R === void 0 ? {} : R, I = b.name;
              typeof T == "function" && (d = T({
                state: d,
                options: $,
                name: I,
                instance: g
              }) || d);
            }
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: z1(function() {
        return new Promise(function(v) {
          g.forceUpdate(), v(d);
        });
      }),
      destroy: function() {
        m(), h = !0;
      }
    };
    if (!yp(l, c))
      return g;
    g.setOptions(u).then(function(v) {
      !h && u.onFirstUpdate && u.onFirstUpdate(v);
    });
    function y() {
      d.orderedModifiers.forEach(function(v) {
        var x = v.name, E = v.options, w = E === void 0 ? {} : E, S = v.effect;
        if (typeof S == "function") {
          var b = S({
            state: d,
            name: x,
            instance: g,
            options: w
          }), T = function() {
          };
          f.push(b || T);
        }
      });
    }
    function m() {
      f.forEach(function(v) {
        return v();
      }), f = [];
    }
    return g;
  };
}
var H1 = [m1, N1, f1, t1, P1, C1, _1, l1, R1], q1 = /* @__PURE__ */ U1({
  defaultModifiers: H1
});
function Y1(e) {
  return typeof e == "function" ? e() : e;
}
const Ko = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    children: r,
    container: o,
    disablePortal: s = !1
  } = t, [a, l] = C.useState(null), c = tn(/* @__PURE__ */ C.isValidElement(r) ? go(r) : null, n);
  if (ur(() => {
    s || l(Y1(o) || document.body);
  }, [o, s]), ur(() => {
    if (a && !s)
      return jc(n, a), () => {
        jc(n, null);
      };
  }, [n, a, s]), s) {
    if (/* @__PURE__ */ C.isValidElement(r)) {
      const u = {
        ref: c
      };
      return /* @__PURE__ */ C.cloneElement(r, u);
    }
    return r;
  }
  return a && /* @__PURE__ */ ah.createPortal(r, a);
});
process.env.NODE_ENV !== "production" && (Ko.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: i.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([Er, i.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool
});
process.env.NODE_ENV !== "production" && (Ko.propTypes = ms(Ko.propTypes));
function G1(e) {
  return St("MuiPopper", e);
}
$t("MuiPopper", ["root"]);
function K1(e, t) {
  if (t === "ltr")
    return e;
  switch (e) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return e;
  }
}
function wa(e) {
  return typeof e == "function" ? e() : e;
}
function cl(e) {
  return e.nodeType !== void 0;
}
function X1(e) {
  return !cl(e);
}
const Q1 = (e) => {
  const {
    classes: t
  } = e;
  return Mt({
    root: ["root"]
  }, G1, t);
}, J1 = {}, Z1 = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    anchorEl: r,
    children: o,
    direction: s,
    disablePortal: a,
    modifiers: l,
    open: c,
    placement: u,
    popperOptions: d,
    popperRef: f,
    slotProps: h = {},
    slots: g = {},
    TransitionProps: y,
    // @ts-ignore internal logic
    ownerState: m,
    // prevent from spreading to DOM, it can come from the parent component e.g. Select.
    ...v
  } = t, x = C.useRef(null), E = tn(x, n), w = C.useRef(null), S = tn(w, f), b = C.useRef(S);
  ur(() => {
    b.current = S;
  }, [S]), C.useImperativeHandle(f, () => w.current, []);
  const T = K1(u, s), [R, $] = C.useState(T), [I, p] = C.useState(wa(r));
  C.useEffect(() => {
    w.current && w.current.forceUpdate();
  }), C.useEffect(() => {
    r && p(wa(r));
  }, [r]), ur(() => {
    if (!I || !c)
      return;
    const _ = (Y) => {
      $(Y.placement);
    };
    if (process.env.NODE_ENV !== "production" && I && cl(I) && I.nodeType === 1) {
      const Y = I.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && Y.top === 0 && Y.left === 0 && Y.right === 0 && Y.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    let M = [{
      name: "preventOverflow",
      options: {
        altBoundary: a
      }
    }, {
      name: "flip",
      options: {
        altBoundary: a
      }
    }, {
      name: "onUpdate",
      enabled: !0,
      phase: "afterWrite",
      fn: ({
        state: Y
      }) => {
        _(Y);
      }
    }];
    l != null && (M = M.concat(l)), d && d.modifiers != null && (M = M.concat(d.modifiers));
    const z = q1(I, x.current, {
      placement: T,
      ...d,
      modifiers: M
    });
    return b.current(z), () => {
      z.destroy(), b.current(null);
    };
  }, [I, a, l, c, d, T]);
  const O = {
    placement: R
  };
  y !== null && (O.TransitionProps = y);
  const k = Q1(t), A = g.root ?? "div", D = Sw({
    elementType: A,
    externalSlotProps: h.root,
    externalForwardedProps: v,
    additionalProps: {
      role: "tooltip",
      ref: E
    },
    ownerState: t,
    className: k.root
  });
  return /* @__PURE__ */ P(A, {
    ...D,
    children: typeof o == "function" ? o(O) : o
  });
}), Mg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    anchorEl: r,
    children: o,
    container: s,
    direction: a = "ltr",
    disablePortal: l = !1,
    keepMounted: c = !1,
    modifiers: u,
    open: d,
    placement: f = "bottom",
    popperOptions: h = J1,
    popperRef: g,
    style: y,
    transition: m = !1,
    slotProps: v = {},
    slots: x = {},
    ...E
  } = t, [w, S] = C.useState(!0), b = () => {
    S(!1);
  }, T = () => {
    S(!0);
  };
  if (!c && !d && (!m || w))
    return null;
  let R;
  if (s)
    R = s;
  else if (r) {
    const p = wa(r);
    R = p && cl(p) ? dn(p).body : dn(null).body;
  }
  const $ = !d && c && (!m || w) ? "none" : void 0, I = m ? {
    in: d,
    onEnter: b,
    onExited: T
  } : void 0;
  return /* @__PURE__ */ P(Ko, {
    disablePortal: l,
    container: R,
    children: /* @__PURE__ */ P(Z1, {
      anchorEl: r,
      direction: a,
      disablePortal: l,
      modifiers: u,
      ref: n,
      open: m ? !w : d,
      placement: f,
      popperOptions: h,
      popperRef: g,
      slotProps: v,
      slots: x,
      ...E,
      style: {
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: "fixed",
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display: $,
        ...y
      },
      TransitionProps: I,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (Mg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: qr(i.oneOfType([Er, i.object, i.func]), (e) => {
    if (e.open) {
      const t = wa(e.anchorEl);
      if (t && cl(t) && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || X1(t) && t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join(`
`));
    }
    return null;
  }),
  /**
   * Popper render function or node.
   */
  children: i.oneOfType([i.node, i.func]),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([Er, i.func]),
  /**
   * Direction of the text.
   * @default 'ltr'
   */
  direction: i.oneOf(["ltr", "rtl"]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: i.arrayOf(i.shape({
    data: i.object,
    effect: i.func,
    enabled: i.bool,
    fn: i.func,
    name: i.any,
    options: i.object,
    phase: i.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: i.arrayOf(i.string),
    requiresIfExists: i.arrayOf(i.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: i.shape({
    modifiers: i.array,
    onFirstUpdate: i.func,
    placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: i.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Pr,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType
  }),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: i.bool
});
const eE = Me(Mg, {
  name: "MuiPopper",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), ul = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = il(), o = kt({
    props: t,
    name: "MuiPopper"
  }), {
    anchorEl: s,
    component: a,
    components: l,
    componentsProps: c,
    container: u,
    disablePortal: d,
    keepMounted: f,
    modifiers: h,
    open: g,
    placement: y,
    popperOptions: m,
    popperRef: v,
    transition: x,
    slots: E,
    slotProps: w,
    ...S
  } = o, b = (E == null ? void 0 : E.root) ?? (l == null ? void 0 : l.Root), T = {
    anchorEl: s,
    container: u,
    disablePortal: d,
    keepMounted: f,
    modifiers: h,
    open: g,
    placement: y,
    popperOptions: m,
    popperRef: v,
    transition: x,
    ...S
  };
  return /* @__PURE__ */ P(eE, {
    as: a,
    direction: r ? "rtl" : "ltr",
    slots: {
      root: b
    },
    slotProps: w ?? c,
    ...T,
    ref: n
  });
});
process.env.NODE_ENV !== "production" && (ul.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: i.oneOfType([Er, i.object, i.func]),
  /**
   * Popper render function or node.
   */
  children: i.oneOfType([i.node, i.func]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  components: i.shape({
    Root: i.elementType
  }),
  /**
   * The props used for each slot inside the Popper.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  componentsProps: i.shape({
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([Er, i.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: i.arrayOf(i.shape({
    data: i.object,
    effect: i.func,
    enabled: i.bool,
    fn: i.func,
    name: i.any,
    options: i.object,
    phase: i.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: i.arrayOf(i.string),
    requiresIfExists: i.arrayOf(i.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: i.shape({
    modifiers: i.array,
    onFirstUpdate: i.func,
    placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: i.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Pr,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: i.bool
});
function dt(e, t) {
  const {
    className: n,
    elementType: r,
    ownerState: o,
    externalForwardedProps: s,
    internalForwardedProps: a,
    shouldForwardComponentProp: l = !1,
    ...c
  } = t, {
    component: u,
    slots: d = {
      [e]: void 0
    },
    slotProps: f = {
      [e]: void 0
    },
    ...h
  } = s, g = d[e] || r, y = Qh(f[e], o), {
    props: {
      component: m,
      ...v
    },
    internalRef: x
  } = Xh({
    className: n,
    ...c,
    externalForwardedProps: e === "root" ? h : void 0,
    externalSlotProps: y
  }), E = tn(x, y == null ? void 0 : y.ref, t.ref), w = e === "root" ? m || u : m, S = Gh(g, {
    ...e === "root" && !u && !d[e] && a,
    ...e !== "root" && !d[e] && a,
    ...v,
    ...w && !l && {
      as: w
    },
    ...w && l && {
      component: w
    },
    ref: E
  }, o);
  return [g, S];
}
function tE(e) {
  return St("MuiTooltip", e);
}
const Rt = $t("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]);
function nE(e) {
  return Math.round(e * 1e5) / 1e5;
}
const rE = (e) => {
  const {
    classes: t,
    disableInteractive: n,
    arrow: r,
    touch: o,
    placement: s
  } = e, a = {
    popper: ["popper", !n && "popperInteractive", r && "popperArrow"],
    tooltip: ["tooltip", r && "tooltipArrow", o && "touch", `tooltipPlacement${Te(s.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return Mt(a, tE, t);
}, oE = Me(ul, {
  name: "MuiTooltip",
  slot: "Popper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.popper, !n.disableInteractive && t.popperInteractive, n.arrow && t.popperArrow, !n.open && t.popperClose];
  }
})(nt(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.tooltip,
  pointerEvents: "none",
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableInteractive,
    style: {
      pointerEvents: "auto"
    }
  }, {
    props: ({
      open: t
    }) => !t,
    style: {
      pointerEvents: "none"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      [`&[data-popper-placement*="bottom"] .${Rt.arrow}`]: {
        top: 0,
        marginTop: "-0.71em",
        "&::before": {
          transformOrigin: "0 100%"
        }
      },
      [`&[data-popper-placement*="top"] .${Rt.arrow}`]: {
        bottom: 0,
        marginBottom: "-0.71em",
        "&::before": {
          transformOrigin: "100% 0"
        }
      },
      [`&[data-popper-placement*="right"] .${Rt.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "100% 100%"
        }
      },
      [`&[data-popper-placement*="left"] .${Rt.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "0 0"
        }
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${Rt.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${Rt.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${Rt.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${Rt.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }]
}))), iE = Me("div", {
  name: "MuiTooltip",
  slot: "Tooltip",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.tooltip, n.touch && t.touch, n.arrow && t.tooltipArrow, t[`tooltipPlacement${Te(n.placement.split("-")[0])}`]];
  }
})(nt(({
  theme: e
}) => ({
  backgroundColor: e.vars ? e.vars.palette.Tooltip.bg : Yt(e.palette.grey[700], 0.92),
  borderRadius: (e.vars || e).shape.borderRadius,
  color: (e.vars || e).palette.common.white,
  fontFamily: e.typography.fontFamily,
  padding: "4px 8px",
  fontSize: e.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: "break-word",
  fontWeight: e.typography.fontWeightMedium,
  [`.${Rt.popper}[data-popper-placement*="left"] &`]: {
    transformOrigin: "right center"
  },
  [`.${Rt.popper}[data-popper-placement*="right"] &`]: {
    transformOrigin: "left center"
  },
  [`.${Rt.popper}[data-popper-placement*="top"] &`]: {
    transformOrigin: "center bottom",
    marginBottom: "14px"
  },
  [`.${Rt.popper}[data-popper-placement*="bottom"] &`]: {
    transformOrigin: "center top",
    marginTop: "14px"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      position: "relative",
      margin: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      padding: "8px 16px",
      fontSize: e.typography.pxToRem(14),
      lineHeight: `${nE(16 / 14)}em`,
      fontWeight: e.typography.fontWeightRegular
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl,
    style: {
      [`.${Rt.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "14px"
      },
      [`.${Rt.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl && t.touch,
    style: {
      [`.${Rt.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "24px"
      },
      [`.${Rt.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl,
    style: {
      [`.${Rt.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "14px"
      },
      [`.${Rt.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl && t.touch,
    style: {
      [`.${Rt.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "24px"
      },
      [`.${Rt.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${Rt.popper}[data-popper-placement*="top"] &`]: {
        marginBottom: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${Rt.popper}[data-popper-placement*="bottom"] &`]: {
        marginTop: "24px"
      }
    }
  }]
}))), sE = Me("span", {
  name: "MuiTooltip",
  slot: "Arrow",
  overridesResolver: (e, t) => t.arrow
})(nt(({
  theme: e
}) => ({
  overflow: "hidden",
  position: "absolute",
  width: "1em",
  height: "0.71em",
  boxSizing: "border-box",
  color: e.vars ? e.vars.palette.Tooltip.bg : Yt(e.palette.grey[700], 0.9),
  "&::before": {
    content: '""',
    margin: "auto",
    display: "block",
    width: "100%",
    height: "100%",
    backgroundColor: "currentColor",
    transform: "rotate(45deg)"
  }
})));
let js = !1;
const bp = new Uh();
let bi = {
  x: 0,
  y: 0
};
function Ls(e, t) {
  return (n, ...r) => {
    t && t(n, ...r), e(n, ...r);
  };
}
const dl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = kt({
    props: t,
    name: "MuiTooltip"
  }), {
    arrow: o = !1,
    children: s,
    classes: a,
    components: l = {},
    componentsProps: c = {},
    describeChild: u = !1,
    disableFocusListener: d = !1,
    disableHoverListener: f = !1,
    disableInteractive: h = !1,
    disableTouchListener: g = !1,
    enterDelay: y = 100,
    enterNextDelay: m = 0,
    enterTouchDelay: v = 700,
    followCursor: x = !1,
    id: E,
    leaveDelay: w = 0,
    leaveTouchDelay: S = 1500,
    onClose: b,
    onOpen: T,
    open: R,
    placement: $ = "bottom",
    PopperComponent: I,
    PopperProps: p = {},
    slotProps: O = {},
    slots: k = {},
    title: A,
    TransitionComponent: D,
    TransitionProps: _,
    ...M
  } = r, z = /* @__PURE__ */ C.isValidElement(s) ? s : /* @__PURE__ */ P("span", {
    children: s
  }), Y = Ir(), H = il(), [j, W] = C.useState(), [ee, K] = C.useState(null), oe = C.useRef(!1), ne = h || x, se = _o(), de = _o(), X = _o(), ae = _o(), [Q, ie] = zh({
    controlled: R,
    default: !1,
    name: "Tooltip",
    state: "open"
  });
  let F = Q;
  if (process.env.NODE_ENV !== "production") {
    const {
      current: $e
    } = C.useRef(R !== void 0);
    C.useEffect(() => {
      j && j.disabled && !$e && A !== "" && j.tagName.toLowerCase() === "button" && console.warn(["MUI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join(`
`));
    }, [A, j, $e]);
  }
  const he = Wu(E), fe = C.useRef(), Se = sr(() => {
    fe.current !== void 0 && (document.body.style.WebkitUserSelect = fe.current, fe.current = void 0), ae.clear();
  });
  C.useEffect(() => Se, [Se]);
  const Le = ($e) => {
    bp.clear(), js = !0, ie(!0), T && !F && T($e);
  }, Ne = sr(
    /**
     * @param {React.SyntheticEvent | Event} event
     */
    ($e) => {
      bp.start(800 + w, () => {
        js = !1;
      }), ie(!1), b && F && b($e), se.start(Y.transitions.duration.shortest, () => {
        oe.current = !1;
      });
    }
  ), ke = ($e) => {
    oe.current && $e.type !== "touchstart" || (j && j.removeAttribute("title"), de.clear(), X.clear(), y || js && m ? de.start(js ? m : y, () => {
      Le($e);
    }) : Le($e));
  }, Re = ($e) => {
    de.clear(), X.start(w, () => {
      Ne($e);
    });
  }, [, De] = C.useState(!1), Oe = ($e) => {
    ga($e.target) || (De(!1), Re($e));
  }, N = ($e) => {
    j || W($e.currentTarget), ga($e.target) && (De(!0), ke($e));
  }, q = ($e) => {
    oe.current = !0;
    const Lt = z.props;
    Lt.onTouchStart && Lt.onTouchStart($e);
  }, J = ($e) => {
    q($e), X.clear(), se.clear(), Se(), fe.current = document.body.style.WebkitUserSelect, document.body.style.WebkitUserSelect = "none", ae.start(v, () => {
      document.body.style.WebkitUserSelect = fe.current, ke($e);
    });
  }, U = ($e) => {
    z.props.onTouchEnd && z.props.onTouchEnd($e), Se(), X.start(S, () => {
      Ne($e);
    });
  };
  C.useEffect(() => {
    if (!F)
      return;
    function $e(Lt) {
      Lt.key === "Escape" && Ne(Lt);
    }
    return document.addEventListener("keydown", $e), () => {
      document.removeEventListener("keydown", $e);
    };
  }, [Ne, F]);
  const B = tn(go(z), W, n);
  !A && A !== 0 && (F = !1);
  const V = C.useRef(), G = ($e) => {
    const Lt = z.props;
    Lt.onMouseMove && Lt.onMouseMove($e), bi = {
      x: $e.clientX,
      y: $e.clientY
    }, V.current && V.current.update();
  }, pe = {}, me = typeof A == "string";
  u ? (pe.title = !F && me && !f ? A : null, pe["aria-describedby"] = F ? he : null) : (pe["aria-label"] = me ? A : null, pe["aria-labelledby"] = F && !me ? he : null);
  const re = {
    ...pe,
    ...M,
    ...z.props,
    className: Ce(M.className, z.props.className),
    onTouchStart: q,
    ref: B,
    ...x ? {
      onMouseMove: G
    } : {}
  };
  process.env.NODE_ENV !== "production" && (re["data-mui-internal-clone-element"] = !0, C.useEffect(() => {
    j && !j.getAttribute("data-mui-internal-clone-element") && console.error(["MUI: The `children` component of the Tooltip is not forwarding its props correctly.", "Please make sure that props are spread on the same element that the ref is applied to."].join(`
`));
  }, [j]));
  const Z = {};
  g || (re.onTouchStart = J, re.onTouchEnd = U), f || (re.onMouseOver = Ls(ke, re.onMouseOver), re.onMouseLeave = Ls(Re, re.onMouseLeave), ne || (Z.onMouseOver = ke, Z.onMouseLeave = Re)), d || (re.onFocus = Ls(N, re.onFocus), re.onBlur = Ls(Oe, re.onBlur), ne || (Z.onFocus = N, Z.onBlur = Oe)), process.env.NODE_ENV !== "production" && z.props.title && console.error(["MUI: You have provided a `title` prop to the child of <Tooltip />.", `Remove this title prop \`${z.props.title}\` or the Tooltip component.`].join(`
`));
  const te = {
    ...r,
    isRtl: H,
    arrow: o,
    disableInteractive: ne,
    placement: $,
    PopperComponentProp: I,
    touch: oe.current
  }, ye = typeof O.popper == "function" ? O.popper(te) : O.popper, we = C.useMemo(() => {
    var Lt, Dt;
    let $e = [{
      name: "arrow",
      enabled: !!ee,
      options: {
        element: ee,
        padding: 4
      }
    }];
    return (Lt = p.popperOptions) != null && Lt.modifiers && ($e = $e.concat(p.popperOptions.modifiers)), (Dt = ye == null ? void 0 : ye.popperOptions) != null && Dt.modifiers && ($e = $e.concat(ye.popperOptions.modifiers)), {
      ...p.popperOptions,
      ...ye == null ? void 0 : ye.popperOptions,
      modifiers: $e
    };
  }, [ee, p.popperOptions, ye == null ? void 0 : ye.popperOptions]), le = rE(te), xe = typeof O.transition == "function" ? O.transition(te) : O.transition, Ae = {
    slots: {
      popper: l.Popper,
      transition: l.Transition ?? D,
      tooltip: l.Tooltip,
      arrow: l.Arrow,
      ...k
    },
    slotProps: {
      arrow: O.arrow ?? c.arrow,
      popper: {
        ...p,
        ...ye ?? c.popper
      },
      // resolvedPopperProps can be spread because it's already an object
      tooltip: O.tooltip ?? c.tooltip,
      transition: {
        ..._,
        ...xe ?? c.transition
      }
    }
  }, [ze, Ye] = dt("popper", {
    elementType: oE,
    externalForwardedProps: Ae,
    ownerState: te,
    className: Ce(le.popper, p == null ? void 0 : p.className)
  }), [Pt, pt] = dt("transition", {
    elementType: Zi,
    externalForwardedProps: Ae,
    ownerState: te
  }), [It, _e] = dt("tooltip", {
    elementType: iE,
    className: le.tooltip,
    externalForwardedProps: Ae,
    ownerState: te
  }), [ot, xt] = dt("arrow", {
    elementType: sE,
    className: le.arrow,
    externalForwardedProps: Ae,
    ownerState: te,
    ref: K
  });
  return /* @__PURE__ */ Pe(C.Fragment, {
    children: [/* @__PURE__ */ C.cloneElement(z, re), /* @__PURE__ */ P(ze, {
      as: I ?? ul,
      placement: $,
      anchorEl: x ? {
        getBoundingClientRect: () => ({
          top: bi.y,
          left: bi.x,
          right: bi.x,
          bottom: bi.y,
          width: 0,
          height: 0
        })
      } : j,
      popperRef: V,
      open: j ? F : !1,
      id: he,
      transition: !0,
      ...Z,
      ...Ye,
      popperOptions: we,
      children: ({
        TransitionProps: $e
      }) => /* @__PURE__ */ P(Pt, {
        timeout: Y.transitions.duration.shorter,
        ...$e,
        ...pt,
        children: /* @__PURE__ */ Pe(It, {
          ..._e,
          children: [A, o ? /* @__PURE__ */ P(ot, {
            ...xt
          }) : null]
        })
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (dl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: i.bool,
  /**
   * Tooltip reference element.
   */
  children: Yr.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Arrow: i.elementType,
    Popper: i.elementType,
    Tooltip: i.elementType,
    Transition: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    arrow: i.object,
    popper: i.object,
    tooltip: i.object,
    transition: i.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: i.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: i.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: i.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: i.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: i.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: i.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: i.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: i.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: i.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: i.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: i.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: i.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: i.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The component used for the popper.
   * @deprecated use the `slots.popper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PopperComponent: i.elementType,
  /**
   * Props applied to the [`Popper`](https://mui.com/material-ui/api/popper/) element.
   * @deprecated use the `slotProps.popper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PopperProps: i.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    arrow: i.oneOfType([i.func, i.object]),
    popper: i.oneOfType([i.func, i.object]),
    tooltip: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    arrow: i.elementType,
    popper: i.elementType,
    tooltip: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: i.node,
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: i.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: i.object
});
function aE(e) {
  return typeof e.main == "string";
}
function lE(e, t = []) {
  if (!aE(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function hn(e = []) {
  return ([, t]) => t && lE(t, e);
}
function cE(e) {
  return St("MuiTypography", e);
}
$t("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]);
const uE = {
  primary: !0,
  secondary: !0,
  error: !0,
  info: !0,
  success: !0,
  warning: !0,
  textPrimary: !0,
  textSecondary: !0,
  textDisabled: !0
}, dE = IT(), fE = (e) => {
  const {
    align: t,
    gutterBottom: n,
    noWrap: r,
    paragraph: o,
    variant: s,
    classes: a
  } = e, l = {
    root: ["root", s, e.align !== "inherit" && `align${Te(t)}`, n && "gutterBottom", r && "noWrap", o && "paragraph"]
  };
  return Mt(l, cE, a);
}, pE = Me("span", {
  name: "MuiTypography",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.variant && t[n.variant], n.align !== "inherit" && t[`align${Te(n.align)}`], n.noWrap && t.noWrap, n.gutterBottom && t.gutterBottom, n.paragraph && t.paragraph];
  }
})(nt(({
  theme: e
}) => {
  var t;
  return {
    margin: 0,
    variants: [{
      props: {
        variant: "inherit"
      },
      style: {
        // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
        font: "inherit",
        lineHeight: "inherit",
        letterSpacing: "inherit"
      }
    }, ...Object.entries(e.typography).filter(([n, r]) => n !== "inherit" && r && typeof r == "object").map(([n, r]) => ({
      props: {
        variant: n
      },
      style: r
    })), ...Object.entries(e.palette).filter(hn()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        color: (e.vars || e).palette[n].main
      }
    })), ...Object.entries(((t = e.palette) == null ? void 0 : t.text) || {}).filter(([, n]) => typeof n == "string").map(([n]) => ({
      props: {
        color: `text${Te(n)}`
      },
      style: {
        color: (e.vars || e).palette.text[n]
      }
    })), {
      props: ({
        ownerState: n
      }) => n.align !== "inherit",
      style: {
        textAlign: "var(--Typography-textAlign)"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.noWrap,
      style: {
        overflow: "hidden",
        textOverflow: "ellipsis",
        whiteSpace: "nowrap"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.gutterBottom,
      style: {
        marginBottom: "0.35em"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.paragraph,
      style: {
        marginBottom: 16
      }
    }]
  };
})), vp = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  inherit: "p"
}, _g = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    color: r,
    ...o
  } = kt({
    props: t,
    name: "MuiTypography"
  }), s = !uE[r], a = dE({
    ...o,
    ...s && {
      color: r
    }
  }), {
    align: l = "inherit",
    className: c,
    component: u,
    gutterBottom: d = !1,
    noWrap: f = !1,
    paragraph: h = !1,
    variant: g = "body1",
    variantMapping: y = vp,
    ...m
  } = a, v = {
    ...a,
    align: l,
    color: r,
    className: c,
    component: u,
    gutterBottom: d,
    noWrap: f,
    paragraph: h,
    variant: g,
    variantMapping: y
  }, x = u || (h ? "p" : y[g] || vp[g]) || "span", E = fE(v);
  return /* @__PURE__ */ P(pE, {
    as: x,
    ref: n,
    className: Ce(E.root, c),
    ...m,
    ownerState: v,
    style: {
      ...l !== "inherit" && {
        "--Typography-textAlign": l
      },
      ...m.style
    }
  });
});
process.env.NODE_ENV !== "production" && (_g.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the component.
   * @default 'inherit'
   */
  align: i.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "success", "error", "info", "warning", "textPrimary", "textSecondary", "textDisabled"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */
  gutterBottom: i.bool,
  /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */
  noWrap: i.bool,
  /**
   * If `true`, the element will be a paragraph element.
   * @default false
   * @deprecated Use the `component` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  paragraph: i.bool,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Applies the theme typography styles.
   * @default 'body1'
   */
  variant: i.oneOfType([i.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), i.string]),
  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */
  variantMapping: i.object
});
function fl({
  isTitle: e = !1,
  isLabel: t = !1,
  titleLevel: n = "h6",
  textColor: r = "auto"
}) {
  return {
    textCommonStyles: cr(
      () => ({
        typography: e ? n : t ? "caption" : "body1",
        fontWeight: e || t ? "bold" : "normal",
        color: (s) => r === "error" ? s.palette.error.main : r === "primary" ? s.palette.primary.main : r === "success" ? s.palette.success.main : r === "disabled" ? s.palette.action.disabled : "inherit"
      }),
      [e, t, r]
    )
  };
}
const On = je(
  ({
    text: e,
    isLabel: t,
    isTitle: n = !1,
    titleLevel: r = "h6",
    ellipsis: o = !1,
    textColor: s = "auto",
    sx: a,
    ...l
  }) => {
    const { textCommonStyles: c } = fl({ isTitle: n, isLabel: t, titleLevel: r, textColor: s }), u = cr(
      () => /* @__PURE__ */ P(
        _g,
        {
          id: "VenomousUI-Text",
          component: "div",
          variant: n ? r : t ? "caption" : "body1",
          noWrap: o,
          sx: {
            ...c,
            ...a
          },
          ...l,
          children: e
        }
      ),
      [e, n, r, o, a, l, c]
    );
    return o ? /* @__PURE__ */ P(dl, { arrow: !0, title: e, children: u }) : u;
  }
);
On.displayName = "Text";
const mE = je(({ width: e = 100, text: t = "", sx: n }) => /* @__PURE__ */ Pe(Cr, { id: "VenomousUI-Blank", sx: { width: e, ...n }, children: [
  /* @__PURE__ */ P(Or, { width: e, icon: "solar:box-linear", color: "disabled" }),
  /* @__PURE__ */ P(On, { text: t, isTitle: !0, titleLevel: "h6", textColor: "disabled", textAlign: "center" })
] }));
mE.displayName = "Blank";
function hE(e) {
  return St("MuiSvgIcon", e);
}
$t("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const gE = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: r
  } = e, o = {
    root: ["root", t !== "inherit" && `color${Te(t)}`, `fontSize${Te(n)}`]
  };
  return Mt(o, hE, r);
}, yE = Me("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${Te(n.color)}`], t[`fontSize${Te(n.fontSize)}`]];
  }
})(nt(({
  theme: e
}) => {
  var t, n, r, o, s, a, l, c, u, d, f, h, g, y;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (o = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : o.call(t, "fill", {
      duration: (r = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : r.shorter
    }),
    variants: [
      {
        props: (m) => !m.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((a = (s = e.typography) == null ? void 0 : s.pxToRem) == null ? void 0 : a.call(s, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((c = (l = e.typography) == null ? void 0 : l.pxToRem) == null ? void 0 : c.call(l, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((d = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : d.call(u, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, m]) => m && m.main).map(([m]) => {
        var v, x;
        return {
          props: {
            color: m
          },
          style: {
            color: (x = (v = (e.vars ?? e).palette) == null ? void 0 : v[m]) == null ? void 0 : x.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (h = (f = (e.vars ?? e).palette) == null ? void 0 : f.action) == null ? void 0 : h.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (y = (g = (e.vars ?? e).palette) == null ? void 0 : g.action) == null ? void 0 : y.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), Xo = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = kt({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: o,
    className: s,
    color: a = "inherit",
    component: l = "svg",
    fontSize: c = "medium",
    htmlColor: u,
    inheritViewBox: d = !1,
    titleAccess: f,
    viewBox: h = "0 0 24 24",
    ...g
  } = r, y = /* @__PURE__ */ C.isValidElement(o) && o.type === "svg", m = {
    ...r,
    color: a,
    component: l,
    fontSize: c,
    instanceFontSize: t.fontSize,
    inheritViewBox: d,
    viewBox: h,
    hasSvgAsChild: y
  }, v = {};
  d || (v.viewBox = h);
  const x = gE(m);
  return /* @__PURE__ */ Pe(yE, {
    as: l,
    className: Ce(x.root, s),
    focusable: "false",
    color: u,
    "aria-hidden": f ? void 0 : !0,
    role: f ? "img" : void 0,
    ref: n,
    ...v,
    ...g,
    ...y && o.props,
    ownerState: m,
    children: [y ? o.props.children : o, f ? /* @__PURE__ */ P("title", {
      children: f
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (Xo.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: i.oneOfType([i.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: i.oneOfType([i.oneOf(["inherit", "large", "medium", "small"]), i.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: i.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: i.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: i.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: i.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: i.string
});
Xo.muiName = "SvgIcon";
function ys(e, t) {
  function n(r, o) {
    return /* @__PURE__ */ P(Xo, {
      "data-testid": process.env.NODE_ENV !== "production" ? `${t}Icon` : void 0,
      ref: o,
      ...r,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = Xo.muiName, /* @__PURE__ */ C.memo(/* @__PURE__ */ C.forwardRef(n));
}
function bE(e, t) {
  const n = e.charCodeAt(2);
  return e[0] === "o" && e[1] === "n" && n >= 65 && n <= 90 && typeof t == "function";
}
function fd(e, t) {
  if (!e)
    return t;
  function n(a, l) {
    const c = {};
    return Object.keys(l).forEach((u) => {
      bE(u, l[u]) && typeof a[u] == "function" && (c[u] = (...d) => {
        a[u](...d), l[u](...d);
      });
    }), c;
  }
  if (typeof e == "function" || typeof t == "function")
    return (a) => {
      const l = typeof t == "function" ? t(a) : t, c = typeof e == "function" ? e({
        ...a,
        ...l
      }) : e, u = Ce(a == null ? void 0 : a.className, l == null ? void 0 : l.className, c == null ? void 0 : c.className), d = n(c, l);
      return {
        ...l,
        ...c,
        ...d,
        ...!!u && {
          className: u
        },
        ...(l == null ? void 0 : l.style) && (c == null ? void 0 : c.style) && {
          style: {
            ...l.style,
            ...c.style
          }
        },
        ...(l == null ? void 0 : l.sx) && (c == null ? void 0 : c.sx) && {
          sx: [...Array.isArray(l.sx) ? l.sx : [l.sx], ...Array.isArray(c.sx) ? c.sx : [c.sx]]
        }
      };
    };
  const r = t, o = n(e, r), s = Ce(r == null ? void 0 : r.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...o,
    ...!!s && {
      className: s
    },
    ...(r == null ? void 0 : r.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...r.style,
        ...e.style
      }
    },
    ...(r == null ? void 0 : r.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(r.sx) ? r.sx : [r.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
class Sa {
  constructor() {
    Nr(this, "mountEffect", () => {
      this.shouldMount && !this.didMount && this.ref.current !== null && (this.didMount = !0, this.mounted.resolve());
    });
    this.ref = {
      current: null
    }, this.mounted = null, this.didMount = !1, this.shouldMount = !1, this.setShouldMount = null;
  }
  /** React ref to the ripple instance */
  /** If the ripple component should be mounted */
  /** Promise that resolves when the ripple component is mounted */
  /** If the ripple component has been mounted */
  /** React state hook setter */
  static create() {
    return new Sa();
  }
  static use() {
    const t = Wh(Sa.create).current, [n, r] = C.useState(!1);
    return t.shouldMount = n, t.setShouldMount = r, C.useEffect(t.mountEffect, [n]), t;
  }
  mount() {
    return this.mounted || (this.mounted = xE(), this.shouldMount = !0, this.setShouldMount(this.shouldMount)), this.mounted;
  }
  /* Ripple API */
  start(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.start(...t);
    });
  }
  stop(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.stop(...t);
    });
  }
  pulsate(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.pulsate(...t);
    });
  }
}
function vE() {
  return Sa.use();
}
function xE() {
  let e, t;
  const n = new Promise((r, o) => {
    e = r, t = o;
  });
  return n.resolve = e, n.reject = t, n;
}
function Dg(e) {
  const {
    className: t,
    classes: n,
    pulsate: r = !1,
    rippleX: o,
    rippleY: s,
    rippleSize: a,
    in: l,
    onExited: c,
    timeout: u
  } = e, [d, f] = C.useState(!1), h = Ce(t, n.ripple, n.rippleVisible, r && n.ripplePulsate), g = {
    width: a,
    height: a,
    top: -(a / 2) + s,
    left: -(a / 2) + o
  }, y = Ce(n.child, d && n.childLeaving, r && n.childPulsate);
  return !l && !d && f(!0), C.useEffect(() => {
    if (!l && c != null) {
      const m = setTimeout(c, u);
      return () => {
        clearTimeout(m);
      };
    }
  }, [c, l, u]), /* @__PURE__ */ P("span", {
    className: h,
    style: g,
    children: /* @__PURE__ */ P("span", {
      className: y
    })
  });
}
process.env.NODE_ENV !== "production" && (Dg.propTypes = {
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object.isRequired,
  className: i.string,
  /**
   * @ignore - injected from TransitionGroup
   */
  in: i.bool,
  /**
   * @ignore - injected from TransitionGroup
   */
  onExited: i.func,
  /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */
  pulsate: i.bool,
  /**
   * Diameter of the ripple.
   */
  rippleSize: i.number,
  /**
   * Horizontal position of the ripple center.
   */
  rippleX: i.number,
  /**
   * Vertical position of the ripple center.
   */
  rippleY: i.number,
  /**
   * exit delay
   */
  timeout: i.number.isRequired
});
const kn = $t("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), Jc = 550, wE = 80, SE = Ur`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`, TE = Ur`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`, EE = Ur`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`, CE = Me("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), OE = Me(Dg, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})`
  opacity: 0;
  position: absolute;

  &.${kn.rippleVisible} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${SE};
    animation-duration: ${Jc}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  &.${kn.ripplePulsate} {
    animation-duration: ${({
  theme: e
}) => e.transitions.duration.shorter}ms;
  }

  & .${kn.child} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${kn.childLeaving} {
    opacity: 0;
    animation-name: ${TE};
    animation-duration: ${Jc}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  & .${kn.childPulsate} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${EE};
    animation-duration: 2500ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`, Bg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = kt({
    props: t,
    name: "MuiTouchRipple"
  }), {
    center: o = !1,
    classes: s = {},
    className: a,
    ...l
  } = r, [c, u] = C.useState([]), d = C.useRef(0), f = C.useRef(null);
  C.useEffect(() => {
    f.current && (f.current(), f.current = null);
  }, [c]);
  const h = C.useRef(!1), g = _o(), y = C.useRef(null), m = C.useRef(null), v = C.useCallback((S) => {
    const {
      pulsate: b,
      rippleX: T,
      rippleY: R,
      rippleSize: $,
      cb: I
    } = S;
    u((p) => [...p, /* @__PURE__ */ P(OE, {
      classes: {
        ripple: Ce(s.ripple, kn.ripple),
        rippleVisible: Ce(s.rippleVisible, kn.rippleVisible),
        ripplePulsate: Ce(s.ripplePulsate, kn.ripplePulsate),
        child: Ce(s.child, kn.child),
        childLeaving: Ce(s.childLeaving, kn.childLeaving),
        childPulsate: Ce(s.childPulsate, kn.childPulsate)
      },
      timeout: Jc,
      pulsate: b,
      rippleX: T,
      rippleY: R,
      rippleSize: $
    }, d.current)]), d.current += 1, f.current = I;
  }, [s]), x = C.useCallback((S = {}, b = {}, T = () => {
  }) => {
    const {
      pulsate: R = !1,
      center: $ = o || b.pulsate,
      fakeElement: I = !1
      // For test purposes
    } = b;
    if ((S == null ? void 0 : S.type) === "mousedown" && h.current) {
      h.current = !1;
      return;
    }
    (S == null ? void 0 : S.type) === "touchstart" && (h.current = !0);
    const p = I ? null : m.current, O = p ? p.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let k, A, D;
    if ($ || S === void 0 || S.clientX === 0 && S.clientY === 0 || !S.clientX && !S.touches)
      k = Math.round(O.width / 2), A = Math.round(O.height / 2);
    else {
      const {
        clientX: _,
        clientY: M
      } = S.touches && S.touches.length > 0 ? S.touches[0] : S;
      k = Math.round(_ - O.left), A = Math.round(M - O.top);
    }
    if ($)
      D = Math.sqrt((2 * O.width ** 2 + O.height ** 2) / 3), D % 2 === 0 && (D += 1);
    else {
      const _ = Math.max(Math.abs((p ? p.clientWidth : 0) - k), k) * 2 + 2, M = Math.max(Math.abs((p ? p.clientHeight : 0) - A), A) * 2 + 2;
      D = Math.sqrt(_ ** 2 + M ** 2);
    }
    S != null && S.touches ? y.current === null && (y.current = () => {
      v({
        pulsate: R,
        rippleX: k,
        rippleY: A,
        rippleSize: D,
        cb: T
      });
    }, g.start(wE, () => {
      y.current && (y.current(), y.current = null);
    })) : v({
      pulsate: R,
      rippleX: k,
      rippleY: A,
      rippleSize: D,
      cb: T
    });
  }, [o, v, g]), E = C.useCallback(() => {
    x({}, {
      pulsate: !0
    });
  }, [x]), w = C.useCallback((S, b) => {
    if (g.clear(), (S == null ? void 0 : S.type) === "touchend" && y.current) {
      y.current(), y.current = null, g.start(0, () => {
        w(S, b);
      });
      return;
    }
    y.current = null, u((T) => T.length > 0 ? T.slice(1) : T), f.current = b;
  }, [g]);
  return C.useImperativeHandle(n, () => ({
    pulsate: E,
    start: x,
    stop: w
  }), [E, x, w]), /* @__PURE__ */ P(CE, {
    className: Ce(kn.root, s.root, a),
    ref: m,
    ...l,
    children: /* @__PURE__ */ P(rd, {
      component: null,
      exit: !0,
      children: c
    })
  });
});
process.env.NODE_ENV !== "production" && (Bg.propTypes = {
  /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */
  center: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string
});
function RE(e) {
  return St("MuiButtonBase", e);
}
const $E = $t("MuiButtonBase", ["root", "disabled", "focusVisible"]), kE = (e) => {
  const {
    disabled: t,
    focusVisible: n,
    focusVisibleClassName: r,
    classes: o
  } = e, a = Mt({
    root: ["root", t && "disabled", n && "focusVisible"]
  }, RE, o);
  return n && r && (a.root += ` ${r}`), a;
}, PE = Me("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  textDecoration: "none",
  // So we take precedent over the style of a native <a /> element.
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${$E.disabled}`]: {
    pointerEvents: "none",
    // Disable link interactions
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), pd = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = kt({
    props: t,
    name: "MuiButtonBase"
  }), {
    action: o,
    centerRipple: s = !1,
    children: a,
    className: l,
    component: c = "button",
    disabled: u = !1,
    disableRipple: d = !1,
    disableTouchRipple: f = !1,
    focusRipple: h = !1,
    focusVisibleClassName: g,
    LinkComponent: y = "a",
    onBlur: m,
    onClick: v,
    onContextMenu: x,
    onDragLeave: E,
    onFocus: w,
    onFocusVisible: S,
    onKeyDown: b,
    onKeyUp: T,
    onMouseDown: R,
    onMouseLeave: $,
    onMouseUp: I,
    onTouchEnd: p,
    onTouchMove: O,
    onTouchStart: k,
    tabIndex: A = 0,
    TouchRippleProps: D,
    touchRippleRef: _,
    type: M,
    ...z
  } = r, Y = C.useRef(null), H = vE(), j = tn(H.ref, _), [W, ee] = C.useState(!1);
  u && W && ee(!1), C.useImperativeHandle(o, () => ({
    focusVisible: () => {
      ee(!0), Y.current.focus();
    }
  }), []);
  const K = H.shouldMount && !d && !u;
  C.useEffect(() => {
    W && h && !d && H.pulsate();
  }, [d, h, W, H]);
  const oe = vr(H, "start", R, f), ne = vr(H, "stop", x, f), se = vr(H, "stop", E, f), de = vr(H, "stop", I, f), X = vr(H, "stop", (N) => {
    W && N.preventDefault(), $ && $(N);
  }, f), ae = vr(H, "start", k, f), Q = vr(H, "stop", p, f), ie = vr(H, "stop", O, f), F = vr(H, "stop", (N) => {
    ga(N.target) || ee(!1), m && m(N);
  }, !1), he = sr((N) => {
    Y.current || (Y.current = N.currentTarget), ga(N.target) && (ee(!0), S && S(N)), w && w(N);
  }), fe = () => {
    const N = Y.current;
    return c && c !== "button" && !(N.tagName === "A" && N.href);
  }, Se = sr((N) => {
    h && !N.repeat && W && N.key === " " && H.stop(N, () => {
      H.start(N);
    }), N.target === N.currentTarget && fe() && N.key === " " && N.preventDefault(), b && b(N), N.target === N.currentTarget && fe() && N.key === "Enter" && !u && (N.preventDefault(), v && v(N));
  }), Le = sr((N) => {
    h && N.key === " " && W && !N.defaultPrevented && H.stop(N, () => {
      H.pulsate(N);
    }), T && T(N), v && N.target === N.currentTarget && fe() && N.key === " " && !N.defaultPrevented && v(N);
  });
  let Ne = c;
  Ne === "button" && (z.href || z.to) && (Ne = y);
  const ke = {};
  Ne === "button" ? (ke.type = M === void 0 ? "button" : M, ke.disabled = u) : (!z.href && !z.to && (ke.role = "button"), u && (ke["aria-disabled"] = u));
  const Re = tn(n, Y), De = {
    ...r,
    centerRipple: s,
    component: c,
    disabled: u,
    disableRipple: d,
    disableTouchRipple: f,
    focusRipple: h,
    tabIndex: A,
    focusVisible: W
  }, Oe = kE(De);
  return /* @__PURE__ */ Pe(PE, {
    as: Ne,
    className: Ce(Oe.root, l),
    ownerState: De,
    onBlur: F,
    onClick: v,
    onContextMenu: ne,
    onFocus: he,
    onKeyDown: Se,
    onKeyUp: Le,
    onMouseDown: oe,
    onMouseLeave: X,
    onMouseUp: de,
    onDragLeave: se,
    onTouchEnd: Q,
    onTouchMove: ie,
    onTouchStart: ae,
    ref: Re,
    tabIndex: u ? -1 : A,
    type: M,
    ...ke,
    ...z,
    children: [a, K ? /* @__PURE__ */ P(Bg, {
      ref: j,
      center: s,
      ...D
    }) : null]
  });
});
function vr(e, t, n, r = !1) {
  return sr((o) => (n && n(o), r || e[t](o), !0));
}
process.env.NODE_ENV !== "production" && (pd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: Pr,
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: i.bool,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: Vu,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: i.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: i.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: i.string,
  /**
   * @ignore
   */
  href: i.any,
  /**
   * The component used to render a link when the `href` prop is provided.
   * @default 'a'
   */
  LinkComponent: i.elementType,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * @ignore
   */
  onContextMenu: i.func,
  /**
   * @ignore
   */
  onDragLeave: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: i.func,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * @ignore
   */
  onKeyUp: i.func,
  /**
   * @ignore
   */
  onMouseDown: i.func,
  /**
   * @ignore
   */
  onMouseLeave: i.func,
  /**
   * @ignore
   */
  onMouseUp: i.func,
  /**
   * @ignore
   */
  onTouchEnd: i.func,
  /**
   * @ignore
   */
  onTouchMove: i.func,
  /**
   * @ignore
   */
  onTouchStart: i.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * @default 0
   */
  tabIndex: i.number,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: i.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: i.oneOfType([i.func, i.shape({
    current: i.shape({
      pulsate: i.func.isRequired,
      start: i.func.isRequired,
      stop: i.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  type: i.oneOfType([i.oneOf(["button", "reset", "submit"]), i.string])
});
function IE(e) {
  return St("MuiCircularProgress", e);
}
$t("MuiCircularProgress", ["root", "determinate", "indeterminate", "colorPrimary", "colorSecondary", "svg", "circle", "circleDeterminate", "circleIndeterminate", "circleDisableShrink"]);
const Ar = 44, Zc = Ur`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`, eu = Ur`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: -126px;
  }
`, NE = typeof Zc != "string" ? oi`
        animation: ${Zc} 1.4s linear infinite;
      ` : null, AE = typeof eu != "string" ? oi`
        animation: ${eu} 1.4s ease-in-out infinite;
      ` : null, ME = (e) => {
  const {
    classes: t,
    variant: n,
    color: r,
    disableShrink: o
  } = e, s = {
    root: ["root", n, `color${Te(r)}`],
    svg: ["svg"],
    circle: ["circle", `circle${Te(n)}`, o && "circleDisableShrink"]
  };
  return Mt(s, IE, t);
}, _E = Me("span", {
  name: "MuiCircularProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`color${Te(n.color)}`]];
  }
})(nt(({
  theme: e
}) => ({
  display: "inline-block",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("transform")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: NE || {
      animation: `${Zc} 1.4s linear infinite`
    }
  }, ...Object.entries(e.palette).filter(hn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  }))]
}))), DE = Me("svg", {
  name: "MuiCircularProgress",
  slot: "Svg",
  overridesResolver: (e, t) => t.svg
})({
  display: "block"
  // Keeps the progress centered
}), BE = Me("circle", {
  name: "MuiCircularProgress",
  slot: "Circle",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.circle, t[`circle${Te(n.variant)}`], n.disableShrink && t.circleDisableShrink];
  }
})(nt(({
  theme: e
}) => ({
  stroke: "currentColor",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("stroke-dashoffset")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: {
      // Some default value that looks fine waiting for the animation to kicks in.
      strokeDasharray: "80px, 200px",
      strokeDashoffset: 0
      // Add the unit to fix a Edge 16 and below bug.
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" && !t.disableShrink,
    style: AE || {
      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
      animation: `${eu} 1.4s ease-in-out infinite`
    }
  }]
}))), md = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = kt({
    props: t,
    name: "MuiCircularProgress"
  }), {
    className: o,
    color: s = "primary",
    disableShrink: a = !1,
    size: l = 40,
    style: c,
    thickness: u = 3.6,
    value: d = 0,
    variant: f = "indeterminate",
    ...h
  } = r, g = {
    ...r,
    color: s,
    disableShrink: a,
    size: l,
    thickness: u,
    value: d,
    variant: f
  }, y = ME(g), m = {}, v = {}, x = {};
  if (f === "determinate") {
    const E = 2 * Math.PI * ((Ar - u) / 2);
    m.strokeDasharray = E.toFixed(3), x["aria-valuenow"] = Math.round(d), m.strokeDashoffset = `${((100 - d) / 100 * E).toFixed(3)}px`, v.transform = "rotate(-90deg)";
  }
  return /* @__PURE__ */ P(_E, {
    className: Ce(y.root, o),
    style: {
      width: l,
      height: l,
      ...v,
      ...c
    },
    ownerState: g,
    ref: n,
    role: "progressbar",
    ...x,
    ...h,
    children: /* @__PURE__ */ P(DE, {
      className: y.svg,
      ownerState: g,
      viewBox: `${Ar / 2} ${Ar / 2} ${Ar} ${Ar}`,
      children: /* @__PURE__ */ P(BE, {
        className: y.circle,
        style: m,
        ownerState: g,
        cx: Ar,
        cy: Ar,
        r: (Ar - u) / 2,
        fill: "none",
        strokeWidth: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (md.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   * @default false
   */
  disableShrink: qr(i.bool, (e) => e.disableShrink && e.variant && e.variant !== "indeterminate" ? new Error("MUI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.") : null),
  /**
   * The size of the component.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, for example '3rem'.
   * @default 40
   */
  size: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The thickness of the circle.
   * @default 3.6
   */
  thickness: i.number,
  /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   * @default 0
   */
  value: i.number,
  /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   * @default 'indeterminate'
   */
  variant: i.oneOf(["determinate", "indeterminate"])
});
function FE(e) {
  return St("MuiButton", e);
}
const to = $t("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorSuccess", "colorError", "colorInfo", "colorWarning", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "icon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge", "loading", "loadingWrapper", "loadingIconPlaceholder", "loadingIndicator", "loadingPositionCenter", "loadingPositionStart", "loadingPositionEnd"]), Fg = /* @__PURE__ */ C.createContext({});
process.env.NODE_ENV !== "production" && (Fg.displayName = "ButtonGroupContext");
const jg = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (jg.displayName = "ButtonGroupButtonContext");
const jE = (e) => {
  const {
    color: t,
    disableElevation: n,
    fullWidth: r,
    size: o,
    variant: s,
    loading: a,
    loadingPosition: l,
    classes: c
  } = e, u = {
    root: ["root", a && "loading", s, `${s}${Te(t)}`, `size${Te(o)}`, `${s}Size${Te(o)}`, `color${Te(t)}`, n && "disableElevation", r && "fullWidth", a && `loadingPosition${Te(l)}`],
    startIcon: ["icon", "startIcon", `iconSize${Te(o)}`],
    endIcon: ["icon", "endIcon", `iconSize${Te(o)}`],
    loadingIndicator: ["loadingIndicator"],
    loadingWrapper: ["loadingWrapper"]
  }, d = Mt(u, FE, c);
  return {
    ...c,
    // forward the focused, disabled, etc. classes to the ButtonBase
    ...d
  };
}, Lg = [{
  props: {
    size: "small"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 18
    }
  }
}, {
  props: {
    size: "medium"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 20
    }
  }
}, {
  props: {
    size: "large"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 22
    }
  }
}], LE = Me(pd, {
  shouldForwardProp: (e) => hr(e) || e === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`${n.variant}${Te(n.color)}`], t[`size${Te(n.size)}`], t[`${n.variant}Size${Te(n.size)}`], n.color === "inherit" && t.colorInherit, n.disableElevation && t.disableElevation, n.fullWidth && t.fullWidth, n.loading && t.loading];
  }
})(nt(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? e.palette.grey[300] : e.palette.grey[800], n = e.palette.mode === "light" ? e.palette.grey.A100 : e.palette.grey[700];
  return {
    ...e.typography.button,
    minWidth: 64,
    padding: "6px 16px",
    border: 0,
    borderRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: e.transitions.duration.short
    }),
    "&:hover": {
      textDecoration: "none"
    },
    [`&.${to.disabled}`]: {
      color: (e.vars || e).palette.action.disabled
    },
    variants: [{
      props: {
        variant: "contained"
      },
      style: {
        color: "var(--variant-containedColor)",
        backgroundColor: "var(--variant-containedBg)",
        boxShadow: (e.vars || e).shadows[2],
        "&:hover": {
          boxShadow: (e.vars || e).shadows[4],
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            boxShadow: (e.vars || e).shadows[2]
          }
        },
        "&:active": {
          boxShadow: (e.vars || e).shadows[8]
        },
        [`&.${to.focusVisible}`]: {
          boxShadow: (e.vars || e).shadows[6]
        },
        [`&.${to.disabled}`]: {
          color: (e.vars || e).palette.action.disabled,
          boxShadow: (e.vars || e).shadows[0],
          backgroundColor: (e.vars || e).palette.action.disabledBackground
        }
      }
    }, {
      props: {
        variant: "outlined"
      },
      style: {
        padding: "5px 15px",
        border: "1px solid currentColor",
        borderColor: "var(--variant-outlinedBorder, currentColor)",
        backgroundColor: "var(--variant-outlinedBg)",
        color: "var(--variant-outlinedColor)",
        [`&.${to.disabled}`]: {
          border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
        }
      }
    }, {
      props: {
        variant: "text"
      },
      style: {
        padding: "6px 8px",
        color: "var(--variant-textColor)",
        backgroundColor: "var(--variant-textBg)"
      }
    }, ...Object.entries(e.palette).filter(hn()).map(([r]) => ({
      props: {
        color: r
      },
      style: {
        "--variant-textColor": (e.vars || e).palette[r].main,
        "--variant-outlinedColor": (e.vars || e).palette[r].main,
        "--variant-outlinedBorder": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / 0.5)` : Yt(e.palette[r].main, 0.5),
        "--variant-containedColor": (e.vars || e).palette[r].contrastText,
        "--variant-containedBg": (e.vars || e).palette[r].main,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": (e.vars || e).palette[r].dark,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[r].main, e.palette.action.hoverOpacity),
            "--variant-outlinedBorder": (e.vars || e).palette[r].main,
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[r].main, e.palette.action.hoverOpacity)
          }
        }
      }
    })), {
      props: {
        color: "inherit"
      },
      style: {
        color: "inherit",
        borderColor: "currentColor",
        "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedBg : t,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedHoverBg : n,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette.text.primary, e.palette.action.hoverOpacity),
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette.text.primary, e.palette.action.hoverOpacity)
          }
        }
      }
    }, {
      props: {
        size: "small",
        variant: "text"
      },
      style: {
        padding: "4px 5px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "text"
      },
      style: {
        padding: "8px 11px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "outlined"
      },
      style: {
        padding: "3px 9px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "outlined"
      },
      style: {
        padding: "7px 21px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "contained"
      },
      style: {
        padding: "4px 10px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "contained"
      },
      style: {
        padding: "8px 22px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        disableElevation: !0
      },
      style: {
        boxShadow: "none",
        "&:hover": {
          boxShadow: "none"
        },
        [`&.${to.focusVisible}`]: {
          boxShadow: "none"
        },
        "&:active": {
          boxShadow: "none"
        },
        [`&.${to.disabled}`]: {
          boxShadow: "none"
        }
      }
    }, {
      props: {
        fullWidth: !0
      },
      style: {
        width: "100%"
      }
    }, {
      props: {
        loadingPosition: "center"
      },
      style: {
        transition: e.transitions.create(["background-color", "box-shadow", "border-color"], {
          duration: e.transitions.duration.short
        }),
        [`&.${to.loading}`]: {
          color: "transparent"
        }
      }
    }]
  };
})), VE = Me("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.startIcon, n.loading && t.startIconLoadingStart, t[`iconSize${Te(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginLeft: -2
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginRight: -8
    }
  }, ...Lg]
})), zE = Me("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.endIcon, n.loading && t.endIconLoadingEnd, t[`iconSize${Te(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginRight: -2
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginLeft: -8
    }
  }, ...Lg]
})), WE = Me("span", {
  name: "MuiButton",
  slot: "LoadingIndicator",
  overridesResolver: (e, t) => t.loadingIndicator
})(({
  theme: e
}) => ({
  display: "none",
  position: "absolute",
  visibility: "visible",
  variants: [{
    props: {
      loading: !0
    },
    style: {
      display: "flex"
    }
  }, {
    props: {
      loadingPosition: "start"
    },
    style: {
      left: 14
    }
  }, {
    props: {
      loadingPosition: "start",
      size: "small"
    },
    style: {
      left: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "start"
    },
    style: {
      left: 6
    }
  }, {
    props: {
      loadingPosition: "center"
    },
    style: {
      left: "50%",
      transform: "translate(-50%)",
      color: (e.vars || e).palette.action.disabled
    }
  }, {
    props: {
      loadingPosition: "end"
    },
    style: {
      right: 14
    }
  }, {
    props: {
      loadingPosition: "end",
      size: "small"
    },
    style: {
      right: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "end"
    },
    style: {
      right: 6
    }
  }, {
    props: {
      loadingPosition: "start",
      fullWidth: !0
    },
    style: {
      position: "relative",
      left: -10
    }
  }, {
    props: {
      loadingPosition: "end",
      fullWidth: !0
    },
    style: {
      position: "relative",
      right: -10
    }
  }]
})), xp = Me("span", {
  name: "MuiButton",
  slot: "LoadingIconPlaceholder",
  overridesResolver: (e, t) => t.loadingIconPlaceholder
})({
  display: "inline-block",
  width: "1em",
  height: "1em"
}), hd = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = C.useContext(Fg), o = C.useContext(jg), s = Ki(r, t), a = kt({
    props: s,
    name: "MuiButton"
  }), {
    children: l,
    color: c = "primary",
    component: u = "button",
    className: d,
    disabled: f = !1,
    disableElevation: h = !1,
    disableFocusRipple: g = !1,
    endIcon: y,
    focusVisibleClassName: m,
    fullWidth: v = !1,
    id: x,
    loading: E = null,
    loadingIndicator: w,
    loadingPosition: S = "center",
    size: b = "medium",
    startIcon: T,
    type: R,
    variant: $ = "text",
    ...I
  } = a, p = Wu(x), O = w ?? /* @__PURE__ */ P(md, {
    "aria-labelledby": p,
    color: "inherit",
    size: 16
  }), k = {
    ...a,
    color: c,
    component: u,
    disabled: f,
    disableElevation: h,
    disableFocusRipple: g,
    fullWidth: v,
    loading: E,
    loadingIndicator: O,
    loadingPosition: S,
    size: b,
    type: R,
    variant: $
  }, A = jE(k), D = (T || E && S === "start") && /* @__PURE__ */ P(VE, {
    className: A.startIcon,
    ownerState: k,
    children: T || /* @__PURE__ */ P(xp, {
      className: A.loadingIconPlaceholder,
      ownerState: k
    })
  }), _ = (y || E && S === "end") && /* @__PURE__ */ P(zE, {
    className: A.endIcon,
    ownerState: k,
    children: y || /* @__PURE__ */ P(xp, {
      className: A.loadingIconPlaceholder,
      ownerState: k
    })
  }), M = o || "", z = typeof E == "boolean" ? (
    // use plain HTML span to minimize the runtime overhead
    /* @__PURE__ */ P("span", {
      className: A.loadingWrapper,
      style: {
        display: "contents"
      },
      children: E && /* @__PURE__ */ P(WE, {
        className: A.loadingIndicator,
        ownerState: k,
        children: O
      })
    })
  ) : null;
  return /* @__PURE__ */ Pe(LE, {
    ownerState: k,
    className: Ce(r.className, A.root, d, M),
    component: u,
    disabled: f || E,
    focusRipple: !g,
    focusVisibleClassName: Ce(A.focusVisible, m),
    ref: n,
    type: R,
    id: E ? p : x,
    ...I,
    classes: A,
    children: [D, S !== "end" && z, l, S === "end" && z, _]
  });
});
process.env.NODE_ENV !== "production" && (hd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: i.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * Element placed after the children.
   */
  endIcon: i.node,
  /**
   * @ignore
   */
  focusVisibleClassName: i.string,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: i.string,
  /**
   * @ignore
   */
  id: i.string,
  /**
   * If `true`, the loading indicator is visible and the button is disabled.
   * If `true | false`, the loading wrapper is always rendered before the children to prevent [Google Translation Crash](https://github.com/mui/material-ui/issues/27853).
   * @default null
   */
  loading: i.bool,
  /**
   * Element placed before the children if the button is in loading state.
   * The node should contain an element with `role="progressbar"` with an accessible name.
   * By default, it renders a `CircularProgress` that is labeled by the button itself.
   * @default <CircularProgress color="inherit" size={16} />
   */
  loadingIndicator: i.node,
  /**
   * The loading indicator can be positioned on the start, end, or the center of the button.
   * @default 'center'
   */
  loadingPosition: i.oneOf(["center", "end", "start"]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["small", "medium", "large"]), i.string]),
  /**
   * Element placed before the children.
   */
  startIcon: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * @ignore
   */
  type: i.oneOfType([i.oneOf(["button", "reset", "submit"]), i.string]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: i.oneOfType([i.oneOf(["contained", "outlined", "text"]), i.string])
});
const pr = je(
  ({
    text: e,
    loading: t,
    disabled: n,
    isOutlined: r,
    isGhost: o,
    isCircle: s,
    icon: a,
    iconWidth: l = 20,
    iconPosition: c = void 0,
    color: u = "primary",
    onClick: d,
    sx: f,
    ...h
  }) => {
    const { buttonColors: g } = UE({ color: u, isGhost: o, isOutlined: r }), y = cr(() => a ? /* @__PURE__ */ P(Or, { icon: a, width: l }) : null, [a, l]);
    return /* @__PURE__ */ Pe(
      hd,
      {
        variant: o ? "text" : r ? "outlined" : "contained",
        loading: t,
        disabled: n,
        startIcon: c === "start" && y,
        endIcon: c === "end" && y,
        sx: {
          minWidth: "40px",
          minHeight: "40px",
          width: s ? "40px" : "unset",
          height: s ? "40px" : "unset",
          textTransform: "none",
          fontWeight: "bold",
          borderRadius: s ? "50%" : "8px",
          p: s ? "6px" : "auto",
          px: s ? "0" : "16px !important",
          cursor: t ? "wait !important" : n ? "not-allowed !important" : "pointer",
          pointerEvents: "auto !important",
          transition: "background-color 0s, background-image 0s",
          "& .MuiButton-startIcon": { svg: { color: "inherit", mr: "8px" } },
          "& .MuiButton-endIcon": { svg: { color: "inherit", ml: "8px" } },
          ...g,
          ...f
        },
        onClick: (m) => {
          m.stopPropagation(), d == null || d(m);
        },
        ...h,
        children: [
          !c && y,
          !s && e
        ]
      }
    );
  }
);
pr.displayName = "Button";
function UE({ color: e = "primary", isGhost: t, isOutlined: n }) {
  const r = Ir();
  return { buttonColors: cr(() => {
    const s = r.palette.mode === "dark", a = {
      auto: r.palette.text.primary,
      disabled: r.palette.action.disabled,
      primary: r.palette.primary.main,
      success: r.palette.success.main,
      error: r.palette.error.main
    }, l = e in a ? a[e] : "inherit", c = s && ["auto", "disabled"].includes(e) ? "black" : r.palette.primary.contrastText;
    return {
      backgroundColor: t || n ? "transparent" : l,
      color: t || n ? l : c,
      borderColor: n ? l : "transparent"
    };
  }, [r, e, t, n]) };
}
function HE(e) {
  return St("MuiPaper", e);
}
$t("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const qE = (e) => {
  const {
    square: t,
    elevation: n,
    variant: r,
    classes: o
  } = e, s = {
    root: ["root", r, !t && "rounded", r === "elevation" && `elevation${n}`]
  };
  return Mt(s, HE, o);
}, YE = Me("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(nt(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), ai = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var g;
  const r = kt({
    props: t,
    name: "MuiPaper"
  }), o = Ir(), {
    className: s,
    component: a = "div",
    elevation: l = 1,
    square: c = !1,
    variant: u = "elevation",
    ...d
  } = r, f = {
    ...r,
    component: a,
    elevation: l,
    square: c,
    variant: u
  }, h = qE(f);
  return process.env.NODE_ENV !== "production" && o.shadows[l] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${l}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${l}]\` is defined.`].join(`
`)), /* @__PURE__ */ P(YE, {
    as: a,
    ownerState: f,
    className: Ce(h.root, s),
    ref: n,
    ...d,
    style: {
      ...u === "elevation" && {
        "--Paper-shadow": (o.vars || o).shadows[l],
        ...o.vars && {
          "--Paper-overlay": (g = o.vars.overlays) == null ? void 0 : g[l]
        },
        ...!o.vars && o.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${Yt("#fff", zc(l))}, ${Yt("#fff", zc(l))})`
        }
      },
      ...d.style
    }
  });
});
process.env.NODE_ENV !== "production" && (ai.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: qr(Uu, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: i.bool,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: i.oneOfType([i.oneOf(["elevation", "outlined"]), i.string])
});
function li() {
  return {
    paperCommonStyles: cr(
      () => ({
        p: "8px",
        borderRadius: "8px !important",
        backgroundColor: ({ palette: t }) => t.background.paper,
        backgroundImage: "linear-gradient(rgba(255, 255, 255, 0.119), rgba(255, 255, 255, 0.119));"
      }),
      []
    )
  };
}
const ns = je(({ isOutlined: e, children: t, sx: n, ...r }) => {
  const { paperCommonStyles: o } = li();
  return /* @__PURE__ */ P(
    ai,
    {
      id: "VenomousUI-Paper",
      variant: e ? "outlined" : "elevation",
      elevation: e ? 0 : 3,
      square: !0,
      sx: {
        ...o,
        ...n
      },
      ...r,
      children: t
    }
  );
});
ns.displayName = "Paper";
const pl = je(
  ({ isOutlined: e, clickable: t, onClick: n, disabled: r, children: o, sx: s }) => t ? /* @__PURE__ */ P(
    hd,
    {
      id: "VenomousUI-Card",
      component: ns,
      isOutlined: e,
      disabled: r,
      onClick: r ? void 0 : n,
      sx: {
        display: "block",
        color: "inherit",
        textTransform: "none",
        borderRadius: "8px",
        cursor: r ? "not-allowed !important" : "pointer",
        pointerEvents: "auto !important",
        p: "16px",
        ...e ? {
          border: 1,
          borderColor: "divider"
        } : {},
        ...s
      },
      children: o
    }
  ) : /* @__PURE__ */ P(ns, { id: "VenomousUI-Card", isOutlined: e, sx: { p: "16px", ...s }, children: o })
);
pl.displayName = "Card";
const Kt = je(
  ({ children: e, row: t, alignItems: n, justifyContent: r, gap: o = 1, sx: s, ...a }) => /* @__PURE__ */ P(
    Cr,
    {
      id: "VenomousUI-Flex",
      component: "div",
      sx: {
        display: "flex",
        flexDirection: t ? "row" : "column",
        alignItems: n || (t ? "center" : "start"),
        justifyContent: r || "start",
        ...Array.isArray(o) ? { rowGap: o[0], columnGap: o[1] } : { gap: o },
        ...s
      },
      ...a,
      children: e
    }
  )
);
Kt.displayName = "Flex";
const GE = je(
  ({ title: e, subtitle: t, headerStartExtra: n, headerEndExtra: r, children: o, ...s }) => /* @__PURE__ */ Pe(pl, { ...s, children: [
    /* @__PURE__ */ Pe(Kt, { row: !0, mb: "8px", justifyContent: "space-between", alignItems: "center", children: [
      n && /* @__PURE__ */ P("div", { style: { marginRight: t ? "8px" : 0 }, children: n }),
      /* @__PURE__ */ Pe(Kt, { gap: 0, children: [
        e && /* @__PURE__ */ P(On, { text: e, isTitle: !0, titleLevel: "h6", lineHeight: "1.25rem", ellipsis: !0 }),
        t && /* @__PURE__ */ P(On, { text: t, isLabel: !0, ellipsis: !0 })
      ] }),
      r && /* @__PURE__ */ P(
        "div",
        {
          style: {
            marginRight: t ? "-8px" : 0,
            marginTop: t ? "-8px" : 0,
            marginLeft: "8px"
          },
          children: r
        }
      )
    ] }),
    o
  ] })
);
GE.displayName = "ExhibitCard";
const ml = 0, Kr = 1, ci = 2, Vg = 4;
function wp(e) {
  return () => e;
}
function KE(e) {
  e();
}
function zg(e, t) {
  return (n) => e(t(n));
}
function Sp(e, t) {
  return () => e(t);
}
function Wg(e, t) {
  return (n) => e(t, n);
}
function gd(e) {
  return e !== void 0;
}
function XE(...e) {
  return () => {
    e.map(KE);
  };
}
function ui() {
}
function hl(e, t) {
  return t(e), e;
}
function QE(e, t) {
  return t(e);
}
function gt(...e) {
  return e;
}
function rt(e, t) {
  return e(Kr, t);
}
function We(e, t) {
  e(ml, t);
}
function yd(e) {
  e(ci);
}
function Zt(e) {
  return e(Vg);
}
function Ie(e, t) {
  return rt(e, Wg(t, ml));
}
function mr(e, t) {
  const n = e(Kr, (r) => {
    n(), t(r);
  });
  return n;
}
function Tp(e) {
  let t, n;
  return (r) => (o) => {
    t = o, n && clearTimeout(n), n = setTimeout(() => {
      r(t);
    }, e);
  };
}
function Ug(e, t) {
  return e === t;
}
function ht(e = Ug) {
  let t;
  return (n) => (r) => {
    e(t, r) || (t = r, n(r));
  };
}
function Be(e) {
  return (t) => (n) => {
    e(n) && t(n);
  };
}
function Ee(e) {
  return (t) => zg(t, e);
}
function tr(e) {
  return (t) => () => {
    t(e);
  };
}
function ge(e, ...t) {
  const n = JE(...t);
  return (r, o) => {
    switch (r) {
      case ci:
        yd(e);
        return;
      case Kr:
        return rt(e, n(o));
    }
  };
}
function rr(e, t) {
  return (n) => (r) => {
    n(t = e(t, r));
  };
}
function Qo(e) {
  return (t) => (n) => {
    e > 0 ? e-- : t(n);
  };
}
function Fr(e) {
  let t = null, n;
  return (r) => (o) => {
    t = o, !n && (n = setTimeout(() => {
      n = void 0, r(t);
    }, e));
  };
}
function He(...e) {
  const t = new Array(e.length);
  let n = 0, r = null;
  const o = Math.pow(2, e.length) - 1;
  return e.forEach((s, a) => {
    const l = Math.pow(2, a);
    rt(s, (c) => {
      const u = n;
      n = n | l, t[a] = c, u !== o && n === o && r && (r(), r = null);
    });
  }), (s) => (a) => {
    const l = () => {
      s([a].concat(t));
    };
    n === o ? l() : r = l;
  };
}
function JE(...e) {
  return (t) => e.reduceRight(QE, t);
}
function ZE(e) {
  let t, n;
  const r = () => t == null ? void 0 : t();
  return function(o, s) {
    switch (o) {
      case Kr:
        return s ? n === s ? void 0 : (r(), n = s, t = rt(e, s), t) : (r(), ui);
      case ci:
        r(), n = null;
        return;
    }
  };
}
function be(e) {
  let t = e;
  const n = qe();
  return (r, o) => {
    switch (r) {
      case ml:
        t = o;
        break;
      case Kr: {
        o(t);
        break;
      }
      case Vg:
        return t;
    }
    return n(r, o);
  };
}
function en(e, t) {
  return hl(be(t), (n) => Ie(e, n));
}
function qe() {
  const e = [];
  return (t, n) => {
    switch (t) {
      case ml:
        e.slice().forEach((r) => {
          r(n);
        });
        return;
      case ci:
        e.splice(0, e.length);
        return;
      case Kr:
        return e.push(n), () => {
          const r = e.indexOf(n);
          r > -1 && e.splice(r, 1);
        };
    }
  };
}
function Sn(e) {
  return hl(qe(), (t) => Ie(e, t));
}
function Qe(e, t = [], { singleton: n } = { singleton: !0 }) {
  return {
    constructor: e,
    dependencies: t,
    id: eC(),
    singleton: n
  };
}
const eC = () => Symbol();
function tC(e) {
  const t = /* @__PURE__ */ new Map(), n = ({ constructor: r, dependencies: o, id: s, singleton: a }) => {
    if (a && t.has(s))
      return t.get(s);
    const l = r(o.map((c) => n(c)));
    return a && t.set(s, l), l;
  };
  return n(e);
}
function zt(...e) {
  const t = qe(), n = new Array(e.length);
  let r = 0;
  const o = Math.pow(2, e.length) - 1;
  return e.forEach((s, a) => {
    const l = Math.pow(2, a);
    rt(s, (c) => {
      n[a] = c, r = r | l, r === o && We(t, n);
    });
  }), function(s, a) {
    switch (s) {
      case ci: {
        yd(t);
        return;
      }
      case Kr:
        return r === o && a(n), rt(t, a);
    }
  };
}
function Fe(e, t = Ug) {
  return ge(e, ht(t));
}
function Ep(...e) {
  return function(t, n) {
    switch (t) {
      case ci:
        return;
      case Kr:
        return XE(...e.map((r) => rt(r, n)));
    }
  };
}
var Tn = /* @__PURE__ */ ((e) => (e[e.DEBUG = 0] = "DEBUG", e[e.INFO = 1] = "INFO", e[e.WARN = 2] = "WARN", e[e.ERROR = 3] = "ERROR", e))(Tn || {});
const nC = {
  0: "debug",
  3: "error",
  1: "log",
  2: "warn"
}, rC = () => typeof globalThis > "u" ? window : globalThis, Xr = Qe(
  () => {
    const e = be(
      3
      /* ERROR */
    );
    return {
      log: be((t, n, r = 1) => {
        var o;
        const s = (o = rC().VIRTUOSO_LOG_LEVEL) != null ? o : Zt(e);
        r >= s && console[nC[r]](
          "%creact-virtuoso: %c%s %o",
          "color: #0253b3; font-weight: bold",
          "color: initial",
          t,
          n
        );
      }),
      logLevel: e
    };
  },
  [],
  { singleton: !0 }
);
function yo(e, t, n) {
  return bd(e, t, n).callbackRef;
}
function bd(e, t, n) {
  const r = L.useRef(null);
  let o = (s) => {
  };
  if (typeof ResizeObserver < "u") {
    const s = L.useMemo(() => new ResizeObserver((a) => {
      const l = () => {
        const c = a[0].target;
        c.offsetParent !== null && e(c);
      };
      n ? l() : requestAnimationFrame(l);
    }), [e]);
    o = (a) => {
      a && t ? (s.observe(a), r.current = a) : (r.current && s.unobserve(r.current), r.current = null);
    };
  }
  return { callbackRef: o, ref: r };
}
function oC(e, t, n, r, o, s, a, l, c) {
  const u = L.useCallback(
    (d) => {
      const f = iC(d.children, t, l ? "offsetWidth" : "offsetHeight", o);
      let h = d.parentElement;
      for (; !h.dataset.virtuosoScroller; )
        h = h.parentElement;
      const g = h.lastElementChild.dataset.viewportType === "window";
      let y;
      g && (y = h.ownerDocument.defaultView);
      const m = a ? l ? a.scrollLeft : a.scrollTop : g ? l ? y.scrollX || y.document.documentElement.scrollLeft : y.scrollY || y.document.documentElement.scrollTop : l ? h.scrollLeft : h.scrollTop, v = a ? l ? a.scrollWidth : a.scrollHeight : g ? l ? y.document.documentElement.scrollWidth : y.document.documentElement.scrollHeight : l ? h.scrollWidth : h.scrollHeight, x = a ? l ? a.offsetWidth : a.offsetHeight : g ? l ? y.innerWidth : y.innerHeight : l ? h.offsetWidth : h.offsetHeight;
      r({
        scrollHeight: v,
        scrollTop: Math.max(m, 0),
        viewportHeight: x
      }), s == null || s(
        l ? Cp("column-gap", getComputedStyle(d).columnGap, o) : Cp("row-gap", getComputedStyle(d).rowGap, o)
      ), f !== null && e(f);
    },
    [e, t, o, s, a, r]
  );
  return bd(u, n, c);
}
function iC(e, t, n, r) {
  const o = e.length;
  if (o === 0)
    return null;
  const s = [];
  for (let a = 0; a < o; a++) {
    const l = e.item(a);
    if (l.dataset.index === void 0)
      continue;
    const c = parseInt(l.dataset.index), u = parseFloat(l.dataset.knownSize), d = t(l, n);
    if (d === 0 && r("Zero-sized element, this should not happen", { child: l }, Tn.ERROR), d === u)
      continue;
    const f = s[s.length - 1];
    s.length === 0 || f.size !== d || f.endIndex !== c - 1 ? s.push({ endIndex: c, size: d, startIndex: c }) : s[s.length - 1].endIndex++;
  }
  return s;
}
function Cp(e, t, n) {
  return t !== "normal" && !(t != null && t.endsWith("px")) && n(`${e} was not resolved to pixel value correctly`, t, Tn.WARN), t === "normal" ? 0 : parseInt(t ?? "0", 10);
}
function Hg(e, t, n) {
  const r = L.useRef(null), o = L.useCallback(
    (c) => {
      if (!(c != null && c.offsetParent))
        return;
      const u = c.getBoundingClientRect(), d = u.width;
      let f, h;
      if (t) {
        const g = t.getBoundingClientRect(), y = u.top - g.top;
        h = g.height - Math.max(0, y), f = y + t.scrollTop;
      } else {
        const g = a.current.ownerDocument.defaultView;
        h = g.innerHeight - Math.max(0, u.top), f = u.top + g.scrollY;
      }
      r.current = {
        offsetTop: f,
        visibleHeight: h,
        visibleWidth: d
      }, e(r.current);
    },
    [e, t]
  ), { callbackRef: s, ref: a } = bd(o, !0, n), l = L.useCallback(() => {
    o(a.current);
  }, [o, a]);
  return L.useEffect(() => {
    var c;
    if (t) {
      t.addEventListener("scroll", l);
      const u = new ResizeObserver(() => {
        requestAnimationFrame(l);
      });
      return u.observe(t), () => {
        t.removeEventListener("scroll", l), u.unobserve(t);
      };
    } else {
      const u = (c = a.current) == null ? void 0 : c.ownerDocument.defaultView;
      return u == null || u.addEventListener("scroll", l), u == null || u.addEventListener("resize", l), () => {
        u == null || u.removeEventListener("scroll", l), u == null || u.removeEventListener("resize", l);
      };
    }
  }, [l, t]), s;
}
const ln = Qe(
  () => {
    const e = qe(), t = qe(), n = be(0), r = qe(), o = be(0), s = qe(), a = qe(), l = be(0), c = be(0), u = be(0), d = be(0), f = qe(), h = qe(), g = be(!1), y = be(!1), m = be(!1);
    return Ie(
      ge(
        e,
        Ee(({ scrollTop: v }) => v)
      ),
      t
    ), Ie(
      ge(
        e,
        Ee(({ scrollHeight: v }) => v)
      ),
      a
    ), Ie(t, o), {
      deviation: n,
      fixedFooterHeight: u,
      fixedHeaderHeight: c,
      footerHeight: d,
      headerHeight: l,
      horizontalDirection: y,
      scrollBy: h,
      // input
      scrollContainerState: e,
      scrollHeight: a,
      scrollingInProgress: g,
      // signals
      scrollTo: f,
      scrollTop: t,
      skipAnimationFrameInResizeObserver: m,
      smoothScrollTargetReached: r,
      // state
      statefulScrollTop: o,
      viewportHeight: s
    };
  },
  [],
  { singleton: !0 }
), rs = { lvl: 0 };
function qg(e, t) {
  const n = e.length;
  if (n === 0)
    return [];
  let { index: r, value: o } = t(e[0]);
  const s = [];
  for (let a = 1; a < n; a++) {
    const { index: l, value: c } = t(e[a]);
    s.push({ end: l - 1, start: r, value: o }), r = l, o = c;
  }
  return s.push({ end: 1 / 0, start: r, value: o }), s;
}
function ft(e) {
  return e === rs;
}
function os(e, t) {
  if (!ft(e))
    return t === e.k ? e.v : t < e.k ? os(e.l, t) : os(e.r, t);
}
function qn(e, t, n = "k") {
  if (ft(e))
    return [-1 / 0, void 0];
  if (Number(e[n]) === t)
    return [e.k, e.v];
  if (Number(e[n]) < t) {
    const r = qn(e.r, t, n);
    return r[0] === -1 / 0 ? [e.k, e.v] : r;
  }
  return qn(e.l, t, n);
}
function bn(e, t, n) {
  return ft(e) ? Kg(t, n, 1) : t === e.k ? Vt(e, { k: t, v: n }) : t < e.k ? Op(Vt(e, { l: bn(e.l, t, n) })) : Op(Vt(e, { r: bn(e.r, t, n) }));
}
function jo() {
  return rs;
}
function gl(e, t, n) {
  if (ft(e))
    return [];
  const r = qn(e, t)[0];
  return sC(nu(e, r, n));
}
function tu(e, t) {
  if (ft(e)) return rs;
  const { k: n, l: r, r: o } = e;
  if (t === n) {
    if (ft(r))
      return o;
    if (ft(o))
      return r;
    {
      const [s, a] = Gg(r);
      return aa(Vt(e, { k: s, l: Yg(r), v: a }));
    }
  } else return t < n ? aa(Vt(e, { l: tu(r, t) })) : aa(Vt(e, { r: tu(o, t) }));
}
function so(e) {
  return ft(e) ? [] : [...so(e.l), { k: e.k, v: e.v }, ...so(e.r)];
}
function nu(e, t, n) {
  if (ft(e))
    return [];
  const { k: r, l: o, r: s, v: a } = e;
  let l = [];
  return r > t && (l = l.concat(nu(o, t, n))), r >= t && r <= n && l.push({ k: r, v: a }), r <= n && (l = l.concat(nu(s, t, n))), l;
}
function aa(e) {
  const { l: t, lvl: n, r } = e;
  if (r.lvl >= n - 1 && t.lvl >= n - 1)
    return e;
  if (n > r.lvl + 1) {
    if (ac(t))
      return Xg(Vt(e, { lvl: n - 1 }));
    if (!ft(t) && !ft(t.r))
      return Vt(t.r, {
        l: Vt(t, { r: t.r.l }),
        lvl: n,
        r: Vt(e, {
          l: t.r.r,
          lvl: n - 1
        })
      });
    throw new Error("Unexpected empty nodes");
  } else {
    if (ac(e))
      return ru(Vt(e, { lvl: n - 1 }));
    if (!ft(r) && !ft(r.l)) {
      const o = r.l, s = ac(o) ? r.lvl - 1 : r.lvl;
      return Vt(o, {
        l: Vt(e, {
          lvl: n - 1,
          r: o.l
        }),
        lvl: o.lvl + 1,
        r: ru(Vt(r, { l: o.r, lvl: s }))
      });
    } else
      throw new Error("Unexpected empty nodes");
  }
}
function Vt(e, t) {
  return Kg(
    t.k !== void 0 ? t.k : e.k,
    t.v !== void 0 ? t.v : e.v,
    t.lvl !== void 0 ? t.lvl : e.lvl,
    t.l !== void 0 ? t.l : e.l,
    t.r !== void 0 ? t.r : e.r
  );
}
function Yg(e) {
  return ft(e.r) ? e.l : aa(Vt(e, { r: Yg(e.r) }));
}
function ac(e) {
  return ft(e) || e.lvl > e.r.lvl;
}
function Gg(e) {
  return ft(e.r) ? [e.k, e.v] : Gg(e.r);
}
function Kg(e, t, n, r = rs, o = rs) {
  return { k: e, l: r, lvl: n, r: o, v: t };
}
function Op(e) {
  return ru(Xg(e));
}
function Xg(e) {
  const { l: t } = e;
  return !ft(t) && t.lvl === e.lvl ? Vt(t, { r: Vt(e, { l: t.r }) }) : e;
}
function ru(e) {
  const { lvl: t, r: n } = e;
  return !ft(n) && !ft(n.r) && n.lvl === t && n.r.lvl === t ? Vt(n, { l: Vt(e, { r: n.l }), lvl: t + 1 }) : e;
}
function sC(e) {
  return qg(e, ({ k: t, v: n }) => ({ index: t, value: n }));
}
function Qg(e, t) {
  return !!(e && e.startIndex === t.startIndex && e.endIndex === t.endIndex);
}
function is(e, t) {
  return !!(e && e[0] === t[0] && e[1] === t[1]);
}
const vd = Qe(
  () => ({ recalcInProgress: be(!1) }),
  [],
  { singleton: !0 }
);
function Jg(e, t, n) {
  return e[Ta(e, t, n)];
}
function Ta(e, t, n, r = 0) {
  let o = e.length - 1;
  for (; r <= o; ) {
    const s = Math.floor((r + o) / 2), a = e[s], l = n(a, t);
    if (l === 0)
      return s;
    if (l === -1) {
      if (o - r < 2)
        return s - 1;
      o = s - 1;
    } else {
      if (o === r)
        return s;
      r = s + 1;
    }
  }
  throw new Error(`Failed binary finding record in array - ${e.join(",")}, searched for ${t}`);
}
function aC(e, t, n, r) {
  const o = Ta(e, t, r), s = Ta(e, n, r, o);
  return e.slice(o, s + 1);
}
function zr(e, t) {
  return Math.round(e.getBoundingClientRect()[t]);
}
function yl(e) {
  return !ft(e.groupOffsetTree);
}
function xd({ index: e }, t) {
  return t === e ? 0 : t < e ? -1 : 1;
}
function lC() {
  return {
    groupIndices: [],
    groupOffsetTree: jo(),
    lastIndex: 0,
    lastOffset: 0,
    lastSize: 0,
    offsetTree: [],
    sizeTree: jo()
  };
}
function cC(e, t) {
  let n = ft(e) ? 0 : 1 / 0;
  for (const r of t) {
    const { endIndex: o, size: s, startIndex: a } = r;
    if (n = Math.min(n, a), ft(e)) {
      e = bn(e, 0, s);
      continue;
    }
    const l = gl(e, a - 1, o + 1);
    if (l.some(gC(r)))
      continue;
    let c = !1, u = !1;
    for (const { end: d, start: f, value: h } of l)
      c ? (o >= f || s === h) && (e = tu(e, f)) : (u = h !== s, c = !0), d > o && o >= f && h !== s && (e = bn(e, o + 1, h));
    u && (e = bn(e, a, s));
  }
  return [e, n];
}
function uC(e) {
  return typeof e.groupIndex < "u";
}
function dC({ offset: e }, t) {
  return t === e ? 0 : t < e ? -1 : 1;
}
function ss(e, t, n) {
  if (t.length === 0)
    return 0;
  const { index: r, offset: o, size: s } = Jg(t, e, xd), a = e - r, l = s * a + (a - 1) * n + o;
  return l > 0 ? l + n : l;
}
function Zg(e, t) {
  if (!yl(t))
    return e;
  let n = 0;
  for (; t.groupIndices[n] <= e + n; )
    n++;
  return e + n;
}
function ey(e, t, n) {
  if (uC(e))
    return t.groupIndices[e.groupIndex] + 1;
  {
    const r = e.index === "LAST" ? n : e.index;
    let o = Zg(r, t);
    return o = Math.max(0, o, Math.min(n, o)), o;
  }
}
function fC(e, t, n, r = 0) {
  return r > 0 && (t = Math.max(t, Jg(e, r, xd).offset)), qg(aC(e, t, n, dC), hC);
}
function pC(e, [t, n, r, o]) {
  t.length > 0 && r("received item sizes", t, Tn.DEBUG);
  const s = e.sizeTree;
  let a = s, l = 0;
  if (n.length > 0 && ft(s) && t.length === 2) {
    const h = t[0].size, g = t[1].size;
    a = n.reduce((y, m) => bn(bn(y, m, h), m + 1, g), a);
  } else
    [a, l] = cC(a, t);
  if (a === s)
    return e;
  const { lastIndex: c, lastOffset: u, lastSize: d, offsetTree: f } = ou(e.offsetTree, l, a, o);
  return {
    groupIndices: n,
    groupOffsetTree: n.reduce((h, g) => bn(h, g, ss(g, f, o)), jo()),
    lastIndex: c,
    lastOffset: u,
    lastSize: d,
    offsetTree: f,
    sizeTree: a
  };
}
function mC(e) {
  return so(e).map(({ k: t, v: n }, r, o) => {
    const s = o[r + 1];
    return { endIndex: s ? s.k - 1 : 1 / 0, size: n, startIndex: t };
  });
}
function Rp(e, t) {
  let n = 0, r = 0;
  for (; n < e; )
    n += t[r + 1] - t[r] - 1, r++;
  return r - (n === e ? 0 : 1);
}
function ou(e, t, n, r) {
  let o = e, s = 0, a = 0, l = 0, c = 0;
  if (t !== 0) {
    c = Ta(o, t - 1, xd), l = o[c].offset;
    const u = qn(n, t - 1);
    s = u[0], a = u[1], o.length && o[c].size === qn(n, t)[1] && (c -= 1), o = o.slice(0, c + 1);
  } else
    o = [];
  for (const { start: u, value: d } of gl(n, t, 1 / 0)) {
    const f = u - s, h = f * a + l + f * r;
    o.push({
      index: u,
      offset: h,
      size: d
    }), s = u, l = h, a = d;
  }
  return {
    lastIndex: s,
    lastOffset: l,
    lastSize: a,
    offsetTree: o
  };
}
function hC(e) {
  return { index: e.index, value: e };
}
function gC(e) {
  const { endIndex: t, size: n, startIndex: r } = e;
  return (o) => o.start === r && (o.end === t || o.end === 1 / 0) && o.value === n;
}
const yC = {
  offsetHeight: "height",
  offsetWidth: "width"
}, gr = Qe(
  ([{ log: e }, { recalcInProgress: t }]) => {
    const n = qe(), r = qe(), o = en(r, 0), s = qe(), a = qe(), l = be(0), c = be([]), u = be(void 0), d = be(void 0), f = be((b, T) => zr(b, yC[T])), h = be(void 0), g = be(0), y = lC(), m = en(
      ge(n, He(c, e, g), rr(pC, y), ht()),
      y
    ), v = en(
      ge(
        c,
        ht(),
        rr((b, T) => ({ current: T, prev: b.current }), {
          current: [],
          prev: []
        }),
        Ee(({ prev: b }) => b)
      ),
      []
    );
    Ie(
      ge(
        c,
        Be((b) => b.length > 0),
        He(m, g),
        Ee(([b, T, R]) => {
          const $ = b.reduce((I, p, O) => bn(I, p, ss(p, T.offsetTree, R) || O), jo());
          return {
            ...T,
            groupIndices: b,
            groupOffsetTree: $
          };
        })
      ),
      m
    ), Ie(
      ge(
        r,
        He(m),
        Be(([b, { lastIndex: T }]) => b < T),
        Ee(([b, { lastIndex: T, lastSize: R }]) => [
          {
            endIndex: T,
            size: R,
            startIndex: b
          }
        ])
      ),
      n
    ), Ie(u, d);
    const x = en(
      ge(
        u,
        Ee((b) => b === void 0)
      ),
      !0
    );
    Ie(
      ge(
        d,
        Be((b) => b !== void 0 && ft(Zt(m).sizeTree)),
        Ee((b) => [{ endIndex: 0, size: b, startIndex: 0 }])
      ),
      n
    );
    const E = Sn(
      ge(
        n,
        He(m),
        rr(
          ({ sizes: b }, [T, R]) => ({
            changed: R !== b,
            sizes: R
          }),
          { changed: !1, sizes: y }
        ),
        Ee((b) => b.changed)
      )
    );
    rt(
      ge(
        l,
        rr(
          (b, T) => ({ diff: b.prev - T, prev: T }),
          { diff: 0, prev: 0 }
        ),
        Ee((b) => b.diff)
      ),
      (b) => {
        const { groupIndices: T } = Zt(m);
        if (b > 0)
          We(t, !0), We(s, b + Rp(b, T));
        else if (b < 0) {
          const R = Zt(v);
          R.length > 0 && (b -= Rp(-b, R)), We(a, b);
        }
      }
    ), rt(ge(l, He(e)), ([b, T]) => {
      b < 0 && T(
        "`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value",
        { firstItemIndex: l },
        Tn.ERROR
      );
    });
    const w = Sn(s);
    Ie(
      ge(
        s,
        He(m),
        Ee(([b, T]) => {
          const R = T.groupIndices.length > 0, $ = [], I = T.lastSize;
          if (R) {
            const p = os(T.sizeTree, 0);
            let O = 0, k = 0;
            for (; O < b; ) {
              const D = T.groupIndices[k], _ = T.groupIndices.length === k + 1 ? 1 / 0 : T.groupIndices[k + 1] - D - 1;
              $.push({
                endIndex: D,
                size: p,
                startIndex: D
              }), $.push({
                endIndex: D + 1 + _ - 1,
                size: I,
                startIndex: D + 1
              }), k++, O += _ + 1;
            }
            const A = so(T.sizeTree);
            return O !== b && A.shift(), A.reduce(
              (D, { k: _, v: M }) => {
                let z = D.ranges;
                return D.prevSize !== 0 && (z = [
                  ...D.ranges,
                  {
                    endIndex: _ + b - 1,
                    size: D.prevSize,
                    startIndex: D.prevIndex
                  }
                ]), {
                  prevIndex: _ + b,
                  prevSize: M,
                  ranges: z
                };
              },
              {
                prevIndex: b,
                prevSize: 0,
                ranges: $
              }
            ).ranges;
          }
          return so(T.sizeTree).reduce(
            (p, { k: O, v: k }) => ({
              prevIndex: O + b,
              prevSize: k,
              ranges: [...p.ranges, { endIndex: O + b - 1, size: p.prevSize, startIndex: p.prevIndex }]
            }),
            {
              prevIndex: 0,
              prevSize: I,
              ranges: []
            }
          ).ranges;
        })
      ),
      n
    );
    const S = Sn(
      ge(
        a,
        He(m, g),
        Ee(([b, { offsetTree: T }, R]) => {
          const $ = -b;
          return ss($, T, R);
        })
      )
    );
    return Ie(
      ge(
        a,
        He(m, g),
        Ee(([b, T, R]) => {
          if (T.groupIndices.length > 0) {
            if (ft(T.sizeTree))
              return T;
            let $ = jo();
            const I = Zt(v);
            let p = 0, O = 0, k = 0;
            for (; p < -b; ) {
              k = I[O];
              const A = I[O + 1] - k - 1;
              O++, p += A + 1;
            }
            if ($ = so(T.sizeTree).reduce((A, { k: D, v: _ }) => bn(A, Math.max(0, D + b), _), $), p !== -b) {
              const A = os(T.sizeTree, k);
              $ = bn($, 0, A);
              const D = qn(T.sizeTree, -b + 1)[1];
              $ = bn($, 1, D);
            }
            return {
              ...T,
              sizeTree: $,
              ...ou(T.offsetTree, 0, $, R)
            };
          } else {
            const $ = so(T.sizeTree).reduce((I, { k: p, v: O }) => bn(I, Math.max(0, p + b), O), jo());
            return {
              ...T,
              sizeTree: $,
              ...ou(T.offsetTree, 0, $, R)
            };
          }
        })
      ),
      m
    ), {
      beforeUnshiftWith: w,
      // input
      data: h,
      defaultItemSize: d,
      firstItemIndex: l,
      fixedItemSize: u,
      gap: g,
      groupIndices: c,
      itemSize: f,
      listRefresh: E,
      shiftWith: a,
      shiftWithOffset: S,
      sizeRanges: n,
      // output
      sizes: m,
      statefulTotalCount: o,
      totalCount: r,
      trackItemSizes: x,
      unshiftWith: s
    };
  },
  gt(Xr, vd),
  { singleton: !0 }
);
function bC(e) {
  return e.reduce(
    (t, n) => (t.groupIndices.push(t.totalCount), t.totalCount += n + 1, t),
    {
      groupIndices: [],
      totalCount: 0
    }
  );
}
const ty = Qe(
  ([{ groupIndices: e, sizes: t, totalCount: n }, { headerHeight: r, scrollTop: o }]) => {
    const s = qe(), a = qe(), l = Sn(ge(s, Ee(bC)));
    return Ie(
      ge(
        l,
        Ee((c) => c.totalCount)
      ),
      n
    ), Ie(
      ge(
        l,
        Ee((c) => c.groupIndices)
      ),
      e
    ), Ie(
      ge(
        zt(o, t, r),
        Be(([c, u]) => yl(u)),
        Ee(([c, u, d]) => qn(u.groupOffsetTree, Math.max(c - d, 0), "v")[0]),
        ht(),
        Ee((c) => [c])
      ),
      a
    ), { groupCounts: s, topItemsIndexes: a };
  },
  gt(gr, ln)
), Qr = Qe(
  ([{ log: e }]) => {
    const t = be(!1), n = Sn(
      ge(
        t,
        Be((r) => r),
        ht()
      )
    );
    return rt(t, (r) => {
      r && Zt(e)("props updated", {}, Tn.DEBUG);
    }), { didMount: n, propsReady: t };
  },
  gt(Xr),
  { singleton: !0 }
), vC = typeof document < "u" && "scrollBehavior" in document.documentElement.style;
function ny(e) {
  const t = typeof e == "number" ? { index: e } : e;
  return t.align || (t.align = "start"), (!t.behavior || !vC) && (t.behavior = "auto"), t.offset || (t.offset = 0), t;
}
const bs = Qe(
  ([
    { gap: e, listRefresh: t, sizes: n, totalCount: r },
    {
      fixedFooterHeight: o,
      fixedHeaderHeight: s,
      footerHeight: a,
      headerHeight: l,
      scrollingInProgress: c,
      scrollTo: u,
      smoothScrollTargetReached: d,
      viewportHeight: f
    },
    { log: h }
  ]) => {
    const g = qe(), y = qe(), m = be(0);
    let v = null, x = null, E = null;
    function w() {
      v && (v(), v = null), E && (E(), E = null), x && (clearTimeout(x), x = null), We(c, !1);
    }
    return Ie(
      ge(
        g,
        He(n, f, r, m, l, a, h),
        He(e, s, o),
        Ee(
          ([
            [S, b, T, R, $, I, p, O],
            k,
            A,
            D
          ]) => {
            const _ = ny(S), { align: M, behavior: z, offset: Y } = _, H = R - 1, j = ey(_, b, H);
            let W = ss(j, b.offsetTree, k) + I;
            M === "end" ? (W += A + qn(b.sizeTree, j)[1] - T + D, j === H && (W += p)) : M === "center" ? W += (A + qn(b.sizeTree, j)[1] - T + D) / 2 : W -= $, Y && (W += Y);
            const ee = (K) => {
              w(), K ? (O("retrying to scroll to", { location: S }, Tn.DEBUG), We(g, S)) : (We(y, !0), O("list did not change, scroll successful", {}, Tn.DEBUG));
            };
            if (w(), z === "smooth") {
              let K = !1;
              E = rt(t, (oe) => {
                K = K || oe;
              }), v = mr(d, () => {
                ee(K);
              });
            } else
              v = mr(ge(t, xC(150)), ee);
            return x = setTimeout(() => {
              w();
            }, 1200), We(c, !0), O("scrolling from index to", { behavior: z, index: j, top: W }, Tn.DEBUG), { behavior: z, top: W };
          }
        )
      ),
      u
    ), {
      scrollTargetReached: y,
      scrollToIndex: g,
      topListHeight: m
    };
  },
  gt(gr, ln, Xr),
  { singleton: !0 }
);
function xC(e) {
  return (t) => {
    const n = setTimeout(() => {
      t(!1);
    }, e);
    return (r) => {
      r && (t(!0), clearTimeout(n));
    };
  };
}
function wd(e, t) {
  e == 0 ? t() : requestAnimationFrame(() => {
    wd(e - 1, t);
  });
}
function Sd(e, t) {
  const n = t - 1;
  return typeof e == "number" ? e : e.index === "LAST" ? n : e.index;
}
const vs = Qe(
  ([{ defaultItemSize: e, listRefresh: t, sizes: n }, { scrollTop: r }, { scrollTargetReached: o, scrollToIndex: s }, { didMount: a }]) => {
    const l = be(!0), c = be(0), u = be(!0);
    return Ie(
      ge(
        a,
        He(c),
        Be(([d, f]) => !!f),
        tr(!1)
      ),
      l
    ), Ie(
      ge(
        a,
        He(c),
        Be(([d, f]) => !!f),
        tr(!1)
      ),
      u
    ), rt(
      ge(
        zt(t, a),
        He(l, n, e, u),
        Be(([[, d], f, { sizeTree: h }, g, y]) => d && (!ft(h) || gd(g)) && !f && !y),
        He(c)
      ),
      ([, d]) => {
        mr(o, () => {
          We(u, !0);
        }), wd(4, () => {
          mr(r, () => {
            We(l, !0);
          }), We(s, d);
        });
      }
    ), {
      initialItemFinalLocationReached: u,
      initialTopMostItemIndex: c,
      scrolledToInitialItem: l
    };
  },
  gt(gr, ln, bs, Qr),
  { singleton: !0 }
);
function ry(e, t) {
  return Math.abs(e - t) < 1.01;
}
const as = "up", Fi = "down", wC = "none", SC = {
  atBottom: !1,
  notAtBottomBecause: "NOT_SHOWING_LAST_ITEM",
  state: {
    offsetBottom: 0,
    scrollHeight: 0,
    scrollTop: 0,
    viewportHeight: 0
  }
}, TC = 0, xs = Qe(([{ footerHeight: e, headerHeight: t, scrollBy: n, scrollContainerState: r, scrollTop: o, viewportHeight: s }]) => {
  const a = be(!1), l = be(!0), c = qe(), u = qe(), d = be(4), f = be(TC), h = en(
    ge(
      Ep(ge(Fe(o), Qo(1), tr(!0)), ge(Fe(o), Qo(1), tr(!1), Tp(100))),
      ht()
    ),
    !1
  ), g = en(
    ge(Ep(ge(n, tr(!0)), ge(n, tr(!1), Tp(200))), ht()),
    !1
  );
  Ie(
    ge(
      zt(Fe(o), Fe(f)),
      Ee(([E, w]) => E <= w),
      ht()
    ),
    l
  ), Ie(ge(l, Fr(50)), u);
  const y = Sn(
    ge(
      zt(r, Fe(s), Fe(t), Fe(e), Fe(d)),
      rr((E, [{ scrollHeight: w, scrollTop: S }, b, T, R, $]) => {
        const I = S + b - w > -$, p = {
          scrollHeight: w,
          scrollTop: S,
          viewportHeight: b
        };
        if (I) {
          let k, A;
          return S > E.state.scrollTop ? (k = "SCROLLED_DOWN", A = E.state.scrollTop - S) : (k = "SIZE_DECREASED", A = E.state.scrollTop - S || E.scrollTopDelta), {
            atBottom: !0,
            atBottomBecause: k,
            scrollTopDelta: A,
            state: p
          };
        }
        let O;
        return p.scrollHeight > E.state.scrollHeight ? O = "SIZE_INCREASED" : b < E.state.viewportHeight ? O = "VIEWPORT_HEIGHT_DECREASING" : S < E.state.scrollTop ? O = "SCROLLING_UPWARDS" : O = "NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM", {
          atBottom: !1,
          notAtBottomBecause: O,
          state: p
        };
      }, SC),
      ht((E, w) => E && E.atBottom === w.atBottom)
    )
  ), m = en(
    ge(
      r,
      rr(
        (E, { scrollHeight: w, scrollTop: S, viewportHeight: b }) => {
          if (ry(E.scrollHeight, w))
            return {
              changed: !1,
              jump: 0,
              scrollHeight: w,
              scrollTop: S
            };
          {
            const T = w - (S + b) < 1;
            return E.scrollTop !== S && T ? {
              changed: !0,
              jump: E.scrollTop - S,
              scrollHeight: w,
              scrollTop: S
            } : {
              changed: !0,
              jump: 0,
              scrollHeight: w,
              scrollTop: S
            };
          }
        },
        { changed: !1, jump: 0, scrollHeight: 0, scrollTop: 0 }
      ),
      Be((E) => E.changed),
      Ee((E) => E.jump)
    ),
    0
  );
  Ie(
    ge(
      y,
      Ee((E) => E.atBottom)
    ),
    a
  ), Ie(ge(a, Fr(50)), c);
  const v = be(Fi);
  Ie(
    ge(
      r,
      Ee(({ scrollTop: E }) => E),
      ht(),
      rr(
        (E, w) => Zt(g) ? { direction: E.direction, prevScrollTop: w } : { direction: w < E.prevScrollTop ? as : Fi, prevScrollTop: w },
        { direction: Fi, prevScrollTop: 0 }
      ),
      Ee((E) => E.direction)
    ),
    v
  ), Ie(ge(r, Fr(50), tr(wC)), v);
  const x = be(0);
  return Ie(
    ge(
      h,
      Be((E) => !E),
      tr(0)
    ),
    x
  ), Ie(
    ge(
      o,
      Fr(100),
      He(h),
      Be(([E, w]) => !!w),
      rr(([E, w], [S]) => [w, S], [0, 0]),
      Ee(([E, w]) => w - E)
    ),
    x
  ), {
    atBottomState: y,
    atBottomStateChange: c,
    atBottomThreshold: d,
    atTopStateChange: u,
    atTopThreshold: f,
    isAtBottom: a,
    isAtTop: l,
    isScrolling: h,
    lastJumpDueToItemResize: m,
    scrollDirection: v,
    scrollVelocity: x
  };
}, gt(ln)), Ea = "top", Ca = "bottom", $p = "none";
function kp(e, t, n) {
  return typeof e == "number" ? n === as && t === Ea || n === Fi && t === Ca ? e : 0 : n === as ? t === Ea ? e.main : e.reverse : t === Ca ? e.main : e.reverse;
}
function Pp(e, t) {
  var n;
  return typeof e == "number" ? e : (n = e[t]) != null ? n : 0;
}
const Td = Qe(
  ([{ deviation: e, fixedHeaderHeight: t, headerHeight: n, scrollTop: r, viewportHeight: o }]) => {
    const s = qe(), a = be(0), l = be(0), c = be(0), u = en(
      ge(
        zt(
          Fe(r),
          Fe(o),
          Fe(n),
          Fe(s, is),
          Fe(c),
          Fe(a),
          Fe(t),
          Fe(e),
          Fe(l)
        ),
        Ee(
          ([
            d,
            f,
            h,
            [g, y],
            m,
            v,
            x,
            E,
            w
          ]) => {
            const S = d - E, b = v + x, T = Math.max(h - S, 0);
            let R = $p;
            const $ = Pp(w, Ea), I = Pp(w, Ca);
            return g -= E, g += h + x, y += h + x, y -= E, g > d + b - $ && (R = as), y < d - T + f + I && (R = Fi), R !== $p ? [
              Math.max(S - h - kp(m, Ea, R) - $, 0),
              S - T - x + f + kp(m, Ca, R) + I
            ] : null;
          }
        ),
        Be((d) => d != null),
        ht(is)
      ),
      [0, 0]
    );
    return {
      increaseViewportBy: l,
      // input
      listBoundary: s,
      overscan: c,
      topListHeight: a,
      // output
      visibleRange: u
    };
  },
  gt(ln),
  { singleton: !0 }
);
function EC(e, t, n) {
  if (yl(t)) {
    const r = Zg(e, t);
    return [
      { index: qn(t.groupOffsetTree, r)[0], offset: 0, size: 0 },
      { data: n == null ? void 0 : n[0], index: r, offset: 0, size: 0 }
    ];
  }
  return [{ data: n == null ? void 0 : n[0], index: e, offset: 0, size: 0 }];
}
const lc = {
  bottom: 0,
  firstItemIndex: 0,
  items: [],
  offsetBottom: 0,
  offsetTop: 0,
  top: 0,
  topItems: [],
  topListHeight: 0,
  totalCount: 0
};
function la(e, t, n, r, o, s) {
  const { lastIndex: a, lastOffset: l, lastSize: c } = o;
  let u = 0, d = 0;
  if (e.length > 0) {
    u = e[0].offset;
    const m = e[e.length - 1];
    d = m.offset + m.size;
  }
  const f = n - a, h = l + f * c + (f - 1) * r, g = u, y = h - d;
  return {
    bottom: d,
    firstItemIndex: s,
    items: Ip(e, o, s),
    offsetBottom: y,
    offsetTop: u,
    top: g,
    topItems: Ip(t, o, s),
    topListHeight: t.reduce((m, v) => v.size + m, 0),
    totalCount: n
  };
}
function oy(e, t, n, r, o, s) {
  let a = 0;
  if (n.groupIndices.length > 0)
    for (const d of n.groupIndices) {
      if (d - a >= e)
        break;
      a++;
    }
  const l = e + a, c = Sd(t, l), u = Array.from({ length: l }).map((d, f) => ({
    data: s[f + c],
    index: f + c,
    offset: 0,
    size: 0
  }));
  return la(u, [], l, o, n, r);
}
function Ip(e, t, n) {
  if (e.length === 0)
    return [];
  if (!yl(t))
    return e.map((u) => ({ ...u, index: u.index + n, originalIndex: u.index }));
  const r = e[0].index, o = e[e.length - 1].index, s = [], a = gl(t.groupOffsetTree, r, o);
  let l, c = 0;
  for (const u of e) {
    (!l || l.end < u.index) && (l = a.shift(), c = t.groupIndices.indexOf(l.start));
    let d;
    u.index === l.start ? d = {
      index: c,
      type: "group"
    } : d = {
      groupIndex: c,
      index: u.index - (c + 1) + n
    }, s.push({
      ...d,
      data: u.data,
      offset: u.offset,
      originalIndex: u.index,
      size: u.size
    });
  }
  return s;
}
const bo = Qe(
  ([
    { data: e, firstItemIndex: t, gap: n, sizes: r, totalCount: o },
    s,
    { listBoundary: a, topListHeight: l, visibleRange: c },
    { initialTopMostItemIndex: u, scrolledToInitialItem: d },
    { topListHeight: f },
    h,
    { didMount: g },
    { recalcInProgress: y }
  ]) => {
    const m = be([]), v = be(0), x = qe();
    Ie(s.topItemsIndexes, m);
    const E = en(
      ge(
        zt(
          g,
          y,
          Fe(c, is),
          Fe(o),
          Fe(r),
          Fe(u),
          d,
          Fe(m),
          Fe(t),
          Fe(n),
          e
        ),
        Be(([T, R, , $, , , , , , , I]) => {
          const p = I && I.length !== $;
          return T && !R && !p;
        }),
        Ee(
          ([
            ,
            ,
            [T, R],
            $,
            I,
            p,
            O,
            k,
            A,
            D,
            _
          ]) => {
            const M = I, { offsetTree: z, sizeTree: Y } = M, H = Zt(v);
            if ($ === 0)
              return { ...lc, totalCount: $ };
            if (T === 0 && R === 0)
              return H === 0 ? { ...lc, totalCount: $ } : oy(H, p, I, A, D, _ || []);
            if (ft(Y))
              return H > 0 ? null : la(
                EC(Sd(p, $), M, _),
                [],
                $,
                D,
                M,
                A
              );
            const j = [];
            if (k.length > 0) {
              const ne = k[0], se = k[k.length - 1];
              let de = 0;
              for (const X of gl(Y, ne, se)) {
                const ae = X.value, Q = Math.max(X.start, ne), ie = Math.min(X.end, se);
                for (let F = Q; F <= ie; F++)
                  j.push({ data: _ == null ? void 0 : _[F], index: F, offset: de, size: ae }), de += ae;
              }
            }
            if (!O)
              return la([], j, $, D, M, A);
            const W = k.length > 0 ? k[k.length - 1] + 1 : 0, ee = fC(z, T, R, W);
            if (ee.length === 0)
              return null;
            const K = $ - 1, oe = hl([], (ne) => {
              for (const se of ee) {
                const de = se.value;
                let X = de.offset, ae = se.start;
                const Q = de.size;
                if (de.offset < T) {
                  ae += Math.floor((T - de.offset + D) / (Q + D));
                  const F = ae - se.start;
                  X += F * Q + F * D;
                }
                ae < W && (X += (W - ae) * Q, ae = W);
                const ie = Math.min(se.end, K);
                for (let F = ae; F <= ie && !(X >= R); F++)
                  ne.push({ data: _ == null ? void 0 : _[F], index: F, offset: X, size: Q }), X += Q + D;
              }
            });
            return la(oe, j, $, D, M, A);
          }
        ),
        //@ts-expect-error filter needs to be fixed
        Be((T) => T !== null),
        ht()
      ),
      lc
    );
    Ie(
      ge(
        e,
        Be(gd),
        Ee((T) => T == null ? void 0 : T.length)
      ),
      o
    ), Ie(
      ge(
        E,
        Ee((T) => T.topListHeight)
      ),
      f
    ), Ie(f, l), Ie(
      ge(
        E,
        Ee((T) => [T.top, T.bottom])
      ),
      a
    ), Ie(
      ge(
        E,
        Ee((T) => T.items)
      ),
      x
    );
    const w = Sn(
      ge(
        E,
        Be(({ items: T }) => T.length > 0),
        He(o, e),
        Be(([{ items: T }, R]) => T[T.length - 1].originalIndex === R - 1),
        Ee(([, T, R]) => [T - 1, R]),
        ht(is),
        Ee(([T]) => T)
      )
    ), S = Sn(
      ge(
        E,
        Fr(200),
        Be(({ items: T, topItems: R }) => T.length > 0 && T[0].originalIndex === R.length),
        Ee(({ items: T }) => T[0].index),
        ht()
      )
    ), b = Sn(
      ge(
        E,
        Be(({ items: T }) => T.length > 0),
        Ee(({ items: T }) => {
          let R = 0, $ = T.length - 1;
          for (; T[R].type === "group" && R < $; )
            R++;
          for (; T[$].type === "group" && $ > R; )
            $--;
          return {
            endIndex: T[$].index,
            startIndex: T[R].index
          };
        }),
        ht(Qg)
      )
    );
    return { endReached: w, initialItemCount: v, itemsRendered: x, listState: E, rangeChanged: b, startReached: S, topItemsIndexes: m, ...h };
  },
  gt(
    gr,
    ty,
    Td,
    vs,
    bs,
    xs,
    Qr,
    vd
  ),
  { singleton: !0 }
), iy = Qe(
  ([{ fixedFooterHeight: e, fixedHeaderHeight: t, footerHeight: n, headerHeight: r }, { listState: o }]) => {
    const s = qe(), a = en(
      ge(
        zt(n, e, r, t, o),
        Ee(([l, c, u, d, f]) => l + c + u + d + f.offsetBottom + f.bottom)
      ),
      0
    );
    return Ie(Fe(a), s), { totalListHeight: a, totalListHeightChanged: s };
  },
  gt(ln, bo),
  { singleton: !0 }
), CC = Qe(
  ([{ viewportHeight: e }, { totalListHeight: t }]) => {
    const n = be(!1), r = en(
      ge(
        zt(n, e, t),
        Be(([o]) => o),
        Ee(([, o, s]) => Math.max(0, o - s)),
        Fr(0),
        ht()
      ),
      0
    );
    return { alignToBottom: n, paddingTopAddition: r };
  },
  gt(ln, iy),
  { singleton: !0 }
);
function Np(e) {
  return e ? e === "smooth" ? "smooth" : "auto" : !1;
}
const OC = (e, t) => typeof e == "function" ? Np(e(t)) : t && Np(e), RC = Qe(
  ([
    { listRefresh: e, totalCount: t },
    { atBottomState: n, isAtBottom: r },
    { scrollToIndex: o },
    { scrolledToInitialItem: s },
    { didMount: a, propsReady: l },
    { log: c },
    { scrollingInProgress: u }
  ]) => {
    const d = be(!1), f = qe();
    let h = null;
    function g(m) {
      We(o, {
        align: "end",
        behavior: m,
        index: "LAST"
      });
    }
    rt(
      ge(
        zt(ge(Fe(t), Qo(1)), a),
        He(Fe(d), r, s, u),
        Ee(([[m, v], x, E, w, S]) => {
          let b = v && w, T = "auto";
          return b && (T = OC(x, E || S), b = b && !!T), { followOutputBehavior: T, shouldFollow: b, totalCount: m };
        }),
        Be(({ shouldFollow: m }) => m)
      ),
      ({ followOutputBehavior: m, totalCount: v }) => {
        h && (h(), h = null), h = mr(e, () => {
          Zt(c)("following output to ", { totalCount: v }, Tn.DEBUG), g(m), h = null;
        });
      }
    );
    function y(m) {
      const v = mr(n, (x) => {
        m && !x.atBottom && x.notAtBottomBecause === "SIZE_INCREASED" && !h && (Zt(c)("scrolling to bottom due to increased size", {}, Tn.DEBUG), g("auto"));
      });
      setTimeout(v, 100);
    }
    return rt(
      ge(
        zt(Fe(d), t, l),
        Be(([m, , v]) => m && v),
        rr(
          ({ value: m }, [, v]) => ({ refreshed: m === v, value: v }),
          { refreshed: !1, value: 0 }
        ),
        Be(({ refreshed: m }) => m),
        He(d, t)
      ),
      ([, m]) => {
        Zt(s) && y(m !== !1);
      }
    ), rt(f, () => {
      y(Zt(d) !== !1);
    }), rt(zt(Fe(d), n), ([m, v]) => {
      m && !v.atBottom && v.notAtBottomBecause === "VIEWPORT_HEIGHT_DECREASING" && g("auto");
    }), { autoscrollToBottom: f, followOutput: d };
  },
  gt(gr, xs, bs, vs, Qr, Xr, ln)
), $C = Qe(
  ([{ data: e, firstItemIndex: t, gap: n, sizes: r }, { initialTopMostItemIndex: o }, { initialItemCount: s, listState: a }, { didMount: l }]) => (Ie(
    ge(
      l,
      He(s),
      Be(([, c]) => c !== 0),
      He(o, r, t, n, e),
      Ee(([[, c], u, d, f, h, g = []]) => oy(c, u, d, f, h, g))
    ),
    a
  ), {}),
  gt(gr, vs, bo, Qr),
  { singleton: !0 }
), kC = Qe(
  ([{ didMount: e }, { scrollTo: t }, { listState: n }]) => {
    const r = be(0);
    return rt(
      ge(
        e,
        He(r),
        Be(([, o]) => o !== 0),
        Ee(([, o]) => ({ top: o }))
      ),
      (o) => {
        mr(
          ge(
            n,
            Qo(1),
            Be((s) => s.items.length > 1)
          ),
          () => {
            requestAnimationFrame(() => {
              We(t, o);
            });
          }
        );
      }
    ), {
      initialScrollTop: r
    };
  },
  gt(Qr, ln, bo),
  { singleton: !0 }
), PC = ({
  itemBottom: e,
  itemTop: t,
  locationParams: { align: n, behavior: r, ...o },
  viewportBottom: s,
  viewportTop: a
}) => t < a ? { ...o, align: n ?? "start", behavior: r } : e > s ? { ...o, align: n ?? "end", behavior: r } : null, IC = Qe(
  ([
    { gap: e, sizes: t, totalCount: n },
    { fixedFooterHeight: r, fixedHeaderHeight: o, headerHeight: s, scrollingInProgress: a, scrollTop: l, viewportHeight: c },
    { scrollToIndex: u }
  ]) => {
    const d = qe();
    return Ie(
      ge(
        d,
        He(t, c, n, s, o, r, l),
        He(e),
        Ee(([[f, h, g, y, m, v, x, E], w]) => {
          const { align: S, behavior: b, calculateViewLocation: T = PC, done: R, ...$ } = f, I = ey(f, h, y - 1), p = ss(I, h.offsetTree, w) + m + v, O = p + qn(h.sizeTree, I)[1], k = E + v, A = E + g - x, D = T({
            itemBottom: O,
            itemTop: p,
            locationParams: { align: S, behavior: b, ...$ },
            viewportBottom: A,
            viewportTop: k
          });
          return D ? R && mr(
            ge(
              a,
              Be((_) => !_),
              // skips the initial publish of false, and the cleanup call.
              // but if scrollingInProgress is true, we skip the initial publish.
              Qo(Zt(a) ? 1 : 2)
            ),
            R
          ) : R && R(), D;
        }),
        Be((f) => f !== null)
      ),
      u
    ), {
      scrollIntoView: d
    };
  },
  gt(gr, ln, bs, bo, Xr),
  { singleton: !0 }
), sy = Qe(
  ([{ scrollVelocity: e }]) => {
    const t = be(!1), n = qe(), r = be(!1);
    return Ie(
      ge(
        e,
        He(r, t, n),
        Be(([o, s]) => !!s),
        Ee(([o, s, a, l]) => {
          const { enter: c, exit: u } = s;
          if (a) {
            if (u(o, l))
              return !1;
          } else if (c(o, l))
            return !0;
          return a;
        }),
        ht()
      ),
      t
    ), rt(
      ge(zt(t, e, n), He(r)),
      ([[o, s, a], l]) => {
        o && l && l.change && l.change(s, a);
      }
    ), { isSeeking: t, scrollSeekConfiguration: r, scrollSeekRangeChanged: n, scrollVelocity: e };
  },
  gt(xs),
  { singleton: !0 }
), Ed = Qe(([{ scrollContainerState: e, scrollTo: t }]) => {
  const n = qe(), r = qe(), o = qe(), s = be(!1), a = be(void 0);
  return Ie(
    ge(
      zt(n, r),
      Ee(([{ scrollHeight: l, scrollTop: c, viewportHeight: u }, { offsetTop: d }]) => ({
        scrollHeight: l,
        scrollTop: Math.max(0, c - d),
        viewportHeight: u
      }))
    ),
    e
  ), Ie(
    ge(
      t,
      He(r),
      Ee(([l, { offsetTop: c }]) => ({
        ...l,
        top: l.top + c
      }))
    ),
    o
  ), {
    customScrollParent: a,
    // config
    useWindowScroll: s,
    // input
    windowScrollContainerState: n,
    // signals
    windowScrollTo: o,
    windowViewportRect: r
  };
}, gt(ln)), NC = Qe(
  ([
    { sizeRanges: e, sizes: t },
    { headerHeight: n, scrollTop: r },
    { initialTopMostItemIndex: o },
    { didMount: s },
    { useWindowScroll: a, windowScrollContainerState: l, windowViewportRect: c }
  ]) => {
    const u = qe(), d = be(void 0), f = be(null), h = be(null);
    return Ie(l, f), Ie(c, h), rt(
      ge(
        u,
        He(t, r, a, f, h, n)
      ),
      ([g, y, m, v, x, E, w]) => {
        const S = mC(y.sizeTree);
        v && x !== null && E !== null && (m = x.scrollTop - E.offsetTop), m -= w, g({ ranges: S, scrollTop: m });
      }
    ), Ie(ge(d, Be(gd), Ee(AC)), o), Ie(
      ge(
        s,
        He(d),
        Be(([, g]) => g !== void 0),
        ht(),
        Ee(([, g]) => g.ranges)
      ),
      e
    ), {
      getState: u,
      restoreStateFrom: d
    };
  },
  gt(gr, ln, vs, Qr, Ed)
);
function AC(e) {
  return { align: "start", index: 0, offset: e.scrollTop };
}
const MC = Qe(([{ topItemsIndexes: e }]) => {
  const t = be(0);
  return Ie(
    ge(
      t,
      Be((n) => n >= 0),
      Ee((n) => Array.from({ length: n }).map((r, o) => o))
    ),
    e
  ), { topItemCount: t };
}, gt(bo));
function ay(e) {
  let t = !1, n;
  return () => (t || (t = !0, n = e()), n);
}
const _C = ay(() => /iP(ad|od|hone)/i.test(navigator.userAgent) && /WebKit/i.test(navigator.userAgent)), DC = Qe(
  ([
    { deviation: e, scrollBy: t, scrollingInProgress: n, scrollTop: r },
    { isAtBottom: o, isScrolling: s, lastJumpDueToItemResize: a, scrollDirection: l },
    { listState: c },
    { beforeUnshiftWith: u, gap: d, shiftWithOffset: f, sizes: h },
    { log: g },
    { recalcInProgress: y }
  ]) => {
    const m = Sn(
      ge(
        c,
        He(a),
        rr(
          ([, x, E, w], [{ bottom: S, items: b, offsetBottom: T, totalCount: R }, $]) => {
            const I = S + T;
            let p = 0;
            return E === R && x.length > 0 && b.length > 0 && (b[0].originalIndex === 0 && x[0].originalIndex === 0 || (p = I - w, p !== 0 && (p += $))), [p, b, R, I];
          },
          [0, [], 0, 0]
        ),
        Be(([x]) => x !== 0),
        He(r, l, n, o, g, y),
        Be(([, x, E, w, , , S]) => !S && !w && x !== 0 && E === as),
        Ee(([[x], , , , , E]) => (E("Upward scrolling compensation", { amount: x }, Tn.DEBUG), x))
      )
    );
    function v(x) {
      x > 0 ? (We(t, { behavior: "auto", top: -x }), We(e, 0)) : (We(e, 0), We(t, { behavior: "auto", top: -x }));
    }
    return rt(ge(m, He(e, s)), ([x, E, w]) => {
      w && _C() ? We(e, E - x) : v(-x);
    }), rt(
      ge(
        zt(en(s, !1), e, y),
        Be(([x, E, w]) => !x && !w && E !== 0),
        Ee(([x, E]) => E),
        Fr(1)
      ),
      v
    ), Ie(
      ge(
        f,
        Ee((x) => ({ top: -x }))
      ),
      t
    ), rt(
      ge(
        u,
        He(h, d),
        Ee(([x, { groupIndices: E, lastSize: w, sizeTree: S }, b]) => {
          function T(R) {
            return R * (w + b);
          }
          if (E.length === 0)
            return T(x);
          {
            let R = 0;
            const $ = os(S, 0);
            let I = 0, p = 0;
            for (; I < x; ) {
              I++, R += $;
              let O = E.length === p + 1 ? 1 / 0 : E[p + 1] - E[p] - 1;
              I + O > x && (R -= $, O = x - I + 1), I += O, R += T(O), p++;
            }
            return R;
          }
        })
      ),
      (x) => {
        We(e, x), requestAnimationFrame(() => {
          We(t, { top: x }), requestAnimationFrame(() => {
            We(e, 0), We(y, !1);
          });
        });
      }
    ), { deviation: e };
  },
  gt(ln, xs, bo, gr, Xr, vd)
), BC = Qe(
  ([
    e,
    t,
    n,
    r,
    o,
    s,
    a,
    l,
    c,
    u
  ]) => ({
    ...e,
    ...t,
    ...n,
    ...r,
    ...o,
    ...s,
    ...a,
    ...l,
    ...c,
    ...u
  }),
  gt(
    Td,
    $C,
    Qr,
    sy,
    iy,
    kC,
    CC,
    Ed,
    IC,
    Xr
  )
), ly = Qe(
  ([
    {
      data: e,
      defaultItemSize: t,
      firstItemIndex: n,
      fixedItemSize: r,
      gap: o,
      groupIndices: s,
      itemSize: a,
      sizeRanges: l,
      sizes: c,
      statefulTotalCount: u,
      totalCount: d,
      trackItemSizes: f
    },
    { initialItemFinalLocationReached: h, initialTopMostItemIndex: g, scrolledToInitialItem: y },
    m,
    v,
    x,
    { listState: E, topItemsIndexes: w, ...S },
    { scrollToIndex: b },
    T,
    { topItemCount: R },
    { groupCounts: $ },
    I
  ]) => (Ie(S.rangeChanged, I.scrollSeekRangeChanged), Ie(
    ge(
      I.windowViewportRect,
      Ee((p) => p.visibleHeight)
    ),
    m.viewportHeight
  ), {
    data: e,
    defaultItemHeight: t,
    firstItemIndex: n,
    fixedItemHeight: r,
    gap: o,
    groupCounts: $,
    initialItemFinalLocationReached: h,
    initialTopMostItemIndex: g,
    scrolledToInitialItem: y,
    sizeRanges: l,
    topItemCount: R,
    topItemsIndexes: w,
    // input
    totalCount: d,
    ...x,
    groupIndices: s,
    itemSize: a,
    listState: E,
    scrollToIndex: b,
    // output
    statefulTotalCount: u,
    trackItemSizes: f,
    // exported from stateFlagsSystem
    ...S,
    // the bag of IO from featureGroup1System
    ...I,
    ...m,
    sizes: c,
    ...v
  }),
  gt(
    gr,
    vs,
    ln,
    NC,
    RC,
    bo,
    bs,
    DC,
    MC,
    ty,
    BC
  )
);
function FC(e, t) {
  const n = {}, r = {};
  let o = 0;
  const s = e.length;
  for (; o < s; )
    r[e[o]] = 1, o += 1;
  for (const a in t)
    Object.hasOwn(r, a) || (n[a] = t[a]);
  return n;
}
const Vs = typeof document < "u" ? L.useLayoutEffect : L.useEffect;
function cy(e, t, n) {
  const r = Object.keys(t.required || {}), o = Object.keys(t.optional || {}), s = Object.keys(t.methods || {}), a = Object.keys(t.events || {}), l = L.createContext({});
  function c(v, x) {
    v.propsReady && We(v.propsReady, !1);
    for (const E of r) {
      const w = v[t.required[E]];
      We(w, x[E]);
    }
    for (const E of o)
      if (E in x) {
        const w = v[t.optional[E]];
        We(w, x[E]);
      }
    v.propsReady && We(v.propsReady, !0);
  }
  function u(v) {
    return s.reduce((x, E) => (x[E] = (w) => {
      const S = v[t.methods[E]];
      We(S, w);
    }, x), {});
  }
  function d(v) {
    return a.reduce((x, E) => (x[E] = ZE(v[t.events[E]]), x), {});
  }
  const f = L.forwardRef((v, x) => {
    const { children: E, ...w } = v, [S] = L.useState(() => hl(tC(e), (R) => {
      c(R, w);
    })), [b] = L.useState(Sp(d, S));
    Vs(() => {
      for (const R of a)
        R in w && rt(b[R], w[R]);
      return () => {
        Object.values(b).map(yd);
      };
    }, [w, b, S]), Vs(() => {
      c(S, w);
    }), L.useImperativeHandle(x, wp(u(S)));
    const T = n;
    return /* @__PURE__ */ P(l.Provider, { value: S, children: n ? /* @__PURE__ */ P(T, { ...FC([...r, ...o, ...a], w), children: E }) : E });
  }), h = (v) => L.useCallback(Wg(We, L.useContext(l)[v]), [v]), g = (v) => {
    const x = L.useContext(l)[v], E = L.useCallback(
      (w) => rt(x, w),
      [x]
    );
    return L.useSyncExternalStore(
      E,
      () => Zt(x),
      () => Zt(x)
    );
  }, y = (v) => {
    const x = L.useContext(l)[v], [E, w] = L.useState(Sp(Zt, x));
    return Vs(
      () => rt(x, (S) => {
        S !== E && w(wp(S));
      }),
      [x, E]
    ), E;
  }, m = L.version.startsWith("18") ? g : y;
  return {
    Component: f,
    useEmitter: (v, x) => {
      const E = L.useContext(l)[v];
      Vs(() => rt(E, x), [x, E]);
    },
    useEmitterValue: m,
    usePublisher: h
  };
}
const uy = L.createContext(void 0), dy = L.createContext(void 0), fy = typeof document < "u" ? L.useLayoutEffect : L.useEffect;
function cc(e) {
  return "self" in e;
}
function jC(e) {
  return "body" in e;
}
function py(e, t, n, r = ui, o, s) {
  const a = L.useRef(null), l = L.useRef(null), c = L.useRef(null), u = L.useCallback(
    (h) => {
      let g, y, m;
      const v = h.target;
      if (jC(v) || cc(v)) {
        const E = cc(v) ? v : v.defaultView;
        m = s ? E.scrollX : E.scrollY, g = s ? E.document.documentElement.scrollWidth : E.document.documentElement.scrollHeight, y = s ? E.innerWidth : E.innerHeight;
      } else
        m = s ? v.scrollLeft : v.scrollTop, g = s ? v.scrollWidth : v.scrollHeight, y = s ? v.offsetWidth : v.offsetHeight;
      const x = () => {
        e({
          scrollHeight: g,
          scrollTop: Math.max(m, 0),
          viewportHeight: y
        });
      };
      h.suppressFlushSync ? x() : Mo.flushSync(x), l.current !== null && (m === l.current || m <= 0 || m === g - y) && (l.current = null, t(!0), c.current && (clearTimeout(c.current), c.current = null));
    },
    [e, t]
  );
  L.useEffect(() => {
    const h = o || a.current;
    return r(o || a.current), u({ suppressFlushSync: !0, target: h }), h.addEventListener("scroll", u, { passive: !0 }), () => {
      r(null), h.removeEventListener("scroll", u);
    };
  }, [a, u, n, r, o]);
  function d(h) {
    const g = a.current;
    if (!g || (s ? "offsetWidth" in g && g.offsetWidth === 0 : "offsetHeight" in g && g.offsetHeight === 0))
      return;
    const y = h.behavior === "smooth";
    let m, v, x;
    cc(g) ? (v = Math.max(
      zr(g.document.documentElement, s ? "width" : "height"),
      s ? g.document.documentElement.scrollWidth : g.document.documentElement.scrollHeight
    ), m = s ? g.innerWidth : g.innerHeight, x = s ? window.scrollX : window.scrollY) : (v = g[s ? "scrollWidth" : "scrollHeight"], m = zr(g, s ? "width" : "height"), x = g[s ? "scrollLeft" : "scrollTop"]);
    const E = v - m;
    if (h.top = Math.ceil(Math.max(Math.min(E, h.top), 0)), ry(m, v) || h.top === x) {
      e({ scrollHeight: v, scrollTop: x, viewportHeight: m }), y && t(!0);
      return;
    }
    y ? (l.current = h.top, c.current && clearTimeout(c.current), c.current = setTimeout(() => {
      c.current = null, l.current = null, t(!0);
    }, 1e3)) : l.current = null, s && (h = { behavior: h.behavior, left: h.top }), g.scrollTo(h);
  }
  function f(h) {
    s && (h = { behavior: h.behavior, left: h.top }), a.current.scrollBy(h);
  }
  return { scrollByCallback: f, scrollerRef: a, scrollToCallback: d };
}
const uc = "-webkit-sticky", Ap = "sticky", my = ay(() => {
  if (typeof document > "u")
    return Ap;
  const e = document.createElement("div");
  return e.style.position = uc, e.style.position === uc ? uc : Ap;
});
function Cd(e) {
  return e;
}
const LC = /* @__PURE__ */ Qe(() => {
  const e = be((c) => `Item ${c}`), t = be(null), n = be((c) => `Group ${c}`), r = be({}), o = be(Cd), s = be("div"), a = be(ui), l = (c, u = null) => en(
    ge(
      r,
      Ee((d) => d[c]),
      ht()
    ),
    u
  );
  return {
    components: r,
    computeItemKey: o,
    context: t,
    EmptyPlaceholder: l("EmptyPlaceholder"),
    FooterComponent: l("Footer"),
    GroupComponent: l("Group", "div"),
    groupContent: n,
    HeaderComponent: l("Header"),
    HeaderFooterTag: s,
    ItemComponent: l("Item", "div"),
    itemContent: e,
    ListComponent: l("List", "div"),
    ScrollerComponent: l("Scroller", "div"),
    scrollerRef: a,
    ScrollSeekPlaceholder: l("ScrollSeekPlaceholder"),
    TopItemListComponent: l("TopItemList")
  };
}), VC = /* @__PURE__ */ Qe(
  ([e, t]) => ({ ...e, ...t }),
  gt(ly, LC)
), zC = ({ height: e }) => /* @__PURE__ */ P("div", { style: { height: e } }), WC = { overflowAnchor: "none", position: my(), zIndex: 1 }, hy = { overflowAnchor: "none" }, UC = { ...hy, display: "inline-block", height: "100%" }, Mp = /* @__PURE__ */ L.memo(function({ showTopList: e = !1 }) {
  const t = Ve("listState"), n = An("sizeRanges"), r = Ve("useWindowScroll"), o = Ve("customScrollParent"), s = An("windowScrollContainerState"), a = An("scrollContainerState"), l = o || r ? s : a, c = Ve("itemContent"), u = Ve("context"), d = Ve("groupContent"), f = Ve("trackItemSizes"), h = Ve("itemSize"), g = Ve("log"), y = An("gap"), m = Ve("horizontalDirection"), { callbackRef: v } = oC(
    n,
    h,
    f,
    e ? ui : l,
    g,
    y,
    o,
    m,
    Ve("skipAnimationFrameInResizeObserver")
  ), [x, E] = L.useState(0);
  Od("deviation", (D) => {
    x !== D && E(D);
  });
  const w = Ve("EmptyPlaceholder"), S = Ve("ScrollSeekPlaceholder") || zC, b = Ve("ListComponent"), T = Ve("ItemComponent"), R = Ve("GroupComponent"), $ = Ve("computeItemKey"), I = Ve("isSeeking"), p = Ve("groupIndices").length > 0, O = Ve("alignToBottom"), k = Ve("initialItemFinalLocationReached"), A = e ? {} : {
    boxSizing: "border-box",
    ...m ? {
      display: "inline-block",
      height: "100%",
      marginLeft: x !== 0 ? x : O ? "auto" : 0,
      paddingLeft: t.offsetTop,
      paddingRight: t.offsetBottom,
      whiteSpace: "nowrap"
    } : {
      marginTop: x !== 0 ? x : O ? "auto" : 0,
      paddingBottom: t.offsetBottom,
      paddingTop: t.offsetTop
    },
    ...k ? {} : { visibility: "hidden" }
  };
  return !e && t.totalCount === 0 && w ? /* @__PURE__ */ P(w, { ...Gt(w, u) }) : /* @__PURE__ */ P(
    b,
    {
      ...Gt(b, u),
      "data-testid": e ? "virtuoso-top-item-list" : "virtuoso-item-list",
      ref: v,
      style: A,
      children: (e ? t.topItems : t.items).map((D) => {
        const _ = D.originalIndex, M = $(_ + t.firstItemIndex, D.data, u);
        return I ? /* @__PURE__ */ lo(
          S,
          {
            ...Gt(S, u),
            height: D.size,
            index: D.index,
            key: M,
            type: D.type || "item",
            ...D.type === "group" ? {} : { groupIndex: D.groupIndex }
          }
        ) : D.type === "group" ? /* @__PURE__ */ lo(
          R,
          {
            ...Gt(R, u),
            "data-index": _,
            "data-item-index": D.index,
            "data-known-size": D.size,
            key: M,
            style: WC
          },
          d(D.index, u)
        ) : /* @__PURE__ */ lo(
          T,
          {
            ...Gt(T, u),
            ...GC(T, D.data),
            "data-index": _,
            "data-item-group-index": D.groupIndex,
            "data-item-index": D.index,
            "data-known-size": D.size,
            key: M,
            style: m ? UC : hy
          },
          p ? c(D.index, D.groupIndex, D.data, u) : c(D.index, D.data, u)
        );
      })
    }
  );
}), HC = {
  height: "100%",
  outline: "none",
  overflowY: "auto",
  position: "relative",
  WebkitOverflowScrolling: "touch"
}, qC = {
  outline: "none",
  overflowX: "auto",
  position: "relative"
}, bl = (e) => ({
  height: "100%",
  position: "absolute",
  top: 0,
  width: "100%",
  ...e ? { display: "flex", flexDirection: "column" } : {}
}), YC = {
  position: my(),
  top: 0,
  width: "100%",
  zIndex: 1
};
function Gt(e, t) {
  if (typeof e != "string")
    return { context: t };
}
function GC(e, t) {
  return { item: typeof e == "string" ? void 0 : t };
}
const KC = /* @__PURE__ */ L.memo(function() {
  const e = Ve("HeaderComponent"), t = An("headerHeight"), n = Ve("HeaderFooterTag"), r = yo(
    L.useMemo(
      () => (s) => {
        t(zr(s, "height"));
      },
      [t]
    ),
    !0,
    Ve("skipAnimationFrameInResizeObserver")
  ), o = Ve("context");
  return e ? /* @__PURE__ */ P(n, { ref: r, children: /* @__PURE__ */ P(e, { ...Gt(e, o) }) }) : null;
}), XC = /* @__PURE__ */ L.memo(function() {
  const e = Ve("FooterComponent"), t = An("footerHeight"), n = Ve("HeaderFooterTag"), r = yo(
    L.useMemo(
      () => (s) => {
        t(zr(s, "height"));
      },
      [t]
    ),
    !0,
    Ve("skipAnimationFrameInResizeObserver")
  ), o = Ve("context");
  return e ? /* @__PURE__ */ P(n, { ref: r, children: /* @__PURE__ */ P(e, { ...Gt(e, o) }) }) : null;
});
function gy({ useEmitter: e, useEmitterValue: t, usePublisher: n }) {
  return L.memo(function({ children: r, style: o, ...s }) {
    const a = n("scrollContainerState"), l = t("ScrollerComponent"), c = n("smoothScrollTargetReached"), u = t("scrollerRef"), d = t("context"), f = t("horizontalDirection") || !1, { scrollByCallback: h, scrollerRef: g, scrollToCallback: y } = py(
      a,
      c,
      l,
      u,
      void 0,
      f
    );
    return e("scrollTo", y), e("scrollBy", h), /* @__PURE__ */ P(
      l,
      {
        "data-testid": "virtuoso-scroller",
        "data-virtuoso-scroller": !0,
        ref: g,
        style: { ...f ? qC : HC, ...o },
        tabIndex: 0,
        ...s,
        ...Gt(l, d),
        children: r
      }
    );
  });
}
function yy({ useEmitter: e, useEmitterValue: t, usePublisher: n }) {
  return L.memo(function({ children: r, style: o, ...s }) {
    const a = n("windowScrollContainerState"), l = t("ScrollerComponent"), c = n("smoothScrollTargetReached"), u = t("totalListHeight"), d = t("deviation"), f = t("customScrollParent"), h = t("context"), g = L.useRef(null), y = t("scrollerRef"), { scrollByCallback: m, scrollerRef: v, scrollToCallback: x } = py(
      a,
      c,
      l,
      y,
      f
    );
    return fy(() => {
      var E;
      return v.current = f || ((E = g.current) == null ? void 0 : E.ownerDocument.defaultView), () => {
        v.current = null;
      };
    }, [v, f]), e("windowScrollTo", x), e("scrollBy", m), /* @__PURE__ */ P(
      l,
      {
        ref: g,
        "data-virtuoso-scroller": !0,
        style: { position: "relative", ...o, ...u !== 0 ? { height: u + d } : {} },
        ...s,
        ...Gt(l, h),
        children: r
      }
    );
  });
}
const QC = ({ children: e }) => {
  const t = L.useContext(uy), n = An("viewportHeight"), r = An("fixedItemHeight"), o = Ve("alignToBottom"), s = Ve("horizontalDirection"), a = L.useMemo(
    () => zg(n, (c) => zr(c, s ? "width" : "height")),
    [n, s]
  ), l = yo(a, !0, Ve("skipAnimationFrameInResizeObserver"));
  return L.useEffect(() => {
    t && (n(t.viewportHeight), r(t.itemHeight));
  }, [t, n, r]), /* @__PURE__ */ P("div", { "data-viewport-type": "element", ref: l, style: bl(o), children: e });
}, JC = ({ children: e }) => {
  const t = L.useContext(uy), n = An("windowViewportRect"), r = An("fixedItemHeight"), o = Ve("customScrollParent"), s = Hg(
    n,
    o,
    Ve("skipAnimationFrameInResizeObserver")
  ), a = Ve("alignToBottom");
  return L.useEffect(() => {
    t && (r(t.itemHeight), n({ offsetTop: 0, visibleHeight: t.viewportHeight, visibleWidth: 100 }));
  }, [t, n, r]), /* @__PURE__ */ P("div", { "data-viewport-type": "window", ref: s, style: bl(a), children: e });
}, ZC = ({ children: e }) => {
  const t = Ve("TopItemListComponent") || "div", n = Ve("headerHeight"), r = { ...YC, marginTop: `${n}px` }, o = Ve("context");
  return /* @__PURE__ */ P(t, { style: r, ...Gt(t, o), children: e });
}, eO = /* @__PURE__ */ L.memo(function(e) {
  const t = Ve("useWindowScroll"), n = Ve("topItemsIndexes").length > 0, r = Ve("customScrollParent"), o = Ve("context"), s = r || t ? rO : nO, a = r || t ? JC : QC;
  return /* @__PURE__ */ Pe(s, { ...e, ...Gt(s, o), children: [
    n && /* @__PURE__ */ P(ZC, { children: /* @__PURE__ */ P(Mp, { showTopList: !0 }) }),
    /* @__PURE__ */ Pe(a, { children: [
      /* @__PURE__ */ P(KC, {}),
      /* @__PURE__ */ P(Mp, {}),
      /* @__PURE__ */ P(XC, {})
    ] })
  ] });
}), {
  Component: tO,
  useEmitter: Od,
  useEmitterValue: Ve,
  usePublisher: An
} = /* @__PURE__ */ cy(
  VC,
  {
    events: {
      atBottomStateChange: "atBottomStateChange",
      atTopStateChange: "atTopStateChange",
      endReached: "endReached",
      groupIndices: "groupIndices",
      isScrolling: "isScrolling",
      itemsRendered: "itemsRendered",
      rangeChanged: "rangeChanged",
      startReached: "startReached",
      totalListHeightChanged: "totalListHeightChanged"
    },
    methods: {
      autoscrollToBottom: "autoscrollToBottom",
      getState: "getState",
      scrollBy: "scrollBy",
      scrollIntoView: "scrollIntoView",
      scrollTo: "scrollTo",
      scrollToIndex: "scrollToIndex"
    },
    optional: {
      alignToBottom: "alignToBottom",
      atBottomThreshold: "atBottomThreshold",
      atTopThreshold: "atTopThreshold",
      components: "components",
      computeItemKey: "computeItemKey",
      context: "context",
      customScrollParent: "customScrollParent",
      data: "data",
      defaultItemHeight: "defaultItemHeight",
      firstItemIndex: "firstItemIndex",
      fixedItemHeight: "fixedItemHeight",
      followOutput: "followOutput",
      groupContent: "groupContent",
      groupCounts: "groupCounts",
      headerFooterTag: "HeaderFooterTag",
      horizontalDirection: "horizontalDirection",
      increaseViewportBy: "increaseViewportBy",
      initialItemCount: "initialItemCount",
      initialScrollTop: "initialScrollTop",
      initialTopMostItemIndex: "initialTopMostItemIndex",
      itemContent: "itemContent",
      itemSize: "itemSize",
      logLevel: "logLevel",
      overscan: "overscan",
      restoreStateFrom: "restoreStateFrom",
      scrollerRef: "scrollerRef",
      scrollSeekConfiguration: "scrollSeekConfiguration",
      skipAnimationFrameInResizeObserver: "skipAnimationFrameInResizeObserver",
      topItemCount: "topItemCount",
      totalCount: "totalCount",
      useWindowScroll: "useWindowScroll"
    },
    required: {}
  },
  eO
), nO = /* @__PURE__ */ gy({ useEmitter: Od, useEmitterValue: Ve, usePublisher: An }), rO = /* @__PURE__ */ yy({ useEmitter: Od, useEmitterValue: Ve, usePublisher: An }), oO = tO, iO = /* @__PURE__ */ Qe(() => {
  const e = be((c) => /* @__PURE__ */ Pe("td", { children: [
    "Item $",
    c
  ] })), t = be(null), n = be(null), r = be(null), o = be({}), s = be(Cd), a = be(ui), l = (c, u = null) => en(
    ge(
      o,
      Ee((d) => d[c]),
      ht()
    ),
    u
  );
  return {
    components: o,
    computeItemKey: s,
    context: t,
    EmptyPlaceholder: l("EmptyPlaceholder"),
    FillerRow: l("FillerRow"),
    fixedFooterContent: r,
    fixedHeaderContent: n,
    itemContent: e,
    ScrollerComponent: l("Scroller", "div"),
    scrollerRef: a,
    ScrollSeekPlaceholder: l("ScrollSeekPlaceholder"),
    TableBodyComponent: l("TableBody", "tbody"),
    TableComponent: l("Table", "table"),
    TableFooterComponent: l("TableFoot", "tfoot"),
    TableHeadComponent: l("TableHead", "thead"),
    TableRowComponent: l("TableRow", "tr")
  };
});
gt(ly, iO);
const _p = {
  bottom: 0,
  itemHeight: 0,
  items: [],
  itemWidth: 0,
  offsetBottom: 0,
  offsetTop: 0,
  top: 0
}, sO = {
  bottom: 0,
  itemHeight: 0,
  items: [{ index: 0 }],
  itemWidth: 0,
  offsetBottom: 0,
  offsetTop: 0,
  top: 0
}, { ceil: Dp, floor: Oa, max: ji, min: dc, round: Bp } = Math;
function Fp(e, t, n) {
  return Array.from({ length: t - e + 1 }).map((r, o) => ({ data: n === null ? null : n[o + e], index: o + e }));
}
function aO(e) {
  return {
    ...sO,
    items: e
  };
}
function zs(e, t) {
  return e && e.width === t.width && e.height === t.height;
}
function lO(e, t) {
  return e && e.column === t.column && e.row === t.row;
}
const cO = /* @__PURE__ */ Qe(
  ([
    { increaseViewportBy: e, listBoundary: t, overscan: n, visibleRange: r },
    { footerHeight: o, headerHeight: s, scrollBy: a, scrollContainerState: l, scrollTo: c, scrollTop: u, smoothScrollTargetReached: d, viewportHeight: f },
    h,
    g,
    { didMount: y, propsReady: m },
    { customScrollParent: v, useWindowScroll: x, windowScrollContainerState: E, windowScrollTo: w, windowViewportRect: S },
    b
  ]) => {
    const T = be(0), R = be(0), $ = be(_p), I = be({ height: 0, width: 0 }), p = be({ height: 0, width: 0 }), O = qe(), k = qe(), A = be(0), D = be(null), _ = be({ column: 0, row: 0 }), M = qe(), z = qe(), Y = be(!1), H = be(0), j = be(!0), W = be(!1), ee = be(!1);
    rt(
      ge(
        y,
        He(H),
        Be(([X, ae]) => !!ae)
      ),
      () => {
        We(j, !1);
      }
    ), rt(
      ge(
        zt(y, j, p, I, H, W),
        Be(([X, ae, Q, ie, , F]) => X && !ae && Q.height !== 0 && ie.height !== 0 && !F)
      ),
      ([, , , , X]) => {
        We(W, !0), wd(1, () => {
          We(O, X);
        }), mr(ge(u), () => {
          We(t, [0, 0]), We(j, !0);
        });
      }
    ), Ie(
      ge(
        z,
        Be((X) => X != null && X.scrollTop > 0),
        tr(0)
      ),
      R
    ), rt(
      ge(
        y,
        He(z),
        Be(([, X]) => X != null)
      ),
      ([, X]) => {
        X && (We(I, X.viewport), We(p, X.item), We(_, X.gap), X.scrollTop > 0 && (We(Y, !0), mr(ge(u, Qo(1)), (ae) => {
          We(Y, !1);
        }), We(c, { top: X.scrollTop })));
      }
    ), Ie(
      ge(
        I,
        Ee(({ height: X }) => X)
      ),
      f
    ), Ie(
      ge(
        zt(
          Fe(I, zs),
          Fe(p, zs),
          Fe(_, (X, ae) => X && X.column === ae.column && X.row === ae.row),
          Fe(u)
        ),
        Ee(([X, ae, Q, ie]) => ({
          gap: Q,
          item: ae,
          scrollTop: ie,
          viewport: X
        }))
      ),
      M
    ), Ie(
      ge(
        zt(
          Fe(T),
          r,
          Fe(_, lO),
          Fe(p, zs),
          Fe(I, zs),
          Fe(D),
          Fe(R),
          Fe(Y),
          Fe(j),
          Fe(H)
        ),
        Be(([, , , , , , , X]) => !X),
        Ee(
          ([
            X,
            [ae, Q],
            ie,
            F,
            he,
            fe,
            Se,
            ,
            Le,
            Ne
          ]) => {
            const { column: ke, row: Re } = ie, { height: De, width: Oe } = F, { width: N } = he;
            if (Se === 0 && (X === 0 || N === 0))
              return _p;
            if (Oe === 0) {
              const re = Sd(Ne, X), Z = re + Math.max(Se - 1, 0);
              return aO(Fp(re, Z, fe));
            }
            const q = by(N, Oe, ke);
            let J, U;
            Le ? ae === 0 && Q === 0 && Se > 0 ? (J = 0, U = Se - 1) : (J = q * Oa((ae + Re) / (De + Re)), U = q * Dp((Q + Re) / (De + Re)) - 1, U = dc(X - 1, ji(U, q - 1)), J = dc(U, ji(0, J))) : (J = 0, U = -1);
            const B = Fp(J, U, fe), { bottom: V, top: G } = jp(he, ie, F, B), pe = Dp(X / q), me = pe * De + (pe - 1) * Re - V;
            return { bottom: V, itemHeight: De, items: B, itemWidth: Oe, offsetBottom: me, offsetTop: G, top: G };
          }
        )
      ),
      $
    ), Ie(
      ge(
        D,
        Be((X) => X !== null),
        Ee((X) => X.length)
      ),
      T
    ), Ie(
      ge(
        zt(I, p, $, _),
        Be(([X, ae, { items: Q }]) => Q.length > 0 && ae.height !== 0 && X.height !== 0),
        Ee(([X, ae, { items: Q }, ie]) => {
          const { bottom: F, top: he } = jp(X, ie, ae, Q);
          return [he, F];
        }),
        ht(is)
      ),
      t
    );
    const K = be(!1);
    Ie(
      ge(
        u,
        He(K),
        Ee(([X, ae]) => ae || X !== 0)
      ),
      K
    );
    const oe = Sn(
      ge(
        zt($, T),
        Be(([{ items: X }]) => X.length > 0),
        He(K),
        Be(([[X, ae], Q]) => {
          const ie = X.items[X.items.length - 1].index === ae - 1;
          return (Q || X.bottom > 0 && X.itemHeight > 0 && X.offsetBottom === 0 && X.items.length === ae) && ie;
        }),
        Ee(([[, X]]) => X - 1),
        ht()
      )
    ), ne = Sn(
      ge(
        Fe($),
        Be(({ items: X }) => X.length > 0 && X[0].index === 0),
        tr(0),
        ht()
      )
    ), se = Sn(
      ge(
        Fe($),
        He(Y),
        Be(([{ items: X }, ae]) => X.length > 0 && !ae),
        Ee(([{ items: X }]) => ({
          endIndex: X[X.length - 1].index,
          startIndex: X[0].index
        })),
        ht(Qg),
        Fr(0)
      )
    );
    Ie(se, g.scrollSeekRangeChanged), Ie(
      ge(
        O,
        He(I, p, T, _),
        Ee(([X, ae, Q, ie, F]) => {
          const he = ny(X), { align: fe, behavior: Se, offset: Le } = he;
          let Ne = he.index;
          Ne === "LAST" && (Ne = ie - 1), Ne = ji(0, Ne, dc(ie - 1, Ne));
          let ke = iu(ae, F, Q, Ne);
          return fe === "end" ? ke = Bp(ke - ae.height + Q.height) : fe === "center" && (ke = Bp(ke - ae.height / 2 + Q.height / 2)), Le && (ke += Le), { behavior: Se, top: ke };
        })
      ),
      c
    );
    const de = en(
      ge(
        $,
        Ee((X) => X.offsetBottom + X.bottom)
      ),
      0
    );
    return Ie(
      ge(
        S,
        Ee((X) => ({ height: X.visibleHeight, width: X.visibleWidth }))
      ),
      I
    ), {
      customScrollParent: v,
      // input
      data: D,
      deviation: A,
      footerHeight: o,
      gap: _,
      headerHeight: s,
      increaseViewportBy: e,
      initialItemCount: R,
      itemDimensions: p,
      overscan: n,
      restoreStateFrom: z,
      scrollBy: a,
      scrollContainerState: l,
      scrollHeight: k,
      scrollTo: c,
      scrollToIndex: O,
      scrollTop: u,
      smoothScrollTargetReached: d,
      totalCount: T,
      useWindowScroll: x,
      viewportDimensions: I,
      windowScrollContainerState: E,
      windowScrollTo: w,
      windowViewportRect: S,
      ...g,
      // output
      gridState: $,
      horizontalDirection: ee,
      initialTopMostItemIndex: H,
      totalListHeight: de,
      ...h,
      endReached: oe,
      propsReady: m,
      rangeChanged: se,
      startReached: ne,
      stateChanged: M,
      stateRestoreInProgress: Y,
      ...b
    };
  },
  gt(Td, ln, xs, sy, Qr, Ed, Xr)
);
function by(e, t, n) {
  return ji(1, Oa((e + n) / (Oa(t) + n)));
}
function jp(e, t, n, r) {
  const { height: o } = n;
  if (o === void 0 || r.length === 0)
    return { bottom: 0, top: 0 };
  const s = iu(e, t, n, r[0].index);
  return { bottom: iu(e, t, n, r[r.length - 1].index) + o, top: s };
}
function iu(e, t, n, r) {
  const o = by(e.width, n.width, t.column), s = Oa(r / o), a = s * n.height + ji(0, s - 1) * t.row;
  return a > 0 ? a + t.row : a;
}
const uO = /* @__PURE__ */ Qe(() => {
  const e = be((f) => `Item ${f}`), t = be({}), n = be(null), r = be("virtuoso-grid-item"), o = be("virtuoso-grid-list"), s = be(Cd), a = be("div"), l = be(ui), c = (f, h = null) => en(
    ge(
      t,
      Ee((g) => g[f]),
      ht()
    ),
    h
  ), u = be(!1), d = be(!1);
  return Ie(Fe(d), u), {
    components: t,
    computeItemKey: s,
    context: n,
    FooterComponent: c("Footer"),
    HeaderComponent: c("Header"),
    headerFooterTag: a,
    itemClassName: r,
    ItemComponent: c("Item", "div"),
    itemContent: e,
    listClassName: o,
    ListComponent: c("List", "div"),
    readyStateChanged: u,
    reportReadyState: d,
    ScrollerComponent: c("Scroller", "div"),
    scrollerRef: l,
    ScrollSeekPlaceholder: c("ScrollSeekPlaceholder", "div")
  };
}), dO = /* @__PURE__ */ Qe(
  ([e, t]) => ({ ...e, ...t }),
  gt(cO, uO)
), fO = /* @__PURE__ */ L.memo(function() {
  const e = vt("gridState"), t = vt("listClassName"), n = vt("itemClassName"), r = vt("itemContent"), o = vt("computeItemKey"), s = vt("isSeeking"), a = Mn("scrollHeight"), l = vt("ItemComponent"), c = vt("ListComponent"), u = vt("ScrollSeekPlaceholder"), d = vt("context"), f = Mn("itemDimensions"), h = Mn("gap"), g = vt("log"), y = vt("stateRestoreInProgress"), m = Mn("reportReadyState"), v = yo(
    L.useMemo(
      () => (x) => {
        const E = x.parentElement.parentElement.scrollHeight;
        a(E);
        const w = x.firstChild;
        if (w) {
          const { height: S, width: b } = w.getBoundingClientRect();
          f({ height: S, width: b });
        }
        h({
          column: Lp("column-gap", getComputedStyle(x).columnGap, g),
          row: Lp("row-gap", getComputedStyle(x).rowGap, g)
        });
      },
      [a, f, h, g]
    ),
    !0,
    !1
  );
  return fy(() => {
    e.itemHeight > 0 && e.itemWidth > 0 && m(!0);
  }, [e]), y ? null : /* @__PURE__ */ P(
    c,
    {
      className: t,
      ref: v,
      ...Gt(c, d),
      "data-testid": "virtuoso-item-list",
      style: { paddingBottom: e.offsetBottom, paddingTop: e.offsetTop },
      children: e.items.map((x) => {
        const E = o(x.index, x.data, d);
        return s ? /* @__PURE__ */ P(
          u,
          {
            ...Gt(u, d),
            height: e.itemHeight,
            index: x.index,
            width: e.itemWidth
          },
          E
        ) : /* @__PURE__ */ lo(
          l,
          {
            ...Gt(l, d),
            className: n,
            "data-index": x.index,
            key: E
          },
          r(x.index, x.data, d)
        );
      })
    }
  );
}), pO = L.memo(function() {
  const e = vt("HeaderComponent"), t = Mn("headerHeight"), n = vt("headerFooterTag"), r = yo(
    L.useMemo(
      () => (s) => {
        t(zr(s, "height"));
      },
      [t]
    ),
    !0,
    !1
  ), o = vt("context");
  return e ? /* @__PURE__ */ P(n, { ref: r, children: /* @__PURE__ */ P(e, { ...Gt(e, o) }) }) : null;
}), mO = L.memo(function() {
  const e = vt("FooterComponent"), t = Mn("footerHeight"), n = vt("headerFooterTag"), r = yo(
    L.useMemo(
      () => (s) => {
        t(zr(s, "height"));
      },
      [t]
    ),
    !0,
    !1
  ), o = vt("context");
  return e ? /* @__PURE__ */ P(n, { ref: r, children: /* @__PURE__ */ P(e, { ...Gt(e, o) }) }) : null;
}), hO = ({ children: e }) => {
  const t = L.useContext(dy), n = Mn("itemDimensions"), r = Mn("viewportDimensions"), o = yo(
    L.useMemo(
      () => (s) => {
        r(s.getBoundingClientRect());
      },
      [r]
    ),
    !0,
    !1
  );
  return L.useEffect(() => {
    t && (r({ height: t.viewportHeight, width: t.viewportWidth }), n({ height: t.itemHeight, width: t.itemWidth }));
  }, [t, r, n]), /* @__PURE__ */ P("div", { ref: o, style: bl(!1), children: e });
}, gO = ({ children: e }) => {
  const t = L.useContext(dy), n = Mn("windowViewportRect"), r = Mn("itemDimensions"), o = vt("customScrollParent"), s = Hg(n, o, !1);
  return L.useEffect(() => {
    t && (r({ height: t.itemHeight, width: t.itemWidth }), n({ offsetTop: 0, visibleHeight: t.viewportHeight, visibleWidth: t.viewportWidth }));
  }, [t, n, r]), /* @__PURE__ */ P("div", { ref: s, style: bl(!1), children: e });
}, yO = /* @__PURE__ */ L.memo(function({ ...e }) {
  const t = vt("useWindowScroll"), n = vt("customScrollParent"), r = n || t ? xO : vO, o = n || t ? gO : hO, s = vt("context");
  return /* @__PURE__ */ P(r, { ...e, ...Gt(r, s), children: /* @__PURE__ */ Pe(o, { children: [
    /* @__PURE__ */ P(pO, {}),
    /* @__PURE__ */ P(fO, {}),
    /* @__PURE__ */ P(mO, {})
  ] }) });
}), {
  Component: bO,
  useEmitter: vy,
  useEmitterValue: vt,
  usePublisher: Mn
} = /* @__PURE__ */ cy(
  dO,
  {
    events: {
      atBottomStateChange: "atBottomStateChange",
      atTopStateChange: "atTopStateChange",
      endReached: "endReached",
      isScrolling: "isScrolling",
      rangeChanged: "rangeChanged",
      readyStateChanged: "readyStateChanged",
      startReached: "startReached",
      stateChanged: "stateChanged"
    },
    methods: {
      scrollBy: "scrollBy",
      scrollTo: "scrollTo",
      scrollToIndex: "scrollToIndex"
    },
    optional: {
      components: "components",
      computeItemKey: "computeItemKey",
      context: "context",
      customScrollParent: "customScrollParent",
      data: "data",
      headerFooterTag: "headerFooterTag",
      increaseViewportBy: "increaseViewportBy",
      initialItemCount: "initialItemCount",
      initialTopMostItemIndex: "initialTopMostItemIndex",
      itemClassName: "itemClassName",
      itemContent: "itemContent",
      listClassName: "listClassName",
      logLevel: "logLevel",
      overscan: "overscan",
      restoreStateFrom: "restoreStateFrom",
      scrollerRef: "scrollerRef",
      scrollSeekConfiguration: "scrollSeekConfiguration",
      totalCount: "totalCount",
      useWindowScroll: "useWindowScroll"
    }
  },
  yO
), vO = /* @__PURE__ */ gy({ useEmitter: vy, useEmitterValue: vt, usePublisher: Mn }), xO = /* @__PURE__ */ yy({ useEmitter: vy, useEmitterValue: vt, usePublisher: Mn });
function Lp(e, t, n) {
  return t !== "normal" && !(t != null && t.endsWith("px")) && n(`${e} was not resolved to pixel value correctly`, t, Tn.WARN), t === "normal" ? 0 : parseInt(t ?? "0", 10);
}
const wO = bO, Ra = je(({ height: e, width: t, isVirtualized: n, items: r, renderItem: o, sx: s }) => n ? /* @__PURE__ */ P(Kt, { id: "VenomousUI-Menu", sx: { height: e || "100%", width: t || "100%", ...s }, children: /* @__PURE__ */ P(
  oO,
  {
    style: { height: "100%", width: "100%" },
    totalCount: r == null ? void 0 : r.length,
    data: r,
    itemContent: (a, l) => o ? o(l, a) : l.label
  }
) }) : /* @__PURE__ */ P(
  Kt,
  {
    id: "VenomousUI-Menu",
    gap: 1,
    sx: {
      height: e || "100%",
      width: t || "100%",
      overflowY: "scroll",
      overflowX: "hidden",
      ...s,
      "& > #VenomousUI-MenuItem": {
        width: "100% !important"
      }
      // '& #VenomousUI-MenuItem': { mb: '4px' },
      // '& #VenomousUI-MenuItem:last-child': { mb: 0 },
    },
    children: r == null ? void 0 : r.map((a, l) => /* @__PURE__ */ P(Nv, { children: o ? o(a, l) : a.label }, a.label))
  }
));
Ra.displayName = "Menu";
const Li = je(
  ({
    icon: e = "",
    label: t,
    clickable: n,
    disabled: r,
    onClick: o,
    onMouseEnter: s,
    onMouseLeave: a,
    isActive: l,
    sx: c
  }) => n ? /* @__PURE__ */ P(
    pr,
    {
      id: "VenomousUI-MenuItem",
      isGhost: !0,
      text: /* @__PURE__ */ P(On, { text: t, ellipsis: !0 }),
      icon: e,
      iconWidth: 28,
      iconPosition: "start",
      onClick: o,
      onMouseEnter: s,
      onMouseLeave: a,
      disabled: r,
      color: l ? "primary" : "auto",
      sx: {
        py: "8px",
        px: "16px",
        width: "100%",
        justifyContent: "flex-start",
        transition: "background-color 0.2s ease; color 0.2s ease",
        backgroundColor: l ? "divider" : "transparent",
        "&:hover": { backgroundColor: "divider" },
        ...c
      }
    }
  ) : /* @__PURE__ */ Pe(Kt, { row: !0, py: "8px", px: "16px", sx: { width: "100%", ...c }, id: "VenomousUI-MenuItem", children: [
    /* @__PURE__ */ P(Or, { icon: e, width: 28, color: l ? "primary" : "auto" }),
    /* @__PURE__ */ P(On, { text: t, ellipsis: !0, flex: 1, textColor: l ? "primary" : "auto" })
  ] })
);
Li.displayName = "MenuItem";
function SO({ currentPath: e }) {
  const t = an(
    (r) => {
      let o = r.url;
      if (!o && r.subItems && r.subItems.length > 0) {
        const a = r.subItems.map((l) => l.url).filter(Boolean);
        o = TO(a);
      }
      return !!(o && (e == null ? void 0 : e.startsWith(o)) || r.subItems && r.subItems.some(
        (a) => a.url && (e == null ? void 0 : e.startsWith(a.url))
      ));
    },
    [e]
  ), n = an(
    (r) => !!(r.url && (e != null && e.startsWith(r.url))),
    [e]
  );
  return {
    checkIsParentItemActive: t,
    checkIsSubItemActive: n
  };
}
function TO(e) {
  if (e.length === 0) return "";
  let t = e[0];
  for (let n = 1; n < e.length; n++)
    for (; e[n].indexOf(t) !== 0; )
      if (t = t.slice(0, -1), !t) return "";
  if (!t.endsWith("/")) {
    const n = t.lastIndexOf("/");
    t = t.slice(0, n + 1);
  }
  return t;
}
const EO = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, Jo = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Ir(), o = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: s,
    appear: a = !0,
    children: l,
    easing: c,
    in: u,
    onEnter: d,
    onEntered: f,
    onEntering: h,
    onExit: g,
    onExited: y,
    onExiting: m,
    style: v,
    timeout: x = o,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: E = Rn,
    ...w
  } = t, S = C.useRef(null), b = tn(S, go(l), n), T = (D) => (_) => {
    if (D) {
      const M = S.current;
      _ === void 0 ? D(M) : D(M, _);
    }
  }, R = T(h), $ = T((D, _) => {
    od(D);
    const M = Uo({
      style: v,
      timeout: x,
      easing: c
    }, {
      mode: "enter"
    });
    D.style.webkitTransition = r.transitions.create("opacity", M), D.style.transition = r.transitions.create("opacity", M), d && d(D, _);
  }), I = T(f), p = T(m), O = T((D) => {
    const _ = Uo({
      style: v,
      timeout: x,
      easing: c
    }, {
      mode: "exit"
    });
    D.style.webkitTransition = r.transitions.create("opacity", _), D.style.transition = r.transitions.create("opacity", _), g && g(D);
  }), k = T(y);
  return /* @__PURE__ */ P(E, {
    appear: a,
    in: u,
    nodeRef: S,
    onEnter: $,
    onEntered: I,
    onEntering: R,
    onExit: O,
    onExited: k,
    onExiting: p,
    addEndListener: (D) => {
      s && s(S.current, D);
    },
    timeout: x,
    ...w,
    children: (D, {
      ownerState: _,
      ...M
    }) => /* @__PURE__ */ C.cloneElement(l, {
      style: {
        opacity: 0,
        visibility: D === "exited" && !u ? "hidden" : void 0,
        ...EO[D],
        ...v,
        ...l.props.style
      },
      ref: b,
      ...M
    })
  });
});
process.env.NODE_ENV !== "production" && (Jo.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: Yr.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function su(e) {
  return typeof e == "string";
}
function CO(e) {
  const t = dn(e);
  return t.body === e ? dr(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function Vi(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function Vp(e) {
  return parseInt(dr(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function OO(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), r = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || r;
}
function zp(e, t, n, r, o) {
  const s = [t, n, ...r];
  [].forEach.call(e.children, (a) => {
    const l = !s.includes(a), c = !OO(a);
    l && c && Vi(a, o);
  });
}
function fc(e, t) {
  let n = -1;
  return e.some((r, o) => t(r) ? (n = o, !0) : !1), n;
}
function RO(e, t) {
  const n = [], r = e.container;
  if (!t.disableScrollLock) {
    if (CO(r)) {
      const a = vw(dr(r));
      n.push({
        value: r.style.paddingRight,
        property: "padding-right",
        el: r
      }), r.style.paddingRight = `${Vp(r) + a}px`;
      const l = dn(r).querySelectorAll(".mui-fixed");
      [].forEach.call(l, (c) => {
        n.push({
          value: c.style.paddingRight,
          property: "padding-right",
          el: c
        }), c.style.paddingRight = `${Vp(c) + a}px`;
      });
    }
    let s;
    if (r.parentNode instanceof DocumentFragment)
      s = dn(r).body;
    else {
      const a = r.parentElement, l = dr(r);
      s = (a == null ? void 0 : a.nodeName) === "HTML" && l.getComputedStyle(a).overflowY === "scroll" ? a : r;
    }
    n.push({
      value: s.style.overflow,
      property: "overflow",
      el: s
    }, {
      value: s.style.overflowX,
      property: "overflow-x",
      el: s
    }, {
      value: s.style.overflowY,
      property: "overflow-y",
      el: s
    }), s.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: s,
      el: a,
      property: l
    }) => {
      s ? a.style.setProperty(l, s) : a.style.removeProperty(l);
    });
  };
}
function $O(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
let kO = class {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let r = this.modals.indexOf(t);
    if (r !== -1)
      return r;
    r = this.modals.length, this.modals.push(t), t.modalRef && Vi(t.modalRef, !1);
    const o = $O(n);
    zp(n, t.mount, t.modalRef, o, !0);
    const s = fc(this.containers, (a) => a.container === n);
    return s !== -1 ? (this.containers[s].modals.push(t), r) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: o
    }), r);
  }
  mount(t, n) {
    const r = fc(this.containers, (s) => s.modals.includes(t)), o = this.containers[r];
    o.restore || (o.restore = RO(o, n));
  }
  remove(t, n = !0) {
    const r = this.modals.indexOf(t);
    if (r === -1)
      return r;
    const o = fc(this.containers, (a) => a.modals.includes(t)), s = this.containers[o];
    if (s.modals.splice(s.modals.indexOf(t), 1), this.modals.splice(r, 1), s.modals.length === 0)
      s.restore && s.restore(), t.modalRef && Vi(t.modalRef, n), zp(s.container, t.mount, t.modalRef, s.hiddenSiblings, !1), this.containers.splice(o, 1);
    else {
      const a = s.modals[s.modals.length - 1];
      a.modalRef && Vi(a.modalRef, !1);
    }
    return r;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
};
const PO = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function IO(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function NO(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (r) => e.ownerDocument.querySelector(`input[type="radio"]${r}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function AO(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || NO(e));
}
function MO(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(PO)).forEach((r, o) => {
    const s = IO(r);
    s === -1 || !AO(r) || (s === 0 ? t.push(r) : n.push({
      documentOrder: o,
      tabIndex: s,
      node: r
    }));
  }), n.sort((r, o) => r.tabIndex === o.tabIndex ? r.documentOrder - o.documentOrder : r.tabIndex - o.tabIndex).map((r) => r.node).concat(t);
}
function _O() {
  return !0;
}
function $a(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: r = !1,
    disableRestoreFocus: o = !1,
    getTabbable: s = MO,
    isEnabled: a = _O,
    open: l
  } = e, c = C.useRef(!1), u = C.useRef(null), d = C.useRef(null), f = C.useRef(null), h = C.useRef(null), g = C.useRef(!1), y = C.useRef(null), m = tn(go(t), y), v = C.useRef(null);
  C.useEffect(() => {
    !l || !y.current || (g.current = !n);
  }, [n, l]), C.useEffect(() => {
    if (!l || !y.current)
      return;
    const w = dn(y.current);
    return y.current.contains(w.activeElement) || (y.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), y.current.setAttribute("tabIndex", "-1")), g.current && y.current.focus()), () => {
      o || (f.current && f.current.focus && (c.current = !0, f.current.focus()), f.current = null);
    };
  }, [l]), C.useEffect(() => {
    if (!l || !y.current)
      return;
    const w = dn(y.current), S = (R) => {
      v.current = R, !(r || !a() || R.key !== "Tab") && w.activeElement === y.current && R.shiftKey && (c.current = !0, d.current && d.current.focus());
    }, b = () => {
      var I, p;
      const R = y.current;
      if (R === null)
        return;
      if (!w.hasFocus() || !a() || c.current) {
        c.current = !1;
        return;
      }
      if (R.contains(w.activeElement) || r && w.activeElement !== u.current && w.activeElement !== d.current)
        return;
      if (w.activeElement !== h.current)
        h.current = null;
      else if (h.current !== null)
        return;
      if (!g.current)
        return;
      let $ = [];
      if ((w.activeElement === u.current || w.activeElement === d.current) && ($ = s(y.current)), $.length > 0) {
        const O = !!((I = v.current) != null && I.shiftKey && ((p = v.current) == null ? void 0 : p.key) === "Tab"), k = $[0], A = $[$.length - 1];
        typeof k != "string" && typeof A != "string" && (O ? A.focus() : k.focus());
      } else
        R.focus();
    };
    w.addEventListener("focusin", b), w.addEventListener("keydown", S, !0);
    const T = setInterval(() => {
      w.activeElement && w.activeElement.tagName === "BODY" && b();
    }, 50);
    return () => {
      clearInterval(T), w.removeEventListener("focusin", b), w.removeEventListener("keydown", S, !0);
    };
  }, [n, r, o, a, l, s]);
  const x = (w) => {
    f.current === null && (f.current = w.relatedTarget), g.current = !0, h.current = w.target;
    const S = t.props.onFocus;
    S && S(w);
  }, E = (w) => {
    f.current === null && (f.current = w.relatedTarget), g.current = !0;
  };
  return /* @__PURE__ */ Pe(C.Fragment, {
    children: [/* @__PURE__ */ P("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: u,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ C.cloneElement(t, {
      ref: m,
      onFocus: x
    }), /* @__PURE__ */ P("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: d,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && ($a.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: Yr,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: i.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: i.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: i.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: i.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: i.func,
  /**
   * If `true`, focus is locked.
   */
  open: i.bool.isRequired
});
process.env.NODE_ENV !== "production" && ($a.propTypes = ms($a.propTypes));
function DO(e) {
  return St("MuiBackdrop", e);
}
$t("MuiBackdrop", ["root", "invisible"]);
const BO = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return Mt({
    root: ["root", n && "invisible"]
  }, DO, t);
}, FO = Me("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), Rd = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = kt({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: o,
    className: s,
    component: a = "div",
    invisible: l = !1,
    open: c,
    components: u = {},
    componentsProps: d = {},
    slotProps: f = {},
    slots: h = {},
    TransitionComponent: g,
    transitionDuration: y,
    ...m
  } = r, v = {
    ...r,
    component: a,
    invisible: l
  }, x = BO(v), E = {
    transition: g,
    root: u.Root,
    ...h
  }, w = {
    ...d,
    ...f
  }, S = {
    slots: E,
    slotProps: w
  }, [b, T] = dt("root", {
    elementType: FO,
    externalForwardedProps: S,
    className: Ce(x.root, s),
    ownerState: v
  }), [R, $] = dt("transition", {
    elementType: Jo,
    externalForwardedProps: S,
    ownerState: v
  });
  return /* @__PURE__ */ P(R, {
    in: c,
    timeout: y,
    ...m,
    ...$,
    children: /* @__PURE__ */ P(b, {
      "aria-hidden": !0,
      ...T,
      classes: x,
      ref: n,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (Rd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    root: i.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: i.bool,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: i.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function jO(e) {
  return typeof e == "function" ? e() : e;
}
function LO(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const Wp = () => {
}, Ws = new kO();
function VO(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: r = !1,
    closeAfterTransition: o = !1,
    onTransitionEnter: s,
    onTransitionExited: a,
    children: l,
    onClose: c,
    open: u,
    rootRef: d
  } = e, f = C.useRef({}), h = C.useRef(null), g = C.useRef(null), y = tn(g, d), [m, v] = C.useState(!u), x = LO(l);
  let E = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (E = !1);
  const w = () => dn(h.current), S = () => (f.current.modalRef = g.current, f.current.mount = h.current, f.current), b = () => {
    Ws.mount(S(), {
      disableScrollLock: r
    }), g.current && (g.current.scrollTop = 0);
  }, T = sr(() => {
    const _ = jO(t) || w().body;
    Ws.add(S(), _), g.current && b();
  }), R = () => Ws.isTopModal(S()), $ = sr((_) => {
    h.current = _, _ && (u && R() ? b() : g.current && Vi(g.current, E));
  }), I = C.useCallback(() => {
    Ws.remove(S(), E);
  }, [E]);
  C.useEffect(() => () => {
    I();
  }, [I]), C.useEffect(() => {
    u ? T() : (!x || !o) && I();
  }, [u, I, x, o, T]);
  const p = (_) => (M) => {
    var z;
    (z = _.onKeyDown) == null || z.call(_, M), !(M.key !== "Escape" || M.which === 229 || // Wait until IME is settled.
    !R()) && (n || (M.stopPropagation(), c && c(M, "escapeKeyDown")));
  }, O = (_) => (M) => {
    var z;
    (z = _.onClick) == null || z.call(_, M), M.target === M.currentTarget && c && c(M, "backdropClick");
  };
  return {
    getRootProps: (_ = {}) => {
      const M = Kh(e);
      delete M.onTransitionEnter, delete M.onTransitionExited;
      const z = {
        ...M,
        ..._
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...z,
        onKeyDown: p(z),
        ref: y
      };
    },
    getBackdropProps: (_ = {}) => {
      const M = _;
      return {
        "aria-hidden": !0,
        ...M,
        onClick: O(M),
        open: u
      };
    },
    getTransitionProps: () => {
      const _ = () => {
        v(!1), s && s();
      }, M = () => {
        v(!0), a && a(), o && I();
      };
      return {
        onEnter: Fc(_, (l == null ? void 0 : l.props.onEnter) ?? Wp),
        onExited: Fc(M, (l == null ? void 0 : l.props.onExited) ?? Wp)
      };
    },
    rootRef: y,
    portalRef: $,
    isTopModal: R,
    exited: m,
    hasTransition: x
  };
}
function zO(e) {
  return St("MuiModal", e);
}
$t("MuiModal", ["root", "hidden", "backdrop"]);
const WO = (e) => {
  const {
    open: t,
    exited: n,
    classes: r
  } = e;
  return Mt({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, zO, r);
}, UO = Me("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(nt(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), HO = Me(Rd, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), vl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = kt({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: o = HO,
    BackdropProps: s,
    classes: a,
    className: l,
    closeAfterTransition: c = !1,
    children: u,
    container: d,
    component: f,
    components: h = {},
    componentsProps: g = {},
    disableAutoFocus: y = !1,
    disableEnforceFocus: m = !1,
    disableEscapeKeyDown: v = !1,
    disablePortal: x = !1,
    disableRestoreFocus: E = !1,
    disableScrollLock: w = !1,
    hideBackdrop: S = !1,
    keepMounted: b = !1,
    onClose: T,
    onTransitionEnter: R,
    onTransitionExited: $,
    open: I,
    slotProps: p = {},
    slots: O = {},
    // eslint-disable-next-line react/prop-types
    theme: k,
    ...A
  } = r, D = {
    ...r,
    closeAfterTransition: c,
    disableAutoFocus: y,
    disableEnforceFocus: m,
    disableEscapeKeyDown: v,
    disablePortal: x,
    disableRestoreFocus: E,
    disableScrollLock: w,
    hideBackdrop: S,
    keepMounted: b
  }, {
    getRootProps: _,
    getBackdropProps: M,
    getTransitionProps: z,
    portalRef: Y,
    isTopModal: H,
    exited: j,
    hasTransition: W
  } = VO({
    ...D,
    rootRef: n
  }), ee = {
    ...D,
    exited: j
  }, K = WO(ee), oe = {};
  if (u.props.tabIndex === void 0 && (oe.tabIndex = "-1"), W) {
    const {
      onEnter: Q,
      onExited: ie
    } = z();
    oe.onEnter = Q, oe.onExited = ie;
  }
  const ne = {
    slots: {
      root: h.Root,
      backdrop: h.Backdrop,
      ...O
    },
    slotProps: {
      ...g,
      ...p
    }
  }, [se, de] = dt("root", {
    ref: n,
    elementType: UO,
    externalForwardedProps: {
      ...ne,
      ...A,
      component: f
    },
    getSlotProps: _,
    ownerState: ee,
    className: Ce(l, K == null ? void 0 : K.root, !ee.open && ee.exited && (K == null ? void 0 : K.hidden))
  }), [X, ae] = dt("backdrop", {
    ref: s == null ? void 0 : s.ref,
    elementType: o,
    externalForwardedProps: ne,
    shouldForwardComponentProp: !0,
    additionalProps: s,
    getSlotProps: (Q) => M({
      ...Q,
      onClick: (ie) => {
        Q != null && Q.onClick && Q.onClick(ie);
      }
    }),
    className: Ce(s == null ? void 0 : s.className, K == null ? void 0 : K.backdrop),
    ownerState: ee
  });
  return !b && !I && (!W || j) ? null : /* @__PURE__ */ P(Ko, {
    ref: Y,
    container: d,
    disablePortal: x,
    children: /* @__PURE__ */ Pe(se, {
      ...de,
      children: [!S && o ? /* @__PURE__ */ P(X, {
        ...ae
      }) : null, /* @__PURE__ */ P($a, {
        disableEnforceFocus: m,
        disableAutoFocus: y,
        disableRestoreFocus: E,
        isEnabled: H,
        open: I,
        children: /* @__PURE__ */ C.cloneElement(u, oe)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (vl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: i.object,
  /**
   * A single child content element.
   */
  children: Yr.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: i.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Backdrop: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([Er, i.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: i.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: i.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: i.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: i.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: i.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: i.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: i.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
function qO(e) {
  return St("MuiPopover", e);
}
$t("MuiPopover", ["root", "paper"]);
function Up(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function Hp(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function qp(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function Pi(e) {
  return typeof e == "function" ? e() : e;
}
const YO = (e) => {
  const {
    classes: t
  } = e;
  return Mt({
    root: ["root"],
    paper: ["paper"]
  }, qO, t);
}, GO = Me(vl, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), KO = Me(ai, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), xy = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = kt({
    props: t,
    name: "MuiPopover"
  }), {
    action: o,
    anchorEl: s,
    anchorOrigin: a = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: l,
    anchorReference: c = "anchorEl",
    children: u,
    className: d,
    container: f,
    elevation: h = 8,
    marginThreshold: g = 16,
    open: y,
    PaperProps: m = {},
    // TODO: remove in v7
    slots: v = {},
    slotProps: x = {},
    transformOrigin: E = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: w,
    // TODO: remove in v7
    transitionDuration: S = "auto",
    TransitionProps: b = {},
    // TODO: remove in v7
    disableScrollLock: T = !1,
    ...R
  } = r, $ = C.useRef(), I = {
    ...r,
    anchorOrigin: a,
    anchorReference: c,
    elevation: h,
    marginThreshold: g,
    transformOrigin: E,
    TransitionComponent: w,
    transitionDuration: S,
    TransitionProps: b
  }, p = YO(I), O = C.useCallback(() => {
    if (c === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (l || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), l;
    const Q = Pi(s), ie = Q && Q.nodeType === 1 ? Q : dn($.current).body, F = ie.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const he = ie.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && he.top === 0 && he.left === 0 && he.right === 0 && he.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: F.top + Up(F, a.vertical),
      left: F.left + Hp(F, a.horizontal)
    };
  }, [s, a.horizontal, a.vertical, l, c]), k = C.useCallback((Q) => ({
    vertical: Up(Q, E.vertical),
    horizontal: Hp(Q, E.horizontal)
  }), [E.horizontal, E.vertical]), A = C.useCallback((Q) => {
    const ie = {
      width: Q.offsetWidth,
      height: Q.offsetHeight
    }, F = k(ie);
    if (c === "none")
      return {
        top: null,
        left: null,
        transformOrigin: qp(F)
      };
    const he = O();
    let fe = he.top - F.vertical, Se = he.left - F.horizontal;
    const Le = fe + ie.height, Ne = Se + ie.width, ke = dr(Pi(s)), Re = ke.innerHeight - g, De = ke.innerWidth - g;
    if (g !== null && fe < g) {
      const Oe = fe - g;
      fe -= Oe, F.vertical += Oe;
    } else if (g !== null && Le > Re) {
      const Oe = Le - Re;
      fe -= Oe, F.vertical += Oe;
    }
    if (process.env.NODE_ENV !== "production" && ie.height > Re && ie.height && Re && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${ie.height - Re}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), g !== null && Se < g) {
      const Oe = Se - g;
      Se -= Oe, F.horizontal += Oe;
    } else if (Ne > De) {
      const Oe = Ne - De;
      Se -= Oe, F.horizontal += Oe;
    }
    return {
      top: `${Math.round(fe)}px`,
      left: `${Math.round(Se)}px`,
      transformOrigin: qp(F)
    };
  }, [s, c, O, k, g]), [D, _] = C.useState(y), M = C.useCallback(() => {
    const Q = $.current;
    if (!Q)
      return;
    const ie = A(Q);
    ie.top !== null && Q.style.setProperty("top", ie.top), ie.left !== null && (Q.style.left = ie.left), Q.style.transformOrigin = ie.transformOrigin, _(!0);
  }, [A]);
  C.useEffect(() => (T && window.addEventListener("scroll", M), () => window.removeEventListener("scroll", M)), [s, T, M]);
  const z = () => {
    M();
  }, Y = () => {
    _(!1);
  };
  C.useEffect(() => {
    y && M();
  }), C.useImperativeHandle(o, () => y ? {
    updatePosition: () => {
      M();
    }
  } : null, [y, M]), C.useEffect(() => {
    if (!y)
      return;
    const Q = zu(() => {
      M();
    }), ie = dr(Pi(s));
    return ie.addEventListener("resize", Q), () => {
      Q.clear(), ie.removeEventListener("resize", Q);
    };
  }, [s, y, M]);
  let H = S;
  const j = {
    slots: {
      transition: w,
      ...v
    },
    slotProps: {
      transition: b,
      paper: m,
      ...x
    }
  }, [W, ee] = dt("transition", {
    elementType: Zi,
    externalForwardedProps: j,
    ownerState: I,
    getSlotProps: (Q) => ({
      ...Q,
      onEntering: (ie, F) => {
        var he;
        (he = Q.onEntering) == null || he.call(Q, ie, F), z();
      },
      onExited: (ie) => {
        var F;
        (F = Q.onExited) == null || F.call(Q, ie), Y();
      }
    }),
    additionalProps: {
      appear: !0,
      in: y
    }
  });
  S === "auto" && !W.muiSupportAuto && (H = void 0);
  const K = f || (s ? dn(Pi(s)).body : void 0), [oe, {
    slots: ne,
    slotProps: se,
    ...de
  }] = dt("root", {
    ref: n,
    elementType: GO,
    externalForwardedProps: {
      ...j,
      ...R
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: v.backdrop
      },
      slotProps: {
        backdrop: fd(typeof x.backdrop == "function" ? x.backdrop(I) : x.backdrop, {
          invisible: !0
        })
      },
      container: K,
      open: y
    },
    ownerState: I,
    className: Ce(p.root, d)
  }), [X, ae] = dt("paper", {
    ref: $,
    className: p.paper,
    elementType: KO,
    externalForwardedProps: j,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: h,
      style: D ? void 0 : {
        opacity: 0
      }
    },
    ownerState: I
  });
  return /* @__PURE__ */ P(oe, {
    ...de,
    ...!su(oe) && {
      slots: ne,
      slotProps: se,
      disableScrollLock: T
    },
    children: /* @__PURE__ */ P(W, {
      ...ee,
      timeout: H,
      children: /* @__PURE__ */ P(X, {
        ...ae,
        children: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (xy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: Pr,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: qr(i.oneOfType([Er, i.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = Pi(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: i.shape({
    horizontal: i.oneOfType([i.oneOf(["center", "left", "right"]), i.number]).isRequired,
    vertical: i.oneOfType([i.oneOf(["bottom", "center", "top"]), i.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: i.shape({
    left: i.number.isRequired,
    top: i.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: i.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: i.object,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([Er, i.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: i.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: Uu,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: i.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: i.shape({
    component: Vu
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: i.shape({
    horizontal: i.oneOfType([i.oneOf(["center", "left", "right"]), i.number]).isRequired,
    vertical: i.oneOfType([i.oneOf(["bottom", "center", "top"]), i.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: i.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: i.object
});
function XO() {
  const [e, t] = jr(null), n = !!e, r = an((s) => {
    const a = s.currentTarget;
    t(a);
  }, []), o = an(() => {
    var s;
    (s = window.getSelection()) != null && s.toString() || t(null);
  }, []);
  return {
    anchorEl: e,
    isOpen: n,
    openPopover: r,
    closePopover: o
  };
}
const wy = je(({ children: e, renderPopoverHandler: t, sx: n }) => {
  const { paperCommonStyles: r } = li(), { anchorEl: o, isOpen: s, openPopover: a, closePopover: l } = XO();
  return /* @__PURE__ */ Pe(ih, { children: [
    t({ anchorEl: o, isOpen: s, openPopover: a, closePopover: l }),
    /* @__PURE__ */ P(
      xy,
      {
        open: s,
        anchorEl: o,
        onClose: l,
        anchorOrigin: { vertical: "bottom", horizontal: "center" },
        transformOrigin: { vertical: "top", horizontal: "center" },
        slotProps: {
          paper: {
            elevation: 3,
            square: !0,
            sx: {
              ...r,
              border: 1,
              borderColor: "divider",
              ...n
            }
          }
        },
        children: /* @__PURE__ */ P(Jo, { in: s, children: /* @__PURE__ */ P("div", { children: e }) })
      }
    )
  ] });
});
wy.displayName = "Popover";
const QO = je(
  ({ icon: e = "solar:menu-dots-line-duotone", menuItems: t }) => /* @__PURE__ */ P(
    wy,
    {
      renderPopoverHandler: ({ isOpen: n, openPopover: r }) => /* @__PURE__ */ P(
        pr,
        {
          isCircle: !0,
          isGhost: !0,
          color: "auto",
          icon: e,
          iconWidth: 20,
          disabled: n,
          onClick: r
        }
      ),
      children: /* @__PURE__ */ P(Ra, { items: t, renderItem: (n) => /* @__PURE__ */ P(Li, { ...n, clickable: !0 }) })
    }
  )
);
QO.displayName = "ExhibitCardActionButton";
const Sy = qw({
  createStyledComponent: Me("div", {
    name: "MuiContainer",
    slot: "Root",
    overridesResolver: (e, t) => {
      const {
        ownerState: n
      } = e;
      return [t.root, t[`maxWidth${Te(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
    }
  }),
  useThemeProps: (e) => kt({
    props: e,
    name: "MuiContainer"
  })
});
process.env.NODE_ENV !== "production" && (Sy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: i.bool,
  /**
   * Set the max-width to match the min-width of the current breakpoint.
   * This is useful if you'd prefer to design for a fixed set of sizes
   * instead of trying to accommodate a fully fluid viewport.
   * It's fluid by default.
   * @default false
   */
  fixed: i.bool,
  /**
   * Determine the max-width of the container.
   * The container width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'lg'
   */
  maxWidth: i.oneOfType([i.oneOf(["xs", "sm", "md", "lg", "xl", !1]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
const JO = je(({ children: e, maxWidth: t = "lg", ...n }) => /* @__PURE__ */ P(
  Sy,
  {
    id: "VenomousUI-Container",
    disableGutters: !0,
    maxWidth: t === "fullwidth" ? !1 : t,
    ...n,
    children: e
  }
));
JO.displayName = "Container";
function ZO(e, t, n) {
  const r = t.getBoundingClientRect(), o = n && n.getBoundingClientRect(), s = dr(t);
  let a;
  if (t.fakeTransform)
    a = t.fakeTransform;
  else {
    const u = s.getComputedStyle(t);
    a = u.getPropertyValue("-webkit-transform") || u.getPropertyValue("transform");
  }
  let l = 0, c = 0;
  if (a && a !== "none" && typeof a == "string") {
    const u = a.split("(")[1].split(")")[0].split(",");
    l = parseInt(u[4], 10), c = parseInt(u[5], 10);
  }
  return e === "left" ? o ? `translateX(${o.right + l - r.left}px)` : `translateX(${s.innerWidth + l - r.left}px)` : e === "right" ? o ? `translateX(-${r.right - o.left - l}px)` : `translateX(-${r.left + r.width - l}px)` : e === "up" ? o ? `translateY(${o.bottom + c - r.top}px)` : `translateY(${s.innerHeight + c - r.top}px)` : o ? `translateY(-${r.top - o.top + r.height - c}px)` : `translateY(-${r.top + r.height - c}px)`;
}
function Ty(e) {
  return typeof e == "function" ? e() : e;
}
function Us(e, t, n) {
  const r = Ty(n), o = ZO(e, t, r);
  o && (t.style.webkitTransform = o, t.style.transform = o);
}
const Ey = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Ir(), o = {
    enter: r.transitions.easing.easeOut,
    exit: r.transitions.easing.sharp
  }, s = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: a,
    appear: l = !0,
    children: c,
    container: u,
    direction: d = "down",
    easing: f = o,
    in: h,
    onEnter: g,
    onEntered: y,
    onEntering: m,
    onExit: v,
    onExited: x,
    onExiting: E,
    style: w,
    timeout: S = s,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: b = Rn,
    ...T
  } = t, R = C.useRef(null), $ = tn(go(c), R, n), I = (Y) => (H) => {
    Y && (H === void 0 ? Y(R.current) : Y(R.current, H));
  }, p = I((Y, H) => {
    Us(d, Y, u), od(Y), g && g(Y, H);
  }), O = I((Y, H) => {
    const j = Uo({
      timeout: S,
      style: w,
      easing: f
    }, {
      mode: "enter"
    });
    Y.style.webkitTransition = r.transitions.create("-webkit-transform", {
      ...j
    }), Y.style.transition = r.transitions.create("transform", {
      ...j
    }), Y.style.webkitTransform = "none", Y.style.transform = "none", m && m(Y, H);
  }), k = I(y), A = I(E), D = I((Y) => {
    const H = Uo({
      timeout: S,
      style: w,
      easing: f
    }, {
      mode: "exit"
    });
    Y.style.webkitTransition = r.transitions.create("-webkit-transform", H), Y.style.transition = r.transitions.create("transform", H), Us(d, Y, u), v && v(Y);
  }), _ = I((Y) => {
    Y.style.webkitTransition = "", Y.style.transition = "", x && x(Y);
  }), M = (Y) => {
    a && a(R.current, Y);
  }, z = C.useCallback(() => {
    R.current && Us(d, R.current, u);
  }, [d, u]);
  return C.useEffect(() => {
    if (h || d === "down" || d === "right")
      return;
    const Y = zu(() => {
      R.current && Us(d, R.current, u);
    }), H = dr(R.current);
    return H.addEventListener("resize", Y), () => {
      Y.clear(), H.removeEventListener("resize", Y);
    };
  }, [d, h, u]), C.useEffect(() => {
    h || z();
  }, [h, z]), /* @__PURE__ */ P(b, {
    nodeRef: R,
    onEnter: p,
    onEntered: k,
    onEntering: O,
    onExit: D,
    onExited: _,
    onExiting: A,
    addEndListener: M,
    appear: l,
    in: h,
    timeout: S,
    ...T,
    children: (Y, {
      ownerState: H,
      ...j
    }) => /* @__PURE__ */ C.cloneElement(c, {
      ref: $,
      style: {
        visibility: Y === "exited" && !h ? "hidden" : void 0,
        ...w,
        ...c.props.style
      },
      ...j
    })
  });
});
process.env.NODE_ENV !== "production" && (Ey.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: Yr.isRequired,
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the container the Slide is transitioning from.
   */
  container: qr(i.oneOfType([Er, i.func]), (e) => {
    if (e.open) {
      const t = Ty(e.container);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `container` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `container` prop provided to the component is invalid.", "It should be an HTML element instance."].join(`
`));
    }
    return null;
  }),
  /**
   * Direction the child node will enter from.
   * @default 'down'
   */
  direction: i.oneOf(["down", "left", "right", "up"]),
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   * @default {
   *   enter: theme.transitions.easing.easeOut,
   *   exit: theme.transitions.easing.sharp,
   * }
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function eR(e) {
  return St("MuiDrawer", e);
}
$t("MuiDrawer", ["root", "docked", "paper", "anchorLeft", "anchorRight", "anchorTop", "anchorBottom", "paperAnchorLeft", "paperAnchorRight", "paperAnchorTop", "paperAnchorBottom", "paperAnchorDockedLeft", "paperAnchorDockedRight", "paperAnchorDockedTop", "paperAnchorDockedBottom", "modal"]);
const Cy = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, (n.variant === "permanent" || n.variant === "persistent") && t.docked, t.modal];
}, tR = (e) => {
  const {
    classes: t,
    anchor: n,
    variant: r
  } = e, o = {
    root: ["root", `anchor${Te(n)}`],
    docked: [(r === "permanent" || r === "persistent") && "docked"],
    modal: ["modal"],
    paper: ["paper", `paperAnchor${Te(n)}`, r !== "temporary" && `paperAnchorDocked${Te(n)}`]
  };
  return Mt(o, eR, t);
}, nR = Me(vl, {
  name: "MuiDrawer",
  slot: "Root",
  overridesResolver: Cy
})(nt(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.drawer
}))), rR = Me("div", {
  shouldForwardProp: hr,
  name: "MuiDrawer",
  slot: "Docked",
  skipVariantsResolver: !1,
  overridesResolver: Cy
})({
  flex: "0 0 auto"
}), oR = Me(ai, {
  name: "MuiDrawer",
  slot: "Paper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.paper, t[`paperAnchor${Te(n.anchor)}`], n.variant !== "temporary" && t[`paperAnchorDocked${Te(n.anchor)}`]];
  }
})(nt(({
  theme: e
}) => ({
  overflowY: "auto",
  display: "flex",
  flexDirection: "column",
  height: "100%",
  flex: "1 0 auto",
  zIndex: (e.vars || e).zIndex.drawer,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  // temporary style
  position: "fixed",
  top: 0,
  // We disable the focus ring for mouse, touch and keyboard users.
  // At some point, it would be better to keep it for keyboard users.
  // :focus-ring CSS pseudo-class will help.
  outline: 0,
  variants: [{
    props: {
      anchor: "left"
    },
    style: {
      left: 0
    }
  }, {
    props: {
      anchor: "top"
    },
    style: {
      top: 0,
      left: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    }
  }, {
    props: {
      anchor: "right"
    },
    style: {
      right: 0
    }
  }, {
    props: {
      anchor: "bottom"
    },
    style: {
      top: "auto",
      left: 0,
      bottom: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "left" && t.variant !== "temporary",
    style: {
      borderRight: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "top" && t.variant !== "temporary",
    style: {
      borderBottom: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "right" && t.variant !== "temporary",
    style: {
      borderLeft: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "bottom" && t.variant !== "temporary",
    style: {
      borderTop: `1px solid ${(e.vars || e).palette.divider}`
    }
  }]
}))), Oy = {
  left: "right",
  right: "left",
  top: "down",
  bottom: "up"
};
function iR(e) {
  return ["left", "right"].includes(e);
}
function sR({
  direction: e
}, t) {
  return e === "rtl" && iR(t) ? Oy[t] : t;
}
const Ry = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = kt({
    props: t,
    name: "MuiDrawer"
  }), o = Ir(), s = il(), a = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    anchor: l = "left",
    BackdropProps: c,
    children: u,
    className: d,
    elevation: f = 16,
    hideBackdrop: h = !1,
    ModalProps: {
      BackdropProps: g,
      ...y
    } = {},
    onClose: m,
    open: v = !1,
    PaperProps: x = {},
    SlideProps: E,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: w,
    transitionDuration: S = a,
    variant: b = "temporary",
    slots: T = {},
    slotProps: R = {},
    ...$
  } = r, I = C.useRef(!1);
  C.useEffect(() => {
    I.current = !0;
  }, []);
  const p = sR({
    direction: s ? "rtl" : "ltr"
  }, l), k = {
    ...r,
    anchor: l,
    elevation: f,
    open: v,
    variant: b,
    ...$
  }, A = tR(k), D = {
    slots: {
      transition: w,
      ...T
    },
    slotProps: {
      paper: x,
      transition: E,
      ...R,
      backdrop: fd(R.backdrop || {
        ...c,
        ...g
      }, {
        transitionDuration: S
      })
    }
  }, [_, M] = dt("root", {
    ref: n,
    elementType: nR,
    className: Ce(A.root, A.modal, d),
    shouldForwardComponentProp: !0,
    ownerState: k,
    externalForwardedProps: {
      ...D,
      ...$,
      ...y
    },
    additionalProps: {
      open: v,
      onClose: m,
      hideBackdrop: h,
      slots: {
        backdrop: D.slots.backdrop
      },
      slotProps: {
        backdrop: D.slotProps.backdrop
      }
    }
  }), [z, Y] = dt("paper", {
    elementType: oR,
    shouldForwardComponentProp: !0,
    className: Ce(A.paper, x.className),
    ownerState: k,
    externalForwardedProps: D,
    additionalProps: {
      elevation: b === "temporary" ? f : 0,
      square: !0
    }
  }), [H, j] = dt("docked", {
    elementType: rR,
    ref: n,
    className: Ce(A.root, A.docked, d),
    ownerState: k,
    externalForwardedProps: D,
    additionalProps: $
    // pass `other` here because `DockedSlot` is also a root slot for some variants
  }), [W, ee] = dt("transition", {
    elementType: Ey,
    ownerState: k,
    externalForwardedProps: D,
    additionalProps: {
      in: v,
      direction: Oy[p],
      timeout: S,
      appear: I.current
    }
  }), K = /* @__PURE__ */ P(z, {
    ...Y,
    children: u
  });
  if (b === "permanent")
    return /* @__PURE__ */ P(H, {
      ...j,
      children: K
    });
  const oe = /* @__PURE__ */ P(W, {
    ...ee,
    children: K
  });
  return b === "persistent" ? /* @__PURE__ */ P(H, {
    ...j,
    children: oe
  }) : /* @__PURE__ */ P(_, {
    ...M,
    children: oe
  });
});
process.env.NODE_ENV !== "production" && (Ry.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Side from which the drawer will appear.
   * @default 'left'
   */
  anchor: i.oneOf(["bottom", "left", "right", "top"]),
  /**
   * @ignore
   */
  BackdropProps: i.object,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The elevation of the drawer.
   * @default 16
   */
  elevation: Uu,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: i.bool,
  /**
   * Props applied to the [`Modal`](https://mui.com/material-ui/api/modal/) element.
   * @default {}
   */
  ModalProps: i.object,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: i.bool,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @deprecated use the `slotProps.paper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PaperProps: i.object,
  /**
   * Props applied to the [`Slide`](https://mui.com/material-ui/api/slide/) element.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SlideProps: i.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    docked: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    docked: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * The variant to use.
   * @default 'temporary'
   */
  variant: i.oneOf(["permanent", "persistent", "temporary"])
});
const $y = je(
  ({ children: e, isOpen: t, closeDrawer: n, width: r, position: o = "right" }) => {
    const { paperCommonStyles: s } = li();
    return /* @__PURE__ */ P(
      Ry,
      {
        id: "VenomousUI-Drawer",
        open: t,
        onClose: n,
        anchor: o,
        keepMounted: !0,
        slotProps: {
          paper: {
            sx: {
              ...s,
              ...aR(o),
              width: r,
              py: "8px",
              px: "16px"
            }
          }
        },
        children: /* @__PURE__ */ P("div", { style: { width: "100%" }, children: e })
      }
    );
  }
);
$y.displayName = "Drawer";
function aR(e) {
  switch (e) {
    case "right":
      return { borderTopRightRadius: "0px !important", borderBottomRightRadius: "0px !important" };
    case "top":
      return { borderTopLeftRadius: "0px !important", borderTopRightRadius: "0px !important" };
    case "bottom":
      return {
        borderBottomLeftRadius: "0px !important",
        borderBottomRightRadius: "0px !important"
      };
    case "left":
    default:
      return { borderTopLeftRadius: "0px !important", borderBottomLeftRadius: "0px !important" };
  }
}
function lR() {
  const [e, t] = jr(!1), n = an(() => {
    t(!0);
  }, []), r = an(() => {
    t(!1);
  }, []), o = an(() => {
    t((s) => !s);
  }, []);
  return {
    isOpen: e,
    setIsOpen: t,
    openDrawer: n,
    closeDrawer: r,
    toggleDrawer: o
  };
}
const ky = je(({ height: e = 50, title: t, closeDrawer: n }) => {
  const { paperCommonStyles: r } = li();
  return /* @__PURE__ */ Pe(
    Kt,
    {
      id: "VenomousUI-DrawerHeader",
      row: !0,
      sx: {
        ...r,
        borderRadius: 0,
        height: e,
        width: "100%",
        position: "sticky",
        top: 0,
        left: 0,
        justifyContent: "space-between",
        transform: "translateY(-8px)"
      },
      children: [
        n && /* @__PURE__ */ P(
          pr,
          {
            isCircle: !0,
            isGhost: !0,
            icon: "solar:close-circle-line-duotone",
            iconWidth: 24,
            color: "auto",
            onClick: n,
            sx: { width: 24, mr: "8px", ml: "-8px" }
          }
        ),
        /* @__PURE__ */ P(On, { text: t, isTitle: !0, ellipsis: !0 })
      ]
    }
  );
});
ky.displayName = "DrawerHeader";
const $d = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && ($d.displayName = "FormControlContext");
function xl() {
  return C.useContext($d);
}
function cR(e) {
  return St("PrivateSwitchBase", e);
}
$t("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);
const uR = (e) => {
  const {
    classes: t,
    checked: n,
    disabled: r,
    edge: o
  } = e, s = {
    root: ["root", n && "checked", r && "disabled", o && `edge${Te(o)}`],
    input: ["input"]
  };
  return Mt(s, cR, t);
}, dR = Me(pd)({
  padding: 9,
  borderRadius: "50%",
  variants: [{
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "start" && t.size !== "small",
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "end" && t.size !== "small",
    style: {
      marginRight: -12
    }
  }]
}), fR = Me("input", {
  shouldForwardProp: hr
})({
  cursor: "inherit",
  position: "absolute",
  opacity: 0,
  width: "100%",
  height: "100%",
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
}), wl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    autoFocus: r,
    checked: o,
    checkedIcon: s,
    defaultChecked: a,
    disabled: l,
    disableFocusRipple: c = !1,
    edge: u = !1,
    icon: d,
    id: f,
    inputProps: h,
    inputRef: g,
    name: y,
    onBlur: m,
    onChange: v,
    onFocus: x,
    readOnly: E,
    required: w = !1,
    tabIndex: S,
    type: b,
    value: T,
    slots: R = {},
    slotProps: $ = {},
    ...I
  } = t, [p, O] = zh({
    controlled: o,
    default: !!a,
    name: "SwitchBase",
    state: "checked"
  }), k = xl(), A = (ne) => {
    x && x(ne), k && k.onFocus && k.onFocus(ne);
  }, D = (ne) => {
    m && m(ne), k && k.onBlur && k.onBlur(ne);
  }, _ = (ne) => {
    if (ne.nativeEvent.defaultPrevented)
      return;
    const se = ne.target.checked;
    O(se), v && v(ne, se);
  };
  let M = l;
  k && typeof M > "u" && (M = k.disabled);
  const z = b === "checkbox" || b === "radio", Y = {
    ...t,
    checked: p,
    disabled: M,
    disableFocusRipple: c,
    edge: u
  }, H = uR(Y), j = {
    slots: R,
    slotProps: {
      input: h,
      ...$
    }
  }, [W, ee] = dt("root", {
    ref: n,
    elementType: dR,
    className: H.root,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...j,
      component: "span",
      ...I
    },
    getSlotProps: (ne) => ({
      ...ne,
      onFocus: (se) => {
        var de;
        (de = ne.onFocus) == null || de.call(ne, se), A(se);
      },
      onBlur: (se) => {
        var de;
        (de = ne.onBlur) == null || de.call(ne, se), D(se);
      }
    }),
    ownerState: Y,
    additionalProps: {
      centerRipple: !0,
      focusRipple: !c,
      disabled: M,
      role: void 0,
      tabIndex: null
    }
  }), [K, oe] = dt("input", {
    ref: g,
    elementType: fR,
    className: H.input,
    externalForwardedProps: j,
    getSlotProps: (ne) => ({
      ...ne,
      onChange: (se) => {
        var de;
        (de = ne.onChange) == null || de.call(ne, se), _(se);
      }
    }),
    ownerState: Y,
    additionalProps: {
      autoFocus: r,
      checked: o,
      defaultChecked: a,
      disabled: M,
      id: z ? f : void 0,
      name: y,
      readOnly: E,
      required: w,
      tabIndex: S,
      type: b,
      ...b === "checkbox" && T === void 0 ? {} : {
        value: T
      }
    }
  });
  return /* @__PURE__ */ Pe(W, {
    ...ee,
    children: [/* @__PURE__ */ P(K, {
      ...oe
    }), p ? s : d]
  });
});
process.env.NODE_ENV !== "production" && (wl.propTypes = {
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: i.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * @ignore
   */
  defaultChecked: i.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: i.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: i.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: i.node.isRequired,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Pr,
  /*
   * @ignore
   */
  name: i.string,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: i.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    input: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.object,
  /**
   * @ignore
   */
  tabIndex: i.oneOfType([i.number, i.string]),
  /**
   * The input component prop `type`.
   */
  type: i.string.isRequired,
  /**
   * The value of the component.
   */
  value: i.any
});
const pR = ys(/* @__PURE__ */ P("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank"), mR = ys(/* @__PURE__ */ P("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox"), hR = ys(/* @__PURE__ */ P("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");
function gR(e) {
  return St("MuiCheckbox", e);
}
const pc = $t("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium"]), yR = (e) => {
  const {
    classes: t,
    indeterminate: n,
    color: r,
    size: o
  } = e, s = {
    root: ["root", n && "indeterminate", `color${Te(r)}`, `size${Te(o)}`]
  }, a = Mt(s, gR, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...a
  };
}, bR = Me(wl, {
  shouldForwardProp: (e) => hr(e) || e === "classes",
  name: "MuiCheckbox",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.indeterminate && t.indeterminate, t[`size${Te(n.size)}`], n.color !== "default" && t[`color${Te(n.color)}`]];
  }
})(nt(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  variants: [{
    props: {
      color: "default",
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(hn()).map(([t]) => ({
    props: {
      color: t,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(hn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${pc.checked}, &.${pc.indeterminate}`]: {
        color: (e.vars || e).palette[t].main
      },
      [`&.${pc.disabled}`]: {
        color: (e.vars || e).palette.action.disabled
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
}))), vR = /* @__PURE__ */ P(mR, {}), xR = /* @__PURE__ */ P(pR, {}), wR = /* @__PURE__ */ P(hR, {}), Py = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = kt({
    props: t,
    name: "MuiCheckbox"
  }), {
    checkedIcon: o = vR,
    color: s = "primary",
    icon: a = xR,
    indeterminate: l = !1,
    indeterminateIcon: c = wR,
    inputProps: u,
    size: d = "medium",
    disableRipple: f = !1,
    className: h,
    slots: g = {},
    slotProps: y = {},
    ...m
  } = r, v = l ? c : a, x = l ? c : o, E = {
    ...r,
    disableRipple: f,
    color: s,
    indeterminate: l,
    size: d
  }, w = yR(E), S = y.input ?? u, [b, T] = dt("root", {
    ref: n,
    elementType: bR,
    className: Ce(w.root, h),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: g,
      slotProps: y,
      ...m
    },
    ownerState: E,
    additionalProps: {
      type: "checkbox",
      icon: /* @__PURE__ */ C.cloneElement(v, {
        fontSize: v.props.fontSize ?? d
      }),
      checkedIcon: /* @__PURE__ */ C.cloneElement(x, {
        fontSize: x.props.fontSize ?? d
      }),
      disableRipple: f,
      slots: g,
      slotProps: {
        input: fd(typeof S == "function" ? S(E) : S, {
          "data-indeterminate": l
        })
      }
    }
  });
  return /* @__PURE__ */ P(b, {
    ...T,
    classes: w
  });
});
process.env.NODE_ENV !== "production" && (Py.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   * @default <CheckBoxIcon />
   */
  checkedIcon: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: i.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <CheckBoxOutlineBlankIcon />
   */
  icon: i.node,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the `input`.
   * @default false
   */
  indeterminate: i.bool,
  /**
   * The icon to display when the component is indeterminate.
   * @default <IndeterminateCheckBoxIcon />
   */
  indeterminateIcon: i.node,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: i.object,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense checkbox styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    input: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: i.any
});
const Zo = je(
  ({ label: e, elementId: t, tooltip: n, isDisabled: r, isError: o, isRequired: s }) => {
    const { textCommonStyles: a } = fl({
      isTitle: !1,
      isLabel: !0,
      textColor: r ? "disabled" : o ? "error" : "auto"
    });
    return /* @__PURE__ */ Pe(
      Cr,
      {
        id: "VenomousUI-Label",
        component: "label",
        htmlFor: t,
        sx: {
          ...a,
          cursor: r ? "not-allowed" : "pointer",
          display: "flex",
          alignItems: "center"
        },
        children: [
          /* @__PURE__ */ P(
            Cr,
            {
              component: "i",
              sx: {
                width: "14px",
                marginLeft: "-14px",
                fontSize: "1.5rem",
                transform: "translateY(0.25rem)",
                opacity: s ? 1 : 0,
                color: "error.main"
              },
              children: "*"
            }
          ),
          e,
          n && /* @__PURE__ */ P(dl, { title: n, arrow: !0, placement: "top", children: /* @__PURE__ */ P(
            Or,
            {
              icon: "solar:info-circle-bold",
              width: 16,
              color: o ? "error" : "primary",
              ml: "4px"
            }
          ) })
        ]
      }
    );
  }
);
Zo.displayName = "Label";
const Sl = je(
  ({ startLabel: e, endLabel: t, labelsDirection: n = "row", renderElement: r, isDisabled: o, isError: s }) => {
    const a = sh();
    return /* @__PURE__ */ Pe(Kt, { id: "VenomousUI-Labels", gap: 0, row: n === "row", children: [
      e && /* @__PURE__ */ P(Zo, { label: e, elementId: a, isDisabled: o, isError: s }),
      r(a),
      t && /* @__PURE__ */ P(Zo, { label: t, elementId: a, isDisabled: o, isError: s })
    ] });
  }
);
Sl.displayName = "Labels";
const Iy = je(
  ({ value: e, onChange: t, isDisabled: n, isError: r, label: o, labelDirection: s = "end" }) => {
    const a = an(
      (l) => /* @__PURE__ */ P(
        Py,
        {
          id: l,
          checked: e,
          onChange: (c) => t(c.target.checked),
          disabled: n,
          icon: /* @__PURE__ */ P(SR, { isDisabled: n, isError: r }),
          checkedIcon: /* @__PURE__ */ P(TR, { isDisabled: n, isError: r }),
          sx: {
            "& .MuiSwitch-track": { transition: "background-color 0s" },
            "& svg.MuiSvgIcon-root": { transform: "translate(-1px, 0px)" }
          }
        }
      ),
      [e, t, n, r]
    );
    return o ? /* @__PURE__ */ P(
      Sl,
      {
        labelsDirection: "row",
        startLabel: s === "start" ? o : "",
        endLabel: s === "end" ? o : "",
        isDisabled: n,
        isError: r,
        renderElement: a
      }
    ) : a();
  }
);
Iy.displayName = "Checkbox";
const SR = je(
  ({ isDisabled: e, isError: t }) => /* @__PURE__ */ P(
    Xo,
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "32",
      height: "32",
      viewBox: "0 0 20 20",
      sx: {
        color: (n) => t ? n.palette.error.main : e ? n.palette.action.disabled : "auto"
      },
      children: /* @__PURE__ */ P(
        "path",
        {
          fill: "currentColor",
          d: "M3 6a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3zm3-2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"
        }
      )
    }
  )
), TR = je(
  ({ isDisabled: e, isError: t }) => /* @__PURE__ */ P(
    Xo,
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "32",
      height: "32",
      viewBox: "0 0 24 24",
      sx: {
        color: (n) => t ? n.palette.error.main : e ? n.palette.action.disabled : "auto"
      },
      children: /* @__PURE__ */ P(
        "path",
        {
          fill: "currentColor",
          d: "M6.25 3A3.25 3.25 0 0 0 3 6.25v11.5A3.25 3.25 0 0 0 6.25 21h11.5A3.25 3.25 0 0 0 21 17.75V6.25A3.25 3.25 0 0 0 17.75 3zm11.03 6.28l-6.754 6.747a.75.75 0 0 1-1.06 0L6.72 13.28a.75.75 0 0 1 1.06-1.06l2.217 2.216l6.223-6.217a.75.75 0 1 1 1.06 1.062"
        }
      )
    }
  )
);
var Yp;
const ER = Me("fieldset", {
  shouldForwardProp: hr
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), CR = Me("legend", {
  shouldForwardProp: hr
})(nt(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function Ny(e) {
  const {
    children: t,
    classes: n,
    className: r,
    label: o,
    notched: s,
    ...a
  } = e, l = o != null && o !== "", c = {
    ...e,
    notched: s,
    withLabel: l
  };
  return /* @__PURE__ */ P(ER, {
    "aria-hidden": !0,
    className: r,
    ownerState: c,
    ...a,
    children: /* @__PURE__ */ P(CR, {
      ownerState: c,
      children: l ? /* @__PURE__ */ P("span", {
        children: o
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        Yp || (Yp = /* @__PURE__ */ P("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (Ny.propTypes = {
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The label.
   */
  label: i.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: i.bool.isRequired,
  /**
   * @ignore
   */
  style: i.object
});
function Ay({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((r, o) => (r[o] = e[o], n && typeof e[o] > "u" && (r[o] = n[o]), r), {});
}
function Hs(e) {
  return parseInt(e, 10) || 0;
}
const OR = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function RR(e) {
  for (const t in e)
    return !1;
  return !0;
}
function Gp(e) {
  return RR(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const My = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    onChange: r,
    maxRows: o,
    minRows: s = 1,
    style: a,
    value: l,
    ...c
  } = t, {
    current: u
  } = C.useRef(l != null), d = C.useRef(null), f = tn(n, d), h = C.useRef(null), g = C.useRef(null), y = C.useCallback(() => {
    const w = d.current, S = g.current;
    if (!w || !S)
      return;
    const T = dr(w).getComputedStyle(w);
    if (T.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    S.style.width = T.width, S.value = w.value || t.placeholder || "x", S.value.slice(-1) === `
` && (S.value += " ");
    const R = T.boxSizing, $ = Hs(T.paddingBottom) + Hs(T.paddingTop), I = Hs(T.borderBottomWidth) + Hs(T.borderTopWidth), p = S.scrollHeight;
    S.value = "x";
    const O = S.scrollHeight;
    let k = p;
    s && (k = Math.max(Number(s) * O, k)), o && (k = Math.min(Number(o) * O, k)), k = Math.max(k, O);
    const A = k + (R === "border-box" ? $ + I : 0), D = Math.abs(k - p) <= 1;
    return {
      outerHeightStyle: A,
      overflowing: D
    };
  }, [o, s, t.placeholder]), m = sr(() => {
    const w = d.current, S = y();
    if (!w || !S || Gp(S))
      return !1;
    const b = S.outerHeightStyle;
    return h.current != null && h.current !== b;
  }), v = C.useCallback(() => {
    const w = d.current, S = y();
    if (!w || !S || Gp(S))
      return;
    const b = S.outerHeightStyle;
    h.current !== b && (h.current = b, w.style.height = `${b}px`), w.style.overflow = S.overflowing ? "hidden" : "";
  }, [y]), x = C.useRef(-1);
  ur(() => {
    const w = zu(v), S = d == null ? void 0 : d.current;
    if (!S)
      return;
    const b = dr(S);
    b.addEventListener("resize", w);
    let T;
    return typeof ResizeObserver < "u" && (T = new ResizeObserver(() => {
      m() && (T.unobserve(S), cancelAnimationFrame(x.current), v(), x.current = requestAnimationFrame(() => {
        T.observe(S);
      }));
    }), T.observe(S)), () => {
      w.clear(), cancelAnimationFrame(x.current), b.removeEventListener("resize", w), T && T.disconnect();
    };
  }, [y, v, m]), ur(() => {
    v();
  });
  const E = (w) => {
    u || v(), r && r(w);
  };
  return /* @__PURE__ */ Pe(C.Fragment, {
    children: [/* @__PURE__ */ P("textarea", {
      value: l,
      onChange: E,
      ref: f,
      rows: s,
      style: a,
      ...c
    }), /* @__PURE__ */ P("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: g,
      tabIndex: -1,
      style: {
        ...OR.shadow,
        ...a,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (My.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: i.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  onChange: i.func,
  /**
   * @ignore
   */
  placeholder: i.string,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * @ignore
   */
  value: i.oneOfType([i.arrayOf(i.string), i.number, i.string])
});
function Kp(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function $R(e, t = !1) {
  return e && (Kp(e.value) && e.value !== "" || t && Kp(e.defaultValue) && e.defaultValue !== "");
}
function kR(e) {
  return St("MuiInputBase", e);
}
const ka = $t("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var Xp;
const _y = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${Te(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, Dy = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, PR = (e) => {
  const {
    classes: t,
    color: n,
    disabled: r,
    error: o,
    endAdornment: s,
    focused: a,
    formControl: l,
    fullWidth: c,
    hiddenLabel: u,
    multiline: d,
    readOnly: f,
    size: h,
    startAdornment: g,
    type: y
  } = e, m = {
    root: ["root", `color${Te(n)}`, r && "disabled", o && "error", c && "fullWidth", a && "focused", l && "formControl", h && h !== "medium" && `size${Te(h)}`, d && "multiline", g && "adornedStart", s && "adornedEnd", u && "hiddenLabel", f && "readOnly"],
    input: ["input", r && "disabled", y === "search" && "inputTypeSearch", d && "inputMultiline", h === "small" && "inputSizeSmall", u && "inputHiddenLabel", g && "inputAdornedStart", s && "inputAdornedEnd", f && "readOnly"]
  };
  return Mt(m, kR, t);
}, By = Me("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: _y
})(nt(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${ka.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), Fy = Me("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: Dy
})(nt(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, r = {
    opacity: "0 !important"
  }, o = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${ka.formControl} &`]: {
      "&::-webkit-input-placeholder": r,
      "&::-moz-placeholder": r,
      // Firefox 19+
      "&::-ms-input-placeholder": r,
      // Edge
      "&:focus::-webkit-input-placeholder": o,
      "&:focus::-moz-placeholder": o,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": o
      // Edge
    },
    [`&.${ka.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: s
      }) => !s.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), Qp = td({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), jy = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = kt({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": o,
    autoComplete: s,
    autoFocus: a,
    className: l,
    color: c,
    components: u = {},
    componentsProps: d = {},
    defaultValue: f,
    disabled: h,
    disableInjectingGlobalStyles: g,
    endAdornment: y,
    error: m,
    fullWidth: v = !1,
    id: x,
    inputComponent: E = "input",
    inputProps: w = {},
    inputRef: S,
    margin: b,
    maxRows: T,
    minRows: R,
    multiline: $ = !1,
    name: I,
    onBlur: p,
    onChange: O,
    onClick: k,
    onFocus: A,
    onKeyDown: D,
    onKeyUp: _,
    placeholder: M,
    readOnly: z,
    renderSuffix: Y,
    rows: H,
    size: j,
    slotProps: W = {},
    slots: ee = {},
    startAdornment: K,
    type: oe = "text",
    value: ne,
    ...se
  } = r, de = w.value != null ? w.value : ne, {
    current: X
  } = C.useRef(de != null), ae = C.useRef(), Q = C.useCallback((re) => {
    process.env.NODE_ENV !== "production" && re && re.nodeName !== "INPUT" && !re.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), ie = tn(ae, S, w.ref, Q), [F, he] = C.useState(!1), fe = xl();
  process.env.NODE_ENV !== "production" && C.useEffect(() => {
    if (fe)
      return fe.registerEffect();
  }, [fe]);
  const Se = Ay({
    props: r,
    muiFormControl: fe,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  Se.focused = fe ? fe.focused : F, C.useEffect(() => {
    !fe && h && F && (he(!1), p && p());
  }, [fe, h, F, p]);
  const Le = fe && fe.onFilled, Ne = fe && fe.onEmpty, ke = C.useCallback((re) => {
    $R(re) ? Le && Le() : Ne && Ne();
  }, [Le, Ne]);
  ur(() => {
    X && ke({
      value: de
    });
  }, [de, ke, X]);
  const Re = (re) => {
    A && A(re), w.onFocus && w.onFocus(re), fe && fe.onFocus ? fe.onFocus(re) : he(!0);
  }, De = (re) => {
    p && p(re), w.onBlur && w.onBlur(re), fe && fe.onBlur ? fe.onBlur(re) : he(!1);
  }, Oe = (re, ...Z) => {
    if (!X) {
      const te = re.target || ae.current;
      if (te == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : Sr(1));
      ke({
        value: te.value
      });
    }
    w.onChange && w.onChange(re, ...Z), O && O(re, ...Z);
  };
  C.useEffect(() => {
    ke(ae.current);
  }, []);
  const N = (re) => {
    ae.current && re.currentTarget === re.target && ae.current.focus(), k && k(re);
  };
  let q = E, J = w;
  $ && q === "input" && (H ? (process.env.NODE_ENV !== "production" && (R || T) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), J = {
    type: void 0,
    minRows: H,
    maxRows: H,
    ...J
  }) : J = {
    type: void 0,
    maxRows: T,
    minRows: R,
    ...J
  }, q = My);
  const U = (re) => {
    ke(re.animationName === "mui-auto-fill-cancel" ? ae.current : {
      value: "x"
    });
  };
  C.useEffect(() => {
    fe && fe.setAdornedStart(!!K);
  }, [fe, K]);
  const B = {
    ...r,
    color: Se.color || "primary",
    disabled: Se.disabled,
    endAdornment: y,
    error: Se.error,
    focused: Se.focused,
    formControl: fe,
    fullWidth: v,
    hiddenLabel: Se.hiddenLabel,
    multiline: $,
    size: Se.size,
    startAdornment: K,
    type: oe
  }, V = PR(B), G = ee.root || u.Root || By, pe = W.root || d.root || {}, me = ee.input || u.Input || Fy;
  return J = {
    ...J,
    ...W.input ?? d.input
  }, /* @__PURE__ */ Pe(C.Fragment, {
    children: [!g && typeof Qp == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (Xp || (Xp = /* @__PURE__ */ P(Qp, {}))), /* @__PURE__ */ Pe(G, {
      ...pe,
      ref: n,
      onClick: N,
      ...se,
      ...!su(G) && {
        ownerState: {
          ...B,
          ...pe.ownerState
        }
      },
      className: Ce(V.root, pe.className, l, z && "MuiInputBase-readOnly"),
      children: [K, /* @__PURE__ */ P($d.Provider, {
        value: null,
        children: /* @__PURE__ */ P(me, {
          "aria-invalid": Se.error,
          "aria-describedby": o,
          autoComplete: s,
          autoFocus: a,
          defaultValue: f,
          disabled: Se.disabled,
          id: x,
          onAnimationStart: U,
          name: I,
          placeholder: M,
          readOnly: z,
          required: Se.required,
          rows: H,
          value: de,
          onKeyDown: D,
          onKeyUp: _,
          type: oe,
          ...J,
          ...!su(me) && {
            as: q,
            ownerState: {
              ...B,
              ...J.ownerState
            }
          },
          ref: ie,
          className: Ce(V.input, J.className, z && "MuiInputBase-readOnly"),
          onBlur: De,
          onChange: Oe,
          onFocus: Re
        })
      }), y, Y ? Y({
        ...Se,
        startAdornment: K
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (jy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": i.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: Vu,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Pr,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: i.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: i.func,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * @ignore
   */
  onKeyUp: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * @ignore
   */
  renderSuffix: i.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The size of the component.
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
function IR(e) {
  return St("MuiOutlinedInput", e);
}
const Kn = {
  ...ka,
  ...$t("MuiOutlinedInput", ["root", "notchedOutline", "input"])
}, NR = (e) => {
  const {
    classes: t
  } = e, r = Mt({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, IR, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...r
  };
}, AR = Me(By, {
  shouldForwardProp: (e) => hr(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: _y
})(nt(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${Kn.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${Kn.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${Kn.focused} .${Kn.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(hn()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${Kn.focused} .${Kn.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${Kn.error} .${Kn.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${Kn.disabled} .${Kn.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: r
      }) => n.multiline && r === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), MR = Me(Ny, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(nt(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), _R = Me(Fy, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: Dy
})(nt(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), kd = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var r;
  const o = kt({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: s = {},
    fullWidth: a = !1,
    inputComponent: l = "input",
    label: c,
    multiline: u = !1,
    notched: d,
    slots: f = {},
    type: h = "text",
    ...g
  } = o, y = NR(o), m = xl(), v = Ay({
    props: o,
    muiFormControl: m,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), x = {
    ...o,
    color: v.color || "primary",
    disabled: v.disabled,
    error: v.error,
    focused: v.focused,
    formControl: m,
    fullWidth: a,
    hiddenLabel: v.hiddenLabel,
    multiline: u,
    size: v.size,
    type: h
  }, E = f.root ?? s.Root ?? AR, w = f.input ?? s.Input ?? _R;
  return /* @__PURE__ */ P(jy, {
    slots: {
      root: E,
      input: w
    },
    renderSuffix: (S) => /* @__PURE__ */ P(MR, {
      ownerState: x,
      className: y.notchedOutline,
      label: c != null && c !== "" && v.required ? r || (r = /* @__PURE__ */ Pe(C.Fragment, {
        children: [c, " ", "*"]
      })) : c,
      notched: typeof d < "u" ? d : !!(S.startAdornment || S.filled || S.focused)
    }),
    fullWidth: a,
    inputComponent: l,
    multiline: u,
    ref: n,
    type: h,
    ...g,
    classes: {
      ...y,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (kd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Pr,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: i.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: i.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
kd.muiName = "Input";
function Ly({
  isDisabled: e,
  isError: t
}) {
  return {
    inputCommonStyle: cr(
      () => ({
        borderRadius: "8px",
        minWidth: "200px",
        "& input": {
          cursor: e ? "not-allowed" : "text",
          color: (r) => e ? "disabled" : t ? r.palette.error.main : "inherit"
        }
      }),
      [e, t]
    )
  };
}
const Tl = je(
  ({
    label: e = "",
    tooltip: t,
    fullWidth: n = !1,
    value: r,
    onChange: o,
    isRequired: s,
    isDisabled: a,
    isError: l,
    errorMessage: c = "",
    sx: u,
    ...d
  }) => {
    const f = sh(), { inputCommonStyle: h } = Ly({
      isDisabled: a,
      isError: l
    }), { textCommonStyles: g } = fl({
      isTitle: !1,
      isLabel: !0,
      textColor: a ? "disabled" : l ? "error" : "auto"
    });
    return /* @__PURE__ */ Pe(Kt, { gap: 0, width: n ? "100%" : "auto", children: [
      e && /* @__PURE__ */ P(
        Zo,
        {
          label: e,
          elementId: f,
          tooltip: t,
          isRequired: s,
          isDisabled: a,
          isError: l
        }
      ),
      /* @__PURE__ */ P(
        kd,
        {
          id: f,
          autoComplete: "off",
          fullWidth: n,
          size: "small",
          error: l,
          disabled: a,
          value: r,
          onChange: (y) => o(y.target.value),
          sx: { ...h, ...u },
          ...d
        }
      ),
      l && /* @__PURE__ */ P(
        On,
        {
          text: l ? c : "",
          isLabel: !0,
          sx: { ...g, minHeight: "24px" }
        }
      )
    ] });
  }
);
Tl.displayName = "Input";
const Vy = je(
  ({ isError: e, fullWidth: t, value: n = 0, onChange: r, sx: o, min: s = 0, max: a = 1e3, step: l = 1, ...c }) => {
    const u = an(
      (d) => {
        if (!d || isNaN(parseInt(d, 10))) {
          r(s);
          return;
        }
        const f = Math.abs(parseInt(d, 10));
        r(f);
      },
      [s, r]
    );
    return /* @__PURE__ */ P(
      Tl,
      {
        type: "number",
        fullWidth: t,
        isError: e,
        value: Math.abs(n).toString(),
        onChange: u,
        sx: {
          ...o
        },
        slotProps: {
          input: {
            type: "number",
            min: s,
            max: a,
            step: l
          }
        },
        ...c
      }
    );
  }
);
Vy.displayName = "Number";
function po(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((r) => n.searchParams.append("args[]", r)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
const El = "$$material";
function Pa(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((r) => n.searchParams.append("args[]", r)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
function DR(e) {
  return e == null || Object.keys(e).length === 0;
}
function zy(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e;
  return /* @__PURE__ */ P(wh, {
    styles: typeof t == "function" ? (o) => t(DR(o) ? n : o) : t
  });
}
process.env.NODE_ENV !== "production" && (zy.propTypes = {
  defaultTheme: i.object,
  styles: i.oneOfType([i.array, i.string, i.object, i.func])
});
/**
 * @mui/styled-engine v7.0.2
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function Wy(e, t) {
  const n = ma(e, t);
  return process.env.NODE_ENV !== "production" ? (...r) => {
    const o = typeof e == "string" ? `"${e}"` : "component";
    return r.length === 0 ? console.error([`MUI: Seems like you called \`styled(${o})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : r.some((s) => s === void 0) && console.error(`MUI: the styled(${o})(...args) API requires all its args to be defined.`), n(...r);
  } : n;
}
function BR(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const Jp = [];
function Zp(e) {
  return Jp[0] = e, ni(Jp);
}
function _r(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function Uy(e) {
  if (/* @__PURE__ */ C.isValidElement(e) || En.isValidElementType(e) || !_r(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = Uy(e[n]);
  }), t;
}
function uo(e, t, n = {
  clone: !0
}) {
  const r = n.clone ? {
    ...e
  } : e;
  return _r(e) && _r(t) && Object.keys(t).forEach((o) => {
    /* @__PURE__ */ C.isValidElement(t[o]) || En.isValidElementType(t[o]) ? r[o] = t[o] : _r(t[o]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, o) && _r(e[o]) ? r[o] = uo(e[o], t[o], n) : n.clone ? r[o] = _r(t[o]) ? Uy(t[o]) : t[o] : r[o] = t[o];
  }), r;
}
const FR = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, r) => n.val - r.val), t.reduce((n, r) => ({
    ...n,
    [r.key]: r.val
  }), {});
};
function jR(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: r = 5,
    ...o
  } = e, s = FR(t), a = Object.keys(s);
  function l(h) {
    return `@media (min-width:${typeof t[h] == "number" ? t[h] : h}${n})`;
  }
  function c(h) {
    return `@media (max-width:${(typeof t[h] == "number" ? t[h] : h) - r / 100}${n})`;
  }
  function u(h, g) {
    const y = a.indexOf(g);
    return `@media (min-width:${typeof t[h] == "number" ? t[h] : h}${n}) and (max-width:${(y !== -1 && typeof t[a[y]] == "number" ? t[a[y]] : g) - r / 100}${n})`;
  }
  function d(h) {
    return a.indexOf(h) + 1 < a.length ? u(h, a[a.indexOf(h) + 1]) : l(h);
  }
  function f(h) {
    const g = a.indexOf(h);
    return g === 0 ? l(a[1]) : g === a.length - 1 ? c(a[g]) : u(h, a[a.indexOf(h) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: a,
    values: s,
    up: l,
    down: c,
    between: u,
    only: d,
    not: f,
    unit: n,
    ...o
  };
}
function LR(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((r) => r.startsWith("@container")).sort((r, o) => {
    var a, l;
    const s = /min-width:\s*([0-9.]+)/;
    return +(((a = r.match(s)) == null ? void 0 : a[1]) || 0) - +(((l = o.match(s)) == null ? void 0 : l[1]) || 0);
  });
  return n.length ? n.reduce((r, o) => {
    const s = t[o];
    return delete r[o], r[o] = s, r;
  }, {
    ...t
  }) : t;
}
function VR(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function zR(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : Pa(18, `(${t})`));
    return null;
  }
  const [, r, o] = n, s = Number.isNaN(+r) ? r || 0 : +r;
  return e.containerQueries(o).up(s);
}
function WR(e) {
  const t = (s, a) => s.replace("@media", a ? `@container ${a}` : "@container");
  function n(s, a) {
    s.up = (...l) => t(e.breakpoints.up(...l), a), s.down = (...l) => t(e.breakpoints.down(...l), a), s.between = (...l) => t(e.breakpoints.between(...l), a), s.only = (...l) => t(e.breakpoints.only(...l), a), s.not = (...l) => {
      const c = t(e.breakpoints.not(...l), a);
      return c.includes("not all and") ? c.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : c;
    };
  }
  const r = {}, o = (s) => (n(r, s), r);
  return n(o), {
    ...e,
    containerQueries: o
  };
}
const UR = {
  borderRadius: 4
}, Jr = process.env.NODE_ENV !== "production" ? i.oneOfType([i.number, i.string, i.object, i.array]) : {};
function zi(e, t) {
  return t ? uo(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const Cl = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, em = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${Cl[e]}px)`
}, HR = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : Cl[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function $r(e, t, n) {
  const r = e.theme || {};
  if (Array.isArray(t)) {
    const s = r.breakpoints || em;
    return t.reduce((a, l, c) => (a[s.up(s.keys[c])] = n(t[c]), a), {});
  }
  if (typeof t == "object") {
    const s = r.breakpoints || em;
    return Object.keys(t).reduce((a, l) => {
      if (VR(s.keys, l)) {
        const c = zR(r.containerQueries ? r : HR, l);
        c && (a[c] = n(t[l], l));
      } else if (Object.keys(s.values || Cl).includes(l)) {
        const c = s.up(l);
        a[c] = n(t[l], l);
      } else {
        const c = l;
        a[c] = t[c];
      }
      return a;
    }, {});
  }
  return n(t);
}
function qR(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((r, o) => {
    const s = e.up(o);
    return r[s] = {}, r;
  }, {})) || {};
}
function YR(e, t) {
  return e.reduce((n, r) => {
    const o = n[r];
    return (!o || Object.keys(o).length === 0) && delete n[r], n;
  }, t);
}
function Pd(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : Pa(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function Ol(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const r = `vars.${t}`.split(".").reduce((o, s) => o && o[s] ? o[s] : null, e);
    if (r != null)
      return r;
  }
  return t.split(".").reduce((r, o) => r && r[o] != null ? r[o] : null, e);
}
function Ia(e, t, n, r = n) {
  let o;
  return typeof e == "function" ? o = e(n) : Array.isArray(e) ? o = e[n] || r : o = Ol(e, n) || r, t && (o = t(o, r, e)), o;
}
function _t(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: r,
    transform: o
  } = e, s = (a) => {
    if (a[t] == null)
      return null;
    const l = a[t], c = a.theme, u = Ol(c, r) || {};
    return $r(a, l, (f) => {
      let h = Ia(u, o, f);
      return f === h && typeof f == "string" && (h = Ia(u, o, `${t}${f === "default" ? "" : Pd(f)}`, f)), n === !1 ? h : {
        [n]: h
      };
    });
  };
  return s.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: Jr
  } : {}, s.filterProps = [t], s;
}
function GR(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const KR = {
  m: "margin",
  p: "padding"
}, XR = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, tm = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, QR = GR((e) => {
  if (e.length > 2)
    if (tm[e])
      e = tm[e];
    else
      return [e];
  const [t, n] = e.split(""), r = KR[t], o = XR[n] || "";
  return Array.isArray(o) ? o.map((s) => r + s) : [r + o];
}), Rl = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], $l = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], JR = [...Rl, ...$l];
function ws(e, t, n, r) {
  const o = Ol(e, t, !0) ?? n;
  return typeof o == "number" || typeof o == "string" ? (s) => typeof s == "string" ? s : (process.env.NODE_ENV !== "production" && typeof s != "number" && console.error(`MUI: Expected ${r} argument to be a number or a string, got ${s}.`), typeof o == "string" ? o.startsWith("var(") && s === 0 ? 0 : o.startsWith("var(") && s === 1 ? o : `calc(${s} * ${o})` : o * s) : Array.isArray(o) ? (s) => {
    if (typeof s == "string")
      return s;
    const a = Math.abs(s);
    process.env.NODE_ENV !== "production" && (Number.isInteger(a) ? a > o.length - 1 && console.error([`MUI: The value provided (${a}) overflows.`, `The supported values are: ${JSON.stringify(o)}.`, `${a} > ${o.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const l = o[a];
    return s >= 0 ? l : typeof l == "number" ? -l : typeof l == "string" && l.startsWith("var(") ? `calc(-1 * ${l})` : `-${l}`;
  } : typeof o == "function" ? o : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${o}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function Id(e) {
  return ws(e, "spacing", 8, "spacing");
}
function Ss(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function ZR(e, t) {
  return (n) => e.reduce((r, o) => (r[o] = Ss(t, n), r), {});
}
function e$(e, t, n, r) {
  if (!t.includes(n))
    return null;
  const o = QR(n), s = ZR(o, r), a = e[n];
  return $r(e, a, s);
}
function Hy(e, t) {
  const n = Id(e.theme);
  return Object.keys(e).map((r) => e$(e, t, r, n)).reduce(zi, {});
}
function Ct(e) {
  return Hy(e, Rl);
}
Ct.propTypes = process.env.NODE_ENV !== "production" ? Rl.reduce((e, t) => (e[t] = Jr, e), {}) : {};
Ct.filterProps = Rl;
function Ot(e) {
  return Hy(e, $l);
}
Ot.propTypes = process.env.NODE_ENV !== "production" ? $l.reduce((e, t) => (e[t] = Jr, e), {}) : {};
Ot.filterProps = $l;
process.env.NODE_ENV !== "production" && JR.reduce((e, t) => (e[t] = Jr, e), {});
function qy(e = 8, t = Id({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...r) => (process.env.NODE_ENV !== "production" && (r.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${r.length}`)), (r.length === 0 ? [1] : r).map((s) => {
    const a = t(s);
    return typeof a == "number" ? `${a}px` : a;
  }).join(" "));
  return n.mui = !0, n;
}
function kl(...e) {
  const t = e.reduce((r, o) => (o.filterProps.forEach((s) => {
    r[s] = o;
  }), r), {}), n = (r) => Object.keys(r).reduce((o, s) => t[s] ? zi(o, t[s](r)) : o, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((r, o) => Object.assign(r, o.propTypes), {}) : {}, n.filterProps = e.reduce((r, o) => r.concat(o.filterProps), []), n;
}
function In(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function jn(e, t) {
  return _t({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const t$ = jn("border", In), n$ = jn("borderTop", In), r$ = jn("borderRight", In), o$ = jn("borderBottom", In), i$ = jn("borderLeft", In), s$ = jn("borderColor"), a$ = jn("borderTopColor"), l$ = jn("borderRightColor"), c$ = jn("borderBottomColor"), u$ = jn("borderLeftColor"), d$ = jn("outline", In), f$ = jn("outlineColor"), Pl = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = ws(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (r) => ({
      borderRadius: Ss(t, r)
    });
    return $r(e, e.borderRadius, n);
  }
  return null;
};
Pl.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: Jr
} : {};
Pl.filterProps = ["borderRadius"];
kl(t$, n$, r$, o$, i$, s$, a$, l$, c$, u$, Pl, d$, f$);
const Il = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = ws(e.theme, "spacing", 8, "gap"), n = (r) => ({
      gap: Ss(t, r)
    });
    return $r(e, e.gap, n);
  }
  return null;
};
Il.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: Jr
} : {};
Il.filterProps = ["gap"];
const Nl = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = ws(e.theme, "spacing", 8, "columnGap"), n = (r) => ({
      columnGap: Ss(t, r)
    });
    return $r(e, e.columnGap, n);
  }
  return null;
};
Nl.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: Jr
} : {};
Nl.filterProps = ["columnGap"];
const Al = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = ws(e.theme, "spacing", 8, "rowGap"), n = (r) => ({
      rowGap: Ss(t, r)
    });
    return $r(e, e.rowGap, n);
  }
  return null;
};
Al.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: Jr
} : {};
Al.filterProps = ["rowGap"];
const p$ = _t({
  prop: "gridColumn"
}), m$ = _t({
  prop: "gridRow"
}), h$ = _t({
  prop: "gridAutoFlow"
}), g$ = _t({
  prop: "gridAutoColumns"
}), y$ = _t({
  prop: "gridAutoRows"
}), b$ = _t({
  prop: "gridTemplateColumns"
}), v$ = _t({
  prop: "gridTemplateRows"
}), x$ = _t({
  prop: "gridTemplateAreas"
}), w$ = _t({
  prop: "gridArea"
});
kl(Il, Nl, Al, p$, m$, h$, g$, y$, b$, v$, x$, w$);
function Lo(e, t) {
  return t === "grey" ? t : e;
}
const S$ = _t({
  prop: "color",
  themeKey: "palette",
  transform: Lo
}), T$ = _t({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: Lo
}), E$ = _t({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: Lo
});
kl(S$, T$, E$);
function vn(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const C$ = _t({
  prop: "width",
  transform: vn
}), Nd = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var o, s, a, l, c;
      const r = ((a = (s = (o = e.theme) == null ? void 0 : o.breakpoints) == null ? void 0 : s.values) == null ? void 0 : a[n]) || Cl[n];
      return r ? ((c = (l = e.theme) == null ? void 0 : l.breakpoints) == null ? void 0 : c.unit) !== "px" ? {
        maxWidth: `${r}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: r
      } : {
        maxWidth: vn(n)
      };
    };
    return $r(e, e.maxWidth, t);
  }
  return null;
};
Nd.filterProps = ["maxWidth"];
const O$ = _t({
  prop: "minWidth",
  transform: vn
}), R$ = _t({
  prop: "height",
  transform: vn
}), $$ = _t({
  prop: "maxHeight",
  transform: vn
}), k$ = _t({
  prop: "minHeight",
  transform: vn
});
_t({
  prop: "size",
  cssProperty: "width",
  transform: vn
});
_t({
  prop: "size",
  cssProperty: "height",
  transform: vn
});
const P$ = _t({
  prop: "boxSizing"
});
kl(C$, Nd, O$, R$, $$, k$, P$);
const Ts = {
  // borders
  border: {
    themeKey: "borders",
    transform: In
  },
  borderTop: {
    themeKey: "borders",
    transform: In
  },
  borderRight: {
    themeKey: "borders",
    transform: In
  },
  borderBottom: {
    themeKey: "borders",
    transform: In
  },
  borderLeft: {
    themeKey: "borders",
    transform: In
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: In
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: Pl
  },
  // palette
  color: {
    themeKey: "palette",
    transform: Lo
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: Lo
  },
  backgroundColor: {
    themeKey: "palette",
    transform: Lo
  },
  // spacing
  p: {
    style: Ot
  },
  pt: {
    style: Ot
  },
  pr: {
    style: Ot
  },
  pb: {
    style: Ot
  },
  pl: {
    style: Ot
  },
  px: {
    style: Ot
  },
  py: {
    style: Ot
  },
  padding: {
    style: Ot
  },
  paddingTop: {
    style: Ot
  },
  paddingRight: {
    style: Ot
  },
  paddingBottom: {
    style: Ot
  },
  paddingLeft: {
    style: Ot
  },
  paddingX: {
    style: Ot
  },
  paddingY: {
    style: Ot
  },
  paddingInline: {
    style: Ot
  },
  paddingInlineStart: {
    style: Ot
  },
  paddingInlineEnd: {
    style: Ot
  },
  paddingBlock: {
    style: Ot
  },
  paddingBlockStart: {
    style: Ot
  },
  paddingBlockEnd: {
    style: Ot
  },
  m: {
    style: Ct
  },
  mt: {
    style: Ct
  },
  mr: {
    style: Ct
  },
  mb: {
    style: Ct
  },
  ml: {
    style: Ct
  },
  mx: {
    style: Ct
  },
  my: {
    style: Ct
  },
  margin: {
    style: Ct
  },
  marginTop: {
    style: Ct
  },
  marginRight: {
    style: Ct
  },
  marginBottom: {
    style: Ct
  },
  marginLeft: {
    style: Ct
  },
  marginX: {
    style: Ct
  },
  marginY: {
    style: Ct
  },
  marginInline: {
    style: Ct
  },
  marginInlineStart: {
    style: Ct
  },
  marginInlineEnd: {
    style: Ct
  },
  marginBlock: {
    style: Ct
  },
  marginBlockStart: {
    style: Ct
  },
  marginBlockEnd: {
    style: Ct
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: Il
  },
  rowGap: {
    style: Al
  },
  columnGap: {
    style: Nl
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: vn
  },
  maxWidth: {
    style: Nd
  },
  minWidth: {
    transform: vn
  },
  height: {
    transform: vn
  },
  maxHeight: {
    transform: vn
  },
  minHeight: {
    transform: vn
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function I$(...e) {
  const t = e.reduce((r, o) => r.concat(Object.keys(o)), []), n = new Set(t);
  return e.every((r) => n.size === Object.keys(r).length);
}
function N$(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function A$() {
  function e(n, r, o, s) {
    const a = {
      [n]: r,
      theme: o
    }, l = s[n];
    if (!l)
      return {
        [n]: r
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: d,
      style: f
    } = l;
    if (r == null)
      return null;
    if (u === "typography" && r === "inherit")
      return {
        [n]: r
      };
    const h = Ol(o, u) || {};
    return f ? f(a) : $r(a, r, (y) => {
      let m = Ia(h, d, y);
      return y === m && typeof y == "string" && (m = Ia(h, d, `${n}${y === "default" ? "" : Pd(y)}`, y)), c === !1 ? m : {
        [c]: m
      };
    });
  }
  function t(n) {
    const {
      sx: r,
      theme: o = {}
    } = n || {};
    if (!r)
      return null;
    const s = o.unstable_sxConfig ?? Ts;
    function a(l) {
      let c = l;
      if (typeof l == "function")
        c = l(o);
      else if (typeof l != "object")
        return l;
      if (!c)
        return null;
      const u = qR(o.breakpoints), d = Object.keys(u);
      let f = u;
      return Object.keys(c).forEach((h) => {
        const g = N$(c[h], o);
        if (g != null)
          if (typeof g == "object")
            if (s[h])
              f = zi(f, e(h, g, o, s));
            else {
              const y = $r({
                theme: o
              }, g, (m) => ({
                [h]: m
              }));
              I$(y, g) ? f[h] = t({
                sx: g,
                theme: o
              }) : f = zi(f, y);
            }
          else
            f = zi(f, e(h, g, o, s));
      }), LR(o, YR(d, f));
    }
    return Array.isArray(r) ? r.map(a) : a(r);
  }
  return t;
}
const mo = A$();
mo.filterProps = ["sx"];
function M$(e, t) {
  var r;
  const n = this;
  if (n.vars) {
    if (!((r = n.colorSchemes) != null && r[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let o = n.getColorSchemeSelector(e);
    return o === "&" ? t : ((o.includes("data-") || o.includes(".")) && (o = `*:where(${o.replace(/\s*&$/, "")}) &`), {
      [o]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function Ad(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: r = {},
    spacing: o,
    shape: s = {},
    ...a
  } = e, l = jR(n), c = qy(o);
  let u = uo({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...r
    },
    spacing: c,
    shape: {
      ...UR,
      ...s
    }
  }, a);
  return u = WR(u), u.applyStyles = M$, u = t.reduce((d, f) => uo(d, f), u), u.unstable_sxConfig = {
    ...Ts,
    ...a == null ? void 0 : a.unstable_sxConfig
  }, u.unstable_sx = function(f) {
    return mo({
      sx: f,
      theme: this
    });
  }, u;
}
function _$(e) {
  return Object.keys(e).length === 0;
}
function D$(e = null) {
  const t = C.useContext(ri);
  return !t || _$(t) ? e : t;
}
const B$ = Ad();
function Md(e = B$) {
  return D$(e);
}
function Yy({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const r = Md(n), o = typeof e == "function" ? e(t && r[t] || r) : e;
  return /* @__PURE__ */ P(zy, {
    styles: o
  });
}
process.env.NODE_ENV !== "production" && (Yy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: i.object,
  /**
   * @ignore
   */
  styles: i.oneOfType([i.array, i.func, i.number, i.object, i.string, i.bool]),
  /**
   * @ignore
   */
  themeId: i.string
});
const F$ = (e) => {
  var r;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((r = e == null ? void 0 : e.theme) == null ? void 0 : r.unstable_sxConfig) ?? Ts;
  return Object.keys(e).forEach((o) => {
    n[o] ? t.systemProps[o] = e[o] : t.otherProps[o] = e[o];
  }), t;
};
function j$(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: r,
    otherProps: o
  } = F$(n);
  let s;
  return Array.isArray(t) ? s = [r, ...t] : typeof t == "function" ? s = (...a) => {
    const l = t(...a);
    return _r(l) ? {
      ...r,
      ...l
    } : r;
  } : s = {
    ...r,
    ...t
  }, {
    ...o,
    sx: s
  };
}
function L$(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: r = "MuiBox-root",
    generateClassName: o
  } = e, s = Wy("div", {
    shouldForwardProp: (l) => l !== "theme" && l !== "sx" && l !== "as"
  })(mo);
  return /* @__PURE__ */ C.forwardRef(function(c, u) {
    const d = Md(n), {
      className: f,
      component: h = "div",
      ...g
    } = j$(c);
    return /* @__PURE__ */ P(s, {
      as: h,
      ref: u,
      className: Ce(f, o ? o(r) : r),
      theme: t && d[t] || d,
      ...g
    });
  });
}
function Gy(e, t = "") {
  return e.displayName || e.name || t;
}
function nm(e, t, n) {
  const r = Gy(t);
  return e.displayName || (r !== "" ? `${n}(${r})` : n);
}
function V$(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return Gy(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case En.ForwardRef:
          return nm(e, e.render, "ForwardRef");
        case En.Memo:
          return nm(e, e.type, "memo");
        default:
          return;
      }
  }
}
function Ky(e) {
  const {
    variants: t,
    ...n
  } = e, r = {
    variants: t,
    style: Zp(n),
    isProcessed: !0
  };
  return r.style === n || t && t.forEach((o) => {
    typeof o.style != "function" && (o.style = Zp(o.style));
  }), r;
}
const z$ = Ad();
function mc(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function W$(e) {
  return e ? (t, n) => n[e] : null;
}
function U$(e, t, n) {
  e.theme = G$(e.theme) ? n : e.theme[t] || e.theme;
}
function ca(e, t) {
  const n = typeof t == "function" ? t(e) : t;
  if (Array.isArray(n))
    return n.flatMap((r) => ca(e, r));
  if (Array.isArray(n == null ? void 0 : n.variants)) {
    let r;
    if (n.isProcessed)
      r = n.style;
    else {
      const {
        variants: o,
        ...s
      } = n;
      r = s;
    }
    return Xy(e, n.variants, [r]);
  }
  return n != null && n.isProcessed ? n.style : n;
}
function Xy(e, t, n = []) {
  var o;
  let r;
  e: for (let s = 0; s < t.length; s += 1) {
    const a = t[s];
    if (typeof a.props == "function") {
      if (r ?? (r = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !a.props(r))
        continue;
    } else
      for (const l in a.props)
        if (e[l] !== a.props[l] && ((o = e.ownerState) == null ? void 0 : o[l]) !== a.props[l])
          continue e;
    typeof a.style == "function" ? (r ?? (r = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(a.style(r))) : n.push(a.style);
  }
  return n;
}
function H$(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = z$,
    rootShouldForwardProp: r = mc,
    slotShouldForwardProp: o = mc
  } = e;
  function s(l) {
    U$(l, t, n);
  }
  return (l, c = {}) => {
    BR(l, (b) => b.filter((T) => T !== mo));
    const {
      name: u,
      slot: d,
      skipVariantsResolver: f,
      skipSx: h,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: g = W$(Qy(d)),
      ...y
    } = c, m = f !== void 0 ? f : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      d && d !== "Root" && d !== "root" || !1
    ), v = h || !1;
    let x = mc;
    d === "Root" || d === "root" ? x = r : d ? x = o : K$(l) && (x = void 0);
    const E = Wy(l, {
      shouldForwardProp: x,
      label: Y$(u, d),
      ...y
    }), w = (b) => {
      if (typeof b == "function" && b.__emotion_real !== b)
        return function(R) {
          return ca(R, b);
        };
      if (_r(b)) {
        const T = Ky(b);
        return T.variants ? function($) {
          return ca($, T);
        } : T.style;
      }
      return b;
    }, S = (...b) => {
      const T = [], R = b.map(w), $ = [];
      if (T.push(s), u && g && $.push(function(k) {
        var M, z;
        const D = (z = (M = k.theme.components) == null ? void 0 : M[u]) == null ? void 0 : z.styleOverrides;
        if (!D)
          return null;
        const _ = {};
        for (const Y in D)
          _[Y] = ca(k, D[Y]);
        return g(k, _);
      }), u && !m && $.push(function(k) {
        var _, M;
        const A = k.theme, D = (M = (_ = A == null ? void 0 : A.components) == null ? void 0 : _[u]) == null ? void 0 : M.variants;
        return D ? Xy(k, D) : null;
      }), v || $.push(mo), Array.isArray(R[0])) {
        const O = R.shift(), k = new Array(T.length).fill(""), A = new Array($.length).fill("");
        let D;
        D = [...k, ...O, ...A], D.raw = [...k, ...O.raw, ...A], T.unshift(D);
      }
      const I = [...T, ...R, ...$], p = E(...I);
      return l.muiName && (p.muiName = l.muiName), process.env.NODE_ENV !== "production" && (p.displayName = q$(u, d, l)), p;
    };
    return E.withConfig && (S.withConfig = E.withConfig), S;
  };
}
function q$(e, t, n) {
  return e ? `${e}${Pd(t || "")}` : `Styled(${V$(n)})`;
}
function Y$(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${Qy(t || "Root")}`), n;
}
function G$(e) {
  for (const t in e)
    return !1;
  return !0;
}
function K$(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function Qy(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
function au(e, t) {
  const n = {
    ...t
  };
  for (const r in e)
    if (Object.prototype.hasOwnProperty.call(e, r)) {
      const o = r;
      if (o === "components" || o === "slots")
        n[o] = {
          ...e[o],
          ...n[o]
        };
      else if (o === "componentsProps" || o === "slotProps") {
        const s = e[o], a = t[o];
        if (!a)
          n[o] = s || {};
        else if (!s)
          n[o] = a;
        else {
          n[o] = {
            ...a
          };
          for (const l in s)
            if (Object.prototype.hasOwnProperty.call(s, l)) {
              const c = l;
              n[o][c] = au(s[c], a[c]);
            }
        }
      } else n[o] === void 0 && (n[o] = e[o]);
    }
  return n;
}
function X$(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function _d(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), X$(e, t, n);
}
function Q$(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((r) => r + r)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((r, o) => o < 3 ? parseInt(r, 16) : Math.round(parseInt(r, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function Wr(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return Wr(Q$(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : Pa(9, e));
  let r = e.substring(t + 1, e.length - 1), o;
  if (n === "color") {
    if (r = r.split(" "), o = r.shift(), r.length === 4 && r[3].charAt(0) === "/" && (r[3] = r[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(o))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${o}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : Pa(10, o));
  } else
    r = r.split(",");
  return r = r.map((s) => parseFloat(s)), {
    type: n,
    values: r,
    colorSpace: o
  };
}
const J$ = (e) => {
  const t = Wr(e);
  return t.values.slice(0, 3).map((n, r) => t.type.includes("hsl") && r !== 0 ? `${n}%` : n).join(" ");
}, Ii = (e, t) => {
  try {
    return J$(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function Ml(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: r
  } = e;
  return t.includes("rgb") ? r = r.map((o, s) => s < 3 ? parseInt(o, 10) : o) : t.includes("hsl") && (r[1] = `${r[1]}%`, r[2] = `${r[2]}%`), t.includes("color") ? r = `${n} ${r.join(" ")}` : r = `${r.join(", ")}`, `${t}(${r})`;
}
function Jy(e) {
  e = Wr(e);
  const {
    values: t
  } = e, n = t[0], r = t[1] / 100, o = t[2] / 100, s = r * Math.min(o, 1 - o), a = (u, d = (u + n / 30) % 12) => o - s * Math.max(Math.min(d - 3, 9 - d, 1), -1);
  let l = "rgb";
  const c = [Math.round(a(0) * 255), Math.round(a(8) * 255), Math.round(a(4) * 255)];
  return e.type === "hsla" && (l += "a", c.push(t[3])), Ml({
    type: l,
    values: c
  });
}
function lu(e) {
  e = Wr(e);
  let t = e.type === "hsl" || e.type === "hsla" ? Wr(Jy(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function rm(e, t) {
  const n = lu(e), r = lu(t);
  return (Math.max(n, r) + 0.05) / (Math.min(n, r) + 0.05);
}
function cu(e, t) {
  return e = Wr(e), t = _d(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, Ml(e);
}
function qs(e, t, n) {
  try {
    return cu(e, t);
  } catch {
    return e;
  }
}
function Dd(e, t) {
  if (e = Wr(e), t = _d(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return Ml(e);
}
function ct(e, t, n) {
  try {
    return Dd(e, t);
  } catch {
    return e;
  }
}
function Bd(e, t) {
  if (e = Wr(e), t = _d(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return Ml(e);
}
function ut(e, t, n) {
  try {
    return Bd(e, t);
  } catch {
    return e;
  }
}
function Z$(e, t = 0.15) {
  return lu(e) > 0.5 ? Dd(e, t) : Bd(e, t);
}
function Ys(e, t, n) {
  try {
    return Z$(e, t);
  } catch {
    return e;
  }
}
const ek = /* @__PURE__ */ C.createContext();
process.env.NODE_ENV !== "production" && (i.node, i.bool);
const tk = () => C.useContext(ek) ?? !1, nk = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (i.node, i.object);
function rk(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  if (!t || !t.components || !t.components[n])
    return r;
  const o = t.components[n];
  return o.defaultProps ? au(o.defaultProps, r) : !o.styleOverrides && !o.variants ? au(o, r) : r;
}
function ok({
  props: e,
  name: t
}) {
  const n = C.useContext(nk);
  return rk({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
const om = {
  theme: void 0
};
function ik(e) {
  let t, n;
  return function(o) {
    let s = t;
    return (s === void 0 || o.theme !== n) && (om.theme = o.theme, s = Ky(e(om)), t = s, n = o.theme), s;
  };
}
function sk(e = "") {
  function t(...r) {
    if (!r.length)
      return "";
    const o = r[0];
    return typeof o == "string" && !o.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${o}${t(...r.slice(1))})` : `, ${o}`;
  }
  return (r, ...o) => `var(--${e ? `${e}-` : ""}${r}${t(...o)})`;
}
const im = (e, t, n, r = []) => {
  let o = e;
  t.forEach((s, a) => {
    a === t.length - 1 ? Array.isArray(o) ? o[Number(s)] = n : o && typeof o == "object" && (o[s] = n) : o && typeof o == "object" && (o[s] || (o[s] = r.includes(s) ? [] : {}), o = o[s]);
  });
}, ak = (e, t, n) => {
  function r(o, s = [], a = []) {
    Object.entries(o).forEach(([l, c]) => {
      (!n || n && !n([...s, l])) && c != null && (typeof c == "object" && Object.keys(c).length > 0 ? r(c, [...s, l], Array.isArray(c) ? [...a, l] : a) : t([...s, l], c, a));
    });
  }
  r(e);
}, lk = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((r) => e.includes(r)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function hc(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: r
  } = t || {}, o = {}, s = {}, a = {};
  return ak(
    e,
    (l, c, u) => {
      if ((typeof c == "string" || typeof c == "number") && (!r || !r(l, c))) {
        const d = `--${n ? `${n}-` : ""}${l.join("-")}`, f = lk(l, c);
        Object.assign(o, {
          [d]: f
        }), im(s, l, `var(${d})`, u), im(a, l, `var(${d}, ${f})`, u);
      }
    },
    (l) => l[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: o,
    vars: s,
    varsWithDefaults: a
  };
}
function ck(e, t = {}) {
  const {
    getSelector: n = v,
    disableCssColorScheme: r,
    colorSchemeSelector: o
  } = t, {
    colorSchemes: s = {},
    components: a,
    defaultColorScheme: l = "light",
    ...c
  } = e, {
    vars: u,
    css: d,
    varsWithDefaults: f
  } = hc(c, t);
  let h = f;
  const g = {}, {
    [l]: y,
    ...m
  } = s;
  if (Object.entries(m || {}).forEach(([w, S]) => {
    const {
      vars: b,
      css: T,
      varsWithDefaults: R
    } = hc(S, t);
    h = uo(h, R), g[w] = {
      css: T,
      vars: b
    };
  }), y) {
    const {
      css: w,
      vars: S,
      varsWithDefaults: b
    } = hc(y, t);
    h = uo(h, b), g[l] = {
      css: w,
      vars: S
    };
  }
  function v(w, S) {
    var T, R;
    let b = o;
    if (o === "class" && (b = ".%s"), o === "data" && (b = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (b = `[${o}="%s"]`), w) {
      if (b === "media")
        return e.defaultColorScheme === w ? ":root" : {
          [`@media (prefers-color-scheme: ${((R = (T = s[w]) == null ? void 0 : T.palette) == null ? void 0 : R.mode) || w})`]: {
            ":root": S
          }
        };
      if (b)
        return e.defaultColorScheme === w ? `:root, ${b.replace("%s", String(w))}` : b.replace("%s", String(w));
    }
    return ":root";
  }
  return {
    vars: h,
    generateThemeVars: () => {
      let w = {
        ...u
      };
      return Object.entries(g).forEach(([, {
        vars: S
      }]) => {
        w = uo(w, S);
      }), w;
    },
    generateStyleSheets: () => {
      var $, I;
      const w = [], S = e.defaultColorScheme || "light";
      function b(p, O) {
        Object.keys(O).length && w.push(typeof p == "string" ? {
          [p]: {
            ...O
          }
        } : p);
      }
      b(n(void 0, {
        ...d
      }), d);
      const {
        [S]: T,
        ...R
      } = g;
      if (T) {
        const {
          css: p
        } = T, O = (I = ($ = s[S]) == null ? void 0 : $.palette) == null ? void 0 : I.mode, k = !r && O ? {
          colorScheme: O,
          ...p
        } : {
          ...p
        };
        b(n(S, {
          ...k
        }), k);
      }
      return Object.entries(R).forEach(([p, {
        css: O
      }]) => {
        var D, _;
        const k = (_ = (D = s[p]) == null ? void 0 : D.palette) == null ? void 0 : _.mode, A = !r && k ? {
          colorScheme: k,
          ...O
        } : {
          ...O
        };
        b(n(p, {
          ...A
        }), A);
      }), w;
    }
  };
}
function uk(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
function Dr(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function Zy(e) {
  if (/* @__PURE__ */ C.isValidElement(e) || En.isValidElementType(e) || !Dr(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = Zy(e[n]);
  }), t;
}
function lr(e, t, n = {
  clone: !0
}) {
  const r = n.clone ? {
    ...e
  } : e;
  return Dr(e) && Dr(t) && Object.keys(t).forEach((o) => {
    /* @__PURE__ */ C.isValidElement(t[o]) || En.isValidElementType(t[o]) ? r[o] = t[o] : Dr(t[o]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, o) && Dr(e[o]) ? r[o] = lr(e[o], t[o], n) : n.clone ? r[o] = Dr(t[o]) ? Zy(t[o]) : t[o] : r[o] = t[o];
  }), r;
}
const ls = {
  black: "#000",
  white: "#fff"
}, dk = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, Oo = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, Ro = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, vi = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, $o = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, ko = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, Po = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
};
function eb() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: ls.white,
      default: ls.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const fk = eb();
function tb() {
  return {
    text: {
      primary: ls.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: ls.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const sm = tb();
function am(e, t, n, r) {
  const o = r.light || r, s = r.dark || r * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = Bd(e.main, o) : t === "dark" && (e.dark = Dd(e.main, s)));
}
function pk(e = "light") {
  return e === "dark" ? {
    main: $o[200],
    light: $o[50],
    dark: $o[400]
  } : {
    main: $o[700],
    light: $o[400],
    dark: $o[800]
  };
}
function mk(e = "light") {
  return e === "dark" ? {
    main: Oo[200],
    light: Oo[50],
    dark: Oo[400]
  } : {
    main: Oo[500],
    light: Oo[300],
    dark: Oo[700]
  };
}
function hk(e = "light") {
  return e === "dark" ? {
    main: Ro[500],
    light: Ro[300],
    dark: Ro[700]
  } : {
    main: Ro[700],
    light: Ro[400],
    dark: Ro[800]
  };
}
function gk(e = "light") {
  return e === "dark" ? {
    main: ko[400],
    light: ko[300],
    dark: ko[700]
  } : {
    main: ko[700],
    light: ko[500],
    dark: ko[900]
  };
}
function yk(e = "light") {
  return e === "dark" ? {
    main: Po[400],
    light: Po[300],
    dark: Po[700]
  } : {
    main: Po[800],
    light: Po[500],
    dark: Po[900]
  };
}
function bk(e = "light") {
  return e === "dark" ? {
    main: vi[400],
    light: vi[300],
    dark: vi[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: vi[500],
    dark: vi[900]
  };
}
function Fd(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: r = 0.2,
    ...o
  } = e, s = e.primary || pk(t), a = e.secondary || mk(t), l = e.error || hk(t), c = e.info || gk(t), u = e.success || yk(t), d = e.warning || bk(t);
  function f(m) {
    const v = rm(m, sm.text.primary) >= n ? sm.text.primary : fk.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const x = rm(m, v);
      x < 3 && console.error([`MUI: The contrast ratio of ${x}:1 for ${v} on ${m}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return v;
  }
  const h = ({
    color: m,
    name: v,
    mainShade: x = 500,
    lightShade: E = 300,
    darkShade: w = 700
  }) => {
    if (m = {
      ...m
    }, !m.main && m[x] && (m.main = m[x]), !m.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${v ? ` (${v})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${x}\` property.` : po(11, v ? ` (${v})` : "", x));
    if (typeof m.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${v ? ` (${v})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(m.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : po(12, v ? ` (${v})` : "", JSON.stringify(m.main)));
    return am(m, "light", E, r), am(m, "dark", w, r), m.contrastText || (m.contrastText = f(m.main)), m;
  };
  let g;
  return t === "light" ? g = eb() : t === "dark" && (g = tb()), process.env.NODE_ENV !== "production" && (g || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), lr({
    // A collection of common colors.
    common: {
      ...ls
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: h({
      color: s,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: h({
      color: a,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: h({
      color: l,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: h({
      color: d,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: h({
      color: c,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: h({
      color: u,
      name: "success"
    }),
    // The grey colors.
    grey: dk,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: f,
    // Generate a rich color object.
    augmentColor: h,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: r,
    // The light and dark mode object.
    ...g
  }, o);
}
function vk(e) {
  const t = {};
  return Object.entries(e).forEach((r) => {
    const [o, s] = r;
    typeof s == "object" && (t[o] = `${s.fontStyle ? `${s.fontStyle} ` : ""}${s.fontVariant ? `${s.fontVariant} ` : ""}${s.fontWeight ? `${s.fontWeight} ` : ""}${s.fontStretch ? `${s.fontStretch} ` : ""}${s.fontSize || ""}${s.lineHeight ? `/${s.lineHeight} ` : ""}${s.fontFamily || ""}`);
  }), t;
}
const lm = (e) => e, xk = () => {
  let e = lm;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = lm;
    }
  };
}, nb = xk(), wk = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function jt(e, t, n = "Mui") {
  const r = wk[t];
  return r ? `${n}-${r}` : `${nb.generate(e)}-${t}`;
}
function Sk(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function Tk(e) {
  return Math.round(e * 1e5) / 1e5;
}
const cm = {
  textTransform: "uppercase"
}, um = '"Roboto", "Helvetica", "Arial", sans-serif';
function Ek(e, t) {
  const {
    fontFamily: n = um,
    // The default font size of the Material Specification.
    fontSize: r = 14,
    // px
    fontWeightLight: o = 300,
    fontWeightRegular: s = 400,
    fontWeightMedium: a = 500,
    fontWeightBold: l = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: c = 16,
    // Apply the CSS properties to all the variants.
    allVariants: u,
    pxToRem: d,
    ...f
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof r != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof c != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const h = r / 14, g = d || ((v) => `${v / c * h}rem`), y = (v, x, E, w, S) => ({
    fontFamily: n,
    fontWeight: v,
    fontSize: g(x),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: E,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === um ? {
      letterSpacing: `${Tk(w / x)}em`
    } : {},
    ...S,
    ...u
  }), m = {
    h1: y(o, 96, 1.167, -1.5),
    h2: y(o, 60, 1.2, -0.5),
    h3: y(s, 48, 1.167, 0),
    h4: y(s, 34, 1.235, 0.25),
    h5: y(s, 24, 1.334, 0),
    h6: y(a, 20, 1.6, 0.15),
    subtitle1: y(s, 16, 1.75, 0.15),
    subtitle2: y(a, 14, 1.57, 0.1),
    body1: y(s, 16, 1.5, 0.15),
    body2: y(s, 14, 1.43, 0.15),
    button: y(a, 14, 1.75, 0.4, cm),
    caption: y(s, 12, 1.66, 0.4),
    overline: y(s, 12, 2.66, 1, cm),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return lr({
    htmlFontSize: c,
    pxToRem: g,
    fontFamily: n,
    fontSize: r,
    fontWeightLight: o,
    fontWeightRegular: s,
    fontWeightMedium: a,
    fontWeightBold: l,
    ...m
  }, f, {
    clone: !1
    // No need to clone deep
  });
}
const Ck = 0.2, Ok = 0.14, Rk = 0.12;
function bt(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${Ck})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${Ok})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${Rk})`].join(",");
}
const $k = ["none", bt(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), bt(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), bt(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), bt(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), bt(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), bt(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), bt(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), bt(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), bt(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), bt(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), bt(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), bt(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), bt(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), bt(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), bt(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), bt(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), bt(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), bt(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), bt(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), bt(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), bt(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), bt(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), bt(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), bt(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], kk = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, Pk = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function dm(e) {
  return `${Math.round(e)}ms`;
}
function Ik(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function Nk(e) {
  const t = {
    ...kk,
    ...e.easing
  }, n = {
    ...Pk,
    ...e.duration
  };
  return {
    getAutoHeightDuration: Ik,
    create: (o = ["all"], s = {}) => {
      const {
        duration: a = n.standard,
        easing: l = t.easeInOut,
        delay: c = 0,
        ...u
      } = s;
      if (process.env.NODE_ENV !== "production") {
        const d = (h) => typeof h == "string", f = (h) => !Number.isNaN(parseFloat(h));
        !d(o) && !Array.isArray(o) && console.error('MUI: Argument "props" must be a string or Array.'), !f(a) && !d(a) && console.error(`MUI: Argument "duration" must be a number or a string but found ${a}.`), d(l) || console.error('MUI: Argument "easing" must be a string.'), !f(c) && !d(c) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof s != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(u).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(u).join(",")}].`);
      }
      return (Array.isArray(o) ? o : [o]).map((d) => `${d} ${typeof a == "string" ? a : dm(a)} ${l} ${typeof c == "string" ? c : dm(c)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const Ak = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function Mk(e) {
  return Dr(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function rb(e = {}) {
  const t = {
    ...e
  };
  function n(r) {
    const o = Object.entries(r);
    for (let s = 0; s < o.length; s++) {
      const [a, l] = o[s];
      !Mk(l) || a.startsWith("unstable_") ? delete r[a] : Dr(l) && (r[a] = {
        ...l
      }, n(r[a]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function uu(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: r = {},
    spacing: o,
    palette: s = {},
    transitions: a = {},
    typography: l = {},
    shape: c,
    ...u
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : po(20));
  const d = Fd(s), f = Ad(e);
  let h = lr(f, {
    mixins: Sk(f.breakpoints, r),
    palette: d,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: $k.slice(),
    typography: Ek(d, l),
    transitions: Nk(a),
    zIndex: {
      ...Ak
    }
  });
  if (h = lr(h, u), h = t.reduce((g, y) => lr(g, y), h), process.env.NODE_ENV !== "production") {
    const g = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], y = (m, v) => {
      let x;
      for (x in m) {
        const E = m[x];
        if (g.includes(x) && Object.keys(E).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const w = jt("", x);
            console.error([`MUI: The \`${v}\` component increases the CSS specificity of the \`${x}\` internal state.`, "You can not override it like this: ", JSON.stringify(m, null, 2), "", `Instead, you need to use the '&.${w}' syntax:`, JSON.stringify({
              root: {
                [`&.${w}`]: E
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          m[x] = {};
        }
      }
    };
    Object.keys(h.components).forEach((m) => {
      const v = h.components[m].styleOverrides;
      v && m.startsWith("Mui") && y(v, m);
    });
  }
  return h.unstable_sxConfig = {
    ...Ts,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, h.unstable_sx = function(y) {
    return mo({
      sx: y,
      theme: this
    });
  }, h.toRuntimeSource = rb, h;
}
function du(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const _k = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = du(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function ob(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function ib(e) {
  return e === "dark" ? _k : [];
}
function Dk(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: r,
    ...o
  } = e, s = Fd(t);
  return {
    palette: s,
    opacity: {
      ...ob(s.mode),
      ...n
    },
    overlays: r || ib(s.mode),
    ...o
  };
}
function Bk(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const Fk = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], jk = (e) => (t, n) => {
  const r = e.rootSelector || ":root", o = e.colorSchemeSelector;
  let s = o;
  if (o === "class" && (s = ".%s"), o === "data" && (s = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (s = `[${o}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const a = {};
      return Fk(e.cssVarPrefix).forEach((l) => {
        a[l] = n[l], delete n[l];
      }), s === "media" ? {
        [r]: n,
        "@media (prefers-color-scheme: dark)": {
          [r]: a
        }
      } : s ? {
        [s.replace("%s", t)]: a,
        [`${r}, ${s.replace("%s", t)}`]: n
      } : {
        [r]: {
          ...n,
          ...a
        }
      };
    }
    if (s && s !== "media")
      return `${r}, ${s.replace("%s", String(t))}`;
  } else if (t) {
    if (s === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [r]: n
        }
      };
    if (s)
      return s.replace("%s", String(t));
  }
  return r;
};
function Lk(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function ue(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function Ni(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : Jy(e);
}
function xr(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = Ii(Ni(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function Vk(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const Xn = (e) => {
  try {
    return e();
  } catch {
  }
}, zk = (e = "mui") => sk(e);
function gc(e, t, n, r) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const o = r === "dark" ? "dark" : "light";
  if (!n) {
    e[r] = Dk({
      ...t,
      palette: {
        mode: o,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: s,
    ...a
  } = uu({
    ...n,
    palette: {
      mode: o,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[r] = {
    ...t,
    palette: s,
    opacity: {
      ...ob(o),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || ib(o)
  }, a;
}
function Wk(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: r,
    disableCssColorScheme: o = !1,
    cssVarPrefix: s = "mui",
    shouldSkipGeneratingVar: a = Bk,
    colorSchemeSelector: l = n.light && n.dark ? "media" : void 0,
    rootSelector: c = ":root",
    ...u
  } = e, d = Object.keys(n)[0], f = r || (n.light && d !== "light" ? "light" : d), h = zk(s), {
    [f]: g,
    light: y,
    dark: m,
    ...v
  } = n, x = {
    ...v
  };
  let E = g;
  if ((f === "dark" && !("dark" in n) || f === "light" && !("light" in n)) && (E = !0), !E)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${f}\` option is either missing or invalid.` : po(21, f));
  const w = gc(x, E, u, f);
  y && !x.light && gc(x, y, void 0, "light"), m && !x.dark && gc(x, m, void 0, "dark");
  let S = {
    defaultColorScheme: f,
    ...w,
    cssVarPrefix: s,
    colorSchemeSelector: l,
    rootSelector: c,
    getCssVar: h,
    colorSchemes: x,
    font: {
      ...vk(w.typography),
      ...w.font
    },
    spacing: Vk(u.spacing)
  };
  Object.keys(S.colorSchemes).forEach((I) => {
    const p = S.colorSchemes[I].palette, O = (k) => {
      const A = k.split("-"), D = A[1], _ = A[2];
      return h(k, p[D][_]);
    };
    if (p.mode === "light" && (ue(p.common, "background", "#fff"), ue(p.common, "onBackground", "#000")), p.mode === "dark" && (ue(p.common, "background", "#000"), ue(p.common, "onBackground", "#fff")), Lk(p, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), p.mode === "light") {
      ue(p.Alert, "errorColor", ct(p.error.light, 0.6)), ue(p.Alert, "infoColor", ct(p.info.light, 0.6)), ue(p.Alert, "successColor", ct(p.success.light, 0.6)), ue(p.Alert, "warningColor", ct(p.warning.light, 0.6)), ue(p.Alert, "errorFilledBg", O("palette-error-main")), ue(p.Alert, "infoFilledBg", O("palette-info-main")), ue(p.Alert, "successFilledBg", O("palette-success-main")), ue(p.Alert, "warningFilledBg", O("palette-warning-main")), ue(p.Alert, "errorFilledColor", Xn(() => p.getContrastText(p.error.main))), ue(p.Alert, "infoFilledColor", Xn(() => p.getContrastText(p.info.main))), ue(p.Alert, "successFilledColor", Xn(() => p.getContrastText(p.success.main))), ue(p.Alert, "warningFilledColor", Xn(() => p.getContrastText(p.warning.main))), ue(p.Alert, "errorStandardBg", ut(p.error.light, 0.9)), ue(p.Alert, "infoStandardBg", ut(p.info.light, 0.9)), ue(p.Alert, "successStandardBg", ut(p.success.light, 0.9)), ue(p.Alert, "warningStandardBg", ut(p.warning.light, 0.9)), ue(p.Alert, "errorIconColor", O("palette-error-main")), ue(p.Alert, "infoIconColor", O("palette-info-main")), ue(p.Alert, "successIconColor", O("palette-success-main")), ue(p.Alert, "warningIconColor", O("palette-warning-main")), ue(p.AppBar, "defaultBg", O("palette-grey-100")), ue(p.Avatar, "defaultBg", O("palette-grey-400")), ue(p.Button, "inheritContainedBg", O("palette-grey-300")), ue(p.Button, "inheritContainedHoverBg", O("palette-grey-A100")), ue(p.Chip, "defaultBorder", O("palette-grey-400")), ue(p.Chip, "defaultAvatarColor", O("palette-grey-700")), ue(p.Chip, "defaultIconColor", O("palette-grey-700")), ue(p.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), ue(p.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), ue(p.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), ue(p.LinearProgress, "primaryBg", ut(p.primary.main, 0.62)), ue(p.LinearProgress, "secondaryBg", ut(p.secondary.main, 0.62)), ue(p.LinearProgress, "errorBg", ut(p.error.main, 0.62)), ue(p.LinearProgress, "infoBg", ut(p.info.main, 0.62)), ue(p.LinearProgress, "successBg", ut(p.success.main, 0.62)), ue(p.LinearProgress, "warningBg", ut(p.warning.main, 0.62)), ue(p.Skeleton, "bg", `rgba(${O("palette-text-primaryChannel")} / 0.11)`), ue(p.Slider, "primaryTrack", ut(p.primary.main, 0.62)), ue(p.Slider, "secondaryTrack", ut(p.secondary.main, 0.62)), ue(p.Slider, "errorTrack", ut(p.error.main, 0.62)), ue(p.Slider, "infoTrack", ut(p.info.main, 0.62)), ue(p.Slider, "successTrack", ut(p.success.main, 0.62)), ue(p.Slider, "warningTrack", ut(p.warning.main, 0.62));
      const k = Ys(p.background.default, 0.8);
      ue(p.SnackbarContent, "bg", k), ue(p.SnackbarContent, "color", Xn(() => p.getContrastText(k))), ue(p.SpeedDialAction, "fabHoverBg", Ys(p.background.paper, 0.15)), ue(p.StepConnector, "border", O("palette-grey-400")), ue(p.StepContent, "border", O("palette-grey-400")), ue(p.Switch, "defaultColor", O("palette-common-white")), ue(p.Switch, "defaultDisabledColor", O("palette-grey-100")), ue(p.Switch, "primaryDisabledColor", ut(p.primary.main, 0.62)), ue(p.Switch, "secondaryDisabledColor", ut(p.secondary.main, 0.62)), ue(p.Switch, "errorDisabledColor", ut(p.error.main, 0.62)), ue(p.Switch, "infoDisabledColor", ut(p.info.main, 0.62)), ue(p.Switch, "successDisabledColor", ut(p.success.main, 0.62)), ue(p.Switch, "warningDisabledColor", ut(p.warning.main, 0.62)), ue(p.TableCell, "border", ut(qs(p.divider, 1), 0.88)), ue(p.Tooltip, "bg", qs(p.grey[700], 0.92));
    }
    if (p.mode === "dark") {
      ue(p.Alert, "errorColor", ut(p.error.light, 0.6)), ue(p.Alert, "infoColor", ut(p.info.light, 0.6)), ue(p.Alert, "successColor", ut(p.success.light, 0.6)), ue(p.Alert, "warningColor", ut(p.warning.light, 0.6)), ue(p.Alert, "errorFilledBg", O("palette-error-dark")), ue(p.Alert, "infoFilledBg", O("palette-info-dark")), ue(p.Alert, "successFilledBg", O("palette-success-dark")), ue(p.Alert, "warningFilledBg", O("palette-warning-dark")), ue(p.Alert, "errorFilledColor", Xn(() => p.getContrastText(p.error.dark))), ue(p.Alert, "infoFilledColor", Xn(() => p.getContrastText(p.info.dark))), ue(p.Alert, "successFilledColor", Xn(() => p.getContrastText(p.success.dark))), ue(p.Alert, "warningFilledColor", Xn(() => p.getContrastText(p.warning.dark))), ue(p.Alert, "errorStandardBg", ct(p.error.light, 0.9)), ue(p.Alert, "infoStandardBg", ct(p.info.light, 0.9)), ue(p.Alert, "successStandardBg", ct(p.success.light, 0.9)), ue(p.Alert, "warningStandardBg", ct(p.warning.light, 0.9)), ue(p.Alert, "errorIconColor", O("palette-error-main")), ue(p.Alert, "infoIconColor", O("palette-info-main")), ue(p.Alert, "successIconColor", O("palette-success-main")), ue(p.Alert, "warningIconColor", O("palette-warning-main")), ue(p.AppBar, "defaultBg", O("palette-grey-900")), ue(p.AppBar, "darkBg", O("palette-background-paper")), ue(p.AppBar, "darkColor", O("palette-text-primary")), ue(p.Avatar, "defaultBg", O("palette-grey-600")), ue(p.Button, "inheritContainedBg", O("palette-grey-800")), ue(p.Button, "inheritContainedHoverBg", O("palette-grey-700")), ue(p.Chip, "defaultBorder", O("palette-grey-700")), ue(p.Chip, "defaultAvatarColor", O("palette-grey-300")), ue(p.Chip, "defaultIconColor", O("palette-grey-300")), ue(p.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), ue(p.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), ue(p.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), ue(p.LinearProgress, "primaryBg", ct(p.primary.main, 0.5)), ue(p.LinearProgress, "secondaryBg", ct(p.secondary.main, 0.5)), ue(p.LinearProgress, "errorBg", ct(p.error.main, 0.5)), ue(p.LinearProgress, "infoBg", ct(p.info.main, 0.5)), ue(p.LinearProgress, "successBg", ct(p.success.main, 0.5)), ue(p.LinearProgress, "warningBg", ct(p.warning.main, 0.5)), ue(p.Skeleton, "bg", `rgba(${O("palette-text-primaryChannel")} / 0.13)`), ue(p.Slider, "primaryTrack", ct(p.primary.main, 0.5)), ue(p.Slider, "secondaryTrack", ct(p.secondary.main, 0.5)), ue(p.Slider, "errorTrack", ct(p.error.main, 0.5)), ue(p.Slider, "infoTrack", ct(p.info.main, 0.5)), ue(p.Slider, "successTrack", ct(p.success.main, 0.5)), ue(p.Slider, "warningTrack", ct(p.warning.main, 0.5));
      const k = Ys(p.background.default, 0.98);
      ue(p.SnackbarContent, "bg", k), ue(p.SnackbarContent, "color", Xn(() => p.getContrastText(k))), ue(p.SpeedDialAction, "fabHoverBg", Ys(p.background.paper, 0.15)), ue(p.StepConnector, "border", O("palette-grey-600")), ue(p.StepContent, "border", O("palette-grey-600")), ue(p.Switch, "defaultColor", O("palette-grey-300")), ue(p.Switch, "defaultDisabledColor", O("palette-grey-600")), ue(p.Switch, "primaryDisabledColor", ct(p.primary.main, 0.55)), ue(p.Switch, "secondaryDisabledColor", ct(p.secondary.main, 0.55)), ue(p.Switch, "errorDisabledColor", ct(p.error.main, 0.55)), ue(p.Switch, "infoDisabledColor", ct(p.info.main, 0.55)), ue(p.Switch, "successDisabledColor", ct(p.success.main, 0.55)), ue(p.Switch, "warningDisabledColor", ct(p.warning.main, 0.55)), ue(p.TableCell, "border", ct(qs(p.divider, 1), 0.68)), ue(p.Tooltip, "bg", qs(p.grey[700], 0.92));
    }
    xr(p.background, "default"), xr(p.background, "paper"), xr(p.common, "background"), xr(p.common, "onBackground"), xr(p, "divider"), Object.keys(p).forEach((k) => {
      const A = p[k];
      k !== "tonalOffset" && A && typeof A == "object" && (A.main && ue(p[k], "mainChannel", Ii(Ni(A.main))), A.light && ue(p[k], "lightChannel", Ii(Ni(A.light))), A.dark && ue(p[k], "darkChannel", Ii(Ni(A.dark))), A.contrastText && ue(p[k], "contrastTextChannel", Ii(Ni(A.contrastText))), k === "text" && (xr(p[k], "primary"), xr(p[k], "secondary")), k === "action" && (A.active && xr(p[k], "active"), A.selected && xr(p[k], "selected")));
    });
  }), S = t.reduce((I, p) => lr(I, p), S);
  const b = {
    prefix: s,
    disableCssColorScheme: o,
    shouldSkipGeneratingVar: a,
    getSelector: jk(S)
  }, {
    vars: T,
    generateThemeVars: R,
    generateStyleSheets: $
  } = ck(S, b);
  return S.vars = T, Object.entries(S.colorSchemes[S.defaultColorScheme]).forEach(([I, p]) => {
    S[I] = p;
  }), S.generateThemeVars = R, S.generateStyleSheets = $, S.generateSpacing = function() {
    return qy(u.spacing, Id(this));
  }, S.getColorSchemeSelector = uk(l), S.spacing = S.generateSpacing(), S.shouldSkipGeneratingVar = a, S.unstable_sxConfig = {
    ...Ts,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, S.unstable_sx = function(p) {
    return mo({
      sx: p,
      theme: this
    });
  }, S.toRuntimeSource = rb, S;
}
function fm(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: Fd({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function sb(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: r = !1,
    colorSchemes: o = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: s = n == null ? void 0 : n.mode,
    ...a
  } = e, l = s || "light", c = o == null ? void 0 : o[l], u = {
    ...o,
    ...n ? {
      [l]: {
        ...typeof c != "boolean" && c,
        palette: n
      }
    } : void 0
  };
  if (r === !1) {
    if (!("colorSchemes" in e))
      return uu(e, ...t);
    let d = n;
    "palette" in e || u[l] && (u[l] !== !0 ? d = u[l].palette : l === "dark" && (d = {
      mode: "dark"
    }));
    const f = uu({
      ...e,
      palette: d
    }, ...t);
    return f.defaultColorScheme = l, f.colorSchemes = u, f.palette.mode === "light" && (f.colorSchemes.light = {
      ...u.light !== !0 && u.light,
      palette: f.palette
    }, fm(f, "dark", u.dark)), f.palette.mode === "dark" && (f.colorSchemes.dark = {
      ...u.dark !== !0 && u.dark,
      palette: f.palette
    }, fm(f, "light", u.light)), f;
  }
  return !n && !("light" in u) && l === "light" && (u.light = !0), Wk({
    ...a,
    colorSchemes: u,
    defaultColorScheme: l,
    ...typeof r != "boolean" && r
  }, ...t);
}
const jd = sb();
function Ld() {
  const e = Md(jd);
  return process.env.NODE_ENV !== "production" && C.useDebugValue(e), e[El] || e;
}
function ab(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const yr = (e) => ab(e) && e !== "classes", Ue = H$({
  themeId: El,
  defaultTheme: jd,
  rootShouldForwardProp: yr
});
function Wt(e, t, n = void 0) {
  const r = {};
  for (const o in e) {
    const s = e[o];
    let a = "", l = !0;
    for (let c = 0; c < s.length; c += 1) {
      const u = s[c];
      u && (a += (l === !0 ? "" : " ") + t(u), l = !1, n && n[u] && (a += " " + n[u]));
    }
    r[o] = a;
  }
  return r;
}
let pm = 0;
function Uk(e) {
  const [t, n] = C.useState(e), r = e || t;
  return C.useEffect(() => {
    t == null && (pm += 1, n(`mui-${pm}`));
  }, [t]), r;
}
const Hk = {
  ...C
}, mm = Hk.useId;
function lb(e) {
  if (mm !== void 0) {
    const t = mm();
    return e ?? t;
  }
  return Uk(e);
}
const Zr = i.oneOfType([i.func, i.object]);
function cb(e) {
  return /* @__PURE__ */ P(Yy, {
    ...e,
    defaultTheme: jd,
    themeId: El
  });
}
process.env.NODE_ENV !== "production" && (cb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: i.oneOfType([i.array, i.func, i.number, i.object, i.string, i.bool])
});
function qk(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ P(cb, {
        styles: typeof e == "function" ? (r) => e({
          theme: r,
          ...n
        }) : e
      })
    );
  };
}
process.env.NODE_ENV !== "production" && (i.node, i.object.isRequired);
function Xt(e) {
  return ok(e);
}
function Es(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...r) {
    return e(...r) || t(...r);
  };
}
function Yk(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function Gk(e, t, n, r, o) {
  const s = e[t], a = o || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  return typeof s == "function" && !Yk(s) && (l = "Did you accidentally provide a plain function component instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const ub = Es(i.elementType, Gk);
function Kk(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function db(e, t, n, r, o) {
  const s = e[t], a = o || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  const c = s.type;
  return typeof c == "function" && !Kk(c) && (l = "Did you accidentally use a plain function component for an element instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Cs = Es(i.element, db);
Cs.isRequired = Es(i.element.isRequired, db);
const Xk = "exact-prop: ​";
function fb(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [Xk]: (t) => {
      const n = Object.keys(t).filter((r) => !e.hasOwnProperty(r));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((r) => `\`${r}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
function cs(e, t, n, r, o) {
  if (process.env.NODE_ENV === "production")
    return null;
  const s = e[t], a = o || t;
  return s == null ? null : s && s.nodeType !== 1 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
function Ht(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : po(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function hm(...e) {
  return e.reduce((t, n) => n == null ? t : function(...o) {
    t.apply(this, o), n.apply(this, o);
  }, () => {
  });
}
function pb(e, t = 166) {
  let n;
  function r(...o) {
    const s = () => {
      e.apply(this, o);
    };
    clearTimeout(n), n = setTimeout(s, t);
  }
  return r.clear = () => {
    clearTimeout(n);
  }, r;
}
function yc(e, t) {
  var n, r, o;
  return /* @__PURE__ */ C.isValidElement(e) && t.indexOf(
    // For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    e.type.muiName ?? ((o = (r = (n = e.type) == null ? void 0 : n._payload) == null ? void 0 : r.value) == null ? void 0 : o.muiName)
  ) !== -1;
}
function Yn(e) {
  return e && e.ownerDocument || document;
}
function kr(e) {
  return Yn(e).defaultView || window;
}
function gm(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
const ho = typeof window < "u" ? C.useLayoutEffect : C.useEffect;
function ym({
  controlled: e,
  default: t,
  name: n,
  state: r = "value"
}) {
  const {
    current: o
  } = C.useRef(e !== void 0), [s, a] = C.useState(t), l = o ? e : s;
  if (process.env.NODE_ENV !== "production") {
    C.useEffect(() => {
      o !== (e !== void 0) && console.error([`MUI: A component is changing the ${o ? "" : "un"}controlled ${r} state of ${n} to be ${o ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [r, n, e]);
    const {
      current: u
    } = C.useRef(t);
    C.useEffect(() => {
      !o && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${r} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = C.useCallback((u) => {
    o || a(u);
  }, []);
  return [l, c];
}
function fu(e) {
  const t = C.useRef(e);
  return ho(() => {
    t.current = e;
  }), C.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function Ln(...e) {
  const t = C.useRef(void 0), n = C.useCallback((r) => {
    const o = e.map((s) => {
      if (s == null)
        return null;
      if (typeof s == "function") {
        const a = s, l = a(r);
        return typeof l == "function" ? l : () => {
          a(null);
        };
      }
      return s.current = r, () => {
        s.current = null;
      };
    });
    return () => {
      o.forEach((s) => s == null ? void 0 : s());
    };
  }, e);
  return C.useMemo(() => e.every((r) => r == null) ? null : (r) => {
    t.current && (t.current(), t.current = void 0), r != null && (t.current = n(r));
  }, e);
}
const bm = {};
function Qk(e, t) {
  const n = C.useRef(bm);
  return n.current === bm && (n.current = e(t)), n;
}
const Jk = [];
function Zk(e) {
  C.useEffect(e, Jk);
}
class Vd {
  constructor() {
    Nr(this, "currentId", null);
    Nr(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    Nr(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new Vd();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
}
function eP() {
  const e = Qk(Vd.create).current;
  return Zk(e.disposeEffect), e;
}
function mb(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
function tP(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function hb(e, t, n, r) {
  const o = e[t];
  if (o == null || !Number.isInteger(o)) {
    const s = tP(o);
    return new RangeError(`Invalid ${r} \`${t}\` of type \`${s}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function gb(e, t, ...n) {
  return e[t] === void 0 ? null : hb(e, t, ...n);
}
function pu() {
  return null;
}
gb.isRequired = hb;
pu.isRequired = pu;
const yb = process.env.NODE_ENV === "production" ? pu : gb;
function Ut(e, t, n = "Mui") {
  const r = {};
  return t.forEach((o) => {
    r[o] = jt(e, o, n);
  }), r;
}
function nP(e) {
  return typeof e == "string";
}
function bb(e, t, n) {
  return e === void 0 || nP(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function vb(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((r) => r.match(/^on[A-Z]/) && typeof e[r] == "function" && !t.includes(r)).forEach((r) => {
    n[r] = e[r];
  }), n;
}
function vm(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function xb(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: r,
    externalForwardedProps: o,
    className: s
  } = e;
  if (!t) {
    const g = Ce(n == null ? void 0 : n.className, s, o == null ? void 0 : o.className, r == null ? void 0 : r.className), y = {
      ...n == null ? void 0 : n.style,
      ...o == null ? void 0 : o.style,
      ...r == null ? void 0 : r.style
    }, m = {
      ...n,
      ...o,
      ...r
    };
    return g.length > 0 && (m.className = g), Object.keys(y).length > 0 && (m.style = y), {
      props: m,
      internalRef: void 0
    };
  }
  const a = vb({
    ...o,
    ...r
  }), l = vm(r), c = vm(o), u = t(a), d = Ce(u == null ? void 0 : u.className, n == null ? void 0 : n.className, s, o == null ? void 0 : o.className, r == null ? void 0 : r.className), f = {
    ...u == null ? void 0 : u.style,
    ...n == null ? void 0 : n.style,
    ...o == null ? void 0 : o.style,
    ...r == null ? void 0 : r.style
  }, h = {
    ...u,
    ...n,
    ...c,
    ...l
  };
  return d.length > 0 && (h.className = d), Object.keys(f).length > 0 && (h.style = f), {
    props: h,
    internalRef: u.ref
  };
}
function wb(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function rP(e) {
  var f;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: r,
    skipResolvingSlotProps: o = !1,
    ...s
  } = e, a = o ? {} : wb(n, r), {
    props: l,
    internalRef: c
  } = xb({
    ...s,
    externalSlotProps: a
  }), u = Ln(c, a == null ? void 0 : a.ref, (f = e.additionalProps) == null ? void 0 : f.ref);
  return bb(t, {
    ...l,
    ref: u
  }, r);
}
function Os(e) {
  var t;
  return parseInt(C.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
function Gs(e) {
  return parseInt(e, 10) || 0;
}
const oP = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function iP(e) {
  for (const t in e)
    return !1;
  return !0;
}
function xm(e) {
  return iP(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const Sb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    onChange: r,
    maxRows: o,
    minRows: s = 1,
    style: a,
    value: l,
    ...c
  } = t, {
    current: u
  } = C.useRef(l != null), d = C.useRef(null), f = Ln(n, d), h = C.useRef(null), g = C.useRef(null), y = C.useCallback(() => {
    const w = d.current, S = g.current;
    if (!w || !S)
      return;
    const T = kr(w).getComputedStyle(w);
    if (T.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    S.style.width = T.width, S.value = w.value || t.placeholder || "x", S.value.slice(-1) === `
` && (S.value += " ");
    const R = T.boxSizing, $ = Gs(T.paddingBottom) + Gs(T.paddingTop), I = Gs(T.borderBottomWidth) + Gs(T.borderTopWidth), p = S.scrollHeight;
    S.value = "x";
    const O = S.scrollHeight;
    let k = p;
    s && (k = Math.max(Number(s) * O, k)), o && (k = Math.min(Number(o) * O, k)), k = Math.max(k, O);
    const A = k + (R === "border-box" ? $ + I : 0), D = Math.abs(k - p) <= 1;
    return {
      outerHeightStyle: A,
      overflowing: D
    };
  }, [o, s, t.placeholder]), m = fu(() => {
    const w = d.current, S = y();
    if (!w || !S || xm(S))
      return !1;
    const b = S.outerHeightStyle;
    return h.current != null && h.current !== b;
  }), v = C.useCallback(() => {
    const w = d.current, S = y();
    if (!w || !S || xm(S))
      return;
    const b = S.outerHeightStyle;
    h.current !== b && (h.current = b, w.style.height = `${b}px`), w.style.overflow = S.overflowing ? "hidden" : "";
  }, [y]), x = C.useRef(-1);
  ho(() => {
    const w = pb(v), S = d == null ? void 0 : d.current;
    if (!S)
      return;
    const b = kr(S);
    b.addEventListener("resize", w);
    let T;
    return typeof ResizeObserver < "u" && (T = new ResizeObserver(() => {
      m() && (T.unobserve(S), cancelAnimationFrame(x.current), v(), x.current = requestAnimationFrame(() => {
        T.observe(S);
      }));
    }), T.observe(S)), () => {
      w.clear(), cancelAnimationFrame(x.current), b.removeEventListener("resize", w), T && T.disconnect();
    };
  }, [y, v, m]), ho(() => {
    v();
  });
  const E = (w) => {
    u || v(), r && r(w);
  };
  return /* @__PURE__ */ Pe(C.Fragment, {
    children: [/* @__PURE__ */ P("textarea", {
      value: l,
      onChange: E,
      ref: f,
      rows: s,
      style: a,
      ...c
    }), /* @__PURE__ */ P("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: g,
      tabIndex: -1,
      style: {
        ...oP.shadow,
        ...a,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (Sb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: i.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  onChange: i.func,
  /**
   * @ignore
   */
  placeholder: i.string,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * @ignore
   */
  value: i.oneOfType([i.arrayOf(i.string), i.number, i.string])
});
function mu(e) {
  return typeof e == "string";
}
function di({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((r, o) => (r[o] = e[o], n && typeof e[o] > "u" && (r[o] = n[o]), r), {});
}
const _l = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (_l.displayName = "FormControlContext");
function fi() {
  return C.useContext(_l);
}
const nn = ik;
function wm(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function Na(e, t = !1) {
  return e && (wm(e.value) && e.value !== "" || t && wm(e.defaultValue) && e.defaultValue !== "");
}
function sP(e) {
  return e.startAdornment;
}
function aP(e) {
  return jt("MuiInputBase", e);
}
const ei = Ut("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var Sm;
const Dl = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${Ht(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, Bl = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, lP = (e) => {
  const {
    classes: t,
    color: n,
    disabled: r,
    error: o,
    endAdornment: s,
    focused: a,
    formControl: l,
    fullWidth: c,
    hiddenLabel: u,
    multiline: d,
    readOnly: f,
    size: h,
    startAdornment: g,
    type: y
  } = e, m = {
    root: ["root", `color${Ht(n)}`, r && "disabled", o && "error", c && "fullWidth", a && "focused", l && "formControl", h && h !== "medium" && `size${Ht(h)}`, d && "multiline", g && "adornedStart", s && "adornedEnd", u && "hiddenLabel", f && "readOnly"],
    input: ["input", r && "disabled", y === "search" && "inputTypeSearch", d && "inputMultiline", h === "small" && "inputSizeSmall", u && "inputHiddenLabel", g && "inputAdornedStart", s && "inputAdornedEnd", f && "readOnly"]
  };
  return Wt(m, aP, t);
}, Fl = Ue("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: Dl
})(nn(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${ei.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), jl = Ue("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: Bl
})(nn(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, r = {
    opacity: "0 !important"
  }, o = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${ei.formControl} &`]: {
      "&::-webkit-input-placeholder": r,
      "&::-moz-placeholder": r,
      // Firefox 19+
      "&::-ms-input-placeholder": r,
      // Edge
      "&:focus::-webkit-input-placeholder": o,
      "&:focus::-moz-placeholder": o,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": o
      // Edge
    },
    [`&.${ei.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: s
      }) => !s.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), Tm = qk({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), Ll = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": o,
    autoComplete: s,
    autoFocus: a,
    className: l,
    color: c,
    components: u = {},
    componentsProps: d = {},
    defaultValue: f,
    disabled: h,
    disableInjectingGlobalStyles: g,
    endAdornment: y,
    error: m,
    fullWidth: v = !1,
    id: x,
    inputComponent: E = "input",
    inputProps: w = {},
    inputRef: S,
    margin: b,
    maxRows: T,
    minRows: R,
    multiline: $ = !1,
    name: I,
    onBlur: p,
    onChange: O,
    onClick: k,
    onFocus: A,
    onKeyDown: D,
    onKeyUp: _,
    placeholder: M,
    readOnly: z,
    renderSuffix: Y,
    rows: H,
    size: j,
    slotProps: W = {},
    slots: ee = {},
    startAdornment: K,
    type: oe = "text",
    value: ne,
    ...se
  } = r, de = w.value != null ? w.value : ne, {
    current: X
  } = C.useRef(de != null), ae = C.useRef(), Q = C.useCallback((re) => {
    process.env.NODE_ENV !== "production" && re && re.nodeName !== "INPUT" && !re.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), ie = Ln(ae, S, w.ref, Q), [F, he] = C.useState(!1), fe = fi();
  process.env.NODE_ENV !== "production" && C.useEffect(() => {
    if (fe)
      return fe.registerEffect();
  }, [fe]);
  const Se = di({
    props: r,
    muiFormControl: fe,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  Se.focused = fe ? fe.focused : F, C.useEffect(() => {
    !fe && h && F && (he(!1), p && p());
  }, [fe, h, F, p]);
  const Le = fe && fe.onFilled, Ne = fe && fe.onEmpty, ke = C.useCallback((re) => {
    Na(re) ? Le && Le() : Ne && Ne();
  }, [Le, Ne]);
  ho(() => {
    X && ke({
      value: de
    });
  }, [de, ke, X]);
  const Re = (re) => {
    A && A(re), w.onFocus && w.onFocus(re), fe && fe.onFocus ? fe.onFocus(re) : he(!0);
  }, De = (re) => {
    p && p(re), w.onBlur && w.onBlur(re), fe && fe.onBlur ? fe.onBlur(re) : he(!1);
  }, Oe = (re, ...Z) => {
    if (!X) {
      const te = re.target || ae.current;
      if (te == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : po(1));
      ke({
        value: te.value
      });
    }
    w.onChange && w.onChange(re, ...Z), O && O(re, ...Z);
  };
  C.useEffect(() => {
    ke(ae.current);
  }, []);
  const N = (re) => {
    ae.current && re.currentTarget === re.target && ae.current.focus(), k && k(re);
  };
  let q = E, J = w;
  $ && q === "input" && (H ? (process.env.NODE_ENV !== "production" && (R || T) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), J = {
    type: void 0,
    minRows: H,
    maxRows: H,
    ...J
  }) : J = {
    type: void 0,
    maxRows: T,
    minRows: R,
    ...J
  }, q = Sb);
  const U = (re) => {
    ke(re.animationName === "mui-auto-fill-cancel" ? ae.current : {
      value: "x"
    });
  };
  C.useEffect(() => {
    fe && fe.setAdornedStart(!!K);
  }, [fe, K]);
  const B = {
    ...r,
    color: Se.color || "primary",
    disabled: Se.disabled,
    endAdornment: y,
    error: Se.error,
    focused: Se.focused,
    formControl: fe,
    fullWidth: v,
    hiddenLabel: Se.hiddenLabel,
    multiline: $,
    size: Se.size,
    startAdornment: K,
    type: oe
  }, V = lP(B), G = ee.root || u.Root || Fl, pe = W.root || d.root || {}, me = ee.input || u.Input || jl;
  return J = {
    ...J,
    ...W.input ?? d.input
  }, /* @__PURE__ */ Pe(C.Fragment, {
    children: [!g && typeof Tm == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (Sm || (Sm = /* @__PURE__ */ P(Tm, {}))), /* @__PURE__ */ Pe(G, {
      ...pe,
      ref: n,
      onClick: N,
      ...se,
      ...!mu(G) && {
        ownerState: {
          ...B,
          ...pe.ownerState
        }
      },
      className: Ce(V.root, pe.className, l, z && "MuiInputBase-readOnly"),
      children: [K, /* @__PURE__ */ P(_l.Provider, {
        value: null,
        children: /* @__PURE__ */ P(me, {
          "aria-invalid": Se.error,
          "aria-describedby": o,
          autoComplete: s,
          autoFocus: a,
          defaultValue: f,
          disabled: Se.disabled,
          id: x,
          onAnimationStart: U,
          name: I,
          placeholder: M,
          readOnly: z,
          required: Se.required,
          rows: H,
          value: de,
          onKeyDown: D,
          onKeyUp: _,
          type: oe,
          ...J,
          ...!mu(me) && {
            as: q,
            ownerState: {
              ...B,
              ...J.ownerState
            }
          },
          ref: ie,
          className: Ce(V.input, J.className, z && "MuiInputBase-readOnly"),
          onBlur: De,
          onChange: Oe,
          onFocus: Re
        })
      }), y, Y ? Y({
        ...Se,
        startAdornment: K
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (Ll.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": i.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: ub,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Zr,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: i.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: i.func,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * @ignore
   */
  onKeyUp: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * @ignore
   */
  renderSuffix: i.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The size of the component.
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
function cP(e) {
  return typeof e.main == "string";
}
function uP(e, t = []) {
  if (!cP(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function Vl(e = []) {
  return ([, t]) => t && uP(t, e);
}
function dP(e) {
  return jt("MuiInput", e);
}
const xi = {
  ...ei,
  ...Ut("MuiInput", ["root", "underline", "input"])
}, fP = (e) => {
  const {
    classes: t,
    disableUnderline: n
  } = e, o = Wt({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, dP, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...o
  };
}, pP = Ue(Fl, {
  shouldForwardProp: (e) => yr(e) || e === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...Dl(e, t), !n.disableUnderline && t.underline];
  }
})(nn(({
  theme: e
}) => {
  let n = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e.vars && (n = `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`), {
    position: "relative",
    variants: [{
      props: ({
        ownerState: r
      }) => r.formControl,
      style: {
        "label + &": {
          marginTop: 16
        }
      }
    }, {
      props: ({
        ownerState: r
      }) => !r.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${xi.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${xi.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${xi.disabled}, .${xi.error}):before`]: {
          borderBottom: `2px solid ${(e.vars || e).palette.text.primary}`,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            borderBottom: `1px solid ${n}`
          }
        },
        [`&.${xi.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(Vl()).map(([r]) => ({
      props: {
        color: r,
        disableUnderline: !1
      },
      style: {
        "&::after": {
          borderBottom: `2px solid ${(e.vars || e).palette[r].main}`
        }
      }
    }))]
  };
})), mP = Ue(jl, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: Bl
})({}), zl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiInput"
  }), {
    disableUnderline: o = !1,
    components: s = {},
    componentsProps: a,
    fullWidth: l = !1,
    inputComponent: c = "input",
    multiline: u = !1,
    slotProps: d,
    slots: f = {},
    type: h = "text",
    ...g
  } = r, y = fP(r), v = {
    root: {
      ownerState: {
        disableUnderline: o
      }
    }
  }, x = d ?? a ? lr(d ?? a, v) : v, E = f.root ?? s.Root ?? pP, w = f.input ?? s.Input ?? mP;
  return /* @__PURE__ */ P(Ll, {
    slots: {
      root: E,
      input: w
    },
    slotProps: x,
    fullWidth: l,
    inputComponent: c,
    multiline: u,
    ref: n,
    type: h,
    ...g,
    classes: y
  });
});
process.env.NODE_ENV !== "production" && (zl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, the `input` will not have an underline.
   * @default false
   */
  disableUnderline: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Zr,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
zl.muiName = "Input";
function hP(e) {
  return jt("MuiFilledInput", e);
}
const no = {
  ...ei,
  ...Ut("MuiFilledInput", ["root", "underline", "input", "adornedStart", "adornedEnd", "sizeSmall", "multiline", "hiddenLabel"])
};
function gP(e) {
  return jt("MuiSvgIcon", e);
}
Ut("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const yP = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: r
  } = e, o = {
    root: ["root", t !== "inherit" && `color${Ht(t)}`, `fontSize${Ht(n)}`]
  };
  return Wt(o, gP, r);
}, bP = Ue("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${Ht(n.color)}`], t[`fontSize${Ht(n.fontSize)}`]];
  }
})(nn(({
  theme: e
}) => {
  var t, n, r, o, s, a, l, c, u, d, f, h, g, y;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (o = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : o.call(t, "fill", {
      duration: (r = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : r.shorter
    }),
    variants: [
      {
        props: (m) => !m.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((a = (s = e.typography) == null ? void 0 : s.pxToRem) == null ? void 0 : a.call(s, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((c = (l = e.typography) == null ? void 0 : l.pxToRem) == null ? void 0 : c.call(l, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((d = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : d.call(u, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, m]) => m && m.main).map(([m]) => {
        var v, x;
        return {
          props: {
            color: m
          },
          style: {
            color: (x = (v = (e.vars ?? e).palette) == null ? void 0 : v[m]) == null ? void 0 : x.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (h = (f = (e.vars ?? e).palette) == null ? void 0 : f.action) == null ? void 0 : h.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (y = (g = (e.vars ?? e).palette) == null ? void 0 : g.action) == null ? void 0 : y.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), Aa = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: o,
    className: s,
    color: a = "inherit",
    component: l = "svg",
    fontSize: c = "medium",
    htmlColor: u,
    inheritViewBox: d = !1,
    titleAccess: f,
    viewBox: h = "0 0 24 24",
    ...g
  } = r, y = /* @__PURE__ */ C.isValidElement(o) && o.type === "svg", m = {
    ...r,
    color: a,
    component: l,
    fontSize: c,
    instanceFontSize: t.fontSize,
    inheritViewBox: d,
    viewBox: h,
    hasSvgAsChild: y
  }, v = {};
  d || (v.viewBox = h);
  const x = yP(m);
  return /* @__PURE__ */ Pe(bP, {
    as: l,
    className: Ce(x.root, s),
    focusable: "false",
    color: u,
    "aria-hidden": f ? void 0 : !0,
    role: f ? "img" : void 0,
    ref: n,
    ...v,
    ...g,
    ...y && o.props,
    ownerState: m,
    children: [y ? o.props.children : o, f ? /* @__PURE__ */ P("title", {
      children: f
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (Aa.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: i.oneOfType([i.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: i.oneOfType([i.oneOf(["inherit", "large", "medium", "small"]), i.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: i.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: i.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Reference/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: i.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: i.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: i.string
});
Aa.muiName = "SvgIcon";
function vP(e, t) {
  function n(r, o) {
    return /* @__PURE__ */ P(Aa, {
      "data-testid": process.env.NODE_ENV !== "production" ? `${t}Icon` : void 0,
      ref: o,
      ...r,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = Aa.muiName, /* @__PURE__ */ C.memo(/* @__PURE__ */ C.forwardRef(n));
}
function xP(e, t) {
  const n = e.charCodeAt(2);
  return e[0] === "o" && e[1] === "n" && n >= 65 && n <= 90 && typeof t == "function";
}
function wP(e, t) {
  if (!e)
    return t;
  function n(a, l) {
    const c = {};
    return Object.keys(l).forEach((u) => {
      xP(u, l[u]) && typeof a[u] == "function" && (c[u] = (...d) => {
        a[u](...d), l[u](...d);
      });
    }), c;
  }
  if (typeof e == "function" || typeof t == "function")
    return (a) => {
      const l = typeof t == "function" ? t(a) : t, c = typeof e == "function" ? e({
        ...a,
        ...l
      }) : e, u = Ce(a == null ? void 0 : a.className, l == null ? void 0 : l.className, c == null ? void 0 : c.className), d = n(c, l);
      return {
        ...l,
        ...c,
        ...d,
        ...!!u && {
          className: u
        },
        ...(l == null ? void 0 : l.style) && (c == null ? void 0 : c.style) && {
          style: {
            ...l.style,
            ...c.style
          }
        },
        ...(l == null ? void 0 : l.sx) && (c == null ? void 0 : c.sx) && {
          sx: [...Array.isArray(l.sx) ? l.sx : [l.sx], ...Array.isArray(c.sx) ? c.sx : [c.sx]]
        }
      };
    };
  const r = t, o = n(e, r), s = Ce(r == null ? void 0 : r.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...o,
    ...!!s && {
      className: s
    },
    ...(r == null ? void 0 : r.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...r.style,
        ...e.style
      }
    },
    ...(r == null ? void 0 : r.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(r.sx) ? r.sx : [r.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
const SP = (e) => {
  const {
    classes: t,
    disableUnderline: n,
    startAdornment: r,
    endAdornment: o,
    size: s,
    hiddenLabel: a,
    multiline: l
  } = e, c = {
    root: ["root", !n && "underline", r && "adornedStart", o && "adornedEnd", s === "small" && `size${Ht(s)}`, a && "hiddenLabel", l && "multiline"],
    input: ["input"]
  }, u = Wt(c, hP, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...u
  };
}, TP = Ue(Fl, {
  shouldForwardProp: (e) => yr(e) || e === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...Dl(e, t), !n.disableUnderline && t.underline];
  }
})(nn(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = t ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", r = t ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", o = t ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", s = t ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return {
    position: "relative",
    backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r,
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create("background-color", {
      duration: e.transitions.duration.shorter,
      easing: e.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.hoverBg : o,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r
      }
    },
    [`&.${no.focused}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r
    },
    [`&.${no.disabled}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.disabledBg : s
    },
    variants: [{
      props: ({
        ownerState: a
      }) => !a.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${no.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${no.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})` : n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${no.disabled}, .${no.error}):before`]: {
          borderBottom: `1px solid ${(e.vars || e).palette.text.primary}`
        },
        [`&.${no.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(Vl()).map(([a]) => {
      var l;
      return {
        props: {
          disableUnderline: !1,
          color: a
        },
        style: {
          "&::after": {
            borderBottom: `2px solid ${(l = (e.vars || e).palette[a]) == null ? void 0 : l.main}`
          }
        }
      };
    }), {
      props: ({
        ownerState: a
      }) => a.startAdornment,
      style: {
        paddingLeft: 12
      }
    }, {
      props: ({
        ownerState: a
      }) => a.endAdornment,
      style: {
        paddingRight: 12
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline,
      style: {
        padding: "25px 12px 8px"
      }
    }, {
      props: ({
        ownerState: a,
        size: l
      }) => a.multiline && l === "small",
      style: {
        paddingTop: 21,
        paddingBottom: 4
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline && a.hiddenLabel,
      style: {
        paddingTop: 16,
        paddingBottom: 17
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline && a.hiddenLabel && a.size === "small",
      style: {
        paddingTop: 8,
        paddingBottom: 9
      }
    }]
  };
})), EP = Ue(jl, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: Bl
})(nn(({
  theme: e
}) => ({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12,
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      paddingTop: 21,
      paddingBottom: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel,
    style: {
      paddingTop: 16,
      paddingBottom: 17
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel && t.size === "small",
    style: {
      paddingTop: 8,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      paddingTop: 0,
      paddingBottom: 0,
      paddingLeft: 0,
      paddingRight: 0
    }
  }]
}))), Wl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiFilledInput"
  }), {
    disableUnderline: o = !1,
    components: s = {},
    componentsProps: a,
    fullWidth: l = !1,
    hiddenLabel: c,
    // declare here to prevent spreading to DOM
    inputComponent: u = "input",
    multiline: d = !1,
    slotProps: f,
    slots: h = {},
    type: g = "text",
    ...y
  } = r, m = {
    ...r,
    disableUnderline: o,
    fullWidth: l,
    inputComponent: u,
    multiline: d,
    type: g
  }, v = SP(r), x = {
    root: {
      ownerState: m
    },
    input: {
      ownerState: m
    }
  }, E = f ?? a ? lr(x, f ?? a) : x, w = h.root ?? s.Root ?? TP, S = h.input ?? s.Input ?? EP;
  return /* @__PURE__ */ P(Ll, {
    slots: {
      root: w,
      input: S
    },
    slotProps: E,
    fullWidth: l,
    inputComponent: u,
    multiline: d,
    ref: n,
    type: g,
    ...y,
    classes: v
  });
});
process.env.NODE_ENV !== "production" && (Wl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, the input will not have an underline.
   * @default false
   */
  disableUnderline: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Zr,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
Wl.muiName = "Input";
var Em;
const CP = Ue("fieldset", {
  shouldForwardProp: yr
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), OP = Ue("legend", {
  shouldForwardProp: yr
})(nn(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function Tb(e) {
  const {
    children: t,
    classes: n,
    className: r,
    label: o,
    notched: s,
    ...a
  } = e, l = o != null && o !== "", c = {
    ...e,
    notched: s,
    withLabel: l
  };
  return /* @__PURE__ */ P(CP, {
    "aria-hidden": !0,
    className: r,
    ownerState: c,
    ...a,
    children: /* @__PURE__ */ P(OP, {
      ownerState: c,
      children: l ? /* @__PURE__ */ P("span", {
        children: o
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        Em || (Em = /* @__PURE__ */ P("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (Tb.propTypes = {
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The label.
   */
  label: i.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: i.bool.isRequired,
  /**
   * @ignore
   */
  style: i.object
});
function RP(e) {
  return jt("MuiOutlinedInput", e);
}
const Qn = {
  ...ei,
  ...Ut("MuiOutlinedInput", ["root", "notchedOutline", "input"])
}, $P = (e) => {
  const {
    classes: t
  } = e, r = Wt({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, RP, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...r
  };
}, kP = Ue(Fl, {
  shouldForwardProp: (e) => yr(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: Dl
})(nn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${Qn.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${Qn.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${Qn.focused} .${Qn.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(Vl()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${Qn.focused} .${Qn.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${Qn.error} .${Qn.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${Qn.disabled} .${Qn.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: r
      }) => n.multiline && r === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), PP = Ue(Tb, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(nn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), IP = Ue(jl, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: Bl
})(nn(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), Ul = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var r;
  const o = Xt({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: s = {},
    fullWidth: a = !1,
    inputComponent: l = "input",
    label: c,
    multiline: u = !1,
    notched: d,
    slots: f = {},
    type: h = "text",
    ...g
  } = o, y = $P(o), m = fi(), v = di({
    props: o,
    muiFormControl: m,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), x = {
    ...o,
    color: v.color || "primary",
    disabled: v.disabled,
    error: v.error,
    focused: v.focused,
    formControl: m,
    fullWidth: a,
    hiddenLabel: v.hiddenLabel,
    multiline: u,
    size: v.size,
    type: h
  }, E = f.root ?? s.Root ?? kP, w = f.input ?? s.Input ?? IP;
  return /* @__PURE__ */ P(Ll, {
    slots: {
      root: E,
      input: w
    },
    renderSuffix: (S) => /* @__PURE__ */ P(PP, {
      ownerState: x,
      className: y.notchedOutline,
      label: c != null && c !== "" && v.required ? r || (r = /* @__PURE__ */ Pe(C.Fragment, {
        children: [c, " ", "*"]
      })) : c,
      notched: typeof d < "u" ? d : !!(S.startAdornment || S.filled || S.focused)
    }),
    fullWidth: a,
    inputComponent: l,
    multiline: u,
    ref: n,
    type: h,
    ...g,
    classes: {
      ...y,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (Ul.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Zr,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: i.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: i.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
Ul.muiName = "Input";
function NP(e) {
  return jt("MuiFormLabel", e);
}
const Wi = Ut("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]), AP = (e) => {
  const {
    classes: t,
    color: n,
    focused: r,
    disabled: o,
    error: s,
    filled: a,
    required: l
  } = e, c = {
    root: ["root", `color${Ht(n)}`, o && "disabled", s && "error", a && "filled", r && "focused", l && "required"],
    asterisk: ["asterisk", s && "error"]
  };
  return Wt(c, NP, t);
}, MP = Ue("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color === "secondary" && t.colorSecondary, n.filled && t.filled];
  }
})(nn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.body1,
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  variants: [...Object.entries(e.palette).filter(Vl()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${Wi.focused}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    props: {},
    style: {
      [`&.${Wi.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      },
      [`&.${Wi.error}`]: {
        color: (e.vars || e).palette.error.main
      }
    }
  }]
}))), _P = Ue("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (e, t) => t.asterisk
})(nn(({
  theme: e
}) => ({
  [`&.${Wi.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}))), Eb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiFormLabel"
  }), {
    children: o,
    className: s,
    color: a,
    component: l = "label",
    disabled: c,
    error: u,
    filled: d,
    focused: f,
    required: h,
    ...g
  } = r, y = fi(), m = di({
    props: r,
    muiFormControl: y,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  }), v = {
    ...r,
    color: m.color || "primary",
    component: l,
    disabled: m.disabled,
    error: m.error,
    filled: m.filled,
    focused: m.focused,
    required: m.required
  }, x = AP(v);
  return /* @__PURE__ */ Pe(MP, {
    as: l,
    ownerState: v,
    className: Ce(x.root, s),
    ref: n,
    ...g,
    children: [o, m.required && /* @__PURE__ */ Pe(_P, {
      ownerState: v,
      "aria-hidden": !0,
      className: x.asterisk,
      children: [" ", "*"]
    })]
  });
});
process.env.NODE_ENV !== "production" && (Eb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: i.oneOfType([i.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: i.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: i.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: i.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
function DP(e) {
  return jt("MuiInputLabel", e);
}
Ut("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]);
const BP = (e) => {
  const {
    classes: t,
    formControl: n,
    size: r,
    shrink: o,
    disableAnimation: s,
    variant: a,
    required: l
  } = e, c = {
    root: ["root", n && "formControl", !s && "animated", o && "shrink", r && r !== "medium" && `size${Ht(r)}`, a],
    asterisk: [l && "asterisk"]
  }, u = Wt(c, DP, t);
  return {
    ...t,
    // forward the focused, disabled, etc. classes to the FormLabel
    ...u
  };
}, FP = Ue(Eb, {
  shouldForwardProp: (e) => yr(e) || e === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${Wi.asterisk}`]: t.asterisk
    }, t.root, n.formControl && t.formControl, n.size === "small" && t.sizeSmall, n.shrink && t.shrink, !n.disableAnimation && t.animated, n.focused && t.focused, t[n.variant]];
  }
})(nn(({
  theme: e
}) => ({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%",
  variants: [{
    props: ({
      ownerState: t
    }) => t.formControl,
    style: {
      position: "absolute",
      left: 0,
      top: 0,
      // slight alteration to spec spacing to match visual spec result
      transform: "translate(0, 20px) scale(1)"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      // Compensation for the `Input.inputSizeSmall` style.
      transform: "translate(0, 17px) scale(1)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.shrink,
    style: {
      transform: "translate(0, -1.5px) scale(0.75)",
      transformOrigin: "top left",
      maxWidth: "133%"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableAnimation,
    style: {
      transition: e.transitions.create(["color", "transform", "max-width"], {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      // Chrome's autofill feature gives the input field a yellow background.
      // Since the input field is behind the label in the HTML tree,
      // the input field is drawn last and hides the label with an opaque background color.
      // zIndex: 1 will raise the label above opaque background-colors of input.
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(12px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "filled",
      size: "small"
    },
    style: {
      transform: "translate(12px, 13px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "filled" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      transform: "translate(12px, 7px) scale(0.75)",
      maxWidth: "calc(133% - 24px)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n,
      size: r
    }) => t === "filled" && n.shrink && r === "small",
    style: {
      transform: "translate(12px, 4px) scale(0.75)"
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      // see comment above on filled.zIndex
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(14px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "outlined",
      size: "small"
    },
    style: {
      transform: "translate(14px, 9px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "outlined" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      // Theoretically, we should have (8+5)*2/0.75 = 34px
      // but it feels a better when it bleeds a bit on the left, so 32px.
      maxWidth: "calc(133% - 32px)",
      transform: "translate(14px, -9px) scale(0.75)"
    }
  }]
}))), Cb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    name: "MuiInputLabel",
    props: t
  }), {
    disableAnimation: o = !1,
    margin: s,
    shrink: a,
    variant: l,
    className: c,
    ...u
  } = r, d = fi();
  let f = a;
  typeof f > "u" && d && (f = d.filled || d.focused || d.adornedStart);
  const h = di({
    props: r,
    muiFormControl: d,
    states: ["size", "variant", "required", "focused"]
  }), g = {
    ...r,
    disableAnimation: o,
    formControl: d,
    shrink: f,
    size: h.size,
    variant: h.variant,
    required: h.required,
    focused: h.focused
  }, y = BP(g);
  return /* @__PURE__ */ P(FP, {
    "data-shrink": f,
    ref: n,
    className: Ce(y.root, c),
    ...u,
    ownerState: g,
    classes: y
  });
});
process.env.NODE_ENV !== "production" && (Cb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: i.oneOfType([i.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), i.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: i.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: i.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: i.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: i.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: i.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: i.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
});
function jP(e) {
  return jt("MuiFormControl", e);
}
Ut("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]);
const LP = (e) => {
  const {
    classes: t,
    margin: n,
    fullWidth: r
  } = e, o = {
    root: ["root", n !== "none" && `margin${Ht(n)}`, r && "fullWidth"]
  };
  return Wt(o, jP, t);
}, VP = Ue("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`margin${Ht(n.margin)}`], n.fullWidth && t.fullWidth];
  }
})({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top",
  // Fix alignment issue on Safari.
  variants: [{
    props: {
      margin: "normal"
    },
    style: {
      marginTop: 16,
      marginBottom: 8
    }
  }, {
    props: {
      margin: "dense"
    },
    style: {
      marginTop: 8,
      marginBottom: 4
    }
  }, {
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }]
}), Ob = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiFormControl"
  }), {
    children: o,
    className: s,
    color: a = "primary",
    component: l = "div",
    disabled: c = !1,
    error: u = !1,
    focused: d,
    fullWidth: f = !1,
    hiddenLabel: h = !1,
    margin: g = "none",
    required: y = !1,
    size: m = "medium",
    variant: v = "outlined",
    ...x
  } = r, E = {
    ...r,
    color: a,
    component: l,
    disabled: c,
    error: u,
    fullWidth: f,
    hiddenLabel: h,
    margin: g,
    required: y,
    size: m,
    variant: v
  }, w = LP(E), [S, b] = C.useState(() => {
    let M = !1;
    return o && C.Children.forEach(o, (z) => {
      if (!yc(z, ["Input", "Select"]))
        return;
      const Y = yc(z, ["Select"]) ? z.props.input : z;
      Y && sP(Y.props) && (M = !0);
    }), M;
  }), [T, R] = C.useState(() => {
    let M = !1;
    return o && C.Children.forEach(o, (z) => {
      yc(z, ["Input", "Select"]) && (Na(z.props, !0) || Na(z.props.inputProps, !0)) && (M = !0);
    }), M;
  }), [$, I] = C.useState(!1);
  c && $ && I(!1);
  const p = d !== void 0 && !c ? d : $;
  let O;
  const k = C.useRef(!1);
  process.env.NODE_ENV !== "production" && (O = () => (k.current && console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join(`
`)), k.current = !0, () => {
    k.current = !1;
  }));
  const A = C.useCallback(() => {
    R(!0);
  }, []), D = C.useCallback(() => {
    R(!1);
  }, []), _ = C.useMemo(() => ({
    adornedStart: S,
    setAdornedStart: b,
    color: a,
    disabled: c,
    error: u,
    filled: T,
    focused: p,
    fullWidth: f,
    hiddenLabel: h,
    size: m,
    onBlur: () => {
      I(!1);
    },
    onFocus: () => {
      I(!0);
    },
    onEmpty: D,
    onFilled: A,
    registerEffect: O,
    required: y,
    variant: v
  }), [S, a, c, u, T, p, f, h, O, D, A, y, m, v]);
  return /* @__PURE__ */ P(_l.Provider, {
    value: _,
    children: /* @__PURE__ */ P(VP, {
      as: l,
      ownerState: E,
      className: Ce(w.root, s),
      ref: n,
      ...x,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (Ob.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: i.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: i.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: i.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: i.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
});
function zP(e) {
  return jt("MuiFormHelperText", e);
}
const Cm = Ut("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]);
var Om;
const WP = (e) => {
  const {
    classes: t,
    contained: n,
    size: r,
    disabled: o,
    error: s,
    filled: a,
    focused: l,
    required: c
  } = e, u = {
    root: ["root", o && "disabled", s && "error", r && `size${Ht(r)}`, n && "contained", l && "focused", a && "filled", c && "required"]
  };
  return Wt(u, zP, t);
}, UP = Ue("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size && t[`size${Ht(n.size)}`], n.contained && t.contained, n.filled && t.filled];
  }
})(nn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.caption,
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${Cm.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${Cm.error}`]: {
    color: (e.vars || e).palette.error.main
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginTop: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.contained,
    style: {
      marginLeft: 14,
      marginRight: 14
    }
  }]
}))), Rb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiFormHelperText"
  }), {
    children: o,
    className: s,
    component: a = "p",
    disabled: l,
    error: c,
    filled: u,
    focused: d,
    margin: f,
    required: h,
    variant: g,
    ...y
  } = r, m = fi(), v = di({
    props: r,
    muiFormControl: m,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  }), x = {
    ...r,
    component: a,
    contained: v.variant === "filled" || v.variant === "outlined",
    variant: v.variant,
    size: v.size,
    disabled: v.disabled,
    error: v.error,
    filled: v.filled,
    focused: v.focused,
    required: v.required
  };
  delete x.ownerState;
  const E = WP(x);
  return /* @__PURE__ */ P(UP, {
    as: a,
    className: Ce(E.root, s),
    ref: n,
    ...y,
    ownerState: x,
    children: o === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      Om || (Om = /* @__PURE__ */ P("span", {
        className: "notranslate",
        "aria-hidden": !0,
        children: "​"
      }))
    ) : o
  });
});
process.env.NODE_ENV !== "production" && (Rb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: i.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: i.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: i.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: i.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: i.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   */
  variant: i.oneOfType([i.oneOf(["filled", "outlined", "standard"]), i.string])
});
const $b = /* @__PURE__ */ C.createContext({});
process.env.NODE_ENV !== "production" && ($b.displayName = "ListContext");
function HP(e) {
  return jt("MuiList", e);
}
Ut("MuiList", ["root", "padding", "dense", "subheader"]);
const qP = (e) => {
  const {
    classes: t,
    disablePadding: n,
    dense: r,
    subheader: o
  } = e;
  return Wt({
    root: ["root", !n && "padding", r && "dense", o && "subheader"]
  }, HP, t);
}, YP = Ue("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.disablePadding && t.padding, n.dense && t.dense, n.subheader && t.subheader];
  }
})({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative",
  variants: [{
    props: ({
      ownerState: e
    }) => !e.disablePadding,
    style: {
      paddingTop: 8,
      paddingBottom: 8
    }
  }, {
    props: ({
      ownerState: e
    }) => e.subheader,
    style: {
      paddingTop: 0
    }
  }]
}), kb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiList"
  }), {
    children: o,
    className: s,
    component: a = "ul",
    dense: l = !1,
    disablePadding: c = !1,
    subheader: u,
    ...d
  } = r, f = C.useMemo(() => ({
    dense: l
  }), [l]), h = {
    ...r,
    component: a,
    dense: l,
    disablePadding: c
  }, g = qP(h);
  return /* @__PURE__ */ P($b.Provider, {
    value: f,
    children: /* @__PURE__ */ Pe(YP, {
      as: a,
      className: Ce(g.root, s),
      ref: n,
      ownerState: h,
      ...d,
      children: [u, o]
    })
  });
});
process.env.NODE_ENV !== "production" && (kb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: i.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: i.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
function bc(e, t, n) {
  return e === t ? e.firstChild : t && t.nextElementSibling ? t.nextElementSibling : n ? null : e.firstChild;
}
function Rm(e, t, n) {
  return e === t ? n ? e.firstChild : e.lastChild : t && t.previousElementSibling ? t.previousElementSibling : n ? null : e.lastChild;
}
function Pb(e, t) {
  if (t === void 0)
    return !0;
  let n = e.innerText;
  return n === void 0 && (n = e.textContent), n = n.trim().toLowerCase(), n.length === 0 ? !1 : t.repeating ? n[0] === t.keys[0] : n.startsWith(t.keys.join(""));
}
function wi(e, t, n, r, o, s) {
  let a = !1, l = o(e, t, t ? n : !1);
  for (; l; ) {
    if (l === e.firstChild) {
      if (a)
        return !1;
      a = !0;
    }
    const c = r ? !1 : l.disabled || l.getAttribute("aria-disabled") === "true";
    if (!l.hasAttribute("tabindex") || !Pb(l, s) || c)
      l = o(e, l, n);
    else
      return l.focus(), !0;
  }
  return !1;
}
const Ib = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: r,
    autoFocus: o = !1,
    autoFocusItem: s = !1,
    children: a,
    className: l,
    disabledItemsFocusable: c = !1,
    disableListWrap: u = !1,
    onKeyDown: d,
    variant: f = "selectedMenu",
    ...h
  } = t, g = C.useRef(null), y = C.useRef({
    keys: [],
    repeating: !0,
    previousKeyMatched: !0,
    lastTime: null
  });
  ho(() => {
    o && g.current.focus();
  }, [o]), C.useImperativeHandle(r, () => ({
    adjustStyleForScrollbar: (w, {
      direction: S
    }) => {
      const b = !g.current.style.width;
      if (w.clientHeight < g.current.clientHeight && b) {
        const T = `${mb(kr(w))}px`;
        g.current.style[S === "rtl" ? "paddingLeft" : "paddingRight"] = T, g.current.style.width = `calc(100% + ${T})`;
      }
      return g.current;
    }
  }), []);
  const m = (w) => {
    const S = g.current, b = w.key;
    if (w.ctrlKey || w.metaKey || w.altKey) {
      d && d(w);
      return;
    }
    const R = Yn(S).activeElement;
    if (b === "ArrowDown")
      w.preventDefault(), wi(S, R, u, c, bc);
    else if (b === "ArrowUp")
      w.preventDefault(), wi(S, R, u, c, Rm);
    else if (b === "Home")
      w.preventDefault(), wi(S, null, u, c, bc);
    else if (b === "End")
      w.preventDefault(), wi(S, null, u, c, Rm);
    else if (b.length === 1) {
      const $ = y.current, I = b.toLowerCase(), p = performance.now();
      $.keys.length > 0 && (p - $.lastTime > 500 ? ($.keys = [], $.repeating = !0, $.previousKeyMatched = !0) : $.repeating && I !== $.keys[0] && ($.repeating = !1)), $.lastTime = p, $.keys.push(I);
      const O = R && !$.repeating && Pb(R, $);
      $.previousKeyMatched && (O || wi(S, R, !1, c, bc, $)) ? w.preventDefault() : $.previousKeyMatched = !1;
    }
    d && d(w);
  }, v = Ln(g, n);
  let x = -1;
  C.Children.forEach(a, (w, S) => {
    if (!/* @__PURE__ */ C.isValidElement(w)) {
      x === S && (x += 1, x >= a.length && (x = -1));
      return;
    }
    process.env.NODE_ENV !== "production" && En.isFragment(w) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), w.props.disabled || (f === "selectedMenu" && w.props.selected || x === -1) && (x = S), x === S && (w.props.disabled || w.props.muiSkipListHighlight || w.type.muiSkipListHighlight) && (x += 1, x >= a.length && (x = -1));
  });
  const E = C.Children.map(a, (w, S) => {
    if (S === x) {
      const b = {};
      return s && (b.autoFocus = !0), w.props.tabIndex === void 0 && f === "selectedMenu" && (b.tabIndex = 0), /* @__PURE__ */ C.cloneElement(w, b);
    }
    return w;
  });
  return /* @__PURE__ */ P(kb, {
    role: "menu",
    ref: v,
    className: l,
    onKeyDown: m,
    tabIndex: o ? 0 : -1,
    ...h,
    children: E
  });
});
process.env.NODE_ENV !== "production" && (Ib.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: i.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: i.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: i.node,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: i.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: i.bool,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: i.oneOf(["menu", "selectedMenu"])
});
const Nb = (e) => e.scrollTop;
function Ma(e, t) {
  const {
    timeout: n,
    easing: r,
    style: o = {}
  } = e;
  return {
    duration: o.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: o.transitionTimingFunction ?? (typeof r == "object" ? r[t.mode] : r),
    delay: o.transitionDelay
  };
}
function hu(e) {
  return `scale(${e}, ${e ** 2})`;
}
const GP = {
  entering: {
    opacity: 1,
    transform: hu(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, vc = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), _a = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    addEndListener: r,
    appear: o = !0,
    children: s,
    easing: a,
    in: l,
    onEnter: c,
    onEntered: u,
    onEntering: d,
    onExit: f,
    onExited: h,
    onExiting: g,
    style: y,
    timeout: m = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: v = Rn,
    ...x
  } = t, E = eP(), w = C.useRef(), S = Ld(), b = C.useRef(null), T = Ln(b, Os(s), n), R = (_) => (M) => {
    if (_) {
      const z = b.current;
      M === void 0 ? _(z) : _(z, M);
    }
  }, $ = R(d), I = R((_, M) => {
    Nb(_);
    const {
      duration: z,
      delay: Y,
      easing: H
    } = Ma({
      style: y,
      timeout: m,
      easing: a
    }, {
      mode: "enter"
    });
    let j;
    m === "auto" ? (j = S.transitions.getAutoHeightDuration(_.clientHeight), w.current = j) : j = z, _.style.transition = [S.transitions.create("opacity", {
      duration: j,
      delay: Y
    }), S.transitions.create("transform", {
      duration: vc ? j : j * 0.666,
      delay: Y,
      easing: H
    })].join(","), c && c(_, M);
  }), p = R(u), O = R(g), k = R((_) => {
    const {
      duration: M,
      delay: z,
      easing: Y
    } = Ma({
      style: y,
      timeout: m,
      easing: a
    }, {
      mode: "exit"
    });
    let H;
    m === "auto" ? (H = S.transitions.getAutoHeightDuration(_.clientHeight), w.current = H) : H = M, _.style.transition = [S.transitions.create("opacity", {
      duration: H,
      delay: z
    }), S.transitions.create("transform", {
      duration: vc ? H : H * 0.666,
      delay: vc ? z : z || H * 0.333,
      easing: Y
    })].join(","), _.style.opacity = 0, _.style.transform = hu(0.75), f && f(_);
  }), A = R(h);
  return /* @__PURE__ */ P(v, {
    appear: o,
    in: l,
    nodeRef: b,
    onEnter: I,
    onEntered: p,
    onEntering: $,
    onExit: k,
    onExited: A,
    onExiting: O,
    addEndListener: (_) => {
      m === "auto" && E.start(w.current || 0, _), r && r(b.current, _);
    },
    timeout: m === "auto" ? null : m,
    ...x,
    children: (_, {
      ownerState: M,
      ...z
    }) => /* @__PURE__ */ C.cloneElement(s, {
      style: {
        opacity: 0,
        transform: hu(0.75),
        visibility: _ === "exited" && !l ? "hidden" : void 0,
        ...GP[_],
        ...y,
        ...s.props.style
      },
      ref: T,
      ...z
    })
  });
});
process.env.NODE_ENV !== "production" && (_a.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: Cs.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
_a && (_a.muiSupportAuto = !0);
function KP(e) {
  const t = Yn(e);
  return t.body === e ? kr(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function Ui(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function $m(e) {
  return parseInt(kr(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function XP(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), r = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || r;
}
function km(e, t, n, r, o) {
  const s = [t, n, ...r];
  [].forEach.call(e.children, (a) => {
    const l = !s.includes(a), c = !XP(a);
    l && c && Ui(a, o);
  });
}
function xc(e, t) {
  let n = -1;
  return e.some((r, o) => t(r) ? (n = o, !0) : !1), n;
}
function QP(e, t) {
  const n = [], r = e.container;
  if (!t.disableScrollLock) {
    if (KP(r)) {
      const a = mb(kr(r));
      n.push({
        value: r.style.paddingRight,
        property: "padding-right",
        el: r
      }), r.style.paddingRight = `${$m(r) + a}px`;
      const l = Yn(r).querySelectorAll(".mui-fixed");
      [].forEach.call(l, (c) => {
        n.push({
          value: c.style.paddingRight,
          property: "padding-right",
          el: c
        }), c.style.paddingRight = `${$m(c) + a}px`;
      });
    }
    let s;
    if (r.parentNode instanceof DocumentFragment)
      s = Yn(r).body;
    else {
      const a = r.parentElement, l = kr(r);
      s = (a == null ? void 0 : a.nodeName) === "HTML" && l.getComputedStyle(a).overflowY === "scroll" ? a : r;
    }
    n.push({
      value: s.style.overflow,
      property: "overflow",
      el: s
    }, {
      value: s.style.overflowX,
      property: "overflow-x",
      el: s
    }, {
      value: s.style.overflowY,
      property: "overflow-y",
      el: s
    }), s.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: s,
      el: a,
      property: l
    }) => {
      s ? a.style.setProperty(l, s) : a.style.removeProperty(l);
    });
  };
}
function JP(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
class ZP {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let r = this.modals.indexOf(t);
    if (r !== -1)
      return r;
    r = this.modals.length, this.modals.push(t), t.modalRef && Ui(t.modalRef, !1);
    const o = JP(n);
    km(n, t.mount, t.modalRef, o, !0);
    const s = xc(this.containers, (a) => a.container === n);
    return s !== -1 ? (this.containers[s].modals.push(t), r) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: o
    }), r);
  }
  mount(t, n) {
    const r = xc(this.containers, (s) => s.modals.includes(t)), o = this.containers[r];
    o.restore || (o.restore = QP(o, n));
  }
  remove(t, n = !0) {
    const r = this.modals.indexOf(t);
    if (r === -1)
      return r;
    const o = xc(this.containers, (a) => a.modals.includes(t)), s = this.containers[o];
    if (s.modals.splice(s.modals.indexOf(t), 1), this.modals.splice(r, 1), s.modals.length === 0)
      s.restore && s.restore(), t.modalRef && Ui(t.modalRef, n), km(s.container, t.mount, t.modalRef, s.hiddenSiblings, !1), this.containers.splice(o, 1);
    else {
      const a = s.modals[s.modals.length - 1];
      a.modalRef && Ui(a.modalRef, !1);
    }
    return r;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
}
const eI = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function tI(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function nI(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (r) => e.ownerDocument.querySelector(`input[type="radio"]${r}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function rI(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || nI(e));
}
function oI(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(eI)).forEach((r, o) => {
    const s = tI(r);
    s === -1 || !rI(r) || (s === 0 ? t.push(r) : n.push({
      documentOrder: o,
      tabIndex: s,
      node: r
    }));
  }), n.sort((r, o) => r.tabIndex === o.tabIndex ? r.documentOrder - o.documentOrder : r.tabIndex - o.tabIndex).map((r) => r.node).concat(t);
}
function iI() {
  return !0;
}
function Da(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: r = !1,
    disableRestoreFocus: o = !1,
    getTabbable: s = oI,
    isEnabled: a = iI,
    open: l
  } = e, c = C.useRef(!1), u = C.useRef(null), d = C.useRef(null), f = C.useRef(null), h = C.useRef(null), g = C.useRef(!1), y = C.useRef(null), m = Ln(Os(t), y), v = C.useRef(null);
  C.useEffect(() => {
    !l || !y.current || (g.current = !n);
  }, [n, l]), C.useEffect(() => {
    if (!l || !y.current)
      return;
    const w = Yn(y.current);
    return y.current.contains(w.activeElement) || (y.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), y.current.setAttribute("tabIndex", "-1")), g.current && y.current.focus()), () => {
      o || (f.current && f.current.focus && (c.current = !0, f.current.focus()), f.current = null);
    };
  }, [l]), C.useEffect(() => {
    if (!l || !y.current)
      return;
    const w = Yn(y.current), S = (R) => {
      v.current = R, !(r || !a() || R.key !== "Tab") && w.activeElement === y.current && R.shiftKey && (c.current = !0, d.current && d.current.focus());
    }, b = () => {
      var I, p;
      const R = y.current;
      if (R === null)
        return;
      if (!w.hasFocus() || !a() || c.current) {
        c.current = !1;
        return;
      }
      if (R.contains(w.activeElement) || r && w.activeElement !== u.current && w.activeElement !== d.current)
        return;
      if (w.activeElement !== h.current)
        h.current = null;
      else if (h.current !== null)
        return;
      if (!g.current)
        return;
      let $ = [];
      if ((w.activeElement === u.current || w.activeElement === d.current) && ($ = s(y.current)), $.length > 0) {
        const O = !!((I = v.current) != null && I.shiftKey && ((p = v.current) == null ? void 0 : p.key) === "Tab"), k = $[0], A = $[$.length - 1];
        typeof k != "string" && typeof A != "string" && (O ? A.focus() : k.focus());
      } else
        R.focus();
    };
    w.addEventListener("focusin", b), w.addEventListener("keydown", S, !0);
    const T = setInterval(() => {
      w.activeElement && w.activeElement.tagName === "BODY" && b();
    }, 50);
    return () => {
      clearInterval(T), w.removeEventListener("focusin", b), w.removeEventListener("keydown", S, !0);
    };
  }, [n, r, o, a, l, s]);
  const x = (w) => {
    f.current === null && (f.current = w.relatedTarget), g.current = !0, h.current = w.target;
    const S = t.props.onFocus;
    S && S(w);
  }, E = (w) => {
    f.current === null && (f.current = w.relatedTarget), g.current = !0;
  };
  return /* @__PURE__ */ Pe(C.Fragment, {
    children: [/* @__PURE__ */ P("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: u,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ C.cloneElement(t, {
      ref: m,
      onFocus: x
    }), /* @__PURE__ */ P("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: d,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (Da.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: Cs,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: i.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: i.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: i.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: i.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: i.func,
  /**
   * If `true`, focus is locked.
   */
  open: i.bool.isRequired
});
process.env.NODE_ENV !== "production" && (Da.propTypes = fb(Da.propTypes));
function sI(e) {
  return typeof e == "function" ? e() : e;
}
const Ba = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    children: r,
    container: o,
    disablePortal: s = !1
  } = t, [a, l] = C.useState(null), c = Ln(/* @__PURE__ */ C.isValidElement(r) ? Os(r) : null, n);
  if (ho(() => {
    s || l(sI(o) || document.body);
  }, [o, s]), ho(() => {
    if (a && !s)
      return gm(n, a), () => {
        gm(n, null);
      };
  }, [n, a, s]), s) {
    if (/* @__PURE__ */ C.isValidElement(r)) {
      const u = {
        ref: c
      };
      return /* @__PURE__ */ C.cloneElement(r, u);
    }
    return r;
  }
  return a && /* @__PURE__ */ ah.createPortal(r, a);
});
process.env.NODE_ENV !== "production" && (Ba.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: i.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([cs, i.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool
});
process.env.NODE_ENV !== "production" && (Ba.propTypes = fb(Ba.propTypes));
function sn(e, t) {
  const {
    className: n,
    elementType: r,
    ownerState: o,
    externalForwardedProps: s,
    internalForwardedProps: a,
    shouldForwardComponentProp: l = !1,
    ...c
  } = t, {
    component: u,
    slots: d = {
      [e]: void 0
    },
    slotProps: f = {
      [e]: void 0
    },
    ...h
  } = s, g = d[e] || r, y = wb(f[e], o), {
    props: {
      component: m,
      ...v
    },
    internalRef: x
  } = xb({
    className: n,
    ...c,
    externalForwardedProps: e === "root" ? h : void 0,
    externalSlotProps: y
  }), E = Ln(x, y == null ? void 0 : y.ref, t.ref), w = e === "root" ? m || u : m, S = bb(g, {
    ...e === "root" && !u && !d[e] && a,
    ...e !== "root" && !d[e] && a,
    ...v,
    ...w && !l && {
      as: w
    },
    ...w && l && {
      component: w
    },
    ref: E
  }, o);
  return [g, S];
}
const aI = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, Ab = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Ld(), o = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: s,
    appear: a = !0,
    children: l,
    easing: c,
    in: u,
    onEnter: d,
    onEntered: f,
    onEntering: h,
    onExit: g,
    onExited: y,
    onExiting: m,
    style: v,
    timeout: x = o,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: E = Rn,
    ...w
  } = t, S = C.useRef(null), b = Ln(S, Os(l), n), T = (D) => (_) => {
    if (D) {
      const M = S.current;
      _ === void 0 ? D(M) : D(M, _);
    }
  }, R = T(h), $ = T((D, _) => {
    Nb(D);
    const M = Ma({
      style: v,
      timeout: x,
      easing: c
    }, {
      mode: "enter"
    });
    D.style.webkitTransition = r.transitions.create("opacity", M), D.style.transition = r.transitions.create("opacity", M), d && d(D, _);
  }), I = T(f), p = T(m), O = T((D) => {
    const _ = Ma({
      style: v,
      timeout: x,
      easing: c
    }, {
      mode: "exit"
    });
    D.style.webkitTransition = r.transitions.create("opacity", _), D.style.transition = r.transitions.create("opacity", _), g && g(D);
  }), k = T(y);
  return /* @__PURE__ */ P(E, {
    appear: a,
    in: u,
    nodeRef: S,
    onEnter: $,
    onEntered: I,
    onEntering: R,
    onExit: O,
    onExited: k,
    onExiting: p,
    addEndListener: (D) => {
      s && s(S.current, D);
    },
    timeout: x,
    ...w,
    children: (D, {
      ownerState: _,
      ...M
    }) => /* @__PURE__ */ C.cloneElement(l, {
      style: {
        opacity: 0,
        visibility: D === "exited" && !u ? "hidden" : void 0,
        ...aI[D],
        ...v,
        ...l.props.style
      },
      ref: b,
      ...M
    })
  });
});
process.env.NODE_ENV !== "production" && (Ab.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: Cs.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function lI(e) {
  return jt("MuiBackdrop", e);
}
Ut("MuiBackdrop", ["root", "invisible"]);
const cI = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return Wt({
    root: ["root", n && "invisible"]
  }, lI, t);
}, uI = Ue("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), Mb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: o,
    className: s,
    component: a = "div",
    invisible: l = !1,
    open: c,
    components: u = {},
    componentsProps: d = {},
    slotProps: f = {},
    slots: h = {},
    TransitionComponent: g,
    transitionDuration: y,
    ...m
  } = r, v = {
    ...r,
    component: a,
    invisible: l
  }, x = cI(v), E = {
    transition: g,
    root: u.Root,
    ...h
  }, w = {
    ...d,
    ...f
  }, S = {
    slots: E,
    slotProps: w
  }, [b, T] = sn("root", {
    elementType: uI,
    externalForwardedProps: S,
    className: Ce(x.root, s),
    ownerState: v
  }), [R, $] = sn("transition", {
    elementType: Ab,
    externalForwardedProps: S,
    ownerState: v
  });
  return /* @__PURE__ */ P(R, {
    in: c,
    timeout: y,
    ...m,
    ...$,
    children: /* @__PURE__ */ P(b, {
      "aria-hidden": !0,
      ...T,
      classes: x,
      ref: n,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (Mb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    root: i.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: i.bool,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: i.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function dI(e) {
  return typeof e == "function" ? e() : e;
}
function fI(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const Pm = () => {
}, Ks = new ZP();
function pI(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: r = !1,
    closeAfterTransition: o = !1,
    onTransitionEnter: s,
    onTransitionExited: a,
    children: l,
    onClose: c,
    open: u,
    rootRef: d
  } = e, f = C.useRef({}), h = C.useRef(null), g = C.useRef(null), y = Ln(g, d), [m, v] = C.useState(!u), x = fI(l);
  let E = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (E = !1);
  const w = () => Yn(h.current), S = () => (f.current.modalRef = g.current, f.current.mount = h.current, f.current), b = () => {
    Ks.mount(S(), {
      disableScrollLock: r
    }), g.current && (g.current.scrollTop = 0);
  }, T = fu(() => {
    const _ = dI(t) || w().body;
    Ks.add(S(), _), g.current && b();
  }), R = () => Ks.isTopModal(S()), $ = fu((_) => {
    h.current = _, _ && (u && R() ? b() : g.current && Ui(g.current, E));
  }), I = C.useCallback(() => {
    Ks.remove(S(), E);
  }, [E]);
  C.useEffect(() => () => {
    I();
  }, [I]), C.useEffect(() => {
    u ? T() : (!x || !o) && I();
  }, [u, I, x, o, T]);
  const p = (_) => (M) => {
    var z;
    (z = _.onKeyDown) == null || z.call(_, M), !(M.key !== "Escape" || M.which === 229 || // Wait until IME is settled.
    !R()) && (n || (M.stopPropagation(), c && c(M, "escapeKeyDown")));
  }, O = (_) => (M) => {
    var z;
    (z = _.onClick) == null || z.call(_, M), M.target === M.currentTarget && c && c(M, "backdropClick");
  };
  return {
    getRootProps: (_ = {}) => {
      const M = vb(e);
      delete M.onTransitionEnter, delete M.onTransitionExited;
      const z = {
        ...M,
        ..._
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...z,
        onKeyDown: p(z),
        ref: y
      };
    },
    getBackdropProps: (_ = {}) => {
      const M = _;
      return {
        "aria-hidden": !0,
        ...M,
        onClick: O(M),
        open: u
      };
    },
    getTransitionProps: () => {
      const _ = () => {
        v(!1), s && s();
      }, M = () => {
        v(!0), a && a(), o && I();
      };
      return {
        onEnter: hm(_, (l == null ? void 0 : l.props.onEnter) ?? Pm),
        onExited: hm(M, (l == null ? void 0 : l.props.onExited) ?? Pm)
      };
    },
    rootRef: y,
    portalRef: $,
    isTopModal: R,
    exited: m,
    hasTransition: x
  };
}
function mI(e) {
  return jt("MuiModal", e);
}
Ut("MuiModal", ["root", "hidden", "backdrop"]);
const hI = (e) => {
  const {
    open: t,
    exited: n,
    classes: r
  } = e;
  return Wt({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, mI, r);
}, gI = Ue("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(nn(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), yI = Ue(Mb, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), _b = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: o = yI,
    BackdropProps: s,
    classes: a,
    className: l,
    closeAfterTransition: c = !1,
    children: u,
    container: d,
    component: f,
    components: h = {},
    componentsProps: g = {},
    disableAutoFocus: y = !1,
    disableEnforceFocus: m = !1,
    disableEscapeKeyDown: v = !1,
    disablePortal: x = !1,
    disableRestoreFocus: E = !1,
    disableScrollLock: w = !1,
    hideBackdrop: S = !1,
    keepMounted: b = !1,
    onClose: T,
    onTransitionEnter: R,
    onTransitionExited: $,
    open: I,
    slotProps: p = {},
    slots: O = {},
    // eslint-disable-next-line react/prop-types
    theme: k,
    ...A
  } = r, D = {
    ...r,
    closeAfterTransition: c,
    disableAutoFocus: y,
    disableEnforceFocus: m,
    disableEscapeKeyDown: v,
    disablePortal: x,
    disableRestoreFocus: E,
    disableScrollLock: w,
    hideBackdrop: S,
    keepMounted: b
  }, {
    getRootProps: _,
    getBackdropProps: M,
    getTransitionProps: z,
    portalRef: Y,
    isTopModal: H,
    exited: j,
    hasTransition: W
  } = pI({
    ...D,
    rootRef: n
  }), ee = {
    ...D,
    exited: j
  }, K = hI(ee), oe = {};
  if (u.props.tabIndex === void 0 && (oe.tabIndex = "-1"), W) {
    const {
      onEnter: Q,
      onExited: ie
    } = z();
    oe.onEnter = Q, oe.onExited = ie;
  }
  const ne = {
    slots: {
      root: h.Root,
      backdrop: h.Backdrop,
      ...O
    },
    slotProps: {
      ...g,
      ...p
    }
  }, [se, de] = sn("root", {
    ref: n,
    elementType: gI,
    externalForwardedProps: {
      ...ne,
      ...A,
      component: f
    },
    getSlotProps: _,
    ownerState: ee,
    className: Ce(l, K == null ? void 0 : K.root, !ee.open && ee.exited && (K == null ? void 0 : K.hidden))
  }), [X, ae] = sn("backdrop", {
    ref: s == null ? void 0 : s.ref,
    elementType: o,
    externalForwardedProps: ne,
    shouldForwardComponentProp: !0,
    additionalProps: s,
    getSlotProps: (Q) => M({
      ...Q,
      onClick: (ie) => {
        Q != null && Q.onClick && Q.onClick(ie);
      }
    }),
    className: Ce(s == null ? void 0 : s.className, K == null ? void 0 : K.backdrop),
    ownerState: ee
  });
  return !b && !I && (!W || j) ? null : /* @__PURE__ */ P(Ba, {
    ref: Y,
    container: d,
    disablePortal: x,
    children: /* @__PURE__ */ Pe(se, {
      ...de,
      children: [!S && o ? /* @__PURE__ */ P(X, {
        ...ae
      }) : null, /* @__PURE__ */ P(Da, {
        disableEnforceFocus: m,
        disableAutoFocus: y,
        disableRestoreFocus: E,
        isEnabled: H,
        open: I,
        children: /* @__PURE__ */ C.cloneElement(u, oe)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (_b.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: i.object,
  /**
   * A single child content element.
   */
  children: Cs.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: i.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Backdrop: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([cs, i.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: i.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: i.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: i.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: i.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: i.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: i.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: i.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
function bI(e) {
  return jt("MuiPaper", e);
}
Ut("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const vI = (e) => {
  const {
    square: t,
    elevation: n,
    variant: r,
    classes: o
  } = e, s = {
    root: ["root", r, !t && "rounded", r === "elevation" && `elevation${n}`]
  };
  return Wt(s, bI, o);
}, xI = Ue("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(nn(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), Db = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var g;
  const r = Xt({
    props: t,
    name: "MuiPaper"
  }), o = Ld(), {
    className: s,
    component: a = "div",
    elevation: l = 1,
    square: c = !1,
    variant: u = "elevation",
    ...d
  } = r, f = {
    ...r,
    component: a,
    elevation: l,
    square: c,
    variant: u
  }, h = vI(f);
  return process.env.NODE_ENV !== "production" && o.shadows[l] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${l}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${l}]\` is defined.`].join(`
`)), /* @__PURE__ */ P(xI, {
    as: a,
    ownerState: f,
    className: Ce(h.root, s),
    ref: n,
    ...d,
    style: {
      ...u === "elevation" && {
        "--Paper-shadow": (o.vars || o).shadows[l],
        ...o.vars && {
          "--Paper-overlay": (g = o.vars.overlays) == null ? void 0 : g[l]
        },
        ...!o.vars && o.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${cu("#fff", du(l))}, ${cu("#fff", du(l))})`
        }
      },
      ...d.style
    }
  });
});
process.env.NODE_ENV !== "production" && (Db.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: Es(yb, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: i.bool,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: i.oneOfType([i.oneOf(["elevation", "outlined"]), i.string])
});
function wI(e) {
  return jt("MuiPopover", e);
}
Ut("MuiPopover", ["root", "paper"]);
function Im(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function Nm(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function Am(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function Ai(e) {
  return typeof e == "function" ? e() : e;
}
const SI = (e) => {
  const {
    classes: t
  } = e;
  return Wt({
    root: ["root"],
    paper: ["paper"]
  }, wI, t);
}, TI = Ue(_b, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), Bb = Ue(Db, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), Fb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiPopover"
  }), {
    action: o,
    anchorEl: s,
    anchorOrigin: a = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: l,
    anchorReference: c = "anchorEl",
    children: u,
    className: d,
    container: f,
    elevation: h = 8,
    marginThreshold: g = 16,
    open: y,
    PaperProps: m = {},
    // TODO: remove in v7
    slots: v = {},
    slotProps: x = {},
    transformOrigin: E = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: w,
    // TODO: remove in v7
    transitionDuration: S = "auto",
    TransitionProps: b = {},
    // TODO: remove in v7
    disableScrollLock: T = !1,
    ...R
  } = r, $ = C.useRef(), I = {
    ...r,
    anchorOrigin: a,
    anchorReference: c,
    elevation: h,
    marginThreshold: g,
    transformOrigin: E,
    TransitionComponent: w,
    transitionDuration: S,
    TransitionProps: b
  }, p = SI(I), O = C.useCallback(() => {
    if (c === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (l || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), l;
    const Q = Ai(s), ie = Q && Q.nodeType === 1 ? Q : Yn($.current).body, F = ie.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const he = ie.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && he.top === 0 && he.left === 0 && he.right === 0 && he.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: F.top + Im(F, a.vertical),
      left: F.left + Nm(F, a.horizontal)
    };
  }, [s, a.horizontal, a.vertical, l, c]), k = C.useCallback((Q) => ({
    vertical: Im(Q, E.vertical),
    horizontal: Nm(Q, E.horizontal)
  }), [E.horizontal, E.vertical]), A = C.useCallback((Q) => {
    const ie = {
      width: Q.offsetWidth,
      height: Q.offsetHeight
    }, F = k(ie);
    if (c === "none")
      return {
        top: null,
        left: null,
        transformOrigin: Am(F)
      };
    const he = O();
    let fe = he.top - F.vertical, Se = he.left - F.horizontal;
    const Le = fe + ie.height, Ne = Se + ie.width, ke = kr(Ai(s)), Re = ke.innerHeight - g, De = ke.innerWidth - g;
    if (g !== null && fe < g) {
      const Oe = fe - g;
      fe -= Oe, F.vertical += Oe;
    } else if (g !== null && Le > Re) {
      const Oe = Le - Re;
      fe -= Oe, F.vertical += Oe;
    }
    if (process.env.NODE_ENV !== "production" && ie.height > Re && ie.height && Re && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${ie.height - Re}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), g !== null && Se < g) {
      const Oe = Se - g;
      Se -= Oe, F.horizontal += Oe;
    } else if (Ne > De) {
      const Oe = Ne - De;
      Se -= Oe, F.horizontal += Oe;
    }
    return {
      top: `${Math.round(fe)}px`,
      left: `${Math.round(Se)}px`,
      transformOrigin: Am(F)
    };
  }, [s, c, O, k, g]), [D, _] = C.useState(y), M = C.useCallback(() => {
    const Q = $.current;
    if (!Q)
      return;
    const ie = A(Q);
    ie.top !== null && Q.style.setProperty("top", ie.top), ie.left !== null && (Q.style.left = ie.left), Q.style.transformOrigin = ie.transformOrigin, _(!0);
  }, [A]);
  C.useEffect(() => (T && window.addEventListener("scroll", M), () => window.removeEventListener("scroll", M)), [s, T, M]);
  const z = () => {
    M();
  }, Y = () => {
    _(!1);
  };
  C.useEffect(() => {
    y && M();
  }), C.useImperativeHandle(o, () => y ? {
    updatePosition: () => {
      M();
    }
  } : null, [y, M]), C.useEffect(() => {
    if (!y)
      return;
    const Q = pb(() => {
      M();
    }), ie = kr(Ai(s));
    return ie.addEventListener("resize", Q), () => {
      Q.clear(), ie.removeEventListener("resize", Q);
    };
  }, [s, y, M]);
  let H = S;
  const j = {
    slots: {
      transition: w,
      ...v
    },
    slotProps: {
      transition: b,
      paper: m,
      ...x
    }
  }, [W, ee] = sn("transition", {
    elementType: _a,
    externalForwardedProps: j,
    ownerState: I,
    getSlotProps: (Q) => ({
      ...Q,
      onEntering: (ie, F) => {
        var he;
        (he = Q.onEntering) == null || he.call(Q, ie, F), z();
      },
      onExited: (ie) => {
        var F;
        (F = Q.onExited) == null || F.call(Q, ie), Y();
      }
    }),
    additionalProps: {
      appear: !0,
      in: y
    }
  });
  S === "auto" && !W.muiSupportAuto && (H = void 0);
  const K = f || (s ? Yn(Ai(s)).body : void 0), [oe, {
    slots: ne,
    slotProps: se,
    ...de
  }] = sn("root", {
    ref: n,
    elementType: TI,
    externalForwardedProps: {
      ...j,
      ...R
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: v.backdrop
      },
      slotProps: {
        backdrop: wP(typeof x.backdrop == "function" ? x.backdrop(I) : x.backdrop, {
          invisible: !0
        })
      },
      container: K,
      open: y
    },
    ownerState: I,
    className: Ce(p.root, d)
  }), [X, ae] = sn("paper", {
    ref: $,
    className: p.paper,
    elementType: Bb,
    externalForwardedProps: j,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: h,
      style: D ? void 0 : {
        opacity: 0
      }
    },
    ownerState: I
  });
  return /* @__PURE__ */ P(oe, {
    ...de,
    ...!mu(oe) && {
      slots: ne,
      slotProps: se,
      disableScrollLock: T
    },
    children: /* @__PURE__ */ P(W, {
      ...ee,
      timeout: H,
      children: /* @__PURE__ */ P(X, {
        ...ae,
        children: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (Fb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: Zr,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: Es(i.oneOfType([cs, i.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = Ai(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: i.shape({
    horizontal: i.oneOfType([i.oneOf(["center", "left", "right"]), i.number]).isRequired,
    vertical: i.oneOfType([i.oneOf(["bottom", "center", "top"]), i.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: i.shape({
    left: i.number.isRequired,
    top: i.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: i.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: i.object,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([cs, i.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: i.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: yb,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: i.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: i.shape({
    component: ub
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: i.shape({
    horizontal: i.oneOfType([i.oneOf(["center", "left", "right"]), i.number]).isRequired,
    vertical: i.oneOfType([i.oneOf(["bottom", "center", "top"]), i.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: i.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: i.object
});
function EI(e) {
  return jt("MuiMenu", e);
}
Ut("MuiMenu", ["root", "paper", "list"]);
const CI = {
  vertical: "top",
  horizontal: "right"
}, OI = {
  vertical: "top",
  horizontal: "left"
}, RI = (e) => {
  const {
    classes: t
  } = e;
  return Wt({
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  }, EI, t);
}, $I = Ue(Fb, {
  shouldForwardProp: (e) => yr(e) || e === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), kI = Ue(Bb, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}), PI = Ue(Ib, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (e, t) => t.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), jb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiMenu"
  }), {
    autoFocus: o = !0,
    children: s,
    className: a,
    disableAutoFocusItem: l = !1,
    MenuListProps: c = {},
    onClose: u,
    open: d,
    PaperProps: f = {},
    PopoverClasses: h,
    transitionDuration: g = "auto",
    TransitionProps: {
      onEntering: y,
      ...m
    } = {},
    variant: v = "selectedMenu",
    slots: x = {},
    slotProps: E = {},
    ...w
  } = r, S = tk(), b = {
    ...r,
    autoFocus: o,
    disableAutoFocusItem: l,
    MenuListProps: c,
    onEntering: y,
    PaperProps: f,
    transitionDuration: g,
    TransitionProps: m,
    variant: v
  }, T = RI(b), R = o && !l && d, $ = C.useRef(null), I = (H, j) => {
    $.current && $.current.adjustStyleForScrollbar(H, {
      direction: S ? "rtl" : "ltr"
    }), y && y(H, j);
  }, p = (H) => {
    H.key === "Tab" && (H.preventDefault(), u && u(H, "tabKeyDown"));
  };
  let O = -1;
  C.Children.map(s, (H, j) => {
    /* @__PURE__ */ C.isValidElement(H) && (process.env.NODE_ENV !== "production" && En.isFragment(H) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), H.props.disabled || (v === "selectedMenu" && H.props.selected || O === -1) && (O = j));
  });
  const k = {
    slots: x,
    slotProps: {
      list: c,
      transition: m,
      paper: f,
      ...E
    }
  }, A = rP({
    elementType: x.root,
    externalSlotProps: E.root,
    ownerState: b,
    className: [T.root, a]
  }), [D, _] = sn("paper", {
    className: T.paper,
    elementType: kI,
    externalForwardedProps: k,
    shouldForwardComponentProp: !0,
    ownerState: b
  }), [M, z] = sn("list", {
    className: Ce(T.list, c.className),
    elementType: PI,
    shouldForwardComponentProp: !0,
    externalForwardedProps: k,
    getSlotProps: (H) => ({
      ...H,
      onKeyDown: (j) => {
        var W;
        p(j), (W = H.onKeyDown) == null || W.call(H, j);
      }
    }),
    ownerState: b
  }), Y = typeof k.slotProps.transition == "function" ? k.slotProps.transition(b) : k.slotProps.transition;
  return /* @__PURE__ */ P($I, {
    onClose: u,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: S ? "right" : "left"
    },
    transformOrigin: S ? CI : OI,
    slots: {
      root: x.root,
      paper: D,
      backdrop: x.backdrop,
      ...x.transition && {
        // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover
        transition: x.transition
      }
    },
    slotProps: {
      root: A,
      paper: _,
      backdrop: typeof E.backdrop == "function" ? E.backdrop(b) : E.backdrop,
      transition: {
        ...Y,
        onEntering: (...H) => {
          var j;
          I(...H), (j = Y == null ? void 0 : Y.onEntering) == null || j.call(Y, ...H);
        }
      }
    },
    open: d,
    ref: n,
    transitionDuration: g,
    ownerState: b,
    ...w,
    classes: h,
    children: /* @__PURE__ */ P(M, {
      actions: $,
      autoFocus: o && (O === -1 || l),
      autoFocusItem: R,
      variant: v,
      ...z,
      children: s
    })
  });
});
process.env.NODE_ENV !== "production" && (jb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: i.oneOfType([cs, i.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: i.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: i.bool,
  /**
   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.
   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  MenuListProps: i.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: i.object,
  /**
   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.
   */
  PopoverClasses: i.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    list: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    list: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: i.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: i.oneOf(["menu", "selectedMenu"])
});
function II(e) {
  return jt("MuiNativeSelect", e);
}
const zd = Ut("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), NI = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: r,
    multiple: o,
    open: s,
    error: a
  } = e, l = {
    select: ["select", n, r && "disabled", o && "multiple", a && "error"],
    icon: ["icon", `icon${Ht(n)}`, s && "iconOpen", r && "disabled"]
  };
  return Wt(l, II, t);
}, Lb = Ue("select")(({
  theme: e
}) => ({
  // Reset
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  // Reset
  borderRadius: 0,
  cursor: "pointer",
  "&:focus": {
    // Reset Chrome style
    borderRadius: 0
  },
  [`&.${zd.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (e.vars || e).palette.background.paper
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.variant !== "filled" && t.variant !== "outlined",
    style: {
      // Bump specificity to allow extending custom inputs
      "&&&": {
        paddingRight: 24,
        minWidth: 16
        // So it doesn't collapse.
      }
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      "&&&": {
        paddingRight: 32
      }
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius,
      "&:focus": {
        borderRadius: (e.vars || e).shape.borderRadius
        // Reset the reset for Chrome style
      },
      "&&&": {
        paddingRight: 32
      }
    }
  }]
})), AI = Ue(Lb, {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: yr,
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.select, t[n.variant], n.error && t.error, {
      [`&.${zd.multiple}`]: t.multiple
    }];
  }
})({}), Vb = Ue("svg")(({
  theme: e
}) => ({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  // Center vertically, height is 1em
  top: "calc(50% - .5em)",
  // Don't block pointer events on the select under the icon.
  pointerEvents: "none",
  color: (e.vars || e).palette.action.active,
  [`&.${zd.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.open,
    style: {
      transform: "rotate(180deg)"
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      right: 7
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      right: 7
    }
  }]
})), MI = Ue(Vb, {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${Ht(n.variant)}`], n.open && t.iconOpen];
  }
})({}), zb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    className: r,
    disabled: o,
    error: s,
    IconComponent: a,
    inputRef: l,
    variant: c = "standard",
    ...u
  } = t, d = {
    ...t,
    disabled: o,
    variant: c,
    error: s
  }, f = NI(d);
  return /* @__PURE__ */ Pe(C.Fragment, {
    children: [/* @__PURE__ */ P(AI, {
      ownerState: d,
      className: Ce(f.select, r),
      disabled: o,
      ref: l || n,
      ...u
    }), t.multiple ? null : /* @__PURE__ */ P(MI, {
      as: a,
      ownerState: d,
      className: f.icon
    })]
  });
});
process.env.NODE_ENV !== "production" && (zb.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The CSS class name of the select element.
   */
  className: i.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: i.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: i.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: Zr,
  /**
   * @ignore
   */
  multiple: i.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: i.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The input value.
   */
  value: i.any,
  /**
   * The variant to use.
   */
  variant: i.oneOf(["standard", "outlined", "filled"])
});
function Wb(e) {
  return jt("MuiSelect", e);
}
const Si = Ut("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]);
var Mm;
const _I = Ue(Lb, {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [
      // Win specificity over the input base
      {
        [`&.${Si.select}`]: t.select
      },
      {
        [`&.${Si.select}`]: t[n.variant]
      },
      {
        [`&.${Si.error}`]: t.error
      },
      {
        [`&.${Si.multiple}`]: t.multiple
      }
    ];
  }
})({
  // Win specificity over the input base
  [`&.${Si.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
}), DI = Ue(Vb, {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${Ht(n.variant)}`], n.open && t.iconOpen];
  }
})({}), BI = Ue("input", {
  shouldForwardProp: (e) => ab(e) && e !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (e, t) => t.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function _m(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
function FI(e) {
  return e == null || typeof e == "string" && !e.trim();
}
const jI = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: r,
    multiple: o,
    open: s,
    error: a
  } = e, l = {
    select: ["select", n, r && "disabled", o && "multiple", a && "error"],
    icon: ["icon", `icon${Ht(n)}`, s && "iconOpen", r && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return Wt(l, Wb, t);
}, Ub = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var we;
  const {
    "aria-describedby": r,
    "aria-label": o,
    autoFocus: s,
    autoWidth: a,
    children: l,
    className: c,
    defaultOpen: u,
    defaultValue: d,
    disabled: f,
    displayEmpty: h,
    error: g = !1,
    IconComponent: y,
    inputRef: m,
    labelId: v,
    MenuProps: x = {},
    multiple: E,
    name: w,
    onBlur: S,
    onChange: b,
    onClose: T,
    onFocus: R,
    onOpen: $,
    open: I,
    readOnly: p,
    renderValue: O,
    required: k,
    SelectDisplayProps: A = {},
    tabIndex: D,
    // catching `type` from Input which makes no sense for SelectInput
    type: _,
    value: M,
    variant: z = "standard",
    ...Y
  } = t, [H, j] = ym({
    controlled: M,
    default: d,
    name: "Select"
  }), [W, ee] = ym({
    controlled: I,
    default: u,
    name: "Select"
  }), K = C.useRef(null), oe = C.useRef(null), [ne, se] = C.useState(null), {
    current: de
  } = C.useRef(I != null), [X, ae] = C.useState(), Q = Ln(n, m), ie = C.useCallback((le) => {
    oe.current = le, le && se(le);
  }, []), F = ne == null ? void 0 : ne.parentNode;
  C.useImperativeHandle(Q, () => ({
    focus: () => {
      oe.current.focus();
    },
    node: K.current,
    value: H
  }), [H]), C.useEffect(() => {
    u && W && ne && !de && (ae(a ? null : F.clientWidth), oe.current.focus());
  }, [ne, a]), C.useEffect(() => {
    s && oe.current.focus();
  }, [s]), C.useEffect(() => {
    if (!v)
      return;
    const le = Yn(oe.current).getElementById(v);
    if (le) {
      const xe = () => {
        getSelection().isCollapsed && oe.current.focus();
      };
      return le.addEventListener("click", xe), () => {
        le.removeEventListener("click", xe);
      };
    }
  }, [v]);
  const he = (le, xe) => {
    le ? $ && $(xe) : T && T(xe), de || (ae(a ? null : F.clientWidth), ee(le));
  }, fe = (le) => {
    le.button === 0 && (le.preventDefault(), oe.current.focus(), he(!0, le));
  }, Se = (le) => {
    he(!1, le);
  }, Le = C.Children.toArray(l), Ne = (le) => {
    const xe = Le.find((Ae) => Ae.props.value === le.target.value);
    xe !== void 0 && (j(xe.props.value), b && b(le, xe));
  }, ke = (le) => (xe) => {
    let Ae;
    if (xe.currentTarget.hasAttribute("tabindex")) {
      if (E) {
        Ae = Array.isArray(H) ? H.slice() : [];
        const ze = H.indexOf(le.props.value);
        ze === -1 ? Ae.push(le.props.value) : Ae.splice(ze, 1);
      } else
        Ae = le.props.value;
      if (le.props.onClick && le.props.onClick(xe), H !== Ae && (j(Ae), b)) {
        const ze = xe.nativeEvent || xe, Ye = new ze.constructor(ze.type, ze);
        Object.defineProperty(Ye, "target", {
          writable: !0,
          value: {
            value: Ae,
            name: w
          }
        }), b(Ye, le);
      }
      E || he(!1, xe);
    }
  }, Re = (le) => {
    p || [
      " ",
      "ArrowUp",
      "ArrowDown",
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
      "Enter"
    ].includes(le.key) && (le.preventDefault(), he(!0, le));
  }, De = ne !== null && W, Oe = (le) => {
    !De && S && (Object.defineProperty(le, "target", {
      writable: !0,
      value: {
        value: H,
        name: w
      }
    }), S(le));
  };
  delete Y["aria-invalid"];
  let N, q;
  const J = [];
  let U = !1, B = !1;
  (Na({
    value: H
  }) || h) && (O ? N = O(H) : U = !0);
  const V = Le.map((le) => {
    if (!/* @__PURE__ */ C.isValidElement(le))
      return null;
    process.env.NODE_ENV !== "production" && En.isFragment(le) && console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    let xe;
    if (E) {
      if (!Array.isArray(H))
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `value` prop must be an array when using the `Select` component with `multiple`." : po(2));
      xe = H.some((Ae) => _m(Ae, le.props.value)), xe && U && J.push(le.props.children);
    } else
      xe = _m(H, le.props.value), xe && U && (q = le.props.children);
    return xe && (B = !0), /* @__PURE__ */ C.cloneElement(le, {
      "aria-selected": xe ? "true" : "false",
      onClick: ke(le),
      onKeyUp: (Ae) => {
        Ae.key === " " && Ae.preventDefault(), le.props.onKeyUp && le.props.onKeyUp(Ae);
      },
      role: "option",
      selected: xe,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": le.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  process.env.NODE_ENV !== "production" && C.useEffect(() => {
    if (!B && !E && H !== "") {
      const le = Le.map((xe) => xe.props.value);
      console.warn([`MUI: You have provided an out-of-range value \`${H}\` for the select ${w ? `(name="${w}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${le.filter((xe) => xe != null).map((xe) => `\`${xe}\``).join(", ") || '""'}.`].join(`
`));
    }
  }, [B, Le, E, w, H]), U && (E ? J.length === 0 ? N = null : N = J.reduce((le, xe, Ae) => (le.push(xe), Ae < J.length - 1 && le.push(", "), le), []) : N = q);
  let G = X;
  !a && de && ne && (G = F.clientWidth);
  let pe;
  typeof D < "u" ? pe = D : pe = f ? null : 0;
  const me = A.id || (w ? `mui-component-select-${w}` : void 0), re = {
    ...t,
    variant: z,
    value: H,
    open: De,
    error: g
  }, Z = jI(re), te = {
    ...x.PaperProps,
    ...(we = x.slotProps) == null ? void 0 : we.paper
  }, ye = lb();
  return /* @__PURE__ */ Pe(C.Fragment, {
    children: [/* @__PURE__ */ P(_I, {
      as: "div",
      ref: ie,
      tabIndex: pe,
      role: "combobox",
      "aria-controls": De ? ye : void 0,
      "aria-disabled": f ? "true" : void 0,
      "aria-expanded": De ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": o,
      "aria-labelledby": [v, me].filter(Boolean).join(" ") || void 0,
      "aria-describedby": r,
      "aria-required": k ? "true" : void 0,
      "aria-invalid": g ? "true" : void 0,
      onKeyDown: Re,
      onMouseDown: f || p ? null : fe,
      onBlur: Oe,
      onFocus: R,
      ...A,
      ownerState: re,
      className: Ce(A.className, Z.select, c),
      id: me,
      children: FI(N) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        Mm || (Mm = /* @__PURE__ */ P("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      ) : N
    }), /* @__PURE__ */ P(BI, {
      "aria-invalid": g,
      value: Array.isArray(H) ? H.join(",") : H,
      name: w,
      ref: K,
      "aria-hidden": !0,
      onChange: Ne,
      tabIndex: -1,
      disabled: f,
      className: Z.nativeInput,
      autoFocus: s,
      required: k,
      ...Y,
      ownerState: re
    }), /* @__PURE__ */ P(DI, {
      as: y,
      className: Z.icon,
      ownerState: re
    }), /* @__PURE__ */ P(jb, {
      id: `menu-${w || ""}`,
      anchorEl: F,
      open: De,
      onClose: Se,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      },
      ...x,
      slotProps: {
        ...x.slotProps,
        list: {
          "aria-labelledby": v,
          role: "listbox",
          "aria-multiselectable": E ? "true" : void 0,
          disableListWrap: !0,
          id: ye,
          ...x.MenuListProps
        },
        paper: {
          ...te,
          style: {
            minWidth: G,
            ...te != null ? te.style : null
          }
        }
      },
      children: V
    })]
  });
});
process.env.NODE_ENV !== "production" && (Ub.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": i.string,
  /**
   * @ignore
   */
  "aria-label": i.string,
  /**
   * @ignore
   */
  autoFocus: i.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: i.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The CSS class name of the select element.
   */
  className: i.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: i.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: i.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: i.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: i.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: Zr,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: i.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: i.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: i.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: i.string,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: i.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool,
  /**
   * @ignore
   */
  readOnly: i.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: i.func,
  /**
   * If `true`, the component is required.
   */
  required: i.bool,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: i.object,
  /**
   * @ignore
   */
  tabIndex: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  type: i.any,
  /**
   * The input value.
   */
  value: i.any,
  /**
   * The variant to use.
   */
  variant: i.oneOf(["standard", "outlined", "filled"])
});
const LI = vP(/* @__PURE__ */ P("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown"), VI = (e) => {
  const {
    classes: t
  } = e, r = Wt({
    root: ["root"]
  }, Wb, t);
  return {
    ...t,
    ...r
  };
}, Wd = {
  name: "MuiSelect",
  overridesResolver: (e, t) => t.root,
  shouldForwardProp: (e) => yr(e) && e !== "variant",
  slot: "Root"
}, zI = Ue(zl, Wd)(""), WI = Ue(Ul, Wd)(""), UI = Ue(Wl, Wd)(""), Ud = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    name: "MuiSelect",
    props: t
  }), {
    autoWidth: o = !1,
    children: s,
    classes: a = {},
    className: l,
    defaultOpen: c = !1,
    displayEmpty: u = !1,
    IconComponent: d = LI,
    id: f,
    input: h,
    inputProps: g,
    label: y,
    labelId: m,
    MenuProps: v,
    multiple: x = !1,
    native: E = !1,
    onClose: w,
    onOpen: S,
    open: b,
    renderValue: T,
    SelectDisplayProps: R,
    variant: $ = "outlined",
    ...I
  } = r, p = E ? zb : Ub, O = fi(), k = di({
    props: r,
    muiFormControl: O,
    states: ["variant", "error"]
  }), A = k.variant || $, D = {
    ...r,
    variant: A,
    classes: a
  }, _ = VI(D), {
    root: M,
    ...z
  } = _, Y = h || {
    standard: /* @__PURE__ */ P(zI, {
      ownerState: D
    }),
    outlined: /* @__PURE__ */ P(WI, {
      label: y,
      ownerState: D
    }),
    filled: /* @__PURE__ */ P(UI, {
      ownerState: D
    })
  }[A], H = Ln(n, Os(Y));
  return /* @__PURE__ */ P(C.Fragment, {
    children: /* @__PURE__ */ C.cloneElement(Y, {
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: p,
      inputProps: {
        children: s,
        error: k.error,
        IconComponent: d,
        variant: A,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: x,
        ...E ? {
          id: f
        } : {
          autoWidth: o,
          defaultOpen: c,
          displayEmpty: u,
          labelId: m,
          MenuProps: v,
          onClose: w,
          onOpen: S,
          open: b,
          renderValue: T,
          SelectDisplayProps: {
            id: f,
            ...R
          }
        },
        ...g,
        classes: g ? lr(z, g.classes) : z,
        ...h ? h.props.inputProps : {}
      },
      ...(x && E || u) && A === "outlined" ? {
        notched: !0
      } : {},
      ref: H,
      className: Ce(Y.props.className, l, _.root),
      // If a custom input is provided via 'input' prop, do not allow 'variant' to be propagated to it's root element. See https://github.com/mui/material-ui/issues/33894.
      ...!h && {
        variant: A
      },
      ...I
    })
  });
});
process.env.NODE_ENV !== "production" && (Ud.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: i.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: i.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: i.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: i.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: i.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: i.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: i.object,
  /**
   * See [OutlinedInput#label](https://mui.com/material-ui/api/outlined-input/#props)
   */
  label: i.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: i.string,
  /**
   * Props applied to the [`Menu`](https://mui.com/material-ui/api/menu/) element.
   */
  MenuProps: i.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: i.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: i.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: i.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: i.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: i.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: i.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: i.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: i.oneOfType([i.oneOf([""]), i.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
});
Ud.muiName = "Select";
function HI(e) {
  return jt("MuiTextField", e);
}
Ut("MuiTextField", ["root"]);
const qI = {
  standard: zl,
  filled: Wl,
  outlined: Ul
}, YI = (e) => {
  const {
    classes: t
  } = e;
  return Wt({
    root: ["root"]
  }, HI, t);
}, GI = Ue(Ob, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), Hb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiTextField"
  }), {
    autoComplete: o,
    autoFocus: s = !1,
    children: a,
    className: l,
    color: c = "primary",
    defaultValue: u,
    disabled: d = !1,
    error: f = !1,
    FormHelperTextProps: h,
    fullWidth: g = !1,
    helperText: y,
    id: m,
    InputLabelProps: v,
    inputProps: x,
    InputProps: E,
    inputRef: w,
    label: S,
    maxRows: b,
    minRows: T,
    multiline: R = !1,
    name: $,
    onBlur: I,
    onChange: p,
    onFocus: O,
    placeholder: k,
    required: A = !1,
    rows: D,
    select: _ = !1,
    SelectProps: M,
    slots: z = {},
    slotProps: Y = {},
    type: H,
    value: j,
    variant: W = "outlined",
    ...ee
  } = r, K = {
    ...r,
    autoFocus: s,
    color: c,
    disabled: d,
    error: f,
    fullWidth: g,
    multiline: R,
    required: A,
    select: _,
    variant: W
  }, oe = YI(K);
  process.env.NODE_ENV !== "production" && _ && !a && console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
  const ne = lb(m), se = y && ne ? `${ne}-helper-text` : void 0, de = S && ne ? `${ne}-label` : void 0, X = qI[W], ae = {
    slots: z,
    slotProps: {
      input: E,
      inputLabel: v,
      htmlInput: x,
      formHelperText: h,
      select: M,
      ...Y
    }
  }, Q = {}, ie = ae.slotProps.inputLabel;
  W === "outlined" && (ie && typeof ie.shrink < "u" && (Q.notched = ie.shrink), Q.label = S), _ && ((!M || !M.native) && (Q.id = void 0), Q["aria-describedby"] = void 0);
  const [F, he] = sn("root", {
    elementType: GI,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...ae,
      ...ee
    },
    ownerState: K,
    className: Ce(oe.root, l),
    ref: n,
    additionalProps: {
      disabled: d,
      error: f,
      fullWidth: g,
      required: A,
      color: c,
      variant: W
    }
  }), [fe, Se] = sn("input", {
    elementType: X,
    externalForwardedProps: ae,
    additionalProps: Q,
    ownerState: K
  }), [Le, Ne] = sn("inputLabel", {
    elementType: Cb,
    externalForwardedProps: ae,
    ownerState: K
  }), [ke, Re] = sn("htmlInput", {
    elementType: "input",
    externalForwardedProps: ae,
    ownerState: K
  }), [De, Oe] = sn("formHelperText", {
    elementType: Rb,
    externalForwardedProps: ae,
    ownerState: K
  }), [N, q] = sn("select", {
    elementType: Ud,
    externalForwardedProps: ae,
    ownerState: K
  }), J = /* @__PURE__ */ P(fe, {
    "aria-describedby": se,
    autoComplete: o,
    autoFocus: s,
    defaultValue: u,
    fullWidth: g,
    multiline: R,
    name: $,
    rows: D,
    maxRows: b,
    minRows: T,
    type: H,
    value: j,
    id: ne,
    inputRef: w,
    onBlur: I,
    onChange: p,
    onFocus: O,
    placeholder: k,
    inputProps: Re,
    slots: {
      input: z.htmlInput ? ke : void 0
    },
    ...Se
  });
  return /* @__PURE__ */ Pe(F, {
    ...he,
    children: [S != null && S !== "" && /* @__PURE__ */ P(Le, {
      htmlFor: ne,
      id: de,
      ...Ne,
      children: S
    }), _ ? /* @__PURE__ */ P(N, {
      "aria-describedby": se,
      id: ne,
      labelId: de,
      value: j,
      input: J,
      ...q,
      children: a
    }) : J, y && /* @__PURE__ */ P(De, {
      id: se,
      ...Oe,
      children: y
    })]
  });
});
process.env.NODE_ENV !== "production" && (Hb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: i.bool,
  /**
   * @ignore
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: i.bool,
  /**
   * Props applied to the [`FormHelperText`](https://mui.com/material-ui/api/form-helper-text/) element.
   * @deprecated Use `slotProps.formHelperText` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  FormHelperTextProps: i.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The helper text content.
   */
  helperText: i.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: i.string,
  /**
   * Props applied to the [`InputLabel`](https://mui.com/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   * @deprecated Use `slotProps.inputLabel` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputLabelProps: i.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.htmlInput` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: i.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](https://mui.com/material-ui/api/filled-input/),
   * [`OutlinedInput`](https://mui.com/material-ui/api/outlined-input/) or [`Input`](https://mui.com/material-ui/api/input/)
   * component depending on the `variant` prop value.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Zr,
  /**
   * The label content.
   */
  label: i.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: i.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * Render a [`Select`](https://mui.com/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: i.bool,
  /**
   * Props applied to the [`Select`](https://mui.com/material-ui/api/select/) element.
   * @deprecated Use `slotProps.select` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SelectProps: i.object,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    formHelperText: i.oneOfType([i.func, i.object]),
    htmlInput: i.oneOfType([i.func, i.object]),
    input: i.oneOfType([i.func, i.object]),
    inputLabel: i.oneOfType([i.func, i.object]),
    select: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    formHelperText: i.elementType,
    htmlInput: i.elementType,
    input: i.elementType,
    inputLabel: i.elementType,
    root: i.elementType,
    select: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
});
const KI = Ut("MuiBox", ["root"]), XI = sb(), qb = L$({
  themeId: El,
  defaultTheme: XI,
  defaultClassName: KI.root,
  generateClassName: nb.generate
});
process.env.NODE_ENV !== "production" && (qb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
const QI = Ue(Hb)`
  input {
    text-align: center;
  }
`, JI = {
  TextFieldStyled: QI
}, ZI = (e) => /* @__PURE__ */ P(JI.TextFieldStyled, { ...e }), Ti = {
  left: "ArrowLeft",
  right: "ArrowRight",
  backspace: "Backspace",
  home: "Home",
  end: "End"
};
function eN(e, t) {
  return e <= 0 ? [] : Array.from({ length: e }, t);
}
function tN(e, t, n) {
  return e.map((r, o) => t === o ? n : r);
}
function Dm(e) {
  return e.join("");
}
function Bm(e, t) {
  return [...e, t];
}
function nN(e, t, n) {
  return e.reduce(
    (r, o, s) => {
      const { characters: a, restArrayMerged: l } = r;
      if (s < n)
        return {
          restArrayMerged: l,
          characters: Bm(a, o)
        };
      const [c, ...u] = l;
      return {
        restArrayMerged: u,
        characters: Bm(a, c || "")
      };
    },
    {
      restArrayMerged: t,
      characters: []
    }
  ).characters;
}
function rN(e) {
  return (t) => {
    e.forEach((n) => {
      typeof n == "function" ? n(t) : n != null && (n.current = t);
    });
  };
}
function oN(e) {
  return e.split("");
}
function Fm(e) {
  const t = L.useRef(() => {
    throw new Error("Cannot call an event handler while rendering.");
  });
  return L.useInsertionEffect(() => {
    t.current = e;
  }), L.useCallback((...n) => {
    var r;
    return (r = t.current) == null ? void 0 : r.call(t, ...n);
  }, []);
}
const iN = () => !0, sN = L.forwardRef(
  (e, t) => {
    const {
      value: n = "",
      length: r = 4,
      autoFocus: o = !1,
      onChange: s,
      TextFieldsProps: a,
      onComplete: l,
      validateChar: c = iN,
      className: u,
      onBlur: d,
      ...f
    } = e, h = L.useRef(n), g = Fm(l), y = Fm((O) => {
      const k = O.slice(0, r);
      return {
        isCompleted: k.length === r,
        finalValue: k
      };
    });
    L.useEffect(() => {
      const { isCompleted: O, finalValue: k } = y(
        h.current
      );
      O && g(k);
    }, [r, g, y]);
    const m = eN(
      r,
      (O, k) => ({
        character: n[k] || "",
        inputRef: L.createRef()
      })
    ), v = (O) => m.findIndex(({ inputRef: k }) => k.current === O), x = () => m.map(({ character: O }) => O), E = (O, k) => {
      const A = tN(
        x(),
        O,
        k
      );
      return Dm(A);
    }, w = (O) => {
      var k, A;
      (A = (k = m[O]) == null ? void 0 : k.inputRef.current) == null || A.focus();
    }, S = (O) => {
      var k, A;
      (A = (k = m[O]) == null ? void 0 : k.inputRef.current) == null || A.select();
    }, b = (O) => {
      O + 1 !== r && (m[O + 1].character ? S(O + 1) : w(O + 1));
    }, T = (O, k) => typeof c != "function" ? !0 : c(O, k), R = (O) => {
      const k = v(O.target);
      if (k === 0 && O.target.value.length > 1) {
        const { finalValue: Y, isCompleted: H } = y(
          O.target.value
        );
        s == null || s(Y), H && (l == null || l(Y)), S(Y.length - 1);
        return;
      }
      const A = O.target.value[0] || "";
      let D = A;
      D && !T(D, k) && (D = "");
      const _ = E(k, D);
      s == null || s(_);
      const { isCompleted: M, finalValue: z } = y(_);
      M && (l == null || l(z)), D !== "" ? _.length - 1 < k ? S(_.length) : b(k) : A === "" && _.length <= k && S(k - 1);
    }, $ = (O) => {
      const k = O.target, A = k.selectionStart, D = k.selectionEnd, _ = v(k), M = A === 0 && D === 0;
      if (k.value === O.key)
        O.preventDefault(), b(_);
      else if (Ti.backspace === O.key) {
        if (!k.value)
          O.preventDefault(), S(_ - 1);
        else if (M) {
          O.preventDefault();
          const z = E(_, "");
          s == null || s(z), z.length <= _ && S(_ - 1);
        }
      } else Ti.left === O.key ? (O.preventDefault(), S(_ - 1)) : Ti.right === O.key ? (O.preventDefault(), S(_ + 1)) : Ti.home === O.key ? (O.preventDefault(), S(0)) : Ti.end === O.key && (O.preventDefault(), S(m.length - 1));
    }, I = (O) => {
      const k = O.clipboardData.getData("text/plain"), A = O.target, D = m.findIndex(
        ({ character: j, inputRef: W }) => j === "" || W.current === A
      ), _ = x(), M = nN(
        _,
        oN(k),
        D
      ).map((j, W) => T(j, W) ? j : ""), z = Dm(M);
      s == null || s(z);
      const { isCompleted: Y, finalValue: H } = y(z);
      Y ? (l == null || l(H), S(r - 1)) : S(z.length);
    }, p = (O) => {
      if (!m.some(({ inputRef: k }) => k.current === O.relatedTarget)) {
        const { isCompleted: k, finalValue: A } = y(n);
        d == null || d(A, k);
      }
    };
    return /* @__PURE__ */ P(
      qb,
      {
        display: "flex",
        gap: "20px",
        alignItems: "center",
        ref: t,
        className: `MuiOtpInput-Box ${u || ""}`,
        ...f,
        children: m.map(({ character: O, inputRef: k }, A) => {
          const {
            onPaste: D,
            onFocus: _,
            onKeyDown: M,
            className: z,
            onBlur: Y,
            inputRef: H,
            ...j
          } = typeof a == "function" ? a(A) || {} : a || {};
          return /* @__PURE__ */ P(
            ZI,
            {
              autoFocus: o ? A === 0 : !1,
              autoComplete: "one-time-code",
              value: O,
              inputRef: rN([k, H]),
              className: `MuiOtpInput-TextField MuiOtpInput-TextField-${A + 1} ${z || ""}`,
              onPaste: (W) => {
                W.preventDefault(), I(W), D == null || D(W);
              },
              onFocus: (W) => {
                W.preventDefault(), W.target.select(), _ == null || _(W);
              },
              onChange: R,
              onKeyDown: (W) => {
                $(W), M == null || M(W);
              },
              onBlur: (W) => {
                Y == null || Y(W), p(W);
              },
              ...j
            },
            A
          );
        })
      }
    );
  }
), Yb = je(
  ({
    label: e = "",
    tooltip: t,
    value: n,
    onChange: r,
    isRequired: o,
    isDisabled: s,
    isError: a,
    errorMessage: l = ""
  }) => {
    const { textCommonStyles: c } = fl({
      isTitle: !1,
      isLabel: !0,
      textColor: s ? "disabled" : a ? "error" : "auto"
    });
    return /* @__PURE__ */ Pe(Kt, { gap: 0, children: [
      /* @__PURE__ */ P(
        Zo,
        {
          label: e,
          elementId: void 0,
          tooltip: t,
          isRequired: o,
          isDisabled: s,
          isError: a
        }
      ),
      /* @__PURE__ */ P(
        sN,
        {
          value: n,
          onChange: r,
          length: 6,
          TextFieldsProps: {
            disabled: s,
            error: a
          },
          sx: {
            "& .MuiInputBase-root": {
              borderRadius: "8px"
            },
            "& input": {
              width: "8px",
              height: "8px",
              p: "16px",
              borderRadius: "8px"
            }
          }
        }
      ),
      /* @__PURE__ */ P(
        On,
        {
          text: a ? l : "",
          isLabel: !0,
          sx: { ...c, minHeight: "24px" }
        }
      )
    ] });
  }
);
Yb.displayName = "OtpInput";
const Gb = je(({ isError: e, isDisabled: t, fullWidth: n, sx: r, ...o }) => {
  const { inputCommonStyle: s } = Ly({
    isDisabled: t,
    isError: e
  }), [a, l] = jr(!1);
  return /* @__PURE__ */ P(
    Tl,
    {
      type: a ? "text" : "password",
      fullWidth: n,
      isError: e,
      endAdornment: /* @__PURE__ */ P(
        pr,
        {
          isCircle: !0,
          isGhost: !0,
          icon: a ? "solar:eye-closed-bold-duotone" : "solar:eye-bold-duotone",
          color: e ? "error" : "primary",
          sx: { mr: -2 },
          onClick: () => l((c) => !c)
        }
      ),
      sx: {
        width: n ? "100%" : `calc(${s.minWidth} - 40px) !important`,
        ...r
      },
      ...o
    }
  );
});
Gb.displayName = "Password";
const aN = ys(/* @__PURE__ */ P("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "RadioButtonUnchecked"), lN = ys(/* @__PURE__ */ P("path", {
  d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
}), "RadioButtonChecked"), cN = Me("span", {
  shouldForwardProp: hr
})({
  position: "relative",
  display: "flex"
}), uN = Me(aN)({
  // Scale applied to prevent dot misalignment in Safari
  transform: "scale(1)"
}), dN = Me(lN)(nt(({
  theme: e
}) => ({
  left: 0,
  position: "absolute",
  transform: "scale(0)",
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeIn,
    duration: e.transitions.duration.shortest
  }),
  variants: [{
    props: {
      checked: !0
    },
    style: {
      transform: "scale(1)",
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeOut,
        duration: e.transitions.duration.shortest
      })
    }
  }]
})));
function Hd(e) {
  const {
    checked: t = !1,
    classes: n = {},
    fontSize: r
  } = e, o = {
    ...e,
    checked: t
  };
  return /* @__PURE__ */ Pe(cN, {
    className: n.root,
    ownerState: o,
    children: [/* @__PURE__ */ P(uN, {
      fontSize: r,
      className: n.background,
      ownerState: o
    }), /* @__PURE__ */ P(dN, {
      fontSize: r,
      className: n.dot,
      ownerState: o
    })]
  });
}
process.env.NODE_ENV !== "production" && (Hd.propTypes = {
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   */
  fontSize: i.oneOf(["small", "medium"])
});
const Kb = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (Kb.displayName = "RadioGroupContext");
function fN() {
  return C.useContext(Kb);
}
function pN(e) {
  return St("MuiRadio", e);
}
const jm = $t("MuiRadio", ["root", "checked", "disabled", "colorPrimary", "colorSecondary", "sizeSmall"]), mN = (e) => {
  const {
    classes: t,
    color: n,
    size: r
  } = e, o = {
    root: ["root", `color${Te(n)}`, r !== "medium" && `size${Te(r)}`]
  };
  return {
    ...t,
    ...Mt(o, pN, t)
  };
}, hN = Me(wl, {
  shouldForwardProp: (e) => hr(e) || e === "classes",
  name: "MuiRadio",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size !== "medium" && t[`size${Te(n.size)}`], t[`color${Te(n.color)}`]];
  }
})(nt(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  [`&.${jm.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: {
      color: "default",
      disabled: !1,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(hn()).map(([t]) => ({
    props: {
      color: t,
      disabled: !1,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(hn()).map(([t]) => ({
    props: {
      color: t,
      disabled: !1
    },
    style: {
      [`&.${jm.checked}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
})));
function gN(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
const yN = /* @__PURE__ */ P(Hd, {
  checked: !0
}), bN = /* @__PURE__ */ P(Hd, {}), Xb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = kt({
    props: t,
    name: "MuiRadio"
  }), {
    checked: o,
    checkedIcon: s = yN,
    color: a = "primary",
    icon: l = bN,
    name: c,
    onChange: u,
    size: d = "medium",
    className: f,
    disabled: h,
    disableRipple: g = !1,
    slots: y = {},
    slotProps: m = {},
    inputProps: v,
    ...x
  } = r, E = xl();
  let w = h;
  E && typeof w > "u" && (w = E.disabled), w ?? (w = !1);
  const S = {
    ...r,
    disabled: w,
    disableRipple: g,
    color: a,
    size: d
  }, b = mN(S), T = fN();
  let R = o;
  const $ = Fc(u, T && T.onChange);
  let I = c;
  T && (typeof R > "u" && (R = gN(T.value, r.value)), typeof I > "u" && (I = T.name));
  const p = m.input ?? v, [O, k] = dt("root", {
    ref: n,
    elementType: hN,
    className: Ce(b.root, f),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: y,
      slotProps: m,
      ...x
    },
    getSlotProps: (A) => ({
      ...A,
      onChange: (D, ..._) => {
        var M;
        (M = A.onChange) == null || M.call(A, D, ..._), $(D, ..._);
      }
    }),
    ownerState: S,
    additionalProps: {
      type: "radio",
      icon: /* @__PURE__ */ C.cloneElement(l, {
        fontSize: l.props.fontSize ?? d
      }),
      checkedIcon: /* @__PURE__ */ C.cloneElement(s, {
        fontSize: s.props.fontSize ?? d
      }),
      disabled: w,
      name: I,
      checked: R,
      slots: y,
      slotProps: {
        // Do not forward `slotProps.root` again because it's already handled by the `RootSlot` in this file.
        input: typeof p == "function" ? p(S) : p
      }
    }
  });
  return /* @__PURE__ */ P(O, {
    ...k,
    classes: b
  });
});
process.env.NODE_ENV !== "production" && (Xb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   * @default <RadioButtonIcon checked />
   */
  checkedIcon: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <RadioButtonIcon />
   */
  icon: i.node,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   * @deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputRef: Pr,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    input: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   */
  value: i.any
});
const Qb = je(
  ({ label: e = "", tooltip: t, name: n, options: r, optionLabelDirection: o = "end", value: s, onChange: a }) => /* @__PURE__ */ Pe(Kt, { gap: 0, children: [
    /* @__PURE__ */ P(Zo, { label: e, elementId: void 0, tooltip: t }),
    /* @__PURE__ */ P(Kt, { gap: 0, children: r.map((l) => /* @__PURE__ */ P(
      Sl,
      {
        labelsDirection: "row",
        startLabel: o === "start" ? l.label : "",
        endLabel: o === "end" ? l.label : "",
        isDisabled: l.isDisabled,
        renderElement: (c) => /* @__PURE__ */ P(
          Xb,
          {
            id: c,
            name: n,
            value: l.value,
            checked: s === l.value,
            disabled: l.isDisabled,
            onChange: (u) => a(r.find(({ value: d }) => d === u.target.value)),
            sx: {
              py: "6px",
              px: 0,
              mr: o === "start" ? "2px" : "8px",
              ml: o === "end" ? "2px" : "8px"
            }
          }
        )
      },
      l.value
    )) })
  ] })
);
Qb.displayName = "Radios";
function vN(e) {
  return St("MuiSwitch", e);
}
const rn = $t("MuiSwitch", ["root", "edgeStart", "edgeEnd", "switchBase", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium", "checked", "disabled", "input", "thumb", "track"]), xN = (e) => {
  const {
    classes: t,
    edge: n,
    size: r,
    color: o,
    checked: s,
    disabled: a
  } = e, l = {
    root: ["root", n && `edge${Te(n)}`, `size${Te(r)}`],
    switchBase: ["switchBase", `color${Te(o)}`, s && "checked", a && "disabled"],
    thumb: ["thumb"],
    track: ["track"],
    input: ["input"]
  }, c = Mt(l, vN, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...c
  };
}, wN = Me("span", {
  name: "MuiSwitch",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.edge && t[`edge${Te(n.edge)}`], t[`size${Te(n.size)}`]];
  }
})({
  display: "inline-flex",
  width: 34 + 12 * 2,
  height: 14 + 12 * 2,
  overflow: "hidden",
  padding: 12,
  boxSizing: "border-box",
  position: "relative",
  flexShrink: 0,
  zIndex: 0,
  // Reset the stacking context.
  verticalAlign: "middle",
  // For correct alignment with the text.
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [{
    props: {
      edge: "start"
    },
    style: {
      marginLeft: -8
    }
  }, {
    props: {
      edge: "end"
    },
    style: {
      marginRight: -8
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      width: 40,
      height: 24,
      padding: 7,
      [`& .${rn.thumb}`]: {
        width: 16,
        height: 16
      },
      [`& .${rn.switchBase}`]: {
        padding: 4,
        [`&.${rn.checked}`]: {
          transform: "translateX(16px)"
        }
      }
    }
  }]
}), SN = Me(wl, {
  name: "MuiSwitch",
  slot: "SwitchBase",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.switchBase, {
      [`& .${rn.input}`]: t.input
    }, n.color !== "default" && t[`color${Te(n.color)}`]];
  }
})(nt(({
  theme: e
}) => ({
  position: "absolute",
  top: 0,
  left: 0,
  zIndex: 1,
  // Render above the focus ripple.
  color: e.vars ? e.vars.palette.Switch.defaultColor : `${e.palette.mode === "light" ? e.palette.common.white : e.palette.grey[300]}`,
  transition: e.transitions.create(["left", "transform"], {
    duration: e.transitions.duration.shortest
  }),
  [`&.${rn.checked}`]: {
    transform: "translateX(20px)"
  },
  [`&.${rn.disabled}`]: {
    color: e.vars ? e.vars.palette.Switch.defaultDisabledColor : `${e.palette.mode === "light" ? e.palette.grey[100] : e.palette.grey[600]}`
  },
  [`&.${rn.checked} + .${rn.track}`]: {
    opacity: 0.5
  },
  [`&.${rn.disabled} + .${rn.track}`]: {
    opacity: e.vars ? e.vars.opacity.switchTrackDisabled : `${e.palette.mode === "light" ? 0.12 : 0.2}`
  },
  [`& .${rn.input}`]: {
    left: "-100%",
    width: "300%"
  }
})), nt(({
  theme: e
}) => ({
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette.action.active, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  variants: [...Object.entries(e.palette).filter(hn(["light"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${rn.checked}`]: {
        color: (e.vars || e).palette[t].main,
        "&:hover": {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[t].main, e.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        },
        [`&.${rn.disabled}`]: {
          color: e.vars ? e.vars.palette.Switch[`${t}DisabledColor`] : `${e.palette.mode === "light" ? si(e.palette[t].main, 0.62) : ii(e.palette[t].main, 0.55)}`
        }
      },
      [`&.${rn.checked} + .${rn.track}`]: {
        backgroundColor: (e.vars || e).palette[t].main
      }
    }
  }))]
}))), TN = Me("span", {
  name: "MuiSwitch",
  slot: "Track",
  overridesResolver: (e, t) => t.track
})(nt(({
  theme: e
}) => ({
  height: "100%",
  width: "100%",
  borderRadius: 14 / 2,
  zIndex: -1,
  transition: e.transitions.create(["opacity", "background-color"], {
    duration: e.transitions.duration.shortest
  }),
  backgroundColor: e.vars ? e.vars.palette.common.onBackground : `${e.palette.mode === "light" ? e.palette.common.black : e.palette.common.white}`,
  opacity: e.vars ? e.vars.opacity.switchTrack : `${e.palette.mode === "light" ? 0.38 : 0.3}`
}))), EN = Me("span", {
  name: "MuiSwitch",
  slot: "Thumb",
  overridesResolver: (e, t) => t.thumb
})(nt(({
  theme: e
}) => ({
  boxShadow: (e.vars || e).shadows[1],
  backgroundColor: "currentColor",
  width: 20,
  height: 20,
  borderRadius: "50%"
}))), Jb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = kt({
    props: t,
    name: "MuiSwitch"
  }), {
    className: o,
    color: s = "primary",
    edge: a = !1,
    size: l = "medium",
    sx: c,
    slots: u = {},
    slotProps: d = {},
    ...f
  } = r, h = {
    ...r,
    color: s,
    edge: a,
    size: l
  }, g = xN(h), y = {
    slots: u,
    slotProps: d
  }, [m, v] = dt("root", {
    className: Ce(g.root, o),
    elementType: wN,
    externalForwardedProps: y,
    ownerState: h,
    additionalProps: {
      sx: c
    }
  }), [x, E] = dt("thumb", {
    className: g.thumb,
    elementType: EN,
    externalForwardedProps: y,
    ownerState: h
  }), w = /* @__PURE__ */ P(x, {
    ...E
  }), [S, b] = dt("track", {
    className: g.track,
    elementType: TN,
    externalForwardedProps: y,
    ownerState: h
  });
  return /* @__PURE__ */ Pe(m, {
    ...v,
    children: [/* @__PURE__ */ P(SN, {
      type: "checkbox",
      icon: w,
      checkedIcon: w,
      ref: n,
      ownerState: h,
      ...f,
      classes: {
        ...g,
        root: g.switchBase
      },
      slots: {
        ...u.switchBase && {
          root: u.switchBase
        },
        ...u.input && {
          input: u.input
        }
      },
      slotProps: {
        ...d.switchBase && {
          root: typeof d.switchBase == "function" ? d.switchBase(h) : d.switchBase
        },
        ...d.input && {
          input: typeof d.input == "function" ? d.input(h) : d.input
        }
      }
    }), /* @__PURE__ */ P(S, {
      ...b
    })]
  });
});
process.env.NODE_ENV !== "production" && (Jb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: i.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: i.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: i.node,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   * @deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputRef: Pr,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense switch styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    input: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    switchBase: i.oneOfType([i.func, i.object]),
    thumb: i.oneOfType([i.func, i.object]),
    track: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType,
    switchBase: i.elementType,
    thumb: i.elementType,
    track: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: i.any
});
const qd = je(
  ({ value: e, onChange: t, startLabel: n, endLabel: r, labelsDirection: o = "row", isDisabled: s }) => {
    const a = an(
      (l) => /* @__PURE__ */ P(
        Jb,
        {
          id: l,
          color: "primary",
          checked: e,
          disabled: s,
          onChange: (c) => t(c.target.checked),
          sx: {
            "& .MuiSwitch-track": {
              transition: "background-color 0s"
            }
          }
        }
      ),
      [e, t]
    );
    return n || r ? /* @__PURE__ */ P(
      Sl,
      {
        labelsDirection: o,
        startLabel: n,
        endLabel: r,
        isDisabled: s,
        renderElement: a
      }
    ) : a();
  }
);
qd.displayName = "Switch";
var Rs = (e) => e.type === "checkbox", ao = (e) => e instanceof Date, on = (e) => e == null;
const Zb = (e) => typeof e == "object";
var Nt = (e) => !on(e) && !Array.isArray(e) && Zb(e) && !ao(e), ev = (e) => Nt(e) && e.target ? Rs(e.target) ? e.target.checked : e.target.value : e, CN = (e) => e.substring(0, e.search(/\.\d+(\.|$)/)) || e, tv = (e, t) => e.has(CN(t)), ON = (e) => {
  const t = e.constructor && e.constructor.prototype;
  return Nt(t) && t.hasOwnProperty("isPrototypeOf");
}, Yd = typeof window < "u" && typeof window.HTMLElement < "u" && typeof document < "u";
function wt(e) {
  let t;
  const n = Array.isArray(e), r = typeof FileList < "u" ? e instanceof FileList : !1;
  if (e instanceof Date)
    t = new Date(e);
  else if (e instanceof Set)
    t = new Set(e);
  else if (!(Yd && (e instanceof Blob || r)) && (n || Nt(e)))
    if (t = n ? [] : {}, !n && !ON(e))
      t = e;
    else
      for (const o in e)
        e.hasOwnProperty(o) && (t[o] = wt(e[o]));
  else
    return e;
  return t;
}
var $s = (e) => Array.isArray(e) ? e.filter(Boolean) : [], mt = (e) => e === void 0, ve = (e, t, n) => {
  if (!t || !Nt(e))
    return n;
  const r = $s(t.split(/[,[\].]+?/)).reduce((o, s) => on(o) ? o : o[s], e);
  return mt(r) || r === e ? mt(e[t]) ? n : e[t] : r;
}, gn = (e) => typeof e == "boolean", Gd = (e) => /^\w*$/.test(e), nv = (e) => $s(e.replace(/["|']|\]/g, "").split(/\.|\[/)), Ge = (e, t, n) => {
  let r = -1;
  const o = Gd(t) ? [t] : nv(t), s = o.length, a = s - 1;
  for (; ++r < s; ) {
    const l = o[r];
    let c = n;
    if (r !== a) {
      const u = e[l];
      c = Nt(u) || Array.isArray(u) ? u : isNaN(+o[r + 1]) ? {} : [];
    }
    if (l === "__proto__" || l === "constructor" || l === "prototype")
      return;
    e[l] = c, e = e[l];
  }
};
const Fa = {
  BLUR: "blur",
  FOCUS_OUT: "focusout",
  CHANGE: "change"
}, Nn = {
  onBlur: "onBlur",
  onChange: "onChange",
  onSubmit: "onSubmit",
  onTouched: "onTouched",
  all: "all"
}, wr = {
  max: "max",
  min: "min",
  maxLength: "maxLength",
  minLength: "minLength",
  pattern: "pattern",
  required: "required",
  validate: "validate"
}, rv = L.createContext(null), Vn = () => L.useContext(rv), RN = (e) => {
  const { children: t, ...n } = e;
  return L.createElement(rv.Provider, { value: n }, t);
};
var ov = (e, t, n, r = !0) => {
  const o = {
    defaultValues: t._defaultValues
  };
  for (const s in e)
    Object.defineProperty(o, s, {
      get: () => {
        const a = s;
        return t._proxyFormState[a] !== Nn.all && (t._proxyFormState[a] = !r || Nn.all), n && (n[a] = !0), e[a];
      }
    });
  return o;
};
function $N(e) {
  const t = Vn(), { control: n = t.control, disabled: r, name: o, exact: s } = e || {}, [a, l] = L.useState(n._formState), c = L.useRef({
    isDirty: !1,
    isLoading: !1,
    dirtyFields: !1,
    touchedFields: !1,
    validatingFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  }), u = L.useRef(o);
  return u.current = o, L.useEffect(() => n._subscribe({
    name: u.current,
    formState: c.current,
    exact: s,
    callback: (d) => {
      !r && l({
        ...n._formState,
        ...d
      });
    }
  }), [n, r, s]), L.useEffect(() => {
    c.current.isValid && n._setValid(!0);
  }, [n]), L.useMemo(() => ov(a, n, c.current, !1), [a, n]);
}
var or = (e) => typeof e == "string", iv = (e, t, n, r, o) => or(e) ? (r && t.watch.add(e), ve(n, e, o)) : Array.isArray(e) ? e.map((s) => (r && t.watch.add(s), ve(n, s))) : (r && (t.watchAll = !0), n);
function kN(e) {
  const t = Vn(), { control: n = t.control, name: r, defaultValue: o, disabled: s, exact: a } = e || {}, l = L.useRef(r), c = L.useRef(o);
  l.current = r, L.useEffect(() => n._subscribe({
    name: l.current,
    formState: {
      values: !0
    },
    exact: a,
    callback: (f) => !s && d(iv(l.current, n._names, f.values || n._formValues, !1, c.current))
  }), [n, s, a]);
  const [u, d] = L.useState(n._getWatch(r, o));
  return L.useEffect(() => n._removeUnmounted()), u;
}
function PN(e) {
  const t = Vn(), { name: n, disabled: r, control: o = t.control, shouldUnregister: s } = e, a = tv(o._names.array, n), l = kN({
    control: o,
    name: n,
    defaultValue: ve(o._formValues, n, ve(o._defaultValues, n, e.defaultValue)),
    exact: !0
  }), c = $N({
    control: o,
    name: n,
    exact: !0
  }), u = L.useRef(e), d = L.useRef(o.register(n, {
    ...e.rules,
    value: l,
    ...gn(e.disabled) ? { disabled: e.disabled } : {}
  })), f = L.useMemo(() => Object.defineProperties({}, {
    invalid: {
      enumerable: !0,
      get: () => !!ve(c.errors, n)
    },
    isDirty: {
      enumerable: !0,
      get: () => !!ve(c.dirtyFields, n)
    },
    isTouched: {
      enumerable: !0,
      get: () => !!ve(c.touchedFields, n)
    },
    isValidating: {
      enumerable: !0,
      get: () => !!ve(c.validatingFields, n)
    },
    error: {
      enumerable: !0,
      get: () => ve(c.errors, n)
    }
  }), [c, n]), h = L.useCallback((v) => d.current.onChange({
    target: {
      value: ev(v),
      name: n
    },
    type: Fa.CHANGE
  }), [n]), g = L.useCallback(() => d.current.onBlur({
    target: {
      value: ve(o._formValues, n),
      name: n
    },
    type: Fa.BLUR
  }), [n, o._formValues]), y = L.useCallback((v) => {
    const x = ve(o._fields, n);
    x && v && (x._f.ref = {
      focus: () => v.focus(),
      select: () => v.select(),
      setCustomValidity: (E) => v.setCustomValidity(E),
      reportValidity: () => v.reportValidity()
    });
  }, [o._fields, n]), m = L.useMemo(() => ({
    name: n,
    value: l,
    ...gn(r) || c.disabled ? { disabled: c.disabled || r } : {},
    onChange: h,
    onBlur: g,
    ref: y
  }), [n, r, c.disabled, h, g, y, l]);
  return L.useEffect(() => {
    const v = o._options.shouldUnregister || s;
    o.register(n, {
      ...u.current.rules,
      ...gn(u.current.disabled) ? { disabled: u.current.disabled } : {}
    });
    const x = (E, w) => {
      const S = ve(o._fields, E);
      S && S._f && (S._f.mount = w);
    };
    if (x(n, !0), v) {
      const E = wt(ve(o._options.defaultValues, n));
      Ge(o._defaultValues, n, E), mt(ve(o._formValues, n)) && Ge(o._formValues, n, E);
    }
    return !a && o.register(n), () => {
      (a ? v && !o._state.action : v) ? o.unregister(n) : x(n, !1);
    };
  }, [n, o, a, s]), L.useEffect(() => {
    o._setDisabledField({
      disabled: r,
      name: n
    });
  }, [r, n, o]), L.useMemo(() => ({
    field: m,
    formState: c,
    fieldState: f
  }), [m, c, f]);
}
const vo = (e) => e.render(PN(e));
var sv = (e, t, n, r, o) => t ? {
  ...n[e],
  types: {
    ...n[e] && n[e].types ? n[e].types : {},
    [r]: o || !0
  }
} : {}, un = (e) => Array.isArray(e) ? e : [e], Lm = () => {
  let e = [];
  return {
    get observers() {
      return e;
    },
    next: (o) => {
      for (const s of e)
        s.next && s.next(o);
    },
    subscribe: (o) => (e.push(o), {
      unsubscribe: () => {
        e = e.filter((s) => s !== o);
      }
    }),
    unsubscribe: () => {
      e = [];
    }
  };
}, gu = (e) => on(e) || !Zb(e);
function Br(e, t) {
  if (gu(e) || gu(t))
    return e === t;
  if (ao(e) && ao(t))
    return e.getTime() === t.getTime();
  const n = Object.keys(e), r = Object.keys(t);
  if (n.length !== r.length)
    return !1;
  for (const o of n) {
    const s = e[o];
    if (!r.includes(o))
      return !1;
    if (o !== "ref") {
      const a = t[o];
      if (ao(s) && ao(a) || Nt(s) && Nt(a) || Array.isArray(s) && Array.isArray(a) ? !Br(s, a) : s !== a)
        return !1;
    }
  }
  return !0;
}
var Jt = (e) => Nt(e) && !Object.keys(e).length, Kd = (e) => e.type === "file", Un = (e) => typeof e == "function", ja = (e) => {
  if (!Yd)
    return !1;
  const t = e ? e.ownerDocument : 0;
  return e instanceof (t && t.defaultView ? t.defaultView.HTMLElement : HTMLElement);
}, av = (e) => e.type === "select-multiple", Xd = (e) => e.type === "radio", IN = (e) => Xd(e) || Rs(e), wc = (e) => ja(e) && e.isConnected;
function NN(e, t) {
  const n = t.slice(0, -1).length;
  let r = 0;
  for (; r < n; )
    e = mt(e) ? r++ : e[t[r++]];
  return e;
}
function AN(e) {
  for (const t in e)
    if (e.hasOwnProperty(t) && !mt(e[t]))
      return !1;
  return !0;
}
function Bt(e, t) {
  const n = Array.isArray(t) ? t : Gd(t) ? [t] : nv(t), r = n.length === 1 ? e : NN(e, n), o = n.length - 1, s = n[o];
  return r && delete r[s], o !== 0 && (Nt(r) && Jt(r) || Array.isArray(r) && AN(r)) && Bt(e, n.slice(0, -1)), e;
}
var lv = (e) => {
  for (const t in e)
    if (Un(e[t]))
      return !0;
  return !1;
};
function La(e, t = {}) {
  const n = Array.isArray(e);
  if (Nt(e) || n)
    for (const r in e)
      Array.isArray(e[r]) || Nt(e[r]) && !lv(e[r]) ? (t[r] = Array.isArray(e[r]) ? [] : {}, La(e[r], t[r])) : on(e[r]) || (t[r] = !0);
  return t;
}
function cv(e, t, n) {
  const r = Array.isArray(e);
  if (Nt(e) || r)
    for (const o in e)
      Array.isArray(e[o]) || Nt(e[o]) && !lv(e[o]) ? mt(t) || gu(n[o]) ? n[o] = Array.isArray(e[o]) ? La(e[o], []) : { ...La(e[o]) } : cv(e[o], on(t) ? {} : t[o], n[o]) : n[o] = !Br(e[o], t[o]);
  return n;
}
var Ei = (e, t) => cv(e, t, La(t));
const Vm = {
  value: !1,
  isValid: !1
}, zm = { value: !0, isValid: !0 };
var uv = (e) => {
  if (Array.isArray(e)) {
    if (e.length > 1) {
      const t = e.filter((n) => n && n.checked && !n.disabled).map((n) => n.value);
      return { value: t, isValid: !!t.length };
    }
    return e[0].checked && !e[0].disabled ? (
      // @ts-expect-error expected to work in the browser
      e[0].attributes && !mt(e[0].attributes.value) ? mt(e[0].value) || e[0].value === "" ? zm : { value: e[0].value, isValid: !0 } : zm
    ) : Vm;
  }
  return Vm;
}, dv = (e, { valueAsNumber: t, valueAsDate: n, setValueAs: r }) => mt(e) ? e : t ? e === "" ? NaN : e && +e : n && or(e) ? new Date(e) : r ? r(e) : e;
const Wm = {
  isValid: !1,
  value: null
};
var fv = (e) => Array.isArray(e) ? e.reduce((t, n) => n && n.checked && !n.disabled ? {
  isValid: !0,
  value: n.value
} : t, Wm) : Wm;
function Um(e) {
  const t = e.ref;
  return Kd(t) ? t.files : Xd(t) ? fv(e.refs).value : av(t) ? [...t.selectedOptions].map(({ value: n }) => n) : Rs(t) ? uv(e.refs).value : dv(mt(t.value) ? e.ref.value : t.value, e);
}
var MN = (e, t, n, r) => {
  const o = {};
  for (const s of e) {
    const a = ve(t, s);
    a && Ge(o, s, a._f);
  }
  return {
    criteriaMode: n,
    names: [...e],
    fields: o,
    shouldUseNativeValidation: r
  };
}, Va = (e) => e instanceof RegExp, Ci = (e) => mt(e) ? e : Va(e) ? e.source : Nt(e) ? Va(e.value) ? e.value.source : e.value : e, Do = (e) => ({
  isOnSubmit: !e || e === Nn.onSubmit,
  isOnBlur: e === Nn.onBlur,
  isOnChange: e === Nn.onChange,
  isOnAll: e === Nn.all,
  isOnTouch: e === Nn.onTouched
});
const Hm = "AsyncFunction";
var _N = (e) => !!e && !!e.validate && !!(Un(e.validate) && e.validate.constructor.name === Hm || Nt(e.validate) && Object.values(e.validate).find((t) => t.constructor.name === Hm)), DN = (e) => e.mount && (e.required || e.min || e.max || e.maxLength || e.minLength || e.pattern || e.validate), yu = (e, t, n) => !n && (t.watchAll || t.watch.has(e) || [...t.watch].some((r) => e.startsWith(r) && /^\.\w+/.test(e.slice(r.length))));
const Vo = (e, t, n, r) => {
  for (const o of n || Object.keys(e)) {
    const s = ve(e, o);
    if (s) {
      const { _f: a, ...l } = s;
      if (a) {
        if (a.refs && a.refs[0] && t(a.refs[0], o) && !r)
          return !0;
        if (a.ref && t(a.ref, a.name) && !r)
          return !0;
        if (Vo(l, t))
          break;
      } else if (Nt(l) && Vo(l, t))
        break;
    }
  }
};
function qm(e, t, n) {
  const r = ve(e, n);
  if (r || Gd(n))
    return {
      error: r,
      name: n
    };
  const o = n.split(".");
  for (; o.length; ) {
    const s = o.join("."), a = ve(t, s), l = ve(e, s);
    if (a && !Array.isArray(a) && n !== s)
      return { name: n };
    if (l && l.type)
      return {
        name: s,
        error: l
      };
    o.pop();
  }
  return {
    name: n
  };
}
var BN = (e, t, n, r) => {
  n(e);
  const { name: o, ...s } = e;
  return Jt(s) || Object.keys(s).length >= Object.keys(t).length || Object.keys(s).find((a) => t[a] === (!r || Nn.all));
}, FN = (e, t, n) => !e || !t || e === t || un(e).some((r) => r && (n ? r === t : r.startsWith(t) || t.startsWith(r))), jN = (e, t, n, r, o) => o.isOnAll ? !1 : !n && o.isOnTouch ? !(t || e) : (n ? r.isOnBlur : o.isOnBlur) ? !e : (n ? r.isOnChange : o.isOnChange) ? e : !0, LN = (e, t) => !$s(ve(e, t)).length && Bt(e, t), pv = (e, t, n) => {
  const r = un(ve(e, n));
  return Ge(r, "root", t[n]), Ge(e, n, r), e;
}, ua = (e) => or(e);
function Ym(e, t, n = "validate") {
  if (ua(e) || Array.isArray(e) && e.every(ua) || gn(e) && !e)
    return {
      type: n,
      message: ua(e) ? e : "",
      ref: t
    };
}
var Io = (e) => Nt(e) && !Va(e) ? e : {
  value: e,
  message: ""
}, bu = async (e, t, n, r, o, s) => {
  const { ref: a, refs: l, required: c, maxLength: u, minLength: d, min: f, max: h, pattern: g, validate: y, name: m, valueAsNumber: v, mount: x } = e._f, E = ve(n, m);
  if (!x || t.has(m))
    return {};
  const w = l ? l[0] : a, S = (k) => {
    o && w.reportValidity && (w.setCustomValidity(gn(k) ? "" : k || ""), w.reportValidity());
  }, b = {}, T = Xd(a), R = Rs(a), $ = T || R, I = (v || Kd(a)) && mt(a.value) && mt(E) || ja(a) && a.value === "" || E === "" || Array.isArray(E) && !E.length, p = sv.bind(null, m, r, b), O = (k, A, D, _ = wr.maxLength, M = wr.minLength) => {
    const z = k ? A : D;
    b[m] = {
      type: k ? _ : M,
      message: z,
      ref: a,
      ...p(k ? _ : M, z)
    };
  };
  if (s ? !Array.isArray(E) || !E.length : c && (!$ && (I || on(E)) || gn(E) && !E || R && !uv(l).isValid || T && !fv(l).isValid)) {
    const { value: k, message: A } = ua(c) ? { value: !!c, message: c } : Io(c);
    if (k && (b[m] = {
      type: wr.required,
      message: A,
      ref: w,
      ...p(wr.required, A)
    }, !r))
      return S(A), b;
  }
  if (!I && (!on(f) || !on(h))) {
    let k, A;
    const D = Io(h), _ = Io(f);
    if (!on(E) && !isNaN(E)) {
      const M = a.valueAsNumber || E && +E;
      on(D.value) || (k = M > D.value), on(_.value) || (A = M < _.value);
    } else {
      const M = a.valueAsDate || new Date(E), z = (j) => /* @__PURE__ */ new Date((/* @__PURE__ */ new Date()).toDateString() + " " + j), Y = a.type == "time", H = a.type == "week";
      or(D.value) && E && (k = Y ? z(E) > z(D.value) : H ? E > D.value : M > new Date(D.value)), or(_.value) && E && (A = Y ? z(E) < z(_.value) : H ? E < _.value : M < new Date(_.value));
    }
    if ((k || A) && (O(!!k, D.message, _.message, wr.max, wr.min), !r))
      return S(b[m].message), b;
  }
  if ((u || d) && !I && (or(E) || s && Array.isArray(E))) {
    const k = Io(u), A = Io(d), D = !on(k.value) && E.length > +k.value, _ = !on(A.value) && E.length < +A.value;
    if ((D || _) && (O(D, k.message, A.message), !r))
      return S(b[m].message), b;
  }
  if (g && !I && or(E)) {
    const { value: k, message: A } = Io(g);
    if (Va(k) && !E.match(k) && (b[m] = {
      type: wr.pattern,
      message: A,
      ref: a,
      ...p(wr.pattern, A)
    }, !r))
      return S(A), b;
  }
  if (y) {
    if (Un(y)) {
      const k = await y(E, n), A = Ym(k, w);
      if (A && (b[m] = {
        ...A,
        ...p(wr.validate, A.message)
      }, !r))
        return S(A.message), b;
    } else if (Nt(y)) {
      let k = {};
      for (const A in y) {
        if (!Jt(k) && !r)
          break;
        const D = Ym(await y[A](E, n), w, A);
        D && (k = {
          ...D,
          ...p(A, D.message)
        }, S(D.message), r && (b[m] = k));
      }
      if (!Jt(k) && (b[m] = {
        ref: w,
        ...k
      }, !r))
        return b;
    }
  }
  return S(!0), b;
};
const VN = {
  mode: Nn.onSubmit,
  reValidateMode: Nn.onChange,
  shouldFocusError: !0
};
function zN(e = {}) {
  let t = {
    ...VN,
    ...e
  }, n = {
    submitCount: 0,
    isDirty: !1,
    isLoading: Un(t.defaultValues),
    isValidating: !1,
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    touchedFields: {},
    dirtyFields: {},
    validatingFields: {},
    errors: t.errors || {},
    disabled: t.disabled || !1
  };
  const r = {};
  let o = Nt(t.defaultValues) || Nt(t.values) ? wt(t.values || t.defaultValues) || {} : {}, s = t.shouldUnregister ? {} : wt(o), a = {
    action: !1,
    mount: !1,
    watch: !1
  }, l = {
    mount: /* @__PURE__ */ new Set(),
    disabled: /* @__PURE__ */ new Set(),
    unMount: /* @__PURE__ */ new Set(),
    array: /* @__PURE__ */ new Set(),
    watch: /* @__PURE__ */ new Set()
  }, c, u = 0;
  const d = {
    isDirty: !1,
    dirtyFields: !1,
    validatingFields: !1,
    touchedFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  };
  let f = {
    ...d
  };
  const h = {
    array: Lm(),
    state: Lm()
  }, g = Do(t.mode), y = Do(t.reValidateMode), m = t.criteriaMode === Nn.all, v = (N) => (q) => {
    clearTimeout(u), u = setTimeout(N, q);
  }, x = async (N) => {
    if (!t.disabled && (d.isValid || f.isValid || N)) {
      const q = t.resolver ? Jt((await I()).errors) : await O(r, !0);
      q !== n.isValid && h.state.next({
        isValid: q
      });
    }
  }, E = (N, q) => {
    !t.disabled && (d.isValidating || d.validatingFields || f.isValidating || f.validatingFields) && ((N || Array.from(l.mount)).forEach((J) => {
      J && (q ? Ge(n.validatingFields, J, q) : Bt(n.validatingFields, J));
    }), h.state.next({
      validatingFields: n.validatingFields,
      isValidating: !Jt(n.validatingFields)
    }));
  }, w = (N, q = [], J, U, B = !0, V = !0) => {
    if (U && J && !t.disabled) {
      if (a.action = !0, V && Array.isArray(ve(r, N))) {
        const G = J(ve(r, N), U.argA, U.argB);
        B && Ge(r, N, G);
      }
      if (V && Array.isArray(ve(n.errors, N))) {
        const G = J(ve(n.errors, N), U.argA, U.argB);
        B && Ge(n.errors, N, G), LN(n.errors, N);
      }
      if ((d.touchedFields || f.touchedFields) && V && Array.isArray(ve(n.touchedFields, N))) {
        const G = J(ve(n.touchedFields, N), U.argA, U.argB);
        B && Ge(n.touchedFields, N, G);
      }
      (d.dirtyFields || f.dirtyFields) && (n.dirtyFields = Ei(o, s)), h.state.next({
        name: N,
        isDirty: A(N, q),
        dirtyFields: n.dirtyFields,
        errors: n.errors,
        isValid: n.isValid
      });
    } else
      Ge(s, N, q);
  }, S = (N, q) => {
    Ge(n.errors, N, q), h.state.next({
      errors: n.errors
    });
  }, b = (N) => {
    n.errors = N, h.state.next({
      errors: n.errors,
      isValid: !1
    });
  }, T = (N, q, J, U) => {
    const B = ve(r, N);
    if (B) {
      const V = ve(s, N, mt(J) ? ve(o, N) : J);
      mt(V) || U && U.defaultChecked || q ? Ge(s, N, q ? V : Um(B._f)) : M(N, V), a.mount && x();
    }
  }, R = (N, q, J, U, B) => {
    let V = !1, G = !1;
    const pe = {
      name: N
    };
    if (!t.disabled) {
      if (!J || U) {
        (d.isDirty || f.isDirty) && (G = n.isDirty, n.isDirty = pe.isDirty = A(), V = G !== pe.isDirty);
        const me = Br(ve(o, N), q);
        G = !!ve(n.dirtyFields, N), me ? Bt(n.dirtyFields, N) : Ge(n.dirtyFields, N, !0), pe.dirtyFields = n.dirtyFields, V = V || (d.dirtyFields || f.dirtyFields) && G !== !me;
      }
      if (J) {
        const me = ve(n.touchedFields, N);
        me || (Ge(n.touchedFields, N, J), pe.touchedFields = n.touchedFields, V = V || (d.touchedFields || f.touchedFields) && me !== J);
      }
      V && B && h.state.next(pe);
    }
    return V ? pe : {};
  }, $ = (N, q, J, U) => {
    const B = ve(n.errors, N), V = (d.isValid || f.isValid) && gn(q) && n.isValid !== q;
    if (t.delayError && J ? (c = v(() => S(N, J)), c(t.delayError)) : (clearTimeout(u), c = null, J ? Ge(n.errors, N, J) : Bt(n.errors, N)), (J ? !Br(B, J) : B) || !Jt(U) || V) {
      const G = {
        ...U,
        ...V && gn(q) ? { isValid: q } : {},
        errors: n.errors,
        name: N
      };
      n = {
        ...n,
        ...G
      }, h.state.next(G);
    }
  }, I = async (N) => {
    E(N, !0);
    const q = await t.resolver(s, t.context, MN(N || l.mount, r, t.criteriaMode, t.shouldUseNativeValidation));
    return E(N), q;
  }, p = async (N) => {
    const { errors: q } = await I(N);
    if (N)
      for (const J of N) {
        const U = ve(q, J);
        U ? Ge(n.errors, J, U) : Bt(n.errors, J);
      }
    else
      n.errors = q;
    return q;
  }, O = async (N, q, J = {
    valid: !0
  }) => {
    for (const U in N) {
      const B = N[U];
      if (B) {
        const { _f: V, ...G } = B;
        if (V) {
          const pe = l.array.has(V.name), me = B._f && _N(B._f);
          me && d.validatingFields && E([U], !0);
          const re = await bu(B, l.disabled, s, m, t.shouldUseNativeValidation && !q, pe);
          if (me && d.validatingFields && E([U]), re[V.name] && (J.valid = !1, q))
            break;
          !q && (ve(re, V.name) ? pe ? pv(n.errors, re, V.name) : Ge(n.errors, V.name, re[V.name]) : Bt(n.errors, V.name));
        }
        !Jt(G) && await O(G, q, J);
      }
    }
    return J.valid;
  }, k = () => {
    for (const N of l.unMount) {
      const q = ve(r, N);
      q && (q._f.refs ? q._f.refs.every((J) => !wc(J)) : !wc(q._f.ref)) && ae(N);
    }
    l.unMount = /* @__PURE__ */ new Set();
  }, A = (N, q) => !t.disabled && (N && q && Ge(s, N, q), !Br(ee(), o)), D = (N, q, J) => iv(N, l, {
    ...a.mount ? s : mt(q) ? o : or(N) ? { [N]: q } : q
  }, J, q), _ = (N) => $s(ve(a.mount ? s : o, N, t.shouldUnregister ? ve(o, N, []) : [])), M = (N, q, J = {}) => {
    const U = ve(r, N);
    let B = q;
    if (U) {
      const V = U._f;
      V && (!V.disabled && Ge(s, N, dv(q, V)), B = ja(V.ref) && on(q) ? "" : q, av(V.ref) ? [...V.ref.options].forEach((G) => G.selected = B.includes(G.value)) : V.refs ? Rs(V.ref) ? V.refs.length > 1 ? V.refs.forEach((G) => (!G.defaultChecked || !G.disabled) && (G.checked = Array.isArray(B) ? !!B.find((pe) => pe === G.value) : B === G.value)) : V.refs[0] && (V.refs[0].checked = !!B) : V.refs.forEach((G) => G.checked = G.value === B) : Kd(V.ref) ? V.ref.value = "" : (V.ref.value = B, V.ref.type || h.state.next({
        name: N,
        values: wt(s)
      })));
    }
    (J.shouldDirty || J.shouldTouch) && R(N, B, J.shouldTouch, J.shouldDirty, !0), J.shouldValidate && W(N);
  }, z = (N, q, J) => {
    for (const U in q) {
      const B = q[U], V = `${N}.${U}`, G = ve(r, V);
      (l.array.has(N) || Nt(B) || G && !G._f) && !ao(B) ? z(V, B, J) : M(V, B, J);
    }
  }, Y = (N, q, J = {}) => {
    const U = ve(r, N), B = l.array.has(N), V = wt(q);
    Ge(s, N, V), B ? (h.array.next({
      name: N,
      values: wt(s)
    }), (d.isDirty || d.dirtyFields || f.isDirty || f.dirtyFields) && J.shouldDirty && h.state.next({
      name: N,
      dirtyFields: Ei(o, s),
      isDirty: A(N, V)
    })) : U && !U._f && !on(V) ? z(N, V, J) : M(N, V, J), yu(N, l) && h.state.next({ ...n }), h.state.next({
      name: a.mount ? N : void 0,
      values: wt(s)
    });
  }, H = async (N) => {
    a.mount = !0;
    const q = N.target;
    let J = q.name, U = !0;
    const B = ve(r, J), V = (G) => {
      U = Number.isNaN(G) || ao(G) && isNaN(G.getTime()) || Br(G, ve(s, J, G));
    };
    if (B) {
      let G, pe;
      const me = q.type ? Um(B._f) : ev(N), re = N.type === Fa.BLUR || N.type === Fa.FOCUS_OUT, Z = !DN(B._f) && !t.resolver && !ve(n.errors, J) && !B._f.deps || jN(re, ve(n.touchedFields, J), n.isSubmitted, y, g), te = yu(J, l, re);
      Ge(s, J, me), re ? (B._f.onBlur && B._f.onBlur(N), c && c(0)) : B._f.onChange && B._f.onChange(N);
      const ye = R(J, me, re), we = !Jt(ye) || te;
      if (!re && h.state.next({
        name: J,
        type: N.type,
        values: wt(s)
      }), Z)
        return (d.isValid || f.isValid) && (t.mode === "onBlur" ? re && x() : re || x()), we && h.state.next({ name: J, ...te ? {} : ye });
      if (!re && te && h.state.next({ ...n }), t.resolver) {
        const { errors: le } = await I([J]);
        if (V(me), U) {
          const xe = qm(n.errors, r, J), Ae = qm(le, r, xe.name || J);
          G = Ae.error, J = Ae.name, pe = Jt(le);
        }
      } else
        E([J], !0), G = (await bu(B, l.disabled, s, m, t.shouldUseNativeValidation))[J], E([J]), V(me), U && (G ? pe = !1 : (d.isValid || f.isValid) && (pe = await O(r, !0)));
      U && (B._f.deps && W(B._f.deps), $(J, pe, G, ye));
    }
  }, j = (N, q) => {
    if (ve(n.errors, q) && N.focus)
      return N.focus(), 1;
  }, W = async (N, q = {}) => {
    let J, U;
    const B = un(N);
    if (t.resolver) {
      const V = await p(mt(N) ? N : B);
      J = Jt(V), U = N ? !B.some((G) => ve(V, G)) : J;
    } else N ? (U = (await Promise.all(B.map(async (V) => {
      const G = ve(r, V);
      return await O(G && G._f ? { [V]: G } : G);
    }))).every(Boolean), !(!U && !n.isValid) && x()) : U = J = await O(r);
    return h.state.next({
      ...!or(N) || (d.isValid || f.isValid) && J !== n.isValid ? {} : { name: N },
      ...t.resolver || !N ? { isValid: J } : {},
      errors: n.errors
    }), q.shouldFocus && !U && Vo(r, j, N ? B : l.mount), U;
  }, ee = (N) => {
    const q = {
      ...a.mount ? s : o
    };
    return mt(N) ? q : or(N) ? ve(q, N) : N.map((J) => ve(q, J));
  }, K = (N, q) => ({
    invalid: !!ve((q || n).errors, N),
    isDirty: !!ve((q || n).dirtyFields, N),
    error: ve((q || n).errors, N),
    isValidating: !!ve(n.validatingFields, N),
    isTouched: !!ve((q || n).touchedFields, N)
  }), oe = (N) => {
    N && un(N).forEach((q) => Bt(n.errors, q)), h.state.next({
      errors: N ? n.errors : {}
    });
  }, ne = (N, q, J) => {
    const U = (ve(r, N, { _f: {} })._f || {}).ref, B = ve(n.errors, N) || {}, { ref: V, message: G, type: pe, ...me } = B;
    Ge(n.errors, N, {
      ...me,
      ...q,
      ref: U
    }), h.state.next({
      name: N,
      errors: n.errors,
      isValid: !1
    }), J && J.shouldFocus && U && U.focus && U.focus();
  }, se = (N, q) => Un(N) ? h.state.subscribe({
    next: (J) => N(D(void 0, q), J)
  }) : D(N, q, !0), de = (N) => h.state.subscribe({
    next: (q) => {
      FN(N.name, q.name, N.exact) && BN(q, N.formState || d, Re, N.reRenderRoot) && N.callback({
        values: { ...s },
        ...n,
        ...q
      });
    }
  }).unsubscribe, X = (N) => (a.mount = !0, f = {
    ...f,
    ...N.formState
  }, de({
    ...N,
    formState: f
  })), ae = (N, q = {}) => {
    for (const J of N ? un(N) : l.mount)
      l.mount.delete(J), l.array.delete(J), q.keepValue || (Bt(r, J), Bt(s, J)), !q.keepError && Bt(n.errors, J), !q.keepDirty && Bt(n.dirtyFields, J), !q.keepTouched && Bt(n.touchedFields, J), !q.keepIsValidating && Bt(n.validatingFields, J), !t.shouldUnregister && !q.keepDefaultValue && Bt(o, J);
    h.state.next({
      values: wt(s)
    }), h.state.next({
      ...n,
      ...q.keepDirty ? { isDirty: A() } : {}
    }), !q.keepIsValid && x();
  }, Q = ({ disabled: N, name: q }) => {
    (gn(N) && a.mount || N || l.disabled.has(q)) && (N ? l.disabled.add(q) : l.disabled.delete(q));
  }, ie = (N, q = {}) => {
    let J = ve(r, N);
    const U = gn(q.disabled) || gn(t.disabled);
    return Ge(r, N, {
      ...J || {},
      _f: {
        ...J && J._f ? J._f : { ref: { name: N } },
        name: N,
        mount: !0,
        ...q
      }
    }), l.mount.add(N), J ? Q({
      disabled: gn(q.disabled) ? q.disabled : t.disabled,
      name: N
    }) : T(N, !0, q.value), {
      ...U ? { disabled: q.disabled || t.disabled } : {},
      ...t.progressive ? {
        required: !!q.required,
        min: Ci(q.min),
        max: Ci(q.max),
        minLength: Ci(q.minLength),
        maxLength: Ci(q.maxLength),
        pattern: Ci(q.pattern)
      } : {},
      name: N,
      onChange: H,
      onBlur: H,
      ref: (B) => {
        if (B) {
          ie(N, q), J = ve(r, N);
          const V = mt(B.value) && B.querySelectorAll && B.querySelectorAll("input,select,textarea")[0] || B, G = IN(V), pe = J._f.refs || [];
          if (G ? pe.find((me) => me === V) : V === J._f.ref)
            return;
          Ge(r, N, {
            _f: {
              ...J._f,
              ...G ? {
                refs: [
                  ...pe.filter(wc),
                  V,
                  ...Array.isArray(ve(o, N)) ? [{}] : []
                ],
                ref: { type: V.type, name: N }
              } : { ref: V }
            }
          }), T(N, !1, void 0, V);
        } else
          J = ve(r, N, {}), J._f && (J._f.mount = !1), (t.shouldUnregister || q.shouldUnregister) && !(tv(l.array, N) && a.action) && l.unMount.add(N);
      }
    };
  }, F = () => t.shouldFocusError && Vo(r, j, l.mount), he = (N) => {
    gn(N) && (h.state.next({ disabled: N }), Vo(r, (q, J) => {
      const U = ve(r, J);
      U && (q.disabled = U._f.disabled || N, Array.isArray(U._f.refs) && U._f.refs.forEach((B) => {
        B.disabled = U._f.disabled || N;
      }));
    }, 0, !1));
  }, fe = (N, q) => async (J) => {
    let U;
    J && (J.preventDefault && J.preventDefault(), J.persist && J.persist());
    let B = wt(s);
    if (h.state.next({
      isSubmitting: !0
    }), t.resolver) {
      const { errors: V, values: G } = await I();
      n.errors = V, B = G;
    } else
      await O(r);
    if (l.disabled.size)
      for (const V of l.disabled)
        Ge(B, V, void 0);
    if (Bt(n.errors, "root"), Jt(n.errors)) {
      h.state.next({
        errors: {}
      });
      try {
        await N(B, J);
      } catch (V) {
        U = V;
      }
    } else
      q && await q({ ...n.errors }, J), F(), setTimeout(F);
    if (h.state.next({
      isSubmitted: !0,
      isSubmitting: !1,
      isSubmitSuccessful: Jt(n.errors) && !U,
      submitCount: n.submitCount + 1,
      errors: n.errors
    }), U)
      throw U;
  }, Se = (N, q = {}) => {
    ve(r, N) && (mt(q.defaultValue) ? Y(N, wt(ve(o, N))) : (Y(N, q.defaultValue), Ge(o, N, wt(q.defaultValue))), q.keepTouched || Bt(n.touchedFields, N), q.keepDirty || (Bt(n.dirtyFields, N), n.isDirty = q.defaultValue ? A(N, wt(ve(o, N))) : A()), q.keepError || (Bt(n.errors, N), d.isValid && x()), h.state.next({ ...n }));
  }, Le = (N, q = {}) => {
    const J = N ? wt(N) : o, U = wt(J), B = Jt(N), V = B ? o : U;
    if (q.keepDefaultValues || (o = J), !q.keepValues) {
      if (q.keepDirtyValues) {
        const G = /* @__PURE__ */ new Set([
          ...l.mount,
          ...Object.keys(Ei(o, s))
        ]);
        for (const pe of Array.from(G))
          ve(n.dirtyFields, pe) ? Ge(V, pe, ve(s, pe)) : Y(pe, ve(V, pe));
      } else {
        if (Yd && mt(N))
          for (const G of l.mount) {
            const pe = ve(r, G);
            if (pe && pe._f) {
              const me = Array.isArray(pe._f.refs) ? pe._f.refs[0] : pe._f.ref;
              if (ja(me)) {
                const re = me.closest("form");
                if (re) {
                  re.reset();
                  break;
                }
              }
            }
          }
        for (const G of l.mount)
          Y(G, ve(V, G));
      }
      s = wt(V), h.array.next({
        values: { ...V }
      }), h.state.next({
        values: { ...V }
      });
    }
    l = {
      mount: q.keepDirtyValues ? l.mount : /* @__PURE__ */ new Set(),
      unMount: /* @__PURE__ */ new Set(),
      array: /* @__PURE__ */ new Set(),
      disabled: /* @__PURE__ */ new Set(),
      watch: /* @__PURE__ */ new Set(),
      watchAll: !1,
      focus: ""
    }, a.mount = !d.isValid || !!q.keepIsValid || !!q.keepDirtyValues, a.watch = !!t.shouldUnregister, h.state.next({
      submitCount: q.keepSubmitCount ? n.submitCount : 0,
      isDirty: B ? !1 : q.keepDirty ? n.isDirty : !!(q.keepDefaultValues && !Br(N, o)),
      isSubmitted: q.keepIsSubmitted ? n.isSubmitted : !1,
      dirtyFields: B ? {} : q.keepDirtyValues ? q.keepDefaultValues && s ? Ei(o, s) : n.dirtyFields : q.keepDefaultValues && N ? Ei(o, N) : q.keepDirty ? n.dirtyFields : {},
      touchedFields: q.keepTouched ? n.touchedFields : {},
      errors: q.keepErrors ? n.errors : {},
      isSubmitSuccessful: q.keepIsSubmitSuccessful ? n.isSubmitSuccessful : !1,
      isSubmitting: !1
    });
  }, Ne = (N, q) => Le(Un(N) ? N(s) : N, q), ke = (N, q = {}) => {
    const J = ve(r, N), U = J && J._f;
    if (U) {
      const B = U.refs ? U.refs[0] : U.ref;
      B.focus && (B.focus(), q.shouldSelect && Un(B.select) && B.select());
    }
  }, Re = (N) => {
    n = {
      ...n,
      ...N
    };
  }, Oe = {
    control: {
      register: ie,
      unregister: ae,
      getFieldState: K,
      handleSubmit: fe,
      setError: ne,
      _subscribe: de,
      _runSchema: I,
      _getWatch: D,
      _getDirty: A,
      _setValid: x,
      _setFieldArray: w,
      _setDisabledField: Q,
      _setErrors: b,
      _getFieldArray: _,
      _reset: Le,
      _resetDefaultValues: () => Un(t.defaultValues) && t.defaultValues().then((N) => {
        Ne(N, t.resetOptions), h.state.next({
          isLoading: !1
        });
      }),
      _removeUnmounted: k,
      _disableForm: he,
      _subjects: h,
      _proxyFormState: d,
      get _fields() {
        return r;
      },
      get _formValues() {
        return s;
      },
      get _state() {
        return a;
      },
      set _state(N) {
        a = N;
      },
      get _defaultValues() {
        return o;
      },
      get _names() {
        return l;
      },
      set _names(N) {
        l = N;
      },
      get _formState() {
        return n;
      },
      get _options() {
        return t;
      },
      set _options(N) {
        t = {
          ...t,
          ...N
        };
      }
    },
    subscribe: X,
    trigger: W,
    register: ie,
    handleSubmit: fe,
    watch: se,
    setValue: Y,
    getValues: ee,
    reset: Ne,
    resetField: Se,
    clearErrors: oe,
    unregister: ae,
    setError: ne,
    setFocus: ke,
    getFieldState: K
  };
  return {
    ...Oe,
    formControl: Oe
  };
}
var Mr = () => {
  const e = typeof performance > "u" ? Date.now() : performance.now() * 1e3;
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (t) => {
    const n = (Math.random() * 16 + e) % 16 | 0;
    return (t == "x" ? n : n & 3 | 8).toString(16);
  });
}, Sc = (e, t, n = {}) => n.shouldFocus || mt(n.shouldFocus) ? n.focusName || `${e}.${mt(n.focusIndex) ? t : n.focusIndex}.` : "", Tc = (e, t) => [
  ...e,
  ...un(t)
], Ec = (e) => Array.isArray(e) ? e.map(() => {
}) : void 0;
function Cc(e, t, n) {
  return [
    ...e.slice(0, t),
    ...un(n),
    ...e.slice(t)
  ];
}
var Oc = (e, t, n) => Array.isArray(e) ? (mt(e[n]) && (e[n] = void 0), e.splice(n, 0, e.splice(t, 1)[0]), e) : [], Rc = (e, t) => [
  ...un(t),
  ...un(e)
];
function WN(e, t) {
  let n = 0;
  const r = [...e];
  for (const o of t)
    r.splice(o - n, 1), n++;
  return $s(r).length ? r : [];
}
var $c = (e, t) => mt(t) ? [] : WN(e, un(t).sort((n, r) => n - r)), kc = (e, t, n) => {
  [e[t], e[n]] = [e[n], e[t]];
}, Gm = (e, t, n) => (e[t] = n, e);
function AM(e) {
  const t = Vn(), { control: n = t.control, name: r, keyName: o = "id", shouldUnregister: s, rules: a } = e, [l, c] = L.useState(n._getFieldArray(r)), u = L.useRef(n._getFieldArray(r).map(Mr)), d = L.useRef(l), f = L.useRef(r), h = L.useRef(!1);
  f.current = r, d.current = l, n._names.array.add(r), a && n.register(r, a), L.useEffect(() => n._subjects.array.subscribe({
    next: ({ values: T, name: R }) => {
      if (R === f.current || !R) {
        const $ = ve(T, f.current);
        Array.isArray($) && (c($), u.current = $.map(Mr));
      }
    }
  }).unsubscribe, [n]);
  const g = L.useCallback((T) => {
    h.current = !0, n._setFieldArray(r, T);
  }, [n, r]), y = (T, R) => {
    const $ = un(wt(T)), I = Tc(n._getFieldArray(r), $);
    n._names.focus = Sc(r, I.length - 1, R), u.current = Tc(u.current, $.map(Mr)), g(I), c(I), n._setFieldArray(r, I, Tc, {
      argA: Ec(T)
    });
  }, m = (T, R) => {
    const $ = un(wt(T)), I = Rc(n._getFieldArray(r), $);
    n._names.focus = Sc(r, 0, R), u.current = Rc(u.current, $.map(Mr)), g(I), c(I), n._setFieldArray(r, I, Rc, {
      argA: Ec(T)
    });
  }, v = (T) => {
    const R = $c(n._getFieldArray(r), T);
    u.current = $c(u.current, T), g(R), c(R), !Array.isArray(ve(n._fields, r)) && Ge(n._fields, r, void 0), n._setFieldArray(r, R, $c, {
      argA: T
    });
  }, x = (T, R, $) => {
    const I = un(wt(R)), p = Cc(n._getFieldArray(r), T, I);
    n._names.focus = Sc(r, T, $), u.current = Cc(u.current, T, I.map(Mr)), g(p), c(p), n._setFieldArray(r, p, Cc, {
      argA: T,
      argB: Ec(R)
    });
  }, E = (T, R) => {
    const $ = n._getFieldArray(r);
    kc($, T, R), kc(u.current, T, R), g($), c($), n._setFieldArray(r, $, kc, {
      argA: T,
      argB: R
    }, !1);
  }, w = (T, R) => {
    const $ = n._getFieldArray(r);
    Oc($, T, R), Oc(u.current, T, R), g($), c($), n._setFieldArray(r, $, Oc, {
      argA: T,
      argB: R
    }, !1);
  }, S = (T, R) => {
    const $ = wt(R), I = Gm(n._getFieldArray(r), T, $);
    u.current = [...I].map((p, O) => !p || O === T ? Mr() : u.current[O]), g(I), c([...I]), n._setFieldArray(r, I, Gm, {
      argA: T,
      argB: $
    }, !0, !1);
  }, b = (T) => {
    const R = un(wt(T));
    u.current = R.map(Mr), g([...R]), c([...R]), n._setFieldArray(r, [...R], ($) => $, {}, !0, !1);
  };
  return L.useEffect(() => {
    if (n._state.action = !1, yu(r, n._names) && n._subjects.state.next({
      ...n._formState
    }), h.current && (!Do(n._options.mode).isOnSubmit || n._formState.isSubmitted) && !Do(n._options.reValidateMode).isOnSubmit)
      if (n._options.resolver)
        n._runSchema([r]).then((T) => {
          const R = ve(T.errors, r), $ = ve(n._formState.errors, r);
          ($ ? !R && $.type || R && ($.type !== R.type || $.message !== R.message) : R && R.type) && (R ? Ge(n._formState.errors, r, R) : Bt(n._formState.errors, r), n._subjects.state.next({
            errors: n._formState.errors
          }));
        });
      else {
        const T = ve(n._fields, r);
        T && T._f && !(Do(n._options.reValidateMode).isOnSubmit && Do(n._options.mode).isOnSubmit) && bu(T, n._names.disabled, n._formValues, n._options.criteriaMode === Nn.all, n._options.shouldUseNativeValidation, !0).then((R) => !Jt(R) && n._subjects.state.next({
          errors: pv(n._formState.errors, R, r)
        }));
      }
    n._subjects.state.next({
      name: r,
      values: wt(n._formValues)
    }), n._names.focus && Vo(n._fields, (T, R) => {
      if (n._names.focus && R.startsWith(n._names.focus) && T.focus)
        return T.focus(), 1;
    }), n._names.focus = "", n._setValid(), h.current = !1;
  }, [l, r, n]), L.useEffect(() => (!ve(n._formValues, r) && n._setFieldArray(r), () => {
    const T = (R, $) => {
      const I = ve(n._fields, R);
      I && I._f && (I._f.mount = $);
    };
    n._options.shouldUnregister || s ? n.unregister(r) : T(r, !1);
  }), [r, n, o, s]), {
    swap: L.useCallback(E, [g, r, n]),
    move: L.useCallback(w, [g, r, n]),
    prepend: L.useCallback(m, [g, r, n]),
    append: L.useCallback(y, [g, r, n]),
    remove: L.useCallback(v, [g, r, n]),
    insert: L.useCallback(x, [g, r, n]),
    update: L.useCallback(S, [g, r, n]),
    replace: L.useCallback(b, [g, r, n]),
    fields: L.useMemo(() => l.map((T, R) => ({
      ...T,
      [o]: u.current[R] || Mr()
    })), [l, o])
  };
}
function MM(e = {}) {
  const t = L.useRef(void 0), n = L.useRef(void 0), [r, o] = L.useState({
    isDirty: !1,
    isValidating: !1,
    isLoading: Un(e.defaultValues),
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    submitCount: 0,
    dirtyFields: {},
    touchedFields: {},
    validatingFields: {},
    errors: e.errors || {},
    disabled: e.disabled || !1,
    defaultValues: Un(e.defaultValues) ? void 0 : e.defaultValues
  });
  t.current || (t.current = {
    ...e.formControl ? e.formControl : zN(e),
    formState: r
  }, e.formControl && e.defaultValues && !Un(e.defaultValues) && e.formControl.reset(e.defaultValues, e.resetOptions));
  const s = t.current.control;
  return s._options = e, L.useLayoutEffect(() => s._subscribe({
    formState: s._proxyFormState,
    callback: () => o({ ...s._formState }),
    reRenderRoot: !0
  }), [s]), L.useEffect(() => s._disableForm(e.disabled), [s, e.disabled]), L.useEffect(() => {
    if (s._proxyFormState.isDirty) {
      const a = s._getDirty();
      a !== r.isDirty && s._subjects.state.next({
        isDirty: a
      });
    }
  }, [s, r.isDirty]), L.useEffect(() => {
    e.values && !Br(e.values, n.current) ? (s._reset(e.values, s._options.resetOptions), n.current = e.values, o((a) => ({ ...a }))) : s._resetDefaultValues();
  }, [e.values, s]), L.useEffect(() => {
    e.errors && !Jt(e.errors) && s._setErrors(e.errors);
  }, [e.errors, s]), L.useEffect(() => {
    s._state.mount || (s._setValid(), s._state.mount = !0), s._state.watch && (s._state.watch = !1, s._subjects.state.next({ ...s._formState })), s._removeUnmounted();
  }), L.useEffect(() => {
    e.shouldUnregister && s._subjects.state.next({
      values: s._getWatch()
    });
  }, [e.shouldUnregister, s]), t.current.formState = ov(r, s), t.current;
}
const Km = (e, t, n) => {
  if (e && "reportValidity" in e) {
    const r = ve(n, t);
    e.setCustomValidity(r && r.message || ""), e.reportValidity();
  }
}, mv = (e, t) => {
  for (const n in t.fields) {
    const r = t.fields[n];
    r && r.ref && "reportValidity" in r.ref ? Km(r.ref, n, e) : r && r.refs && r.refs.forEach((o) => Km(o, n, e));
  }
}, UN = (e, t) => {
  t.shouldUseNativeValidation && mv(e, t);
  const n = {};
  for (const r in e) {
    const o = ve(t.fields, r), s = Object.assign(e[r] || {}, { ref: o && o.ref });
    if (HN(t.names || Object.keys(e), r)) {
      const a = Object.assign({}, ve(n, r));
      Ge(a, "root", s), Ge(n, r, a);
    } else Ge(n, r, s);
  }
  return n;
}, HN = (e, t) => {
  const n = Xm(t);
  return e.some((r) => Xm(r).match(`^${n}\\.\\d+`));
};
function Xm(e) {
  return e.replace(/\]|\[/g, "");
}
function qN(e, t) {
  for (var n = {}; e.length; ) {
    var r = e[0], o = r.code, s = r.message, a = r.path.join(".");
    if (!n[a]) if ("unionErrors" in r) {
      var l = r.unionErrors[0].errors[0];
      n[a] = { message: l.message, type: l.code };
    } else n[a] = { message: s, type: o };
    if ("unionErrors" in r && r.unionErrors.forEach(function(d) {
      return d.errors.forEach(function(f) {
        return e.push(f);
      });
    }), t) {
      var c = n[a].types, u = c && c[r.code];
      n[a] = sv(a, t, n, o, u ? [].concat(u, r.message) : r.message);
    }
    e.shift();
  }
  return n;
}
function _M(e, t, n) {
  return n === void 0 && (n = {}), function(r, o, s) {
    try {
      return Promise.resolve(function(a, l) {
        try {
          var c = Promise.resolve(e[n.mode === "sync" ? "parse" : "parseAsync"](r, t)).then(function(u) {
            return s.shouldUseNativeValidation && mv({}, s), { errors: {}, values: n.raw ? Object.assign({}, r) : u };
          });
        } catch (u) {
          return l(u);
        }
        return c && c.then ? c.then(void 0, l) : c;
      }(0, function(a) {
        if (function(l) {
          return Array.isArray(l == null ? void 0 : l.errors);
        }(a)) return { values: {}, errors: UN(qN(a.errors, !s.shouldUseNativeValidation && s.criteriaMode === "all"), s) };
        throw a;
      }));
    } catch (a) {
      return Promise.reject(a);
    }
  };
}
function YN({
  children: e,
  formInstance: t,
  onSubmit: n
}) {
  const { handleSubmit: r, trigger: o } = t;
  return Hi(() => {
    o();
  }, [o]), t ? /* @__PURE__ */ P(RN, { ...t, children: /* @__PURE__ */ P(Cr, { component: "form", autoComplete: "off", onSubmit: r(n), children: e }) }) : null;
}
const DM = je(YN), GN = je(({ name: e, ...t }) => {
  const { control: n } = Vn();
  return /* @__PURE__ */ P(
    vo,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, value: o, ref: s }, fieldState: { error: a } }) => /* @__PURE__ */ P(
        Iy,
        {
          ...t,
          value: o,
          onChange: r,
          inputRef: s,
          isError: !!a
        }
      )
    }
  );
});
GN.displayName = "CheckboxUncontrolled";
function KN({
  isSubmitting: e,
  submitButtonText: t = "Submit",
  cancelButtonText: n = "Cancel"
}) {
  const r = Vn();
  if (!r)
    return null;
  const { formState: o, reset: s } = r, { isValid: a, isSubmitting: l, defaultValues: c } = o;
  return /* @__PURE__ */ Pe(Kt, { row: !0, mt: "32px", children: [
    /* @__PURE__ */ P(
      pr,
      {
        type: "reset",
        text: n,
        isOutlined: !0,
        loading: e || l,
        onClick: () => s(c)
      }
    ),
    /* @__PURE__ */ P(
      pr,
      {
        type: "submit",
        text: t,
        loading: e || l,
        disabled: !a
      }
    )
  ] });
}
KN.displayName = "FormUncontrolledAction";
const XN = je(({ name: e, ...t }) => {
  const { control: n } = Vn();
  return /* @__PURE__ */ P(
    vo,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ P(
        Tl,
        {
          ...t,
          value: s,
          onChange: r,
          onBlur: o,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
XN.displayName = "InputUncontrolled";
const QN = je(({ name: e, ...t }) => {
  const { control: n } = Vn();
  return /* @__PURE__ */ P(
    vo,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ P(
        Vy,
        {
          ...t,
          value: s,
          onChange: r,
          onBlur: o,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || "　"
        }
      )
    }
  );
});
QN.displayName = "NumberUncontrolled";
const JN = je(({ name: e, ...t }) => {
  const { control: n } = Vn();
  return /* @__PURE__ */ P(
    vo,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ P(
        Yb,
        {
          ...t,
          value: s,
          onChange: r,
          onBlur: o,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
JN.displayName = "OtpInputUncontrolled";
const ZN = je(({ name: e, ...t }) => {
  const { control: n } = Vn();
  return /* @__PURE__ */ P(
    vo,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ P(
        Gb,
        {
          ...t,
          value: s,
          onChange: r,
          onBlur: o,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
ZN.displayName = "PasswordUncontrolled";
const eA = [], tA = je(
  ({ name: e, options: t = eA, ...n }) => {
    const { control: r } = Vn();
    return /* @__PURE__ */ P(
      vo,
      {
        control: r,
        name: e,
        render: ({ field: { onChange: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ P(
          Qb,
          {
            ...n,
            name: e,
            options: t,
            value: s,
            onChange: (c) => o(c.value),
            inputRef: a,
            isError: !!l
          }
        )
      }
    );
  }
);
tA.displayName = "RadiosUncontrolled";
const nA = je(({ name: e, ...t }) => {
  const { control: n } = Vn();
  return /* @__PURE__ */ P(
    vo,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, value: o, ref: s } }) => /* @__PURE__ */ P(qd, { ...t, value: o, onChange: r, inputRef: s })
    }
  );
});
nA.displayName = "SwitchUncontrolled";
const Ao = {
  xs: 1,
  // 1行1个
  sm: 1,
  // 1行1个
  md: 2,
  // 1行2个
  lg: 3,
  // 1行3个
  xl: 4
  // 1行4个
}, rA = [], Qm = (e) => {
  let t;
  const n = /* @__PURE__ */ new Set(), r = (u, d) => {
    const f = typeof u == "function" ? u(t) : u;
    if (!Object.is(f, t)) {
      const h = t;
      t = d ?? (typeof f != "object" || f === null) ? f : Object.assign({}, t, f), n.forEach((g) => g(t, h));
    }
  }, o = () => t, l = { setState: r, getState: o, getInitialState: () => c, subscribe: (u) => (n.add(u), () => n.delete(u)) }, c = t = e(r, o, l);
  return l;
}, oA = (e) => e ? Qm(e) : Qm, iA = (e) => e;
function hv(e, t = iA) {
  const n = L.useSyncExternalStore(
    e.subscribe,
    () => t(e.getState()),
    () => t(e.getInitialState())
  );
  return L.useDebugValue(n), n;
}
const Jm = (e) => {
  const t = oA(e), n = (r) => hv(t, r);
  return Object.assign(n, t), n;
}, Qd = (e) => e ? Jm(e) : Jm, Zm = { BASE_URL: "/", DEV: !1, MODE: "production", PROD: !0, SSR: !1 }, vu = /* @__PURE__ */ new Map(), Xs = (e) => {
  const t = vu.get(e);
  return t ? Object.fromEntries(
    Object.entries(t.stores).map(([n, r]) => [n, r.getState()])
  ) : {};
}, sA = (e, t, n) => {
  if (e === void 0)
    return {
      type: "untracked",
      connection: t.connect(n)
    };
  const r = vu.get(n.name);
  if (r)
    return { type: "tracked", store: e, ...r };
  const o = {
    connection: t.connect(n),
    stores: {}
  };
  return vu.set(n.name, o), { type: "tracked", store: e, ...o };
}, aA = (e, t = {}) => (n, r, o) => {
  const { enabled: s, anonymousActionType: a, store: l, ...c } = t;
  let u;
  try {
    u = (s ?? (Zm ? "production" : void 0) !== "production") && window.__REDUX_DEVTOOLS_EXTENSION__;
  } catch {
  }
  if (!u)
    return e(n, r, o);
  const { connection: d, ...f } = sA(l, u, c);
  let h = !0;
  o.setState = (m, v, x) => {
    const E = n(m, v);
    if (!h) return E;
    const w = x === void 0 ? { type: a || "anonymous" } : typeof x == "string" ? { type: x } : x;
    return l === void 0 ? (d == null || d.send(w, r()), E) : (d == null || d.send(
      {
        ...w,
        type: `${l}/${w.type}`
      },
      {
        ...Xs(c.name),
        [l]: o.getState()
      }
    ), E);
  };
  const g = (...m) => {
    const v = h;
    h = !1, n(...m), h = v;
  }, y = e(o.setState, r, o);
  if (f.type === "untracked" ? d == null || d.init(y) : (f.stores[f.store] = o, d == null || d.init(
    Object.fromEntries(
      Object.entries(f.stores).map(([m, v]) => [
        m,
        m === f.store ? y : v.getState()
      ])
    )
  )), o.dispatchFromDevtools && typeof o.dispatch == "function") {
    let m = !1;
    const v = o.dispatch;
    o.dispatch = (...x) => {
      (Zm ? "production" : void 0) !== "production" && x[0].type === "__setState" && !m && (console.warn(
        '[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'
      ), m = !0), v(...x);
    };
  }
  return d.subscribe((m) => {
    var v;
    switch (m.type) {
      case "ACTION":
        if (typeof m.payload != "string") {
          console.error(
            "[zustand devtools middleware] Unsupported action format"
          );
          return;
        }
        return Pc(
          m.payload,
          (x) => {
            if (x.type === "__setState") {
              if (l === void 0) {
                g(x.state);
                return;
              }
              Object.keys(x.state).length !== 1 && console.error(
                `
                    [zustand devtools middleware] Unsupported __setState action format.
                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),
                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }
                    `
              );
              const E = x.state[l];
              if (E == null)
                return;
              JSON.stringify(o.getState()) !== JSON.stringify(E) && g(E);
              return;
            }
            o.dispatchFromDevtools && typeof o.dispatch == "function" && o.dispatch(x);
          }
        );
      case "DISPATCH":
        switch (m.payload.type) {
          case "RESET":
            return g(y), l === void 0 ? d == null ? void 0 : d.init(o.getState()) : d == null ? void 0 : d.init(Xs(c.name));
          case "COMMIT":
            if (l === void 0) {
              d == null || d.init(o.getState());
              return;
            }
            return d == null ? void 0 : d.init(Xs(c.name));
          case "ROLLBACK":
            return Pc(m.state, (x) => {
              if (l === void 0) {
                g(x), d == null || d.init(o.getState());
                return;
              }
              g(x[l]), d == null || d.init(Xs(c.name));
            });
          case "JUMP_TO_STATE":
          case "JUMP_TO_ACTION":
            return Pc(m.state, (x) => {
              if (l === void 0) {
                g(x);
                return;
              }
              JSON.stringify(o.getState()) !== JSON.stringify(x[l]) && g(x[l]);
            });
          case "IMPORT_STATE": {
            const { nextLiftedState: x } = m.payload, E = (v = x.computedStates.slice(-1)[0]) == null ? void 0 : v.state;
            if (!E) return;
            g(l === void 0 ? E : E[l]), d == null || d.send(
              null,
              // FIXME no-any
              x
            );
            return;
          }
          case "PAUSE_RECORDING":
            return h = !h;
        }
        return;
    }
  }), y;
}, gv = aA, Pc = (e, t) => {
  let n;
  try {
    n = JSON.parse(e);
  } catch (r) {
    console.error(
      "[zustand devtools middleware] Could not parse the received json",
      r
    );
  }
  n !== void 0 && t(n);
};
function lA(e, t) {
  let n;
  try {
    n = e();
  } catch {
    return;
  }
  return {
    getItem: (o) => {
      var s;
      const a = (c) => c === null ? null : JSON.parse(c, void 0), l = (s = n.getItem(o)) != null ? s : null;
      return l instanceof Promise ? l.then(a) : a(l);
    },
    setItem: (o, s) => n.setItem(
      o,
      JSON.stringify(s, void 0)
    ),
    removeItem: (o) => n.removeItem(o)
  };
}
const xu = (e) => (t) => {
  try {
    const n = e(t);
    return n instanceof Promise ? n : {
      then(r) {
        return xu(r)(n);
      },
      catch(r) {
        return this;
      }
    };
  } catch (n) {
    return {
      then(r) {
        return this;
      },
      catch(r) {
        return xu(r)(n);
      }
    };
  }
}, cA = (e, t) => (n, r, o) => {
  let s = {
    storage: lA(() => localStorage),
    partialize: (m) => m,
    version: 0,
    merge: (m, v) => ({
      ...v,
      ...m
    }),
    ...t
  }, a = !1;
  const l = /* @__PURE__ */ new Set(), c = /* @__PURE__ */ new Set();
  let u = s.storage;
  if (!u)
    return e(
      (...m) => {
        console.warn(
          `[zustand persist middleware] Unable to update item '${s.name}', the given storage is currently unavailable.`
        ), n(...m);
      },
      r,
      o
    );
  const d = () => {
    const m = s.partialize({ ...r() });
    return u.setItem(s.name, {
      state: m,
      version: s.version
    });
  }, f = o.setState;
  o.setState = (m, v) => {
    f(m, v), d();
  };
  const h = e(
    (...m) => {
      n(...m), d();
    },
    r,
    o
  );
  o.getInitialState = () => h;
  let g;
  const y = () => {
    var m, v;
    if (!u) return;
    a = !1, l.forEach((E) => {
      var w;
      return E((w = r()) != null ? w : h);
    });
    const x = ((v = s.onRehydrateStorage) == null ? void 0 : v.call(s, (m = r()) != null ? m : h)) || void 0;
    return xu(u.getItem.bind(u))(s.name).then((E) => {
      if (E)
        if (typeof E.version == "number" && E.version !== s.version) {
          if (s.migrate) {
            const w = s.migrate(
              E.state,
              E.version
            );
            return w instanceof Promise ? w.then((S) => [!0, S]) : [!0, w];
          }
          console.error(
            "State loaded from storage couldn't be migrated since no migrate function was provided"
          );
        } else
          return [!1, E.state];
      return [!1, void 0];
    }).then((E) => {
      var w;
      const [S, b] = E;
      if (g = s.merge(
        b,
        (w = r()) != null ? w : h
      ), n(g, !0), S)
        return d();
    }).then(() => {
      x == null || x(g, void 0), g = r(), a = !0, c.forEach((E) => E(g));
    }).catch((E) => {
      x == null || x(void 0, E);
    });
  };
  return o.persist = {
    setOptions: (m) => {
      s = {
        ...s,
        ...m
      }, m.storage && (u = m.storage);
    },
    clearStorage: () => {
      u == null || u.removeItem(s.name);
    },
    getOptions: () => s,
    rehydrate: () => y(),
    hasHydrated: () => a,
    onHydrate: (m) => (l.add(m), () => {
      l.delete(m);
    }),
    onFinishHydration: (m) => (c.add(m), () => {
      c.delete(m);
    })
  }, s.skipHydration || y(), g || h;
}, yv = cA;
function eh() {
  return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
const uA = Qd()(
  gv(
    yv(
      (e) => ({
        themeMode: eh(),
        setThemeMode: (t) => e({ themeMode: t }),
        toggleThemeMode: () => e((t) => ({ themeMode: t.themeMode === "dark" ? "light" : "dark" })),
        resetThemeMode: () => e({ themeMode: eh() })
      }),
      {
        name: "VENOMOUS_UI__THEME_MODE"
      }
    )
  )
);
function Jd() {
  const e = hv(uA);
  return {
    ...e,
    isDarkMode: e.themeMode === "dark"
  };
}
var bv = /* @__PURE__ */ ((e) => (e.Skyblue = "Skyblue", e.Teal = "Teal", e.Amber = "Amber", e))(bv || {});
const vv = {
  Skyblue: "#0097a7",
  Teal: "#009688",
  Amber: "#ffb300"
};
function za(e) {
  const t = vv[e];
  return {
    main: t,
    light: si(t, 0.5),
    dark: ii(t, 0.5),
    opacity: Yt(t, 0.5),
    contrastText: "#fff"
  };
}
const dA = Qd()(
  gv(
    yv(
      (e) => ({
        themePaletteName: "Skyblue",
        themePalette: za(
          "Skyblue"
          /* Skyblue */
        ),
        setThemePaletteName: (t) => e({ themePaletteName: t, themePalette: za(t) })
      }),
      {
        name: "VENOMOUS_UI__THEME_PALETTE"
      }
    )
  )
);
function xv() {
  return {
    ...dA(),
    allPaletteNames: Object.keys(bv),
    allPaletteMainColors: vv
  };
}
const Oi = jh({
  themeId: Hn
});
function fA() {
  const { breakpoints: e } = Ir(), t = Oi(e.down("sm")), n = Oi(e.between("sm", "md")), r = Oi(e.between("md", "lg")), o = Oi(e.between("lg", "xl")), s = Oi(e.up("xl")), a = cr(() => {
    var l;
    return ((l = [
      ["xs", t],
      ["sm", n],
      ["md", r],
      ["lg", o],
      ["xl", s]
    ].find(([, c]) => c)) == null ? void 0 : l[0].toString()) || "xs";
  }, [t, n, r, o, s]);
  return {
    isXs: t,
    isSm: n,
    isMd: r,
    isLg: o,
    isXl: s,
    breakpoints: {
      current: a,
      unit: "px",
      values: {
        xs: 0,
        sm: 600,
        md: 900,
        lg: 1200,
        xl: 1536
      }
    }
  };
}
function BM() {
  return (e) => e;
}
function pA({
  gridStyle: e,
  cols: t
}) {
  const { isXs: n, isSm: r, isMd: o, isLg: s } = fA(), a = cr(() => {
    let c;
    return n ? c = (t == null ? void 0 : t.xs) ?? Ao.xs : r ? c = (t == null ? void 0 : t.sm) ?? Ao.sm : o ? c = (t == null ? void 0 : t.md) ?? Ao.md : s ? c = (t == null ? void 0 : t.lg) ?? Ao.lg : c = (t == null ? void 0 : t.xl) ?? Ao.xl, `${100 / c}%`;
  }, [n, r, o, s, t]);
  return {
    gridComponents: cr(
      () => ({
        List: ({ ref: c, style: u, children: d, ...f }) => /* @__PURE__ */ P(
          "div",
          {
            ref: c,
            ...f,
            style: { display: "flex", flexWrap: "wrap", ...u, ...e },
            children: d
          }
        ),
        Item: ({ children: c, ...u }) => /* @__PURE__ */ P(
          "div",
          {
            ...u,
            style: {
              width: a,
              display: "flex",
              boxSizing: "border-box",
              flex: "none",
              alignContent: "stretch"
            },
            children: c
          }
        )
      }),
      [a, e]
    )
  };
}
const mA = ({
  height: e,
  width: t,
  items: n = rA,
  renderGridItem: r,
  gridStyle: o,
  cols: s = Ao
}) => {
  const { gridComponents: a } = pA({ gridStyle: o, cols: s });
  return /* @__PURE__ */ P(
    Kt,
    {
      id: "VenomousUI-Grid",
      sx: {
        height: e || "100%",
        width: t || "100%",
        "& > *": {
          flex: "unset",
          width: "100%"
        }
      },
      children: /* @__PURE__ */ P(
        wO,
        {
          style: { height: "100%" },
          totalCount: n.length,
          components: a,
          itemContent: (l) => r(n[l], l)
        }
      )
    }
  );
}, hA = je(mA);
var Ic = { exports: {} }, th;
function gA() {
  return th || (th = 1, (() => {
    var e = { 296: (o, s, a) => {
      var l = /^\s+|\s+$/g, c = /^[-+]0x[0-9a-f]+$/i, u = /^0b[01]+$/i, d = /^0o[0-7]+$/i, f = parseInt, h = typeof a.g == "object" && a.g && a.g.Object === Object && a.g, g = typeof self == "object" && self && self.Object === Object && self, y = h || g || Function("return this")(), m = Object.prototype.toString, v = Math.max, x = Math.min, E = function() {
        return y.Date.now();
      };
      function w(b) {
        var T = typeof b;
        return !!b && (T == "object" || T == "function");
      }
      function S(b) {
        if (typeof b == "number") return b;
        if (function($) {
          return typeof $ == "symbol" || /* @__PURE__ */ function(I) {
            return !!I && typeof I == "object";
          }($) && m.call($) == "[object Symbol]";
        }(b)) return NaN;
        if (w(b)) {
          var T = typeof b.valueOf == "function" ? b.valueOf() : b;
          b = w(T) ? T + "" : T;
        }
        if (typeof b != "string") return b === 0 ? b : +b;
        b = b.replace(l, "");
        var R = u.test(b);
        return R || d.test(b) ? f(b.slice(2), R ? 2 : 8) : c.test(b) ? NaN : +b;
      }
      o.exports = function(b, T, R) {
        var $, I, p, O, k, A, D = 0, _ = !1, M = !1, z = !0;
        if (typeof b != "function") throw new TypeError("Expected a function");
        function Y(K) {
          var oe = $, ne = I;
          return $ = I = void 0, D = K, O = b.apply(ne, oe);
        }
        function H(K) {
          var oe = K - A;
          return A === void 0 || oe >= T || oe < 0 || M && K - D >= p;
        }
        function j() {
          var K = E();
          if (H(K)) return W(K);
          k = setTimeout(j, function(oe) {
            var ne = T - (oe - A);
            return M ? x(ne, p - (oe - D)) : ne;
          }(K));
        }
        function W(K) {
          return k = void 0, z && $ ? Y(K) : ($ = I = void 0, O);
        }
        function ee() {
          var K = E(), oe = H(K);
          if ($ = arguments, I = this, A = K, oe) {
            if (k === void 0) return function(ne) {
              return D = ne, k = setTimeout(j, T), _ ? Y(ne) : O;
            }(A);
            if (M) return k = setTimeout(j, T), Y(A);
          }
          return k === void 0 && (k = setTimeout(j, T)), O;
        }
        return T = S(T) || 0, w(R) && (_ = !!R.leading, p = (M = "maxWait" in R) ? v(S(R.maxWait) || 0, T) : p, z = "trailing" in R ? !!R.trailing : z), ee.cancel = function() {
          k !== void 0 && clearTimeout(k), D = 0, $ = A = I = k = void 0;
        }, ee.flush = function() {
          return k === void 0 ? O : W(E());
        }, ee;
      };
    }, 96: (o, s, a) => {
      var l = "Expected a function", c = NaN, u = "[object Symbol]", d = /^\s+|\s+$/g, f = /^[-+]0x[0-9a-f]+$/i, h = /^0b[01]+$/i, g = /^0o[0-7]+$/i, y = parseInt, m = typeof a.g == "object" && a.g && a.g.Object === Object && a.g, v = typeof self == "object" && self && self.Object === Object && self, x = m || v || Function("return this")(), E = Object.prototype.toString, w = Math.max, S = Math.min, b = function() {
        return x.Date.now();
      };
      function T($) {
        var I = typeof $;
        return !!$ && (I == "object" || I == "function");
      }
      function R($) {
        if (typeof $ == "number") return $;
        if (function(O) {
          return typeof O == "symbol" || /* @__PURE__ */ function(k) {
            return !!k && typeof k == "object";
          }(O) && E.call(O) == u;
        }($)) return c;
        if (T($)) {
          var I = typeof $.valueOf == "function" ? $.valueOf() : $;
          $ = T(I) ? I + "" : I;
        }
        if (typeof $ != "string") return $ === 0 ? $ : +$;
        $ = $.replace(d, "");
        var p = h.test($);
        return p || g.test($) ? y($.slice(2), p ? 2 : 8) : f.test($) ? c : +$;
      }
      o.exports = function($, I, p) {
        var O = !0, k = !0;
        if (typeof $ != "function") throw new TypeError(l);
        return T(p) && (O = "leading" in p ? !!p.leading : O, k = "trailing" in p ? !!p.trailing : k), function(A, D, _) {
          var M, z, Y, H, j, W, ee = 0, K = !1, oe = !1, ne = !0;
          if (typeof A != "function") throw new TypeError(l);
          function se(ie) {
            var F = M, he = z;
            return M = z = void 0, ee = ie, H = A.apply(he, F);
          }
          function de(ie) {
            var F = ie - W;
            return W === void 0 || F >= D || F < 0 || oe && ie - ee >= Y;
          }
          function X() {
            var ie = b();
            if (de(ie)) return ae(ie);
            j = setTimeout(X, function(F) {
              var he = D - (F - W);
              return oe ? S(he, Y - (F - ee)) : he;
            }(ie));
          }
          function ae(ie) {
            return j = void 0, ne && M ? se(ie) : (M = z = void 0, H);
          }
          function Q() {
            var ie = b(), F = de(ie);
            if (M = arguments, z = this, W = ie, F) {
              if (j === void 0) return function(he) {
                return ee = he, j = setTimeout(X, D), K ? se(he) : H;
              }(W);
              if (oe) return j = setTimeout(X, D), se(W);
            }
            return j === void 0 && (j = setTimeout(X, D)), H;
          }
          return D = R(D) || 0, T(_) && (K = !!_.leading, Y = (oe = "maxWait" in _) ? w(R(_.maxWait) || 0, D) : Y, ne = "trailing" in _ ? !!_.trailing : ne), Q.cancel = function() {
            j !== void 0 && clearTimeout(j), ee = 0, M = W = z = j = void 0;
          }, Q.flush = function() {
            return j === void 0 ? H : ae(b());
          }, Q;
        }($, I, { leading: O, maxWait: I, trailing: k });
      };
    }, 703: (o, s, a) => {
      var l = a(414);
      function c() {
      }
      function u() {
      }
      u.resetWarningCache = c, o.exports = function() {
        function d(g, y, m, v, x, E) {
          if (E !== l) {
            var w = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
            throw w.name = "Invariant Violation", w;
          }
        }
        function f() {
          return d;
        }
        d.isRequired = d;
        var h = { array: d, bigint: d, bool: d, func: d, number: d, object: d, string: d, symbol: d, any: d, arrayOf: f, element: d, elementType: d, instanceOf: f, node: d, objectOf: f, oneOf: f, oneOfType: f, shape: f, exact: f, checkPropTypes: u, resetWarningCache: c };
        return h.PropTypes = h, h;
      };
    }, 697: (o, s, a) => {
      o.exports = a(703)();
    }, 414: (o) => {
      o.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    } }, t = {};
    function n(o) {
      var s = t[o];
      if (s !== void 0) return s.exports;
      var a = t[o] = { exports: {} };
      return e[o](a, a.exports, n), a.exports;
    }
    n.n = (o) => {
      var s = o && o.__esModule ? () => o.default : () => o;
      return n.d(s, { a: s }), s;
    }, n.d = (o, s) => {
      for (var a in s) n.o(s, a) && !n.o(o, a) && Object.defineProperty(o, a, { enumerable: !0, get: s[a] });
    }, n.g = function() {
      if (typeof globalThis == "object") return globalThis;
      try {
        return this || new Function("return this")();
      } catch {
        if (typeof window == "object") return window;
      }
    }(), n.o = (o, s) => Object.prototype.hasOwnProperty.call(o, s), n.r = (o) => {
      typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(o, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(o, "__esModule", { value: !0 });
    };
    var r = {};
    (() => {
      n.r(r), n.d(r, { LazyLoadComponent: () => F, LazyLoadImage: () => J, trackWindowScroll: () => H });
      const o = L;
      var s = n.n(o), a = n(697);
      function l() {
        return typeof window < "u" && "IntersectionObserver" in window && "isIntersecting" in window.IntersectionObserverEntry.prototype;
      }
      function c(U) {
        return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(B) {
          return typeof B;
        } : function(B) {
          return B && typeof Symbol == "function" && B.constructor === Symbol && B !== Symbol.prototype ? "symbol" : typeof B;
        }, c(U);
      }
      function u(U, B) {
        var V = Object.keys(U);
        if (Object.getOwnPropertySymbols) {
          var G = Object.getOwnPropertySymbols(U);
          B && (G = G.filter(function(pe) {
            return Object.getOwnPropertyDescriptor(U, pe).enumerable;
          })), V.push.apply(V, G);
        }
        return V;
      }
      function d(U, B, V) {
        return (B = h(B)) in U ? Object.defineProperty(U, B, { value: V, enumerable: !0, configurable: !0, writable: !0 }) : U[B] = V, U;
      }
      function f(U, B) {
        for (var V = 0; V < B.length; V++) {
          var G = B[V];
          G.enumerable = G.enumerable || !1, G.configurable = !0, "value" in G && (G.writable = !0), Object.defineProperty(U, h(G.key), G);
        }
      }
      function h(U) {
        var B = function(V, G) {
          if (c(V) !== "object" || V === null) return V;
          var pe = V[Symbol.toPrimitive];
          if (pe !== void 0) {
            var me = pe.call(V, "string");
            if (c(me) !== "object") return me;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(V);
        }(U);
        return c(B) === "symbol" ? B : String(B);
      }
      function g(U, B) {
        return g = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(V, G) {
          return V.__proto__ = G, V;
        }, g(U, B);
      }
      function y(U) {
        return y = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(B) {
          return B.__proto__ || Object.getPrototypeOf(B);
        }, y(U);
      }
      var m = function(U) {
        U.forEach(function(B) {
          B.isIntersecting && B.target.onVisible();
        });
      }, v = {}, x = function(U) {
        (function(Z, te) {
          if (typeof te != "function" && te !== null) throw new TypeError("Super expression must either be null or a function");
          Z.prototype = Object.create(te && te.prototype, { constructor: { value: Z, writable: !0, configurable: !0 } }), Object.defineProperty(Z, "prototype", { writable: !1 }), te && g(Z, te);
        })(re, U);
        var B, V, G, pe, me = (G = re, pe = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var Z, te = y(G);
          if (pe) {
            var ye = y(this).constructor;
            Z = Reflect.construct(te, arguments, ye);
          } else Z = te.apply(this, arguments);
          return function(we, le) {
            if (le && (c(le) === "object" || typeof le == "function")) return le;
            if (le !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(xe) {
              if (xe === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return xe;
            }(we);
          }(this, Z);
        });
        function re(Z) {
          var te;
          if (function(we, le) {
            if (!(we instanceof le)) throw new TypeError("Cannot call a class as a function");
          }(this, re), (te = me.call(this, Z)).supportsObserver = !Z.scrollPosition && Z.useIntersectionObserver && l(), te.supportsObserver) {
            var ye = Z.threshold;
            te.observer = function(we) {
              return v[we] = v[we] || new IntersectionObserver(m, { rootMargin: we + "px" }), v[we];
            }(ye);
          }
          return te;
        }
        return B = re, V = [{ key: "componentDidMount", value: function() {
          this.placeholder && this.observer && (this.placeholder.onVisible = this.props.onVisible, this.observer.observe(this.placeholder)), this.supportsObserver || this.updateVisibility();
        } }, { key: "componentWillUnmount", value: function() {
          this.observer && this.placeholder && this.observer.unobserve(this.placeholder);
        } }, { key: "componentDidUpdate", value: function() {
          this.supportsObserver || this.updateVisibility();
        } }, { key: "getPlaceholderBoundingBox", value: function() {
          var Z = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props.scrollPosition, te = this.placeholder.getBoundingClientRect(), ye = this.placeholder.style, we = parseInt(ye.getPropertyValue("margin-left"), 10) || 0, le = parseInt(ye.getPropertyValue("margin-top"), 10) || 0;
          return { bottom: Z.y + te.bottom + le, left: Z.x + te.left + we, right: Z.x + te.right + we, top: Z.y + te.top + le };
        } }, { key: "isPlaceholderInViewport", value: function() {
          if (typeof window > "u" || !this.placeholder) return !1;
          var Z = this.props, te = Z.scrollPosition, ye = Z.threshold, we = this.getPlaceholderBoundingBox(te), le = te.y + window.innerHeight, xe = te.x, Ae = te.x + window.innerWidth, ze = te.y;
          return ze - ye <= we.bottom && le + ye >= we.top && xe - ye <= we.right && Ae + ye >= we.left;
        } }, { key: "updateVisibility", value: function() {
          this.isPlaceholderInViewport() && this.props.onVisible();
        } }, { key: "render", value: function() {
          var Z = this, te = this.props, ye = te.className, we = te.height, le = te.placeholder, xe = te.style, Ae = te.width;
          if (le && typeof le.type != "function") return s().cloneElement(le, { ref: function(Ye) {
            return Z.placeholder = Ye;
          } });
          var ze = function(Ye) {
            for (var Pt = 1; Pt < arguments.length; Pt++) {
              var pt = arguments[Pt] != null ? arguments[Pt] : {};
              Pt % 2 ? u(Object(pt), !0).forEach(function(It) {
                d(Ye, It, pt[It]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(Ye, Object.getOwnPropertyDescriptors(pt)) : u(Object(pt)).forEach(function(It) {
                Object.defineProperty(Ye, It, Object.getOwnPropertyDescriptor(pt, It));
              });
            }
            return Ye;
          }({ display: "inline-block" }, xe);
          return Ae !== void 0 && (ze.width = Ae), we !== void 0 && (ze.height = we), s().createElement("span", { className: ye, ref: function(Ye) {
            return Z.placeholder = Ye;
          }, style: ze }, le);
        } }], V && f(B.prototype, V), Object.defineProperty(B, "prototype", { writable: !1 }), re;
      }(s().Component);
      x.propTypes = { onVisible: a.PropTypes.func.isRequired, className: a.PropTypes.string, height: a.PropTypes.oneOfType([a.PropTypes.number, a.PropTypes.string]), placeholder: a.PropTypes.element, threshold: a.PropTypes.number, useIntersectionObserver: a.PropTypes.bool, scrollPosition: a.PropTypes.shape({ x: a.PropTypes.number.isRequired, y: a.PropTypes.number.isRequired }), width: a.PropTypes.oneOfType([a.PropTypes.number, a.PropTypes.string]) }, x.defaultProps = { className: "", placeholder: null, threshold: 100, useIntersectionObserver: !0 };
      const E = x;
      var w = n(296), S = n.n(w), b = n(96), T = n.n(b), R = function(U) {
        var B = getComputedStyle(U, null);
        return B.getPropertyValue("overflow") + B.getPropertyValue("overflow-y") + B.getPropertyValue("overflow-x");
      };
      const $ = function(U) {
        if (!(U instanceof HTMLElement)) return window;
        for (var B = U; B && B instanceof HTMLElement; ) {
          if (/(scroll|auto)/.test(R(B))) return B;
          B = B.parentNode;
        }
        return window;
      };
      function I(U) {
        return I = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(B) {
          return typeof B;
        } : function(B) {
          return B && typeof Symbol == "function" && B.constructor === Symbol && B !== Symbol.prototype ? "symbol" : typeof B;
        }, I(U);
      }
      var p = ["delayMethod", "delayTime"];
      function O() {
        return O = Object.assign ? Object.assign.bind() : function(U) {
          for (var B = 1; B < arguments.length; B++) {
            var V = arguments[B];
            for (var G in V) Object.prototype.hasOwnProperty.call(V, G) && (U[G] = V[G]);
          }
          return U;
        }, O.apply(this, arguments);
      }
      function k(U, B) {
        for (var V = 0; V < B.length; V++) {
          var G = B[V];
          G.enumerable = G.enumerable || !1, G.configurable = !0, "value" in G && (G.writable = !0), Object.defineProperty(U, (pe = function(me, re) {
            if (I(me) !== "object" || me === null) return me;
            var Z = me[Symbol.toPrimitive];
            if (Z !== void 0) {
              var te = Z.call(me, "string");
              if (I(te) !== "object") return te;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(me);
          }(G.key), I(pe) === "symbol" ? pe : String(pe)), G);
        }
        var pe;
      }
      function A(U, B) {
        return A = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(V, G) {
          return V.__proto__ = G, V;
        }, A(U, B);
      }
      function D(U, B) {
        if (B && (I(B) === "object" || typeof B == "function")) return B;
        if (B !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
        return _(U);
      }
      function _(U) {
        if (U === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return U;
      }
      function M(U) {
        return M = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(B) {
          return B.__proto__ || Object.getPrototypeOf(B);
        }, M(U);
      }
      var z = function() {
        return typeof window > "u" ? 0 : window.scrollX || window.pageXOffset;
      }, Y = function() {
        return typeof window > "u" ? 0 : window.scrollY || window.pageYOffset;
      };
      const H = function(U) {
        var B = function(V) {
          (function(ye, we) {
            if (typeof we != "function" && we !== null) throw new TypeError("Super expression must either be null or a function");
            ye.prototype = Object.create(we && we.prototype, { constructor: { value: ye, writable: !0, configurable: !0 } }), Object.defineProperty(ye, "prototype", { writable: !1 }), we && A(ye, we);
          })(te, V);
          var G, pe, me, re, Z = (me = te, re = function() {
            if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
            if (typeof Proxy == "function") return !0;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              })), !0;
            } catch {
              return !1;
            }
          }(), function() {
            var ye, we = M(me);
            if (re) {
              var le = M(this).constructor;
              ye = Reflect.construct(we, arguments, le);
            } else ye = we.apply(this, arguments);
            return D(this, ye);
          });
          function te(ye) {
            var we;
            if (function(xe, Ae) {
              if (!(xe instanceof Ae)) throw new TypeError("Cannot call a class as a function");
            }(this, te), (we = Z.call(this, ye)).useIntersectionObserver = ye.useIntersectionObserver && l(), we.useIntersectionObserver) return D(we);
            var le = we.onChangeScroll.bind(_(we));
            return ye.delayMethod === "debounce" ? we.delayedScroll = S()(le, ye.delayTime) : ye.delayMethod === "throttle" && (we.delayedScroll = T()(le, ye.delayTime)), we.state = { scrollPosition: { x: z(), y: Y() } }, we.baseComponentRef = s().createRef(), we;
          }
          return G = te, (pe = [{ key: "componentDidMount", value: function() {
            this.addListeners();
          } }, { key: "componentWillUnmount", value: function() {
            this.removeListeners();
          } }, { key: "componentDidUpdate", value: function() {
            typeof window > "u" || this.useIntersectionObserver || $(this.baseComponentRef.current) !== this.scrollElement && (this.removeListeners(), this.addListeners());
          } }, { key: "addListeners", value: function() {
            typeof window > "u" || this.useIntersectionObserver || (this.scrollElement = $(this.baseComponentRef.current), this.scrollElement.addEventListener("scroll", this.delayedScroll, { passive: !0 }), window.addEventListener("resize", this.delayedScroll, { passive: !0 }), this.scrollElement !== window && window.addEventListener("scroll", this.delayedScroll, { passive: !0 }));
          } }, { key: "removeListeners", value: function() {
            typeof window > "u" || this.useIntersectionObserver || (this.scrollElement.removeEventListener("scroll", this.delayedScroll), window.removeEventListener("resize", this.delayedScroll), this.scrollElement !== window && window.removeEventListener("scroll", this.delayedScroll));
          } }, { key: "onChangeScroll", value: function() {
            this.useIntersectionObserver || this.setState({ scrollPosition: { x: z(), y: Y() } });
          } }, { key: "render", value: function() {
            var ye = this.props, we = (ye.delayMethod, ye.delayTime, function(xe, Ae) {
              if (xe == null) return {};
              var ze, Ye, Pt = function(It, _e) {
                if (It == null) return {};
                var ot, xt, $e = {}, Lt = Object.keys(It);
                for (xt = 0; xt < Lt.length; xt++) ot = Lt[xt], _e.indexOf(ot) >= 0 || ($e[ot] = It[ot]);
                return $e;
              }(xe, Ae);
              if (Object.getOwnPropertySymbols) {
                var pt = Object.getOwnPropertySymbols(xe);
                for (Ye = 0; Ye < pt.length; Ye++) ze = pt[Ye], Ae.indexOf(ze) >= 0 || Object.prototype.propertyIsEnumerable.call(xe, ze) && (Pt[ze] = xe[ze]);
              }
              return Pt;
            }(ye, p)), le = this.useIntersectionObserver ? null : this.state.scrollPosition;
            return s().createElement(U, O({ forwardRef: this.baseComponentRef, scrollPosition: le }, we));
          } }]) && k(G.prototype, pe), Object.defineProperty(G, "prototype", { writable: !1 }), te;
        }(s().Component);
        return B.propTypes = { delayMethod: a.PropTypes.oneOf(["debounce", "throttle"]), delayTime: a.PropTypes.number, useIntersectionObserver: a.PropTypes.bool }, B.defaultProps = { delayMethod: "throttle", delayTime: 300, useIntersectionObserver: !0 }, B;
      };
      function j(U) {
        return j = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(B) {
          return typeof B;
        } : function(B) {
          return B && typeof Symbol == "function" && B.constructor === Symbol && B !== Symbol.prototype ? "symbol" : typeof B;
        }, j(U);
      }
      function W(U, B) {
        for (var V = 0; V < B.length; V++) {
          var G = B[V];
          G.enumerable = G.enumerable || !1, G.configurable = !0, "value" in G && (G.writable = !0), Object.defineProperty(U, (pe = function(me, re) {
            if (j(me) !== "object" || me === null) return me;
            var Z = me[Symbol.toPrimitive];
            if (Z !== void 0) {
              var te = Z.call(me, "string");
              if (j(te) !== "object") return te;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(me);
          }(G.key), j(pe) === "symbol" ? pe : String(pe)), G);
        }
        var pe;
      }
      function ee(U, B) {
        return ee = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(V, G) {
          return V.__proto__ = G, V;
        }, ee(U, B);
      }
      function K(U) {
        return K = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(B) {
          return B.__proto__ || Object.getPrototypeOf(B);
        }, K(U);
      }
      var oe = function(U) {
        (function(Z, te) {
          if (typeof te != "function" && te !== null) throw new TypeError("Super expression must either be null or a function");
          Z.prototype = Object.create(te && te.prototype, { constructor: { value: Z, writable: !0, configurable: !0 } }), Object.defineProperty(Z, "prototype", { writable: !1 }), te && ee(Z, te);
        })(re, U);
        var B, V, G, pe, me = (G = re, pe = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var Z, te = K(G);
          if (pe) {
            var ye = K(this).constructor;
            Z = Reflect.construct(te, arguments, ye);
          } else Z = te.apply(this, arguments);
          return function(we, le) {
            if (le && (j(le) === "object" || typeof le == "function")) return le;
            if (le !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(xe) {
              if (xe === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return xe;
            }(we);
          }(this, Z);
        });
        function re(Z) {
          return function(te, ye) {
            if (!(te instanceof ye)) throw new TypeError("Cannot call a class as a function");
          }(this, re), me.call(this, Z);
        }
        return B = re, (V = [{ key: "render", value: function() {
          return s().createElement(E, this.props);
        } }]) && W(B.prototype, V), Object.defineProperty(B, "prototype", { writable: !1 }), re;
      }(s().Component);
      const ne = H(oe);
      function se(U) {
        return se = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(B) {
          return typeof B;
        } : function(B) {
          return B && typeof Symbol == "function" && B.constructor === Symbol && B !== Symbol.prototype ? "symbol" : typeof B;
        }, se(U);
      }
      function de(U, B) {
        for (var V = 0; V < B.length; V++) {
          var G = B[V];
          G.enumerable = G.enumerable || !1, G.configurable = !0, "value" in G && (G.writable = !0), Object.defineProperty(U, (pe = function(me, re) {
            if (se(me) !== "object" || me === null) return me;
            var Z = me[Symbol.toPrimitive];
            if (Z !== void 0) {
              var te = Z.call(me, "string");
              if (se(te) !== "object") return te;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(me);
          }(G.key), se(pe) === "symbol" ? pe : String(pe)), G);
        }
        var pe;
      }
      function X(U, B) {
        return X = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(V, G) {
          return V.__proto__ = G, V;
        }, X(U, B);
      }
      function ae(U) {
        if (U === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return U;
      }
      function Q(U) {
        return Q = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(B) {
          return B.__proto__ || Object.getPrototypeOf(B);
        }, Q(U);
      }
      var ie = function(U) {
        (function(Z, te) {
          if (typeof te != "function" && te !== null) throw new TypeError("Super expression must either be null or a function");
          Z.prototype = Object.create(te && te.prototype, { constructor: { value: Z, writable: !0, configurable: !0 } }), Object.defineProperty(Z, "prototype", { writable: !1 }), te && X(Z, te);
        })(re, U);
        var B, V, G, pe, me = (G = re, pe = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var Z, te = Q(G);
          if (pe) {
            var ye = Q(this).constructor;
            Z = Reflect.construct(te, arguments, ye);
          } else Z = te.apply(this, arguments);
          return function(we, le) {
            if (le && (se(le) === "object" || typeof le == "function")) return le;
            if (le !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return ae(we);
          }(this, Z);
        });
        function re(Z) {
          var te;
          (function(Ae, ze) {
            if (!(Ae instanceof ze)) throw new TypeError("Cannot call a class as a function");
          })(this, re), te = me.call(this, Z);
          var ye = Z.afterLoad, we = Z.beforeLoad, le = Z.scrollPosition, xe = Z.visibleByDefault;
          return te.state = { visible: xe }, xe && (we(), ye()), te.onVisible = te.onVisible.bind(ae(te)), te.isScrollTracked = !!(le && Number.isFinite(le.x) && le.x >= 0 && Number.isFinite(le.y) && le.y >= 0), te;
        }
        return B = re, (V = [{ key: "componentDidUpdate", value: function(Z, te) {
          te.visible !== this.state.visible && this.props.afterLoad();
        } }, { key: "onVisible", value: function() {
          this.props.beforeLoad(), this.setState({ visible: !0 });
        } }, { key: "render", value: function() {
          if (this.state.visible) return this.props.children;
          var Z = this.props, te = Z.className, ye = Z.delayMethod, we = Z.delayTime, le = Z.height, xe = Z.placeholder, Ae = Z.scrollPosition, ze = Z.style, Ye = Z.threshold, Pt = Z.useIntersectionObserver, pt = Z.width;
          return this.isScrollTracked || Pt && l() ? s().createElement(E, { className: te, height: le, onVisible: this.onVisible, placeholder: xe, scrollPosition: Ae, style: ze, threshold: Ye, useIntersectionObserver: Pt, width: pt }) : s().createElement(ne, { className: te, delayMethod: ye, delayTime: we, height: le, onVisible: this.onVisible, placeholder: xe, style: ze, threshold: Ye, width: pt });
        } }]) && de(B.prototype, V), Object.defineProperty(B, "prototype", { writable: !1 }), re;
      }(s().Component);
      ie.propTypes = { afterLoad: a.PropTypes.func, beforeLoad: a.PropTypes.func, useIntersectionObserver: a.PropTypes.bool, visibleByDefault: a.PropTypes.bool }, ie.defaultProps = { afterLoad: function() {
        return {};
      }, beforeLoad: function() {
        return {};
      }, useIntersectionObserver: !0, visibleByDefault: !1 };
      const F = ie;
      function he(U) {
        return he = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(B) {
          return typeof B;
        } : function(B) {
          return B && typeof Symbol == "function" && B.constructor === Symbol && B !== Symbol.prototype ? "symbol" : typeof B;
        }, he(U);
      }
      var fe = ["afterLoad", "beforeLoad", "delayMethod", "delayTime", "effect", "placeholder", "placeholderSrc", "scrollPosition", "threshold", "useIntersectionObserver", "visibleByDefault", "wrapperClassName", "wrapperProps"];
      function Se(U, B) {
        var V = Object.keys(U);
        if (Object.getOwnPropertySymbols) {
          var G = Object.getOwnPropertySymbols(U);
          B && (G = G.filter(function(pe) {
            return Object.getOwnPropertyDescriptor(U, pe).enumerable;
          })), V.push.apply(V, G);
        }
        return V;
      }
      function Le(U) {
        for (var B = 1; B < arguments.length; B++) {
          var V = arguments[B] != null ? arguments[B] : {};
          B % 2 ? Se(Object(V), !0).forEach(function(G) {
            Ne(U, G, V[G]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(U, Object.getOwnPropertyDescriptors(V)) : Se(Object(V)).forEach(function(G) {
            Object.defineProperty(U, G, Object.getOwnPropertyDescriptor(V, G));
          });
        }
        return U;
      }
      function Ne(U, B, V) {
        return (B = De(B)) in U ? Object.defineProperty(U, B, { value: V, enumerable: !0, configurable: !0, writable: !0 }) : U[B] = V, U;
      }
      function ke() {
        return ke = Object.assign ? Object.assign.bind() : function(U) {
          for (var B = 1; B < arguments.length; B++) {
            var V = arguments[B];
            for (var G in V) Object.prototype.hasOwnProperty.call(V, G) && (U[G] = V[G]);
          }
          return U;
        }, ke.apply(this, arguments);
      }
      function Re(U, B) {
        for (var V = 0; V < B.length; V++) {
          var G = B[V];
          G.enumerable = G.enumerable || !1, G.configurable = !0, "value" in G && (G.writable = !0), Object.defineProperty(U, De(G.key), G);
        }
      }
      function De(U) {
        var B = function(V, G) {
          if (he(V) !== "object" || V === null) return V;
          var pe = V[Symbol.toPrimitive];
          if (pe !== void 0) {
            var me = pe.call(V, "string");
            if (he(me) !== "object") return me;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(V);
        }(U);
        return he(B) === "symbol" ? B : String(B);
      }
      function Oe(U, B) {
        return Oe = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(V, G) {
          return V.__proto__ = G, V;
        }, Oe(U, B);
      }
      function N(U) {
        return N = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(B) {
          return B.__proto__ || Object.getPrototypeOf(B);
        }, N(U);
      }
      var q = function(U) {
        (function(Z, te) {
          if (typeof te != "function" && te !== null) throw new TypeError("Super expression must either be null or a function");
          Z.prototype = Object.create(te && te.prototype, { constructor: { value: Z, writable: !0, configurable: !0 } }), Object.defineProperty(Z, "prototype", { writable: !1 }), te && Oe(Z, te);
        })(re, U);
        var B, V, G, pe, me = (G = re, pe = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var Z, te = N(G);
          if (pe) {
            var ye = N(this).constructor;
            Z = Reflect.construct(te, arguments, ye);
          } else Z = te.apply(this, arguments);
          return function(we, le) {
            if (le && (he(le) === "object" || typeof le == "function")) return le;
            if (le !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(xe) {
              if (xe === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return xe;
            }(we);
          }(this, Z);
        });
        function re(Z) {
          var te;
          return function(ye, we) {
            if (!(ye instanceof we)) throw new TypeError("Cannot call a class as a function");
          }(this, re), (te = me.call(this, Z)).state = { loaded: !1 }, te;
        }
        return B = re, (V = [{ key: "onImageLoad", value: function() {
          var Z = this;
          return this.state.loaded ? null : function(te) {
            Z.props.onLoad(te), Z.props.afterLoad(), Z.setState({ loaded: !0 });
          };
        } }, { key: "getImg", value: function() {
          var Z = this.props, te = (Z.afterLoad, Z.beforeLoad, Z.delayMethod, Z.delayTime, Z.effect, Z.placeholder, Z.placeholderSrc, Z.scrollPosition, Z.threshold, Z.useIntersectionObserver, Z.visibleByDefault, Z.wrapperClassName, Z.wrapperProps, function(ye, we) {
            if (ye == null) return {};
            var le, xe, Ae = function(Ye, Pt) {
              if (Ye == null) return {};
              var pt, It, _e = {}, ot = Object.keys(Ye);
              for (It = 0; It < ot.length; It++) pt = ot[It], Pt.indexOf(pt) >= 0 || (_e[pt] = Ye[pt]);
              return _e;
            }(ye, we);
            if (Object.getOwnPropertySymbols) {
              var ze = Object.getOwnPropertySymbols(ye);
              for (xe = 0; xe < ze.length; xe++) le = ze[xe], we.indexOf(le) >= 0 || Object.prototype.propertyIsEnumerable.call(ye, le) && (Ae[le] = ye[le]);
            }
            return Ae;
          }(Z, fe));
          return s().createElement("img", ke({}, te, { onLoad: this.onImageLoad() }));
        } }, { key: "getLazyLoadImage", value: function() {
          var Z = this.props, te = Z.beforeLoad, ye = Z.className, we = Z.delayMethod, le = Z.delayTime, xe = Z.height, Ae = Z.placeholder, ze = Z.scrollPosition, Ye = Z.style, Pt = Z.threshold, pt = Z.useIntersectionObserver, It = Z.visibleByDefault, _e = Z.width;
          return s().createElement(F, { beforeLoad: te, className: ye, delayMethod: we, delayTime: le, height: xe, placeholder: Ae, scrollPosition: ze, style: Ye, threshold: Pt, useIntersectionObserver: pt, visibleByDefault: It, width: _e }, this.getImg());
        } }, { key: "getWrappedLazyLoadImage", value: function(Z) {
          var te = this.props, ye = te.effect, we = te.height, le = te.placeholderSrc, xe = te.width, Ae = te.wrapperClassName, ze = te.wrapperProps, Ye = this.state.loaded, Pt = Ye ? " lazy-load-image-loaded" : "", pt = Ye || !le ? {} : { backgroundImage: "url(".concat(le, ")"), backgroundSize: "100% 100%" };
          return s().createElement("span", ke({ className: Ae + " lazy-load-image-background " + ye + Pt, style: Le(Le({}, pt), {}, { color: "transparent", display: "inline-block", height: we, width: xe }) }, ze), Z);
        } }, { key: "render", value: function() {
          var Z = this.props, te = Z.effect, ye = Z.placeholderSrc, we = Z.visibleByDefault, le = Z.wrapperClassName, xe = Z.wrapperProps, Ae = this.getLazyLoadImage();
          return (te || ye) && !we || le || xe ? this.getWrappedLazyLoadImage(Ae) : Ae;
        } }]) && Re(B.prototype, V), Object.defineProperty(B, "prototype", { writable: !1 }), re;
      }(s().Component);
      q.propTypes = { onLoad: a.PropTypes.func, afterLoad: a.PropTypes.func, beforeLoad: a.PropTypes.func, delayMethod: a.PropTypes.string, delayTime: a.PropTypes.number, effect: a.PropTypes.string, placeholderSrc: a.PropTypes.string, threshold: a.PropTypes.number, useIntersectionObserver: a.PropTypes.bool, visibleByDefault: a.PropTypes.bool, wrapperClassName: a.PropTypes.string, wrapperProps: a.PropTypes.object }, q.defaultProps = { onLoad: function() {
      }, afterLoad: function() {
        return {};
      }, beforeLoad: function() {
        return {};
      }, delayMethod: "throttle", delayTime: 300, effect: "", placeholderSrc: null, threshold: 100, useIntersectionObserver: !0, visibleByDefault: !1, wrapperClassName: "" };
      const J = q;
    })(), Ic.exports = r;
  })()), Ic.exports;
}
var yA = gA();
const bA = je(({ src: e, alt: t, ...n }) => /* @__PURE__ */ P(
  yA.LazyLoadImage,
  {
    src: e,
    alt: t,
    effect: "blur",
    wrapperProps: {
      // If you need to, you can tweak the effect transition using the wrapper style.
      style: { transitionDelay: "1s" }
    },
    draggable: !1,
    ...n
  }
));
bA.displayName = "LazyImage";
function vA(e) {
  return St("MuiLinearProgress", e);
}
$t("MuiLinearProgress", ["root", "colorPrimary", "colorSecondary", "determinate", "indeterminate", "buffer", "query", "dashed", "dashedColorPrimary", "dashedColorSecondary", "bar", "bar1", "bar2", "barColorPrimary", "barColorSecondary", "bar1Indeterminate", "bar1Determinate", "bar1Buffer", "bar2Indeterminate", "bar2Buffer"]);
const wu = 4, Su = Ur`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`, xA = typeof Su != "string" ? oi`
        animation: ${Su} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
      ` : null, Tu = Ur`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`, wA = typeof Tu != "string" ? oi`
        animation: ${Tu} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
      ` : null, Eu = Ur`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`, SA = typeof Eu != "string" ? oi`
        animation: ${Eu} 3s infinite linear;
      ` : null, TA = (e) => {
  const {
    classes: t,
    variant: n,
    color: r
  } = e, o = {
    root: ["root", `color${Te(r)}`, n],
    dashed: ["dashed", `dashedColor${Te(r)}`],
    bar1: ["bar", "bar1", `barColor${Te(r)}`, (n === "indeterminate" || n === "query") && "bar1Indeterminate", n === "determinate" && "bar1Determinate", n === "buffer" && "bar1Buffer"],
    bar2: ["bar", "bar2", n !== "buffer" && `barColor${Te(r)}`, n === "buffer" && `color${Te(r)}`, (n === "indeterminate" || n === "query") && "bar2Indeterminate", n === "buffer" && "bar2Buffer"]
  };
  return Mt(o, vA, t);
}, Zd = (e, t) => e.vars ? e.vars.palette.LinearProgress[`${t}Bg`] : e.palette.mode === "light" ? si(e.palette[t].main, 0.62) : ii(e.palette[t].main, 0.5), EA = Me("span", {
  name: "MuiLinearProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`color${Te(n.color)}`], t[n.variant]];
  }
})(nt(({
  theme: e
}) => ({
  position: "relative",
  overflow: "hidden",
  display: "block",
  height: 4,
  // Fix Safari's bug during composition of different paint.
  zIndex: 0,
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [...Object.entries(e.palette).filter(hn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: Zd(e, t)
    }
  })), {
    props: ({
      ownerState: t
    }) => t.color === "inherit" && t.variant !== "buffer",
    style: {
      "&::before": {
        content: '""',
        position: "absolute",
        left: 0,
        top: 0,
        right: 0,
        bottom: 0,
        backgroundColor: "currentColor",
        opacity: 0.3
      }
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      backgroundColor: "transparent"
    }
  }, {
    props: {
      variant: "query"
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
}))), CA = Me("span", {
  name: "MuiLinearProgress",
  slot: "Dashed",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.dashed, t[`dashedColor${Te(n.color)}`]];
  }
})(nt(({
  theme: e
}) => ({
  position: "absolute",
  marginTop: 0,
  height: "100%",
  width: "100%",
  backgroundSize: "10px 10px",
  backgroundPosition: "0 -23px",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3,
      backgroundImage: "radial-gradient(currentColor 0%, currentColor 16%, transparent 42%)"
    }
  }, ...Object.entries(e.palette).filter(hn()).map(([t]) => {
    const n = Zd(e, t);
    return {
      props: {
        color: t
      },
      style: {
        backgroundImage: `radial-gradient(${n} 0%, ${n} 16%, transparent 42%)`
      }
    };
  })]
})), SA || {
  // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
  animation: `${Eu} 3s infinite linear`
}), OA = Me("span", {
  name: "MuiLinearProgress",
  slot: "Bar1",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar1, t[`barColor${Te(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar1Indeterminate, n.variant === "determinate" && t.bar1Determinate, n.variant === "buffer" && t.bar1Buffer];
  }
})(nt(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      backgroundColor: "currentColor"
    }
  }, ...Object.entries(e.palette).filter(hn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main
    }
  })), {
    props: {
      variant: "determinate"
    },
    style: {
      transition: `transform .${wu}s linear`
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      zIndex: 1,
      transition: `transform .${wu}s linear`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: xA || {
      animation: `${Su} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`
    }
  }]
}))), RA = Me("span", {
  name: "MuiLinearProgress",
  slot: "Bar2",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar2, t[`barColor${Te(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar2Indeterminate, n.variant === "buffer" && t.bar2Buffer];
  }
})(nt(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [...Object.entries(e.palette).filter(hn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--LinearProgressBar2-barColor": (e.vars || e).palette[t].main
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color !== "inherit",
    style: {
      backgroundColor: "var(--LinearProgressBar2-barColor, currentColor)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color === "inherit",
    style: {
      backgroundColor: "currentColor"
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3
    }
  }, ...Object.entries(e.palette).filter(hn()).map(([t]) => ({
    props: {
      color: t,
      variant: "buffer"
    },
    style: {
      backgroundColor: Zd(e, t),
      transition: `transform .${wu}s linear`
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: wA || {
      animation: `${Tu} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`
    }
  }]
}))), wv = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = kt({
    props: t,
    name: "MuiLinearProgress"
  }), {
    className: o,
    color: s = "primary",
    value: a,
    valueBuffer: l,
    variant: c = "indeterminate",
    ...u
  } = r, d = {
    ...r,
    color: s,
    variant: c
  }, f = TA(d), h = il(), g = {}, y = {
    bar1: {},
    bar2: {}
  };
  if (c === "determinate" || c === "buffer")
    if (a !== void 0) {
      g["aria-valuenow"] = Math.round(a), g["aria-valuemin"] = 0, g["aria-valuemax"] = 100;
      let m = a - 100;
      h && (m = -m), y.bar1.transform = `translateX(${m}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
  if (c === "buffer")
    if (l !== void 0) {
      let m = (l || 0) - 100;
      h && (m = -m), y.bar2.transform = `translateX(${m}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
  return /* @__PURE__ */ Pe(EA, {
    className: Ce(f.root, o),
    ownerState: d,
    role: "progressbar",
    ...g,
    ref: n,
    ...u,
    children: [c === "buffer" ? /* @__PURE__ */ P(CA, {
      className: f.dashed,
      ownerState: d
    }) : null, /* @__PURE__ */ P(OA, {
      className: f.bar1,
      ownerState: d,
      style: y.bar1
    }), c === "determinate" ? null : /* @__PURE__ */ P(RA, {
      className: f.bar2,
      ownerState: d,
      style: y.bar2
    })]
  });
});
process.env.NODE_ENV !== "production" && (wv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["inherit", "primary", "secondary"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */
  value: i.number,
  /**
   * The value for the buffer variant.
   * Value between 0 and 100.
   */
  valueBuffer: i.number,
  /**
   * The variant to use.
   * Use indeterminate or query when there is no progress value.
   * @default 'indeterminate'
   */
  variant: i.oneOf(["buffer", "determinate", "indeterminate", "query"])
});
const $A = je(({ disablePortal: e, isCircle: t = !1 }) => /* @__PURE__ */ P(Ko, { disablePortal: e, children: /* @__PURE__ */ Pe(
  Cr,
  {
    sx: {
      width: 1,
      minHeight: 1,
      flexGrow: 1,
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      position: "fixed",
      // 基于 <body>
      top: 0,
      left: 0,
      right: 0
    },
    children: [
      t && /* @__PURE__ */ P(md, { color: "primary", disableShrink: !0, size: 40 }),
      !t && /* @__PURE__ */ P(
        wv,
        {
          color: "primary",
          sx: { width: 1, maxWidth: 360, height: "4px", borderRadius: "8px" }
        }
      )
    ]
  }
) }));
$A.displayName = "Loading";
function kA(e) {
  return St("MuiDialog", e);
}
const Nc = $t("MuiDialog", ["root", "scrollPaper", "scrollBody", "container", "paper", "paperScrollPaper", "paperScrollBody", "paperWidthFalse", "paperWidthXs", "paperWidthSm", "paperWidthMd", "paperWidthLg", "paperWidthXl", "paperFullWidth", "paperFullScreen"]), Sv = /* @__PURE__ */ C.createContext({});
process.env.NODE_ENV !== "production" && (Sv.displayName = "DialogContext");
const PA = Me(Rd, {
  name: "MuiDialog",
  slot: "Backdrop",
  overrides: (e, t) => t.backdrop
})({
  // Improve scrollable dialog support.
  zIndex: -1
}), IA = (e) => {
  const {
    classes: t,
    scroll: n,
    maxWidth: r,
    fullWidth: o,
    fullScreen: s
  } = e, a = {
    root: ["root"],
    container: ["container", `scroll${Te(n)}`],
    paper: ["paper", `paperScroll${Te(n)}`, `paperWidth${Te(String(r))}`, o && "paperFullWidth", s && "paperFullScreen"]
  };
  return Mt(a, kA, t);
}, NA = Me(vl, {
  name: "MuiDialog",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  "@media print": {
    // Use !important to override the Modal inline-style.
    position: "absolute !important"
  }
}), AA = Me("div", {
  name: "MuiDialog",
  slot: "Container",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.container, t[`scroll${Te(n.scroll)}`]];
  }
})({
  height: "100%",
  "@media print": {
    height: "auto"
  },
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      justifyContent: "center",
      alignItems: "center"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      overflowY: "auto",
      overflowX: "hidden",
      textAlign: "center",
      "&::after": {
        content: '""',
        display: "inline-block",
        verticalAlign: "middle",
        height: "100%",
        width: "0"
      }
    }
  }]
}), MA = Me(ai, {
  name: "MuiDialog",
  slot: "Paper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.paper, t[`scrollPaper${Te(n.scroll)}`], t[`paperWidth${Te(String(n.maxWidth))}`], n.fullWidth && t.paperFullWidth, n.fullScreen && t.paperFullScreen];
  }
})(nt(({
  theme: e
}) => ({
  margin: 32,
  position: "relative",
  overflowY: "auto",
  "@media print": {
    overflowY: "visible",
    boxShadow: "none"
  },
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      flexDirection: "column",
      maxHeight: "calc(100% - 64px)"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      display: "inline-block",
      verticalAlign: "middle",
      textAlign: "initial"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.maxWidth,
    style: {
      maxWidth: "calc(100% - 64px)"
    }
  }, {
    props: {
      maxWidth: "xs"
    },
    style: {
      maxWidth: e.breakpoints.unit === "px" ? Math.max(e.breakpoints.values.xs, 444) : `max(${e.breakpoints.values.xs}${e.breakpoints.unit}, 444px)`,
      [`&.${Nc.paperScrollBody}`]: {
        [e.breakpoints.down(Math.max(e.breakpoints.values.xs, 444) + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  }, ...Object.keys(e.breakpoints.values).filter((t) => t !== "xs").map((t) => ({
    props: {
      maxWidth: t
    },
    style: {
      maxWidth: `${e.breakpoints.values[t]}${e.breakpoints.unit}`,
      [`&.${Nc.paperScrollBody}`]: {
        [e.breakpoints.down(e.breakpoints.values[t] + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  })), {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "calc(100% - 64px)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullScreen,
    style: {
      margin: 0,
      width: "100%",
      maxWidth: "100%",
      height: "100%",
      maxHeight: "none",
      borderRadius: 0,
      [`&.${Nc.paperScrollBody}`]: {
        margin: 0,
        maxWidth: "100%"
      }
    }
  }]
}))), Tv = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = kt({
    props: t,
    name: "MuiDialog"
  }), o = Ir(), s = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    "aria-describedby": a,
    "aria-labelledby": l,
    "aria-modal": c = !0,
    BackdropComponent: u,
    BackdropProps: d,
    children: f,
    className: h,
    disableEscapeKeyDown: g = !1,
    fullScreen: y = !1,
    fullWidth: m = !1,
    maxWidth: v = "sm",
    onClick: x,
    onClose: E,
    open: w,
    PaperComponent: S = ai,
    PaperProps: b = {},
    scroll: T = "paper",
    slots: R = {},
    slotProps: $ = {},
    TransitionComponent: I = Jo,
    transitionDuration: p = s,
    TransitionProps: O,
    ...k
  } = r, A = {
    ...r,
    disableEscapeKeyDown: g,
    fullScreen: y,
    fullWidth: m,
    maxWidth: v,
    scroll: T
  }, D = IA(A), _ = C.useRef(), M = (he) => {
    _.current = he.target === he.currentTarget;
  }, z = (he) => {
    x && x(he), _.current && (_.current = null, E && E(he, "backdropClick"));
  }, Y = Wu(l), H = C.useMemo(() => ({
    titleId: Y
  }), [Y]), j = {
    transition: I,
    ...R
  }, W = {
    transition: O,
    paper: b,
    backdrop: d,
    ...$
  }, ee = {
    slots: j,
    slotProps: W
  }, [K, oe] = dt("root", {
    elementType: NA,
    shouldForwardComponentProp: !0,
    externalForwardedProps: ee,
    ownerState: A,
    className: Ce(D.root, h),
    ref: n
  }), [ne, se] = dt("backdrop", {
    elementType: PA,
    shouldForwardComponentProp: !0,
    externalForwardedProps: ee,
    ownerState: A
  }), [de, X] = dt("paper", {
    elementType: MA,
    shouldForwardComponentProp: !0,
    externalForwardedProps: ee,
    ownerState: A,
    className: Ce(D.paper, b.className)
  }), [ae, Q] = dt("container", {
    elementType: AA,
    externalForwardedProps: ee,
    ownerState: A,
    className: Ce(D.container)
  }), [ie, F] = dt("transition", {
    elementType: Jo,
    externalForwardedProps: ee,
    ownerState: A,
    additionalProps: {
      appear: !0,
      in: w,
      timeout: p,
      role: "presentation"
    }
  });
  return /* @__PURE__ */ P(K, {
    closeAfterTransition: !0,
    slots: {
      backdrop: ne
    },
    slotProps: {
      backdrop: {
        transitionDuration: p,
        as: u,
        ...se
      }
    },
    disableEscapeKeyDown: g,
    onClose: E,
    open: w,
    onClick: z,
    ...oe,
    ...k,
    children: /* @__PURE__ */ P(ie, {
      ...F,
      children: /* @__PURE__ */ P(ae, {
        onMouseDown: M,
        ...Q,
        children: /* @__PURE__ */ P(de, {
          as: S,
          elevation: 24,
          role: "dialog",
          "aria-describedby": a,
          "aria-labelledby": Y,
          "aria-modal": c,
          ...X,
          children: /* @__PURE__ */ P(Sv.Provider, {
            value: H,
            children: f
          })
        })
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (Tv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The id(s) of the element(s) that describe the dialog.
   */
  "aria-describedby": i.string,
  /**
   * The id(s) of the element(s) that label the dialog.
   */
  "aria-labelledby": i.string,
  /**
   * Informs assistive technologies that the element is modal.
   * It's added on the element with role="dialog".
   * @default true
   */
  "aria-modal": i.oneOfType([i.oneOf(["false", "true"]), i.bool]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * @ignore
   */
  BackdropProps: i.object,
  /**
   * Dialog children, usually the included sub-components.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: i.bool,
  /**
   * If `true`, the dialog is full-screen.
   * @default false
   */
  fullScreen: i.bool,
  /**
   * If `true`, the dialog stretches to `maxWidth`.
   *
   * Notice that the dialog width grow is limited by the default margin.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * Determine the max-width of the dialog.
   * The dialog width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'sm'
   */
  maxWidth: i.oneOfType([i.oneOf(["xs", "sm", "md", "lg", "xl", !1]), i.string]),
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The component used to render the body of the dialog.
   * @default Paper
   */
  PaperComponent: i.elementType,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @default {}
   * @deprecated Use `slotProps.paper` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PaperProps: i.object,
  /**
   * Determine the container for scrolling the dialog.
   * @default 'paper'
   */
  scroll: i.oneOf(["body", "paper"]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    container: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    container: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: i.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated Use `slotProps.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionProps: i.object
});
const Ev = je(
  ({ isOpen: e, closeModal: t, isPrevented: n = !0, children: r, sx: o, ...s }) => {
    const { paperCommonStyles: a } = li();
    return /* @__PURE__ */ P(
      Tv,
      {
        id: "VenomousUI-Modal",
        open: e,
        onClose: n ? void 0 : t,
        scroll: "paper",
        keepMounted: !0,
        sx: { ...o },
        slotProps: {
          paper: {
            sx: {
              ...a
            }
          }
        },
        ...s,
        children: r
      }
    );
  }
);
Ev.displayName = "Modal";
function FM() {
  const [e, t] = jr(!1), n = an(() => t(!0), []), r = an(() => t(!1), []);
  return {
    isOpen: e,
    openModal: n,
    closeModal: r
  };
}
const _A = je(
  ({
    onSubmit: e,
    onClose: t,
    isSubmitting: n = !1,
    title: r = "",
    contentMessage: o = "",
    cancelButtonText: s = "Cancel",
    confirmButtonText: a = "Confirm",
    confirmButtonIsDisabled: l = !1,
    cancelButtonIsDisabled: c = !1,
    ...u
  }) => {
    const d = Av(u.isOpen);
    return Hi(() => {
      d.current && !u.isOpen && (t == null || t()), d.current = u.isOpen;
    }, [u.isOpen, t]), /* @__PURE__ */ Pe(Ev, { isPrevented: !0, ...u, children: [
      /* @__PURE__ */ P(On, { isTitle: !0, text: r, p: "8px" }),
      /* @__PURE__ */ P(On, { text: o, p: "8px", pb: "24px" }),
      /* @__PURE__ */ Pe(Kt, { row: !0, justifyContent: "flex-end", children: [
        /* @__PURE__ */ P(
          pr,
          {
            text: s,
            onClick: u.closeModal,
            disabled: c || n,
            isOutlined: !0
          }
        ),
        /* @__PURE__ */ P(
          pr,
          {
            text: a,
            onClick: () => {
              (async () => (await (e == null ? void 0 : e()), u.closeModal()))();
            },
            disabled: l,
            loading: n,
            autoFocus: !0
          }
        )
      ] })
    ] });
  }
);
_A.displayName = "ConfirmModal";
function nh(e) {
  return e.substring(2).toLowerCase();
}
function DA(e, t) {
  return t.documentElement.clientWidth < e.clientX || t.documentElement.clientHeight < e.clientY;
}
function Wa(e) {
  const {
    children: t,
    disableReactTree: n = !1,
    mouseEvent: r = "onClick",
    onClickAway: o,
    touchEvent: s = "onTouchEnd"
  } = e, a = C.useRef(!1), l = C.useRef(null), c = C.useRef(!1), u = C.useRef(!1);
  C.useEffect(() => (setTimeout(() => {
    c.current = !0;
  }, 0), () => {
    c.current = !1;
  }), []);
  const d = tn(go(t), l), f = sr((y) => {
    const m = u.current;
    u.current = !1;
    const v = dn(l.current);
    if (!c.current || !l.current || "clientX" in y && DA(y, v))
      return;
    if (a.current) {
      a.current = !1;
      return;
    }
    let x;
    y.composedPath ? x = y.composedPath().includes(l.current) : x = !v.documentElement.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      y.target
    ) || l.current.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      y.target
    ), !x && (n || !m) && o(y);
  }), h = (y) => (m) => {
    u.current = !0;
    const v = t.props[y];
    v && v(m);
  }, g = {
    ref: d
  };
  return s !== !1 && (g[s] = h(s)), C.useEffect(() => {
    if (s !== !1) {
      const y = nh(s), m = dn(l.current), v = () => {
        a.current = !0;
      };
      return m.addEventListener(y, f), m.addEventListener("touchmove", v), () => {
        m.removeEventListener(y, f), m.removeEventListener("touchmove", v);
      };
    }
  }, [f, s]), r !== !1 && (g[r] = h(r)), C.useEffect(() => {
    if (r !== !1) {
      const y = nh(r), m = dn(l.current);
      return m.addEventListener(y, f), () => {
        m.removeEventListener(y, f);
      };
    }
  }, [f, r]), /* @__PURE__ */ C.cloneElement(t, g);
}
process.env.NODE_ENV !== "production" && (Wa.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The wrapped element.
   */
  children: Yr.isRequired,
  /**
   * If `true`, the React tree is ignored and only the DOM tree is considered.
   * This prop changes how portaled elements are handled.
   * @default false
   */
  disableReactTree: i.bool,
  /**
   * The mouse event to listen to. You can disable the listener by providing `false`.
   * @default 'onClick'
   */
  mouseEvent: i.oneOf(["onClick", "onMouseDown", "onMouseUp", "onPointerDown", "onPointerUp", !1]),
  /**
   * Callback fired when a "click away" event is detected.
   */
  onClickAway: i.func.isRequired,
  /**
   * The touch event to listen to. You can disable the listener by providing `false`.
   * @default 'onTouchEnd'
   */
  touchEvent: i.oneOf(["onTouchEnd", "onTouchStart", !1])
});
process.env.NODE_ENV !== "production" && (Wa.propTypes = ms(Wa.propTypes));
const BA = Qd((e) => ({
  activeId: null,
  setActiveId: (t) => e({ activeId: t })
}));
function FA(e) {
  const { activeId: t, setActiveId: n } = BA(), [r, o] = jr(null), s = !!r && (!e || t === e), a = an(
    (c) => {
      const u = c.currentTarget;
      e ? (n(e), o(u)) : o(r ? null : u);
    },
    [e, n]
  ), l = an(() => {
    var c;
    (c = window.getSelection()) != null && c.toString() || (e && n(null), o(null));
  }, [e, n]);
  return {
    anchorEl: r,
    isOpen: s,
    openPopper: a,
    closePopper: l
  };
}
const Cv = je(
  ({ id: e, children: t, renderPopperHandler: n, position: r = "bottom", sx: o, contentSx: s }) => {
    const { anchorEl: a, isOpen: l, openPopper: c, closePopper: u } = FA(e);
    return /* @__PURE__ */ P(Wa, { onClickAway: u, children: /* @__PURE__ */ Pe(Cr, { sx: { position: "relative", ...o }, role: "presentation", id: "#VenomousUI-Popper", children: [
      n({ anchorEl: a, isOpen: l, openPopper: c, closePopper: u }),
      /* @__PURE__ */ P(ul, { open: l, anchorEl: a, placement: r, transition: !0, keepMounted: !0, children: ({ TransitionProps: d }) => /* @__PURE__ */ P(Jo, { ...d, children: /* @__PURE__ */ P(ns, { isOutlined: !0, sx: { width: "100%", ...s }, children: t }) }) })
    ] }) });
  }
);
Cv.displayName = "Popper";
const Cu = typeof td({}) == "function", jA = (e, t) => ({
  WebkitFontSmoothing: "antialiased",
  // Antialiasing.
  MozOsxFontSmoothing: "grayscale",
  // Antialiasing.
  // Change from `box-sizing: content-box` so that `width`
  // is not affected by `padding` or `border`.
  boxSizing: "border-box",
  // Fix font resize problem in iOS
  WebkitTextSizeAdjust: "100%",
  // When used under CssVarsProvider, colorScheme should not be applied dynamically because it will generate the stylesheet twice for server-rendered applications.
  ...t && !e.vars && {
    colorScheme: e.palette.mode
  }
}), LA = (e) => ({
  color: (e.vars || e).palette.text.primary,
  ...e.typography.body1,
  backgroundColor: (e.vars || e).palette.background.default,
  "@media print": {
    // Save printer ink.
    backgroundColor: (e.vars || e).palette.common.white
  }
}), Ov = (e, t = !1) => {
  var s, a;
  const n = {};
  t && e.colorSchemes && typeof e.getColorSchemeSelector == "function" && Object.entries(e.colorSchemes).forEach(([l, c]) => {
    var d, f;
    const u = e.getColorSchemeSelector(l);
    u.startsWith("@") ? n[u] = {
      ":root": {
        colorScheme: (d = c.palette) == null ? void 0 : d.mode
      }
    } : n[u.replace(/\s*&/, "")] = {
      colorScheme: (f = c.palette) == null ? void 0 : f.mode
    };
  });
  let r = {
    html: jA(e, t),
    "*, *::before, *::after": {
      boxSizing: "inherit"
    },
    "strong, b": {
      fontWeight: e.typography.fontWeightBold
    },
    body: {
      margin: 0,
      // Remove the margin in all browsers.
      ...LA(e),
      // Add support for document.body.requestFullScreen().
      // Other elements, if background transparent, are not supported.
      "&::backdrop": {
        backgroundColor: (e.vars || e).palette.background.default
      }
    },
    ...n
  };
  const o = (a = (s = e.components) == null ? void 0 : s.MuiCssBaseline) == null ? void 0 : a.styleOverrides;
  return o && (r = [r, o]), r;
}, da = "mui-ecs", VA = (e) => {
  const t = Ov(e, !1), n = Array.isArray(t) ? t[0] : t;
  return !e.vars && n && (n.html[`:root:has(${da})`] = {
    colorScheme: e.palette.mode
  }), e.colorSchemes && Object.entries(e.colorSchemes).forEach(([r, o]) => {
    var a, l;
    const s = e.getColorSchemeSelector(r);
    s.startsWith("@") ? n[s] = {
      [`:root:not(:has(.${da}))`]: {
        colorScheme: (a = o.palette) == null ? void 0 : a.mode
      }
    } : n[s.replace(/\s*&/, "")] = {
      [`&:not(:has(.${da}))`]: {
        colorScheme: (l = o.palette) == null ? void 0 : l.mode
      }
    };
  }), t;
}, zA = td(Cu ? ({
  theme: e,
  enableColorScheme: t
}) => Ov(e, t) : ({
  theme: e
}) => VA(e));
function Rv(e) {
  const t = kt({
    props: e,
    name: "MuiCssBaseline"
  }), {
    children: n,
    enableColorScheme: r = !1
  } = t;
  return /* @__PURE__ */ Pe(C.Fragment, {
    children: [Cu && /* @__PURE__ */ P(zA, {
      enableColorScheme: r
    }), !Cu && !r && /* @__PURE__ */ P("span", {
      className: da,
      style: {
        display: "none"
      }
    }), n]
  });
}
process.env.NODE_ENV !== "production" && (Rv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * You can wrap a node.
   */
  children: i.node,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   * @default false
   */
  enableColorScheme: i.bool
});
function WA() {
  const { themeMode: e } = Jd(), { themePalette: t } = xv(), n = cr(() => sl({
    palette: {
      mode: e,
      primary: {
        main: t.main,
        dark: t.dark,
        light: t.light,
        contrastText: t.contrastText
      }
    }
  }), [e, t]);
  return UA(t), { theme: n };
}
function UA(e) {
  Hi(() => {
    const t = document.createElement("style");
    return t.innerHTML = `
          /* 设置选中文本的样式 */
          ::selection {
            background-color: ${e.opacity};                      /* 设置选中文本的背景色 */
            color: white;                                                   /* 设置选中文本的文字颜色 */
          }
    
          /* 设置滚动条的样式 */
          ::-webkit-scrollbar {
            width: 8px;                                                     /* 设置滚动条的宽度 */
            height: 8px;                                                    /* 设置滚动条的高度 */
          }
          ::-webkit-scrollbar-thumb {
            background-color: ${e.main};                         /* 设置滚动条的颜色 */
            border-radius: 4px;                                             /* 设置滚动条的圆角 */
          }
          ::-webkit-scrollbar-thumb:hover {
            background-color: ${e.dark};                         /* 悬停时加深颜色 */
          } 
          ::-webkit-scrollbar-track {
            background-color: rgba(0, 0, 0, 0.1);                         /* 滑轨颜色 */
            border-radius: 4px;                                             /* 圆角 */
            transition: opacity 0.5s ease-in-out;                           /* 滑轨过渡效果 */
          }
          /* Firefox 滚动条样式 */
          * {
            scrollbar-color: ${e.main} rgba(0, 0, 0, 0.1);     /* 滑块 和 滑轨颜色 */
            scrollbar-width: medium;                                        /* 滚动条宽度 */
          }
          /* Firefox 滚动条的过渡效果 */
          *::-webkit-scrollbar {
            transition: opacity 0.5s ease-in-out;
          }
        `, document.head.appendChild(t), () => {
      document.head.removeChild(t);
    };
  }, [e]);
}
const HA = je(({ children: e }) => {
  const { theme: t } = WA();
  return /* @__PURE__ */ Pe(OS, { theme: t, disableTransitionOnChange: !0, children: [
    /* @__PURE__ */ P(Rv, {}),
    e
  ] });
});
HA.displayName = "ThemeProvider";
function qA(e) {
  if (typeof document > "u") return;
  let t = document.head || document.getElementsByTagName("head")[0], n = document.createElement("style");
  n.type = "text/css", t.appendChild(n), n.styleSheet ? n.styleSheet.cssText = e : n.appendChild(document.createTextNode(e));
}
const YA = (e) => {
  switch (e) {
    case "success":
      return XA;
    case "info":
      return JA;
    case "warning":
      return QA;
    case "error":
      return ZA;
    default:
      return null;
  }
}, GA = Array(12).fill(0), KA = ({ visible: e, className: t }) => /* @__PURE__ */ L.createElement("div", {
  className: [
    "sonner-loading-wrapper",
    t
  ].filter(Boolean).join(" "),
  "data-visible": e
}, /* @__PURE__ */ L.createElement("div", {
  className: "sonner-spinner"
}, GA.map((n, r) => /* @__PURE__ */ L.createElement("div", {
  className: "sonner-loading-bar",
  key: `spinner-bar-${r}`
})))), XA = /* @__PURE__ */ L.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ L.createElement("path", {
  fillRule: "evenodd",
  d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
  clipRule: "evenodd"
})), QA = /* @__PURE__ */ L.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ L.createElement("path", {
  fillRule: "evenodd",
  d: "M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z",
  clipRule: "evenodd"
})), JA = /* @__PURE__ */ L.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ L.createElement("path", {
  fillRule: "evenodd",
  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z",
  clipRule: "evenodd"
})), ZA = /* @__PURE__ */ L.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ L.createElement("path", {
  fillRule: "evenodd",
  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0110 5zm0 10a1 1 0 100-2 1 1 0 000 2z",
  clipRule: "evenodd"
})), eM = /* @__PURE__ */ L.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "12",
  height: "12",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "1.5",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, /* @__PURE__ */ L.createElement("line", {
  x1: "18",
  y1: "6",
  x2: "6",
  y2: "18"
}), /* @__PURE__ */ L.createElement("line", {
  x1: "6",
  y1: "6",
  x2: "18",
  y2: "18"
})), tM = () => {
  const [e, t] = L.useState(document.hidden);
  return L.useEffect(() => {
    const n = () => {
      t(document.hidden);
    };
    return document.addEventListener("visibilitychange", n), () => window.removeEventListener("visibilitychange", n);
  }, []), e;
};
let Ou = 1;
class nM {
  constructor() {
    this.subscribe = (t) => (this.subscribers.push(t), () => {
      const n = this.subscribers.indexOf(t);
      this.subscribers.splice(n, 1);
    }), this.publish = (t) => {
      this.subscribers.forEach((n) => n(t));
    }, this.addToast = (t) => {
      this.publish(t), this.toasts = [
        ...this.toasts,
        t
      ];
    }, this.create = (t) => {
      var n;
      const { message: r, ...o } = t, s = typeof (t == null ? void 0 : t.id) == "number" || ((n = t.id) == null ? void 0 : n.length) > 0 ? t.id : Ou++, a = this.toasts.find((c) => c.id === s), l = t.dismissible === void 0 ? !0 : t.dismissible;
      return this.dismissedToasts.has(s) && this.dismissedToasts.delete(s), a ? this.toasts = this.toasts.map((c) => c.id === s ? (this.publish({
        ...c,
        ...t,
        id: s,
        title: r
      }), {
        ...c,
        ...t,
        id: s,
        dismissible: l,
        title: r
      }) : c) : this.addToast({
        title: r,
        ...o,
        dismissible: l,
        id: s
      }), s;
    }, this.dismiss = (t) => (t ? (this.dismissedToasts.add(t), requestAnimationFrame(() => this.subscribers.forEach((n) => n({
      id: t,
      dismiss: !0
    })))) : this.toasts.forEach((n) => {
      this.subscribers.forEach((r) => r({
        id: n.id,
        dismiss: !0
      }));
    }), t), this.message = (t, n) => this.create({
      ...n,
      message: t
    }), this.error = (t, n) => this.create({
      ...n,
      message: t,
      type: "error"
    }), this.success = (t, n) => this.create({
      ...n,
      type: "success",
      message: t
    }), this.info = (t, n) => this.create({
      ...n,
      type: "info",
      message: t
    }), this.warning = (t, n) => this.create({
      ...n,
      type: "warning",
      message: t
    }), this.loading = (t, n) => this.create({
      ...n,
      type: "loading",
      message: t
    }), this.promise = (t, n) => {
      if (!n)
        return;
      let r;
      n.loading !== void 0 && (r = this.create({
        ...n,
        promise: t,
        type: "loading",
        message: n.loading,
        description: typeof n.description != "function" ? n.description : void 0
      }));
      const o = Promise.resolve(t instanceof Function ? t() : t);
      let s = r !== void 0, a;
      const l = o.then(async (u) => {
        if (a = [
          "resolve",
          u
        ], L.isValidElement(u))
          s = !1, this.create({
            id: r,
            type: "default",
            message: u
          });
        else if (oM(u) && !u.ok) {
          s = !1;
          const f = typeof n.error == "function" ? await n.error(`HTTP error! status: ${u.status}`) : n.error, h = typeof n.description == "function" ? await n.description(`HTTP error! status: ${u.status}`) : n.description, y = typeof f == "object" && !L.isValidElement(f) ? f : {
            message: f
          };
          this.create({
            id: r,
            type: "error",
            description: h,
            ...y
          });
        } else if (u instanceof Error) {
          s = !1;
          const f = typeof n.error == "function" ? await n.error(u) : n.error, h = typeof n.description == "function" ? await n.description(u) : n.description, y = typeof f == "object" && !L.isValidElement(f) ? f : {
            message: f
          };
          this.create({
            id: r,
            type: "error",
            description: h,
            ...y
          });
        } else if (n.success !== void 0) {
          s = !1;
          const f = typeof n.success == "function" ? await n.success(u) : n.success, h = typeof n.description == "function" ? await n.description(u) : n.description, y = typeof f == "object" && !L.isValidElement(f) ? f : {
            message: f
          };
          this.create({
            id: r,
            type: "success",
            description: h,
            ...y
          });
        }
      }).catch(async (u) => {
        if (a = [
          "reject",
          u
        ], n.error !== void 0) {
          s = !1;
          const d = typeof n.error == "function" ? await n.error(u) : n.error, f = typeof n.description == "function" ? await n.description(u) : n.description, g = typeof d == "object" && !L.isValidElement(d) ? d : {
            message: d
          };
          this.create({
            id: r,
            type: "error",
            description: f,
            ...g
          });
        }
      }).finally(() => {
        s && (this.dismiss(r), r = void 0), n.finally == null || n.finally.call(n);
      }), c = () => new Promise((u, d) => l.then(() => a[0] === "reject" ? d(a[1]) : u(a[1])).catch(d));
      return typeof r != "string" && typeof r != "number" ? {
        unwrap: c
      } : Object.assign(r, {
        unwrap: c
      });
    }, this.custom = (t, n) => {
      const r = (n == null ? void 0 : n.id) || Ou++;
      return this.create({
        jsx: t(r),
        id: r,
        ...n
      }), r;
    }, this.getActiveToasts = () => this.toasts.filter((t) => !this.dismissedToasts.has(t.id)), this.subscribers = [], this.toasts = [], this.dismissedToasts = /* @__PURE__ */ new Set();
  }
}
const cn = new nM(), rM = (e, t) => {
  const n = (t == null ? void 0 : t.id) || Ou++;
  return cn.addToast({
    title: e,
    ...t,
    id: n
  }), n;
}, oM = (e) => e && typeof e == "object" && "ok" in e && typeof e.ok == "boolean" && "status" in e && typeof e.status == "number", iM = rM, sM = () => cn.toasts, aM = () => cn.getActiveToasts(), Ac = Object.assign(iM, {
  success: cn.success,
  info: cn.info,
  warning: cn.warning,
  error: cn.error,
  custom: cn.custom,
  message: cn.message,
  promise: cn.promise,
  dismiss: cn.dismiss,
  loading: cn.loading
}, {
  getHistory: sM,
  getToasts: aM
});
qA("[data-sonner-toaster][dir=ltr],html[dir=ltr]{--toast-icon-margin-start:-3px;--toast-icon-margin-end:4px;--toast-svg-margin-start:-1px;--toast-svg-margin-end:0px;--toast-button-margin-start:auto;--toast-button-margin-end:0;--toast-close-button-start:0;--toast-close-button-end:unset;--toast-close-button-transform:translate(-35%, -35%)}[data-sonner-toaster][dir=rtl],html[dir=rtl]{--toast-icon-margin-start:4px;--toast-icon-margin-end:-3px;--toast-svg-margin-start:0px;--toast-svg-margin-end:-1px;--toast-button-margin-start:0;--toast-button-margin-end:auto;--toast-close-button-start:unset;--toast-close-button-end:0;--toast-close-button-transform:translate(35%, -35%)}[data-sonner-toaster]{position:fixed;width:var(--width);font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;--gray1:hsl(0, 0%, 99%);--gray2:hsl(0, 0%, 97.3%);--gray3:hsl(0, 0%, 95.1%);--gray4:hsl(0, 0%, 93%);--gray5:hsl(0, 0%, 90.9%);--gray6:hsl(0, 0%, 88.7%);--gray7:hsl(0, 0%, 85.8%);--gray8:hsl(0, 0%, 78%);--gray9:hsl(0, 0%, 56.1%);--gray10:hsl(0, 0%, 52.3%);--gray11:hsl(0, 0%, 43.5%);--gray12:hsl(0, 0%, 9%);--border-radius:8px;box-sizing:border-box;padding:0;margin:0;list-style:none;outline:0;z-index:999999999;transition:transform .4s ease}[data-sonner-toaster][data-lifted=true]{transform:translateY(-8px)}@media (hover:none) and (pointer:coarse){[data-sonner-toaster][data-lifted=true]{transform:none}}[data-sonner-toaster][data-x-position=right]{right:var(--offset-right)}[data-sonner-toaster][data-x-position=left]{left:var(--offset-left)}[data-sonner-toaster][data-x-position=center]{left:50%;transform:translateX(-50%)}[data-sonner-toaster][data-y-position=top]{top:var(--offset-top)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--offset-bottom)}[data-sonner-toast]{--y:translateY(100%);--lift-amount:calc(var(--lift) * var(--gap));z-index:var(--z-index);position:absolute;opacity:0;transform:var(--y);touch-action:none;transition:transform .4s,opacity .4s,height .4s,box-shadow .2s;box-sizing:border-box;outline:0;overflow-wrap:anywhere}[data-sonner-toast][data-styled=true]{padding:16px;background:var(--normal-bg);border:1px solid var(--normal-border);color:var(--normal-text);border-radius:var(--border-radius);box-shadow:0 4px 12px rgba(0,0,0,.1);width:var(--width);font-size:13px;display:flex;align-items:center;gap:6px}[data-sonner-toast]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-y-position=top]{top:0;--y:translateY(-100%);--lift:1;--lift-amount:calc(1 * var(--gap))}[data-sonner-toast][data-y-position=bottom]{bottom:0;--y:translateY(100%);--lift:-1;--lift-amount:calc(var(--lift) * var(--gap))}[data-sonner-toast][data-styled=true] [data-description]{font-weight:400;line-height:1.4;color:#3f3f3f}[data-rich-colors=true][data-sonner-toast][data-styled=true] [data-description]{color:inherit}[data-sonner-toaster][data-sonner-theme=dark] [data-description]{color:#e8e8e8}[data-sonner-toast][data-styled=true] [data-title]{font-weight:500;line-height:1.5;color:inherit}[data-sonner-toast][data-styled=true] [data-icon]{display:flex;height:16px;width:16px;position:relative;justify-content:flex-start;align-items:center;flex-shrink:0;margin-left:var(--toast-icon-margin-start);margin-right:var(--toast-icon-margin-end)}[data-sonner-toast][data-promise=true] [data-icon]>svg{opacity:0;transform:scale(.8);transform-origin:center;animation:sonner-fade-in .3s ease forwards}[data-sonner-toast][data-styled=true] [data-icon]>*{flex-shrink:0}[data-sonner-toast][data-styled=true] [data-icon] svg{margin-left:var(--toast-svg-margin-start);margin-right:var(--toast-svg-margin-end)}[data-sonner-toast][data-styled=true] [data-content]{display:flex;flex-direction:column;gap:2px}[data-sonner-toast][data-styled=true] [data-button]{border-radius:4px;padding-left:8px;padding-right:8px;height:24px;font-size:12px;color:var(--normal-bg);background:var(--normal-text);margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end);border:none;font-weight:500;cursor:pointer;outline:0;display:flex;align-items:center;flex-shrink:0;transition:opacity .4s,box-shadow .2s}[data-sonner-toast][data-styled=true] [data-button]:focus-visible{box-shadow:0 0 0 2px rgba(0,0,0,.4)}[data-sonner-toast][data-styled=true] [data-button]:first-of-type{margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end)}[data-sonner-toast][data-styled=true] [data-cancel]{color:var(--normal-text);background:rgba(0,0,0,.08)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-styled=true] [data-cancel]{background:rgba(255,255,255,.3)}[data-sonner-toast][data-styled=true] [data-close-button]{position:absolute;left:var(--toast-close-button-start);right:var(--toast-close-button-end);top:0;height:20px;width:20px;display:flex;justify-content:center;align-items:center;padding:0;color:var(--gray12);background:var(--normal-bg);border:1px solid var(--gray4);transform:var(--toast-close-button-transform);border-radius:50%;cursor:pointer;z-index:1;transition:opacity .1s,background .2s,border-color .2s}[data-sonner-toast][data-styled=true] [data-close-button]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-styled=true] [data-disabled=true]{cursor:not-allowed}[data-sonner-toast][data-styled=true]:hover [data-close-button]:hover{background:var(--gray2);border-color:var(--gray5)}[data-sonner-toast][data-swiping=true]::before{content:'';position:absolute;left:-100%;right:-100%;height:100%;z-index:-1}[data-sonner-toast][data-y-position=top][data-swiping=true]::before{bottom:50%;transform:scaleY(3) translateY(50%)}[data-sonner-toast][data-y-position=bottom][data-swiping=true]::before{top:50%;transform:scaleY(3) translateY(-50%)}[data-sonner-toast][data-swiping=false][data-removed=true]::before{content:'';position:absolute;inset:0;transform:scaleY(2)}[data-sonner-toast][data-expanded=true]::after{content:'';position:absolute;left:0;height:calc(var(--gap) + 1px);bottom:100%;width:100%}[data-sonner-toast][data-mounted=true]{--y:translateY(0);opacity:1}[data-sonner-toast][data-expanded=false][data-front=false]{--scale:var(--toasts-before) * 0.05 + 1;--y:translateY(calc(var(--lift-amount) * var(--toasts-before))) scale(calc(-1 * var(--scale)));height:var(--front-toast-height)}[data-sonner-toast]>*{transition:opacity .4s}[data-sonner-toast][data-x-position=right]{right:0}[data-sonner-toast][data-x-position=left]{left:0}[data-sonner-toast][data-expanded=false][data-front=false][data-styled=true]>*{opacity:0}[data-sonner-toast][data-visible=false]{opacity:0;pointer-events:none}[data-sonner-toast][data-mounted=true][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset)));height:var(--initial-height)}[data-sonner-toast][data-removed=true][data-front=true][data-swipe-out=false]{--y:translateY(calc(var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset) + var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=false]{--y:translateY(40%);opacity:0;transition:transform .5s,opacity .2s}[data-sonner-toast][data-removed=true][data-front=false]::before{height:calc(var(--initial-height) + 20%)}[data-sonner-toast][data-swiping=true]{transform:var(--y) translateY(var(--swipe-amount-y,0)) translateX(var(--swipe-amount-x,0));transition:none}[data-sonner-toast][data-swiped=true]{user-select:none}[data-sonner-toast][data-swipe-out=true][data-y-position=bottom],[data-sonner-toast][data-swipe-out=true][data-y-position=top]{animation-duration:.2s;animation-timing-function:ease-out;animation-fill-mode:forwards}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=left]{animation-name:swipe-out-left}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=right]{animation-name:swipe-out-right}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=up]{animation-name:swipe-out-up}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=down]{animation-name:swipe-out-down}@keyframes swipe-out-left{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) - 100%));opacity:0}}@keyframes swipe-out-right{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) + 100%));opacity:0}}@keyframes swipe-out-up{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) - 100%));opacity:0}}@keyframes swipe-out-down{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) + 100%));opacity:0}}@media (max-width:600px){[data-sonner-toaster]{position:fixed;right:var(--mobile-offset-right);left:var(--mobile-offset-left);width:100%}[data-sonner-toaster][dir=rtl]{left:calc(var(--mobile-offset-left) * -1)}[data-sonner-toaster] [data-sonner-toast]{left:0;right:0;width:calc(100% - var(--mobile-offset-left) * 2)}[data-sonner-toaster][data-x-position=left]{left:var(--mobile-offset-left)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--mobile-offset-bottom)}[data-sonner-toaster][data-y-position=top]{top:var(--mobile-offset-top)}[data-sonner-toaster][data-x-position=center]{left:var(--mobile-offset-left);right:var(--mobile-offset-right);transform:none}}[data-sonner-toaster][data-sonner-theme=light]{--normal-bg:#fff;--normal-border:var(--gray4);--normal-text:var(--gray12);--success-bg:hsl(143, 85%, 96%);--success-border:hsl(145, 92%, 87%);--success-text:hsl(140, 100%, 27%);--info-bg:hsl(208, 100%, 97%);--info-border:hsl(221, 91%, 93%);--info-text:hsl(210, 92%, 45%);--warning-bg:hsl(49, 100%, 97%);--warning-border:hsl(49, 91%, 84%);--warning-text:hsl(31, 92%, 45%);--error-bg:hsl(359, 100%, 97%);--error-border:hsl(359, 100%, 94%);--error-text:hsl(360, 100%, 45%)}[data-sonner-toaster][data-sonner-theme=light] [data-sonner-toast][data-invert=true]{--normal-bg:#000;--normal-border:hsl(0, 0%, 20%);--normal-text:var(--gray1)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-invert=true]{--normal-bg:#fff;--normal-border:var(--gray3);--normal-text:var(--gray12)}[data-sonner-toaster][data-sonner-theme=dark]{--normal-bg:#000;--normal-bg-hover:hsl(0, 0%, 12%);--normal-border:hsl(0, 0%, 20%);--normal-border-hover:hsl(0, 0%, 25%);--normal-text:var(--gray1);--success-bg:hsl(150, 100%, 6%);--success-border:hsl(147, 100%, 12%);--success-text:hsl(150, 86%, 65%);--info-bg:hsl(215, 100%, 6%);--info-border:hsl(223, 43%, 17%);--info-text:hsl(216, 87%, 65%);--warning-bg:hsl(64, 100%, 6%);--warning-border:hsl(60, 100%, 9%);--warning-text:hsl(46, 87%, 65%);--error-bg:hsl(358, 76%, 10%);--error-border:hsl(357, 89%, 16%);--error-text:hsl(358, 100%, 81%)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]{background:var(--normal-bg);border-color:var(--normal-border);color:var(--normal-text)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]:hover{background:var(--normal-bg-hover);border-color:var(--normal-border-hover)}[data-rich-colors=true][data-sonner-toast][data-type=success]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=success] [data-close-button]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=info]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=info] [data-close-button]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning] [data-close-button]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=error]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}[data-rich-colors=true][data-sonner-toast][data-type=error] [data-close-button]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}.sonner-loading-wrapper{--size:16px;height:var(--size);width:var(--size);position:absolute;inset:0;z-index:10}.sonner-loading-wrapper[data-visible=false]{transform-origin:center;animation:sonner-fade-out .2s ease forwards}.sonner-spinner{position:relative;top:50%;left:50%;height:var(--size);width:var(--size)}.sonner-loading-bar{animation:sonner-spin 1.2s linear infinite;background:var(--gray11);border-radius:6px;height:8%;left:-10%;position:absolute;top:-3.9%;width:24%}.sonner-loading-bar:first-child{animation-delay:-1.2s;transform:rotate(.0001deg) translate(146%)}.sonner-loading-bar:nth-child(2){animation-delay:-1.1s;transform:rotate(30deg) translate(146%)}.sonner-loading-bar:nth-child(3){animation-delay:-1s;transform:rotate(60deg) translate(146%)}.sonner-loading-bar:nth-child(4){animation-delay:-.9s;transform:rotate(90deg) translate(146%)}.sonner-loading-bar:nth-child(5){animation-delay:-.8s;transform:rotate(120deg) translate(146%)}.sonner-loading-bar:nth-child(6){animation-delay:-.7s;transform:rotate(150deg) translate(146%)}.sonner-loading-bar:nth-child(7){animation-delay:-.6s;transform:rotate(180deg) translate(146%)}.sonner-loading-bar:nth-child(8){animation-delay:-.5s;transform:rotate(210deg) translate(146%)}.sonner-loading-bar:nth-child(9){animation-delay:-.4s;transform:rotate(240deg) translate(146%)}.sonner-loading-bar:nth-child(10){animation-delay:-.3s;transform:rotate(270deg) translate(146%)}.sonner-loading-bar:nth-child(11){animation-delay:-.2s;transform:rotate(300deg) translate(146%)}.sonner-loading-bar:nth-child(12){animation-delay:-.1s;transform:rotate(330deg) translate(146%)}@keyframes sonner-fade-in{0%{opacity:0;transform:scale(.8)}100%{opacity:1;transform:scale(1)}}@keyframes sonner-fade-out{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(.8)}}@keyframes sonner-spin{0%{opacity:1}100%{opacity:.15}}@media (prefers-reduced-motion){.sonner-loading-bar,[data-sonner-toast],[data-sonner-toast]>*{transition:none!important;animation:none!important}}.sonner-loader{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);transform-origin:center;transition:opacity .2s,transform .2s}.sonner-loader[data-visible=false]{opacity:0;transform:scale(.8) translate(-50%,-50%)}");
function Qs(e) {
  return e.label !== void 0;
}
const lM = 3, cM = "24px", uM = "16px", rh = 4e3, dM = 356, fM = 14, pM = 45, mM = 200;
function Jn(...e) {
  return e.filter(Boolean).join(" ");
}
function hM(e) {
  const [t, n] = e.split("-"), r = [];
  return t && r.push(t), n && r.push(n), r;
}
const gM = (e) => {
  var t, n, r, o, s, a, l, c, u;
  const { invert: d, toast: f, unstyled: h, interacting: g, setHeights: y, visibleToasts: m, heights: v, index: x, toasts: E, expanded: w, removeToast: S, defaultRichColors: b, closeButton: T, style: R, cancelButtonStyle: $, actionButtonStyle: I, className: p = "", descriptionClassName: O = "", duration: k, position: A, gap: D, expandByDefault: _, classNames: M, icons: z, closeButtonAriaLabel: Y = "Close toast" } = e, [H, j] = L.useState(null), [W, ee] = L.useState(null), [K, oe] = L.useState(!1), [ne, se] = L.useState(!1), [de, X] = L.useState(!1), [ae, Q] = L.useState(!1), [ie, F] = L.useState(!1), [he, fe] = L.useState(0), [Se, Le] = L.useState(0), Ne = L.useRef(f.duration || k || rh), ke = L.useRef(null), Re = L.useRef(null), De = x === 0, Oe = x + 1 <= m, N = f.type, q = f.dismissible !== !1, J = f.className || "", U = f.descriptionClassName || "", B = L.useMemo(() => v.findIndex((_e) => _e.toastId === f.id) || 0, [
    v,
    f.id
  ]), V = L.useMemo(() => {
    var _e;
    return (_e = f.closeButton) != null ? _e : T;
  }, [
    f.closeButton,
    T
  ]), G = L.useMemo(() => f.duration || k || rh, [
    f.duration,
    k
  ]), pe = L.useRef(0), me = L.useRef(0), re = L.useRef(0), Z = L.useRef(null), [te, ye] = A.split("-"), we = L.useMemo(() => v.reduce((_e, ot, xt) => xt >= B ? _e : _e + ot.height, 0), [
    v,
    B
  ]), le = tM(), xe = f.invert || d, Ae = N === "loading";
  me.current = L.useMemo(() => B * D + we, [
    B,
    we
  ]), L.useEffect(() => {
    Ne.current = G;
  }, [
    G
  ]), L.useEffect(() => {
    oe(!0);
  }, []), L.useEffect(() => {
    const _e = Re.current;
    if (_e) {
      const ot = _e.getBoundingClientRect().height;
      return Le(ot), y((xt) => [
        {
          toastId: f.id,
          height: ot,
          position: f.position
        },
        ...xt
      ]), () => y((xt) => xt.filter(($e) => $e.toastId !== f.id));
    }
  }, [
    y,
    f.id
  ]), L.useLayoutEffect(() => {
    if (!K) return;
    const _e = Re.current, ot = _e.style.height;
    _e.style.height = "auto";
    const xt = _e.getBoundingClientRect().height;
    _e.style.height = ot, Le(xt), y(($e) => $e.find((Dt) => Dt.toastId === f.id) ? $e.map((Dt) => Dt.toastId === f.id ? {
      ...Dt,
      height: xt
    } : Dt) : [
      {
        toastId: f.id,
        height: xt,
        position: f.position
      },
      ...$e
    ]);
  }, [
    K,
    f.title,
    f.description,
    y,
    f.id
  ]);
  const ze = L.useCallback(() => {
    se(!0), fe(me.current), y((_e) => _e.filter((ot) => ot.toastId !== f.id)), setTimeout(() => {
      S(f);
    }, mM);
  }, [
    f,
    S,
    y,
    me
  ]);
  L.useEffect(() => {
    if (f.promise && N === "loading" || f.duration === 1 / 0 || f.type === "loading") return;
    let _e;
    return w || g || le ? (() => {
      if (re.current < pe.current) {
        const $e = (/* @__PURE__ */ new Date()).getTime() - pe.current;
        Ne.current = Ne.current - $e;
      }
      re.current = (/* @__PURE__ */ new Date()).getTime();
    })() : (() => {
      Ne.current !== 1 / 0 && (pe.current = (/* @__PURE__ */ new Date()).getTime(), _e = setTimeout(() => {
        f.onAutoClose == null || f.onAutoClose.call(f, f), ze();
      }, Ne.current));
    })(), () => clearTimeout(_e);
  }, [
    w,
    g,
    f,
    N,
    le,
    ze
  ]), L.useEffect(() => {
    f.delete && ze();
  }, [
    ze,
    f.delete
  ]);
  function Ye() {
    var _e;
    if (z != null && z.loading) {
      var ot;
      return /* @__PURE__ */ L.createElement("div", {
        className: Jn(M == null ? void 0 : M.loader, f == null || (ot = f.classNames) == null ? void 0 : ot.loader, "sonner-loader"),
        "data-visible": N === "loading"
      }, z.loading);
    }
    return /* @__PURE__ */ L.createElement(KA, {
      className: Jn(M == null ? void 0 : M.loader, f == null || (_e = f.classNames) == null ? void 0 : _e.loader),
      visible: N === "loading"
    });
  }
  const Pt = f.icon || (z == null ? void 0 : z[N]) || YA(N);
  var pt, It;
  return /* @__PURE__ */ L.createElement("li", {
    tabIndex: 0,
    ref: Re,
    className: Jn(p, J, M == null ? void 0 : M.toast, f == null || (t = f.classNames) == null ? void 0 : t.toast, M == null ? void 0 : M.default, M == null ? void 0 : M[N], f == null || (n = f.classNames) == null ? void 0 : n[N]),
    "data-sonner-toast": "",
    "data-rich-colors": (pt = f.richColors) != null ? pt : b,
    "data-styled": !(f.jsx || f.unstyled || h),
    "data-mounted": K,
    "data-promise": !!f.promise,
    "data-swiped": ie,
    "data-removed": ne,
    "data-visible": Oe,
    "data-y-position": te,
    "data-x-position": ye,
    "data-index": x,
    "data-front": De,
    "data-swiping": de,
    "data-dismissible": q,
    "data-type": N,
    "data-invert": xe,
    "data-swipe-out": ae,
    "data-swipe-direction": W,
    "data-expanded": !!(w || _ && K),
    style: {
      "--index": x,
      "--toasts-before": x,
      "--z-index": E.length - x,
      "--offset": `${ne ? he : me.current}px`,
      "--initial-height": _ ? "auto" : `${Se}px`,
      ...R,
      ...f.style
    },
    onDragEnd: () => {
      X(!1), j(null), Z.current = null;
    },
    onPointerDown: (_e) => {
      Ae || !q || (ke.current = /* @__PURE__ */ new Date(), fe(me.current), _e.target.setPointerCapture(_e.pointerId), _e.target.tagName !== "BUTTON" && (X(!0), Z.current = {
        x: _e.clientX,
        y: _e.clientY
      }));
    },
    onPointerUp: () => {
      var _e, ot, xt;
      if (ae || !q) return;
      Z.current = null;
      const $e = Number(((_e = Re.current) == null ? void 0 : _e.style.getPropertyValue("--swipe-amount-x").replace("px", "")) || 0), Lt = Number(((ot = Re.current) == null ? void 0 : ot.style.getPropertyValue("--swipe-amount-y").replace("px", "")) || 0), Dt = (/* @__PURE__ */ new Date()).getTime() - ((xt = ke.current) == null ? void 0 : xt.getTime()), $n = H === "x" ? $e : Lt, ks = Math.abs($n) / Dt;
      if (Math.abs($n) >= pM || ks > 0.11) {
        fe(me.current), f.onDismiss == null || f.onDismiss.call(f, f), ee(H === "x" ? $e > 0 ? "right" : "left" : Lt > 0 ? "down" : "up"), ze(), Q(!0);
        return;
      } else {
        var zn, Wn;
        (zn = Re.current) == null || zn.style.setProperty("--swipe-amount-x", "0px"), (Wn = Re.current) == null || Wn.style.setProperty("--swipe-amount-y", "0px");
      }
      F(!1), X(!1), j(null);
    },
    onPointerMove: (_e) => {
      var ot, xt, $e;
      if (!Z.current || !q || ((ot = window.getSelection()) == null ? void 0 : ot.toString().length) > 0) return;
      const Dt = _e.clientY - Z.current.y, $n = _e.clientX - Z.current.x;
      var ks;
      const zn = (ks = e.swipeDirections) != null ? ks : hM(A);
      !H && (Math.abs($n) > 1 || Math.abs(Dt) > 1) && j(Math.abs($n) > Math.abs(Dt) ? "x" : "y");
      let Wn = {
        x: 0,
        y: 0
      };
      const ef = (eo) => 1 / (1.5 + Math.abs(eo) / 20);
      if (H === "y") {
        if (zn.includes("top") || zn.includes("bottom"))
          if (zn.includes("top") && Dt < 0 || zn.includes("bottom") && Dt > 0)
            Wn.y = Dt;
          else {
            const eo = Dt * ef(Dt);
            Wn.y = Math.abs(eo) < Math.abs(Dt) ? eo : Dt;
          }
      } else if (H === "x" && (zn.includes("left") || zn.includes("right")))
        if (zn.includes("left") && $n < 0 || zn.includes("right") && $n > 0)
          Wn.x = $n;
        else {
          const eo = $n * ef($n);
          Wn.x = Math.abs(eo) < Math.abs($n) ? eo : $n;
        }
      (Math.abs(Wn.x) > 0 || Math.abs(Wn.y) > 0) && F(!0), (xt = Re.current) == null || xt.style.setProperty("--swipe-amount-x", `${Wn.x}px`), ($e = Re.current) == null || $e.style.setProperty("--swipe-amount-y", `${Wn.y}px`);
    }
  }, V && !f.jsx && N !== "loading" ? /* @__PURE__ */ L.createElement("button", {
    "aria-label": Y,
    "data-disabled": Ae,
    "data-close-button": !0,
    onClick: Ae || !q ? () => {
    } : () => {
      ze(), f.onDismiss == null || f.onDismiss.call(f, f);
    },
    className: Jn(M == null ? void 0 : M.closeButton, f == null || (r = f.classNames) == null ? void 0 : r.closeButton)
  }, (It = z == null ? void 0 : z.close) != null ? It : eM) : null, (N || f.icon || f.promise) && f.icon !== null && ((z == null ? void 0 : z[N]) !== null || f.icon) ? /* @__PURE__ */ L.createElement("div", {
    "data-icon": "",
    className: Jn(M == null ? void 0 : M.icon, f == null || (o = f.classNames) == null ? void 0 : o.icon)
  }, f.promise || f.type === "loading" && !f.icon ? f.icon || Ye() : null, f.type !== "loading" ? Pt : null) : null, /* @__PURE__ */ L.createElement("div", {
    "data-content": "",
    className: Jn(M == null ? void 0 : M.content, f == null || (s = f.classNames) == null ? void 0 : s.content)
  }, /* @__PURE__ */ L.createElement("div", {
    "data-title": "",
    className: Jn(M == null ? void 0 : M.title, f == null || (a = f.classNames) == null ? void 0 : a.title)
  }, f.jsx ? f.jsx : typeof f.title == "function" ? f.title() : f.title), f.description ? /* @__PURE__ */ L.createElement("div", {
    "data-description": "",
    className: Jn(O, U, M == null ? void 0 : M.description, f == null || (l = f.classNames) == null ? void 0 : l.description)
  }, typeof f.description == "function" ? f.description() : f.description) : null), /* @__PURE__ */ L.isValidElement(f.cancel) ? f.cancel : f.cancel && Qs(f.cancel) ? /* @__PURE__ */ L.createElement("button", {
    "data-button": !0,
    "data-cancel": !0,
    style: f.cancelButtonStyle || $,
    onClick: (_e) => {
      Qs(f.cancel) && q && (f.cancel.onClick == null || f.cancel.onClick.call(f.cancel, _e), ze());
    },
    className: Jn(M == null ? void 0 : M.cancelButton, f == null || (c = f.classNames) == null ? void 0 : c.cancelButton)
  }, f.cancel.label) : null, /* @__PURE__ */ L.isValidElement(f.action) ? f.action : f.action && Qs(f.action) ? /* @__PURE__ */ L.createElement("button", {
    "data-button": !0,
    "data-action": !0,
    style: f.actionButtonStyle || I,
    onClick: (_e) => {
      Qs(f.action) && (f.action.onClick == null || f.action.onClick.call(f.action, _e), !_e.defaultPrevented && ze());
    },
    className: Jn(M == null ? void 0 : M.actionButton, f == null || (u = f.classNames) == null ? void 0 : u.actionButton)
  }, f.action.label) : null);
};
function oh() {
  if (typeof window > "u" || typeof document > "u") return "ltr";
  const e = document.documentElement.getAttribute("dir");
  return e === "auto" || !e ? window.getComputedStyle(document.documentElement).direction : e;
}
function yM(e, t) {
  const n = {};
  return [
    e,
    t
  ].forEach((r, o) => {
    const s = o === 1, a = s ? "--mobile-offset" : "--offset", l = s ? uM : cM;
    function c(u) {
      [
        "top",
        "right",
        "bottom",
        "left"
      ].forEach((d) => {
        n[`${a}-${d}`] = typeof u == "number" ? `${u}px` : u;
      });
    }
    typeof r == "number" || typeof r == "string" ? c(r) : typeof r == "object" ? [
      "top",
      "right",
      "bottom",
      "left"
    ].forEach((u) => {
      r[u] === void 0 ? n[`${a}-${u}`] = l : n[`${a}-${u}`] = typeof r[u] == "number" ? `${r[u]}px` : r[u];
    }) : c(l);
  }), n;
}
const bM = /* @__PURE__ */ L.forwardRef(function(t, n) {
  const { invert: r, position: o = "bottom-right", hotkey: s = [
    "altKey",
    "KeyT"
  ], expand: a, closeButton: l, className: c, offset: u, mobileOffset: d, theme: f = "light", richColors: h, duration: g, style: y, visibleToasts: m = lM, toastOptions: v, dir: x = oh(), gap: E = fM, icons: w, containerAriaLabel: S = "Notifications" } = t, [b, T] = L.useState([]), R = L.useMemo(() => Array.from(new Set([
    o
  ].concat(b.filter((W) => W.position).map((W) => W.position)))), [
    b,
    o
  ]), [$, I] = L.useState([]), [p, O] = L.useState(!1), [k, A] = L.useState(!1), [D, _] = L.useState(f !== "system" ? f : typeof window < "u" && window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light"), M = L.useRef(null), z = s.join("+").replace(/Key/g, "").replace(/Digit/g, ""), Y = L.useRef(null), H = L.useRef(!1), j = L.useCallback((W) => {
    T((ee) => {
      var K;
      return (K = ee.find((oe) => oe.id === W.id)) != null && K.delete || cn.dismiss(W.id), ee.filter(({ id: oe }) => oe !== W.id);
    });
  }, []);
  return L.useEffect(() => cn.subscribe((W) => {
    if (W.dismiss) {
      requestAnimationFrame(() => {
        T((ee) => ee.map((K) => K.id === W.id ? {
          ...K,
          delete: !0
        } : K));
      });
      return;
    }
    setTimeout(() => {
      Mo.flushSync(() => {
        T((ee) => {
          const K = ee.findIndex((oe) => oe.id === W.id);
          return K !== -1 ? [
            ...ee.slice(0, K),
            {
              ...ee[K],
              ...W
            },
            ...ee.slice(K + 1)
          ] : [
            W,
            ...ee
          ];
        });
      });
    });
  }), [
    b
  ]), L.useEffect(() => {
    if (f !== "system") {
      _(f);
      return;
    }
    if (f === "system" && (window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? _("dark") : _("light")), typeof window > "u") return;
    const W = window.matchMedia("(prefers-color-scheme: dark)");
    try {
      W.addEventListener("change", ({ matches: ee }) => {
        _(ee ? "dark" : "light");
      });
    } catch {
      W.addListener(({ matches: K }) => {
        try {
          _(K ? "dark" : "light");
        } catch (oe) {
          console.error(oe);
        }
      });
    }
  }, [
    f
  ]), L.useEffect(() => {
    b.length <= 1 && O(!1);
  }, [
    b
  ]), L.useEffect(() => {
    const W = (ee) => {
      var K;
      if (s.every((se) => ee[se] || ee.code === se)) {
        var ne;
        O(!0), (ne = M.current) == null || ne.focus();
      }
      ee.code === "Escape" && (document.activeElement === M.current || (K = M.current) != null && K.contains(document.activeElement)) && O(!1);
    };
    return document.addEventListener("keydown", W), () => document.removeEventListener("keydown", W);
  }, [
    s
  ]), L.useEffect(() => {
    if (M.current)
      return () => {
        Y.current && (Y.current.focus({
          preventScroll: !0
        }), Y.current = null, H.current = !1);
      };
  }, [
    M.current
  ]), // Remove item from normal navigation flow, only available via hotkey
  /* @__PURE__ */ L.createElement("section", {
    ref: n,
    "aria-label": `${S} ${z}`,
    tabIndex: -1,
    "aria-live": "polite",
    "aria-relevant": "additions text",
    "aria-atomic": "false",
    suppressHydrationWarning: !0
  }, R.map((W, ee) => {
    var K;
    const [oe, ne] = W.split("-");
    return b.length ? /* @__PURE__ */ L.createElement("ol", {
      key: W,
      dir: x === "auto" ? oh() : x,
      tabIndex: -1,
      ref: M,
      className: c,
      "data-sonner-toaster": !0,
      "data-sonner-theme": D,
      "data-y-position": oe,
      "data-lifted": p && b.length > 1 && !a,
      "data-x-position": ne,
      style: {
        "--front-toast-height": `${((K = $[0]) == null ? void 0 : K.height) || 0}px`,
        "--width": `${dM}px`,
        "--gap": `${E}px`,
        ...y,
        ...yM(u, d)
      },
      onBlur: (se) => {
        H.current && !se.currentTarget.contains(se.relatedTarget) && (H.current = !1, Y.current && (Y.current.focus({
          preventScroll: !0
        }), Y.current = null));
      },
      onFocus: (se) => {
        se.target instanceof HTMLElement && se.target.dataset.dismissible === "false" || H.current || (H.current = !0, Y.current = se.relatedTarget);
      },
      onMouseEnter: () => O(!0),
      onMouseMove: () => O(!0),
      onMouseLeave: () => {
        k || O(!1);
      },
      onDragEnd: () => O(!1),
      onPointerDown: (se) => {
        se.target instanceof HTMLElement && se.target.dataset.dismissible === "false" || A(!0);
      },
      onPointerUp: () => A(!1)
    }, b.filter((se) => !se.position && ee === 0 || se.position === W).map((se, de) => {
      var X, ae;
      return /* @__PURE__ */ L.createElement(gM, {
        key: se.id,
        icons: w,
        index: de,
        toast: se,
        defaultRichColors: h,
        duration: (X = v == null ? void 0 : v.duration) != null ? X : g,
        className: v == null ? void 0 : v.className,
        descriptionClassName: v == null ? void 0 : v.descriptionClassName,
        invert: r,
        visibleToasts: m,
        closeButton: (ae = v == null ? void 0 : v.closeButton) != null ? ae : l,
        interacting: k,
        position: W,
        style: v == null ? void 0 : v.style,
        unstyled: v == null ? void 0 : v.unstyled,
        classNames: v == null ? void 0 : v.classNames,
        cancelButtonStyle: v == null ? void 0 : v.cancelButtonStyle,
        actionButtonStyle: v == null ? void 0 : v.actionButtonStyle,
        closeButtonAriaLabel: v == null ? void 0 : v.closeButtonAriaLabel,
        removeToast: j,
        toasts: b.filter((Q) => Q.position == se.position),
        heights: $.filter((Q) => Q.position == se.position),
        setHeights: I,
        expandByDefault: a,
        gap: E,
        expanded: p,
        swipeDirections: t.swipeDirections
      });
    })) : null;
  }));
}), vM = je(({ position: e = "bottom-right" }) => {
  const { isDarkMode: t } = Jd();
  return /* @__PURE__ */ P(
    bM,
    {
      closeButton: !1,
      invert: t,
      visibleToasts: 3,
      position: e,
      gap: 6
    }
  );
});
vM.displayName = "Button";
function jM() {
  return an(({ type: t, title: n, description: r }) => {
    const o = {
      description: r,
      icon: /* @__PURE__ */ P(Or, { icon: xM(t), color: wM(t) }),
      cancel: {
        label: /* @__PURE__ */ P(Or, { icon: "solar:close-circle-outline" }),
        onClick: () => {
        }
      },
      cancelButtonStyle: { background: "transparent" }
    };
    return t === "success" ? Ac.success(n, o) : t === "error" ? Ac.error(n, o) : Ac.info(n, o);
  }, []);
}
function xM(e) {
  switch (e) {
    case "success":
      return "solar:check-circle-bold";
    case "error":
      return "solar:danger-triangle-bold";
    case "info":
    default:
      return "solar:danger-circle-bold";
  }
}
function wM(e) {
  switch (e) {
    case "success":
      return "success";
    case "error":
      return "error";
    case "info":
      return "auto";
    default:
      return "disabled";
  }
}
const SM = je(({ children: e }) => {
  const { paperCommonStyles: t } = li();
  return /* @__PURE__ */ P(
    Kt,
    {
      id: "VenomousUI-AdminHeader",
      row: !0,
      component: "header",
      sx: {
        position: "sticky",
        height: 50,
        width: "100%",
        top: 0,
        left: 0,
        right: 0,
        ...t,
        borderRadius: 0,
        alignItems: "center",
        justifyContent: "space-between"
      },
      children: e
    }
  );
});
SM.displayName = "AdminHeader";
const TM = je(
  ({
    children: e,
    width: t = 300,
    title: n = "Settings",
    labelOfThemeMode: r = "ThemeMode",
    labelOfThemePalettes: o = "ThemePalettes"
  }) => {
    const { isOpen: s, openDrawer: a, closeDrawer: l } = lR();
    return /* @__PURE__ */ Pe(ih, { children: [
      /* @__PURE__ */ P(
        pr,
        {
          isCircle: !0,
          isGhost: !0,
          icon: "solar:settings-line-duotone",
          iconWidth: 28,
          onClick: a,
          color: "auto"
        }
      ),
      /* @__PURE__ */ Pe($y, { width: t, position: "right", isOpen: s, closeDrawer: l, children: [
        /* @__PURE__ */ P(ky, { title: n, closeDrawer: l }),
        /* @__PURE__ */ P(On, { text: r, isLabel: !0, ellipsis: !0 }),
        /* @__PURE__ */ P(EM, {}),
        /* @__PURE__ */ P("br", {}),
        /* @__PURE__ */ P(On, { text: o, isLabel: !0, ellipsis: !0 }),
        /* @__PURE__ */ P(CM, {}),
        /* @__PURE__ */ P("br", {}),
        e
      ] })
    ] });
  }
);
TM.displayName = "AdminSettingsDrawer";
function EM() {
  const { isDarkMode: e, toggleThemeMode: t } = Jd();
  return /* @__PURE__ */ Pe(
    pl,
    {
      isOutlined: !0,
      clickable: !0,
      onClick: t,
      sx: {
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between",
        height: "60px"
      },
      children: [
        /* @__PURE__ */ P(
          Or,
          {
            icon: e ? "solar:moon-bold-duotone" : "solar:sun-2-bold-duotone",
            width: 24,
            color: "primary"
          }
        ),
        /* @__PURE__ */ P(qd, { value: e, onChange: () => {
        } })
      ]
    }
  );
}
function CM() {
  const { allPaletteNames: e, themePaletteName: t, setThemePaletteName: n } = xv();
  return /* @__PURE__ */ P(
    hA,
    {
      cols: { xs: 3, sm: 3, md: 3, lg: 3, xl: 3 },
      height: 80 * Math.ceil(e.length / 3),
      items: e.map((r) => r),
      renderGridItem: (r) => /* @__PURE__ */ P(dl, { title: r, arrow: !0, children: /* @__PURE__ */ P("div", { style: { margin: "4px", width: "100%" }, children: /* @__PURE__ */ P(
        pl,
        {
          isOutlined: !0,
          clickable: !0,
          disabled: r === t,
          onClick: () => n(r),
          sx: {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            backgroundColor: r === t ? za(r).main : "transparent"
          },
          children: /* @__PURE__ */ P(
            Or,
            {
              icon: "solar:siderbar-bold-duotone",
              width: 40,
              sx: {
                color: r === t ? "white" : za(r).main
              }
            }
          )
        }
      ) }) })
    }
  );
}
const OM = je(
  ({ menuHeaderHeight: e = 50, menuWidth: t = 220, menuItems: n, currentPath: r, menuHeaderElement: o, sx: s }) => {
    const { checkIsParentItemActive: a, checkIsSubItemActive: l } = SO({
      currentPath: r
    });
    return /* @__PURE__ */ Pe(
      ns,
      {
        id: "VenomousUI-AdminSideNavMenu",
        isOutlined: !0,
        sx: { width: t, height: "100svh", ...s },
        children: [
          /* @__PURE__ */ P(Kt, { row: !0, gap: 0, height: e, px: "8px", mb: "8px", children: o }),
          /* @__PURE__ */ P(
            Ra,
            {
              width: "100%",
              height: `calc(100svh - ${e}px - 16px)`,
              items: n,
              renderItem: (c) => c.subItems ? /* @__PURE__ */ P(
                Cv,
                {
                  id: c.label,
                  position: "right",
                  sx: { width: "100%" },
                  contentSx: { p: "8px" },
                  renderPopperHandler: ({ isOpen: u, openPopper: d }) => /* @__PURE__ */ P(
                    Li,
                    {
                      label: c.label,
                      isActive: a(c),
                      icon: c.icon,
                      clickable: !0,
                      onClick: d,
                      onMouseEnter: d,
                      sx: { backgroundColor: u ? "divider" : "transparent" }
                    }
                  ),
                  children: /* @__PURE__ */ P(
                    Ra,
                    {
                      items: c.subItems,
                      renderItem: (u) => /* @__PURE__ */ P(
                        Li,
                        {
                          label: u.label,
                          isActive: l(u),
                          icon: u.icon,
                          clickable: !0,
                          onClick: u.onClick
                        },
                        u.label
                      )
                    }
                  )
                }
              ) : /* @__PURE__ */ P(
                Li,
                {
                  label: c.label,
                  isActive: a(c),
                  icon: c.icon,
                  clickable: !0,
                  onClick: c.onClick
                },
                c.label
              )
            }
          )
        ]
      }
    );
  }
);
OM.displayName = "AdminSideNavMenu";
export {
  SM as AdminHeader,
  TM as AdminSettingsDrawer,
  OM as AdminSideNavMenu,
  mE as Blank,
  pr as Button,
  pl as Card,
  Iy as Checkbox,
  GN as CheckboxUncontrolled,
  _A as ConfirmModal,
  JO as Container,
  $y as Drawer,
  ky as DrawerHeader,
  GE as ExhibitCard,
  QO as ExhibitCardActionButton,
  Kt as Flex,
  DM as FormUncontrolled,
  KN as FormUncontrolledAction,
  hA as Grid,
  Or as Icon,
  Tl as Input,
  XN as InputUncontrolled,
  Zo as Label,
  Sl as Labels,
  bA as LazyImage,
  $A as Loading,
  Ra as Menu,
  Li as MenuItem,
  Ev as Modal,
  Vy as Number,
  QN as NumberUncontrolled,
  Yb as OtpInput,
  JN as OtpInputUncontrolled,
  ns as Paper,
  Gb as Password,
  ZN as PasswordUncontrolled,
  wy as Popover,
  Cv as Popper,
  Qb as Radios,
  tA as RadiosUncontrolled,
  qd as Switch,
  nA as SwitchUncontrolled,
  On as Text,
  bv as ThemePaletteName,
  HA as ThemeProvider,
  vM as Toast,
  zN as createFormControl,
  BM as createZodSchema,
  SO as useCheckNavMenuActive,
  PN as useController,
  lR as useDrawer,
  AM as useFieldArray,
  MM as useForm,
  Vn as useFormContext,
  $N as useFormState,
  FM as useModal,
  li as usePaper,
  fl as useText,
  fA as useThemeBreakpoint,
  Jd as useThemeMode,
  xv as useThemePalette,
  jM as useToast,
  kN as useWatch,
  _M as zodResolver
};
