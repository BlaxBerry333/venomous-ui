var _v = Object.defineProperty;
var Dv = (e, t, n) => t in e ? _v(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;
var _r = (e, t, n) => Dv(e, typeof t != "symbol" ? t + "" : t, n);
import { jsx as P, jsxs as $e, Fragment as ch } from "react/jsx-runtime";
import * as C from "react";
import L, { forwardRef as $u, useContext as Bv, useMemo as cn, memo as _e, useState as Cr, useEffect as zo, createElement as co, isValidElement as Qs, cloneElement as Js, Children as Fv, Fragment as jv, useCallback as tn, useId as uh, useRef as Lv } from "react";
import * as dh from "react-dom";
import Mo from "react-dom";
function Vv(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var $s = { exports: {} }, Ps = { exports: {} }, Ze = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var of;
function zv() {
  if (of) return Ze;
  of = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, h = e ? Symbol.for("react.suspense_list") : 60120, g = e ? Symbol.for("react.memo") : 60115, y = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, b = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
  function w(v) {
    if (typeof v == "object" && v !== null) {
      var T = v.$$typeof;
      switch (T) {
        case t:
          switch (v = v.type, v) {
            case c:
            case u:
            case r:
            case s:
            case o:
            case f:
              return v;
            default:
              switch (v = v && v.$$typeof, v) {
                case l:
                case d:
                case y:
                case g:
                case a:
                  return v;
                default:
                  return T;
              }
          }
        case n:
          return T;
      }
    }
  }
  function S(v) {
    return w(v) === u;
  }
  return Ze.AsyncMode = c, Ze.ConcurrentMode = u, Ze.ContextConsumer = l, Ze.ContextProvider = a, Ze.Element = t, Ze.ForwardRef = d, Ze.Fragment = r, Ze.Lazy = y, Ze.Memo = g, Ze.Portal = n, Ze.Profiler = s, Ze.StrictMode = o, Ze.Suspense = f, Ze.isAsyncMode = function(v) {
    return S(v) || w(v) === c;
  }, Ze.isConcurrentMode = S, Ze.isContextConsumer = function(v) {
    return w(v) === l;
  }, Ze.isContextProvider = function(v) {
    return w(v) === a;
  }, Ze.isElement = function(v) {
    return typeof v == "object" && v !== null && v.$$typeof === t;
  }, Ze.isForwardRef = function(v) {
    return w(v) === d;
  }, Ze.isFragment = function(v) {
    return w(v) === r;
  }, Ze.isLazy = function(v) {
    return w(v) === y;
  }, Ze.isMemo = function(v) {
    return w(v) === g;
  }, Ze.isPortal = function(v) {
    return w(v) === n;
  }, Ze.isProfiler = function(v) {
    return w(v) === s;
  }, Ze.isStrictMode = function(v) {
    return w(v) === o;
  }, Ze.isSuspense = function(v) {
    return w(v) === f;
  }, Ze.isValidElementType = function(v) {
    return typeof v == "string" || typeof v == "function" || v === r || v === u || v === s || v === o || v === f || v === h || typeof v == "object" && v !== null && (v.$$typeof === y || v.$$typeof === g || v.$$typeof === a || v.$$typeof === l || v.$$typeof === d || v.$$typeof === b || v.$$typeof === x || v.$$typeof === E || v.$$typeof === m);
  }, Ze.typeOf = w, Ze;
}
var et = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var sf;
function Wv() {
  return sf || (sf = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, h = e ? Symbol.for("react.suspense_list") : 60120, g = e ? Symbol.for("react.memo") : 60115, y = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, b = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
    function w(F) {
      return typeof F == "string" || typeof F == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      F === r || F === u || F === s || F === o || F === f || F === h || typeof F == "object" && F !== null && (F.$$typeof === y || F.$$typeof === g || F.$$typeof === a || F.$$typeof === l || F.$$typeof === d || F.$$typeof === b || F.$$typeof === x || F.$$typeof === E || F.$$typeof === m);
    }
    function S(F) {
      if (typeof F == "object" && F !== null) {
        var he = F.$$typeof;
        switch (he) {
          case t:
            var fe = F.type;
            switch (fe) {
              case c:
              case u:
              case r:
              case s:
              case o:
              case f:
                return fe;
              default:
                var Te = fe && fe.$$typeof;
                switch (Te) {
                  case l:
                  case d:
                  case y:
                  case g:
                  case a:
                    return Te;
                  default:
                    return he;
                }
            }
          case n:
            return he;
        }
      }
    }
    var v = c, T = u, R = l, k = a, I = t, p = d, O = r, $ = y, A = g, D = n, _ = s, M = o, V = f, Y = !1;
    function U(F) {
      return Y || (Y = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), j(F) || S(F) === c;
    }
    function j(F) {
      return S(F) === u;
    }
    function W(F) {
      return S(F) === l;
    }
    function ee(F) {
      return S(F) === a;
    }
    function K(F) {
      return typeof F == "object" && F !== null && F.$$typeof === t;
    }
    function oe(F) {
      return S(F) === d;
    }
    function ne(F) {
      return S(F) === r;
    }
    function se(F) {
      return S(F) === y;
    }
    function de(F) {
      return S(F) === g;
    }
    function X(F) {
      return S(F) === n;
    }
    function ae(F) {
      return S(F) === s;
    }
    function Q(F) {
      return S(F) === o;
    }
    function ie(F) {
      return S(F) === f;
    }
    et.AsyncMode = v, et.ConcurrentMode = T, et.ContextConsumer = R, et.ContextProvider = k, et.Element = I, et.ForwardRef = p, et.Fragment = O, et.Lazy = $, et.Memo = A, et.Portal = D, et.Profiler = _, et.StrictMode = M, et.Suspense = V, et.isAsyncMode = U, et.isConcurrentMode = j, et.isContextConsumer = W, et.isContextProvider = ee, et.isElement = K, et.isForwardRef = oe, et.isFragment = ne, et.isLazy = se, et.isMemo = de, et.isPortal = X, et.isProfiler = ae, et.isStrictMode = Q, et.isSuspense = ie, et.isValidElementType = w, et.typeOf = S;
  }()), et;
}
var af;
function fh() {
  return af || (af = 1, process.env.NODE_ENV === "production" ? Ps.exports = zv() : Ps.exports = Wv()), Ps.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var Wl, lf;
function Uv() {
  if (lf) return Wl;
  lf = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
  function r(s) {
    if (s == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(s);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var s = new String("abc");
      if (s[5] = "de", Object.getOwnPropertyNames(s)[0] === "5")
        return !1;
      for (var a = {}, l = 0; l < 10; l++)
        a["_" + String.fromCharCode(l)] = l;
      var c = Object.getOwnPropertyNames(a).map(function(d) {
        return a[d];
      });
      if (c.join("") !== "0123456789")
        return !1;
      var u = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(d) {
        u[d] = d;
      }), Object.keys(Object.assign({}, u)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return Wl = o() ? Object.assign : function(s, a) {
    for (var l, c = r(s), u, d = 1; d < arguments.length; d++) {
      l = Object(arguments[d]);
      for (var f in l)
        t.call(l, f) && (c[f] = l[f]);
      if (e) {
        u = e(l);
        for (var h = 0; h < u.length; h++)
          n.call(l, u[h]) && (c[u[h]] = l[u[h]]);
      }
    }
    return c;
  }, Wl;
}
var Ul, cf;
function Pu() {
  if (cf) return Ul;
  cf = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return Ul = e, Ul;
}
var Hl, uf;
function ph() {
  return uf || (uf = 1, Hl = Function.call.bind(Object.prototype.hasOwnProperty)), Hl;
}
var ql, df;
function Hv() {
  if (df) return ql;
  df = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ Pu(), n = {}, r = /* @__PURE__ */ ph();
    e = function(s) {
      var a = "Warning: " + s;
      typeof console < "u" && console.error(a);
      try {
        throw new Error(a);
      } catch {
      }
    };
  }
  function o(s, a, l, c, u) {
    if (process.env.NODE_ENV !== "production") {
      for (var d in s)
        if (r(s, d)) {
          var f;
          try {
            if (typeof s[d] != "function") {
              var h = Error(
                (c || "React class") + ": " + l + " type `" + d + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof s[d] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw h.name = "Invariant Violation", h;
            }
            f = s[d](a, d, c, l, null, t);
          } catch (y) {
            f = y;
          }
          if (f && !(f instanceof Error) && e(
            (c || "React class") + ": type specification of " + l + " `" + d + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof f + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), f instanceof Error && !(f.message in n)) {
            n[f.message] = !0;
            var g = u ? u() : "";
            e(
              "Failed " + l + " type: " + f.message + (g ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (n = {});
  }, ql = o, ql;
}
var Yl, ff;
function qv() {
  if (ff) return Yl;
  ff = 1;
  var e = fh(), t = Uv(), n = /* @__PURE__ */ Pu(), r = /* @__PURE__ */ ph(), o = /* @__PURE__ */ Hv(), s = function() {
  };
  process.env.NODE_ENV !== "production" && (s = function(l) {
    var c = "Warning: " + l;
    typeof console < "u" && console.error(c);
    try {
      throw new Error(c);
    } catch {
    }
  });
  function a() {
    return null;
  }
  return Yl = function(l, c) {
    var u = typeof Symbol == "function" && Symbol.iterator, d = "@@iterator";
    function f(j) {
      var W = j && (u && j[u] || j[d]);
      if (typeof W == "function")
        return W;
    }
    var h = "<<anonymous>>", g = {
      array: x("array"),
      bigint: x("bigint"),
      bool: x("boolean"),
      func: x("function"),
      number: x("number"),
      object: x("object"),
      string: x("string"),
      symbol: x("symbol"),
      any: E(),
      arrayOf: w,
      element: S(),
      elementType: v(),
      instanceOf: T,
      node: p(),
      objectOf: k,
      oneOf: R,
      oneOfType: I,
      shape: $,
      exact: A
    };
    function y(j, W) {
      return j === W ? j !== 0 || 1 / j === 1 / W : j !== j && W !== W;
    }
    function m(j, W) {
      this.message = j, this.data = W && typeof W == "object" ? W : {}, this.stack = "";
    }
    m.prototype = Error.prototype;
    function b(j) {
      if (process.env.NODE_ENV !== "production")
        var W = {}, ee = 0;
      function K(ne, se, de, X, ae, Q, ie) {
        if (X = X || h, Q = Q || de, ie !== n) {
          if (c) {
            var F = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw F.name = "Invariant Violation", F;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var he = X + ":" + de;
            !W[he] && // Avoid spamming the console because they are often not actionable except for lib authors
            ee < 3 && (s(
              "You are manually calling a React.PropTypes validation function for the `" + Q + "` prop on `" + X + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), W[he] = !0, ee++);
          }
        }
        return se[de] == null ? ne ? se[de] === null ? new m("The " + ae + " `" + Q + "` is marked as required " + ("in `" + X + "`, but its value is `null`.")) : new m("The " + ae + " `" + Q + "` is marked as required in " + ("`" + X + "`, but its value is `undefined`.")) : null : j(se, de, X, ae, Q);
      }
      var oe = K.bind(null, !1);
      return oe.isRequired = K.bind(null, !0), oe;
    }
    function x(j) {
      function W(ee, K, oe, ne, se, de) {
        var X = ee[K], ae = M(X);
        if (ae !== j) {
          var Q = V(X);
          return new m(
            "Invalid " + ne + " `" + se + "` of type " + ("`" + Q + "` supplied to `" + oe + "`, expected ") + ("`" + j + "`."),
            { expectedType: j }
          );
        }
        return null;
      }
      return b(W);
    }
    function E() {
      return b(a);
    }
    function w(j) {
      function W(ee, K, oe, ne, se) {
        if (typeof j != "function")
          return new m("Property `" + se + "` of component `" + oe + "` has invalid PropType notation inside arrayOf.");
        var de = ee[K];
        if (!Array.isArray(de)) {
          var X = M(de);
          return new m("Invalid " + ne + " `" + se + "` of type " + ("`" + X + "` supplied to `" + oe + "`, expected an array."));
        }
        for (var ae = 0; ae < de.length; ae++) {
          var Q = j(de, ae, oe, ne, se + "[" + ae + "]", n);
          if (Q instanceof Error)
            return Q;
        }
        return null;
      }
      return b(W);
    }
    function S() {
      function j(W, ee, K, oe, ne) {
        var se = W[ee];
        if (!l(se)) {
          var de = M(se);
          return new m("Invalid " + oe + " `" + ne + "` of type " + ("`" + de + "` supplied to `" + K + "`, expected a single ReactElement."));
        }
        return null;
      }
      return b(j);
    }
    function v() {
      function j(W, ee, K, oe, ne) {
        var se = W[ee];
        if (!e.isValidElementType(se)) {
          var de = M(se);
          return new m("Invalid " + oe + " `" + ne + "` of type " + ("`" + de + "` supplied to `" + K + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return b(j);
    }
    function T(j) {
      function W(ee, K, oe, ne, se) {
        if (!(ee[K] instanceof j)) {
          var de = j.name || h, X = U(ee[K]);
          return new m("Invalid " + ne + " `" + se + "` of type " + ("`" + X + "` supplied to `" + oe + "`, expected ") + ("instance of `" + de + "`."));
        }
        return null;
      }
      return b(W);
    }
    function R(j) {
      if (!Array.isArray(j))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? s(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : s("Invalid argument supplied to oneOf, expected an array.")), a;
      function W(ee, K, oe, ne, se) {
        for (var de = ee[K], X = 0; X < j.length; X++)
          if (y(de, j[X]))
            return null;
        var ae = JSON.stringify(j, function(ie, F) {
          var he = V(F);
          return he === "symbol" ? String(F) : F;
        });
        return new m("Invalid " + ne + " `" + se + "` of value `" + String(de) + "` " + ("supplied to `" + oe + "`, expected one of " + ae + "."));
      }
      return b(W);
    }
    function k(j) {
      function W(ee, K, oe, ne, se) {
        if (typeof j != "function")
          return new m("Property `" + se + "` of component `" + oe + "` has invalid PropType notation inside objectOf.");
        var de = ee[K], X = M(de);
        if (X !== "object")
          return new m("Invalid " + ne + " `" + se + "` of type " + ("`" + X + "` supplied to `" + oe + "`, expected an object."));
        for (var ae in de)
          if (r(de, ae)) {
            var Q = j(de, ae, oe, ne, se + "." + ae, n);
            if (Q instanceof Error)
              return Q;
          }
        return null;
      }
      return b(W);
    }
    function I(j) {
      if (!Array.isArray(j))
        return process.env.NODE_ENV !== "production" && s("Invalid argument supplied to oneOfType, expected an instance of array."), a;
      for (var W = 0; W < j.length; W++) {
        var ee = j[W];
        if (typeof ee != "function")
          return s(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + Y(ee) + " at index " + W + "."
          ), a;
      }
      function K(oe, ne, se, de, X) {
        for (var ae = [], Q = 0; Q < j.length; Q++) {
          var ie = j[Q], F = ie(oe, ne, se, de, X, n);
          if (F == null)
            return null;
          F.data && r(F.data, "expectedType") && ae.push(F.data.expectedType);
        }
        var he = ae.length > 0 ? ", expected one of type [" + ae.join(", ") + "]" : "";
        return new m("Invalid " + de + " `" + X + "` supplied to " + ("`" + se + "`" + he + "."));
      }
      return b(K);
    }
    function p() {
      function j(W, ee, K, oe, ne) {
        return D(W[ee]) ? null : new m("Invalid " + oe + " `" + ne + "` supplied to " + ("`" + K + "`, expected a ReactNode."));
      }
      return b(j);
    }
    function O(j, W, ee, K, oe) {
      return new m(
        (j || "React class") + ": " + W + " type `" + ee + "." + K + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + oe + "`."
      );
    }
    function $(j) {
      function W(ee, K, oe, ne, se) {
        var de = ee[K], X = M(de);
        if (X !== "object")
          return new m("Invalid " + ne + " `" + se + "` of type `" + X + "` " + ("supplied to `" + oe + "`, expected `object`."));
        for (var ae in j) {
          var Q = j[ae];
          if (typeof Q != "function")
            return O(oe, ne, se, ae, V(Q));
          var ie = Q(de, ae, oe, ne, se + "." + ae, n);
          if (ie)
            return ie;
        }
        return null;
      }
      return b(W);
    }
    function A(j) {
      function W(ee, K, oe, ne, se) {
        var de = ee[K], X = M(de);
        if (X !== "object")
          return new m("Invalid " + ne + " `" + se + "` of type `" + X + "` " + ("supplied to `" + oe + "`, expected `object`."));
        var ae = t({}, ee[K], j);
        for (var Q in ae) {
          var ie = j[Q];
          if (r(j, Q) && typeof ie != "function")
            return O(oe, ne, se, Q, V(ie));
          if (!ie)
            return new m(
              "Invalid " + ne + " `" + se + "` key `" + Q + "` supplied to `" + oe + "`.\nBad object: " + JSON.stringify(ee[K], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(j), null, "  ")
            );
          var F = ie(de, Q, oe, ne, se + "." + Q, n);
          if (F)
            return F;
        }
        return null;
      }
      return b(W);
    }
    function D(j) {
      switch (typeof j) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !j;
        case "object":
          if (Array.isArray(j))
            return j.every(D);
          if (j === null || l(j))
            return !0;
          var W = f(j);
          if (W) {
            var ee = W.call(j), K;
            if (W !== j.entries) {
              for (; !(K = ee.next()).done; )
                if (!D(K.value))
                  return !1;
            } else
              for (; !(K = ee.next()).done; ) {
                var oe = K.value;
                if (oe && !D(oe[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function _(j, W) {
      return j === "symbol" ? !0 : W ? W["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && W instanceof Symbol : !1;
    }
    function M(j) {
      var W = typeof j;
      return Array.isArray(j) ? "array" : j instanceof RegExp ? "object" : _(W, j) ? "symbol" : W;
    }
    function V(j) {
      if (typeof j > "u" || j === null)
        return "" + j;
      var W = M(j);
      if (W === "object") {
        if (j instanceof Date)
          return "date";
        if (j instanceof RegExp)
          return "regexp";
      }
      return W;
    }
    function Y(j) {
      var W = V(j);
      switch (W) {
        case "array":
        case "object":
          return "an " + W;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + W;
        default:
          return W;
      }
    }
    function U(j) {
      return !j.constructor || !j.constructor.name ? h : j.constructor.name;
    }
    return g.checkPropTypes = o, g.resetWarningCache = o.resetWarningCache, g.PropTypes = g, g;
  }, Yl;
}
var Gl, pf;
function Yv() {
  if (pf) return Gl;
  pf = 1;
  var e = /* @__PURE__ */ Pu();
  function t() {
  }
  function n() {
  }
  return n.resetWarningCache = t, Gl = function() {
    function r(a, l, c, u, d, f) {
      if (f !== e) {
        var h = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw h.name = "Invariant Violation", h;
      }
    }
    r.isRequired = r;
    function o() {
      return r;
    }
    var s = {
      array: r,
      bigint: r,
      bool: r,
      func: r,
      number: r,
      object: r,
      string: r,
      symbol: r,
      any: r,
      arrayOf: o,
      element: r,
      elementType: r,
      instanceOf: o,
      node: r,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: n,
      resetWarningCache: t
    };
    return s.PropTypes = s, s;
  }, Gl;
}
var mf;
function Gv() {
  if (mf) return $s.exports;
  if (mf = 1, process.env.NODE_ENV !== "production") {
    var e = fh(), t = !0;
    $s.exports = /* @__PURE__ */ qv()(e.isElement, t);
  } else
    $s.exports = /* @__PURE__ */ Yv()();
  return $s.exports;
}
var Kv = /* @__PURE__ */ Gv();
const i = /* @__PURE__ */ Vv(Kv);
function mh(e) {
  var t, n, r = "";
  if (typeof e == "string" || typeof e == "number") r += e;
  else if (typeof e == "object") if (Array.isArray(e)) {
    var o = e.length;
    for (t = 0; t < o; t++) e[t] && (n = mh(e[t])) && (r && (r += " "), r += n);
  } else for (n in e) e[n] && (r && (r += " "), r += n);
  return r;
}
function Ee() {
  for (var e, t, n = 0, r = "", o = arguments.length; n < o; n++) (e = arguments[n]) && (t = mh(e)) && (r && (r += " "), r += t);
  return r;
}
function Ct(e, t, n = void 0) {
  const r = {};
  for (const o in e) {
    const s = e[o];
    let a = "", l = !0;
    for (let c = 0; c < s.length; c += 1) {
      const u = s[c];
      u && (a += (l === !0 ? "" : " ") + t(u), l = !1, n && n[u] && (a += " " + n[u]));
    }
    r[o] = a;
  }
  return r;
}
function Or(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((r) => n.searchParams.append("args[]", r)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
function xe(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : Or(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
var Is = { exports: {} }, it = {};
/**
 * @license React
 * react-is.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hf;
function Xv() {
  if (hf) return it;
  hf = 1;
  var e = Symbol.for("react.transitional.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), o = Symbol.for("react.profiler"), s = Symbol.for("react.consumer"), a = Symbol.for("react.context"), l = Symbol.for("react.forward_ref"), c = Symbol.for("react.suspense"), u = Symbol.for("react.suspense_list"), d = Symbol.for("react.memo"), f = Symbol.for("react.lazy"), h = Symbol.for("react.view_transition"), g = Symbol.for("react.client.reference");
  function y(m) {
    if (typeof m == "object" && m !== null) {
      var b = m.$$typeof;
      switch (b) {
        case e:
          switch (m = m.type, m) {
            case n:
            case o:
            case r:
            case c:
            case u:
            case h:
              return m;
            default:
              switch (m = m && m.$$typeof, m) {
                case a:
                case l:
                case f:
                case d:
                  return m;
                case s:
                  return m;
                default:
                  return b;
              }
          }
        case t:
          return b;
      }
    }
  }
  return it.ContextConsumer = s, it.ContextProvider = a, it.Element = e, it.ForwardRef = l, it.Fragment = n, it.Lazy = f, it.Memo = d, it.Portal = t, it.Profiler = o, it.StrictMode = r, it.Suspense = c, it.SuspenseList = u, it.isContextConsumer = function(m) {
    return y(m) === s;
  }, it.isContextProvider = function(m) {
    return y(m) === a;
  }, it.isElement = function(m) {
    return typeof m == "object" && m !== null && m.$$typeof === e;
  }, it.isForwardRef = function(m) {
    return y(m) === l;
  }, it.isFragment = function(m) {
    return y(m) === n;
  }, it.isLazy = function(m) {
    return y(m) === f;
  }, it.isMemo = function(m) {
    return y(m) === d;
  }, it.isPortal = function(m) {
    return y(m) === t;
  }, it.isProfiler = function(m) {
    return y(m) === o;
  }, it.isStrictMode = function(m) {
    return y(m) === r;
  }, it.isSuspense = function(m) {
    return y(m) === c;
  }, it.isSuspenseList = function(m) {
    return y(m) === u;
  }, it.isValidElementType = function(m) {
    return typeof m == "string" || typeof m == "function" || m === n || m === o || m === r || m === c || m === u || typeof m == "object" && m !== null && (m.$$typeof === f || m.$$typeof === d || m.$$typeof === a || m.$$typeof === s || m.$$typeof === l || m.$$typeof === g || m.getModuleId !== void 0);
  }, it.typeOf = y, it;
}
var st = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var gf;
function Qv() {
  return gf || (gf = 1, process.env.NODE_ENV !== "production" && function() {
    function e(m) {
      if (typeof m == "object" && m !== null) {
        var b = m.$$typeof;
        switch (b) {
          case t:
            switch (m = m.type, m) {
              case r:
              case s:
              case o:
              case u:
              case d:
              case g:
                return m;
              default:
                switch (m = m && m.$$typeof, m) {
                  case l:
                  case c:
                  case h:
                  case f:
                    return m;
                  case a:
                    return m;
                  default:
                    return b;
                }
            }
          case n:
            return b;
        }
      }
    }
    var t = Symbol.for("react.transitional.element"), n = Symbol.for("react.portal"), r = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), s = Symbol.for("react.profiler"), a = Symbol.for("react.consumer"), l = Symbol.for("react.context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), d = Symbol.for("react.suspense_list"), f = Symbol.for("react.memo"), h = Symbol.for("react.lazy"), g = Symbol.for("react.view_transition"), y = Symbol.for("react.client.reference");
    st.ContextConsumer = a, st.ContextProvider = l, st.Element = t, st.ForwardRef = c, st.Fragment = r, st.Lazy = h, st.Memo = f, st.Portal = n, st.Profiler = s, st.StrictMode = o, st.Suspense = u, st.SuspenseList = d, st.isContextConsumer = function(m) {
      return e(m) === a;
    }, st.isContextProvider = function(m) {
      return e(m) === l;
    }, st.isElement = function(m) {
      return typeof m == "object" && m !== null && m.$$typeof === t;
    }, st.isForwardRef = function(m) {
      return e(m) === c;
    }, st.isFragment = function(m) {
      return e(m) === r;
    }, st.isLazy = function(m) {
      return e(m) === h;
    }, st.isMemo = function(m) {
      return e(m) === f;
    }, st.isPortal = function(m) {
      return e(m) === n;
    }, st.isProfiler = function(m) {
      return e(m) === s;
    }, st.isStrictMode = function(m) {
      return e(m) === o;
    }, st.isSuspense = function(m) {
      return e(m) === u;
    }, st.isSuspenseList = function(m) {
      return e(m) === d;
    }, st.isValidElementType = function(m) {
      return typeof m == "string" || typeof m == "function" || m === r || m === s || m === o || m === u || m === d || typeof m == "object" && m !== null && (m.$$typeof === h || m.$$typeof === f || m.$$typeof === l || m.$$typeof === a || m.$$typeof === c || m.$$typeof === y || m.getModuleId !== void 0);
    }, st.typeOf = e;
  }()), st;
}
var yf;
function Jv() {
  return yf || (yf = 1, process.env.NODE_ENV === "production" ? Is.exports = /* @__PURE__ */ Xv() : Is.exports = /* @__PURE__ */ Qv()), Is.exports;
}
var Yn = /* @__PURE__ */ Jv();
function ir(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function hh(e) {
  if (/* @__PURE__ */ C.isValidElement(e) || Yn.isValidElementType(e) || !ir(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = hh(e[n]);
  }), t;
}
function Tn(e, t, n = {
  clone: !0
}) {
  const r = n.clone ? {
    ...e
  } : e;
  return ir(e) && ir(t) && Object.keys(t).forEach((o) => {
    /* @__PURE__ */ C.isValidElement(t[o]) || Yn.isValidElementType(t[o]) ? r[o] = t[o] : ir(t[o]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, o) && ir(e[o]) ? r[o] = Tn(e[o], t[o], n) : n.clone ? r[o] = ir(t[o]) ? hh(t[o]) : t[o] : r[o] = t[o];
  }), r;
}
function Di(e, t) {
  return t ? Tn(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const Hr = process.env.NODE_ENV !== "production" ? i.oneOfType([i.number, i.string, i.object, i.array]) : {};
function Zv(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((r) => r.startsWith("@container")).sort((r, o) => {
    var a, l;
    const s = /min-width:\s*([0-9.]+)/;
    return +(((a = r.match(s)) == null ? void 0 : a[1]) || 0) - +(((l = o.match(s)) == null ? void 0 : l[1]) || 0);
  });
  return n.length ? n.reduce((r, o) => {
    const s = t[o];
    return delete r[o], r[o] = s, r;
  }, {
    ...t
  }) : t;
}
function e0(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function t0(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : Or(18, `(${t})`));
    return null;
  }
  const [, r, o] = n, s = Number.isNaN(+r) ? r || 0 : +r;
  return e.containerQueries(o).up(s);
}
function n0(e) {
  const t = (s, a) => s.replace("@media", a ? `@container ${a}` : "@container");
  function n(s, a) {
    s.up = (...l) => t(e.breakpoints.up(...l), a), s.down = (...l) => t(e.breakpoints.down(...l), a), s.between = (...l) => t(e.breakpoints.between(...l), a), s.only = (...l) => t(e.breakpoints.only(...l), a), s.not = (...l) => {
      const c = t(e.breakpoints.not(...l), a);
      return c.includes("not all and") ? c.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : c;
    };
  }
  const r = {}, o = (s) => (n(r, s), r);
  return n(o), {
    ...e,
    containerQueries: o
  };
}
const Va = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, bf = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${Va[e]}px)`
}, r0 = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : Va[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function Rr(e, t, n) {
  const r = e.theme || {};
  if (Array.isArray(t)) {
    const s = r.breakpoints || bf;
    return t.reduce((a, l, c) => (a[s.up(s.keys[c])] = n(t[c]), a), {});
  }
  if (typeof t == "object") {
    const s = r.breakpoints || bf;
    return Object.keys(t).reduce((a, l) => {
      if (e0(s.keys, l)) {
        const c = t0(r.containerQueries ? r : r0, l);
        c && (a[c] = n(t[l], l));
      } else if (Object.keys(s.values || Va).includes(l)) {
        const c = s.up(l);
        a[c] = n(t[l], l);
      } else {
        const c = l;
        a[c] = t[c];
      }
      return a;
    }, {});
  }
  return n(t);
}
function o0(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((r, o) => {
    const s = e.up(o);
    return r[s] = {}, r;
  }, {})) || {};
}
function i0(e, t) {
  return e.reduce((n, r) => {
    const o = n[r];
    return (!o || Object.keys(o).length === 0) && delete n[r], n;
  }, t);
}
function za(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const r = `vars.${t}`.split(".").reduce((o, s) => o && o[s] ? o[s] : null, e);
    if (r != null)
      return r;
  }
  return t.split(".").reduce((r, o) => r && r[o] != null ? r[o] : null, e);
}
function da(e, t, n, r = n) {
  let o;
  return typeof e == "function" ? o = e(n) : Array.isArray(e) ? o = e[n] || r : o = za(e, n) || r, t && (o = t(o, r, e)), o;
}
function _t(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: r,
    transform: o
  } = e, s = (a) => {
    if (a[t] == null)
      return null;
    const l = a[t], c = a.theme, u = za(c, r) || {};
    return Rr(a, l, (f) => {
      let h = da(u, o, f);
      return f === h && typeof f == "string" && (h = da(u, o, `${t}${f === "default" ? "" : xe(f)}`, f)), n === !1 ? h : {
        [n]: h
      };
    });
  };
  return s.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: Hr
  } : {}, s.filterProps = [t], s;
}
function s0(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const a0 = {
  m: "margin",
  p: "padding"
}, l0 = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, vf = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, c0 = s0((e) => {
  if (e.length > 2)
    if (vf[e])
      e = vf[e];
    else
      return [e];
  const [t, n] = e.split(""), r = a0[t], o = l0[n] || "";
  return Array.isArray(o) ? o.map((s) => r + s) : [r + o];
}), Wa = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], Ua = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], u0 = [...Wa, ...Ua];
function us(e, t, n, r) {
  const o = za(e, t, !0) ?? n;
  return typeof o == "number" || typeof o == "string" ? (s) => typeof s == "string" ? s : (process.env.NODE_ENV !== "production" && typeof s != "number" && console.error(`MUI: Expected ${r} argument to be a number or a string, got ${s}.`), typeof o == "string" ? o.startsWith("var(") && s === 0 ? 0 : o.startsWith("var(") && s === 1 ? o : `calc(${s} * ${o})` : o * s) : Array.isArray(o) ? (s) => {
    if (typeof s == "string")
      return s;
    const a = Math.abs(s);
    process.env.NODE_ENV !== "production" && (Number.isInteger(a) ? a > o.length - 1 && console.error([`MUI: The value provided (${a}) overflows.`, `The supported values are: ${JSON.stringify(o)}.`, `${a} > ${o.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const l = o[a];
    return s >= 0 ? l : typeof l == "number" ? -l : typeof l == "string" && l.startsWith("var(") ? `calc(-1 * ${l})` : `-${l}`;
  } : typeof o == "function" ? o : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${o}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function Iu(e) {
  return us(e, "spacing", 8, "spacing");
}
function ds(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function d0(e, t) {
  return (n) => e.reduce((r, o) => (r[o] = ds(t, n), r), {});
}
function f0(e, t, n, r) {
  if (!t.includes(n))
    return null;
  const o = c0(n), s = d0(o, r), a = e[n];
  return Rr(e, a, s);
}
function gh(e, t) {
  const n = Iu(e.theme);
  return Object.keys(e).map((r) => f0(e, t, r, n)).reduce(Di, {});
}
function Ot(e) {
  return gh(e, Wa);
}
Ot.propTypes = process.env.NODE_ENV !== "production" ? Wa.reduce((e, t) => (e[t] = Hr, e), {}) : {};
Ot.filterProps = Wa;
function Rt(e) {
  return gh(e, Ua);
}
Rt.propTypes = process.env.NODE_ENV !== "production" ? Ua.reduce((e, t) => (e[t] = Hr, e), {}) : {};
Rt.filterProps = Ua;
process.env.NODE_ENV !== "production" && u0.reduce((e, t) => (e[t] = Hr, e), {});
function Ha(...e) {
  const t = e.reduce((r, o) => (o.filterProps.forEach((s) => {
    r[s] = o;
  }), r), {}), n = (r) => Object.keys(r).reduce((o, s) => t[s] ? Di(o, t[s](r)) : o, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((r, o) => Object.assign(r, o.propTypes), {}) : {}, n.filterProps = e.reduce((r, o) => r.concat(o.filterProps), []), n;
}
function In(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function jn(e, t) {
  return _t({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const p0 = jn("border", In), m0 = jn("borderTop", In), h0 = jn("borderRight", In), g0 = jn("borderBottom", In), y0 = jn("borderLeft", In), b0 = jn("borderColor"), v0 = jn("borderTopColor"), x0 = jn("borderRightColor"), w0 = jn("borderBottomColor"), S0 = jn("borderLeftColor"), T0 = jn("outline", In), E0 = jn("outlineColor"), qa = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = us(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (r) => ({
      borderRadius: ds(t, r)
    });
    return Rr(e, e.borderRadius, n);
  }
  return null;
};
qa.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: Hr
} : {};
qa.filterProps = ["borderRadius"];
Ha(p0, m0, h0, g0, y0, b0, v0, x0, w0, S0, qa, T0, E0);
const Ya = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = us(e.theme, "spacing", 8, "gap"), n = (r) => ({
      gap: ds(t, r)
    });
    return Rr(e, e.gap, n);
  }
  return null;
};
Ya.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: Hr
} : {};
Ya.filterProps = ["gap"];
const Ga = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = us(e.theme, "spacing", 8, "columnGap"), n = (r) => ({
      columnGap: ds(t, r)
    });
    return Rr(e, e.columnGap, n);
  }
  return null;
};
Ga.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: Hr
} : {};
Ga.filterProps = ["columnGap"];
const Ka = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = us(e.theme, "spacing", 8, "rowGap"), n = (r) => ({
      rowGap: ds(t, r)
    });
    return Rr(e, e.rowGap, n);
  }
  return null;
};
Ka.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: Hr
} : {};
Ka.filterProps = ["rowGap"];
const C0 = _t({
  prop: "gridColumn"
}), O0 = _t({
  prop: "gridRow"
}), R0 = _t({
  prop: "gridAutoFlow"
}), k0 = _t({
  prop: "gridAutoColumns"
}), $0 = _t({
  prop: "gridAutoRows"
}), P0 = _t({
  prop: "gridTemplateColumns"
}), I0 = _t({
  prop: "gridTemplateRows"
}), N0 = _t({
  prop: "gridTemplateAreas"
}), A0 = _t({
  prop: "gridArea"
});
Ha(Ya, Ga, Ka, C0, O0, R0, k0, $0, P0, I0, N0, A0);
function Bo(e, t) {
  return t === "grey" ? t : e;
}
const M0 = _t({
  prop: "color",
  themeKey: "palette",
  transform: Bo
}), _0 = _t({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: Bo
}), D0 = _t({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: Bo
});
Ha(M0, _0, D0);
function xn(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const B0 = _t({
  prop: "width",
  transform: xn
}), Nu = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var o, s, a, l, c;
      const r = ((a = (s = (o = e.theme) == null ? void 0 : o.breakpoints) == null ? void 0 : s.values) == null ? void 0 : a[n]) || Va[n];
      return r ? ((c = (l = e.theme) == null ? void 0 : l.breakpoints) == null ? void 0 : c.unit) !== "px" ? {
        maxWidth: `${r}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: r
      } : {
        maxWidth: xn(n)
      };
    };
    return Rr(e, e.maxWidth, t);
  }
  return null;
};
Nu.filterProps = ["maxWidth"];
const F0 = _t({
  prop: "minWidth",
  transform: xn
}), j0 = _t({
  prop: "height",
  transform: xn
}), L0 = _t({
  prop: "maxHeight",
  transform: xn
}), V0 = _t({
  prop: "minHeight",
  transform: xn
});
_t({
  prop: "size",
  cssProperty: "width",
  transform: xn
});
_t({
  prop: "size",
  cssProperty: "height",
  transform: xn
});
const z0 = _t({
  prop: "boxSizing"
});
Ha(B0, Nu, F0, j0, L0, V0, z0);
const fs = {
  // borders
  border: {
    themeKey: "borders",
    transform: In
  },
  borderTop: {
    themeKey: "borders",
    transform: In
  },
  borderRight: {
    themeKey: "borders",
    transform: In
  },
  borderBottom: {
    themeKey: "borders",
    transform: In
  },
  borderLeft: {
    themeKey: "borders",
    transform: In
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: In
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: qa
  },
  // palette
  color: {
    themeKey: "palette",
    transform: Bo
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: Bo
  },
  backgroundColor: {
    themeKey: "palette",
    transform: Bo
  },
  // spacing
  p: {
    style: Rt
  },
  pt: {
    style: Rt
  },
  pr: {
    style: Rt
  },
  pb: {
    style: Rt
  },
  pl: {
    style: Rt
  },
  px: {
    style: Rt
  },
  py: {
    style: Rt
  },
  padding: {
    style: Rt
  },
  paddingTop: {
    style: Rt
  },
  paddingRight: {
    style: Rt
  },
  paddingBottom: {
    style: Rt
  },
  paddingLeft: {
    style: Rt
  },
  paddingX: {
    style: Rt
  },
  paddingY: {
    style: Rt
  },
  paddingInline: {
    style: Rt
  },
  paddingInlineStart: {
    style: Rt
  },
  paddingInlineEnd: {
    style: Rt
  },
  paddingBlock: {
    style: Rt
  },
  paddingBlockStart: {
    style: Rt
  },
  paddingBlockEnd: {
    style: Rt
  },
  m: {
    style: Ot
  },
  mt: {
    style: Ot
  },
  mr: {
    style: Ot
  },
  mb: {
    style: Ot
  },
  ml: {
    style: Ot
  },
  mx: {
    style: Ot
  },
  my: {
    style: Ot
  },
  margin: {
    style: Ot
  },
  marginTop: {
    style: Ot
  },
  marginRight: {
    style: Ot
  },
  marginBottom: {
    style: Ot
  },
  marginLeft: {
    style: Ot
  },
  marginX: {
    style: Ot
  },
  marginY: {
    style: Ot
  },
  marginInline: {
    style: Ot
  },
  marginInlineStart: {
    style: Ot
  },
  marginInlineEnd: {
    style: Ot
  },
  marginBlock: {
    style: Ot
  },
  marginBlockStart: {
    style: Ot
  },
  marginBlockEnd: {
    style: Ot
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: Ya
  },
  rowGap: {
    style: Ka
  },
  columnGap: {
    style: Ga
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: xn
  },
  maxWidth: {
    style: Nu
  },
  minWidth: {
    transform: xn
  },
  height: {
    transform: xn
  },
  maxHeight: {
    transform: xn
  },
  minHeight: {
    transform: xn
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function W0(...e) {
  const t = e.reduce((r, o) => r.concat(Object.keys(o)), []), n = new Set(t);
  return e.every((r) => n.size === Object.keys(r).length);
}
function U0(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function H0() {
  function e(n, r, o, s) {
    const a = {
      [n]: r,
      theme: o
    }, l = s[n];
    if (!l)
      return {
        [n]: r
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: d,
      style: f
    } = l;
    if (r == null)
      return null;
    if (u === "typography" && r === "inherit")
      return {
        [n]: r
      };
    const h = za(o, u) || {};
    return f ? f(a) : Rr(a, r, (y) => {
      let m = da(h, d, y);
      return y === m && typeof y == "string" && (m = da(h, d, `${n}${y === "default" ? "" : xe(y)}`, y)), c === !1 ? m : {
        [c]: m
      };
    });
  }
  function t(n) {
    const {
      sx: r,
      theme: o = {}
    } = n || {};
    if (!r)
      return null;
    const s = o.unstable_sxConfig ?? fs;
    function a(l) {
      let c = l;
      if (typeof l == "function")
        c = l(o);
      else if (typeof l != "object")
        return l;
      if (!c)
        return null;
      const u = o0(o.breakpoints), d = Object.keys(u);
      let f = u;
      return Object.keys(c).forEach((h) => {
        const g = U0(c[h], o);
        if (g != null)
          if (typeof g == "object")
            if (s[h])
              f = Di(f, e(h, g, o, s));
            else {
              const y = Rr({
                theme: o
              }, g, (m) => ({
                [h]: m
              }));
              W0(y, g) ? f[h] = t({
                sx: g,
                theme: o
              }) : f = Di(f, y);
            }
          else
            f = Di(f, e(h, g, o, s));
      }), Zv(o, i0(d, f));
    }
    return Array.isArray(r) ? r.map(a) : a(r);
  }
  return t;
}
const Vr = H0();
Vr.filterProps = ["sx"];
const q0 = (e) => {
  var r;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((r = e == null ? void 0 : e.theme) == null ? void 0 : r.unstable_sxConfig) ?? fs;
  return Object.keys(e).forEach((o) => {
    n[o] ? t.systemProps[o] = e[o] : t.otherProps[o] = e[o];
  }), t;
};
function yh(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: r,
    otherProps: o
  } = q0(n);
  let s;
  return Array.isArray(t) ? s = [r, ...t] : typeof t == "function" ? s = (...a) => {
    const l = t(...a);
    return ir(l) ? {
      ...r,
      ...l
    } : r;
  } : s = {
    ...r,
    ...t
  }, {
    ...o,
    sx: s
  };
}
function fa() {
  return fa = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var r in n) ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
    }
    return e;
  }, fa.apply(null, arguments);
}
function Y0(e) {
  if (e.sheet)
    return e.sheet;
  for (var t = 0; t < document.styleSheets.length; t++)
    if (document.styleSheets[t].ownerNode === e)
      return document.styleSheets[t];
}
function G0(e) {
  var t = document.createElement("style");
  return t.setAttribute("data-emotion", e.key), e.nonce !== void 0 && t.setAttribute("nonce", e.nonce), t.appendChild(document.createTextNode("")), t.setAttribute("data-s", ""), t;
}
var K0 = /* @__PURE__ */ function() {
  function e(n) {
    var r = this;
    this._insertTag = function(o) {
      var s;
      r.tags.length === 0 ? r.insertionPoint ? s = r.insertionPoint.nextSibling : r.prepend ? s = r.container.firstChild : s = r.before : s = r.tags[r.tags.length - 1].nextSibling, r.container.insertBefore(o, s), r.tags.push(o);
    }, this.isSpeedy = n.speedy === void 0 ? !0 : n.speedy, this.tags = [], this.ctr = 0, this.nonce = n.nonce, this.key = n.key, this.container = n.container, this.prepend = n.prepend, this.insertionPoint = n.insertionPoint, this.before = null;
  }
  var t = e.prototype;
  return t.hydrate = function(r) {
    r.forEach(this._insertTag);
  }, t.insert = function(r) {
    this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(G0(this));
    var o = this.tags[this.tags.length - 1];
    if (this.isSpeedy) {
      var s = Y0(o);
      try {
        s.insertRule(r, s.cssRules.length);
      } catch {
      }
    } else
      o.appendChild(document.createTextNode(r));
    this.ctr++;
  }, t.flush = function() {
    this.tags.forEach(function(r) {
      var o;
      return (o = r.parentNode) == null ? void 0 : o.removeChild(r);
    }), this.tags = [], this.ctr = 0;
  }, e;
}(), Qt = "-ms-", pa = "-moz-", Xe = "-webkit-", bh = "comm", Au = "rule", Mu = "decl", X0 = "@import", vh = "@keyframes", Q0 = "@layer", J0 = Math.abs, Xa = String.fromCharCode, Z0 = Object.assign;
function ex(e, t) {
  return qt(e, 0) ^ 45 ? (((t << 2 ^ qt(e, 0)) << 2 ^ qt(e, 1)) << 2 ^ qt(e, 2)) << 2 ^ qt(e, 3) : 0;
}
function xh(e) {
  return e.trim();
}
function tx(e, t) {
  return (e = t.exec(e)) ? e[0] : e;
}
function Qe(e, t, n) {
  return e.replace(t, n);
}
function Mc(e, t) {
  return e.indexOf(t);
}
function qt(e, t) {
  return e.charCodeAt(t) | 0;
}
function Yi(e, t, n) {
  return e.slice(t, n);
}
function nr(e) {
  return e.length;
}
function _u(e) {
  return e.length;
}
function Ns(e, t) {
  return t.push(e), e;
}
function nx(e, t) {
  return e.map(t).join("");
}
var Qa = 1, Wo = 1, wh = 0, yn = 0, jt = 0, ni = "";
function Ja(e, t, n, r, o, s, a) {
  return { value: e, root: t, parent: n, type: r, props: o, children: s, line: Qa, column: Wo, length: a, return: "" };
}
function hi(e, t) {
  return Z0(Ja("", null, null, "", null, null, 0), e, { length: -e.length }, t);
}
function rx() {
  return jt;
}
function ox() {
  return jt = yn > 0 ? qt(ni, --yn) : 0, Wo--, jt === 10 && (Wo = 1, Qa--), jt;
}
function En() {
  return jt = yn < wh ? qt(ni, yn++) : 0, Wo++, jt === 10 && (Wo = 1, Qa++), jt;
}
function cr() {
  return qt(ni, yn);
}
function Zs() {
  return yn;
}
function ps(e, t) {
  return Yi(ni, e, t);
}
function Gi(e) {
  switch (e) {
    // \0 \t \n \r \s whitespace token
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    // ! + , / > @ ~ isolate token
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    // ; { } breakpoint token
    case 59:
    case 123:
    case 125:
      return 4;
    // : accompanied token
    case 58:
      return 3;
    // " ' ( [ opening delimit token
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    // ) ] closing delimit token
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function Sh(e) {
  return Qa = Wo = 1, wh = nr(ni = e), yn = 0, [];
}
function Th(e) {
  return ni = "", e;
}
function ea(e) {
  return xh(ps(yn - 1, _c(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function ix(e) {
  for (; (jt = cr()) && jt < 33; )
    En();
  return Gi(e) > 2 || Gi(jt) > 3 ? "" : " ";
}
function sx(e, t) {
  for (; --t && En() && !(jt < 48 || jt > 102 || jt > 57 && jt < 65 || jt > 70 && jt < 97); )
    ;
  return ps(e, Zs() + (t < 6 && cr() == 32 && En() == 32));
}
function _c(e) {
  for (; En(); )
    switch (jt) {
      // ] ) " '
      case e:
        return yn;
      // " '
      case 34:
      case 39:
        e !== 34 && e !== 39 && _c(jt);
        break;
      // (
      case 40:
        e === 41 && _c(e);
        break;
      // \
      case 92:
        En();
        break;
    }
  return yn;
}
function ax(e, t) {
  for (; En() && e + jt !== 57; )
    if (e + jt === 84 && cr() === 47)
      break;
  return "/*" + ps(t, yn - 1) + "*" + Xa(e === 47 ? e : En());
}
function lx(e) {
  for (; !Gi(cr()); )
    En();
  return ps(e, yn);
}
function cx(e) {
  return Th(ta("", null, null, null, [""], e = Sh(e), 0, [0], e));
}
function ta(e, t, n, r, o, s, a, l, c) {
  for (var u = 0, d = 0, f = a, h = 0, g = 0, y = 0, m = 1, b = 1, x = 1, E = 0, w = "", S = o, v = s, T = r, R = w; b; )
    switch (y = E, E = En()) {
      // (
      case 40:
        if (y != 108 && qt(R, f - 1) == 58) {
          Mc(R += Qe(ea(E), "&", "&\f"), "&\f") != -1 && (x = -1);
          break;
        }
      // " ' [
      case 34:
      case 39:
      case 91:
        R += ea(E);
        break;
      // \t \n \r \s
      case 9:
      case 10:
      case 13:
      case 32:
        R += ix(y);
        break;
      // \
      case 92:
        R += sx(Zs() - 1, 7);
        continue;
      // /
      case 47:
        switch (cr()) {
          case 42:
          case 47:
            Ns(ux(ax(En(), Zs()), t, n), c);
            break;
          default:
            R += "/";
        }
        break;
      // {
      case 123 * m:
        l[u++] = nr(R) * x;
      // } ; \0
      case 125 * m:
      case 59:
      case 0:
        switch (E) {
          // \0 }
          case 0:
          case 125:
            b = 0;
          // ;
          case 59 + d:
            x == -1 && (R = Qe(R, /\f/g, "")), g > 0 && nr(R) - f && Ns(g > 32 ? wf(R + ";", r, n, f - 1) : wf(Qe(R, " ", "") + ";", r, n, f - 2), c);
            break;
          // @ ;
          case 59:
            R += ";";
          // { rule/at-rule
          default:
            if (Ns(T = xf(R, t, n, u, d, o, l, w, S = [], v = [], f), s), E === 123)
              if (d === 0)
                ta(R, t, T, T, S, s, f, l, v);
              else
                switch (h === 99 && qt(R, 3) === 110 ? 100 : h) {
                  // d l m s
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    ta(e, T, T, r && Ns(xf(e, T, T, 0, 0, o, l, w, o, S = [], f), v), o, v, f, l, r ? S : v);
                    break;
                  default:
                    ta(R, T, T, T, [""], v, 0, l, v);
                }
        }
        u = d = g = 0, m = x = 1, w = R = "", f = a;
        break;
      // :
      case 58:
        f = 1 + nr(R), g = y;
      default:
        if (m < 1) {
          if (E == 123)
            --m;
          else if (E == 125 && m++ == 0 && ox() == 125)
            continue;
        }
        switch (R += Xa(E), E * m) {
          // &
          case 38:
            x = d > 0 ? 1 : (R += "\f", -1);
            break;
          // ,
          case 44:
            l[u++] = (nr(R) - 1) * x, x = 1;
            break;
          // @
          case 64:
            cr() === 45 && (R += ea(En())), h = cr(), d = f = nr(w = R += lx(Zs())), E++;
            break;
          // -
          case 45:
            y === 45 && nr(R) == 2 && (m = 0);
        }
    }
  return s;
}
function xf(e, t, n, r, o, s, a, l, c, u, d) {
  for (var f = o - 1, h = o === 0 ? s : [""], g = _u(h), y = 0, m = 0, b = 0; y < r; ++y)
    for (var x = 0, E = Yi(e, f + 1, f = J0(m = a[y])), w = e; x < g; ++x)
      (w = xh(m > 0 ? h[x] + " " + E : Qe(E, /&\f/g, h[x]))) && (c[b++] = w);
  return Ja(e, t, n, o === 0 ? Au : l, c, u, d);
}
function ux(e, t, n) {
  return Ja(e, t, n, bh, Xa(rx()), Yi(e, 2, -2), 0);
}
function wf(e, t, n, r) {
  return Ja(e, t, n, Mu, Yi(e, 0, r), Yi(e, r + 1, -1), r);
}
function Fo(e, t) {
  for (var n = "", r = _u(e), o = 0; o < r; o++)
    n += t(e[o], o, e, t) || "";
  return n;
}
function dx(e, t, n, r) {
  switch (e.type) {
    case Q0:
      if (e.children.length) break;
    case X0:
    case Mu:
      return e.return = e.return || e.value;
    case bh:
      return "";
    case vh:
      return e.return = e.value + "{" + Fo(e.children, r) + "}";
    case Au:
      e.value = e.props.join(",");
  }
  return nr(n = Fo(e.children, r)) ? e.return = e.value + "{" + n + "}" : "";
}
function fx(e) {
  var t = _u(e);
  return function(n, r, o, s) {
    for (var a = "", l = 0; l < t; l++)
      a += e[l](n, r, o, s) || "";
    return a;
  };
}
function px(e) {
  return function(t) {
    t.root || (t = t.return) && e(t);
  };
}
function Eh(e) {
  var t = /* @__PURE__ */ Object.create(null);
  return function(n) {
    return t[n] === void 0 && (t[n] = e(n)), t[n];
  };
}
var mx = function(t, n, r) {
  for (var o = 0, s = 0; o = s, s = cr(), o === 38 && s === 12 && (n[r] = 1), !Gi(s); )
    En();
  return ps(t, yn);
}, hx = function(t, n) {
  var r = -1, o = 44;
  do
    switch (Gi(o)) {
      case 0:
        o === 38 && cr() === 12 && (n[r] = 1), t[r] += mx(yn - 1, n, r);
        break;
      case 2:
        t[r] += ea(o);
        break;
      case 4:
        if (o === 44) {
          t[++r] = cr() === 58 ? "&\f" : "", n[r] = t[r].length;
          break;
        }
      // fallthrough
      default:
        t[r] += Xa(o);
    }
  while (o = En());
  return t;
}, gx = function(t, n) {
  return Th(hx(Sh(t), n));
}, Sf = /* @__PURE__ */ new WeakMap(), yx = function(t) {
  if (!(t.type !== "rule" || !t.parent || // positive .length indicates that this rule contains pseudo
  // negative .length indicates that this rule has been already prefixed
  t.length < 1)) {
    for (var n = t.value, r = t.parent, o = t.column === r.column && t.line === r.line; r.type !== "rule"; )
      if (r = r.parent, !r) return;
    if (!(t.props.length === 1 && n.charCodeAt(0) !== 58 && !Sf.get(r)) && !o) {
      Sf.set(t, !0);
      for (var s = [], a = gx(n, s), l = r.props, c = 0, u = 0; c < a.length; c++)
        for (var d = 0; d < l.length; d++, u++)
          t.props[u] = s[c] ? a[c].replace(/&\f/g, l[d]) : l[d] + " " + a[c];
    }
  }
}, bx = function(t) {
  if (t.type === "decl") {
    var n = t.value;
    // charcode for l
    n.charCodeAt(0) === 108 && // charcode for b
    n.charCodeAt(2) === 98 && (t.return = "", t.value = "");
  }
};
function Ch(e, t) {
  switch (ex(e, t)) {
    // color-adjust
    case 5103:
      return Xe + "print-" + e + e;
    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return Xe + e + e;
    // appearance, user-select, transform, hyphens, text-size-adjust
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return Xe + e + pa + e + Qt + e + e;
    // flex, flex-direction
    case 6828:
    case 4268:
      return Xe + e + Qt + e + e;
    // order
    case 6165:
      return Xe + e + Qt + "flex-" + e + e;
    // align-items
    case 5187:
      return Xe + e + Qe(e, /(\w+).+(:[^]+)/, Xe + "box-$1$2" + Qt + "flex-$1$2") + e;
    // align-self
    case 5443:
      return Xe + e + Qt + "flex-item-" + Qe(e, /flex-|-self/, "") + e;
    // align-content
    case 4675:
      return Xe + e + Qt + "flex-line-pack" + Qe(e, /align-content|flex-|-self/, "") + e;
    // flex-shrink
    case 5548:
      return Xe + e + Qt + Qe(e, "shrink", "negative") + e;
    // flex-basis
    case 5292:
      return Xe + e + Qt + Qe(e, "basis", "preferred-size") + e;
    // flex-grow
    case 6060:
      return Xe + "box-" + Qe(e, "-grow", "") + Xe + e + Qt + Qe(e, "grow", "positive") + e;
    // transition
    case 4554:
      return Xe + Qe(e, /([^-])(transform)/g, "$1" + Xe + "$2") + e;
    // cursor
    case 6187:
      return Qe(Qe(Qe(e, /(zoom-|grab)/, Xe + "$1"), /(image-set)/, Xe + "$1"), e, "") + e;
    // background, background-image
    case 5495:
    case 3959:
      return Qe(e, /(image-set\([^]*)/, Xe + "$1$`$1");
    // justify-content
    case 4968:
      return Qe(Qe(e, /(.+:)(flex-)?(.*)/, Xe + "box-pack:$3" + Qt + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + Xe + e + e;
    // (margin|padding)-inline-(start|end)
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return Qe(e, /(.+)-inline(.+)/, Xe + "$1$2") + e;
    // (min|max)?(width|height|inline-size|block-size)
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (nr(e) - 1 - t > 6) switch (qt(e, t + 1)) {
        // (m)ax-content, (m)in-content
        case 109:
          if (qt(e, t + 4) !== 45) break;
        // (f)ill-available, (f)it-content
        case 102:
          return Qe(e, /(.+:)(.+)-([^]+)/, "$1" + Xe + "$2-$3$1" + pa + (qt(e, t + 3) == 108 ? "$3" : "$2-$3")) + e;
        // (s)tretch
        case 115:
          return ~Mc(e, "stretch") ? Ch(Qe(e, "stretch", "fill-available"), t) + e : e;
      }
      break;
    // position: sticky
    case 4949:
      if (qt(e, t + 1) !== 115) break;
    // display: (flex|inline-flex)
    case 6444:
      switch (qt(e, nr(e) - 3 - (~Mc(e, "!important") && 10))) {
        // stic(k)y
        case 107:
          return Qe(e, ":", ":" + Xe) + e;
        // (inline-)?fl(e)x
        case 101:
          return Qe(e, /(.+:)([^;!]+)(;|!.+)?/, "$1" + Xe + (qt(e, 14) === 45 ? "inline-" : "") + "box$3$1" + Xe + "$2$3$1" + Qt + "$2box$3") + e;
      }
      break;
    // writing-mode
    case 5936:
      switch (qt(e, t + 11)) {
        // vertical-l(r)
        case 114:
          return Xe + e + Qt + Qe(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
        // vertical-r(l)
        case 108:
          return Xe + e + Qt + Qe(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
        // horizontal(-)tb
        case 45:
          return Xe + e + Qt + Qe(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
      }
      return Xe + e + Qt + e + e;
  }
  return e;
}
var vx = function(t, n, r, o) {
  if (t.length > -1 && !t.return) switch (t.type) {
    case Mu:
      t.return = Ch(t.value, t.length);
      break;
    case vh:
      return Fo([hi(t, {
        value: Qe(t.value, "@", "@" + Xe)
      })], o);
    case Au:
      if (t.length) return nx(t.props, function(s) {
        switch (tx(s, /(::plac\w+|:read-\w+)/)) {
          // :read-(only|write)
          case ":read-only":
          case ":read-write":
            return Fo([hi(t, {
              props: [Qe(s, /:(read-\w+)/, ":" + pa + "$1")]
            })], o);
          // :placeholder
          case "::placeholder":
            return Fo([hi(t, {
              props: [Qe(s, /:(plac\w+)/, ":" + Xe + "input-$1")]
            }), hi(t, {
              props: [Qe(s, /:(plac\w+)/, ":" + pa + "$1")]
            }), hi(t, {
              props: [Qe(s, /:(plac\w+)/, Qt + "input-$1")]
            })], o);
        }
        return "";
      });
  }
}, xx = [vx], wx = function(t) {
  var n = t.key;
  if (n === "css") {
    var r = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(r, function(m) {
      var b = m.getAttribute("data-emotion");
      b.indexOf(" ") !== -1 && (document.head.appendChild(m), m.setAttribute("data-s", ""));
    });
  }
  var o = t.stylisPlugins || xx, s = {}, a, l = [];
  a = t.container || document.head, Array.prototype.forEach.call(
    // this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll('style[data-emotion^="' + n + ' "]'),
    function(m) {
      for (var b = m.getAttribute("data-emotion").split(" "), x = 1; x < b.length; x++)
        s[b[x]] = !0;
      l.push(m);
    }
  );
  var c, u = [yx, bx];
  {
    var d, f = [dx, px(function(m) {
      d.insert(m);
    })], h = fx(u.concat(o, f)), g = function(b) {
      return Fo(cx(b), h);
    };
    c = function(b, x, E, w) {
      d = E, g(b ? b + "{" + x.styles + "}" : x.styles), w && (y.inserted[x.name] = !0);
    };
  }
  var y = {
    key: n,
    sheet: new K0({
      key: n,
      container: a,
      nonce: t.nonce,
      speedy: t.speedy,
      prepend: t.prepend,
      insertionPoint: t.insertionPoint
    }),
    nonce: t.nonce,
    inserted: s,
    registered: {},
    insert: c
  };
  return y.sheet.hydrate(l), y;
}, As = { exports: {} }, tt = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Tf;
function Sx() {
  if (Tf) return tt;
  Tf = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, h = e ? Symbol.for("react.suspense_list") : 60120, g = e ? Symbol.for("react.memo") : 60115, y = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, b = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
  function w(v) {
    if (typeof v == "object" && v !== null) {
      var T = v.$$typeof;
      switch (T) {
        case t:
          switch (v = v.type, v) {
            case c:
            case u:
            case r:
            case s:
            case o:
            case f:
              return v;
            default:
              switch (v = v && v.$$typeof, v) {
                case l:
                case d:
                case y:
                case g:
                case a:
                  return v;
                default:
                  return T;
              }
          }
        case n:
          return T;
      }
    }
  }
  function S(v) {
    return w(v) === u;
  }
  return tt.AsyncMode = c, tt.ConcurrentMode = u, tt.ContextConsumer = l, tt.ContextProvider = a, tt.Element = t, tt.ForwardRef = d, tt.Fragment = r, tt.Lazy = y, tt.Memo = g, tt.Portal = n, tt.Profiler = s, tt.StrictMode = o, tt.Suspense = f, tt.isAsyncMode = function(v) {
    return S(v) || w(v) === c;
  }, tt.isConcurrentMode = S, tt.isContextConsumer = function(v) {
    return w(v) === l;
  }, tt.isContextProvider = function(v) {
    return w(v) === a;
  }, tt.isElement = function(v) {
    return typeof v == "object" && v !== null && v.$$typeof === t;
  }, tt.isForwardRef = function(v) {
    return w(v) === d;
  }, tt.isFragment = function(v) {
    return w(v) === r;
  }, tt.isLazy = function(v) {
    return w(v) === y;
  }, tt.isMemo = function(v) {
    return w(v) === g;
  }, tt.isPortal = function(v) {
    return w(v) === n;
  }, tt.isProfiler = function(v) {
    return w(v) === s;
  }, tt.isStrictMode = function(v) {
    return w(v) === o;
  }, tt.isSuspense = function(v) {
    return w(v) === f;
  }, tt.isValidElementType = function(v) {
    return typeof v == "string" || typeof v == "function" || v === r || v === u || v === s || v === o || v === f || v === h || typeof v == "object" && v !== null && (v.$$typeof === y || v.$$typeof === g || v.$$typeof === a || v.$$typeof === l || v.$$typeof === d || v.$$typeof === b || v.$$typeof === x || v.$$typeof === E || v.$$typeof === m);
  }, tt.typeOf = w, tt;
}
var nt = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Ef;
function Tx() {
  return Ef || (Ef = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, h = e ? Symbol.for("react.suspense_list") : 60120, g = e ? Symbol.for("react.memo") : 60115, y = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, b = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
    function w(F) {
      return typeof F == "string" || typeof F == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      F === r || F === u || F === s || F === o || F === f || F === h || typeof F == "object" && F !== null && (F.$$typeof === y || F.$$typeof === g || F.$$typeof === a || F.$$typeof === l || F.$$typeof === d || F.$$typeof === b || F.$$typeof === x || F.$$typeof === E || F.$$typeof === m);
    }
    function S(F) {
      if (typeof F == "object" && F !== null) {
        var he = F.$$typeof;
        switch (he) {
          case t:
            var fe = F.type;
            switch (fe) {
              case c:
              case u:
              case r:
              case s:
              case o:
              case f:
                return fe;
              default:
                var Te = fe && fe.$$typeof;
                switch (Te) {
                  case l:
                  case d:
                  case y:
                  case g:
                  case a:
                    return Te;
                  default:
                    return he;
                }
            }
          case n:
            return he;
        }
      }
    }
    var v = c, T = u, R = l, k = a, I = t, p = d, O = r, $ = y, A = g, D = n, _ = s, M = o, V = f, Y = !1;
    function U(F) {
      return Y || (Y = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), j(F) || S(F) === c;
    }
    function j(F) {
      return S(F) === u;
    }
    function W(F) {
      return S(F) === l;
    }
    function ee(F) {
      return S(F) === a;
    }
    function K(F) {
      return typeof F == "object" && F !== null && F.$$typeof === t;
    }
    function oe(F) {
      return S(F) === d;
    }
    function ne(F) {
      return S(F) === r;
    }
    function se(F) {
      return S(F) === y;
    }
    function de(F) {
      return S(F) === g;
    }
    function X(F) {
      return S(F) === n;
    }
    function ae(F) {
      return S(F) === s;
    }
    function Q(F) {
      return S(F) === o;
    }
    function ie(F) {
      return S(F) === f;
    }
    nt.AsyncMode = v, nt.ConcurrentMode = T, nt.ContextConsumer = R, nt.ContextProvider = k, nt.Element = I, nt.ForwardRef = p, nt.Fragment = O, nt.Lazy = $, nt.Memo = A, nt.Portal = D, nt.Profiler = _, nt.StrictMode = M, nt.Suspense = V, nt.isAsyncMode = U, nt.isConcurrentMode = j, nt.isContextConsumer = W, nt.isContextProvider = ee, nt.isElement = K, nt.isForwardRef = oe, nt.isFragment = ne, nt.isLazy = se, nt.isMemo = de, nt.isPortal = X, nt.isProfiler = ae, nt.isStrictMode = Q, nt.isSuspense = ie, nt.isValidElementType = w, nt.typeOf = S;
  }()), nt;
}
var Cf;
function Ex() {
  return Cf || (Cf = 1, process.env.NODE_ENV === "production" ? As.exports = Sx() : As.exports = Tx()), As.exports;
}
var Kl, Of;
function Cx() {
  if (Of) return Kl;
  Of = 1;
  var e = Ex(), t = {
    childContextTypes: !0,
    contextType: !0,
    contextTypes: !0,
    defaultProps: !0,
    displayName: !0,
    getDefaultProps: !0,
    getDerivedStateFromError: !0,
    getDerivedStateFromProps: !0,
    mixins: !0,
    propTypes: !0,
    type: !0
  }, n = {
    name: !0,
    length: !0,
    prototype: !0,
    caller: !0,
    callee: !0,
    arguments: !0,
    arity: !0
  }, r = {
    $$typeof: !0,
    render: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0
  }, o = {
    $$typeof: !0,
    compare: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0,
    type: !0
  }, s = {};
  s[e.ForwardRef] = r, s[e.Memo] = o;
  function a(y) {
    return e.isMemo(y) ? o : s[y.$$typeof] || t;
  }
  var l = Object.defineProperty, c = Object.getOwnPropertyNames, u = Object.getOwnPropertySymbols, d = Object.getOwnPropertyDescriptor, f = Object.getPrototypeOf, h = Object.prototype;
  function g(y, m, b) {
    if (typeof m != "string") {
      if (h) {
        var x = f(m);
        x && x !== h && g(y, x, b);
      }
      var E = c(m);
      u && (E = E.concat(u(m)));
      for (var w = a(y), S = a(m), v = 0; v < E.length; ++v) {
        var T = E[v];
        if (!n[T] && !(b && b[T]) && !(S && S[T]) && !(w && w[T])) {
          var R = d(m, T);
          try {
            l(y, T, R);
          } catch {
          }
        }
      }
    }
    return y;
  }
  return Kl = g, Kl;
}
Cx();
var Ox = !0;
function Oh(e, t, n) {
  var r = "";
  return n.split(" ").forEach(function(o) {
    e[o] !== void 0 ? t.push(e[o] + ";") : o && (r += o + " ");
  }), r;
}
var Du = function(t, n, r) {
  var o = t.key + "-" + n.name;
  // we only need to add the styles to the registered cache if the
  // class name could be used further down
  // the tree but if it's a string tag, we know it won't
  // so we don't have to add it to registered cache.
  // this improves memory usage since we can avoid storing the whole style string
  (r === !1 || // we need to always store it if we're in compat mode and
  // in node since emotion-server relies on whether a style is in
  // the registered cache to know whether a style is global or not
  // also, note that this check will be dead code eliminated in the browser
  Ox === !1) && t.registered[o] === void 0 && (t.registered[o] = n.styles);
}, Bu = function(t, n, r) {
  Du(t, n, r);
  var o = t.key + "-" + n.name;
  if (t.inserted[n.name] === void 0) {
    var s = n;
    do
      t.insert(n === s ? "." + o : "", s, t.sheet, !0), s = s.next;
    while (s !== void 0);
  }
};
function Rx(e) {
  for (var t = 0, n, r = 0, o = e.length; o >= 4; ++r, o -= 4)
    n = e.charCodeAt(r) & 255 | (e.charCodeAt(++r) & 255) << 8 | (e.charCodeAt(++r) & 255) << 16 | (e.charCodeAt(++r) & 255) << 24, n = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16), n ^= /* k >>> r: */
    n >>> 24, t = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  switch (o) {
    case 3:
      t ^= (e.charCodeAt(r + 2) & 255) << 16;
    case 2:
      t ^= (e.charCodeAt(r + 1) & 255) << 8;
    case 1:
      t ^= e.charCodeAt(r) & 255, t = /* Math.imul(h, m): */
      (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  }
  return t ^= t >>> 13, t = /* Math.imul(h, m): */
  (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16), ((t ^ t >>> 15) >>> 0).toString(36);
}
var kx = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  scale: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, $x = /[A-Z]|^ms/g, Px = /_EMO_([^_]+?)_([^]*?)_EMO_/g, Rh = function(t) {
  return t.charCodeAt(1) === 45;
}, Rf = function(t) {
  return t != null && typeof t != "boolean";
}, Xl = /* @__PURE__ */ Eh(function(e) {
  return Rh(e) ? e : e.replace($x, "-$&").toLowerCase();
}), kf = function(t, n) {
  switch (t) {
    case "animation":
    case "animationName":
      if (typeof n == "string")
        return n.replace(Px, function(r, o, s) {
          return rr = {
            name: o,
            styles: s,
            next: rr
          }, o;
        });
  }
  return kx[t] !== 1 && !Rh(t) && typeof n == "number" && n !== 0 ? n + "px" : n;
};
function Ki(e, t, n) {
  if (n == null)
    return "";
  var r = n;
  if (r.__emotion_styles !== void 0)
    return r;
  switch (typeof n) {
    case "boolean":
      return "";
    case "object": {
      var o = n;
      if (o.anim === 1)
        return rr = {
          name: o.name,
          styles: o.styles,
          next: rr
        }, o.name;
      var s = n;
      if (s.styles !== void 0) {
        var a = s.next;
        if (a !== void 0)
          for (; a !== void 0; )
            rr = {
              name: a.name,
              styles: a.styles,
              next: rr
            }, a = a.next;
        var l = s.styles + ";";
        return l;
      }
      return Ix(e, t, n);
    }
    case "function": {
      if (e !== void 0) {
        var c = rr, u = n(e);
        return rr = c, Ki(e, t, u);
      }
      break;
    }
  }
  var d = n;
  if (t == null)
    return d;
  var f = t[d];
  return f !== void 0 ? f : d;
}
function Ix(e, t, n) {
  var r = "";
  if (Array.isArray(n))
    for (var o = 0; o < n.length; o++)
      r += Ki(e, t, n[o]) + ";";
  else
    for (var s in n) {
      var a = n[s];
      if (typeof a != "object") {
        var l = a;
        t != null && t[l] !== void 0 ? r += s + "{" + t[l] + "}" : Rf(l) && (r += Xl(s) + ":" + kf(s, l) + ";");
      } else if (Array.isArray(a) && typeof a[0] == "string" && (t == null || t[a[0]] === void 0))
        for (var c = 0; c < a.length; c++)
          Rf(a[c]) && (r += Xl(s) + ":" + kf(s, a[c]) + ";");
      else {
        var u = Ki(e, t, a);
        switch (s) {
          case "animation":
          case "animationName": {
            r += Xl(s) + ":" + u + ";";
            break;
          }
          default:
            r += s + "{" + u + "}";
        }
      }
    }
  return r;
}
var $f = /label:\s*([^\s;{]+)\s*(;|$)/g, rr;
function ri(e, t, n) {
  if (e.length === 1 && typeof e[0] == "object" && e[0] !== null && e[0].styles !== void 0)
    return e[0];
  var r = !0, o = "";
  rr = void 0;
  var s = e[0];
  if (s == null || s.raw === void 0)
    r = !1, o += Ki(n, t, s);
  else {
    var a = s;
    o += a[0];
  }
  for (var l = 1; l < e.length; l++)
    if (o += Ki(n, t, e[l]), r) {
      var c = s;
      o += c[l];
    }
  $f.lastIndex = 0;
  for (var u = "", d; (d = $f.exec(o)) !== null; )
    u += "-" + d[1];
  var f = Rx(o) + u;
  return {
    name: f,
    styles: o,
    next: rr
  };
}
var Nx = function(t) {
  return t();
}, kh = C.useInsertionEffect ? C.useInsertionEffect : !1, $h = kh || Nx, Pf = kh || C.useLayoutEffect, Ph = /* @__PURE__ */ C.createContext(
  // we're doing this to avoid preconstruct's dead code elimination in this one case
  // because this module is primarily intended for the browser and node
  // but it's also required in react native and similar environments sometimes
  // and we could have a special build just for that
  // but this is much easier and the native packages
  // might use a different theme context in the future anyway
  typeof HTMLElement < "u" ? /* @__PURE__ */ wx({
    key: "css"
  }) : null
);
Ph.Provider;
var Fu = function(t) {
  return /* @__PURE__ */ $u(function(n, r) {
    var o = Bv(Ph);
    return t(n, o, r);
  });
}, oi = /* @__PURE__ */ C.createContext({}), ju = {}.hasOwnProperty, Dc = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__", Ax = function(t, n) {
  var r = {};
  for (var o in n)
    ju.call(n, o) && (r[o] = n[o]);
  return r[Dc] = t, r;
}, Mx = function(t) {
  var n = t.cache, r = t.serialized, o = t.isStringTag;
  return Du(n, r, o), $h(function() {
    return Bu(n, r, o);
  }), null;
}, _x = /* @__PURE__ */ Fu(function(e, t, n) {
  var r = e.css;
  typeof r == "string" && t.registered[r] !== void 0 && (r = t.registered[r]);
  var o = e[Dc], s = [r], a = "";
  typeof e.className == "string" ? a = Oh(t.registered, s, e.className) : e.className != null && (a = e.className + " ");
  var l = ri(s, void 0, C.useContext(oi));
  a += t.key + "-" + l.name;
  var c = {};
  for (var u in e)
    ju.call(e, u) && u !== "css" && u !== Dc && (c[u] = e[u]);
  return c.className = a, n && (c.ref = n), /* @__PURE__ */ C.createElement(C.Fragment, null, /* @__PURE__ */ C.createElement(Mx, {
    cache: t,
    serialized: l,
    isStringTag: typeof o == "string"
  }), /* @__PURE__ */ C.createElement(o, c));
}), Dx = _x, If = function(t, n) {
  var r = arguments;
  if (n == null || !ju.call(n, "css"))
    return C.createElement.apply(void 0, r);
  var o = r.length, s = new Array(o);
  s[0] = Dx, s[1] = Ax(t, n);
  for (var a = 2; a < o; a++)
    s[a] = r[a];
  return C.createElement.apply(null, s);
};
(function(e) {
  var t;
  t || (t = e.JSX || (e.JSX = {}));
})(If || (If = {}));
var Ih = /* @__PURE__ */ Fu(function(e, t) {
  var n = e.styles, r = ri([n], void 0, C.useContext(oi)), o = C.useRef();
  return Pf(function() {
    var s = t.key + "-global", a = new t.sheet.constructor({
      key: s,
      nonce: t.sheet.nonce,
      container: t.sheet.container,
      speedy: t.sheet.isSpeedy
    }), l = !1, c = document.querySelector('style[data-emotion="' + s + " " + r.name + '"]');
    return t.sheet.tags.length && (a.before = t.sheet.tags[0]), c !== null && (l = !0, c.setAttribute("data-emotion", s), a.hydrate([c])), o.current = [a, l], function() {
      a.flush();
    };
  }, [t]), Pf(function() {
    var s = o.current, a = s[0], l = s[1];
    if (l) {
      s[1] = !1;
      return;
    }
    if (r.next !== void 0 && Bu(t, r.next, !0), a.tags.length) {
      var c = a.tags[a.tags.length - 1].nextElementSibling;
      a.before = c, a.flush();
    }
    t.insert("", r, a, !1);
  }, [t, r.name]), null;
});
function ii() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return ri(t);
}
function qr() {
  var e = ii.apply(void 0, arguments), t = "animation-" + e.name;
  return {
    name: t,
    styles: "@keyframes " + t + "{" + e.styles + "}",
    anim: 1,
    toString: function() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
}
var Bx = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, Fx = /* @__PURE__ */ Eh(
  function(e) {
    return Bx.test(e) || e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && e.charCodeAt(2) < 91;
  }
  /* Z+1 */
), jx = Fx, Lx = function(t) {
  return t !== "theme";
}, Nf = function(t) {
  return typeof t == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  t.charCodeAt(0) > 96 ? jx : Lx;
}, Af = function(t, n, r) {
  var o;
  if (n) {
    var s = n.shouldForwardProp;
    o = t.__emotion_forwardProp && s ? function(a) {
      return t.__emotion_forwardProp(a) && s(a);
    } : s;
  }
  return typeof o != "function" && r && (o = t.__emotion_forwardProp), o;
}, Vx = function(t) {
  var n = t.cache, r = t.serialized, o = t.isStringTag;
  return Du(n, r, o), $h(function() {
    return Bu(n, r, o);
  }), null;
}, zx = function e(t, n) {
  var r = t.__emotion_real === t, o = r && t.__emotion_base || t, s, a;
  n !== void 0 && (s = n.label, a = n.target);
  var l = Af(t, n, r), c = l || Nf(o), u = !c("as");
  return function() {
    var d = arguments, f = r && t.__emotion_styles !== void 0 ? t.__emotion_styles.slice(0) : [];
    if (s !== void 0 && f.push("label:" + s + ";"), d[0] == null || d[0].raw === void 0)
      f.push.apply(f, d);
    else {
      var h = d[0];
      f.push(h[0]);
      for (var g = d.length, y = 1; y < g; y++)
        f.push(d[y], h[y]);
    }
    var m = Fu(function(b, x, E) {
      var w = u && b.as || o, S = "", v = [], T = b;
      if (b.theme == null) {
        T = {};
        for (var R in b)
          T[R] = b[R];
        T.theme = C.useContext(oi);
      }
      typeof b.className == "string" ? S = Oh(x.registered, v, b.className) : b.className != null && (S = b.className + " ");
      var k = ri(f.concat(v), x.registered, T);
      S += x.key + "-" + k.name, a !== void 0 && (S += " " + a);
      var I = u && l === void 0 ? Nf(w) : c, p = {};
      for (var O in b)
        u && O === "as" || I(O) && (p[O] = b[O]);
      return p.className = S, E && (p.ref = E), /* @__PURE__ */ C.createElement(C.Fragment, null, /* @__PURE__ */ C.createElement(Vx, {
        cache: x,
        serialized: k,
        isStringTag: typeof w == "string"
      }), /* @__PURE__ */ C.createElement(w, p));
    });
    return m.displayName = s !== void 0 ? s : "Styled(" + (typeof o == "string" ? o : o.displayName || o.name || "Component") + ")", m.defaultProps = t.defaultProps, m.__emotion_real = m, m.__emotion_base = o, m.__emotion_styles = f, m.__emotion_forwardProp = l, Object.defineProperty(m, "toString", {
      value: function() {
        return "." + a;
      }
    }), m.withComponent = function(b, x) {
      var E = e(b, fa({}, n, x, {
        shouldForwardProp: Af(m, x, !0)
      }));
      return E.apply(void 0, f);
    }, m;
  };
}, Wx = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], ma = zx.bind(null);
Wx.forEach(function(e) {
  ma[e] = ma(e);
});
function Ux(e) {
  return e == null || Object.keys(e).length === 0;
}
function Lu(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e;
  return /* @__PURE__ */ P(Ih, {
    styles: typeof t == "function" ? (o) => t(Ux(o) ? n : o) : t
  });
}
process.env.NODE_ENV !== "production" && (Lu.propTypes = {
  defaultTheme: i.object,
  styles: i.oneOfType([i.array, i.string, i.object, i.func])
});
/**
 * @mui/styled-engine v7.0.1
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function Nh(e, t) {
  const n = ma(e, t);
  return process.env.NODE_ENV !== "production" ? (...r) => {
    const o = typeof e == "string" ? `"${e}"` : "component";
    return r.length === 0 ? console.error([`MUI: Seems like you called \`styled(${o})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : r.some((s) => s === void 0) && console.error(`MUI: the styled(${o})(...args) API requires all its args to be defined.`), n(...r);
  } : n;
}
function Hx(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const Mf = [];
function _f(e) {
  return Mf[0] = e, ri(Mf);
}
const qx = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, r) => n.val - r.val), t.reduce((n, r) => ({
    ...n,
    [r.key]: r.val
  }), {});
};
function Yx(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: r = 5,
    ...o
  } = e, s = qx(t), a = Object.keys(s);
  function l(h) {
    return `@media (min-width:${typeof t[h] == "number" ? t[h] : h}${n})`;
  }
  function c(h) {
    return `@media (max-width:${(typeof t[h] == "number" ? t[h] : h) - r / 100}${n})`;
  }
  function u(h, g) {
    const y = a.indexOf(g);
    return `@media (min-width:${typeof t[h] == "number" ? t[h] : h}${n}) and (max-width:${(y !== -1 && typeof t[a[y]] == "number" ? t[a[y]] : g) - r / 100}${n})`;
  }
  function d(h) {
    return a.indexOf(h) + 1 < a.length ? u(h, a[a.indexOf(h) + 1]) : l(h);
  }
  function f(h) {
    const g = a.indexOf(h);
    return g === 0 ? l(a[1]) : g === a.length - 1 ? c(a[g]) : u(h, a[a.indexOf(h) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: a,
    values: s,
    up: l,
    down: c,
    between: u,
    only: d,
    not: f,
    unit: n,
    ...o
  };
}
const Gx = {
  borderRadius: 4
};
function Ah(e = 8, t = Iu({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...r) => (process.env.NODE_ENV !== "production" && (r.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${r.length}`)), (r.length === 0 ? [1] : r).map((s) => {
    const a = t(s);
    return typeof a == "number" ? `${a}px` : a;
  }).join(" "));
  return n.mui = !0, n;
}
function Kx(e, t) {
  var r;
  const n = this;
  if (n.vars) {
    if (!((r = n.colorSchemes) != null && r[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let o = n.getColorSchemeSelector(e);
    return o === "&" ? t : ((o.includes("data-") || o.includes(".")) && (o = `*:where(${o.replace(/\s*&$/, "")}) &`), {
      [o]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function Za(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: r = {},
    spacing: o,
    shape: s = {},
    ...a
  } = e, l = Yx(n), c = Ah(o);
  let u = Tn({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...r
    },
    spacing: c,
    shape: {
      ...Gx,
      ...s
    }
  }, a);
  return u = n0(u), u.applyStyles = Kx, u = t.reduce((d, f) => Tn(d, f), u), u.unstable_sxConfig = {
    ...fs,
    ...a == null ? void 0 : a.unstable_sxConfig
  }, u.unstable_sx = function(f) {
    return Vr({
      sx: f,
      theme: this
    });
  }, u;
}
function Xx(e) {
  return Object.keys(e).length === 0;
}
function Vu(e = null) {
  const t = C.useContext(oi);
  return !t || Xx(t) ? e : t;
}
const Qx = Za();
function el(e = Qx) {
  return Vu(e);
}
function Mh({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const r = el(n), o = typeof e == "function" ? e(t && r[t] || r) : e;
  return /* @__PURE__ */ P(Lu, {
    styles: o
  });
}
process.env.NODE_ENV !== "production" && (Mh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: i.object,
  /**
   * @ignore
   */
  styles: i.oneOfType([i.array, i.func, i.number, i.object, i.string, i.bool]),
  /**
   * @ignore
   */
  themeId: i.string
});
const Df = (e) => e, Jx = () => {
  let e = Df;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = Df;
    }
  };
}, _h = Jx();
function Zx(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: r = "MuiBox-root",
    generateClassName: o
  } = e, s = Nh("div", {
    shouldForwardProp: (l) => l !== "theme" && l !== "sx" && l !== "as"
  })(Vr);
  return /* @__PURE__ */ C.forwardRef(function(c, u) {
    const d = el(n), {
      className: f,
      component: h = "div",
      ...g
    } = yh(c);
    return /* @__PURE__ */ P(s, {
      as: h,
      ref: u,
      className: Ee(f, o ? o(r) : r),
      theme: t && d[t] || d,
      ...g
    });
  });
}
const ew = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function gt(e, t, n = "Mui") {
  const r = ew[t];
  return r ? `${n}-${r}` : `${_h.generate(e)}-${t}`;
}
function wt(e, t, n = "Mui") {
  const r = {};
  return t.forEach((o) => {
    r[o] = gt(e, o, n);
  }), r;
}
function Dh(e, t = "") {
  return e.displayName || e.name || t;
}
function Bf(e, t, n) {
  const r = Dh(t);
  return e.displayName || (r !== "" ? `${n}(${r})` : n);
}
function tw(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return Dh(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case Yn.ForwardRef:
          return Bf(e, e.render, "ForwardRef");
        case Yn.Memo:
          return Bf(e, e.type, "memo");
        default:
          return;
      }
  }
}
function Bh(e) {
  const {
    variants: t,
    ...n
  } = e, r = {
    variants: t,
    style: _f(n),
    isProcessed: !0
  };
  return r.style === n || t && t.forEach((o) => {
    typeof o.style != "function" && (o.style = _f(o.style));
  }), r;
}
const nw = Za();
function Ql(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function rw(e) {
  return e ? (t, n) => n[e] : null;
}
function ow(e, t, n) {
  e.theme = aw(e.theme) ? n : e.theme[t] || e.theme;
}
function na(e, t) {
  const n = typeof t == "function" ? t(e) : t;
  if (Array.isArray(n))
    return n.flatMap((r) => na(e, r));
  if (Array.isArray(n == null ? void 0 : n.variants)) {
    let r;
    if (n.isProcessed)
      r = n.style;
    else {
      const {
        variants: o,
        ...s
      } = n;
      r = s;
    }
    return Fh(e, n.variants, [r]);
  }
  return n != null && n.isProcessed ? n.style : n;
}
function Fh(e, t, n = []) {
  var o;
  let r;
  e: for (let s = 0; s < t.length; s += 1) {
    const a = t[s];
    if (typeof a.props == "function") {
      if (r ?? (r = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !a.props(r))
        continue;
    } else
      for (const l in a.props)
        if (e[l] !== a.props[l] && ((o = e.ownerState) == null ? void 0 : o[l]) !== a.props[l])
          continue e;
    typeof a.style == "function" ? (r ?? (r = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(a.style(r))) : n.push(a.style);
  }
  return n;
}
function jh(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = nw,
    rootShouldForwardProp: r = Ql,
    slotShouldForwardProp: o = Ql
  } = e;
  function s(l) {
    ow(l, t, n);
  }
  return (l, c = {}) => {
    Hx(l, (v) => v.filter((T) => T !== Vr));
    const {
      name: u,
      slot: d,
      skipVariantsResolver: f,
      skipSx: h,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: g = rw(Lh(d)),
      ...y
    } = c, m = f !== void 0 ? f : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      d && d !== "Root" && d !== "root" || !1
    ), b = h || !1;
    let x = Ql;
    d === "Root" || d === "root" ? x = r : d ? x = o : lw(l) && (x = void 0);
    const E = Nh(l, {
      shouldForwardProp: x,
      label: sw(u, d),
      ...y
    }), w = (v) => {
      if (typeof v == "function" && v.__emotion_real !== v)
        return function(R) {
          return na(R, v);
        };
      if (ir(v)) {
        const T = Bh(v);
        return T.variants ? function(k) {
          return na(k, T);
        } : T.style;
      }
      return v;
    }, S = (...v) => {
      const T = [], R = v.map(w), k = [];
      if (T.push(s), u && g && k.push(function($) {
        var M, V;
        const D = (V = (M = $.theme.components) == null ? void 0 : M[u]) == null ? void 0 : V.styleOverrides;
        if (!D)
          return null;
        const _ = {};
        for (const Y in D)
          _[Y] = na($, D[Y]);
        return g($, _);
      }), u && !m && k.push(function($) {
        var _, M;
        const A = $.theme, D = (M = (_ = A == null ? void 0 : A.components) == null ? void 0 : _[u]) == null ? void 0 : M.variants;
        return D ? Fh($, D) : null;
      }), b || k.push(Vr), Array.isArray(R[0])) {
        const O = R.shift(), $ = new Array(T.length).fill(""), A = new Array(k.length).fill("");
        let D;
        D = [...$, ...O, ...A], D.raw = [...$, ...O.raw, ...A], T.unshift(D);
      }
      const I = [...T, ...R, ...k], p = E(...I);
      return l.muiName && (p.muiName = l.muiName), process.env.NODE_ENV !== "production" && (p.displayName = iw(u, d, l)), p;
    };
    return E.withConfig && (S.withConfig = E.withConfig), S;
  };
}
function iw(e, t, n) {
  return e ? `${e}${xe(t || "")}` : `Styled(${tw(n)})`;
}
function sw(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${Lh(t || "Root")}`), n;
}
function aw(e) {
  for (const t in e)
    return !1;
  return !0;
}
function lw(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function Lh(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
const cw = jh();
function Xi(e, t) {
  const n = {
    ...t
  };
  for (const r in e)
    if (Object.prototype.hasOwnProperty.call(e, r)) {
      const o = r;
      if (o === "components" || o === "slots")
        n[o] = {
          ...e[o],
          ...n[o]
        };
      else if (o === "componentsProps" || o === "slotProps") {
        const s = e[o], a = t[o];
        if (!a)
          n[o] = s || {};
        else if (!s)
          n[o] = a;
        else {
          n[o] = {
            ...a
          };
          for (const l in s)
            if (Object.prototype.hasOwnProperty.call(s, l)) {
              const c = l;
              n[o][c] = Xi(s[c], a[c]);
            }
        }
      } else n[o] === void 0 && (n[o] = e[o]);
    }
  return n;
}
function Vh(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  return !t || !t.components || !t.components[n] || !t.components[n].defaultProps ? r : Xi(t.components[n].defaultProps, r);
}
function uw({
  props: e,
  name: t,
  defaultTheme: n,
  themeId: r
}) {
  let o = el(n);
  return r && (o = o[r] || o), Vh({
    theme: o,
    name: t,
    props: e
  });
}
const fr = typeof window < "u" ? C.useLayoutEffect : C.useEffect;
function dw(e, t, n, r, o) {
  const [s, a] = C.useState(() => o && n ? n(e).matches : r ? r(e).matches : t);
  return fr(() => {
    if (!n)
      return;
    const l = n(e), c = () => {
      a(l.matches);
    };
    return c(), l.addEventListener("change", c), () => {
      l.removeEventListener("change", c);
    };
  }, [e, n]), s;
}
const fw = {
  ...C
}, zh = fw.useSyncExternalStore;
function pw(e, t, n, r, o) {
  const s = C.useCallback(() => t, [t]), a = C.useMemo(() => {
    if (o && n)
      return () => n(e).matches;
    if (r !== null) {
      const {
        matches: d
      } = r(e);
      return () => d;
    }
    return s;
  }, [s, e, r, o, n]), [l, c] = C.useMemo(() => {
    if (n === null)
      return [s, () => () => {
      }];
    const d = n(e);
    return [() => d.matches, (f) => (d.addEventListener("change", f), () => {
      d.removeEventListener("change", f);
    })];
  }, [s, n, e]);
  return zh(c, l, a);
}
function Wh(e = {}) {
  const {
    themeId: t
  } = e;
  return function(r, o = {}) {
    let s = Vu();
    s && t && (s = s[t] || s);
    const a = typeof window < "u" && typeof window.matchMedia < "u", {
      defaultMatches: l = !1,
      matchMedia: c = a ? window.matchMedia : null,
      ssrMatchMedia: u = null,
      noSsr: d = !1
    } = Vh({
      name: "MuiUseMediaQuery",
      props: o,
      theme: s
    });
    process.env.NODE_ENV !== "production" && typeof r == "function" && s === null && console.error(["MUI: The `query` argument provided is invalid.", "You are providing a function without a theme in the context.", "One of the parent elements needs to use a ThemeProvider."].join(`
`));
    let f = typeof r == "function" ? r(s) : r;
    f = f.replace(/^@media( ?)/m, "");
    const g = (zh !== void 0 ? pw : dw)(f, l, c, u, d);
    return process.env.NODE_ENV !== "production" && C.useDebugValue({
      query: f,
      match: g
    }), g;
  };
}
Wh();
function mw(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function zu(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), mw(e, t, n);
}
function hw(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((r) => r + r)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((r, o) => o < 3 ? parseInt(r, 16) : Math.round(parseInt(r, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function zr(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return zr(hw(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : Or(9, e));
  let r = e.substring(t + 1, e.length - 1), o;
  if (n === "color") {
    if (r = r.split(" "), o = r.shift(), r.length === 4 && r[3].charAt(0) === "/" && (r[3] = r[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(o))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${o}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : Or(10, o));
  } else
    r = r.split(",");
  return r = r.map((s) => parseFloat(s)), {
    type: n,
    values: r,
    colorSpace: o
  };
}
const gw = (e) => {
  const t = zr(e);
  return t.values.slice(0, 3).map((n, r) => t.type.includes("hsl") && r !== 0 ? `${n}%` : n).join(" ");
}, $i = (e, t) => {
  try {
    return gw(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function tl(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: r
  } = e;
  return t.includes("rgb") ? r = r.map((o, s) => s < 3 ? parseInt(o, 10) : o) : t.includes("hsl") && (r[1] = `${r[1]}%`, r[2] = `${r[2]}%`), t.includes("color") ? r = `${n} ${r.join(" ")}` : r = `${r.join(", ")}`, `${t}(${r})`;
}
function Uh(e) {
  e = zr(e);
  const {
    values: t
  } = e, n = t[0], r = t[1] / 100, o = t[2] / 100, s = r * Math.min(o, 1 - o), a = (u, d = (u + n / 30) % 12) => o - s * Math.max(Math.min(d - 3, 9 - d, 1), -1);
  let l = "rgb";
  const c = [Math.round(a(0) * 255), Math.round(a(8) * 255), Math.round(a(4) * 255)];
  return e.type === "hsla" && (l += "a", c.push(t[3])), tl({
    type: l,
    values: c
  });
}
function Bc(e) {
  e = zr(e);
  let t = e.type === "hsl" || e.type === "hsla" ? zr(Uh(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function Ff(e, t) {
  const n = Bc(e), r = Bc(t);
  return (Math.max(n, r) + 0.05) / (Math.min(n, r) + 0.05);
}
function Yt(e, t) {
  return e = zr(e), t = zu(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, tl(e);
}
function Ms(e, t, n) {
  try {
    return Yt(e, t);
  } catch {
    return e;
  }
}
function si(e, t) {
  if (e = zr(e), t = zu(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return tl(e);
}
function lt(e, t, n) {
  try {
    return si(e, t);
  } catch {
    return e;
  }
}
function ai(e, t) {
  if (e = zr(e), t = zu(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return tl(e);
}
function ct(e, t, n) {
  try {
    return ai(e, t);
  } catch {
    return e;
  }
}
function yw(e, t = 0.15) {
  return Bc(e) > 0.5 ? si(e, t) : ai(e, t);
}
function _s(e, t, n) {
  try {
    return yw(e, t);
  } catch {
    return e;
  }
}
function Yr(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...r) {
    return e(...r) || t(...r);
  };
}
function bw(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function Hh(e, t, n, r, o) {
  const s = e[t], a = o || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  const c = s.type;
  return typeof c == "function" && !bw(c) && (l = "Did you accidentally use a plain function component for an element instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Gr = Yr(i.element, Hh);
Gr.isRequired = Yr(i.element.isRequired, Hh);
function vw(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function xw(e, t, n, r, o) {
  const s = e[t], a = o || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  return typeof s == "function" && !vw(s) && (l = "Did you accidentally provide a plain function component instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Wu = Yr(i.elementType, xw), ww = "exact-prop: ​";
function ms(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [ww]: (t) => {
      const n = Object.keys(t).filter((r) => !e.hasOwnProperty(r));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((r) => `\`${r}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
function kr(e, t, n, r, o) {
  if (process.env.NODE_ENV === "production")
    return null;
  const s = e[t], a = o || t;
  return s == null ? null : s && s.nodeType !== 1 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
const Ar = i.oneOfType([i.func, i.object]);
function Fc(...e) {
  return e.reduce((t, n) => n == null ? t : function(...o) {
    t.apply(this, o), n.apply(this, o);
  }, () => {
  });
}
function Uu(e, t = 166) {
  let n;
  function r(...o) {
    const s = () => {
      e.apply(this, o);
    };
    clearTimeout(n), n = setTimeout(s, t);
  }
  return r.clear = () => {
    clearTimeout(n);
  }, r;
}
function mn(e) {
  return e && e.ownerDocument || document;
}
function pr(e) {
  return mn(e).defaultView || window;
}
function jc(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
let jf = 0;
function Sw(e) {
  const [t, n] = C.useState(e), r = e || t;
  return C.useEffect(() => {
    t == null && (jf += 1, n(`mui-${jf}`));
  }, [t]), r;
}
const Tw = {
  ...C
}, Lf = Tw.useId;
function Hu(e) {
  if (Lf !== void 0) {
    const t = Lf();
    return e ?? t;
  }
  return Sw(e);
}
function qh({
  controlled: e,
  default: t,
  name: n,
  state: r = "value"
}) {
  const {
    current: o
  } = C.useRef(e !== void 0), [s, a] = C.useState(t), l = o ? e : s;
  if (process.env.NODE_ENV !== "production") {
    C.useEffect(() => {
      o !== (e !== void 0) && console.error([`MUI: A component is changing the ${o ? "" : "un"}controlled ${r} state of ${n} to be ${o ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [r, n, e]);
    const {
      current: u
    } = C.useRef(t);
    C.useEffect(() => {
      !o && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${r} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = C.useCallback((u) => {
    o || a(u);
  }, []);
  return [l, c];
}
function ur(e) {
  const t = C.useRef(e);
  return fr(() => {
    t.current = e;
  }), C.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function rn(...e) {
  return C.useMemo(() => e.every((t) => t == null) ? null : (t) => {
    e.forEach((n) => {
      jc(n, t);
    });
  }, e);
}
const Vf = {};
function Yh(e, t) {
  const n = C.useRef(Vf);
  return n.current === Vf && (n.current = e(t)), n;
}
const Ew = [];
function Cw(e) {
  C.useEffect(e, Ew);
}
let Gh = class Kh {
  constructor() {
    _r(this, "currentId", null);
    _r(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    _r(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new Kh();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
};
function _o() {
  const e = Yh(Gh.create).current;
  return Cw(e.disposeEffect), e;
}
function ha(e) {
  try {
    return e.matches(":focus-visible");
  } catch {
    process.env.NODE_ENV !== "production" && !/jsdom/.test(window.navigator.userAgent) && console.warn(["MUI: The `:focus-visible` pseudo class is not supported in this browser.", "Some components rely on this feature to work properly."].join(`
`));
  }
  return !1;
}
function Ow(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
const Xh = (e) => {
  const t = C.useRef({});
  return C.useEffect(() => {
    t.current = e;
  }), t.current;
};
function Rw(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function Qh(e, t, n, r) {
  const o = e[t];
  if (o == null || !Number.isInteger(o)) {
    const s = Rw(o);
    return new RangeError(`Invalid ${r} \`${t}\` of type \`${s}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function Jh(e, t, ...n) {
  return e[t] === void 0 ? null : Qh(e, t, ...n);
}
function Lc() {
  return null;
}
Jh.isRequired = Qh;
Lc.isRequired = Lc;
const qu = process.env.NODE_ENV === "production" ? Lc : Jh;
function kw(e) {
  return typeof e == "string";
}
function Zh(e, t, n) {
  return e === void 0 || kw(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function eg(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((r) => r.match(/^on[A-Z]/) && typeof e[r] == "function" && !t.includes(r)).forEach((r) => {
    n[r] = e[r];
  }), n;
}
function zf(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function tg(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: r,
    externalForwardedProps: o,
    className: s
  } = e;
  if (!t) {
    const g = Ee(n == null ? void 0 : n.className, s, o == null ? void 0 : o.className, r == null ? void 0 : r.className), y = {
      ...n == null ? void 0 : n.style,
      ...o == null ? void 0 : o.style,
      ...r == null ? void 0 : r.style
    }, m = {
      ...n,
      ...o,
      ...r
    };
    return g.length > 0 && (m.className = g), Object.keys(y).length > 0 && (m.style = y), {
      props: m,
      internalRef: void 0
    };
  }
  const a = eg({
    ...o,
    ...r
  }), l = zf(r), c = zf(o), u = t(a), d = Ee(u == null ? void 0 : u.className, n == null ? void 0 : n.className, s, o == null ? void 0 : o.className, r == null ? void 0 : r.className), f = {
    ...u == null ? void 0 : u.style,
    ...n == null ? void 0 : n.style,
    ...o == null ? void 0 : o.style,
    ...r == null ? void 0 : r.style
  }, h = {
    ...u,
    ...n,
    ...c,
    ...l
  };
  return d.length > 0 && (h.className = d), Object.keys(f).length > 0 && (h.style = f), {
    props: h,
    internalRef: u.ref
  };
}
function ng(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function Vc(e) {
  var f;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: r,
    skipResolvingSlotProps: o = !1,
    ...s
  } = e, a = o ? {} : ng(n, r), {
    props: l,
    internalRef: c
  } = tg({
    ...s,
    externalSlotProps: a
  }), u = rn(c, a == null ? void 0 : a.ref, (f = e.additionalProps) == null ? void 0 : f.ref);
  return Zh(t, {
    ...l,
    ref: u
  }, r);
}
function go(e) {
  var t;
  return parseInt(C.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
const Yu = /* @__PURE__ */ C.createContext(null);
process.env.NODE_ENV !== "production" && (Yu.displayName = "ThemeContext");
function Gu() {
  const e = C.useContext(Yu);
  return process.env.NODE_ENV !== "production" && C.useDebugValue(e), e;
}
const $w = typeof Symbol == "function" && Symbol.for, Pw = $w ? Symbol.for("mui.nested") : "__THEME_NESTED__";
function Iw(e, t) {
  if (typeof t == "function") {
    const n = t(e);
    return process.env.NODE_ENV !== "production" && (n || console.error(["MUI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join(`
`))), n;
  }
  return {
    ...e,
    ...t
  };
}
function ga(e) {
  const {
    children: t,
    theme: n
  } = e, r = Gu();
  process.env.NODE_ENV !== "production" && r === null && typeof n == "function" && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const o = C.useMemo(() => {
    const s = r === null ? {
      ...n
    } : Iw(r, n);
    return s != null && (s[Pw] = r !== null), s;
  }, [n, r]);
  return /* @__PURE__ */ P(Yu.Provider, {
    value: o,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (ga.propTypes = {
  /**
   * Your component tree.
   */
  children: i.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: i.oneOfType([i.object, i.func]).isRequired
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (ga.propTypes = ms(ga.propTypes));
const rg = /* @__PURE__ */ C.createContext();
function og({
  value: e,
  ...t
}) {
  return /* @__PURE__ */ P(rg.Provider, {
    value: e ?? !0,
    ...t
  });
}
process.env.NODE_ENV !== "production" && (og.propTypes = {
  children: i.node,
  value: i.bool
});
const nl = () => C.useContext(rg) ?? !1, ig = /* @__PURE__ */ C.createContext(void 0);
function sg({
  value: e,
  children: t
}) {
  return /* @__PURE__ */ P(ig.Provider, {
    value: e,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (sg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * @ignore
   */
  value: i.object
});
function Nw(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  if (!t || !t.components || !t.components[n])
    return r;
  const o = t.components[n];
  return o.defaultProps ? Xi(o.defaultProps, r) : !o.styleOverrides && !o.variants ? Xi(o, r) : r;
}
function Aw({
  props: e,
  name: t
}) {
  const n = C.useContext(ig);
  return Nw({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
const Wf = {};
function Uf(e, t, n, r = !1) {
  return C.useMemo(() => {
    const o = e && t[e] || t;
    if (typeof n == "function") {
      const s = n(o), a = e ? {
        ...t,
        [e]: s
      } : s;
      return r ? () => a : a;
    }
    return e ? {
      ...t,
      [e]: n
    } : {
      ...t,
      ...n
    };
  }, [e, t, n, r]);
}
function Qi(e) {
  const {
    children: t,
    theme: n,
    themeId: r
  } = e, o = Vu(Wf), s = Gu() || Wf;
  process.env.NODE_ENV !== "production" && (o === null && typeof n == "function" || r && o && !o[r] && typeof n == "function") && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const a = Uf(r, o, n), l = Uf(r, s, n, !0), c = (r ? a[r] : a).direction === "rtl";
  return /* @__PURE__ */ P(ga, {
    theme: l,
    children: /* @__PURE__ */ P(oi.Provider, {
      value: a,
      children: /* @__PURE__ */ P(og, {
        value: c,
        children: /* @__PURE__ */ P(sg, {
          value: r ? a[r].components : a.components,
          children: t
        })
      })
    })
  });
}
process.env.NODE_ENV !== "production" && (Qi.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Your component tree.
   */
  children: i.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: i.oneOfType([i.func, i.object]).isRequired,
  /**
   * The design system's unique id for getting the corresponded theme when there are multiple design systems.
   */
  themeId: i.string
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (Qi.propTypes = ms(Qi.propTypes));
const Hf = {
  theme: void 0
};
function Mw(e) {
  let t, n;
  return function(o) {
    let s = t;
    return (s === void 0 || o.theme !== n) && (Hf.theme = o.theme, s = Bh(e(Hf)), t = s, n = o.theme), s;
  };
}
const Ku = "mode", Xu = "color-scheme", _w = "data-color-scheme";
function Dw(e) {
  const {
    defaultMode: t = "system",
    defaultLightColorScheme: n = "light",
    defaultDarkColorScheme: r = "dark",
    modeStorageKey: o = Ku,
    colorSchemeStorageKey: s = Xu,
    attribute: a = _w,
    colorSchemeNode: l = "document.documentElement",
    nonce: c
  } = e || {};
  let u = "", d = a;
  if (a === "class" && (d = ".%s"), a === "data" && (d = "[data-%s]"), d.startsWith(".")) {
    const h = d.substring(1);
    u += `${l}.classList.remove('${h}'.replace('%s', light), '${h}'.replace('%s', dark));
      ${l}.classList.add('${h}'.replace('%s', colorScheme));`;
  }
  const f = d.match(/\[([^\]]+)\]/);
  if (f) {
    const [h, g] = f[1].split("=");
    g || (u += `${l}.removeAttribute('${h}'.replace('%s', light));
      ${l}.removeAttribute('${h}'.replace('%s', dark));`), u += `
      ${l}.setAttribute('${h}'.replace('%s', colorScheme), ${g ? `${g}.replace('%s', colorScheme)` : '""'});`;
  } else
    u += `${l}.setAttribute('${d}', colorScheme);`;
  return /* @__PURE__ */ P("script", {
    suppressHydrationWarning: !0,
    nonce: typeof window > "u" ? c : "",
    dangerouslySetInnerHTML: {
      __html: `(function() {
try {
  let colorScheme = '';
  const mode = localStorage.getItem('${o}') || '${t}';
  const dark = localStorage.getItem('${s}-dark') || '${r}';
  const light = localStorage.getItem('${s}-light') || '${n}';
  if (mode === 'system') {
    // handle system mode
    const mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = dark
    } else {
      colorScheme = light
    }
  }
  if (mode === 'light') {
    colorScheme = light;
  }
  if (mode === 'dark') {
    colorScheme = dark;
  }
  if (colorScheme) {
    ${u}
  }
} catch(e){}})();`
    }
  }, "mui-color-scheme-init");
}
function Bw() {
}
const Fw = ({
  key: e,
  storageWindow: t
}) => (!t && typeof window < "u" && (t = window), {
  get(n) {
    if (typeof window > "u")
      return;
    if (!t)
      return n;
    let r;
    try {
      r = t.localStorage.getItem(e);
    } catch {
    }
    return r || n;
  },
  set: (n) => {
    if (t)
      try {
        t.localStorage.setItem(e, n);
      } catch {
      }
  },
  subscribe: (n) => {
    if (!t)
      return Bw;
    const r = (o) => {
      const s = o.newValue;
      o.key === e && n(s);
    };
    return t.addEventListener("storage", r), () => {
      t.removeEventListener("storage", r);
    };
  }
});
function Jl() {
}
function qf(e) {
  if (typeof window < "u" && typeof window.matchMedia == "function" && e === "system")
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
function ag(e, t) {
  if (e.mode === "light" || e.mode === "system" && e.systemMode === "light")
    return t("light");
  if (e.mode === "dark" || e.mode === "system" && e.systemMode === "dark")
    return t("dark");
}
function jw(e) {
  return ag(e, (t) => {
    if (t === "light")
      return e.lightColorScheme;
    if (t === "dark")
      return e.darkColorScheme;
  });
}
function Lw(e) {
  const {
    defaultMode: t = "light",
    defaultLightColorScheme: n,
    defaultDarkColorScheme: r,
    supportedColorSchemes: o = [],
    modeStorageKey: s = Ku,
    colorSchemeStorageKey: a = Xu,
    storageWindow: l = typeof window > "u" ? void 0 : window,
    storageManager: c = Fw,
    noSsr: u = !1
  } = e, d = o.join(","), f = o.length > 1, h = C.useMemo(() => c == null ? void 0 : c({
    key: s,
    storageWindow: l
  }), [c, s, l]), g = C.useMemo(() => c == null ? void 0 : c({
    key: `${a}-light`,
    storageWindow: l
  }), [c, a, l]), y = C.useMemo(() => c == null ? void 0 : c({
    key: `${a}-dark`,
    storageWindow: l
  }), [c, a, l]), [m, b] = C.useState(() => {
    const k = (h == null ? void 0 : h.get(t)) || t, I = (g == null ? void 0 : g.get(n)) || n, p = (y == null ? void 0 : y.get(r)) || r;
    return {
      mode: k,
      systemMode: qf(k),
      lightColorScheme: I,
      darkColorScheme: p
    };
  }), [x, E] = C.useState(u || !f);
  C.useEffect(() => {
    E(!0);
  }, []);
  const w = jw(m), S = C.useCallback((k) => {
    b((I) => {
      if (k === I.mode)
        return I;
      const p = k ?? t;
      return h == null || h.set(p), {
        ...I,
        mode: p,
        systemMode: qf(p)
      };
    });
  }, [h, t]), v = C.useCallback((k) => {
    k ? typeof k == "string" ? k && !d.includes(k) ? console.error(`\`${k}\` does not exist in \`theme.colorSchemes\`.`) : b((I) => {
      const p = {
        ...I
      };
      return ag(I, (O) => {
        O === "light" && (g == null || g.set(k), p.lightColorScheme = k), O === "dark" && (y == null || y.set(k), p.darkColorScheme = k);
      }), p;
    }) : b((I) => {
      const p = {
        ...I
      }, O = k.light === null ? n : k.light, $ = k.dark === null ? r : k.dark;
      return O && (d.includes(O) ? (p.lightColorScheme = O, g == null || g.set(O)) : console.error(`\`${O}\` does not exist in \`theme.colorSchemes\`.`)), $ && (d.includes($) ? (p.darkColorScheme = $, y == null || y.set($)) : console.error(`\`${$}\` does not exist in \`theme.colorSchemes\`.`)), p;
    }) : b((I) => (g == null || g.set(n), y == null || y.set(r), {
      ...I,
      lightColorScheme: n,
      darkColorScheme: r
    }));
  }, [d, g, y, n, r]), T = C.useCallback((k) => {
    m.mode === "system" && b((I) => {
      const p = k != null && k.matches ? "dark" : "light";
      return I.systemMode === p ? I : {
        ...I,
        systemMode: p
      };
    });
  }, [m.mode]), R = C.useRef(T);
  return R.current = T, C.useEffect(() => {
    if (typeof window.matchMedia != "function" || !f)
      return;
    const k = (...p) => R.current(...p), I = window.matchMedia("(prefers-color-scheme: dark)");
    return I.addListener(k), k(I), () => {
      I.removeListener(k);
    };
  }, [f]), C.useEffect(() => {
    if (f) {
      const k = (h == null ? void 0 : h.subscribe((O) => {
        (!O || ["light", "dark", "system"].includes(O)) && S(O || t);
      })) || Jl, I = (g == null ? void 0 : g.subscribe((O) => {
        (!O || d.match(O)) && v({
          light: O
        });
      })) || Jl, p = (y == null ? void 0 : y.subscribe((O) => {
        (!O || d.match(O)) && v({
          dark: O
        });
      })) || Jl;
      return () => {
        k(), I(), p();
      };
    }
  }, [v, S, d, t, l, f, h, g, y]), {
    ...m,
    mode: x ? m.mode : void 0,
    systemMode: x ? m.systemMode : void 0,
    colorScheme: x ? w : void 0,
    setMode: S,
    setColorScheme: v
  };
}
const Vw = "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
function zw(e) {
  const {
    themeId: t,
    /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */
    theme: n = {},
    modeStorageKey: r = Ku,
    colorSchemeStorageKey: o = Xu,
    disableTransitionOnChange: s = !1,
    defaultColorScheme: a,
    resolveTheme: l
  } = e, c = {
    allColorSchemes: [],
    colorScheme: void 0,
    darkColorScheme: void 0,
    lightColorScheme: void 0,
    mode: void 0,
    setColorScheme: () => {
    },
    setMode: () => {
    },
    systemMode: void 0
  }, u = /* @__PURE__ */ C.createContext(void 0);
  process.env.NODE_ENV !== "production" && (u.displayName = "ColorSchemeContext");
  const d = () => C.useContext(u) || c, f = {}, h = {};
  function g(x) {
    var B, z, G, pe;
    const {
      children: E,
      theme: w,
      modeStorageKey: S = r,
      colorSchemeStorageKey: v = o,
      disableTransitionOnChange: T = s,
      storageManager: R,
      storageWindow: k = typeof window > "u" ? void 0 : window,
      documentNode: I = typeof document > "u" ? void 0 : document,
      colorSchemeNode: p = typeof document > "u" ? void 0 : document.documentElement,
      disableNestedContext: O = !1,
      disableStyleSheetGeneration: $ = !1,
      defaultMode: A = "system",
      forceThemeRerender: D = !1,
      noSsr: _
    } = x, M = C.useRef(!1), V = Gu(), Y = C.useContext(u), U = !!Y && !O, j = C.useMemo(() => w || (typeof n == "function" ? n() : n), [w]), W = j[t], ee = W || j, {
      colorSchemes: K = f,
      components: oe = h,
      cssVarPrefix: ne
    } = ee, se = Object.keys(K).filter((me) => !!K[me]).join(","), de = C.useMemo(() => se.split(","), [se]), X = typeof a == "string" ? a : a.light, ae = typeof a == "string" ? a : a.dark, Q = K[X] && K[ae] ? A : ((z = (B = K[ee.defaultColorScheme]) == null ? void 0 : B.palette) == null ? void 0 : z.mode) || ((G = ee.palette) == null ? void 0 : G.mode), {
      mode: ie,
      setMode: F,
      systemMode: he,
      lightColorScheme: fe,
      darkColorScheme: Te,
      colorScheme: Le,
      setColorScheme: Ae
    } = Lw({
      supportedColorSchemes: de,
      defaultLightColorScheme: X,
      defaultDarkColorScheme: ae,
      modeStorageKey: S,
      colorSchemeStorageKey: v,
      defaultMode: Q,
      storageManager: R,
      storageWindow: k,
      noSsr: _
    });
    let Ie = ie, Re = Le;
    U && (Ie = Y.mode, Re = Y.colorScheme), process.env.NODE_ENV !== "production" && D && !ee.vars && console.warn(["MUI: The `forceThemeRerender` prop should only be used with CSS theme variables.", "Note that it will slow down the app when changing between modes, so only do this when you cannot find a better solution."].join(`
`));
    let Be = Re || ee.defaultColorScheme;
    ee.vars && !D && (Be = ee.defaultColorScheme);
    const Oe = C.useMemo(() => {
      var Z;
      const me = ((Z = ee.generateThemeVars) == null ? void 0 : Z.call(ee)) || ee.vars, re = {
        ...ee,
        components: oe,
        colorSchemes: K,
        cssVarPrefix: ne,
        vars: me
      };
      if (typeof re.generateSpacing == "function" && (re.spacing = re.generateSpacing()), Be) {
        const te = K[Be];
        te && typeof te == "object" && Object.keys(te).forEach((ye) => {
          te[ye] && typeof te[ye] == "object" ? re[ye] = {
            ...re[ye],
            ...te[ye]
          } : re[ye] = te[ye];
        });
      }
      return l ? l(re) : re;
    }, [ee, Be, oe, K, ne]), N = ee.colorSchemeSelector;
    fr(() => {
      if (Re && p && N && N !== "media") {
        const me = N;
        let re = N;
        if (me === "class" && (re = ".%s"), me === "data" && (re = "[data-%s]"), me != null && me.startsWith("data-") && !me.includes("%s") && (re = `[${me}="%s"]`), re.startsWith("."))
          p.classList.remove(...de.map((Z) => re.substring(1).replace("%s", Z))), p.classList.add(re.substring(1).replace("%s", Re));
        else {
          const Z = re.replace("%s", Re).match(/\[([^\]]+)\]/);
          if (Z) {
            const [te, ye] = Z[1].split("=");
            ye || de.forEach((Se) => {
              p.removeAttribute(te.replace(Re, Se));
            }), p.setAttribute(te, ye ? ye.replace(/"|'/g, "") : "");
          } else
            p.setAttribute(re, Re);
        }
      }
    }, [Re, N, p, de]), C.useEffect(() => {
      let me;
      if (T && M.current && I) {
        const re = I.createElement("style");
        re.appendChild(I.createTextNode(Vw)), I.head.appendChild(re), window.getComputedStyle(I.body), me = setTimeout(() => {
          I.head.removeChild(re);
        }, 1);
      }
      return () => {
        clearTimeout(me);
      };
    }, [Re, T, I]), C.useEffect(() => (M.current = !0, () => {
      M.current = !1;
    }), []);
    const q = C.useMemo(() => ({
      allColorSchemes: de,
      colorScheme: Re,
      darkColorScheme: Te,
      lightColorScheme: fe,
      mode: Ie,
      setColorScheme: Ae,
      setMode: process.env.NODE_ENV === "production" ? F : (me) => {
        Oe.colorSchemeSelector === "media" && console.error(["MUI: The `setMode` function has no effect if `colorSchemeSelector` is `media` (`media` is the default value).", "To toggle the mode manually, please configure `colorSchemeSelector` to use a class or data attribute.", "To learn more, visit https://mui.com/material-ui/customization/css-theme-variables/configuration/#toggling-dark-mode-manually"].join(`
`)), F(me);
      },
      systemMode: he
    }), [de, Re, Te, fe, Ie, Ae, F, he, Oe.colorSchemeSelector]);
    let J = !0;
    ($ || ee.cssVariables === !1 || U && (V == null ? void 0 : V.cssVarPrefix) === ne) && (J = !1);
    const H = /* @__PURE__ */ $e(C.Fragment, {
      children: [/* @__PURE__ */ P(Qi, {
        themeId: W ? t : void 0,
        theme: Oe,
        children: E
      }), J && /* @__PURE__ */ P(Lu, {
        styles: ((pe = Oe.generateStyleSheets) == null ? void 0 : pe.call(Oe)) || []
      })]
    });
    return U ? H : /* @__PURE__ */ P(u.Provider, {
      value: q,
      children: H
    });
  }
  process.env.NODE_ENV !== "production" && (g.propTypes = {
    /**
     * The component tree.
     */
    children: i.node,
    /**
     * The node used to attach the color-scheme attribute
     */
    colorSchemeNode: i.any,
    /**
     * localStorage key used to store `colorScheme`
     */
    colorSchemeStorageKey: i.string,
    /**
     * The default mode when the storage is empty,
     * require the theme to have `colorSchemes` with light and dark.
     */
    defaultMode: i.string,
    /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */
    disableNestedContext: i.bool,
    /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */
    disableStyleSheetGeneration: i.bool,
    /**
     * Disable CSS transitions when switching between modes or color schemes.
     */
    disableTransitionOnChange: i.bool,
    /**
     * The document to attach the attribute to.
     */
    documentNode: i.any,
    /**
     * If `true`, theme values are recalculated when the mode changes.
     */
    forceThemeRerender: i.bool,
    /**
     * The key in the local storage used to store current color scheme.
     */
    modeStorageKey: i.string,
    /**
     * If `true`, the mode will be the same value as the storage without an extra rerendering after the hydration.
     * You should use this option in conjuction with `InitColorSchemeScript` component.
     */
    noSsr: i.bool,
    /**
     * The storage manager to be used for storing the mode and color scheme
     * @default using `window.localStorage`
     */
    storageManager: i.func,
    /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */
    storageWindow: i.any,
    /**
     * The calculated theme object that will be passed through context.
     */
    theme: i.object
  });
  const y = typeof a == "string" ? a : a.light, m = typeof a == "string" ? a : a.dark;
  return {
    CssVarsProvider: g,
    useColorScheme: d,
    getInitColorSchemeScript: (x) => Dw({
      colorSchemeStorageKey: o,
      defaultLightColorScheme: y,
      defaultDarkColorScheme: m,
      modeStorageKey: r,
      ...x
    })
  };
}
function Ww(e = "") {
  function t(...r) {
    if (!r.length)
      return "";
    const o = r[0];
    return typeof o == "string" && !o.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${o}${t(...r.slice(1))})` : `, ${o}`;
  }
  return (r, ...o) => `var(--${e ? `${e}-` : ""}${r}${t(...o)})`;
}
const Yf = (e, t, n, r = []) => {
  let o = e;
  t.forEach((s, a) => {
    a === t.length - 1 ? Array.isArray(o) ? o[Number(s)] = n : o && typeof o == "object" && (o[s] = n) : o && typeof o == "object" && (o[s] || (o[s] = r.includes(s) ? [] : {}), o = o[s]);
  });
}, Uw = (e, t, n) => {
  function r(o, s = [], a = []) {
    Object.entries(o).forEach(([l, c]) => {
      (!n || n && !n([...s, l])) && c != null && (typeof c == "object" && Object.keys(c).length > 0 ? r(c, [...s, l], Array.isArray(c) ? [...a, l] : a) : t([...s, l], c, a));
    });
  }
  r(e);
}, Hw = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((r) => e.includes(r)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function Zl(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: r
  } = t || {}, o = {}, s = {}, a = {};
  return Uw(
    e,
    (l, c, u) => {
      if ((typeof c == "string" || typeof c == "number") && (!r || !r(l, c))) {
        const d = `--${n ? `${n}-` : ""}${l.join("-")}`, f = Hw(l, c);
        Object.assign(o, {
          [d]: f
        }), Yf(s, l, `var(${d})`, u), Yf(a, l, `var(${d}, ${f})`, u);
      }
    },
    (l) => l[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: o,
    vars: s,
    varsWithDefaults: a
  };
}
function qw(e, t = {}) {
  const {
    getSelector: n = b,
    disableCssColorScheme: r,
    colorSchemeSelector: o
  } = t, {
    colorSchemes: s = {},
    components: a,
    defaultColorScheme: l = "light",
    ...c
  } = e, {
    vars: u,
    css: d,
    varsWithDefaults: f
  } = Zl(c, t);
  let h = f;
  const g = {}, {
    [l]: y,
    ...m
  } = s;
  if (Object.entries(m || {}).forEach(([w, S]) => {
    const {
      vars: v,
      css: T,
      varsWithDefaults: R
    } = Zl(S, t);
    h = Tn(h, R), g[w] = {
      css: T,
      vars: v
    };
  }), y) {
    const {
      css: w,
      vars: S,
      varsWithDefaults: v
    } = Zl(y, t);
    h = Tn(h, v), g[l] = {
      css: w,
      vars: S
    };
  }
  function b(w, S) {
    var T, R;
    let v = o;
    if (o === "class" && (v = ".%s"), o === "data" && (v = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (v = `[${o}="%s"]`), w) {
      if (v === "media")
        return e.defaultColorScheme === w ? ":root" : {
          [`@media (prefers-color-scheme: ${((R = (T = s[w]) == null ? void 0 : T.palette) == null ? void 0 : R.mode) || w})`]: {
            ":root": S
          }
        };
      if (v)
        return e.defaultColorScheme === w ? `:root, ${v.replace("%s", String(w))}` : v.replace("%s", String(w));
    }
    return ":root";
  }
  return {
    vars: h,
    generateThemeVars: () => {
      let w = {
        ...u
      };
      return Object.entries(g).forEach(([, {
        vars: S
      }]) => {
        w = Tn(w, S);
      }), w;
    },
    generateStyleSheets: () => {
      var k, I;
      const w = [], S = e.defaultColorScheme || "light";
      function v(p, O) {
        Object.keys(O).length && w.push(typeof p == "string" ? {
          [p]: {
            ...O
          }
        } : p);
      }
      v(n(void 0, {
        ...d
      }), d);
      const {
        [S]: T,
        ...R
      } = g;
      if (T) {
        const {
          css: p
        } = T, O = (I = (k = s[S]) == null ? void 0 : k.palette) == null ? void 0 : I.mode, $ = !r && O ? {
          colorScheme: O,
          ...p
        } : {
          ...p
        };
        v(n(S, {
          ...$
        }), $);
      }
      return Object.entries(R).forEach(([p, {
        css: O
      }]) => {
        var D, _;
        const $ = (_ = (D = s[p]) == null ? void 0 : D.palette) == null ? void 0 : _.mode, A = !r && $ ? {
          colorScheme: $,
          ...O
        } : {
          ...O
        };
        v(n(p, {
          ...A
        }), A);
      }), w;
    }
  };
}
function Yw(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
const Gw = Za(), Kw = cw("div", {
  name: "MuiContainer",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`maxWidth${xe(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
  }
}), Xw = (e) => uw({
  props: e,
  name: "MuiContainer",
  defaultTheme: Gw
}), Qw = (e, t) => {
  const n = (c) => gt(t, c), {
    classes: r,
    fixed: o,
    disableGutters: s,
    maxWidth: a
  } = e, l = {
    root: ["root", a && `maxWidth${xe(String(a))}`, o && "fixed", s && "disableGutters"]
  };
  return Ct(l, n, r);
};
function Jw(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: t = Kw,
    useThemeProps: n = Xw,
    componentName: r = "MuiContainer"
  } = e, o = t(({
    theme: a,
    ownerState: l
  }) => ({
    width: "100%",
    marginLeft: "auto",
    boxSizing: "border-box",
    marginRight: "auto",
    ...!l.disableGutters && {
      paddingLeft: a.spacing(2),
      paddingRight: a.spacing(2),
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [a.breakpoints.up("sm")]: {
        paddingLeft: a.spacing(3),
        paddingRight: a.spacing(3)
      }
    }
  }), ({
    theme: a,
    ownerState: l
  }) => l.fixed && Object.keys(a.breakpoints.values).reduce((c, u) => {
    const d = u, f = a.breakpoints.values[d];
    return f !== 0 && (c[a.breakpoints.up(d)] = {
      maxWidth: `${f}${a.breakpoints.unit}`
    }), c;
  }, {}), ({
    theme: a,
    ownerState: l
  }) => ({
    // @ts-ignore module augmentation fails if custom breakpoints are used
    ...l.maxWidth === "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [a.breakpoints.up("xs")]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: Math.max(a.breakpoints.values.xs, 444)
      }
    },
    ...l.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used
    l.maxWidth !== "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [a.breakpoints.up(l.maxWidth)]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: `${a.breakpoints.values[l.maxWidth]}${a.breakpoints.unit}`
      }
    }
  })), s = /* @__PURE__ */ C.forwardRef(function(l, c) {
    const u = n(l), {
      className: d,
      component: f = "div",
      disableGutters: h = !1,
      fixed: g = !1,
      maxWidth: y = "lg",
      classes: m,
      ...b
    } = u, x = {
      ...u,
      component: f,
      disableGutters: h,
      fixed: g,
      maxWidth: y
    }, E = Qw(x, r);
    return (
      // @ts-ignore theme is injected by the styled util
      /* @__PURE__ */ P(o, {
        as: f,
        ownerState: x,
        className: Ee(E.root, d),
        ref: c,
        ...b
      })
    );
  });
  return process.env.NODE_ENV !== "production" && (s.propTypes = {
    children: i.node,
    classes: i.object,
    className: i.string,
    component: i.elementType,
    disableGutters: i.bool,
    fixed: i.bool,
    maxWidth: i.oneOfType([i.oneOf(["xs", "sm", "md", "lg", "xl", !1]), i.string]),
    sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
  }), s;
}
const Ji = {
  black: "#000",
  white: "#fff"
}, Zw = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, xo = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, wo = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, gi = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, So = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, To = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, Eo = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
};
function lg() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: Ji.white,
      default: Ji.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const eS = lg();
function cg() {
  return {
    text: {
      primary: Ji.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: Ji.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const Gf = cg();
function Kf(e, t, n, r) {
  const o = r.light || r, s = r.dark || r * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = ai(e.main, o) : t === "dark" && (e.dark = si(e.main, s)));
}
function tS(e = "light") {
  return e === "dark" ? {
    main: So[200],
    light: So[50],
    dark: So[400]
  } : {
    main: So[700],
    light: So[400],
    dark: So[800]
  };
}
function nS(e = "light") {
  return e === "dark" ? {
    main: xo[200],
    light: xo[50],
    dark: xo[400]
  } : {
    main: xo[500],
    light: xo[300],
    dark: xo[700]
  };
}
function rS(e = "light") {
  return e === "dark" ? {
    main: wo[500],
    light: wo[300],
    dark: wo[700]
  } : {
    main: wo[700],
    light: wo[400],
    dark: wo[800]
  };
}
function oS(e = "light") {
  return e === "dark" ? {
    main: To[400],
    light: To[300],
    dark: To[700]
  } : {
    main: To[700],
    light: To[500],
    dark: To[900]
  };
}
function iS(e = "light") {
  return e === "dark" ? {
    main: Eo[400],
    light: Eo[300],
    dark: Eo[700]
  } : {
    main: Eo[800],
    light: Eo[500],
    dark: Eo[900]
  };
}
function sS(e = "light") {
  return e === "dark" ? {
    main: gi[400],
    light: gi[300],
    dark: gi[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: gi[500],
    dark: gi[900]
  };
}
function Qu(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: r = 0.2,
    ...o
  } = e, s = e.primary || tS(t), a = e.secondary || nS(t), l = e.error || rS(t), c = e.info || oS(t), u = e.success || iS(t), d = e.warning || sS(t);
  function f(m) {
    const b = Ff(m, Gf.text.primary) >= n ? Gf.text.primary : eS.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const x = Ff(m, b);
      x < 3 && console.error([`MUI: The contrast ratio of ${x}:1 for ${b} on ${m}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return b;
  }
  const h = ({
    color: m,
    name: b,
    mainShade: x = 500,
    lightShade: E = 300,
    darkShade: w = 700
  }) => {
    if (m = {
      ...m
    }, !m.main && m[x] && (m.main = m[x]), !m.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${b ? ` (${b})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${x}\` property.` : Or(11, b ? ` (${b})` : "", x));
    if (typeof m.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${b ? ` (${b})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(m.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : Or(12, b ? ` (${b})` : "", JSON.stringify(m.main)));
    return Kf(m, "light", E, r), Kf(m, "dark", w, r), m.contrastText || (m.contrastText = f(m.main)), m;
  };
  let g;
  return t === "light" ? g = lg() : t === "dark" && (g = cg()), process.env.NODE_ENV !== "production" && (g || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), Tn({
    // A collection of common colors.
    common: {
      ...Ji
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: h({
      color: s,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: h({
      color: a,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: h({
      color: l,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: h({
      color: d,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: h({
      color: c,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: h({
      color: u,
      name: "success"
    }),
    // The grey colors.
    grey: Zw,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: f,
    // Generate a rich color object.
    augmentColor: h,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: r,
    // The light and dark mode object.
    ...g
  }, o);
}
function aS(e) {
  const t = {};
  return Object.entries(e).forEach((r) => {
    const [o, s] = r;
    typeof s == "object" && (t[o] = `${s.fontStyle ? `${s.fontStyle} ` : ""}${s.fontVariant ? `${s.fontVariant} ` : ""}${s.fontWeight ? `${s.fontWeight} ` : ""}${s.fontStretch ? `${s.fontStretch} ` : ""}${s.fontSize || ""}${s.lineHeight ? `/${s.lineHeight} ` : ""}${s.fontFamily || ""}`);
  }), t;
}
function lS(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function cS(e) {
  return Math.round(e * 1e5) / 1e5;
}
const Xf = {
  textTransform: "uppercase"
}, Qf = '"Roboto", "Helvetica", "Arial", sans-serif';
function ug(e, t) {
  const {
    fontFamily: n = Qf,
    // The default font size of the Material Specification.
    fontSize: r = 14,
    // px
    fontWeightLight: o = 300,
    fontWeightRegular: s = 400,
    fontWeightMedium: a = 500,
    fontWeightBold: l = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: c = 16,
    // Apply the CSS properties to all the variants.
    allVariants: u,
    pxToRem: d,
    ...f
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof r != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof c != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const h = r / 14, g = d || ((b) => `${b / c * h}rem`), y = (b, x, E, w, S) => ({
    fontFamily: n,
    fontWeight: b,
    fontSize: g(x),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: E,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === Qf ? {
      letterSpacing: `${cS(w / x)}em`
    } : {},
    ...S,
    ...u
  }), m = {
    h1: y(o, 96, 1.167, -1.5),
    h2: y(o, 60, 1.2, -0.5),
    h3: y(s, 48, 1.167, 0),
    h4: y(s, 34, 1.235, 0.25),
    h5: y(s, 24, 1.334, 0),
    h6: y(a, 20, 1.6, 0.15),
    subtitle1: y(s, 16, 1.75, 0.15),
    subtitle2: y(a, 14, 1.57, 0.1),
    body1: y(s, 16, 1.5, 0.15),
    body2: y(s, 14, 1.43, 0.15),
    button: y(a, 14, 1.75, 0.4, Xf),
    caption: y(s, 12, 1.66, 0.4),
    overline: y(s, 12, 2.66, 1, Xf),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return Tn({
    htmlFontSize: c,
    pxToRem: g,
    fontFamily: n,
    fontSize: r,
    fontWeightLight: o,
    fontWeightRegular: s,
    fontWeightMedium: a,
    fontWeightBold: l,
    ...m
  }, f, {
    clone: !1
    // No need to clone deep
  });
}
const uS = 0.2, dS = 0.14, fS = 0.12;
function bt(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${uS})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${dS})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${fS})`].join(",");
}
const pS = ["none", bt(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), bt(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), bt(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), bt(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), bt(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), bt(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), bt(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), bt(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), bt(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), bt(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), bt(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), bt(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), bt(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), bt(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), bt(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), bt(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), bt(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), bt(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), bt(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), bt(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), bt(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), bt(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), bt(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), bt(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], mS = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, hS = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function Jf(e) {
  return `${Math.round(e)}ms`;
}
function gS(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function yS(e) {
  const t = {
    ...mS,
    ...e.easing
  }, n = {
    ...hS,
    ...e.duration
  };
  return {
    getAutoHeightDuration: gS,
    create: (o = ["all"], s = {}) => {
      const {
        duration: a = n.standard,
        easing: l = t.easeInOut,
        delay: c = 0,
        ...u
      } = s;
      if (process.env.NODE_ENV !== "production") {
        const d = (h) => typeof h == "string", f = (h) => !Number.isNaN(parseFloat(h));
        !d(o) && !Array.isArray(o) && console.error('MUI: Argument "props" must be a string or Array.'), !f(a) && !d(a) && console.error(`MUI: Argument "duration" must be a number or a string but found ${a}.`), d(l) || console.error('MUI: Argument "easing" must be a string.'), !f(c) && !d(c) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof s != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(u).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(u).join(",")}].`);
      }
      return (Array.isArray(o) ? o : [o]).map((d) => `${d} ${typeof a == "string" ? a : Jf(a)} ${l} ${typeof c == "string" ? c : Jf(c)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const bS = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function vS(e) {
  return ir(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function dg(e = {}) {
  const t = {
    ...e
  };
  function n(r) {
    const o = Object.entries(r);
    for (let s = 0; s < o.length; s++) {
      const [a, l] = o[s];
      !vS(l) || a.startsWith("unstable_") ? delete r[a] : ir(l) && (r[a] = {
        ...l
      }, n(r[a]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function zc(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: r = {},
    spacing: o,
    palette: s = {},
    transitions: a = {},
    typography: l = {},
    shape: c,
    ...u
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : Or(20));
  const d = Qu(s), f = Za(e);
  let h = Tn(f, {
    mixins: lS(f.breakpoints, r),
    palette: d,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: pS.slice(),
    typography: ug(d, l),
    transitions: yS(a),
    zIndex: {
      ...bS
    }
  });
  if (h = Tn(h, u), h = t.reduce((g, y) => Tn(g, y), h), process.env.NODE_ENV !== "production") {
    const g = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], y = (m, b) => {
      let x;
      for (x in m) {
        const E = m[x];
        if (g.includes(x) && Object.keys(E).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const w = gt("", x);
            console.error([`MUI: The \`${b}\` component increases the CSS specificity of the \`${x}\` internal state.`, "You can not override it like this: ", JSON.stringify(m, null, 2), "", `Instead, you need to use the '&.${w}' syntax:`, JSON.stringify({
              root: {
                [`&.${w}`]: E
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          m[x] = {};
        }
      }
    };
    Object.keys(h.components).forEach((m) => {
      const b = h.components[m].styleOverrides;
      b && m.startsWith("Mui") && y(b, m);
    });
  }
  return h.unstable_sxConfig = {
    ...fs,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, h.unstable_sx = function(y) {
    return Vr({
      sx: y,
      theme: this
    });
  }, h.toRuntimeSource = dg, h;
}
function Wc(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const xS = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = Wc(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function fg(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function pg(e) {
  return e === "dark" ? xS : [];
}
function wS(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: r,
    ...o
  } = e, s = Qu(t);
  return {
    palette: s,
    opacity: {
      ...fg(s.mode),
      ...n
    },
    overlays: r || pg(s.mode),
    ...o
  };
}
function SS(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const TS = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], ES = (e) => (t, n) => {
  const r = e.rootSelector || ":root", o = e.colorSchemeSelector;
  let s = o;
  if (o === "class" && (s = ".%s"), o === "data" && (s = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (s = `[${o}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const a = {};
      return TS(e.cssVarPrefix).forEach((l) => {
        a[l] = n[l], delete n[l];
      }), s === "media" ? {
        [r]: n,
        "@media (prefers-color-scheme: dark)": {
          [r]: a
        }
      } : s ? {
        [s.replace("%s", t)]: a,
        [`${r}, ${s.replace("%s", t)}`]: n
      } : {
        [r]: {
          ...n,
          ...a
        }
      };
    }
    if (s && s !== "media")
      return `${r}, ${s.replace("%s", String(t))}`;
  } else if (t) {
    if (s === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [r]: n
        }
      };
    if (s)
      return s.replace("%s", String(t));
  }
  return r;
};
function CS(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function ce(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function Pi(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : Uh(e);
}
function wr(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = $i(Pi(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function OS(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const Qn = (e) => {
  try {
    return e();
  } catch {
  }
}, RS = (e = "mui") => Ww(e);
function ec(e, t, n, r) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const o = r === "dark" ? "dark" : "light";
  if (!n) {
    e[r] = wS({
      ...t,
      palette: {
        mode: o,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: s,
    ...a
  } = zc({
    ...n,
    palette: {
      mode: o,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[r] = {
    ...t,
    palette: s,
    opacity: {
      ...fg(o),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || pg(o)
  }, a;
}
function kS(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: r,
    disableCssColorScheme: o = !1,
    cssVarPrefix: s = "mui",
    shouldSkipGeneratingVar: a = SS,
    colorSchemeSelector: l = n.light && n.dark ? "media" : void 0,
    rootSelector: c = ":root",
    ...u
  } = e, d = Object.keys(n)[0], f = r || (n.light && d !== "light" ? "light" : d), h = RS(s), {
    [f]: g,
    light: y,
    dark: m,
    ...b
  } = n, x = {
    ...b
  };
  let E = g;
  if ((f === "dark" && !("dark" in n) || f === "light" && !("light" in n)) && (E = !0), !E)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${f}\` option is either missing or invalid.` : Or(21, f));
  const w = ec(x, E, u, f);
  y && !x.light && ec(x, y, void 0, "light"), m && !x.dark && ec(x, m, void 0, "dark");
  let S = {
    defaultColorScheme: f,
    ...w,
    cssVarPrefix: s,
    colorSchemeSelector: l,
    rootSelector: c,
    getCssVar: h,
    colorSchemes: x,
    font: {
      ...aS(w.typography),
      ...w.font
    },
    spacing: OS(u.spacing)
  };
  Object.keys(S.colorSchemes).forEach((I) => {
    const p = S.colorSchemes[I].palette, O = ($) => {
      const A = $.split("-"), D = A[1], _ = A[2];
      return h($, p[D][_]);
    };
    if (p.mode === "light" && (ce(p.common, "background", "#fff"), ce(p.common, "onBackground", "#000")), p.mode === "dark" && (ce(p.common, "background", "#000"), ce(p.common, "onBackground", "#fff")), CS(p, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), p.mode === "light") {
      ce(p.Alert, "errorColor", lt(p.error.light, 0.6)), ce(p.Alert, "infoColor", lt(p.info.light, 0.6)), ce(p.Alert, "successColor", lt(p.success.light, 0.6)), ce(p.Alert, "warningColor", lt(p.warning.light, 0.6)), ce(p.Alert, "errorFilledBg", O("palette-error-main")), ce(p.Alert, "infoFilledBg", O("palette-info-main")), ce(p.Alert, "successFilledBg", O("palette-success-main")), ce(p.Alert, "warningFilledBg", O("palette-warning-main")), ce(p.Alert, "errorFilledColor", Qn(() => p.getContrastText(p.error.main))), ce(p.Alert, "infoFilledColor", Qn(() => p.getContrastText(p.info.main))), ce(p.Alert, "successFilledColor", Qn(() => p.getContrastText(p.success.main))), ce(p.Alert, "warningFilledColor", Qn(() => p.getContrastText(p.warning.main))), ce(p.Alert, "errorStandardBg", ct(p.error.light, 0.9)), ce(p.Alert, "infoStandardBg", ct(p.info.light, 0.9)), ce(p.Alert, "successStandardBg", ct(p.success.light, 0.9)), ce(p.Alert, "warningStandardBg", ct(p.warning.light, 0.9)), ce(p.Alert, "errorIconColor", O("palette-error-main")), ce(p.Alert, "infoIconColor", O("palette-info-main")), ce(p.Alert, "successIconColor", O("palette-success-main")), ce(p.Alert, "warningIconColor", O("palette-warning-main")), ce(p.AppBar, "defaultBg", O("palette-grey-100")), ce(p.Avatar, "defaultBg", O("palette-grey-400")), ce(p.Button, "inheritContainedBg", O("palette-grey-300")), ce(p.Button, "inheritContainedHoverBg", O("palette-grey-A100")), ce(p.Chip, "defaultBorder", O("palette-grey-400")), ce(p.Chip, "defaultAvatarColor", O("palette-grey-700")), ce(p.Chip, "defaultIconColor", O("palette-grey-700")), ce(p.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), ce(p.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), ce(p.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), ce(p.LinearProgress, "primaryBg", ct(p.primary.main, 0.62)), ce(p.LinearProgress, "secondaryBg", ct(p.secondary.main, 0.62)), ce(p.LinearProgress, "errorBg", ct(p.error.main, 0.62)), ce(p.LinearProgress, "infoBg", ct(p.info.main, 0.62)), ce(p.LinearProgress, "successBg", ct(p.success.main, 0.62)), ce(p.LinearProgress, "warningBg", ct(p.warning.main, 0.62)), ce(p.Skeleton, "bg", `rgba(${O("palette-text-primaryChannel")} / 0.11)`), ce(p.Slider, "primaryTrack", ct(p.primary.main, 0.62)), ce(p.Slider, "secondaryTrack", ct(p.secondary.main, 0.62)), ce(p.Slider, "errorTrack", ct(p.error.main, 0.62)), ce(p.Slider, "infoTrack", ct(p.info.main, 0.62)), ce(p.Slider, "successTrack", ct(p.success.main, 0.62)), ce(p.Slider, "warningTrack", ct(p.warning.main, 0.62));
      const $ = _s(p.background.default, 0.8);
      ce(p.SnackbarContent, "bg", $), ce(p.SnackbarContent, "color", Qn(() => p.getContrastText($))), ce(p.SpeedDialAction, "fabHoverBg", _s(p.background.paper, 0.15)), ce(p.StepConnector, "border", O("palette-grey-400")), ce(p.StepContent, "border", O("palette-grey-400")), ce(p.Switch, "defaultColor", O("palette-common-white")), ce(p.Switch, "defaultDisabledColor", O("palette-grey-100")), ce(p.Switch, "primaryDisabledColor", ct(p.primary.main, 0.62)), ce(p.Switch, "secondaryDisabledColor", ct(p.secondary.main, 0.62)), ce(p.Switch, "errorDisabledColor", ct(p.error.main, 0.62)), ce(p.Switch, "infoDisabledColor", ct(p.info.main, 0.62)), ce(p.Switch, "successDisabledColor", ct(p.success.main, 0.62)), ce(p.Switch, "warningDisabledColor", ct(p.warning.main, 0.62)), ce(p.TableCell, "border", ct(Ms(p.divider, 1), 0.88)), ce(p.Tooltip, "bg", Ms(p.grey[700], 0.92));
    }
    if (p.mode === "dark") {
      ce(p.Alert, "errorColor", ct(p.error.light, 0.6)), ce(p.Alert, "infoColor", ct(p.info.light, 0.6)), ce(p.Alert, "successColor", ct(p.success.light, 0.6)), ce(p.Alert, "warningColor", ct(p.warning.light, 0.6)), ce(p.Alert, "errorFilledBg", O("palette-error-dark")), ce(p.Alert, "infoFilledBg", O("palette-info-dark")), ce(p.Alert, "successFilledBg", O("palette-success-dark")), ce(p.Alert, "warningFilledBg", O("palette-warning-dark")), ce(p.Alert, "errorFilledColor", Qn(() => p.getContrastText(p.error.dark))), ce(p.Alert, "infoFilledColor", Qn(() => p.getContrastText(p.info.dark))), ce(p.Alert, "successFilledColor", Qn(() => p.getContrastText(p.success.dark))), ce(p.Alert, "warningFilledColor", Qn(() => p.getContrastText(p.warning.dark))), ce(p.Alert, "errorStandardBg", lt(p.error.light, 0.9)), ce(p.Alert, "infoStandardBg", lt(p.info.light, 0.9)), ce(p.Alert, "successStandardBg", lt(p.success.light, 0.9)), ce(p.Alert, "warningStandardBg", lt(p.warning.light, 0.9)), ce(p.Alert, "errorIconColor", O("palette-error-main")), ce(p.Alert, "infoIconColor", O("palette-info-main")), ce(p.Alert, "successIconColor", O("palette-success-main")), ce(p.Alert, "warningIconColor", O("palette-warning-main")), ce(p.AppBar, "defaultBg", O("palette-grey-900")), ce(p.AppBar, "darkBg", O("palette-background-paper")), ce(p.AppBar, "darkColor", O("palette-text-primary")), ce(p.Avatar, "defaultBg", O("palette-grey-600")), ce(p.Button, "inheritContainedBg", O("palette-grey-800")), ce(p.Button, "inheritContainedHoverBg", O("palette-grey-700")), ce(p.Chip, "defaultBorder", O("palette-grey-700")), ce(p.Chip, "defaultAvatarColor", O("palette-grey-300")), ce(p.Chip, "defaultIconColor", O("palette-grey-300")), ce(p.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), ce(p.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), ce(p.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), ce(p.LinearProgress, "primaryBg", lt(p.primary.main, 0.5)), ce(p.LinearProgress, "secondaryBg", lt(p.secondary.main, 0.5)), ce(p.LinearProgress, "errorBg", lt(p.error.main, 0.5)), ce(p.LinearProgress, "infoBg", lt(p.info.main, 0.5)), ce(p.LinearProgress, "successBg", lt(p.success.main, 0.5)), ce(p.LinearProgress, "warningBg", lt(p.warning.main, 0.5)), ce(p.Skeleton, "bg", `rgba(${O("palette-text-primaryChannel")} / 0.13)`), ce(p.Slider, "primaryTrack", lt(p.primary.main, 0.5)), ce(p.Slider, "secondaryTrack", lt(p.secondary.main, 0.5)), ce(p.Slider, "errorTrack", lt(p.error.main, 0.5)), ce(p.Slider, "infoTrack", lt(p.info.main, 0.5)), ce(p.Slider, "successTrack", lt(p.success.main, 0.5)), ce(p.Slider, "warningTrack", lt(p.warning.main, 0.5));
      const $ = _s(p.background.default, 0.98);
      ce(p.SnackbarContent, "bg", $), ce(p.SnackbarContent, "color", Qn(() => p.getContrastText($))), ce(p.SpeedDialAction, "fabHoverBg", _s(p.background.paper, 0.15)), ce(p.StepConnector, "border", O("palette-grey-600")), ce(p.StepContent, "border", O("palette-grey-600")), ce(p.Switch, "defaultColor", O("palette-grey-300")), ce(p.Switch, "defaultDisabledColor", O("palette-grey-600")), ce(p.Switch, "primaryDisabledColor", lt(p.primary.main, 0.55)), ce(p.Switch, "secondaryDisabledColor", lt(p.secondary.main, 0.55)), ce(p.Switch, "errorDisabledColor", lt(p.error.main, 0.55)), ce(p.Switch, "infoDisabledColor", lt(p.info.main, 0.55)), ce(p.Switch, "successDisabledColor", lt(p.success.main, 0.55)), ce(p.Switch, "warningDisabledColor", lt(p.warning.main, 0.55)), ce(p.TableCell, "border", lt(Ms(p.divider, 1), 0.68)), ce(p.Tooltip, "bg", Ms(p.grey[700], 0.92));
    }
    wr(p.background, "default"), wr(p.background, "paper"), wr(p.common, "background"), wr(p.common, "onBackground"), wr(p, "divider"), Object.keys(p).forEach(($) => {
      const A = p[$];
      $ !== "tonalOffset" && A && typeof A == "object" && (A.main && ce(p[$], "mainChannel", $i(Pi(A.main))), A.light && ce(p[$], "lightChannel", $i(Pi(A.light))), A.dark && ce(p[$], "darkChannel", $i(Pi(A.dark))), A.contrastText && ce(p[$], "contrastTextChannel", $i(Pi(A.contrastText))), $ === "text" && (wr(p[$], "primary"), wr(p[$], "secondary")), $ === "action" && (A.active && wr(p[$], "active"), A.selected && wr(p[$], "selected")));
    });
  }), S = t.reduce((I, p) => Tn(I, p), S);
  const v = {
    prefix: s,
    disableCssColorScheme: o,
    shouldSkipGeneratingVar: a,
    getSelector: ES(S)
  }, {
    vars: T,
    generateThemeVars: R,
    generateStyleSheets: k
  } = qw(S, v);
  return S.vars = T, Object.entries(S.colorSchemes[S.defaultColorScheme]).forEach(([I, p]) => {
    S[I] = p;
  }), S.generateThemeVars = R, S.generateStyleSheets = k, S.generateSpacing = function() {
    return Ah(u.spacing, Iu(this));
  }, S.getColorSchemeSelector = Yw(l), S.spacing = S.generateSpacing(), S.shouldSkipGeneratingVar = a, S.unstable_sxConfig = {
    ...fs,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, S.unstable_sx = function(p) {
    return Vr({
      sx: p,
      theme: this
    });
  }, S.toRuntimeSource = dg, S;
}
function Zf(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: Qu({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function rl(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: r = !1,
    colorSchemes: o = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: s = n == null ? void 0 : n.mode,
    ...a
  } = e, l = s || "light", c = o == null ? void 0 : o[l], u = {
    ...o,
    ...n ? {
      [l]: {
        ...typeof c != "boolean" && c,
        palette: n
      }
    } : void 0
  };
  if (r === !1) {
    if (!("colorSchemes" in e))
      return zc(e, ...t);
    let d = n;
    "palette" in e || u[l] && (u[l] !== !0 ? d = u[l].palette : l === "dark" && (d = {
      mode: "dark"
    }));
    const f = zc({
      ...e,
      palette: d
    }, ...t);
    return f.defaultColorScheme = l, f.colorSchemes = u, f.palette.mode === "light" && (f.colorSchemes.light = {
      ...u.light !== !0 && u.light,
      palette: f.palette
    }, Zf(f, "dark", u.dark)), f.palette.mode === "dark" && (f.colorSchemes.dark = {
      ...u.dark !== !0 && u.dark,
      palette: f.palette
    }, Zf(f, "light", u.light)), f;
  }
  return !n && !("light" in u) && l === "light" && (u.light = !0), kS({
    ...a,
    colorSchemes: u,
    defaultColorScheme: l,
    ...typeof r != "boolean" && r
  }, ...t);
}
const Ju = rl(), qn = "$$material";
function Mr() {
  const e = el(Ju);
  return process.env.NODE_ENV !== "production" && C.useDebugValue(e), e[qn] || e;
}
function mg(e) {
  return /* @__PURE__ */ P(Mh, {
    ...e,
    defaultTheme: Ju,
    themeId: qn
  });
}
process.env.NODE_ENV !== "production" && (mg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: i.oneOfType([i.array, i.func, i.number, i.object, i.string, i.bool])
});
function $S(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const br = (e) => $S(e) && e !== "classes", Pe = jh({
  themeId: qn,
  defaultTheme: Ju,
  rootShouldForwardProp: br
});
function Zu(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ P(mg, {
        styles: typeof e == "function" ? (r) => e({
          theme: r,
          ...n
        }) : e
      })
    );
  };
}
function PS() {
  return yh;
}
const Ke = Mw;
process.env.NODE_ENV !== "production" && (i.node, i.object.isRequired);
function St(e) {
  return Aw(e);
}
function IS(e) {
  return gt("MuiSvgIcon", e);
}
wt("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const NS = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: r
  } = e, o = {
    root: ["root", t !== "inherit" && `color${xe(t)}`, `fontSize${xe(n)}`]
  };
  return Ct(o, IS, r);
}, AS = Pe("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${xe(n.color)}`], t[`fontSize${xe(n.fontSize)}`]];
  }
})(Ke(({
  theme: e
}) => {
  var t, n, r, o, s, a, l, c, u, d, f, h, g, y;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (o = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : o.call(t, "fill", {
      duration: (r = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : r.shorter
    }),
    variants: [
      {
        props: (m) => !m.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((a = (s = e.typography) == null ? void 0 : s.pxToRem) == null ? void 0 : a.call(s, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((c = (l = e.typography) == null ? void 0 : l.pxToRem) == null ? void 0 : c.call(l, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((d = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : d.call(u, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, m]) => m && m.main).map(([m]) => {
        var b, x;
        return {
          props: {
            color: m
          },
          style: {
            color: (x = (b = (e.vars ?? e).palette) == null ? void 0 : b[m]) == null ? void 0 : x.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (h = (f = (e.vars ?? e).palette) == null ? void 0 : f.action) == null ? void 0 : h.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (y = (g = (e.vars ?? e).palette) == null ? void 0 : g.action) == null ? void 0 : y.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), Uo = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = St({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: o,
    className: s,
    color: a = "inherit",
    component: l = "svg",
    fontSize: c = "medium",
    htmlColor: u,
    inheritViewBox: d = !1,
    titleAccess: f,
    viewBox: h = "0 0 24 24",
    ...g
  } = r, y = /* @__PURE__ */ C.isValidElement(o) && o.type === "svg", m = {
    ...r,
    color: a,
    component: l,
    fontSize: c,
    instanceFontSize: t.fontSize,
    inheritViewBox: d,
    viewBox: h,
    hasSvgAsChild: y
  }, b = {};
  d || (b.viewBox = h);
  const x = NS(m);
  return /* @__PURE__ */ $e(AS, {
    as: l,
    className: Ee(x.root, s),
    focusable: "false",
    color: u,
    "aria-hidden": f ? void 0 : !0,
    role: f ? "img" : void 0,
    ref: n,
    ...b,
    ...g,
    ...y && o.props,
    ownerState: m,
    children: [y ? o.props.children : o, f ? /* @__PURE__ */ P("title", {
      children: f
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (Uo.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: i.oneOfType([i.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: i.oneOfType([i.oneOf(["inherit", "large", "medium", "small"]), i.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: i.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: i.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: i.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: i.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: i.string
});
Uo.muiName = "SvgIcon";
function li(e, t) {
  function n(r, o) {
    return /* @__PURE__ */ P(Uo, {
      "data-testid": process.env.NODE_ENV !== "production" ? `${t}Icon` : void 0,
      ref: o,
      ...r,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = Uo.muiName, /* @__PURE__ */ C.memo(/* @__PURE__ */ C.forwardRef(n));
}
const MS = li(/* @__PURE__ */ P("path", {
  d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
}), "Person");
function _S(e) {
  return gt("MuiAvatar", e);
}
wt("MuiAvatar", ["root", "colorDefault", "circular", "rounded", "square", "img", "fallback"]);
function at(e, t) {
  const {
    className: n,
    elementType: r,
    ownerState: o,
    externalForwardedProps: s,
    internalForwardedProps: a,
    shouldForwardComponentProp: l = !1,
    ...c
  } = t, {
    component: u,
    slots: d = {
      [e]: void 0
    },
    slotProps: f = {
      [e]: void 0
    },
    ...h
  } = s, g = d[e] || r, y = ng(f[e], o), {
    props: {
      component: m,
      ...b
    },
    internalRef: x
  } = tg({
    className: n,
    ...c,
    externalForwardedProps: e === "root" ? h : void 0,
    externalSlotProps: y
  }), E = rn(x, y == null ? void 0 : y.ref, t.ref), w = e === "root" ? m || u : m, S = Zh(g, {
    ...e === "root" && !u && !d[e] && a,
    ...e !== "root" && !d[e] && a,
    ...b,
    ...w && !l && {
      as: w
    },
    ...w && l && {
      component: w
    },
    ref: E
  }, o);
  return [g, S];
}
const DS = (e) => {
  const {
    classes: t,
    variant: n,
    colorDefault: r
  } = e;
  return Ct({
    root: ["root", n, r && "colorDefault"],
    img: ["img"],
    fallback: ["fallback"]
  }, _S, t);
}, BS = Pe("div", {
  name: "MuiAvatar",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], n.colorDefault && t.colorDefault];
  }
})(Ke(({
  theme: e
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  flexShrink: 0,
  width: 40,
  height: 40,
  fontFamily: e.typography.fontFamily,
  fontSize: e.typography.pxToRem(20),
  lineHeight: 1,
  borderRadius: "50%",
  overflow: "hidden",
  userSelect: "none",
  variants: [{
    props: {
      variant: "rounded"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius
    }
  }, {
    props: {
      variant: "square"
    },
    style: {
      borderRadius: 0
    }
  }, {
    props: {
      colorDefault: !0
    },
    style: {
      color: (e.vars || e).palette.background.default,
      ...e.vars ? {
        backgroundColor: e.vars.palette.Avatar.defaultBg
      } : {
        backgroundColor: e.palette.grey[400],
        ...e.applyStyles("dark", {
          backgroundColor: e.palette.grey[600]
        })
      }
    }
  }]
}))), FS = Pe("img", {
  name: "MuiAvatar",
  slot: "Img",
  overridesResolver: (e, t) => t.img
})({
  width: "100%",
  height: "100%",
  textAlign: "center",
  // Handle non-square image.
  objectFit: "cover",
  // Hide alt text.
  color: "transparent",
  // Hide the image broken icon, only works on Chrome.
  textIndent: 1e4
}), jS = Pe(MS, {
  name: "MuiAvatar",
  slot: "Fallback",
  overridesResolver: (e, t) => t.fallback
})({
  width: "75%",
  height: "75%"
});
function LS({
  crossOrigin: e,
  referrerPolicy: t,
  src: n,
  srcSet: r
}) {
  const [o, s] = C.useState(!1);
  return C.useEffect(() => {
    if (!n && !r)
      return;
    s(!1);
    let a = !0;
    const l = new Image();
    return l.onload = () => {
      a && s("loaded");
    }, l.onerror = () => {
      a && s("error");
    }, l.crossOrigin = e, l.referrerPolicy = t, l.src = n, r && (l.srcset = r), () => {
      a = !1;
    };
  }, [e, t, n, r]), o;
}
const hg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = St({
    props: t,
    name: "MuiAvatar"
  }), {
    alt: o,
    children: s,
    className: a,
    component: l = "div",
    slots: c = {},
    slotProps: u = {},
    imgProps: d,
    sizes: f,
    src: h,
    srcSet: g,
    variant: y = "circular",
    ...m
  } = r;
  let b = null;
  const x = {
    ...r,
    component: l,
    variant: y
  }, E = LS({
    ...d,
    ...typeof u.img == "function" ? u.img(x) : u.img,
    src: h,
    srcSet: g
  }), w = h || g, S = w && E !== "error";
  x.colorDefault = !S, delete x.ownerState;
  const v = DS(x), [T, R] = at("img", {
    className: v.img,
    elementType: FS,
    externalForwardedProps: {
      slots: c,
      slotProps: {
        img: {
          ...d,
          ...u.img
        }
      }
    },
    additionalProps: {
      alt: o,
      src: h,
      srcSet: g,
      sizes: f
    },
    ownerState: x
  });
  return S ? b = /* @__PURE__ */ P(T, {
    ...R
  }) : s || s === 0 ? b = s : w && o ? b = o[0] : b = /* @__PURE__ */ P(jS, {
    ownerState: x,
    className: v.fallback
  }), /* @__PURE__ */ P(BS, {
    as: l,
    className: Ee(v.root, a),
    ref: n,
    ...m,
    ownerState: x,
    children: b
  });
});
process.env.NODE_ENV !== "production" && (hg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Used in combination with `src` or `srcSet` to
   * provide an alt attribute for the rendered `img` element.
   */
  alt: i.string,
  /**
   * Used to render icon or text elements inside the Avatar if `src` is not set.
   * This can be an element, or just a string.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.
   * It can be used to listen for the loading error event.
   * @deprecated Use `slotProps.img` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  imgProps: i.object,
  /**
   * The `sizes` attribute for the `img` element.
   */
  sizes: i.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    img: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    img: i.elementType
  }),
  /**
   * The `src` attribute for the `img` element.
   */
  src: i.string,
  /**
   * The `srcSet` attribute for the `img` element.
   * Use this attribute for responsive image display.
   */
  srcSet: i.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The shape of the avatar.
   * @default 'circular'
   */
  variant: i.oneOfType([i.oneOf(["circular", "rounded", "square"]), i.string])
});
function VS(e) {
  const {
    badgeContent: t,
    invisible: n = !1,
    max: r = 99,
    showZero: o = !1
  } = e, s = Xh({
    badgeContent: t,
    max: r
  });
  let a = n;
  n === !1 && t === 0 && !o && (a = !0);
  const {
    badgeContent: l,
    max: c = r
  } = a ? s : e, u = l && Number(l) > c ? `${c}+` : l;
  return {
    badgeContent: l,
    invisible: a,
    max: c,
    displayValue: u
  };
}
function zS(e) {
  return typeof e.main == "string";
}
function WS(e, t = []) {
  if (!zS(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function un(e = []) {
  return ([, t]) => t && WS(t, e);
}
function US(e) {
  return gt("MuiBadge", e);
}
const Dr = wt("MuiBadge", [
  "root",
  "badge",
  "dot",
  "standard",
  "anchorOriginTopRight",
  "anchorOriginBottomRight",
  "anchorOriginTopLeft",
  "anchorOriginBottomLeft",
  "invisible",
  "colorError",
  "colorInfo",
  "colorPrimary",
  "colorSecondary",
  "colorSuccess",
  "colorWarning",
  "overlapRectangular",
  "overlapCircular",
  // TODO: v6 remove the overlap value from these class keys
  "anchorOriginTopLeftCircular",
  "anchorOriginTopLeftRectangular",
  "anchorOriginTopRightCircular",
  "anchorOriginTopRightRectangular",
  "anchorOriginBottomLeftCircular",
  "anchorOriginBottomLeftRectangular",
  "anchorOriginBottomRightCircular",
  "anchorOriginBottomRightRectangular"
]), tc = 10, nc = 4, HS = (e) => {
  const {
    color: t,
    anchorOrigin: n,
    invisible: r,
    overlap: o,
    variant: s,
    classes: a = {}
  } = e, l = {
    root: ["root"],
    badge: ["badge", s, r && "invisible", `anchorOrigin${xe(n.vertical)}${xe(n.horizontal)}`, `anchorOrigin${xe(n.vertical)}${xe(n.horizontal)}${xe(o)}`, `overlap${xe(o)}`, t !== "default" && `color${xe(t)}`]
  };
  return Ct(l, US, a);
}, qS = Pe("span", {
  name: "MuiBadge",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  position: "relative",
  display: "inline-flex",
  // For correct alignment with the text.
  verticalAlign: "middle",
  flexShrink: 0
}), YS = Pe("span", {
  name: "MuiBadge",
  slot: "Badge",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.badge, t[n.variant], t[`anchorOrigin${xe(n.anchorOrigin.vertical)}${xe(n.anchorOrigin.horizontal)}${xe(n.overlap)}`], n.color !== "default" && t[`color${xe(n.color)}`], n.invisible && t.invisible];
  }
})(Ke(({
  theme: e
}) => ({
  display: "flex",
  flexDirection: "row",
  flexWrap: "wrap",
  justifyContent: "center",
  alignContent: "center",
  alignItems: "center",
  position: "absolute",
  boxSizing: "border-box",
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(12),
  minWidth: tc * 2,
  lineHeight: 1,
  padding: "0 6px",
  height: tc * 2,
  borderRadius: tc,
  zIndex: 1,
  // Render the badge on top of potential ripples.
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeInOut,
    duration: e.transitions.duration.enteringScreen
  }),
  variants: [...Object.entries(e.palette).filter(un(["contrastText"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main,
      color: (e.vars || e).palette[t].contrastText
    }
  })), {
    props: {
      variant: "dot"
    },
    style: {
      borderRadius: nc,
      height: nc * 2,
      minWidth: nc * 2,
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      top: 0,
      right: 0,
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${Dr.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      right: 0,
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${Dr.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      top: 0,
      left: 0,
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${Dr.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      left: 0,
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${Dr.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      top: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${Dr.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      bottom: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${Dr.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      top: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${Dr.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      bottom: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${Dr.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: {
      invisible: !0
    },
    style: {
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeInOut,
        duration: e.transitions.duration.leavingScreen
      })
    }
  }]
})));
function ep(e) {
  return {
    vertical: (e == null ? void 0 : e.vertical) ?? "top",
    horizontal: (e == null ? void 0 : e.horizontal) ?? "right"
  };
}
const ol = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = St({
    props: t,
    name: "MuiBadge"
  }), {
    anchorOrigin: o,
    className: s,
    classes: a,
    component: l,
    components: c = {},
    componentsProps: u = {},
    children: d,
    overlap: f = "rectangular",
    color: h = "default",
    invisible: g = !1,
    max: y = 99,
    badgeContent: m,
    slots: b,
    slotProps: x,
    showZero: E = !1,
    variant: w = "standard",
    ...S
  } = r, {
    badgeContent: v,
    invisible: T,
    max: R,
    displayValue: k
  } = VS({
    max: y,
    invisible: g,
    badgeContent: m,
    showZero: E
  }), I = Xh({
    anchorOrigin: ep(o),
    color: h,
    overlap: f,
    variant: w,
    badgeContent: m
  }), p = T || v == null && w !== "dot", {
    color: O = h,
    overlap: $ = f,
    anchorOrigin: A,
    variant: D = w
  } = p ? I : r, _ = ep(A), M = D !== "dot" ? k : void 0, V = {
    ...r,
    badgeContent: v,
    invisible: p,
    max: R,
    displayValue: M,
    showZero: E,
    anchorOrigin: _,
    color: O,
    overlap: $,
    variant: D
  }, Y = HS(V), U = (b == null ? void 0 : b.root) ?? c.Root ?? qS, j = (b == null ? void 0 : b.badge) ?? c.Badge ?? YS, W = (x == null ? void 0 : x.root) ?? u.root, ee = (x == null ? void 0 : x.badge) ?? u.badge, K = Vc({
    elementType: U,
    externalSlotProps: W,
    externalForwardedProps: S,
    additionalProps: {
      ref: n,
      as: l
    },
    ownerState: V,
    className: Ee(W == null ? void 0 : W.className, Y.root, s)
  }), oe = Vc({
    elementType: j,
    externalSlotProps: ee,
    ownerState: V,
    className: Ee(Y.badge, ee == null ? void 0 : ee.className)
  });
  return /* @__PURE__ */ $e(U, {
    ...K,
    children: [d, /* @__PURE__ */ P(j, {
      ...oe,
      children: M
    })]
  });
});
process.env.NODE_ENV !== "production" && (ol.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The anchor of the badge.
   * @default {
   *   vertical: 'top',
   *   horizontal: 'right',
   * }
   */
  anchorOrigin: i.shape({
    horizontal: i.oneOf(["left", "right"]),
    vertical: i.oneOf(["bottom", "top"])
  }),
  /**
   * The content rendered within the badge.
   */
  badgeContent: i.node,
  /**
   * The badge will be added relative to this node.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Badge: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    badge: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * If `true`, the badge is invisible.
   * @default false
   */
  invisible: i.bool,
  /**
   * Max count to show.
   * @default 99
   */
  max: i.number,
  /**
   * Wrapped shape the badge should overlap.
   * @default 'rectangular'
   */
  overlap: i.oneOf(["circular", "rectangular"]),
  /**
   * Controls whether the badge is hidden when `badgeContent` is zero.
   * @default false
   */
  showZero: i.bool,
  /**
   * The props used for each slot inside the Badge.
   * @default {}
   */
  slotProps: i.shape({
    badge: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Badge.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    badge: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: i.oneOfType([i.oneOf(["dot", "standard"]), i.string])
});
function ed({ position: e, color: t }) {
  const n = cn(() => {
    switch (e) {
      case "top-left":
        return {
          vertical: "top",
          horizontal: "left",
          transform: "translate(-2px, -2px)"
        };
      case "bottom-left":
        return {
          vertical: "bottom",
          horizontal: "left",
          transform: "translate(-2px, 2px)"
        };
      case "bottom-right":
        return {
          vertical: "bottom",
          horizontal: "right",
          transform: "translate(2px, 2px)"
        };
      case "top-right":
      default:
        return {
          vertical: "top",
          horizontal: "right",
          transform: "translate(2px, -2px)"
        };
    }
  }, [e]), r = cn(() => {
    switch (t) {
      case "auto":
        return "inherit";
      case "success":
        return "success.main";
      case "primary":
        return "primary.main";
      case "error":
      default:
        return "error.main";
    }
  }, [t]);
  return {
    badgePlacementAttributes: n,
    badgeColor: r
  };
}
const gg = _e(
  ({ children: e, isVisible: t, position: n = "top-right", color: r = "error" }) => {
    const { badgePlacementAttributes: o, badgeColor: s } = ed({ position: n, color: r }), { vertical: a, horizontal: l, transform: c } = o;
    return /* @__PURE__ */ P(
      ol,
      {
        className: "VenomousUI-DotBadge",
        variant: "dot",
        invisible: !t,
        anchorOrigin: { vertical: a, horizontal: l },
        sx: {
          ".MuiBadge-badge": {
            ...t ? {
              transform: c,
              color: s,
              backgroundColor: s,
              boxShadow: "0 0 0 2px transparent",
              "&::after": {
                position: "absolute",
                top: 0,
                left: 0,
                width: "100%",
                height: "100%",
                borderRadius: "50%",
                animation: "ripple 1.2s infinite ease-in-out",
                border: "2px solid currentColor",
                content: '""'
              },
              "@keyframes ripple": {
                "0%": { transform: "scale(.8)", opacity: 1 },
                "100%": { transform: "scale(2.4)", opacity: 0 }
              }
            } : {}
          }
        },
        children: e
      }
    );
  }
);
gg.displayName = "DotBadge";
const yg = Object.freeze(
  {
    left: 0,
    top: 0,
    width: 16,
    height: 16
  }
), ya = Object.freeze({
  rotate: 0,
  vFlip: !1,
  hFlip: !1
}), td = Object.freeze({
  ...yg,
  ...ya
}), Uc = Object.freeze({
  ...td,
  body: "",
  hidden: !1
});
function GS(e, t) {
  const n = {};
  !e.hFlip != !t.hFlip && (n.hFlip = !0), !e.vFlip != !t.vFlip && (n.vFlip = !0);
  const r = ((e.rotate || 0) + (t.rotate || 0)) % 4;
  return r && (n.rotate = r), n;
}
function tp(e, t) {
  const n = GS(e, t);
  for (const r in Uc)
    r in ya ? r in e && !(r in n) && (n[r] = ya[r]) : r in t ? n[r] = t[r] : r in e && (n[r] = e[r]);
  return n;
}
function KS(e, t) {
  const n = e.icons, r = e.aliases || /* @__PURE__ */ Object.create(null), o = /* @__PURE__ */ Object.create(null);
  function s(a) {
    if (n[a])
      return o[a] = [];
    if (!(a in o)) {
      o[a] = null;
      const l = r[a] && r[a].parent, c = l && s(l);
      c && (o[a] = [l].concat(c));
    }
    return o[a];
  }
  return Object.keys(n).concat(Object.keys(r)).forEach(s), o;
}
function XS(e, t, n) {
  const r = e.icons, o = e.aliases || /* @__PURE__ */ Object.create(null);
  let s = {};
  function a(l) {
    s = tp(
      r[l] || o[l],
      s
    );
  }
  return a(t), n.forEach(a), tp(e, s);
}
function bg(e, t) {
  const n = [];
  if (typeof e != "object" || typeof e.icons != "object")
    return n;
  e.not_found instanceof Array && e.not_found.forEach((o) => {
    t(o, null), n.push(o);
  });
  const r = KS(e);
  for (const o in r) {
    const s = r[o];
    s && (t(o, XS(e, o, s)), n.push(o));
  }
  return n;
}
const QS = {
  provider: "",
  aliases: {},
  not_found: {},
  ...yg
};
function rc(e, t) {
  for (const n in t)
    if (n in e && typeof e[n] != typeof t[n])
      return !1;
  return !0;
}
function vg(e) {
  if (typeof e != "object" || e === null)
    return null;
  const t = e;
  if (typeof t.prefix != "string" || !e.icons || typeof e.icons != "object" || !rc(e, QS))
    return null;
  const n = t.icons;
  for (const o in n) {
    const s = n[o];
    if (
      // Name cannot be empty
      !o || // Must have body
      typeof s.body != "string" || // Check other props
      !rc(
        s,
        Uc
      )
    )
      return null;
  }
  const r = t.aliases || /* @__PURE__ */ Object.create(null);
  for (const o in r) {
    const s = r[o], a = s.parent;
    if (
      // Name cannot be empty
      !o || // Parent must be set and point to existing icon
      typeof a != "string" || !n[a] && !r[a] || // Check other props
      !rc(
        s,
        Uc
      )
    )
      return null;
  }
  return t;
}
const xg = /^[a-z0-9]+(-[a-z0-9]+)*$/, il = (e, t, n, r = "") => {
  const o = e.split(":");
  if (e.slice(0, 1) === "@") {
    if (o.length < 2 || o.length > 3)
      return null;
    r = o.shift().slice(1);
  }
  if (o.length > 3 || !o.length)
    return null;
  if (o.length > 1) {
    const l = o.pop(), c = o.pop(), u = {
      // Allow provider without '@': "provider:prefix:name"
      provider: o.length > 0 ? o[0] : r,
      prefix: c,
      name: l
    };
    return t && !ra(u) ? null : u;
  }
  const s = o[0], a = s.split("-");
  if (a.length > 1) {
    const l = {
      provider: r,
      prefix: a.shift(),
      name: a.join("-")
    };
    return t && !ra(l) ? null : l;
  }
  if (n && r === "") {
    const l = {
      provider: r,
      prefix: "",
      name: s
    };
    return t && !ra(l, n) ? null : l;
  }
  return null;
}, ra = (e, t) => e ? !!// Check prefix: cannot be empty, unless allowSimpleName is enabled
// Check name: cannot be empty
((t && e.prefix === "" || e.prefix) && e.name) : !1, np = /* @__PURE__ */ Object.create(null);
function JS(e, t) {
  return {
    provider: e,
    prefix: t,
    icons: /* @__PURE__ */ Object.create(null),
    missing: /* @__PURE__ */ new Set()
  };
}
function Ho(e, t) {
  const n = np[e] || (np[e] = /* @__PURE__ */ Object.create(null));
  return n[t] || (n[t] = JS(e, t));
}
function wg(e, t) {
  return vg(t) ? bg(t, (n, r) => {
    r ? e.icons[n] = r : e.missing.add(n);
  }) : [];
}
function ZS(e, t, n) {
  try {
    if (typeof n.body == "string")
      return e.icons[t] = { ...n }, !0;
  } catch {
  }
  return !1;
}
let Zi = !1;
function Sg(e) {
  return typeof e == "boolean" && (Zi = e), Zi;
}
function rp(e) {
  const t = typeof e == "string" ? il(e, !0, Zi) : e;
  if (t) {
    const n = Ho(t.provider, t.prefix), r = t.name;
    return n.icons[r] || (n.missing.has(r) ? null : void 0);
  }
}
function eT(e, t) {
  const n = il(e, !0, Zi);
  if (!n)
    return !1;
  const r = Ho(n.provider, n.prefix);
  return t ? ZS(r, n.name, t) : (r.missing.add(n.name), !0);
}
function tT(e, t) {
  if (typeof e != "object")
    return !1;
  if (typeof t != "string" && (t = e.provider || ""), Zi && !t && !e.prefix) {
    let o = !1;
    return vg(e) && (e.prefix = "", bg(e, (s, a) => {
      eT(s, a) && (o = !0);
    })), o;
  }
  const n = e.prefix;
  if (!ra({
    prefix: n,
    name: "a"
  }))
    return !1;
  const r = Ho(t, n);
  return !!wg(r, e);
}
const Tg = Object.freeze({
  width: null,
  height: null
}), Eg = Object.freeze({
  // Dimensions
  ...Tg,
  // Transformations
  ...ya
}), nT = /(-?[0-9.]*[0-9]+[0-9.]*)/g, rT = /^-?[0-9.]*[0-9]+[0-9.]*$/g;
function op(e, t, n) {
  if (t === 1)
    return e;
  if (n = n || 100, typeof e == "number")
    return Math.ceil(e * t * n) / n;
  if (typeof e != "string")
    return e;
  const r = e.split(nT);
  if (r === null || !r.length)
    return e;
  const o = [];
  let s = r.shift(), a = rT.test(s);
  for (; ; ) {
    if (a) {
      const l = parseFloat(s);
      isNaN(l) ? o.push(s) : o.push(Math.ceil(l * t * n) / n);
    } else
      o.push(s);
    if (s = r.shift(), s === void 0)
      return o.join("");
    a = !a;
  }
}
function oT(e, t = "defs") {
  let n = "";
  const r = e.indexOf("<" + t);
  for (; r >= 0; ) {
    const o = e.indexOf(">", r), s = e.indexOf("</" + t);
    if (o === -1 || s === -1)
      break;
    const a = e.indexOf(">", s);
    if (a === -1)
      break;
    n += e.slice(o + 1, s).trim(), e = e.slice(0, r).trim() + e.slice(a + 1);
  }
  return {
    defs: n,
    content: e
  };
}
function iT(e, t) {
  return e ? "<defs>" + e + "</defs>" + t : t;
}
function sT(e, t, n) {
  const r = oT(e);
  return iT(r.defs, t + r.content + n);
}
const aT = (e) => e === "unset" || e === "undefined" || e === "none";
function lT(e, t) {
  const n = {
    ...td,
    ...e
  }, r = {
    ...Eg,
    ...t
  }, o = {
    left: n.left,
    top: n.top,
    width: n.width,
    height: n.height
  };
  let s = n.body;
  [n, r].forEach((m) => {
    const b = [], x = m.hFlip, E = m.vFlip;
    let w = m.rotate;
    x ? E ? w += 2 : (b.push(
      "translate(" + (o.width + o.left).toString() + " " + (0 - o.top).toString() + ")"
    ), b.push("scale(-1 1)"), o.top = o.left = 0) : E && (b.push(
      "translate(" + (0 - o.left).toString() + " " + (o.height + o.top).toString() + ")"
    ), b.push("scale(1 -1)"), o.top = o.left = 0);
    let S;
    switch (w < 0 && (w -= Math.floor(w / 4) * 4), w = w % 4, w) {
      case 1:
        S = o.height / 2 + o.top, b.unshift(
          "rotate(90 " + S.toString() + " " + S.toString() + ")"
        );
        break;
      case 2:
        b.unshift(
          "rotate(180 " + (o.width / 2 + o.left).toString() + " " + (o.height / 2 + o.top).toString() + ")"
        );
        break;
      case 3:
        S = o.width / 2 + o.left, b.unshift(
          "rotate(-90 " + S.toString() + " " + S.toString() + ")"
        );
        break;
    }
    w % 2 === 1 && (o.left !== o.top && (S = o.left, o.left = o.top, o.top = S), o.width !== o.height && (S = o.width, o.width = o.height, o.height = S)), b.length && (s = sT(
      s,
      '<g transform="' + b.join(" ") + '">',
      "</g>"
    ));
  });
  const a = r.width, l = r.height, c = o.width, u = o.height;
  let d, f;
  a === null ? (f = l === null ? "1em" : l === "auto" ? u : l, d = op(f, c / u)) : (d = a === "auto" ? c : a, f = l === null ? op(d, u / c) : l === "auto" ? u : l);
  const h = {}, g = (m, b) => {
    aT(b) || (h[m] = b.toString());
  };
  g("width", d), g("height", f);
  const y = [o.left, o.top, c, u];
  return h.viewBox = y.join(" "), {
    attributes: h,
    viewBox: y,
    body: s
  };
}
const cT = /\sid="(\S+)"/g, uT = "IconifyId" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);
let dT = 0;
function fT(e, t = uT) {
  const n = [];
  let r;
  for (; r = cT.exec(e); )
    n.push(r[1]);
  if (!n.length)
    return e;
  const o = "suffix" + (Math.random() * 16777216 | Date.now()).toString(16);
  return n.forEach((s) => {
    const a = typeof t == "function" ? t(s) : t + (dT++).toString(), l = s.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    e = e.replace(
      // Allowed characters before id: [#;"]
      // Allowed characters after id: [)"], .[a-z]
      new RegExp('([#;"])(' + l + ')([")]|\\.[a-z])', "g"),
      "$1" + a + o + "$3"
    );
  }), e = e.replace(new RegExp(o, "g"), ""), e;
}
const Hc = /* @__PURE__ */ Object.create(null);
function pT(e, t) {
  Hc[e] = t;
}
function qc(e) {
  return Hc[e] || Hc[""];
}
function nd(e) {
  let t;
  if (typeof e.resources == "string")
    t = [e.resources];
  else if (t = e.resources, !(t instanceof Array) || !t.length)
    return null;
  return {
    // API hosts
    resources: t,
    // Root path
    path: e.path || "/",
    // URL length limit
    maxURL: e.maxURL || 500,
    // Timeout before next host is used.
    rotate: e.rotate || 750,
    // Timeout before failing query.
    timeout: e.timeout || 5e3,
    // Randomise default API end point.
    random: e.random === !0,
    // Start index
    index: e.index || 0,
    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).
    dataAfterTimeout: e.dataAfterTimeout !== !1
  };
}
const rd = /* @__PURE__ */ Object.create(null), yi = [
  "https://api.simplesvg.com",
  "https://api.unisvg.com"
], oa = [];
for (; yi.length > 0; )
  yi.length === 1 || Math.random() > 0.5 ? oa.push(yi.shift()) : oa.push(yi.pop());
rd[""] = nd({
  resources: ["https://api.iconify.design"].concat(oa)
});
function mT(e, t) {
  const n = nd(t);
  return n === null ? !1 : (rd[e] = n, !0);
}
function od(e) {
  return rd[e];
}
const hT = () => {
  let e;
  try {
    if (e = fetch, typeof e == "function")
      return e;
  } catch {
  }
};
let ip = hT();
function gT(e, t) {
  const n = od(e);
  if (!n)
    return 0;
  let r;
  if (!n.maxURL)
    r = 0;
  else {
    let o = 0;
    n.resources.forEach((a) => {
      o = Math.max(o, a.length);
    });
    const s = t + ".json?icons=";
    r = n.maxURL - o - n.path.length - s.length;
  }
  return r;
}
function yT(e) {
  return e === 404;
}
const bT = (e, t, n) => {
  const r = [], o = gT(e, t), s = "icons";
  let a = {
    type: s,
    provider: e,
    prefix: t,
    icons: []
  }, l = 0;
  return n.forEach((c, u) => {
    l += c.length + 1, l >= o && u > 0 && (r.push(a), a = {
      type: s,
      provider: e,
      prefix: t,
      icons: []
    }, l = c.length), a.icons.push(c);
  }), r.push(a), r;
};
function vT(e) {
  if (typeof e == "string") {
    const t = od(e);
    if (t)
      return t.path;
  }
  return "/";
}
const xT = (e, t, n) => {
  if (!ip) {
    n("abort", 424);
    return;
  }
  let r = vT(t.provider);
  switch (t.type) {
    case "icons": {
      const s = t.prefix, l = t.icons.join(","), c = new URLSearchParams({
        icons: l
      });
      r += s + ".json?" + c.toString();
      break;
    }
    case "custom": {
      const s = t.uri;
      r += s.slice(0, 1) === "/" ? s.slice(1) : s;
      break;
    }
    default:
      n("abort", 400);
      return;
  }
  let o = 503;
  ip(e + r).then((s) => {
    const a = s.status;
    if (a !== 200) {
      setTimeout(() => {
        n(yT(a) ? "abort" : "next", a);
      });
      return;
    }
    return o = 501, s.json();
  }).then((s) => {
    if (typeof s != "object" || s === null) {
      setTimeout(() => {
        s === 404 ? n("abort", s) : n("next", o);
      });
      return;
    }
    setTimeout(() => {
      n("success", s);
    });
  }).catch(() => {
    n("next", o);
  });
}, wT = {
  prepare: bT,
  send: xT
};
function ST(e) {
  const t = {
    loaded: [],
    missing: [],
    pending: []
  }, n = /* @__PURE__ */ Object.create(null);
  e.sort((o, s) => o.provider !== s.provider ? o.provider.localeCompare(s.provider) : o.prefix !== s.prefix ? o.prefix.localeCompare(s.prefix) : o.name.localeCompare(s.name));
  let r = {
    provider: "",
    prefix: "",
    name: ""
  };
  return e.forEach((o) => {
    if (r.name === o.name && r.prefix === o.prefix && r.provider === o.provider)
      return;
    r = o;
    const s = o.provider, a = o.prefix, l = o.name, c = n[s] || (n[s] = /* @__PURE__ */ Object.create(null)), u = c[a] || (c[a] = Ho(s, a));
    let d;
    l in u.icons ? d = t.loaded : a === "" || u.missing.has(l) ? d = t.missing : d = t.pending;
    const f = {
      provider: s,
      prefix: a,
      name: l
    };
    d.push(f);
  }), t;
}
function Cg(e, t) {
  e.forEach((n) => {
    const r = n.loaderCallbacks;
    r && (n.loaderCallbacks = r.filter((o) => o.id !== t));
  });
}
function TT(e) {
  e.pendingCallbacksFlag || (e.pendingCallbacksFlag = !0, setTimeout(() => {
    e.pendingCallbacksFlag = !1;
    const t = e.loaderCallbacks ? e.loaderCallbacks.slice(0) : [];
    if (!t.length)
      return;
    let n = !1;
    const r = e.provider, o = e.prefix;
    t.forEach((s) => {
      const a = s.icons, l = a.pending.length;
      a.pending = a.pending.filter((c) => {
        if (c.prefix !== o)
          return !0;
        const u = c.name;
        if (e.icons[u])
          a.loaded.push({
            provider: r,
            prefix: o,
            name: u
          });
        else if (e.missing.has(u))
          a.missing.push({
            provider: r,
            prefix: o,
            name: u
          });
        else
          return n = !0, !0;
        return !1;
      }), a.pending.length !== l && (n || Cg([e], s.id), s.callback(
        a.loaded.slice(0),
        a.missing.slice(0),
        a.pending.slice(0),
        s.abort
      ));
    });
  }));
}
let ET = 0;
function CT(e, t, n) {
  const r = ET++, o = Cg.bind(null, n, r);
  if (!t.pending.length)
    return o;
  const s = {
    id: r,
    icons: t,
    callback: e,
    abort: o
  };
  return n.forEach((a) => {
    (a.loaderCallbacks || (a.loaderCallbacks = [])).push(s);
  }), o;
}
function OT(e, t = !0, n = !1) {
  const r = [];
  return e.forEach((o) => {
    const s = typeof o == "string" ? il(o, t, n) : o;
    s && r.push(s);
  }), r;
}
var RT = {
  resources: [],
  index: 0,
  timeout: 2e3,
  rotate: 750,
  random: !1,
  dataAfterTimeout: !1
};
function kT(e, t, n, r) {
  const o = e.resources.length, s = e.random ? Math.floor(Math.random() * o) : e.index;
  let a;
  if (e.random) {
    let T = e.resources.slice(0);
    for (a = []; T.length > 1; ) {
      const R = Math.floor(Math.random() * T.length);
      a.push(T[R]), T = T.slice(0, R).concat(T.slice(R + 1));
    }
    a = a.concat(T);
  } else
    a = e.resources.slice(s).concat(e.resources.slice(0, s));
  const l = Date.now();
  let c = "pending", u = 0, d, f = null, h = [], g = [];
  typeof r == "function" && g.push(r);
  function y() {
    f && (clearTimeout(f), f = null);
  }
  function m() {
    c === "pending" && (c = "aborted"), y(), h.forEach((T) => {
      T.status === "pending" && (T.status = "aborted");
    }), h = [];
  }
  function b(T, R) {
    R && (g = []), typeof T == "function" && g.push(T);
  }
  function x() {
    return {
      startTime: l,
      payload: t,
      status: c,
      queriesSent: u,
      queriesPending: h.length,
      subscribe: b,
      abort: m
    };
  }
  function E() {
    c = "failed", g.forEach((T) => {
      T(void 0, d);
    });
  }
  function w() {
    h.forEach((T) => {
      T.status === "pending" && (T.status = "aborted");
    }), h = [];
  }
  function S(T, R, k) {
    const I = R !== "success";
    switch (h = h.filter((p) => p !== T), c) {
      case "pending":
        break;
      case "failed":
        if (I || !e.dataAfterTimeout)
          return;
        break;
      default:
        return;
    }
    if (R === "abort") {
      d = k, E();
      return;
    }
    if (I) {
      d = k, h.length || (a.length ? v() : E());
      return;
    }
    if (y(), w(), !e.random) {
      const p = e.resources.indexOf(T.resource);
      p !== -1 && p !== e.index && (e.index = p);
    }
    c = "completed", g.forEach((p) => {
      p(k);
    });
  }
  function v() {
    if (c !== "pending")
      return;
    y();
    const T = a.shift();
    if (T === void 0) {
      if (h.length) {
        f = setTimeout(() => {
          y(), c === "pending" && (w(), E());
        }, e.timeout);
        return;
      }
      E();
      return;
    }
    const R = {
      status: "pending",
      resource: T,
      callback: (k, I) => {
        S(R, k, I);
      }
    };
    h.push(R), u++, f = setTimeout(v, e.rotate), n(T, t, R.callback);
  }
  return setTimeout(v), x;
}
function Og(e) {
  const t = {
    ...RT,
    ...e
  };
  let n = [];
  function r() {
    n = n.filter((l) => l().status === "pending");
  }
  function o(l, c, u) {
    const d = kT(
      t,
      l,
      c,
      (f, h) => {
        r(), u && u(f, h);
      }
    );
    return n.push(d), d;
  }
  function s(l) {
    return n.find((c) => l(c)) || null;
  }
  return {
    query: o,
    find: s,
    setIndex: (l) => {
      t.index = l;
    },
    getIndex: () => t.index,
    cleanup: r
  };
}
function sp() {
}
const oc = /* @__PURE__ */ Object.create(null);
function $T(e) {
  if (!oc[e]) {
    const t = od(e);
    if (!t)
      return;
    const n = Og(t), r = {
      config: t,
      redundancy: n
    };
    oc[e] = r;
  }
  return oc[e];
}
function PT(e, t, n) {
  let r, o;
  if (typeof e == "string") {
    const s = qc(e);
    if (!s)
      return n(void 0, 424), sp;
    o = s.send;
    const a = $T(e);
    a && (r = a.redundancy);
  } else {
    const s = nd(e);
    if (s) {
      r = Og(s);
      const a = e.resources ? e.resources[0] : "", l = qc(a);
      l && (o = l.send);
    }
  }
  return !r || !o ? (n(void 0, 424), sp) : r.query(t, o, n)().abort;
}
function ap() {
}
function IT(e) {
  e.iconsLoaderFlag || (e.iconsLoaderFlag = !0, setTimeout(() => {
    e.iconsLoaderFlag = !1, TT(e);
  }));
}
function NT(e) {
  const t = [], n = [];
  return e.forEach((r) => {
    (r.match(xg) ? t : n).push(r);
  }), {
    valid: t,
    invalid: n
  };
}
function bi(e, t, n) {
  function r() {
    const o = e.pendingIcons;
    t.forEach((s) => {
      o && o.delete(s), e.icons[s] || e.missing.add(s);
    });
  }
  if (n && typeof n == "object")
    try {
      if (!wg(e, n).length) {
        r();
        return;
      }
    } catch (o) {
      console.error(o);
    }
  r(), IT(e);
}
function lp(e, t) {
  e instanceof Promise ? e.then((n) => {
    t(n);
  }).catch(() => {
    t(null);
  }) : t(e);
}
function AT(e, t) {
  e.iconsToLoad ? e.iconsToLoad = e.iconsToLoad.concat(t).sort() : e.iconsToLoad = t, e.iconsQueueFlag || (e.iconsQueueFlag = !0, setTimeout(() => {
    e.iconsQueueFlag = !1;
    const { provider: n, prefix: r } = e, o = e.iconsToLoad;
    if (delete e.iconsToLoad, !o || !o.length)
      return;
    const s = e.loadIcon;
    if (e.loadIcons && (o.length > 1 || !s)) {
      lp(
        e.loadIcons(o, r, n),
        (d) => {
          bi(e, o, d);
        }
      );
      return;
    }
    if (s) {
      o.forEach((d) => {
        const f = s(d, r, n);
        lp(f, (h) => {
          const g = h ? {
            prefix: r,
            icons: {
              [d]: h
            }
          } : null;
          bi(e, [d], g);
        });
      });
      return;
    }
    const { valid: a, invalid: l } = NT(o);
    if (l.length && bi(e, l, null), !a.length)
      return;
    const c = r.match(xg) ? qc(n) : null;
    if (!c) {
      bi(e, a, null);
      return;
    }
    c.prepare(n, r, a).forEach((d) => {
      PT(n, d, (f) => {
        bi(e, d.icons, f);
      });
    });
  }));
}
const MT = (e, t) => {
  const n = OT(e, !0, Sg()), r = ST(n);
  if (!r.pending.length) {
    let c = !0;
    return t && setTimeout(() => {
      c && t(
        r.loaded,
        r.missing,
        r.pending,
        ap
      );
    }), () => {
      c = !1;
    };
  }
  const o = /* @__PURE__ */ Object.create(null), s = [];
  let a, l;
  return r.pending.forEach((c) => {
    const { provider: u, prefix: d } = c;
    if (d === l && u === a)
      return;
    a = u, l = d, s.push(Ho(u, d));
    const f = o[u] || (o[u] = /* @__PURE__ */ Object.create(null));
    f[d] || (f[d] = []);
  }), r.pending.forEach((c) => {
    const { provider: u, prefix: d, name: f } = c, h = Ho(u, d), g = h.pendingIcons || (h.pendingIcons = /* @__PURE__ */ new Set());
    g.has(f) || (g.add(f), o[u][d].push(f));
  }), s.forEach((c) => {
    const u = o[c.provider][c.prefix];
    u.length && AT(c, u);
  }), t ? CT(t, r, s) : ap;
};
function _T(e, t) {
  const n = {
    ...e
  };
  for (const r in t) {
    const o = t[r], s = typeof o;
    r in Tg ? (o === null || o && (s === "string" || s === "number")) && (n[r] = o) : s === typeof n[r] && (n[r] = r === "rotate" ? o % 4 : o);
  }
  return n;
}
const DT = /[\s,]+/;
function BT(e, t) {
  t.split(DT).forEach((n) => {
    switch (n.trim()) {
      case "horizontal":
        e.hFlip = !0;
        break;
      case "vertical":
        e.vFlip = !0;
        break;
    }
  });
}
function FT(e, t = 0) {
  const n = e.replace(/^-?[0-9.]*/, "");
  function r(o) {
    for (; o < 0; )
      o += 4;
    return o % 4;
  }
  if (n === "") {
    const o = parseInt(e);
    return isNaN(o) ? 0 : r(o);
  } else if (n !== e) {
    let o = 0;
    switch (n) {
      case "%":
        o = 25;
        break;
      case "deg":
        o = 90;
    }
    if (o) {
      let s = parseFloat(e.slice(0, e.length - n.length));
      return isNaN(s) ? 0 : (s = s / o, s % 1 === 0 ? r(s) : 0);
    }
  }
  return t;
}
function jT(e, t) {
  let n = e.indexOf("xlink:") === -1 ? "" : ' xmlns:xlink="http://www.w3.org/1999/xlink"';
  for (const r in t)
    n += " " + r + '="' + t[r] + '"';
  return '<svg xmlns="http://www.w3.org/2000/svg"' + n + ">" + e + "</svg>";
}
function LT(e) {
  return e.replace(/"/g, "'").replace(/%/g, "%25").replace(/#/g, "%23").replace(/</g, "%3C").replace(/>/g, "%3E").replace(/\s+/g, " ");
}
function VT(e) {
  return "data:image/svg+xml," + LT(e);
}
function zT(e) {
  return 'url("' + VT(e) + '")';
}
let Bi;
function WT() {
  try {
    Bi = window.trustedTypes.createPolicy("iconify", {
      // eslint-disable-next-line @typescript-eslint/no-unsafe-return
      createHTML: (e) => e
    });
  } catch {
    Bi = null;
  }
}
function UT(e) {
  return Bi === void 0 && WT(), Bi ? Bi.createHTML(e) : e;
}
const Rg = {
  ...Eg,
  inline: !1
}, HT = {
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink",
  "aria-hidden": !0,
  role: "img"
}, qT = {
  display: "inline-block"
}, Yc = {
  backgroundColor: "currentColor"
}, kg = {
  backgroundColor: "transparent"
}, cp = {
  Image: "var(--svg)",
  Repeat: "no-repeat",
  Size: "100% 100%"
}, up = {
  WebkitMask: Yc,
  mask: Yc,
  background: kg
};
for (const e in up) {
  const t = up[e];
  for (const n in cp)
    t[e + n] = cp[n];
}
const YT = {
  ...Rg,
  inline: !0
};
function dp(e) {
  return e + (e.match(/^[-0-9.]+$/) ? "px" : "");
}
const GT = (e, t, n) => {
  const r = t.inline ? YT : Rg, o = _T(r, t), s = t.mode || "svg", a = {}, l = t.style || {}, c = {
    ...s === "svg" ? HT : {}
  };
  if (n) {
    const b = il(n, !1, !0);
    if (b) {
      const x = ["iconify"], E = [
        "provider",
        "prefix"
      ];
      for (const w of E)
        b[w] && x.push("iconify--" + b[w]);
      c.className = x.join(" ");
    }
  }
  for (let b in t) {
    const x = t[b];
    if (x !== void 0)
      switch (b) {
        // Properties to ignore
        case "icon":
        case "style":
        case "children":
        case "onLoad":
        case "mode":
        case "ssr":
          break;
        // Forward ref
        case "_ref":
          c.ref = x;
          break;
        // Merge class names
        case "className":
          c[b] = (c[b] ? c[b] + " " : "") + x;
          break;
        // Boolean attributes
        case "inline":
        case "hFlip":
        case "vFlip":
          o[b] = x === !0 || x === "true" || x === 1;
          break;
        // Flip as string: 'horizontal,vertical'
        case "flip":
          typeof x == "string" && BT(o, x);
          break;
        // Color: copy to style
        case "color":
          a.color = x;
          break;
        // Rotation as string
        case "rotate":
          typeof x == "string" ? o[b] = FT(x) : typeof x == "number" && (o[b] = x);
          break;
        // Remove aria-hidden
        case "ariaHidden":
        case "aria-hidden":
          x !== !0 && x !== "true" && delete c["aria-hidden"];
          break;
        // Copy missing property if it does not exist in customisations
        default:
          r[b] === void 0 && (c[b] = x);
      }
  }
  const u = lT(e, o), d = u.attributes;
  if (o.inline && (a.verticalAlign = "-0.125em"), s === "svg") {
    c.style = {
      ...a,
      ...l
    }, Object.assign(c, d);
    let b = 0, x = t.id;
    return typeof x == "string" && (x = x.replace(/-/g, "_")), c.dangerouslySetInnerHTML = {
      __html: UT(fT(u.body, x ? () => x + "ID" + b++ : "iconifyReact"))
    }, co("svg", c);
  }
  const { body: f, width: h, height: g } = e, y = s === "mask" || (s === "bg" ? !1 : f.indexOf("currentColor") !== -1), m = jT(f, {
    ...d,
    width: h + "",
    height: g + ""
  });
  return c.style = {
    ...a,
    "--svg": zT(m),
    width: dp(d.width),
    height: dp(d.height),
    ...qT,
    ...y ? Yc : kg,
    ...l
  }, co("span", c);
};
Sg(!0);
pT("", wT);
if (typeof document < "u" && typeof window < "u") {
  const e = window;
  if (e.IconifyPreload !== void 0) {
    const t = e.IconifyPreload, n = "Invalid IconifyPreload syntax.";
    typeof t == "object" && t !== null && (t instanceof Array ? t : [t]).forEach((r) => {
      try {
        // Check if item is an object and not null/array
        (typeof r != "object" || r === null || r instanceof Array || // Check for 'icons' and 'prefix'
        typeof r.icons != "object" || typeof r.prefix != "string" || // Add icon set
        !tT(r)) && console.error(n);
      } catch {
        console.error(n);
      }
    });
  }
  if (e.IconifyProviders !== void 0) {
    const t = e.IconifyProviders;
    if (typeof t == "object" && t !== null)
      for (let n in t) {
        const r = "IconifyProviders[" + n + "] is invalid.";
        try {
          const o = t[n];
          if (typeof o != "object" || !o || o.resources === void 0)
            continue;
          mT(n, o) || console.error(r);
        } catch {
          console.error(r);
        }
      }
  }
}
function $g(e) {
  const [t, n] = Cr(!!e.ssr), [r, o] = Cr({});
  function s(g) {
    if (g) {
      const y = e.icon;
      if (typeof y == "object")
        return {
          name: "",
          data: y
        };
      const m = rp(y);
      if (m)
        return {
          name: y,
          data: m
        };
    }
    return {
      name: ""
    };
  }
  const [a, l] = Cr(s(!!e.ssr));
  function c() {
    const g = r.callback;
    g && (g(), o({}));
  }
  function u(g) {
    if (JSON.stringify(a) !== JSON.stringify(g))
      return c(), l(g), !0;
  }
  function d() {
    var g;
    const y = e.icon;
    if (typeof y == "object") {
      u({
        name: "",
        data: y
      });
      return;
    }
    const m = rp(y);
    if (u({
      name: y,
      data: m
    }))
      if (m === void 0) {
        const b = MT([y], d);
        o({
          callback: b
        });
      } else m && ((g = e.onLoad) === null || g === void 0 || g.call(e, y));
  }
  zo(() => (n(!0), c), []), zo(() => {
    t && d();
  }, [e.icon, t]);
  const { name: f, data: h } = a;
  return h ? GT({
    ...td,
    ...h
  }, e, f) : e.children ? e.children : e.fallback ? e.fallback : co("span", {});
}
const KT = $u((e, t) => $g({
  ...e,
  _ref: t
}));
$u((e, t) => $g({
  inline: !0,
  ...e,
  _ref: t
}));
function ic({
  theme: e,
  ...t
}) {
  const n = qn in e ? e[qn] : void 0;
  return /* @__PURE__ */ P(Qi, {
    ...t,
    themeId: n ? qn : void 0,
    theme: n || e
  });
}
const Ds = {
  colorSchemeStorageKey: "mui-color-scheme",
  defaultLightColorScheme: "light",
  defaultDarkColorScheme: "dark",
  modeStorageKey: "mui-mode"
}, {
  CssVarsProvider: XT
} = zw({
  themeId: qn,
  // @ts-ignore ignore module augmentation tests
  theme: () => rl({
    cssVariables: !0
  }),
  colorSchemeStorageKey: Ds.colorSchemeStorageKey,
  modeStorageKey: Ds.modeStorageKey,
  defaultColorScheme: {
    light: Ds.defaultLightColorScheme,
    dark: Ds.defaultDarkColorScheme
  },
  resolveTheme: (e) => {
    const t = {
      ...e,
      typography: ug(e.palette, e.typography)
    };
    return t.unstable_sx = function(r) {
      return Vr({
        sx: r,
        theme: this
      });
    }, t;
  }
}), QT = XT;
function JT({
  theme: e,
  ...t
}) {
  if (typeof e == "function")
    return /* @__PURE__ */ P(ic, {
      theme: e,
      ...t
    });
  const n = qn in e ? e[qn] : e;
  return "colorSchemes" in n ? /* @__PURE__ */ P(QT, {
    theme: e,
    ...t
  }) : "vars" in n ? /* @__PURE__ */ P(ic, {
    theme: e,
    ...t
  }) : /* @__PURE__ */ P(ic, {
    theme: {
      ...e,
      vars: null
    },
    ...t
  });
}
const ZT = wt("MuiBox", ["root"]), e1 = rl(), $r = Zx({
  themeId: qn,
  defaultTheme: e1,
  defaultClassName: ZT.root,
  generateClassName: _h.generate
});
process.env.NODE_ENV !== "production" && ($r.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
const mr = _e(({ ref: e, icon: t, width: n = 20, color: r = "auto", sx: o, ...s }) => /* @__PURE__ */ P(
  $r,
  {
    className: "VenomousUI-Icon",
    ssr: !0,
    ref: e,
    component: KT,
    icon: t,
    sx: {
      width: n,
      height: n,
      flexShrink: 0,
      display: "inline-flex",
      color: (a) => r === "error" ? a.palette.error.main : r === "primary" ? a.palette.primary.main : r === "success" ? a.palette.success.main : r === "disabled" ? a.palette.action.disabled : "inherit",
      ...o
    },
    ...s
  }
));
mr.displayName = "Icon";
function t1(e) {
  return gt("MuiPaper", e);
}
wt("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const n1 = (e) => {
  const {
    square: t,
    elevation: n,
    variant: r,
    classes: o
  } = e, s = {
    root: ["root", r, !t && "rounded", r === "elevation" && `elevation${n}`]
  };
  return Ct(s, t1, o);
}, r1 = Pe("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(Ke(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), ci = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var g;
  const r = St({
    props: t,
    name: "MuiPaper"
  }), o = Mr(), {
    className: s,
    component: a = "div",
    elevation: l = 1,
    square: c = !1,
    variant: u = "elevation",
    ...d
  } = r, f = {
    ...r,
    component: a,
    elevation: l,
    square: c,
    variant: u
  }, h = n1(f);
  return process.env.NODE_ENV !== "production" && o.shadows[l] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${l}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${l}]\` is defined.`].join(`
`)), /* @__PURE__ */ P(r1, {
    as: a,
    ownerState: f,
    className: Ee(h.root, s),
    ref: n,
    ...d,
    style: {
      ...u === "elevation" && {
        "--Paper-shadow": (o.vars || o).shadows[l],
        ...o.vars && {
          "--Paper-overlay": (g = o.vars.overlays) == null ? void 0 : g[l]
        },
        ...!o.vars && o.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${Yt("#fff", Wc(l))}, ${Yt("#fff", Wc(l))})`
        }
      },
      ...d.style
    }
  });
});
process.env.NODE_ENV !== "production" && (ci.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: Yr(qu, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: i.bool,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: i.oneOfType([i.oneOf(["elevation", "outlined"]), i.string])
});
function ui() {
  return {
    paperCommonStyles: cn(
      () => ({
        p: "8px",
        borderRadius: "8px !important",
        backgroundColor: ({ palette: t }) => t.background.paper,
        backgroundImage: "linear-gradient(rgba(255, 255, 255, 0.119), rgba(255, 255, 255, 0.119));"
      }),
      []
    )
  };
}
const qo = _e(({ isOutlined: e, children: t, sx: n, ...r }) => {
  const { paperCommonStyles: o } = ui();
  return /* @__PURE__ */ P(
    ci,
    {
      className: "VenomousUI-Paper",
      variant: e ? "outlined" : "elevation",
      elevation: e ? 0 : 3,
      square: !0,
      sx: {
        ...o,
        ...n
      },
      ...r,
      children: t
    }
  );
});
qo.displayName = "Paper";
function Pg(e, t) {
  if (e == null) return {};
  var n = {};
  for (var r in e) if ({}.hasOwnProperty.call(e, r)) {
    if (t.indexOf(r) !== -1) continue;
    n[r] = e[r];
  }
  return n;
}
function Gc(e, t) {
  return Gc = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, r) {
    return n.__proto__ = r, n;
  }, Gc(e, t);
}
function Ig(e, t) {
  e.prototype = Object.create(t.prototype), e.prototype.constructor = e, Gc(e, t);
}
const fp = {
  disabled: !1
};
var o1 = process.env.NODE_ENV !== "production" ? i.oneOfType([i.number, i.shape({
  enter: i.number,
  exit: i.number,
  appear: i.number
}).isRequired]) : null;
process.env.NODE_ENV !== "production" && i.oneOfType([i.string, i.shape({
  enter: i.string,
  exit: i.string,
  active: i.string
}), i.shape({
  enter: i.string,
  enterDone: i.string,
  enterActive: i.string,
  exit: i.string,
  exitDone: i.string,
  exitActive: i.string
})]);
const ba = L.createContext(null);
var i1 = function(t) {
  return t.scrollTop;
}, Ii = "unmounted", oo = "exited", io = "entering", No = "entered", Kc = "exiting", kn = /* @__PURE__ */ function(e) {
  Ig(t, e);
  function t(r, o) {
    var s;
    s = e.call(this, r, o) || this;
    var a = o, l = a && !a.isMounting ? r.enter : r.appear, c;
    return s.appearStatus = null, r.in ? l ? (c = oo, s.appearStatus = io) : c = No : r.unmountOnExit || r.mountOnEnter ? c = Ii : c = oo, s.state = {
      status: c
    }, s.nextCallback = null, s;
  }
  t.getDerivedStateFromProps = function(o, s) {
    var a = o.in;
    return a && s.status === Ii ? {
      status: oo
    } : null;
  };
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.updateStatus(!0, this.appearStatus);
  }, n.componentDidUpdate = function(o) {
    var s = null;
    if (o !== this.props) {
      var a = this.state.status;
      this.props.in ? a !== io && a !== No && (s = io) : (a === io || a === No) && (s = Kc);
    }
    this.updateStatus(!1, s);
  }, n.componentWillUnmount = function() {
    this.cancelNextCallback();
  }, n.getTimeouts = function() {
    var o = this.props.timeout, s, a, l;
    return s = a = l = o, o != null && typeof o != "number" && (s = o.exit, a = o.enter, l = o.appear !== void 0 ? o.appear : a), {
      exit: s,
      enter: a,
      appear: l
    };
  }, n.updateStatus = function(o, s) {
    if (o === void 0 && (o = !1), s !== null)
      if (this.cancelNextCallback(), s === io) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var a = this.props.nodeRef ? this.props.nodeRef.current : Mo.findDOMNode(this);
          a && i1(a);
        }
        this.performEnter(o);
      } else
        this.performExit();
    else this.props.unmountOnExit && this.state.status === oo && this.setState({
      status: Ii
    });
  }, n.performEnter = function(o) {
    var s = this, a = this.props.enter, l = this.context ? this.context.isMounting : o, c = this.props.nodeRef ? [l] : [Mo.findDOMNode(this), l], u = c[0], d = c[1], f = this.getTimeouts(), h = l ? f.appear : f.enter;
    if (!o && !a || fp.disabled) {
      this.safeSetState({
        status: No
      }, function() {
        s.props.onEntered(u);
      });
      return;
    }
    this.props.onEnter(u, d), this.safeSetState({
      status: io
    }, function() {
      s.props.onEntering(u, d), s.onTransitionEnd(h, function() {
        s.safeSetState({
          status: No
        }, function() {
          s.props.onEntered(u, d);
        });
      });
    });
  }, n.performExit = function() {
    var o = this, s = this.props.exit, a = this.getTimeouts(), l = this.props.nodeRef ? void 0 : Mo.findDOMNode(this);
    if (!s || fp.disabled) {
      this.safeSetState({
        status: oo
      }, function() {
        o.props.onExited(l);
      });
      return;
    }
    this.props.onExit(l), this.safeSetState({
      status: Kc
    }, function() {
      o.props.onExiting(l), o.onTransitionEnd(a.exit, function() {
        o.safeSetState({
          status: oo
        }, function() {
          o.props.onExited(l);
        });
      });
    });
  }, n.cancelNextCallback = function() {
    this.nextCallback !== null && (this.nextCallback.cancel(), this.nextCallback = null);
  }, n.safeSetState = function(o, s) {
    s = this.setNextCallback(s), this.setState(o, s);
  }, n.setNextCallback = function(o) {
    var s = this, a = !0;
    return this.nextCallback = function(l) {
      a && (a = !1, s.nextCallback = null, o(l));
    }, this.nextCallback.cancel = function() {
      a = !1;
    }, this.nextCallback;
  }, n.onTransitionEnd = function(o, s) {
    this.setNextCallback(s);
    var a = this.props.nodeRef ? this.props.nodeRef.current : Mo.findDOMNode(this), l = o == null && !this.props.addEndListener;
    if (!a || l) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var c = this.props.nodeRef ? [this.nextCallback] : [a, this.nextCallback], u = c[0], d = c[1];
      this.props.addEndListener(u, d);
    }
    o != null && setTimeout(this.nextCallback, o);
  }, n.render = function() {
    var o = this.state.status;
    if (o === Ii)
      return null;
    var s = this.props, a = s.children;
    s.in, s.mountOnEnter, s.unmountOnExit, s.appear, s.enter, s.exit, s.timeout, s.addEndListener, s.onEnter, s.onEntering, s.onEntered, s.onExit, s.onExiting, s.onExited, s.nodeRef;
    var l = Pg(s, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      /* @__PURE__ */ L.createElement(ba.Provider, {
        value: null
      }, typeof a == "function" ? a(o, l) : L.cloneElement(L.Children.only(a), l))
    );
  }, t;
}(L.Component);
kn.contextType = ba;
kn.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: i.shape({
    current: typeof Element > "u" ? i.any : function(e, t, n, r, o, s) {
      var a = e[t];
      return i.instanceOf(a && "ownerDocument" in a ? a.ownerDocument.defaultView.Element : Element)(e, t, n, r, o, s);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: i.oneOfType([i.func.isRequired, i.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: i.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: i.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: i.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: i.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: i.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: i.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function(t) {
    var n = o1;
    t.addEndListener || (n = n.isRequired);
    for (var r = arguments.length, o = new Array(r > 1 ? r - 1 : 0), s = 1; s < r; s++)
      o[s - 1] = arguments[s];
    return n.apply(void 0, [t].concat(o));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: i.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: i.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: i.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: i.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: i.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: i.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: i.func
} : {};
function Co() {
}
kn.defaultProps = {
  in: !1,
  mountOnEnter: !1,
  unmountOnExit: !1,
  appear: !1,
  enter: !0,
  exit: !0,
  onEnter: Co,
  onEntering: Co,
  onEntered: Co,
  onExit: Co,
  onExiting: Co,
  onExited: Co
};
kn.UNMOUNTED = Ii;
kn.EXITED = oo;
kn.ENTERING = io;
kn.ENTERED = No;
kn.EXITING = Kc;
function s1(e) {
  if (e === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function id(e, t) {
  var n = function(s) {
    return t && Qs(s) ? t(s) : s;
  }, r = /* @__PURE__ */ Object.create(null);
  return e && Fv.map(e, function(o) {
    return o;
  }).forEach(function(o) {
    r[o.key] = n(o);
  }), r;
}
function a1(e, t) {
  e = e || {}, t = t || {};
  function n(d) {
    return d in t ? t[d] : e[d];
  }
  var r = /* @__PURE__ */ Object.create(null), o = [];
  for (var s in e)
    s in t ? o.length && (r[s] = o, o = []) : o.push(s);
  var a, l = {};
  for (var c in t) {
    if (r[c])
      for (a = 0; a < r[c].length; a++) {
        var u = r[c][a];
        l[r[c][a]] = n(u);
      }
    l[c] = n(c);
  }
  for (a = 0; a < o.length; a++)
    l[o[a]] = n(o[a]);
  return l;
}
function so(e, t, n) {
  return n[t] != null ? n[t] : e.props[t];
}
function l1(e, t) {
  return id(e.children, function(n) {
    return Js(n, {
      onExited: t.bind(null, n),
      in: !0,
      appear: so(n, "appear", e),
      enter: so(n, "enter", e),
      exit: so(n, "exit", e)
    });
  });
}
function c1(e, t, n) {
  var r = id(e.children), o = a1(t, r);
  return Object.keys(o).forEach(function(s) {
    var a = o[s];
    if (Qs(a)) {
      var l = s in t, c = s in r, u = t[s], d = Qs(u) && !u.props.in;
      c && (!l || d) ? o[s] = Js(a, {
        onExited: n.bind(null, a),
        in: !0,
        exit: so(a, "exit", e),
        enter: so(a, "enter", e)
      }) : !c && l && !d ? o[s] = Js(a, {
        in: !1
      }) : c && l && Qs(u) && (o[s] = Js(a, {
        onExited: n.bind(null, a),
        in: u.props.in,
        exit: so(a, "exit", e),
        enter: so(a, "enter", e)
      }));
    }
  }), o;
}
var u1 = Object.values || function(e) {
  return Object.keys(e).map(function(t) {
    return e[t];
  });
}, d1 = {
  component: "div",
  childFactory: function(t) {
    return t;
  }
}, sd = /* @__PURE__ */ function(e) {
  Ig(t, e);
  function t(r, o) {
    var s;
    s = e.call(this, r, o) || this;
    var a = s.handleExited.bind(s1(s));
    return s.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: a,
      firstRender: !0
    }, s;
  }
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, n.componentWillUnmount = function() {
    this.mounted = !1;
  }, t.getDerivedStateFromProps = function(o, s) {
    var a = s.children, l = s.handleExited, c = s.firstRender;
    return {
      children: c ? l1(o, l) : c1(o, a, l),
      firstRender: !1
    };
  }, n.handleExited = function(o, s) {
    var a = id(this.props.children);
    o.key in a || (o.props.onExited && o.props.onExited(s), this.mounted && this.setState(function(l) {
      var c = fa({}, l.children);
      return delete c[o.key], {
        children: c
      };
    }));
  }, n.render = function() {
    var o = this.props, s = o.component, a = o.childFactory, l = Pg(o, ["component", "childFactory"]), c = this.state.contextValue, u = u1(this.state.children).map(a);
    return delete l.appear, delete l.enter, delete l.exit, s === null ? /* @__PURE__ */ L.createElement(ba.Provider, {
      value: c
    }, u) : /* @__PURE__ */ L.createElement(ba.Provider, {
      value: c
    }, /* @__PURE__ */ L.createElement(s, l, u));
  }, t;
}(L.Component);
sd.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: i.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: i.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: i.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: i.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: i.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: i.func
} : {};
sd.defaultProps = d1;
const ad = (e) => e.scrollTop;
function Yo(e, t) {
  const {
    timeout: n,
    easing: r,
    style: o = {}
  } = e;
  return {
    duration: o.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: o.transitionTimingFunction ?? (typeof r == "object" ? r[t.mode] : r),
    delay: o.transitionDelay
  };
}
const f1 = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, fo = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Mr(), o = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: s,
    appear: a = !0,
    children: l,
    easing: c,
    in: u,
    onEnter: d,
    onEntered: f,
    onEntering: h,
    onExit: g,
    onExited: y,
    onExiting: m,
    style: b,
    timeout: x = o,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: E = kn,
    ...w
  } = t, S = C.useRef(null), v = rn(S, go(l), n), T = (D) => (_) => {
    if (D) {
      const M = S.current;
      _ === void 0 ? D(M) : D(M, _);
    }
  }, R = T(h), k = T((D, _) => {
    ad(D);
    const M = Yo({
      style: b,
      timeout: x,
      easing: c
    }, {
      mode: "enter"
    });
    D.style.webkitTransition = r.transitions.create("opacity", M), D.style.transition = r.transitions.create("opacity", M), d && d(D, _);
  }), I = T(f), p = T(m), O = T((D) => {
    const _ = Yo({
      style: b,
      timeout: x,
      easing: c
    }, {
      mode: "exit"
    });
    D.style.webkitTransition = r.transitions.create("opacity", _), D.style.transition = r.transitions.create("opacity", _), g && g(D);
  }), $ = T(y);
  return /* @__PURE__ */ P(E, {
    appear: a,
    in: u,
    nodeRef: S,
    onEnter: k,
    onEntered: I,
    onEntering: R,
    onExit: O,
    onExited: $,
    onExiting: p,
    addEndListener: (D) => {
      s && s(S.current, D);
    },
    timeout: x,
    ...w,
    children: (D, {
      ownerState: _,
      ...M
    }) => /* @__PURE__ */ C.cloneElement(l, {
      style: {
        opacity: 0,
        visibility: D === "exited" && !u ? "hidden" : void 0,
        ...f1[D],
        ...b,
        ...l.props.style
      },
      ref: v,
      ...M
    })
  });
});
process.env.NODE_ENV !== "production" && (fo.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: Gr.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function Xc(e) {
  return `scale(${e}, ${e ** 2})`;
}
const p1 = {
  entering: {
    opacity: 1,
    transform: Xc(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, sc = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), es = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    addEndListener: r,
    appear: o = !0,
    children: s,
    easing: a,
    in: l,
    onEnter: c,
    onEntered: u,
    onEntering: d,
    onExit: f,
    onExited: h,
    onExiting: g,
    style: y,
    timeout: m = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: b = kn,
    ...x
  } = t, E = _o(), w = C.useRef(), S = Mr(), v = C.useRef(null), T = rn(v, go(s), n), R = (_) => (M) => {
    if (_) {
      const V = v.current;
      M === void 0 ? _(V) : _(V, M);
    }
  }, k = R(d), I = R((_, M) => {
    ad(_);
    const {
      duration: V,
      delay: Y,
      easing: U
    } = Yo({
      style: y,
      timeout: m,
      easing: a
    }, {
      mode: "enter"
    });
    let j;
    m === "auto" ? (j = S.transitions.getAutoHeightDuration(_.clientHeight), w.current = j) : j = V, _.style.transition = [S.transitions.create("opacity", {
      duration: j,
      delay: Y
    }), S.transitions.create("transform", {
      duration: sc ? j : j * 0.666,
      delay: Y,
      easing: U
    })].join(","), c && c(_, M);
  }), p = R(u), O = R(g), $ = R((_) => {
    const {
      duration: M,
      delay: V,
      easing: Y
    } = Yo({
      style: y,
      timeout: m,
      easing: a
    }, {
      mode: "exit"
    });
    let U;
    m === "auto" ? (U = S.transitions.getAutoHeightDuration(_.clientHeight), w.current = U) : U = M, _.style.transition = [S.transitions.create("opacity", {
      duration: U,
      delay: V
    }), S.transitions.create("transform", {
      duration: sc ? U : U * 0.666,
      delay: sc ? V : V || U * 0.333,
      easing: Y
    })].join(","), _.style.opacity = 0, _.style.transform = Xc(0.75), f && f(_);
  }), A = R(h);
  return /* @__PURE__ */ P(b, {
    appear: o,
    in: l,
    nodeRef: v,
    onEnter: I,
    onEntered: p,
    onEntering: k,
    onExit: $,
    onExited: A,
    onExiting: O,
    addEndListener: (_) => {
      m === "auto" && E.start(w.current || 0, _), r && r(v.current, _);
    },
    timeout: m === "auto" ? null : m,
    ...x,
    children: (_, {
      ownerState: M,
      ...V
    }) => /* @__PURE__ */ C.cloneElement(s, {
      style: {
        opacity: 0,
        transform: Xc(0.75),
        visibility: _ === "exited" && !l ? "hidden" : void 0,
        ...p1[_],
        ...y,
        ...s.props.style
      },
      ref: T,
      ...V
    })
  });
});
process.env.NODE_ENV !== "production" && (es.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: Gr.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
es && (es.muiSupportAuto = !0);
var hn = "top", Bn = "bottom", Fn = "right", gn = "left", ld = "auto", hs = [hn, Bn, Fn, gn], Go = "start", ts = "end", m1 = "clippingParents", Ng = "viewport", vi = "popper", h1 = "reference", pp = /* @__PURE__ */ hs.reduce(function(e, t) {
  return e.concat([t + "-" + Go, t + "-" + ts]);
}, []), Ag = /* @__PURE__ */ [].concat(hs, [ld]).reduce(function(e, t) {
  return e.concat([t, t + "-" + Go, t + "-" + ts]);
}, []), g1 = "beforeRead", y1 = "read", b1 = "afterRead", v1 = "beforeMain", x1 = "main", w1 = "afterMain", S1 = "beforeWrite", T1 = "write", E1 = "afterWrite", C1 = [g1, y1, b1, v1, x1, w1, S1, T1, E1];
function hr(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function Rn(e) {
  if (e == null)
    return window;
  if (e.toString() !== "[object Window]") {
    var t = e.ownerDocument;
    return t && t.defaultView || window;
  }
  return e;
}
function po(e) {
  var t = Rn(e).Element;
  return e instanceof t || e instanceof Element;
}
function Dn(e) {
  var t = Rn(e).HTMLElement;
  return e instanceof t || e instanceof HTMLElement;
}
function cd(e) {
  if (typeof ShadowRoot > "u")
    return !1;
  var t = Rn(e).ShadowRoot;
  return e instanceof t || e instanceof ShadowRoot;
}
function O1(e) {
  var t = e.state;
  Object.keys(t.elements).forEach(function(n) {
    var r = t.styles[n] || {}, o = t.attributes[n] || {}, s = t.elements[n];
    !Dn(s) || !hr(s) || (Object.assign(s.style, r), Object.keys(o).forEach(function(a) {
      var l = o[a];
      l === !1 ? s.removeAttribute(a) : s.setAttribute(a, l === !0 ? "" : l);
    }));
  });
}
function R1(e) {
  var t = e.state, n = {
    popper: {
      position: t.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(t.elements.popper.style, n.popper), t.styles = n, t.elements.arrow && Object.assign(t.elements.arrow.style, n.arrow), function() {
    Object.keys(t.elements).forEach(function(r) {
      var o = t.elements[r], s = t.attributes[r] || {}, a = Object.keys(t.styles.hasOwnProperty(r) ? t.styles[r] : n[r]), l = a.reduce(function(c, u) {
        return c[u] = "", c;
      }, {});
      !Dn(o) || !hr(o) || (Object.assign(o.style, l), Object.keys(s).forEach(function(c) {
        o.removeAttribute(c);
      }));
    });
  };
}
const k1 = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: O1,
  effect: R1,
  requires: ["computeStyles"]
};
function dr(e) {
  return e.split("-")[0];
}
var uo = Math.max, va = Math.min, Ko = Math.round;
function Qc() {
  var e = navigator.userAgentData;
  return e != null && e.brands && Array.isArray(e.brands) ? e.brands.map(function(t) {
    return t.brand + "/" + t.version;
  }).join(" ") : navigator.userAgent;
}
function Mg() {
  return !/^((?!chrome|android).)*safari/i.test(Qc());
}
function Xo(e, t, n) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  var r = e.getBoundingClientRect(), o = 1, s = 1;
  t && Dn(e) && (o = e.offsetWidth > 0 && Ko(r.width) / e.offsetWidth || 1, s = e.offsetHeight > 0 && Ko(r.height) / e.offsetHeight || 1);
  var a = po(e) ? Rn(e) : window, l = a.visualViewport, c = !Mg() && n, u = (r.left + (c && l ? l.offsetLeft : 0)) / o, d = (r.top + (c && l ? l.offsetTop : 0)) / s, f = r.width / o, h = r.height / s;
  return {
    width: f,
    height: h,
    top: d,
    right: u + f,
    bottom: d + h,
    left: u,
    x: u,
    y: d
  };
}
function ud(e) {
  var t = Xo(e), n = e.offsetWidth, r = e.offsetHeight;
  return Math.abs(t.width - n) <= 1 && (n = t.width), Math.abs(t.height - r) <= 1 && (r = t.height), {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: n,
    height: r
  };
}
function _g(e, t) {
  var n = t.getRootNode && t.getRootNode();
  if (e.contains(t))
    return !0;
  if (n && cd(n)) {
    var r = t;
    do {
      if (r && e.isSameNode(r))
        return !0;
      r = r.parentNode || r.host;
    } while (r);
  }
  return !1;
}
function Pr(e) {
  return Rn(e).getComputedStyle(e);
}
function $1(e) {
  return ["table", "td", "th"].indexOf(hr(e)) >= 0;
}
function Kr(e) {
  return ((po(e) ? e.ownerDocument : (
    // $FlowFixMe[prop-missing]
    e.document
  )) || window.document).documentElement;
}
function sl(e) {
  return hr(e) === "html" ? e : (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    e.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e.parentNode || // DOM Element detected
    (cd(e) ? e.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    Kr(e)
  );
}
function mp(e) {
  return !Dn(e) || // https://github.com/popperjs/popper-core/issues/837
  Pr(e).position === "fixed" ? null : e.offsetParent;
}
function P1(e) {
  var t = /firefox/i.test(Qc()), n = /Trident/i.test(Qc());
  if (n && Dn(e)) {
    var r = Pr(e);
    if (r.position === "fixed")
      return null;
  }
  var o = sl(e);
  for (cd(o) && (o = o.host); Dn(o) && ["html", "body"].indexOf(hr(o)) < 0; ) {
    var s = Pr(o);
    if (s.transform !== "none" || s.perspective !== "none" || s.contain === "paint" || ["transform", "perspective"].indexOf(s.willChange) !== -1 || t && s.willChange === "filter" || t && s.filter && s.filter !== "none")
      return o;
    o = o.parentNode;
  }
  return null;
}
function gs(e) {
  for (var t = Rn(e), n = mp(e); n && $1(n) && Pr(n).position === "static"; )
    n = mp(n);
  return n && (hr(n) === "html" || hr(n) === "body" && Pr(n).position === "static") ? t : n || P1(e) || t;
}
function dd(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function Fi(e, t, n) {
  return uo(e, va(t, n));
}
function I1(e, t, n) {
  var r = Fi(e, t, n);
  return r > n ? n : r;
}
function Dg() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function Bg(e) {
  return Object.assign({}, Dg(), e);
}
function Fg(e, t) {
  return t.reduce(function(n, r) {
    return n[r] = e, n;
  }, {});
}
var N1 = function(t, n) {
  return t = typeof t == "function" ? t(Object.assign({}, n.rects, {
    placement: n.placement
  })) : t, Bg(typeof t != "number" ? t : Fg(t, hs));
};
function A1(e) {
  var t, n = e.state, r = e.name, o = e.options, s = n.elements.arrow, a = n.modifiersData.popperOffsets, l = dr(n.placement), c = dd(l), u = [gn, Fn].indexOf(l) >= 0, d = u ? "height" : "width";
  if (!(!s || !a)) {
    var f = N1(o.padding, n), h = ud(s), g = c === "y" ? hn : gn, y = c === "y" ? Bn : Fn, m = n.rects.reference[d] + n.rects.reference[c] - a[c] - n.rects.popper[d], b = a[c] - n.rects.reference[c], x = gs(s), E = x ? c === "y" ? x.clientHeight || 0 : x.clientWidth || 0 : 0, w = m / 2 - b / 2, S = f[g], v = E - h[d] - f[y], T = E / 2 - h[d] / 2 + w, R = Fi(S, T, v), k = c;
    n.modifiersData[r] = (t = {}, t[k] = R, t.centerOffset = R - T, t);
  }
}
function M1(e) {
  var t = e.state, n = e.options, r = n.element, o = r === void 0 ? "[data-popper-arrow]" : r;
  o != null && (typeof o == "string" && (o = t.elements.popper.querySelector(o), !o) || _g(t.elements.popper, o) && (t.elements.arrow = o));
}
const _1 = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: A1,
  effect: M1,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function Qo(e) {
  return e.split("-")[1];
}
var D1 = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function B1(e, t) {
  var n = e.x, r = e.y, o = t.devicePixelRatio || 1;
  return {
    x: Ko(n * o) / o || 0,
    y: Ko(r * o) / o || 0
  };
}
function hp(e) {
  var t, n = e.popper, r = e.popperRect, o = e.placement, s = e.variation, a = e.offsets, l = e.position, c = e.gpuAcceleration, u = e.adaptive, d = e.roundOffsets, f = e.isFixed, h = a.x, g = h === void 0 ? 0 : h, y = a.y, m = y === void 0 ? 0 : y, b = typeof d == "function" ? d({
    x: g,
    y: m
  }) : {
    x: g,
    y: m
  };
  g = b.x, m = b.y;
  var x = a.hasOwnProperty("x"), E = a.hasOwnProperty("y"), w = gn, S = hn, v = window;
  if (u) {
    var T = gs(n), R = "clientHeight", k = "clientWidth";
    if (T === Rn(n) && (T = Kr(n), Pr(T).position !== "static" && l === "absolute" && (R = "scrollHeight", k = "scrollWidth")), T = T, o === hn || (o === gn || o === Fn) && s === ts) {
      S = Bn;
      var I = f && T === v && v.visualViewport ? v.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        T[R]
      );
      m -= I - r.height, m *= c ? 1 : -1;
    }
    if (o === gn || (o === hn || o === Bn) && s === ts) {
      w = Fn;
      var p = f && T === v && v.visualViewport ? v.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        T[k]
      );
      g -= p - r.width, g *= c ? 1 : -1;
    }
  }
  var O = Object.assign({
    position: l
  }, u && D1), $ = d === !0 ? B1({
    x: g,
    y: m
  }, Rn(n)) : {
    x: g,
    y: m
  };
  if (g = $.x, m = $.y, c) {
    var A;
    return Object.assign({}, O, (A = {}, A[S] = E ? "0" : "", A[w] = x ? "0" : "", A.transform = (v.devicePixelRatio || 1) <= 1 ? "translate(" + g + "px, " + m + "px)" : "translate3d(" + g + "px, " + m + "px, 0)", A));
  }
  return Object.assign({}, O, (t = {}, t[S] = E ? m + "px" : "", t[w] = x ? g + "px" : "", t.transform = "", t));
}
function F1(e) {
  var t = e.state, n = e.options, r = n.gpuAcceleration, o = r === void 0 ? !0 : r, s = n.adaptive, a = s === void 0 ? !0 : s, l = n.roundOffsets, c = l === void 0 ? !0 : l, u = {
    placement: dr(t.placement),
    variation: Qo(t.placement),
    popper: t.elements.popper,
    popperRect: t.rects.popper,
    gpuAcceleration: o,
    isFixed: t.options.strategy === "fixed"
  };
  t.modifiersData.popperOffsets != null && (t.styles.popper = Object.assign({}, t.styles.popper, hp(Object.assign({}, u, {
    offsets: t.modifiersData.popperOffsets,
    position: t.options.strategy,
    adaptive: a,
    roundOffsets: c
  })))), t.modifiersData.arrow != null && (t.styles.arrow = Object.assign({}, t.styles.arrow, hp(Object.assign({}, u, {
    offsets: t.modifiersData.arrow,
    position: "absolute",
    adaptive: !1,
    roundOffsets: c
  })))), t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-placement": t.placement
  });
}
const j1 = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: F1,
  data: {}
};
var Bs = {
  passive: !0
};
function L1(e) {
  var t = e.state, n = e.instance, r = e.options, o = r.scroll, s = o === void 0 ? !0 : o, a = r.resize, l = a === void 0 ? !0 : a, c = Rn(t.elements.popper), u = [].concat(t.scrollParents.reference, t.scrollParents.popper);
  return s && u.forEach(function(d) {
    d.addEventListener("scroll", n.update, Bs);
  }), l && c.addEventListener("resize", n.update, Bs), function() {
    s && u.forEach(function(d) {
      d.removeEventListener("scroll", n.update, Bs);
    }), l && c.removeEventListener("resize", n.update, Bs);
  };
}
const V1 = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: function() {
  },
  effect: L1,
  data: {}
};
var z1 = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function ia(e) {
  return e.replace(/left|right|bottom|top/g, function(t) {
    return z1[t];
  });
}
var W1 = {
  start: "end",
  end: "start"
};
function gp(e) {
  return e.replace(/start|end/g, function(t) {
    return W1[t];
  });
}
function fd(e) {
  var t = Rn(e), n = t.pageXOffset, r = t.pageYOffset;
  return {
    scrollLeft: n,
    scrollTop: r
  };
}
function pd(e) {
  return Xo(Kr(e)).left + fd(e).scrollLeft;
}
function U1(e, t) {
  var n = Rn(e), r = Kr(e), o = n.visualViewport, s = r.clientWidth, a = r.clientHeight, l = 0, c = 0;
  if (o) {
    s = o.width, a = o.height;
    var u = Mg();
    (u || !u && t === "fixed") && (l = o.offsetLeft, c = o.offsetTop);
  }
  return {
    width: s,
    height: a,
    x: l + pd(e),
    y: c
  };
}
function H1(e) {
  var t, n = Kr(e), r = fd(e), o = (t = e.ownerDocument) == null ? void 0 : t.body, s = uo(n.scrollWidth, n.clientWidth, o ? o.scrollWidth : 0, o ? o.clientWidth : 0), a = uo(n.scrollHeight, n.clientHeight, o ? o.scrollHeight : 0, o ? o.clientHeight : 0), l = -r.scrollLeft + pd(e), c = -r.scrollTop;
  return Pr(o || n).direction === "rtl" && (l += uo(n.clientWidth, o ? o.clientWidth : 0) - s), {
    width: s,
    height: a,
    x: l,
    y: c
  };
}
function md(e) {
  var t = Pr(e), n = t.overflow, r = t.overflowX, o = t.overflowY;
  return /auto|scroll|overlay|hidden/.test(n + o + r);
}
function jg(e) {
  return ["html", "body", "#document"].indexOf(hr(e)) >= 0 ? e.ownerDocument.body : Dn(e) && md(e) ? e : jg(sl(e));
}
function ji(e, t) {
  var n;
  t === void 0 && (t = []);
  var r = jg(e), o = r === ((n = e.ownerDocument) == null ? void 0 : n.body), s = Rn(r), a = o ? [s].concat(s.visualViewport || [], md(r) ? r : []) : r, l = t.concat(a);
  return o ? l : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    l.concat(ji(sl(a)))
  );
}
function Jc(e) {
  return Object.assign({}, e, {
    left: e.x,
    top: e.y,
    right: e.x + e.width,
    bottom: e.y + e.height
  });
}
function q1(e, t) {
  var n = Xo(e, !1, t === "fixed");
  return n.top = n.top + e.clientTop, n.left = n.left + e.clientLeft, n.bottom = n.top + e.clientHeight, n.right = n.left + e.clientWidth, n.width = e.clientWidth, n.height = e.clientHeight, n.x = n.left, n.y = n.top, n;
}
function yp(e, t, n) {
  return t === Ng ? Jc(U1(e, n)) : po(t) ? q1(t, n) : Jc(H1(Kr(e)));
}
function Y1(e) {
  var t = ji(sl(e)), n = ["absolute", "fixed"].indexOf(Pr(e).position) >= 0, r = n && Dn(e) ? gs(e) : e;
  return po(r) ? t.filter(function(o) {
    return po(o) && _g(o, r) && hr(o) !== "body";
  }) : [];
}
function G1(e, t, n, r) {
  var o = t === "clippingParents" ? Y1(e) : [].concat(t), s = [].concat(o, [n]), a = s[0], l = s.reduce(function(c, u) {
    var d = yp(e, u, r);
    return c.top = uo(d.top, c.top), c.right = va(d.right, c.right), c.bottom = va(d.bottom, c.bottom), c.left = uo(d.left, c.left), c;
  }, yp(e, a, r));
  return l.width = l.right - l.left, l.height = l.bottom - l.top, l.x = l.left, l.y = l.top, l;
}
function Lg(e) {
  var t = e.reference, n = e.element, r = e.placement, o = r ? dr(r) : null, s = r ? Qo(r) : null, a = t.x + t.width / 2 - n.width / 2, l = t.y + t.height / 2 - n.height / 2, c;
  switch (o) {
    case hn:
      c = {
        x: a,
        y: t.y - n.height
      };
      break;
    case Bn:
      c = {
        x: a,
        y: t.y + t.height
      };
      break;
    case Fn:
      c = {
        x: t.x + t.width,
        y: l
      };
      break;
    case gn:
      c = {
        x: t.x - n.width,
        y: l
      };
      break;
    default:
      c = {
        x: t.x,
        y: t.y
      };
  }
  var u = o ? dd(o) : null;
  if (u != null) {
    var d = u === "y" ? "height" : "width";
    switch (s) {
      case Go:
        c[u] = c[u] - (t[d] / 2 - n[d] / 2);
        break;
      case ts:
        c[u] = c[u] + (t[d] / 2 - n[d] / 2);
        break;
    }
  }
  return c;
}
function ns(e, t) {
  t === void 0 && (t = {});
  var n = t, r = n.placement, o = r === void 0 ? e.placement : r, s = n.strategy, a = s === void 0 ? e.strategy : s, l = n.boundary, c = l === void 0 ? m1 : l, u = n.rootBoundary, d = u === void 0 ? Ng : u, f = n.elementContext, h = f === void 0 ? vi : f, g = n.altBoundary, y = g === void 0 ? !1 : g, m = n.padding, b = m === void 0 ? 0 : m, x = Bg(typeof b != "number" ? b : Fg(b, hs)), E = h === vi ? h1 : vi, w = e.rects.popper, S = e.elements[y ? E : h], v = G1(po(S) ? S : S.contextElement || Kr(e.elements.popper), c, d, a), T = Xo(e.elements.reference), R = Lg({
    reference: T,
    element: w,
    placement: o
  }), k = Jc(Object.assign({}, w, R)), I = h === vi ? k : T, p = {
    top: v.top - I.top + x.top,
    bottom: I.bottom - v.bottom + x.bottom,
    left: v.left - I.left + x.left,
    right: I.right - v.right + x.right
  }, O = e.modifiersData.offset;
  if (h === vi && O) {
    var $ = O[o];
    Object.keys(p).forEach(function(A) {
      var D = [Fn, Bn].indexOf(A) >= 0 ? 1 : -1, _ = [hn, Bn].indexOf(A) >= 0 ? "y" : "x";
      p[A] += $[_] * D;
    });
  }
  return p;
}
function K1(e, t) {
  t === void 0 && (t = {});
  var n = t, r = n.placement, o = n.boundary, s = n.rootBoundary, a = n.padding, l = n.flipVariations, c = n.allowedAutoPlacements, u = c === void 0 ? Ag : c, d = Qo(r), f = d ? l ? pp : pp.filter(function(y) {
    return Qo(y) === d;
  }) : hs, h = f.filter(function(y) {
    return u.indexOf(y) >= 0;
  });
  h.length === 0 && (h = f);
  var g = h.reduce(function(y, m) {
    return y[m] = ns(e, {
      placement: m,
      boundary: o,
      rootBoundary: s,
      padding: a
    })[dr(m)], y;
  }, {});
  return Object.keys(g).sort(function(y, m) {
    return g[y] - g[m];
  });
}
function X1(e) {
  if (dr(e) === ld)
    return [];
  var t = ia(e);
  return [gp(e), t, gp(t)];
}
function Q1(e) {
  var t = e.state, n = e.options, r = e.name;
  if (!t.modifiersData[r]._skip) {
    for (var o = n.mainAxis, s = o === void 0 ? !0 : o, a = n.altAxis, l = a === void 0 ? !0 : a, c = n.fallbackPlacements, u = n.padding, d = n.boundary, f = n.rootBoundary, h = n.altBoundary, g = n.flipVariations, y = g === void 0 ? !0 : g, m = n.allowedAutoPlacements, b = t.options.placement, x = dr(b), E = x === b, w = c || (E || !y ? [ia(b)] : X1(b)), S = [b].concat(w).reduce(function(oe, ne) {
      return oe.concat(dr(ne) === ld ? K1(t, {
        placement: ne,
        boundary: d,
        rootBoundary: f,
        padding: u,
        flipVariations: y,
        allowedAutoPlacements: m
      }) : ne);
    }, []), v = t.rects.reference, T = t.rects.popper, R = /* @__PURE__ */ new Map(), k = !0, I = S[0], p = 0; p < S.length; p++) {
      var O = S[p], $ = dr(O), A = Qo(O) === Go, D = [hn, Bn].indexOf($) >= 0, _ = D ? "width" : "height", M = ns(t, {
        placement: O,
        boundary: d,
        rootBoundary: f,
        altBoundary: h,
        padding: u
      }), V = D ? A ? Fn : gn : A ? Bn : hn;
      v[_] > T[_] && (V = ia(V));
      var Y = ia(V), U = [];
      if (s && U.push(M[$] <= 0), l && U.push(M[V] <= 0, M[Y] <= 0), U.every(function(oe) {
        return oe;
      })) {
        I = O, k = !1;
        break;
      }
      R.set(O, U);
    }
    if (k)
      for (var j = y ? 3 : 1, W = function(ne) {
        var se = S.find(function(de) {
          var X = R.get(de);
          if (X)
            return X.slice(0, ne).every(function(ae) {
              return ae;
            });
        });
        if (se)
          return I = se, "break";
      }, ee = j; ee > 0; ee--) {
        var K = W(ee);
        if (K === "break") break;
      }
    t.placement !== I && (t.modifiersData[r]._skip = !0, t.placement = I, t.reset = !0);
  }
}
const J1 = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: Q1,
  requiresIfExists: ["offset"],
  data: {
    _skip: !1
  }
};
function bp(e, t, n) {
  return n === void 0 && (n = {
    x: 0,
    y: 0
  }), {
    top: e.top - t.height - n.y,
    right: e.right - t.width + n.x,
    bottom: e.bottom - t.height + n.y,
    left: e.left - t.width - n.x
  };
}
function vp(e) {
  return [hn, Fn, Bn, gn].some(function(t) {
    return e[t] >= 0;
  });
}
function Z1(e) {
  var t = e.state, n = e.name, r = t.rects.reference, o = t.rects.popper, s = t.modifiersData.preventOverflow, a = ns(t, {
    elementContext: "reference"
  }), l = ns(t, {
    altBoundary: !0
  }), c = bp(a, r), u = bp(l, o, s), d = vp(c), f = vp(u);
  t.modifiersData[n] = {
    referenceClippingOffsets: c,
    popperEscapeOffsets: u,
    isReferenceHidden: d,
    hasPopperEscaped: f
  }, t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-reference-hidden": d,
    "data-popper-escaped": f
  });
}
const eE = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: Z1
};
function tE(e, t, n) {
  var r = dr(e), o = [gn, hn].indexOf(r) >= 0 ? -1 : 1, s = typeof n == "function" ? n(Object.assign({}, t, {
    placement: e
  })) : n, a = s[0], l = s[1];
  return a = a || 0, l = (l || 0) * o, [gn, Fn].indexOf(r) >= 0 ? {
    x: l,
    y: a
  } : {
    x: a,
    y: l
  };
}
function nE(e) {
  var t = e.state, n = e.options, r = e.name, o = n.offset, s = o === void 0 ? [0, 0] : o, a = Ag.reduce(function(d, f) {
    return d[f] = tE(f, t.rects, s), d;
  }, {}), l = a[t.placement], c = l.x, u = l.y;
  t.modifiersData.popperOffsets != null && (t.modifiersData.popperOffsets.x += c, t.modifiersData.popperOffsets.y += u), t.modifiersData[r] = a;
}
const rE = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: nE
};
function oE(e) {
  var t = e.state, n = e.name;
  t.modifiersData[n] = Lg({
    reference: t.rects.reference,
    element: t.rects.popper,
    placement: t.placement
  });
}
const iE = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: oE,
  data: {}
};
function sE(e) {
  return e === "x" ? "y" : "x";
}
function aE(e) {
  var t = e.state, n = e.options, r = e.name, o = n.mainAxis, s = o === void 0 ? !0 : o, a = n.altAxis, l = a === void 0 ? !1 : a, c = n.boundary, u = n.rootBoundary, d = n.altBoundary, f = n.padding, h = n.tether, g = h === void 0 ? !0 : h, y = n.tetherOffset, m = y === void 0 ? 0 : y, b = ns(t, {
    boundary: c,
    rootBoundary: u,
    padding: f,
    altBoundary: d
  }), x = dr(t.placement), E = Qo(t.placement), w = !E, S = dd(x), v = sE(S), T = t.modifiersData.popperOffsets, R = t.rects.reference, k = t.rects.popper, I = typeof m == "function" ? m(Object.assign({}, t.rects, {
    placement: t.placement
  })) : m, p = typeof I == "number" ? {
    mainAxis: I,
    altAxis: I
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, I), O = t.modifiersData.offset ? t.modifiersData.offset[t.placement] : null, $ = {
    x: 0,
    y: 0
  };
  if (T) {
    if (s) {
      var A, D = S === "y" ? hn : gn, _ = S === "y" ? Bn : Fn, M = S === "y" ? "height" : "width", V = T[S], Y = V + b[D], U = V - b[_], j = g ? -k[M] / 2 : 0, W = E === Go ? R[M] : k[M], ee = E === Go ? -k[M] : -R[M], K = t.elements.arrow, oe = g && K ? ud(K) : {
        width: 0,
        height: 0
      }, ne = t.modifiersData["arrow#persistent"] ? t.modifiersData["arrow#persistent"].padding : Dg(), se = ne[D], de = ne[_], X = Fi(0, R[M], oe[M]), ae = w ? R[M] / 2 - j - X - se - p.mainAxis : W - X - se - p.mainAxis, Q = w ? -R[M] / 2 + j + X + de + p.mainAxis : ee + X + de + p.mainAxis, ie = t.elements.arrow && gs(t.elements.arrow), F = ie ? S === "y" ? ie.clientTop || 0 : ie.clientLeft || 0 : 0, he = (A = O == null ? void 0 : O[S]) != null ? A : 0, fe = V + ae - he - F, Te = V + Q - he, Le = Fi(g ? va(Y, fe) : Y, V, g ? uo(U, Te) : U);
      T[S] = Le, $[S] = Le - V;
    }
    if (l) {
      var Ae, Ie = S === "x" ? hn : gn, Re = S === "x" ? Bn : Fn, Be = T[v], Oe = v === "y" ? "height" : "width", N = Be + b[Ie], q = Be - b[Re], J = [hn, gn].indexOf(x) !== -1, H = (Ae = O == null ? void 0 : O[v]) != null ? Ae : 0, B = J ? N : Be - R[Oe] - k[Oe] - H + p.altAxis, z = J ? Be + R[Oe] + k[Oe] - H - p.altAxis : q, G = g && J ? I1(B, Be, z) : Fi(g ? B : N, Be, g ? z : q);
      T[v] = G, $[v] = G - Be;
    }
    t.modifiersData[r] = $;
  }
}
const lE = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: aE,
  requiresIfExists: ["offset"]
};
function cE(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function uE(e) {
  return e === Rn(e) || !Dn(e) ? fd(e) : cE(e);
}
function dE(e) {
  var t = e.getBoundingClientRect(), n = Ko(t.width) / e.offsetWidth || 1, r = Ko(t.height) / e.offsetHeight || 1;
  return n !== 1 || r !== 1;
}
function fE(e, t, n) {
  n === void 0 && (n = !1);
  var r = Dn(t), o = Dn(t) && dE(t), s = Kr(t), a = Xo(e, o, n), l = {
    scrollLeft: 0,
    scrollTop: 0
  }, c = {
    x: 0,
    y: 0
  };
  return (r || !r && !n) && ((hr(t) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  md(s)) && (l = uE(t)), Dn(t) ? (c = Xo(t, !0), c.x += t.clientLeft, c.y += t.clientTop) : s && (c.x = pd(s))), {
    x: a.left + l.scrollLeft - c.x,
    y: a.top + l.scrollTop - c.y,
    width: a.width,
    height: a.height
  };
}
function pE(e) {
  var t = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), r = [];
  e.forEach(function(s) {
    t.set(s.name, s);
  });
  function o(s) {
    n.add(s.name);
    var a = [].concat(s.requires || [], s.requiresIfExists || []);
    a.forEach(function(l) {
      if (!n.has(l)) {
        var c = t.get(l);
        c && o(c);
      }
    }), r.push(s);
  }
  return e.forEach(function(s) {
    n.has(s.name) || o(s);
  }), r;
}
function mE(e) {
  var t = pE(e);
  return C1.reduce(function(n, r) {
    return n.concat(t.filter(function(o) {
      return o.phase === r;
    }));
  }, []);
}
function hE(e) {
  var t;
  return function() {
    return t || (t = new Promise(function(n) {
      Promise.resolve().then(function() {
        t = void 0, n(e());
      });
    })), t;
  };
}
function gE(e) {
  var t = e.reduce(function(n, r) {
    var o = n[r.name];
    return n[r.name] = o ? Object.assign({}, o, r, {
      options: Object.assign({}, o.options, r.options),
      data: Object.assign({}, o.data, r.data)
    }) : r, n;
  }, {});
  return Object.keys(t).map(function(n) {
    return t[n];
  });
}
var xp = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function wp() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return !t.some(function(r) {
    return !(r && typeof r.getBoundingClientRect == "function");
  });
}
function yE(e) {
  e === void 0 && (e = {});
  var t = e, n = t.defaultModifiers, r = n === void 0 ? [] : n, o = t.defaultOptions, s = o === void 0 ? xp : o;
  return function(l, c, u) {
    u === void 0 && (u = s);
    var d = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, xp, s),
      modifiersData: {},
      elements: {
        reference: l,
        popper: c
      },
      attributes: {},
      styles: {}
    }, f = [], h = !1, g = {
      state: d,
      setOptions: function(x) {
        var E = typeof x == "function" ? x(d.options) : x;
        m(), d.options = Object.assign({}, s, d.options, E), d.scrollParents = {
          reference: po(l) ? ji(l) : l.contextElement ? ji(l.contextElement) : [],
          popper: ji(c)
        };
        var w = mE(gE([].concat(r, d.options.modifiers)));
        return d.orderedModifiers = w.filter(function(S) {
          return S.enabled;
        }), y(), g.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function() {
        if (!h) {
          var x = d.elements, E = x.reference, w = x.popper;
          if (wp(E, w)) {
            d.rects = {
              reference: fE(E, gs(w), d.options.strategy === "fixed"),
              popper: ud(w)
            }, d.reset = !1, d.placement = d.options.placement, d.orderedModifiers.forEach(function(p) {
              return d.modifiersData[p.name] = Object.assign({}, p.data);
            });
            for (var S = 0; S < d.orderedModifiers.length; S++) {
              if (d.reset === !0) {
                d.reset = !1, S = -1;
                continue;
              }
              var v = d.orderedModifiers[S], T = v.fn, R = v.options, k = R === void 0 ? {} : R, I = v.name;
              typeof T == "function" && (d = T({
                state: d,
                options: k,
                name: I,
                instance: g
              }) || d);
            }
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: hE(function() {
        return new Promise(function(b) {
          g.forceUpdate(), b(d);
        });
      }),
      destroy: function() {
        m(), h = !0;
      }
    };
    if (!wp(l, c))
      return g;
    g.setOptions(u).then(function(b) {
      !h && u.onFirstUpdate && u.onFirstUpdate(b);
    });
    function y() {
      d.orderedModifiers.forEach(function(b) {
        var x = b.name, E = b.options, w = E === void 0 ? {} : E, S = b.effect;
        if (typeof S == "function") {
          var v = S({
            state: d,
            name: x,
            instance: g,
            options: w
          }), T = function() {
          };
          f.push(v || T);
        }
      });
    }
    function m() {
      f.forEach(function(b) {
        return b();
      }), f = [];
    }
    return g;
  };
}
var bE = [V1, iE, j1, k1, rE, J1, lE, _1, eE], vE = /* @__PURE__ */ yE({
  defaultModifiers: bE
});
function xE(e) {
  return typeof e == "function" ? e() : e;
}
const Jo = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    children: r,
    container: o,
    disablePortal: s = !1
  } = t, [a, l] = C.useState(null), c = rn(/* @__PURE__ */ C.isValidElement(r) ? go(r) : null, n);
  if (fr(() => {
    s || l(xE(o) || document.body);
  }, [o, s]), fr(() => {
    if (a && !s)
      return jc(n, a), () => {
        jc(n, null);
      };
  }, [n, a, s]), s) {
    if (/* @__PURE__ */ C.isValidElement(r)) {
      const u = {
        ref: c
      };
      return /* @__PURE__ */ C.cloneElement(r, u);
    }
    return r;
  }
  return a && /* @__PURE__ */ dh.createPortal(r, a);
});
process.env.NODE_ENV !== "production" && (Jo.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: i.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([kr, i.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool
});
process.env.NODE_ENV !== "production" && (Jo.propTypes = ms(Jo.propTypes));
function wE(e) {
  return gt("MuiPopper", e);
}
wt("MuiPopper", ["root"]);
function SE(e, t) {
  if (t === "ltr")
    return e;
  switch (e) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return e;
  }
}
function xa(e) {
  return typeof e == "function" ? e() : e;
}
function al(e) {
  return e.nodeType !== void 0;
}
function TE(e) {
  return !al(e);
}
const EE = (e) => {
  const {
    classes: t
  } = e;
  return Ct({
    root: ["root"]
  }, wE, t);
}, CE = {}, OE = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    anchorEl: r,
    children: o,
    direction: s,
    disablePortal: a,
    modifiers: l,
    open: c,
    placement: u,
    popperOptions: d,
    popperRef: f,
    slotProps: h = {},
    slots: g = {},
    TransitionProps: y,
    // @ts-ignore internal logic
    ownerState: m,
    // prevent from spreading to DOM, it can come from the parent component e.g. Select.
    ...b
  } = t, x = C.useRef(null), E = rn(x, n), w = C.useRef(null), S = rn(w, f), v = C.useRef(S);
  fr(() => {
    v.current = S;
  }, [S]), C.useImperativeHandle(f, () => w.current, []);
  const T = SE(u, s), [R, k] = C.useState(T), [I, p] = C.useState(xa(r));
  C.useEffect(() => {
    w.current && w.current.forceUpdate();
  }), C.useEffect(() => {
    r && p(xa(r));
  }, [r]), fr(() => {
    if (!I || !c)
      return;
    const _ = (Y) => {
      k(Y.placement);
    };
    if (process.env.NODE_ENV !== "production" && I && al(I) && I.nodeType === 1) {
      const Y = I.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && Y.top === 0 && Y.left === 0 && Y.right === 0 && Y.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    let M = [{
      name: "preventOverflow",
      options: {
        altBoundary: a
      }
    }, {
      name: "flip",
      options: {
        altBoundary: a
      }
    }, {
      name: "onUpdate",
      enabled: !0,
      phase: "afterWrite",
      fn: ({
        state: Y
      }) => {
        _(Y);
      }
    }];
    l != null && (M = M.concat(l)), d && d.modifiers != null && (M = M.concat(d.modifiers));
    const V = vE(I, x.current, {
      placement: T,
      ...d,
      modifiers: M
    });
    return v.current(V), () => {
      V.destroy(), v.current(null);
    };
  }, [I, a, l, c, d, T]);
  const O = {
    placement: R
  };
  y !== null && (O.TransitionProps = y);
  const $ = EE(t), A = g.root ?? "div", D = Vc({
    elementType: A,
    externalSlotProps: h.root,
    externalForwardedProps: b,
    additionalProps: {
      role: "tooltip",
      ref: E
    },
    ownerState: t,
    className: $.root
  });
  return /* @__PURE__ */ P(A, {
    ...D,
    children: typeof o == "function" ? o(O) : o
  });
}), Vg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    anchorEl: r,
    children: o,
    container: s,
    direction: a = "ltr",
    disablePortal: l = !1,
    keepMounted: c = !1,
    modifiers: u,
    open: d,
    placement: f = "bottom",
    popperOptions: h = CE,
    popperRef: g,
    style: y,
    transition: m = !1,
    slotProps: b = {},
    slots: x = {},
    ...E
  } = t, [w, S] = C.useState(!0), v = () => {
    S(!1);
  }, T = () => {
    S(!0);
  };
  if (!c && !d && (!m || w))
    return null;
  let R;
  if (s)
    R = s;
  else if (r) {
    const p = xa(r);
    R = p && al(p) ? mn(p).body : mn(null).body;
  }
  const k = !d && c && (!m || w) ? "none" : void 0, I = m ? {
    in: d,
    onEnter: v,
    onExited: T
  } : void 0;
  return /* @__PURE__ */ P(Jo, {
    disablePortal: l,
    container: R,
    children: /* @__PURE__ */ P(OE, {
      anchorEl: r,
      direction: a,
      disablePortal: l,
      modifiers: u,
      ref: n,
      open: m ? !w : d,
      placement: f,
      popperOptions: h,
      popperRef: g,
      slotProps: b,
      slots: x,
      ...E,
      style: {
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: "fixed",
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display: k,
        ...y
      },
      TransitionProps: I,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (Vg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: Yr(i.oneOfType([kr, i.object, i.func]), (e) => {
    if (e.open) {
      const t = xa(e.anchorEl);
      if (t && al(t) && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || TE(t) && t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join(`
`));
    }
    return null;
  }),
  /**
   * Popper render function or node.
   */
  children: i.oneOfType([i.node, i.func]),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([kr, i.func]),
  /**
   * Direction of the text.
   * @default 'ltr'
   */
  direction: i.oneOf(["ltr", "rtl"]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: i.arrayOf(i.shape({
    data: i.object,
    effect: i.func,
    enabled: i.bool,
    fn: i.func,
    name: i.any,
    options: i.object,
    phase: i.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: i.arrayOf(i.string),
    requiresIfExists: i.arrayOf(i.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: i.shape({
    modifiers: i.array,
    onFirstUpdate: i.func,
    placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: i.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Ar,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType
  }),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: i.bool
});
const RE = Pe(Vg, {
  name: "MuiPopper",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), ll = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = nl(), o = St({
    props: t,
    name: "MuiPopper"
  }), {
    anchorEl: s,
    component: a,
    components: l,
    componentsProps: c,
    container: u,
    disablePortal: d,
    keepMounted: f,
    modifiers: h,
    open: g,
    placement: y,
    popperOptions: m,
    popperRef: b,
    transition: x,
    slots: E,
    slotProps: w,
    ...S
  } = o, v = (E == null ? void 0 : E.root) ?? (l == null ? void 0 : l.Root), T = {
    anchorEl: s,
    container: u,
    disablePortal: d,
    keepMounted: f,
    modifiers: h,
    open: g,
    placement: y,
    popperOptions: m,
    popperRef: b,
    transition: x,
    ...S
  };
  return /* @__PURE__ */ P(RE, {
    as: a,
    direction: r ? "rtl" : "ltr",
    slots: {
      root: v
    },
    slotProps: w ?? c,
    ...T,
    ref: n
  });
});
process.env.NODE_ENV !== "production" && (ll.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: i.oneOfType([kr, i.object, i.func]),
  /**
   * Popper render function or node.
   */
  children: i.oneOfType([i.node, i.func]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  components: i.shape({
    Root: i.elementType
  }),
  /**
   * The props used for each slot inside the Popper.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  componentsProps: i.shape({
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([kr, i.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: i.arrayOf(i.shape({
    data: i.object,
    effect: i.func,
    enabled: i.bool,
    fn: i.func,
    name: i.any,
    options: i.object,
    phase: i.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: i.arrayOf(i.string),
    requiresIfExists: i.arrayOf(i.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: i.shape({
    modifiers: i.array,
    onFirstUpdate: i.func,
    placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: i.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Ar,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: i.bool
});
function kE(e) {
  return gt("MuiTooltip", e);
}
const Pt = wt("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]);
function $E(e) {
  return Math.round(e * 1e5) / 1e5;
}
const PE = (e) => {
  const {
    classes: t,
    disableInteractive: n,
    arrow: r,
    touch: o,
    placement: s
  } = e, a = {
    popper: ["popper", !n && "popperInteractive", r && "popperArrow"],
    tooltip: ["tooltip", r && "tooltipArrow", o && "touch", `tooltipPlacement${xe(s.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return Ct(a, kE, t);
}, IE = Pe(ll, {
  name: "MuiTooltip",
  slot: "Popper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.popper, !n.disableInteractive && t.popperInteractive, n.arrow && t.popperArrow, !n.open && t.popperClose];
  }
})(Ke(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.tooltip,
  pointerEvents: "none",
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableInteractive,
    style: {
      pointerEvents: "auto"
    }
  }, {
    props: ({
      open: t
    }) => !t,
    style: {
      pointerEvents: "none"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      [`&[data-popper-placement*="bottom"] .${Pt.arrow}`]: {
        top: 0,
        marginTop: "-0.71em",
        "&::before": {
          transformOrigin: "0 100%"
        }
      },
      [`&[data-popper-placement*="top"] .${Pt.arrow}`]: {
        bottom: 0,
        marginBottom: "-0.71em",
        "&::before": {
          transformOrigin: "100% 0"
        }
      },
      [`&[data-popper-placement*="right"] .${Pt.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "100% 100%"
        }
      },
      [`&[data-popper-placement*="left"] .${Pt.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "0 0"
        }
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${Pt.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${Pt.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${Pt.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${Pt.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }]
}))), NE = Pe("div", {
  name: "MuiTooltip",
  slot: "Tooltip",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.tooltip, n.touch && t.touch, n.arrow && t.tooltipArrow, t[`tooltipPlacement${xe(n.placement.split("-")[0])}`]];
  }
})(Ke(({
  theme: e
}) => ({
  backgroundColor: e.vars ? e.vars.palette.Tooltip.bg : Yt(e.palette.grey[700], 0.92),
  borderRadius: (e.vars || e).shape.borderRadius,
  color: (e.vars || e).palette.common.white,
  fontFamily: e.typography.fontFamily,
  padding: "4px 8px",
  fontSize: e.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: "break-word",
  fontWeight: e.typography.fontWeightMedium,
  [`.${Pt.popper}[data-popper-placement*="left"] &`]: {
    transformOrigin: "right center"
  },
  [`.${Pt.popper}[data-popper-placement*="right"] &`]: {
    transformOrigin: "left center"
  },
  [`.${Pt.popper}[data-popper-placement*="top"] &`]: {
    transformOrigin: "center bottom",
    marginBottom: "14px"
  },
  [`.${Pt.popper}[data-popper-placement*="bottom"] &`]: {
    transformOrigin: "center top",
    marginTop: "14px"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      position: "relative",
      margin: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      padding: "8px 16px",
      fontSize: e.typography.pxToRem(14),
      lineHeight: `${$E(16 / 14)}em`,
      fontWeight: e.typography.fontWeightRegular
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl,
    style: {
      [`.${Pt.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "14px"
      },
      [`.${Pt.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl && t.touch,
    style: {
      [`.${Pt.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "24px"
      },
      [`.${Pt.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl,
    style: {
      [`.${Pt.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "14px"
      },
      [`.${Pt.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl && t.touch,
    style: {
      [`.${Pt.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "24px"
      },
      [`.${Pt.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${Pt.popper}[data-popper-placement*="top"] &`]: {
        marginBottom: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${Pt.popper}[data-popper-placement*="bottom"] &`]: {
        marginTop: "24px"
      }
    }
  }]
}))), AE = Pe("span", {
  name: "MuiTooltip",
  slot: "Arrow",
  overridesResolver: (e, t) => t.arrow
})(Ke(({
  theme: e
}) => ({
  overflow: "hidden",
  position: "absolute",
  width: "1em",
  height: "0.71em",
  boxSizing: "border-box",
  color: e.vars ? e.vars.palette.Tooltip.bg : Yt(e.palette.grey[700], 0.9),
  "&::before": {
    content: '""',
    margin: "auto",
    display: "block",
    width: "100%",
    height: "100%",
    backgroundColor: "currentColor",
    transform: "rotate(45deg)"
  }
})));
let Fs = !1;
const Sp = new Gh();
let xi = {
  x: 0,
  y: 0
};
function js(e, t) {
  return (n, ...r) => {
    t && t(n, ...r), e(n, ...r);
  };
}
const hd = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = St({
    props: t,
    name: "MuiTooltip"
  }), {
    arrow: o = !1,
    children: s,
    classes: a,
    components: l = {},
    componentsProps: c = {},
    describeChild: u = !1,
    disableFocusListener: d = !1,
    disableHoverListener: f = !1,
    disableInteractive: h = !1,
    disableTouchListener: g = !1,
    enterDelay: y = 100,
    enterNextDelay: m = 0,
    enterTouchDelay: b = 700,
    followCursor: x = !1,
    id: E,
    leaveDelay: w = 0,
    leaveTouchDelay: S = 1500,
    onClose: v,
    onOpen: T,
    open: R,
    placement: k = "bottom",
    PopperComponent: I,
    PopperProps: p = {},
    slotProps: O = {},
    slots: $ = {},
    title: A,
    TransitionComponent: D,
    TransitionProps: _,
    ...M
  } = r, V = /* @__PURE__ */ C.isValidElement(s) ? s : /* @__PURE__ */ P("span", {
    children: s
  }), Y = Mr(), U = nl(), [j, W] = C.useState(), [ee, K] = C.useState(null), oe = C.useRef(!1), ne = h || x, se = _o(), de = _o(), X = _o(), ae = _o(), [Q, ie] = qh({
    controlled: R,
    default: !1,
    name: "Tooltip",
    state: "open"
  });
  let F = Q;
  if (process.env.NODE_ENV !== "production") {
    const {
      current: ke
    } = C.useRef(R !== void 0);
    C.useEffect(() => {
      j && j.disabled && !ke && A !== "" && j.tagName.toLowerCase() === "button" && console.warn(["MUI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join(`
`));
    }, [A, j, ke]);
  }
  const he = Hu(E), fe = C.useRef(), Te = ur(() => {
    fe.current !== void 0 && (document.body.style.WebkitUserSelect = fe.current, fe.current = void 0), ae.clear();
  });
  C.useEffect(() => Te, [Te]);
  const Le = (ke) => {
    Sp.clear(), Fs = !0, ie(!0), T && !F && T(ke);
  }, Ae = ur(
    /**
     * @param {React.SyntheticEvent | Event} event
     */
    (ke) => {
      Sp.start(800 + w, () => {
        Fs = !1;
      }), ie(!1), v && F && v(ke), se.start(Y.transitions.duration.shortest, () => {
        oe.current = !1;
      });
    }
  ), Ie = (ke) => {
    oe.current && ke.type !== "touchstart" || (j && j.removeAttribute("title"), de.clear(), X.clear(), y || Fs && m ? de.start(Fs ? m : y, () => {
      Le(ke);
    }) : Le(ke));
  }, Re = (ke) => {
    de.clear(), X.start(w, () => {
      Ae(ke);
    });
  }, [, Be] = C.useState(!1), Oe = (ke) => {
    ha(ke.target) || (Be(!1), Re(ke));
  }, N = (ke) => {
    j || W(ke.currentTarget), ha(ke.target) && (Be(!0), Ie(ke));
  }, q = (ke) => {
    oe.current = !0;
    const Vt = V.props;
    Vt.onTouchStart && Vt.onTouchStart(ke);
  }, J = (ke) => {
    q(ke), X.clear(), se.clear(), Te(), fe.current = document.body.style.WebkitUserSelect, document.body.style.WebkitUserSelect = "none", ae.start(b, () => {
      document.body.style.WebkitUserSelect = fe.current, Ie(ke);
    });
  }, H = (ke) => {
    V.props.onTouchEnd && V.props.onTouchEnd(ke), Te(), X.start(S, () => {
      Ae(ke);
    });
  };
  C.useEffect(() => {
    if (!F)
      return;
    function ke(Vt) {
      Vt.key === "Escape" && Ae(Vt);
    }
    return document.addEventListener("keydown", ke), () => {
      document.removeEventListener("keydown", ke);
    };
  }, [Ae, F]);
  const B = rn(go(V), W, n);
  !A && A !== 0 && (F = !1);
  const z = C.useRef(), G = (ke) => {
    const Vt = V.props;
    Vt.onMouseMove && Vt.onMouseMove(ke), xi = {
      x: ke.clientX,
      y: ke.clientY
    }, z.current && z.current.update();
  }, pe = {}, me = typeof A == "string";
  u ? (pe.title = !F && me && !f ? A : null, pe["aria-describedby"] = F ? he : null) : (pe["aria-label"] = me ? A : null, pe["aria-labelledby"] = F && !me ? he : null);
  const re = {
    ...pe,
    ...M,
    ...V.props,
    className: Ee(M.className, V.props.className),
    onTouchStart: q,
    ref: B,
    ...x ? {
      onMouseMove: G
    } : {}
  };
  process.env.NODE_ENV !== "production" && (re["data-mui-internal-clone-element"] = !0, C.useEffect(() => {
    j && !j.getAttribute("data-mui-internal-clone-element") && console.error(["MUI: The `children` component of the Tooltip is not forwarding its props correctly.", "Please make sure that props are spread on the same element that the ref is applied to."].join(`
`));
  }, [j]));
  const Z = {};
  g || (re.onTouchStart = J, re.onTouchEnd = H), f || (re.onMouseOver = js(Ie, re.onMouseOver), re.onMouseLeave = js(Re, re.onMouseLeave), ne || (Z.onMouseOver = Ie, Z.onMouseLeave = Re)), d || (re.onFocus = js(N, re.onFocus), re.onBlur = js(Oe, re.onBlur), ne || (Z.onFocus = N, Z.onBlur = Oe)), process.env.NODE_ENV !== "production" && V.props.title && console.error(["MUI: You have provided a `title` prop to the child of <Tooltip />.", `Remove this title prop \`${V.props.title}\` or the Tooltip component.`].join(`
`));
  const te = {
    ...r,
    isRtl: U,
    arrow: o,
    disableInteractive: ne,
    placement: k,
    PopperComponentProp: I,
    touch: oe.current
  }, ye = typeof O.popper == "function" ? O.popper(te) : O.popper, Se = C.useMemo(() => {
    var Vt, Bt;
    let ke = [{
      name: "arrow",
      enabled: !!ee,
      options: {
        element: ee,
        padding: 4
      }
    }];
    return (Vt = p.popperOptions) != null && Vt.modifiers && (ke = ke.concat(p.popperOptions.modifiers)), (Bt = ye == null ? void 0 : ye.popperOptions) != null && Bt.modifiers && (ke = ke.concat(ye.popperOptions.modifiers)), {
      ...p.popperOptions,
      ...ye == null ? void 0 : ye.popperOptions,
      modifiers: ke
    };
  }, [ee, p.popperOptions, ye == null ? void 0 : ye.popperOptions]), le = PE(te), we = typeof O.transition == "function" ? O.transition(te) : O.transition, Me = {
    slots: {
      popper: l.Popper,
      transition: l.Transition ?? D,
      tooltip: l.Tooltip,
      arrow: l.Arrow,
      ...$
    },
    slotProps: {
      arrow: O.arrow ?? c.arrow,
      popper: {
        ...p,
        ...ye ?? c.popper
      },
      // resolvedPopperProps can be spread because it's already an object
      tooltip: O.tooltip ?? c.tooltip,
      transition: {
        ..._,
        ...we ?? c.transition
      }
    }
  }, [ze, Ye] = at("popper", {
    elementType: IE,
    externalForwardedProps: Me,
    ownerState: te,
    className: Ee(le.popper, p == null ? void 0 : p.className)
  }), [It, pt] = at("transition", {
    elementType: es,
    externalForwardedProps: Me,
    ownerState: te
  }), [Nt, De] = at("tooltip", {
    elementType: NE,
    className: le.tooltip,
    externalForwardedProps: Me,
    ownerState: te
  }), [ot, Tt] = at("arrow", {
    elementType: AE,
    className: le.arrow,
    externalForwardedProps: Me,
    ownerState: te,
    ref: K
  });
  return /* @__PURE__ */ $e(C.Fragment, {
    children: [/* @__PURE__ */ C.cloneElement(V, re), /* @__PURE__ */ P(ze, {
      as: I ?? ll,
      placement: k,
      anchorEl: x ? {
        getBoundingClientRect: () => ({
          top: xi.y,
          left: xi.x,
          right: xi.x,
          bottom: xi.y,
          width: 0,
          height: 0
        })
      } : j,
      popperRef: z,
      open: j ? F : !1,
      id: he,
      transition: !0,
      ...Z,
      ...Ye,
      popperOptions: Se,
      children: ({
        TransitionProps: ke
      }) => /* @__PURE__ */ P(It, {
        timeout: Y.transitions.duration.shorter,
        ...ke,
        ...pt,
        children: /* @__PURE__ */ $e(Nt, {
          ...De,
          children: [A, o ? /* @__PURE__ */ P(ot, {
            ...Tt
          }) : null]
        })
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (hd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: i.bool,
  /**
   * Tooltip reference element.
   */
  children: Gr.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Arrow: i.elementType,
    Popper: i.elementType,
    Tooltip: i.elementType,
    Transition: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    arrow: i.object,
    popper: i.object,
    tooltip: i.object,
    transition: i.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: i.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: i.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: i.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: i.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: i.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: i.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: i.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: i.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: i.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: i.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: i.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: i.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: i.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The component used for the popper.
   * @deprecated use the `slots.popper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PopperComponent: i.elementType,
  /**
   * Props applied to the [`Popper`](https://mui.com/material-ui/api/popper/) element.
   * @deprecated use the `slotProps.popper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PopperProps: i.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    arrow: i.oneOfType([i.func, i.object]),
    popper: i.oneOfType([i.func, i.object]),
    tooltip: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    arrow: i.elementType,
    popper: i.elementType,
    tooltip: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: i.node,
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: i.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: i.object
});
function ME(e) {
  return gt("MuiTypography", e);
}
wt("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]);
const _E = {
  primary: !0,
  secondary: !0,
  error: !0,
  info: !0,
  success: !0,
  warning: !0,
  textPrimary: !0,
  textSecondary: !0,
  textDisabled: !0
}, DE = PS(), BE = (e) => {
  const {
    align: t,
    gutterBottom: n,
    noWrap: r,
    paragraph: o,
    variant: s,
    classes: a
  } = e, l = {
    root: ["root", s, e.align !== "inherit" && `align${xe(t)}`, n && "gutterBottom", r && "noWrap", o && "paragraph"]
  };
  return Ct(l, ME, a);
}, FE = Pe("span", {
  name: "MuiTypography",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.variant && t[n.variant], n.align !== "inherit" && t[`align${xe(n.align)}`], n.noWrap && t.noWrap, n.gutterBottom && t.gutterBottom, n.paragraph && t.paragraph];
  }
})(Ke(({
  theme: e
}) => {
  var t;
  return {
    margin: 0,
    variants: [{
      props: {
        variant: "inherit"
      },
      style: {
        // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
        font: "inherit",
        lineHeight: "inherit",
        letterSpacing: "inherit"
      }
    }, ...Object.entries(e.typography).filter(([n, r]) => n !== "inherit" && r && typeof r == "object").map(([n, r]) => ({
      props: {
        variant: n
      },
      style: r
    })), ...Object.entries(e.palette).filter(un()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        color: (e.vars || e).palette[n].main
      }
    })), ...Object.entries(((t = e.palette) == null ? void 0 : t.text) || {}).filter(([, n]) => typeof n == "string").map(([n]) => ({
      props: {
        color: `text${xe(n)}`
      },
      style: {
        color: (e.vars || e).palette.text[n]
      }
    })), {
      props: ({
        ownerState: n
      }) => n.align !== "inherit",
      style: {
        textAlign: "var(--Typography-textAlign)"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.noWrap,
      style: {
        overflow: "hidden",
        textOverflow: "ellipsis",
        whiteSpace: "nowrap"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.gutterBottom,
      style: {
        marginBottom: "0.35em"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.paragraph,
      style: {
        marginBottom: 16
      }
    }]
  };
})), Tp = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  inherit: "p"
}, zg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    color: r,
    ...o
  } = St({
    props: t,
    name: "MuiTypography"
  }), s = !_E[r], a = DE({
    ...o,
    ...s && {
      color: r
    }
  }), {
    align: l = "inherit",
    className: c,
    component: u,
    gutterBottom: d = !1,
    noWrap: f = !1,
    paragraph: h = !1,
    variant: g = "body1",
    variantMapping: y = Tp,
    ...m
  } = a, b = {
    ...a,
    align: l,
    color: r,
    className: c,
    component: u,
    gutterBottom: d,
    noWrap: f,
    paragraph: h,
    variant: g,
    variantMapping: y
  }, x = u || (h ? "p" : y[g] || Tp[g]) || "span", E = BE(b);
  return /* @__PURE__ */ P(FE, {
    as: x,
    ref: n,
    className: Ee(E.root, c),
    ...m,
    ownerState: b,
    style: {
      ...l !== "inherit" && {
        "--Typography-textAlign": l
      },
      ...m.style
    }
  });
});
process.env.NODE_ENV !== "production" && (zg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the component.
   * @default 'inherit'
   */
  align: i.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "success", "error", "info", "warning", "textPrimary", "textSecondary", "textDisabled"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */
  gutterBottom: i.bool,
  /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */
  noWrap: i.bool,
  /**
   * If `true`, the element will be a paragraph element.
   * @default false
   * @deprecated Use the `component` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  paragraph: i.bool,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Applies the theme typography styles.
   * @default 'body1'
   */
  variant: i.oneOfType([i.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), i.string]),
  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */
  variantMapping: i.object
});
function cl({
  isTitle: e = !1,
  isLabel: t = !1,
  titleLevel: n = "h6",
  textColor: r = "auto",
  bold: o = !1,
  ellipsis: s = !1
}) {
  return {
    textCommonStyles: cn(
      () => ({
        typography: e ? n : t ? "caption" : "body1",
        fontWeight: e || t || o ? "bold" : "normal",
        color: (l) => r === "error" ? l.palette.error.main : r === "primary" ? l.palette.primary.main : r === "success" ? l.palette.success.main : r === "disabled" ? l.palette.action.disabled : "inherit",
        ...s ? {
          width: "100%",
          whiteSpace: "nowrap",
          overflow: "hidden",
          textOverflow: "ellipsis"
        } : {}
      }),
      [e, t, r, o, s]
    )
  };
}
const bn = _e(
  ({
    text: e,
    isLabel: t,
    isTitle: n = !1,
    titleLevel: r = "h6",
    ellipsis: o = !1,
    textColor: s = "auto",
    bold: a,
    sx: l,
    ...c
  }) => {
    const { textCommonStyles: u } = cl({
      isTitle: n,
      isLabel: t,
      titleLevel: r,
      textColor: s,
      bold: a,
      ellipsis: o
    }), d = cn(
      () => /* @__PURE__ */ P(
        zg,
        {
          className: "VenomousUI-Text",
          component: "div",
          variant: n ? r : t ? "caption" : "body1",
          noWrap: o,
          sx: {
            ...u,
            ...l
          },
          ...c,
          children: e
        }
      ),
      [e, n, r, o, l, c, u]
    );
    return o ? /* @__PURE__ */ P(ul, { tooltip: e, hide: !o, children: d }) : d;
  }
);
bn.displayName = "Text";
const ul = _e(({ children: e, tooltip: t, hide: n }) => /* @__PURE__ */ P(
  hd,
  {
    className: "VenomousUI-Tooltip",
    arrow: !0,
    title: /* @__PURE__ */ P(bn, { isLabel: !0, bold: !0, text: t, textColor: "auto" }),
    disableHoverListener: n,
    children: e,
    slots: {
      transition: fo
    },
    slotProps: {
      transition: { timeout: 400 }
    }
  }
));
ul.displayName = "Tooltip";
const Wg = _e(
  ({
    children: e,
    position: t = "bottom-right",
    color: n = "error",
    icon: r,
    iconWidth: o = 16,
    iconTooltip: s = ""
  }) => {
    const { paperCommonStyles: a } = ui(), { badgePlacementAttributes: l, badgeColor: c } = ed({ position: t, color: n }), { vertical: u, horizontal: d, transform: f } = l;
    return /* @__PURE__ */ P(
      ol,
      {
        className: "VenomousUI-IconBadge",
        variant: "standard",
        invisible: !r,
        anchorOrigin: { vertical: u, horizontal: d },
        badgeContent: /* @__PURE__ */ P(ul, { tooltip: s, hide: !s, children: /* @__PURE__ */ P(mr, { icon: r, width: o, color: "auto" }) }),
        sx: {
          ".MuiBadge-badge": {
            color: c,
            fontWeight: "bold",
            ...a,
            transform: f,
            p: 0,
            minHeight: Number(o) + 4,
            minWidth: Number(o) + 4,
            height: Number(o) + 4,
            width: Number(o) + 4,
            borderRadius: "50%",
            border: 1,
            borderColor: c
          }
        },
        children: e
      }
    );
  }
);
Wg.displayName = "IconBadge";
const jE = _e(
  ({ children: e, position: t = "top-right", color: n = "primary", value: r = 0, max: o = 99, min: s = 0 }) => {
    const { badgePlacementAttributes: a, badgeColor: l } = ed({ position: t, color: n }), { vertical: c, horizontal: u } = a, d = cn(() => r > o ? `${o}+` : String(r), [r, o]), f = cn(() => r > s, [r, s]);
    return /* @__PURE__ */ P(
      ol,
      {
        className: "VenomousUI-NumberTextBadge",
        variant: "standard",
        invisible: !f,
        anchorOrigin: { vertical: c, horizontal: u },
        badgeContent: /* @__PURE__ */ P(ul, { tooltip: String(r), hide: r <= o, children: /* @__PURE__ */ P("span", { children: d }) }),
        sx: {
          ".MuiBadge-badge": {
            color: "#fff !important",
            backgroundColor: l,
            fontWeight: "bold"
          }
        },
        children: e
      }
    );
  }
);
jE.displayName = "NumberTextBadge";
const LE = _e(
  ({
    width: e = 28,
    src: t,
    alt: n,
    onClick: r,
    sx: o,
    badgeColor: s = "primary",
    badgePosition: a = "bottom-right",
    withDotBadge: l = !1,
    dotBadgeIsVisible: c = !0,
    withIconBadge: u = !1,
    iconBadgeIcon: d = ""
  }) => {
    const f = cn(
      () => /* @__PURE__ */ P(
        hg,
        {
          className: "VenomousUI-Avatar",
          src: t,
          alt: n,
          sx: {
            width: e,
            height: e,
            border: 1,
            borderColor: "divider",
            cursor: r ? "pointer" : "default",
            ...o
          },
          onClick: r
        }
      ),
      [e, t, n, r, o]
    );
    return l ? /* @__PURE__ */ P(gg, { isVisible: c, position: a, color: s, children: f }) : u ? /* @__PURE__ */ P(Wg, { icon: d, position: a, color: s, children: f }) : f;
  }
);
LE.displayName = "Avatar";
const VE = _e(({ width: e = 100, text: t = "", sx: n }) => /* @__PURE__ */ $e($r, { className: "VenomousUI-Blank", sx: { width: e, ...n }, children: [
  /* @__PURE__ */ P(mr, { width: e, icon: "solar:box-linear", color: "disabled" }),
  /* @__PURE__ */ P(bn, { text: t, isTitle: !0, titleLevel: "h6", textColor: "disabled", textAlign: "center" })
] }));
VE.displayName = "Blank";
function zE(e, t) {
  const n = e.charCodeAt(2);
  return e[0] === "o" && e[1] === "n" && n >= 65 && n <= 90 && typeof t == "function";
}
function gd(e, t) {
  if (!e)
    return t;
  function n(a, l) {
    const c = {};
    return Object.keys(l).forEach((u) => {
      zE(u, l[u]) && typeof a[u] == "function" && (c[u] = (...d) => {
        a[u](...d), l[u](...d);
      });
    }), c;
  }
  if (typeof e == "function" || typeof t == "function")
    return (a) => {
      const l = typeof t == "function" ? t(a) : t, c = typeof e == "function" ? e({
        ...a,
        ...l
      }) : e, u = Ee(a == null ? void 0 : a.className, l == null ? void 0 : l.className, c == null ? void 0 : c.className), d = n(c, l);
      return {
        ...l,
        ...c,
        ...d,
        ...!!u && {
          className: u
        },
        ...(l == null ? void 0 : l.style) && (c == null ? void 0 : c.style) && {
          style: {
            ...l.style,
            ...c.style
          }
        },
        ...(l == null ? void 0 : l.sx) && (c == null ? void 0 : c.sx) && {
          sx: [...Array.isArray(l.sx) ? l.sx : [l.sx], ...Array.isArray(c.sx) ? c.sx : [c.sx]]
        }
      };
    };
  const r = t, o = n(e, r), s = Ee(r == null ? void 0 : r.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...o,
    ...!!s && {
      className: s
    },
    ...(r == null ? void 0 : r.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...r.style,
        ...e.style
      }
    },
    ...(r == null ? void 0 : r.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(r.sx) ? r.sx : [r.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
class wa {
  constructor() {
    _r(this, "mountEffect", () => {
      this.shouldMount && !this.didMount && this.ref.current !== null && (this.didMount = !0, this.mounted.resolve());
    });
    this.ref = {
      current: null
    }, this.mounted = null, this.didMount = !1, this.shouldMount = !1, this.setShouldMount = null;
  }
  /** React ref to the ripple instance */
  /** If the ripple component should be mounted */
  /** Promise that resolves when the ripple component is mounted */
  /** If the ripple component has been mounted */
  /** React state hook setter */
  static create() {
    return new wa();
  }
  static use() {
    const t = Yh(wa.create).current, [n, r] = C.useState(!1);
    return t.shouldMount = n, t.setShouldMount = r, C.useEffect(t.mountEffect, [n]), t;
  }
  mount() {
    return this.mounted || (this.mounted = UE(), this.shouldMount = !0, this.setShouldMount(this.shouldMount)), this.mounted;
  }
  /* Ripple API */
  start(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.start(...t);
    });
  }
  stop(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.stop(...t);
    });
  }
  pulsate(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.pulsate(...t);
    });
  }
}
function WE() {
  return wa.use();
}
function UE() {
  let e, t;
  const n = new Promise((r, o) => {
    e = r, t = o;
  });
  return n.resolve = e, n.reject = t, n;
}
function Ug(e) {
  const {
    className: t,
    classes: n,
    pulsate: r = !1,
    rippleX: o,
    rippleY: s,
    rippleSize: a,
    in: l,
    onExited: c,
    timeout: u
  } = e, [d, f] = C.useState(!1), h = Ee(t, n.ripple, n.rippleVisible, r && n.ripplePulsate), g = {
    width: a,
    height: a,
    top: -(a / 2) + s,
    left: -(a / 2) + o
  }, y = Ee(n.child, d && n.childLeaving, r && n.childPulsate);
  return !l && !d && f(!0), C.useEffect(() => {
    if (!l && c != null) {
      const m = setTimeout(c, u);
      return () => {
        clearTimeout(m);
      };
    }
  }, [c, l, u]), /* @__PURE__ */ P("span", {
    className: h,
    style: g,
    children: /* @__PURE__ */ P("span", {
      className: y
    })
  });
}
process.env.NODE_ENV !== "production" && (Ug.propTypes = {
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object.isRequired,
  className: i.string,
  /**
   * @ignore - injected from TransitionGroup
   */
  in: i.bool,
  /**
   * @ignore - injected from TransitionGroup
   */
  onExited: i.func,
  /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */
  pulsate: i.bool,
  /**
   * Diameter of the ripple.
   */
  rippleSize: i.number,
  /**
   * Horizontal position of the ripple center.
   */
  rippleX: i.number,
  /**
   * Vertical position of the ripple center.
   */
  rippleY: i.number,
  /**
   * exit delay
   */
  timeout: i.number.isRequired
});
const Pn = wt("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), Zc = 550, HE = 80, qE = qr`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`, YE = qr`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`, GE = qr`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`, KE = Pe("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), XE = Pe(Ug, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})`
  opacity: 0;
  position: absolute;

  &.${Pn.rippleVisible} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${qE};
    animation-duration: ${Zc}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  &.${Pn.ripplePulsate} {
    animation-duration: ${({
  theme: e
}) => e.transitions.duration.shorter}ms;
  }

  & .${Pn.child} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${Pn.childLeaving} {
    opacity: 0;
    animation-name: ${YE};
    animation-duration: ${Zc}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  & .${Pn.childPulsate} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${GE};
    animation-duration: 2500ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`, Hg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = St({
    props: t,
    name: "MuiTouchRipple"
  }), {
    center: o = !1,
    classes: s = {},
    className: a,
    ...l
  } = r, [c, u] = C.useState([]), d = C.useRef(0), f = C.useRef(null);
  C.useEffect(() => {
    f.current && (f.current(), f.current = null);
  }, [c]);
  const h = C.useRef(!1), g = _o(), y = C.useRef(null), m = C.useRef(null), b = C.useCallback((S) => {
    const {
      pulsate: v,
      rippleX: T,
      rippleY: R,
      rippleSize: k,
      cb: I
    } = S;
    u((p) => [...p, /* @__PURE__ */ P(XE, {
      classes: {
        ripple: Ee(s.ripple, Pn.ripple),
        rippleVisible: Ee(s.rippleVisible, Pn.rippleVisible),
        ripplePulsate: Ee(s.ripplePulsate, Pn.ripplePulsate),
        child: Ee(s.child, Pn.child),
        childLeaving: Ee(s.childLeaving, Pn.childLeaving),
        childPulsate: Ee(s.childPulsate, Pn.childPulsate)
      },
      timeout: Zc,
      pulsate: v,
      rippleX: T,
      rippleY: R,
      rippleSize: k
    }, d.current)]), d.current += 1, f.current = I;
  }, [s]), x = C.useCallback((S = {}, v = {}, T = () => {
  }) => {
    const {
      pulsate: R = !1,
      center: k = o || v.pulsate,
      fakeElement: I = !1
      // For test purposes
    } = v;
    if ((S == null ? void 0 : S.type) === "mousedown" && h.current) {
      h.current = !1;
      return;
    }
    (S == null ? void 0 : S.type) === "touchstart" && (h.current = !0);
    const p = I ? null : m.current, O = p ? p.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let $, A, D;
    if (k || S === void 0 || S.clientX === 0 && S.clientY === 0 || !S.clientX && !S.touches)
      $ = Math.round(O.width / 2), A = Math.round(O.height / 2);
    else {
      const {
        clientX: _,
        clientY: M
      } = S.touches && S.touches.length > 0 ? S.touches[0] : S;
      $ = Math.round(_ - O.left), A = Math.round(M - O.top);
    }
    if (k)
      D = Math.sqrt((2 * O.width ** 2 + O.height ** 2) / 3), D % 2 === 0 && (D += 1);
    else {
      const _ = Math.max(Math.abs((p ? p.clientWidth : 0) - $), $) * 2 + 2, M = Math.max(Math.abs((p ? p.clientHeight : 0) - A), A) * 2 + 2;
      D = Math.sqrt(_ ** 2 + M ** 2);
    }
    S != null && S.touches ? y.current === null && (y.current = () => {
      b({
        pulsate: R,
        rippleX: $,
        rippleY: A,
        rippleSize: D,
        cb: T
      });
    }, g.start(HE, () => {
      y.current && (y.current(), y.current = null);
    })) : b({
      pulsate: R,
      rippleX: $,
      rippleY: A,
      rippleSize: D,
      cb: T
    });
  }, [o, b, g]), E = C.useCallback(() => {
    x({}, {
      pulsate: !0
    });
  }, [x]), w = C.useCallback((S, v) => {
    if (g.clear(), (S == null ? void 0 : S.type) === "touchend" && y.current) {
      y.current(), y.current = null, g.start(0, () => {
        w(S, v);
      });
      return;
    }
    y.current = null, u((T) => T.length > 0 ? T.slice(1) : T), f.current = v;
  }, [g]);
  return C.useImperativeHandle(n, () => ({
    pulsate: E,
    start: x,
    stop: w
  }), [E, x, w]), /* @__PURE__ */ P(KE, {
    className: Ee(Pn.root, s.root, a),
    ref: m,
    ...l,
    children: /* @__PURE__ */ P(sd, {
      component: null,
      exit: !0,
      children: c
    })
  });
});
process.env.NODE_ENV !== "production" && (Hg.propTypes = {
  /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */
  center: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string
});
function QE(e) {
  return gt("MuiButtonBase", e);
}
const JE = wt("MuiButtonBase", ["root", "disabled", "focusVisible"]), ZE = (e) => {
  const {
    disabled: t,
    focusVisible: n,
    focusVisibleClassName: r,
    classes: o
  } = e, a = Ct({
    root: ["root", t && "disabled", n && "focusVisible"]
  }, QE, o);
  return n && r && (a.root += ` ${r}`), a;
}, eC = Pe("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  textDecoration: "none",
  // So we take precedent over the style of a native <a /> element.
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${JE.disabled}`]: {
    pointerEvents: "none",
    // Disable link interactions
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), yd = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = St({
    props: t,
    name: "MuiButtonBase"
  }), {
    action: o,
    centerRipple: s = !1,
    children: a,
    className: l,
    component: c = "button",
    disabled: u = !1,
    disableRipple: d = !1,
    disableTouchRipple: f = !1,
    focusRipple: h = !1,
    focusVisibleClassName: g,
    LinkComponent: y = "a",
    onBlur: m,
    onClick: b,
    onContextMenu: x,
    onDragLeave: E,
    onFocus: w,
    onFocusVisible: S,
    onKeyDown: v,
    onKeyUp: T,
    onMouseDown: R,
    onMouseLeave: k,
    onMouseUp: I,
    onTouchEnd: p,
    onTouchMove: O,
    onTouchStart: $,
    tabIndex: A = 0,
    TouchRippleProps: D,
    touchRippleRef: _,
    type: M,
    ...V
  } = r, Y = C.useRef(null), U = WE(), j = rn(U.ref, _), [W, ee] = C.useState(!1);
  u && W && ee(!1), C.useImperativeHandle(o, () => ({
    focusVisible: () => {
      ee(!0), Y.current.focus();
    }
  }), []);
  const K = U.shouldMount && !d && !u;
  C.useEffect(() => {
    W && h && !d && U.pulsate();
  }, [d, h, W, U]);
  const oe = Sr(U, "start", R, f), ne = Sr(U, "stop", x, f), se = Sr(U, "stop", E, f), de = Sr(U, "stop", I, f), X = Sr(U, "stop", (N) => {
    W && N.preventDefault(), k && k(N);
  }, f), ae = Sr(U, "start", $, f), Q = Sr(U, "stop", p, f), ie = Sr(U, "stop", O, f), F = Sr(U, "stop", (N) => {
    ha(N.target) || ee(!1), m && m(N);
  }, !1), he = ur((N) => {
    Y.current || (Y.current = N.currentTarget), ha(N.target) && (ee(!0), S && S(N)), w && w(N);
  }), fe = () => {
    const N = Y.current;
    return c && c !== "button" && !(N.tagName === "A" && N.href);
  }, Te = ur((N) => {
    h && !N.repeat && W && N.key === " " && U.stop(N, () => {
      U.start(N);
    }), N.target === N.currentTarget && fe() && N.key === " " && N.preventDefault(), v && v(N), N.target === N.currentTarget && fe() && N.key === "Enter" && !u && (N.preventDefault(), b && b(N));
  }), Le = ur((N) => {
    h && N.key === " " && W && !N.defaultPrevented && U.stop(N, () => {
      U.pulsate(N);
    }), T && T(N), b && N.target === N.currentTarget && fe() && N.key === " " && !N.defaultPrevented && b(N);
  });
  let Ae = c;
  Ae === "button" && (V.href || V.to) && (Ae = y);
  const Ie = {};
  Ae === "button" ? (Ie.type = M === void 0 ? "button" : M, Ie.disabled = u) : (!V.href && !V.to && (Ie.role = "button"), u && (Ie["aria-disabled"] = u));
  const Re = rn(n, Y), Be = {
    ...r,
    centerRipple: s,
    component: c,
    disabled: u,
    disableRipple: d,
    disableTouchRipple: f,
    focusRipple: h,
    tabIndex: A,
    focusVisible: W
  }, Oe = ZE(Be);
  return /* @__PURE__ */ $e(eC, {
    as: Ae,
    className: Ee(Oe.root, l),
    ownerState: Be,
    onBlur: F,
    onClick: b,
    onContextMenu: ne,
    onFocus: he,
    onKeyDown: Te,
    onKeyUp: Le,
    onMouseDown: oe,
    onMouseLeave: X,
    onMouseUp: de,
    onDragLeave: se,
    onTouchEnd: Q,
    onTouchMove: ie,
    onTouchStart: ae,
    ref: Re,
    tabIndex: u ? -1 : A,
    type: M,
    ...Ie,
    ...V,
    children: [a, K ? /* @__PURE__ */ P(Hg, {
      ref: j,
      center: s,
      ...D
    }) : null]
  });
});
function Sr(e, t, n, r = !1) {
  return ur((o) => (n && n(o), r || e[t](o), !0));
}
process.env.NODE_ENV !== "production" && (yd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: Ar,
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: i.bool,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: Wu,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: i.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: i.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: i.string,
  /**
   * @ignore
   */
  href: i.any,
  /**
   * The component used to render a link when the `href` prop is provided.
   * @default 'a'
   */
  LinkComponent: i.elementType,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * @ignore
   */
  onContextMenu: i.func,
  /**
   * @ignore
   */
  onDragLeave: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: i.func,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * @ignore
   */
  onKeyUp: i.func,
  /**
   * @ignore
   */
  onMouseDown: i.func,
  /**
   * @ignore
   */
  onMouseLeave: i.func,
  /**
   * @ignore
   */
  onMouseUp: i.func,
  /**
   * @ignore
   */
  onTouchEnd: i.func,
  /**
   * @ignore
   */
  onTouchMove: i.func,
  /**
   * @ignore
   */
  onTouchStart: i.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * @default 0
   */
  tabIndex: i.number,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: i.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: i.oneOfType([i.func, i.shape({
    current: i.shape({
      pulsate: i.func.isRequired,
      start: i.func.isRequired,
      stop: i.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  type: i.oneOfType([i.oneOf(["button", "reset", "submit"]), i.string])
});
function tC(e) {
  return gt("MuiCircularProgress", e);
}
wt("MuiCircularProgress", ["root", "determinate", "indeterminate", "colorPrimary", "colorSecondary", "svg", "circle", "circleDeterminate", "circleIndeterminate", "circleDisableShrink"]);
const Br = 44, eu = qr`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`, tu = qr`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: -126px;
  }
`, nC = typeof eu != "string" ? ii`
        animation: ${eu} 1.4s linear infinite;
      ` : null, rC = typeof tu != "string" ? ii`
        animation: ${tu} 1.4s ease-in-out infinite;
      ` : null, oC = (e) => {
  const {
    classes: t,
    variant: n,
    color: r,
    disableShrink: o
  } = e, s = {
    root: ["root", n, `color${xe(r)}`],
    svg: ["svg"],
    circle: ["circle", `circle${xe(n)}`, o && "circleDisableShrink"]
  };
  return Ct(s, tC, t);
}, iC = Pe("span", {
  name: "MuiCircularProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`color${xe(n.color)}`]];
  }
})(Ke(({
  theme: e
}) => ({
  display: "inline-block",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("transform")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: nC || {
      animation: `${eu} 1.4s linear infinite`
    }
  }, ...Object.entries(e.palette).filter(un()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  }))]
}))), sC = Pe("svg", {
  name: "MuiCircularProgress",
  slot: "Svg",
  overridesResolver: (e, t) => t.svg
})({
  display: "block"
  // Keeps the progress centered
}), aC = Pe("circle", {
  name: "MuiCircularProgress",
  slot: "Circle",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.circle, t[`circle${xe(n.variant)}`], n.disableShrink && t.circleDisableShrink];
  }
})(Ke(({
  theme: e
}) => ({
  stroke: "currentColor",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("stroke-dashoffset")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: {
      // Some default value that looks fine waiting for the animation to kicks in.
      strokeDasharray: "80px, 200px",
      strokeDashoffset: 0
      // Add the unit to fix a Edge 16 and below bug.
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" && !t.disableShrink,
    style: rC || {
      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
      animation: `${tu} 1.4s ease-in-out infinite`
    }
  }]
}))), bd = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = St({
    props: t,
    name: "MuiCircularProgress"
  }), {
    className: o,
    color: s = "primary",
    disableShrink: a = !1,
    size: l = 40,
    style: c,
    thickness: u = 3.6,
    value: d = 0,
    variant: f = "indeterminate",
    ...h
  } = r, g = {
    ...r,
    color: s,
    disableShrink: a,
    size: l,
    thickness: u,
    value: d,
    variant: f
  }, y = oC(g), m = {}, b = {}, x = {};
  if (f === "determinate") {
    const E = 2 * Math.PI * ((Br - u) / 2);
    m.strokeDasharray = E.toFixed(3), x["aria-valuenow"] = Math.round(d), m.strokeDashoffset = `${((100 - d) / 100 * E).toFixed(3)}px`, b.transform = "rotate(-90deg)";
  }
  return /* @__PURE__ */ P(iC, {
    className: Ee(y.root, o),
    style: {
      width: l,
      height: l,
      ...b,
      ...c
    },
    ownerState: g,
    ref: n,
    role: "progressbar",
    ...x,
    ...h,
    children: /* @__PURE__ */ P(sC, {
      className: y.svg,
      ownerState: g,
      viewBox: `${Br / 2} ${Br / 2} ${Br} ${Br}`,
      children: /* @__PURE__ */ P(aC, {
        className: y.circle,
        style: m,
        ownerState: g,
        cx: Br,
        cy: Br,
        r: (Br - u) / 2,
        fill: "none",
        strokeWidth: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (bd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   * @default false
   */
  disableShrink: Yr(i.bool, (e) => e.disableShrink && e.variant && e.variant !== "indeterminate" ? new Error("MUI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.") : null),
  /**
   * The size of the component.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, for example '3rem'.
   * @default 40
   */
  size: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The thickness of the circle.
   * @default 3.6
   */
  thickness: i.number,
  /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   * @default 0
   */
  value: i.number,
  /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   * @default 'indeterminate'
   */
  variant: i.oneOf(["determinate", "indeterminate"])
});
function lC(e) {
  return gt("MuiButton", e);
}
const no = wt("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorSuccess", "colorError", "colorInfo", "colorWarning", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "icon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge", "loading", "loadingWrapper", "loadingIconPlaceholder", "loadingIndicator", "loadingPositionCenter", "loadingPositionStart", "loadingPositionEnd"]), qg = /* @__PURE__ */ C.createContext({});
process.env.NODE_ENV !== "production" && (qg.displayName = "ButtonGroupContext");
const Yg = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (Yg.displayName = "ButtonGroupButtonContext");
const cC = (e) => {
  const {
    color: t,
    disableElevation: n,
    fullWidth: r,
    size: o,
    variant: s,
    loading: a,
    loadingPosition: l,
    classes: c
  } = e, u = {
    root: ["root", a && "loading", s, `${s}${xe(t)}`, `size${xe(o)}`, `${s}Size${xe(o)}`, `color${xe(t)}`, n && "disableElevation", r && "fullWidth", a && `loadingPosition${xe(l)}`],
    startIcon: ["icon", "startIcon", `iconSize${xe(o)}`],
    endIcon: ["icon", "endIcon", `iconSize${xe(o)}`],
    loadingIndicator: ["loadingIndicator"],
    loadingWrapper: ["loadingWrapper"]
  }, d = Ct(u, lC, c);
  return {
    ...c,
    // forward the focused, disabled, etc. classes to the ButtonBase
    ...d
  };
}, Gg = [{
  props: {
    size: "small"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 18
    }
  }
}, {
  props: {
    size: "medium"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 20
    }
  }
}, {
  props: {
    size: "large"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 22
    }
  }
}], uC = Pe(yd, {
  shouldForwardProp: (e) => br(e) || e === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`${n.variant}${xe(n.color)}`], t[`size${xe(n.size)}`], t[`${n.variant}Size${xe(n.size)}`], n.color === "inherit" && t.colorInherit, n.disableElevation && t.disableElevation, n.fullWidth && t.fullWidth, n.loading && t.loading];
  }
})(Ke(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? e.palette.grey[300] : e.palette.grey[800], n = e.palette.mode === "light" ? e.palette.grey.A100 : e.palette.grey[700];
  return {
    ...e.typography.button,
    minWidth: 64,
    padding: "6px 16px",
    border: 0,
    borderRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: e.transitions.duration.short
    }),
    "&:hover": {
      textDecoration: "none"
    },
    [`&.${no.disabled}`]: {
      color: (e.vars || e).palette.action.disabled
    },
    variants: [{
      props: {
        variant: "contained"
      },
      style: {
        color: "var(--variant-containedColor)",
        backgroundColor: "var(--variant-containedBg)",
        boxShadow: (e.vars || e).shadows[2],
        "&:hover": {
          boxShadow: (e.vars || e).shadows[4],
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            boxShadow: (e.vars || e).shadows[2]
          }
        },
        "&:active": {
          boxShadow: (e.vars || e).shadows[8]
        },
        [`&.${no.focusVisible}`]: {
          boxShadow: (e.vars || e).shadows[6]
        },
        [`&.${no.disabled}`]: {
          color: (e.vars || e).palette.action.disabled,
          boxShadow: (e.vars || e).shadows[0],
          backgroundColor: (e.vars || e).palette.action.disabledBackground
        }
      }
    }, {
      props: {
        variant: "outlined"
      },
      style: {
        padding: "5px 15px",
        border: "1px solid currentColor",
        borderColor: "var(--variant-outlinedBorder, currentColor)",
        backgroundColor: "var(--variant-outlinedBg)",
        color: "var(--variant-outlinedColor)",
        [`&.${no.disabled}`]: {
          border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
        }
      }
    }, {
      props: {
        variant: "text"
      },
      style: {
        padding: "6px 8px",
        color: "var(--variant-textColor)",
        backgroundColor: "var(--variant-textBg)"
      }
    }, ...Object.entries(e.palette).filter(un()).map(([r]) => ({
      props: {
        color: r
      },
      style: {
        "--variant-textColor": (e.vars || e).palette[r].main,
        "--variant-outlinedColor": (e.vars || e).palette[r].main,
        "--variant-outlinedBorder": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / 0.5)` : Yt(e.palette[r].main, 0.5),
        "--variant-containedColor": (e.vars || e).palette[r].contrastText,
        "--variant-containedBg": (e.vars || e).palette[r].main,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": (e.vars || e).palette[r].dark,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[r].main, e.palette.action.hoverOpacity),
            "--variant-outlinedBorder": (e.vars || e).palette[r].main,
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[r].main, e.palette.action.hoverOpacity)
          }
        }
      }
    })), {
      props: {
        color: "inherit"
      },
      style: {
        color: "inherit",
        borderColor: "currentColor",
        "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedBg : t,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedHoverBg : n,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette.text.primary, e.palette.action.hoverOpacity),
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette.text.primary, e.palette.action.hoverOpacity)
          }
        }
      }
    }, {
      props: {
        size: "small",
        variant: "text"
      },
      style: {
        padding: "4px 5px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "text"
      },
      style: {
        padding: "8px 11px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "outlined"
      },
      style: {
        padding: "3px 9px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "outlined"
      },
      style: {
        padding: "7px 21px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "contained"
      },
      style: {
        padding: "4px 10px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "contained"
      },
      style: {
        padding: "8px 22px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        disableElevation: !0
      },
      style: {
        boxShadow: "none",
        "&:hover": {
          boxShadow: "none"
        },
        [`&.${no.focusVisible}`]: {
          boxShadow: "none"
        },
        "&:active": {
          boxShadow: "none"
        },
        [`&.${no.disabled}`]: {
          boxShadow: "none"
        }
      }
    }, {
      props: {
        fullWidth: !0
      },
      style: {
        width: "100%"
      }
    }, {
      props: {
        loadingPosition: "center"
      },
      style: {
        transition: e.transitions.create(["background-color", "box-shadow", "border-color"], {
          duration: e.transitions.duration.short
        }),
        [`&.${no.loading}`]: {
          color: "transparent"
        }
      }
    }]
  };
})), dC = Pe("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.startIcon, n.loading && t.startIconLoadingStart, t[`iconSize${xe(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginLeft: -2
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginRight: -8
    }
  }, ...Gg]
})), fC = Pe("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.endIcon, n.loading && t.endIconLoadingEnd, t[`iconSize${xe(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginRight: -2
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginLeft: -8
    }
  }, ...Gg]
})), pC = Pe("span", {
  name: "MuiButton",
  slot: "LoadingIndicator",
  overridesResolver: (e, t) => t.loadingIndicator
})(({
  theme: e
}) => ({
  display: "none",
  position: "absolute",
  visibility: "visible",
  variants: [{
    props: {
      loading: !0
    },
    style: {
      display: "flex"
    }
  }, {
    props: {
      loadingPosition: "start"
    },
    style: {
      left: 14
    }
  }, {
    props: {
      loadingPosition: "start",
      size: "small"
    },
    style: {
      left: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "start"
    },
    style: {
      left: 6
    }
  }, {
    props: {
      loadingPosition: "center"
    },
    style: {
      left: "50%",
      transform: "translate(-50%)",
      color: (e.vars || e).palette.action.disabled
    }
  }, {
    props: {
      loadingPosition: "end"
    },
    style: {
      right: 14
    }
  }, {
    props: {
      loadingPosition: "end",
      size: "small"
    },
    style: {
      right: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "end"
    },
    style: {
      right: 6
    }
  }, {
    props: {
      loadingPosition: "start",
      fullWidth: !0
    },
    style: {
      position: "relative",
      left: -10
    }
  }, {
    props: {
      loadingPosition: "end",
      fullWidth: !0
    },
    style: {
      position: "relative",
      right: -10
    }
  }]
})), Ep = Pe("span", {
  name: "MuiButton",
  slot: "LoadingIconPlaceholder",
  overridesResolver: (e, t) => t.loadingIconPlaceholder
})({
  display: "inline-block",
  width: "1em",
  height: "1em"
}), vd = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = C.useContext(qg), o = C.useContext(Yg), s = Xi(r, t), a = St({
    props: s,
    name: "MuiButton"
  }), {
    children: l,
    color: c = "primary",
    component: u = "button",
    className: d,
    disabled: f = !1,
    disableElevation: h = !1,
    disableFocusRipple: g = !1,
    endIcon: y,
    focusVisibleClassName: m,
    fullWidth: b = !1,
    id: x,
    loading: E = null,
    loadingIndicator: w,
    loadingPosition: S = "center",
    size: v = "medium",
    startIcon: T,
    type: R,
    variant: k = "text",
    ...I
  } = a, p = Hu(x), O = w ?? /* @__PURE__ */ P(bd, {
    "aria-labelledby": p,
    color: "inherit",
    size: 16
  }), $ = {
    ...a,
    color: c,
    component: u,
    disabled: f,
    disableElevation: h,
    disableFocusRipple: g,
    fullWidth: b,
    loading: E,
    loadingIndicator: O,
    loadingPosition: S,
    size: v,
    type: R,
    variant: k
  }, A = cC($), D = (T || E && S === "start") && /* @__PURE__ */ P(dC, {
    className: A.startIcon,
    ownerState: $,
    children: T || /* @__PURE__ */ P(Ep, {
      className: A.loadingIconPlaceholder,
      ownerState: $
    })
  }), _ = (y || E && S === "end") && /* @__PURE__ */ P(fC, {
    className: A.endIcon,
    ownerState: $,
    children: y || /* @__PURE__ */ P(Ep, {
      className: A.loadingIconPlaceholder,
      ownerState: $
    })
  }), M = o || "", V = typeof E == "boolean" ? (
    // use plain HTML span to minimize the runtime overhead
    /* @__PURE__ */ P("span", {
      className: A.loadingWrapper,
      style: {
        display: "contents"
      },
      children: E && /* @__PURE__ */ P(pC, {
        className: A.loadingIndicator,
        ownerState: $,
        children: O
      })
    })
  ) : null;
  return /* @__PURE__ */ $e(uC, {
    ownerState: $,
    className: Ee(r.className, A.root, d, M),
    component: u,
    disabled: f || E,
    focusRipple: !g,
    focusVisibleClassName: Ee(A.focusVisible, m),
    ref: n,
    type: R,
    id: E ? p : x,
    ...I,
    classes: A,
    children: [D, S !== "end" && V, l, S === "end" && V, _]
  });
});
process.env.NODE_ENV !== "production" && (vd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: i.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * Element placed after the children.
   */
  endIcon: i.node,
  /**
   * @ignore
   */
  focusVisibleClassName: i.string,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: i.string,
  /**
   * @ignore
   */
  id: i.string,
  /**
   * If `true`, the loading indicator is visible and the button is disabled.
   * If `true | false`, the loading wrapper is always rendered before the children to prevent [Google Translation Crash](https://github.com/mui/material-ui/issues/27853).
   * @default null
   */
  loading: i.bool,
  /**
   * Element placed before the children if the button is in loading state.
   * The node should contain an element with `role="progressbar"` with an accessible name.
   * By default, it renders a `CircularProgress` that is labeled by the button itself.
   * @default <CircularProgress color="inherit" size={16} />
   */
  loadingIndicator: i.node,
  /**
   * The loading indicator can be positioned on the start, end, or the center of the button.
   * @default 'center'
   */
  loadingPosition: i.oneOf(["center", "end", "start"]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["small", "medium", "large"]), i.string]),
  /**
   * Element placed before the children.
   */
  startIcon: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * @ignore
   */
  type: i.oneOfType([i.oneOf(["button", "reset", "submit"]), i.string]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: i.oneOfType([i.oneOf(["contained", "outlined", "text"]), i.string])
});
const Gn = _e(
  ({
    text: e,
    loading: t,
    disabled: n,
    isOutlined: r,
    isGhost: o,
    isCircle: s,
    icon: a,
    iconWidth: l = 20,
    iconPosition: c = void 0,
    color: u = "primary",
    onClick: d,
    sx: f,
    ...h
  }) => {
    const { buttonColors: g } = mC({ color: u, isGhost: o, isOutlined: r }), y = cn(() => a ? /* @__PURE__ */ P(mr, { icon: a, width: l }) : null, [a, l]);
    return /* @__PURE__ */ $e(
      vd,
      {
        variant: o ? "text" : r ? "outlined" : "contained",
        loading: t,
        disabled: n,
        startIcon: c === "start" && y,
        endIcon: c === "end" && y,
        sx: {
          minWidth: "40px",
          minHeight: "40px",
          width: s ? "40px" : "unset",
          height: s ? "40px" : "unset",
          textTransform: "none",
          fontWeight: "bold",
          borderRadius: s ? "50%" : "8px",
          p: s ? "6px" : "auto",
          px: s ? "0" : "16px !important",
          cursor: t ? "wait !important" : n ? "not-allowed !important" : "pointer",
          pointerEvents: "auto !important",
          transition: "background-color 0s, background-image 0s",
          "& .MuiButton-startIcon": { svg: { color: "inherit", mr: "8px" } },
          "& .MuiButton-endIcon": { svg: { color: "inherit", ml: "8px" } },
          ...g,
          ...f
        },
        onClick: (m) => {
          m.stopPropagation(), d == null || d(m);
        },
        ...h,
        children: [
          !c && y,
          !s && e
        ]
      }
    );
  }
);
Gn.displayName = "Button";
function mC({ color: e = "primary", isGhost: t, isOutlined: n }) {
  const r = Mr();
  return { buttonColors: cn(() => {
    const s = r.palette.mode === "dark", a = {
      auto: r.palette.text.primary,
      disabled: r.palette.action.disabled,
      primary: r.palette.primary.main,
      success: r.palette.success.main,
      error: r.palette.error.main
    }, l = e in a ? a[e] : "inherit", c = s && ["auto", "disabled"].includes(e) ? "black" : r.palette.primary.contrastText;
    return {
      backgroundColor: t || n ? "transparent" : l,
      color: t || n ? l : c,
      borderColor: n ? l : "transparent"
    };
  }, [r, e, t, n]) };
}
const dl = _e(
  ({ isOutlined: e, clickable: t, onClick: n, disabled: r, children: o, sx: s }) => t ? /* @__PURE__ */ P(
    vd,
    {
      className: "VenomousUI-Card",
      component: qo,
      isOutlined: e,
      disabled: r,
      onClick: r ? void 0 : n,
      sx: {
        display: "block",
        color: "inherit",
        textTransform: "none",
        borderRadius: "8px",
        cursor: r ? "not-allowed !important" : "pointer",
        pointerEvents: "auto !important",
        p: "16px",
        ...e ? {
          border: 1,
          borderColor: "divider"
        } : {},
        ...s
      },
      children: o
    }
  ) : /* @__PURE__ */ P(qo, { className: "VenomousUI-Card", isOutlined: e, sx: { p: "16px", ...s }, children: o })
);
dl.displayName = "Card";
const Kt = _e(
  ({ children: e, row: t, alignItems: n, justifyContent: r, gap: o = 1, sx: s, ...a }) => /* @__PURE__ */ P(
    $r,
    {
      className: "VenomousUI-Flex",
      component: "div",
      sx: {
        display: "flex",
        flexDirection: t ? "row" : "column",
        alignItems: n || (t ? "center" : "start"),
        justifyContent: r || "start",
        ...Array.isArray(o) ? { rowGap: o[0], columnGap: o[1] } : { gap: o },
        ...s
      },
      ...a,
      children: e
    }
  )
);
Kt.displayName = "Flex";
const hC = _e(
  ({ title: e, subtitle: t, headerStartExtra: n, headerEndExtra: r, children: o, ...s }) => /* @__PURE__ */ $e(dl, { ...s, children: [
    /* @__PURE__ */ $e(Kt, { row: !0, mb: "8px", justifyContent: "space-between", alignItems: "center", children: [
      n && /* @__PURE__ */ P("div", { style: { marginRight: t ? "8px" : 0 }, children: n }),
      /* @__PURE__ */ $e(Kt, { gap: 0, children: [
        e && /* @__PURE__ */ P(bn, { text: e, isTitle: !0, titleLevel: "h6", lineHeight: "1.25rem", ellipsis: !0 }),
        t && /* @__PURE__ */ P(bn, { text: t, isLabel: !0, ellipsis: !0 })
      ] }),
      r && /* @__PURE__ */ P(
        "div",
        {
          style: {
            marginRight: t ? "-8px" : 0,
            marginTop: t ? "-8px" : 0,
            marginLeft: "8px"
          },
          children: r
        }
      )
    ] }),
    o
  ] })
);
hC.displayName = "ExhibitCard";
const fl = 0, Xr = 1, di = 2, Kg = 4;
function Cp(e) {
  return () => e;
}
function gC(e) {
  e();
}
function Xg(e, t) {
  return (n) => e(t(n));
}
function Op(e, t) {
  return () => e(t);
}
function Qg(e, t) {
  return (n) => e(t, n);
}
function xd(e) {
  return e !== void 0;
}
function yC(...e) {
  return () => {
    e.map(gC);
  };
}
function fi() {
}
function pl(e, t) {
  return t(e), e;
}
function bC(e, t) {
  return t(e);
}
function yt(...e) {
  return e;
}
function rt(e, t) {
  return e(Xr, t);
}
function We(e, t) {
  e(fl, t);
}
function wd(e) {
  e(di);
}
function Zt(e) {
  return e(Kg);
}
function Ne(e, t) {
  return rt(e, Qg(t, fl));
}
function gr(e, t) {
  const n = e(Xr, (r) => {
    n(), t(r);
  });
  return n;
}
function Rp(e) {
  let t, n;
  return (r) => (o) => {
    t = o, n && clearTimeout(n), n = setTimeout(() => {
      r(t);
    }, e);
  };
}
function Jg(e, t) {
  return e === t;
}
function ht(e = Jg) {
  let t;
  return (n) => (r) => {
    e(t, r) || (t = r, n(r));
  };
}
function Fe(e) {
  return (t) => (n) => {
    e(n) && t(n);
  };
}
function Ce(e) {
  return (t) => Xg(t, e);
}
function or(e) {
  return (t) => () => {
    t(e);
  };
}
function ge(e, ...t) {
  const n = vC(...t);
  return (r, o) => {
    switch (r) {
      case di:
        wd(e);
        return;
      case Xr:
        return rt(e, n(o));
    }
  };
}
function ar(e, t) {
  return (n) => (r) => {
    n(t = e(t, r));
  };
}
function Zo(e) {
  return (t) => (n) => {
    e > 0 ? e-- : t(n);
  };
}
function Lr(e) {
  let t = null, n;
  return (r) => (o) => {
    t = o, !n && (n = setTimeout(() => {
      n = void 0, r(t);
    }, e));
  };
}
function He(...e) {
  const t = new Array(e.length);
  let n = 0, r = null;
  const o = Math.pow(2, e.length) - 1;
  return e.forEach((s, a) => {
    const l = Math.pow(2, a);
    rt(s, (c) => {
      const u = n;
      n = n | l, t[a] = c, u !== o && n === o && r && (r(), r = null);
    });
  }), (s) => (a) => {
    const l = () => {
      s([a].concat(t));
    };
    n === o ? l() : r = l;
  };
}
function vC(...e) {
  return (t) => e.reduceRight(bC, t);
}
function xC(e) {
  let t, n;
  const r = () => t == null ? void 0 : t();
  return function(o, s) {
    switch (o) {
      case Xr:
        return s ? n === s ? void 0 : (r(), n = s, t = rt(e, s), t) : (r(), fi);
      case di:
        r(), n = null;
        return;
    }
  };
}
function be(e) {
  let t = e;
  const n = qe();
  return (r, o) => {
    switch (r) {
      case fl:
        t = o;
        break;
      case Xr: {
        o(t);
        break;
      }
      case Kg:
        return t;
    }
    return n(r, o);
  };
}
function en(e, t) {
  return pl(be(t), (n) => Ne(e, n));
}
function qe() {
  const e = [];
  return (t, n) => {
    switch (t) {
      case fl:
        e.slice().forEach((r) => {
          r(n);
        });
        return;
      case di:
        e.splice(0, e.length);
        return;
      case Xr:
        return e.push(n), () => {
          const r = e.indexOf(n);
          r > -1 && e.splice(r, 1);
        };
    }
  };
}
function Cn(e) {
  return pl(qe(), (t) => Ne(e, t));
}
function Je(e, t = [], { singleton: n } = { singleton: !0 }) {
  return {
    constructor: e,
    dependencies: t,
    id: wC(),
    singleton: n
  };
}
const wC = () => Symbol();
function SC(e) {
  const t = /* @__PURE__ */ new Map(), n = ({ constructor: r, dependencies: o, id: s, singleton: a }) => {
    if (a && t.has(s))
      return t.get(s);
    const l = r(o.map((c) => n(c)));
    return a && t.set(s, l), l;
  };
  return n(e);
}
function Wt(...e) {
  const t = qe(), n = new Array(e.length);
  let r = 0;
  const o = Math.pow(2, e.length) - 1;
  return e.forEach((s, a) => {
    const l = Math.pow(2, a);
    rt(s, (c) => {
      n[a] = c, r = r | l, r === o && We(t, n);
    });
  }), function(s, a) {
    switch (s) {
      case di: {
        wd(t);
        return;
      }
      case Xr:
        return r === o && a(n), rt(t, a);
    }
  };
}
function je(e, t = Jg) {
  return ge(e, ht(t));
}
function kp(...e) {
  return function(t, n) {
    switch (t) {
      case di:
        return;
      case Xr:
        return yC(...e.map((r) => rt(r, n)));
    }
  };
}
var On = /* @__PURE__ */ ((e) => (e[e.DEBUG = 0] = "DEBUG", e[e.INFO = 1] = "INFO", e[e.WARN = 2] = "WARN", e[e.ERROR = 3] = "ERROR", e))(On || {});
const TC = {
  0: "debug",
  3: "error",
  1: "log",
  2: "warn"
}, EC = () => typeof globalThis > "u" ? window : globalThis, Qr = Je(
  () => {
    const e = be(
      3
      /* ERROR */
    );
    return {
      log: be((t, n, r = 1) => {
        var o;
        const s = (o = EC().VIRTUOSO_LOG_LEVEL) != null ? o : Zt(e);
        r >= s && console[TC[r]](
          "%creact-virtuoso: %c%s %o",
          "color: #0253b3; font-weight: bold",
          "color: initial",
          t,
          n
        );
      }),
      logLevel: e
    };
  },
  [],
  { singleton: !0 }
);
function yo(e, t, n) {
  return Sd(e, t, n).callbackRef;
}
function Sd(e, t, n) {
  const r = L.useRef(null);
  let o = (s) => {
  };
  if (typeof ResizeObserver < "u") {
    const s = L.useMemo(() => new ResizeObserver((a) => {
      const l = () => {
        const c = a[0].target;
        c.offsetParent !== null && e(c);
      };
      n ? l() : requestAnimationFrame(l);
    }), [e]);
    o = (a) => {
      a && t ? (s.observe(a), r.current = a) : (r.current && s.unobserve(r.current), r.current = null);
    };
  }
  return { callbackRef: o, ref: r };
}
function CC(e, t, n, r, o, s, a, l, c) {
  const u = L.useCallback(
    (d) => {
      const f = OC(d.children, t, l ? "offsetWidth" : "offsetHeight", o);
      let h = d.parentElement;
      for (; !h.dataset.virtuosoScroller; )
        h = h.parentElement;
      const g = h.lastElementChild.dataset.viewportType === "window";
      let y;
      g && (y = h.ownerDocument.defaultView);
      const m = a ? l ? a.scrollLeft : a.scrollTop : g ? l ? y.scrollX || y.document.documentElement.scrollLeft : y.scrollY || y.document.documentElement.scrollTop : l ? h.scrollLeft : h.scrollTop, b = a ? l ? a.scrollWidth : a.scrollHeight : g ? l ? y.document.documentElement.scrollWidth : y.document.documentElement.scrollHeight : l ? h.scrollWidth : h.scrollHeight, x = a ? l ? a.offsetWidth : a.offsetHeight : g ? l ? y.innerWidth : y.innerHeight : l ? h.offsetWidth : h.offsetHeight;
      r({
        scrollHeight: b,
        scrollTop: Math.max(m, 0),
        viewportHeight: x
      }), s == null || s(
        l ? $p("column-gap", getComputedStyle(d).columnGap, o) : $p("row-gap", getComputedStyle(d).rowGap, o)
      ), f !== null && e(f);
    },
    [e, t, o, s, a, r]
  );
  return Sd(u, n, c);
}
function OC(e, t, n, r) {
  const o = e.length;
  if (o === 0)
    return null;
  const s = [];
  for (let a = 0; a < o; a++) {
    const l = e.item(a);
    if (l.dataset.index === void 0)
      continue;
    const c = parseInt(l.dataset.index), u = parseFloat(l.dataset.knownSize), d = t(l, n);
    if (d === 0 && r("Zero-sized element, this should not happen", { child: l }, On.ERROR), d === u)
      continue;
    const f = s[s.length - 1];
    s.length === 0 || f.size !== d || f.endIndex !== c - 1 ? s.push({ endIndex: c, size: d, startIndex: c }) : s[s.length - 1].endIndex++;
  }
  return s;
}
function $p(e, t, n) {
  return t !== "normal" && !(t != null && t.endsWith("px")) && n(`${e} was not resolved to pixel value correctly`, t, On.WARN), t === "normal" ? 0 : parseInt(t ?? "0", 10);
}
function Zg(e, t, n) {
  const r = L.useRef(null), o = L.useCallback(
    (c) => {
      if (!(c != null && c.offsetParent))
        return;
      const u = c.getBoundingClientRect(), d = u.width;
      let f, h;
      if (t) {
        const g = t.getBoundingClientRect(), y = u.top - g.top;
        h = g.height - Math.max(0, y), f = y + t.scrollTop;
      } else {
        const g = a.current.ownerDocument.defaultView;
        h = g.innerHeight - Math.max(0, u.top), f = u.top + g.scrollY;
      }
      r.current = {
        offsetTop: f,
        visibleHeight: h,
        visibleWidth: d
      }, e(r.current);
    },
    [e, t]
  ), { callbackRef: s, ref: a } = Sd(o, !0, n), l = L.useCallback(() => {
    o(a.current);
  }, [o, a]);
  return L.useEffect(() => {
    var c;
    if (t) {
      t.addEventListener("scroll", l);
      const u = new ResizeObserver(() => {
        requestAnimationFrame(l);
      });
      return u.observe(t), () => {
        t.removeEventListener("scroll", l), u.unobserve(t);
      };
    } else {
      const u = (c = a.current) == null ? void 0 : c.ownerDocument.defaultView;
      return u == null || u.addEventListener("scroll", l), u == null || u.addEventListener("resize", l), () => {
        u == null || u.removeEventListener("scroll", l), u == null || u.removeEventListener("resize", l);
      };
    }
  }, [l, t]), s;
}
const dn = Je(
  () => {
    const e = qe(), t = qe(), n = be(0), r = qe(), o = be(0), s = qe(), a = qe(), l = be(0), c = be(0), u = be(0), d = be(0), f = qe(), h = qe(), g = be(!1), y = be(!1), m = be(!1);
    return Ne(
      ge(
        e,
        Ce(({ scrollTop: b }) => b)
      ),
      t
    ), Ne(
      ge(
        e,
        Ce(({ scrollHeight: b }) => b)
      ),
      a
    ), Ne(t, o), {
      deviation: n,
      fixedFooterHeight: u,
      fixedHeaderHeight: c,
      footerHeight: d,
      headerHeight: l,
      horizontalDirection: y,
      scrollBy: h,
      // input
      scrollContainerState: e,
      scrollHeight: a,
      scrollingInProgress: g,
      // signals
      scrollTo: f,
      scrollTop: t,
      skipAnimationFrameInResizeObserver: m,
      smoothScrollTargetReached: r,
      // state
      statefulScrollTop: o,
      viewportHeight: s
    };
  },
  [],
  { singleton: !0 }
), rs = { lvl: 0 };
function ey(e, t) {
  const n = e.length;
  if (n === 0)
    return [];
  let { index: r, value: o } = t(e[0]);
  const s = [];
  for (let a = 1; a < n; a++) {
    const { index: l, value: c } = t(e[a]);
    s.push({ end: l - 1, start: r, value: o }), r = l, o = c;
  }
  return s.push({ end: 1 / 0, start: r, value: o }), s;
}
function ft(e) {
  return e === rs;
}
function os(e, t) {
  if (!ft(e))
    return t === e.k ? e.v : t < e.k ? os(e.l, t) : os(e.r, t);
}
function Kn(e, t, n = "k") {
  if (ft(e))
    return [-1 / 0, void 0];
  if (Number(e[n]) === t)
    return [e.k, e.v];
  if (Number(e[n]) < t) {
    const r = Kn(e.r, t, n);
    return r[0] === -1 / 0 ? [e.k, e.v] : r;
  }
  return Kn(e.l, t, n);
}
function wn(e, t, n) {
  return ft(e) ? ry(t, n, 1) : t === e.k ? zt(e, { k: t, v: n }) : t < e.k ? Pp(zt(e, { l: wn(e.l, t, n) })) : Pp(zt(e, { r: wn(e.r, t, n) }));
}
function jo() {
  return rs;
}
function ml(e, t, n) {
  if (ft(e))
    return [];
  const r = Kn(e, t)[0];
  return RC(ru(e, r, n));
}
function nu(e, t) {
  if (ft(e)) return rs;
  const { k: n, l: r, r: o } = e;
  if (t === n) {
    if (ft(r))
      return o;
    if (ft(o))
      return r;
    {
      const [s, a] = ny(r);
      return sa(zt(e, { k: s, l: ty(r), v: a }));
    }
  } else return t < n ? sa(zt(e, { l: nu(r, t) })) : sa(zt(e, { r: nu(o, t) }));
}
function ao(e) {
  return ft(e) ? [] : [...ao(e.l), { k: e.k, v: e.v }, ...ao(e.r)];
}
function ru(e, t, n) {
  if (ft(e))
    return [];
  const { k: r, l: o, r: s, v: a } = e;
  let l = [];
  return r > t && (l = l.concat(ru(o, t, n))), r >= t && r <= n && l.push({ k: r, v: a }), r <= n && (l = l.concat(ru(s, t, n))), l;
}
function sa(e) {
  const { l: t, lvl: n, r } = e;
  if (r.lvl >= n - 1 && t.lvl >= n - 1)
    return e;
  if (n > r.lvl + 1) {
    if (ac(t))
      return oy(zt(e, { lvl: n - 1 }));
    if (!ft(t) && !ft(t.r))
      return zt(t.r, {
        l: zt(t, { r: t.r.l }),
        lvl: n,
        r: zt(e, {
          l: t.r.r,
          lvl: n - 1
        })
      });
    throw new Error("Unexpected empty nodes");
  } else {
    if (ac(e))
      return ou(zt(e, { lvl: n - 1 }));
    if (!ft(r) && !ft(r.l)) {
      const o = r.l, s = ac(o) ? r.lvl - 1 : r.lvl;
      return zt(o, {
        l: zt(e, {
          lvl: n - 1,
          r: o.l
        }),
        lvl: o.lvl + 1,
        r: ou(zt(r, { l: o.r, lvl: s }))
      });
    } else
      throw new Error("Unexpected empty nodes");
  }
}
function zt(e, t) {
  return ry(
    t.k !== void 0 ? t.k : e.k,
    t.v !== void 0 ? t.v : e.v,
    t.lvl !== void 0 ? t.lvl : e.lvl,
    t.l !== void 0 ? t.l : e.l,
    t.r !== void 0 ? t.r : e.r
  );
}
function ty(e) {
  return ft(e.r) ? e.l : sa(zt(e, { r: ty(e.r) }));
}
function ac(e) {
  return ft(e) || e.lvl > e.r.lvl;
}
function ny(e) {
  return ft(e.r) ? [e.k, e.v] : ny(e.r);
}
function ry(e, t, n, r = rs, o = rs) {
  return { k: e, l: r, lvl: n, r: o, v: t };
}
function Pp(e) {
  return ou(oy(e));
}
function oy(e) {
  const { l: t } = e;
  return !ft(t) && t.lvl === e.lvl ? zt(t, { r: zt(e, { l: t.r }) }) : e;
}
function ou(e) {
  const { lvl: t, r: n } = e;
  return !ft(n) && !ft(n.r) && n.lvl === t && n.r.lvl === t ? zt(n, { l: zt(e, { r: n.l }), lvl: t + 1 }) : e;
}
function RC(e) {
  return ey(e, ({ k: t, v: n }) => ({ index: t, value: n }));
}
function iy(e, t) {
  return !!(e && e.startIndex === t.startIndex && e.endIndex === t.endIndex);
}
function is(e, t) {
  return !!(e && e[0] === t[0] && e[1] === t[1]);
}
const Td = Je(
  () => ({ recalcInProgress: be(!1) }),
  [],
  { singleton: !0 }
);
function sy(e, t, n) {
  return e[Sa(e, t, n)];
}
function Sa(e, t, n, r = 0) {
  let o = e.length - 1;
  for (; r <= o; ) {
    const s = Math.floor((r + o) / 2), a = e[s], l = n(a, t);
    if (l === 0)
      return s;
    if (l === -1) {
      if (o - r < 2)
        return s - 1;
      o = s - 1;
    } else {
      if (o === r)
        return s;
      r = s + 1;
    }
  }
  throw new Error(`Failed binary finding record in array - ${e.join(",")}, searched for ${t}`);
}
function kC(e, t, n, r) {
  const o = Sa(e, t, r), s = Sa(e, n, r, o);
  return e.slice(o, s + 1);
}
function Wr(e, t) {
  return Math.round(e.getBoundingClientRect()[t]);
}
function hl(e) {
  return !ft(e.groupOffsetTree);
}
function Ed({ index: e }, t) {
  return t === e ? 0 : t < e ? -1 : 1;
}
function $C() {
  return {
    groupIndices: [],
    groupOffsetTree: jo(),
    lastIndex: 0,
    lastOffset: 0,
    lastSize: 0,
    offsetTree: [],
    sizeTree: jo()
  };
}
function PC(e, t) {
  let n = ft(e) ? 0 : 1 / 0;
  for (const r of t) {
    const { endIndex: o, size: s, startIndex: a } = r;
    if (n = Math.min(n, a), ft(e)) {
      e = wn(e, 0, s);
      continue;
    }
    const l = ml(e, a - 1, o + 1);
    if (l.some(BC(r)))
      continue;
    let c = !1, u = !1;
    for (const { end: d, start: f, value: h } of l)
      c ? (o >= f || s === h) && (e = nu(e, f)) : (u = h !== s, c = !0), d > o && o >= f && h !== s && (e = wn(e, o + 1, h));
    u && (e = wn(e, a, s));
  }
  return [e, n];
}
function IC(e) {
  return typeof e.groupIndex < "u";
}
function NC({ offset: e }, t) {
  return t === e ? 0 : t < e ? -1 : 1;
}
function ss(e, t, n) {
  if (t.length === 0)
    return 0;
  const { index: r, offset: o, size: s } = sy(t, e, Ed), a = e - r, l = s * a + (a - 1) * n + o;
  return l > 0 ? l + n : l;
}
function ay(e, t) {
  if (!hl(t))
    return e;
  let n = 0;
  for (; t.groupIndices[n] <= e + n; )
    n++;
  return e + n;
}
function ly(e, t, n) {
  if (IC(e))
    return t.groupIndices[e.groupIndex] + 1;
  {
    const r = e.index === "LAST" ? n : e.index;
    let o = ay(r, t);
    return o = Math.max(0, o, Math.min(n, o)), o;
  }
}
function AC(e, t, n, r = 0) {
  return r > 0 && (t = Math.max(t, sy(e, r, Ed).offset)), ey(kC(e, t, n, NC), DC);
}
function MC(e, [t, n, r, o]) {
  t.length > 0 && r("received item sizes", t, On.DEBUG);
  const s = e.sizeTree;
  let a = s, l = 0;
  if (n.length > 0 && ft(s) && t.length === 2) {
    const h = t[0].size, g = t[1].size;
    a = n.reduce((y, m) => wn(wn(y, m, h), m + 1, g), a);
  } else
    [a, l] = PC(a, t);
  if (a === s)
    return e;
  const { lastIndex: c, lastOffset: u, lastSize: d, offsetTree: f } = iu(e.offsetTree, l, a, o);
  return {
    groupIndices: n,
    groupOffsetTree: n.reduce((h, g) => wn(h, g, ss(g, f, o)), jo()),
    lastIndex: c,
    lastOffset: u,
    lastSize: d,
    offsetTree: f,
    sizeTree: a
  };
}
function _C(e) {
  return ao(e).map(({ k: t, v: n }, r, o) => {
    const s = o[r + 1];
    return { endIndex: s ? s.k - 1 : 1 / 0, size: n, startIndex: t };
  });
}
function Ip(e, t) {
  let n = 0, r = 0;
  for (; n < e; )
    n += t[r + 1] - t[r] - 1, r++;
  return r - (n === e ? 0 : 1);
}
function iu(e, t, n, r) {
  let o = e, s = 0, a = 0, l = 0, c = 0;
  if (t !== 0) {
    c = Sa(o, t - 1, Ed), l = o[c].offset;
    const u = Kn(n, t - 1);
    s = u[0], a = u[1], o.length && o[c].size === Kn(n, t)[1] && (c -= 1), o = o.slice(0, c + 1);
  } else
    o = [];
  for (const { start: u, value: d } of ml(n, t, 1 / 0)) {
    const f = u - s, h = f * a + l + f * r;
    o.push({
      index: u,
      offset: h,
      size: d
    }), s = u, l = h, a = d;
  }
  return {
    lastIndex: s,
    lastOffset: l,
    lastSize: a,
    offsetTree: o
  };
}
function DC(e) {
  return { index: e.index, value: e };
}
function BC(e) {
  const { endIndex: t, size: n, startIndex: r } = e;
  return (o) => o.start === r && (o.end === t || o.end === 1 / 0) && o.value === n;
}
const FC = {
  offsetHeight: "height",
  offsetWidth: "width"
}, vr = Je(
  ([{ log: e }, { recalcInProgress: t }]) => {
    const n = qe(), r = qe(), o = en(r, 0), s = qe(), a = qe(), l = be(0), c = be([]), u = be(void 0), d = be(void 0), f = be((v, T) => Wr(v, FC[T])), h = be(void 0), g = be(0), y = $C(), m = en(
      ge(n, He(c, e, g), ar(MC, y), ht()),
      y
    ), b = en(
      ge(
        c,
        ht(),
        ar((v, T) => ({ current: T, prev: v.current }), {
          current: [],
          prev: []
        }),
        Ce(({ prev: v }) => v)
      ),
      []
    );
    Ne(
      ge(
        c,
        Fe((v) => v.length > 0),
        He(m, g),
        Ce(([v, T, R]) => {
          const k = v.reduce((I, p, O) => wn(I, p, ss(p, T.offsetTree, R) || O), jo());
          return {
            ...T,
            groupIndices: v,
            groupOffsetTree: k
          };
        })
      ),
      m
    ), Ne(
      ge(
        r,
        He(m),
        Fe(([v, { lastIndex: T }]) => v < T),
        Ce(([v, { lastIndex: T, lastSize: R }]) => [
          {
            endIndex: T,
            size: R,
            startIndex: v
          }
        ])
      ),
      n
    ), Ne(u, d);
    const x = en(
      ge(
        u,
        Ce((v) => v === void 0)
      ),
      !0
    );
    Ne(
      ge(
        d,
        Fe((v) => v !== void 0 && ft(Zt(m).sizeTree)),
        Ce((v) => [{ endIndex: 0, size: v, startIndex: 0 }])
      ),
      n
    );
    const E = Cn(
      ge(
        n,
        He(m),
        ar(
          ({ sizes: v }, [T, R]) => ({
            changed: R !== v,
            sizes: R
          }),
          { changed: !1, sizes: y }
        ),
        Ce((v) => v.changed)
      )
    );
    rt(
      ge(
        l,
        ar(
          (v, T) => ({ diff: v.prev - T, prev: T }),
          { diff: 0, prev: 0 }
        ),
        Ce((v) => v.diff)
      ),
      (v) => {
        const { groupIndices: T } = Zt(m);
        if (v > 0)
          We(t, !0), We(s, v + Ip(v, T));
        else if (v < 0) {
          const R = Zt(b);
          R.length > 0 && (v -= Ip(-v, R)), We(a, v);
        }
      }
    ), rt(ge(l, He(e)), ([v, T]) => {
      v < 0 && T(
        "`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value",
        { firstItemIndex: l },
        On.ERROR
      );
    });
    const w = Cn(s);
    Ne(
      ge(
        s,
        He(m),
        Ce(([v, T]) => {
          const R = T.groupIndices.length > 0, k = [], I = T.lastSize;
          if (R) {
            const p = os(T.sizeTree, 0);
            let O = 0, $ = 0;
            for (; O < v; ) {
              const D = T.groupIndices[$], _ = T.groupIndices.length === $ + 1 ? 1 / 0 : T.groupIndices[$ + 1] - D - 1;
              k.push({
                endIndex: D,
                size: p,
                startIndex: D
              }), k.push({
                endIndex: D + 1 + _ - 1,
                size: I,
                startIndex: D + 1
              }), $++, O += _ + 1;
            }
            const A = ao(T.sizeTree);
            return O !== v && A.shift(), A.reduce(
              (D, { k: _, v: M }) => {
                let V = D.ranges;
                return D.prevSize !== 0 && (V = [
                  ...D.ranges,
                  {
                    endIndex: _ + v - 1,
                    size: D.prevSize,
                    startIndex: D.prevIndex
                  }
                ]), {
                  prevIndex: _ + v,
                  prevSize: M,
                  ranges: V
                };
              },
              {
                prevIndex: v,
                prevSize: 0,
                ranges: k
              }
            ).ranges;
          }
          return ao(T.sizeTree).reduce(
            (p, { k: O, v: $ }) => ({
              prevIndex: O + v,
              prevSize: $,
              ranges: [...p.ranges, { endIndex: O + v - 1, size: p.prevSize, startIndex: p.prevIndex }]
            }),
            {
              prevIndex: 0,
              prevSize: I,
              ranges: []
            }
          ).ranges;
        })
      ),
      n
    );
    const S = Cn(
      ge(
        a,
        He(m, g),
        Ce(([v, { offsetTree: T }, R]) => {
          const k = -v;
          return ss(k, T, R);
        })
      )
    );
    return Ne(
      ge(
        a,
        He(m, g),
        Ce(([v, T, R]) => {
          if (T.groupIndices.length > 0) {
            if (ft(T.sizeTree))
              return T;
            let k = jo();
            const I = Zt(b);
            let p = 0, O = 0, $ = 0;
            for (; p < -v; ) {
              $ = I[O];
              const A = I[O + 1] - $ - 1;
              O++, p += A + 1;
            }
            if (k = ao(T.sizeTree).reduce((A, { k: D, v: _ }) => wn(A, Math.max(0, D + v), _), k), p !== -v) {
              const A = os(T.sizeTree, $);
              k = wn(k, 0, A);
              const D = Kn(T.sizeTree, -v + 1)[1];
              k = wn(k, 1, D);
            }
            return {
              ...T,
              sizeTree: k,
              ...iu(T.offsetTree, 0, k, R)
            };
          } else {
            const k = ao(T.sizeTree).reduce((I, { k: p, v: O }) => wn(I, Math.max(0, p + v), O), jo());
            return {
              ...T,
              sizeTree: k,
              ...iu(T.offsetTree, 0, k, R)
            };
          }
        })
      ),
      m
    ), {
      beforeUnshiftWith: w,
      // input
      data: h,
      defaultItemSize: d,
      firstItemIndex: l,
      fixedItemSize: u,
      gap: g,
      groupIndices: c,
      itemSize: f,
      listRefresh: E,
      shiftWith: a,
      shiftWithOffset: S,
      sizeRanges: n,
      // output
      sizes: m,
      statefulTotalCount: o,
      totalCount: r,
      trackItemSizes: x,
      unshiftWith: s
    };
  },
  yt(Qr, Td),
  { singleton: !0 }
);
function jC(e) {
  return e.reduce(
    (t, n) => (t.groupIndices.push(t.totalCount), t.totalCount += n + 1, t),
    {
      groupIndices: [],
      totalCount: 0
    }
  );
}
const cy = Je(
  ([{ groupIndices: e, sizes: t, totalCount: n }, { headerHeight: r, scrollTop: o }]) => {
    const s = qe(), a = qe(), l = Cn(ge(s, Ce(jC)));
    return Ne(
      ge(
        l,
        Ce((c) => c.totalCount)
      ),
      n
    ), Ne(
      ge(
        l,
        Ce((c) => c.groupIndices)
      ),
      e
    ), Ne(
      ge(
        Wt(o, t, r),
        Fe(([c, u]) => hl(u)),
        Ce(([c, u, d]) => Kn(u.groupOffsetTree, Math.max(c - d, 0), "v")[0]),
        ht(),
        Ce((c) => [c])
      ),
      a
    ), { groupCounts: s, topItemsIndexes: a };
  },
  yt(vr, dn)
), Jr = Je(
  ([{ log: e }]) => {
    const t = be(!1), n = Cn(
      ge(
        t,
        Fe((r) => r),
        ht()
      )
    );
    return rt(t, (r) => {
      r && Zt(e)("props updated", {}, On.DEBUG);
    }), { didMount: n, propsReady: t };
  },
  yt(Qr),
  { singleton: !0 }
), LC = typeof document < "u" && "scrollBehavior" in document.documentElement.style;
function uy(e) {
  const t = typeof e == "number" ? { index: e } : e;
  return t.align || (t.align = "start"), (!t.behavior || !LC) && (t.behavior = "auto"), t.offset || (t.offset = 0), t;
}
const ys = Je(
  ([
    { gap: e, listRefresh: t, sizes: n, totalCount: r },
    {
      fixedFooterHeight: o,
      fixedHeaderHeight: s,
      footerHeight: a,
      headerHeight: l,
      scrollingInProgress: c,
      scrollTo: u,
      smoothScrollTargetReached: d,
      viewportHeight: f
    },
    { log: h }
  ]) => {
    const g = qe(), y = qe(), m = be(0);
    let b = null, x = null, E = null;
    function w() {
      b && (b(), b = null), E && (E(), E = null), x && (clearTimeout(x), x = null), We(c, !1);
    }
    return Ne(
      ge(
        g,
        He(n, f, r, m, l, a, h),
        He(e, s, o),
        Ce(
          ([
            [S, v, T, R, k, I, p, O],
            $,
            A,
            D
          ]) => {
            const _ = uy(S), { align: M, behavior: V, offset: Y } = _, U = R - 1, j = ly(_, v, U);
            let W = ss(j, v.offsetTree, $) + I;
            M === "end" ? (W += A + Kn(v.sizeTree, j)[1] - T + D, j === U && (W += p)) : M === "center" ? W += (A + Kn(v.sizeTree, j)[1] - T + D) / 2 : W -= k, Y && (W += Y);
            const ee = (K) => {
              w(), K ? (O("retrying to scroll to", { location: S }, On.DEBUG), We(g, S)) : (We(y, !0), O("list did not change, scroll successful", {}, On.DEBUG));
            };
            if (w(), V === "smooth") {
              let K = !1;
              E = rt(t, (oe) => {
                K = K || oe;
              }), b = gr(d, () => {
                ee(K);
              });
            } else
              b = gr(ge(t, VC(150)), ee);
            return x = setTimeout(() => {
              w();
            }, 1200), We(c, !0), O("scrolling from index to", { behavior: V, index: j, top: W }, On.DEBUG), { behavior: V, top: W };
          }
        )
      ),
      u
    ), {
      scrollTargetReached: y,
      scrollToIndex: g,
      topListHeight: m
    };
  },
  yt(vr, dn, Qr),
  { singleton: !0 }
);
function VC(e) {
  return (t) => {
    const n = setTimeout(() => {
      t(!1);
    }, e);
    return (r) => {
      r && (t(!0), clearTimeout(n));
    };
  };
}
function Cd(e, t) {
  e == 0 ? t() : requestAnimationFrame(() => {
    Cd(e - 1, t);
  });
}
function Od(e, t) {
  const n = t - 1;
  return typeof e == "number" ? e : e.index === "LAST" ? n : e.index;
}
const bs = Je(
  ([{ defaultItemSize: e, listRefresh: t, sizes: n }, { scrollTop: r }, { scrollTargetReached: o, scrollToIndex: s }, { didMount: a }]) => {
    const l = be(!0), c = be(0), u = be(!0);
    return Ne(
      ge(
        a,
        He(c),
        Fe(([d, f]) => !!f),
        or(!1)
      ),
      l
    ), Ne(
      ge(
        a,
        He(c),
        Fe(([d, f]) => !!f),
        or(!1)
      ),
      u
    ), rt(
      ge(
        Wt(t, a),
        He(l, n, e, u),
        Fe(([[, d], f, { sizeTree: h }, g, y]) => d && (!ft(h) || xd(g)) && !f && !y),
        He(c)
      ),
      ([, d]) => {
        gr(o, () => {
          We(u, !0);
        }), Cd(4, () => {
          gr(r, () => {
            We(l, !0);
          }), We(s, d);
        });
      }
    ), {
      initialItemFinalLocationReached: u,
      initialTopMostItemIndex: c,
      scrolledToInitialItem: l
    };
  },
  yt(vr, dn, ys, Jr),
  { singleton: !0 }
);
function dy(e, t) {
  return Math.abs(e - t) < 1.01;
}
const as = "up", Li = "down", zC = "none", WC = {
  atBottom: !1,
  notAtBottomBecause: "NOT_SHOWING_LAST_ITEM",
  state: {
    offsetBottom: 0,
    scrollHeight: 0,
    scrollTop: 0,
    viewportHeight: 0
  }
}, UC = 0, vs = Je(([{ footerHeight: e, headerHeight: t, scrollBy: n, scrollContainerState: r, scrollTop: o, viewportHeight: s }]) => {
  const a = be(!1), l = be(!0), c = qe(), u = qe(), d = be(4), f = be(UC), h = en(
    ge(
      kp(ge(je(o), Zo(1), or(!0)), ge(je(o), Zo(1), or(!1), Rp(100))),
      ht()
    ),
    !1
  ), g = en(
    ge(kp(ge(n, or(!0)), ge(n, or(!1), Rp(200))), ht()),
    !1
  );
  Ne(
    ge(
      Wt(je(o), je(f)),
      Ce(([E, w]) => E <= w),
      ht()
    ),
    l
  ), Ne(ge(l, Lr(50)), u);
  const y = Cn(
    ge(
      Wt(r, je(s), je(t), je(e), je(d)),
      ar((E, [{ scrollHeight: w, scrollTop: S }, v, T, R, k]) => {
        const I = S + v - w > -k, p = {
          scrollHeight: w,
          scrollTop: S,
          viewportHeight: v
        };
        if (I) {
          let $, A;
          return S > E.state.scrollTop ? ($ = "SCROLLED_DOWN", A = E.state.scrollTop - S) : ($ = "SIZE_DECREASED", A = E.state.scrollTop - S || E.scrollTopDelta), {
            atBottom: !0,
            atBottomBecause: $,
            scrollTopDelta: A,
            state: p
          };
        }
        let O;
        return p.scrollHeight > E.state.scrollHeight ? O = "SIZE_INCREASED" : v < E.state.viewportHeight ? O = "VIEWPORT_HEIGHT_DECREASING" : S < E.state.scrollTop ? O = "SCROLLING_UPWARDS" : O = "NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM", {
          atBottom: !1,
          notAtBottomBecause: O,
          state: p
        };
      }, WC),
      ht((E, w) => E && E.atBottom === w.atBottom)
    )
  ), m = en(
    ge(
      r,
      ar(
        (E, { scrollHeight: w, scrollTop: S, viewportHeight: v }) => {
          if (dy(E.scrollHeight, w))
            return {
              changed: !1,
              jump: 0,
              scrollHeight: w,
              scrollTop: S
            };
          {
            const T = w - (S + v) < 1;
            return E.scrollTop !== S && T ? {
              changed: !0,
              jump: E.scrollTop - S,
              scrollHeight: w,
              scrollTop: S
            } : {
              changed: !0,
              jump: 0,
              scrollHeight: w,
              scrollTop: S
            };
          }
        },
        { changed: !1, jump: 0, scrollHeight: 0, scrollTop: 0 }
      ),
      Fe((E) => E.changed),
      Ce((E) => E.jump)
    ),
    0
  );
  Ne(
    ge(
      y,
      Ce((E) => E.atBottom)
    ),
    a
  ), Ne(ge(a, Lr(50)), c);
  const b = be(Li);
  Ne(
    ge(
      r,
      Ce(({ scrollTop: E }) => E),
      ht(),
      ar(
        (E, w) => Zt(g) ? { direction: E.direction, prevScrollTop: w } : { direction: w < E.prevScrollTop ? as : Li, prevScrollTop: w },
        { direction: Li, prevScrollTop: 0 }
      ),
      Ce((E) => E.direction)
    ),
    b
  ), Ne(ge(r, Lr(50), or(zC)), b);
  const x = be(0);
  return Ne(
    ge(
      h,
      Fe((E) => !E),
      or(0)
    ),
    x
  ), Ne(
    ge(
      o,
      Lr(100),
      He(h),
      Fe(([E, w]) => !!w),
      ar(([E, w], [S]) => [w, S], [0, 0]),
      Ce(([E, w]) => w - E)
    ),
    x
  ), {
    atBottomState: y,
    atBottomStateChange: c,
    atBottomThreshold: d,
    atTopStateChange: u,
    atTopThreshold: f,
    isAtBottom: a,
    isAtTop: l,
    isScrolling: h,
    lastJumpDueToItemResize: m,
    scrollDirection: b,
    scrollVelocity: x
  };
}, yt(dn)), Ta = "top", Ea = "bottom", Np = "none";
function Ap(e, t, n) {
  return typeof e == "number" ? n === as && t === Ta || n === Li && t === Ea ? e : 0 : n === as ? t === Ta ? e.main : e.reverse : t === Ea ? e.main : e.reverse;
}
function Mp(e, t) {
  var n;
  return typeof e == "number" ? e : (n = e[t]) != null ? n : 0;
}
const Rd = Je(
  ([{ deviation: e, fixedHeaderHeight: t, headerHeight: n, scrollTop: r, viewportHeight: o }]) => {
    const s = qe(), a = be(0), l = be(0), c = be(0), u = en(
      ge(
        Wt(
          je(r),
          je(o),
          je(n),
          je(s, is),
          je(c),
          je(a),
          je(t),
          je(e),
          je(l)
        ),
        Ce(
          ([
            d,
            f,
            h,
            [g, y],
            m,
            b,
            x,
            E,
            w
          ]) => {
            const S = d - E, v = b + x, T = Math.max(h - S, 0);
            let R = Np;
            const k = Mp(w, Ta), I = Mp(w, Ea);
            return g -= E, g += h + x, y += h + x, y -= E, g > d + v - k && (R = as), y < d - T + f + I && (R = Li), R !== Np ? [
              Math.max(S - h - Ap(m, Ta, R) - k, 0),
              S - T - x + f + Ap(m, Ea, R) + I
            ] : null;
          }
        ),
        Fe((d) => d != null),
        ht(is)
      ),
      [0, 0]
    );
    return {
      increaseViewportBy: l,
      // input
      listBoundary: s,
      overscan: c,
      topListHeight: a,
      // output
      visibleRange: u
    };
  },
  yt(dn),
  { singleton: !0 }
);
function HC(e, t, n) {
  if (hl(t)) {
    const r = ay(e, t);
    return [
      { index: Kn(t.groupOffsetTree, r)[0], offset: 0, size: 0 },
      { data: n == null ? void 0 : n[0], index: r, offset: 0, size: 0 }
    ];
  }
  return [{ data: n == null ? void 0 : n[0], index: e, offset: 0, size: 0 }];
}
const lc = {
  bottom: 0,
  firstItemIndex: 0,
  items: [],
  offsetBottom: 0,
  offsetTop: 0,
  top: 0,
  topItems: [],
  topListHeight: 0,
  totalCount: 0
};
function aa(e, t, n, r, o, s) {
  const { lastIndex: a, lastOffset: l, lastSize: c } = o;
  let u = 0, d = 0;
  if (e.length > 0) {
    u = e[0].offset;
    const m = e[e.length - 1];
    d = m.offset + m.size;
  }
  const f = n - a, h = l + f * c + (f - 1) * r, g = u, y = h - d;
  return {
    bottom: d,
    firstItemIndex: s,
    items: _p(e, o, s),
    offsetBottom: y,
    offsetTop: u,
    top: g,
    topItems: _p(t, o, s),
    topListHeight: t.reduce((m, b) => b.size + m, 0),
    totalCount: n
  };
}
function fy(e, t, n, r, o, s) {
  let a = 0;
  if (n.groupIndices.length > 0)
    for (const d of n.groupIndices) {
      if (d - a >= e)
        break;
      a++;
    }
  const l = e + a, c = Od(t, l), u = Array.from({ length: l }).map((d, f) => ({
    data: s[f + c],
    index: f + c,
    offset: 0,
    size: 0
  }));
  return aa(u, [], l, o, n, r);
}
function _p(e, t, n) {
  if (e.length === 0)
    return [];
  if (!hl(t))
    return e.map((u) => ({ ...u, index: u.index + n, originalIndex: u.index }));
  const r = e[0].index, o = e[e.length - 1].index, s = [], a = ml(t.groupOffsetTree, r, o);
  let l, c = 0;
  for (const u of e) {
    (!l || l.end < u.index) && (l = a.shift(), c = t.groupIndices.indexOf(l.start));
    let d;
    u.index === l.start ? d = {
      index: c,
      type: "group"
    } : d = {
      groupIndex: c,
      index: u.index - (c + 1) + n
    }, s.push({
      ...d,
      data: u.data,
      offset: u.offset,
      originalIndex: u.index,
      size: u.size
    });
  }
  return s;
}
const bo = Je(
  ([
    { data: e, firstItemIndex: t, gap: n, sizes: r, totalCount: o },
    s,
    { listBoundary: a, topListHeight: l, visibleRange: c },
    { initialTopMostItemIndex: u, scrolledToInitialItem: d },
    { topListHeight: f },
    h,
    { didMount: g },
    { recalcInProgress: y }
  ]) => {
    const m = be([]), b = be(0), x = qe();
    Ne(s.topItemsIndexes, m);
    const E = en(
      ge(
        Wt(
          g,
          y,
          je(c, is),
          je(o),
          je(r),
          je(u),
          d,
          je(m),
          je(t),
          je(n),
          e
        ),
        Fe(([T, R, , k, , , , , , , I]) => {
          const p = I && I.length !== k;
          return T && !R && !p;
        }),
        Ce(
          ([
            ,
            ,
            [T, R],
            k,
            I,
            p,
            O,
            $,
            A,
            D,
            _
          ]) => {
            const M = I, { offsetTree: V, sizeTree: Y } = M, U = Zt(b);
            if (k === 0)
              return { ...lc, totalCount: k };
            if (T === 0 && R === 0)
              return U === 0 ? { ...lc, totalCount: k } : fy(U, p, I, A, D, _ || []);
            if (ft(Y))
              return U > 0 ? null : aa(
                HC(Od(p, k), M, _),
                [],
                k,
                D,
                M,
                A
              );
            const j = [];
            if ($.length > 0) {
              const ne = $[0], se = $[$.length - 1];
              let de = 0;
              for (const X of ml(Y, ne, se)) {
                const ae = X.value, Q = Math.max(X.start, ne), ie = Math.min(X.end, se);
                for (let F = Q; F <= ie; F++)
                  j.push({ data: _ == null ? void 0 : _[F], index: F, offset: de, size: ae }), de += ae;
              }
            }
            if (!O)
              return aa([], j, k, D, M, A);
            const W = $.length > 0 ? $[$.length - 1] + 1 : 0, ee = AC(V, T, R, W);
            if (ee.length === 0)
              return null;
            const K = k - 1, oe = pl([], (ne) => {
              for (const se of ee) {
                const de = se.value;
                let X = de.offset, ae = se.start;
                const Q = de.size;
                if (de.offset < T) {
                  ae += Math.floor((T - de.offset + D) / (Q + D));
                  const F = ae - se.start;
                  X += F * Q + F * D;
                }
                ae < W && (X += (W - ae) * Q, ae = W);
                const ie = Math.min(se.end, K);
                for (let F = ae; F <= ie && !(X >= R); F++)
                  ne.push({ data: _ == null ? void 0 : _[F], index: F, offset: X, size: Q }), X += Q + D;
              }
            });
            return aa(oe, j, k, D, M, A);
          }
        ),
        //@ts-expect-error filter needs to be fixed
        Fe((T) => T !== null),
        ht()
      ),
      lc
    );
    Ne(
      ge(
        e,
        Fe(xd),
        Ce((T) => T == null ? void 0 : T.length)
      ),
      o
    ), Ne(
      ge(
        E,
        Ce((T) => T.topListHeight)
      ),
      f
    ), Ne(f, l), Ne(
      ge(
        E,
        Ce((T) => [T.top, T.bottom])
      ),
      a
    ), Ne(
      ge(
        E,
        Ce((T) => T.items)
      ),
      x
    );
    const w = Cn(
      ge(
        E,
        Fe(({ items: T }) => T.length > 0),
        He(o, e),
        Fe(([{ items: T }, R]) => T[T.length - 1].originalIndex === R - 1),
        Ce(([, T, R]) => [T - 1, R]),
        ht(is),
        Ce(([T]) => T)
      )
    ), S = Cn(
      ge(
        E,
        Lr(200),
        Fe(({ items: T, topItems: R }) => T.length > 0 && T[0].originalIndex === R.length),
        Ce(({ items: T }) => T[0].index),
        ht()
      )
    ), v = Cn(
      ge(
        E,
        Fe(({ items: T }) => T.length > 0),
        Ce(({ items: T }) => {
          let R = 0, k = T.length - 1;
          for (; T[R].type === "group" && R < k; )
            R++;
          for (; T[k].type === "group" && k > R; )
            k--;
          return {
            endIndex: T[k].index,
            startIndex: T[R].index
          };
        }),
        ht(iy)
      )
    );
    return { endReached: w, initialItemCount: b, itemsRendered: x, listState: E, rangeChanged: v, startReached: S, topItemsIndexes: m, ...h };
  },
  yt(
    vr,
    cy,
    Rd,
    bs,
    ys,
    vs,
    Jr,
    Td
  ),
  { singleton: !0 }
), py = Je(
  ([{ fixedFooterHeight: e, fixedHeaderHeight: t, footerHeight: n, headerHeight: r }, { listState: o }]) => {
    const s = qe(), a = en(
      ge(
        Wt(n, e, r, t, o),
        Ce(([l, c, u, d, f]) => l + c + u + d + f.offsetBottom + f.bottom)
      ),
      0
    );
    return Ne(je(a), s), { totalListHeight: a, totalListHeightChanged: s };
  },
  yt(dn, bo),
  { singleton: !0 }
), qC = Je(
  ([{ viewportHeight: e }, { totalListHeight: t }]) => {
    const n = be(!1), r = en(
      ge(
        Wt(n, e, t),
        Fe(([o]) => o),
        Ce(([, o, s]) => Math.max(0, o - s)),
        Lr(0),
        ht()
      ),
      0
    );
    return { alignToBottom: n, paddingTopAddition: r };
  },
  yt(dn, py),
  { singleton: !0 }
);
function Dp(e) {
  return e ? e === "smooth" ? "smooth" : "auto" : !1;
}
const YC = (e, t) => typeof e == "function" ? Dp(e(t)) : t && Dp(e), GC = Je(
  ([
    { listRefresh: e, totalCount: t },
    { atBottomState: n, isAtBottom: r },
    { scrollToIndex: o },
    { scrolledToInitialItem: s },
    { didMount: a, propsReady: l },
    { log: c },
    { scrollingInProgress: u }
  ]) => {
    const d = be(!1), f = qe();
    let h = null;
    function g(m) {
      We(o, {
        align: "end",
        behavior: m,
        index: "LAST"
      });
    }
    rt(
      ge(
        Wt(ge(je(t), Zo(1)), a),
        He(je(d), r, s, u),
        Ce(([[m, b], x, E, w, S]) => {
          let v = b && w, T = "auto";
          return v && (T = YC(x, E || S), v = v && !!T), { followOutputBehavior: T, shouldFollow: v, totalCount: m };
        }),
        Fe(({ shouldFollow: m }) => m)
      ),
      ({ followOutputBehavior: m, totalCount: b }) => {
        h && (h(), h = null), h = gr(e, () => {
          Zt(c)("following output to ", { totalCount: b }, On.DEBUG), g(m), h = null;
        });
      }
    );
    function y(m) {
      const b = gr(n, (x) => {
        m && !x.atBottom && x.notAtBottomBecause === "SIZE_INCREASED" && !h && (Zt(c)("scrolling to bottom due to increased size", {}, On.DEBUG), g("auto"));
      });
      setTimeout(b, 100);
    }
    return rt(
      ge(
        Wt(je(d), t, l),
        Fe(([m, , b]) => m && b),
        ar(
          ({ value: m }, [, b]) => ({ refreshed: m === b, value: b }),
          { refreshed: !1, value: 0 }
        ),
        Fe(({ refreshed: m }) => m),
        He(d, t)
      ),
      ([, m]) => {
        Zt(s) && y(m !== !1);
      }
    ), rt(f, () => {
      y(Zt(d) !== !1);
    }), rt(Wt(je(d), n), ([m, b]) => {
      m && !b.atBottom && b.notAtBottomBecause === "VIEWPORT_HEIGHT_DECREASING" && g("auto");
    }), { autoscrollToBottom: f, followOutput: d };
  },
  yt(vr, vs, ys, bs, Jr, Qr, dn)
), KC = Je(
  ([{ data: e, firstItemIndex: t, gap: n, sizes: r }, { initialTopMostItemIndex: o }, { initialItemCount: s, listState: a }, { didMount: l }]) => (Ne(
    ge(
      l,
      He(s),
      Fe(([, c]) => c !== 0),
      He(o, r, t, n, e),
      Ce(([[, c], u, d, f, h, g = []]) => fy(c, u, d, f, h, g))
    ),
    a
  ), {}),
  yt(vr, bs, bo, Jr),
  { singleton: !0 }
), XC = Je(
  ([{ didMount: e }, { scrollTo: t }, { listState: n }]) => {
    const r = be(0);
    return rt(
      ge(
        e,
        He(r),
        Fe(([, o]) => o !== 0),
        Ce(([, o]) => ({ top: o }))
      ),
      (o) => {
        gr(
          ge(
            n,
            Zo(1),
            Fe((s) => s.items.length > 1)
          ),
          () => {
            requestAnimationFrame(() => {
              We(t, o);
            });
          }
        );
      }
    ), {
      initialScrollTop: r
    };
  },
  yt(Jr, dn, bo),
  { singleton: !0 }
), QC = ({
  itemBottom: e,
  itemTop: t,
  locationParams: { align: n, behavior: r, ...o },
  viewportBottom: s,
  viewportTop: a
}) => t < a ? { ...o, align: n ?? "start", behavior: r } : e > s ? { ...o, align: n ?? "end", behavior: r } : null, JC = Je(
  ([
    { gap: e, sizes: t, totalCount: n },
    { fixedFooterHeight: r, fixedHeaderHeight: o, headerHeight: s, scrollingInProgress: a, scrollTop: l, viewportHeight: c },
    { scrollToIndex: u }
  ]) => {
    const d = qe();
    return Ne(
      ge(
        d,
        He(t, c, n, s, o, r, l),
        He(e),
        Ce(([[f, h, g, y, m, b, x, E], w]) => {
          const { align: S, behavior: v, calculateViewLocation: T = QC, done: R, ...k } = f, I = ly(f, h, y - 1), p = ss(I, h.offsetTree, w) + m + b, O = p + Kn(h.sizeTree, I)[1], $ = E + b, A = E + g - x, D = T({
            itemBottom: O,
            itemTop: p,
            locationParams: { align: S, behavior: v, ...k },
            viewportBottom: A,
            viewportTop: $
          });
          return D ? R && gr(
            ge(
              a,
              Fe((_) => !_),
              // skips the initial publish of false, and the cleanup call.
              // but if scrollingInProgress is true, we skip the initial publish.
              Zo(Zt(a) ? 1 : 2)
            ),
            R
          ) : R && R(), D;
        }),
        Fe((f) => f !== null)
      ),
      u
    ), {
      scrollIntoView: d
    };
  },
  yt(vr, dn, ys, bo, Qr),
  { singleton: !0 }
), my = Je(
  ([{ scrollVelocity: e }]) => {
    const t = be(!1), n = qe(), r = be(!1);
    return Ne(
      ge(
        e,
        He(r, t, n),
        Fe(([o, s]) => !!s),
        Ce(([o, s, a, l]) => {
          const { enter: c, exit: u } = s;
          if (a) {
            if (u(o, l))
              return !1;
          } else if (c(o, l))
            return !0;
          return a;
        }),
        ht()
      ),
      t
    ), rt(
      ge(Wt(t, e, n), He(r)),
      ([[o, s, a], l]) => {
        o && l && l.change && l.change(s, a);
      }
    ), { isSeeking: t, scrollSeekConfiguration: r, scrollSeekRangeChanged: n, scrollVelocity: e };
  },
  yt(vs),
  { singleton: !0 }
), kd = Je(([{ scrollContainerState: e, scrollTo: t }]) => {
  const n = qe(), r = qe(), o = qe(), s = be(!1), a = be(void 0);
  return Ne(
    ge(
      Wt(n, r),
      Ce(([{ scrollHeight: l, scrollTop: c, viewportHeight: u }, { offsetTop: d }]) => ({
        scrollHeight: l,
        scrollTop: Math.max(0, c - d),
        viewportHeight: u
      }))
    ),
    e
  ), Ne(
    ge(
      t,
      He(r),
      Ce(([l, { offsetTop: c }]) => ({
        ...l,
        top: l.top + c
      }))
    ),
    o
  ), {
    customScrollParent: a,
    // config
    useWindowScroll: s,
    // input
    windowScrollContainerState: n,
    // signals
    windowScrollTo: o,
    windowViewportRect: r
  };
}, yt(dn)), ZC = Je(
  ([
    { sizeRanges: e, sizes: t },
    { headerHeight: n, scrollTop: r },
    { initialTopMostItemIndex: o },
    { didMount: s },
    { useWindowScroll: a, windowScrollContainerState: l, windowViewportRect: c }
  ]) => {
    const u = qe(), d = be(void 0), f = be(null), h = be(null);
    return Ne(l, f), Ne(c, h), rt(
      ge(
        u,
        He(t, r, a, f, h, n)
      ),
      ([g, y, m, b, x, E, w]) => {
        const S = _C(y.sizeTree);
        b && x !== null && E !== null && (m = x.scrollTop - E.offsetTop), m -= w, g({ ranges: S, scrollTop: m });
      }
    ), Ne(ge(d, Fe(xd), Ce(eO)), o), Ne(
      ge(
        s,
        He(d),
        Fe(([, g]) => g !== void 0),
        ht(),
        Ce(([, g]) => g.ranges)
      ),
      e
    ), {
      getState: u,
      restoreStateFrom: d
    };
  },
  yt(vr, dn, bs, Jr, kd)
);
function eO(e) {
  return { align: "start", index: 0, offset: e.scrollTop };
}
const tO = Je(([{ topItemsIndexes: e }]) => {
  const t = be(0);
  return Ne(
    ge(
      t,
      Fe((n) => n >= 0),
      Ce((n) => Array.from({ length: n }).map((r, o) => o))
    ),
    e
  ), { topItemCount: t };
}, yt(bo));
function hy(e) {
  let t = !1, n;
  return () => (t || (t = !0, n = e()), n);
}
const nO = hy(() => /iP(ad|od|hone)/i.test(navigator.userAgent) && /WebKit/i.test(navigator.userAgent)), rO = Je(
  ([
    { deviation: e, scrollBy: t, scrollingInProgress: n, scrollTop: r },
    { isAtBottom: o, isScrolling: s, lastJumpDueToItemResize: a, scrollDirection: l },
    { listState: c },
    { beforeUnshiftWith: u, gap: d, shiftWithOffset: f, sizes: h },
    { log: g },
    { recalcInProgress: y }
  ]) => {
    const m = Cn(
      ge(
        c,
        He(a),
        ar(
          ([, x, E, w], [{ bottom: S, items: v, offsetBottom: T, totalCount: R }, k]) => {
            const I = S + T;
            let p = 0;
            return E === R && x.length > 0 && v.length > 0 && (v[0].originalIndex === 0 && x[0].originalIndex === 0 || (p = I - w, p !== 0 && (p += k))), [p, v, R, I];
          },
          [0, [], 0, 0]
        ),
        Fe(([x]) => x !== 0),
        He(r, l, n, o, g, y),
        Fe(([, x, E, w, , , S]) => !S && !w && x !== 0 && E === as),
        Ce(([[x], , , , , E]) => (E("Upward scrolling compensation", { amount: x }, On.DEBUG), x))
      )
    );
    function b(x) {
      x > 0 ? (We(t, { behavior: "auto", top: -x }), We(e, 0)) : (We(e, 0), We(t, { behavior: "auto", top: -x }));
    }
    return rt(ge(m, He(e, s)), ([x, E, w]) => {
      w && nO() ? We(e, E - x) : b(-x);
    }), rt(
      ge(
        Wt(en(s, !1), e, y),
        Fe(([x, E, w]) => !x && !w && E !== 0),
        Ce(([x, E]) => E),
        Lr(1)
      ),
      b
    ), Ne(
      ge(
        f,
        Ce((x) => ({ top: -x }))
      ),
      t
    ), rt(
      ge(
        u,
        He(h, d),
        Ce(([x, { groupIndices: E, lastSize: w, sizeTree: S }, v]) => {
          function T(R) {
            return R * (w + v);
          }
          if (E.length === 0)
            return T(x);
          {
            let R = 0;
            const k = os(S, 0);
            let I = 0, p = 0;
            for (; I < x; ) {
              I++, R += k;
              let O = E.length === p + 1 ? 1 / 0 : E[p + 1] - E[p] - 1;
              I + O > x && (R -= k, O = x - I + 1), I += O, R += T(O), p++;
            }
            return R;
          }
        })
      ),
      (x) => {
        We(e, x), requestAnimationFrame(() => {
          We(t, { top: x }), requestAnimationFrame(() => {
            We(e, 0), We(y, !1);
          });
        });
      }
    ), { deviation: e };
  },
  yt(dn, vs, bo, vr, Qr, Td)
), oO = Je(
  ([
    e,
    t,
    n,
    r,
    o,
    s,
    a,
    l,
    c,
    u
  ]) => ({
    ...e,
    ...t,
    ...n,
    ...r,
    ...o,
    ...s,
    ...a,
    ...l,
    ...c,
    ...u
  }),
  yt(
    Rd,
    KC,
    Jr,
    my,
    py,
    XC,
    qC,
    kd,
    JC,
    Qr
  )
), gy = Je(
  ([
    {
      data: e,
      defaultItemSize: t,
      firstItemIndex: n,
      fixedItemSize: r,
      gap: o,
      groupIndices: s,
      itemSize: a,
      sizeRanges: l,
      sizes: c,
      statefulTotalCount: u,
      totalCount: d,
      trackItemSizes: f
    },
    { initialItemFinalLocationReached: h, initialTopMostItemIndex: g, scrolledToInitialItem: y },
    m,
    b,
    x,
    { listState: E, topItemsIndexes: w, ...S },
    { scrollToIndex: v },
    T,
    { topItemCount: R },
    { groupCounts: k },
    I
  ]) => (Ne(S.rangeChanged, I.scrollSeekRangeChanged), Ne(
    ge(
      I.windowViewportRect,
      Ce((p) => p.visibleHeight)
    ),
    m.viewportHeight
  ), {
    data: e,
    defaultItemHeight: t,
    firstItemIndex: n,
    fixedItemHeight: r,
    gap: o,
    groupCounts: k,
    initialItemFinalLocationReached: h,
    initialTopMostItemIndex: g,
    scrolledToInitialItem: y,
    sizeRanges: l,
    topItemCount: R,
    topItemsIndexes: w,
    // input
    totalCount: d,
    ...x,
    groupIndices: s,
    itemSize: a,
    listState: E,
    scrollToIndex: v,
    // output
    statefulTotalCount: u,
    trackItemSizes: f,
    // exported from stateFlagsSystem
    ...S,
    // the bag of IO from featureGroup1System
    ...I,
    ...m,
    sizes: c,
    ...b
  }),
  yt(
    vr,
    bs,
    dn,
    ZC,
    GC,
    bo,
    ys,
    rO,
    tO,
    cy,
    oO
  )
);
function iO(e, t) {
  const n = {}, r = {};
  let o = 0;
  const s = e.length;
  for (; o < s; )
    r[e[o]] = 1, o += 1;
  for (const a in t)
    Object.hasOwn(r, a) || (n[a] = t[a]);
  return n;
}
const Ls = typeof document < "u" ? L.useLayoutEffect : L.useEffect;
function yy(e, t, n) {
  const r = Object.keys(t.required || {}), o = Object.keys(t.optional || {}), s = Object.keys(t.methods || {}), a = Object.keys(t.events || {}), l = L.createContext({});
  function c(b, x) {
    b.propsReady && We(b.propsReady, !1);
    for (const E of r) {
      const w = b[t.required[E]];
      We(w, x[E]);
    }
    for (const E of o)
      if (E in x) {
        const w = b[t.optional[E]];
        We(w, x[E]);
      }
    b.propsReady && We(b.propsReady, !0);
  }
  function u(b) {
    return s.reduce((x, E) => (x[E] = (w) => {
      const S = b[t.methods[E]];
      We(S, w);
    }, x), {});
  }
  function d(b) {
    return a.reduce((x, E) => (x[E] = xC(b[t.events[E]]), x), {});
  }
  const f = L.forwardRef((b, x) => {
    const { children: E, ...w } = b, [S] = L.useState(() => pl(SC(e), (R) => {
      c(R, w);
    })), [v] = L.useState(Op(d, S));
    Ls(() => {
      for (const R of a)
        R in w && rt(v[R], w[R]);
      return () => {
        Object.values(v).map(wd);
      };
    }, [w, v, S]), Ls(() => {
      c(S, w);
    }), L.useImperativeHandle(x, Cp(u(S)));
    const T = n;
    return /* @__PURE__ */ P(l.Provider, { value: S, children: n ? /* @__PURE__ */ P(T, { ...iO([...r, ...o, ...a], w), children: E }) : E });
  }), h = (b) => L.useCallback(Qg(We, L.useContext(l)[b]), [b]), g = (b) => {
    const x = L.useContext(l)[b], E = L.useCallback(
      (w) => rt(x, w),
      [x]
    );
    return L.useSyncExternalStore(
      E,
      () => Zt(x),
      () => Zt(x)
    );
  }, y = (b) => {
    const x = L.useContext(l)[b], [E, w] = L.useState(Op(Zt, x));
    return Ls(
      () => rt(x, (S) => {
        S !== E && w(Cp(S));
      }),
      [x, E]
    ), E;
  }, m = L.version.startsWith("18") ? g : y;
  return {
    Component: f,
    useEmitter: (b, x) => {
      const E = L.useContext(l)[b];
      Ls(() => rt(E, x), [x, E]);
    },
    useEmitterValue: m,
    usePublisher: h
  };
}
const by = L.createContext(void 0), vy = L.createContext(void 0), xy = typeof document < "u" ? L.useLayoutEffect : L.useEffect;
function cc(e) {
  return "self" in e;
}
function sO(e) {
  return "body" in e;
}
function wy(e, t, n, r = fi, o, s) {
  const a = L.useRef(null), l = L.useRef(null), c = L.useRef(null), u = L.useCallback(
    (h) => {
      let g, y, m;
      const b = h.target;
      if (sO(b) || cc(b)) {
        const E = cc(b) ? b : b.defaultView;
        m = s ? E.scrollX : E.scrollY, g = s ? E.document.documentElement.scrollWidth : E.document.documentElement.scrollHeight, y = s ? E.innerWidth : E.innerHeight;
      } else
        m = s ? b.scrollLeft : b.scrollTop, g = s ? b.scrollWidth : b.scrollHeight, y = s ? b.offsetWidth : b.offsetHeight;
      const x = () => {
        e({
          scrollHeight: g,
          scrollTop: Math.max(m, 0),
          viewportHeight: y
        });
      };
      h.suppressFlushSync ? x() : Mo.flushSync(x), l.current !== null && (m === l.current || m <= 0 || m === g - y) && (l.current = null, t(!0), c.current && (clearTimeout(c.current), c.current = null));
    },
    [e, t]
  );
  L.useEffect(() => {
    const h = o || a.current;
    return r(o || a.current), u({ suppressFlushSync: !0, target: h }), h.addEventListener("scroll", u, { passive: !0 }), () => {
      r(null), h.removeEventListener("scroll", u);
    };
  }, [a, u, n, r, o]);
  function d(h) {
    const g = a.current;
    if (!g || (s ? "offsetWidth" in g && g.offsetWidth === 0 : "offsetHeight" in g && g.offsetHeight === 0))
      return;
    const y = h.behavior === "smooth";
    let m, b, x;
    cc(g) ? (b = Math.max(
      Wr(g.document.documentElement, s ? "width" : "height"),
      s ? g.document.documentElement.scrollWidth : g.document.documentElement.scrollHeight
    ), m = s ? g.innerWidth : g.innerHeight, x = s ? window.scrollX : window.scrollY) : (b = g[s ? "scrollWidth" : "scrollHeight"], m = Wr(g, s ? "width" : "height"), x = g[s ? "scrollLeft" : "scrollTop"]);
    const E = b - m;
    if (h.top = Math.ceil(Math.max(Math.min(E, h.top), 0)), dy(m, b) || h.top === x) {
      e({ scrollHeight: b, scrollTop: x, viewportHeight: m }), y && t(!0);
      return;
    }
    y ? (l.current = h.top, c.current && clearTimeout(c.current), c.current = setTimeout(() => {
      c.current = null, l.current = null, t(!0);
    }, 1e3)) : l.current = null, s && (h = { behavior: h.behavior, left: h.top }), g.scrollTo(h);
  }
  function f(h) {
    s && (h = { behavior: h.behavior, left: h.top }), a.current.scrollBy(h);
  }
  return { scrollByCallback: f, scrollerRef: a, scrollToCallback: d };
}
const uc = "-webkit-sticky", Bp = "sticky", Sy = hy(() => {
  if (typeof document > "u")
    return Bp;
  const e = document.createElement("div");
  return e.style.position = uc, e.style.position === uc ? uc : Bp;
});
function $d(e) {
  return e;
}
const aO = /* @__PURE__ */ Je(() => {
  const e = be((c) => `Item ${c}`), t = be(null), n = be((c) => `Group ${c}`), r = be({}), o = be($d), s = be("div"), a = be(fi), l = (c, u = null) => en(
    ge(
      r,
      Ce((d) => d[c]),
      ht()
    ),
    u
  );
  return {
    components: r,
    computeItemKey: o,
    context: t,
    EmptyPlaceholder: l("EmptyPlaceholder"),
    FooterComponent: l("Footer"),
    GroupComponent: l("Group", "div"),
    groupContent: n,
    HeaderComponent: l("Header"),
    HeaderFooterTag: s,
    ItemComponent: l("Item", "div"),
    itemContent: e,
    ListComponent: l("List", "div"),
    ScrollerComponent: l("Scroller", "div"),
    scrollerRef: a,
    ScrollSeekPlaceholder: l("ScrollSeekPlaceholder"),
    TopItemListComponent: l("TopItemList")
  };
}), lO = /* @__PURE__ */ Je(
  ([e, t]) => ({ ...e, ...t }),
  yt(gy, aO)
), cO = ({ height: e }) => /* @__PURE__ */ P("div", { style: { height: e } }), uO = { overflowAnchor: "none", position: Sy(), zIndex: 1 }, Ty = { overflowAnchor: "none" }, dO = { ...Ty, display: "inline-block", height: "100%" }, Fp = /* @__PURE__ */ L.memo(function({ showTopList: e = !1 }) {
  const t = Ve("listState"), n = Mn("sizeRanges"), r = Ve("useWindowScroll"), o = Ve("customScrollParent"), s = Mn("windowScrollContainerState"), a = Mn("scrollContainerState"), l = o || r ? s : a, c = Ve("itemContent"), u = Ve("context"), d = Ve("groupContent"), f = Ve("trackItemSizes"), h = Ve("itemSize"), g = Ve("log"), y = Mn("gap"), m = Ve("horizontalDirection"), { callbackRef: b } = CC(
    n,
    h,
    f,
    e ? fi : l,
    g,
    y,
    o,
    m,
    Ve("skipAnimationFrameInResizeObserver")
  ), [x, E] = L.useState(0);
  Pd("deviation", (D) => {
    x !== D && E(D);
  });
  const w = Ve("EmptyPlaceholder"), S = Ve("ScrollSeekPlaceholder") || cO, v = Ve("ListComponent"), T = Ve("ItemComponent"), R = Ve("GroupComponent"), k = Ve("computeItemKey"), I = Ve("isSeeking"), p = Ve("groupIndices").length > 0, O = Ve("alignToBottom"), $ = Ve("initialItemFinalLocationReached"), A = e ? {} : {
    boxSizing: "border-box",
    ...m ? {
      display: "inline-block",
      height: "100%",
      marginLeft: x !== 0 ? x : O ? "auto" : 0,
      paddingLeft: t.offsetTop,
      paddingRight: t.offsetBottom,
      whiteSpace: "nowrap"
    } : {
      marginTop: x !== 0 ? x : O ? "auto" : 0,
      paddingBottom: t.offsetBottom,
      paddingTop: t.offsetTop
    },
    ...$ ? {} : { visibility: "hidden" }
  };
  return !e && t.totalCount === 0 && w ? /* @__PURE__ */ P(w, { ...Gt(w, u) }) : /* @__PURE__ */ P(
    v,
    {
      ...Gt(v, u),
      "data-testid": e ? "virtuoso-top-item-list" : "virtuoso-item-list",
      ref: b,
      style: A,
      children: (e ? t.topItems : t.items).map((D) => {
        const _ = D.originalIndex, M = k(_ + t.firstItemIndex, D.data, u);
        return I ? /* @__PURE__ */ co(
          S,
          {
            ...Gt(S, u),
            height: D.size,
            index: D.index,
            key: M,
            type: D.type || "item",
            ...D.type === "group" ? {} : { groupIndex: D.groupIndex }
          }
        ) : D.type === "group" ? /* @__PURE__ */ co(
          R,
          {
            ...Gt(R, u),
            "data-index": _,
            "data-item-index": D.index,
            "data-known-size": D.size,
            key: M,
            style: uO
          },
          d(D.index, u)
        ) : /* @__PURE__ */ co(
          T,
          {
            ...Gt(T, u),
            ...hO(T, D.data),
            "data-index": _,
            "data-item-group-index": D.groupIndex,
            "data-item-index": D.index,
            "data-known-size": D.size,
            key: M,
            style: m ? dO : Ty
          },
          p ? c(D.index, D.groupIndex, D.data, u) : c(D.index, D.data, u)
        );
      })
    }
  );
}), fO = {
  height: "100%",
  outline: "none",
  overflowY: "auto",
  position: "relative",
  WebkitOverflowScrolling: "touch"
}, pO = {
  outline: "none",
  overflowX: "auto",
  position: "relative"
}, gl = (e) => ({
  height: "100%",
  position: "absolute",
  top: 0,
  width: "100%",
  ...e ? { display: "flex", flexDirection: "column" } : {}
}), mO = {
  position: Sy(),
  top: 0,
  width: "100%",
  zIndex: 1
};
function Gt(e, t) {
  if (typeof e != "string")
    return { context: t };
}
function hO(e, t) {
  return { item: typeof e == "string" ? void 0 : t };
}
const gO = /* @__PURE__ */ L.memo(function() {
  const e = Ve("HeaderComponent"), t = Mn("headerHeight"), n = Ve("HeaderFooterTag"), r = yo(
    L.useMemo(
      () => (s) => {
        t(Wr(s, "height"));
      },
      [t]
    ),
    !0,
    Ve("skipAnimationFrameInResizeObserver")
  ), o = Ve("context");
  return e ? /* @__PURE__ */ P(n, { ref: r, children: /* @__PURE__ */ P(e, { ...Gt(e, o) }) }) : null;
}), yO = /* @__PURE__ */ L.memo(function() {
  const e = Ve("FooterComponent"), t = Mn("footerHeight"), n = Ve("HeaderFooterTag"), r = yo(
    L.useMemo(
      () => (s) => {
        t(Wr(s, "height"));
      },
      [t]
    ),
    !0,
    Ve("skipAnimationFrameInResizeObserver")
  ), o = Ve("context");
  return e ? /* @__PURE__ */ P(n, { ref: r, children: /* @__PURE__ */ P(e, { ...Gt(e, o) }) }) : null;
});
function Ey({ useEmitter: e, useEmitterValue: t, usePublisher: n }) {
  return L.memo(function({ children: r, style: o, ...s }) {
    const a = n("scrollContainerState"), l = t("ScrollerComponent"), c = n("smoothScrollTargetReached"), u = t("scrollerRef"), d = t("context"), f = t("horizontalDirection") || !1, { scrollByCallback: h, scrollerRef: g, scrollToCallback: y } = wy(
      a,
      c,
      l,
      u,
      void 0,
      f
    );
    return e("scrollTo", y), e("scrollBy", h), /* @__PURE__ */ P(
      l,
      {
        "data-testid": "virtuoso-scroller",
        "data-virtuoso-scroller": !0,
        ref: g,
        style: { ...f ? pO : fO, ...o },
        tabIndex: 0,
        ...s,
        ...Gt(l, d),
        children: r
      }
    );
  });
}
function Cy({ useEmitter: e, useEmitterValue: t, usePublisher: n }) {
  return L.memo(function({ children: r, style: o, ...s }) {
    const a = n("windowScrollContainerState"), l = t("ScrollerComponent"), c = n("smoothScrollTargetReached"), u = t("totalListHeight"), d = t("deviation"), f = t("customScrollParent"), h = t("context"), g = L.useRef(null), y = t("scrollerRef"), { scrollByCallback: m, scrollerRef: b, scrollToCallback: x } = wy(
      a,
      c,
      l,
      y,
      f
    );
    return xy(() => {
      var E;
      return b.current = f || ((E = g.current) == null ? void 0 : E.ownerDocument.defaultView), () => {
        b.current = null;
      };
    }, [b, f]), e("windowScrollTo", x), e("scrollBy", m), /* @__PURE__ */ P(
      l,
      {
        ref: g,
        "data-virtuoso-scroller": !0,
        style: { position: "relative", ...o, ...u !== 0 ? { height: u + d } : {} },
        ...s,
        ...Gt(l, h),
        children: r
      }
    );
  });
}
const bO = ({ children: e }) => {
  const t = L.useContext(by), n = Mn("viewportHeight"), r = Mn("fixedItemHeight"), o = Ve("alignToBottom"), s = Ve("horizontalDirection"), a = L.useMemo(
    () => Xg(n, (c) => Wr(c, s ? "width" : "height")),
    [n, s]
  ), l = yo(a, !0, Ve("skipAnimationFrameInResizeObserver"));
  return L.useEffect(() => {
    t && (n(t.viewportHeight), r(t.itemHeight));
  }, [t, n, r]), /* @__PURE__ */ P("div", { "data-viewport-type": "element", ref: l, style: gl(o), children: e });
}, vO = ({ children: e }) => {
  const t = L.useContext(by), n = Mn("windowViewportRect"), r = Mn("fixedItemHeight"), o = Ve("customScrollParent"), s = Zg(
    n,
    o,
    Ve("skipAnimationFrameInResizeObserver")
  ), a = Ve("alignToBottom");
  return L.useEffect(() => {
    t && (r(t.itemHeight), n({ offsetTop: 0, visibleHeight: t.viewportHeight, visibleWidth: 100 }));
  }, [t, n, r]), /* @__PURE__ */ P("div", { "data-viewport-type": "window", ref: s, style: gl(a), children: e });
}, xO = ({ children: e }) => {
  const t = Ve("TopItemListComponent") || "div", n = Ve("headerHeight"), r = { ...mO, marginTop: `${n}px` }, o = Ve("context");
  return /* @__PURE__ */ P(t, { style: r, ...Gt(t, o), children: e });
}, wO = /* @__PURE__ */ L.memo(function(e) {
  const t = Ve("useWindowScroll"), n = Ve("topItemsIndexes").length > 0, r = Ve("customScrollParent"), o = Ve("context"), s = r || t ? EO : TO, a = r || t ? vO : bO;
  return /* @__PURE__ */ $e(s, { ...e, ...Gt(s, o), children: [
    n && /* @__PURE__ */ P(xO, { children: /* @__PURE__ */ P(Fp, { showTopList: !0 }) }),
    /* @__PURE__ */ $e(a, { children: [
      /* @__PURE__ */ P(gO, {}),
      /* @__PURE__ */ P(Fp, {}),
      /* @__PURE__ */ P(yO, {})
    ] })
  ] });
}), {
  Component: SO,
  useEmitter: Pd,
  useEmitterValue: Ve,
  usePublisher: Mn
} = /* @__PURE__ */ yy(
  lO,
  {
    events: {
      atBottomStateChange: "atBottomStateChange",
      atTopStateChange: "atTopStateChange",
      endReached: "endReached",
      groupIndices: "groupIndices",
      isScrolling: "isScrolling",
      itemsRendered: "itemsRendered",
      rangeChanged: "rangeChanged",
      startReached: "startReached",
      totalListHeightChanged: "totalListHeightChanged"
    },
    methods: {
      autoscrollToBottom: "autoscrollToBottom",
      getState: "getState",
      scrollBy: "scrollBy",
      scrollIntoView: "scrollIntoView",
      scrollTo: "scrollTo",
      scrollToIndex: "scrollToIndex"
    },
    optional: {
      alignToBottom: "alignToBottom",
      atBottomThreshold: "atBottomThreshold",
      atTopThreshold: "atTopThreshold",
      components: "components",
      computeItemKey: "computeItemKey",
      context: "context",
      customScrollParent: "customScrollParent",
      data: "data",
      defaultItemHeight: "defaultItemHeight",
      firstItemIndex: "firstItemIndex",
      fixedItemHeight: "fixedItemHeight",
      followOutput: "followOutput",
      groupContent: "groupContent",
      groupCounts: "groupCounts",
      headerFooterTag: "HeaderFooterTag",
      horizontalDirection: "horizontalDirection",
      increaseViewportBy: "increaseViewportBy",
      initialItemCount: "initialItemCount",
      initialScrollTop: "initialScrollTop",
      initialTopMostItemIndex: "initialTopMostItemIndex",
      itemContent: "itemContent",
      itemSize: "itemSize",
      logLevel: "logLevel",
      overscan: "overscan",
      restoreStateFrom: "restoreStateFrom",
      scrollerRef: "scrollerRef",
      scrollSeekConfiguration: "scrollSeekConfiguration",
      skipAnimationFrameInResizeObserver: "skipAnimationFrameInResizeObserver",
      topItemCount: "topItemCount",
      totalCount: "totalCount",
      useWindowScroll: "useWindowScroll"
    },
    required: {}
  },
  wO
), TO = /* @__PURE__ */ Ey({ useEmitter: Pd, useEmitterValue: Ve, usePublisher: Mn }), EO = /* @__PURE__ */ Cy({ useEmitter: Pd, useEmitterValue: Ve, usePublisher: Mn }), CO = SO, OO = /* @__PURE__ */ Je(() => {
  const e = be((c) => /* @__PURE__ */ $e("td", { children: [
    "Item $",
    c
  ] })), t = be(null), n = be(null), r = be(null), o = be({}), s = be($d), a = be(fi), l = (c, u = null) => en(
    ge(
      o,
      Ce((d) => d[c]),
      ht()
    ),
    u
  );
  return {
    components: o,
    computeItemKey: s,
    context: t,
    EmptyPlaceholder: l("EmptyPlaceholder"),
    FillerRow: l("FillerRow"),
    fixedFooterContent: r,
    fixedHeaderContent: n,
    itemContent: e,
    ScrollerComponent: l("Scroller", "div"),
    scrollerRef: a,
    ScrollSeekPlaceholder: l("ScrollSeekPlaceholder"),
    TableBodyComponent: l("TableBody", "tbody"),
    TableComponent: l("Table", "table"),
    TableFooterComponent: l("TableFoot", "tfoot"),
    TableHeadComponent: l("TableHead", "thead"),
    TableRowComponent: l("TableRow", "tr")
  };
});
yt(gy, OO);
const jp = {
  bottom: 0,
  itemHeight: 0,
  items: [],
  itemWidth: 0,
  offsetBottom: 0,
  offsetTop: 0,
  top: 0
}, RO = {
  bottom: 0,
  itemHeight: 0,
  items: [{ index: 0 }],
  itemWidth: 0,
  offsetBottom: 0,
  offsetTop: 0,
  top: 0
}, { ceil: Lp, floor: Ca, max: Vi, min: dc, round: Vp } = Math;
function zp(e, t, n) {
  return Array.from({ length: t - e + 1 }).map((r, o) => ({ data: n === null ? null : n[o + e], index: o + e }));
}
function kO(e) {
  return {
    ...RO,
    items: e
  };
}
function Vs(e, t) {
  return e && e.width === t.width && e.height === t.height;
}
function $O(e, t) {
  return e && e.column === t.column && e.row === t.row;
}
const PO = /* @__PURE__ */ Je(
  ([
    { increaseViewportBy: e, listBoundary: t, overscan: n, visibleRange: r },
    { footerHeight: o, headerHeight: s, scrollBy: a, scrollContainerState: l, scrollTo: c, scrollTop: u, smoothScrollTargetReached: d, viewportHeight: f },
    h,
    g,
    { didMount: y, propsReady: m },
    { customScrollParent: b, useWindowScroll: x, windowScrollContainerState: E, windowScrollTo: w, windowViewportRect: S },
    v
  ]) => {
    const T = be(0), R = be(0), k = be(jp), I = be({ height: 0, width: 0 }), p = be({ height: 0, width: 0 }), O = qe(), $ = qe(), A = be(0), D = be(null), _ = be({ column: 0, row: 0 }), M = qe(), V = qe(), Y = be(!1), U = be(0), j = be(!0), W = be(!1), ee = be(!1);
    rt(
      ge(
        y,
        He(U),
        Fe(([X, ae]) => !!ae)
      ),
      () => {
        We(j, !1);
      }
    ), rt(
      ge(
        Wt(y, j, p, I, U, W),
        Fe(([X, ae, Q, ie, , F]) => X && !ae && Q.height !== 0 && ie.height !== 0 && !F)
      ),
      ([, , , , X]) => {
        We(W, !0), Cd(1, () => {
          We(O, X);
        }), gr(ge(u), () => {
          We(t, [0, 0]), We(j, !0);
        });
      }
    ), Ne(
      ge(
        V,
        Fe((X) => X != null && X.scrollTop > 0),
        or(0)
      ),
      R
    ), rt(
      ge(
        y,
        He(V),
        Fe(([, X]) => X != null)
      ),
      ([, X]) => {
        X && (We(I, X.viewport), We(p, X.item), We(_, X.gap), X.scrollTop > 0 && (We(Y, !0), gr(ge(u, Zo(1)), (ae) => {
          We(Y, !1);
        }), We(c, { top: X.scrollTop })));
      }
    ), Ne(
      ge(
        I,
        Ce(({ height: X }) => X)
      ),
      f
    ), Ne(
      ge(
        Wt(
          je(I, Vs),
          je(p, Vs),
          je(_, (X, ae) => X && X.column === ae.column && X.row === ae.row),
          je(u)
        ),
        Ce(([X, ae, Q, ie]) => ({
          gap: Q,
          item: ae,
          scrollTop: ie,
          viewport: X
        }))
      ),
      M
    ), Ne(
      ge(
        Wt(
          je(T),
          r,
          je(_, $O),
          je(p, Vs),
          je(I, Vs),
          je(D),
          je(R),
          je(Y),
          je(j),
          je(U)
        ),
        Fe(([, , , , , , , X]) => !X),
        Ce(
          ([
            X,
            [ae, Q],
            ie,
            F,
            he,
            fe,
            Te,
            ,
            Le,
            Ae
          ]) => {
            const { column: Ie, row: Re } = ie, { height: Be, width: Oe } = F, { width: N } = he;
            if (Te === 0 && (X === 0 || N === 0))
              return jp;
            if (Oe === 0) {
              const re = Od(Ae, X), Z = re + Math.max(Te - 1, 0);
              return kO(zp(re, Z, fe));
            }
            const q = Oy(N, Oe, Ie);
            let J, H;
            Le ? ae === 0 && Q === 0 && Te > 0 ? (J = 0, H = Te - 1) : (J = q * Ca((ae + Re) / (Be + Re)), H = q * Lp((Q + Re) / (Be + Re)) - 1, H = dc(X - 1, Vi(H, q - 1)), J = dc(H, Vi(0, J))) : (J = 0, H = -1);
            const B = zp(J, H, fe), { bottom: z, top: G } = Wp(he, ie, F, B), pe = Lp(X / q), me = pe * Be + (pe - 1) * Re - z;
            return { bottom: z, itemHeight: Be, items: B, itemWidth: Oe, offsetBottom: me, offsetTop: G, top: G };
          }
        )
      ),
      k
    ), Ne(
      ge(
        D,
        Fe((X) => X !== null),
        Ce((X) => X.length)
      ),
      T
    ), Ne(
      ge(
        Wt(I, p, k, _),
        Fe(([X, ae, { items: Q }]) => Q.length > 0 && ae.height !== 0 && X.height !== 0),
        Ce(([X, ae, { items: Q }, ie]) => {
          const { bottom: F, top: he } = Wp(X, ie, ae, Q);
          return [he, F];
        }),
        ht(is)
      ),
      t
    );
    const K = be(!1);
    Ne(
      ge(
        u,
        He(K),
        Ce(([X, ae]) => ae || X !== 0)
      ),
      K
    );
    const oe = Cn(
      ge(
        Wt(k, T),
        Fe(([{ items: X }]) => X.length > 0),
        He(K),
        Fe(([[X, ae], Q]) => {
          const ie = X.items[X.items.length - 1].index === ae - 1;
          return (Q || X.bottom > 0 && X.itemHeight > 0 && X.offsetBottom === 0 && X.items.length === ae) && ie;
        }),
        Ce(([[, X]]) => X - 1),
        ht()
      )
    ), ne = Cn(
      ge(
        je(k),
        Fe(({ items: X }) => X.length > 0 && X[0].index === 0),
        or(0),
        ht()
      )
    ), se = Cn(
      ge(
        je(k),
        He(Y),
        Fe(([{ items: X }, ae]) => X.length > 0 && !ae),
        Ce(([{ items: X }]) => ({
          endIndex: X[X.length - 1].index,
          startIndex: X[0].index
        })),
        ht(iy),
        Lr(0)
      )
    );
    Ne(se, g.scrollSeekRangeChanged), Ne(
      ge(
        O,
        He(I, p, T, _),
        Ce(([X, ae, Q, ie, F]) => {
          const he = uy(X), { align: fe, behavior: Te, offset: Le } = he;
          let Ae = he.index;
          Ae === "LAST" && (Ae = ie - 1), Ae = Vi(0, Ae, dc(ie - 1, Ae));
          let Ie = su(ae, F, Q, Ae);
          return fe === "end" ? Ie = Vp(Ie - ae.height + Q.height) : fe === "center" && (Ie = Vp(Ie - ae.height / 2 + Q.height / 2)), Le && (Ie += Le), { behavior: Te, top: Ie };
        })
      ),
      c
    );
    const de = en(
      ge(
        k,
        Ce((X) => X.offsetBottom + X.bottom)
      ),
      0
    );
    return Ne(
      ge(
        S,
        Ce((X) => ({ height: X.visibleHeight, width: X.visibleWidth }))
      ),
      I
    ), {
      customScrollParent: b,
      // input
      data: D,
      deviation: A,
      footerHeight: o,
      gap: _,
      headerHeight: s,
      increaseViewportBy: e,
      initialItemCount: R,
      itemDimensions: p,
      overscan: n,
      restoreStateFrom: V,
      scrollBy: a,
      scrollContainerState: l,
      scrollHeight: $,
      scrollTo: c,
      scrollToIndex: O,
      scrollTop: u,
      smoothScrollTargetReached: d,
      totalCount: T,
      useWindowScroll: x,
      viewportDimensions: I,
      windowScrollContainerState: E,
      windowScrollTo: w,
      windowViewportRect: S,
      ...g,
      // output
      gridState: k,
      horizontalDirection: ee,
      initialTopMostItemIndex: U,
      totalListHeight: de,
      ...h,
      endReached: oe,
      propsReady: m,
      rangeChanged: se,
      startReached: ne,
      stateChanged: M,
      stateRestoreInProgress: Y,
      ...v
    };
  },
  yt(Rd, dn, vs, my, Jr, kd, Qr)
);
function Oy(e, t, n) {
  return Vi(1, Ca((e + n) / (Ca(t) + n)));
}
function Wp(e, t, n, r) {
  const { height: o } = n;
  if (o === void 0 || r.length === 0)
    return { bottom: 0, top: 0 };
  const s = su(e, t, n, r[0].index);
  return { bottom: su(e, t, n, r[r.length - 1].index) + o, top: s };
}
function su(e, t, n, r) {
  const o = Oy(e.width, n.width, t.column), s = Ca(r / o), a = s * n.height + Vi(0, s - 1) * t.row;
  return a > 0 ? a + t.row : a;
}
const IO = /* @__PURE__ */ Je(() => {
  const e = be((f) => `Item ${f}`), t = be({}), n = be(null), r = be("virtuoso-grid-item"), o = be("virtuoso-grid-list"), s = be($d), a = be("div"), l = be(fi), c = (f, h = null) => en(
    ge(
      t,
      Ce((g) => g[f]),
      ht()
    ),
    h
  ), u = be(!1), d = be(!1);
  return Ne(je(d), u), {
    components: t,
    computeItemKey: s,
    context: n,
    FooterComponent: c("Footer"),
    HeaderComponent: c("Header"),
    headerFooterTag: a,
    itemClassName: r,
    ItemComponent: c("Item", "div"),
    itemContent: e,
    listClassName: o,
    ListComponent: c("List", "div"),
    readyStateChanged: u,
    reportReadyState: d,
    ScrollerComponent: c("Scroller", "div"),
    scrollerRef: l,
    ScrollSeekPlaceholder: c("ScrollSeekPlaceholder", "div")
  };
}), NO = /* @__PURE__ */ Je(
  ([e, t]) => ({ ...e, ...t }),
  yt(PO, IO)
), AO = /* @__PURE__ */ L.memo(function() {
  const e = xt("gridState"), t = xt("listClassName"), n = xt("itemClassName"), r = xt("itemContent"), o = xt("computeItemKey"), s = xt("isSeeking"), a = _n("scrollHeight"), l = xt("ItemComponent"), c = xt("ListComponent"), u = xt("ScrollSeekPlaceholder"), d = xt("context"), f = _n("itemDimensions"), h = _n("gap"), g = xt("log"), y = xt("stateRestoreInProgress"), m = _n("reportReadyState"), b = yo(
    L.useMemo(
      () => (x) => {
        const E = x.parentElement.parentElement.scrollHeight;
        a(E);
        const w = x.firstChild;
        if (w) {
          const { height: S, width: v } = w.getBoundingClientRect();
          f({ height: S, width: v });
        }
        h({
          column: Up("column-gap", getComputedStyle(x).columnGap, g),
          row: Up("row-gap", getComputedStyle(x).rowGap, g)
        });
      },
      [a, f, h, g]
    ),
    !0,
    !1
  );
  return xy(() => {
    e.itemHeight > 0 && e.itemWidth > 0 && m(!0);
  }, [e]), y ? null : /* @__PURE__ */ P(
    c,
    {
      className: t,
      ref: b,
      ...Gt(c, d),
      "data-testid": "virtuoso-item-list",
      style: { paddingBottom: e.offsetBottom, paddingTop: e.offsetTop },
      children: e.items.map((x) => {
        const E = o(x.index, x.data, d);
        return s ? /* @__PURE__ */ P(
          u,
          {
            ...Gt(u, d),
            height: e.itemHeight,
            index: x.index,
            width: e.itemWidth
          },
          E
        ) : /* @__PURE__ */ co(
          l,
          {
            ...Gt(l, d),
            className: n,
            "data-index": x.index,
            key: E
          },
          r(x.index, x.data, d)
        );
      })
    }
  );
}), MO = L.memo(function() {
  const e = xt("HeaderComponent"), t = _n("headerHeight"), n = xt("headerFooterTag"), r = yo(
    L.useMemo(
      () => (s) => {
        t(Wr(s, "height"));
      },
      [t]
    ),
    !0,
    !1
  ), o = xt("context");
  return e ? /* @__PURE__ */ P(n, { ref: r, children: /* @__PURE__ */ P(e, { ...Gt(e, o) }) }) : null;
}), _O = L.memo(function() {
  const e = xt("FooterComponent"), t = _n("footerHeight"), n = xt("headerFooterTag"), r = yo(
    L.useMemo(
      () => (s) => {
        t(Wr(s, "height"));
      },
      [t]
    ),
    !0,
    !1
  ), o = xt("context");
  return e ? /* @__PURE__ */ P(n, { ref: r, children: /* @__PURE__ */ P(e, { ...Gt(e, o) }) }) : null;
}), DO = ({ children: e }) => {
  const t = L.useContext(vy), n = _n("itemDimensions"), r = _n("viewportDimensions"), o = yo(
    L.useMemo(
      () => (s) => {
        r(s.getBoundingClientRect());
      },
      [r]
    ),
    !0,
    !1
  );
  return L.useEffect(() => {
    t && (r({ height: t.viewportHeight, width: t.viewportWidth }), n({ height: t.itemHeight, width: t.itemWidth }));
  }, [t, r, n]), /* @__PURE__ */ P("div", { ref: o, style: gl(!1), children: e });
}, BO = ({ children: e }) => {
  const t = L.useContext(vy), n = _n("windowViewportRect"), r = _n("itemDimensions"), o = xt("customScrollParent"), s = Zg(n, o, !1);
  return L.useEffect(() => {
    t && (r({ height: t.itemHeight, width: t.itemWidth }), n({ offsetTop: 0, visibleHeight: t.viewportHeight, visibleWidth: t.viewportWidth }));
  }, [t, n, r]), /* @__PURE__ */ P("div", { ref: s, style: gl(!1), children: e });
}, FO = /* @__PURE__ */ L.memo(function({ ...e }) {
  const t = xt("useWindowScroll"), n = xt("customScrollParent"), r = n || t ? VO : LO, o = n || t ? BO : DO, s = xt("context");
  return /* @__PURE__ */ P(r, { ...e, ...Gt(r, s), children: /* @__PURE__ */ $e(o, { children: [
    /* @__PURE__ */ P(MO, {}),
    /* @__PURE__ */ P(AO, {}),
    /* @__PURE__ */ P(_O, {})
  ] }) });
}), {
  Component: jO,
  useEmitter: Ry,
  useEmitterValue: xt,
  usePublisher: _n
} = /* @__PURE__ */ yy(
  NO,
  {
    events: {
      atBottomStateChange: "atBottomStateChange",
      atTopStateChange: "atTopStateChange",
      endReached: "endReached",
      isScrolling: "isScrolling",
      rangeChanged: "rangeChanged",
      readyStateChanged: "readyStateChanged",
      startReached: "startReached",
      stateChanged: "stateChanged"
    },
    methods: {
      scrollBy: "scrollBy",
      scrollTo: "scrollTo",
      scrollToIndex: "scrollToIndex"
    },
    optional: {
      components: "components",
      computeItemKey: "computeItemKey",
      context: "context",
      customScrollParent: "customScrollParent",
      data: "data",
      headerFooterTag: "headerFooterTag",
      increaseViewportBy: "increaseViewportBy",
      initialItemCount: "initialItemCount",
      initialTopMostItemIndex: "initialTopMostItemIndex",
      itemClassName: "itemClassName",
      itemContent: "itemContent",
      listClassName: "listClassName",
      logLevel: "logLevel",
      overscan: "overscan",
      restoreStateFrom: "restoreStateFrom",
      scrollerRef: "scrollerRef",
      scrollSeekConfiguration: "scrollSeekConfiguration",
      totalCount: "totalCount",
      useWindowScroll: "useWindowScroll"
    }
  },
  FO
), LO = /* @__PURE__ */ Ey({ useEmitter: Ry, useEmitterValue: xt, usePublisher: _n }), VO = /* @__PURE__ */ Cy({ useEmitter: Ry, useEmitterValue: xt, usePublisher: _n });
function Up(e, t, n) {
  return t !== "normal" && !(t != null && t.endsWith("px")) && n(`${e} was not resolved to pixel value correctly`, t, On.WARN), t === "normal" ? 0 : parseInt(t ?? "0", 10);
}
const zO = jO, Oa = _e(({ height: e, width: t, isVirtualized: n, items: r, renderItem: o, sx: s }) => n ? /* @__PURE__ */ P(
  Kt,
  {
    className: "VenomousUI-Menu",
    sx: { height: e || "100%", width: t || "100%", ...s },
    children: /* @__PURE__ */ P(
      CO,
      {
        style: { height: "100%", width: "100%" },
        totalCount: r == null ? void 0 : r.length,
        data: r,
        itemContent: (a, l) => o ? o(l, a) : l.label
      }
    )
  }
) : /* @__PURE__ */ P(
  Kt,
  {
    className: "VenomousUI-Menu",
    gap: 1,
    sx: {
      height: e || "100%",
      width: t || "100%",
      overflowY: "scroll",
      overflowX: "hidden",
      ...s,
      "& > .VenomousUI-MenuItem": {
        width: "100% !important"
      }
      // '& .VenomousUI-MenuItem': { mb: '4px' },
      // '& .VenomousUI-MenuItem:last-child': { mb: 0 },
    },
    children: r == null ? void 0 : r.map((a, l) => /* @__PURE__ */ P(jv, { children: o ? o(a, l) : a.label }, a.label))
  }
));
Oa.displayName = "Menu";
const zi = _e(
  ({
    icon: e = "",
    label: t,
    value: n,
    clickable: r,
    disabled: o,
    onClick: s,
    onMouseEnter: a,
    onMouseLeave: l,
    isActive: c,
    sx: u,
    ellipsis: d = !1
  }) => r ? /* @__PURE__ */ P(
    Gn,
    {
      className: "VenomousUI-MenuItem",
      value: n,
      isGhost: !0,
      text: /* @__PURE__ */ P(bn, { text: t, ellipsis: d, sx: { textAlign: "left" } }),
      icon: e,
      iconWidth: 28,
      iconPosition: "start",
      onClick: s,
      onMouseEnter: a,
      onMouseLeave: l,
      disabled: o,
      color: c ? "primary" : "auto",
      sx: {
        py: "8px",
        px: "16px",
        width: "100%",
        justifyContent: "flex-start",
        transition: "background-color 0.2s ease; color 0.2s ease",
        backgroundColor: c ? "divider" : "transparent",
        "&:hover": { backgroundColor: "divider" },
        ...u
      }
    }
  ) : /* @__PURE__ */ $e(Kt, { row: !0, py: "8px", px: "16px", sx: { width: "100%", ...u }, className: "VenomousUI-MenuItem", children: [
    /* @__PURE__ */ P(mr, { icon: e, width: 28, color: c ? "primary" : "auto" }),
    /* @__PURE__ */ P(
      bn,
      {
        text: t,
        ellipsis: d,
        flex: 1,
        textColor: c ? "primary" : "auto",
        sx: { cursor: "default" }
      }
    )
  ] })
);
zi.displayName = "MenuItem";
function WO({ currentPath: e }) {
  const t = tn(
    (r) => {
      let o = r.url;
      if (!o && r.subItems && r.subItems.length > 0) {
        const a = r.subItems.map((l) => l.url).filter(Boolean);
        o = UO(a);
      }
      return !!(o && (e == null ? void 0 : e.startsWith(o)) || r.subItems && r.subItems.some(
        (a) => a.url && (e == null ? void 0 : e.startsWith(a.url))
      ));
    },
    [e]
  ), n = tn(
    (r) => !!(r.url && (e != null && e.startsWith(r.url))),
    [e]
  );
  return {
    checkIsParentItemActive: t,
    checkIsSubItemActive: n
  };
}
function UO(e) {
  if (e.length === 0) return "";
  let t = e[0];
  for (let n = 1; n < e.length; n++)
    for (; e[n].indexOf(t) !== 0; )
      if (t = t.slice(0, -1), !t) return "";
  if (!t.endsWith("/")) {
    const n = t.lastIndexOf("/");
    t = t.slice(0, n + 1);
  }
  return t;
}
function au(e) {
  return typeof e == "string";
}
function HO(e) {
  const t = mn(e);
  return t.body === e ? pr(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function Wi(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function Hp(e) {
  return parseInt(pr(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function qO(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), r = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || r;
}
function qp(e, t, n, r, o) {
  const s = [t, n, ...r];
  [].forEach.call(e.children, (a) => {
    const l = !s.includes(a), c = !qO(a);
    l && c && Wi(a, o);
  });
}
function fc(e, t) {
  let n = -1;
  return e.some((r, o) => t(r) ? (n = o, !0) : !1), n;
}
function YO(e, t) {
  const n = [], r = e.container;
  if (!t.disableScrollLock) {
    if (HO(r)) {
      const a = Ow(pr(r));
      n.push({
        value: r.style.paddingRight,
        property: "padding-right",
        el: r
      }), r.style.paddingRight = `${Hp(r) + a}px`;
      const l = mn(r).querySelectorAll(".mui-fixed");
      [].forEach.call(l, (c) => {
        n.push({
          value: c.style.paddingRight,
          property: "padding-right",
          el: c
        }), c.style.paddingRight = `${Hp(c) + a}px`;
      });
    }
    let s;
    if (r.parentNode instanceof DocumentFragment)
      s = mn(r).body;
    else {
      const a = r.parentElement, l = pr(r);
      s = (a == null ? void 0 : a.nodeName) === "HTML" && l.getComputedStyle(a).overflowY === "scroll" ? a : r;
    }
    n.push({
      value: s.style.overflow,
      property: "overflow",
      el: s
    }, {
      value: s.style.overflowX,
      property: "overflow-x",
      el: s
    }, {
      value: s.style.overflowY,
      property: "overflow-y",
      el: s
    }), s.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: s,
      el: a,
      property: l
    }) => {
      s ? a.style.setProperty(l, s) : a.style.removeProperty(l);
    });
  };
}
function GO(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
let KO = class {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let r = this.modals.indexOf(t);
    if (r !== -1)
      return r;
    r = this.modals.length, this.modals.push(t), t.modalRef && Wi(t.modalRef, !1);
    const o = GO(n);
    qp(n, t.mount, t.modalRef, o, !0);
    const s = fc(this.containers, (a) => a.container === n);
    return s !== -1 ? (this.containers[s].modals.push(t), r) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: o
    }), r);
  }
  mount(t, n) {
    const r = fc(this.containers, (s) => s.modals.includes(t)), o = this.containers[r];
    o.restore || (o.restore = YO(o, n));
  }
  remove(t, n = !0) {
    const r = this.modals.indexOf(t);
    if (r === -1)
      return r;
    const o = fc(this.containers, (a) => a.modals.includes(t)), s = this.containers[o];
    if (s.modals.splice(s.modals.indexOf(t), 1), this.modals.splice(r, 1), s.modals.length === 0)
      s.restore && s.restore(), t.modalRef && Wi(t.modalRef, n), qp(s.container, t.mount, t.modalRef, s.hiddenSiblings, !1), this.containers.splice(o, 1);
    else {
      const a = s.modals[s.modals.length - 1];
      a.modalRef && Wi(a.modalRef, !1);
    }
    return r;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
};
const XO = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function QO(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function JO(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (r) => e.ownerDocument.querySelector(`input[type="radio"]${r}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function ZO(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || JO(e));
}
function eR(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(XO)).forEach((r, o) => {
    const s = QO(r);
    s === -1 || !ZO(r) || (s === 0 ? t.push(r) : n.push({
      documentOrder: o,
      tabIndex: s,
      node: r
    }));
  }), n.sort((r, o) => r.tabIndex === o.tabIndex ? r.documentOrder - o.documentOrder : r.tabIndex - o.tabIndex).map((r) => r.node).concat(t);
}
function tR() {
  return !0;
}
function Ra(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: r = !1,
    disableRestoreFocus: o = !1,
    getTabbable: s = eR,
    isEnabled: a = tR,
    open: l
  } = e, c = C.useRef(!1), u = C.useRef(null), d = C.useRef(null), f = C.useRef(null), h = C.useRef(null), g = C.useRef(!1), y = C.useRef(null), m = rn(go(t), y), b = C.useRef(null);
  C.useEffect(() => {
    !l || !y.current || (g.current = !n);
  }, [n, l]), C.useEffect(() => {
    if (!l || !y.current)
      return;
    const w = mn(y.current);
    return y.current.contains(w.activeElement) || (y.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), y.current.setAttribute("tabIndex", "-1")), g.current && y.current.focus()), () => {
      o || (f.current && f.current.focus && (c.current = !0, f.current.focus()), f.current = null);
    };
  }, [l]), C.useEffect(() => {
    if (!l || !y.current)
      return;
    const w = mn(y.current), S = (R) => {
      b.current = R, !(r || !a() || R.key !== "Tab") && w.activeElement === y.current && R.shiftKey && (c.current = !0, d.current && d.current.focus());
    }, v = () => {
      var I, p;
      const R = y.current;
      if (R === null)
        return;
      if (!w.hasFocus() || !a() || c.current) {
        c.current = !1;
        return;
      }
      if (R.contains(w.activeElement) || r && w.activeElement !== u.current && w.activeElement !== d.current)
        return;
      if (w.activeElement !== h.current)
        h.current = null;
      else if (h.current !== null)
        return;
      if (!g.current)
        return;
      let k = [];
      if ((w.activeElement === u.current || w.activeElement === d.current) && (k = s(y.current)), k.length > 0) {
        const O = !!((I = b.current) != null && I.shiftKey && ((p = b.current) == null ? void 0 : p.key) === "Tab"), $ = k[0], A = k[k.length - 1];
        typeof $ != "string" && typeof A != "string" && (O ? A.focus() : $.focus());
      } else
        R.focus();
    };
    w.addEventListener("focusin", v), w.addEventListener("keydown", S, !0);
    const T = setInterval(() => {
      w.activeElement && w.activeElement.tagName === "BODY" && v();
    }, 50);
    return () => {
      clearInterval(T), w.removeEventListener("focusin", v), w.removeEventListener("keydown", S, !0);
    };
  }, [n, r, o, a, l, s]);
  const x = (w) => {
    f.current === null && (f.current = w.relatedTarget), g.current = !0, h.current = w.target;
    const S = t.props.onFocus;
    S && S(w);
  }, E = (w) => {
    f.current === null && (f.current = w.relatedTarget), g.current = !0;
  };
  return /* @__PURE__ */ $e(C.Fragment, {
    children: [/* @__PURE__ */ P("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: u,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ C.cloneElement(t, {
      ref: m,
      onFocus: x
    }), /* @__PURE__ */ P("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: d,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (Ra.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: Gr,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: i.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: i.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: i.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: i.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: i.func,
  /**
   * If `true`, focus is locked.
   */
  open: i.bool.isRequired
});
process.env.NODE_ENV !== "production" && (Ra.propTypes = ms(Ra.propTypes));
function nR(e) {
  return gt("MuiBackdrop", e);
}
wt("MuiBackdrop", ["root", "invisible"]);
const rR = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return Ct({
    root: ["root", n && "invisible"]
  }, nR, t);
}, oR = Pe("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), Id = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = St({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: o,
    className: s,
    component: a = "div",
    invisible: l = !1,
    open: c,
    components: u = {},
    componentsProps: d = {},
    slotProps: f = {},
    slots: h = {},
    TransitionComponent: g,
    transitionDuration: y,
    ...m
  } = r, b = {
    ...r,
    component: a,
    invisible: l
  }, x = rR(b), E = {
    transition: g,
    root: u.Root,
    ...h
  }, w = {
    ...d,
    ...f
  }, S = {
    slots: E,
    slotProps: w
  }, [v, T] = at("root", {
    elementType: oR,
    externalForwardedProps: S,
    className: Ee(x.root, s),
    ownerState: b
  }), [R, k] = at("transition", {
    elementType: fo,
    externalForwardedProps: S,
    ownerState: b
  });
  return /* @__PURE__ */ P(R, {
    in: c,
    timeout: y,
    ...m,
    ...k,
    children: /* @__PURE__ */ P(v, {
      "aria-hidden": !0,
      ...T,
      classes: x,
      ref: n,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (Id.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    root: i.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: i.bool,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: i.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function iR(e) {
  return typeof e == "function" ? e() : e;
}
function sR(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const Yp = () => {
}, zs = new KO();
function aR(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: r = !1,
    closeAfterTransition: o = !1,
    onTransitionEnter: s,
    onTransitionExited: a,
    children: l,
    onClose: c,
    open: u,
    rootRef: d
  } = e, f = C.useRef({}), h = C.useRef(null), g = C.useRef(null), y = rn(g, d), [m, b] = C.useState(!u), x = sR(l);
  let E = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (E = !1);
  const w = () => mn(h.current), S = () => (f.current.modalRef = g.current, f.current.mount = h.current, f.current), v = () => {
    zs.mount(S(), {
      disableScrollLock: r
    }), g.current && (g.current.scrollTop = 0);
  }, T = ur(() => {
    const _ = iR(t) || w().body;
    zs.add(S(), _), g.current && v();
  }), R = () => zs.isTopModal(S()), k = ur((_) => {
    h.current = _, _ && (u && R() ? v() : g.current && Wi(g.current, E));
  }), I = C.useCallback(() => {
    zs.remove(S(), E);
  }, [E]);
  C.useEffect(() => () => {
    I();
  }, [I]), C.useEffect(() => {
    u ? T() : (!x || !o) && I();
  }, [u, I, x, o, T]);
  const p = (_) => (M) => {
    var V;
    (V = _.onKeyDown) == null || V.call(_, M), !(M.key !== "Escape" || M.which === 229 || // Wait until IME is settled.
    !R()) && (n || (M.stopPropagation(), c && c(M, "escapeKeyDown")));
  }, O = (_) => (M) => {
    var V;
    (V = _.onClick) == null || V.call(_, M), M.target === M.currentTarget && c && c(M, "backdropClick");
  };
  return {
    getRootProps: (_ = {}) => {
      const M = eg(e);
      delete M.onTransitionEnter, delete M.onTransitionExited;
      const V = {
        ...M,
        ..._
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...V,
        onKeyDown: p(V),
        ref: y
      };
    },
    getBackdropProps: (_ = {}) => {
      const M = _;
      return {
        "aria-hidden": !0,
        ...M,
        onClick: O(M),
        open: u
      };
    },
    getTransitionProps: () => {
      const _ = () => {
        b(!1), s && s();
      }, M = () => {
        b(!0), a && a(), o && I();
      };
      return {
        onEnter: Fc(_, (l == null ? void 0 : l.props.onEnter) ?? Yp),
        onExited: Fc(M, (l == null ? void 0 : l.props.onExited) ?? Yp)
      };
    },
    rootRef: y,
    portalRef: k,
    isTopModal: R,
    exited: m,
    hasTransition: x
  };
}
function lR(e) {
  return gt("MuiModal", e);
}
wt("MuiModal", ["root", "hidden", "backdrop"]);
const cR = (e) => {
  const {
    open: t,
    exited: n,
    classes: r
  } = e;
  return Ct({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, lR, r);
}, uR = Pe("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(Ke(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), dR = Pe(Id, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), yl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = St({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: o = dR,
    BackdropProps: s,
    classes: a,
    className: l,
    closeAfterTransition: c = !1,
    children: u,
    container: d,
    component: f,
    components: h = {},
    componentsProps: g = {},
    disableAutoFocus: y = !1,
    disableEnforceFocus: m = !1,
    disableEscapeKeyDown: b = !1,
    disablePortal: x = !1,
    disableRestoreFocus: E = !1,
    disableScrollLock: w = !1,
    hideBackdrop: S = !1,
    keepMounted: v = !1,
    onClose: T,
    onTransitionEnter: R,
    onTransitionExited: k,
    open: I,
    slotProps: p = {},
    slots: O = {},
    // eslint-disable-next-line react/prop-types
    theme: $,
    ...A
  } = r, D = {
    ...r,
    closeAfterTransition: c,
    disableAutoFocus: y,
    disableEnforceFocus: m,
    disableEscapeKeyDown: b,
    disablePortal: x,
    disableRestoreFocus: E,
    disableScrollLock: w,
    hideBackdrop: S,
    keepMounted: v
  }, {
    getRootProps: _,
    getBackdropProps: M,
    getTransitionProps: V,
    portalRef: Y,
    isTopModal: U,
    exited: j,
    hasTransition: W
  } = aR({
    ...D,
    rootRef: n
  }), ee = {
    ...D,
    exited: j
  }, K = cR(ee), oe = {};
  if (u.props.tabIndex === void 0 && (oe.tabIndex = "-1"), W) {
    const {
      onEnter: Q,
      onExited: ie
    } = V();
    oe.onEnter = Q, oe.onExited = ie;
  }
  const ne = {
    slots: {
      root: h.Root,
      backdrop: h.Backdrop,
      ...O
    },
    slotProps: {
      ...g,
      ...p
    }
  }, [se, de] = at("root", {
    ref: n,
    elementType: uR,
    externalForwardedProps: {
      ...ne,
      ...A,
      component: f
    },
    getSlotProps: _,
    ownerState: ee,
    className: Ee(l, K == null ? void 0 : K.root, !ee.open && ee.exited && (K == null ? void 0 : K.hidden))
  }), [X, ae] = at("backdrop", {
    ref: s == null ? void 0 : s.ref,
    elementType: o,
    externalForwardedProps: ne,
    shouldForwardComponentProp: !0,
    additionalProps: s,
    getSlotProps: (Q) => M({
      ...Q,
      onClick: (ie) => {
        Q != null && Q.onClick && Q.onClick(ie);
      }
    }),
    className: Ee(s == null ? void 0 : s.className, K == null ? void 0 : K.backdrop),
    ownerState: ee
  });
  return !v && !I && (!W || j) ? null : /* @__PURE__ */ P(Jo, {
    ref: Y,
    container: d,
    disablePortal: x,
    children: /* @__PURE__ */ $e(se, {
      ...de,
      children: [!S && o ? /* @__PURE__ */ P(X, {
        ...ae
      }) : null, /* @__PURE__ */ P(Ra, {
        disableEnforceFocus: m,
        disableAutoFocus: y,
        disableRestoreFocus: E,
        isEnabled: U,
        open: I,
        children: /* @__PURE__ */ C.cloneElement(u, oe)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (yl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: i.object,
  /**
   * A single child content element.
   */
  children: Gr.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: i.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Backdrop: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([kr, i.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: i.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: i.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: i.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: i.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: i.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: i.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: i.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
function fR(e) {
  return gt("MuiPopover", e);
}
wt("MuiPopover", ["root", "paper"]);
function Gp(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function Kp(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function Xp(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function Ni(e) {
  return typeof e == "function" ? e() : e;
}
const pR = (e) => {
  const {
    classes: t
  } = e;
  return Ct({
    root: ["root"],
    paper: ["paper"]
  }, fR, t);
}, mR = Pe(yl, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), hR = Pe(ci, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), ky = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = St({
    props: t,
    name: "MuiPopover"
  }), {
    action: o,
    anchorEl: s,
    anchorOrigin: a = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: l,
    anchorReference: c = "anchorEl",
    children: u,
    className: d,
    container: f,
    elevation: h = 8,
    marginThreshold: g = 16,
    open: y,
    PaperProps: m = {},
    // TODO: remove in v7
    slots: b = {},
    slotProps: x = {},
    transformOrigin: E = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: w,
    // TODO: remove in v7
    transitionDuration: S = "auto",
    TransitionProps: v = {},
    // TODO: remove in v7
    disableScrollLock: T = !1,
    ...R
  } = r, k = C.useRef(), I = {
    ...r,
    anchorOrigin: a,
    anchorReference: c,
    elevation: h,
    marginThreshold: g,
    transformOrigin: E,
    TransitionComponent: w,
    transitionDuration: S,
    TransitionProps: v
  }, p = pR(I), O = C.useCallback(() => {
    if (c === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (l || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), l;
    const Q = Ni(s), ie = Q && Q.nodeType === 1 ? Q : mn(k.current).body, F = ie.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const he = ie.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && he.top === 0 && he.left === 0 && he.right === 0 && he.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: F.top + Gp(F, a.vertical),
      left: F.left + Kp(F, a.horizontal)
    };
  }, [s, a.horizontal, a.vertical, l, c]), $ = C.useCallback((Q) => ({
    vertical: Gp(Q, E.vertical),
    horizontal: Kp(Q, E.horizontal)
  }), [E.horizontal, E.vertical]), A = C.useCallback((Q) => {
    const ie = {
      width: Q.offsetWidth,
      height: Q.offsetHeight
    }, F = $(ie);
    if (c === "none")
      return {
        top: null,
        left: null,
        transformOrigin: Xp(F)
      };
    const he = O();
    let fe = he.top - F.vertical, Te = he.left - F.horizontal;
    const Le = fe + ie.height, Ae = Te + ie.width, Ie = pr(Ni(s)), Re = Ie.innerHeight - g, Be = Ie.innerWidth - g;
    if (g !== null && fe < g) {
      const Oe = fe - g;
      fe -= Oe, F.vertical += Oe;
    } else if (g !== null && Le > Re) {
      const Oe = Le - Re;
      fe -= Oe, F.vertical += Oe;
    }
    if (process.env.NODE_ENV !== "production" && ie.height > Re && ie.height && Re && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${ie.height - Re}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), g !== null && Te < g) {
      const Oe = Te - g;
      Te -= Oe, F.horizontal += Oe;
    } else if (Ae > Be) {
      const Oe = Ae - Be;
      Te -= Oe, F.horizontal += Oe;
    }
    return {
      top: `${Math.round(fe)}px`,
      left: `${Math.round(Te)}px`,
      transformOrigin: Xp(F)
    };
  }, [s, c, O, $, g]), [D, _] = C.useState(y), M = C.useCallback(() => {
    const Q = k.current;
    if (!Q)
      return;
    const ie = A(Q);
    ie.top !== null && Q.style.setProperty("top", ie.top), ie.left !== null && (Q.style.left = ie.left), Q.style.transformOrigin = ie.transformOrigin, _(!0);
  }, [A]);
  C.useEffect(() => (T && window.addEventListener("scroll", M), () => window.removeEventListener("scroll", M)), [s, T, M]);
  const V = () => {
    M();
  }, Y = () => {
    _(!1);
  };
  C.useEffect(() => {
    y && M();
  }), C.useImperativeHandle(o, () => y ? {
    updatePosition: () => {
      M();
    }
  } : null, [y, M]), C.useEffect(() => {
    if (!y)
      return;
    const Q = Uu(() => {
      M();
    }), ie = pr(Ni(s));
    return ie.addEventListener("resize", Q), () => {
      Q.clear(), ie.removeEventListener("resize", Q);
    };
  }, [s, y, M]);
  let U = S;
  const j = {
    slots: {
      transition: w,
      ...b
    },
    slotProps: {
      transition: v,
      paper: m,
      ...x
    }
  }, [W, ee] = at("transition", {
    elementType: es,
    externalForwardedProps: j,
    ownerState: I,
    getSlotProps: (Q) => ({
      ...Q,
      onEntering: (ie, F) => {
        var he;
        (he = Q.onEntering) == null || he.call(Q, ie, F), V();
      },
      onExited: (ie) => {
        var F;
        (F = Q.onExited) == null || F.call(Q, ie), Y();
      }
    }),
    additionalProps: {
      appear: !0,
      in: y
    }
  });
  S === "auto" && !W.muiSupportAuto && (U = void 0);
  const K = f || (s ? mn(Ni(s)).body : void 0), [oe, {
    slots: ne,
    slotProps: se,
    ...de
  }] = at("root", {
    ref: n,
    elementType: mR,
    externalForwardedProps: {
      ...j,
      ...R
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: b.backdrop
      },
      slotProps: {
        backdrop: gd(typeof x.backdrop == "function" ? x.backdrop(I) : x.backdrop, {
          invisible: !0
        })
      },
      container: K,
      open: y
    },
    ownerState: I,
    className: Ee(p.root, d)
  }), [X, ae] = at("paper", {
    ref: k,
    className: p.paper,
    elementType: hR,
    externalForwardedProps: j,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: h,
      style: D ? void 0 : {
        opacity: 0
      }
    },
    ownerState: I
  });
  return /* @__PURE__ */ P(oe, {
    ...de,
    ...!au(oe) && {
      slots: ne,
      slotProps: se,
      disableScrollLock: T
    },
    children: /* @__PURE__ */ P(W, {
      ...ee,
      timeout: U,
      children: /* @__PURE__ */ P(X, {
        ...ae,
        children: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (ky.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: Ar,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: Yr(i.oneOfType([kr, i.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = Ni(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: i.shape({
    horizontal: i.oneOfType([i.oneOf(["center", "left", "right"]), i.number]).isRequired,
    vertical: i.oneOfType([i.oneOf(["bottom", "center", "top"]), i.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: i.shape({
    left: i.number.isRequired,
    top: i.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: i.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: i.object,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([kr, i.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: i.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: qu,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: i.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: i.shape({
    component: Wu
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: i.shape({
    horizontal: i.oneOfType([i.oneOf(["center", "left", "right"]), i.number]).isRequired,
    vertical: i.oneOfType([i.oneOf(["bottom", "center", "top"]), i.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: i.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: i.object
});
function gR() {
  const [e, t] = Cr(null), n = !!e, r = tn((s) => {
    const a = s.currentTarget;
    t(a);
  }, []), o = tn(() => {
    var s;
    (s = window.getSelection()) != null && s.toString() || t(null);
  }, []);
  return {
    anchorEl: e,
    isOpen: n,
    openPopover: r,
    closePopover: o
  };
}
const $y = _e(({ children: e, renderPopoverHandler: t, sx: n }) => {
  const { paperCommonStyles: r } = ui(), { anchorEl: o, isOpen: s, openPopover: a, closePopover: l } = gR();
  return /* @__PURE__ */ $e(ch, { children: [
    t({ anchorEl: o, isOpen: s, openPopover: a, closePopover: l }),
    /* @__PURE__ */ P(
      ky,
      {
        open: s,
        anchorEl: o,
        onClose: l,
        anchorOrigin: { vertical: "bottom", horizontal: "center" },
        transformOrigin: { vertical: "top", horizontal: "center" },
        slotProps: {
          paper: {
            elevation: 3,
            square: !0,
            sx: {
              ...r,
              border: 1,
              borderColor: "divider",
              ...n
            }
          }
        },
        children: /* @__PURE__ */ P(fo, { in: s, children: /* @__PURE__ */ P("div", { children: e }) })
      }
    )
  ] });
});
$y.displayName = "Popover";
const yR = _e(
  ({ icon: e = "solar:menu-dots-line-duotone", menuItems: t }) => /* @__PURE__ */ P(
    $y,
    {
      renderPopoverHandler: ({ isOpen: n, openPopover: r }) => /* @__PURE__ */ P(
        Gn,
        {
          isCircle: !0,
          isGhost: !0,
          color: "auto",
          icon: e,
          iconWidth: 20,
          disabled: n,
          onClick: r
        }
      ),
      children: /* @__PURE__ */ P(Oa, { items: t, renderItem: (n) => /* @__PURE__ */ P(zi, { ...n, clickable: !0 }) })
    }
  )
);
yR.displayName = "ExhibitCardActionButton";
const Py = Jw({
  createStyledComponent: Pe("div", {
    name: "MuiContainer",
    slot: "Root",
    overridesResolver: (e, t) => {
      const {
        ownerState: n
      } = e;
      return [t.root, t[`maxWidth${xe(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
    }
  }),
  useThemeProps: (e) => St({
    props: e,
    name: "MuiContainer"
  })
});
process.env.NODE_ENV !== "production" && (Py.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: i.bool,
  /**
   * Set the max-width to match the min-width of the current breakpoint.
   * This is useful if you'd prefer to design for a fixed set of sizes
   * instead of trying to accommodate a fully fluid viewport.
   * It's fluid by default.
   * @default false
   */
  fixed: i.bool,
  /**
   * Determine the max-width of the container.
   * The container width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'lg'
   */
  maxWidth: i.oneOfType([i.oneOf(["xs", "sm", "md", "lg", "xl", !1]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
const bR = _e(({ children: e, maxWidth: t = "lg", ...n }) => /* @__PURE__ */ P(
  Py,
  {
    className: "VenomousUI-Container",
    disableGutters: !0,
    maxWidth: t === "fullwidth" ? !1 : t,
    ...n,
    children: e
  }
));
bR.displayName = "Container";
function vR(e, t, n) {
  const r = t.getBoundingClientRect(), o = n && n.getBoundingClientRect(), s = pr(t);
  let a;
  if (t.fakeTransform)
    a = t.fakeTransform;
  else {
    const u = s.getComputedStyle(t);
    a = u.getPropertyValue("-webkit-transform") || u.getPropertyValue("transform");
  }
  let l = 0, c = 0;
  if (a && a !== "none" && typeof a == "string") {
    const u = a.split("(")[1].split(")")[0].split(",");
    l = parseInt(u[4], 10), c = parseInt(u[5], 10);
  }
  return e === "left" ? o ? `translateX(${o.right + l - r.left}px)` : `translateX(${s.innerWidth + l - r.left}px)` : e === "right" ? o ? `translateX(-${r.right - o.left - l}px)` : `translateX(-${r.left + r.width - l}px)` : e === "up" ? o ? `translateY(${o.bottom + c - r.top}px)` : `translateY(${s.innerHeight + c - r.top}px)` : o ? `translateY(-${r.top - o.top + r.height - c}px)` : `translateY(-${r.top + r.height - c}px)`;
}
function Iy(e) {
  return typeof e == "function" ? e() : e;
}
function Ws(e, t, n) {
  const r = Iy(n), o = vR(e, t, r);
  o && (t.style.webkitTransform = o, t.style.transform = o);
}
const Ny = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Mr(), o = {
    enter: r.transitions.easing.easeOut,
    exit: r.transitions.easing.sharp
  }, s = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: a,
    appear: l = !0,
    children: c,
    container: u,
    direction: d = "down",
    easing: f = o,
    in: h,
    onEnter: g,
    onEntered: y,
    onEntering: m,
    onExit: b,
    onExited: x,
    onExiting: E,
    style: w,
    timeout: S = s,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: v = kn,
    ...T
  } = t, R = C.useRef(null), k = rn(go(c), R, n), I = (Y) => (U) => {
    Y && (U === void 0 ? Y(R.current) : Y(R.current, U));
  }, p = I((Y, U) => {
    Ws(d, Y, u), ad(Y), g && g(Y, U);
  }), O = I((Y, U) => {
    const j = Yo({
      timeout: S,
      style: w,
      easing: f
    }, {
      mode: "enter"
    });
    Y.style.webkitTransition = r.transitions.create("-webkit-transform", {
      ...j
    }), Y.style.transition = r.transitions.create("transform", {
      ...j
    }), Y.style.webkitTransform = "none", Y.style.transform = "none", m && m(Y, U);
  }), $ = I(y), A = I(E), D = I((Y) => {
    const U = Yo({
      timeout: S,
      style: w,
      easing: f
    }, {
      mode: "exit"
    });
    Y.style.webkitTransition = r.transitions.create("-webkit-transform", U), Y.style.transition = r.transitions.create("transform", U), Ws(d, Y, u), b && b(Y);
  }), _ = I((Y) => {
    Y.style.webkitTransition = "", Y.style.transition = "", x && x(Y);
  }), M = (Y) => {
    a && a(R.current, Y);
  }, V = C.useCallback(() => {
    R.current && Ws(d, R.current, u);
  }, [d, u]);
  return C.useEffect(() => {
    if (h || d === "down" || d === "right")
      return;
    const Y = Uu(() => {
      R.current && Ws(d, R.current, u);
    }), U = pr(R.current);
    return U.addEventListener("resize", Y), () => {
      Y.clear(), U.removeEventListener("resize", Y);
    };
  }, [d, h, u]), C.useEffect(() => {
    h || V();
  }, [h, V]), /* @__PURE__ */ P(v, {
    nodeRef: R,
    onEnter: p,
    onEntered: $,
    onEntering: O,
    onExit: D,
    onExited: _,
    onExiting: A,
    addEndListener: M,
    appear: l,
    in: h,
    timeout: S,
    ...T,
    children: (Y, {
      ownerState: U,
      ...j
    }) => /* @__PURE__ */ C.cloneElement(c, {
      ref: k,
      style: {
        visibility: Y === "exited" && !h ? "hidden" : void 0,
        ...w,
        ...c.props.style
      },
      ...j
    })
  });
});
process.env.NODE_ENV !== "production" && (Ny.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: Gr.isRequired,
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the container the Slide is transitioning from.
   */
  container: Yr(i.oneOfType([kr, i.func]), (e) => {
    if (e.open) {
      const t = Iy(e.container);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `container` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `container` prop provided to the component is invalid.", "It should be an HTML element instance."].join(`
`));
    }
    return null;
  }),
  /**
   * Direction the child node will enter from.
   * @default 'down'
   */
  direction: i.oneOf(["down", "left", "right", "up"]),
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   * @default {
   *   enter: theme.transitions.easing.easeOut,
   *   exit: theme.transitions.easing.sharp,
   * }
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function xR(e) {
  return gt("MuiDrawer", e);
}
wt("MuiDrawer", ["root", "docked", "paper", "anchorLeft", "anchorRight", "anchorTop", "anchorBottom", "paperAnchorLeft", "paperAnchorRight", "paperAnchorTop", "paperAnchorBottom", "paperAnchorDockedLeft", "paperAnchorDockedRight", "paperAnchorDockedTop", "paperAnchorDockedBottom", "modal"]);
const Ay = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, (n.variant === "permanent" || n.variant === "persistent") && t.docked, t.modal];
}, wR = (e) => {
  const {
    classes: t,
    anchor: n,
    variant: r
  } = e, o = {
    root: ["root", `anchor${xe(n)}`],
    docked: [(r === "permanent" || r === "persistent") && "docked"],
    modal: ["modal"],
    paper: ["paper", `paperAnchor${xe(n)}`, r !== "temporary" && `paperAnchorDocked${xe(n)}`]
  };
  return Ct(o, xR, t);
}, SR = Pe(yl, {
  name: "MuiDrawer",
  slot: "Root",
  overridesResolver: Ay
})(Ke(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.drawer
}))), TR = Pe("div", {
  shouldForwardProp: br,
  name: "MuiDrawer",
  slot: "Docked",
  skipVariantsResolver: !1,
  overridesResolver: Ay
})({
  flex: "0 0 auto"
}), ER = Pe(ci, {
  name: "MuiDrawer",
  slot: "Paper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.paper, t[`paperAnchor${xe(n.anchor)}`], n.variant !== "temporary" && t[`paperAnchorDocked${xe(n.anchor)}`]];
  }
})(Ke(({
  theme: e
}) => ({
  overflowY: "auto",
  display: "flex",
  flexDirection: "column",
  height: "100%",
  flex: "1 0 auto",
  zIndex: (e.vars || e).zIndex.drawer,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  // temporary style
  position: "fixed",
  top: 0,
  // We disable the focus ring for mouse, touch and keyboard users.
  // At some point, it would be better to keep it for keyboard users.
  // :focus-ring CSS pseudo-class will help.
  outline: 0,
  variants: [{
    props: {
      anchor: "left"
    },
    style: {
      left: 0
    }
  }, {
    props: {
      anchor: "top"
    },
    style: {
      top: 0,
      left: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    }
  }, {
    props: {
      anchor: "right"
    },
    style: {
      right: 0
    }
  }, {
    props: {
      anchor: "bottom"
    },
    style: {
      top: "auto",
      left: 0,
      bottom: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "left" && t.variant !== "temporary",
    style: {
      borderRight: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "top" && t.variant !== "temporary",
    style: {
      borderBottom: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "right" && t.variant !== "temporary",
    style: {
      borderLeft: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "bottom" && t.variant !== "temporary",
    style: {
      borderTop: `1px solid ${(e.vars || e).palette.divider}`
    }
  }]
}))), My = {
  left: "right",
  right: "left",
  top: "down",
  bottom: "up"
};
function CR(e) {
  return ["left", "right"].includes(e);
}
function OR({
  direction: e
}, t) {
  return e === "rtl" && CR(t) ? My[t] : t;
}
const _y = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = St({
    props: t,
    name: "MuiDrawer"
  }), o = Mr(), s = nl(), a = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    anchor: l = "left",
    BackdropProps: c,
    children: u,
    className: d,
    elevation: f = 16,
    hideBackdrop: h = !1,
    ModalProps: {
      BackdropProps: g,
      ...y
    } = {},
    onClose: m,
    open: b = !1,
    PaperProps: x = {},
    SlideProps: E,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: w,
    transitionDuration: S = a,
    variant: v = "temporary",
    slots: T = {},
    slotProps: R = {},
    ...k
  } = r, I = C.useRef(!1);
  C.useEffect(() => {
    I.current = !0;
  }, []);
  const p = OR({
    direction: s ? "rtl" : "ltr"
  }, l), $ = {
    ...r,
    anchor: l,
    elevation: f,
    open: b,
    variant: v,
    ...k
  }, A = wR($), D = {
    slots: {
      transition: w,
      ...T
    },
    slotProps: {
      paper: x,
      transition: E,
      ...R,
      backdrop: gd(R.backdrop || {
        ...c,
        ...g
      }, {
        transitionDuration: S
      })
    }
  }, [_, M] = at("root", {
    ref: n,
    elementType: SR,
    className: Ee(A.root, A.modal, d),
    shouldForwardComponentProp: !0,
    ownerState: $,
    externalForwardedProps: {
      ...D,
      ...k,
      ...y
    },
    additionalProps: {
      open: b,
      onClose: m,
      hideBackdrop: h,
      slots: {
        backdrop: D.slots.backdrop
      },
      slotProps: {
        backdrop: D.slotProps.backdrop
      }
    }
  }), [V, Y] = at("paper", {
    elementType: ER,
    shouldForwardComponentProp: !0,
    className: Ee(A.paper, x.className),
    ownerState: $,
    externalForwardedProps: D,
    additionalProps: {
      elevation: v === "temporary" ? f : 0,
      square: !0
    }
  }), [U, j] = at("docked", {
    elementType: TR,
    ref: n,
    className: Ee(A.root, A.docked, d),
    ownerState: $,
    externalForwardedProps: D,
    additionalProps: k
    // pass `other` here because `DockedSlot` is also a root slot for some variants
  }), [W, ee] = at("transition", {
    elementType: Ny,
    ownerState: $,
    externalForwardedProps: D,
    additionalProps: {
      in: b,
      direction: My[p],
      timeout: S,
      appear: I.current
    }
  }), K = /* @__PURE__ */ P(V, {
    ...Y,
    children: u
  });
  if (v === "permanent")
    return /* @__PURE__ */ P(U, {
      ...j,
      children: K
    });
  const oe = /* @__PURE__ */ P(W, {
    ...ee,
    children: K
  });
  return v === "persistent" ? /* @__PURE__ */ P(U, {
    ...j,
    children: oe
  }) : /* @__PURE__ */ P(_, {
    ...M,
    children: oe
  });
});
process.env.NODE_ENV !== "production" && (_y.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Side from which the drawer will appear.
   * @default 'left'
   */
  anchor: i.oneOf(["bottom", "left", "right", "top"]),
  /**
   * @ignore
   */
  BackdropProps: i.object,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The elevation of the drawer.
   * @default 16
   */
  elevation: qu,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: i.bool,
  /**
   * Props applied to the [`Modal`](https://mui.com/material-ui/api/modal/) element.
   * @default {}
   */
  ModalProps: i.object,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: i.bool,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @deprecated use the `slotProps.paper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PaperProps: i.object,
  /**
   * Props applied to the [`Slide`](https://mui.com/material-ui/api/slide/) element.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SlideProps: i.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    docked: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    docked: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * The variant to use.
   * @default 'temporary'
   */
  variant: i.oneOf(["permanent", "persistent", "temporary"])
});
const Dy = _e(
  ({ children: e, isOpen: t, closeDrawer: n, width: r, position: o = "right", sx: s }) => {
    const { paperCommonStyles: a } = ui();
    return /* @__PURE__ */ P(
      _y,
      {
        className: "VenomousUI-Drawer",
        open: t,
        onClose: n,
        anchor: o,
        keepMounted: !0,
        slotProps: {
          paper: {
            sx: {
              ...a,
              ...RR(o),
              width: r,
              p: "16px",
              ...s
            }
          }
        },
        children: /* @__PURE__ */ P("div", { style: { width: "100%" }, children: e })
      }
    );
  }
);
Dy.displayName = "Drawer";
function RR(e) {
  switch (e) {
    case "right":
      return { borderTopRightRadius: "0px !important", borderBottomRightRadius: "0px !important" };
    case "top":
      return { borderTopLeftRadius: "0px !important", borderTopRightRadius: "0px !important" };
    case "bottom":
      return {
        borderBottomLeftRadius: "0px !important",
        borderBottomRightRadius: "0px !important"
      };
    case "left":
    default:
      return { borderTopLeftRadius: "0px !important", borderBottomLeftRadius: "0px !important" };
  }
}
function kR() {
  const [e, t] = Cr(!1), n = tn(() => {
    t(!0);
  }, []), r = tn(() => {
    t(!1);
  }, []), o = tn(() => {
    t((s) => !s);
  }, []);
  return {
    isOpen: e,
    setIsOpen: t,
    openDrawer: n,
    closeDrawer: r,
    toggleDrawer: o
  };
}
const By = _e(({ height: e = 50, title: t, closeDrawer: n }) => {
  const { paperCommonStyles: r } = ui();
  return /* @__PURE__ */ $e(
    Kt,
    {
      className: "VenomousUI-DrawerHeader",
      row: !0,
      sx: {
        ...r,
        borderRadius: 0,
        height: e,
        width: "100%",
        position: "sticky",
        top: 0,
        left: 0,
        justifyContent: "space-between",
        transform: "translateY(-8px)"
      },
      children: [
        n && /* @__PURE__ */ P(
          Gn,
          {
            isCircle: !0,
            isGhost: !0,
            icon: "solar:close-circle-line-duotone",
            iconWidth: 24,
            color: "auto",
            onClick: n,
            sx: { width: 24, mr: "8px", ml: "-8px" }
          }
        ),
        /* @__PURE__ */ P(bn, { text: t, isTitle: !0 })
      ]
    }
  );
});
By.displayName = "DrawerHeader";
const Nd = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (Nd.displayName = "FormControlContext");
function bl() {
  return C.useContext(Nd);
}
function $R(e) {
  return gt("PrivateSwitchBase", e);
}
wt("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);
const PR = (e) => {
  const {
    classes: t,
    checked: n,
    disabled: r,
    edge: o
  } = e, s = {
    root: ["root", n && "checked", r && "disabled", o && `edge${xe(o)}`],
    input: ["input"]
  };
  return Ct(s, $R, t);
}, IR = Pe(yd)({
  padding: 9,
  borderRadius: "50%",
  variants: [{
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "start" && t.size !== "small",
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "end" && t.size !== "small",
    style: {
      marginRight: -12
    }
  }]
}), NR = Pe("input", {
  shouldForwardProp: br
})({
  cursor: "inherit",
  position: "absolute",
  opacity: 0,
  width: "100%",
  height: "100%",
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
}), vl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    autoFocus: r,
    checked: o,
    checkedIcon: s,
    defaultChecked: a,
    disabled: l,
    disableFocusRipple: c = !1,
    edge: u = !1,
    icon: d,
    id: f,
    inputProps: h,
    inputRef: g,
    name: y,
    onBlur: m,
    onChange: b,
    onFocus: x,
    readOnly: E,
    required: w = !1,
    tabIndex: S,
    type: v,
    value: T,
    slots: R = {},
    slotProps: k = {},
    ...I
  } = t, [p, O] = qh({
    controlled: o,
    default: !!a,
    name: "SwitchBase",
    state: "checked"
  }), $ = bl(), A = (ne) => {
    x && x(ne), $ && $.onFocus && $.onFocus(ne);
  }, D = (ne) => {
    m && m(ne), $ && $.onBlur && $.onBlur(ne);
  }, _ = (ne) => {
    if (ne.nativeEvent.defaultPrevented)
      return;
    const se = ne.target.checked;
    O(se), b && b(ne, se);
  };
  let M = l;
  $ && typeof M > "u" && (M = $.disabled);
  const V = v === "checkbox" || v === "radio", Y = {
    ...t,
    checked: p,
    disabled: M,
    disableFocusRipple: c,
    edge: u
  }, U = PR(Y), j = {
    slots: R,
    slotProps: {
      input: h,
      ...k
    }
  }, [W, ee] = at("root", {
    ref: n,
    elementType: IR,
    className: U.root,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...j,
      component: "span",
      ...I
    },
    getSlotProps: (ne) => ({
      ...ne,
      onFocus: (se) => {
        var de;
        (de = ne.onFocus) == null || de.call(ne, se), A(se);
      },
      onBlur: (se) => {
        var de;
        (de = ne.onBlur) == null || de.call(ne, se), D(se);
      }
    }),
    ownerState: Y,
    additionalProps: {
      centerRipple: !0,
      focusRipple: !c,
      disabled: M,
      role: void 0,
      tabIndex: null
    }
  }), [K, oe] = at("input", {
    ref: g,
    elementType: NR,
    className: U.input,
    externalForwardedProps: j,
    getSlotProps: (ne) => ({
      ...ne,
      onChange: (se) => {
        var de;
        (de = ne.onChange) == null || de.call(ne, se), _(se);
      }
    }),
    ownerState: Y,
    additionalProps: {
      autoFocus: r,
      checked: o,
      defaultChecked: a,
      disabled: M,
      id: V ? f : void 0,
      name: y,
      readOnly: E,
      required: w,
      tabIndex: S,
      type: v,
      ...v === "checkbox" && T === void 0 ? {} : {
        value: T
      }
    }
  });
  return /* @__PURE__ */ $e(W, {
    ...ee,
    children: [/* @__PURE__ */ P(K, {
      ...oe
    }), p ? s : d]
  });
});
process.env.NODE_ENV !== "production" && (vl.propTypes = {
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: i.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * @ignore
   */
  defaultChecked: i.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: i.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: i.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: i.node.isRequired,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ar,
  /*
   * @ignore
   */
  name: i.string,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: i.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    input: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.object,
  /**
   * @ignore
   */
  tabIndex: i.oneOfType([i.number, i.string]),
  /**
   * The input component prop `type`.
   */
  type: i.string.isRequired,
  /**
   * The value of the component.
   */
  value: i.any
});
const AR = li(/* @__PURE__ */ P("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank"), MR = li(/* @__PURE__ */ P("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox"), _R = li(/* @__PURE__ */ P("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");
function DR(e) {
  return gt("MuiCheckbox", e);
}
const pc = wt("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium"]), BR = (e) => {
  const {
    classes: t,
    indeterminate: n,
    color: r,
    size: o
  } = e, s = {
    root: ["root", n && "indeterminate", `color${xe(r)}`, `size${xe(o)}`]
  }, a = Ct(s, DR, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...a
  };
}, FR = Pe(vl, {
  shouldForwardProp: (e) => br(e) || e === "classes",
  name: "MuiCheckbox",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.indeterminate && t.indeterminate, t[`size${xe(n.size)}`], n.color !== "default" && t[`color${xe(n.color)}`]];
  }
})(Ke(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  variants: [{
    props: {
      color: "default",
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(un()).map(([t]) => ({
    props: {
      color: t,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(un()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${pc.checked}, &.${pc.indeterminate}`]: {
        color: (e.vars || e).palette[t].main
      },
      [`&.${pc.disabled}`]: {
        color: (e.vars || e).palette.action.disabled
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
}))), jR = /* @__PURE__ */ P(MR, {}), LR = /* @__PURE__ */ P(AR, {}), VR = /* @__PURE__ */ P(_R, {}), Fy = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = St({
    props: t,
    name: "MuiCheckbox"
  }), {
    checkedIcon: o = jR,
    color: s = "primary",
    icon: a = LR,
    indeterminate: l = !1,
    indeterminateIcon: c = VR,
    inputProps: u,
    size: d = "medium",
    disableRipple: f = !1,
    className: h,
    slots: g = {},
    slotProps: y = {},
    ...m
  } = r, b = l ? c : a, x = l ? c : o, E = {
    ...r,
    disableRipple: f,
    color: s,
    indeterminate: l,
    size: d
  }, w = BR(E), S = y.input ?? u, [v, T] = at("root", {
    ref: n,
    elementType: FR,
    className: Ee(w.root, h),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: g,
      slotProps: y,
      ...m
    },
    ownerState: E,
    additionalProps: {
      type: "checkbox",
      icon: /* @__PURE__ */ C.cloneElement(b, {
        fontSize: b.props.fontSize ?? d
      }),
      checkedIcon: /* @__PURE__ */ C.cloneElement(x, {
        fontSize: x.props.fontSize ?? d
      }),
      disableRipple: f,
      slots: g,
      slotProps: {
        input: gd(typeof S == "function" ? S(E) : S, {
          "data-indeterminate": l
        })
      }
    }
  });
  return /* @__PURE__ */ P(v, {
    ...T,
    classes: w
  });
});
process.env.NODE_ENV !== "production" && (Fy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   * @default <CheckBoxIcon />
   */
  checkedIcon: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: i.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <CheckBoxOutlineBlankIcon />
   */
  icon: i.node,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the `input`.
   * @default false
   */
  indeterminate: i.bool,
  /**
   * The icon to display when the component is indeterminate.
   * @default <IndeterminateCheckBoxIcon />
   */
  indeterminateIcon: i.node,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: i.object,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense checkbox styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    input: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: i.any
});
const ei = _e(
  ({ label: e, elementId: t, tooltip: n, isDisabled: r, isError: o, isRequired: s }) => {
    const { textCommonStyles: a } = cl({
      isTitle: !1,
      isLabel: !0,
      textColor: r ? "disabled" : o ? "error" : "auto"
    });
    return /* @__PURE__ */ $e(
      $r,
      {
        className: "VenomousUI-Label",
        component: "label",
        htmlFor: t,
        sx: {
          ...a,
          cursor: r ? "not-allowed" : "pointer",
          display: "flex",
          alignItems: "center"
        },
        children: [
          /* @__PURE__ */ P(
            $r,
            {
              component: "i",
              sx: {
                width: "14px",
                marginLeft: "-14px",
                fontSize: "1.5rem",
                transform: "translateY(0.25rem)",
                opacity: s ? 1 : 0,
                color: "error.main"
              },
              children: "*"
            }
          ),
          e,
          n && /* @__PURE__ */ P(hd, { title: n, arrow: !0, placement: "top", children: /* @__PURE__ */ P(
            mr,
            {
              icon: "solar:info-circle-bold",
              width: 16,
              color: o ? "error" : "primary",
              ml: "4px"
            }
          ) })
        ]
      }
    );
  }
);
ei.displayName = "Label";
const xl = _e(
  ({ startLabel: e, endLabel: t, labelsDirection: n = "row", renderElement: r, isDisabled: o, isError: s }) => {
    const a = uh();
    return /* @__PURE__ */ $e(Kt, { className: "VenomousUI-Labels", gap: 0, row: n === "row", children: [
      e && /* @__PURE__ */ P(ei, { label: e, elementId: a, isDisabled: o, isError: s }),
      r(a),
      t && /* @__PURE__ */ P(ei, { label: t, elementId: a, isDisabled: o, isError: s })
    ] });
  }
);
xl.displayName = "Labels";
const jy = _e(
  ({ value: e, onChange: t, isDisabled: n, isError: r, label: o, labelDirection: s = "end" }) => {
    const a = tn(
      (l) => /* @__PURE__ */ P(
        Fy,
        {
          id: l,
          checked: e,
          onChange: (c) => t(c.target.checked),
          disabled: n,
          icon: /* @__PURE__ */ P(zR, { isDisabled: n, isError: r }),
          checkedIcon: /* @__PURE__ */ P(WR, { isDisabled: n, isError: r }),
          sx: {
            "& .MuiSwitch-track": { transition: "background-color 0s" },
            "& svg.MuiSvgIcon-root": { transform: "translate(-1px, 0px)" }
          }
        }
      ),
      [e, t, n, r]
    );
    return o ? /* @__PURE__ */ P(
      xl,
      {
        labelsDirection: "row",
        startLabel: s === "start" ? o : "",
        endLabel: s === "end" ? o : "",
        isDisabled: n,
        isError: r,
        renderElement: a
      }
    ) : a();
  }
);
jy.displayName = "Checkbox";
const zR = _e(
  ({ isDisabled: e, isError: t }) => /* @__PURE__ */ P(
    Uo,
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "32",
      height: "32",
      viewBox: "0 0 20 20",
      sx: {
        color: (n) => t ? n.palette.error.main : e ? n.palette.action.disabled : "auto"
      },
      children: /* @__PURE__ */ P(
        "path",
        {
          fill: "currentColor",
          d: "M3 6a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3zm3-2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"
        }
      )
    }
  )
), WR = _e(
  ({ isDisabled: e, isError: t }) => /* @__PURE__ */ P(
    Uo,
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "32",
      height: "32",
      viewBox: "0 0 24 24",
      sx: {
        color: (n) => t ? n.palette.error.main : e ? n.palette.action.disabled : "auto"
      },
      children: /* @__PURE__ */ P(
        "path",
        {
          fill: "currentColor",
          d: "M6.25 3A3.25 3.25 0 0 0 3 6.25v11.5A3.25 3.25 0 0 0 6.25 21h11.5A3.25 3.25 0 0 0 21 17.75V6.25A3.25 3.25 0 0 0 17.75 3zm11.03 6.28l-6.754 6.747a.75.75 0 0 1-1.06 0L6.72 13.28a.75.75 0 0 1 1.06-1.06l2.217 2.216l6.223-6.217a.75.75 0 1 1 1.06 1.062"
        }
      )
    }
  )
);
var Qp;
const UR = Pe("fieldset", {
  shouldForwardProp: br
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), HR = Pe("legend", {
  shouldForwardProp: br
})(Ke(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function Ly(e) {
  const {
    children: t,
    classes: n,
    className: r,
    label: o,
    notched: s,
    ...a
  } = e, l = o != null && o !== "", c = {
    ...e,
    notched: s,
    withLabel: l
  };
  return /* @__PURE__ */ P(UR, {
    "aria-hidden": !0,
    className: r,
    ownerState: c,
    ...a,
    children: /* @__PURE__ */ P(HR, {
      ownerState: c,
      children: l ? /* @__PURE__ */ P("span", {
        children: o
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        Qp || (Qp = /* @__PURE__ */ P("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (Ly.propTypes = {
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The label.
   */
  label: i.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: i.bool.isRequired,
  /**
   * @ignore
   */
  style: i.object
});
function Vy({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((r, o) => (r[o] = e[o], n && typeof e[o] > "u" && (r[o] = n[o]), r), {});
}
function Us(e) {
  return parseInt(e, 10) || 0;
}
const qR = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function YR(e) {
  for (const t in e)
    return !1;
  return !0;
}
function Jp(e) {
  return YR(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const zy = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    onChange: r,
    maxRows: o,
    minRows: s = 1,
    style: a,
    value: l,
    ...c
  } = t, {
    current: u
  } = C.useRef(l != null), d = C.useRef(null), f = rn(n, d), h = C.useRef(null), g = C.useRef(null), y = C.useCallback(() => {
    const w = d.current, S = g.current;
    if (!w || !S)
      return;
    const T = pr(w).getComputedStyle(w);
    if (T.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    S.style.width = T.width, S.value = w.value || t.placeholder || "x", S.value.slice(-1) === `
` && (S.value += " ");
    const R = T.boxSizing, k = Us(T.paddingBottom) + Us(T.paddingTop), I = Us(T.borderBottomWidth) + Us(T.borderTopWidth), p = S.scrollHeight;
    S.value = "x";
    const O = S.scrollHeight;
    let $ = p;
    s && ($ = Math.max(Number(s) * O, $)), o && ($ = Math.min(Number(o) * O, $)), $ = Math.max($, O);
    const A = $ + (R === "border-box" ? k + I : 0), D = Math.abs($ - p) <= 1;
    return {
      outerHeightStyle: A,
      overflowing: D
    };
  }, [o, s, t.placeholder]), m = ur(() => {
    const w = d.current, S = y();
    if (!w || !S || Jp(S))
      return !1;
    const v = S.outerHeightStyle;
    return h.current != null && h.current !== v;
  }), b = C.useCallback(() => {
    const w = d.current, S = y();
    if (!w || !S || Jp(S))
      return;
    const v = S.outerHeightStyle;
    h.current !== v && (h.current = v, w.style.height = `${v}px`), w.style.overflow = S.overflowing ? "hidden" : "";
  }, [y]), x = C.useRef(-1);
  fr(() => {
    const w = Uu(b), S = d == null ? void 0 : d.current;
    if (!S)
      return;
    const v = pr(S);
    v.addEventListener("resize", w);
    let T;
    return typeof ResizeObserver < "u" && (T = new ResizeObserver(() => {
      m() && (T.unobserve(S), cancelAnimationFrame(x.current), b(), x.current = requestAnimationFrame(() => {
        T.observe(S);
      }));
    }), T.observe(S)), () => {
      w.clear(), cancelAnimationFrame(x.current), v.removeEventListener("resize", w), T && T.disconnect();
    };
  }, [y, b, m]), fr(() => {
    b();
  });
  const E = (w) => {
    u || b(), r && r(w);
  };
  return /* @__PURE__ */ $e(C.Fragment, {
    children: [/* @__PURE__ */ P("textarea", {
      value: l,
      onChange: E,
      ref: f,
      rows: s,
      style: a,
      ...c
    }), /* @__PURE__ */ P("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: g,
      tabIndex: -1,
      style: {
        ...qR.shadow,
        ...a,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (zy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: i.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  onChange: i.func,
  /**
   * @ignore
   */
  placeholder: i.string,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * @ignore
   */
  value: i.oneOfType([i.arrayOf(i.string), i.number, i.string])
});
function Zp(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function GR(e, t = !1) {
  return e && (Zp(e.value) && e.value !== "" || t && Zp(e.defaultValue) && e.defaultValue !== "");
}
function KR(e) {
  return gt("MuiInputBase", e);
}
const ka = wt("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var em;
const Wy = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${xe(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, Uy = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, XR = (e) => {
  const {
    classes: t,
    color: n,
    disabled: r,
    error: o,
    endAdornment: s,
    focused: a,
    formControl: l,
    fullWidth: c,
    hiddenLabel: u,
    multiline: d,
    readOnly: f,
    size: h,
    startAdornment: g,
    type: y
  } = e, m = {
    root: ["root", `color${xe(n)}`, r && "disabled", o && "error", c && "fullWidth", a && "focused", l && "formControl", h && h !== "medium" && `size${xe(h)}`, d && "multiline", g && "adornedStart", s && "adornedEnd", u && "hiddenLabel", f && "readOnly"],
    input: ["input", r && "disabled", y === "search" && "inputTypeSearch", d && "inputMultiline", h === "small" && "inputSizeSmall", u && "inputHiddenLabel", g && "inputAdornedStart", s && "inputAdornedEnd", f && "readOnly"]
  };
  return Ct(m, KR, t);
}, Hy = Pe("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: Wy
})(Ke(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${ka.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), qy = Pe("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: Uy
})(Ke(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, r = {
    opacity: "0 !important"
  }, o = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${ka.formControl} &`]: {
      "&::-webkit-input-placeholder": r,
      "&::-moz-placeholder": r,
      // Firefox 19+
      "&::-ms-input-placeholder": r,
      // Edge
      "&:focus::-webkit-input-placeholder": o,
      "&:focus::-moz-placeholder": o,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": o
      // Edge
    },
    [`&.${ka.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: s
      }) => !s.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), tm = Zu({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), Yy = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = St({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": o,
    autoComplete: s,
    autoFocus: a,
    className: l,
    color: c,
    components: u = {},
    componentsProps: d = {},
    defaultValue: f,
    disabled: h,
    disableInjectingGlobalStyles: g,
    endAdornment: y,
    error: m,
    fullWidth: b = !1,
    id: x,
    inputComponent: E = "input",
    inputProps: w = {},
    inputRef: S,
    margin: v,
    maxRows: T,
    minRows: R,
    multiline: k = !1,
    name: I,
    onBlur: p,
    onChange: O,
    onClick: $,
    onFocus: A,
    onKeyDown: D,
    onKeyUp: _,
    placeholder: M,
    readOnly: V,
    renderSuffix: Y,
    rows: U,
    size: j,
    slotProps: W = {},
    slots: ee = {},
    startAdornment: K,
    type: oe = "text",
    value: ne,
    ...se
  } = r, de = w.value != null ? w.value : ne, {
    current: X
  } = C.useRef(de != null), ae = C.useRef(), Q = C.useCallback((re) => {
    process.env.NODE_ENV !== "production" && re && re.nodeName !== "INPUT" && !re.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), ie = rn(ae, S, w.ref, Q), [F, he] = C.useState(!1), fe = bl();
  process.env.NODE_ENV !== "production" && C.useEffect(() => {
    if (fe)
      return fe.registerEffect();
  }, [fe]);
  const Te = Vy({
    props: r,
    muiFormControl: fe,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  Te.focused = fe ? fe.focused : F, C.useEffect(() => {
    !fe && h && F && (he(!1), p && p());
  }, [fe, h, F, p]);
  const Le = fe && fe.onFilled, Ae = fe && fe.onEmpty, Ie = C.useCallback((re) => {
    GR(re) ? Le && Le() : Ae && Ae();
  }, [Le, Ae]);
  fr(() => {
    X && Ie({
      value: de
    });
  }, [de, Ie, X]);
  const Re = (re) => {
    A && A(re), w.onFocus && w.onFocus(re), fe && fe.onFocus ? fe.onFocus(re) : he(!0);
  }, Be = (re) => {
    p && p(re), w.onBlur && w.onBlur(re), fe && fe.onBlur ? fe.onBlur(re) : he(!1);
  }, Oe = (re, ...Z) => {
    if (!X) {
      const te = re.target || ae.current;
      if (te == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : Or(1));
      Ie({
        value: te.value
      });
    }
    w.onChange && w.onChange(re, ...Z), O && O(re, ...Z);
  };
  C.useEffect(() => {
    Ie(ae.current);
  }, []);
  const N = (re) => {
    ae.current && re.currentTarget === re.target && ae.current.focus(), $ && $(re);
  };
  let q = E, J = w;
  k && q === "input" && (U ? (process.env.NODE_ENV !== "production" && (R || T) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), J = {
    type: void 0,
    minRows: U,
    maxRows: U,
    ...J
  }) : J = {
    type: void 0,
    maxRows: T,
    minRows: R,
    ...J
  }, q = zy);
  const H = (re) => {
    Ie(re.animationName === "mui-auto-fill-cancel" ? ae.current : {
      value: "x"
    });
  };
  C.useEffect(() => {
    fe && fe.setAdornedStart(!!K);
  }, [fe, K]);
  const B = {
    ...r,
    color: Te.color || "primary",
    disabled: Te.disabled,
    endAdornment: y,
    error: Te.error,
    focused: Te.focused,
    formControl: fe,
    fullWidth: b,
    hiddenLabel: Te.hiddenLabel,
    multiline: k,
    size: Te.size,
    startAdornment: K,
    type: oe
  }, z = XR(B), G = ee.root || u.Root || Hy, pe = W.root || d.root || {}, me = ee.input || u.Input || qy;
  return J = {
    ...J,
    ...W.input ?? d.input
  }, /* @__PURE__ */ $e(C.Fragment, {
    children: [!g && typeof tm == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (em || (em = /* @__PURE__ */ P(tm, {}))), /* @__PURE__ */ $e(G, {
      ...pe,
      ref: n,
      onClick: N,
      ...se,
      ...!au(G) && {
        ownerState: {
          ...B,
          ...pe.ownerState
        }
      },
      className: Ee(z.root, pe.className, l, V && "MuiInputBase-readOnly"),
      children: [K, /* @__PURE__ */ P(Nd.Provider, {
        value: null,
        children: /* @__PURE__ */ P(me, {
          "aria-invalid": Te.error,
          "aria-describedby": o,
          autoComplete: s,
          autoFocus: a,
          defaultValue: f,
          disabled: Te.disabled,
          id: x,
          onAnimationStart: H,
          name: I,
          placeholder: M,
          readOnly: V,
          required: Te.required,
          rows: U,
          value: de,
          onKeyDown: D,
          onKeyUp: _,
          type: oe,
          ...J,
          ...!au(me) && {
            as: q,
            ownerState: {
              ...B,
              ...J.ownerState
            }
          },
          ref: ie,
          className: Ee(z.input, J.className, V && "MuiInputBase-readOnly"),
          onBlur: Be,
          onChange: Oe,
          onFocus: Re
        })
      }), y, Y ? Y({
        ...Te,
        startAdornment: K
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (Yy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": i.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: Wu,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ar,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: i.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: i.func,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * @ignore
   */
  onKeyUp: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * @ignore
   */
  renderSuffix: i.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The size of the component.
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
function QR(e) {
  return gt("MuiOutlinedInput", e);
}
const Jn = {
  ...ka,
  ...wt("MuiOutlinedInput", ["root", "notchedOutline", "input"])
}, JR = (e) => {
  const {
    classes: t
  } = e, r = Ct({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, QR, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...r
  };
}, ZR = Pe(Hy, {
  shouldForwardProp: (e) => br(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: Wy
})(Ke(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${Jn.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${Jn.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${Jn.focused} .${Jn.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(un()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${Jn.focused} .${Jn.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${Jn.error} .${Jn.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${Jn.disabled} .${Jn.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: r
      }) => n.multiline && r === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), ek = Pe(Ly, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(Ke(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), tk = Pe(qy, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: Uy
})(Ke(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), Ad = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var r;
  const o = St({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: s = {},
    fullWidth: a = !1,
    inputComponent: l = "input",
    label: c,
    multiline: u = !1,
    notched: d,
    slots: f = {},
    type: h = "text",
    ...g
  } = o, y = JR(o), m = bl(), b = Vy({
    props: o,
    muiFormControl: m,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), x = {
    ...o,
    color: b.color || "primary",
    disabled: b.disabled,
    error: b.error,
    focused: b.focused,
    formControl: m,
    fullWidth: a,
    hiddenLabel: b.hiddenLabel,
    multiline: u,
    size: b.size,
    type: h
  }, E = f.root ?? s.Root ?? ZR, w = f.input ?? s.Input ?? tk;
  return /* @__PURE__ */ P(Yy, {
    slots: {
      root: E,
      input: w
    },
    renderSuffix: (S) => /* @__PURE__ */ P(ek, {
      ownerState: x,
      className: y.notchedOutline,
      label: c != null && c !== "" && b.required ? r || (r = /* @__PURE__ */ $e(C.Fragment, {
        children: [c, " ", "*"]
      })) : c,
      notched: typeof d < "u" ? d : !!(S.startAdornment || S.filled || S.focused)
    }),
    fullWidth: a,
    inputComponent: l,
    multiline: u,
    ref: n,
    type: h,
    ...g,
    classes: {
      ...y,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (Ad.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ar,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: i.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: i.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
Ad.muiName = "Input";
function Gy({
  isDisabled: e,
  isError: t
}) {
  return {
    inputCommonStyle: cn(
      () => ({
        borderRadius: "8px",
        minWidth: "200px",
        "& input": {
          cursor: e ? "not-allowed" : "text",
          color: (r) => e ? "disabled" : t ? r.palette.error.main : "inherit"
        }
      }),
      [e, t]
    )
  };
}
const wl = _e(
  ({
    label: e = "",
    tooltip: t,
    fullWidth: n = !1,
    value: r,
    onChange: o,
    isRequired: s,
    isDisabled: a,
    isError: l,
    errorMessage: c = "",
    sx: u,
    ...d
  }) => {
    const f = uh(), { inputCommonStyle: h } = Gy({
      isDisabled: a,
      isError: l
    }), { textCommonStyles: g } = cl({
      isTitle: !1,
      isLabel: !0,
      textColor: a ? "disabled" : l ? "error" : "auto"
    });
    return /* @__PURE__ */ $e(Kt, { gap: 0, width: n ? "100%" : "auto", children: [
      e && /* @__PURE__ */ P(
        ei,
        {
          label: e,
          elementId: f,
          tooltip: t,
          isRequired: s,
          isDisabled: a,
          isError: l
        }
      ),
      /* @__PURE__ */ P(
        Ad,
        {
          id: f,
          autoComplete: "off",
          fullWidth: n,
          size: "small",
          error: l,
          disabled: a,
          value: r,
          onChange: (y) => o(y.target.value),
          sx: { ...h, ...u },
          ...d
        }
      ),
      l && /* @__PURE__ */ P(
        bn,
        {
          text: l ? c : "",
          isLabel: !0,
          sx: { ...g, minHeight: "24px" }
        }
      )
    ] });
  }
);
wl.displayName = "Input";
const Ky = _e(
  ({ isError: e, fullWidth: t, value: n = 0, onChange: r, sx: o, min: s = 0, max: a = 1e3, step: l = 1, ...c }) => {
    const u = tn(
      (d) => {
        if (!d || isNaN(parseInt(d, 10))) {
          r(s);
          return;
        }
        const f = Math.abs(parseInt(d, 10));
        r(f);
      },
      [s, r]
    );
    return /* @__PURE__ */ P(
      wl,
      {
        type: "number",
        fullWidth: t,
        isError: e,
        value: Math.abs(n).toString(),
        onChange: u,
        sx: {
          ...o
        },
        slotProps: {
          input: {
            type: "number",
            min: s,
            max: a,
            step: l
          }
        },
        ...c
      }
    );
  }
);
Ky.displayName = "Number";
function yr(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((r) => n.searchParams.append("args[]", r)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
const Sl = "$$material";
function nk(e) {
  return e == null || Object.keys(e).length === 0;
}
function Xy(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e;
  return /* @__PURE__ */ P(Ih, {
    styles: typeof t == "function" ? (o) => t(nk(o) ? n : o) : t
  });
}
process.env.NODE_ENV !== "production" && (Xy.propTypes = {
  defaultTheme: i.object,
  styles: i.oneOfType([i.array, i.string, i.object, i.func])
});
/**
 * @mui/styled-engine v7.0.2
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function Qy(e, t) {
  const n = ma(e, t);
  return process.env.NODE_ENV !== "production" ? (...r) => {
    const o = typeof e == "string" ? `"${e}"` : "component";
    return r.length === 0 ? console.error([`MUI: Seems like you called \`styled(${o})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : r.some((s) => s === void 0) && console.error(`MUI: the styled(${o})(...args) API requires all its args to be defined.`), n(...r);
  } : n;
}
function rk(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const nm = [];
function rm(e) {
  return nm[0] = e, ri(nm);
}
function sr(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function Jy(e) {
  if (/* @__PURE__ */ C.isValidElement(e) || Yn.isValidElementType(e) || !sr(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = Jy(e[n]);
  }), t;
}
function nn(e, t, n = {
  clone: !0
}) {
  const r = n.clone ? {
    ...e
  } : e;
  return sr(e) && sr(t) && Object.keys(t).forEach((o) => {
    /* @__PURE__ */ C.isValidElement(t[o]) || Yn.isValidElementType(t[o]) ? r[o] = t[o] : sr(t[o]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, o) && sr(e[o]) ? r[o] = nn(e[o], t[o], n) : n.clone ? r[o] = sr(t[o]) ? Jy(t[o]) : t[o] : r[o] = t[o];
  }), r;
}
const ok = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, r) => n.val - r.val), t.reduce((n, r) => ({
    ...n,
    [r.key]: r.val
  }), {});
};
function ik(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: r = 5,
    ...o
  } = e, s = ok(t), a = Object.keys(s);
  function l(h) {
    return `@media (min-width:${typeof t[h] == "number" ? t[h] : h}${n})`;
  }
  function c(h) {
    return `@media (max-width:${(typeof t[h] == "number" ? t[h] : h) - r / 100}${n})`;
  }
  function u(h, g) {
    const y = a.indexOf(g);
    return `@media (min-width:${typeof t[h] == "number" ? t[h] : h}${n}) and (max-width:${(y !== -1 && typeof t[a[y]] == "number" ? t[a[y]] : g) - r / 100}${n})`;
  }
  function d(h) {
    return a.indexOf(h) + 1 < a.length ? u(h, a[a.indexOf(h) + 1]) : l(h);
  }
  function f(h) {
    const g = a.indexOf(h);
    return g === 0 ? l(a[1]) : g === a.length - 1 ? c(a[g]) : u(h, a[a.indexOf(h) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: a,
    values: s,
    up: l,
    down: c,
    between: u,
    only: d,
    not: f,
    unit: n,
    ...o
  };
}
function sk(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((r) => r.startsWith("@container")).sort((r, o) => {
    var a, l;
    const s = /min-width:\s*([0-9.]+)/;
    return +(((a = r.match(s)) == null ? void 0 : a[1]) || 0) - +(((l = o.match(s)) == null ? void 0 : l[1]) || 0);
  });
  return n.length ? n.reduce((r, o) => {
    const s = t[o];
    return delete r[o], r[o] = s, r;
  }, {
    ...t
  }) : t;
}
function ak(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function lk(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : yr(18, `(${t})`));
    return null;
  }
  const [, r, o] = n, s = Number.isNaN(+r) ? r || 0 : +r;
  return e.containerQueries(o).up(s);
}
function ck(e) {
  const t = (s, a) => s.replace("@media", a ? `@container ${a}` : "@container");
  function n(s, a) {
    s.up = (...l) => t(e.breakpoints.up(...l), a), s.down = (...l) => t(e.breakpoints.down(...l), a), s.between = (...l) => t(e.breakpoints.between(...l), a), s.only = (...l) => t(e.breakpoints.only(...l), a), s.not = (...l) => {
      const c = t(e.breakpoints.not(...l), a);
      return c.includes("not all and") ? c.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : c;
    };
  }
  const r = {}, o = (s) => (n(r, s), r);
  return n(o), {
    ...e,
    containerQueries: o
  };
}
const uk = {
  borderRadius: 4
}, Zr = process.env.NODE_ENV !== "production" ? i.oneOfType([i.number, i.string, i.object, i.array]) : {};
function Ui(e, t) {
  return t ? nn(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const Tl = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, om = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${Tl[e]}px)`
}, dk = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : Tl[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function Ir(e, t, n) {
  const r = e.theme || {};
  if (Array.isArray(t)) {
    const s = r.breakpoints || om;
    return t.reduce((a, l, c) => (a[s.up(s.keys[c])] = n(t[c]), a), {});
  }
  if (typeof t == "object") {
    const s = r.breakpoints || om;
    return Object.keys(t).reduce((a, l) => {
      if (ak(s.keys, l)) {
        const c = lk(r.containerQueries ? r : dk, l);
        c && (a[c] = n(t[l], l));
      } else if (Object.keys(s.values || Tl).includes(l)) {
        const c = s.up(l);
        a[c] = n(t[l], l);
      } else {
        const c = l;
        a[c] = t[c];
      }
      return a;
    }, {});
  }
  return n(t);
}
function fk(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((r, o) => {
    const s = e.up(o);
    return r[s] = {}, r;
  }, {})) || {};
}
function pk(e, t) {
  return e.reduce((n, r) => {
    const o = n[r];
    return (!o || Object.keys(o).length === 0) && delete n[r], n;
  }, t);
}
function Mt(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : yr(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function El(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const r = `vars.${t}`.split(".").reduce((o, s) => o && o[s] ? o[s] : null, e);
    if (r != null)
      return r;
  }
  return t.split(".").reduce((r, o) => r && r[o] != null ? r[o] : null, e);
}
function $a(e, t, n, r = n) {
  let o;
  return typeof e == "function" ? o = e(n) : Array.isArray(e) ? o = e[n] || r : o = El(e, n) || r, t && (o = t(o, r, e)), o;
}
function Dt(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: r,
    transform: o
  } = e, s = (a) => {
    if (a[t] == null)
      return null;
    const l = a[t], c = a.theme, u = El(c, r) || {};
    return Ir(a, l, (f) => {
      let h = $a(u, o, f);
      return f === h && typeof f == "string" && (h = $a(u, o, `${t}${f === "default" ? "" : Mt(f)}`, f)), n === !1 ? h : {
        [n]: h
      };
    });
  };
  return s.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: Zr
  } : {}, s.filterProps = [t], s;
}
function mk(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const hk = {
  m: "margin",
  p: "padding"
}, gk = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, im = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, yk = mk((e) => {
  if (e.length > 2)
    if (im[e])
      e = im[e];
    else
      return [e];
  const [t, n] = e.split(""), r = hk[t], o = gk[n] || "";
  return Array.isArray(o) ? o.map((s) => r + s) : [r + o];
}), Cl = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], Ol = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], bk = [...Cl, ...Ol];
function xs(e, t, n, r) {
  const o = El(e, t, !0) ?? n;
  return typeof o == "number" || typeof o == "string" ? (s) => typeof s == "string" ? s : (process.env.NODE_ENV !== "production" && typeof s != "number" && console.error(`MUI: Expected ${r} argument to be a number or a string, got ${s}.`), typeof o == "string" ? o.startsWith("var(") && s === 0 ? 0 : o.startsWith("var(") && s === 1 ? o : `calc(${s} * ${o})` : o * s) : Array.isArray(o) ? (s) => {
    if (typeof s == "string")
      return s;
    const a = Math.abs(s);
    process.env.NODE_ENV !== "production" && (Number.isInteger(a) ? a > o.length - 1 && console.error([`MUI: The value provided (${a}) overflows.`, `The supported values are: ${JSON.stringify(o)}.`, `${a} > ${o.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const l = o[a];
    return s >= 0 ? l : typeof l == "number" ? -l : typeof l == "string" && l.startsWith("var(") ? `calc(-1 * ${l})` : `-${l}`;
  } : typeof o == "function" ? o : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${o}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function Md(e) {
  return xs(e, "spacing", 8, "spacing");
}
function ws(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function vk(e, t) {
  return (n) => e.reduce((r, o) => (r[o] = ws(t, n), r), {});
}
function xk(e, t, n, r) {
  if (!t.includes(n))
    return null;
  const o = yk(n), s = vk(o, r), a = e[n];
  return Ir(e, a, s);
}
function Zy(e, t) {
  const n = Md(e.theme);
  return Object.keys(e).map((r) => xk(e, t, r, n)).reduce(Ui, {});
}
function kt(e) {
  return Zy(e, Cl);
}
kt.propTypes = process.env.NODE_ENV !== "production" ? Cl.reduce((e, t) => (e[t] = Zr, e), {}) : {};
kt.filterProps = Cl;
function $t(e) {
  return Zy(e, Ol);
}
$t.propTypes = process.env.NODE_ENV !== "production" ? Ol.reduce((e, t) => (e[t] = Zr, e), {}) : {};
$t.filterProps = Ol;
process.env.NODE_ENV !== "production" && bk.reduce((e, t) => (e[t] = Zr, e), {});
function eb(e = 8, t = Md({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...r) => (process.env.NODE_ENV !== "production" && (r.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${r.length}`)), (r.length === 0 ? [1] : r).map((s) => {
    const a = t(s);
    return typeof a == "number" ? `${a}px` : a;
  }).join(" "));
  return n.mui = !0, n;
}
function Rl(...e) {
  const t = e.reduce((r, o) => (o.filterProps.forEach((s) => {
    r[s] = o;
  }), r), {}), n = (r) => Object.keys(r).reduce((o, s) => t[s] ? Ui(o, t[s](r)) : o, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((r, o) => Object.assign(r, o.propTypes), {}) : {}, n.filterProps = e.reduce((r, o) => r.concat(o.filterProps), []), n;
}
function Nn(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function Ln(e, t) {
  return Dt({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const wk = Ln("border", Nn), Sk = Ln("borderTop", Nn), Tk = Ln("borderRight", Nn), Ek = Ln("borderBottom", Nn), Ck = Ln("borderLeft", Nn), Ok = Ln("borderColor"), Rk = Ln("borderTopColor"), kk = Ln("borderRightColor"), $k = Ln("borderBottomColor"), Pk = Ln("borderLeftColor"), Ik = Ln("outline", Nn), Nk = Ln("outlineColor"), kl = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = xs(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (r) => ({
      borderRadius: ws(t, r)
    });
    return Ir(e, e.borderRadius, n);
  }
  return null;
};
kl.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: Zr
} : {};
kl.filterProps = ["borderRadius"];
Rl(wk, Sk, Tk, Ek, Ck, Ok, Rk, kk, $k, Pk, kl, Ik, Nk);
const $l = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = xs(e.theme, "spacing", 8, "gap"), n = (r) => ({
      gap: ws(t, r)
    });
    return Ir(e, e.gap, n);
  }
  return null;
};
$l.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: Zr
} : {};
$l.filterProps = ["gap"];
const Pl = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = xs(e.theme, "spacing", 8, "columnGap"), n = (r) => ({
      columnGap: ws(t, r)
    });
    return Ir(e, e.columnGap, n);
  }
  return null;
};
Pl.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: Zr
} : {};
Pl.filterProps = ["columnGap"];
const Il = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = xs(e.theme, "spacing", 8, "rowGap"), n = (r) => ({
      rowGap: ws(t, r)
    });
    return Ir(e, e.rowGap, n);
  }
  return null;
};
Il.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: Zr
} : {};
Il.filterProps = ["rowGap"];
const Ak = Dt({
  prop: "gridColumn"
}), Mk = Dt({
  prop: "gridRow"
}), _k = Dt({
  prop: "gridAutoFlow"
}), Dk = Dt({
  prop: "gridAutoColumns"
}), Bk = Dt({
  prop: "gridAutoRows"
}), Fk = Dt({
  prop: "gridTemplateColumns"
}), jk = Dt({
  prop: "gridTemplateRows"
}), Lk = Dt({
  prop: "gridTemplateAreas"
}), Vk = Dt({
  prop: "gridArea"
});
Rl($l, Pl, Il, Ak, Mk, _k, Dk, Bk, Fk, jk, Lk, Vk);
function Lo(e, t) {
  return t === "grey" ? t : e;
}
const zk = Dt({
  prop: "color",
  themeKey: "palette",
  transform: Lo
}), Wk = Dt({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: Lo
}), Uk = Dt({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: Lo
});
Rl(zk, Wk, Uk);
function Sn(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const Hk = Dt({
  prop: "width",
  transform: Sn
}), _d = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var o, s, a, l, c;
      const r = ((a = (s = (o = e.theme) == null ? void 0 : o.breakpoints) == null ? void 0 : s.values) == null ? void 0 : a[n]) || Tl[n];
      return r ? ((c = (l = e.theme) == null ? void 0 : l.breakpoints) == null ? void 0 : c.unit) !== "px" ? {
        maxWidth: `${r}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: r
      } : {
        maxWidth: Sn(n)
      };
    };
    return Ir(e, e.maxWidth, t);
  }
  return null;
};
_d.filterProps = ["maxWidth"];
const qk = Dt({
  prop: "minWidth",
  transform: Sn
}), Yk = Dt({
  prop: "height",
  transform: Sn
}), Gk = Dt({
  prop: "maxHeight",
  transform: Sn
}), Kk = Dt({
  prop: "minHeight",
  transform: Sn
});
Dt({
  prop: "size",
  cssProperty: "width",
  transform: Sn
});
Dt({
  prop: "size",
  cssProperty: "height",
  transform: Sn
});
const Xk = Dt({
  prop: "boxSizing"
});
Rl(Hk, _d, qk, Yk, Gk, Kk, Xk);
const Ss = {
  // borders
  border: {
    themeKey: "borders",
    transform: Nn
  },
  borderTop: {
    themeKey: "borders",
    transform: Nn
  },
  borderRight: {
    themeKey: "borders",
    transform: Nn
  },
  borderBottom: {
    themeKey: "borders",
    transform: Nn
  },
  borderLeft: {
    themeKey: "borders",
    transform: Nn
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: Nn
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: kl
  },
  // palette
  color: {
    themeKey: "palette",
    transform: Lo
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: Lo
  },
  backgroundColor: {
    themeKey: "palette",
    transform: Lo
  },
  // spacing
  p: {
    style: $t
  },
  pt: {
    style: $t
  },
  pr: {
    style: $t
  },
  pb: {
    style: $t
  },
  pl: {
    style: $t
  },
  px: {
    style: $t
  },
  py: {
    style: $t
  },
  padding: {
    style: $t
  },
  paddingTop: {
    style: $t
  },
  paddingRight: {
    style: $t
  },
  paddingBottom: {
    style: $t
  },
  paddingLeft: {
    style: $t
  },
  paddingX: {
    style: $t
  },
  paddingY: {
    style: $t
  },
  paddingInline: {
    style: $t
  },
  paddingInlineStart: {
    style: $t
  },
  paddingInlineEnd: {
    style: $t
  },
  paddingBlock: {
    style: $t
  },
  paddingBlockStart: {
    style: $t
  },
  paddingBlockEnd: {
    style: $t
  },
  m: {
    style: kt
  },
  mt: {
    style: kt
  },
  mr: {
    style: kt
  },
  mb: {
    style: kt
  },
  ml: {
    style: kt
  },
  mx: {
    style: kt
  },
  my: {
    style: kt
  },
  margin: {
    style: kt
  },
  marginTop: {
    style: kt
  },
  marginRight: {
    style: kt
  },
  marginBottom: {
    style: kt
  },
  marginLeft: {
    style: kt
  },
  marginX: {
    style: kt
  },
  marginY: {
    style: kt
  },
  marginInline: {
    style: kt
  },
  marginInlineStart: {
    style: kt
  },
  marginInlineEnd: {
    style: kt
  },
  marginBlock: {
    style: kt
  },
  marginBlockStart: {
    style: kt
  },
  marginBlockEnd: {
    style: kt
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: $l
  },
  rowGap: {
    style: Il
  },
  columnGap: {
    style: Pl
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: Sn
  },
  maxWidth: {
    style: _d
  },
  minWidth: {
    transform: Sn
  },
  height: {
    transform: Sn
  },
  maxHeight: {
    transform: Sn
  },
  minHeight: {
    transform: Sn
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function Qk(...e) {
  const t = e.reduce((r, o) => r.concat(Object.keys(o)), []), n = new Set(t);
  return e.every((r) => n.size === Object.keys(r).length);
}
function Jk(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function Zk() {
  function e(n, r, o, s) {
    const a = {
      [n]: r,
      theme: o
    }, l = s[n];
    if (!l)
      return {
        [n]: r
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: d,
      style: f
    } = l;
    if (r == null)
      return null;
    if (u === "typography" && r === "inherit")
      return {
        [n]: r
      };
    const h = El(o, u) || {};
    return f ? f(a) : Ir(a, r, (y) => {
      let m = $a(h, d, y);
      return y === m && typeof y == "string" && (m = $a(h, d, `${n}${y === "default" ? "" : Mt(y)}`, y)), c === !1 ? m : {
        [c]: m
      };
    });
  }
  function t(n) {
    const {
      sx: r,
      theme: o = {}
    } = n || {};
    if (!r)
      return null;
    const s = o.unstable_sxConfig ?? Ss;
    function a(l) {
      let c = l;
      if (typeof l == "function")
        c = l(o);
      else if (typeof l != "object")
        return l;
      if (!c)
        return null;
      const u = fk(o.breakpoints), d = Object.keys(u);
      let f = u;
      return Object.keys(c).forEach((h) => {
        const g = Jk(c[h], o);
        if (g != null)
          if (typeof g == "object")
            if (s[h])
              f = Ui(f, e(h, g, o, s));
            else {
              const y = Ir({
                theme: o
              }, g, (m) => ({
                [h]: m
              }));
              Qk(y, g) ? f[h] = t({
                sx: g,
                theme: o
              }) : f = Ui(f, y);
            }
          else
            f = Ui(f, e(h, g, o, s));
      }), sk(o, pk(d, f));
    }
    return Array.isArray(r) ? r.map(a) : a(r);
  }
  return t;
}
const mo = Zk();
mo.filterProps = ["sx"];
function e$(e, t) {
  var r;
  const n = this;
  if (n.vars) {
    if (!((r = n.colorSchemes) != null && r[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let o = n.getColorSchemeSelector(e);
    return o === "&" ? t : ((o.includes("data-") || o.includes(".")) && (o = `*:where(${o.replace(/\s*&$/, "")}) &`), {
      [o]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function Dd(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: r = {},
    spacing: o,
    shape: s = {},
    ...a
  } = e, l = ik(n), c = eb(o);
  let u = nn({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...r
    },
    spacing: c,
    shape: {
      ...uk,
      ...s
    }
  }, a);
  return u = ck(u), u.applyStyles = e$, u = t.reduce((d, f) => nn(d, f), u), u.unstable_sxConfig = {
    ...Ss,
    ...a == null ? void 0 : a.unstable_sxConfig
  }, u.unstable_sx = function(f) {
    return mo({
      sx: f,
      theme: this
    });
  }, u;
}
function t$(e) {
  return Object.keys(e).length === 0;
}
function n$(e = null) {
  const t = C.useContext(oi);
  return !t || t$(t) ? e : t;
}
const r$ = Dd();
function Bd(e = r$) {
  return n$(e);
}
function tb({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const r = Bd(n), o = typeof e == "function" ? e(t && r[t] || r) : e;
  return /* @__PURE__ */ P(Xy, {
    styles: o
  });
}
process.env.NODE_ENV !== "production" && (tb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: i.object,
  /**
   * @ignore
   */
  styles: i.oneOfType([i.array, i.func, i.number, i.object, i.string, i.bool]),
  /**
   * @ignore
   */
  themeId: i.string
});
const o$ = (e) => {
  var r;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((r = e == null ? void 0 : e.theme) == null ? void 0 : r.unstable_sxConfig) ?? Ss;
  return Object.keys(e).forEach((o) => {
    n[o] ? t.systemProps[o] = e[o] : t.otherProps[o] = e[o];
  }), t;
};
function i$(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: r,
    otherProps: o
  } = o$(n);
  let s;
  return Array.isArray(t) ? s = [r, ...t] : typeof t == "function" ? s = (...a) => {
    const l = t(...a);
    return sr(l) ? {
      ...r,
      ...l
    } : r;
  } : s = {
    ...r,
    ...t
  }, {
    ...o,
    sx: s
  };
}
const sm = (e) => e, s$ = () => {
  let e = sm;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = sm;
    }
  };
}, nb = s$();
function a$(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: r = "MuiBox-root",
    generateClassName: o
  } = e, s = Qy("div", {
    shouldForwardProp: (l) => l !== "theme" && l !== "sx" && l !== "as"
  })(mo);
  return /* @__PURE__ */ C.forwardRef(function(c, u) {
    const d = Bd(n), {
      className: f,
      component: h = "div",
      ...g
    } = i$(c);
    return /* @__PURE__ */ P(s, {
      as: h,
      ref: u,
      className: Ee(f, o ? o(r) : r),
      theme: t && d[t] || d,
      ...g
    });
  });
}
const l$ = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function Lt(e, t, n = "Mui") {
  const r = l$[t];
  return r ? `${n}-${r}` : `${nb.generate(e)}-${t}`;
}
function Ut(e, t, n = "Mui") {
  const r = {};
  return t.forEach((o) => {
    r[o] = Lt(e, o, n);
  }), r;
}
function rb(e, t = "") {
  return e.displayName || e.name || t;
}
function am(e, t, n) {
  const r = rb(t);
  return e.displayName || (r !== "" ? `${n}(${r})` : n);
}
function c$(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return rb(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case Yn.ForwardRef:
          return am(e, e.render, "ForwardRef");
        case Yn.Memo:
          return am(e, e.type, "memo");
        default:
          return;
      }
  }
}
function ob(e) {
  const {
    variants: t,
    ...n
  } = e, r = {
    variants: t,
    style: rm(n),
    isProcessed: !0
  };
  return r.style === n || t && t.forEach((o) => {
    typeof o.style != "function" && (o.style = rm(o.style));
  }), r;
}
const u$ = Dd();
function mc(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function d$(e) {
  return e ? (t, n) => n[e] : null;
}
function f$(e, t, n) {
  e.theme = g$(e.theme) ? n : e.theme[t] || e.theme;
}
function la(e, t) {
  const n = typeof t == "function" ? t(e) : t;
  if (Array.isArray(n))
    return n.flatMap((r) => la(e, r));
  if (Array.isArray(n == null ? void 0 : n.variants)) {
    let r;
    if (n.isProcessed)
      r = n.style;
    else {
      const {
        variants: o,
        ...s
      } = n;
      r = s;
    }
    return ib(e, n.variants, [r]);
  }
  return n != null && n.isProcessed ? n.style : n;
}
function ib(e, t, n = []) {
  var o;
  let r;
  e: for (let s = 0; s < t.length; s += 1) {
    const a = t[s];
    if (typeof a.props == "function") {
      if (r ?? (r = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !a.props(r))
        continue;
    } else
      for (const l in a.props)
        if (e[l] !== a.props[l] && ((o = e.ownerState) == null ? void 0 : o[l]) !== a.props[l])
          continue e;
    typeof a.style == "function" ? (r ?? (r = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(a.style(r))) : n.push(a.style);
  }
  return n;
}
function p$(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = u$,
    rootShouldForwardProp: r = mc,
    slotShouldForwardProp: o = mc
  } = e;
  function s(l) {
    f$(l, t, n);
  }
  return (l, c = {}) => {
    rk(l, (v) => v.filter((T) => T !== mo));
    const {
      name: u,
      slot: d,
      skipVariantsResolver: f,
      skipSx: h,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: g = d$(sb(d)),
      ...y
    } = c, m = f !== void 0 ? f : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      d && d !== "Root" && d !== "root" || !1
    ), b = h || !1;
    let x = mc;
    d === "Root" || d === "root" ? x = r : d ? x = o : y$(l) && (x = void 0);
    const E = Qy(l, {
      shouldForwardProp: x,
      label: h$(u, d),
      ...y
    }), w = (v) => {
      if (typeof v == "function" && v.__emotion_real !== v)
        return function(R) {
          return la(R, v);
        };
      if (sr(v)) {
        const T = ob(v);
        return T.variants ? function(k) {
          return la(k, T);
        } : T.style;
      }
      return v;
    }, S = (...v) => {
      const T = [], R = v.map(w), k = [];
      if (T.push(s), u && g && k.push(function($) {
        var M, V;
        const D = (V = (M = $.theme.components) == null ? void 0 : M[u]) == null ? void 0 : V.styleOverrides;
        if (!D)
          return null;
        const _ = {};
        for (const Y in D)
          _[Y] = la($, D[Y]);
        return g($, _);
      }), u && !m && k.push(function($) {
        var _, M;
        const A = $.theme, D = (M = (_ = A == null ? void 0 : A.components) == null ? void 0 : _[u]) == null ? void 0 : M.variants;
        return D ? ib($, D) : null;
      }), b || k.push(mo), Array.isArray(R[0])) {
        const O = R.shift(), $ = new Array(T.length).fill(""), A = new Array(k.length).fill("");
        let D;
        D = [...$, ...O, ...A], D.raw = [...$, ...O.raw, ...A], T.unshift(D);
      }
      const I = [...T, ...R, ...k], p = E(...I);
      return l.muiName && (p.muiName = l.muiName), process.env.NODE_ENV !== "production" && (p.displayName = m$(u, d, l)), p;
    };
    return E.withConfig && (S.withConfig = E.withConfig), S;
  };
}
function m$(e, t, n) {
  return e ? `${e}${Mt(t || "")}` : `Styled(${c$(n)})`;
}
function h$(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${sb(t || "Root")}`), n;
}
function g$(e) {
  for (const t in e)
    return !1;
  return !0;
}
function y$(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function sb(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
function lu(e, t) {
  const n = {
    ...t
  };
  for (const r in e)
    if (Object.prototype.hasOwnProperty.call(e, r)) {
      const o = r;
      if (o === "components" || o === "slots")
        n[o] = {
          ...e[o],
          ...n[o]
        };
      else if (o === "componentsProps" || o === "slotProps") {
        const s = e[o], a = t[o];
        if (!a)
          n[o] = s || {};
        else if (!s)
          n[o] = a;
        else {
          n[o] = {
            ...a
          };
          for (const l in s)
            if (Object.prototype.hasOwnProperty.call(s, l)) {
              const c = l;
              n[o][c] = lu(s[c], a[c]);
            }
        }
      } else n[o] === void 0 && (n[o] = e[o]);
    }
  return n;
}
const ho = typeof window < "u" ? C.useLayoutEffect : C.useEffect;
function b$(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function Fd(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), b$(e, t, n);
}
function v$(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((r) => r + r)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((r, o) => o < 3 ? parseInt(r, 16) : Math.round(parseInt(r, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function Ur(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return Ur(v$(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : yr(9, e));
  let r = e.substring(t + 1, e.length - 1), o;
  if (n === "color") {
    if (r = r.split(" "), o = r.shift(), r.length === 4 && r[3].charAt(0) === "/" && (r[3] = r[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(o))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${o}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : yr(10, o));
  } else
    r = r.split(",");
  return r = r.map((s) => parseFloat(s)), {
    type: n,
    values: r,
    colorSpace: o
  };
}
const x$ = (e) => {
  const t = Ur(e);
  return t.values.slice(0, 3).map((n, r) => t.type.includes("hsl") && r !== 0 ? `${n}%` : n).join(" ");
}, Ai = (e, t) => {
  try {
    return x$(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function Nl(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: r
  } = e;
  return t.includes("rgb") ? r = r.map((o, s) => s < 3 ? parseInt(o, 10) : o) : t.includes("hsl") && (r[1] = `${r[1]}%`, r[2] = `${r[2]}%`), t.includes("color") ? r = `${n} ${r.join(" ")}` : r = `${r.join(", ")}`, `${t}(${r})`;
}
function ab(e) {
  e = Ur(e);
  const {
    values: t
  } = e, n = t[0], r = t[1] / 100, o = t[2] / 100, s = r * Math.min(o, 1 - o), a = (u, d = (u + n / 30) % 12) => o - s * Math.max(Math.min(d - 3, 9 - d, 1), -1);
  let l = "rgb";
  const c = [Math.round(a(0) * 255), Math.round(a(8) * 255), Math.round(a(4) * 255)];
  return e.type === "hsla" && (l += "a", c.push(t[3])), Nl({
    type: l,
    values: c
  });
}
function cu(e) {
  e = Ur(e);
  let t = e.type === "hsl" || e.type === "hsla" ? Ur(ab(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function lm(e, t) {
  const n = cu(e), r = cu(t);
  return (Math.max(n, r) + 0.05) / (Math.min(n, r) + 0.05);
}
function uu(e, t) {
  return e = Ur(e), t = Fd(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, Nl(e);
}
function Hs(e, t, n) {
  try {
    return uu(e, t);
  } catch {
    return e;
  }
}
function jd(e, t) {
  if (e = Ur(e), t = Fd(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return Nl(e);
}
function ut(e, t, n) {
  try {
    return jd(e, t);
  } catch {
    return e;
  }
}
function Ld(e, t) {
  if (e = Ur(e), t = Fd(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return Nl(e);
}
function dt(e, t, n) {
  try {
    return Ld(e, t);
  } catch {
    return e;
  }
}
function w$(e, t = 0.15) {
  return cu(e) > 0.5 ? jd(e, t) : Ld(e, t);
}
function qs(e, t, n) {
  try {
    return w$(e, t);
  } catch {
    return e;
  }
}
const S$ = "exact-prop: ​";
function lb(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [S$]: (t) => {
      const n = Object.keys(t).filter((r) => !e.hasOwnProperty(r));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((r) => `\`${r}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
const T$ = /* @__PURE__ */ C.createContext();
process.env.NODE_ENV !== "production" && (i.node, i.bool);
const E$ = () => C.useContext(T$) ?? !1, C$ = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (i.node, i.object);
function O$(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  if (!t || !t.components || !t.components[n])
    return r;
  const o = t.components[n];
  return o.defaultProps ? lu(o.defaultProps, r) : !o.styleOverrides && !o.variants ? lu(o, r) : r;
}
function R$({
  props: e,
  name: t
}) {
  const n = C.useContext(C$);
  return O$({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
const cm = {
  theme: void 0
};
function k$(e) {
  let t, n;
  return function(o) {
    let s = t;
    return (s === void 0 || o.theme !== n) && (cm.theme = o.theme, s = ob(e(cm)), t = s, n = o.theme), s;
  };
}
function $$(e = "") {
  function t(...r) {
    if (!r.length)
      return "";
    const o = r[0];
    return typeof o == "string" && !o.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${o}${t(...r.slice(1))})` : `, ${o}`;
  }
  return (r, ...o) => `var(--${e ? `${e}-` : ""}${r}${t(...o)})`;
}
const um = (e, t, n, r = []) => {
  let o = e;
  t.forEach((s, a) => {
    a === t.length - 1 ? Array.isArray(o) ? o[Number(s)] = n : o && typeof o == "object" && (o[s] = n) : o && typeof o == "object" && (o[s] || (o[s] = r.includes(s) ? [] : {}), o = o[s]);
  });
}, P$ = (e, t, n) => {
  function r(o, s = [], a = []) {
    Object.entries(o).forEach(([l, c]) => {
      (!n || n && !n([...s, l])) && c != null && (typeof c == "object" && Object.keys(c).length > 0 ? r(c, [...s, l], Array.isArray(c) ? [...a, l] : a) : t([...s, l], c, a));
    });
  }
  r(e);
}, I$ = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((r) => e.includes(r)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function hc(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: r
  } = t || {}, o = {}, s = {}, a = {};
  return P$(
    e,
    (l, c, u) => {
      if ((typeof c == "string" || typeof c == "number") && (!r || !r(l, c))) {
        const d = `--${n ? `${n}-` : ""}${l.join("-")}`, f = I$(l, c);
        Object.assign(o, {
          [d]: f
        }), um(s, l, `var(${d})`, u), um(a, l, `var(${d}, ${f})`, u);
      }
    },
    (l) => l[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: o,
    vars: s,
    varsWithDefaults: a
  };
}
function N$(e, t = {}) {
  const {
    getSelector: n = b,
    disableCssColorScheme: r,
    colorSchemeSelector: o
  } = t, {
    colorSchemes: s = {},
    components: a,
    defaultColorScheme: l = "light",
    ...c
  } = e, {
    vars: u,
    css: d,
    varsWithDefaults: f
  } = hc(c, t);
  let h = f;
  const g = {}, {
    [l]: y,
    ...m
  } = s;
  if (Object.entries(m || {}).forEach(([w, S]) => {
    const {
      vars: v,
      css: T,
      varsWithDefaults: R
    } = hc(S, t);
    h = nn(h, R), g[w] = {
      css: T,
      vars: v
    };
  }), y) {
    const {
      css: w,
      vars: S,
      varsWithDefaults: v
    } = hc(y, t);
    h = nn(h, v), g[l] = {
      css: w,
      vars: S
    };
  }
  function b(w, S) {
    var T, R;
    let v = o;
    if (o === "class" && (v = ".%s"), o === "data" && (v = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (v = `[${o}="%s"]`), w) {
      if (v === "media")
        return e.defaultColorScheme === w ? ":root" : {
          [`@media (prefers-color-scheme: ${((R = (T = s[w]) == null ? void 0 : T.palette) == null ? void 0 : R.mode) || w})`]: {
            ":root": S
          }
        };
      if (v)
        return e.defaultColorScheme === w ? `:root, ${v.replace("%s", String(w))}` : v.replace("%s", String(w));
    }
    return ":root";
  }
  return {
    vars: h,
    generateThemeVars: () => {
      let w = {
        ...u
      };
      return Object.entries(g).forEach(([, {
        vars: S
      }]) => {
        w = nn(w, S);
      }), w;
    },
    generateStyleSheets: () => {
      var k, I;
      const w = [], S = e.defaultColorScheme || "light";
      function v(p, O) {
        Object.keys(O).length && w.push(typeof p == "string" ? {
          [p]: {
            ...O
          }
        } : p);
      }
      v(n(void 0, {
        ...d
      }), d);
      const {
        [S]: T,
        ...R
      } = g;
      if (T) {
        const {
          css: p
        } = T, O = (I = (k = s[S]) == null ? void 0 : k.palette) == null ? void 0 : I.mode, $ = !r && O ? {
          colorScheme: O,
          ...p
        } : {
          ...p
        };
        v(n(S, {
          ...$
        }), $);
      }
      return Object.entries(R).forEach(([p, {
        css: O
      }]) => {
        var D, _;
        const $ = (_ = (D = s[p]) == null ? void 0 : D.palette) == null ? void 0 : _.mode, A = !r && $ ? {
          colorScheme: $,
          ...O
        } : {
          ...O
        };
        v(n(p, {
          ...A
        }), A);
      }), w;
    }
  };
}
function A$(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
function Ht(e, t, n = void 0) {
  const r = {};
  for (const o in e) {
    const s = e[o];
    let a = "", l = !0;
    for (let c = 0; c < s.length; c += 1) {
      const u = s[c];
      u && (a += (l === !0 ? "" : " ") + t(u), l = !1, n && n[u] && (a += " " + n[u]));
    }
    r[o] = a;
  }
  return r;
}
function gc(e, t) {
  var n, r, o;
  return /* @__PURE__ */ C.isValidElement(e) && t.indexOf(
    // For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    e.type.muiName ?? ((o = (r = (n = e.type) == null ? void 0 : n._payload) == null ? void 0 : r.value) == null ? void 0 : o.muiName)
  ) !== -1;
}
const ls = {
  black: "#000",
  white: "#fff"
}, M$ = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, Oo = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, Ro = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, wi = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, ko = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, $o = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, Po = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
};
function cb() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: ls.white,
      default: ls.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const _$ = cb();
function ub() {
  return {
    text: {
      primary: ls.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: ls.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const dm = ub();
function fm(e, t, n, r) {
  const o = r.light || r, s = r.dark || r * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = Ld(e.main, o) : t === "dark" && (e.dark = jd(e.main, s)));
}
function D$(e = "light") {
  return e === "dark" ? {
    main: ko[200],
    light: ko[50],
    dark: ko[400]
  } : {
    main: ko[700],
    light: ko[400],
    dark: ko[800]
  };
}
function B$(e = "light") {
  return e === "dark" ? {
    main: Oo[200],
    light: Oo[50],
    dark: Oo[400]
  } : {
    main: Oo[500],
    light: Oo[300],
    dark: Oo[700]
  };
}
function F$(e = "light") {
  return e === "dark" ? {
    main: Ro[500],
    light: Ro[300],
    dark: Ro[700]
  } : {
    main: Ro[700],
    light: Ro[400],
    dark: Ro[800]
  };
}
function j$(e = "light") {
  return e === "dark" ? {
    main: $o[400],
    light: $o[300],
    dark: $o[700]
  } : {
    main: $o[700],
    light: $o[500],
    dark: $o[900]
  };
}
function L$(e = "light") {
  return e === "dark" ? {
    main: Po[400],
    light: Po[300],
    dark: Po[700]
  } : {
    main: Po[800],
    light: Po[500],
    dark: Po[900]
  };
}
function V$(e = "light") {
  return e === "dark" ? {
    main: wi[400],
    light: wi[300],
    dark: wi[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: wi[500],
    dark: wi[900]
  };
}
function Vd(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: r = 0.2,
    ...o
  } = e, s = e.primary || D$(t), a = e.secondary || B$(t), l = e.error || F$(t), c = e.info || j$(t), u = e.success || L$(t), d = e.warning || V$(t);
  function f(m) {
    const b = lm(m, dm.text.primary) >= n ? dm.text.primary : _$.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const x = lm(m, b);
      x < 3 && console.error([`MUI: The contrast ratio of ${x}:1 for ${b} on ${m}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return b;
  }
  const h = ({
    color: m,
    name: b,
    mainShade: x = 500,
    lightShade: E = 300,
    darkShade: w = 700
  }) => {
    if (m = {
      ...m
    }, !m.main && m[x] && (m.main = m[x]), !m.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${b ? ` (${b})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${x}\` property.` : yr(11, b ? ` (${b})` : "", x));
    if (typeof m.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${b ? ` (${b})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(m.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : yr(12, b ? ` (${b})` : "", JSON.stringify(m.main)));
    return fm(m, "light", E, r), fm(m, "dark", w, r), m.contrastText || (m.contrastText = f(m.main)), m;
  };
  let g;
  return t === "light" ? g = cb() : t === "dark" && (g = ub()), process.env.NODE_ENV !== "production" && (g || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), nn({
    // A collection of common colors.
    common: {
      ...ls
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: h({
      color: s,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: h({
      color: a,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: h({
      color: l,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: h({
      color: d,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: h({
      color: c,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: h({
      color: u,
      name: "success"
    }),
    // The grey colors.
    grey: M$,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: f,
    // Generate a rich color object.
    augmentColor: h,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: r,
    // The light and dark mode object.
    ...g
  }, o);
}
function z$(e) {
  const t = {};
  return Object.entries(e).forEach((r) => {
    const [o, s] = r;
    typeof s == "object" && (t[o] = `${s.fontStyle ? `${s.fontStyle} ` : ""}${s.fontVariant ? `${s.fontVariant} ` : ""}${s.fontWeight ? `${s.fontWeight} ` : ""}${s.fontStretch ? `${s.fontStretch} ` : ""}${s.fontSize || ""}${s.lineHeight ? `/${s.lineHeight} ` : ""}${s.fontFamily || ""}`);
  }), t;
}
function W$(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function U$(e) {
  return Math.round(e * 1e5) / 1e5;
}
const pm = {
  textTransform: "uppercase"
}, mm = '"Roboto", "Helvetica", "Arial", sans-serif';
function H$(e, t) {
  const {
    fontFamily: n = mm,
    // The default font size of the Material Specification.
    fontSize: r = 14,
    // px
    fontWeightLight: o = 300,
    fontWeightRegular: s = 400,
    fontWeightMedium: a = 500,
    fontWeightBold: l = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: c = 16,
    // Apply the CSS properties to all the variants.
    allVariants: u,
    pxToRem: d,
    ...f
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof r != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof c != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const h = r / 14, g = d || ((b) => `${b / c * h}rem`), y = (b, x, E, w, S) => ({
    fontFamily: n,
    fontWeight: b,
    fontSize: g(x),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: E,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === mm ? {
      letterSpacing: `${U$(w / x)}em`
    } : {},
    ...S,
    ...u
  }), m = {
    h1: y(o, 96, 1.167, -1.5),
    h2: y(o, 60, 1.2, -0.5),
    h3: y(s, 48, 1.167, 0),
    h4: y(s, 34, 1.235, 0.25),
    h5: y(s, 24, 1.334, 0),
    h6: y(a, 20, 1.6, 0.15),
    subtitle1: y(s, 16, 1.75, 0.15),
    subtitle2: y(a, 14, 1.57, 0.1),
    body1: y(s, 16, 1.5, 0.15),
    body2: y(s, 14, 1.43, 0.15),
    button: y(a, 14, 1.75, 0.4, pm),
    caption: y(s, 12, 1.66, 0.4),
    overline: y(s, 12, 2.66, 1, pm),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return nn({
    htmlFontSize: c,
    pxToRem: g,
    fontFamily: n,
    fontSize: r,
    fontWeightLight: o,
    fontWeightRegular: s,
    fontWeightMedium: a,
    fontWeightBold: l,
    ...m
  }, f, {
    clone: !1
    // No need to clone deep
  });
}
const q$ = 0.2, Y$ = 0.14, G$ = 0.12;
function vt(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${q$})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${Y$})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${G$})`].join(",");
}
const K$ = ["none", vt(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), vt(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), vt(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), vt(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), vt(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), vt(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), vt(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), vt(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), vt(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), vt(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), vt(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), vt(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), vt(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), vt(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), vt(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), vt(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), vt(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), vt(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), vt(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), vt(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), vt(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), vt(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), vt(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), vt(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], X$ = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, Q$ = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function hm(e) {
  return `${Math.round(e)}ms`;
}
function J$(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function Z$(e) {
  const t = {
    ...X$,
    ...e.easing
  }, n = {
    ...Q$,
    ...e.duration
  };
  return {
    getAutoHeightDuration: J$,
    create: (o = ["all"], s = {}) => {
      const {
        duration: a = n.standard,
        easing: l = t.easeInOut,
        delay: c = 0,
        ...u
      } = s;
      if (process.env.NODE_ENV !== "production") {
        const d = (h) => typeof h == "string", f = (h) => !Number.isNaN(parseFloat(h));
        !d(o) && !Array.isArray(o) && console.error('MUI: Argument "props" must be a string or Array.'), !f(a) && !d(a) && console.error(`MUI: Argument "duration" must be a number or a string but found ${a}.`), d(l) || console.error('MUI: Argument "easing" must be a string.'), !f(c) && !d(c) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof s != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(u).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(u).join(",")}].`);
      }
      return (Array.isArray(o) ? o : [o]).map((d) => `${d} ${typeof a == "string" ? a : hm(a)} ${l} ${typeof c == "string" ? c : hm(c)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const eP = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function tP(e) {
  return sr(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function db(e = {}) {
  const t = {
    ...e
  };
  function n(r) {
    const o = Object.entries(r);
    for (let s = 0; s < o.length; s++) {
      const [a, l] = o[s];
      !tP(l) || a.startsWith("unstable_") ? delete r[a] : sr(l) && (r[a] = {
        ...l
      }, n(r[a]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function du(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: r = {},
    spacing: o,
    palette: s = {},
    transitions: a = {},
    typography: l = {},
    shape: c,
    ...u
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : yr(20));
  const d = Vd(s), f = Dd(e);
  let h = nn(f, {
    mixins: W$(f.breakpoints, r),
    palette: d,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: K$.slice(),
    typography: H$(d, l),
    transitions: Z$(a),
    zIndex: {
      ...eP
    }
  });
  if (h = nn(h, u), h = t.reduce((g, y) => nn(g, y), h), process.env.NODE_ENV !== "production") {
    const g = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], y = (m, b) => {
      let x;
      for (x in m) {
        const E = m[x];
        if (g.includes(x) && Object.keys(E).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const w = Lt("", x);
            console.error([`MUI: The \`${b}\` component increases the CSS specificity of the \`${x}\` internal state.`, "You can not override it like this: ", JSON.stringify(m, null, 2), "", `Instead, you need to use the '&.${w}' syntax:`, JSON.stringify({
              root: {
                [`&.${w}`]: E
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          m[x] = {};
        }
      }
    };
    Object.keys(h.components).forEach((m) => {
      const b = h.components[m].styleOverrides;
      b && m.startsWith("Mui") && y(b, m);
    });
  }
  return h.unstable_sxConfig = {
    ...Ss,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, h.unstable_sx = function(y) {
    return mo({
      sx: y,
      theme: this
    });
  }, h.toRuntimeSource = db, h;
}
function fu(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const nP = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = fu(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function fb(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function pb(e) {
  return e === "dark" ? nP : [];
}
function rP(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: r,
    ...o
  } = e, s = Vd(t);
  return {
    palette: s,
    opacity: {
      ...fb(s.mode),
      ...n
    },
    overlays: r || pb(s.mode),
    ...o
  };
}
function oP(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const iP = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], sP = (e) => (t, n) => {
  const r = e.rootSelector || ":root", o = e.colorSchemeSelector;
  let s = o;
  if (o === "class" && (s = ".%s"), o === "data" && (s = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (s = `[${o}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const a = {};
      return iP(e.cssVarPrefix).forEach((l) => {
        a[l] = n[l], delete n[l];
      }), s === "media" ? {
        [r]: n,
        "@media (prefers-color-scheme: dark)": {
          [r]: a
        }
      } : s ? {
        [s.replace("%s", t)]: a,
        [`${r}, ${s.replace("%s", t)}`]: n
      } : {
        [r]: {
          ...n,
          ...a
        }
      };
    }
    if (s && s !== "media")
      return `${r}, ${s.replace("%s", String(t))}`;
  } else if (t) {
    if (s === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [r]: n
        }
      };
    if (s)
      return s.replace("%s", String(t));
  }
  return r;
};
function aP(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function ue(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function Mi(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : ab(e);
}
function Tr(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = Ai(Mi(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function lP(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const Zn = (e) => {
  try {
    return e();
  } catch {
  }
}, cP = (e = "mui") => $$(e);
function yc(e, t, n, r) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const o = r === "dark" ? "dark" : "light";
  if (!n) {
    e[r] = rP({
      ...t,
      palette: {
        mode: o,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: s,
    ...a
  } = du({
    ...n,
    palette: {
      mode: o,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[r] = {
    ...t,
    palette: s,
    opacity: {
      ...fb(o),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || pb(o)
  }, a;
}
function uP(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: r,
    disableCssColorScheme: o = !1,
    cssVarPrefix: s = "mui",
    shouldSkipGeneratingVar: a = oP,
    colorSchemeSelector: l = n.light && n.dark ? "media" : void 0,
    rootSelector: c = ":root",
    ...u
  } = e, d = Object.keys(n)[0], f = r || (n.light && d !== "light" ? "light" : d), h = cP(s), {
    [f]: g,
    light: y,
    dark: m,
    ...b
  } = n, x = {
    ...b
  };
  let E = g;
  if ((f === "dark" && !("dark" in n) || f === "light" && !("light" in n)) && (E = !0), !E)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${f}\` option is either missing or invalid.` : yr(21, f));
  const w = yc(x, E, u, f);
  y && !x.light && yc(x, y, void 0, "light"), m && !x.dark && yc(x, m, void 0, "dark");
  let S = {
    defaultColorScheme: f,
    ...w,
    cssVarPrefix: s,
    colorSchemeSelector: l,
    rootSelector: c,
    getCssVar: h,
    colorSchemes: x,
    font: {
      ...z$(w.typography),
      ...w.font
    },
    spacing: lP(u.spacing)
  };
  Object.keys(S.colorSchemes).forEach((I) => {
    const p = S.colorSchemes[I].palette, O = ($) => {
      const A = $.split("-"), D = A[1], _ = A[2];
      return h($, p[D][_]);
    };
    if (p.mode === "light" && (ue(p.common, "background", "#fff"), ue(p.common, "onBackground", "#000")), p.mode === "dark" && (ue(p.common, "background", "#000"), ue(p.common, "onBackground", "#fff")), aP(p, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), p.mode === "light") {
      ue(p.Alert, "errorColor", ut(p.error.light, 0.6)), ue(p.Alert, "infoColor", ut(p.info.light, 0.6)), ue(p.Alert, "successColor", ut(p.success.light, 0.6)), ue(p.Alert, "warningColor", ut(p.warning.light, 0.6)), ue(p.Alert, "errorFilledBg", O("palette-error-main")), ue(p.Alert, "infoFilledBg", O("palette-info-main")), ue(p.Alert, "successFilledBg", O("palette-success-main")), ue(p.Alert, "warningFilledBg", O("palette-warning-main")), ue(p.Alert, "errorFilledColor", Zn(() => p.getContrastText(p.error.main))), ue(p.Alert, "infoFilledColor", Zn(() => p.getContrastText(p.info.main))), ue(p.Alert, "successFilledColor", Zn(() => p.getContrastText(p.success.main))), ue(p.Alert, "warningFilledColor", Zn(() => p.getContrastText(p.warning.main))), ue(p.Alert, "errorStandardBg", dt(p.error.light, 0.9)), ue(p.Alert, "infoStandardBg", dt(p.info.light, 0.9)), ue(p.Alert, "successStandardBg", dt(p.success.light, 0.9)), ue(p.Alert, "warningStandardBg", dt(p.warning.light, 0.9)), ue(p.Alert, "errorIconColor", O("palette-error-main")), ue(p.Alert, "infoIconColor", O("palette-info-main")), ue(p.Alert, "successIconColor", O("palette-success-main")), ue(p.Alert, "warningIconColor", O("palette-warning-main")), ue(p.AppBar, "defaultBg", O("palette-grey-100")), ue(p.Avatar, "defaultBg", O("palette-grey-400")), ue(p.Button, "inheritContainedBg", O("palette-grey-300")), ue(p.Button, "inheritContainedHoverBg", O("palette-grey-A100")), ue(p.Chip, "defaultBorder", O("palette-grey-400")), ue(p.Chip, "defaultAvatarColor", O("palette-grey-700")), ue(p.Chip, "defaultIconColor", O("palette-grey-700")), ue(p.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), ue(p.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), ue(p.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), ue(p.LinearProgress, "primaryBg", dt(p.primary.main, 0.62)), ue(p.LinearProgress, "secondaryBg", dt(p.secondary.main, 0.62)), ue(p.LinearProgress, "errorBg", dt(p.error.main, 0.62)), ue(p.LinearProgress, "infoBg", dt(p.info.main, 0.62)), ue(p.LinearProgress, "successBg", dt(p.success.main, 0.62)), ue(p.LinearProgress, "warningBg", dt(p.warning.main, 0.62)), ue(p.Skeleton, "bg", `rgba(${O("palette-text-primaryChannel")} / 0.11)`), ue(p.Slider, "primaryTrack", dt(p.primary.main, 0.62)), ue(p.Slider, "secondaryTrack", dt(p.secondary.main, 0.62)), ue(p.Slider, "errorTrack", dt(p.error.main, 0.62)), ue(p.Slider, "infoTrack", dt(p.info.main, 0.62)), ue(p.Slider, "successTrack", dt(p.success.main, 0.62)), ue(p.Slider, "warningTrack", dt(p.warning.main, 0.62));
      const $ = qs(p.background.default, 0.8);
      ue(p.SnackbarContent, "bg", $), ue(p.SnackbarContent, "color", Zn(() => p.getContrastText($))), ue(p.SpeedDialAction, "fabHoverBg", qs(p.background.paper, 0.15)), ue(p.StepConnector, "border", O("palette-grey-400")), ue(p.StepContent, "border", O("palette-grey-400")), ue(p.Switch, "defaultColor", O("palette-common-white")), ue(p.Switch, "defaultDisabledColor", O("palette-grey-100")), ue(p.Switch, "primaryDisabledColor", dt(p.primary.main, 0.62)), ue(p.Switch, "secondaryDisabledColor", dt(p.secondary.main, 0.62)), ue(p.Switch, "errorDisabledColor", dt(p.error.main, 0.62)), ue(p.Switch, "infoDisabledColor", dt(p.info.main, 0.62)), ue(p.Switch, "successDisabledColor", dt(p.success.main, 0.62)), ue(p.Switch, "warningDisabledColor", dt(p.warning.main, 0.62)), ue(p.TableCell, "border", dt(Hs(p.divider, 1), 0.88)), ue(p.Tooltip, "bg", Hs(p.grey[700], 0.92));
    }
    if (p.mode === "dark") {
      ue(p.Alert, "errorColor", dt(p.error.light, 0.6)), ue(p.Alert, "infoColor", dt(p.info.light, 0.6)), ue(p.Alert, "successColor", dt(p.success.light, 0.6)), ue(p.Alert, "warningColor", dt(p.warning.light, 0.6)), ue(p.Alert, "errorFilledBg", O("palette-error-dark")), ue(p.Alert, "infoFilledBg", O("palette-info-dark")), ue(p.Alert, "successFilledBg", O("palette-success-dark")), ue(p.Alert, "warningFilledBg", O("palette-warning-dark")), ue(p.Alert, "errorFilledColor", Zn(() => p.getContrastText(p.error.dark))), ue(p.Alert, "infoFilledColor", Zn(() => p.getContrastText(p.info.dark))), ue(p.Alert, "successFilledColor", Zn(() => p.getContrastText(p.success.dark))), ue(p.Alert, "warningFilledColor", Zn(() => p.getContrastText(p.warning.dark))), ue(p.Alert, "errorStandardBg", ut(p.error.light, 0.9)), ue(p.Alert, "infoStandardBg", ut(p.info.light, 0.9)), ue(p.Alert, "successStandardBg", ut(p.success.light, 0.9)), ue(p.Alert, "warningStandardBg", ut(p.warning.light, 0.9)), ue(p.Alert, "errorIconColor", O("palette-error-main")), ue(p.Alert, "infoIconColor", O("palette-info-main")), ue(p.Alert, "successIconColor", O("palette-success-main")), ue(p.Alert, "warningIconColor", O("palette-warning-main")), ue(p.AppBar, "defaultBg", O("palette-grey-900")), ue(p.AppBar, "darkBg", O("palette-background-paper")), ue(p.AppBar, "darkColor", O("palette-text-primary")), ue(p.Avatar, "defaultBg", O("palette-grey-600")), ue(p.Button, "inheritContainedBg", O("palette-grey-800")), ue(p.Button, "inheritContainedHoverBg", O("palette-grey-700")), ue(p.Chip, "defaultBorder", O("palette-grey-700")), ue(p.Chip, "defaultAvatarColor", O("palette-grey-300")), ue(p.Chip, "defaultIconColor", O("palette-grey-300")), ue(p.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), ue(p.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), ue(p.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), ue(p.LinearProgress, "primaryBg", ut(p.primary.main, 0.5)), ue(p.LinearProgress, "secondaryBg", ut(p.secondary.main, 0.5)), ue(p.LinearProgress, "errorBg", ut(p.error.main, 0.5)), ue(p.LinearProgress, "infoBg", ut(p.info.main, 0.5)), ue(p.LinearProgress, "successBg", ut(p.success.main, 0.5)), ue(p.LinearProgress, "warningBg", ut(p.warning.main, 0.5)), ue(p.Skeleton, "bg", `rgba(${O("palette-text-primaryChannel")} / 0.13)`), ue(p.Slider, "primaryTrack", ut(p.primary.main, 0.5)), ue(p.Slider, "secondaryTrack", ut(p.secondary.main, 0.5)), ue(p.Slider, "errorTrack", ut(p.error.main, 0.5)), ue(p.Slider, "infoTrack", ut(p.info.main, 0.5)), ue(p.Slider, "successTrack", ut(p.success.main, 0.5)), ue(p.Slider, "warningTrack", ut(p.warning.main, 0.5));
      const $ = qs(p.background.default, 0.98);
      ue(p.SnackbarContent, "bg", $), ue(p.SnackbarContent, "color", Zn(() => p.getContrastText($))), ue(p.SpeedDialAction, "fabHoverBg", qs(p.background.paper, 0.15)), ue(p.StepConnector, "border", O("palette-grey-600")), ue(p.StepContent, "border", O("palette-grey-600")), ue(p.Switch, "defaultColor", O("palette-grey-300")), ue(p.Switch, "defaultDisabledColor", O("palette-grey-600")), ue(p.Switch, "primaryDisabledColor", ut(p.primary.main, 0.55)), ue(p.Switch, "secondaryDisabledColor", ut(p.secondary.main, 0.55)), ue(p.Switch, "errorDisabledColor", ut(p.error.main, 0.55)), ue(p.Switch, "infoDisabledColor", ut(p.info.main, 0.55)), ue(p.Switch, "successDisabledColor", ut(p.success.main, 0.55)), ue(p.Switch, "warningDisabledColor", ut(p.warning.main, 0.55)), ue(p.TableCell, "border", ut(Hs(p.divider, 1), 0.68)), ue(p.Tooltip, "bg", Hs(p.grey[700], 0.92));
    }
    Tr(p.background, "default"), Tr(p.background, "paper"), Tr(p.common, "background"), Tr(p.common, "onBackground"), Tr(p, "divider"), Object.keys(p).forEach(($) => {
      const A = p[$];
      $ !== "tonalOffset" && A && typeof A == "object" && (A.main && ue(p[$], "mainChannel", Ai(Mi(A.main))), A.light && ue(p[$], "lightChannel", Ai(Mi(A.light))), A.dark && ue(p[$], "darkChannel", Ai(Mi(A.dark))), A.contrastText && ue(p[$], "contrastTextChannel", Ai(Mi(A.contrastText))), $ === "text" && (Tr(p[$], "primary"), Tr(p[$], "secondary")), $ === "action" && (A.active && Tr(p[$], "active"), A.selected && Tr(p[$], "selected")));
    });
  }), S = t.reduce((I, p) => nn(I, p), S);
  const v = {
    prefix: s,
    disableCssColorScheme: o,
    shouldSkipGeneratingVar: a,
    getSelector: sP(S)
  }, {
    vars: T,
    generateThemeVars: R,
    generateStyleSheets: k
  } = N$(S, v);
  return S.vars = T, Object.entries(S.colorSchemes[S.defaultColorScheme]).forEach(([I, p]) => {
    S[I] = p;
  }), S.generateThemeVars = R, S.generateStyleSheets = k, S.generateSpacing = function() {
    return eb(u.spacing, Md(this));
  }, S.getColorSchemeSelector = A$(l), S.spacing = S.generateSpacing(), S.shouldSkipGeneratingVar = a, S.unstable_sxConfig = {
    ...Ss,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, S.unstable_sx = function(p) {
    return mo({
      sx: p,
      theme: this
    });
  }, S.toRuntimeSource = db, S;
}
function gm(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: Vd({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function mb(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: r = !1,
    colorSchemes: o = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: s = n == null ? void 0 : n.mode,
    ...a
  } = e, l = s || "light", c = o == null ? void 0 : o[l], u = {
    ...o,
    ...n ? {
      [l]: {
        ...typeof c != "boolean" && c,
        palette: n
      }
    } : void 0
  };
  if (r === !1) {
    if (!("colorSchemes" in e))
      return du(e, ...t);
    let d = n;
    "palette" in e || u[l] && (u[l] !== !0 ? d = u[l].palette : l === "dark" && (d = {
      mode: "dark"
    }));
    const f = du({
      ...e,
      palette: d
    }, ...t);
    return f.defaultColorScheme = l, f.colorSchemes = u, f.palette.mode === "light" && (f.colorSchemes.light = {
      ...u.light !== !0 && u.light,
      palette: f.palette
    }, gm(f, "dark", u.dark)), f.palette.mode === "dark" && (f.colorSchemes.dark = {
      ...u.dark !== !0 && u.dark,
      palette: f.palette
    }, gm(f, "light", u.light)), f;
  }
  return !n && !("light" in u) && l === "light" && (u.light = !0), uP({
    ...a,
    colorSchemes: u,
    defaultColorScheme: l,
    ...typeof r != "boolean" && r
  }, ...t);
}
const zd = mb();
function Wd() {
  const e = Bd(zd);
  return process.env.NODE_ENV !== "production" && C.useDebugValue(e), e[Sl] || e;
}
function hb(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const xr = (e) => hb(e) && e !== "classes", Ue = p$({
  themeId: Sl,
  defaultTheme: zd,
  rootShouldForwardProp: xr
});
let ym = 0;
function dP(e) {
  const [t, n] = C.useState(e), r = e || t;
  return C.useEffect(() => {
    t == null && (ym += 1, n(`mui-${ym}`));
  }, [t]), r;
}
const fP = {
  ...C
}, bm = fP.useId;
function gb(e) {
  if (bm !== void 0) {
    const t = bm();
    return e ?? t;
  }
  return dP(e);
}
const eo = i.oneOfType([i.func, i.object]);
function yb(e) {
  return /* @__PURE__ */ P(tb, {
    ...e,
    defaultTheme: zd,
    themeId: Sl
  });
}
process.env.NODE_ENV !== "production" && (yb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: i.oneOfType([i.array, i.func, i.number, i.object, i.string, i.bool])
});
function pP(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ P(yb, {
        styles: typeof e == "function" ? (r) => e({
          theme: r,
          ...n
        }) : e
      })
    );
  };
}
process.env.NODE_ENV !== "production" && (i.node, i.object.isRequired);
function Xt(e) {
  return R$(e);
}
function Ts(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...r) {
    return e(...r) || t(...r);
  };
}
function mP(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function hP(e, t, n, r, o) {
  const s = e[t], a = o || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  return typeof s == "function" && !mP(s) && (l = "Did you accidentally provide a plain function component instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const bb = Ts(i.elementType, hP);
function gP(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function vb(e, t, n, r, o) {
  const s = e[t], a = o || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  const c = s.type;
  return typeof c == "function" && !gP(c) && (l = "Did you accidentally use a plain function component for an element instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Es = Ts(i.element, vb);
Es.isRequired = Ts(i.element.isRequired, vb);
function cs(e, t, n, r, o) {
  if (process.env.NODE_ENV === "production")
    return null;
  const s = e[t], a = o || t;
  return s == null ? null : s && s.nodeType !== 1 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
function vm(...e) {
  return e.reduce((t, n) => n == null ? t : function(...o) {
    t.apply(this, o), n.apply(this, o);
  }, () => {
  });
}
function xb(e, t = 166) {
  let n;
  function r(...o) {
    const s = () => {
      e.apply(this, o);
    };
    clearTimeout(n), n = setTimeout(s, t);
  }
  return r.clear = () => {
    clearTimeout(n);
  }, r;
}
function Xn(e) {
  return e && e.ownerDocument || document;
}
function Nr(e) {
  return Xn(e).defaultView || window;
}
function xm(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
function wm({
  controlled: e,
  default: t,
  name: n,
  state: r = "value"
}) {
  const {
    current: o
  } = C.useRef(e !== void 0), [s, a] = C.useState(t), l = o ? e : s;
  if (process.env.NODE_ENV !== "production") {
    C.useEffect(() => {
      o !== (e !== void 0) && console.error([`MUI: A component is changing the ${o ? "" : "un"}controlled ${r} state of ${n} to be ${o ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [r, n, e]);
    const {
      current: u
    } = C.useRef(t);
    C.useEffect(() => {
      !o && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${r} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = C.useCallback((u) => {
    o || a(u);
  }, []);
  return [l, c];
}
function pu(e) {
  const t = C.useRef(e);
  return ho(() => {
    t.current = e;
  }), C.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function Vn(...e) {
  const t = C.useRef(void 0), n = C.useCallback((r) => {
    const o = e.map((s) => {
      if (s == null)
        return null;
      if (typeof s == "function") {
        const a = s, l = a(r);
        return typeof l == "function" ? l : () => {
          a(null);
        };
      }
      return s.current = r, () => {
        s.current = null;
      };
    });
    return () => {
      o.forEach((s) => s == null ? void 0 : s());
    };
  }, e);
  return C.useMemo(() => e.every((r) => r == null) ? null : (r) => {
    t.current && (t.current(), t.current = void 0), r != null && (t.current = n(r));
  }, e);
}
const Sm = {};
function yP(e, t) {
  const n = C.useRef(Sm);
  return n.current === Sm && (n.current = e(t)), n;
}
const bP = [];
function vP(e) {
  C.useEffect(e, bP);
}
class Ud {
  constructor() {
    _r(this, "currentId", null);
    _r(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    _r(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new Ud();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
}
function xP() {
  const e = yP(Ud.create).current;
  return vP(e.disposeEffect), e;
}
function wb(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
function wP(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function Sb(e, t, n, r) {
  const o = e[t];
  if (o == null || !Number.isInteger(o)) {
    const s = wP(o);
    return new RangeError(`Invalid ${r} \`${t}\` of type \`${s}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function Tb(e, t, ...n) {
  return e[t] === void 0 ? null : Sb(e, t, ...n);
}
function mu() {
  return null;
}
Tb.isRequired = Sb;
mu.isRequired = mu;
const Eb = process.env.NODE_ENV === "production" ? mu : Tb;
function SP(e) {
  return typeof e == "string";
}
function Cb(e, t, n) {
  return e === void 0 || SP(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function Ob(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((r) => r.match(/^on[A-Z]/) && typeof e[r] == "function" && !t.includes(r)).forEach((r) => {
    n[r] = e[r];
  }), n;
}
function Tm(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function Rb(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: r,
    externalForwardedProps: o,
    className: s
  } = e;
  if (!t) {
    const g = Ee(n == null ? void 0 : n.className, s, o == null ? void 0 : o.className, r == null ? void 0 : r.className), y = {
      ...n == null ? void 0 : n.style,
      ...o == null ? void 0 : o.style,
      ...r == null ? void 0 : r.style
    }, m = {
      ...n,
      ...o,
      ...r
    };
    return g.length > 0 && (m.className = g), Object.keys(y).length > 0 && (m.style = y), {
      props: m,
      internalRef: void 0
    };
  }
  const a = Ob({
    ...o,
    ...r
  }), l = Tm(r), c = Tm(o), u = t(a), d = Ee(u == null ? void 0 : u.className, n == null ? void 0 : n.className, s, o == null ? void 0 : o.className, r == null ? void 0 : r.className), f = {
    ...u == null ? void 0 : u.style,
    ...n == null ? void 0 : n.style,
    ...o == null ? void 0 : o.style,
    ...r == null ? void 0 : r.style
  }, h = {
    ...u,
    ...n,
    ...c,
    ...l
  };
  return d.length > 0 && (h.className = d), Object.keys(f).length > 0 && (h.style = f), {
    props: h,
    internalRef: u.ref
  };
}
function kb(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function TP(e) {
  var f;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: r,
    skipResolvingSlotProps: o = !1,
    ...s
  } = e, a = o ? {} : kb(n, r), {
    props: l,
    internalRef: c
  } = Rb({
    ...s,
    externalSlotProps: a
  }), u = Vn(c, a == null ? void 0 : a.ref, (f = e.additionalProps) == null ? void 0 : f.ref);
  return Cb(t, {
    ...l,
    ref: u
  }, r);
}
function Cs(e) {
  var t;
  return parseInt(C.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
function Ys(e) {
  return parseInt(e, 10) || 0;
}
const EP = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function CP(e) {
  for (const t in e)
    return !1;
  return !0;
}
function Em(e) {
  return CP(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const $b = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    onChange: r,
    maxRows: o,
    minRows: s = 1,
    style: a,
    value: l,
    ...c
  } = t, {
    current: u
  } = C.useRef(l != null), d = C.useRef(null), f = Vn(n, d), h = C.useRef(null), g = C.useRef(null), y = C.useCallback(() => {
    const w = d.current, S = g.current;
    if (!w || !S)
      return;
    const T = Nr(w).getComputedStyle(w);
    if (T.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    S.style.width = T.width, S.value = w.value || t.placeholder || "x", S.value.slice(-1) === `
` && (S.value += " ");
    const R = T.boxSizing, k = Ys(T.paddingBottom) + Ys(T.paddingTop), I = Ys(T.borderBottomWidth) + Ys(T.borderTopWidth), p = S.scrollHeight;
    S.value = "x";
    const O = S.scrollHeight;
    let $ = p;
    s && ($ = Math.max(Number(s) * O, $)), o && ($ = Math.min(Number(o) * O, $)), $ = Math.max($, O);
    const A = $ + (R === "border-box" ? k + I : 0), D = Math.abs($ - p) <= 1;
    return {
      outerHeightStyle: A,
      overflowing: D
    };
  }, [o, s, t.placeholder]), m = pu(() => {
    const w = d.current, S = y();
    if (!w || !S || Em(S))
      return !1;
    const v = S.outerHeightStyle;
    return h.current != null && h.current !== v;
  }), b = C.useCallback(() => {
    const w = d.current, S = y();
    if (!w || !S || Em(S))
      return;
    const v = S.outerHeightStyle;
    h.current !== v && (h.current = v, w.style.height = `${v}px`), w.style.overflow = S.overflowing ? "hidden" : "";
  }, [y]), x = C.useRef(-1);
  ho(() => {
    const w = xb(b), S = d == null ? void 0 : d.current;
    if (!S)
      return;
    const v = Nr(S);
    v.addEventListener("resize", w);
    let T;
    return typeof ResizeObserver < "u" && (T = new ResizeObserver(() => {
      m() && (T.unobserve(S), cancelAnimationFrame(x.current), b(), x.current = requestAnimationFrame(() => {
        T.observe(S);
      }));
    }), T.observe(S)), () => {
      w.clear(), cancelAnimationFrame(x.current), v.removeEventListener("resize", w), T && T.disconnect();
    };
  }, [y, b, m]), ho(() => {
    b();
  });
  const E = (w) => {
    u || b(), r && r(w);
  };
  return /* @__PURE__ */ $e(C.Fragment, {
    children: [/* @__PURE__ */ P("textarea", {
      value: l,
      onChange: E,
      ref: f,
      rows: s,
      style: a,
      ...c
    }), /* @__PURE__ */ P("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: g,
      tabIndex: -1,
      style: {
        ...EP.shadow,
        ...a,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && ($b.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: i.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  onChange: i.func,
  /**
   * @ignore
   */
  placeholder: i.string,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * @ignore
   */
  value: i.oneOfType([i.arrayOf(i.string), i.number, i.string])
});
function hu(e) {
  return typeof e == "string";
}
function pi({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((r, o) => (r[o] = e[o], n && typeof e[o] > "u" && (r[o] = n[o]), r), {});
}
const Al = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (Al.displayName = "FormControlContext");
function mi() {
  return C.useContext(Al);
}
const on = k$;
function Cm(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function Pa(e, t = !1) {
  return e && (Cm(e.value) && e.value !== "" || t && Cm(e.defaultValue) && e.defaultValue !== "");
}
function OP(e) {
  return e.startAdornment;
}
function RP(e) {
  return Lt("MuiInputBase", e);
}
const ti = Ut("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var Om;
const Ml = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${Mt(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, _l = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, kP = (e) => {
  const {
    classes: t,
    color: n,
    disabled: r,
    error: o,
    endAdornment: s,
    focused: a,
    formControl: l,
    fullWidth: c,
    hiddenLabel: u,
    multiline: d,
    readOnly: f,
    size: h,
    startAdornment: g,
    type: y
  } = e, m = {
    root: ["root", `color${Mt(n)}`, r && "disabled", o && "error", c && "fullWidth", a && "focused", l && "formControl", h && h !== "medium" && `size${Mt(h)}`, d && "multiline", g && "adornedStart", s && "adornedEnd", u && "hiddenLabel", f && "readOnly"],
    input: ["input", r && "disabled", y === "search" && "inputTypeSearch", d && "inputMultiline", h === "small" && "inputSizeSmall", u && "inputHiddenLabel", g && "inputAdornedStart", s && "inputAdornedEnd", f && "readOnly"]
  };
  return Ht(m, RP, t);
}, Dl = Ue("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: Ml
})(on(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${ti.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), Bl = Ue("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: _l
})(on(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, r = {
    opacity: "0 !important"
  }, o = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${ti.formControl} &`]: {
      "&::-webkit-input-placeholder": r,
      "&::-moz-placeholder": r,
      // Firefox 19+
      "&::-ms-input-placeholder": r,
      // Edge
      "&:focus::-webkit-input-placeholder": o,
      "&:focus::-moz-placeholder": o,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": o
      // Edge
    },
    [`&.${ti.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: s
      }) => !s.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), Rm = pP({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), Fl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": o,
    autoComplete: s,
    autoFocus: a,
    className: l,
    color: c,
    components: u = {},
    componentsProps: d = {},
    defaultValue: f,
    disabled: h,
    disableInjectingGlobalStyles: g,
    endAdornment: y,
    error: m,
    fullWidth: b = !1,
    id: x,
    inputComponent: E = "input",
    inputProps: w = {},
    inputRef: S,
    margin: v,
    maxRows: T,
    minRows: R,
    multiline: k = !1,
    name: I,
    onBlur: p,
    onChange: O,
    onClick: $,
    onFocus: A,
    onKeyDown: D,
    onKeyUp: _,
    placeholder: M,
    readOnly: V,
    renderSuffix: Y,
    rows: U,
    size: j,
    slotProps: W = {},
    slots: ee = {},
    startAdornment: K,
    type: oe = "text",
    value: ne,
    ...se
  } = r, de = w.value != null ? w.value : ne, {
    current: X
  } = C.useRef(de != null), ae = C.useRef(), Q = C.useCallback((re) => {
    process.env.NODE_ENV !== "production" && re && re.nodeName !== "INPUT" && !re.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), ie = Vn(ae, S, w.ref, Q), [F, he] = C.useState(!1), fe = mi();
  process.env.NODE_ENV !== "production" && C.useEffect(() => {
    if (fe)
      return fe.registerEffect();
  }, [fe]);
  const Te = pi({
    props: r,
    muiFormControl: fe,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  Te.focused = fe ? fe.focused : F, C.useEffect(() => {
    !fe && h && F && (he(!1), p && p());
  }, [fe, h, F, p]);
  const Le = fe && fe.onFilled, Ae = fe && fe.onEmpty, Ie = C.useCallback((re) => {
    Pa(re) ? Le && Le() : Ae && Ae();
  }, [Le, Ae]);
  ho(() => {
    X && Ie({
      value: de
    });
  }, [de, Ie, X]);
  const Re = (re) => {
    A && A(re), w.onFocus && w.onFocus(re), fe && fe.onFocus ? fe.onFocus(re) : he(!0);
  }, Be = (re) => {
    p && p(re), w.onBlur && w.onBlur(re), fe && fe.onBlur ? fe.onBlur(re) : he(!1);
  }, Oe = (re, ...Z) => {
    if (!X) {
      const te = re.target || ae.current;
      if (te == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : yr(1));
      Ie({
        value: te.value
      });
    }
    w.onChange && w.onChange(re, ...Z), O && O(re, ...Z);
  };
  C.useEffect(() => {
    Ie(ae.current);
  }, []);
  const N = (re) => {
    ae.current && re.currentTarget === re.target && ae.current.focus(), $ && $(re);
  };
  let q = E, J = w;
  k && q === "input" && (U ? (process.env.NODE_ENV !== "production" && (R || T) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), J = {
    type: void 0,
    minRows: U,
    maxRows: U,
    ...J
  }) : J = {
    type: void 0,
    maxRows: T,
    minRows: R,
    ...J
  }, q = $b);
  const H = (re) => {
    Ie(re.animationName === "mui-auto-fill-cancel" ? ae.current : {
      value: "x"
    });
  };
  C.useEffect(() => {
    fe && fe.setAdornedStart(!!K);
  }, [fe, K]);
  const B = {
    ...r,
    color: Te.color || "primary",
    disabled: Te.disabled,
    endAdornment: y,
    error: Te.error,
    focused: Te.focused,
    formControl: fe,
    fullWidth: b,
    hiddenLabel: Te.hiddenLabel,
    multiline: k,
    size: Te.size,
    startAdornment: K,
    type: oe
  }, z = kP(B), G = ee.root || u.Root || Dl, pe = W.root || d.root || {}, me = ee.input || u.Input || Bl;
  return J = {
    ...J,
    ...W.input ?? d.input
  }, /* @__PURE__ */ $e(C.Fragment, {
    children: [!g && typeof Rm == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (Om || (Om = /* @__PURE__ */ P(Rm, {}))), /* @__PURE__ */ $e(G, {
      ...pe,
      ref: n,
      onClick: N,
      ...se,
      ...!hu(G) && {
        ownerState: {
          ...B,
          ...pe.ownerState
        }
      },
      className: Ee(z.root, pe.className, l, V && "MuiInputBase-readOnly"),
      children: [K, /* @__PURE__ */ P(Al.Provider, {
        value: null,
        children: /* @__PURE__ */ P(me, {
          "aria-invalid": Te.error,
          "aria-describedby": o,
          autoComplete: s,
          autoFocus: a,
          defaultValue: f,
          disabled: Te.disabled,
          id: x,
          onAnimationStart: H,
          name: I,
          placeholder: M,
          readOnly: V,
          required: Te.required,
          rows: U,
          value: de,
          onKeyDown: D,
          onKeyUp: _,
          type: oe,
          ...J,
          ...!hu(me) && {
            as: q,
            ownerState: {
              ...B,
              ...J.ownerState
            }
          },
          ref: ie,
          className: Ee(z.input, J.className, V && "MuiInputBase-readOnly"),
          onBlur: Be,
          onChange: Oe,
          onFocus: Re
        })
      }), y, Y ? Y({
        ...Te,
        startAdornment: K
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (Fl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": i.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: bb,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: eo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: i.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: i.func,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * @ignore
   */
  onKeyUp: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * @ignore
   */
  renderSuffix: i.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The size of the component.
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
function $P(e) {
  return typeof e.main == "string";
}
function PP(e, t = []) {
  if (!$P(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function jl(e = []) {
  return ([, t]) => t && PP(t, e);
}
function IP(e) {
  return Lt("MuiInput", e);
}
const Si = {
  ...ti,
  ...Ut("MuiInput", ["root", "underline", "input"])
}, NP = (e) => {
  const {
    classes: t,
    disableUnderline: n
  } = e, o = Ht({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, IP, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...o
  };
}, AP = Ue(Dl, {
  shouldForwardProp: (e) => xr(e) || e === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...Ml(e, t), !n.disableUnderline && t.underline];
  }
})(on(({
  theme: e
}) => {
  let n = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e.vars && (n = `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`), {
    position: "relative",
    variants: [{
      props: ({
        ownerState: r
      }) => r.formControl,
      style: {
        "label + &": {
          marginTop: 16
        }
      }
    }, {
      props: ({
        ownerState: r
      }) => !r.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${Si.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${Si.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${Si.disabled}, .${Si.error}):before`]: {
          borderBottom: `2px solid ${(e.vars || e).palette.text.primary}`,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            borderBottom: `1px solid ${n}`
          }
        },
        [`&.${Si.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(jl()).map(([r]) => ({
      props: {
        color: r,
        disableUnderline: !1
      },
      style: {
        "&::after": {
          borderBottom: `2px solid ${(e.vars || e).palette[r].main}`
        }
      }
    }))]
  };
})), MP = Ue(Bl, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: _l
})({}), Ll = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiInput"
  }), {
    disableUnderline: o = !1,
    components: s = {},
    componentsProps: a,
    fullWidth: l = !1,
    inputComponent: c = "input",
    multiline: u = !1,
    slotProps: d,
    slots: f = {},
    type: h = "text",
    ...g
  } = r, y = NP(r), b = {
    root: {
      ownerState: {
        disableUnderline: o
      }
    }
  }, x = d ?? a ? nn(d ?? a, b) : b, E = f.root ?? s.Root ?? AP, w = f.input ?? s.Input ?? MP;
  return /* @__PURE__ */ P(Fl, {
    slots: {
      root: E,
      input: w
    },
    slotProps: x,
    fullWidth: l,
    inputComponent: c,
    multiline: u,
    ref: n,
    type: h,
    ...g,
    classes: y
  });
});
process.env.NODE_ENV !== "production" && (Ll.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, the `input` will not have an underline.
   * @default false
   */
  disableUnderline: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: eo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
Ll.muiName = "Input";
function _P(e) {
  return Lt("MuiFilledInput", e);
}
const ro = {
  ...ti,
  ...Ut("MuiFilledInput", ["root", "underline", "input", "adornedStart", "adornedEnd", "sizeSmall", "multiline", "hiddenLabel"])
};
function DP(e) {
  return Lt("MuiSvgIcon", e);
}
Ut("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const BP = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: r
  } = e, o = {
    root: ["root", t !== "inherit" && `color${Mt(t)}`, `fontSize${Mt(n)}`]
  };
  return Ht(o, DP, r);
}, FP = Ue("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${Mt(n.color)}`], t[`fontSize${Mt(n.fontSize)}`]];
  }
})(on(({
  theme: e
}) => {
  var t, n, r, o, s, a, l, c, u, d, f, h, g, y;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (o = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : o.call(t, "fill", {
      duration: (r = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : r.shorter
    }),
    variants: [
      {
        props: (m) => !m.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((a = (s = e.typography) == null ? void 0 : s.pxToRem) == null ? void 0 : a.call(s, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((c = (l = e.typography) == null ? void 0 : l.pxToRem) == null ? void 0 : c.call(l, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((d = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : d.call(u, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, m]) => m && m.main).map(([m]) => {
        var b, x;
        return {
          props: {
            color: m
          },
          style: {
            color: (x = (b = (e.vars ?? e).palette) == null ? void 0 : b[m]) == null ? void 0 : x.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (h = (f = (e.vars ?? e).palette) == null ? void 0 : f.action) == null ? void 0 : h.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (y = (g = (e.vars ?? e).palette) == null ? void 0 : g.action) == null ? void 0 : y.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), Ia = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: o,
    className: s,
    color: a = "inherit",
    component: l = "svg",
    fontSize: c = "medium",
    htmlColor: u,
    inheritViewBox: d = !1,
    titleAccess: f,
    viewBox: h = "0 0 24 24",
    ...g
  } = r, y = /* @__PURE__ */ C.isValidElement(o) && o.type === "svg", m = {
    ...r,
    color: a,
    component: l,
    fontSize: c,
    instanceFontSize: t.fontSize,
    inheritViewBox: d,
    viewBox: h,
    hasSvgAsChild: y
  }, b = {};
  d || (b.viewBox = h);
  const x = BP(m);
  return /* @__PURE__ */ $e(FP, {
    as: l,
    className: Ee(x.root, s),
    focusable: "false",
    color: u,
    "aria-hidden": f ? void 0 : !0,
    role: f ? "img" : void 0,
    ref: n,
    ...b,
    ...g,
    ...y && o.props,
    ownerState: m,
    children: [y ? o.props.children : o, f ? /* @__PURE__ */ P("title", {
      children: f
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (Ia.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: i.oneOfType([i.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: i.oneOfType([i.oneOf(["inherit", "large", "medium", "small"]), i.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: i.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: i.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Reference/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: i.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: i.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: i.string
});
Ia.muiName = "SvgIcon";
function jP(e, t) {
  function n(r, o) {
    return /* @__PURE__ */ P(Ia, {
      "data-testid": process.env.NODE_ENV !== "production" ? `${t}Icon` : void 0,
      ref: o,
      ...r,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = Ia.muiName, /* @__PURE__ */ C.memo(/* @__PURE__ */ C.forwardRef(n));
}
function LP(e, t) {
  const n = e.charCodeAt(2);
  return e[0] === "o" && e[1] === "n" && n >= 65 && n <= 90 && typeof t == "function";
}
function VP(e, t) {
  if (!e)
    return t;
  function n(a, l) {
    const c = {};
    return Object.keys(l).forEach((u) => {
      LP(u, l[u]) && typeof a[u] == "function" && (c[u] = (...d) => {
        a[u](...d), l[u](...d);
      });
    }), c;
  }
  if (typeof e == "function" || typeof t == "function")
    return (a) => {
      const l = typeof t == "function" ? t(a) : t, c = typeof e == "function" ? e({
        ...a,
        ...l
      }) : e, u = Ee(a == null ? void 0 : a.className, l == null ? void 0 : l.className, c == null ? void 0 : c.className), d = n(c, l);
      return {
        ...l,
        ...c,
        ...d,
        ...!!u && {
          className: u
        },
        ...(l == null ? void 0 : l.style) && (c == null ? void 0 : c.style) && {
          style: {
            ...l.style,
            ...c.style
          }
        },
        ...(l == null ? void 0 : l.sx) && (c == null ? void 0 : c.sx) && {
          sx: [...Array.isArray(l.sx) ? l.sx : [l.sx], ...Array.isArray(c.sx) ? c.sx : [c.sx]]
        }
      };
    };
  const r = t, o = n(e, r), s = Ee(r == null ? void 0 : r.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...o,
    ...!!s && {
      className: s
    },
    ...(r == null ? void 0 : r.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...r.style,
        ...e.style
      }
    },
    ...(r == null ? void 0 : r.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(r.sx) ? r.sx : [r.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
const zP = (e) => {
  const {
    classes: t,
    disableUnderline: n,
    startAdornment: r,
    endAdornment: o,
    size: s,
    hiddenLabel: a,
    multiline: l
  } = e, c = {
    root: ["root", !n && "underline", r && "adornedStart", o && "adornedEnd", s === "small" && `size${Mt(s)}`, a && "hiddenLabel", l && "multiline"],
    input: ["input"]
  }, u = Ht(c, _P, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...u
  };
}, WP = Ue(Dl, {
  shouldForwardProp: (e) => xr(e) || e === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...Ml(e, t), !n.disableUnderline && t.underline];
  }
})(on(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = t ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", r = t ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", o = t ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", s = t ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return {
    position: "relative",
    backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r,
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create("background-color", {
      duration: e.transitions.duration.shorter,
      easing: e.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.hoverBg : o,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r
      }
    },
    [`&.${ro.focused}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r
    },
    [`&.${ro.disabled}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.disabledBg : s
    },
    variants: [{
      props: ({
        ownerState: a
      }) => !a.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${ro.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${ro.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})` : n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${ro.disabled}, .${ro.error}):before`]: {
          borderBottom: `1px solid ${(e.vars || e).palette.text.primary}`
        },
        [`&.${ro.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(jl()).map(([a]) => {
      var l;
      return {
        props: {
          disableUnderline: !1,
          color: a
        },
        style: {
          "&::after": {
            borderBottom: `2px solid ${(l = (e.vars || e).palette[a]) == null ? void 0 : l.main}`
          }
        }
      };
    }), {
      props: ({
        ownerState: a
      }) => a.startAdornment,
      style: {
        paddingLeft: 12
      }
    }, {
      props: ({
        ownerState: a
      }) => a.endAdornment,
      style: {
        paddingRight: 12
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline,
      style: {
        padding: "25px 12px 8px"
      }
    }, {
      props: ({
        ownerState: a,
        size: l
      }) => a.multiline && l === "small",
      style: {
        paddingTop: 21,
        paddingBottom: 4
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline && a.hiddenLabel,
      style: {
        paddingTop: 16,
        paddingBottom: 17
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline && a.hiddenLabel && a.size === "small",
      style: {
        paddingTop: 8,
        paddingBottom: 9
      }
    }]
  };
})), UP = Ue(Bl, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: _l
})(on(({
  theme: e
}) => ({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12,
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      paddingTop: 21,
      paddingBottom: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel,
    style: {
      paddingTop: 16,
      paddingBottom: 17
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel && t.size === "small",
    style: {
      paddingTop: 8,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      paddingTop: 0,
      paddingBottom: 0,
      paddingLeft: 0,
      paddingRight: 0
    }
  }]
}))), Vl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiFilledInput"
  }), {
    disableUnderline: o = !1,
    components: s = {},
    componentsProps: a,
    fullWidth: l = !1,
    hiddenLabel: c,
    // declare here to prevent spreading to DOM
    inputComponent: u = "input",
    multiline: d = !1,
    slotProps: f,
    slots: h = {},
    type: g = "text",
    ...y
  } = r, m = {
    ...r,
    disableUnderline: o,
    fullWidth: l,
    inputComponent: u,
    multiline: d,
    type: g
  }, b = zP(r), x = {
    root: {
      ownerState: m
    },
    input: {
      ownerState: m
    }
  }, E = f ?? a ? nn(x, f ?? a) : x, w = h.root ?? s.Root ?? WP, S = h.input ?? s.Input ?? UP;
  return /* @__PURE__ */ P(Fl, {
    slots: {
      root: w,
      input: S
    },
    slotProps: E,
    fullWidth: l,
    inputComponent: u,
    multiline: d,
    ref: n,
    type: g,
    ...y,
    classes: b
  });
});
process.env.NODE_ENV !== "production" && (Vl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, the input will not have an underline.
   * @default false
   */
  disableUnderline: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: eo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
Vl.muiName = "Input";
var km;
const HP = Ue("fieldset", {
  shouldForwardProp: xr
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), qP = Ue("legend", {
  shouldForwardProp: xr
})(on(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function Pb(e) {
  const {
    children: t,
    classes: n,
    className: r,
    label: o,
    notched: s,
    ...a
  } = e, l = o != null && o !== "", c = {
    ...e,
    notched: s,
    withLabel: l
  };
  return /* @__PURE__ */ P(HP, {
    "aria-hidden": !0,
    className: r,
    ownerState: c,
    ...a,
    children: /* @__PURE__ */ P(qP, {
      ownerState: c,
      children: l ? /* @__PURE__ */ P("span", {
        children: o
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        km || (km = /* @__PURE__ */ P("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (Pb.propTypes = {
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The label.
   */
  label: i.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: i.bool.isRequired,
  /**
   * @ignore
   */
  style: i.object
});
function YP(e) {
  return Lt("MuiOutlinedInput", e);
}
const er = {
  ...ti,
  ...Ut("MuiOutlinedInput", ["root", "notchedOutline", "input"])
}, GP = (e) => {
  const {
    classes: t
  } = e, r = Ht({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, YP, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...r
  };
}, KP = Ue(Dl, {
  shouldForwardProp: (e) => xr(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: Ml
})(on(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${er.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${er.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${er.focused} .${er.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(jl()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${er.focused} .${er.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${er.error} .${er.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${er.disabled} .${er.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: r
      }) => n.multiline && r === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), XP = Ue(Pb, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(on(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), QP = Ue(Bl, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: _l
})(on(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), zl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var r;
  const o = Xt({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: s = {},
    fullWidth: a = !1,
    inputComponent: l = "input",
    label: c,
    multiline: u = !1,
    notched: d,
    slots: f = {},
    type: h = "text",
    ...g
  } = o, y = GP(o), m = mi(), b = pi({
    props: o,
    muiFormControl: m,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), x = {
    ...o,
    color: b.color || "primary",
    disabled: b.disabled,
    error: b.error,
    focused: b.focused,
    formControl: m,
    fullWidth: a,
    hiddenLabel: b.hiddenLabel,
    multiline: u,
    size: b.size,
    type: h
  }, E = f.root ?? s.Root ?? KP, w = f.input ?? s.Input ?? QP;
  return /* @__PURE__ */ P(Fl, {
    slots: {
      root: E,
      input: w
    },
    renderSuffix: (S) => /* @__PURE__ */ P(XP, {
      ownerState: x,
      className: y.notchedOutline,
      label: c != null && c !== "" && b.required ? r || (r = /* @__PURE__ */ $e(C.Fragment, {
        children: [c, " ", "*"]
      })) : c,
      notched: typeof d < "u" ? d : !!(S.startAdornment || S.filled || S.focused)
    }),
    fullWidth: a,
    inputComponent: l,
    multiline: u,
    ref: n,
    type: h,
    ...g,
    classes: {
      ...y,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (zl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: eo,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: i.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: i.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
zl.muiName = "Input";
function JP(e) {
  return Lt("MuiFormLabel", e);
}
const Hi = Ut("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]), ZP = (e) => {
  const {
    classes: t,
    color: n,
    focused: r,
    disabled: o,
    error: s,
    filled: a,
    required: l
  } = e, c = {
    root: ["root", `color${Mt(n)}`, o && "disabled", s && "error", a && "filled", r && "focused", l && "required"],
    asterisk: ["asterisk", s && "error"]
  };
  return Ht(c, JP, t);
}, eI = Ue("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color === "secondary" && t.colorSecondary, n.filled && t.filled];
  }
})(on(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.body1,
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  variants: [...Object.entries(e.palette).filter(jl()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${Hi.focused}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    props: {},
    style: {
      [`&.${Hi.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      },
      [`&.${Hi.error}`]: {
        color: (e.vars || e).palette.error.main
      }
    }
  }]
}))), tI = Ue("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (e, t) => t.asterisk
})(on(({
  theme: e
}) => ({
  [`&.${Hi.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}))), Ib = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiFormLabel"
  }), {
    children: o,
    className: s,
    color: a,
    component: l = "label",
    disabled: c,
    error: u,
    filled: d,
    focused: f,
    required: h,
    ...g
  } = r, y = mi(), m = pi({
    props: r,
    muiFormControl: y,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  }), b = {
    ...r,
    color: m.color || "primary",
    component: l,
    disabled: m.disabled,
    error: m.error,
    filled: m.filled,
    focused: m.focused,
    required: m.required
  }, x = ZP(b);
  return /* @__PURE__ */ $e(eI, {
    as: l,
    ownerState: b,
    className: Ee(x.root, s),
    ref: n,
    ...g,
    children: [o, m.required && /* @__PURE__ */ $e(tI, {
      ownerState: b,
      "aria-hidden": !0,
      className: x.asterisk,
      children: [" ", "*"]
    })]
  });
});
process.env.NODE_ENV !== "production" && (Ib.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: i.oneOfType([i.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: i.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: i.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: i.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
function nI(e) {
  return Lt("MuiInputLabel", e);
}
Ut("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]);
const rI = (e) => {
  const {
    classes: t,
    formControl: n,
    size: r,
    shrink: o,
    disableAnimation: s,
    variant: a,
    required: l
  } = e, c = {
    root: ["root", n && "formControl", !s && "animated", o && "shrink", r && r !== "medium" && `size${Mt(r)}`, a],
    asterisk: [l && "asterisk"]
  }, u = Ht(c, nI, t);
  return {
    ...t,
    // forward the focused, disabled, etc. classes to the FormLabel
    ...u
  };
}, oI = Ue(Ib, {
  shouldForwardProp: (e) => xr(e) || e === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${Hi.asterisk}`]: t.asterisk
    }, t.root, n.formControl && t.formControl, n.size === "small" && t.sizeSmall, n.shrink && t.shrink, !n.disableAnimation && t.animated, n.focused && t.focused, t[n.variant]];
  }
})(on(({
  theme: e
}) => ({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%",
  variants: [{
    props: ({
      ownerState: t
    }) => t.formControl,
    style: {
      position: "absolute",
      left: 0,
      top: 0,
      // slight alteration to spec spacing to match visual spec result
      transform: "translate(0, 20px) scale(1)"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      // Compensation for the `Input.inputSizeSmall` style.
      transform: "translate(0, 17px) scale(1)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.shrink,
    style: {
      transform: "translate(0, -1.5px) scale(0.75)",
      transformOrigin: "top left",
      maxWidth: "133%"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableAnimation,
    style: {
      transition: e.transitions.create(["color", "transform", "max-width"], {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      // Chrome's autofill feature gives the input field a yellow background.
      // Since the input field is behind the label in the HTML tree,
      // the input field is drawn last and hides the label with an opaque background color.
      // zIndex: 1 will raise the label above opaque background-colors of input.
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(12px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "filled",
      size: "small"
    },
    style: {
      transform: "translate(12px, 13px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "filled" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      transform: "translate(12px, 7px) scale(0.75)",
      maxWidth: "calc(133% - 24px)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n,
      size: r
    }) => t === "filled" && n.shrink && r === "small",
    style: {
      transform: "translate(12px, 4px) scale(0.75)"
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      // see comment above on filled.zIndex
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(14px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "outlined",
      size: "small"
    },
    style: {
      transform: "translate(14px, 9px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "outlined" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      // Theoretically, we should have (8+5)*2/0.75 = 34px
      // but it feels a better when it bleeds a bit on the left, so 32px.
      maxWidth: "calc(133% - 32px)",
      transform: "translate(14px, -9px) scale(0.75)"
    }
  }]
}))), Nb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    name: "MuiInputLabel",
    props: t
  }), {
    disableAnimation: o = !1,
    margin: s,
    shrink: a,
    variant: l,
    className: c,
    ...u
  } = r, d = mi();
  let f = a;
  typeof f > "u" && d && (f = d.filled || d.focused || d.adornedStart);
  const h = pi({
    props: r,
    muiFormControl: d,
    states: ["size", "variant", "required", "focused"]
  }), g = {
    ...r,
    disableAnimation: o,
    formControl: d,
    shrink: f,
    size: h.size,
    variant: h.variant,
    required: h.required,
    focused: h.focused
  }, y = rI(g);
  return /* @__PURE__ */ P(oI, {
    "data-shrink": f,
    ref: n,
    className: Ee(y.root, c),
    ...u,
    ownerState: g,
    classes: y
  });
});
process.env.NODE_ENV !== "production" && (Nb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: i.oneOfType([i.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), i.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: i.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: i.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: i.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: i.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: i.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: i.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
});
function iI(e) {
  return Lt("MuiFormControl", e);
}
Ut("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]);
const sI = (e) => {
  const {
    classes: t,
    margin: n,
    fullWidth: r
  } = e, o = {
    root: ["root", n !== "none" && `margin${Mt(n)}`, r && "fullWidth"]
  };
  return Ht(o, iI, t);
}, aI = Ue("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`margin${Mt(n.margin)}`], n.fullWidth && t.fullWidth];
  }
})({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top",
  // Fix alignment issue on Safari.
  variants: [{
    props: {
      margin: "normal"
    },
    style: {
      marginTop: 16,
      marginBottom: 8
    }
  }, {
    props: {
      margin: "dense"
    },
    style: {
      marginTop: 8,
      marginBottom: 4
    }
  }, {
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }]
}), Ab = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiFormControl"
  }), {
    children: o,
    className: s,
    color: a = "primary",
    component: l = "div",
    disabled: c = !1,
    error: u = !1,
    focused: d,
    fullWidth: f = !1,
    hiddenLabel: h = !1,
    margin: g = "none",
    required: y = !1,
    size: m = "medium",
    variant: b = "outlined",
    ...x
  } = r, E = {
    ...r,
    color: a,
    component: l,
    disabled: c,
    error: u,
    fullWidth: f,
    hiddenLabel: h,
    margin: g,
    required: y,
    size: m,
    variant: b
  }, w = sI(E), [S, v] = C.useState(() => {
    let M = !1;
    return o && C.Children.forEach(o, (V) => {
      if (!gc(V, ["Input", "Select"]))
        return;
      const Y = gc(V, ["Select"]) ? V.props.input : V;
      Y && OP(Y.props) && (M = !0);
    }), M;
  }), [T, R] = C.useState(() => {
    let M = !1;
    return o && C.Children.forEach(o, (V) => {
      gc(V, ["Input", "Select"]) && (Pa(V.props, !0) || Pa(V.props.inputProps, !0)) && (M = !0);
    }), M;
  }), [k, I] = C.useState(!1);
  c && k && I(!1);
  const p = d !== void 0 && !c ? d : k;
  let O;
  const $ = C.useRef(!1);
  process.env.NODE_ENV !== "production" && (O = () => ($.current && console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join(`
`)), $.current = !0, () => {
    $.current = !1;
  }));
  const A = C.useCallback(() => {
    R(!0);
  }, []), D = C.useCallback(() => {
    R(!1);
  }, []), _ = C.useMemo(() => ({
    adornedStart: S,
    setAdornedStart: v,
    color: a,
    disabled: c,
    error: u,
    filled: T,
    focused: p,
    fullWidth: f,
    hiddenLabel: h,
    size: m,
    onBlur: () => {
      I(!1);
    },
    onFocus: () => {
      I(!0);
    },
    onEmpty: D,
    onFilled: A,
    registerEffect: O,
    required: y,
    variant: b
  }), [S, a, c, u, T, p, f, h, O, D, A, y, m, b]);
  return /* @__PURE__ */ P(Al.Provider, {
    value: _,
    children: /* @__PURE__ */ P(aI, {
      as: l,
      ownerState: E,
      className: Ee(w.root, s),
      ref: n,
      ...x,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (Ab.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: i.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: i.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: i.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: i.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
});
function lI(e) {
  return Lt("MuiFormHelperText", e);
}
const $m = Ut("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]);
var Pm;
const cI = (e) => {
  const {
    classes: t,
    contained: n,
    size: r,
    disabled: o,
    error: s,
    filled: a,
    focused: l,
    required: c
  } = e, u = {
    root: ["root", o && "disabled", s && "error", r && `size${Mt(r)}`, n && "contained", l && "focused", a && "filled", c && "required"]
  };
  return Ht(u, lI, t);
}, uI = Ue("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size && t[`size${Mt(n.size)}`], n.contained && t.contained, n.filled && t.filled];
  }
})(on(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.caption,
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${$m.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${$m.error}`]: {
    color: (e.vars || e).palette.error.main
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginTop: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.contained,
    style: {
      marginLeft: 14,
      marginRight: 14
    }
  }]
}))), Mb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiFormHelperText"
  }), {
    children: o,
    className: s,
    component: a = "p",
    disabled: l,
    error: c,
    filled: u,
    focused: d,
    margin: f,
    required: h,
    variant: g,
    ...y
  } = r, m = mi(), b = pi({
    props: r,
    muiFormControl: m,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  }), x = {
    ...r,
    component: a,
    contained: b.variant === "filled" || b.variant === "outlined",
    variant: b.variant,
    size: b.size,
    disabled: b.disabled,
    error: b.error,
    filled: b.filled,
    focused: b.focused,
    required: b.required
  };
  delete x.ownerState;
  const E = cI(x);
  return /* @__PURE__ */ P(uI, {
    as: a,
    className: Ee(E.root, s),
    ref: n,
    ...y,
    ownerState: x,
    children: o === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      Pm || (Pm = /* @__PURE__ */ P("span", {
        className: "notranslate",
        "aria-hidden": !0,
        children: "​"
      }))
    ) : o
  });
});
process.env.NODE_ENV !== "production" && (Mb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: i.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: i.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: i.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: i.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: i.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   */
  variant: i.oneOfType([i.oneOf(["filled", "outlined", "standard"]), i.string])
});
const _b = /* @__PURE__ */ C.createContext({});
process.env.NODE_ENV !== "production" && (_b.displayName = "ListContext");
function dI(e) {
  return Lt("MuiList", e);
}
Ut("MuiList", ["root", "padding", "dense", "subheader"]);
const fI = (e) => {
  const {
    classes: t,
    disablePadding: n,
    dense: r,
    subheader: o
  } = e;
  return Ht({
    root: ["root", !n && "padding", r && "dense", o && "subheader"]
  }, dI, t);
}, pI = Ue("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.disablePadding && t.padding, n.dense && t.dense, n.subheader && t.subheader];
  }
})({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative",
  variants: [{
    props: ({
      ownerState: e
    }) => !e.disablePadding,
    style: {
      paddingTop: 8,
      paddingBottom: 8
    }
  }, {
    props: ({
      ownerState: e
    }) => e.subheader,
    style: {
      paddingTop: 0
    }
  }]
}), Db = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiList"
  }), {
    children: o,
    className: s,
    component: a = "ul",
    dense: l = !1,
    disablePadding: c = !1,
    subheader: u,
    ...d
  } = r, f = C.useMemo(() => ({
    dense: l
  }), [l]), h = {
    ...r,
    component: a,
    dense: l,
    disablePadding: c
  }, g = fI(h);
  return /* @__PURE__ */ P(_b.Provider, {
    value: f,
    children: /* @__PURE__ */ $e(pI, {
      as: a,
      className: Ee(g.root, s),
      ref: n,
      ownerState: h,
      ...d,
      children: [u, o]
    })
  });
});
process.env.NODE_ENV !== "production" && (Db.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: i.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: i.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
function bc(e, t, n) {
  return e === t ? e.firstChild : t && t.nextElementSibling ? t.nextElementSibling : n ? null : e.firstChild;
}
function Im(e, t, n) {
  return e === t ? n ? e.firstChild : e.lastChild : t && t.previousElementSibling ? t.previousElementSibling : n ? null : e.lastChild;
}
function Bb(e, t) {
  if (t === void 0)
    return !0;
  let n = e.innerText;
  return n === void 0 && (n = e.textContent), n = n.trim().toLowerCase(), n.length === 0 ? !1 : t.repeating ? n[0] === t.keys[0] : n.startsWith(t.keys.join(""));
}
function Ti(e, t, n, r, o, s) {
  let a = !1, l = o(e, t, t ? n : !1);
  for (; l; ) {
    if (l === e.firstChild) {
      if (a)
        return !1;
      a = !0;
    }
    const c = r ? !1 : l.disabled || l.getAttribute("aria-disabled") === "true";
    if (!l.hasAttribute("tabindex") || !Bb(l, s) || c)
      l = o(e, l, n);
    else
      return l.focus(), !0;
  }
  return !1;
}
const Fb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: r,
    autoFocus: o = !1,
    autoFocusItem: s = !1,
    children: a,
    className: l,
    disabledItemsFocusable: c = !1,
    disableListWrap: u = !1,
    onKeyDown: d,
    variant: f = "selectedMenu",
    ...h
  } = t, g = C.useRef(null), y = C.useRef({
    keys: [],
    repeating: !0,
    previousKeyMatched: !0,
    lastTime: null
  });
  ho(() => {
    o && g.current.focus();
  }, [o]), C.useImperativeHandle(r, () => ({
    adjustStyleForScrollbar: (w, {
      direction: S
    }) => {
      const v = !g.current.style.width;
      if (w.clientHeight < g.current.clientHeight && v) {
        const T = `${wb(Nr(w))}px`;
        g.current.style[S === "rtl" ? "paddingLeft" : "paddingRight"] = T, g.current.style.width = `calc(100% + ${T})`;
      }
      return g.current;
    }
  }), []);
  const m = (w) => {
    const S = g.current, v = w.key;
    if (w.ctrlKey || w.metaKey || w.altKey) {
      d && d(w);
      return;
    }
    const R = Xn(S).activeElement;
    if (v === "ArrowDown")
      w.preventDefault(), Ti(S, R, u, c, bc);
    else if (v === "ArrowUp")
      w.preventDefault(), Ti(S, R, u, c, Im);
    else if (v === "Home")
      w.preventDefault(), Ti(S, null, u, c, bc);
    else if (v === "End")
      w.preventDefault(), Ti(S, null, u, c, Im);
    else if (v.length === 1) {
      const k = y.current, I = v.toLowerCase(), p = performance.now();
      k.keys.length > 0 && (p - k.lastTime > 500 ? (k.keys = [], k.repeating = !0, k.previousKeyMatched = !0) : k.repeating && I !== k.keys[0] && (k.repeating = !1)), k.lastTime = p, k.keys.push(I);
      const O = R && !k.repeating && Bb(R, k);
      k.previousKeyMatched && (O || Ti(S, R, !1, c, bc, k)) ? w.preventDefault() : k.previousKeyMatched = !1;
    }
    d && d(w);
  }, b = Vn(g, n);
  let x = -1;
  C.Children.forEach(a, (w, S) => {
    if (!/* @__PURE__ */ C.isValidElement(w)) {
      x === S && (x += 1, x >= a.length && (x = -1));
      return;
    }
    process.env.NODE_ENV !== "production" && Yn.isFragment(w) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), w.props.disabled || (f === "selectedMenu" && w.props.selected || x === -1) && (x = S), x === S && (w.props.disabled || w.props.muiSkipListHighlight || w.type.muiSkipListHighlight) && (x += 1, x >= a.length && (x = -1));
  });
  const E = C.Children.map(a, (w, S) => {
    if (S === x) {
      const v = {};
      return s && (v.autoFocus = !0), w.props.tabIndex === void 0 && f === "selectedMenu" && (v.tabIndex = 0), /* @__PURE__ */ C.cloneElement(w, v);
    }
    return w;
  });
  return /* @__PURE__ */ P(Db, {
    role: "menu",
    ref: b,
    className: l,
    onKeyDown: m,
    tabIndex: o ? 0 : -1,
    ...h,
    children: E
  });
});
process.env.NODE_ENV !== "production" && (Fb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: i.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: i.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: i.node,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: i.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: i.bool,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: i.oneOf(["menu", "selectedMenu"])
});
const jb = (e) => e.scrollTop;
function Na(e, t) {
  const {
    timeout: n,
    easing: r,
    style: o = {}
  } = e;
  return {
    duration: o.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: o.transitionTimingFunction ?? (typeof r == "object" ? r[t.mode] : r),
    delay: o.transitionDelay
  };
}
function gu(e) {
  return `scale(${e}, ${e ** 2})`;
}
const mI = {
  entering: {
    opacity: 1,
    transform: gu(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, vc = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), Aa = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    addEndListener: r,
    appear: o = !0,
    children: s,
    easing: a,
    in: l,
    onEnter: c,
    onEntered: u,
    onEntering: d,
    onExit: f,
    onExited: h,
    onExiting: g,
    style: y,
    timeout: m = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: b = kn,
    ...x
  } = t, E = xP(), w = C.useRef(), S = Wd(), v = C.useRef(null), T = Vn(v, Cs(s), n), R = (_) => (M) => {
    if (_) {
      const V = v.current;
      M === void 0 ? _(V) : _(V, M);
    }
  }, k = R(d), I = R((_, M) => {
    jb(_);
    const {
      duration: V,
      delay: Y,
      easing: U
    } = Na({
      style: y,
      timeout: m,
      easing: a
    }, {
      mode: "enter"
    });
    let j;
    m === "auto" ? (j = S.transitions.getAutoHeightDuration(_.clientHeight), w.current = j) : j = V, _.style.transition = [S.transitions.create("opacity", {
      duration: j,
      delay: Y
    }), S.transitions.create("transform", {
      duration: vc ? j : j * 0.666,
      delay: Y,
      easing: U
    })].join(","), c && c(_, M);
  }), p = R(u), O = R(g), $ = R((_) => {
    const {
      duration: M,
      delay: V,
      easing: Y
    } = Na({
      style: y,
      timeout: m,
      easing: a
    }, {
      mode: "exit"
    });
    let U;
    m === "auto" ? (U = S.transitions.getAutoHeightDuration(_.clientHeight), w.current = U) : U = M, _.style.transition = [S.transitions.create("opacity", {
      duration: U,
      delay: V
    }), S.transitions.create("transform", {
      duration: vc ? U : U * 0.666,
      delay: vc ? V : V || U * 0.333,
      easing: Y
    })].join(","), _.style.opacity = 0, _.style.transform = gu(0.75), f && f(_);
  }), A = R(h);
  return /* @__PURE__ */ P(b, {
    appear: o,
    in: l,
    nodeRef: v,
    onEnter: I,
    onEntered: p,
    onEntering: k,
    onExit: $,
    onExited: A,
    onExiting: O,
    addEndListener: (_) => {
      m === "auto" && E.start(w.current || 0, _), r && r(v.current, _);
    },
    timeout: m === "auto" ? null : m,
    ...x,
    children: (_, {
      ownerState: M,
      ...V
    }) => /* @__PURE__ */ C.cloneElement(s, {
      style: {
        opacity: 0,
        transform: gu(0.75),
        visibility: _ === "exited" && !l ? "hidden" : void 0,
        ...mI[_],
        ...y,
        ...s.props.style
      },
      ref: T,
      ...V
    })
  });
});
process.env.NODE_ENV !== "production" && (Aa.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: Es.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
Aa && (Aa.muiSupportAuto = !0);
function hI(e) {
  const t = Xn(e);
  return t.body === e ? Nr(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function qi(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function Nm(e) {
  return parseInt(Nr(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function gI(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), r = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || r;
}
function Am(e, t, n, r, o) {
  const s = [t, n, ...r];
  [].forEach.call(e.children, (a) => {
    const l = !s.includes(a), c = !gI(a);
    l && c && qi(a, o);
  });
}
function xc(e, t) {
  let n = -1;
  return e.some((r, o) => t(r) ? (n = o, !0) : !1), n;
}
function yI(e, t) {
  const n = [], r = e.container;
  if (!t.disableScrollLock) {
    if (hI(r)) {
      const a = wb(Nr(r));
      n.push({
        value: r.style.paddingRight,
        property: "padding-right",
        el: r
      }), r.style.paddingRight = `${Nm(r) + a}px`;
      const l = Xn(r).querySelectorAll(".mui-fixed");
      [].forEach.call(l, (c) => {
        n.push({
          value: c.style.paddingRight,
          property: "padding-right",
          el: c
        }), c.style.paddingRight = `${Nm(c) + a}px`;
      });
    }
    let s;
    if (r.parentNode instanceof DocumentFragment)
      s = Xn(r).body;
    else {
      const a = r.parentElement, l = Nr(r);
      s = (a == null ? void 0 : a.nodeName) === "HTML" && l.getComputedStyle(a).overflowY === "scroll" ? a : r;
    }
    n.push({
      value: s.style.overflow,
      property: "overflow",
      el: s
    }, {
      value: s.style.overflowX,
      property: "overflow-x",
      el: s
    }, {
      value: s.style.overflowY,
      property: "overflow-y",
      el: s
    }), s.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: s,
      el: a,
      property: l
    }) => {
      s ? a.style.setProperty(l, s) : a.style.removeProperty(l);
    });
  };
}
function bI(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
class vI {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let r = this.modals.indexOf(t);
    if (r !== -1)
      return r;
    r = this.modals.length, this.modals.push(t), t.modalRef && qi(t.modalRef, !1);
    const o = bI(n);
    Am(n, t.mount, t.modalRef, o, !0);
    const s = xc(this.containers, (a) => a.container === n);
    return s !== -1 ? (this.containers[s].modals.push(t), r) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: o
    }), r);
  }
  mount(t, n) {
    const r = xc(this.containers, (s) => s.modals.includes(t)), o = this.containers[r];
    o.restore || (o.restore = yI(o, n));
  }
  remove(t, n = !0) {
    const r = this.modals.indexOf(t);
    if (r === -1)
      return r;
    const o = xc(this.containers, (a) => a.modals.includes(t)), s = this.containers[o];
    if (s.modals.splice(s.modals.indexOf(t), 1), this.modals.splice(r, 1), s.modals.length === 0)
      s.restore && s.restore(), t.modalRef && qi(t.modalRef, n), Am(s.container, t.mount, t.modalRef, s.hiddenSiblings, !1), this.containers.splice(o, 1);
    else {
      const a = s.modals[s.modals.length - 1];
      a.modalRef && qi(a.modalRef, !1);
    }
    return r;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
}
const xI = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function wI(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function SI(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (r) => e.ownerDocument.querySelector(`input[type="radio"]${r}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function TI(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || SI(e));
}
function EI(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(xI)).forEach((r, o) => {
    const s = wI(r);
    s === -1 || !TI(r) || (s === 0 ? t.push(r) : n.push({
      documentOrder: o,
      tabIndex: s,
      node: r
    }));
  }), n.sort((r, o) => r.tabIndex === o.tabIndex ? r.documentOrder - o.documentOrder : r.tabIndex - o.tabIndex).map((r) => r.node).concat(t);
}
function CI() {
  return !0;
}
function Ma(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: r = !1,
    disableRestoreFocus: o = !1,
    getTabbable: s = EI,
    isEnabled: a = CI,
    open: l
  } = e, c = C.useRef(!1), u = C.useRef(null), d = C.useRef(null), f = C.useRef(null), h = C.useRef(null), g = C.useRef(!1), y = C.useRef(null), m = Vn(Cs(t), y), b = C.useRef(null);
  C.useEffect(() => {
    !l || !y.current || (g.current = !n);
  }, [n, l]), C.useEffect(() => {
    if (!l || !y.current)
      return;
    const w = Xn(y.current);
    return y.current.contains(w.activeElement) || (y.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), y.current.setAttribute("tabIndex", "-1")), g.current && y.current.focus()), () => {
      o || (f.current && f.current.focus && (c.current = !0, f.current.focus()), f.current = null);
    };
  }, [l]), C.useEffect(() => {
    if (!l || !y.current)
      return;
    const w = Xn(y.current), S = (R) => {
      b.current = R, !(r || !a() || R.key !== "Tab") && w.activeElement === y.current && R.shiftKey && (c.current = !0, d.current && d.current.focus());
    }, v = () => {
      var I, p;
      const R = y.current;
      if (R === null)
        return;
      if (!w.hasFocus() || !a() || c.current) {
        c.current = !1;
        return;
      }
      if (R.contains(w.activeElement) || r && w.activeElement !== u.current && w.activeElement !== d.current)
        return;
      if (w.activeElement !== h.current)
        h.current = null;
      else if (h.current !== null)
        return;
      if (!g.current)
        return;
      let k = [];
      if ((w.activeElement === u.current || w.activeElement === d.current) && (k = s(y.current)), k.length > 0) {
        const O = !!((I = b.current) != null && I.shiftKey && ((p = b.current) == null ? void 0 : p.key) === "Tab"), $ = k[0], A = k[k.length - 1];
        typeof $ != "string" && typeof A != "string" && (O ? A.focus() : $.focus());
      } else
        R.focus();
    };
    w.addEventListener("focusin", v), w.addEventListener("keydown", S, !0);
    const T = setInterval(() => {
      w.activeElement && w.activeElement.tagName === "BODY" && v();
    }, 50);
    return () => {
      clearInterval(T), w.removeEventListener("focusin", v), w.removeEventListener("keydown", S, !0);
    };
  }, [n, r, o, a, l, s]);
  const x = (w) => {
    f.current === null && (f.current = w.relatedTarget), g.current = !0, h.current = w.target;
    const S = t.props.onFocus;
    S && S(w);
  }, E = (w) => {
    f.current === null && (f.current = w.relatedTarget), g.current = !0;
  };
  return /* @__PURE__ */ $e(C.Fragment, {
    children: [/* @__PURE__ */ P("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: u,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ C.cloneElement(t, {
      ref: m,
      onFocus: x
    }), /* @__PURE__ */ P("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: d,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (Ma.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: Es,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: i.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: i.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: i.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: i.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: i.func,
  /**
   * If `true`, focus is locked.
   */
  open: i.bool.isRequired
});
process.env.NODE_ENV !== "production" && (Ma.propTypes = lb(Ma.propTypes));
function OI(e) {
  return typeof e == "function" ? e() : e;
}
const _a = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    children: r,
    container: o,
    disablePortal: s = !1
  } = t, [a, l] = C.useState(null), c = Vn(/* @__PURE__ */ C.isValidElement(r) ? Cs(r) : null, n);
  if (ho(() => {
    s || l(OI(o) || document.body);
  }, [o, s]), ho(() => {
    if (a && !s)
      return xm(n, a), () => {
        xm(n, null);
      };
  }, [n, a, s]), s) {
    if (/* @__PURE__ */ C.isValidElement(r)) {
      const u = {
        ref: c
      };
      return /* @__PURE__ */ C.cloneElement(r, u);
    }
    return r;
  }
  return a && /* @__PURE__ */ dh.createPortal(r, a);
});
process.env.NODE_ENV !== "production" && (_a.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: i.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([cs, i.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool
});
process.env.NODE_ENV !== "production" && (_a.propTypes = lb(_a.propTypes));
function ln(e, t) {
  const {
    className: n,
    elementType: r,
    ownerState: o,
    externalForwardedProps: s,
    internalForwardedProps: a,
    shouldForwardComponentProp: l = !1,
    ...c
  } = t, {
    component: u,
    slots: d = {
      [e]: void 0
    },
    slotProps: f = {
      [e]: void 0
    },
    ...h
  } = s, g = d[e] || r, y = kb(f[e], o), {
    props: {
      component: m,
      ...b
    },
    internalRef: x
  } = Rb({
    className: n,
    ...c,
    externalForwardedProps: e === "root" ? h : void 0,
    externalSlotProps: y
  }), E = Vn(x, y == null ? void 0 : y.ref, t.ref), w = e === "root" ? m || u : m, S = Cb(g, {
    ...e === "root" && !u && !d[e] && a,
    ...e !== "root" && !d[e] && a,
    ...b,
    ...w && !l && {
      as: w
    },
    ...w && l && {
      component: w
    },
    ref: E
  }, o);
  return [g, S];
}
const RI = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, Lb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Wd(), o = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: s,
    appear: a = !0,
    children: l,
    easing: c,
    in: u,
    onEnter: d,
    onEntered: f,
    onEntering: h,
    onExit: g,
    onExited: y,
    onExiting: m,
    style: b,
    timeout: x = o,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: E = kn,
    ...w
  } = t, S = C.useRef(null), v = Vn(S, Cs(l), n), T = (D) => (_) => {
    if (D) {
      const M = S.current;
      _ === void 0 ? D(M) : D(M, _);
    }
  }, R = T(h), k = T((D, _) => {
    jb(D);
    const M = Na({
      style: b,
      timeout: x,
      easing: c
    }, {
      mode: "enter"
    });
    D.style.webkitTransition = r.transitions.create("opacity", M), D.style.transition = r.transitions.create("opacity", M), d && d(D, _);
  }), I = T(f), p = T(m), O = T((D) => {
    const _ = Na({
      style: b,
      timeout: x,
      easing: c
    }, {
      mode: "exit"
    });
    D.style.webkitTransition = r.transitions.create("opacity", _), D.style.transition = r.transitions.create("opacity", _), g && g(D);
  }), $ = T(y);
  return /* @__PURE__ */ P(E, {
    appear: a,
    in: u,
    nodeRef: S,
    onEnter: k,
    onEntered: I,
    onEntering: R,
    onExit: O,
    onExited: $,
    onExiting: p,
    addEndListener: (D) => {
      s && s(S.current, D);
    },
    timeout: x,
    ...w,
    children: (D, {
      ownerState: _,
      ...M
    }) => /* @__PURE__ */ C.cloneElement(l, {
      style: {
        opacity: 0,
        visibility: D === "exited" && !u ? "hidden" : void 0,
        ...RI[D],
        ...b,
        ...l.props.style
      },
      ref: v,
      ...M
    })
  });
});
process.env.NODE_ENV !== "production" && (Lb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: Es.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function kI(e) {
  return Lt("MuiBackdrop", e);
}
Ut("MuiBackdrop", ["root", "invisible"]);
const $I = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return Ht({
    root: ["root", n && "invisible"]
  }, kI, t);
}, PI = Ue("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), Vb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: o,
    className: s,
    component: a = "div",
    invisible: l = !1,
    open: c,
    components: u = {},
    componentsProps: d = {},
    slotProps: f = {},
    slots: h = {},
    TransitionComponent: g,
    transitionDuration: y,
    ...m
  } = r, b = {
    ...r,
    component: a,
    invisible: l
  }, x = $I(b), E = {
    transition: g,
    root: u.Root,
    ...h
  }, w = {
    ...d,
    ...f
  }, S = {
    slots: E,
    slotProps: w
  }, [v, T] = ln("root", {
    elementType: PI,
    externalForwardedProps: S,
    className: Ee(x.root, s),
    ownerState: b
  }), [R, k] = ln("transition", {
    elementType: Lb,
    externalForwardedProps: S,
    ownerState: b
  });
  return /* @__PURE__ */ P(R, {
    in: c,
    timeout: y,
    ...m,
    ...k,
    children: /* @__PURE__ */ P(v, {
      "aria-hidden": !0,
      ...T,
      classes: x,
      ref: n,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (Vb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    root: i.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: i.bool,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: i.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function II(e) {
  return typeof e == "function" ? e() : e;
}
function NI(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const Mm = () => {
}, Gs = new vI();
function AI(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: r = !1,
    closeAfterTransition: o = !1,
    onTransitionEnter: s,
    onTransitionExited: a,
    children: l,
    onClose: c,
    open: u,
    rootRef: d
  } = e, f = C.useRef({}), h = C.useRef(null), g = C.useRef(null), y = Vn(g, d), [m, b] = C.useState(!u), x = NI(l);
  let E = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (E = !1);
  const w = () => Xn(h.current), S = () => (f.current.modalRef = g.current, f.current.mount = h.current, f.current), v = () => {
    Gs.mount(S(), {
      disableScrollLock: r
    }), g.current && (g.current.scrollTop = 0);
  }, T = pu(() => {
    const _ = II(t) || w().body;
    Gs.add(S(), _), g.current && v();
  }), R = () => Gs.isTopModal(S()), k = pu((_) => {
    h.current = _, _ && (u && R() ? v() : g.current && qi(g.current, E));
  }), I = C.useCallback(() => {
    Gs.remove(S(), E);
  }, [E]);
  C.useEffect(() => () => {
    I();
  }, [I]), C.useEffect(() => {
    u ? T() : (!x || !o) && I();
  }, [u, I, x, o, T]);
  const p = (_) => (M) => {
    var V;
    (V = _.onKeyDown) == null || V.call(_, M), !(M.key !== "Escape" || M.which === 229 || // Wait until IME is settled.
    !R()) && (n || (M.stopPropagation(), c && c(M, "escapeKeyDown")));
  }, O = (_) => (M) => {
    var V;
    (V = _.onClick) == null || V.call(_, M), M.target === M.currentTarget && c && c(M, "backdropClick");
  };
  return {
    getRootProps: (_ = {}) => {
      const M = Ob(e);
      delete M.onTransitionEnter, delete M.onTransitionExited;
      const V = {
        ...M,
        ..._
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...V,
        onKeyDown: p(V),
        ref: y
      };
    },
    getBackdropProps: (_ = {}) => {
      const M = _;
      return {
        "aria-hidden": !0,
        ...M,
        onClick: O(M),
        open: u
      };
    },
    getTransitionProps: () => {
      const _ = () => {
        b(!1), s && s();
      }, M = () => {
        b(!0), a && a(), o && I();
      };
      return {
        onEnter: vm(_, (l == null ? void 0 : l.props.onEnter) ?? Mm),
        onExited: vm(M, (l == null ? void 0 : l.props.onExited) ?? Mm)
      };
    },
    rootRef: y,
    portalRef: k,
    isTopModal: R,
    exited: m,
    hasTransition: x
  };
}
function MI(e) {
  return Lt("MuiModal", e);
}
Ut("MuiModal", ["root", "hidden", "backdrop"]);
const _I = (e) => {
  const {
    open: t,
    exited: n,
    classes: r
  } = e;
  return Ht({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, MI, r);
}, DI = Ue("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(on(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), BI = Ue(Vb, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), zb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: o = BI,
    BackdropProps: s,
    classes: a,
    className: l,
    closeAfterTransition: c = !1,
    children: u,
    container: d,
    component: f,
    components: h = {},
    componentsProps: g = {},
    disableAutoFocus: y = !1,
    disableEnforceFocus: m = !1,
    disableEscapeKeyDown: b = !1,
    disablePortal: x = !1,
    disableRestoreFocus: E = !1,
    disableScrollLock: w = !1,
    hideBackdrop: S = !1,
    keepMounted: v = !1,
    onClose: T,
    onTransitionEnter: R,
    onTransitionExited: k,
    open: I,
    slotProps: p = {},
    slots: O = {},
    // eslint-disable-next-line react/prop-types
    theme: $,
    ...A
  } = r, D = {
    ...r,
    closeAfterTransition: c,
    disableAutoFocus: y,
    disableEnforceFocus: m,
    disableEscapeKeyDown: b,
    disablePortal: x,
    disableRestoreFocus: E,
    disableScrollLock: w,
    hideBackdrop: S,
    keepMounted: v
  }, {
    getRootProps: _,
    getBackdropProps: M,
    getTransitionProps: V,
    portalRef: Y,
    isTopModal: U,
    exited: j,
    hasTransition: W
  } = AI({
    ...D,
    rootRef: n
  }), ee = {
    ...D,
    exited: j
  }, K = _I(ee), oe = {};
  if (u.props.tabIndex === void 0 && (oe.tabIndex = "-1"), W) {
    const {
      onEnter: Q,
      onExited: ie
    } = V();
    oe.onEnter = Q, oe.onExited = ie;
  }
  const ne = {
    slots: {
      root: h.Root,
      backdrop: h.Backdrop,
      ...O
    },
    slotProps: {
      ...g,
      ...p
    }
  }, [se, de] = ln("root", {
    ref: n,
    elementType: DI,
    externalForwardedProps: {
      ...ne,
      ...A,
      component: f
    },
    getSlotProps: _,
    ownerState: ee,
    className: Ee(l, K == null ? void 0 : K.root, !ee.open && ee.exited && (K == null ? void 0 : K.hidden))
  }), [X, ae] = ln("backdrop", {
    ref: s == null ? void 0 : s.ref,
    elementType: o,
    externalForwardedProps: ne,
    shouldForwardComponentProp: !0,
    additionalProps: s,
    getSlotProps: (Q) => M({
      ...Q,
      onClick: (ie) => {
        Q != null && Q.onClick && Q.onClick(ie);
      }
    }),
    className: Ee(s == null ? void 0 : s.className, K == null ? void 0 : K.backdrop),
    ownerState: ee
  });
  return !v && !I && (!W || j) ? null : /* @__PURE__ */ P(_a, {
    ref: Y,
    container: d,
    disablePortal: x,
    children: /* @__PURE__ */ $e(se, {
      ...de,
      children: [!S && o ? /* @__PURE__ */ P(X, {
        ...ae
      }) : null, /* @__PURE__ */ P(Ma, {
        disableEnforceFocus: m,
        disableAutoFocus: y,
        disableRestoreFocus: E,
        isEnabled: U,
        open: I,
        children: /* @__PURE__ */ C.cloneElement(u, oe)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (zb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: i.object,
  /**
   * A single child content element.
   */
  children: Es.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: i.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Backdrop: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([cs, i.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: i.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: i.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: i.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: i.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: i.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: i.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: i.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
function FI(e) {
  return Lt("MuiPaper", e);
}
Ut("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const jI = (e) => {
  const {
    square: t,
    elevation: n,
    variant: r,
    classes: o
  } = e, s = {
    root: ["root", r, !t && "rounded", r === "elevation" && `elevation${n}`]
  };
  return Ht(s, FI, o);
}, LI = Ue("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(on(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), Wb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var g;
  const r = Xt({
    props: t,
    name: "MuiPaper"
  }), o = Wd(), {
    className: s,
    component: a = "div",
    elevation: l = 1,
    square: c = !1,
    variant: u = "elevation",
    ...d
  } = r, f = {
    ...r,
    component: a,
    elevation: l,
    square: c,
    variant: u
  }, h = jI(f);
  return process.env.NODE_ENV !== "production" && o.shadows[l] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${l}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${l}]\` is defined.`].join(`
`)), /* @__PURE__ */ P(LI, {
    as: a,
    ownerState: f,
    className: Ee(h.root, s),
    ref: n,
    ...d,
    style: {
      ...u === "elevation" && {
        "--Paper-shadow": (o.vars || o).shadows[l],
        ...o.vars && {
          "--Paper-overlay": (g = o.vars.overlays) == null ? void 0 : g[l]
        },
        ...!o.vars && o.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${uu("#fff", fu(l))}, ${uu("#fff", fu(l))})`
        }
      },
      ...d.style
    }
  });
});
process.env.NODE_ENV !== "production" && (Wb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: Ts(Eb, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: i.bool,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: i.oneOfType([i.oneOf(["elevation", "outlined"]), i.string])
});
function VI(e) {
  return Lt("MuiPopover", e);
}
Ut("MuiPopover", ["root", "paper"]);
function _m(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function Dm(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function Bm(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function _i(e) {
  return typeof e == "function" ? e() : e;
}
const zI = (e) => {
  const {
    classes: t
  } = e;
  return Ht({
    root: ["root"],
    paper: ["paper"]
  }, VI, t);
}, WI = Ue(zb, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), Ub = Ue(Wb, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), Hb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiPopover"
  }), {
    action: o,
    anchorEl: s,
    anchorOrigin: a = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: l,
    anchorReference: c = "anchorEl",
    children: u,
    className: d,
    container: f,
    elevation: h = 8,
    marginThreshold: g = 16,
    open: y,
    PaperProps: m = {},
    // TODO: remove in v7
    slots: b = {},
    slotProps: x = {},
    transformOrigin: E = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: w,
    // TODO: remove in v7
    transitionDuration: S = "auto",
    TransitionProps: v = {},
    // TODO: remove in v7
    disableScrollLock: T = !1,
    ...R
  } = r, k = C.useRef(), I = {
    ...r,
    anchorOrigin: a,
    anchorReference: c,
    elevation: h,
    marginThreshold: g,
    transformOrigin: E,
    TransitionComponent: w,
    transitionDuration: S,
    TransitionProps: v
  }, p = zI(I), O = C.useCallback(() => {
    if (c === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (l || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), l;
    const Q = _i(s), ie = Q && Q.nodeType === 1 ? Q : Xn(k.current).body, F = ie.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const he = ie.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && he.top === 0 && he.left === 0 && he.right === 0 && he.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: F.top + _m(F, a.vertical),
      left: F.left + Dm(F, a.horizontal)
    };
  }, [s, a.horizontal, a.vertical, l, c]), $ = C.useCallback((Q) => ({
    vertical: _m(Q, E.vertical),
    horizontal: Dm(Q, E.horizontal)
  }), [E.horizontal, E.vertical]), A = C.useCallback((Q) => {
    const ie = {
      width: Q.offsetWidth,
      height: Q.offsetHeight
    }, F = $(ie);
    if (c === "none")
      return {
        top: null,
        left: null,
        transformOrigin: Bm(F)
      };
    const he = O();
    let fe = he.top - F.vertical, Te = he.left - F.horizontal;
    const Le = fe + ie.height, Ae = Te + ie.width, Ie = Nr(_i(s)), Re = Ie.innerHeight - g, Be = Ie.innerWidth - g;
    if (g !== null && fe < g) {
      const Oe = fe - g;
      fe -= Oe, F.vertical += Oe;
    } else if (g !== null && Le > Re) {
      const Oe = Le - Re;
      fe -= Oe, F.vertical += Oe;
    }
    if (process.env.NODE_ENV !== "production" && ie.height > Re && ie.height && Re && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${ie.height - Re}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), g !== null && Te < g) {
      const Oe = Te - g;
      Te -= Oe, F.horizontal += Oe;
    } else if (Ae > Be) {
      const Oe = Ae - Be;
      Te -= Oe, F.horizontal += Oe;
    }
    return {
      top: `${Math.round(fe)}px`,
      left: `${Math.round(Te)}px`,
      transformOrigin: Bm(F)
    };
  }, [s, c, O, $, g]), [D, _] = C.useState(y), M = C.useCallback(() => {
    const Q = k.current;
    if (!Q)
      return;
    const ie = A(Q);
    ie.top !== null && Q.style.setProperty("top", ie.top), ie.left !== null && (Q.style.left = ie.left), Q.style.transformOrigin = ie.transformOrigin, _(!0);
  }, [A]);
  C.useEffect(() => (T && window.addEventListener("scroll", M), () => window.removeEventListener("scroll", M)), [s, T, M]);
  const V = () => {
    M();
  }, Y = () => {
    _(!1);
  };
  C.useEffect(() => {
    y && M();
  }), C.useImperativeHandle(o, () => y ? {
    updatePosition: () => {
      M();
    }
  } : null, [y, M]), C.useEffect(() => {
    if (!y)
      return;
    const Q = xb(() => {
      M();
    }), ie = Nr(_i(s));
    return ie.addEventListener("resize", Q), () => {
      Q.clear(), ie.removeEventListener("resize", Q);
    };
  }, [s, y, M]);
  let U = S;
  const j = {
    slots: {
      transition: w,
      ...b
    },
    slotProps: {
      transition: v,
      paper: m,
      ...x
    }
  }, [W, ee] = ln("transition", {
    elementType: Aa,
    externalForwardedProps: j,
    ownerState: I,
    getSlotProps: (Q) => ({
      ...Q,
      onEntering: (ie, F) => {
        var he;
        (he = Q.onEntering) == null || he.call(Q, ie, F), V();
      },
      onExited: (ie) => {
        var F;
        (F = Q.onExited) == null || F.call(Q, ie), Y();
      }
    }),
    additionalProps: {
      appear: !0,
      in: y
    }
  });
  S === "auto" && !W.muiSupportAuto && (U = void 0);
  const K = f || (s ? Xn(_i(s)).body : void 0), [oe, {
    slots: ne,
    slotProps: se,
    ...de
  }] = ln("root", {
    ref: n,
    elementType: WI,
    externalForwardedProps: {
      ...j,
      ...R
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: b.backdrop
      },
      slotProps: {
        backdrop: VP(typeof x.backdrop == "function" ? x.backdrop(I) : x.backdrop, {
          invisible: !0
        })
      },
      container: K,
      open: y
    },
    ownerState: I,
    className: Ee(p.root, d)
  }), [X, ae] = ln("paper", {
    ref: k,
    className: p.paper,
    elementType: Ub,
    externalForwardedProps: j,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: h,
      style: D ? void 0 : {
        opacity: 0
      }
    },
    ownerState: I
  });
  return /* @__PURE__ */ P(oe, {
    ...de,
    ...!hu(oe) && {
      slots: ne,
      slotProps: se,
      disableScrollLock: T
    },
    children: /* @__PURE__ */ P(W, {
      ...ee,
      timeout: U,
      children: /* @__PURE__ */ P(X, {
        ...ae,
        children: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (Hb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: eo,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: Ts(i.oneOfType([cs, i.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = _i(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: i.shape({
    horizontal: i.oneOfType([i.oneOf(["center", "left", "right"]), i.number]).isRequired,
    vertical: i.oneOfType([i.oneOf(["bottom", "center", "top"]), i.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: i.shape({
    left: i.number.isRequired,
    top: i.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: i.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: i.object,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([cs, i.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: i.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: Eb,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: i.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: i.shape({
    component: bb
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: i.shape({
    horizontal: i.oneOfType([i.oneOf(["center", "left", "right"]), i.number]).isRequired,
    vertical: i.oneOfType([i.oneOf(["bottom", "center", "top"]), i.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: i.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: i.object
});
function UI(e) {
  return Lt("MuiMenu", e);
}
Ut("MuiMenu", ["root", "paper", "list"]);
const HI = {
  vertical: "top",
  horizontal: "right"
}, qI = {
  vertical: "top",
  horizontal: "left"
}, YI = (e) => {
  const {
    classes: t
  } = e;
  return Ht({
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  }, UI, t);
}, GI = Ue(Hb, {
  shouldForwardProp: (e) => xr(e) || e === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), KI = Ue(Ub, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}), XI = Ue(Fb, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (e, t) => t.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), qb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiMenu"
  }), {
    autoFocus: o = !0,
    children: s,
    className: a,
    disableAutoFocusItem: l = !1,
    MenuListProps: c = {},
    onClose: u,
    open: d,
    PaperProps: f = {},
    PopoverClasses: h,
    transitionDuration: g = "auto",
    TransitionProps: {
      onEntering: y,
      ...m
    } = {},
    variant: b = "selectedMenu",
    slots: x = {},
    slotProps: E = {},
    ...w
  } = r, S = E$(), v = {
    ...r,
    autoFocus: o,
    disableAutoFocusItem: l,
    MenuListProps: c,
    onEntering: y,
    PaperProps: f,
    transitionDuration: g,
    TransitionProps: m,
    variant: b
  }, T = YI(v), R = o && !l && d, k = C.useRef(null), I = (U, j) => {
    k.current && k.current.adjustStyleForScrollbar(U, {
      direction: S ? "rtl" : "ltr"
    }), y && y(U, j);
  }, p = (U) => {
    U.key === "Tab" && (U.preventDefault(), u && u(U, "tabKeyDown"));
  };
  let O = -1;
  C.Children.map(s, (U, j) => {
    /* @__PURE__ */ C.isValidElement(U) && (process.env.NODE_ENV !== "production" && Yn.isFragment(U) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), U.props.disabled || (b === "selectedMenu" && U.props.selected || O === -1) && (O = j));
  });
  const $ = {
    slots: x,
    slotProps: {
      list: c,
      transition: m,
      paper: f,
      ...E
    }
  }, A = TP({
    elementType: x.root,
    externalSlotProps: E.root,
    ownerState: v,
    className: [T.root, a]
  }), [D, _] = ln("paper", {
    className: T.paper,
    elementType: KI,
    externalForwardedProps: $,
    shouldForwardComponentProp: !0,
    ownerState: v
  }), [M, V] = ln("list", {
    className: Ee(T.list, c.className),
    elementType: XI,
    shouldForwardComponentProp: !0,
    externalForwardedProps: $,
    getSlotProps: (U) => ({
      ...U,
      onKeyDown: (j) => {
        var W;
        p(j), (W = U.onKeyDown) == null || W.call(U, j);
      }
    }),
    ownerState: v
  }), Y = typeof $.slotProps.transition == "function" ? $.slotProps.transition(v) : $.slotProps.transition;
  return /* @__PURE__ */ P(GI, {
    onClose: u,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: S ? "right" : "left"
    },
    transformOrigin: S ? HI : qI,
    slots: {
      root: x.root,
      paper: D,
      backdrop: x.backdrop,
      ...x.transition && {
        // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover
        transition: x.transition
      }
    },
    slotProps: {
      root: A,
      paper: _,
      backdrop: typeof E.backdrop == "function" ? E.backdrop(v) : E.backdrop,
      transition: {
        ...Y,
        onEntering: (...U) => {
          var j;
          I(...U), (j = Y == null ? void 0 : Y.onEntering) == null || j.call(Y, ...U);
        }
      }
    },
    open: d,
    ref: n,
    transitionDuration: g,
    ownerState: v,
    ...w,
    classes: h,
    children: /* @__PURE__ */ P(M, {
      actions: k,
      autoFocus: o && (O === -1 || l),
      autoFocusItem: R,
      variant: b,
      ...V,
      children: s
    })
  });
});
process.env.NODE_ENV !== "production" && (qb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: i.oneOfType([cs, i.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: i.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: i.bool,
  /**
   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.
   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  MenuListProps: i.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: i.object,
  /**
   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.
   */
  PopoverClasses: i.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    list: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    list: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: i.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: i.oneOf(["menu", "selectedMenu"])
});
function QI(e) {
  return Lt("MuiNativeSelect", e);
}
const Hd = Ut("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), JI = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: r,
    multiple: o,
    open: s,
    error: a
  } = e, l = {
    select: ["select", n, r && "disabled", o && "multiple", a && "error"],
    icon: ["icon", `icon${Mt(n)}`, s && "iconOpen", r && "disabled"]
  };
  return Ht(l, QI, t);
}, Yb = Ue("select")(({
  theme: e
}) => ({
  // Reset
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  // Reset
  borderRadius: 0,
  cursor: "pointer",
  "&:focus": {
    // Reset Chrome style
    borderRadius: 0
  },
  [`&.${Hd.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (e.vars || e).palette.background.paper
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.variant !== "filled" && t.variant !== "outlined",
    style: {
      // Bump specificity to allow extending custom inputs
      "&&&": {
        paddingRight: 24,
        minWidth: 16
        // So it doesn't collapse.
      }
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      "&&&": {
        paddingRight: 32
      }
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius,
      "&:focus": {
        borderRadius: (e.vars || e).shape.borderRadius
        // Reset the reset for Chrome style
      },
      "&&&": {
        paddingRight: 32
      }
    }
  }]
})), ZI = Ue(Yb, {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: xr,
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.select, t[n.variant], n.error && t.error, {
      [`&.${Hd.multiple}`]: t.multiple
    }];
  }
})({}), Gb = Ue("svg")(({
  theme: e
}) => ({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  // Center vertically, height is 1em
  top: "calc(50% - .5em)",
  // Don't block pointer events on the select under the icon.
  pointerEvents: "none",
  color: (e.vars || e).palette.action.active,
  [`&.${Hd.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.open,
    style: {
      transform: "rotate(180deg)"
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      right: 7
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      right: 7
    }
  }]
})), eN = Ue(Gb, {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${Mt(n.variant)}`], n.open && t.iconOpen];
  }
})({}), Kb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    className: r,
    disabled: o,
    error: s,
    IconComponent: a,
    inputRef: l,
    variant: c = "standard",
    ...u
  } = t, d = {
    ...t,
    disabled: o,
    variant: c,
    error: s
  }, f = JI(d);
  return /* @__PURE__ */ $e(C.Fragment, {
    children: [/* @__PURE__ */ P(ZI, {
      ownerState: d,
      className: Ee(f.select, r),
      disabled: o,
      ref: l || n,
      ...u
    }), t.multiple ? null : /* @__PURE__ */ P(eN, {
      as: a,
      ownerState: d,
      className: f.icon
    })]
  });
});
process.env.NODE_ENV !== "production" && (Kb.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The CSS class name of the select element.
   */
  className: i.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: i.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: i.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: eo,
  /**
   * @ignore
   */
  multiple: i.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: i.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The input value.
   */
  value: i.any,
  /**
   * The variant to use.
   */
  variant: i.oneOf(["standard", "outlined", "filled"])
});
function Xb(e) {
  return Lt("MuiSelect", e);
}
const Ei = Ut("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]);
var Fm;
const tN = Ue(Yb, {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [
      // Win specificity over the input base
      {
        [`&.${Ei.select}`]: t.select
      },
      {
        [`&.${Ei.select}`]: t[n.variant]
      },
      {
        [`&.${Ei.error}`]: t.error
      },
      {
        [`&.${Ei.multiple}`]: t.multiple
      }
    ];
  }
})({
  // Win specificity over the input base
  [`&.${Ei.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
}), nN = Ue(Gb, {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${Mt(n.variant)}`], n.open && t.iconOpen];
  }
})({}), rN = Ue("input", {
  shouldForwardProp: (e) => hb(e) && e !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (e, t) => t.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function jm(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
function oN(e) {
  return e == null || typeof e == "string" && !e.trim();
}
const iN = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: r,
    multiple: o,
    open: s,
    error: a
  } = e, l = {
    select: ["select", n, r && "disabled", o && "multiple", a && "error"],
    icon: ["icon", `icon${Mt(n)}`, s && "iconOpen", r && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return Ht(l, Xb, t);
}, Qb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var Se;
  const {
    "aria-describedby": r,
    "aria-label": o,
    autoFocus: s,
    autoWidth: a,
    children: l,
    className: c,
    defaultOpen: u,
    defaultValue: d,
    disabled: f,
    displayEmpty: h,
    error: g = !1,
    IconComponent: y,
    inputRef: m,
    labelId: b,
    MenuProps: x = {},
    multiple: E,
    name: w,
    onBlur: S,
    onChange: v,
    onClose: T,
    onFocus: R,
    onOpen: k,
    open: I,
    readOnly: p,
    renderValue: O,
    required: $,
    SelectDisplayProps: A = {},
    tabIndex: D,
    // catching `type` from Input which makes no sense for SelectInput
    type: _,
    value: M,
    variant: V = "standard",
    ...Y
  } = t, [U, j] = wm({
    controlled: M,
    default: d,
    name: "Select"
  }), [W, ee] = wm({
    controlled: I,
    default: u,
    name: "Select"
  }), K = C.useRef(null), oe = C.useRef(null), [ne, se] = C.useState(null), {
    current: de
  } = C.useRef(I != null), [X, ae] = C.useState(), Q = Vn(n, m), ie = C.useCallback((le) => {
    oe.current = le, le && se(le);
  }, []), F = ne == null ? void 0 : ne.parentNode;
  C.useImperativeHandle(Q, () => ({
    focus: () => {
      oe.current.focus();
    },
    node: K.current,
    value: U
  }), [U]), C.useEffect(() => {
    u && W && ne && !de && (ae(a ? null : F.clientWidth), oe.current.focus());
  }, [ne, a]), C.useEffect(() => {
    s && oe.current.focus();
  }, [s]), C.useEffect(() => {
    if (!b)
      return;
    const le = Xn(oe.current).getElementById(b);
    if (le) {
      const we = () => {
        getSelection().isCollapsed && oe.current.focus();
      };
      return le.addEventListener("click", we), () => {
        le.removeEventListener("click", we);
      };
    }
  }, [b]);
  const he = (le, we) => {
    le ? k && k(we) : T && T(we), de || (ae(a ? null : F.clientWidth), ee(le));
  }, fe = (le) => {
    le.button === 0 && (le.preventDefault(), oe.current.focus(), he(!0, le));
  }, Te = (le) => {
    he(!1, le);
  }, Le = C.Children.toArray(l), Ae = (le) => {
    const we = Le.find((Me) => Me.props.value === le.target.value);
    we !== void 0 && (j(we.props.value), v && v(le, we));
  }, Ie = (le) => (we) => {
    let Me;
    if (we.currentTarget.hasAttribute("tabindex")) {
      if (E) {
        Me = Array.isArray(U) ? U.slice() : [];
        const ze = U.indexOf(le.props.value);
        ze === -1 ? Me.push(le.props.value) : Me.splice(ze, 1);
      } else
        Me = le.props.value;
      if (le.props.onClick && le.props.onClick(we), U !== Me && (j(Me), v)) {
        const ze = we.nativeEvent || we, Ye = new ze.constructor(ze.type, ze);
        Object.defineProperty(Ye, "target", {
          writable: !0,
          value: {
            value: Me,
            name: w
          }
        }), v(Ye, le);
      }
      E || he(!1, we);
    }
  }, Re = (le) => {
    p || [
      " ",
      "ArrowUp",
      "ArrowDown",
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
      "Enter"
    ].includes(le.key) && (le.preventDefault(), he(!0, le));
  }, Be = ne !== null && W, Oe = (le) => {
    !Be && S && (Object.defineProperty(le, "target", {
      writable: !0,
      value: {
        value: U,
        name: w
      }
    }), S(le));
  };
  delete Y["aria-invalid"];
  let N, q;
  const J = [];
  let H = !1, B = !1;
  (Pa({
    value: U
  }) || h) && (O ? N = O(U) : H = !0);
  const z = Le.map((le) => {
    if (!/* @__PURE__ */ C.isValidElement(le))
      return null;
    process.env.NODE_ENV !== "production" && Yn.isFragment(le) && console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    let we;
    if (E) {
      if (!Array.isArray(U))
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `value` prop must be an array when using the `Select` component with `multiple`." : yr(2));
      we = U.some((Me) => jm(Me, le.props.value)), we && H && J.push(le.props.children);
    } else
      we = jm(U, le.props.value), we && H && (q = le.props.children);
    return we && (B = !0), /* @__PURE__ */ C.cloneElement(le, {
      "aria-selected": we ? "true" : "false",
      onClick: Ie(le),
      onKeyUp: (Me) => {
        Me.key === " " && Me.preventDefault(), le.props.onKeyUp && le.props.onKeyUp(Me);
      },
      role: "option",
      selected: we,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": le.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  process.env.NODE_ENV !== "production" && C.useEffect(() => {
    if (!B && !E && U !== "") {
      const le = Le.map((we) => we.props.value);
      console.warn([`MUI: You have provided an out-of-range value \`${U}\` for the select ${w ? `(name="${w}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${le.filter((we) => we != null).map((we) => `\`${we}\``).join(", ") || '""'}.`].join(`
`));
    }
  }, [B, Le, E, w, U]), H && (E ? J.length === 0 ? N = null : N = J.reduce((le, we, Me) => (le.push(we), Me < J.length - 1 && le.push(", "), le), []) : N = q);
  let G = X;
  !a && de && ne && (G = F.clientWidth);
  let pe;
  typeof D < "u" ? pe = D : pe = f ? null : 0;
  const me = A.id || (w ? `mui-component-select-${w}` : void 0), re = {
    ...t,
    variant: V,
    value: U,
    open: Be,
    error: g
  }, Z = iN(re), te = {
    ...x.PaperProps,
    ...(Se = x.slotProps) == null ? void 0 : Se.paper
  }, ye = gb();
  return /* @__PURE__ */ $e(C.Fragment, {
    children: [/* @__PURE__ */ P(tN, {
      as: "div",
      ref: ie,
      tabIndex: pe,
      role: "combobox",
      "aria-controls": Be ? ye : void 0,
      "aria-disabled": f ? "true" : void 0,
      "aria-expanded": Be ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": o,
      "aria-labelledby": [b, me].filter(Boolean).join(" ") || void 0,
      "aria-describedby": r,
      "aria-required": $ ? "true" : void 0,
      "aria-invalid": g ? "true" : void 0,
      onKeyDown: Re,
      onMouseDown: f || p ? null : fe,
      onBlur: Oe,
      onFocus: R,
      ...A,
      ownerState: re,
      className: Ee(A.className, Z.select, c),
      id: me,
      children: oN(N) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        Fm || (Fm = /* @__PURE__ */ P("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      ) : N
    }), /* @__PURE__ */ P(rN, {
      "aria-invalid": g,
      value: Array.isArray(U) ? U.join(",") : U,
      name: w,
      ref: K,
      "aria-hidden": !0,
      onChange: Ae,
      tabIndex: -1,
      disabled: f,
      className: Z.nativeInput,
      autoFocus: s,
      required: $,
      ...Y,
      ownerState: re
    }), /* @__PURE__ */ P(nN, {
      as: y,
      className: Z.icon,
      ownerState: re
    }), /* @__PURE__ */ P(qb, {
      id: `menu-${w || ""}`,
      anchorEl: F,
      open: Be,
      onClose: Te,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      },
      ...x,
      slotProps: {
        ...x.slotProps,
        list: {
          "aria-labelledby": b,
          role: "listbox",
          "aria-multiselectable": E ? "true" : void 0,
          disableListWrap: !0,
          id: ye,
          ...x.MenuListProps
        },
        paper: {
          ...te,
          style: {
            minWidth: G,
            ...te != null ? te.style : null
          }
        }
      },
      children: z
    })]
  });
});
process.env.NODE_ENV !== "production" && (Qb.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": i.string,
  /**
   * @ignore
   */
  "aria-label": i.string,
  /**
   * @ignore
   */
  autoFocus: i.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: i.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The CSS class name of the select element.
   */
  className: i.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: i.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: i.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: i.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: i.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: eo,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: i.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: i.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: i.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: i.string,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: i.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool,
  /**
   * @ignore
   */
  readOnly: i.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: i.func,
  /**
   * If `true`, the component is required.
   */
  required: i.bool,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: i.object,
  /**
   * @ignore
   */
  tabIndex: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  type: i.any,
  /**
   * The input value.
   */
  value: i.any,
  /**
   * The variant to use.
   */
  variant: i.oneOf(["standard", "outlined", "filled"])
});
const sN = jP(/* @__PURE__ */ P("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown"), aN = (e) => {
  const {
    classes: t
  } = e, r = Ht({
    root: ["root"]
  }, Xb, t);
  return {
    ...t,
    ...r
  };
}, qd = {
  name: "MuiSelect",
  overridesResolver: (e, t) => t.root,
  shouldForwardProp: (e) => xr(e) && e !== "variant",
  slot: "Root"
}, lN = Ue(Ll, qd)(""), cN = Ue(zl, qd)(""), uN = Ue(Vl, qd)(""), Yd = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    name: "MuiSelect",
    props: t
  }), {
    autoWidth: o = !1,
    children: s,
    classes: a = {},
    className: l,
    defaultOpen: c = !1,
    displayEmpty: u = !1,
    IconComponent: d = sN,
    id: f,
    input: h,
    inputProps: g,
    label: y,
    labelId: m,
    MenuProps: b,
    multiple: x = !1,
    native: E = !1,
    onClose: w,
    onOpen: S,
    open: v,
    renderValue: T,
    SelectDisplayProps: R,
    variant: k = "outlined",
    ...I
  } = r, p = E ? Kb : Qb, O = mi(), $ = pi({
    props: r,
    muiFormControl: O,
    states: ["variant", "error"]
  }), A = $.variant || k, D = {
    ...r,
    variant: A,
    classes: a
  }, _ = aN(D), {
    root: M,
    ...V
  } = _, Y = h || {
    standard: /* @__PURE__ */ P(lN, {
      ownerState: D
    }),
    outlined: /* @__PURE__ */ P(cN, {
      label: y,
      ownerState: D
    }),
    filled: /* @__PURE__ */ P(uN, {
      ownerState: D
    })
  }[A], U = Vn(n, Cs(Y));
  return /* @__PURE__ */ P(C.Fragment, {
    children: /* @__PURE__ */ C.cloneElement(Y, {
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: p,
      inputProps: {
        children: s,
        error: $.error,
        IconComponent: d,
        variant: A,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: x,
        ...E ? {
          id: f
        } : {
          autoWidth: o,
          defaultOpen: c,
          displayEmpty: u,
          labelId: m,
          MenuProps: b,
          onClose: w,
          onOpen: S,
          open: v,
          renderValue: T,
          SelectDisplayProps: {
            id: f,
            ...R
          }
        },
        ...g,
        classes: g ? nn(V, g.classes) : V,
        ...h ? h.props.inputProps : {}
      },
      ...(x && E || u) && A === "outlined" ? {
        notched: !0
      } : {},
      ref: U,
      className: Ee(Y.props.className, l, _.root),
      // If a custom input is provided via 'input' prop, do not allow 'variant' to be propagated to it's root element. See https://github.com/mui/material-ui/issues/33894.
      ...!h && {
        variant: A
      },
      ...I
    })
  });
});
process.env.NODE_ENV !== "production" && (Yd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: i.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: i.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: i.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: i.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: i.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: i.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: i.object,
  /**
   * See [OutlinedInput#label](https://mui.com/material-ui/api/outlined-input/#props)
   */
  label: i.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: i.string,
  /**
   * Props applied to the [`Menu`](https://mui.com/material-ui/api/menu/) element.
   */
  MenuProps: i.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: i.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: i.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: i.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: i.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: i.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: i.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: i.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: i.oneOfType([i.oneOf([""]), i.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
});
Yd.muiName = "Select";
function dN(e) {
  return Lt("MuiTextField", e);
}
Ut("MuiTextField", ["root"]);
const fN = {
  standard: Ll,
  filled: Vl,
  outlined: zl
}, pN = (e) => {
  const {
    classes: t
  } = e;
  return Ht({
    root: ["root"]
  }, dN, t);
}, mN = Ue(Ab, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), Jb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiTextField"
  }), {
    autoComplete: o,
    autoFocus: s = !1,
    children: a,
    className: l,
    color: c = "primary",
    defaultValue: u,
    disabled: d = !1,
    error: f = !1,
    FormHelperTextProps: h,
    fullWidth: g = !1,
    helperText: y,
    id: m,
    InputLabelProps: b,
    inputProps: x,
    InputProps: E,
    inputRef: w,
    label: S,
    maxRows: v,
    minRows: T,
    multiline: R = !1,
    name: k,
    onBlur: I,
    onChange: p,
    onFocus: O,
    placeholder: $,
    required: A = !1,
    rows: D,
    select: _ = !1,
    SelectProps: M,
    slots: V = {},
    slotProps: Y = {},
    type: U,
    value: j,
    variant: W = "outlined",
    ...ee
  } = r, K = {
    ...r,
    autoFocus: s,
    color: c,
    disabled: d,
    error: f,
    fullWidth: g,
    multiline: R,
    required: A,
    select: _,
    variant: W
  }, oe = pN(K);
  process.env.NODE_ENV !== "production" && _ && !a && console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
  const ne = gb(m), se = y && ne ? `${ne}-helper-text` : void 0, de = S && ne ? `${ne}-label` : void 0, X = fN[W], ae = {
    slots: V,
    slotProps: {
      input: E,
      inputLabel: b,
      htmlInput: x,
      formHelperText: h,
      select: M,
      ...Y
    }
  }, Q = {}, ie = ae.slotProps.inputLabel;
  W === "outlined" && (ie && typeof ie.shrink < "u" && (Q.notched = ie.shrink), Q.label = S), _ && ((!M || !M.native) && (Q.id = void 0), Q["aria-describedby"] = void 0);
  const [F, he] = ln("root", {
    elementType: mN,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...ae,
      ...ee
    },
    ownerState: K,
    className: Ee(oe.root, l),
    ref: n,
    additionalProps: {
      disabled: d,
      error: f,
      fullWidth: g,
      required: A,
      color: c,
      variant: W
    }
  }), [fe, Te] = ln("input", {
    elementType: X,
    externalForwardedProps: ae,
    additionalProps: Q,
    ownerState: K
  }), [Le, Ae] = ln("inputLabel", {
    elementType: Nb,
    externalForwardedProps: ae,
    ownerState: K
  }), [Ie, Re] = ln("htmlInput", {
    elementType: "input",
    externalForwardedProps: ae,
    ownerState: K
  }), [Be, Oe] = ln("formHelperText", {
    elementType: Mb,
    externalForwardedProps: ae,
    ownerState: K
  }), [N, q] = ln("select", {
    elementType: Yd,
    externalForwardedProps: ae,
    ownerState: K
  }), J = /* @__PURE__ */ P(fe, {
    "aria-describedby": se,
    autoComplete: o,
    autoFocus: s,
    defaultValue: u,
    fullWidth: g,
    multiline: R,
    name: k,
    rows: D,
    maxRows: v,
    minRows: T,
    type: U,
    value: j,
    id: ne,
    inputRef: w,
    onBlur: I,
    onChange: p,
    onFocus: O,
    placeholder: $,
    inputProps: Re,
    slots: {
      input: V.htmlInput ? Ie : void 0
    },
    ...Te
  });
  return /* @__PURE__ */ $e(F, {
    ...he,
    children: [S != null && S !== "" && /* @__PURE__ */ P(Le, {
      htmlFor: ne,
      id: de,
      ...Ae,
      children: S
    }), _ ? /* @__PURE__ */ P(N, {
      "aria-describedby": se,
      id: ne,
      labelId: de,
      value: j,
      input: J,
      ...q,
      children: a
    }) : J, y && /* @__PURE__ */ P(Be, {
      id: se,
      ...Oe,
      children: y
    })]
  });
});
process.env.NODE_ENV !== "production" && (Jb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: i.bool,
  /**
   * @ignore
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: i.bool,
  /**
   * Props applied to the [`FormHelperText`](https://mui.com/material-ui/api/form-helper-text/) element.
   * @deprecated Use `slotProps.formHelperText` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  FormHelperTextProps: i.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The helper text content.
   */
  helperText: i.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: i.string,
  /**
   * Props applied to the [`InputLabel`](https://mui.com/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   * @deprecated Use `slotProps.inputLabel` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputLabelProps: i.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.htmlInput` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: i.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](https://mui.com/material-ui/api/filled-input/),
   * [`OutlinedInput`](https://mui.com/material-ui/api/outlined-input/) or [`Input`](https://mui.com/material-ui/api/input/)
   * component depending on the `variant` prop value.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: eo,
  /**
   * The label content.
   */
  label: i.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: i.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * Render a [`Select`](https://mui.com/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: i.bool,
  /**
   * Props applied to the [`Select`](https://mui.com/material-ui/api/select/) element.
   * @deprecated Use `slotProps.select` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SelectProps: i.object,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    formHelperText: i.oneOfType([i.func, i.object]),
    htmlInput: i.oneOfType([i.func, i.object]),
    input: i.oneOfType([i.func, i.object]),
    inputLabel: i.oneOfType([i.func, i.object]),
    select: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    formHelperText: i.elementType,
    htmlInput: i.elementType,
    input: i.elementType,
    inputLabel: i.elementType,
    root: i.elementType,
    select: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
});
const hN = Ut("MuiBox", ["root"]), gN = mb(), Zb = a$({
  themeId: Sl,
  defaultTheme: gN,
  defaultClassName: hN.root,
  generateClassName: nb.generate
});
process.env.NODE_ENV !== "production" && (Zb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
const yN = Ue(Jb)`
  input {
    text-align: center;
  }
`, bN = {
  TextFieldStyled: yN
}, vN = (e) => /* @__PURE__ */ P(bN.TextFieldStyled, { ...e }), Ci = {
  left: "ArrowLeft",
  right: "ArrowRight",
  backspace: "Backspace",
  home: "Home",
  end: "End"
};
function xN(e, t) {
  return e <= 0 ? [] : Array.from({ length: e }, t);
}
function wN(e, t, n) {
  return e.map((r, o) => t === o ? n : r);
}
function Lm(e) {
  return e.join("");
}
function Vm(e, t) {
  return [...e, t];
}
function SN(e, t, n) {
  return e.reduce(
    (r, o, s) => {
      const { characters: a, restArrayMerged: l } = r;
      if (s < n)
        return {
          restArrayMerged: l,
          characters: Vm(a, o)
        };
      const [c, ...u] = l;
      return {
        restArrayMerged: u,
        characters: Vm(a, c || "")
      };
    },
    {
      restArrayMerged: t,
      characters: []
    }
  ).characters;
}
function TN(e) {
  return (t) => {
    e.forEach((n) => {
      typeof n == "function" ? n(t) : n != null && (n.current = t);
    });
  };
}
function EN(e) {
  return e.split("");
}
function zm(e) {
  const t = L.useRef(() => {
    throw new Error("Cannot call an event handler while rendering.");
  });
  return L.useInsertionEffect(() => {
    t.current = e;
  }), L.useCallback((...n) => {
    var r;
    return (r = t.current) == null ? void 0 : r.call(t, ...n);
  }, []);
}
const CN = () => !0, ON = L.forwardRef(
  (e, t) => {
    const {
      value: n = "",
      length: r = 4,
      autoFocus: o = !1,
      onChange: s,
      TextFieldsProps: a,
      onComplete: l,
      validateChar: c = CN,
      className: u,
      onBlur: d,
      ...f
    } = e, h = L.useRef(n), g = zm(l), y = zm((O) => {
      const $ = O.slice(0, r);
      return {
        isCompleted: $.length === r,
        finalValue: $
      };
    });
    L.useEffect(() => {
      const { isCompleted: O, finalValue: $ } = y(
        h.current
      );
      O && g($);
    }, [r, g, y]);
    const m = xN(
      r,
      (O, $) => ({
        character: n[$] || "",
        inputRef: L.createRef()
      })
    ), b = (O) => m.findIndex(({ inputRef: $ }) => $.current === O), x = () => m.map(({ character: O }) => O), E = (O, $) => {
      const A = wN(
        x(),
        O,
        $
      );
      return Lm(A);
    }, w = (O) => {
      var $, A;
      (A = ($ = m[O]) == null ? void 0 : $.inputRef.current) == null || A.focus();
    }, S = (O) => {
      var $, A;
      (A = ($ = m[O]) == null ? void 0 : $.inputRef.current) == null || A.select();
    }, v = (O) => {
      O + 1 !== r && (m[O + 1].character ? S(O + 1) : w(O + 1));
    }, T = (O, $) => typeof c != "function" ? !0 : c(O, $), R = (O) => {
      const $ = b(O.target);
      if ($ === 0 && O.target.value.length > 1) {
        const { finalValue: Y, isCompleted: U } = y(
          O.target.value
        );
        s == null || s(Y), U && (l == null || l(Y)), S(Y.length - 1);
        return;
      }
      const A = O.target.value[0] || "";
      let D = A;
      D && !T(D, $) && (D = "");
      const _ = E($, D);
      s == null || s(_);
      const { isCompleted: M, finalValue: V } = y(_);
      M && (l == null || l(V)), D !== "" ? _.length - 1 < $ ? S(_.length) : v($) : A === "" && _.length <= $ && S($ - 1);
    }, k = (O) => {
      const $ = O.target, A = $.selectionStart, D = $.selectionEnd, _ = b($), M = A === 0 && D === 0;
      if ($.value === O.key)
        O.preventDefault(), v(_);
      else if (Ci.backspace === O.key) {
        if (!$.value)
          O.preventDefault(), S(_ - 1);
        else if (M) {
          O.preventDefault();
          const V = E(_, "");
          s == null || s(V), V.length <= _ && S(_ - 1);
        }
      } else Ci.left === O.key ? (O.preventDefault(), S(_ - 1)) : Ci.right === O.key ? (O.preventDefault(), S(_ + 1)) : Ci.home === O.key ? (O.preventDefault(), S(0)) : Ci.end === O.key && (O.preventDefault(), S(m.length - 1));
    }, I = (O) => {
      const $ = O.clipboardData.getData("text/plain"), A = O.target, D = m.findIndex(
        ({ character: j, inputRef: W }) => j === "" || W.current === A
      ), _ = x(), M = SN(
        _,
        EN($),
        D
      ).map((j, W) => T(j, W) ? j : ""), V = Lm(M);
      s == null || s(V);
      const { isCompleted: Y, finalValue: U } = y(V);
      Y ? (l == null || l(U), S(r - 1)) : S(V.length);
    }, p = (O) => {
      if (!m.some(({ inputRef: $ }) => $.current === O.relatedTarget)) {
        const { isCompleted: $, finalValue: A } = y(n);
        d == null || d(A, $);
      }
    };
    return /* @__PURE__ */ P(
      Zb,
      {
        display: "flex",
        gap: "20px",
        alignItems: "center",
        ref: t,
        className: `MuiOtpInput-Box ${u || ""}`,
        ...f,
        children: m.map(({ character: O, inputRef: $ }, A) => {
          const {
            onPaste: D,
            onFocus: _,
            onKeyDown: M,
            className: V,
            onBlur: Y,
            inputRef: U,
            ...j
          } = typeof a == "function" ? a(A) || {} : a || {};
          return /* @__PURE__ */ P(
            vN,
            {
              autoFocus: o ? A === 0 : !1,
              autoComplete: "one-time-code",
              value: O,
              inputRef: TN([$, U]),
              className: `MuiOtpInput-TextField MuiOtpInput-TextField-${A + 1} ${V || ""}`,
              onPaste: (W) => {
                W.preventDefault(), I(W), D == null || D(W);
              },
              onFocus: (W) => {
                W.preventDefault(), W.target.select(), _ == null || _(W);
              },
              onChange: R,
              onKeyDown: (W) => {
                k(W), M == null || M(W);
              },
              onBlur: (W) => {
                Y == null || Y(W), p(W);
              },
              ...j
            },
            A
          );
        })
      }
    );
  }
), ev = _e(
  ({
    label: e = "",
    tooltip: t,
    value: n,
    onChange: r,
    isRequired: o,
    isDisabled: s,
    isError: a,
    errorMessage: l = ""
  }) => {
    const { textCommonStyles: c } = cl({
      isTitle: !1,
      isLabel: !0,
      textColor: s ? "disabled" : a ? "error" : "auto"
    });
    return /* @__PURE__ */ $e(Kt, { gap: 0, children: [
      /* @__PURE__ */ P(
        ei,
        {
          label: e,
          elementId: void 0,
          tooltip: t,
          isRequired: o,
          isDisabled: s,
          isError: a
        }
      ),
      /* @__PURE__ */ P(
        ON,
        {
          value: n,
          onChange: r,
          length: 6,
          TextFieldsProps: {
            disabled: s,
            error: a
          },
          sx: {
            "& .MuiInputBase-root": {
              borderRadius: "8px"
            },
            "& input": {
              width: "8px",
              height: "8px",
              p: "16px",
              borderRadius: "8px"
            }
          }
        }
      ),
      /* @__PURE__ */ P(
        bn,
        {
          text: a ? l : "",
          isLabel: !0,
          sx: { ...c, minHeight: "24px" }
        }
      )
    ] });
  }
);
ev.displayName = "OtpInput";
const tv = _e(({ isError: e, isDisabled: t, fullWidth: n, sx: r, ...o }) => {
  const { inputCommonStyle: s } = Gy({
    isDisabled: t,
    isError: e
  }), [a, l] = Cr(!1);
  return /* @__PURE__ */ P(
    wl,
    {
      type: a ? "text" : "password",
      fullWidth: n,
      isError: e,
      endAdornment: /* @__PURE__ */ P(
        Gn,
        {
          isCircle: !0,
          isGhost: !0,
          icon: a ? "solar:eye-closed-bold-duotone" : "solar:eye-bold-duotone",
          color: e ? "error" : "primary",
          sx: { mr: -2 },
          onClick: () => l((c) => !c)
        }
      ),
      sx: {
        width: n ? "100%" : `calc(${s.minWidth} - 40px) !important`,
        ...r
      },
      ...o
    }
  );
});
tv.displayName = "Password";
const RN = li(/* @__PURE__ */ P("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "RadioButtonUnchecked"), kN = li(/* @__PURE__ */ P("path", {
  d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
}), "RadioButtonChecked"), $N = Pe("span", {
  shouldForwardProp: br
})({
  position: "relative",
  display: "flex"
}), PN = Pe(RN)({
  // Scale applied to prevent dot misalignment in Safari
  transform: "scale(1)"
}), IN = Pe(kN)(Ke(({
  theme: e
}) => ({
  left: 0,
  position: "absolute",
  transform: "scale(0)",
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeIn,
    duration: e.transitions.duration.shortest
  }),
  variants: [{
    props: {
      checked: !0
    },
    style: {
      transform: "scale(1)",
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeOut,
        duration: e.transitions.duration.shortest
      })
    }
  }]
})));
function Gd(e) {
  const {
    checked: t = !1,
    classes: n = {},
    fontSize: r
  } = e, o = {
    ...e,
    checked: t
  };
  return /* @__PURE__ */ $e($N, {
    className: n.root,
    ownerState: o,
    children: [/* @__PURE__ */ P(PN, {
      fontSize: r,
      className: n.background,
      ownerState: o
    }), /* @__PURE__ */ P(IN, {
      fontSize: r,
      className: n.dot,
      ownerState: o
    })]
  });
}
process.env.NODE_ENV !== "production" && (Gd.propTypes = {
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   */
  fontSize: i.oneOf(["small", "medium"])
});
const nv = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (nv.displayName = "RadioGroupContext");
function NN() {
  return C.useContext(nv);
}
function AN(e) {
  return gt("MuiRadio", e);
}
const Wm = wt("MuiRadio", ["root", "checked", "disabled", "colorPrimary", "colorSecondary", "sizeSmall"]), MN = (e) => {
  const {
    classes: t,
    color: n,
    size: r
  } = e, o = {
    root: ["root", `color${xe(n)}`, r !== "medium" && `size${xe(r)}`]
  };
  return {
    ...t,
    ...Ct(o, AN, t)
  };
}, _N = Pe(vl, {
  shouldForwardProp: (e) => br(e) || e === "classes",
  name: "MuiRadio",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size !== "medium" && t[`size${xe(n.size)}`], t[`color${xe(n.color)}`]];
  }
})(Ke(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  [`&.${Wm.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: {
      color: "default",
      disabled: !1,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(un()).map(([t]) => ({
    props: {
      color: t,
      disabled: !1,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(un()).map(([t]) => ({
    props: {
      color: t,
      disabled: !1
    },
    style: {
      [`&.${Wm.checked}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
})));
function DN(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
const BN = /* @__PURE__ */ P(Gd, {
  checked: !0
}), FN = /* @__PURE__ */ P(Gd, {}), rv = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = St({
    props: t,
    name: "MuiRadio"
  }), {
    checked: o,
    checkedIcon: s = BN,
    color: a = "primary",
    icon: l = FN,
    name: c,
    onChange: u,
    size: d = "medium",
    className: f,
    disabled: h,
    disableRipple: g = !1,
    slots: y = {},
    slotProps: m = {},
    inputProps: b,
    ...x
  } = r, E = bl();
  let w = h;
  E && typeof w > "u" && (w = E.disabled), w ?? (w = !1);
  const S = {
    ...r,
    disabled: w,
    disableRipple: g,
    color: a,
    size: d
  }, v = MN(S), T = NN();
  let R = o;
  const k = Fc(u, T && T.onChange);
  let I = c;
  T && (typeof R > "u" && (R = DN(T.value, r.value)), typeof I > "u" && (I = T.name));
  const p = m.input ?? b, [O, $] = at("root", {
    ref: n,
    elementType: _N,
    className: Ee(v.root, f),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: y,
      slotProps: m,
      ...x
    },
    getSlotProps: (A) => ({
      ...A,
      onChange: (D, ..._) => {
        var M;
        (M = A.onChange) == null || M.call(A, D, ..._), k(D, ..._);
      }
    }),
    ownerState: S,
    additionalProps: {
      type: "radio",
      icon: /* @__PURE__ */ C.cloneElement(l, {
        fontSize: l.props.fontSize ?? d
      }),
      checkedIcon: /* @__PURE__ */ C.cloneElement(s, {
        fontSize: s.props.fontSize ?? d
      }),
      disabled: w,
      name: I,
      checked: R,
      slots: y,
      slotProps: {
        // Do not forward `slotProps.root` again because it's already handled by the `RootSlot` in this file.
        input: typeof p == "function" ? p(S) : p
      }
    }
  });
  return /* @__PURE__ */ P(O, {
    ...$,
    classes: v
  });
});
process.env.NODE_ENV !== "production" && (rv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   * @default <RadioButtonIcon checked />
   */
  checkedIcon: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <RadioButtonIcon />
   */
  icon: i.node,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   * @deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputRef: Ar,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    input: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   */
  value: i.any
});
const ov = _e(
  ({ label: e = "", tooltip: t, name: n, options: r, optionLabelDirection: o = "end", value: s, onChange: a }) => /* @__PURE__ */ $e(Kt, { gap: 0, children: [
    /* @__PURE__ */ P(ei, { label: e, elementId: void 0, tooltip: t }),
    /* @__PURE__ */ P(Kt, { gap: 0, children: r.map((l) => /* @__PURE__ */ P(
      xl,
      {
        labelsDirection: "row",
        startLabel: o === "start" ? l.label : "",
        endLabel: o === "end" ? l.label : "",
        isDisabled: l.isDisabled,
        renderElement: (c) => /* @__PURE__ */ P(
          rv,
          {
            id: c,
            name: n,
            value: l.value,
            checked: s === l.value,
            disabled: l.isDisabled,
            onChange: (u) => a(r.find(({ value: d }) => d === u.target.value)),
            sx: {
              py: "6px",
              px: 0,
              mr: o === "start" ? "2px" : "8px",
              ml: o === "end" ? "2px" : "8px"
            }
          }
        )
      },
      l.value
    )) })
  ] })
);
ov.displayName = "Radios";
function jN(e) {
  return gt("MuiSwitch", e);
}
const sn = wt("MuiSwitch", ["root", "edgeStart", "edgeEnd", "switchBase", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium", "checked", "disabled", "input", "thumb", "track"]), LN = (e) => {
  const {
    classes: t,
    edge: n,
    size: r,
    color: o,
    checked: s,
    disabled: a
  } = e, l = {
    root: ["root", n && `edge${xe(n)}`, `size${xe(r)}`],
    switchBase: ["switchBase", `color${xe(o)}`, s && "checked", a && "disabled"],
    thumb: ["thumb"],
    track: ["track"],
    input: ["input"]
  }, c = Ct(l, jN, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...c
  };
}, VN = Pe("span", {
  name: "MuiSwitch",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.edge && t[`edge${xe(n.edge)}`], t[`size${xe(n.size)}`]];
  }
})({
  display: "inline-flex",
  width: 34 + 12 * 2,
  height: 14 + 12 * 2,
  overflow: "hidden",
  padding: 12,
  boxSizing: "border-box",
  position: "relative",
  flexShrink: 0,
  zIndex: 0,
  // Reset the stacking context.
  verticalAlign: "middle",
  // For correct alignment with the text.
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [{
    props: {
      edge: "start"
    },
    style: {
      marginLeft: -8
    }
  }, {
    props: {
      edge: "end"
    },
    style: {
      marginRight: -8
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      width: 40,
      height: 24,
      padding: 7,
      [`& .${sn.thumb}`]: {
        width: 16,
        height: 16
      },
      [`& .${sn.switchBase}`]: {
        padding: 4,
        [`&.${sn.checked}`]: {
          transform: "translateX(16px)"
        }
      }
    }
  }]
}), zN = Pe(vl, {
  name: "MuiSwitch",
  slot: "SwitchBase",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.switchBase, {
      [`& .${sn.input}`]: t.input
    }, n.color !== "default" && t[`color${xe(n.color)}`]];
  }
})(Ke(({
  theme: e
}) => ({
  position: "absolute",
  top: 0,
  left: 0,
  zIndex: 1,
  // Render above the focus ripple.
  color: e.vars ? e.vars.palette.Switch.defaultColor : `${e.palette.mode === "light" ? e.palette.common.white : e.palette.grey[300]}`,
  transition: e.transitions.create(["left", "transform"], {
    duration: e.transitions.duration.shortest
  }),
  [`&.${sn.checked}`]: {
    transform: "translateX(20px)"
  },
  [`&.${sn.disabled}`]: {
    color: e.vars ? e.vars.palette.Switch.defaultDisabledColor : `${e.palette.mode === "light" ? e.palette.grey[100] : e.palette.grey[600]}`
  },
  [`&.${sn.checked} + .${sn.track}`]: {
    opacity: 0.5
  },
  [`&.${sn.disabled} + .${sn.track}`]: {
    opacity: e.vars ? e.vars.opacity.switchTrackDisabled : `${e.palette.mode === "light" ? 0.12 : 0.2}`
  },
  [`& .${sn.input}`]: {
    left: "-100%",
    width: "300%"
  }
})), Ke(({
  theme: e
}) => ({
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette.action.active, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  variants: [...Object.entries(e.palette).filter(un(["light"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${sn.checked}`]: {
        color: (e.vars || e).palette[t].main,
        "&:hover": {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[t].main, e.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        },
        [`&.${sn.disabled}`]: {
          color: e.vars ? e.vars.palette.Switch[`${t}DisabledColor`] : `${e.palette.mode === "light" ? ai(e.palette[t].main, 0.62) : si(e.palette[t].main, 0.55)}`
        }
      },
      [`&.${sn.checked} + .${sn.track}`]: {
        backgroundColor: (e.vars || e).palette[t].main
      }
    }
  }))]
}))), WN = Pe("span", {
  name: "MuiSwitch",
  slot: "Track",
  overridesResolver: (e, t) => t.track
})(Ke(({
  theme: e
}) => ({
  height: "100%",
  width: "100%",
  borderRadius: 14 / 2,
  zIndex: -1,
  transition: e.transitions.create(["opacity", "background-color"], {
    duration: e.transitions.duration.shortest
  }),
  backgroundColor: e.vars ? e.vars.palette.common.onBackground : `${e.palette.mode === "light" ? e.palette.common.black : e.palette.common.white}`,
  opacity: e.vars ? e.vars.opacity.switchTrack : `${e.palette.mode === "light" ? 0.38 : 0.3}`
}))), UN = Pe("span", {
  name: "MuiSwitch",
  slot: "Thumb",
  overridesResolver: (e, t) => t.thumb
})(Ke(({
  theme: e
}) => ({
  boxShadow: (e.vars || e).shadows[1],
  backgroundColor: "currentColor",
  width: 20,
  height: 20,
  borderRadius: "50%"
}))), iv = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = St({
    props: t,
    name: "MuiSwitch"
  }), {
    className: o,
    color: s = "primary",
    edge: a = !1,
    size: l = "medium",
    sx: c,
    slots: u = {},
    slotProps: d = {},
    ...f
  } = r, h = {
    ...r,
    color: s,
    edge: a,
    size: l
  }, g = LN(h), y = {
    slots: u,
    slotProps: d
  }, [m, b] = at("root", {
    className: Ee(g.root, o),
    elementType: VN,
    externalForwardedProps: y,
    ownerState: h,
    additionalProps: {
      sx: c
    }
  }), [x, E] = at("thumb", {
    className: g.thumb,
    elementType: UN,
    externalForwardedProps: y,
    ownerState: h
  }), w = /* @__PURE__ */ P(x, {
    ...E
  }), [S, v] = at("track", {
    className: g.track,
    elementType: WN,
    externalForwardedProps: y,
    ownerState: h
  });
  return /* @__PURE__ */ $e(m, {
    ...b,
    children: [/* @__PURE__ */ P(zN, {
      type: "checkbox",
      icon: w,
      checkedIcon: w,
      ref: n,
      ownerState: h,
      ...f,
      classes: {
        ...g,
        root: g.switchBase
      },
      slots: {
        ...u.switchBase && {
          root: u.switchBase
        },
        ...u.input && {
          input: u.input
        }
      },
      slotProps: {
        ...d.switchBase && {
          root: typeof d.switchBase == "function" ? d.switchBase(h) : d.switchBase
        },
        ...d.input && {
          input: typeof d.input == "function" ? d.input(h) : d.input
        }
      }
    }), /* @__PURE__ */ P(S, {
      ...v
    })]
  });
});
process.env.NODE_ENV !== "production" && (iv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: i.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: i.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: i.node,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   * @deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputRef: Ar,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense switch styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    input: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    switchBase: i.oneOfType([i.func, i.object]),
    thumb: i.oneOfType([i.func, i.object]),
    track: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType,
    switchBase: i.elementType,
    thumb: i.elementType,
    track: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: i.any
});
const Kd = _e(
  ({ value: e, onChange: t, startLabel: n, endLabel: r, labelsDirection: o = "row", isDisabled: s }) => {
    const a = tn(
      (l) => /* @__PURE__ */ P(
        iv,
        {
          id: l,
          color: "primary",
          checked: e,
          disabled: s,
          onChange: (c) => t(c.target.checked),
          sx: {
            "& .MuiSwitch-track": {
              transition: "background-color 0s"
            }
          }
        }
      ),
      [e, t]
    );
    return n || r ? /* @__PURE__ */ P(
      xl,
      {
        labelsDirection: o,
        startLabel: n,
        endLabel: r,
        isDisabled: s,
        renderElement: a
      }
    ) : a();
  }
);
Kd.displayName = "Switch";
var Os = (e) => e.type === "checkbox", lo = (e) => e instanceof Date, an = (e) => e == null;
const sv = (e) => typeof e == "object";
var At = (e) => !an(e) && !Array.isArray(e) && sv(e) && !lo(e), av = (e) => At(e) && e.target ? Os(e.target) ? e.target.checked : e.target.value : e, HN = (e) => e.substring(0, e.search(/\.\d+(\.|$)/)) || e, lv = (e, t) => e.has(HN(t)), qN = (e) => {
  const t = e.constructor && e.constructor.prototype;
  return At(t) && t.hasOwnProperty("isPrototypeOf");
}, Xd = typeof window < "u" && typeof window.HTMLElement < "u" && typeof document < "u";
function Et(e) {
  let t;
  const n = Array.isArray(e), r = typeof FileList < "u" ? e instanceof FileList : !1;
  if (e instanceof Date)
    t = new Date(e);
  else if (e instanceof Set)
    t = new Set(e);
  else if (!(Xd && (e instanceof Blob || r)) && (n || At(e)))
    if (t = n ? [] : {}, !n && !qN(e))
      t = e;
    else
      for (const o in e)
        e.hasOwnProperty(o) && (t[o] = Et(e[o]));
  else
    return e;
  return t;
}
var Rs = (e) => Array.isArray(e) ? e.filter(Boolean) : [], mt = (e) => e === void 0, ve = (e, t, n) => {
  if (!t || !At(e))
    return n;
  const r = Rs(t.split(/[,[\].]+?/)).reduce((o, s) => an(o) ? o : o[s], e);
  return mt(r) || r === e ? mt(e[t]) ? n : e[t] : r;
}, vn = (e) => typeof e == "boolean", Qd = (e) => /^\w*$/.test(e), cv = (e) => Rs(e.replace(/["|']|\]/g, "").split(/\.|\[/)), Ge = (e, t, n) => {
  let r = -1;
  const o = Qd(t) ? [t] : cv(t), s = o.length, a = s - 1;
  for (; ++r < s; ) {
    const l = o[r];
    let c = n;
    if (r !== a) {
      const u = e[l];
      c = At(u) || Array.isArray(u) ? u : isNaN(+o[r + 1]) ? {} : [];
    }
    if (l === "__proto__" || l === "constructor" || l === "prototype")
      return;
    e[l] = c, e = e[l];
  }
};
const Da = {
  BLUR: "blur",
  FOCUS_OUT: "focusout",
  CHANGE: "change"
}, An = {
  onBlur: "onBlur",
  onChange: "onChange",
  onSubmit: "onSubmit",
  onTouched: "onTouched",
  all: "all"
}, Er = {
  max: "max",
  min: "min",
  maxLength: "maxLength",
  minLength: "minLength",
  pattern: "pattern",
  required: "required",
  validate: "validate"
}, uv = L.createContext(null), zn = () => L.useContext(uv), YN = (e) => {
  const { children: t, ...n } = e;
  return L.createElement(uv.Provider, { value: n }, t);
};
var dv = (e, t, n, r = !0) => {
  const o = {
    defaultValues: t._defaultValues
  };
  for (const s in e)
    Object.defineProperty(o, s, {
      get: () => {
        const a = s;
        return t._proxyFormState[a] !== An.all && (t._proxyFormState[a] = !r || An.all), n && (n[a] = !0), e[a];
      }
    });
  return o;
};
function GN(e) {
  const t = zn(), { control: n = t.control, disabled: r, name: o, exact: s } = e || {}, [a, l] = L.useState(n._formState), c = L.useRef({
    isDirty: !1,
    isLoading: !1,
    dirtyFields: !1,
    touchedFields: !1,
    validatingFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  }), u = L.useRef(o);
  return u.current = o, L.useEffect(() => n._subscribe({
    name: u.current,
    formState: c.current,
    exact: s,
    callback: (d) => {
      !r && l({
        ...n._formState,
        ...d
      });
    }
  }), [n, r, s]), L.useEffect(() => {
    c.current.isValid && n._setValid(!0);
  }, [n]), L.useMemo(() => dv(a, n, c.current, !1), [a, n]);
}
var lr = (e) => typeof e == "string", fv = (e, t, n, r, o) => lr(e) ? (r && t.watch.add(e), ve(n, e, o)) : Array.isArray(e) ? e.map((s) => (r && t.watch.add(s), ve(n, s))) : (r && (t.watchAll = !0), n);
function KN(e) {
  const t = zn(), { control: n = t.control, name: r, defaultValue: o, disabled: s, exact: a } = e || {}, l = L.useRef(r), c = L.useRef(o);
  l.current = r, L.useEffect(() => n._subscribe({
    name: l.current,
    formState: {
      values: !0
    },
    exact: a,
    callback: (f) => !s && d(fv(l.current, n._names, f.values || n._formValues, !1, c.current))
  }), [n, s, a]);
  const [u, d] = L.useState(n._getWatch(r, o));
  return L.useEffect(() => n._removeUnmounted()), u;
}
function XN(e) {
  const t = zn(), { name: n, disabled: r, control: o = t.control, shouldUnregister: s } = e, a = lv(o._names.array, n), l = KN({
    control: o,
    name: n,
    defaultValue: ve(o._formValues, n, ve(o._defaultValues, n, e.defaultValue)),
    exact: !0
  }), c = GN({
    control: o,
    name: n,
    exact: !0
  }), u = L.useRef(e), d = L.useRef(o.register(n, {
    ...e.rules,
    value: l,
    ...vn(e.disabled) ? { disabled: e.disabled } : {}
  })), f = L.useMemo(() => Object.defineProperties({}, {
    invalid: {
      enumerable: !0,
      get: () => !!ve(c.errors, n)
    },
    isDirty: {
      enumerable: !0,
      get: () => !!ve(c.dirtyFields, n)
    },
    isTouched: {
      enumerable: !0,
      get: () => !!ve(c.touchedFields, n)
    },
    isValidating: {
      enumerable: !0,
      get: () => !!ve(c.validatingFields, n)
    },
    error: {
      enumerable: !0,
      get: () => ve(c.errors, n)
    }
  }), [c, n]), h = L.useCallback((b) => d.current.onChange({
    target: {
      value: av(b),
      name: n
    },
    type: Da.CHANGE
  }), [n]), g = L.useCallback(() => d.current.onBlur({
    target: {
      value: ve(o._formValues, n),
      name: n
    },
    type: Da.BLUR
  }), [n, o._formValues]), y = L.useCallback((b) => {
    const x = ve(o._fields, n);
    x && b && (x._f.ref = {
      focus: () => b.focus(),
      select: () => b.select(),
      setCustomValidity: (E) => b.setCustomValidity(E),
      reportValidity: () => b.reportValidity()
    });
  }, [o._fields, n]), m = L.useMemo(() => ({
    name: n,
    value: l,
    ...vn(r) || c.disabled ? { disabled: c.disabled || r } : {},
    onChange: h,
    onBlur: g,
    ref: y
  }), [n, r, c.disabled, h, g, y, l]);
  return L.useEffect(() => {
    const b = o._options.shouldUnregister || s;
    o.register(n, {
      ...u.current.rules,
      ...vn(u.current.disabled) ? { disabled: u.current.disabled } : {}
    });
    const x = (E, w) => {
      const S = ve(o._fields, E);
      S && S._f && (S._f.mount = w);
    };
    if (x(n, !0), b) {
      const E = Et(ve(o._options.defaultValues, n));
      Ge(o._defaultValues, n, E), mt(ve(o._formValues, n)) && Ge(o._formValues, n, E);
    }
    return !a && o.register(n), () => {
      (a ? b && !o._state.action : b) ? o.unregister(n) : x(n, !1);
    };
  }, [n, o, a, s]), L.useEffect(() => {
    o._setDisabledField({
      disabled: r,
      name: n
    });
  }, [r, n, o]), L.useMemo(() => ({
    field: m,
    formState: c,
    fieldState: f
  }), [m, c, f]);
}
const vo = (e) => e.render(XN(e));
var pv = (e, t, n, r, o) => t ? {
  ...n[e],
  types: {
    ...n[e] && n[e].types ? n[e].types : {},
    [r]: o || !0
  }
} : {}, pn = (e) => Array.isArray(e) ? e : [e], Um = () => {
  let e = [];
  return {
    get observers() {
      return e;
    },
    next: (o) => {
      for (const s of e)
        s.next && s.next(o);
    },
    subscribe: (o) => (e.push(o), {
      unsubscribe: () => {
        e = e.filter((s) => s !== o);
      }
    }),
    unsubscribe: () => {
      e = [];
    }
  };
}, yu = (e) => an(e) || !sv(e);
function jr(e, t) {
  if (yu(e) || yu(t))
    return e === t;
  if (lo(e) && lo(t))
    return e.getTime() === t.getTime();
  const n = Object.keys(e), r = Object.keys(t);
  if (n.length !== r.length)
    return !1;
  for (const o of n) {
    const s = e[o];
    if (!r.includes(o))
      return !1;
    if (o !== "ref") {
      const a = t[o];
      if (lo(s) && lo(a) || At(s) && At(a) || Array.isArray(s) && Array.isArray(a) ? !jr(s, a) : s !== a)
        return !1;
    }
  }
  return !0;
}
var Jt = (e) => At(e) && !Object.keys(e).length, Jd = (e) => e.type === "file", Hn = (e) => typeof e == "function", Ba = (e) => {
  if (!Xd)
    return !1;
  const t = e ? e.ownerDocument : 0;
  return e instanceof (t && t.defaultView ? t.defaultView.HTMLElement : HTMLElement);
}, mv = (e) => e.type === "select-multiple", Zd = (e) => e.type === "radio", QN = (e) => Zd(e) || Os(e), wc = (e) => Ba(e) && e.isConnected;
function JN(e, t) {
  const n = t.slice(0, -1).length;
  let r = 0;
  for (; r < n; )
    e = mt(e) ? r++ : e[t[r++]];
  return e;
}
function ZN(e) {
  for (const t in e)
    if (e.hasOwnProperty(t) && !mt(e[t]))
      return !1;
  return !0;
}
function Ft(e, t) {
  const n = Array.isArray(t) ? t : Qd(t) ? [t] : cv(t), r = n.length === 1 ? e : JN(e, n), o = n.length - 1, s = n[o];
  return r && delete r[s], o !== 0 && (At(r) && Jt(r) || Array.isArray(r) && ZN(r)) && Ft(e, n.slice(0, -1)), e;
}
var hv = (e) => {
  for (const t in e)
    if (Hn(e[t]))
      return !0;
  return !1;
};
function Fa(e, t = {}) {
  const n = Array.isArray(e);
  if (At(e) || n)
    for (const r in e)
      Array.isArray(e[r]) || At(e[r]) && !hv(e[r]) ? (t[r] = Array.isArray(e[r]) ? [] : {}, Fa(e[r], t[r])) : an(e[r]) || (t[r] = !0);
  return t;
}
function gv(e, t, n) {
  const r = Array.isArray(e);
  if (At(e) || r)
    for (const o in e)
      Array.isArray(e[o]) || At(e[o]) && !hv(e[o]) ? mt(t) || yu(n[o]) ? n[o] = Array.isArray(e[o]) ? Fa(e[o], []) : { ...Fa(e[o]) } : gv(e[o], an(t) ? {} : t[o], n[o]) : n[o] = !jr(e[o], t[o]);
  return n;
}
var Oi = (e, t) => gv(e, t, Fa(t));
const Hm = {
  value: !1,
  isValid: !1
}, qm = { value: !0, isValid: !0 };
var yv = (e) => {
  if (Array.isArray(e)) {
    if (e.length > 1) {
      const t = e.filter((n) => n && n.checked && !n.disabled).map((n) => n.value);
      return { value: t, isValid: !!t.length };
    }
    return e[0].checked && !e[0].disabled ? (
      // @ts-expect-error expected to work in the browser
      e[0].attributes && !mt(e[0].attributes.value) ? mt(e[0].value) || e[0].value === "" ? qm : { value: e[0].value, isValid: !0 } : qm
    ) : Hm;
  }
  return Hm;
}, bv = (e, { valueAsNumber: t, valueAsDate: n, setValueAs: r }) => mt(e) ? e : t ? e === "" ? NaN : e && +e : n && lr(e) ? new Date(e) : r ? r(e) : e;
const Ym = {
  isValid: !1,
  value: null
};
var vv = (e) => Array.isArray(e) ? e.reduce((t, n) => n && n.checked && !n.disabled ? {
  isValid: !0,
  value: n.value
} : t, Ym) : Ym;
function Gm(e) {
  const t = e.ref;
  return Jd(t) ? t.files : Zd(t) ? vv(e.refs).value : mv(t) ? [...t.selectedOptions].map(({ value: n }) => n) : Os(t) ? yv(e.refs).value : bv(mt(t.value) ? e.ref.value : t.value, e);
}
var eA = (e, t, n, r) => {
  const o = {};
  for (const s of e) {
    const a = ve(t, s);
    a && Ge(o, s, a._f);
  }
  return {
    criteriaMode: n,
    names: [...e],
    fields: o,
    shouldUseNativeValidation: r
  };
}, ja = (e) => e instanceof RegExp, Ri = (e) => mt(e) ? e : ja(e) ? e.source : At(e) ? ja(e.value) ? e.value.source : e.value : e, Do = (e) => ({
  isOnSubmit: !e || e === An.onSubmit,
  isOnBlur: e === An.onBlur,
  isOnChange: e === An.onChange,
  isOnAll: e === An.all,
  isOnTouch: e === An.onTouched
});
const Km = "AsyncFunction";
var tA = (e) => !!e && !!e.validate && !!(Hn(e.validate) && e.validate.constructor.name === Km || At(e.validate) && Object.values(e.validate).find((t) => t.constructor.name === Km)), nA = (e) => e.mount && (e.required || e.min || e.max || e.maxLength || e.minLength || e.pattern || e.validate), bu = (e, t, n) => !n && (t.watchAll || t.watch.has(e) || [...t.watch].some((r) => e.startsWith(r) && /^\.\w+/.test(e.slice(r.length))));
const Vo = (e, t, n, r) => {
  for (const o of n || Object.keys(e)) {
    const s = ve(e, o);
    if (s) {
      const { _f: a, ...l } = s;
      if (a) {
        if (a.refs && a.refs[0] && t(a.refs[0], o) && !r)
          return !0;
        if (a.ref && t(a.ref, a.name) && !r)
          return !0;
        if (Vo(l, t))
          break;
      } else if (At(l) && Vo(l, t))
        break;
    }
  }
};
function Xm(e, t, n) {
  const r = ve(e, n);
  if (r || Qd(n))
    return {
      error: r,
      name: n
    };
  const o = n.split(".");
  for (; o.length; ) {
    const s = o.join("."), a = ve(t, s), l = ve(e, s);
    if (a && !Array.isArray(a) && n !== s)
      return { name: n };
    if (l && l.type)
      return {
        name: s,
        error: l
      };
    o.pop();
  }
  return {
    name: n
  };
}
var rA = (e, t, n, r) => {
  n(e);
  const { name: o, ...s } = e;
  return Jt(s) || Object.keys(s).length >= Object.keys(t).length || Object.keys(s).find((a) => t[a] === (!r || An.all));
}, oA = (e, t, n) => !e || !t || e === t || pn(e).some((r) => r && (n ? r === t : r.startsWith(t) || t.startsWith(r))), iA = (e, t, n, r, o) => o.isOnAll ? !1 : !n && o.isOnTouch ? !(t || e) : (n ? r.isOnBlur : o.isOnBlur) ? !e : (n ? r.isOnChange : o.isOnChange) ? e : !0, sA = (e, t) => !Rs(ve(e, t)).length && Ft(e, t), xv = (e, t, n) => {
  const r = pn(ve(e, n));
  return Ge(r, "root", t[n]), Ge(e, n, r), e;
}, ca = (e) => lr(e);
function Qm(e, t, n = "validate") {
  if (ca(e) || Array.isArray(e) && e.every(ca) || vn(e) && !e)
    return {
      type: n,
      message: ca(e) ? e : "",
      ref: t
    };
}
var Io = (e) => At(e) && !ja(e) ? e : {
  value: e,
  message: ""
}, vu = async (e, t, n, r, o, s) => {
  const { ref: a, refs: l, required: c, maxLength: u, minLength: d, min: f, max: h, pattern: g, validate: y, name: m, valueAsNumber: b, mount: x } = e._f, E = ve(n, m);
  if (!x || t.has(m))
    return {};
  const w = l ? l[0] : a, S = ($) => {
    o && w.reportValidity && (w.setCustomValidity(vn($) ? "" : $ || ""), w.reportValidity());
  }, v = {}, T = Zd(a), R = Os(a), k = T || R, I = (b || Jd(a)) && mt(a.value) && mt(E) || Ba(a) && a.value === "" || E === "" || Array.isArray(E) && !E.length, p = pv.bind(null, m, r, v), O = ($, A, D, _ = Er.maxLength, M = Er.minLength) => {
    const V = $ ? A : D;
    v[m] = {
      type: $ ? _ : M,
      message: V,
      ref: a,
      ...p($ ? _ : M, V)
    };
  };
  if (s ? !Array.isArray(E) || !E.length : c && (!k && (I || an(E)) || vn(E) && !E || R && !yv(l).isValid || T && !vv(l).isValid)) {
    const { value: $, message: A } = ca(c) ? { value: !!c, message: c } : Io(c);
    if ($ && (v[m] = {
      type: Er.required,
      message: A,
      ref: w,
      ...p(Er.required, A)
    }, !r))
      return S(A), v;
  }
  if (!I && (!an(f) || !an(h))) {
    let $, A;
    const D = Io(h), _ = Io(f);
    if (!an(E) && !isNaN(E)) {
      const M = a.valueAsNumber || E && +E;
      an(D.value) || ($ = M > D.value), an(_.value) || (A = M < _.value);
    } else {
      const M = a.valueAsDate || new Date(E), V = (j) => /* @__PURE__ */ new Date((/* @__PURE__ */ new Date()).toDateString() + " " + j), Y = a.type == "time", U = a.type == "week";
      lr(D.value) && E && ($ = Y ? V(E) > V(D.value) : U ? E > D.value : M > new Date(D.value)), lr(_.value) && E && (A = Y ? V(E) < V(_.value) : U ? E < _.value : M < new Date(_.value));
    }
    if (($ || A) && (O(!!$, D.message, _.message, Er.max, Er.min), !r))
      return S(v[m].message), v;
  }
  if ((u || d) && !I && (lr(E) || s && Array.isArray(E))) {
    const $ = Io(u), A = Io(d), D = !an($.value) && E.length > +$.value, _ = !an(A.value) && E.length < +A.value;
    if ((D || _) && (O(D, $.message, A.message), !r))
      return S(v[m].message), v;
  }
  if (g && !I && lr(E)) {
    const { value: $, message: A } = Io(g);
    if (ja($) && !E.match($) && (v[m] = {
      type: Er.pattern,
      message: A,
      ref: a,
      ...p(Er.pattern, A)
    }, !r))
      return S(A), v;
  }
  if (y) {
    if (Hn(y)) {
      const $ = await y(E, n), A = Qm($, w);
      if (A && (v[m] = {
        ...A,
        ...p(Er.validate, A.message)
      }, !r))
        return S(A.message), v;
    } else if (At(y)) {
      let $ = {};
      for (const A in y) {
        if (!Jt($) && !r)
          break;
        const D = Qm(await y[A](E, n), w, A);
        D && ($ = {
          ...D,
          ...p(A, D.message)
        }, S(D.message), r && (v[m] = $));
      }
      if (!Jt($) && (v[m] = {
        ref: w,
        ...$
      }, !r))
        return v;
    }
  }
  return S(!0), v;
};
const aA = {
  mode: An.onSubmit,
  reValidateMode: An.onChange,
  shouldFocusError: !0
};
function lA(e = {}) {
  let t = {
    ...aA,
    ...e
  }, n = {
    submitCount: 0,
    isDirty: !1,
    isLoading: Hn(t.defaultValues),
    isValidating: !1,
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    touchedFields: {},
    dirtyFields: {},
    validatingFields: {},
    errors: t.errors || {},
    disabled: t.disabled || !1
  };
  const r = {};
  let o = At(t.defaultValues) || At(t.values) ? Et(t.values || t.defaultValues) || {} : {}, s = t.shouldUnregister ? {} : Et(o), a = {
    action: !1,
    mount: !1,
    watch: !1
  }, l = {
    mount: /* @__PURE__ */ new Set(),
    disabled: /* @__PURE__ */ new Set(),
    unMount: /* @__PURE__ */ new Set(),
    array: /* @__PURE__ */ new Set(),
    watch: /* @__PURE__ */ new Set()
  }, c, u = 0;
  const d = {
    isDirty: !1,
    dirtyFields: !1,
    validatingFields: !1,
    touchedFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  };
  let f = {
    ...d
  };
  const h = {
    array: Um(),
    state: Um()
  }, g = Do(t.mode), y = Do(t.reValidateMode), m = t.criteriaMode === An.all, b = (N) => (q) => {
    clearTimeout(u), u = setTimeout(N, q);
  }, x = async (N) => {
    if (!t.disabled && (d.isValid || f.isValid || N)) {
      const q = t.resolver ? Jt((await I()).errors) : await O(r, !0);
      q !== n.isValid && h.state.next({
        isValid: q
      });
    }
  }, E = (N, q) => {
    !t.disabled && (d.isValidating || d.validatingFields || f.isValidating || f.validatingFields) && ((N || Array.from(l.mount)).forEach((J) => {
      J && (q ? Ge(n.validatingFields, J, q) : Ft(n.validatingFields, J));
    }), h.state.next({
      validatingFields: n.validatingFields,
      isValidating: !Jt(n.validatingFields)
    }));
  }, w = (N, q = [], J, H, B = !0, z = !0) => {
    if (H && J && !t.disabled) {
      if (a.action = !0, z && Array.isArray(ve(r, N))) {
        const G = J(ve(r, N), H.argA, H.argB);
        B && Ge(r, N, G);
      }
      if (z && Array.isArray(ve(n.errors, N))) {
        const G = J(ve(n.errors, N), H.argA, H.argB);
        B && Ge(n.errors, N, G), sA(n.errors, N);
      }
      if ((d.touchedFields || f.touchedFields) && z && Array.isArray(ve(n.touchedFields, N))) {
        const G = J(ve(n.touchedFields, N), H.argA, H.argB);
        B && Ge(n.touchedFields, N, G);
      }
      (d.dirtyFields || f.dirtyFields) && (n.dirtyFields = Oi(o, s)), h.state.next({
        name: N,
        isDirty: A(N, q),
        dirtyFields: n.dirtyFields,
        errors: n.errors,
        isValid: n.isValid
      });
    } else
      Ge(s, N, q);
  }, S = (N, q) => {
    Ge(n.errors, N, q), h.state.next({
      errors: n.errors
    });
  }, v = (N) => {
    n.errors = N, h.state.next({
      errors: n.errors,
      isValid: !1
    });
  }, T = (N, q, J, H) => {
    const B = ve(r, N);
    if (B) {
      const z = ve(s, N, mt(J) ? ve(o, N) : J);
      mt(z) || H && H.defaultChecked || q ? Ge(s, N, q ? z : Gm(B._f)) : M(N, z), a.mount && x();
    }
  }, R = (N, q, J, H, B) => {
    let z = !1, G = !1;
    const pe = {
      name: N
    };
    if (!t.disabled) {
      if (!J || H) {
        (d.isDirty || f.isDirty) && (G = n.isDirty, n.isDirty = pe.isDirty = A(), z = G !== pe.isDirty);
        const me = jr(ve(o, N), q);
        G = !!ve(n.dirtyFields, N), me ? Ft(n.dirtyFields, N) : Ge(n.dirtyFields, N, !0), pe.dirtyFields = n.dirtyFields, z = z || (d.dirtyFields || f.dirtyFields) && G !== !me;
      }
      if (J) {
        const me = ve(n.touchedFields, N);
        me || (Ge(n.touchedFields, N, J), pe.touchedFields = n.touchedFields, z = z || (d.touchedFields || f.touchedFields) && me !== J);
      }
      z && B && h.state.next(pe);
    }
    return z ? pe : {};
  }, k = (N, q, J, H) => {
    const B = ve(n.errors, N), z = (d.isValid || f.isValid) && vn(q) && n.isValid !== q;
    if (t.delayError && J ? (c = b(() => S(N, J)), c(t.delayError)) : (clearTimeout(u), c = null, J ? Ge(n.errors, N, J) : Ft(n.errors, N)), (J ? !jr(B, J) : B) || !Jt(H) || z) {
      const G = {
        ...H,
        ...z && vn(q) ? { isValid: q } : {},
        errors: n.errors,
        name: N
      };
      n = {
        ...n,
        ...G
      }, h.state.next(G);
    }
  }, I = async (N) => {
    E(N, !0);
    const q = await t.resolver(s, t.context, eA(N || l.mount, r, t.criteriaMode, t.shouldUseNativeValidation));
    return E(N), q;
  }, p = async (N) => {
    const { errors: q } = await I(N);
    if (N)
      for (const J of N) {
        const H = ve(q, J);
        H ? Ge(n.errors, J, H) : Ft(n.errors, J);
      }
    else
      n.errors = q;
    return q;
  }, O = async (N, q, J = {
    valid: !0
  }) => {
    for (const H in N) {
      const B = N[H];
      if (B) {
        const { _f: z, ...G } = B;
        if (z) {
          const pe = l.array.has(z.name), me = B._f && tA(B._f);
          me && d.validatingFields && E([H], !0);
          const re = await vu(B, l.disabled, s, m, t.shouldUseNativeValidation && !q, pe);
          if (me && d.validatingFields && E([H]), re[z.name] && (J.valid = !1, q))
            break;
          !q && (ve(re, z.name) ? pe ? xv(n.errors, re, z.name) : Ge(n.errors, z.name, re[z.name]) : Ft(n.errors, z.name));
        }
        !Jt(G) && await O(G, q, J);
      }
    }
    return J.valid;
  }, $ = () => {
    for (const N of l.unMount) {
      const q = ve(r, N);
      q && (q._f.refs ? q._f.refs.every((J) => !wc(J)) : !wc(q._f.ref)) && ae(N);
    }
    l.unMount = /* @__PURE__ */ new Set();
  }, A = (N, q) => !t.disabled && (N && q && Ge(s, N, q), !jr(ee(), o)), D = (N, q, J) => fv(N, l, {
    ...a.mount ? s : mt(q) ? o : lr(N) ? { [N]: q } : q
  }, J, q), _ = (N) => Rs(ve(a.mount ? s : o, N, t.shouldUnregister ? ve(o, N, []) : [])), M = (N, q, J = {}) => {
    const H = ve(r, N);
    let B = q;
    if (H) {
      const z = H._f;
      z && (!z.disabled && Ge(s, N, bv(q, z)), B = Ba(z.ref) && an(q) ? "" : q, mv(z.ref) ? [...z.ref.options].forEach((G) => G.selected = B.includes(G.value)) : z.refs ? Os(z.ref) ? z.refs.length > 1 ? z.refs.forEach((G) => (!G.defaultChecked || !G.disabled) && (G.checked = Array.isArray(B) ? !!B.find((pe) => pe === G.value) : B === G.value)) : z.refs[0] && (z.refs[0].checked = !!B) : z.refs.forEach((G) => G.checked = G.value === B) : Jd(z.ref) ? z.ref.value = "" : (z.ref.value = B, z.ref.type || h.state.next({
        name: N,
        values: Et(s)
      })));
    }
    (J.shouldDirty || J.shouldTouch) && R(N, B, J.shouldTouch, J.shouldDirty, !0), J.shouldValidate && W(N);
  }, V = (N, q, J) => {
    for (const H in q) {
      const B = q[H], z = `${N}.${H}`, G = ve(r, z);
      (l.array.has(N) || At(B) || G && !G._f) && !lo(B) ? V(z, B, J) : M(z, B, J);
    }
  }, Y = (N, q, J = {}) => {
    const H = ve(r, N), B = l.array.has(N), z = Et(q);
    Ge(s, N, z), B ? (h.array.next({
      name: N,
      values: Et(s)
    }), (d.isDirty || d.dirtyFields || f.isDirty || f.dirtyFields) && J.shouldDirty && h.state.next({
      name: N,
      dirtyFields: Oi(o, s),
      isDirty: A(N, z)
    })) : H && !H._f && !an(z) ? V(N, z, J) : M(N, z, J), bu(N, l) && h.state.next({ ...n }), h.state.next({
      name: a.mount ? N : void 0,
      values: Et(s)
    });
  }, U = async (N) => {
    a.mount = !0;
    const q = N.target;
    let J = q.name, H = !0;
    const B = ve(r, J), z = (G) => {
      H = Number.isNaN(G) || lo(G) && isNaN(G.getTime()) || jr(G, ve(s, J, G));
    };
    if (B) {
      let G, pe;
      const me = q.type ? Gm(B._f) : av(N), re = N.type === Da.BLUR || N.type === Da.FOCUS_OUT, Z = !nA(B._f) && !t.resolver && !ve(n.errors, J) && !B._f.deps || iA(re, ve(n.touchedFields, J), n.isSubmitted, y, g), te = bu(J, l, re);
      Ge(s, J, me), re ? (B._f.onBlur && B._f.onBlur(N), c && c(0)) : B._f.onChange && B._f.onChange(N);
      const ye = R(J, me, re), Se = !Jt(ye) || te;
      if (!re && h.state.next({
        name: J,
        type: N.type,
        values: Et(s)
      }), Z)
        return (d.isValid || f.isValid) && (t.mode === "onBlur" ? re && x() : re || x()), Se && h.state.next({ name: J, ...te ? {} : ye });
      if (!re && te && h.state.next({ ...n }), t.resolver) {
        const { errors: le } = await I([J]);
        if (z(me), H) {
          const we = Xm(n.errors, r, J), Me = Xm(le, r, we.name || J);
          G = Me.error, J = Me.name, pe = Jt(le);
        }
      } else
        E([J], !0), G = (await vu(B, l.disabled, s, m, t.shouldUseNativeValidation))[J], E([J]), z(me), H && (G ? pe = !1 : (d.isValid || f.isValid) && (pe = await O(r, !0)));
      H && (B._f.deps && W(B._f.deps), k(J, pe, G, ye));
    }
  }, j = (N, q) => {
    if (ve(n.errors, q) && N.focus)
      return N.focus(), 1;
  }, W = async (N, q = {}) => {
    let J, H;
    const B = pn(N);
    if (t.resolver) {
      const z = await p(mt(N) ? N : B);
      J = Jt(z), H = N ? !B.some((G) => ve(z, G)) : J;
    } else N ? (H = (await Promise.all(B.map(async (z) => {
      const G = ve(r, z);
      return await O(G && G._f ? { [z]: G } : G);
    }))).every(Boolean), !(!H && !n.isValid) && x()) : H = J = await O(r);
    return h.state.next({
      ...!lr(N) || (d.isValid || f.isValid) && J !== n.isValid ? {} : { name: N },
      ...t.resolver || !N ? { isValid: J } : {},
      errors: n.errors
    }), q.shouldFocus && !H && Vo(r, j, N ? B : l.mount), H;
  }, ee = (N) => {
    const q = {
      ...a.mount ? s : o
    };
    return mt(N) ? q : lr(N) ? ve(q, N) : N.map((J) => ve(q, J));
  }, K = (N, q) => ({
    invalid: !!ve((q || n).errors, N),
    isDirty: !!ve((q || n).dirtyFields, N),
    error: ve((q || n).errors, N),
    isValidating: !!ve(n.validatingFields, N),
    isTouched: !!ve((q || n).touchedFields, N)
  }), oe = (N) => {
    N && pn(N).forEach((q) => Ft(n.errors, q)), h.state.next({
      errors: N ? n.errors : {}
    });
  }, ne = (N, q, J) => {
    const H = (ve(r, N, { _f: {} })._f || {}).ref, B = ve(n.errors, N) || {}, { ref: z, message: G, type: pe, ...me } = B;
    Ge(n.errors, N, {
      ...me,
      ...q,
      ref: H
    }), h.state.next({
      name: N,
      errors: n.errors,
      isValid: !1
    }), J && J.shouldFocus && H && H.focus && H.focus();
  }, se = (N, q) => Hn(N) ? h.state.subscribe({
    next: (J) => N(D(void 0, q), J)
  }) : D(N, q, !0), de = (N) => h.state.subscribe({
    next: (q) => {
      oA(N.name, q.name, N.exact) && rA(q, N.formState || d, Re, N.reRenderRoot) && N.callback({
        values: { ...s },
        ...n,
        ...q
      });
    }
  }).unsubscribe, X = (N) => (a.mount = !0, f = {
    ...f,
    ...N.formState
  }, de({
    ...N,
    formState: f
  })), ae = (N, q = {}) => {
    for (const J of N ? pn(N) : l.mount)
      l.mount.delete(J), l.array.delete(J), q.keepValue || (Ft(r, J), Ft(s, J)), !q.keepError && Ft(n.errors, J), !q.keepDirty && Ft(n.dirtyFields, J), !q.keepTouched && Ft(n.touchedFields, J), !q.keepIsValidating && Ft(n.validatingFields, J), !t.shouldUnregister && !q.keepDefaultValue && Ft(o, J);
    h.state.next({
      values: Et(s)
    }), h.state.next({
      ...n,
      ...q.keepDirty ? { isDirty: A() } : {}
    }), !q.keepIsValid && x();
  }, Q = ({ disabled: N, name: q }) => {
    (vn(N) && a.mount || N || l.disabled.has(q)) && (N ? l.disabled.add(q) : l.disabled.delete(q));
  }, ie = (N, q = {}) => {
    let J = ve(r, N);
    const H = vn(q.disabled) || vn(t.disabled);
    return Ge(r, N, {
      ...J || {},
      _f: {
        ...J && J._f ? J._f : { ref: { name: N } },
        name: N,
        mount: !0,
        ...q
      }
    }), l.mount.add(N), J ? Q({
      disabled: vn(q.disabled) ? q.disabled : t.disabled,
      name: N
    }) : T(N, !0, q.value), {
      ...H ? { disabled: q.disabled || t.disabled } : {},
      ...t.progressive ? {
        required: !!q.required,
        min: Ri(q.min),
        max: Ri(q.max),
        minLength: Ri(q.minLength),
        maxLength: Ri(q.maxLength),
        pattern: Ri(q.pattern)
      } : {},
      name: N,
      onChange: U,
      onBlur: U,
      ref: (B) => {
        if (B) {
          ie(N, q), J = ve(r, N);
          const z = mt(B.value) && B.querySelectorAll && B.querySelectorAll("input,select,textarea")[0] || B, G = QN(z), pe = J._f.refs || [];
          if (G ? pe.find((me) => me === z) : z === J._f.ref)
            return;
          Ge(r, N, {
            _f: {
              ...J._f,
              ...G ? {
                refs: [
                  ...pe.filter(wc),
                  z,
                  ...Array.isArray(ve(o, N)) ? [{}] : []
                ],
                ref: { type: z.type, name: N }
              } : { ref: z }
            }
          }), T(N, !1, void 0, z);
        } else
          J = ve(r, N, {}), J._f && (J._f.mount = !1), (t.shouldUnregister || q.shouldUnregister) && !(lv(l.array, N) && a.action) && l.unMount.add(N);
      }
    };
  }, F = () => t.shouldFocusError && Vo(r, j, l.mount), he = (N) => {
    vn(N) && (h.state.next({ disabled: N }), Vo(r, (q, J) => {
      const H = ve(r, J);
      H && (q.disabled = H._f.disabled || N, Array.isArray(H._f.refs) && H._f.refs.forEach((B) => {
        B.disabled = H._f.disabled || N;
      }));
    }, 0, !1));
  }, fe = (N, q) => async (J) => {
    let H;
    J && (J.preventDefault && J.preventDefault(), J.persist && J.persist());
    let B = Et(s);
    if (h.state.next({
      isSubmitting: !0
    }), t.resolver) {
      const { errors: z, values: G } = await I();
      n.errors = z, B = G;
    } else
      await O(r);
    if (l.disabled.size)
      for (const z of l.disabled)
        Ge(B, z, void 0);
    if (Ft(n.errors, "root"), Jt(n.errors)) {
      h.state.next({
        errors: {}
      });
      try {
        await N(B, J);
      } catch (z) {
        H = z;
      }
    } else
      q && await q({ ...n.errors }, J), F(), setTimeout(F);
    if (h.state.next({
      isSubmitted: !0,
      isSubmitting: !1,
      isSubmitSuccessful: Jt(n.errors) && !H,
      submitCount: n.submitCount + 1,
      errors: n.errors
    }), H)
      throw H;
  }, Te = (N, q = {}) => {
    ve(r, N) && (mt(q.defaultValue) ? Y(N, Et(ve(o, N))) : (Y(N, q.defaultValue), Ge(o, N, Et(q.defaultValue))), q.keepTouched || Ft(n.touchedFields, N), q.keepDirty || (Ft(n.dirtyFields, N), n.isDirty = q.defaultValue ? A(N, Et(ve(o, N))) : A()), q.keepError || (Ft(n.errors, N), d.isValid && x()), h.state.next({ ...n }));
  }, Le = (N, q = {}) => {
    const J = N ? Et(N) : o, H = Et(J), B = Jt(N), z = B ? o : H;
    if (q.keepDefaultValues || (o = J), !q.keepValues) {
      if (q.keepDirtyValues) {
        const G = /* @__PURE__ */ new Set([
          ...l.mount,
          ...Object.keys(Oi(o, s))
        ]);
        for (const pe of Array.from(G))
          ve(n.dirtyFields, pe) ? Ge(z, pe, ve(s, pe)) : Y(pe, ve(z, pe));
      } else {
        if (Xd && mt(N))
          for (const G of l.mount) {
            const pe = ve(r, G);
            if (pe && pe._f) {
              const me = Array.isArray(pe._f.refs) ? pe._f.refs[0] : pe._f.ref;
              if (Ba(me)) {
                const re = me.closest("form");
                if (re) {
                  re.reset();
                  break;
                }
              }
            }
          }
        for (const G of l.mount)
          Y(G, ve(z, G));
      }
      s = Et(z), h.array.next({
        values: { ...z }
      }), h.state.next({
        values: { ...z }
      });
    }
    l = {
      mount: q.keepDirtyValues ? l.mount : /* @__PURE__ */ new Set(),
      unMount: /* @__PURE__ */ new Set(),
      array: /* @__PURE__ */ new Set(),
      disabled: /* @__PURE__ */ new Set(),
      watch: /* @__PURE__ */ new Set(),
      watchAll: !1,
      focus: ""
    }, a.mount = !d.isValid || !!q.keepIsValid || !!q.keepDirtyValues, a.watch = !!t.shouldUnregister, h.state.next({
      submitCount: q.keepSubmitCount ? n.submitCount : 0,
      isDirty: B ? !1 : q.keepDirty ? n.isDirty : !!(q.keepDefaultValues && !jr(N, o)),
      isSubmitted: q.keepIsSubmitted ? n.isSubmitted : !1,
      dirtyFields: B ? {} : q.keepDirtyValues ? q.keepDefaultValues && s ? Oi(o, s) : n.dirtyFields : q.keepDefaultValues && N ? Oi(o, N) : q.keepDirty ? n.dirtyFields : {},
      touchedFields: q.keepTouched ? n.touchedFields : {},
      errors: q.keepErrors ? n.errors : {},
      isSubmitSuccessful: q.keepIsSubmitSuccessful ? n.isSubmitSuccessful : !1,
      isSubmitting: !1
    });
  }, Ae = (N, q) => Le(Hn(N) ? N(s) : N, q), Ie = (N, q = {}) => {
    const J = ve(r, N), H = J && J._f;
    if (H) {
      const B = H.refs ? H.refs[0] : H.ref;
      B.focus && (B.focus(), q.shouldSelect && Hn(B.select) && B.select());
    }
  }, Re = (N) => {
    n = {
      ...n,
      ...N
    };
  }, Oe = {
    control: {
      register: ie,
      unregister: ae,
      getFieldState: K,
      handleSubmit: fe,
      setError: ne,
      _subscribe: de,
      _runSchema: I,
      _getWatch: D,
      _getDirty: A,
      _setValid: x,
      _setFieldArray: w,
      _setDisabledField: Q,
      _setErrors: v,
      _getFieldArray: _,
      _reset: Le,
      _resetDefaultValues: () => Hn(t.defaultValues) && t.defaultValues().then((N) => {
        Ae(N, t.resetOptions), h.state.next({
          isLoading: !1
        });
      }),
      _removeUnmounted: $,
      _disableForm: he,
      _subjects: h,
      _proxyFormState: d,
      get _fields() {
        return r;
      },
      get _formValues() {
        return s;
      },
      get _state() {
        return a;
      },
      set _state(N) {
        a = N;
      },
      get _defaultValues() {
        return o;
      },
      get _names() {
        return l;
      },
      set _names(N) {
        l = N;
      },
      get _formState() {
        return n;
      },
      get _options() {
        return t;
      },
      set _options(N) {
        t = {
          ...t,
          ...N
        };
      }
    },
    subscribe: X,
    trigger: W,
    register: ie,
    handleSubmit: fe,
    watch: se,
    setValue: Y,
    getValues: ee,
    reset: Ae,
    resetField: Te,
    clearErrors: oe,
    unregister: ae,
    setError: ne,
    setFocus: Ie,
    getFieldState: K
  };
  return {
    ...Oe,
    formControl: Oe
  };
}
var Fr = () => {
  const e = typeof performance > "u" ? Date.now() : performance.now() * 1e3;
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (t) => {
    const n = (Math.random() * 16 + e) % 16 | 0;
    return (t == "x" ? n : n & 3 | 8).toString(16);
  });
}, Sc = (e, t, n = {}) => n.shouldFocus || mt(n.shouldFocus) ? n.focusName || `${e}.${mt(n.focusIndex) ? t : n.focusIndex}.` : "", Tc = (e, t) => [
  ...e,
  ...pn(t)
], Ec = (e) => Array.isArray(e) ? e.map(() => {
}) : void 0;
function Cc(e, t, n) {
  return [
    ...e.slice(0, t),
    ...pn(n),
    ...e.slice(t)
  ];
}
var Oc = (e, t, n) => Array.isArray(e) ? (mt(e[n]) && (e[n] = void 0), e.splice(n, 0, e.splice(t, 1)[0]), e) : [], Rc = (e, t) => [
  ...pn(t),
  ...pn(e)
];
function cA(e, t) {
  let n = 0;
  const r = [...e];
  for (const o of t)
    r.splice(o - n, 1), n++;
  return Rs(r).length ? r : [];
}
var kc = (e, t) => mt(t) ? [] : cA(e, pn(t).sort((n, r) => n - r)), $c = (e, t, n) => {
  [e[t], e[n]] = [e[n], e[t]];
}, Jm = (e, t, n) => (e[t] = n, e);
function i2(e) {
  const t = zn(), { control: n = t.control, name: r, keyName: o = "id", shouldUnregister: s, rules: a } = e, [l, c] = L.useState(n._getFieldArray(r)), u = L.useRef(n._getFieldArray(r).map(Fr)), d = L.useRef(l), f = L.useRef(r), h = L.useRef(!1);
  f.current = r, d.current = l, n._names.array.add(r), a && n.register(r, a), L.useEffect(() => n._subjects.array.subscribe({
    next: ({ values: T, name: R }) => {
      if (R === f.current || !R) {
        const k = ve(T, f.current);
        Array.isArray(k) && (c(k), u.current = k.map(Fr));
      }
    }
  }).unsubscribe, [n]);
  const g = L.useCallback((T) => {
    h.current = !0, n._setFieldArray(r, T);
  }, [n, r]), y = (T, R) => {
    const k = pn(Et(T)), I = Tc(n._getFieldArray(r), k);
    n._names.focus = Sc(r, I.length - 1, R), u.current = Tc(u.current, k.map(Fr)), g(I), c(I), n._setFieldArray(r, I, Tc, {
      argA: Ec(T)
    });
  }, m = (T, R) => {
    const k = pn(Et(T)), I = Rc(n._getFieldArray(r), k);
    n._names.focus = Sc(r, 0, R), u.current = Rc(u.current, k.map(Fr)), g(I), c(I), n._setFieldArray(r, I, Rc, {
      argA: Ec(T)
    });
  }, b = (T) => {
    const R = kc(n._getFieldArray(r), T);
    u.current = kc(u.current, T), g(R), c(R), !Array.isArray(ve(n._fields, r)) && Ge(n._fields, r, void 0), n._setFieldArray(r, R, kc, {
      argA: T
    });
  }, x = (T, R, k) => {
    const I = pn(Et(R)), p = Cc(n._getFieldArray(r), T, I);
    n._names.focus = Sc(r, T, k), u.current = Cc(u.current, T, I.map(Fr)), g(p), c(p), n._setFieldArray(r, p, Cc, {
      argA: T,
      argB: Ec(R)
    });
  }, E = (T, R) => {
    const k = n._getFieldArray(r);
    $c(k, T, R), $c(u.current, T, R), g(k), c(k), n._setFieldArray(r, k, $c, {
      argA: T,
      argB: R
    }, !1);
  }, w = (T, R) => {
    const k = n._getFieldArray(r);
    Oc(k, T, R), Oc(u.current, T, R), g(k), c(k), n._setFieldArray(r, k, Oc, {
      argA: T,
      argB: R
    }, !1);
  }, S = (T, R) => {
    const k = Et(R), I = Jm(n._getFieldArray(r), T, k);
    u.current = [...I].map((p, O) => !p || O === T ? Fr() : u.current[O]), g(I), c([...I]), n._setFieldArray(r, I, Jm, {
      argA: T,
      argB: k
    }, !0, !1);
  }, v = (T) => {
    const R = pn(Et(T));
    u.current = R.map(Fr), g([...R]), c([...R]), n._setFieldArray(r, [...R], (k) => k, {}, !0, !1);
  };
  return L.useEffect(() => {
    if (n._state.action = !1, bu(r, n._names) && n._subjects.state.next({
      ...n._formState
    }), h.current && (!Do(n._options.mode).isOnSubmit || n._formState.isSubmitted) && !Do(n._options.reValidateMode).isOnSubmit)
      if (n._options.resolver)
        n._runSchema([r]).then((T) => {
          const R = ve(T.errors, r), k = ve(n._formState.errors, r);
          (k ? !R && k.type || R && (k.type !== R.type || k.message !== R.message) : R && R.type) && (R ? Ge(n._formState.errors, r, R) : Ft(n._formState.errors, r), n._subjects.state.next({
            errors: n._formState.errors
          }));
        });
      else {
        const T = ve(n._fields, r);
        T && T._f && !(Do(n._options.reValidateMode).isOnSubmit && Do(n._options.mode).isOnSubmit) && vu(T, n._names.disabled, n._formValues, n._options.criteriaMode === An.all, n._options.shouldUseNativeValidation, !0).then((R) => !Jt(R) && n._subjects.state.next({
          errors: xv(n._formState.errors, R, r)
        }));
      }
    n._subjects.state.next({
      name: r,
      values: Et(n._formValues)
    }), n._names.focus && Vo(n._fields, (T, R) => {
      if (n._names.focus && R.startsWith(n._names.focus) && T.focus)
        return T.focus(), 1;
    }), n._names.focus = "", n._setValid(), h.current = !1;
  }, [l, r, n]), L.useEffect(() => (!ve(n._formValues, r) && n._setFieldArray(r), () => {
    const T = (R, k) => {
      const I = ve(n._fields, R);
      I && I._f && (I._f.mount = k);
    };
    n._options.shouldUnregister || s ? n.unregister(r) : T(r, !1);
  }), [r, n, o, s]), {
    swap: L.useCallback(E, [g, r, n]),
    move: L.useCallback(w, [g, r, n]),
    prepend: L.useCallback(m, [g, r, n]),
    append: L.useCallback(y, [g, r, n]),
    remove: L.useCallback(b, [g, r, n]),
    insert: L.useCallback(x, [g, r, n]),
    update: L.useCallback(S, [g, r, n]),
    replace: L.useCallback(v, [g, r, n]),
    fields: L.useMemo(() => l.map((T, R) => ({
      ...T,
      [o]: u.current[R] || Fr()
    })), [l, o])
  };
}
function s2(e = {}) {
  const t = L.useRef(void 0), n = L.useRef(void 0), [r, o] = L.useState({
    isDirty: !1,
    isValidating: !1,
    isLoading: Hn(e.defaultValues),
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    submitCount: 0,
    dirtyFields: {},
    touchedFields: {},
    validatingFields: {},
    errors: e.errors || {},
    disabled: e.disabled || !1,
    defaultValues: Hn(e.defaultValues) ? void 0 : e.defaultValues
  });
  t.current || (t.current = {
    ...e.formControl ? e.formControl : lA(e),
    formState: r
  }, e.formControl && e.defaultValues && !Hn(e.defaultValues) && e.formControl.reset(e.defaultValues, e.resetOptions));
  const s = t.current.control;
  return s._options = e, L.useLayoutEffect(() => s._subscribe({
    formState: s._proxyFormState,
    callback: () => o({ ...s._formState }),
    reRenderRoot: !0
  }), [s]), L.useEffect(() => s._disableForm(e.disabled), [s, e.disabled]), L.useEffect(() => {
    if (s._proxyFormState.isDirty) {
      const a = s._getDirty();
      a !== r.isDirty && s._subjects.state.next({
        isDirty: a
      });
    }
  }, [s, r.isDirty]), L.useEffect(() => {
    e.values && !jr(e.values, n.current) ? (s._reset(e.values, s._options.resetOptions), n.current = e.values, o((a) => ({ ...a }))) : s._resetDefaultValues();
  }, [e.values, s]), L.useEffect(() => {
    e.errors && !Jt(e.errors) && s._setErrors(e.errors);
  }, [e.errors, s]), L.useEffect(() => {
    s._state.mount || (s._setValid(), s._state.mount = !0), s._state.watch && (s._state.watch = !1, s._subjects.state.next({ ...s._formState })), s._removeUnmounted();
  }), L.useEffect(() => {
    e.shouldUnregister && s._subjects.state.next({
      values: s._getWatch()
    });
  }, [e.shouldUnregister, s]), t.current.formState = dv(r, s), t.current;
}
const Zm = (e, t, n) => {
  if (e && "reportValidity" in e) {
    const r = ve(n, t);
    e.setCustomValidity(r && r.message || ""), e.reportValidity();
  }
}, wv = (e, t) => {
  for (const n in t.fields) {
    const r = t.fields[n];
    r && r.ref && "reportValidity" in r.ref ? Zm(r.ref, n, e) : r && r.refs && r.refs.forEach((o) => Zm(o, n, e));
  }
}, uA = (e, t) => {
  t.shouldUseNativeValidation && wv(e, t);
  const n = {};
  for (const r in e) {
    const o = ve(t.fields, r), s = Object.assign(e[r] || {}, { ref: o && o.ref });
    if (dA(t.names || Object.keys(e), r)) {
      const a = Object.assign({}, ve(n, r));
      Ge(a, "root", s), Ge(n, r, a);
    } else Ge(n, r, s);
  }
  return n;
}, dA = (e, t) => {
  const n = eh(t);
  return e.some((r) => eh(r).match(`^${n}\\.\\d+`));
};
function eh(e) {
  return e.replace(/\]|\[/g, "");
}
function fA(e, t) {
  for (var n = {}; e.length; ) {
    var r = e[0], o = r.code, s = r.message, a = r.path.join(".");
    if (!n[a]) if ("unionErrors" in r) {
      var l = r.unionErrors[0].errors[0];
      n[a] = { message: l.message, type: l.code };
    } else n[a] = { message: s, type: o };
    if ("unionErrors" in r && r.unionErrors.forEach(function(d) {
      return d.errors.forEach(function(f) {
        return e.push(f);
      });
    }), t) {
      var c = n[a].types, u = c && c[r.code];
      n[a] = pv(a, t, n, o, u ? [].concat(u, r.message) : r.message);
    }
    e.shift();
  }
  return n;
}
function a2(e, t, n) {
  return n === void 0 && (n = {}), function(r, o, s) {
    try {
      return Promise.resolve(function(a, l) {
        try {
          var c = Promise.resolve(e[n.mode === "sync" ? "parse" : "parseAsync"](r, t)).then(function(u) {
            return s.shouldUseNativeValidation && wv({}, s), { errors: {}, values: n.raw ? Object.assign({}, r) : u };
          });
        } catch (u) {
          return l(u);
        }
        return c && c.then ? c.then(void 0, l) : c;
      }(0, function(a) {
        if (function(l) {
          return Array.isArray(l == null ? void 0 : l.errors);
        }(a)) return { values: {}, errors: uA(fA(a.errors, !s.shouldUseNativeValidation && s.criteriaMode === "all"), s) };
        throw a;
      }));
    } catch (a) {
      return Promise.reject(a);
    }
  };
}
function pA({
  children: e,
  formInstance: t,
  onSubmit: n
}) {
  const { handleSubmit: r, trigger: o } = t;
  return zo(() => {
    o();
  }, [o]), t ? /* @__PURE__ */ P(YN, { ...t, children: /* @__PURE__ */ P($r, { component: "form", autoComplete: "off", onSubmit: r(n), children: e }) }) : null;
}
const l2 = _e(pA), mA = _e(({ name: e, ...t }) => {
  const { control: n } = zn();
  return /* @__PURE__ */ P(
    vo,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, value: o, ref: s }, fieldState: { error: a } }) => /* @__PURE__ */ P(
        jy,
        {
          ...t,
          value: o,
          onChange: r,
          inputRef: s,
          isError: !!a
        }
      )
    }
  );
});
mA.displayName = "CheckboxUncontrolled";
function hA({
  isSubmitting: e,
  submitButtonText: t = "Submit",
  cancelButtonText: n = "Cancel"
}) {
  const r = zn();
  if (!r)
    return null;
  const { formState: o, reset: s, trigger: a } = r, { isValid: l, isSubmitting: c, defaultValues: u } = o;
  return /* @__PURE__ */ $e(Kt, { row: !0, mt: "32px", children: [
    /* @__PURE__ */ P(
      Gn,
      {
        type: "reset",
        text: n,
        isOutlined: !0,
        disabled: e || c,
        onClick: () => {
          s(u), a();
        }
      }
    ),
    /* @__PURE__ */ P(
      Gn,
      {
        type: "submit",
        text: t,
        loading: e || c,
        disabled: !l
      }
    )
  ] });
}
hA.displayName = "FormUncontrolledAction";
const gA = _e(({ name: e, ...t }) => {
  const { control: n } = zn();
  return /* @__PURE__ */ P(
    vo,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ P(
        wl,
        {
          ...t,
          value: s,
          onChange: r,
          onBlur: o,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
gA.displayName = "InputUncontrolled";
const yA = _e(({ name: e, ...t }) => {
  const { control: n } = zn();
  return /* @__PURE__ */ P(
    vo,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ P(
        Ky,
        {
          ...t,
          value: s,
          onChange: r,
          onBlur: o,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || "　"
        }
      )
    }
  );
});
yA.displayName = "NumberUncontrolled";
const bA = _e(({ name: e, ...t }) => {
  const { control: n } = zn();
  return /* @__PURE__ */ P(
    vo,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ P(
        ev,
        {
          ...t,
          value: s,
          onChange: r,
          onBlur: o,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
bA.displayName = "OtpInputUncontrolled";
const vA = _e(({ name: e, ...t }) => {
  const { control: n } = zn();
  return /* @__PURE__ */ P(
    vo,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ P(
        tv,
        {
          ...t,
          value: s,
          onChange: r,
          onBlur: o,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
vA.displayName = "PasswordUncontrolled";
const xA = [], wA = _e(
  ({ name: e, options: t = xA, ...n }) => {
    const { control: r } = zn();
    return /* @__PURE__ */ P(
      vo,
      {
        control: r,
        name: e,
        render: ({ field: { onChange: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ P(
          ov,
          {
            ...n,
            name: e,
            options: t,
            value: s,
            onChange: (c) => o(c.value),
            inputRef: a,
            isError: !!l
          }
        )
      }
    );
  }
);
wA.displayName = "RadiosUncontrolled";
const SA = _e(({ name: e, ...t }) => {
  const { control: n } = zn();
  return /* @__PURE__ */ P(
    vo,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, value: o, ref: s } }) => /* @__PURE__ */ P(Kd, { ...t, value: o, onChange: r, inputRef: s })
    }
  );
});
SA.displayName = "SwitchUncontrolled";
const Ao = {
  xs: 1,
  // 1行1个
  sm: 1,
  // 1行1个
  md: 2,
  // 1行2个
  lg: 3,
  // 1行3个
  xl: 4
  // 1行4个
}, TA = [], th = (e) => {
  let t;
  const n = /* @__PURE__ */ new Set(), r = (u, d) => {
    const f = typeof u == "function" ? u(t) : u;
    if (!Object.is(f, t)) {
      const h = t;
      t = d ?? (typeof f != "object" || f === null) ? f : Object.assign({}, t, f), n.forEach((g) => g(t, h));
    }
  }, o = () => t, l = { setState: r, getState: o, getInitialState: () => c, subscribe: (u) => (n.add(u), () => n.delete(u)) }, c = t = e(r, o, l);
  return l;
}, EA = (e) => e ? th(e) : th, CA = (e) => e;
function Sv(e, t = CA) {
  const n = L.useSyncExternalStore(
    e.subscribe,
    () => t(e.getState()),
    () => t(e.getInitialState())
  );
  return L.useDebugValue(n), n;
}
const nh = (e) => {
  const t = EA(e), n = (r) => Sv(t, r);
  return Object.assign(n, t), n;
}, ef = (e) => e ? nh(e) : nh, rh = { BASE_URL: "/", DEV: !1, MODE: "production", PROD: !0, SSR: !1 }, xu = /* @__PURE__ */ new Map(), Ks = (e) => {
  const t = xu.get(e);
  return t ? Object.fromEntries(
    Object.entries(t.stores).map(([n, r]) => [n, r.getState()])
  ) : {};
}, OA = (e, t, n) => {
  if (e === void 0)
    return {
      type: "untracked",
      connection: t.connect(n)
    };
  const r = xu.get(n.name);
  if (r)
    return { type: "tracked", store: e, ...r };
  const o = {
    connection: t.connect(n),
    stores: {}
  };
  return xu.set(n.name, o), { type: "tracked", store: e, ...o };
}, RA = (e, t = {}) => (n, r, o) => {
  const { enabled: s, anonymousActionType: a, store: l, ...c } = t;
  let u;
  try {
    u = (s ?? (rh ? "production" : void 0) !== "production") && window.__REDUX_DEVTOOLS_EXTENSION__;
  } catch {
  }
  if (!u)
    return e(n, r, o);
  const { connection: d, ...f } = OA(l, u, c);
  let h = !0;
  o.setState = (m, b, x) => {
    const E = n(m, b);
    if (!h) return E;
    const w = x === void 0 ? { type: a || "anonymous" } : typeof x == "string" ? { type: x } : x;
    return l === void 0 ? (d == null || d.send(w, r()), E) : (d == null || d.send(
      {
        ...w,
        type: `${l}/${w.type}`
      },
      {
        ...Ks(c.name),
        [l]: o.getState()
      }
    ), E);
  };
  const g = (...m) => {
    const b = h;
    h = !1, n(...m), h = b;
  }, y = e(o.setState, r, o);
  if (f.type === "untracked" ? d == null || d.init(y) : (f.stores[f.store] = o, d == null || d.init(
    Object.fromEntries(
      Object.entries(f.stores).map(([m, b]) => [
        m,
        m === f.store ? y : b.getState()
      ])
    )
  )), o.dispatchFromDevtools && typeof o.dispatch == "function") {
    let m = !1;
    const b = o.dispatch;
    o.dispatch = (...x) => {
      (rh ? "production" : void 0) !== "production" && x[0].type === "__setState" && !m && (console.warn(
        '[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'
      ), m = !0), b(...x);
    };
  }
  return d.subscribe((m) => {
    var b;
    switch (m.type) {
      case "ACTION":
        if (typeof m.payload != "string") {
          console.error(
            "[zustand devtools middleware] Unsupported action format"
          );
          return;
        }
        return Pc(
          m.payload,
          (x) => {
            if (x.type === "__setState") {
              if (l === void 0) {
                g(x.state);
                return;
              }
              Object.keys(x.state).length !== 1 && console.error(
                `
                    [zustand devtools middleware] Unsupported __setState action format.
                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),
                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }
                    `
              );
              const E = x.state[l];
              if (E == null)
                return;
              JSON.stringify(o.getState()) !== JSON.stringify(E) && g(E);
              return;
            }
            o.dispatchFromDevtools && typeof o.dispatch == "function" && o.dispatch(x);
          }
        );
      case "DISPATCH":
        switch (m.payload.type) {
          case "RESET":
            return g(y), l === void 0 ? d == null ? void 0 : d.init(o.getState()) : d == null ? void 0 : d.init(Ks(c.name));
          case "COMMIT":
            if (l === void 0) {
              d == null || d.init(o.getState());
              return;
            }
            return d == null ? void 0 : d.init(Ks(c.name));
          case "ROLLBACK":
            return Pc(m.state, (x) => {
              if (l === void 0) {
                g(x), d == null || d.init(o.getState());
                return;
              }
              g(x[l]), d == null || d.init(Ks(c.name));
            });
          case "JUMP_TO_STATE":
          case "JUMP_TO_ACTION":
            return Pc(m.state, (x) => {
              if (l === void 0) {
                g(x);
                return;
              }
              JSON.stringify(o.getState()) !== JSON.stringify(x[l]) && g(x[l]);
            });
          case "IMPORT_STATE": {
            const { nextLiftedState: x } = m.payload, E = (b = x.computedStates.slice(-1)[0]) == null ? void 0 : b.state;
            if (!E) return;
            g(l === void 0 ? E : E[l]), d == null || d.send(
              null,
              // FIXME no-any
              x
            );
            return;
          }
          case "PAUSE_RECORDING":
            return h = !h;
        }
        return;
    }
  }), y;
}, Tv = RA, Pc = (e, t) => {
  let n;
  try {
    n = JSON.parse(e);
  } catch (r) {
    console.error(
      "[zustand devtools middleware] Could not parse the received json",
      r
    );
  }
  n !== void 0 && t(n);
};
function kA(e, t) {
  let n;
  try {
    n = e();
  } catch {
    return;
  }
  return {
    getItem: (o) => {
      var s;
      const a = (c) => c === null ? null : JSON.parse(c, void 0), l = (s = n.getItem(o)) != null ? s : null;
      return l instanceof Promise ? l.then(a) : a(l);
    },
    setItem: (o, s) => n.setItem(
      o,
      JSON.stringify(s, void 0)
    ),
    removeItem: (o) => n.removeItem(o)
  };
}
const wu = (e) => (t) => {
  try {
    const n = e(t);
    return n instanceof Promise ? n : {
      then(r) {
        return wu(r)(n);
      },
      catch(r) {
        return this;
      }
    };
  } catch (n) {
    return {
      then(r) {
        return this;
      },
      catch(r) {
        return wu(r)(n);
      }
    };
  }
}, $A = (e, t) => (n, r, o) => {
  let s = {
    storage: kA(() => localStorage),
    partialize: (m) => m,
    version: 0,
    merge: (m, b) => ({
      ...b,
      ...m
    }),
    ...t
  }, a = !1;
  const l = /* @__PURE__ */ new Set(), c = /* @__PURE__ */ new Set();
  let u = s.storage;
  if (!u)
    return e(
      (...m) => {
        console.warn(
          `[zustand persist middleware] Unable to update item '${s.name}', the given storage is currently unavailable.`
        ), n(...m);
      },
      r,
      o
    );
  const d = () => {
    const m = s.partialize({ ...r() });
    return u.setItem(s.name, {
      state: m,
      version: s.version
    });
  }, f = o.setState;
  o.setState = (m, b) => {
    f(m, b), d();
  };
  const h = e(
    (...m) => {
      n(...m), d();
    },
    r,
    o
  );
  o.getInitialState = () => h;
  let g;
  const y = () => {
    var m, b;
    if (!u) return;
    a = !1, l.forEach((E) => {
      var w;
      return E((w = r()) != null ? w : h);
    });
    const x = ((b = s.onRehydrateStorage) == null ? void 0 : b.call(s, (m = r()) != null ? m : h)) || void 0;
    return wu(u.getItem.bind(u))(s.name).then((E) => {
      if (E)
        if (typeof E.version == "number" && E.version !== s.version) {
          if (s.migrate) {
            const w = s.migrate(
              E.state,
              E.version
            );
            return w instanceof Promise ? w.then((S) => [!0, S]) : [!0, w];
          }
          console.error(
            "State loaded from storage couldn't be migrated since no migrate function was provided"
          );
        } else
          return [!1, E.state];
      return [!1, void 0];
    }).then((E) => {
      var w;
      const [S, v] = E;
      if (g = s.merge(
        v,
        (w = r()) != null ? w : h
      ), n(g, !0), S)
        return d();
    }).then(() => {
      x == null || x(g, void 0), g = r(), a = !0, c.forEach((E) => E(g));
    }).catch((E) => {
      x == null || x(void 0, E);
    });
  };
  return o.persist = {
    setOptions: (m) => {
      s = {
        ...s,
        ...m
      }, m.storage && (u = m.storage);
    },
    clearStorage: () => {
      u == null || u.removeItem(s.name);
    },
    getOptions: () => s,
    rehydrate: () => y(),
    hasHydrated: () => a,
    onHydrate: (m) => (l.add(m), () => {
      l.delete(m);
    }),
    onFinishHydration: (m) => (c.add(m), () => {
      c.delete(m);
    })
  }, s.skipHydration || y(), g || h;
}, Ev = $A;
function oh() {
  return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
const PA = ef()(
  Tv(
    Ev(
      (e) => ({
        themeMode: oh(),
        setThemeMode: (t) => e({ themeMode: t }),
        toggleThemeMode: () => e((t) => ({ themeMode: t.themeMode === "dark" ? "light" : "dark" })),
        resetThemeMode: () => e({ themeMode: oh() })
      }),
      {
        name: "VENOMOUS_UI__THEME_MODE"
      }
    )
  )
);
function tf() {
  const e = Sv(PA);
  return {
    ...e,
    isDarkMode: e.themeMode === "dark"
  };
}
function IA(e) {
  return {
    origin: e,
    light: ai(e, 0.5),
    dark: si(e, 0.5),
    opacity: Yt(e, 0.2)
  };
}
var Cv = /* @__PURE__ */ ((e) => (e.Skyblue = "Skyblue", e.Teal = "Teal", e.Amber = "Amber", e))(Cv || {});
const Ov = {
  Skyblue: "#0097a7",
  Teal: "#009688",
  Amber: "#ffb300"
};
function Su(e) {
  const t = Ov[e], { light: n, dark: r, opacity: o } = IA(t);
  return {
    main: t,
    light: n,
    dark: r,
    opacity: o,
    contrastText: "#fff"
  };
}
const NA = ef()(
  Tv(
    Ev(
      (e) => ({
        themePaletteName: "Skyblue",
        themePalette: Su(
          "Skyblue"
          /* Skyblue */
        ),
        setThemePaletteName: (t) => e({ themePaletteName: t, themePalette: Su(t) })
      }),
      {
        name: "VENOMOUS_UI__THEME_PALETTE"
      }
    )
  )
);
function Rv() {
  return {
    ...NA(),
    allPaletteNames: Object.keys(Cv),
    allPaletteMainColors: Ov
  };
}
const ki = Wh({
  themeId: qn
});
function AA() {
  const { breakpoints: e } = Mr(), t = ki(e.down("sm")), n = ki(e.between("sm", "md")), r = ki(e.between("md", "lg")), o = ki(e.between("lg", "xl")), s = ki(e.up("xl")), a = cn(() => {
    var l;
    return ((l = [
      ["xs", t],
      ["sm", n],
      ["md", r],
      ["lg", o],
      ["xl", s]
    ].find(([, c]) => c)) == null ? void 0 : l[0].toString()) || "xs";
  }, [t, n, r, o, s]);
  return {
    isXs: t,
    isSm: n,
    isMd: r,
    isLg: o,
    isXl: s,
    breakpoints: {
      current: a,
      unit: "px",
      values: {
        xs: 0,
        sm: 600,
        md: 900,
        lg: 1200,
        xl: 1536
      }
    }
  };
}
function c2() {
  return (e) => e;
}
function MA() {
  const e = zM(), [t, n] = Cr(!1), r = tn(() => {
    t ? document.exitFullscreen().then(() => {
      n(!1);
    }).catch(() => {
      e({
        type: "error",
        title: "Error",
        description: "Error attempting to disable full-screen mode"
      });
    }) : document.documentElement.requestFullscreen().then(() => {
      n(!0);
    }).catch(() => {
      e({
        type: "error",
        title: "Error",
        description: "Error attempting to enable full-screen mode"
      });
    });
  }, [t, e]);
  return zo(() => {
    const o = () => {
      n(document.fullscreenElement !== null);
    };
    return document.addEventListener("fullscreenchange", o), () => {
      document.removeEventListener("fullscreenchange", o);
    };
  }, []), {
    isFullScreen: t,
    setIsFullScreen: n,
    toggleFullScreen: r
  };
}
function _A({
  gridStyle: e,
  cols: t
}) {
  const { isXs: n, isSm: r, isMd: o, isLg: s } = AA(), a = cn(() => {
    let c;
    return n ? c = (t == null ? void 0 : t.xs) ?? Ao.xs : r ? c = (t == null ? void 0 : t.sm) ?? Ao.sm : o ? c = (t == null ? void 0 : t.md) ?? Ao.md : s ? c = (t == null ? void 0 : t.lg) ?? Ao.lg : c = (t == null ? void 0 : t.xl) ?? Ao.xl, `${100 / c}%`;
  }, [n, r, o, s, t]);
  return {
    gridComponents: cn(
      () => ({
        List: ({ ref: c, style: u, children: d, ...f }) => /* @__PURE__ */ P(
          "div",
          {
            ref: c,
            ...f,
            style: { display: "flex", flexWrap: "wrap", ...u, ...e },
            children: d
          }
        ),
        Item: ({ children: c, ...u }) => /* @__PURE__ */ P(
          "div",
          {
            ...u,
            style: {
              width: a,
              display: "flex",
              boxSizing: "border-box",
              flex: "none",
              alignContent: "stretch"
            },
            children: c
          }
        )
      }),
      [a, e]
    )
  };
}
const DA = ({
  height: e,
  width: t,
  items: n = TA,
  renderGridItem: r,
  gridStyle: o,
  cols: s = Ao
}) => {
  const { gridComponents: a } = _A({ gridStyle: o, cols: s });
  return /* @__PURE__ */ P(
    Kt,
    {
      className: "VenomousUI-Grid",
      sx: {
        height: e || "100%",
        width: t || "100%",
        "& > *": {
          flex: "unset",
          width: "100%"
        }
      },
      children: /* @__PURE__ */ P(
        zO,
        {
          style: { height: "100%" },
          totalCount: n.length,
          components: a,
          itemContent: (l) => r(n[l], l)
        }
      )
    }
  );
}, BA = _e(DA);
var Ic = { exports: {} }, ih;
function FA() {
  return ih || (ih = 1, (() => {
    var e = { 296: (o, s, a) => {
      var l = /^\s+|\s+$/g, c = /^[-+]0x[0-9a-f]+$/i, u = /^0b[01]+$/i, d = /^0o[0-7]+$/i, f = parseInt, h = typeof a.g == "object" && a.g && a.g.Object === Object && a.g, g = typeof self == "object" && self && self.Object === Object && self, y = h || g || Function("return this")(), m = Object.prototype.toString, b = Math.max, x = Math.min, E = function() {
        return y.Date.now();
      };
      function w(v) {
        var T = typeof v;
        return !!v && (T == "object" || T == "function");
      }
      function S(v) {
        if (typeof v == "number") return v;
        if (function(k) {
          return typeof k == "symbol" || /* @__PURE__ */ function(I) {
            return !!I && typeof I == "object";
          }(k) && m.call(k) == "[object Symbol]";
        }(v)) return NaN;
        if (w(v)) {
          var T = typeof v.valueOf == "function" ? v.valueOf() : v;
          v = w(T) ? T + "" : T;
        }
        if (typeof v != "string") return v === 0 ? v : +v;
        v = v.replace(l, "");
        var R = u.test(v);
        return R || d.test(v) ? f(v.slice(2), R ? 2 : 8) : c.test(v) ? NaN : +v;
      }
      o.exports = function(v, T, R) {
        var k, I, p, O, $, A, D = 0, _ = !1, M = !1, V = !0;
        if (typeof v != "function") throw new TypeError("Expected a function");
        function Y(K) {
          var oe = k, ne = I;
          return k = I = void 0, D = K, O = v.apply(ne, oe);
        }
        function U(K) {
          var oe = K - A;
          return A === void 0 || oe >= T || oe < 0 || M && K - D >= p;
        }
        function j() {
          var K = E();
          if (U(K)) return W(K);
          $ = setTimeout(j, function(oe) {
            var ne = T - (oe - A);
            return M ? x(ne, p - (oe - D)) : ne;
          }(K));
        }
        function W(K) {
          return $ = void 0, V && k ? Y(K) : (k = I = void 0, O);
        }
        function ee() {
          var K = E(), oe = U(K);
          if (k = arguments, I = this, A = K, oe) {
            if ($ === void 0) return function(ne) {
              return D = ne, $ = setTimeout(j, T), _ ? Y(ne) : O;
            }(A);
            if (M) return $ = setTimeout(j, T), Y(A);
          }
          return $ === void 0 && ($ = setTimeout(j, T)), O;
        }
        return T = S(T) || 0, w(R) && (_ = !!R.leading, p = (M = "maxWait" in R) ? b(S(R.maxWait) || 0, T) : p, V = "trailing" in R ? !!R.trailing : V), ee.cancel = function() {
          $ !== void 0 && clearTimeout($), D = 0, k = A = I = $ = void 0;
        }, ee.flush = function() {
          return $ === void 0 ? O : W(E());
        }, ee;
      };
    }, 96: (o, s, a) => {
      var l = "Expected a function", c = NaN, u = "[object Symbol]", d = /^\s+|\s+$/g, f = /^[-+]0x[0-9a-f]+$/i, h = /^0b[01]+$/i, g = /^0o[0-7]+$/i, y = parseInt, m = typeof a.g == "object" && a.g && a.g.Object === Object && a.g, b = typeof self == "object" && self && self.Object === Object && self, x = m || b || Function("return this")(), E = Object.prototype.toString, w = Math.max, S = Math.min, v = function() {
        return x.Date.now();
      };
      function T(k) {
        var I = typeof k;
        return !!k && (I == "object" || I == "function");
      }
      function R(k) {
        if (typeof k == "number") return k;
        if (function(O) {
          return typeof O == "symbol" || /* @__PURE__ */ function($) {
            return !!$ && typeof $ == "object";
          }(O) && E.call(O) == u;
        }(k)) return c;
        if (T(k)) {
          var I = typeof k.valueOf == "function" ? k.valueOf() : k;
          k = T(I) ? I + "" : I;
        }
        if (typeof k != "string") return k === 0 ? k : +k;
        k = k.replace(d, "");
        var p = h.test(k);
        return p || g.test(k) ? y(k.slice(2), p ? 2 : 8) : f.test(k) ? c : +k;
      }
      o.exports = function(k, I, p) {
        var O = !0, $ = !0;
        if (typeof k != "function") throw new TypeError(l);
        return T(p) && (O = "leading" in p ? !!p.leading : O, $ = "trailing" in p ? !!p.trailing : $), function(A, D, _) {
          var M, V, Y, U, j, W, ee = 0, K = !1, oe = !1, ne = !0;
          if (typeof A != "function") throw new TypeError(l);
          function se(ie) {
            var F = M, he = V;
            return M = V = void 0, ee = ie, U = A.apply(he, F);
          }
          function de(ie) {
            var F = ie - W;
            return W === void 0 || F >= D || F < 0 || oe && ie - ee >= Y;
          }
          function X() {
            var ie = v();
            if (de(ie)) return ae(ie);
            j = setTimeout(X, function(F) {
              var he = D - (F - W);
              return oe ? S(he, Y - (F - ee)) : he;
            }(ie));
          }
          function ae(ie) {
            return j = void 0, ne && M ? se(ie) : (M = V = void 0, U);
          }
          function Q() {
            var ie = v(), F = de(ie);
            if (M = arguments, V = this, W = ie, F) {
              if (j === void 0) return function(he) {
                return ee = he, j = setTimeout(X, D), K ? se(he) : U;
              }(W);
              if (oe) return j = setTimeout(X, D), se(W);
            }
            return j === void 0 && (j = setTimeout(X, D)), U;
          }
          return D = R(D) || 0, T(_) && (K = !!_.leading, Y = (oe = "maxWait" in _) ? w(R(_.maxWait) || 0, D) : Y, ne = "trailing" in _ ? !!_.trailing : ne), Q.cancel = function() {
            j !== void 0 && clearTimeout(j), ee = 0, M = W = V = j = void 0;
          }, Q.flush = function() {
            return j === void 0 ? U : ae(v());
          }, Q;
        }(k, I, { leading: O, maxWait: I, trailing: $ });
      };
    }, 703: (o, s, a) => {
      var l = a(414);
      function c() {
      }
      function u() {
      }
      u.resetWarningCache = c, o.exports = function() {
        function d(g, y, m, b, x, E) {
          if (E !== l) {
            var w = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
            throw w.name = "Invariant Violation", w;
          }
        }
        function f() {
          return d;
        }
        d.isRequired = d;
        var h = { array: d, bigint: d, bool: d, func: d, number: d, object: d, string: d, symbol: d, any: d, arrayOf: f, element: d, elementType: d, instanceOf: f, node: d, objectOf: f, oneOf: f, oneOfType: f, shape: f, exact: f, checkPropTypes: u, resetWarningCache: c };
        return h.PropTypes = h, h;
      };
    }, 697: (o, s, a) => {
      o.exports = a(703)();
    }, 414: (o) => {
      o.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    } }, t = {};
    function n(o) {
      var s = t[o];
      if (s !== void 0) return s.exports;
      var a = t[o] = { exports: {} };
      return e[o](a, a.exports, n), a.exports;
    }
    n.n = (o) => {
      var s = o && o.__esModule ? () => o.default : () => o;
      return n.d(s, { a: s }), s;
    }, n.d = (o, s) => {
      for (var a in s) n.o(s, a) && !n.o(o, a) && Object.defineProperty(o, a, { enumerable: !0, get: s[a] });
    }, n.g = function() {
      if (typeof globalThis == "object") return globalThis;
      try {
        return this || new Function("return this")();
      } catch {
        if (typeof window == "object") return window;
      }
    }(), n.o = (o, s) => Object.prototype.hasOwnProperty.call(o, s), n.r = (o) => {
      typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(o, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(o, "__esModule", { value: !0 });
    };
    var r = {};
    (() => {
      n.r(r), n.d(r, { LazyLoadComponent: () => F, LazyLoadImage: () => J, trackWindowScroll: () => U });
      const o = L;
      var s = n.n(o), a = n(697);
      function l() {
        return typeof window < "u" && "IntersectionObserver" in window && "isIntersecting" in window.IntersectionObserverEntry.prototype;
      }
      function c(H) {
        return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(B) {
          return typeof B;
        } : function(B) {
          return B && typeof Symbol == "function" && B.constructor === Symbol && B !== Symbol.prototype ? "symbol" : typeof B;
        }, c(H);
      }
      function u(H, B) {
        var z = Object.keys(H);
        if (Object.getOwnPropertySymbols) {
          var G = Object.getOwnPropertySymbols(H);
          B && (G = G.filter(function(pe) {
            return Object.getOwnPropertyDescriptor(H, pe).enumerable;
          })), z.push.apply(z, G);
        }
        return z;
      }
      function d(H, B, z) {
        return (B = h(B)) in H ? Object.defineProperty(H, B, { value: z, enumerable: !0, configurable: !0, writable: !0 }) : H[B] = z, H;
      }
      function f(H, B) {
        for (var z = 0; z < B.length; z++) {
          var G = B[z];
          G.enumerable = G.enumerable || !1, G.configurable = !0, "value" in G && (G.writable = !0), Object.defineProperty(H, h(G.key), G);
        }
      }
      function h(H) {
        var B = function(z, G) {
          if (c(z) !== "object" || z === null) return z;
          var pe = z[Symbol.toPrimitive];
          if (pe !== void 0) {
            var me = pe.call(z, "string");
            if (c(me) !== "object") return me;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(z);
        }(H);
        return c(B) === "symbol" ? B : String(B);
      }
      function g(H, B) {
        return g = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(z, G) {
          return z.__proto__ = G, z;
        }, g(H, B);
      }
      function y(H) {
        return y = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(B) {
          return B.__proto__ || Object.getPrototypeOf(B);
        }, y(H);
      }
      var m = function(H) {
        H.forEach(function(B) {
          B.isIntersecting && B.target.onVisible();
        });
      }, b = {}, x = function(H) {
        (function(Z, te) {
          if (typeof te != "function" && te !== null) throw new TypeError("Super expression must either be null or a function");
          Z.prototype = Object.create(te && te.prototype, { constructor: { value: Z, writable: !0, configurable: !0 } }), Object.defineProperty(Z, "prototype", { writable: !1 }), te && g(Z, te);
        })(re, H);
        var B, z, G, pe, me = (G = re, pe = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var Z, te = y(G);
          if (pe) {
            var ye = y(this).constructor;
            Z = Reflect.construct(te, arguments, ye);
          } else Z = te.apply(this, arguments);
          return function(Se, le) {
            if (le && (c(le) === "object" || typeof le == "function")) return le;
            if (le !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(we) {
              if (we === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return we;
            }(Se);
          }(this, Z);
        });
        function re(Z) {
          var te;
          if (function(Se, le) {
            if (!(Se instanceof le)) throw new TypeError("Cannot call a class as a function");
          }(this, re), (te = me.call(this, Z)).supportsObserver = !Z.scrollPosition && Z.useIntersectionObserver && l(), te.supportsObserver) {
            var ye = Z.threshold;
            te.observer = function(Se) {
              return b[Se] = b[Se] || new IntersectionObserver(m, { rootMargin: Se + "px" }), b[Se];
            }(ye);
          }
          return te;
        }
        return B = re, z = [{ key: "componentDidMount", value: function() {
          this.placeholder && this.observer && (this.placeholder.onVisible = this.props.onVisible, this.observer.observe(this.placeholder)), this.supportsObserver || this.updateVisibility();
        } }, { key: "componentWillUnmount", value: function() {
          this.observer && this.placeholder && this.observer.unobserve(this.placeholder);
        } }, { key: "componentDidUpdate", value: function() {
          this.supportsObserver || this.updateVisibility();
        } }, { key: "getPlaceholderBoundingBox", value: function() {
          var Z = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props.scrollPosition, te = this.placeholder.getBoundingClientRect(), ye = this.placeholder.style, Se = parseInt(ye.getPropertyValue("margin-left"), 10) || 0, le = parseInt(ye.getPropertyValue("margin-top"), 10) || 0;
          return { bottom: Z.y + te.bottom + le, left: Z.x + te.left + Se, right: Z.x + te.right + Se, top: Z.y + te.top + le };
        } }, { key: "isPlaceholderInViewport", value: function() {
          if (typeof window > "u" || !this.placeholder) return !1;
          var Z = this.props, te = Z.scrollPosition, ye = Z.threshold, Se = this.getPlaceholderBoundingBox(te), le = te.y + window.innerHeight, we = te.x, Me = te.x + window.innerWidth, ze = te.y;
          return ze - ye <= Se.bottom && le + ye >= Se.top && we - ye <= Se.right && Me + ye >= Se.left;
        } }, { key: "updateVisibility", value: function() {
          this.isPlaceholderInViewport() && this.props.onVisible();
        } }, { key: "render", value: function() {
          var Z = this, te = this.props, ye = te.className, Se = te.height, le = te.placeholder, we = te.style, Me = te.width;
          if (le && typeof le.type != "function") return s().cloneElement(le, { ref: function(Ye) {
            return Z.placeholder = Ye;
          } });
          var ze = function(Ye) {
            for (var It = 1; It < arguments.length; It++) {
              var pt = arguments[It] != null ? arguments[It] : {};
              It % 2 ? u(Object(pt), !0).forEach(function(Nt) {
                d(Ye, Nt, pt[Nt]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(Ye, Object.getOwnPropertyDescriptors(pt)) : u(Object(pt)).forEach(function(Nt) {
                Object.defineProperty(Ye, Nt, Object.getOwnPropertyDescriptor(pt, Nt));
              });
            }
            return Ye;
          }({ display: "inline-block" }, we);
          return Me !== void 0 && (ze.width = Me), Se !== void 0 && (ze.height = Se), s().createElement("span", { className: ye, ref: function(Ye) {
            return Z.placeholder = Ye;
          }, style: ze }, le);
        } }], z && f(B.prototype, z), Object.defineProperty(B, "prototype", { writable: !1 }), re;
      }(s().Component);
      x.propTypes = { onVisible: a.PropTypes.func.isRequired, className: a.PropTypes.string, height: a.PropTypes.oneOfType([a.PropTypes.number, a.PropTypes.string]), placeholder: a.PropTypes.element, threshold: a.PropTypes.number, useIntersectionObserver: a.PropTypes.bool, scrollPosition: a.PropTypes.shape({ x: a.PropTypes.number.isRequired, y: a.PropTypes.number.isRequired }), width: a.PropTypes.oneOfType([a.PropTypes.number, a.PropTypes.string]) }, x.defaultProps = { className: "", placeholder: null, threshold: 100, useIntersectionObserver: !0 };
      const E = x;
      var w = n(296), S = n.n(w), v = n(96), T = n.n(v), R = function(H) {
        var B = getComputedStyle(H, null);
        return B.getPropertyValue("overflow") + B.getPropertyValue("overflow-y") + B.getPropertyValue("overflow-x");
      };
      const k = function(H) {
        if (!(H instanceof HTMLElement)) return window;
        for (var B = H; B && B instanceof HTMLElement; ) {
          if (/(scroll|auto)/.test(R(B))) return B;
          B = B.parentNode;
        }
        return window;
      };
      function I(H) {
        return I = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(B) {
          return typeof B;
        } : function(B) {
          return B && typeof Symbol == "function" && B.constructor === Symbol && B !== Symbol.prototype ? "symbol" : typeof B;
        }, I(H);
      }
      var p = ["delayMethod", "delayTime"];
      function O() {
        return O = Object.assign ? Object.assign.bind() : function(H) {
          for (var B = 1; B < arguments.length; B++) {
            var z = arguments[B];
            for (var G in z) Object.prototype.hasOwnProperty.call(z, G) && (H[G] = z[G]);
          }
          return H;
        }, O.apply(this, arguments);
      }
      function $(H, B) {
        for (var z = 0; z < B.length; z++) {
          var G = B[z];
          G.enumerable = G.enumerable || !1, G.configurable = !0, "value" in G && (G.writable = !0), Object.defineProperty(H, (pe = function(me, re) {
            if (I(me) !== "object" || me === null) return me;
            var Z = me[Symbol.toPrimitive];
            if (Z !== void 0) {
              var te = Z.call(me, "string");
              if (I(te) !== "object") return te;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(me);
          }(G.key), I(pe) === "symbol" ? pe : String(pe)), G);
        }
        var pe;
      }
      function A(H, B) {
        return A = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(z, G) {
          return z.__proto__ = G, z;
        }, A(H, B);
      }
      function D(H, B) {
        if (B && (I(B) === "object" || typeof B == "function")) return B;
        if (B !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
        return _(H);
      }
      function _(H) {
        if (H === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return H;
      }
      function M(H) {
        return M = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(B) {
          return B.__proto__ || Object.getPrototypeOf(B);
        }, M(H);
      }
      var V = function() {
        return typeof window > "u" ? 0 : window.scrollX || window.pageXOffset;
      }, Y = function() {
        return typeof window > "u" ? 0 : window.scrollY || window.pageYOffset;
      };
      const U = function(H) {
        var B = function(z) {
          (function(ye, Se) {
            if (typeof Se != "function" && Se !== null) throw new TypeError("Super expression must either be null or a function");
            ye.prototype = Object.create(Se && Se.prototype, { constructor: { value: ye, writable: !0, configurable: !0 } }), Object.defineProperty(ye, "prototype", { writable: !1 }), Se && A(ye, Se);
          })(te, z);
          var G, pe, me, re, Z = (me = te, re = function() {
            if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
            if (typeof Proxy == "function") return !0;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              })), !0;
            } catch {
              return !1;
            }
          }(), function() {
            var ye, Se = M(me);
            if (re) {
              var le = M(this).constructor;
              ye = Reflect.construct(Se, arguments, le);
            } else ye = Se.apply(this, arguments);
            return D(this, ye);
          });
          function te(ye) {
            var Se;
            if (function(we, Me) {
              if (!(we instanceof Me)) throw new TypeError("Cannot call a class as a function");
            }(this, te), (Se = Z.call(this, ye)).useIntersectionObserver = ye.useIntersectionObserver && l(), Se.useIntersectionObserver) return D(Se);
            var le = Se.onChangeScroll.bind(_(Se));
            return ye.delayMethod === "debounce" ? Se.delayedScroll = S()(le, ye.delayTime) : ye.delayMethod === "throttle" && (Se.delayedScroll = T()(le, ye.delayTime)), Se.state = { scrollPosition: { x: V(), y: Y() } }, Se.baseComponentRef = s().createRef(), Se;
          }
          return G = te, (pe = [{ key: "componentDidMount", value: function() {
            this.addListeners();
          } }, { key: "componentWillUnmount", value: function() {
            this.removeListeners();
          } }, { key: "componentDidUpdate", value: function() {
            typeof window > "u" || this.useIntersectionObserver || k(this.baseComponentRef.current) !== this.scrollElement && (this.removeListeners(), this.addListeners());
          } }, { key: "addListeners", value: function() {
            typeof window > "u" || this.useIntersectionObserver || (this.scrollElement = k(this.baseComponentRef.current), this.scrollElement.addEventListener("scroll", this.delayedScroll, { passive: !0 }), window.addEventListener("resize", this.delayedScroll, { passive: !0 }), this.scrollElement !== window && window.addEventListener("scroll", this.delayedScroll, { passive: !0 }));
          } }, { key: "removeListeners", value: function() {
            typeof window > "u" || this.useIntersectionObserver || (this.scrollElement.removeEventListener("scroll", this.delayedScroll), window.removeEventListener("resize", this.delayedScroll), this.scrollElement !== window && window.removeEventListener("scroll", this.delayedScroll));
          } }, { key: "onChangeScroll", value: function() {
            this.useIntersectionObserver || this.setState({ scrollPosition: { x: V(), y: Y() } });
          } }, { key: "render", value: function() {
            var ye = this.props, Se = (ye.delayMethod, ye.delayTime, function(we, Me) {
              if (we == null) return {};
              var ze, Ye, It = function(Nt, De) {
                if (Nt == null) return {};
                var ot, Tt, ke = {}, Vt = Object.keys(Nt);
                for (Tt = 0; Tt < Vt.length; Tt++) ot = Vt[Tt], De.indexOf(ot) >= 0 || (ke[ot] = Nt[ot]);
                return ke;
              }(we, Me);
              if (Object.getOwnPropertySymbols) {
                var pt = Object.getOwnPropertySymbols(we);
                for (Ye = 0; Ye < pt.length; Ye++) ze = pt[Ye], Me.indexOf(ze) >= 0 || Object.prototype.propertyIsEnumerable.call(we, ze) && (It[ze] = we[ze]);
              }
              return It;
            }(ye, p)), le = this.useIntersectionObserver ? null : this.state.scrollPosition;
            return s().createElement(H, O({ forwardRef: this.baseComponentRef, scrollPosition: le }, Se));
          } }]) && $(G.prototype, pe), Object.defineProperty(G, "prototype", { writable: !1 }), te;
        }(s().Component);
        return B.propTypes = { delayMethod: a.PropTypes.oneOf(["debounce", "throttle"]), delayTime: a.PropTypes.number, useIntersectionObserver: a.PropTypes.bool }, B.defaultProps = { delayMethod: "throttle", delayTime: 300, useIntersectionObserver: !0 }, B;
      };
      function j(H) {
        return j = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(B) {
          return typeof B;
        } : function(B) {
          return B && typeof Symbol == "function" && B.constructor === Symbol && B !== Symbol.prototype ? "symbol" : typeof B;
        }, j(H);
      }
      function W(H, B) {
        for (var z = 0; z < B.length; z++) {
          var G = B[z];
          G.enumerable = G.enumerable || !1, G.configurable = !0, "value" in G && (G.writable = !0), Object.defineProperty(H, (pe = function(me, re) {
            if (j(me) !== "object" || me === null) return me;
            var Z = me[Symbol.toPrimitive];
            if (Z !== void 0) {
              var te = Z.call(me, "string");
              if (j(te) !== "object") return te;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(me);
          }(G.key), j(pe) === "symbol" ? pe : String(pe)), G);
        }
        var pe;
      }
      function ee(H, B) {
        return ee = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(z, G) {
          return z.__proto__ = G, z;
        }, ee(H, B);
      }
      function K(H) {
        return K = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(B) {
          return B.__proto__ || Object.getPrototypeOf(B);
        }, K(H);
      }
      var oe = function(H) {
        (function(Z, te) {
          if (typeof te != "function" && te !== null) throw new TypeError("Super expression must either be null or a function");
          Z.prototype = Object.create(te && te.prototype, { constructor: { value: Z, writable: !0, configurable: !0 } }), Object.defineProperty(Z, "prototype", { writable: !1 }), te && ee(Z, te);
        })(re, H);
        var B, z, G, pe, me = (G = re, pe = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var Z, te = K(G);
          if (pe) {
            var ye = K(this).constructor;
            Z = Reflect.construct(te, arguments, ye);
          } else Z = te.apply(this, arguments);
          return function(Se, le) {
            if (le && (j(le) === "object" || typeof le == "function")) return le;
            if (le !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(we) {
              if (we === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return we;
            }(Se);
          }(this, Z);
        });
        function re(Z) {
          return function(te, ye) {
            if (!(te instanceof ye)) throw new TypeError("Cannot call a class as a function");
          }(this, re), me.call(this, Z);
        }
        return B = re, (z = [{ key: "render", value: function() {
          return s().createElement(E, this.props);
        } }]) && W(B.prototype, z), Object.defineProperty(B, "prototype", { writable: !1 }), re;
      }(s().Component);
      const ne = U(oe);
      function se(H) {
        return se = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(B) {
          return typeof B;
        } : function(B) {
          return B && typeof Symbol == "function" && B.constructor === Symbol && B !== Symbol.prototype ? "symbol" : typeof B;
        }, se(H);
      }
      function de(H, B) {
        for (var z = 0; z < B.length; z++) {
          var G = B[z];
          G.enumerable = G.enumerable || !1, G.configurable = !0, "value" in G && (G.writable = !0), Object.defineProperty(H, (pe = function(me, re) {
            if (se(me) !== "object" || me === null) return me;
            var Z = me[Symbol.toPrimitive];
            if (Z !== void 0) {
              var te = Z.call(me, "string");
              if (se(te) !== "object") return te;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(me);
          }(G.key), se(pe) === "symbol" ? pe : String(pe)), G);
        }
        var pe;
      }
      function X(H, B) {
        return X = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(z, G) {
          return z.__proto__ = G, z;
        }, X(H, B);
      }
      function ae(H) {
        if (H === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return H;
      }
      function Q(H) {
        return Q = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(B) {
          return B.__proto__ || Object.getPrototypeOf(B);
        }, Q(H);
      }
      var ie = function(H) {
        (function(Z, te) {
          if (typeof te != "function" && te !== null) throw new TypeError("Super expression must either be null or a function");
          Z.prototype = Object.create(te && te.prototype, { constructor: { value: Z, writable: !0, configurable: !0 } }), Object.defineProperty(Z, "prototype", { writable: !1 }), te && X(Z, te);
        })(re, H);
        var B, z, G, pe, me = (G = re, pe = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var Z, te = Q(G);
          if (pe) {
            var ye = Q(this).constructor;
            Z = Reflect.construct(te, arguments, ye);
          } else Z = te.apply(this, arguments);
          return function(Se, le) {
            if (le && (se(le) === "object" || typeof le == "function")) return le;
            if (le !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return ae(Se);
          }(this, Z);
        });
        function re(Z) {
          var te;
          (function(Me, ze) {
            if (!(Me instanceof ze)) throw new TypeError("Cannot call a class as a function");
          })(this, re), te = me.call(this, Z);
          var ye = Z.afterLoad, Se = Z.beforeLoad, le = Z.scrollPosition, we = Z.visibleByDefault;
          return te.state = { visible: we }, we && (Se(), ye()), te.onVisible = te.onVisible.bind(ae(te)), te.isScrollTracked = !!(le && Number.isFinite(le.x) && le.x >= 0 && Number.isFinite(le.y) && le.y >= 0), te;
        }
        return B = re, (z = [{ key: "componentDidUpdate", value: function(Z, te) {
          te.visible !== this.state.visible && this.props.afterLoad();
        } }, { key: "onVisible", value: function() {
          this.props.beforeLoad(), this.setState({ visible: !0 });
        } }, { key: "render", value: function() {
          if (this.state.visible) return this.props.children;
          var Z = this.props, te = Z.className, ye = Z.delayMethod, Se = Z.delayTime, le = Z.height, we = Z.placeholder, Me = Z.scrollPosition, ze = Z.style, Ye = Z.threshold, It = Z.useIntersectionObserver, pt = Z.width;
          return this.isScrollTracked || It && l() ? s().createElement(E, { className: te, height: le, onVisible: this.onVisible, placeholder: we, scrollPosition: Me, style: ze, threshold: Ye, useIntersectionObserver: It, width: pt }) : s().createElement(ne, { className: te, delayMethod: ye, delayTime: Se, height: le, onVisible: this.onVisible, placeholder: we, style: ze, threshold: Ye, width: pt });
        } }]) && de(B.prototype, z), Object.defineProperty(B, "prototype", { writable: !1 }), re;
      }(s().Component);
      ie.propTypes = { afterLoad: a.PropTypes.func, beforeLoad: a.PropTypes.func, useIntersectionObserver: a.PropTypes.bool, visibleByDefault: a.PropTypes.bool }, ie.defaultProps = { afterLoad: function() {
        return {};
      }, beforeLoad: function() {
        return {};
      }, useIntersectionObserver: !0, visibleByDefault: !1 };
      const F = ie;
      function he(H) {
        return he = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(B) {
          return typeof B;
        } : function(B) {
          return B && typeof Symbol == "function" && B.constructor === Symbol && B !== Symbol.prototype ? "symbol" : typeof B;
        }, he(H);
      }
      var fe = ["afterLoad", "beforeLoad", "delayMethod", "delayTime", "effect", "placeholder", "placeholderSrc", "scrollPosition", "threshold", "useIntersectionObserver", "visibleByDefault", "wrapperClassName", "wrapperProps"];
      function Te(H, B) {
        var z = Object.keys(H);
        if (Object.getOwnPropertySymbols) {
          var G = Object.getOwnPropertySymbols(H);
          B && (G = G.filter(function(pe) {
            return Object.getOwnPropertyDescriptor(H, pe).enumerable;
          })), z.push.apply(z, G);
        }
        return z;
      }
      function Le(H) {
        for (var B = 1; B < arguments.length; B++) {
          var z = arguments[B] != null ? arguments[B] : {};
          B % 2 ? Te(Object(z), !0).forEach(function(G) {
            Ae(H, G, z[G]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(H, Object.getOwnPropertyDescriptors(z)) : Te(Object(z)).forEach(function(G) {
            Object.defineProperty(H, G, Object.getOwnPropertyDescriptor(z, G));
          });
        }
        return H;
      }
      function Ae(H, B, z) {
        return (B = Be(B)) in H ? Object.defineProperty(H, B, { value: z, enumerable: !0, configurable: !0, writable: !0 }) : H[B] = z, H;
      }
      function Ie() {
        return Ie = Object.assign ? Object.assign.bind() : function(H) {
          for (var B = 1; B < arguments.length; B++) {
            var z = arguments[B];
            for (var G in z) Object.prototype.hasOwnProperty.call(z, G) && (H[G] = z[G]);
          }
          return H;
        }, Ie.apply(this, arguments);
      }
      function Re(H, B) {
        for (var z = 0; z < B.length; z++) {
          var G = B[z];
          G.enumerable = G.enumerable || !1, G.configurable = !0, "value" in G && (G.writable = !0), Object.defineProperty(H, Be(G.key), G);
        }
      }
      function Be(H) {
        var B = function(z, G) {
          if (he(z) !== "object" || z === null) return z;
          var pe = z[Symbol.toPrimitive];
          if (pe !== void 0) {
            var me = pe.call(z, "string");
            if (he(me) !== "object") return me;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(z);
        }(H);
        return he(B) === "symbol" ? B : String(B);
      }
      function Oe(H, B) {
        return Oe = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(z, G) {
          return z.__proto__ = G, z;
        }, Oe(H, B);
      }
      function N(H) {
        return N = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(B) {
          return B.__proto__ || Object.getPrototypeOf(B);
        }, N(H);
      }
      var q = function(H) {
        (function(Z, te) {
          if (typeof te != "function" && te !== null) throw new TypeError("Super expression must either be null or a function");
          Z.prototype = Object.create(te && te.prototype, { constructor: { value: Z, writable: !0, configurable: !0 } }), Object.defineProperty(Z, "prototype", { writable: !1 }), te && Oe(Z, te);
        })(re, H);
        var B, z, G, pe, me = (G = re, pe = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var Z, te = N(G);
          if (pe) {
            var ye = N(this).constructor;
            Z = Reflect.construct(te, arguments, ye);
          } else Z = te.apply(this, arguments);
          return function(Se, le) {
            if (le && (he(le) === "object" || typeof le == "function")) return le;
            if (le !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(we) {
              if (we === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return we;
            }(Se);
          }(this, Z);
        });
        function re(Z) {
          var te;
          return function(ye, Se) {
            if (!(ye instanceof Se)) throw new TypeError("Cannot call a class as a function");
          }(this, re), (te = me.call(this, Z)).state = { loaded: !1 }, te;
        }
        return B = re, (z = [{ key: "onImageLoad", value: function() {
          var Z = this;
          return this.state.loaded ? null : function(te) {
            Z.props.onLoad(te), Z.props.afterLoad(), Z.setState({ loaded: !0 });
          };
        } }, { key: "getImg", value: function() {
          var Z = this.props, te = (Z.afterLoad, Z.beforeLoad, Z.delayMethod, Z.delayTime, Z.effect, Z.placeholder, Z.placeholderSrc, Z.scrollPosition, Z.threshold, Z.useIntersectionObserver, Z.visibleByDefault, Z.wrapperClassName, Z.wrapperProps, function(ye, Se) {
            if (ye == null) return {};
            var le, we, Me = function(Ye, It) {
              if (Ye == null) return {};
              var pt, Nt, De = {}, ot = Object.keys(Ye);
              for (Nt = 0; Nt < ot.length; Nt++) pt = ot[Nt], It.indexOf(pt) >= 0 || (De[pt] = Ye[pt]);
              return De;
            }(ye, Se);
            if (Object.getOwnPropertySymbols) {
              var ze = Object.getOwnPropertySymbols(ye);
              for (we = 0; we < ze.length; we++) le = ze[we], Se.indexOf(le) >= 0 || Object.prototype.propertyIsEnumerable.call(ye, le) && (Me[le] = ye[le]);
            }
            return Me;
          }(Z, fe));
          return s().createElement("img", Ie({}, te, { onLoad: this.onImageLoad() }));
        } }, { key: "getLazyLoadImage", value: function() {
          var Z = this.props, te = Z.beforeLoad, ye = Z.className, Se = Z.delayMethod, le = Z.delayTime, we = Z.height, Me = Z.placeholder, ze = Z.scrollPosition, Ye = Z.style, It = Z.threshold, pt = Z.useIntersectionObserver, Nt = Z.visibleByDefault, De = Z.width;
          return s().createElement(F, { beforeLoad: te, className: ye, delayMethod: Se, delayTime: le, height: we, placeholder: Me, scrollPosition: ze, style: Ye, threshold: It, useIntersectionObserver: pt, visibleByDefault: Nt, width: De }, this.getImg());
        } }, { key: "getWrappedLazyLoadImage", value: function(Z) {
          var te = this.props, ye = te.effect, Se = te.height, le = te.placeholderSrc, we = te.width, Me = te.wrapperClassName, ze = te.wrapperProps, Ye = this.state.loaded, It = Ye ? " lazy-load-image-loaded" : "", pt = Ye || !le ? {} : { backgroundImage: "url(".concat(le, ")"), backgroundSize: "100% 100%" };
          return s().createElement("span", Ie({ className: Me + " lazy-load-image-background " + ye + It, style: Le(Le({}, pt), {}, { color: "transparent", display: "inline-block", height: Se, width: we }) }, ze), Z);
        } }, { key: "render", value: function() {
          var Z = this.props, te = Z.effect, ye = Z.placeholderSrc, Se = Z.visibleByDefault, le = Z.wrapperClassName, we = Z.wrapperProps, Me = this.getLazyLoadImage();
          return (te || ye) && !Se || le || we ? this.getWrappedLazyLoadImage(Me) : Me;
        } }]) && Re(B.prototype, z), Object.defineProperty(B, "prototype", { writable: !1 }), re;
      }(s().Component);
      q.propTypes = { onLoad: a.PropTypes.func, afterLoad: a.PropTypes.func, beforeLoad: a.PropTypes.func, delayMethod: a.PropTypes.string, delayTime: a.PropTypes.number, effect: a.PropTypes.string, placeholderSrc: a.PropTypes.string, threshold: a.PropTypes.number, useIntersectionObserver: a.PropTypes.bool, visibleByDefault: a.PropTypes.bool, wrapperClassName: a.PropTypes.string, wrapperProps: a.PropTypes.object }, q.defaultProps = { onLoad: function() {
      }, afterLoad: function() {
        return {};
      }, beforeLoad: function() {
        return {};
      }, delayMethod: "throttle", delayTime: 300, effect: "", placeholderSrc: null, threshold: 100, useIntersectionObserver: !0, visibleByDefault: !1, wrapperClassName: "" };
      const J = q;
    })(), Ic.exports = r;
  })()), Ic.exports;
}
var jA = FA();
const LA = _e(({ src: e, alt: t, ...n }) => /* @__PURE__ */ P(
  jA.LazyLoadImage,
  {
    src: e,
    alt: t,
    effect: "blur",
    wrapperProps: {
      // If you need to, you can tweak the effect transition using the wrapper style.
      style: { transitionDelay: "1s" }
    },
    draggable: !1,
    ...n
  }
));
LA.displayName = "LazyImage";
function VA(e) {
  return gt("MuiLinearProgress", e);
}
wt("MuiLinearProgress", ["root", "colorPrimary", "colorSecondary", "determinate", "indeterminate", "buffer", "query", "dashed", "dashedColorPrimary", "dashedColorSecondary", "bar", "bar1", "bar2", "barColorPrimary", "barColorSecondary", "bar1Indeterminate", "bar1Determinate", "bar1Buffer", "bar2Indeterminate", "bar2Buffer"]);
const Tu = 4, Eu = qr`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`, zA = typeof Eu != "string" ? ii`
        animation: ${Eu} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
      ` : null, Cu = qr`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`, WA = typeof Cu != "string" ? ii`
        animation: ${Cu} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
      ` : null, Ou = qr`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`, UA = typeof Ou != "string" ? ii`
        animation: ${Ou} 3s infinite linear;
      ` : null, HA = (e) => {
  const {
    classes: t,
    variant: n,
    color: r
  } = e, o = {
    root: ["root", `color${xe(r)}`, n],
    dashed: ["dashed", `dashedColor${xe(r)}`],
    bar1: ["bar", "bar1", `barColor${xe(r)}`, (n === "indeterminate" || n === "query") && "bar1Indeterminate", n === "determinate" && "bar1Determinate", n === "buffer" && "bar1Buffer"],
    bar2: ["bar", "bar2", n !== "buffer" && `barColor${xe(r)}`, n === "buffer" && `color${xe(r)}`, (n === "indeterminate" || n === "query") && "bar2Indeterminate", n === "buffer" && "bar2Buffer"]
  };
  return Ct(o, VA, t);
}, nf = (e, t) => e.vars ? e.vars.palette.LinearProgress[`${t}Bg`] : e.palette.mode === "light" ? ai(e.palette[t].main, 0.62) : si(e.palette[t].main, 0.5), qA = Pe("span", {
  name: "MuiLinearProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`color${xe(n.color)}`], t[n.variant]];
  }
})(Ke(({
  theme: e
}) => ({
  position: "relative",
  overflow: "hidden",
  display: "block",
  height: 4,
  // Fix Safari's bug during composition of different paint.
  zIndex: 0,
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [...Object.entries(e.palette).filter(un()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: nf(e, t)
    }
  })), {
    props: ({
      ownerState: t
    }) => t.color === "inherit" && t.variant !== "buffer",
    style: {
      "&::before": {
        content: '""',
        position: "absolute",
        left: 0,
        top: 0,
        right: 0,
        bottom: 0,
        backgroundColor: "currentColor",
        opacity: 0.3
      }
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      backgroundColor: "transparent"
    }
  }, {
    props: {
      variant: "query"
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
}))), YA = Pe("span", {
  name: "MuiLinearProgress",
  slot: "Dashed",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.dashed, t[`dashedColor${xe(n.color)}`]];
  }
})(Ke(({
  theme: e
}) => ({
  position: "absolute",
  marginTop: 0,
  height: "100%",
  width: "100%",
  backgroundSize: "10px 10px",
  backgroundPosition: "0 -23px",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3,
      backgroundImage: "radial-gradient(currentColor 0%, currentColor 16%, transparent 42%)"
    }
  }, ...Object.entries(e.palette).filter(un()).map(([t]) => {
    const n = nf(e, t);
    return {
      props: {
        color: t
      },
      style: {
        backgroundImage: `radial-gradient(${n} 0%, ${n} 16%, transparent 42%)`
      }
    };
  })]
})), UA || {
  // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
  animation: `${Ou} 3s infinite linear`
}), GA = Pe("span", {
  name: "MuiLinearProgress",
  slot: "Bar1",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar1, t[`barColor${xe(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar1Indeterminate, n.variant === "determinate" && t.bar1Determinate, n.variant === "buffer" && t.bar1Buffer];
  }
})(Ke(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      backgroundColor: "currentColor"
    }
  }, ...Object.entries(e.palette).filter(un()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main
    }
  })), {
    props: {
      variant: "determinate"
    },
    style: {
      transition: `transform .${Tu}s linear`
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      zIndex: 1,
      transition: `transform .${Tu}s linear`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: zA || {
      animation: `${Eu} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`
    }
  }]
}))), KA = Pe("span", {
  name: "MuiLinearProgress",
  slot: "Bar2",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar2, t[`barColor${xe(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar2Indeterminate, n.variant === "buffer" && t.bar2Buffer];
  }
})(Ke(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [...Object.entries(e.palette).filter(un()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--LinearProgressBar2-barColor": (e.vars || e).palette[t].main
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color !== "inherit",
    style: {
      backgroundColor: "var(--LinearProgressBar2-barColor, currentColor)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color === "inherit",
    style: {
      backgroundColor: "currentColor"
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3
    }
  }, ...Object.entries(e.palette).filter(un()).map(([t]) => ({
    props: {
      color: t,
      variant: "buffer"
    },
    style: {
      backgroundColor: nf(e, t),
      transition: `transform .${Tu}s linear`
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: WA || {
      animation: `${Cu} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`
    }
  }]
}))), kv = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = St({
    props: t,
    name: "MuiLinearProgress"
  }), {
    className: o,
    color: s = "primary",
    value: a,
    valueBuffer: l,
    variant: c = "indeterminate",
    ...u
  } = r, d = {
    ...r,
    color: s,
    variant: c
  }, f = HA(d), h = nl(), g = {}, y = {
    bar1: {},
    bar2: {}
  };
  if (c === "determinate" || c === "buffer")
    if (a !== void 0) {
      g["aria-valuenow"] = Math.round(a), g["aria-valuemin"] = 0, g["aria-valuemax"] = 100;
      let m = a - 100;
      h && (m = -m), y.bar1.transform = `translateX(${m}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
  if (c === "buffer")
    if (l !== void 0) {
      let m = (l || 0) - 100;
      h && (m = -m), y.bar2.transform = `translateX(${m}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
  return /* @__PURE__ */ $e(qA, {
    className: Ee(f.root, o),
    ownerState: d,
    role: "progressbar",
    ...g,
    ref: n,
    ...u,
    children: [c === "buffer" ? /* @__PURE__ */ P(YA, {
      className: f.dashed,
      ownerState: d
    }) : null, /* @__PURE__ */ P(GA, {
      className: f.bar1,
      ownerState: d,
      style: y.bar1
    }), c === "determinate" ? null : /* @__PURE__ */ P(KA, {
      className: f.bar2,
      ownerState: d,
      style: y.bar2
    })]
  });
});
process.env.NODE_ENV !== "production" && (kv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["inherit", "primary", "secondary"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */
  value: i.number,
  /**
   * The value for the buffer variant.
   * Value between 0 and 100.
   */
  valueBuffer: i.number,
  /**
   * The variant to use.
   * Use indeterminate or query when there is no progress value.
   * @default 'indeterminate'
   */
  variant: i.oneOf(["buffer", "determinate", "indeterminate", "query"])
});
const XA = _e(({ disablePortal: e, isCircle: t = !1 }) => /* @__PURE__ */ P(Jo, { disablePortal: e, children: /* @__PURE__ */ $e(
  $r,
  {
    sx: {
      width: 1,
      minHeight: 1,
      flexGrow: 1,
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      position: "fixed",
      // 基于 <body>
      top: 0,
      left: 0,
      right: 0
    },
    children: [
      t && /* @__PURE__ */ P(bd, { color: "primary", disableShrink: !0, size: 40 }),
      !t && /* @__PURE__ */ P(
        kv,
        {
          color: "primary",
          sx: { width: 1, maxWidth: 360, height: "4px", borderRadius: "8px" }
        }
      )
    ]
  }
) }));
XA.displayName = "Loading";
function QA(e) {
  return gt("MuiDialog", e);
}
const Nc = wt("MuiDialog", ["root", "scrollPaper", "scrollBody", "container", "paper", "paperScrollPaper", "paperScrollBody", "paperWidthFalse", "paperWidthXs", "paperWidthSm", "paperWidthMd", "paperWidthLg", "paperWidthXl", "paperFullWidth", "paperFullScreen"]), $v = /* @__PURE__ */ C.createContext({});
process.env.NODE_ENV !== "production" && ($v.displayName = "DialogContext");
const JA = Pe(Id, {
  name: "MuiDialog",
  slot: "Backdrop",
  overrides: (e, t) => t.backdrop
})({
  // Improve scrollable dialog support.
  zIndex: -1
}), ZA = (e) => {
  const {
    classes: t,
    scroll: n,
    maxWidth: r,
    fullWidth: o,
    fullScreen: s
  } = e, a = {
    root: ["root"],
    container: ["container", `scroll${xe(n)}`],
    paper: ["paper", `paperScroll${xe(n)}`, `paperWidth${xe(String(r))}`, o && "paperFullWidth", s && "paperFullScreen"]
  };
  return Ct(a, QA, t);
}, eM = Pe(yl, {
  name: "MuiDialog",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  "@media print": {
    // Use !important to override the Modal inline-style.
    position: "absolute !important"
  }
}), tM = Pe("div", {
  name: "MuiDialog",
  slot: "Container",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.container, t[`scroll${xe(n.scroll)}`]];
  }
})({
  height: "100%",
  "@media print": {
    height: "auto"
  },
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      justifyContent: "center",
      alignItems: "center"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      overflowY: "auto",
      overflowX: "hidden",
      textAlign: "center",
      "&::after": {
        content: '""',
        display: "inline-block",
        verticalAlign: "middle",
        height: "100%",
        width: "0"
      }
    }
  }]
}), nM = Pe(ci, {
  name: "MuiDialog",
  slot: "Paper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.paper, t[`scrollPaper${xe(n.scroll)}`], t[`paperWidth${xe(String(n.maxWidth))}`], n.fullWidth && t.paperFullWidth, n.fullScreen && t.paperFullScreen];
  }
})(Ke(({
  theme: e
}) => ({
  margin: 32,
  position: "relative",
  overflowY: "auto",
  "@media print": {
    overflowY: "visible",
    boxShadow: "none"
  },
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      flexDirection: "column",
      maxHeight: "calc(100% - 64px)"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      display: "inline-block",
      verticalAlign: "middle",
      textAlign: "initial"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.maxWidth,
    style: {
      maxWidth: "calc(100% - 64px)"
    }
  }, {
    props: {
      maxWidth: "xs"
    },
    style: {
      maxWidth: e.breakpoints.unit === "px" ? Math.max(e.breakpoints.values.xs, 444) : `max(${e.breakpoints.values.xs}${e.breakpoints.unit}, 444px)`,
      [`&.${Nc.paperScrollBody}`]: {
        [e.breakpoints.down(Math.max(e.breakpoints.values.xs, 444) + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  }, ...Object.keys(e.breakpoints.values).filter((t) => t !== "xs").map((t) => ({
    props: {
      maxWidth: t
    },
    style: {
      maxWidth: `${e.breakpoints.values[t]}${e.breakpoints.unit}`,
      [`&.${Nc.paperScrollBody}`]: {
        [e.breakpoints.down(e.breakpoints.values[t] + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  })), {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "calc(100% - 64px)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullScreen,
    style: {
      margin: 0,
      width: "100%",
      maxWidth: "100%",
      height: "100%",
      maxHeight: "none",
      borderRadius: 0,
      [`&.${Nc.paperScrollBody}`]: {
        margin: 0,
        maxWidth: "100%"
      }
    }
  }]
}))), Pv = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = St({
    props: t,
    name: "MuiDialog"
  }), o = Mr(), s = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    "aria-describedby": a,
    "aria-labelledby": l,
    "aria-modal": c = !0,
    BackdropComponent: u,
    BackdropProps: d,
    children: f,
    className: h,
    disableEscapeKeyDown: g = !1,
    fullScreen: y = !1,
    fullWidth: m = !1,
    maxWidth: b = "sm",
    onClick: x,
    onClose: E,
    open: w,
    PaperComponent: S = ci,
    PaperProps: v = {},
    scroll: T = "paper",
    slots: R = {},
    slotProps: k = {},
    TransitionComponent: I = fo,
    transitionDuration: p = s,
    TransitionProps: O,
    ...$
  } = r, A = {
    ...r,
    disableEscapeKeyDown: g,
    fullScreen: y,
    fullWidth: m,
    maxWidth: b,
    scroll: T
  }, D = ZA(A), _ = C.useRef(), M = (he) => {
    _.current = he.target === he.currentTarget;
  }, V = (he) => {
    x && x(he), _.current && (_.current = null, E && E(he, "backdropClick"));
  }, Y = Hu(l), U = C.useMemo(() => ({
    titleId: Y
  }), [Y]), j = {
    transition: I,
    ...R
  }, W = {
    transition: O,
    paper: v,
    backdrop: d,
    ...k
  }, ee = {
    slots: j,
    slotProps: W
  }, [K, oe] = at("root", {
    elementType: eM,
    shouldForwardComponentProp: !0,
    externalForwardedProps: ee,
    ownerState: A,
    className: Ee(D.root, h),
    ref: n
  }), [ne, se] = at("backdrop", {
    elementType: JA,
    shouldForwardComponentProp: !0,
    externalForwardedProps: ee,
    ownerState: A
  }), [de, X] = at("paper", {
    elementType: nM,
    shouldForwardComponentProp: !0,
    externalForwardedProps: ee,
    ownerState: A,
    className: Ee(D.paper, v.className)
  }), [ae, Q] = at("container", {
    elementType: tM,
    externalForwardedProps: ee,
    ownerState: A,
    className: Ee(D.container)
  }), [ie, F] = at("transition", {
    elementType: fo,
    externalForwardedProps: ee,
    ownerState: A,
    additionalProps: {
      appear: !0,
      in: w,
      timeout: p,
      role: "presentation"
    }
  });
  return /* @__PURE__ */ P(K, {
    closeAfterTransition: !0,
    slots: {
      backdrop: ne
    },
    slotProps: {
      backdrop: {
        transitionDuration: p,
        as: u,
        ...se
      }
    },
    disableEscapeKeyDown: g,
    onClose: E,
    open: w,
    onClick: V,
    ...oe,
    ...$,
    children: /* @__PURE__ */ P(ie, {
      ...F,
      children: /* @__PURE__ */ P(ae, {
        onMouseDown: M,
        ...Q,
        children: /* @__PURE__ */ P(de, {
          as: S,
          elevation: 24,
          role: "dialog",
          "aria-describedby": a,
          "aria-labelledby": Y,
          "aria-modal": c,
          ...X,
          children: /* @__PURE__ */ P($v.Provider, {
            value: U,
            children: f
          })
        })
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (Pv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The id(s) of the element(s) that describe the dialog.
   */
  "aria-describedby": i.string,
  /**
   * The id(s) of the element(s) that label the dialog.
   */
  "aria-labelledby": i.string,
  /**
   * Informs assistive technologies that the element is modal.
   * It's added on the element with role="dialog".
   * @default true
   */
  "aria-modal": i.oneOfType([i.oneOf(["false", "true"]), i.bool]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * @ignore
   */
  BackdropProps: i.object,
  /**
   * Dialog children, usually the included sub-components.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: i.bool,
  /**
   * If `true`, the dialog is full-screen.
   * @default false
   */
  fullScreen: i.bool,
  /**
   * If `true`, the dialog stretches to `maxWidth`.
   *
   * Notice that the dialog width grow is limited by the default margin.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * Determine the max-width of the dialog.
   * The dialog width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'sm'
   */
  maxWidth: i.oneOfType([i.oneOf(["xs", "sm", "md", "lg", "xl", !1]), i.string]),
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The component used to render the body of the dialog.
   * @default Paper
   */
  PaperComponent: i.elementType,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @default {}
   * @deprecated Use `slotProps.paper` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PaperProps: i.object,
  /**
   * Determine the container for scrolling the dialog.
   * @default 'paper'
   */
  scroll: i.oneOf(["body", "paper"]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    container: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    container: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: i.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated Use `slotProps.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionProps: i.object
});
const Iv = _e(
  ({
    isOpen: e,
    closeModal: t,
    isPrevented: n = !0,
    children: r,
    maxWidth: o = "sm",
    fullWidth: s = !0,
    sx: a,
    ...l
  }) => {
    const { paperCommonStyles: c } = ui();
    return /* @__PURE__ */ P(
      Pv,
      {
        className: "VenomousUI-Modal",
        open: e,
        onClose: n ? void 0 : t,
        scroll: "paper",
        keepMounted: !0,
        maxWidth: o,
        fullWidth: s,
        sx: { ...a },
        slotProps: {
          paper: {
            sx: {
              ...c
            }
          }
        },
        ...l,
        children: r
      }
    );
  }
);
Iv.displayName = "Modal";
function u2() {
  const [e, t] = Cr(!1), n = tn(() => t(!0), []), r = tn(() => t(!1), []);
  return {
    isOpen: e,
    openModal: n,
    closeModal: r
  };
}
const rM = _e(
  ({
    onSubmit: e,
    onClose: t,
    isSubmitting: n = !1,
    title: r = "",
    contentMessage: o = "",
    cancelButtonText: s = "Cancel",
    confirmButtonText: a = "Confirm",
    confirmButtonIsDisabled: l = !1,
    cancelButtonIsDisabled: c = !1,
    ...u
  }) => {
    const d = Lv(u.isOpen);
    return zo(() => {
      d.current && !u.isOpen && (t == null || t()), d.current = u.isOpen;
    }, [u.isOpen, t]), /* @__PURE__ */ $e(Iv, { isPrevented: !0, ...u, children: [
      /* @__PURE__ */ P(bn, { isTitle: !0, text: r, p: "8px" }),
      /* @__PURE__ */ P(bn, { text: o, p: "8px", pb: "24px" }),
      /* @__PURE__ */ $e(Kt, { row: !0, justifyContent: "flex-end", children: [
        /* @__PURE__ */ P(
          Gn,
          {
            text: s,
            onClick: u.closeModal,
            disabled: c || n,
            isOutlined: !0
          }
        ),
        /* @__PURE__ */ P(
          Gn,
          {
            text: a,
            onClick: () => {
              (async () => (await (e == null ? void 0 : e()), u.closeModal()))();
            },
            disabled: l,
            loading: n,
            autoFocus: !0
          }
        )
      ] })
    ] });
  }
);
rM.displayName = "ConfirmModal";
function sh(e) {
  return e.substring(2).toLowerCase();
}
function oM(e, t) {
  return t.documentElement.clientWidth < e.clientX || t.documentElement.clientHeight < e.clientY;
}
function La(e) {
  const {
    children: t,
    disableReactTree: n = !1,
    mouseEvent: r = "onClick",
    onClickAway: o,
    touchEvent: s = "onTouchEnd"
  } = e, a = C.useRef(!1), l = C.useRef(null), c = C.useRef(!1), u = C.useRef(!1);
  C.useEffect(() => (setTimeout(() => {
    c.current = !0;
  }, 0), () => {
    c.current = !1;
  }), []);
  const d = rn(go(t), l), f = ur((y) => {
    const m = u.current;
    u.current = !1;
    const b = mn(l.current);
    if (!c.current || !l.current || "clientX" in y && oM(y, b))
      return;
    if (a.current) {
      a.current = !1;
      return;
    }
    let x;
    y.composedPath ? x = y.composedPath().includes(l.current) : x = !b.documentElement.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      y.target
    ) || l.current.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      y.target
    ), !x && (n || !m) && o(y);
  }), h = (y) => (m) => {
    u.current = !0;
    const b = t.props[y];
    b && b(m);
  }, g = {
    ref: d
  };
  return s !== !1 && (g[s] = h(s)), C.useEffect(() => {
    if (s !== !1) {
      const y = sh(s), m = mn(l.current), b = () => {
        a.current = !0;
      };
      return m.addEventListener(y, f), m.addEventListener("touchmove", b), () => {
        m.removeEventListener(y, f), m.removeEventListener("touchmove", b);
      };
    }
  }, [f, s]), r !== !1 && (g[r] = h(r)), C.useEffect(() => {
    if (r !== !1) {
      const y = sh(r), m = mn(l.current);
      return m.addEventListener(y, f), () => {
        m.removeEventListener(y, f);
      };
    }
  }, [f, r]), /* @__PURE__ */ C.cloneElement(t, g);
}
process.env.NODE_ENV !== "production" && (La.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The wrapped element.
   */
  children: Gr.isRequired,
  /**
   * If `true`, the React tree is ignored and only the DOM tree is considered.
   * This prop changes how portaled elements are handled.
   * @default false
   */
  disableReactTree: i.bool,
  /**
   * The mouse event to listen to. You can disable the listener by providing `false`.
   * @default 'onClick'
   */
  mouseEvent: i.oneOf(["onClick", "onMouseDown", "onMouseUp", "onPointerDown", "onPointerUp", !1]),
  /**
   * Callback fired when a "click away" event is detected.
   */
  onClickAway: i.func.isRequired,
  /**
   * The touch event to listen to. You can disable the listener by providing `false`.
   * @default 'onTouchEnd'
   */
  touchEvent: i.oneOf(["onTouchEnd", "onTouchStart", !1])
});
process.env.NODE_ENV !== "production" && (La.propTypes = ms(La.propTypes));
const iM = ef((e) => ({
  activeId: null,
  setActiveId: (t) => e({ activeId: t })
}));
function sM(e) {
  const { activeId: t, setActiveId: n } = iM(), [r, o] = Cr(null), s = !!r && (!e || t === e), a = tn(
    (c) => {
      const u = c.currentTarget;
      e ? (n(e), o(u)) : o(r ? null : u);
    },
    [e, n]
  ), l = tn(() => {
    var c;
    (c = window.getSelection()) != null && c.toString() || (e && n(null), o(null));
  }, [e, n]);
  return {
    anchorEl: r,
    isOpen: s,
    openPopper: a,
    closePopper: l
  };
}
const Nv = _e(
  ({ id: e, children: t, renderPopperHandler: n, position: r = "bottom", sx: o, contentSx: s }) => {
    const { anchorEl: a, isOpen: l, openPopper: c, closePopper: u } = sM(e);
    return /* @__PURE__ */ P(La, { onClickAway: u, children: /* @__PURE__ */ $e(
      $r,
      {
        sx: { position: "relative", ...o },
        role: "presentation",
        className: "VenomousUI-Popper",
        children: [
          n({ anchorEl: a, isOpen: l, openPopper: c, closePopper: u }),
          /* @__PURE__ */ P(ll, { open: l, anchorEl: a, placement: r, transition: !0, keepMounted: !0, children: ({ TransitionProps: d }) => /* @__PURE__ */ P(fo, { ...d, children: /* @__PURE__ */ P(qo, { isOutlined: !0, sx: { width: "100%", ...s }, children: t }) }) })
        ]
      }
    ) });
  }
);
Nv.displayName = "Popper";
const Ru = typeof Zu({}) == "function", aM = (e, t) => ({
  WebkitFontSmoothing: "antialiased",
  // Antialiasing.
  MozOsxFontSmoothing: "grayscale",
  // Antialiasing.
  // Change from `box-sizing: content-box` so that `width`
  // is not affected by `padding` or `border`.
  boxSizing: "border-box",
  // Fix font resize problem in iOS
  WebkitTextSizeAdjust: "100%",
  // When used under CssVarsProvider, colorScheme should not be applied dynamically because it will generate the stylesheet twice for server-rendered applications.
  ...t && !e.vars && {
    colorScheme: e.palette.mode
  }
}), lM = (e) => ({
  color: (e.vars || e).palette.text.primary,
  ...e.typography.body1,
  backgroundColor: (e.vars || e).palette.background.default,
  "@media print": {
    // Save printer ink.
    backgroundColor: (e.vars || e).palette.common.white
  }
}), Av = (e, t = !1) => {
  var s, a;
  const n = {};
  t && e.colorSchemes && typeof e.getColorSchemeSelector == "function" && Object.entries(e.colorSchemes).forEach(([l, c]) => {
    var d, f;
    const u = e.getColorSchemeSelector(l);
    u.startsWith("@") ? n[u] = {
      ":root": {
        colorScheme: (d = c.palette) == null ? void 0 : d.mode
      }
    } : n[u.replace(/\s*&/, "")] = {
      colorScheme: (f = c.palette) == null ? void 0 : f.mode
    };
  });
  let r = {
    html: aM(e, t),
    "*, *::before, *::after": {
      boxSizing: "inherit"
    },
    "strong, b": {
      fontWeight: e.typography.fontWeightBold
    },
    body: {
      margin: 0,
      // Remove the margin in all browsers.
      ...lM(e),
      // Add support for document.body.requestFullScreen().
      // Other elements, if background transparent, are not supported.
      "&::backdrop": {
        backgroundColor: (e.vars || e).palette.background.default
      }
    },
    ...n
  };
  const o = (a = (s = e.components) == null ? void 0 : s.MuiCssBaseline) == null ? void 0 : a.styleOverrides;
  return o && (r = [r, o]), r;
}, ua = "mui-ecs", cM = (e) => {
  const t = Av(e, !1), n = Array.isArray(t) ? t[0] : t;
  return !e.vars && n && (n.html[`:root:has(${ua})`] = {
    colorScheme: e.palette.mode
  }), e.colorSchemes && Object.entries(e.colorSchemes).forEach(([r, o]) => {
    var a, l;
    const s = e.getColorSchemeSelector(r);
    s.startsWith("@") ? n[s] = {
      [`:root:not(:has(.${ua}))`]: {
        colorScheme: (a = o.palette) == null ? void 0 : a.mode
      }
    } : n[s.replace(/\s*&/, "")] = {
      [`&:not(:has(.${ua}))`]: {
        colorScheme: (l = o.palette) == null ? void 0 : l.mode
      }
    };
  }), t;
}, uM = Zu(Ru ? ({
  theme: e,
  enableColorScheme: t
}) => Av(e, t) : ({
  theme: e
}) => cM(e));
function Mv(e) {
  const t = St({
    props: e,
    name: "MuiCssBaseline"
  }), {
    children: n,
    enableColorScheme: r = !1
  } = t;
  return /* @__PURE__ */ $e(C.Fragment, {
    children: [Ru && /* @__PURE__ */ P(uM, {
      enableColorScheme: r
    }), !Ru && !r && /* @__PURE__ */ P("span", {
      className: ua,
      style: {
        display: "none"
      }
    }), n]
  });
}
process.env.NODE_ENV !== "production" && (Mv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * You can wrap a node.
   */
  children: i.node,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   * @default false
   */
  enableColorScheme: i.bool
});
function dM() {
  const { themeMode: e } = tf(), { themePalette: t } = Rv(), n = cn(() => rl({
    palette: {
      mode: e,
      primary: {
        main: t.main,
        dark: t.dark,
        light: t.light,
        contrastText: t.contrastText
      }
    }
  }), [e, t]);
  return fM(t), { theme: n };
}
function fM(e) {
  zo(() => {
    const t = document.createElement("style");
    return t.innerHTML = `
          /* 设置选中文本的样式 */
          ::selection {
            background-color: ${e.light};                        /* 设置选中文本的背景色 */
            color: white;                                                   /* 设置选中文本的文字颜色 */
          }
    
          /* 设置滚动条的样式 */
          ::-webkit-scrollbar {
            width: 8px;                                                     /* 设置滚动条的宽度 */
            height: 8px;                                                    /* 设置滚动条的高度 */
          }
          ::-webkit-scrollbar-thumb {
            background-color: ${e.main};                         /* 设置滚动条的颜色 */
            border-radius: 4px;                                             /* 设置滚动条的圆角 */
          }
          ::-webkit-scrollbar-thumb:hover {
            background-color: ${e.dark};                         /* 悬停时加深颜色 */
          } 
          ::-webkit-scrollbar-track {
            background-color: rgba(0, 0, 0, 0.1);                         /* 滑轨颜色 */
            border-radius: 4px;                                             /* 圆角 */
            transition: opacity 0.5s ease-in-out;                           /* 滑轨过渡效果 */
          }
          /* Firefox 滚动条样式 */
          * {
            scrollbar-color: ${e.main} rgba(0, 0, 0, 0.1);     /* 滑块 和 滑轨颜色 */
            scrollbar-width: medium;                                        /* 滚动条宽度 */
          }
          /* Firefox 滚动条的过渡效果 */
          *::-webkit-scrollbar {
            transition: opacity 0.5s ease-in-out;
          }
        `, document.head.appendChild(t), () => {
      document.head.removeChild(t);
    };
  }, [e]);
}
const pM = _e(({ children: e }) => {
  const { theme: t } = dM();
  return /* @__PURE__ */ $e(JT, { theme: t, disableTransitionOnChange: !0, children: [
    /* @__PURE__ */ P(Mv, {}),
    e
  ] });
});
pM.displayName = "ThemeProvider";
function mM(e) {
  if (typeof document > "u") return;
  let t = document.head || document.getElementsByTagName("head")[0], n = document.createElement("style");
  n.type = "text/css", t.appendChild(n), n.styleSheet ? n.styleSheet.cssText = e : n.appendChild(document.createTextNode(e));
}
const hM = (e) => {
  switch (e) {
    case "success":
      return bM;
    case "info":
      return xM;
    case "warning":
      return vM;
    case "error":
      return wM;
    default:
      return null;
  }
}, gM = Array(12).fill(0), yM = ({ visible: e, className: t }) => /* @__PURE__ */ L.createElement("div", {
  className: [
    "sonner-loading-wrapper",
    t
  ].filter(Boolean).join(" "),
  "data-visible": e
}, /* @__PURE__ */ L.createElement("div", {
  className: "sonner-spinner"
}, gM.map((n, r) => /* @__PURE__ */ L.createElement("div", {
  className: "sonner-loading-bar",
  key: `spinner-bar-${r}`
})))), bM = /* @__PURE__ */ L.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ L.createElement("path", {
  fillRule: "evenodd",
  d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
  clipRule: "evenodd"
})), vM = /* @__PURE__ */ L.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ L.createElement("path", {
  fillRule: "evenodd",
  d: "M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z",
  clipRule: "evenodd"
})), xM = /* @__PURE__ */ L.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ L.createElement("path", {
  fillRule: "evenodd",
  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z",
  clipRule: "evenodd"
})), wM = /* @__PURE__ */ L.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ L.createElement("path", {
  fillRule: "evenodd",
  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0110 5zm0 10a1 1 0 100-2 1 1 0 000 2z",
  clipRule: "evenodd"
})), SM = /* @__PURE__ */ L.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "12",
  height: "12",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "1.5",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, /* @__PURE__ */ L.createElement("line", {
  x1: "18",
  y1: "6",
  x2: "6",
  y2: "18"
}), /* @__PURE__ */ L.createElement("line", {
  x1: "6",
  y1: "6",
  x2: "18",
  y2: "18"
})), TM = () => {
  const [e, t] = L.useState(document.hidden);
  return L.useEffect(() => {
    const n = () => {
      t(document.hidden);
    };
    return document.addEventListener("visibilitychange", n), () => window.removeEventListener("visibilitychange", n);
  }, []), e;
};
let ku = 1;
class EM {
  constructor() {
    this.subscribe = (t) => (this.subscribers.push(t), () => {
      const n = this.subscribers.indexOf(t);
      this.subscribers.splice(n, 1);
    }), this.publish = (t) => {
      this.subscribers.forEach((n) => n(t));
    }, this.addToast = (t) => {
      this.publish(t), this.toasts = [
        ...this.toasts,
        t
      ];
    }, this.create = (t) => {
      var n;
      const { message: r, ...o } = t, s = typeof (t == null ? void 0 : t.id) == "number" || ((n = t.id) == null ? void 0 : n.length) > 0 ? t.id : ku++, a = this.toasts.find((c) => c.id === s), l = t.dismissible === void 0 ? !0 : t.dismissible;
      return this.dismissedToasts.has(s) && this.dismissedToasts.delete(s), a ? this.toasts = this.toasts.map((c) => c.id === s ? (this.publish({
        ...c,
        ...t,
        id: s,
        title: r
      }), {
        ...c,
        ...t,
        id: s,
        dismissible: l,
        title: r
      }) : c) : this.addToast({
        title: r,
        ...o,
        dismissible: l,
        id: s
      }), s;
    }, this.dismiss = (t) => (t ? (this.dismissedToasts.add(t), requestAnimationFrame(() => this.subscribers.forEach((n) => n({
      id: t,
      dismiss: !0
    })))) : this.toasts.forEach((n) => {
      this.subscribers.forEach((r) => r({
        id: n.id,
        dismiss: !0
      }));
    }), t), this.message = (t, n) => this.create({
      ...n,
      message: t
    }), this.error = (t, n) => this.create({
      ...n,
      message: t,
      type: "error"
    }), this.success = (t, n) => this.create({
      ...n,
      type: "success",
      message: t
    }), this.info = (t, n) => this.create({
      ...n,
      type: "info",
      message: t
    }), this.warning = (t, n) => this.create({
      ...n,
      type: "warning",
      message: t
    }), this.loading = (t, n) => this.create({
      ...n,
      type: "loading",
      message: t
    }), this.promise = (t, n) => {
      if (!n)
        return;
      let r;
      n.loading !== void 0 && (r = this.create({
        ...n,
        promise: t,
        type: "loading",
        message: n.loading,
        description: typeof n.description != "function" ? n.description : void 0
      }));
      const o = Promise.resolve(t instanceof Function ? t() : t);
      let s = r !== void 0, a;
      const l = o.then(async (u) => {
        if (a = [
          "resolve",
          u
        ], L.isValidElement(u))
          s = !1, this.create({
            id: r,
            type: "default",
            message: u
          });
        else if (OM(u) && !u.ok) {
          s = !1;
          const f = typeof n.error == "function" ? await n.error(`HTTP error! status: ${u.status}`) : n.error, h = typeof n.description == "function" ? await n.description(`HTTP error! status: ${u.status}`) : n.description, y = typeof f == "object" && !L.isValidElement(f) ? f : {
            message: f
          };
          this.create({
            id: r,
            type: "error",
            description: h,
            ...y
          });
        } else if (u instanceof Error) {
          s = !1;
          const f = typeof n.error == "function" ? await n.error(u) : n.error, h = typeof n.description == "function" ? await n.description(u) : n.description, y = typeof f == "object" && !L.isValidElement(f) ? f : {
            message: f
          };
          this.create({
            id: r,
            type: "error",
            description: h,
            ...y
          });
        } else if (n.success !== void 0) {
          s = !1;
          const f = typeof n.success == "function" ? await n.success(u) : n.success, h = typeof n.description == "function" ? await n.description(u) : n.description, y = typeof f == "object" && !L.isValidElement(f) ? f : {
            message: f
          };
          this.create({
            id: r,
            type: "success",
            description: h,
            ...y
          });
        }
      }).catch(async (u) => {
        if (a = [
          "reject",
          u
        ], n.error !== void 0) {
          s = !1;
          const d = typeof n.error == "function" ? await n.error(u) : n.error, f = typeof n.description == "function" ? await n.description(u) : n.description, g = typeof d == "object" && !L.isValidElement(d) ? d : {
            message: d
          };
          this.create({
            id: r,
            type: "error",
            description: f,
            ...g
          });
        }
      }).finally(() => {
        s && (this.dismiss(r), r = void 0), n.finally == null || n.finally.call(n);
      }), c = () => new Promise((u, d) => l.then(() => a[0] === "reject" ? d(a[1]) : u(a[1])).catch(d));
      return typeof r != "string" && typeof r != "number" ? {
        unwrap: c
      } : Object.assign(r, {
        unwrap: c
      });
    }, this.custom = (t, n) => {
      const r = (n == null ? void 0 : n.id) || ku++;
      return this.create({
        jsx: t(r),
        id: r,
        ...n
      }), r;
    }, this.getActiveToasts = () => this.toasts.filter((t) => !this.dismissedToasts.has(t.id)), this.subscribers = [], this.toasts = [], this.dismissedToasts = /* @__PURE__ */ new Set();
  }
}
const fn = new EM(), CM = (e, t) => {
  const n = (t == null ? void 0 : t.id) || ku++;
  return fn.addToast({
    title: e,
    ...t,
    id: n
  }), n;
}, OM = (e) => e && typeof e == "object" && "ok" in e && typeof e.ok == "boolean" && "status" in e && typeof e.status == "number", RM = CM, kM = () => fn.toasts, $M = () => fn.getActiveToasts(), Ac = Object.assign(RM, {
  success: fn.success,
  info: fn.info,
  warning: fn.warning,
  error: fn.error,
  custom: fn.custom,
  message: fn.message,
  promise: fn.promise,
  dismiss: fn.dismiss,
  loading: fn.loading
}, {
  getHistory: kM,
  getToasts: $M
});
mM("[data-sonner-toaster][dir=ltr],html[dir=ltr]{--toast-icon-margin-start:-3px;--toast-icon-margin-end:4px;--toast-svg-margin-start:-1px;--toast-svg-margin-end:0px;--toast-button-margin-start:auto;--toast-button-margin-end:0;--toast-close-button-start:0;--toast-close-button-end:unset;--toast-close-button-transform:translate(-35%, -35%)}[data-sonner-toaster][dir=rtl],html[dir=rtl]{--toast-icon-margin-start:4px;--toast-icon-margin-end:-3px;--toast-svg-margin-start:0px;--toast-svg-margin-end:-1px;--toast-button-margin-start:0;--toast-button-margin-end:auto;--toast-close-button-start:unset;--toast-close-button-end:0;--toast-close-button-transform:translate(35%, -35%)}[data-sonner-toaster]{position:fixed;width:var(--width);font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;--gray1:hsl(0, 0%, 99%);--gray2:hsl(0, 0%, 97.3%);--gray3:hsl(0, 0%, 95.1%);--gray4:hsl(0, 0%, 93%);--gray5:hsl(0, 0%, 90.9%);--gray6:hsl(0, 0%, 88.7%);--gray7:hsl(0, 0%, 85.8%);--gray8:hsl(0, 0%, 78%);--gray9:hsl(0, 0%, 56.1%);--gray10:hsl(0, 0%, 52.3%);--gray11:hsl(0, 0%, 43.5%);--gray12:hsl(0, 0%, 9%);--border-radius:8px;box-sizing:border-box;padding:0;margin:0;list-style:none;outline:0;z-index:999999999;transition:transform .4s ease}[data-sonner-toaster][data-lifted=true]{transform:translateY(-8px)}@media (hover:none) and (pointer:coarse){[data-sonner-toaster][data-lifted=true]{transform:none}}[data-sonner-toaster][data-x-position=right]{right:var(--offset-right)}[data-sonner-toaster][data-x-position=left]{left:var(--offset-left)}[data-sonner-toaster][data-x-position=center]{left:50%;transform:translateX(-50%)}[data-sonner-toaster][data-y-position=top]{top:var(--offset-top)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--offset-bottom)}[data-sonner-toast]{--y:translateY(100%);--lift-amount:calc(var(--lift) * var(--gap));z-index:var(--z-index);position:absolute;opacity:0;transform:var(--y);touch-action:none;transition:transform .4s,opacity .4s,height .4s,box-shadow .2s;box-sizing:border-box;outline:0;overflow-wrap:anywhere}[data-sonner-toast][data-styled=true]{padding:16px;background:var(--normal-bg);border:1px solid var(--normal-border);color:var(--normal-text);border-radius:var(--border-radius);box-shadow:0 4px 12px rgba(0,0,0,.1);width:var(--width);font-size:13px;display:flex;align-items:center;gap:6px}[data-sonner-toast]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-y-position=top]{top:0;--y:translateY(-100%);--lift:1;--lift-amount:calc(1 * var(--gap))}[data-sonner-toast][data-y-position=bottom]{bottom:0;--y:translateY(100%);--lift:-1;--lift-amount:calc(var(--lift) * var(--gap))}[data-sonner-toast][data-styled=true] [data-description]{font-weight:400;line-height:1.4;color:#3f3f3f}[data-rich-colors=true][data-sonner-toast][data-styled=true] [data-description]{color:inherit}[data-sonner-toaster][data-sonner-theme=dark] [data-description]{color:#e8e8e8}[data-sonner-toast][data-styled=true] [data-title]{font-weight:500;line-height:1.5;color:inherit}[data-sonner-toast][data-styled=true] [data-icon]{display:flex;height:16px;width:16px;position:relative;justify-content:flex-start;align-items:center;flex-shrink:0;margin-left:var(--toast-icon-margin-start);margin-right:var(--toast-icon-margin-end)}[data-sonner-toast][data-promise=true] [data-icon]>svg{opacity:0;transform:scale(.8);transform-origin:center;animation:sonner-fade-in .3s ease forwards}[data-sonner-toast][data-styled=true] [data-icon]>*{flex-shrink:0}[data-sonner-toast][data-styled=true] [data-icon] svg{margin-left:var(--toast-svg-margin-start);margin-right:var(--toast-svg-margin-end)}[data-sonner-toast][data-styled=true] [data-content]{display:flex;flex-direction:column;gap:2px}[data-sonner-toast][data-styled=true] [data-button]{border-radius:4px;padding-left:8px;padding-right:8px;height:24px;font-size:12px;color:var(--normal-bg);background:var(--normal-text);margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end);border:none;font-weight:500;cursor:pointer;outline:0;display:flex;align-items:center;flex-shrink:0;transition:opacity .4s,box-shadow .2s}[data-sonner-toast][data-styled=true] [data-button]:focus-visible{box-shadow:0 0 0 2px rgba(0,0,0,.4)}[data-sonner-toast][data-styled=true] [data-button]:first-of-type{margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end)}[data-sonner-toast][data-styled=true] [data-cancel]{color:var(--normal-text);background:rgba(0,0,0,.08)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-styled=true] [data-cancel]{background:rgba(255,255,255,.3)}[data-sonner-toast][data-styled=true] [data-close-button]{position:absolute;left:var(--toast-close-button-start);right:var(--toast-close-button-end);top:0;height:20px;width:20px;display:flex;justify-content:center;align-items:center;padding:0;color:var(--gray12);background:var(--normal-bg);border:1px solid var(--gray4);transform:var(--toast-close-button-transform);border-radius:50%;cursor:pointer;z-index:1;transition:opacity .1s,background .2s,border-color .2s}[data-sonner-toast][data-styled=true] [data-close-button]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-styled=true] [data-disabled=true]{cursor:not-allowed}[data-sonner-toast][data-styled=true]:hover [data-close-button]:hover{background:var(--gray2);border-color:var(--gray5)}[data-sonner-toast][data-swiping=true]::before{content:'';position:absolute;left:-100%;right:-100%;height:100%;z-index:-1}[data-sonner-toast][data-y-position=top][data-swiping=true]::before{bottom:50%;transform:scaleY(3) translateY(50%)}[data-sonner-toast][data-y-position=bottom][data-swiping=true]::before{top:50%;transform:scaleY(3) translateY(-50%)}[data-sonner-toast][data-swiping=false][data-removed=true]::before{content:'';position:absolute;inset:0;transform:scaleY(2)}[data-sonner-toast][data-expanded=true]::after{content:'';position:absolute;left:0;height:calc(var(--gap) + 1px);bottom:100%;width:100%}[data-sonner-toast][data-mounted=true]{--y:translateY(0);opacity:1}[data-sonner-toast][data-expanded=false][data-front=false]{--scale:var(--toasts-before) * 0.05 + 1;--y:translateY(calc(var(--lift-amount) * var(--toasts-before))) scale(calc(-1 * var(--scale)));height:var(--front-toast-height)}[data-sonner-toast]>*{transition:opacity .4s}[data-sonner-toast][data-x-position=right]{right:0}[data-sonner-toast][data-x-position=left]{left:0}[data-sonner-toast][data-expanded=false][data-front=false][data-styled=true]>*{opacity:0}[data-sonner-toast][data-visible=false]{opacity:0;pointer-events:none}[data-sonner-toast][data-mounted=true][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset)));height:var(--initial-height)}[data-sonner-toast][data-removed=true][data-front=true][data-swipe-out=false]{--y:translateY(calc(var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset) + var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=false]{--y:translateY(40%);opacity:0;transition:transform .5s,opacity .2s}[data-sonner-toast][data-removed=true][data-front=false]::before{height:calc(var(--initial-height) + 20%)}[data-sonner-toast][data-swiping=true]{transform:var(--y) translateY(var(--swipe-amount-y,0)) translateX(var(--swipe-amount-x,0));transition:none}[data-sonner-toast][data-swiped=true]{user-select:none}[data-sonner-toast][data-swipe-out=true][data-y-position=bottom],[data-sonner-toast][data-swipe-out=true][data-y-position=top]{animation-duration:.2s;animation-timing-function:ease-out;animation-fill-mode:forwards}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=left]{animation-name:swipe-out-left}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=right]{animation-name:swipe-out-right}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=up]{animation-name:swipe-out-up}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=down]{animation-name:swipe-out-down}@keyframes swipe-out-left{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) - 100%));opacity:0}}@keyframes swipe-out-right{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) + 100%));opacity:0}}@keyframes swipe-out-up{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) - 100%));opacity:0}}@keyframes swipe-out-down{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) + 100%));opacity:0}}@media (max-width:600px){[data-sonner-toaster]{position:fixed;right:var(--mobile-offset-right);left:var(--mobile-offset-left);width:100%}[data-sonner-toaster][dir=rtl]{left:calc(var(--mobile-offset-left) * -1)}[data-sonner-toaster] [data-sonner-toast]{left:0;right:0;width:calc(100% - var(--mobile-offset-left) * 2)}[data-sonner-toaster][data-x-position=left]{left:var(--mobile-offset-left)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--mobile-offset-bottom)}[data-sonner-toaster][data-y-position=top]{top:var(--mobile-offset-top)}[data-sonner-toaster][data-x-position=center]{left:var(--mobile-offset-left);right:var(--mobile-offset-right);transform:none}}[data-sonner-toaster][data-sonner-theme=light]{--normal-bg:#fff;--normal-border:var(--gray4);--normal-text:var(--gray12);--success-bg:hsl(143, 85%, 96%);--success-border:hsl(145, 92%, 87%);--success-text:hsl(140, 100%, 27%);--info-bg:hsl(208, 100%, 97%);--info-border:hsl(221, 91%, 93%);--info-text:hsl(210, 92%, 45%);--warning-bg:hsl(49, 100%, 97%);--warning-border:hsl(49, 91%, 84%);--warning-text:hsl(31, 92%, 45%);--error-bg:hsl(359, 100%, 97%);--error-border:hsl(359, 100%, 94%);--error-text:hsl(360, 100%, 45%)}[data-sonner-toaster][data-sonner-theme=light] [data-sonner-toast][data-invert=true]{--normal-bg:#000;--normal-border:hsl(0, 0%, 20%);--normal-text:var(--gray1)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-invert=true]{--normal-bg:#fff;--normal-border:var(--gray3);--normal-text:var(--gray12)}[data-sonner-toaster][data-sonner-theme=dark]{--normal-bg:#000;--normal-bg-hover:hsl(0, 0%, 12%);--normal-border:hsl(0, 0%, 20%);--normal-border-hover:hsl(0, 0%, 25%);--normal-text:var(--gray1);--success-bg:hsl(150, 100%, 6%);--success-border:hsl(147, 100%, 12%);--success-text:hsl(150, 86%, 65%);--info-bg:hsl(215, 100%, 6%);--info-border:hsl(223, 43%, 17%);--info-text:hsl(216, 87%, 65%);--warning-bg:hsl(64, 100%, 6%);--warning-border:hsl(60, 100%, 9%);--warning-text:hsl(46, 87%, 65%);--error-bg:hsl(358, 76%, 10%);--error-border:hsl(357, 89%, 16%);--error-text:hsl(358, 100%, 81%)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]{background:var(--normal-bg);border-color:var(--normal-border);color:var(--normal-text)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]:hover{background:var(--normal-bg-hover);border-color:var(--normal-border-hover)}[data-rich-colors=true][data-sonner-toast][data-type=success]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=success] [data-close-button]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=info]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=info] [data-close-button]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning] [data-close-button]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=error]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}[data-rich-colors=true][data-sonner-toast][data-type=error] [data-close-button]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}.sonner-loading-wrapper{--size:16px;height:var(--size);width:var(--size);position:absolute;inset:0;z-index:10}.sonner-loading-wrapper[data-visible=false]{transform-origin:center;animation:sonner-fade-out .2s ease forwards}.sonner-spinner{position:relative;top:50%;left:50%;height:var(--size);width:var(--size)}.sonner-loading-bar{animation:sonner-spin 1.2s linear infinite;background:var(--gray11);border-radius:6px;height:8%;left:-10%;position:absolute;top:-3.9%;width:24%}.sonner-loading-bar:first-child{animation-delay:-1.2s;transform:rotate(.0001deg) translate(146%)}.sonner-loading-bar:nth-child(2){animation-delay:-1.1s;transform:rotate(30deg) translate(146%)}.sonner-loading-bar:nth-child(3){animation-delay:-1s;transform:rotate(60deg) translate(146%)}.sonner-loading-bar:nth-child(4){animation-delay:-.9s;transform:rotate(90deg) translate(146%)}.sonner-loading-bar:nth-child(5){animation-delay:-.8s;transform:rotate(120deg) translate(146%)}.sonner-loading-bar:nth-child(6){animation-delay:-.7s;transform:rotate(150deg) translate(146%)}.sonner-loading-bar:nth-child(7){animation-delay:-.6s;transform:rotate(180deg) translate(146%)}.sonner-loading-bar:nth-child(8){animation-delay:-.5s;transform:rotate(210deg) translate(146%)}.sonner-loading-bar:nth-child(9){animation-delay:-.4s;transform:rotate(240deg) translate(146%)}.sonner-loading-bar:nth-child(10){animation-delay:-.3s;transform:rotate(270deg) translate(146%)}.sonner-loading-bar:nth-child(11){animation-delay:-.2s;transform:rotate(300deg) translate(146%)}.sonner-loading-bar:nth-child(12){animation-delay:-.1s;transform:rotate(330deg) translate(146%)}@keyframes sonner-fade-in{0%{opacity:0;transform:scale(.8)}100%{opacity:1;transform:scale(1)}}@keyframes sonner-fade-out{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(.8)}}@keyframes sonner-spin{0%{opacity:1}100%{opacity:.15}}@media (prefers-reduced-motion){.sonner-loading-bar,[data-sonner-toast],[data-sonner-toast]>*{transition:none!important;animation:none!important}}.sonner-loader{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);transform-origin:center;transition:opacity .2s,transform .2s}.sonner-loader[data-visible=false]{opacity:0;transform:scale(.8) translate(-50%,-50%)}");
function Xs(e) {
  return e.label !== void 0;
}
const PM = 3, IM = "24px", NM = "16px", ah = 4e3, AM = 356, MM = 14, _M = 45, DM = 200;
function tr(...e) {
  return e.filter(Boolean).join(" ");
}
function BM(e) {
  const [t, n] = e.split("-"), r = [];
  return t && r.push(t), n && r.push(n), r;
}
const FM = (e) => {
  var t, n, r, o, s, a, l, c, u;
  const { invert: d, toast: f, unstyled: h, interacting: g, setHeights: y, visibleToasts: m, heights: b, index: x, toasts: E, expanded: w, removeToast: S, defaultRichColors: v, closeButton: T, style: R, cancelButtonStyle: k, actionButtonStyle: I, className: p = "", descriptionClassName: O = "", duration: $, position: A, gap: D, expandByDefault: _, classNames: M, icons: V, closeButtonAriaLabel: Y = "Close toast" } = e, [U, j] = L.useState(null), [W, ee] = L.useState(null), [K, oe] = L.useState(!1), [ne, se] = L.useState(!1), [de, X] = L.useState(!1), [ae, Q] = L.useState(!1), [ie, F] = L.useState(!1), [he, fe] = L.useState(0), [Te, Le] = L.useState(0), Ae = L.useRef(f.duration || $ || ah), Ie = L.useRef(null), Re = L.useRef(null), Be = x === 0, Oe = x + 1 <= m, N = f.type, q = f.dismissible !== !1, J = f.className || "", H = f.descriptionClassName || "", B = L.useMemo(() => b.findIndex((De) => De.toastId === f.id) || 0, [
    b,
    f.id
  ]), z = L.useMemo(() => {
    var De;
    return (De = f.closeButton) != null ? De : T;
  }, [
    f.closeButton,
    T
  ]), G = L.useMemo(() => f.duration || $ || ah, [
    f.duration,
    $
  ]), pe = L.useRef(0), me = L.useRef(0), re = L.useRef(0), Z = L.useRef(null), [te, ye] = A.split("-"), Se = L.useMemo(() => b.reduce((De, ot, Tt) => Tt >= B ? De : De + ot.height, 0), [
    b,
    B
  ]), le = TM(), we = f.invert || d, Me = N === "loading";
  me.current = L.useMemo(() => B * D + Se, [
    B,
    Se
  ]), L.useEffect(() => {
    Ae.current = G;
  }, [
    G
  ]), L.useEffect(() => {
    oe(!0);
  }, []), L.useEffect(() => {
    const De = Re.current;
    if (De) {
      const ot = De.getBoundingClientRect().height;
      return Le(ot), y((Tt) => [
        {
          toastId: f.id,
          height: ot,
          position: f.position
        },
        ...Tt
      ]), () => y((Tt) => Tt.filter((ke) => ke.toastId !== f.id));
    }
  }, [
    y,
    f.id
  ]), L.useLayoutEffect(() => {
    if (!K) return;
    const De = Re.current, ot = De.style.height;
    De.style.height = "auto";
    const Tt = De.getBoundingClientRect().height;
    De.style.height = ot, Le(Tt), y((ke) => ke.find((Bt) => Bt.toastId === f.id) ? ke.map((Bt) => Bt.toastId === f.id ? {
      ...Bt,
      height: Tt
    } : Bt) : [
      {
        toastId: f.id,
        height: Tt,
        position: f.position
      },
      ...ke
    ]);
  }, [
    K,
    f.title,
    f.description,
    y,
    f.id
  ]);
  const ze = L.useCallback(() => {
    se(!0), fe(me.current), y((De) => De.filter((ot) => ot.toastId !== f.id)), setTimeout(() => {
      S(f);
    }, DM);
  }, [
    f,
    S,
    y,
    me
  ]);
  L.useEffect(() => {
    if (f.promise && N === "loading" || f.duration === 1 / 0 || f.type === "loading") return;
    let De;
    return w || g || le ? (() => {
      if (re.current < pe.current) {
        const ke = (/* @__PURE__ */ new Date()).getTime() - pe.current;
        Ae.current = Ae.current - ke;
      }
      re.current = (/* @__PURE__ */ new Date()).getTime();
    })() : (() => {
      Ae.current !== 1 / 0 && (pe.current = (/* @__PURE__ */ new Date()).getTime(), De = setTimeout(() => {
        f.onAutoClose == null || f.onAutoClose.call(f, f), ze();
      }, Ae.current));
    })(), () => clearTimeout(De);
  }, [
    w,
    g,
    f,
    N,
    le,
    ze
  ]), L.useEffect(() => {
    f.delete && ze();
  }, [
    ze,
    f.delete
  ]);
  function Ye() {
    var De;
    if (V != null && V.loading) {
      var ot;
      return /* @__PURE__ */ L.createElement("div", {
        className: tr(M == null ? void 0 : M.loader, f == null || (ot = f.classNames) == null ? void 0 : ot.loader, "sonner-loader"),
        "data-visible": N === "loading"
      }, V.loading);
    }
    return /* @__PURE__ */ L.createElement(yM, {
      className: tr(M == null ? void 0 : M.loader, f == null || (De = f.classNames) == null ? void 0 : De.loader),
      visible: N === "loading"
    });
  }
  const It = f.icon || (V == null ? void 0 : V[N]) || hM(N);
  var pt, Nt;
  return /* @__PURE__ */ L.createElement("li", {
    tabIndex: 0,
    ref: Re,
    className: tr(p, J, M == null ? void 0 : M.toast, f == null || (t = f.classNames) == null ? void 0 : t.toast, M == null ? void 0 : M.default, M == null ? void 0 : M[N], f == null || (n = f.classNames) == null ? void 0 : n[N]),
    "data-sonner-toast": "",
    "data-rich-colors": (pt = f.richColors) != null ? pt : v,
    "data-styled": !(f.jsx || f.unstyled || h),
    "data-mounted": K,
    "data-promise": !!f.promise,
    "data-swiped": ie,
    "data-removed": ne,
    "data-visible": Oe,
    "data-y-position": te,
    "data-x-position": ye,
    "data-index": x,
    "data-front": Be,
    "data-swiping": de,
    "data-dismissible": q,
    "data-type": N,
    "data-invert": we,
    "data-swipe-out": ae,
    "data-swipe-direction": W,
    "data-expanded": !!(w || _ && K),
    style: {
      "--index": x,
      "--toasts-before": x,
      "--z-index": E.length - x,
      "--offset": `${ne ? he : me.current}px`,
      "--initial-height": _ ? "auto" : `${Te}px`,
      ...R,
      ...f.style
    },
    onDragEnd: () => {
      X(!1), j(null), Z.current = null;
    },
    onPointerDown: (De) => {
      Me || !q || (Ie.current = /* @__PURE__ */ new Date(), fe(me.current), De.target.setPointerCapture(De.pointerId), De.target.tagName !== "BUTTON" && (X(!0), Z.current = {
        x: De.clientX,
        y: De.clientY
      }));
    },
    onPointerUp: () => {
      var De, ot, Tt;
      if (ae || !q) return;
      Z.current = null;
      const ke = Number(((De = Re.current) == null ? void 0 : De.style.getPropertyValue("--swipe-amount-x").replace("px", "")) || 0), Vt = Number(((ot = Re.current) == null ? void 0 : ot.style.getPropertyValue("--swipe-amount-y").replace("px", "")) || 0), Bt = (/* @__PURE__ */ new Date()).getTime() - ((Tt = Ie.current) == null ? void 0 : Tt.getTime()), $n = U === "x" ? ke : Vt, ks = Math.abs($n) / Bt;
      if (Math.abs($n) >= _M || ks > 0.11) {
        fe(me.current), f.onDismiss == null || f.onDismiss.call(f, f), ee(U === "x" ? ke > 0 ? "right" : "left" : Vt > 0 ? "down" : "up"), ze(), Q(!0);
        return;
      } else {
        var Wn, Un;
        (Wn = Re.current) == null || Wn.style.setProperty("--swipe-amount-x", "0px"), (Un = Re.current) == null || Un.style.setProperty("--swipe-amount-y", "0px");
      }
      F(!1), X(!1), j(null);
    },
    onPointerMove: (De) => {
      var ot, Tt, ke;
      if (!Z.current || !q || ((ot = window.getSelection()) == null ? void 0 : ot.toString().length) > 0) return;
      const Bt = De.clientY - Z.current.y, $n = De.clientX - Z.current.x;
      var ks;
      const Wn = (ks = e.swipeDirections) != null ? ks : BM(A);
      !U && (Math.abs($n) > 1 || Math.abs(Bt) > 1) && j(Math.abs($n) > Math.abs(Bt) ? "x" : "y");
      let Un = {
        x: 0,
        y: 0
      };
      const rf = (to) => 1 / (1.5 + Math.abs(to) / 20);
      if (U === "y") {
        if (Wn.includes("top") || Wn.includes("bottom"))
          if (Wn.includes("top") && Bt < 0 || Wn.includes("bottom") && Bt > 0)
            Un.y = Bt;
          else {
            const to = Bt * rf(Bt);
            Un.y = Math.abs(to) < Math.abs(Bt) ? to : Bt;
          }
      } else if (U === "x" && (Wn.includes("left") || Wn.includes("right")))
        if (Wn.includes("left") && $n < 0 || Wn.includes("right") && $n > 0)
          Un.x = $n;
        else {
          const to = $n * rf($n);
          Un.x = Math.abs(to) < Math.abs($n) ? to : $n;
        }
      (Math.abs(Un.x) > 0 || Math.abs(Un.y) > 0) && F(!0), (Tt = Re.current) == null || Tt.style.setProperty("--swipe-amount-x", `${Un.x}px`), (ke = Re.current) == null || ke.style.setProperty("--swipe-amount-y", `${Un.y}px`);
    }
  }, z && !f.jsx && N !== "loading" ? /* @__PURE__ */ L.createElement("button", {
    "aria-label": Y,
    "data-disabled": Me,
    "data-close-button": !0,
    onClick: Me || !q ? () => {
    } : () => {
      ze(), f.onDismiss == null || f.onDismiss.call(f, f);
    },
    className: tr(M == null ? void 0 : M.closeButton, f == null || (r = f.classNames) == null ? void 0 : r.closeButton)
  }, (Nt = V == null ? void 0 : V.close) != null ? Nt : SM) : null, (N || f.icon || f.promise) && f.icon !== null && ((V == null ? void 0 : V[N]) !== null || f.icon) ? /* @__PURE__ */ L.createElement("div", {
    "data-icon": "",
    className: tr(M == null ? void 0 : M.icon, f == null || (o = f.classNames) == null ? void 0 : o.icon)
  }, f.promise || f.type === "loading" && !f.icon ? f.icon || Ye() : null, f.type !== "loading" ? It : null) : null, /* @__PURE__ */ L.createElement("div", {
    "data-content": "",
    className: tr(M == null ? void 0 : M.content, f == null || (s = f.classNames) == null ? void 0 : s.content)
  }, /* @__PURE__ */ L.createElement("div", {
    "data-title": "",
    className: tr(M == null ? void 0 : M.title, f == null || (a = f.classNames) == null ? void 0 : a.title)
  }, f.jsx ? f.jsx : typeof f.title == "function" ? f.title() : f.title), f.description ? /* @__PURE__ */ L.createElement("div", {
    "data-description": "",
    className: tr(O, H, M == null ? void 0 : M.description, f == null || (l = f.classNames) == null ? void 0 : l.description)
  }, typeof f.description == "function" ? f.description() : f.description) : null), /* @__PURE__ */ L.isValidElement(f.cancel) ? f.cancel : f.cancel && Xs(f.cancel) ? /* @__PURE__ */ L.createElement("button", {
    "data-button": !0,
    "data-cancel": !0,
    style: f.cancelButtonStyle || k,
    onClick: (De) => {
      Xs(f.cancel) && q && (f.cancel.onClick == null || f.cancel.onClick.call(f.cancel, De), ze());
    },
    className: tr(M == null ? void 0 : M.cancelButton, f == null || (c = f.classNames) == null ? void 0 : c.cancelButton)
  }, f.cancel.label) : null, /* @__PURE__ */ L.isValidElement(f.action) ? f.action : f.action && Xs(f.action) ? /* @__PURE__ */ L.createElement("button", {
    "data-button": !0,
    "data-action": !0,
    style: f.actionButtonStyle || I,
    onClick: (De) => {
      Xs(f.action) && (f.action.onClick == null || f.action.onClick.call(f.action, De), !De.defaultPrevented && ze());
    },
    className: tr(M == null ? void 0 : M.actionButton, f == null || (u = f.classNames) == null ? void 0 : u.actionButton)
  }, f.action.label) : null);
};
function lh() {
  if (typeof window > "u" || typeof document > "u") return "ltr";
  const e = document.documentElement.getAttribute("dir");
  return e === "auto" || !e ? window.getComputedStyle(document.documentElement).direction : e;
}
function jM(e, t) {
  const n = {};
  return [
    e,
    t
  ].forEach((r, o) => {
    const s = o === 1, a = s ? "--mobile-offset" : "--offset", l = s ? NM : IM;
    function c(u) {
      [
        "top",
        "right",
        "bottom",
        "left"
      ].forEach((d) => {
        n[`${a}-${d}`] = typeof u == "number" ? `${u}px` : u;
      });
    }
    typeof r == "number" || typeof r == "string" ? c(r) : typeof r == "object" ? [
      "top",
      "right",
      "bottom",
      "left"
    ].forEach((u) => {
      r[u] === void 0 ? n[`${a}-${u}`] = l : n[`${a}-${u}`] = typeof r[u] == "number" ? `${r[u]}px` : r[u];
    }) : c(l);
  }), n;
}
const LM = /* @__PURE__ */ L.forwardRef(function(t, n) {
  const { invert: r, position: o = "bottom-right", hotkey: s = [
    "altKey",
    "KeyT"
  ], expand: a, closeButton: l, className: c, offset: u, mobileOffset: d, theme: f = "light", richColors: h, duration: g, style: y, visibleToasts: m = PM, toastOptions: b, dir: x = lh(), gap: E = MM, icons: w, containerAriaLabel: S = "Notifications" } = t, [v, T] = L.useState([]), R = L.useMemo(() => Array.from(new Set([
    o
  ].concat(v.filter((W) => W.position).map((W) => W.position)))), [
    v,
    o
  ]), [k, I] = L.useState([]), [p, O] = L.useState(!1), [$, A] = L.useState(!1), [D, _] = L.useState(f !== "system" ? f : typeof window < "u" && window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light"), M = L.useRef(null), V = s.join("+").replace(/Key/g, "").replace(/Digit/g, ""), Y = L.useRef(null), U = L.useRef(!1), j = L.useCallback((W) => {
    T((ee) => {
      var K;
      return (K = ee.find((oe) => oe.id === W.id)) != null && K.delete || fn.dismiss(W.id), ee.filter(({ id: oe }) => oe !== W.id);
    });
  }, []);
  return L.useEffect(() => fn.subscribe((W) => {
    if (W.dismiss) {
      requestAnimationFrame(() => {
        T((ee) => ee.map((K) => K.id === W.id ? {
          ...K,
          delete: !0
        } : K));
      });
      return;
    }
    setTimeout(() => {
      Mo.flushSync(() => {
        T((ee) => {
          const K = ee.findIndex((oe) => oe.id === W.id);
          return K !== -1 ? [
            ...ee.slice(0, K),
            {
              ...ee[K],
              ...W
            },
            ...ee.slice(K + 1)
          ] : [
            W,
            ...ee
          ];
        });
      });
    });
  }), [
    v
  ]), L.useEffect(() => {
    if (f !== "system") {
      _(f);
      return;
    }
    if (f === "system" && (window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? _("dark") : _("light")), typeof window > "u") return;
    const W = window.matchMedia("(prefers-color-scheme: dark)");
    try {
      W.addEventListener("change", ({ matches: ee }) => {
        _(ee ? "dark" : "light");
      });
    } catch {
      W.addListener(({ matches: K }) => {
        try {
          _(K ? "dark" : "light");
        } catch (oe) {
          console.error(oe);
        }
      });
    }
  }, [
    f
  ]), L.useEffect(() => {
    v.length <= 1 && O(!1);
  }, [
    v
  ]), L.useEffect(() => {
    const W = (ee) => {
      var K;
      if (s.every((se) => ee[se] || ee.code === se)) {
        var ne;
        O(!0), (ne = M.current) == null || ne.focus();
      }
      ee.code === "Escape" && (document.activeElement === M.current || (K = M.current) != null && K.contains(document.activeElement)) && O(!1);
    };
    return document.addEventListener("keydown", W), () => document.removeEventListener("keydown", W);
  }, [
    s
  ]), L.useEffect(() => {
    if (M.current)
      return () => {
        Y.current && (Y.current.focus({
          preventScroll: !0
        }), Y.current = null, U.current = !1);
      };
  }, [
    M.current
  ]), // Remove item from normal navigation flow, only available via hotkey
  /* @__PURE__ */ L.createElement("section", {
    ref: n,
    "aria-label": `${S} ${V}`,
    tabIndex: -1,
    "aria-live": "polite",
    "aria-relevant": "additions text",
    "aria-atomic": "false",
    suppressHydrationWarning: !0
  }, R.map((W, ee) => {
    var K;
    const [oe, ne] = W.split("-");
    return v.length ? /* @__PURE__ */ L.createElement("ol", {
      key: W,
      dir: x === "auto" ? lh() : x,
      tabIndex: -1,
      ref: M,
      className: c,
      "data-sonner-toaster": !0,
      "data-sonner-theme": D,
      "data-y-position": oe,
      "data-lifted": p && v.length > 1 && !a,
      "data-x-position": ne,
      style: {
        "--front-toast-height": `${((K = k[0]) == null ? void 0 : K.height) || 0}px`,
        "--width": `${AM}px`,
        "--gap": `${E}px`,
        ...y,
        ...jM(u, d)
      },
      onBlur: (se) => {
        U.current && !se.currentTarget.contains(se.relatedTarget) && (U.current = !1, Y.current && (Y.current.focus({
          preventScroll: !0
        }), Y.current = null));
      },
      onFocus: (se) => {
        se.target instanceof HTMLElement && se.target.dataset.dismissible === "false" || U.current || (U.current = !0, Y.current = se.relatedTarget);
      },
      onMouseEnter: () => O(!0),
      onMouseMove: () => O(!0),
      onMouseLeave: () => {
        $ || O(!1);
      },
      onDragEnd: () => O(!1),
      onPointerDown: (se) => {
        se.target instanceof HTMLElement && se.target.dataset.dismissible === "false" || A(!0);
      },
      onPointerUp: () => A(!1)
    }, v.filter((se) => !se.position && ee === 0 || se.position === W).map((se, de) => {
      var X, ae;
      return /* @__PURE__ */ L.createElement(FM, {
        key: se.id,
        icons: w,
        index: de,
        toast: se,
        defaultRichColors: h,
        duration: (X = b == null ? void 0 : b.duration) != null ? X : g,
        className: b == null ? void 0 : b.className,
        descriptionClassName: b == null ? void 0 : b.descriptionClassName,
        invert: r,
        visibleToasts: m,
        closeButton: (ae = b == null ? void 0 : b.closeButton) != null ? ae : l,
        interacting: $,
        position: W,
        style: b == null ? void 0 : b.style,
        unstyled: b == null ? void 0 : b.unstyled,
        classNames: b == null ? void 0 : b.classNames,
        cancelButtonStyle: b == null ? void 0 : b.cancelButtonStyle,
        actionButtonStyle: b == null ? void 0 : b.actionButtonStyle,
        closeButtonAriaLabel: b == null ? void 0 : b.closeButtonAriaLabel,
        removeToast: j,
        toasts: v.filter((Q) => Q.position == se.position),
        heights: k.filter((Q) => Q.position == se.position),
        setHeights: I,
        expandByDefault: a,
        gap: E,
        expanded: p,
        swipeDirections: t.swipeDirections
      });
    })) : null;
  }));
}), VM = _e(({ position: e = "bottom-right" }) => {
  const { isDarkMode: t } = tf();
  return /* @__PURE__ */ P(
    LM,
    {
      closeButton: !1,
      invert: t,
      visibleToasts: 3,
      position: e,
      gap: 6
    }
  );
});
VM.displayName = "Button";
function zM() {
  return tn(({ type: t, title: n, description: r }) => {
    const o = {
      description: r,
      icon: /* @__PURE__ */ P(mr, { icon: WM(t), color: UM(t) }),
      cancel: {
        label: /* @__PURE__ */ P(mr, { icon: "solar:close-circle-outline" }),
        onClick: () => {
        }
      },
      cancelButtonStyle: { background: "transparent" }
    };
    return t === "success" ? Ac.success(n, o) : t === "error" ? Ac.error(n, o) : Ac.info(n, o);
  }, []);
}
function WM(e) {
  switch (e) {
    case "success":
      return "solar:check-circle-bold";
    case "error":
      return "solar:danger-triangle-bold";
    case "info":
    default:
      return "solar:danger-circle-bold";
  }
}
function UM(e) {
  switch (e) {
    case "success":
      return "success";
    case "error":
      return "error";
    case "info":
      return "auto";
    default:
      return "disabled";
  }
}
const HM = _e(() => {
  const { isFullScreen: e, toggleFullScreen: t } = MA();
  return /* @__PURE__ */ P(
    Gn,
    {
      isCircle: !0,
      isGhost: !0,
      color: "auto",
      icon: e ? "solar:quit-full-screen-square-line-duotone" : "solar:full-screen-square-line-duotone",
      iconWidth: 28,
      onClick: t
    }
  );
});
HM.displayName = "AdminFullScreen";
const qM = _e(({ children: e, sx: t }) => /* @__PURE__ */ P(
  qo,
  {
    isOutlined: !0,
    sx: {
      width: "100%",
      position: "sticky",
      top: 0,
      left: 0,
      right: 0,
      ...t
    },
    children: /* @__PURE__ */ P(
      Kt,
      {
        className: "VenomousUI-AdminHeader",
        row: !0,
        component: "header",
        sx: {
          width: "100%",
          height: 50,
          alignItems: "center",
          justifyContent: "space-between"
        },
        children: e
      }
    )
  }
));
qM.displayName = "AdminHeader";
const YM = ({
  items: e,
  isItemSelected: t,
  isItemDisabled: n,
  onItemClick: r,
  renderItem: o
}) => /* @__PURE__ */ P(
  BA,
  {
    cols: { xs: 3, sm: 3, md: 3, lg: 3, xl: 3 },
    height: 68 * Math.ceil(e.length / 3),
    items: e,
    renderGridItem: (s) => /* @__PURE__ */ P(
      dl,
      {
        isOutlined: !t(s),
        clickable: !0,
        disabled: n ? n(s) : !1,
        onClick: () => void (r == null ? void 0 : r(s)),
        sx: {
          width: "100%",
          height: "60px",
          m: "4px",
          p: "8px",
          border: 0,
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          outlineWidth: "1px",
          outlineStyle: "solid",
          outlineColor: ({ palette: a }) => t(s) ? a.primary.main : "transparent",
          transition: "outline-color 0.2s ease-in-out"
        },
        children: o(s)
      }
    )
  }
), GM = _e(
  YM
), KM = _e(
  ({
    children: e,
    width: t = 300,
    title: n = "Settings",
    labelOfThemeMode: r = "ThemeMode",
    labelOfThemePalettes: o = "ThemePalettes",
    onChangeThemeMode: s,
    onChangeThemePalette: a
  }) => {
    const { isOpen: l, openDrawer: c, closeDrawer: u } = kR();
    return /* @__PURE__ */ $e(ch, { children: [
      /* @__PURE__ */ P(
        Gn,
        {
          isCircle: !0,
          isGhost: !0,
          icon: "solar:settings-line-duotone",
          iconWidth: 28,
          onClick: c,
          color: "auto"
        }
      ),
      /* @__PURE__ */ $e(Dy, { width: t, position: "right", isOpen: l, closeDrawer: u, children: [
        /* @__PURE__ */ P(By, { title: n, closeDrawer: u }),
        /* @__PURE__ */ P(bn, { text: r, isLabel: !0 }),
        /* @__PURE__ */ P(XM, { onChangeThemeMode: s }),
        /* @__PURE__ */ P("br", {}),
        /* @__PURE__ */ P(bn, { text: o, isLabel: !0 }),
        /* @__PURE__ */ P(QM, { onChangeThemePalette: a }),
        /* @__PURE__ */ P("br", {}),
        e
      ] })
    ] });
  }
);
KM.displayName = "AdminSettingsDrawer";
function XM({
  onChangeThemeMode: e
}) {
  const { themeMode: t, isDarkMode: n, toggleThemeMode: r } = tf();
  return /* @__PURE__ */ $e(
    dl,
    {
      isOutlined: !0,
      clickable: !0,
      onClick: () => {
        r(), setTimeout(() => void (e == null ? void 0 : e(t)), 200);
      },
      sx: {
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between",
        height: "60px"
      },
      children: [
        /* @__PURE__ */ P(
          mr,
          {
            icon: n ? "solar:moon-bold-duotone" : "solar:sun-2-bold-duotone",
            width: 24,
            color: "primary"
          }
        ),
        /* @__PURE__ */ P(Kd, { value: n, onChange: () => {
        } })
      ]
    }
  );
}
function QM({
  onChangeThemePalette: e
}) {
  const { allPaletteNames: t, themePaletteName: n, setThemePaletteName: r } = Rv();
  return /* @__PURE__ */ P(
    GM,
    {
      items: t.map((o) => o),
      isItemSelected: (o) => o === n,
      isItemDisabled: (o) => o === n,
      onItemClick: async (o) => {
        r(o), await new Promise((s) => setTimeout(s, 200)), e == null || e(o);
      },
      renderItem: (o) => /* @__PURE__ */ P(
        mr,
        {
          icon: "solar:siderbar-bold-duotone",
          width: 32,
          sx: {
            color: Su(o).main
          }
        }
      )
    }
  );
}
const JM = _e(
  ({ menuHeaderHeight: e = 50, menuWidth: t = 220, menuItems: n, currentPath: r, menuHeaderElement: o, sx: s }) => {
    const { checkIsParentItemActive: a, checkIsSubItemActive: l } = WO({
      currentPath: r
    });
    return /* @__PURE__ */ $e(
      qo,
      {
        className: "VenomousUI-AdminSideNavMenu",
        isOutlined: !0,
        sx: { width: t, height: "100svh", ...s },
        children: [
          /* @__PURE__ */ P(Kt, { row: !0, gap: 0, height: e, px: "8px", mb: "8px", children: o }),
          /* @__PURE__ */ P(
            Oa,
            {
              width: "100%",
              height: `calc(100svh - ${e}px - 16px)`,
              items: n,
              renderItem: (c) => c.subItems ? /* @__PURE__ */ P(
                Nv,
                {
                  id: c.label,
                  position: "right",
                  sx: { width: "100%" },
                  contentSx: { p: "8px" },
                  renderPopperHandler: ({ isOpen: u, openPopper: d }) => /* @__PURE__ */ P(
                    zi,
                    {
                      label: c.label,
                      isActive: a(c),
                      icon: c.icon,
                      clickable: !0,
                      onClick: d,
                      onMouseEnter: d,
                      sx: { backgroundColor: u ? "divider" : "transparent" }
                    }
                  ),
                  children: /* @__PURE__ */ P(
                    Oa,
                    {
                      items: c.subItems,
                      renderItem: (u) => /* @__PURE__ */ P(
                        zi,
                        {
                          label: u.label,
                          isActive: l(u),
                          icon: u.icon,
                          clickable: !0,
                          onClick: u.onClick
                        },
                        u.label
                      )
                    }
                  )
                }
              ) : /* @__PURE__ */ P(
                zi,
                {
                  label: c.label,
                  isActive: a(c),
                  icon: c.icon,
                  clickable: !0,
                  onClick: c.onClick
                },
                c.label
              )
            }
          )
        ]
      }
    );
  }
);
JM.displayName = "AdminSideNavMenu";
export {
  HM as AdminFullScreen,
  qM as AdminHeader,
  KM as AdminSettingsDrawer,
  GM as AdminSettingsDrawerBlock,
  JM as AdminSideNavMenu,
  LE as Avatar,
  VE as Blank,
  Gn as Button,
  dl as Card,
  jy as Checkbox,
  mA as CheckboxUncontrolled,
  rM as ConfirmModal,
  bR as Container,
  gg as DotBadge,
  Dy as Drawer,
  By as DrawerHeader,
  hC as ExhibitCard,
  yR as ExhibitCardActionButton,
  Kt as Flex,
  l2 as FormUncontrolled,
  hA as FormUncontrolledAction,
  BA as Grid,
  mr as Icon,
  Wg as IconBadge,
  wl as Input,
  gA as InputUncontrolled,
  ei as Label,
  xl as Labels,
  LA as LazyImage,
  XA as Loading,
  Oa as Menu,
  zi as MenuItem,
  Iv as Modal,
  Ky as Number,
  jE as NumberTextBadge,
  yA as NumberUncontrolled,
  ev as OtpInput,
  bA as OtpInputUncontrolled,
  qo as Paper,
  tv as Password,
  vA as PasswordUncontrolled,
  $y as Popover,
  Nv as Popper,
  ov as Radios,
  wA as RadiosUncontrolled,
  Kd as Switch,
  SA as SwitchUncontrolled,
  bn as Text,
  Cv as ThemePaletteName,
  pM as ThemeProvider,
  VM as Toast,
  ul as Tooltip,
  lA as createFormControl,
  c2 as createZodSchema,
  IA as getColors,
  WO as useCheckNavMenuActive,
  XN as useController,
  kR as useDrawer,
  i2 as useFieldArray,
  s2 as useForm,
  zn as useFormContext,
  GN as useFormState,
  MA as useFullScreen,
  u2 as useModal,
  ui as usePaper,
  cl as useText,
  AA as useThemeBreakpoint,
  tf as useThemeMode,
  Rv as useThemePalette,
  zM as useToast,
  KN as useWatch,
  a2 as zodResolver
};
