var Lv = Object.defineProperty;
var Vv = (e, t, n) => t in e ? Lv(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;
var Ar = (e, t, n) => Vv(e, typeof t != "symbol" ? t + "" : t, n);
import { jsx as k, jsxs as Pe, Fragment as ph } from "react/jsx-runtime";
import * as C from "react";
import L, { forwardRef as Nu, useContext as zv, useMemo as ln, memo as _e, useState as Sr, useEffect as Uo, createElement as co, isValidElement as Zs, cloneElement as ea, Children as Wv, Fragment as Uv, useCallback as tn, useId as mh, useRef as Hv } from "react";
import * as hh from "react-dom";
import Do from "react-dom";
function qv(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Is = { exports: {} }, Ns = { exports: {} }, Ze = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var cf;
function Yv() {
  if (cf) return Ze;
  cf = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, h = e ? Symbol.for("react.suspense_list") : 60120, g = e ? Symbol.for("react.memo") : 60115, y = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, b = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
  function w(v) {
    if (typeof v == "object" && v !== null) {
      var S = v.$$typeof;
      switch (S) {
        case t:
          switch (v = v.type, v) {
            case c:
            case u:
            case r:
            case s:
            case o:
            case f:
              return v;
            default:
              switch (v = v && v.$$typeof, v) {
                case l:
                case d:
                case y:
                case g:
                case a:
                  return v;
                default:
                  return S;
              }
          }
        case n:
          return S;
      }
    }
  }
  function T(v) {
    return w(v) === u;
  }
  return Ze.AsyncMode = c, Ze.ConcurrentMode = u, Ze.ContextConsumer = l, Ze.ContextProvider = a, Ze.Element = t, Ze.ForwardRef = d, Ze.Fragment = r, Ze.Lazy = y, Ze.Memo = g, Ze.Portal = n, Ze.Profiler = s, Ze.StrictMode = o, Ze.Suspense = f, Ze.isAsyncMode = function(v) {
    return T(v) || w(v) === c;
  }, Ze.isConcurrentMode = T, Ze.isContextConsumer = function(v) {
    return w(v) === l;
  }, Ze.isContextProvider = function(v) {
    return w(v) === a;
  }, Ze.isElement = function(v) {
    return typeof v == "object" && v !== null && v.$$typeof === t;
  }, Ze.isForwardRef = function(v) {
    return w(v) === d;
  }, Ze.isFragment = function(v) {
    return w(v) === r;
  }, Ze.isLazy = function(v) {
    return w(v) === y;
  }, Ze.isMemo = function(v) {
    return w(v) === g;
  }, Ze.isPortal = function(v) {
    return w(v) === n;
  }, Ze.isProfiler = function(v) {
    return w(v) === s;
  }, Ze.isStrictMode = function(v) {
    return w(v) === o;
  }, Ze.isSuspense = function(v) {
    return w(v) === f;
  }, Ze.isValidElementType = function(v) {
    return typeof v == "string" || typeof v == "function" || v === r || v === u || v === s || v === o || v === f || v === h || typeof v == "object" && v !== null && (v.$$typeof === y || v.$$typeof === g || v.$$typeof === a || v.$$typeof === l || v.$$typeof === d || v.$$typeof === b || v.$$typeof === x || v.$$typeof === E || v.$$typeof === m);
  }, Ze.typeOf = w, Ze;
}
var et = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var uf;
function Gv() {
  return uf || (uf = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, h = e ? Symbol.for("react.suspense_list") : 60120, g = e ? Symbol.for("react.memo") : 60115, y = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, b = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
    function w(F) {
      return typeof F == "string" || typeof F == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      F === r || F === u || F === s || F === o || F === f || F === h || typeof F == "object" && F !== null && (F.$$typeof === y || F.$$typeof === g || F.$$typeof === a || F.$$typeof === l || F.$$typeof === d || F.$$typeof === b || F.$$typeof === x || F.$$typeof === E || F.$$typeof === m);
    }
    function T(F) {
      if (typeof F == "object" && F !== null) {
        var he = F.$$typeof;
        switch (he) {
          case t:
            var fe = F.type;
            switch (fe) {
              case c:
              case u:
              case r:
              case s:
              case o:
              case f:
                return fe;
              default:
                var Se = fe && fe.$$typeof;
                switch (Se) {
                  case l:
                  case d:
                  case y:
                  case g:
                  case a:
                    return Se;
                  default:
                    return he;
                }
            }
          case n:
            return he;
        }
      }
    }
    var v = c, S = u, R = l, $ = a, I = t, p = d, O = r, P = y, A = g, D = n, _ = s, M = o, V = f, Y = !1;
    function U(F) {
      return Y || (Y = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), j(F) || T(F) === c;
    }
    function j(F) {
      return T(F) === u;
    }
    function W(F) {
      return T(F) === l;
    }
    function ee(F) {
      return T(F) === a;
    }
    function K(F) {
      return typeof F == "object" && F !== null && F.$$typeof === t;
    }
    function oe(F) {
      return T(F) === d;
    }
    function ne(F) {
      return T(F) === r;
    }
    function se(F) {
      return T(F) === y;
    }
    function de(F) {
      return T(F) === g;
    }
    function X(F) {
      return T(F) === n;
    }
    function ae(F) {
      return T(F) === s;
    }
    function Q(F) {
      return T(F) === o;
    }
    function ie(F) {
      return T(F) === f;
    }
    et.AsyncMode = v, et.ConcurrentMode = S, et.ContextConsumer = R, et.ContextProvider = $, et.Element = I, et.ForwardRef = p, et.Fragment = O, et.Lazy = P, et.Memo = A, et.Portal = D, et.Profiler = _, et.StrictMode = M, et.Suspense = V, et.isAsyncMode = U, et.isConcurrentMode = j, et.isContextConsumer = W, et.isContextProvider = ee, et.isElement = K, et.isForwardRef = oe, et.isFragment = ne, et.isLazy = se, et.isMemo = de, et.isPortal = X, et.isProfiler = ae, et.isStrictMode = Q, et.isSuspense = ie, et.isValidElementType = w, et.typeOf = T;
  }()), et;
}
var df;
function gh() {
  return df || (df = 1, process.env.NODE_ENV === "production" ? Ns.exports = Yv() : Ns.exports = Gv()), Ns.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var Yl, ff;
function Kv() {
  if (ff) return Yl;
  ff = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
  function r(s) {
    if (s == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(s);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var s = new String("abc");
      if (s[5] = "de", Object.getOwnPropertyNames(s)[0] === "5")
        return !1;
      for (var a = {}, l = 0; l < 10; l++)
        a["_" + String.fromCharCode(l)] = l;
      var c = Object.getOwnPropertyNames(a).map(function(d) {
        return a[d];
      });
      if (c.join("") !== "0123456789")
        return !1;
      var u = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(d) {
        u[d] = d;
      }), Object.keys(Object.assign({}, u)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return Yl = o() ? Object.assign : function(s, a) {
    for (var l, c = r(s), u, d = 1; d < arguments.length; d++) {
      l = Object(arguments[d]);
      for (var f in l)
        t.call(l, f) && (c[f] = l[f]);
      if (e) {
        u = e(l);
        for (var h = 0; h < u.length; h++)
          n.call(l, u[h]) && (c[u[h]] = l[u[h]]);
      }
    }
    return c;
  }, Yl;
}
var Gl, pf;
function Au() {
  if (pf) return Gl;
  pf = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return Gl = e, Gl;
}
var Kl, mf;
function yh() {
  return mf || (mf = 1, Kl = Function.call.bind(Object.prototype.hasOwnProperty)), Kl;
}
var Xl, hf;
function Xv() {
  if (hf) return Xl;
  hf = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ Au(), n = {}, r = /* @__PURE__ */ yh();
    e = function(s) {
      var a = "Warning: " + s;
      typeof console < "u" && console.error(a);
      try {
        throw new Error(a);
      } catch {
      }
    };
  }
  function o(s, a, l, c, u) {
    if (process.env.NODE_ENV !== "production") {
      for (var d in s)
        if (r(s, d)) {
          var f;
          try {
            if (typeof s[d] != "function") {
              var h = Error(
                (c || "React class") + ": " + l + " type `" + d + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof s[d] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw h.name = "Invariant Violation", h;
            }
            f = s[d](a, d, c, l, null, t);
          } catch (y) {
            f = y;
          }
          if (f && !(f instanceof Error) && e(
            (c || "React class") + ": type specification of " + l + " `" + d + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof f + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), f instanceof Error && !(f.message in n)) {
            n[f.message] = !0;
            var g = u ? u() : "";
            e(
              "Failed " + l + " type: " + f.message + (g ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (n = {});
  }, Xl = o, Xl;
}
var Ql, gf;
function Qv() {
  if (gf) return Ql;
  gf = 1;
  var e = gh(), t = Kv(), n = /* @__PURE__ */ Au(), r = /* @__PURE__ */ yh(), o = /* @__PURE__ */ Xv(), s = function() {
  };
  process.env.NODE_ENV !== "production" && (s = function(l) {
    var c = "Warning: " + l;
    typeof console < "u" && console.error(c);
    try {
      throw new Error(c);
    } catch {
    }
  });
  function a() {
    return null;
  }
  return Ql = function(l, c) {
    var u = typeof Symbol == "function" && Symbol.iterator, d = "@@iterator";
    function f(j) {
      var W = j && (u && j[u] || j[d]);
      if (typeof W == "function")
        return W;
    }
    var h = "<<anonymous>>", g = {
      array: x("array"),
      bigint: x("bigint"),
      bool: x("boolean"),
      func: x("function"),
      number: x("number"),
      object: x("object"),
      string: x("string"),
      symbol: x("symbol"),
      any: E(),
      arrayOf: w,
      element: T(),
      elementType: v(),
      instanceOf: S,
      node: p(),
      objectOf: $,
      oneOf: R,
      oneOfType: I,
      shape: P,
      exact: A
    };
    function y(j, W) {
      return j === W ? j !== 0 || 1 / j === 1 / W : j !== j && W !== W;
    }
    function m(j, W) {
      this.message = j, this.data = W && typeof W == "object" ? W : {}, this.stack = "";
    }
    m.prototype = Error.prototype;
    function b(j) {
      if (process.env.NODE_ENV !== "production")
        var W = {}, ee = 0;
      function K(ne, se, de, X, ae, Q, ie) {
        if (X = X || h, Q = Q || de, ie !== n) {
          if (c) {
            var F = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw F.name = "Invariant Violation", F;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var he = X + ":" + de;
            !W[he] && // Avoid spamming the console because they are often not actionable except for lib authors
            ee < 3 && (s(
              "You are manually calling a React.PropTypes validation function for the `" + Q + "` prop on `" + X + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), W[he] = !0, ee++);
          }
        }
        return se[de] == null ? ne ? se[de] === null ? new m("The " + ae + " `" + Q + "` is marked as required " + ("in `" + X + "`, but its value is `null`.")) : new m("The " + ae + " `" + Q + "` is marked as required in " + ("`" + X + "`, but its value is `undefined`.")) : null : j(se, de, X, ae, Q);
      }
      var oe = K.bind(null, !1);
      return oe.isRequired = K.bind(null, !0), oe;
    }
    function x(j) {
      function W(ee, K, oe, ne, se, de) {
        var X = ee[K], ae = M(X);
        if (ae !== j) {
          var Q = V(X);
          return new m(
            "Invalid " + ne + " `" + se + "` of type " + ("`" + Q + "` supplied to `" + oe + "`, expected ") + ("`" + j + "`."),
            { expectedType: j }
          );
        }
        return null;
      }
      return b(W);
    }
    function E() {
      return b(a);
    }
    function w(j) {
      function W(ee, K, oe, ne, se) {
        if (typeof j != "function")
          return new m("Property `" + se + "` of component `" + oe + "` has invalid PropType notation inside arrayOf.");
        var de = ee[K];
        if (!Array.isArray(de)) {
          var X = M(de);
          return new m("Invalid " + ne + " `" + se + "` of type " + ("`" + X + "` supplied to `" + oe + "`, expected an array."));
        }
        for (var ae = 0; ae < de.length; ae++) {
          var Q = j(de, ae, oe, ne, se + "[" + ae + "]", n);
          if (Q instanceof Error)
            return Q;
        }
        return null;
      }
      return b(W);
    }
    function T() {
      function j(W, ee, K, oe, ne) {
        var se = W[ee];
        if (!l(se)) {
          var de = M(se);
          return new m("Invalid " + oe + " `" + ne + "` of type " + ("`" + de + "` supplied to `" + K + "`, expected a single ReactElement."));
        }
        return null;
      }
      return b(j);
    }
    function v() {
      function j(W, ee, K, oe, ne) {
        var se = W[ee];
        if (!e.isValidElementType(se)) {
          var de = M(se);
          return new m("Invalid " + oe + " `" + ne + "` of type " + ("`" + de + "` supplied to `" + K + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return b(j);
    }
    function S(j) {
      function W(ee, K, oe, ne, se) {
        if (!(ee[K] instanceof j)) {
          var de = j.name || h, X = U(ee[K]);
          return new m("Invalid " + ne + " `" + se + "` of type " + ("`" + X + "` supplied to `" + oe + "`, expected ") + ("instance of `" + de + "`."));
        }
        return null;
      }
      return b(W);
    }
    function R(j) {
      if (!Array.isArray(j))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? s(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : s("Invalid argument supplied to oneOf, expected an array.")), a;
      function W(ee, K, oe, ne, se) {
        for (var de = ee[K], X = 0; X < j.length; X++)
          if (y(de, j[X]))
            return null;
        var ae = JSON.stringify(j, function(ie, F) {
          var he = V(F);
          return he === "symbol" ? String(F) : F;
        });
        return new m("Invalid " + ne + " `" + se + "` of value `" + String(de) + "` " + ("supplied to `" + oe + "`, expected one of " + ae + "."));
      }
      return b(W);
    }
    function $(j) {
      function W(ee, K, oe, ne, se) {
        if (typeof j != "function")
          return new m("Property `" + se + "` of component `" + oe + "` has invalid PropType notation inside objectOf.");
        var de = ee[K], X = M(de);
        if (X !== "object")
          return new m("Invalid " + ne + " `" + se + "` of type " + ("`" + X + "` supplied to `" + oe + "`, expected an object."));
        for (var ae in de)
          if (r(de, ae)) {
            var Q = j(de, ae, oe, ne, se + "." + ae, n);
            if (Q instanceof Error)
              return Q;
          }
        return null;
      }
      return b(W);
    }
    function I(j) {
      if (!Array.isArray(j))
        return process.env.NODE_ENV !== "production" && s("Invalid argument supplied to oneOfType, expected an instance of array."), a;
      for (var W = 0; W < j.length; W++) {
        var ee = j[W];
        if (typeof ee != "function")
          return s(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + Y(ee) + " at index " + W + "."
          ), a;
      }
      function K(oe, ne, se, de, X) {
        for (var ae = [], Q = 0; Q < j.length; Q++) {
          var ie = j[Q], F = ie(oe, ne, se, de, X, n);
          if (F == null)
            return null;
          F.data && r(F.data, "expectedType") && ae.push(F.data.expectedType);
        }
        var he = ae.length > 0 ? ", expected one of type [" + ae.join(", ") + "]" : "";
        return new m("Invalid " + de + " `" + X + "` supplied to " + ("`" + se + "`" + he + "."));
      }
      return b(K);
    }
    function p() {
      function j(W, ee, K, oe, ne) {
        return D(W[ee]) ? null : new m("Invalid " + oe + " `" + ne + "` supplied to " + ("`" + K + "`, expected a ReactNode."));
      }
      return b(j);
    }
    function O(j, W, ee, K, oe) {
      return new m(
        (j || "React class") + ": " + W + " type `" + ee + "." + K + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + oe + "`."
      );
    }
    function P(j) {
      function W(ee, K, oe, ne, se) {
        var de = ee[K], X = M(de);
        if (X !== "object")
          return new m("Invalid " + ne + " `" + se + "` of type `" + X + "` " + ("supplied to `" + oe + "`, expected `object`."));
        for (var ae in j) {
          var Q = j[ae];
          if (typeof Q != "function")
            return O(oe, ne, se, ae, V(Q));
          var ie = Q(de, ae, oe, ne, se + "." + ae, n);
          if (ie)
            return ie;
        }
        return null;
      }
      return b(W);
    }
    function A(j) {
      function W(ee, K, oe, ne, se) {
        var de = ee[K], X = M(de);
        if (X !== "object")
          return new m("Invalid " + ne + " `" + se + "` of type `" + X + "` " + ("supplied to `" + oe + "`, expected `object`."));
        var ae = t({}, ee[K], j);
        for (var Q in ae) {
          var ie = j[Q];
          if (r(j, Q) && typeof ie != "function")
            return O(oe, ne, se, Q, V(ie));
          if (!ie)
            return new m(
              "Invalid " + ne + " `" + se + "` key `" + Q + "` supplied to `" + oe + "`.\nBad object: " + JSON.stringify(ee[K], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(j), null, "  ")
            );
          var F = ie(de, Q, oe, ne, se + "." + Q, n);
          if (F)
            return F;
        }
        return null;
      }
      return b(W);
    }
    function D(j) {
      switch (typeof j) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !j;
        case "object":
          if (Array.isArray(j))
            return j.every(D);
          if (j === null || l(j))
            return !0;
          var W = f(j);
          if (W) {
            var ee = W.call(j), K;
            if (W !== j.entries) {
              for (; !(K = ee.next()).done; )
                if (!D(K.value))
                  return !1;
            } else
              for (; !(K = ee.next()).done; ) {
                var oe = K.value;
                if (oe && !D(oe[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function _(j, W) {
      return j === "symbol" ? !0 : W ? W["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && W instanceof Symbol : !1;
    }
    function M(j) {
      var W = typeof j;
      return Array.isArray(j) ? "array" : j instanceof RegExp ? "object" : _(W, j) ? "symbol" : W;
    }
    function V(j) {
      if (typeof j > "u" || j === null)
        return "" + j;
      var W = M(j);
      if (W === "object") {
        if (j instanceof Date)
          return "date";
        if (j instanceof RegExp)
          return "regexp";
      }
      return W;
    }
    function Y(j) {
      var W = V(j);
      switch (W) {
        case "array":
        case "object":
          return "an " + W;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + W;
        default:
          return W;
      }
    }
    function U(j) {
      return !j.constructor || !j.constructor.name ? h : j.constructor.name;
    }
    return g.checkPropTypes = o, g.resetWarningCache = o.resetWarningCache, g.PropTypes = g, g;
  }, Ql;
}
var Jl, yf;
function Jv() {
  if (yf) return Jl;
  yf = 1;
  var e = /* @__PURE__ */ Au();
  function t() {
  }
  function n() {
  }
  return n.resetWarningCache = t, Jl = function() {
    function r(a, l, c, u, d, f) {
      if (f !== e) {
        var h = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw h.name = "Invariant Violation", h;
      }
    }
    r.isRequired = r;
    function o() {
      return r;
    }
    var s = {
      array: r,
      bigint: r,
      bool: r,
      func: r,
      number: r,
      object: r,
      string: r,
      symbol: r,
      any: r,
      arrayOf: o,
      element: r,
      elementType: r,
      instanceOf: o,
      node: r,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: n,
      resetWarningCache: t
    };
    return s.PropTypes = s, s;
  }, Jl;
}
var bf;
function Zv() {
  if (bf) return Is.exports;
  if (bf = 1, process.env.NODE_ENV !== "production") {
    var e = gh(), t = !0;
    Is.exports = /* @__PURE__ */ Qv()(e.isElement, t);
  } else
    Is.exports = /* @__PURE__ */ Jv()();
  return Is.exports;
}
var e0 = /* @__PURE__ */ Zv();
const i = /* @__PURE__ */ qv(e0);
function bh(e) {
  var t, n, r = "";
  if (typeof e == "string" || typeof e == "number") r += e;
  else if (typeof e == "object") if (Array.isArray(e)) {
    var o = e.length;
    for (t = 0; t < o; t++) e[t] && (n = bh(e[t])) && (r && (r += " "), r += n);
  } else for (n in e) e[n] && (r && (r += " "), r += n);
  return r;
}
function Ee() {
  for (var e, t, n = 0, r = "", o = arguments.length; n < o; n++) (e = arguments[n]) && (t = bh(e)) && (r && (r += " "), r += t);
  return r;
}
function Ct(e, t, n = void 0) {
  const r = {};
  for (const o in e) {
    const s = e[o];
    let a = "", l = !0;
    for (let c = 0; c < s.length; c += 1) {
      const u = s[c];
      u && (a += (l === !0 ? "" : " ") + t(u), l = !1, n && n[u] && (a += " " + n[u]));
    }
    r[o] = a;
  }
  return r;
}
function Er(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((r) => n.searchParams.append("args[]", r)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
function xe(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : Er(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
var As = { exports: {} }, it = {};
/**
 * @license React
 * react-is.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var vf;
function t0() {
  if (vf) return it;
  vf = 1;
  var e = Symbol.for("react.transitional.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), o = Symbol.for("react.profiler"), s = Symbol.for("react.consumer"), a = Symbol.for("react.context"), l = Symbol.for("react.forward_ref"), c = Symbol.for("react.suspense"), u = Symbol.for("react.suspense_list"), d = Symbol.for("react.memo"), f = Symbol.for("react.lazy"), h = Symbol.for("react.view_transition"), g = Symbol.for("react.client.reference");
  function y(m) {
    if (typeof m == "object" && m !== null) {
      var b = m.$$typeof;
      switch (b) {
        case e:
          switch (m = m.type, m) {
            case n:
            case o:
            case r:
            case c:
            case u:
            case h:
              return m;
            default:
              switch (m = m && m.$$typeof, m) {
                case a:
                case l:
                case f:
                case d:
                  return m;
                case s:
                  return m;
                default:
                  return b;
              }
          }
        case t:
          return b;
      }
    }
  }
  return it.ContextConsumer = s, it.ContextProvider = a, it.Element = e, it.ForwardRef = l, it.Fragment = n, it.Lazy = f, it.Memo = d, it.Portal = t, it.Profiler = o, it.StrictMode = r, it.Suspense = c, it.SuspenseList = u, it.isContextConsumer = function(m) {
    return y(m) === s;
  }, it.isContextProvider = function(m) {
    return y(m) === a;
  }, it.isElement = function(m) {
    return typeof m == "object" && m !== null && m.$$typeof === e;
  }, it.isForwardRef = function(m) {
    return y(m) === l;
  }, it.isFragment = function(m) {
    return y(m) === n;
  }, it.isLazy = function(m) {
    return y(m) === f;
  }, it.isMemo = function(m) {
    return y(m) === d;
  }, it.isPortal = function(m) {
    return y(m) === t;
  }, it.isProfiler = function(m) {
    return y(m) === o;
  }, it.isStrictMode = function(m) {
    return y(m) === r;
  }, it.isSuspense = function(m) {
    return y(m) === c;
  }, it.isSuspenseList = function(m) {
    return y(m) === u;
  }, it.isValidElementType = function(m) {
    return typeof m == "string" || typeof m == "function" || m === n || m === o || m === r || m === c || m === u || typeof m == "object" && m !== null && (m.$$typeof === f || m.$$typeof === d || m.$$typeof === a || m.$$typeof === s || m.$$typeof === l || m.$$typeof === g || m.getModuleId !== void 0);
  }, it.typeOf = y, it;
}
var st = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var xf;
function n0() {
  return xf || (xf = 1, process.env.NODE_ENV !== "production" && function() {
    function e(m) {
      if (typeof m == "object" && m !== null) {
        var b = m.$$typeof;
        switch (b) {
          case t:
            switch (m = m.type, m) {
              case r:
              case s:
              case o:
              case u:
              case d:
              case g:
                return m;
              default:
                switch (m = m && m.$$typeof, m) {
                  case l:
                  case c:
                  case h:
                  case f:
                    return m;
                  case a:
                    return m;
                  default:
                    return b;
                }
            }
          case n:
            return b;
        }
      }
    }
    var t = Symbol.for("react.transitional.element"), n = Symbol.for("react.portal"), r = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), s = Symbol.for("react.profiler"), a = Symbol.for("react.consumer"), l = Symbol.for("react.context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), d = Symbol.for("react.suspense_list"), f = Symbol.for("react.memo"), h = Symbol.for("react.lazy"), g = Symbol.for("react.view_transition"), y = Symbol.for("react.client.reference");
    st.ContextConsumer = a, st.ContextProvider = l, st.Element = t, st.ForwardRef = c, st.Fragment = r, st.Lazy = h, st.Memo = f, st.Portal = n, st.Profiler = s, st.StrictMode = o, st.Suspense = u, st.SuspenseList = d, st.isContextConsumer = function(m) {
      return e(m) === a;
    }, st.isContextProvider = function(m) {
      return e(m) === l;
    }, st.isElement = function(m) {
      return typeof m == "object" && m !== null && m.$$typeof === t;
    }, st.isForwardRef = function(m) {
      return e(m) === c;
    }, st.isFragment = function(m) {
      return e(m) === r;
    }, st.isLazy = function(m) {
      return e(m) === h;
    }, st.isMemo = function(m) {
      return e(m) === f;
    }, st.isPortal = function(m) {
      return e(m) === n;
    }, st.isProfiler = function(m) {
      return e(m) === s;
    }, st.isStrictMode = function(m) {
      return e(m) === o;
    }, st.isSuspense = function(m) {
      return e(m) === u;
    }, st.isSuspenseList = function(m) {
      return e(m) === d;
    }, st.isValidElementType = function(m) {
      return typeof m == "string" || typeof m == "function" || m === r || m === s || m === o || m === u || m === d || typeof m == "object" && m !== null && (m.$$typeof === h || m.$$typeof === f || m.$$typeof === l || m.$$typeof === a || m.$$typeof === c || m.$$typeof === y || m.getModuleId !== void 0);
    }, st.typeOf = e;
  }()), st;
}
var wf;
function r0() {
  return wf || (wf = 1, process.env.NODE_ENV === "production" ? As.exports = /* @__PURE__ */ t0() : As.exports = /* @__PURE__ */ n0()), As.exports;
}
var On = /* @__PURE__ */ r0();
function or(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function vh(e) {
  if (/* @__PURE__ */ C.isValidElement(e) || On.isValidElementType(e) || !or(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = vh(e[n]);
  }), t;
}
function Tn(e, t, n = {
  clone: !0
}) {
  const r = n.clone ? {
    ...e
  } : e;
  return or(e) && or(t) && Object.keys(t).forEach((o) => {
    /* @__PURE__ */ C.isValidElement(t[o]) || On.isValidElementType(t[o]) ? r[o] = t[o] : or(t[o]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, o) && or(e[o]) ? r[o] = Tn(e[o], t[o], n) : n.clone ? r[o] = or(t[o]) ? vh(t[o]) : t[o] : r[o] = t[o];
  }), r;
}
function Fi(e, t) {
  return t ? Tn(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const Hr = process.env.NODE_ENV !== "production" ? i.oneOfType([i.number, i.string, i.object, i.array]) : {};
function o0(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((r) => r.startsWith("@container")).sort((r, o) => {
    var a, l;
    const s = /min-width:\s*([0-9.]+)/;
    return +(((a = r.match(s)) == null ? void 0 : a[1]) || 0) - +(((l = o.match(s)) == null ? void 0 : l[1]) || 0);
  });
  return n.length ? n.reduce((r, o) => {
    const s = t[o];
    return delete r[o], r[o] = s, r;
  }, {
    ...t
  }) : t;
}
function i0(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function s0(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : Er(18, `(${t})`));
    return null;
  }
  const [, r, o] = n, s = Number.isNaN(+r) ? r || 0 : +r;
  return e.containerQueries(o).up(s);
}
function a0(e) {
  const t = (s, a) => s.replace("@media", a ? `@container ${a}` : "@container");
  function n(s, a) {
    s.up = (...l) => t(e.breakpoints.up(...l), a), s.down = (...l) => t(e.breakpoints.down(...l), a), s.between = (...l) => t(e.breakpoints.between(...l), a), s.only = (...l) => t(e.breakpoints.only(...l), a), s.not = (...l) => {
      const c = t(e.breakpoints.not(...l), a);
      return c.includes("not all and") ? c.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : c;
    };
  }
  const r = {}, o = (s) => (n(r, s), r);
  return n(o), {
    ...e,
    containerQueries: o
  };
}
const Ha = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, Tf = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${Ha[e]}px)`
}, l0 = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : Ha[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function Cr(e, t, n) {
  const r = e.theme || {};
  if (Array.isArray(t)) {
    const s = r.breakpoints || Tf;
    return t.reduce((a, l, c) => (a[s.up(s.keys[c])] = n(t[c]), a), {});
  }
  if (typeof t == "object") {
    const s = r.breakpoints || Tf;
    return Object.keys(t).reduce((a, l) => {
      if (i0(s.keys, l)) {
        const c = s0(r.containerQueries ? r : l0, l);
        c && (a[c] = n(t[l], l));
      } else if (Object.keys(s.values || Ha).includes(l)) {
        const c = s.up(l);
        a[c] = n(t[l], l);
      } else {
        const c = l;
        a[c] = t[c];
      }
      return a;
    }, {});
  }
  return n(t);
}
function c0(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((r, o) => {
    const s = e.up(o);
    return r[s] = {}, r;
  }, {})) || {};
}
function u0(e, t) {
  return e.reduce((n, r) => {
    const o = n[r];
    return (!o || Object.keys(o).length === 0) && delete n[r], n;
  }, t);
}
function qa(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const r = `vars.${t}`.split(".").reduce((o, s) => o && o[s] ? o[s] : null, e);
    if (r != null)
      return r;
  }
  return t.split(".").reduce((r, o) => r && r[o] != null ? r[o] : null, e);
}
function pa(e, t, n, r = n) {
  let o;
  return typeof e == "function" ? o = e(n) : Array.isArray(e) ? o = e[n] || r : o = qa(e, n) || r, t && (o = t(o, r, e)), o;
}
function Mt(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: r,
    transform: o
  } = e, s = (a) => {
    if (a[t] == null)
      return null;
    const l = a[t], c = a.theme, u = qa(c, r) || {};
    return Cr(a, l, (f) => {
      let h = pa(u, o, f);
      return f === h && typeof f == "string" && (h = pa(u, o, `${t}${f === "default" ? "" : xe(f)}`, f)), n === !1 ? h : {
        [n]: h
      };
    });
  };
  return s.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: Hr
  } : {}, s.filterProps = [t], s;
}
function d0(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const f0 = {
  m: "margin",
  p: "padding"
}, p0 = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, Sf = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, m0 = d0((e) => {
  if (e.length > 2)
    if (Sf[e])
      e = Sf[e];
    else
      return [e];
  const [t, n] = e.split(""), r = f0[t], o = p0[n] || "";
  return Array.isArray(o) ? o.map((s) => r + s) : [r + o];
}), Ya = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], Ga = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], h0 = [...Ya, ...Ga];
function fs(e, t, n, r) {
  const o = qa(e, t, !0) ?? n;
  return typeof o == "number" || typeof o == "string" ? (s) => typeof s == "string" ? s : (process.env.NODE_ENV !== "production" && typeof s != "number" && console.error(`MUI: Expected ${r} argument to be a number or a string, got ${s}.`), typeof o == "string" ? o.startsWith("var(") && s === 0 ? 0 : o.startsWith("var(") && s === 1 ? o : `calc(${s} * ${o})` : o * s) : Array.isArray(o) ? (s) => {
    if (typeof s == "string")
      return s;
    const a = Math.abs(s);
    process.env.NODE_ENV !== "production" && (Number.isInteger(a) ? a > o.length - 1 && console.error([`MUI: The value provided (${a}) overflows.`, `The supported values are: ${JSON.stringify(o)}.`, `${a} > ${o.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const l = o[a];
    return s >= 0 ? l : typeof l == "number" ? -l : typeof l == "string" && l.startsWith("var(") ? `calc(-1 * ${l})` : `-${l}`;
  } : typeof o == "function" ? o : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${o}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function Mu(e) {
  return fs(e, "spacing", 8, "spacing");
}
function ps(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function g0(e, t) {
  return (n) => e.reduce((r, o) => (r[o] = ps(t, n), r), {});
}
function y0(e, t, n, r) {
  if (!t.includes(n))
    return null;
  const o = m0(n), s = g0(o, r), a = e[n];
  return Cr(e, a, s);
}
function xh(e, t) {
  const n = Mu(e.theme);
  return Object.keys(e).map((r) => y0(e, t, r, n)).reduce(Fi, {});
}
function Ot(e) {
  return xh(e, Ya);
}
Ot.propTypes = process.env.NODE_ENV !== "production" ? Ya.reduce((e, t) => (e[t] = Hr, e), {}) : {};
Ot.filterProps = Ya;
function Rt(e) {
  return xh(e, Ga);
}
Rt.propTypes = process.env.NODE_ENV !== "production" ? Ga.reduce((e, t) => (e[t] = Hr, e), {}) : {};
Rt.filterProps = Ga;
process.env.NODE_ENV !== "production" && h0.reduce((e, t) => (e[t] = Hr, e), {});
function Ka(...e) {
  const t = e.reduce((r, o) => (o.filterProps.forEach((s) => {
    r[s] = o;
  }), r), {}), n = (r) => Object.keys(r).reduce((o, s) => t[s] ? Fi(o, t[s](r)) : o, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((r, o) => Object.assign(r, o.propTypes), {}) : {}, n.filterProps = e.reduce((r, o) => r.concat(o.filterProps), []), n;
}
function In(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function jn(e, t) {
  return Mt({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const b0 = jn("border", In), v0 = jn("borderTop", In), x0 = jn("borderRight", In), w0 = jn("borderBottom", In), T0 = jn("borderLeft", In), S0 = jn("borderColor"), E0 = jn("borderTopColor"), C0 = jn("borderRightColor"), O0 = jn("borderBottomColor"), R0 = jn("borderLeftColor"), $0 = jn("outline", In), P0 = jn("outlineColor"), Xa = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = fs(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (r) => ({
      borderRadius: ps(t, r)
    });
    return Cr(e, e.borderRadius, n);
  }
  return null;
};
Xa.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: Hr
} : {};
Xa.filterProps = ["borderRadius"];
Ka(b0, v0, x0, w0, T0, S0, E0, C0, O0, R0, Xa, $0, P0);
const Qa = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = fs(e.theme, "spacing", 8, "gap"), n = (r) => ({
      gap: ps(t, r)
    });
    return Cr(e, e.gap, n);
  }
  return null;
};
Qa.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: Hr
} : {};
Qa.filterProps = ["gap"];
const Ja = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = fs(e.theme, "spacing", 8, "columnGap"), n = (r) => ({
      columnGap: ps(t, r)
    });
    return Cr(e, e.columnGap, n);
  }
  return null;
};
Ja.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: Hr
} : {};
Ja.filterProps = ["columnGap"];
const Za = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = fs(e.theme, "spacing", 8, "rowGap"), n = (r) => ({
      rowGap: ps(t, r)
    });
    return Cr(e, e.rowGap, n);
  }
  return null;
};
Za.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: Hr
} : {};
Za.filterProps = ["rowGap"];
const k0 = Mt({
  prop: "gridColumn"
}), I0 = Mt({
  prop: "gridRow"
}), N0 = Mt({
  prop: "gridAutoFlow"
}), A0 = Mt({
  prop: "gridAutoColumns"
}), M0 = Mt({
  prop: "gridAutoRows"
}), _0 = Mt({
  prop: "gridTemplateColumns"
}), D0 = Mt({
  prop: "gridTemplateRows"
}), B0 = Mt({
  prop: "gridTemplateAreas"
}), F0 = Mt({
  prop: "gridArea"
});
Ka(Qa, Ja, Za, k0, I0, N0, A0, M0, _0, D0, B0, F0);
function jo(e, t) {
  return t === "grey" ? t : e;
}
const j0 = Mt({
  prop: "color",
  themeKey: "palette",
  transform: jo
}), L0 = Mt({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: jo
}), V0 = Mt({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: jo
});
Ka(j0, L0, V0);
function vn(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const z0 = Mt({
  prop: "width",
  transform: vn
}), _u = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var o, s, a, l, c;
      const r = ((a = (s = (o = e.theme) == null ? void 0 : o.breakpoints) == null ? void 0 : s.values) == null ? void 0 : a[n]) || Ha[n];
      return r ? ((c = (l = e.theme) == null ? void 0 : l.breakpoints) == null ? void 0 : c.unit) !== "px" ? {
        maxWidth: `${r}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: r
      } : {
        maxWidth: vn(n)
      };
    };
    return Cr(e, e.maxWidth, t);
  }
  return null;
};
_u.filterProps = ["maxWidth"];
const W0 = Mt({
  prop: "minWidth",
  transform: vn
}), U0 = Mt({
  prop: "height",
  transform: vn
}), H0 = Mt({
  prop: "maxHeight",
  transform: vn
}), q0 = Mt({
  prop: "minHeight",
  transform: vn
});
Mt({
  prop: "size",
  cssProperty: "width",
  transform: vn
});
Mt({
  prop: "size",
  cssProperty: "height",
  transform: vn
});
const Y0 = Mt({
  prop: "boxSizing"
});
Ka(z0, _u, W0, U0, H0, q0, Y0);
const ms = {
  // borders
  border: {
    themeKey: "borders",
    transform: In
  },
  borderTop: {
    themeKey: "borders",
    transform: In
  },
  borderRight: {
    themeKey: "borders",
    transform: In
  },
  borderBottom: {
    themeKey: "borders",
    transform: In
  },
  borderLeft: {
    themeKey: "borders",
    transform: In
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: In
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: Xa
  },
  // palette
  color: {
    themeKey: "palette",
    transform: jo
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: jo
  },
  backgroundColor: {
    themeKey: "palette",
    transform: jo
  },
  // spacing
  p: {
    style: Rt
  },
  pt: {
    style: Rt
  },
  pr: {
    style: Rt
  },
  pb: {
    style: Rt
  },
  pl: {
    style: Rt
  },
  px: {
    style: Rt
  },
  py: {
    style: Rt
  },
  padding: {
    style: Rt
  },
  paddingTop: {
    style: Rt
  },
  paddingRight: {
    style: Rt
  },
  paddingBottom: {
    style: Rt
  },
  paddingLeft: {
    style: Rt
  },
  paddingX: {
    style: Rt
  },
  paddingY: {
    style: Rt
  },
  paddingInline: {
    style: Rt
  },
  paddingInlineStart: {
    style: Rt
  },
  paddingInlineEnd: {
    style: Rt
  },
  paddingBlock: {
    style: Rt
  },
  paddingBlockStart: {
    style: Rt
  },
  paddingBlockEnd: {
    style: Rt
  },
  m: {
    style: Ot
  },
  mt: {
    style: Ot
  },
  mr: {
    style: Ot
  },
  mb: {
    style: Ot
  },
  ml: {
    style: Ot
  },
  mx: {
    style: Ot
  },
  my: {
    style: Ot
  },
  margin: {
    style: Ot
  },
  marginTop: {
    style: Ot
  },
  marginRight: {
    style: Ot
  },
  marginBottom: {
    style: Ot
  },
  marginLeft: {
    style: Ot
  },
  marginX: {
    style: Ot
  },
  marginY: {
    style: Ot
  },
  marginInline: {
    style: Ot
  },
  marginInlineStart: {
    style: Ot
  },
  marginInlineEnd: {
    style: Ot
  },
  marginBlock: {
    style: Ot
  },
  marginBlockStart: {
    style: Ot
  },
  marginBlockEnd: {
    style: Ot
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: Qa
  },
  rowGap: {
    style: Za
  },
  columnGap: {
    style: Ja
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: vn
  },
  maxWidth: {
    style: _u
  },
  minWidth: {
    transform: vn
  },
  height: {
    transform: vn
  },
  maxHeight: {
    transform: vn
  },
  minHeight: {
    transform: vn
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function G0(...e) {
  const t = e.reduce((r, o) => r.concat(Object.keys(o)), []), n = new Set(t);
  return e.every((r) => n.size === Object.keys(r).length);
}
function K0(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function X0() {
  function e(n, r, o, s) {
    const a = {
      [n]: r,
      theme: o
    }, l = s[n];
    if (!l)
      return {
        [n]: r
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: d,
      style: f
    } = l;
    if (r == null)
      return null;
    if (u === "typography" && r === "inherit")
      return {
        [n]: r
      };
    const h = qa(o, u) || {};
    return f ? f(a) : Cr(a, r, (y) => {
      let m = pa(h, d, y);
      return y === m && typeof y == "string" && (m = pa(h, d, `${n}${y === "default" ? "" : xe(y)}`, y)), c === !1 ? m : {
        [c]: m
      };
    });
  }
  function t(n) {
    const {
      sx: r,
      theme: o = {}
    } = n || {};
    if (!r)
      return null;
    const s = o.unstable_sxConfig ?? ms;
    function a(l) {
      let c = l;
      if (typeof l == "function")
        c = l(o);
      else if (typeof l != "object")
        return l;
      if (!c)
        return null;
      const u = c0(o.breakpoints), d = Object.keys(u);
      let f = u;
      return Object.keys(c).forEach((h) => {
        const g = K0(c[h], o);
        if (g != null)
          if (typeof g == "object")
            if (s[h])
              f = Fi(f, e(h, g, o, s));
            else {
              const y = Cr({
                theme: o
              }, g, (m) => ({
                [h]: m
              }));
              G0(y, g) ? f[h] = t({
                sx: g,
                theme: o
              }) : f = Fi(f, y);
            }
          else
            f = Fi(f, e(h, g, o, s));
      }), o0(o, u0(d, f));
    }
    return Array.isArray(r) ? r.map(a) : a(r);
  }
  return t;
}
const Vr = X0();
Vr.filterProps = ["sx"];
const Q0 = (e) => {
  var r;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((r = e == null ? void 0 : e.theme) == null ? void 0 : r.unstable_sxConfig) ?? ms;
  return Object.keys(e).forEach((o) => {
    n[o] ? t.systemProps[o] = e[o] : t.otherProps[o] = e[o];
  }), t;
};
function wh(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: r,
    otherProps: o
  } = Q0(n);
  let s;
  return Array.isArray(t) ? s = [r, ...t] : typeof t == "function" ? s = (...a) => {
    const l = t(...a);
    return or(l) ? {
      ...r,
      ...l
    } : r;
  } : s = {
    ...r,
    ...t
  }, {
    ...o,
    sx: s
  };
}
function ma() {
  return ma = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var r in n) ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
    }
    return e;
  }, ma.apply(null, arguments);
}
function J0(e) {
  if (e.sheet)
    return e.sheet;
  for (var t = 0; t < document.styleSheets.length; t++)
    if (document.styleSheets[t].ownerNode === e)
      return document.styleSheets[t];
}
function Z0(e) {
  var t = document.createElement("style");
  return t.setAttribute("data-emotion", e.key), e.nonce !== void 0 && t.setAttribute("nonce", e.nonce), t.appendChild(document.createTextNode("")), t.setAttribute("data-s", ""), t;
}
var ex = /* @__PURE__ */ function() {
  function e(n) {
    var r = this;
    this._insertTag = function(o) {
      var s;
      r.tags.length === 0 ? r.insertionPoint ? s = r.insertionPoint.nextSibling : r.prepend ? s = r.container.firstChild : s = r.before : s = r.tags[r.tags.length - 1].nextSibling, r.container.insertBefore(o, s), r.tags.push(o);
    }, this.isSpeedy = n.speedy === void 0 ? !0 : n.speedy, this.tags = [], this.ctr = 0, this.nonce = n.nonce, this.key = n.key, this.container = n.container, this.prepend = n.prepend, this.insertionPoint = n.insertionPoint, this.before = null;
  }
  var t = e.prototype;
  return t.hydrate = function(r) {
    r.forEach(this._insertTag);
  }, t.insert = function(r) {
    this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(Z0(this));
    var o = this.tags[this.tags.length - 1];
    if (this.isSpeedy) {
      var s = J0(o);
      try {
        s.insertRule(r, s.cssRules.length);
      } catch {
      }
    } else
      o.appendChild(document.createTextNode(r));
    this.ctr++;
  }, t.flush = function() {
    this.tags.forEach(function(r) {
      var o;
      return (o = r.parentNode) == null ? void 0 : o.removeChild(r);
    }), this.tags = [], this.ctr = 0;
  }, e;
}(), Qt = "-ms-", ha = "-moz-", Xe = "-webkit-", Th = "comm", Du = "rule", Bu = "decl", tx = "@import", Sh = "@keyframes", nx = "@layer", rx = Math.abs, el = String.fromCharCode, ox = Object.assign;
function ix(e, t) {
  return qt(e, 0) ^ 45 ? (((t << 2 ^ qt(e, 0)) << 2 ^ qt(e, 1)) << 2 ^ qt(e, 2)) << 2 ^ qt(e, 3) : 0;
}
function Eh(e) {
  return e.trim();
}
function sx(e, t) {
  return (e = t.exec(e)) ? e[0] : e;
}
function Qe(e, t, n) {
  return e.replace(t, n);
}
function Fc(e, t) {
  return e.indexOf(t);
}
function qt(e, t) {
  return e.charCodeAt(t) | 0;
}
function Ki(e, t, n) {
  return e.slice(t, n);
}
function tr(e) {
  return e.length;
}
function Fu(e) {
  return e.length;
}
function Ms(e, t) {
  return t.push(e), e;
}
function ax(e, t) {
  return e.map(t).join("");
}
var tl = 1, Ho = 1, Ch = 0, gn = 0, Ft = 0, oi = "";
function nl(e, t, n, r, o, s, a) {
  return { value: e, root: t, parent: n, type: r, props: o, children: s, line: tl, column: Ho, length: a, return: "" };
}
function yi(e, t) {
  return ox(nl("", null, null, "", null, null, 0), e, { length: -e.length }, t);
}
function lx() {
  return Ft;
}
function cx() {
  return Ft = gn > 0 ? qt(oi, --gn) : 0, Ho--, Ft === 10 && (Ho = 1, tl--), Ft;
}
function Sn() {
  return Ft = gn < Ch ? qt(oi, gn++) : 0, Ho++, Ft === 10 && (Ho = 1, tl++), Ft;
}
function ar() {
  return qt(oi, gn);
}
function ta() {
  return gn;
}
function hs(e, t) {
  return Ki(oi, e, t);
}
function Xi(e) {
  switch (e) {
    // \0 \t \n \r \s whitespace token
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    // ! + , / > @ ~ isolate token
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    // ; { } breakpoint token
    case 59:
    case 123:
    case 125:
      return 4;
    // : accompanied token
    case 58:
      return 3;
    // " ' ( [ opening delimit token
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    // ) ] closing delimit token
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function Oh(e) {
  return tl = Ho = 1, Ch = tr(oi = e), gn = 0, [];
}
function Rh(e) {
  return oi = "", e;
}
function na(e) {
  return Eh(hs(gn - 1, jc(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function ux(e) {
  for (; (Ft = ar()) && Ft < 33; )
    Sn();
  return Xi(e) > 2 || Xi(Ft) > 3 ? "" : " ";
}
function dx(e, t) {
  for (; --t && Sn() && !(Ft < 48 || Ft > 102 || Ft > 57 && Ft < 65 || Ft > 70 && Ft < 97); )
    ;
  return hs(e, ta() + (t < 6 && ar() == 32 && Sn() == 32));
}
function jc(e) {
  for (; Sn(); )
    switch (Ft) {
      // ] ) " '
      case e:
        return gn;
      // " '
      case 34:
      case 39:
        e !== 34 && e !== 39 && jc(Ft);
        break;
      // (
      case 40:
        e === 41 && jc(e);
        break;
      // \
      case 92:
        Sn();
        break;
    }
  return gn;
}
function fx(e, t) {
  for (; Sn() && e + Ft !== 57; )
    if (e + Ft === 84 && ar() === 47)
      break;
  return "/*" + hs(t, gn - 1) + "*" + el(e === 47 ? e : Sn());
}
function px(e) {
  for (; !Xi(ar()); )
    Sn();
  return hs(e, gn);
}
function mx(e) {
  return Rh(ra("", null, null, null, [""], e = Oh(e), 0, [0], e));
}
function ra(e, t, n, r, o, s, a, l, c) {
  for (var u = 0, d = 0, f = a, h = 0, g = 0, y = 0, m = 1, b = 1, x = 1, E = 0, w = "", T = o, v = s, S = r, R = w; b; )
    switch (y = E, E = Sn()) {
      // (
      case 40:
        if (y != 108 && qt(R, f - 1) == 58) {
          Fc(R += Qe(na(E), "&", "&\f"), "&\f") != -1 && (x = -1);
          break;
        }
      // " ' [
      case 34:
      case 39:
      case 91:
        R += na(E);
        break;
      // \t \n \r \s
      case 9:
      case 10:
      case 13:
      case 32:
        R += ux(y);
        break;
      // \
      case 92:
        R += dx(ta() - 1, 7);
        continue;
      // /
      case 47:
        switch (ar()) {
          case 42:
          case 47:
            Ms(hx(fx(Sn(), ta()), t, n), c);
            break;
          default:
            R += "/";
        }
        break;
      // {
      case 123 * m:
        l[u++] = tr(R) * x;
      // } ; \0
      case 125 * m:
      case 59:
      case 0:
        switch (E) {
          // \0 }
          case 0:
          case 125:
            b = 0;
          // ;
          case 59 + d:
            x == -1 && (R = Qe(R, /\f/g, "")), g > 0 && tr(R) - f && Ms(g > 32 ? Cf(R + ";", r, n, f - 1) : Cf(Qe(R, " ", "") + ";", r, n, f - 2), c);
            break;
          // @ ;
          case 59:
            R += ";";
          // { rule/at-rule
          default:
            if (Ms(S = Ef(R, t, n, u, d, o, l, w, T = [], v = [], f), s), E === 123)
              if (d === 0)
                ra(R, t, S, S, T, s, f, l, v);
              else
                switch (h === 99 && qt(R, 3) === 110 ? 100 : h) {
                  // d l m s
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    ra(e, S, S, r && Ms(Ef(e, S, S, 0, 0, o, l, w, o, T = [], f), v), o, v, f, l, r ? T : v);
                    break;
                  default:
                    ra(R, S, S, S, [""], v, 0, l, v);
                }
        }
        u = d = g = 0, m = x = 1, w = R = "", f = a;
        break;
      // :
      case 58:
        f = 1 + tr(R), g = y;
      default:
        if (m < 1) {
          if (E == 123)
            --m;
          else if (E == 125 && m++ == 0 && cx() == 125)
            continue;
        }
        switch (R += el(E), E * m) {
          // &
          case 38:
            x = d > 0 ? 1 : (R += "\f", -1);
            break;
          // ,
          case 44:
            l[u++] = (tr(R) - 1) * x, x = 1;
            break;
          // @
          case 64:
            ar() === 45 && (R += na(Sn())), h = ar(), d = f = tr(w = R += px(ta())), E++;
            break;
          // -
          case 45:
            y === 45 && tr(R) == 2 && (m = 0);
        }
    }
  return s;
}
function Ef(e, t, n, r, o, s, a, l, c, u, d) {
  for (var f = o - 1, h = o === 0 ? s : [""], g = Fu(h), y = 0, m = 0, b = 0; y < r; ++y)
    for (var x = 0, E = Ki(e, f + 1, f = rx(m = a[y])), w = e; x < g; ++x)
      (w = Eh(m > 0 ? h[x] + " " + E : Qe(E, /&\f/g, h[x]))) && (c[b++] = w);
  return nl(e, t, n, o === 0 ? Du : l, c, u, d);
}
function hx(e, t, n) {
  return nl(e, t, n, Th, el(lx()), Ki(e, 2, -2), 0);
}
function Cf(e, t, n, r) {
  return nl(e, t, n, Bu, Ki(e, 0, r), Ki(e, r + 1, -1), r);
}
function Lo(e, t) {
  for (var n = "", r = Fu(e), o = 0; o < r; o++)
    n += t(e[o], o, e, t) || "";
  return n;
}
function gx(e, t, n, r) {
  switch (e.type) {
    case nx:
      if (e.children.length) break;
    case tx:
    case Bu:
      return e.return = e.return || e.value;
    case Th:
      return "";
    case Sh:
      return e.return = e.value + "{" + Lo(e.children, r) + "}";
    case Du:
      e.value = e.props.join(",");
  }
  return tr(n = Lo(e.children, r)) ? e.return = e.value + "{" + n + "}" : "";
}
function yx(e) {
  var t = Fu(e);
  return function(n, r, o, s) {
    for (var a = "", l = 0; l < t; l++)
      a += e[l](n, r, o, s) || "";
    return a;
  };
}
function bx(e) {
  return function(t) {
    t.root || (t = t.return) && e(t);
  };
}
function $h(e) {
  var t = /* @__PURE__ */ Object.create(null);
  return function(n) {
    return t[n] === void 0 && (t[n] = e(n)), t[n];
  };
}
var vx = function(t, n, r) {
  for (var o = 0, s = 0; o = s, s = ar(), o === 38 && s === 12 && (n[r] = 1), !Xi(s); )
    Sn();
  return hs(t, gn);
}, xx = function(t, n) {
  var r = -1, o = 44;
  do
    switch (Xi(o)) {
      case 0:
        o === 38 && ar() === 12 && (n[r] = 1), t[r] += vx(gn - 1, n, r);
        break;
      case 2:
        t[r] += na(o);
        break;
      case 4:
        if (o === 44) {
          t[++r] = ar() === 58 ? "&\f" : "", n[r] = t[r].length;
          break;
        }
      // fallthrough
      default:
        t[r] += el(o);
    }
  while (o = Sn());
  return t;
}, wx = function(t, n) {
  return Rh(xx(Oh(t), n));
}, Of = /* @__PURE__ */ new WeakMap(), Tx = function(t) {
  if (!(t.type !== "rule" || !t.parent || // positive .length indicates that this rule contains pseudo
  // negative .length indicates that this rule has been already prefixed
  t.length < 1)) {
    for (var n = t.value, r = t.parent, o = t.column === r.column && t.line === r.line; r.type !== "rule"; )
      if (r = r.parent, !r) return;
    if (!(t.props.length === 1 && n.charCodeAt(0) !== 58 && !Of.get(r)) && !o) {
      Of.set(t, !0);
      for (var s = [], a = wx(n, s), l = r.props, c = 0, u = 0; c < a.length; c++)
        for (var d = 0; d < l.length; d++, u++)
          t.props[u] = s[c] ? a[c].replace(/&\f/g, l[d]) : l[d] + " " + a[c];
    }
  }
}, Sx = function(t) {
  if (t.type === "decl") {
    var n = t.value;
    // charcode for l
    n.charCodeAt(0) === 108 && // charcode for b
    n.charCodeAt(2) === 98 && (t.return = "", t.value = "");
  }
};
function Ph(e, t) {
  switch (ix(e, t)) {
    // color-adjust
    case 5103:
      return Xe + "print-" + e + e;
    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return Xe + e + e;
    // appearance, user-select, transform, hyphens, text-size-adjust
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return Xe + e + ha + e + Qt + e + e;
    // flex, flex-direction
    case 6828:
    case 4268:
      return Xe + e + Qt + e + e;
    // order
    case 6165:
      return Xe + e + Qt + "flex-" + e + e;
    // align-items
    case 5187:
      return Xe + e + Qe(e, /(\w+).+(:[^]+)/, Xe + "box-$1$2" + Qt + "flex-$1$2") + e;
    // align-self
    case 5443:
      return Xe + e + Qt + "flex-item-" + Qe(e, /flex-|-self/, "") + e;
    // align-content
    case 4675:
      return Xe + e + Qt + "flex-line-pack" + Qe(e, /align-content|flex-|-self/, "") + e;
    // flex-shrink
    case 5548:
      return Xe + e + Qt + Qe(e, "shrink", "negative") + e;
    // flex-basis
    case 5292:
      return Xe + e + Qt + Qe(e, "basis", "preferred-size") + e;
    // flex-grow
    case 6060:
      return Xe + "box-" + Qe(e, "-grow", "") + Xe + e + Qt + Qe(e, "grow", "positive") + e;
    // transition
    case 4554:
      return Xe + Qe(e, /([^-])(transform)/g, "$1" + Xe + "$2") + e;
    // cursor
    case 6187:
      return Qe(Qe(Qe(e, /(zoom-|grab)/, Xe + "$1"), /(image-set)/, Xe + "$1"), e, "") + e;
    // background, background-image
    case 5495:
    case 3959:
      return Qe(e, /(image-set\([^]*)/, Xe + "$1$`$1");
    // justify-content
    case 4968:
      return Qe(Qe(e, /(.+:)(flex-)?(.*)/, Xe + "box-pack:$3" + Qt + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + Xe + e + e;
    // (margin|padding)-inline-(start|end)
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return Qe(e, /(.+)-inline(.+)/, Xe + "$1$2") + e;
    // (min|max)?(width|height|inline-size|block-size)
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (tr(e) - 1 - t > 6) switch (qt(e, t + 1)) {
        // (m)ax-content, (m)in-content
        case 109:
          if (qt(e, t + 4) !== 45) break;
        // (f)ill-available, (f)it-content
        case 102:
          return Qe(e, /(.+:)(.+)-([^]+)/, "$1" + Xe + "$2-$3$1" + ha + (qt(e, t + 3) == 108 ? "$3" : "$2-$3")) + e;
        // (s)tretch
        case 115:
          return ~Fc(e, "stretch") ? Ph(Qe(e, "stretch", "fill-available"), t) + e : e;
      }
      break;
    // position: sticky
    case 4949:
      if (qt(e, t + 1) !== 115) break;
    // display: (flex|inline-flex)
    case 6444:
      switch (qt(e, tr(e) - 3 - (~Fc(e, "!important") && 10))) {
        // stic(k)y
        case 107:
          return Qe(e, ":", ":" + Xe) + e;
        // (inline-)?fl(e)x
        case 101:
          return Qe(e, /(.+:)([^;!]+)(;|!.+)?/, "$1" + Xe + (qt(e, 14) === 45 ? "inline-" : "") + "box$3$1" + Xe + "$2$3$1" + Qt + "$2box$3") + e;
      }
      break;
    // writing-mode
    case 5936:
      switch (qt(e, t + 11)) {
        // vertical-l(r)
        case 114:
          return Xe + e + Qt + Qe(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
        // vertical-r(l)
        case 108:
          return Xe + e + Qt + Qe(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
        // horizontal(-)tb
        case 45:
          return Xe + e + Qt + Qe(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
      }
      return Xe + e + Qt + e + e;
  }
  return e;
}
var Ex = function(t, n, r, o) {
  if (t.length > -1 && !t.return) switch (t.type) {
    case Bu:
      t.return = Ph(t.value, t.length);
      break;
    case Sh:
      return Lo([yi(t, {
        value: Qe(t.value, "@", "@" + Xe)
      })], o);
    case Du:
      if (t.length) return ax(t.props, function(s) {
        switch (sx(s, /(::plac\w+|:read-\w+)/)) {
          // :read-(only|write)
          case ":read-only":
          case ":read-write":
            return Lo([yi(t, {
              props: [Qe(s, /:(read-\w+)/, ":" + ha + "$1")]
            })], o);
          // :placeholder
          case "::placeholder":
            return Lo([yi(t, {
              props: [Qe(s, /:(plac\w+)/, ":" + Xe + "input-$1")]
            }), yi(t, {
              props: [Qe(s, /:(plac\w+)/, ":" + ha + "$1")]
            }), yi(t, {
              props: [Qe(s, /:(plac\w+)/, Qt + "input-$1")]
            })], o);
        }
        return "";
      });
  }
}, Cx = [Ex], Ox = function(t) {
  var n = t.key;
  if (n === "css") {
    var r = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(r, function(m) {
      var b = m.getAttribute("data-emotion");
      b.indexOf(" ") !== -1 && (document.head.appendChild(m), m.setAttribute("data-s", ""));
    });
  }
  var o = t.stylisPlugins || Cx, s = {}, a, l = [];
  a = t.container || document.head, Array.prototype.forEach.call(
    // this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll('style[data-emotion^="' + n + ' "]'),
    function(m) {
      for (var b = m.getAttribute("data-emotion").split(" "), x = 1; x < b.length; x++)
        s[b[x]] = !0;
      l.push(m);
    }
  );
  var c, u = [Tx, Sx];
  {
    var d, f = [gx, bx(function(m) {
      d.insert(m);
    })], h = yx(u.concat(o, f)), g = function(b) {
      return Lo(mx(b), h);
    };
    c = function(b, x, E, w) {
      d = E, g(b ? b + "{" + x.styles + "}" : x.styles), w && (y.inserted[x.name] = !0);
    };
  }
  var y = {
    key: n,
    sheet: new ex({
      key: n,
      container: a,
      nonce: t.nonce,
      speedy: t.speedy,
      prepend: t.prepend,
      insertionPoint: t.insertionPoint
    }),
    nonce: t.nonce,
    inserted: s,
    registered: {},
    insert: c
  };
  return y.sheet.hydrate(l), y;
}, _s = { exports: {} }, tt = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Rf;
function Rx() {
  if (Rf) return tt;
  Rf = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, h = e ? Symbol.for("react.suspense_list") : 60120, g = e ? Symbol.for("react.memo") : 60115, y = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, b = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
  function w(v) {
    if (typeof v == "object" && v !== null) {
      var S = v.$$typeof;
      switch (S) {
        case t:
          switch (v = v.type, v) {
            case c:
            case u:
            case r:
            case s:
            case o:
            case f:
              return v;
            default:
              switch (v = v && v.$$typeof, v) {
                case l:
                case d:
                case y:
                case g:
                case a:
                  return v;
                default:
                  return S;
              }
          }
        case n:
          return S;
      }
    }
  }
  function T(v) {
    return w(v) === u;
  }
  return tt.AsyncMode = c, tt.ConcurrentMode = u, tt.ContextConsumer = l, tt.ContextProvider = a, tt.Element = t, tt.ForwardRef = d, tt.Fragment = r, tt.Lazy = y, tt.Memo = g, tt.Portal = n, tt.Profiler = s, tt.StrictMode = o, tt.Suspense = f, tt.isAsyncMode = function(v) {
    return T(v) || w(v) === c;
  }, tt.isConcurrentMode = T, tt.isContextConsumer = function(v) {
    return w(v) === l;
  }, tt.isContextProvider = function(v) {
    return w(v) === a;
  }, tt.isElement = function(v) {
    return typeof v == "object" && v !== null && v.$$typeof === t;
  }, tt.isForwardRef = function(v) {
    return w(v) === d;
  }, tt.isFragment = function(v) {
    return w(v) === r;
  }, tt.isLazy = function(v) {
    return w(v) === y;
  }, tt.isMemo = function(v) {
    return w(v) === g;
  }, tt.isPortal = function(v) {
    return w(v) === n;
  }, tt.isProfiler = function(v) {
    return w(v) === s;
  }, tt.isStrictMode = function(v) {
    return w(v) === o;
  }, tt.isSuspense = function(v) {
    return w(v) === f;
  }, tt.isValidElementType = function(v) {
    return typeof v == "string" || typeof v == "function" || v === r || v === u || v === s || v === o || v === f || v === h || typeof v == "object" && v !== null && (v.$$typeof === y || v.$$typeof === g || v.$$typeof === a || v.$$typeof === l || v.$$typeof === d || v.$$typeof === b || v.$$typeof === x || v.$$typeof === E || v.$$typeof === m);
  }, tt.typeOf = w, tt;
}
var nt = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var $f;
function $x() {
  return $f || ($f = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, h = e ? Symbol.for("react.suspense_list") : 60120, g = e ? Symbol.for("react.memo") : 60115, y = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, b = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
    function w(F) {
      return typeof F == "string" || typeof F == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      F === r || F === u || F === s || F === o || F === f || F === h || typeof F == "object" && F !== null && (F.$$typeof === y || F.$$typeof === g || F.$$typeof === a || F.$$typeof === l || F.$$typeof === d || F.$$typeof === b || F.$$typeof === x || F.$$typeof === E || F.$$typeof === m);
    }
    function T(F) {
      if (typeof F == "object" && F !== null) {
        var he = F.$$typeof;
        switch (he) {
          case t:
            var fe = F.type;
            switch (fe) {
              case c:
              case u:
              case r:
              case s:
              case o:
              case f:
                return fe;
              default:
                var Se = fe && fe.$$typeof;
                switch (Se) {
                  case l:
                  case d:
                  case y:
                  case g:
                  case a:
                    return Se;
                  default:
                    return he;
                }
            }
          case n:
            return he;
        }
      }
    }
    var v = c, S = u, R = l, $ = a, I = t, p = d, O = r, P = y, A = g, D = n, _ = s, M = o, V = f, Y = !1;
    function U(F) {
      return Y || (Y = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), j(F) || T(F) === c;
    }
    function j(F) {
      return T(F) === u;
    }
    function W(F) {
      return T(F) === l;
    }
    function ee(F) {
      return T(F) === a;
    }
    function K(F) {
      return typeof F == "object" && F !== null && F.$$typeof === t;
    }
    function oe(F) {
      return T(F) === d;
    }
    function ne(F) {
      return T(F) === r;
    }
    function se(F) {
      return T(F) === y;
    }
    function de(F) {
      return T(F) === g;
    }
    function X(F) {
      return T(F) === n;
    }
    function ae(F) {
      return T(F) === s;
    }
    function Q(F) {
      return T(F) === o;
    }
    function ie(F) {
      return T(F) === f;
    }
    nt.AsyncMode = v, nt.ConcurrentMode = S, nt.ContextConsumer = R, nt.ContextProvider = $, nt.Element = I, nt.ForwardRef = p, nt.Fragment = O, nt.Lazy = P, nt.Memo = A, nt.Portal = D, nt.Profiler = _, nt.StrictMode = M, nt.Suspense = V, nt.isAsyncMode = U, nt.isConcurrentMode = j, nt.isContextConsumer = W, nt.isContextProvider = ee, nt.isElement = K, nt.isForwardRef = oe, nt.isFragment = ne, nt.isLazy = se, nt.isMemo = de, nt.isPortal = X, nt.isProfiler = ae, nt.isStrictMode = Q, nt.isSuspense = ie, nt.isValidElementType = w, nt.typeOf = T;
  }()), nt;
}
var Pf;
function Px() {
  return Pf || (Pf = 1, process.env.NODE_ENV === "production" ? _s.exports = Rx() : _s.exports = $x()), _s.exports;
}
var Zl, kf;
function kx() {
  if (kf) return Zl;
  kf = 1;
  var e = Px(), t = {
    childContextTypes: !0,
    contextType: !0,
    contextTypes: !0,
    defaultProps: !0,
    displayName: !0,
    getDefaultProps: !0,
    getDerivedStateFromError: !0,
    getDerivedStateFromProps: !0,
    mixins: !0,
    propTypes: !0,
    type: !0
  }, n = {
    name: !0,
    length: !0,
    prototype: !0,
    caller: !0,
    callee: !0,
    arguments: !0,
    arity: !0
  }, r = {
    $$typeof: !0,
    render: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0
  }, o = {
    $$typeof: !0,
    compare: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0,
    type: !0
  }, s = {};
  s[e.ForwardRef] = r, s[e.Memo] = o;
  function a(y) {
    return e.isMemo(y) ? o : s[y.$$typeof] || t;
  }
  var l = Object.defineProperty, c = Object.getOwnPropertyNames, u = Object.getOwnPropertySymbols, d = Object.getOwnPropertyDescriptor, f = Object.getPrototypeOf, h = Object.prototype;
  function g(y, m, b) {
    if (typeof m != "string") {
      if (h) {
        var x = f(m);
        x && x !== h && g(y, x, b);
      }
      var E = c(m);
      u && (E = E.concat(u(m)));
      for (var w = a(y), T = a(m), v = 0; v < E.length; ++v) {
        var S = E[v];
        if (!n[S] && !(b && b[S]) && !(T && T[S]) && !(w && w[S])) {
          var R = d(m, S);
          try {
            l(y, S, R);
          } catch {
          }
        }
      }
    }
    return y;
  }
  return Zl = g, Zl;
}
kx();
var Ix = !0;
function kh(e, t, n) {
  var r = "";
  return n.split(" ").forEach(function(o) {
    e[o] !== void 0 ? t.push(e[o] + ";") : o && (r += o + " ");
  }), r;
}
var ju = function(t, n, r) {
  var o = t.key + "-" + n.name;
  // we only need to add the styles to the registered cache if the
  // class name could be used further down
  // the tree but if it's a string tag, we know it won't
  // so we don't have to add it to registered cache.
  // this improves memory usage since we can avoid storing the whole style string
  (r === !1 || // we need to always store it if we're in compat mode and
  // in node since emotion-server relies on whether a style is in
  // the registered cache to know whether a style is global or not
  // also, note that this check will be dead code eliminated in the browser
  Ix === !1) && t.registered[o] === void 0 && (t.registered[o] = n.styles);
}, Lu = function(t, n, r) {
  ju(t, n, r);
  var o = t.key + "-" + n.name;
  if (t.inserted[n.name] === void 0) {
    var s = n;
    do
      t.insert(n === s ? "." + o : "", s, t.sheet, !0), s = s.next;
    while (s !== void 0);
  }
};
function Nx(e) {
  for (var t = 0, n, r = 0, o = e.length; o >= 4; ++r, o -= 4)
    n = e.charCodeAt(r) & 255 | (e.charCodeAt(++r) & 255) << 8 | (e.charCodeAt(++r) & 255) << 16 | (e.charCodeAt(++r) & 255) << 24, n = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16), n ^= /* k >>> r: */
    n >>> 24, t = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  switch (o) {
    case 3:
      t ^= (e.charCodeAt(r + 2) & 255) << 16;
    case 2:
      t ^= (e.charCodeAt(r + 1) & 255) << 8;
    case 1:
      t ^= e.charCodeAt(r) & 255, t = /* Math.imul(h, m): */
      (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  }
  return t ^= t >>> 13, t = /* Math.imul(h, m): */
  (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16), ((t ^ t >>> 15) >>> 0).toString(36);
}
var Ax = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  scale: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, Mx = /[A-Z]|^ms/g, _x = /_EMO_([^_]+?)_([^]*?)_EMO_/g, Ih = function(t) {
  return t.charCodeAt(1) === 45;
}, If = function(t) {
  return t != null && typeof t != "boolean";
}, ec = /* @__PURE__ */ $h(function(e) {
  return Ih(e) ? e : e.replace(Mx, "-$&").toLowerCase();
}), Nf = function(t, n) {
  switch (t) {
    case "animation":
    case "animationName":
      if (typeof n == "string")
        return n.replace(_x, function(r, o, s) {
          return nr = {
            name: o,
            styles: s,
            next: nr
          }, o;
        });
  }
  return Ax[t] !== 1 && !Ih(t) && typeof n == "number" && n !== 0 ? n + "px" : n;
};
function Qi(e, t, n) {
  if (n == null)
    return "";
  var r = n;
  if (r.__emotion_styles !== void 0)
    return r;
  switch (typeof n) {
    case "boolean":
      return "";
    case "object": {
      var o = n;
      if (o.anim === 1)
        return nr = {
          name: o.name,
          styles: o.styles,
          next: nr
        }, o.name;
      var s = n;
      if (s.styles !== void 0) {
        var a = s.next;
        if (a !== void 0)
          for (; a !== void 0; )
            nr = {
              name: a.name,
              styles: a.styles,
              next: nr
            }, a = a.next;
        var l = s.styles + ";";
        return l;
      }
      return Dx(e, t, n);
    }
    case "function": {
      if (e !== void 0) {
        var c = nr, u = n(e);
        return nr = c, Qi(e, t, u);
      }
      break;
    }
  }
  var d = n;
  if (t == null)
    return d;
  var f = t[d];
  return f !== void 0 ? f : d;
}
function Dx(e, t, n) {
  var r = "";
  if (Array.isArray(n))
    for (var o = 0; o < n.length; o++)
      r += Qi(e, t, n[o]) + ";";
  else
    for (var s in n) {
      var a = n[s];
      if (typeof a != "object") {
        var l = a;
        t != null && t[l] !== void 0 ? r += s + "{" + t[l] + "}" : If(l) && (r += ec(s) + ":" + Nf(s, l) + ";");
      } else if (Array.isArray(a) && typeof a[0] == "string" && (t == null || t[a[0]] === void 0))
        for (var c = 0; c < a.length; c++)
          If(a[c]) && (r += ec(s) + ":" + Nf(s, a[c]) + ";");
      else {
        var u = Qi(e, t, a);
        switch (s) {
          case "animation":
          case "animationName": {
            r += ec(s) + ":" + u + ";";
            break;
          }
          default:
            r += s + "{" + u + "}";
        }
      }
    }
  return r;
}
var Af = /label:\s*([^\s;{]+)\s*(;|$)/g, nr;
function ii(e, t, n) {
  if (e.length === 1 && typeof e[0] == "object" && e[0] !== null && e[0].styles !== void 0)
    return e[0];
  var r = !0, o = "";
  nr = void 0;
  var s = e[0];
  if (s == null || s.raw === void 0)
    r = !1, o += Qi(n, t, s);
  else {
    var a = s;
    o += a[0];
  }
  for (var l = 1; l < e.length; l++)
    if (o += Qi(n, t, e[l]), r) {
      var c = s;
      o += c[l];
    }
  Af.lastIndex = 0;
  for (var u = "", d; (d = Af.exec(o)) !== null; )
    u += "-" + d[1];
  var f = Nx(o) + u;
  return {
    name: f,
    styles: o,
    next: nr
  };
}
var Bx = function(t) {
  return t();
}, Nh = C.useInsertionEffect ? C.useInsertionEffect : !1, Ah = Nh || Bx, Mf = Nh || C.useLayoutEffect, Mh = /* @__PURE__ */ C.createContext(
  // we're doing this to avoid preconstruct's dead code elimination in this one case
  // because this module is primarily intended for the browser and node
  // but it's also required in react native and similar environments sometimes
  // and we could have a special build just for that
  // but this is much easier and the native packages
  // might use a different theme context in the future anyway
  typeof HTMLElement < "u" ? /* @__PURE__ */ Ox({
    key: "css"
  }) : null
);
Mh.Provider;
var Vu = function(t) {
  return /* @__PURE__ */ Nu(function(n, r) {
    var o = zv(Mh);
    return t(n, o, r);
  });
}, si = /* @__PURE__ */ C.createContext({}), zu = {}.hasOwnProperty, Lc = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__", Fx = function(t, n) {
  var r = {};
  for (var o in n)
    zu.call(n, o) && (r[o] = n[o]);
  return r[Lc] = t, r;
}, jx = function(t) {
  var n = t.cache, r = t.serialized, o = t.isStringTag;
  return ju(n, r, o), Ah(function() {
    return Lu(n, r, o);
  }), null;
}, Lx = /* @__PURE__ */ Vu(function(e, t, n) {
  var r = e.css;
  typeof r == "string" && t.registered[r] !== void 0 && (r = t.registered[r]);
  var o = e[Lc], s = [r], a = "";
  typeof e.className == "string" ? a = kh(t.registered, s, e.className) : e.className != null && (a = e.className + " ");
  var l = ii(s, void 0, C.useContext(si));
  a += t.key + "-" + l.name;
  var c = {};
  for (var u in e)
    zu.call(e, u) && u !== "css" && u !== Lc && (c[u] = e[u]);
  return c.className = a, n && (c.ref = n), /* @__PURE__ */ C.createElement(C.Fragment, null, /* @__PURE__ */ C.createElement(jx, {
    cache: t,
    serialized: l,
    isStringTag: typeof o == "string"
  }), /* @__PURE__ */ C.createElement(o, c));
}), Vx = Lx, _f = function(t, n) {
  var r = arguments;
  if (n == null || !zu.call(n, "css"))
    return C.createElement.apply(void 0, r);
  var o = r.length, s = new Array(o);
  s[0] = Vx, s[1] = Fx(t, n);
  for (var a = 2; a < o; a++)
    s[a] = r[a];
  return C.createElement.apply(null, s);
};
(function(e) {
  var t;
  t || (t = e.JSX || (e.JSX = {}));
})(_f || (_f = {}));
var _h = /* @__PURE__ */ Vu(function(e, t) {
  var n = e.styles, r = ii([n], void 0, C.useContext(si)), o = C.useRef();
  return Mf(function() {
    var s = t.key + "-global", a = new t.sheet.constructor({
      key: s,
      nonce: t.sheet.nonce,
      container: t.sheet.container,
      speedy: t.sheet.isSpeedy
    }), l = !1, c = document.querySelector('style[data-emotion="' + s + " " + r.name + '"]');
    return t.sheet.tags.length && (a.before = t.sheet.tags[0]), c !== null && (l = !0, c.setAttribute("data-emotion", s), a.hydrate([c])), o.current = [a, l], function() {
      a.flush();
    };
  }, [t]), Mf(function() {
    var s = o.current, a = s[0], l = s[1];
    if (l) {
      s[1] = !1;
      return;
    }
    if (r.next !== void 0 && Lu(t, r.next, !0), a.tags.length) {
      var c = a.tags[a.tags.length - 1].nextElementSibling;
      a.before = c, a.flush();
    }
    t.insert("", r, a, !1);
  }, [t, r.name]), null;
});
function ai() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return ii(t);
}
function qr() {
  var e = ai.apply(void 0, arguments), t = "animation-" + e.name;
  return {
    name: t,
    styles: "@keyframes " + t + "{" + e.styles + "}",
    anim: 1,
    toString: function() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
}
var zx = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, Wx = /* @__PURE__ */ $h(
  function(e) {
    return zx.test(e) || e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && e.charCodeAt(2) < 91;
  }
  /* Z+1 */
), Ux = Wx, Hx = function(t) {
  return t !== "theme";
}, Df = function(t) {
  return typeof t == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  t.charCodeAt(0) > 96 ? Ux : Hx;
}, Bf = function(t, n, r) {
  var o;
  if (n) {
    var s = n.shouldForwardProp;
    o = t.__emotion_forwardProp && s ? function(a) {
      return t.__emotion_forwardProp(a) && s(a);
    } : s;
  }
  return typeof o != "function" && r && (o = t.__emotion_forwardProp), o;
}, qx = function(t) {
  var n = t.cache, r = t.serialized, o = t.isStringTag;
  return ju(n, r, o), Ah(function() {
    return Lu(n, r, o);
  }), null;
}, Yx = function e(t, n) {
  var r = t.__emotion_real === t, o = r && t.__emotion_base || t, s, a;
  n !== void 0 && (s = n.label, a = n.target);
  var l = Bf(t, n, r), c = l || Df(o), u = !c("as");
  return function() {
    var d = arguments, f = r && t.__emotion_styles !== void 0 ? t.__emotion_styles.slice(0) : [];
    if (s !== void 0 && f.push("label:" + s + ";"), d[0] == null || d[0].raw === void 0)
      f.push.apply(f, d);
    else {
      var h = d[0];
      f.push(h[0]);
      for (var g = d.length, y = 1; y < g; y++)
        f.push(d[y], h[y]);
    }
    var m = Vu(function(b, x, E) {
      var w = u && b.as || o, T = "", v = [], S = b;
      if (b.theme == null) {
        S = {};
        for (var R in b)
          S[R] = b[R];
        S.theme = C.useContext(si);
      }
      typeof b.className == "string" ? T = kh(x.registered, v, b.className) : b.className != null && (T = b.className + " ");
      var $ = ii(f.concat(v), x.registered, S);
      T += x.key + "-" + $.name, a !== void 0 && (T += " " + a);
      var I = u && l === void 0 ? Df(w) : c, p = {};
      for (var O in b)
        u && O === "as" || I(O) && (p[O] = b[O]);
      return p.className = T, E && (p.ref = E), /* @__PURE__ */ C.createElement(C.Fragment, null, /* @__PURE__ */ C.createElement(qx, {
        cache: x,
        serialized: $,
        isStringTag: typeof w == "string"
      }), /* @__PURE__ */ C.createElement(w, p));
    });
    return m.displayName = s !== void 0 ? s : "Styled(" + (typeof o == "string" ? o : o.displayName || o.name || "Component") + ")", m.defaultProps = t.defaultProps, m.__emotion_real = m, m.__emotion_base = o, m.__emotion_styles = f, m.__emotion_forwardProp = l, Object.defineProperty(m, "toString", {
      value: function() {
        return "." + a;
      }
    }), m.withComponent = function(b, x) {
      var E = e(b, ma({}, n, x, {
        shouldForwardProp: Bf(m, x, !0)
      }));
      return E.apply(void 0, f);
    }, m;
  };
}, Gx = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], ga = Yx.bind(null);
Gx.forEach(function(e) {
  ga[e] = ga(e);
});
function Kx(e) {
  return e == null || Object.keys(e).length === 0;
}
function Wu(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e;
  return /* @__PURE__ */ k(_h, {
    styles: typeof t == "function" ? (o) => t(Kx(o) ? n : o) : t
  });
}
process.env.NODE_ENV !== "production" && (Wu.propTypes = {
  defaultTheme: i.object,
  styles: i.oneOfType([i.array, i.string, i.object, i.func])
});
/**
 * @mui/styled-engine v7.0.1
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function Dh(e, t) {
  const n = ga(e, t);
  return process.env.NODE_ENV !== "production" ? (...r) => {
    const o = typeof e == "string" ? `"${e}"` : "component";
    return r.length === 0 ? console.error([`MUI: Seems like you called \`styled(${o})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : r.some((s) => s === void 0) && console.error(`MUI: the styled(${o})(...args) API requires all its args to be defined.`), n(...r);
  } : n;
}
function Xx(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const Ff = [];
function jf(e) {
  return Ff[0] = e, ii(Ff);
}
const Qx = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, r) => n.val - r.val), t.reduce((n, r) => ({
    ...n,
    [r.key]: r.val
  }), {});
};
function Jx(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: r = 5,
    ...o
  } = e, s = Qx(t), a = Object.keys(s);
  function l(h) {
    return `@media (min-width:${typeof t[h] == "number" ? t[h] : h}${n})`;
  }
  function c(h) {
    return `@media (max-width:${(typeof t[h] == "number" ? t[h] : h) - r / 100}${n})`;
  }
  function u(h, g) {
    const y = a.indexOf(g);
    return `@media (min-width:${typeof t[h] == "number" ? t[h] : h}${n}) and (max-width:${(y !== -1 && typeof t[a[y]] == "number" ? t[a[y]] : g) - r / 100}${n})`;
  }
  function d(h) {
    return a.indexOf(h) + 1 < a.length ? u(h, a[a.indexOf(h) + 1]) : l(h);
  }
  function f(h) {
    const g = a.indexOf(h);
    return g === 0 ? l(a[1]) : g === a.length - 1 ? c(a[g]) : u(h, a[a.indexOf(h) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: a,
    values: s,
    up: l,
    down: c,
    between: u,
    only: d,
    not: f,
    unit: n,
    ...o
  };
}
const Zx = {
  borderRadius: 4
};
function Bh(e = 8, t = Mu({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...r) => (process.env.NODE_ENV !== "production" && (r.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${r.length}`)), (r.length === 0 ? [1] : r).map((s) => {
    const a = t(s);
    return typeof a == "number" ? `${a}px` : a;
  }).join(" "));
  return n.mui = !0, n;
}
function ew(e, t) {
  var r;
  const n = this;
  if (n.vars) {
    if (!((r = n.colorSchemes) != null && r[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let o = n.getColorSchemeSelector(e);
    return o === "&" ? t : ((o.includes("data-") || o.includes(".")) && (o = `*:where(${o.replace(/\s*&$/, "")}) &`), {
      [o]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function rl(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: r = {},
    spacing: o,
    shape: s = {},
    ...a
  } = e, l = Jx(n), c = Bh(o);
  let u = Tn({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...r
    },
    spacing: c,
    shape: {
      ...Zx,
      ...s
    }
  }, a);
  return u = a0(u), u.applyStyles = ew, u = t.reduce((d, f) => Tn(d, f), u), u.unstable_sxConfig = {
    ...ms,
    ...a == null ? void 0 : a.unstable_sxConfig
  }, u.unstable_sx = function(f) {
    return Vr({
      sx: f,
      theme: this
    });
  }, u;
}
function tw(e) {
  return Object.keys(e).length === 0;
}
function Uu(e = null) {
  const t = C.useContext(si);
  return !t || tw(t) ? e : t;
}
const nw = rl();
function ol(e = nw) {
  return Uu(e);
}
function Fh({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const r = ol(n), o = typeof e == "function" ? e(t && r[t] || r) : e;
  return /* @__PURE__ */ k(Wu, {
    styles: o
  });
}
process.env.NODE_ENV !== "production" && (Fh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: i.object,
  /**
   * @ignore
   */
  styles: i.oneOfType([i.array, i.func, i.number, i.object, i.string, i.bool]),
  /**
   * @ignore
   */
  themeId: i.string
});
const Lf = (e) => e, rw = () => {
  let e = Lf;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = Lf;
    }
  };
}, jh = rw();
function ow(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: r = "MuiBox-root",
    generateClassName: o
  } = e, s = Dh("div", {
    shouldForwardProp: (l) => l !== "theme" && l !== "sx" && l !== "as"
  })(Vr);
  return /* @__PURE__ */ C.forwardRef(function(c, u) {
    const d = ol(n), {
      className: f,
      component: h = "div",
      ...g
    } = wh(c);
    return /* @__PURE__ */ k(s, {
      as: h,
      ref: u,
      className: Ee(f, o ? o(r) : r),
      theme: t && d[t] || d,
      ...g
    });
  });
}
const iw = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function gt(e, t, n = "Mui") {
  const r = iw[t];
  return r ? `${n}-${r}` : `${jh.generate(e)}-${t}`;
}
function wt(e, t, n = "Mui") {
  const r = {};
  return t.forEach((o) => {
    r[o] = gt(e, o, n);
  }), r;
}
function Lh(e, t = "") {
  return e.displayName || e.name || t;
}
function Vf(e, t, n) {
  const r = Lh(t);
  return e.displayName || (r !== "" ? `${n}(${r})` : n);
}
function sw(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return Lh(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case On.ForwardRef:
          return Vf(e, e.render, "ForwardRef");
        case On.Memo:
          return Vf(e, e.type, "memo");
        default:
          return;
      }
  }
}
function Vh(e) {
  const {
    variants: t,
    ...n
  } = e, r = {
    variants: t,
    style: jf(n),
    isProcessed: !0
  };
  return r.style === n || t && t.forEach((o) => {
    typeof o.style != "function" && (o.style = jf(o.style));
  }), r;
}
const aw = rl();
function tc(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function lw(e) {
  return e ? (t, n) => n[e] : null;
}
function cw(e, t, n) {
  e.theme = fw(e.theme) ? n : e.theme[t] || e.theme;
}
function oa(e, t) {
  const n = typeof t == "function" ? t(e) : t;
  if (Array.isArray(n))
    return n.flatMap((r) => oa(e, r));
  if (Array.isArray(n == null ? void 0 : n.variants)) {
    let r;
    if (n.isProcessed)
      r = n.style;
    else {
      const {
        variants: o,
        ...s
      } = n;
      r = s;
    }
    return zh(e, n.variants, [r]);
  }
  return n != null && n.isProcessed ? n.style : n;
}
function zh(e, t, n = []) {
  var o;
  let r;
  e: for (let s = 0; s < t.length; s += 1) {
    const a = t[s];
    if (typeof a.props == "function") {
      if (r ?? (r = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !a.props(r))
        continue;
    } else
      for (const l in a.props)
        if (e[l] !== a.props[l] && ((o = e.ownerState) == null ? void 0 : o[l]) !== a.props[l])
          continue e;
    typeof a.style == "function" ? (r ?? (r = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(a.style(r))) : n.push(a.style);
  }
  return n;
}
function Wh(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = aw,
    rootShouldForwardProp: r = tc,
    slotShouldForwardProp: o = tc
  } = e;
  function s(l) {
    cw(l, t, n);
  }
  return (l, c = {}) => {
    Xx(l, (v) => v.filter((S) => S !== Vr));
    const {
      name: u,
      slot: d,
      skipVariantsResolver: f,
      skipSx: h,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: g = lw(Uh(d)),
      ...y
    } = c, m = f !== void 0 ? f : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      d && d !== "Root" && d !== "root" || !1
    ), b = h || !1;
    let x = tc;
    d === "Root" || d === "root" ? x = r : d ? x = o : pw(l) && (x = void 0);
    const E = Dh(l, {
      shouldForwardProp: x,
      label: dw(u, d),
      ...y
    }), w = (v) => {
      if (typeof v == "function" && v.__emotion_real !== v)
        return function(R) {
          return oa(R, v);
        };
      if (or(v)) {
        const S = Vh(v);
        return S.variants ? function($) {
          return oa($, S);
        } : S.style;
      }
      return v;
    }, T = (...v) => {
      const S = [], R = v.map(w), $ = [];
      if (S.push(s), u && g && $.push(function(P) {
        var M, V;
        const D = (V = (M = P.theme.components) == null ? void 0 : M[u]) == null ? void 0 : V.styleOverrides;
        if (!D)
          return null;
        const _ = {};
        for (const Y in D)
          _[Y] = oa(P, D[Y]);
        return g(P, _);
      }), u && !m && $.push(function(P) {
        var _, M;
        const A = P.theme, D = (M = (_ = A == null ? void 0 : A.components) == null ? void 0 : _[u]) == null ? void 0 : M.variants;
        return D ? zh(P, D) : null;
      }), b || $.push(Vr), Array.isArray(R[0])) {
        const O = R.shift(), P = new Array(S.length).fill(""), A = new Array($.length).fill("");
        let D;
        D = [...P, ...O, ...A], D.raw = [...P, ...O.raw, ...A], S.unshift(D);
      }
      const I = [...S, ...R, ...$], p = E(...I);
      return l.muiName && (p.muiName = l.muiName), process.env.NODE_ENV !== "production" && (p.displayName = uw(u, d, l)), p;
    };
    return E.withConfig && (T.withConfig = E.withConfig), T;
  };
}
function uw(e, t, n) {
  return e ? `${e}${xe(t || "")}` : `Styled(${sw(n)})`;
}
function dw(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${Uh(t || "Root")}`), n;
}
function fw(e) {
  for (const t in e)
    return !1;
  return !0;
}
function pw(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function Uh(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
const mw = Wh();
function Ji(e, t) {
  const n = {
    ...t
  };
  for (const r in e)
    if (Object.prototype.hasOwnProperty.call(e, r)) {
      const o = r;
      if (o === "components" || o === "slots")
        n[o] = {
          ...e[o],
          ...n[o]
        };
      else if (o === "componentsProps" || o === "slotProps") {
        const s = e[o], a = t[o];
        if (!a)
          n[o] = s || {};
        else if (!s)
          n[o] = a;
        else {
          n[o] = {
            ...a
          };
          for (const l in s)
            if (Object.prototype.hasOwnProperty.call(s, l)) {
              const c = l;
              n[o][c] = Ji(s[c], a[c]);
            }
        }
      } else n[o] === void 0 && (n[o] = e[o]);
    }
  return n;
}
function Hh(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  return !t || !t.components || !t.components[n] || !t.components[n].defaultProps ? r : Ji(t.components[n].defaultProps, r);
}
function hw({
  props: e,
  name: t,
  defaultTheme: n,
  themeId: r
}) {
  let o = ol(n);
  return r && (o = o[r] || o), Hh({
    theme: o,
    name: t,
    props: e
  });
}
const dr = typeof window < "u" ? C.useLayoutEffect : C.useEffect;
function gw(e, t, n, r, o) {
  const [s, a] = C.useState(() => o && n ? n(e).matches : r ? r(e).matches : t);
  return dr(() => {
    if (!n)
      return;
    const l = n(e), c = () => {
      a(l.matches);
    };
    return c(), l.addEventListener("change", c), () => {
      l.removeEventListener("change", c);
    };
  }, [e, n]), s;
}
const yw = {
  ...C
}, qh = yw.useSyncExternalStore;
function bw(e, t, n, r, o) {
  const s = C.useCallback(() => t, [t]), a = C.useMemo(() => {
    if (o && n)
      return () => n(e).matches;
    if (r !== null) {
      const {
        matches: d
      } = r(e);
      return () => d;
    }
    return s;
  }, [s, e, r, o, n]), [l, c] = C.useMemo(() => {
    if (n === null)
      return [s, () => () => {
      }];
    const d = n(e);
    return [() => d.matches, (f) => (d.addEventListener("change", f), () => {
      d.removeEventListener("change", f);
    })];
  }, [s, n, e]);
  return qh(c, l, a);
}
function Yh(e = {}) {
  const {
    themeId: t
  } = e;
  return function(r, o = {}) {
    let s = Uu();
    s && t && (s = s[t] || s);
    const a = typeof window < "u" && typeof window.matchMedia < "u", {
      defaultMatches: l = !1,
      matchMedia: c = a ? window.matchMedia : null,
      ssrMatchMedia: u = null,
      noSsr: d = !1
    } = Hh({
      name: "MuiUseMediaQuery",
      props: o,
      theme: s
    });
    process.env.NODE_ENV !== "production" && typeof r == "function" && s === null && console.error(["MUI: The `query` argument provided is invalid.", "You are providing a function without a theme in the context.", "One of the parent elements needs to use a ThemeProvider."].join(`
`));
    let f = typeof r == "function" ? r(s) : r;
    f = f.replace(/^@media( ?)/m, "");
    const g = (qh !== void 0 ? bw : gw)(f, l, c, u, d);
    return process.env.NODE_ENV !== "production" && C.useDebugValue({
      query: f,
      match: g
    }), g;
  };
}
Yh();
function vw(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function Hu(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), vw(e, t, n);
}
function xw(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((r) => r + r)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((r, o) => o < 3 ? parseInt(r, 16) : Math.round(parseInt(r, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function zr(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return zr(xw(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : Er(9, e));
  let r = e.substring(t + 1, e.length - 1), o;
  if (n === "color") {
    if (r = r.split(" "), o = r.shift(), r.length === 4 && r[3].charAt(0) === "/" && (r[3] = r[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(o))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${o}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : Er(10, o));
  } else
    r = r.split(",");
  return r = r.map((s) => parseFloat(s)), {
    type: n,
    values: r,
    colorSpace: o
  };
}
const ww = (e) => {
  const t = zr(e);
  return t.values.slice(0, 3).map((n, r) => t.type.includes("hsl") && r !== 0 ? `${n}%` : n).join(" ");
}, Ii = (e, t) => {
  try {
    return ww(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function il(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: r
  } = e;
  return t.includes("rgb") ? r = r.map((o, s) => s < 3 ? parseInt(o, 10) : o) : t.includes("hsl") && (r[1] = `${r[1]}%`, r[2] = `${r[2]}%`), t.includes("color") ? r = `${n} ${r.join(" ")}` : r = `${r.join(", ")}`, `${t}(${r})`;
}
function Gh(e) {
  e = zr(e);
  const {
    values: t
  } = e, n = t[0], r = t[1] / 100, o = t[2] / 100, s = r * Math.min(o, 1 - o), a = (u, d = (u + n / 30) % 12) => o - s * Math.max(Math.min(d - 3, 9 - d, 1), -1);
  let l = "rgb";
  const c = [Math.round(a(0) * 255), Math.round(a(8) * 255), Math.round(a(4) * 255)];
  return e.type === "hsla" && (l += "a", c.push(t[3])), il({
    type: l,
    values: c
  });
}
function Vc(e) {
  e = zr(e);
  let t = e.type === "hsl" || e.type === "hsla" ? zr(Gh(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function zf(e, t) {
  const n = Vc(e), r = Vc(t);
  return (Math.max(n, r) + 0.05) / (Math.min(n, r) + 0.05);
}
function Yt(e, t) {
  return e = zr(e), t = Hu(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, il(e);
}
function Ds(e, t, n) {
  try {
    return Yt(e, t);
  } catch {
    return e;
  }
}
function li(e, t) {
  if (e = zr(e), t = Hu(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return il(e);
}
function lt(e, t, n) {
  try {
    return li(e, t);
  } catch {
    return e;
  }
}
function ci(e, t) {
  if (e = zr(e), t = Hu(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return il(e);
}
function ct(e, t, n) {
  try {
    return ci(e, t);
  } catch {
    return e;
  }
}
function Tw(e, t = 0.15) {
  return Vc(e) > 0.5 ? li(e, t) : ci(e, t);
}
function Bs(e, t, n) {
  try {
    return Tw(e, t);
  } catch {
    return e;
  }
}
function Yr(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...r) {
    return e(...r) || t(...r);
  };
}
function Sw(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function Kh(e, t, n, r, o) {
  const s = e[t], a = o || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  const c = s.type;
  return typeof c == "function" && !Sw(c) && (l = "Did you accidentally use a plain function component for an element instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Gr = Yr(i.element, Kh);
Gr.isRequired = Yr(i.element.isRequired, Kh);
function Ew(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function Cw(e, t, n, r, o) {
  const s = e[t], a = o || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  return typeof s == "function" && !Ew(s) && (l = "Did you accidentally provide a plain function component instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const qu = Yr(i.elementType, Cw), Ow = "exact-prop: ​";
function gs(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [Ow]: (t) => {
      const n = Object.keys(t).filter((r) => !e.hasOwnProperty(r));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((r) => `\`${r}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
function Or(e, t, n, r, o) {
  if (process.env.NODE_ENV === "production")
    return null;
  const s = e[t], a = o || t;
  return s == null ? null : s && s.nodeType !== 1 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
const Ir = i.oneOfType([i.func, i.object]);
function zc(...e) {
  return e.reduce((t, n) => n == null ? t : function(...o) {
    t.apply(this, o), n.apply(this, o);
  }, () => {
  });
}
function Yu(e, t = 166) {
  let n;
  function r(...o) {
    const s = () => {
      e.apply(this, o);
    };
    clearTimeout(n), n = setTimeout(s, t);
  }
  return r.clear = () => {
    clearTimeout(n);
  }, r;
}
function pn(e) {
  return e && e.ownerDocument || document;
}
function fr(e) {
  return pn(e).defaultView || window;
}
function Wc(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
let Wf = 0;
function Rw(e) {
  const [t, n] = C.useState(e), r = e || t;
  return C.useEffect(() => {
    t == null && (Wf += 1, n(`mui-${Wf}`));
  }, [t]), r;
}
const $w = {
  ...C
}, Uf = $w.useId;
function Gu(e) {
  if (Uf !== void 0) {
    const t = Uf();
    return e ?? t;
  }
  return Rw(e);
}
function Xh({
  controlled: e,
  default: t,
  name: n,
  state: r = "value"
}) {
  const {
    current: o
  } = C.useRef(e !== void 0), [s, a] = C.useState(t), l = o ? e : s;
  if (process.env.NODE_ENV !== "production") {
    C.useEffect(() => {
      o !== (e !== void 0) && console.error([`MUI: A component is changing the ${o ? "" : "un"}controlled ${r} state of ${n} to be ${o ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [r, n, e]);
    const {
      current: u
    } = C.useRef(t);
    C.useEffect(() => {
      !o && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${r} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = C.useCallback((u) => {
    o || a(u);
  }, []);
  return [l, c];
}
function lr(e) {
  const t = C.useRef(e);
  return dr(() => {
    t.current = e;
  }), C.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function nn(...e) {
  return C.useMemo(() => e.every((t) => t == null) ? null : (t) => {
    e.forEach((n) => {
      Wc(n, t);
    });
  }, e);
}
const Hf = {};
function Qh(e, t) {
  const n = C.useRef(Hf);
  return n.current === Hf && (n.current = e(t)), n;
}
const Pw = [];
function kw(e) {
  C.useEffect(e, Pw);
}
let Jh = class Zh {
  constructor() {
    Ar(this, "currentId", null);
    Ar(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    Ar(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new Zh();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
};
function Bo() {
  const e = Qh(Jh.create).current;
  return kw(e.disposeEffect), e;
}
function ya(e) {
  try {
    return e.matches(":focus-visible");
  } catch {
    process.env.NODE_ENV !== "production" && !/jsdom/.test(window.navigator.userAgent) && console.warn(["MUI: The `:focus-visible` pseudo class is not supported in this browser.", "Some components rely on this feature to work properly."].join(`
`));
  }
  return !1;
}
function Iw(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
const eg = (e) => {
  const t = C.useRef({});
  return C.useEffect(() => {
    t.current = e;
  }), t.current;
};
function Nw(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function tg(e, t, n, r) {
  const o = e[t];
  if (o == null || !Number.isInteger(o)) {
    const s = Nw(o);
    return new RangeError(`Invalid ${r} \`${t}\` of type \`${s}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function ng(e, t, ...n) {
  return e[t] === void 0 ? null : tg(e, t, ...n);
}
function Uc() {
  return null;
}
ng.isRequired = tg;
Uc.isRequired = Uc;
const Ku = process.env.NODE_ENV === "production" ? Uc : ng;
function Aw(e) {
  return typeof e == "string";
}
function rg(e, t, n) {
  return e === void 0 || Aw(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function og(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((r) => r.match(/^on[A-Z]/) && typeof e[r] == "function" && !t.includes(r)).forEach((r) => {
    n[r] = e[r];
  }), n;
}
function qf(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function ig(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: r,
    externalForwardedProps: o,
    className: s
  } = e;
  if (!t) {
    const g = Ee(n == null ? void 0 : n.className, s, o == null ? void 0 : o.className, r == null ? void 0 : r.className), y = {
      ...n == null ? void 0 : n.style,
      ...o == null ? void 0 : o.style,
      ...r == null ? void 0 : r.style
    }, m = {
      ...n,
      ...o,
      ...r
    };
    return g.length > 0 && (m.className = g), Object.keys(y).length > 0 && (m.style = y), {
      props: m,
      internalRef: void 0
    };
  }
  const a = og({
    ...o,
    ...r
  }), l = qf(r), c = qf(o), u = t(a), d = Ee(u == null ? void 0 : u.className, n == null ? void 0 : n.className, s, o == null ? void 0 : o.className, r == null ? void 0 : r.className), f = {
    ...u == null ? void 0 : u.style,
    ...n == null ? void 0 : n.style,
    ...o == null ? void 0 : o.style,
    ...r == null ? void 0 : r.style
  }, h = {
    ...u,
    ...n,
    ...c,
    ...l
  };
  return d.length > 0 && (h.className = d), Object.keys(f).length > 0 && (h.style = f), {
    props: h,
    internalRef: u.ref
  };
}
function sg(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function Hc(e) {
  var f;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: r,
    skipResolvingSlotProps: o = !1,
    ...s
  } = e, a = o ? {} : sg(n, r), {
    props: l,
    internalRef: c
  } = ig({
    ...s,
    externalSlotProps: a
  }), u = nn(c, a == null ? void 0 : a.ref, (f = e.additionalProps) == null ? void 0 : f.ref);
  return rg(t, {
    ...l,
    ref: u
  }, r);
}
function bo(e) {
  var t;
  return parseInt(C.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
const Xu = /* @__PURE__ */ C.createContext(null);
process.env.NODE_ENV !== "production" && (Xu.displayName = "ThemeContext");
function Qu() {
  const e = C.useContext(Xu);
  return process.env.NODE_ENV !== "production" && C.useDebugValue(e), e;
}
const Mw = typeof Symbol == "function" && Symbol.for, _w = Mw ? Symbol.for("mui.nested") : "__THEME_NESTED__";
function Dw(e, t) {
  if (typeof t == "function") {
    const n = t(e);
    return process.env.NODE_ENV !== "production" && (n || console.error(["MUI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join(`
`))), n;
  }
  return {
    ...e,
    ...t
  };
}
function ba(e) {
  const {
    children: t,
    theme: n
  } = e, r = Qu();
  process.env.NODE_ENV !== "production" && r === null && typeof n == "function" && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const o = C.useMemo(() => {
    const s = r === null ? {
      ...n
    } : Dw(r, n);
    return s != null && (s[_w] = r !== null), s;
  }, [n, r]);
  return /* @__PURE__ */ k(Xu.Provider, {
    value: o,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (ba.propTypes = {
  /**
   * Your component tree.
   */
  children: i.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: i.oneOfType([i.object, i.func]).isRequired
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (ba.propTypes = gs(ba.propTypes));
const ag = /* @__PURE__ */ C.createContext();
function lg({
  value: e,
  ...t
}) {
  return /* @__PURE__ */ k(ag.Provider, {
    value: e ?? !0,
    ...t
  });
}
process.env.NODE_ENV !== "production" && (lg.propTypes = {
  children: i.node,
  value: i.bool
});
const sl = () => C.useContext(ag) ?? !1, cg = /* @__PURE__ */ C.createContext(void 0);
function ug({
  value: e,
  children: t
}) {
  return /* @__PURE__ */ k(cg.Provider, {
    value: e,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (ug.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * @ignore
   */
  value: i.object
});
function Bw(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  if (!t || !t.components || !t.components[n])
    return r;
  const o = t.components[n];
  return o.defaultProps ? Ji(o.defaultProps, r) : !o.styleOverrides && !o.variants ? Ji(o, r) : r;
}
function Fw({
  props: e,
  name: t
}) {
  const n = C.useContext(cg);
  return Bw({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
const Yf = {};
function Gf(e, t, n, r = !1) {
  return C.useMemo(() => {
    const o = e && t[e] || t;
    if (typeof n == "function") {
      const s = n(o), a = e ? {
        ...t,
        [e]: s
      } : s;
      return r ? () => a : a;
    }
    return e ? {
      ...t,
      [e]: n
    } : {
      ...t,
      ...n
    };
  }, [e, t, n, r]);
}
function Zi(e) {
  const {
    children: t,
    theme: n,
    themeId: r
  } = e, o = Uu(Yf), s = Qu() || Yf;
  process.env.NODE_ENV !== "production" && (o === null && typeof n == "function" || r && o && !o[r] && typeof n == "function") && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const a = Gf(r, o, n), l = Gf(r, s, n, !0), c = (r ? a[r] : a).direction === "rtl";
  return /* @__PURE__ */ k(ba, {
    theme: l,
    children: /* @__PURE__ */ k(si.Provider, {
      value: a,
      children: /* @__PURE__ */ k(lg, {
        value: c,
        children: /* @__PURE__ */ k(ug, {
          value: r ? a[r].components : a.components,
          children: t
        })
      })
    })
  });
}
process.env.NODE_ENV !== "production" && (Zi.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Your component tree.
   */
  children: i.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: i.oneOfType([i.func, i.object]).isRequired,
  /**
   * The design system's unique id for getting the corresponded theme when there are multiple design systems.
   */
  themeId: i.string
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (Zi.propTypes = gs(Zi.propTypes));
const Kf = {
  theme: void 0
};
function jw(e) {
  let t, n;
  return function(o) {
    let s = t;
    return (s === void 0 || o.theme !== n) && (Kf.theme = o.theme, s = Vh(e(Kf)), t = s, n = o.theme), s;
  };
}
const Ju = "mode", Zu = "color-scheme", Lw = "data-color-scheme";
function Vw(e) {
  const {
    defaultMode: t = "system",
    defaultLightColorScheme: n = "light",
    defaultDarkColorScheme: r = "dark",
    modeStorageKey: o = Ju,
    colorSchemeStorageKey: s = Zu,
    attribute: a = Lw,
    colorSchemeNode: l = "document.documentElement",
    nonce: c
  } = e || {};
  let u = "", d = a;
  if (a === "class" && (d = ".%s"), a === "data" && (d = "[data-%s]"), d.startsWith(".")) {
    const h = d.substring(1);
    u += `${l}.classList.remove('${h}'.replace('%s', light), '${h}'.replace('%s', dark));
      ${l}.classList.add('${h}'.replace('%s', colorScheme));`;
  }
  const f = d.match(/\[([^\]]+)\]/);
  if (f) {
    const [h, g] = f[1].split("=");
    g || (u += `${l}.removeAttribute('${h}'.replace('%s', light));
      ${l}.removeAttribute('${h}'.replace('%s', dark));`), u += `
      ${l}.setAttribute('${h}'.replace('%s', colorScheme), ${g ? `${g}.replace('%s', colorScheme)` : '""'});`;
  } else
    u += `${l}.setAttribute('${d}', colorScheme);`;
  return /* @__PURE__ */ k("script", {
    suppressHydrationWarning: !0,
    nonce: typeof window > "u" ? c : "",
    dangerouslySetInnerHTML: {
      __html: `(function() {
try {
  let colorScheme = '';
  const mode = localStorage.getItem('${o}') || '${t}';
  const dark = localStorage.getItem('${s}-dark') || '${r}';
  const light = localStorage.getItem('${s}-light') || '${n}';
  if (mode === 'system') {
    // handle system mode
    const mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = dark
    } else {
      colorScheme = light
    }
  }
  if (mode === 'light') {
    colorScheme = light;
  }
  if (mode === 'dark') {
    colorScheme = dark;
  }
  if (colorScheme) {
    ${u}
  }
} catch(e){}})();`
    }
  }, "mui-color-scheme-init");
}
function zw() {
}
const Ww = ({
  key: e,
  storageWindow: t
}) => (!t && typeof window < "u" && (t = window), {
  get(n) {
    if (typeof window > "u")
      return;
    if (!t)
      return n;
    let r;
    try {
      r = t.localStorage.getItem(e);
    } catch {
    }
    return r || n;
  },
  set: (n) => {
    if (t)
      try {
        t.localStorage.setItem(e, n);
      } catch {
      }
  },
  subscribe: (n) => {
    if (!t)
      return zw;
    const r = (o) => {
      const s = o.newValue;
      o.key === e && n(s);
    };
    return t.addEventListener("storage", r), () => {
      t.removeEventListener("storage", r);
    };
  }
});
function nc() {
}
function Xf(e) {
  if (typeof window < "u" && typeof window.matchMedia == "function" && e === "system")
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
function dg(e, t) {
  if (e.mode === "light" || e.mode === "system" && e.systemMode === "light")
    return t("light");
  if (e.mode === "dark" || e.mode === "system" && e.systemMode === "dark")
    return t("dark");
}
function Uw(e) {
  return dg(e, (t) => {
    if (t === "light")
      return e.lightColorScheme;
    if (t === "dark")
      return e.darkColorScheme;
  });
}
function Hw(e) {
  const {
    defaultMode: t = "light",
    defaultLightColorScheme: n,
    defaultDarkColorScheme: r,
    supportedColorSchemes: o = [],
    modeStorageKey: s = Ju,
    colorSchemeStorageKey: a = Zu,
    storageWindow: l = typeof window > "u" ? void 0 : window,
    storageManager: c = Ww,
    noSsr: u = !1
  } = e, d = o.join(","), f = o.length > 1, h = C.useMemo(() => c == null ? void 0 : c({
    key: s,
    storageWindow: l
  }), [c, s, l]), g = C.useMemo(() => c == null ? void 0 : c({
    key: `${a}-light`,
    storageWindow: l
  }), [c, a, l]), y = C.useMemo(() => c == null ? void 0 : c({
    key: `${a}-dark`,
    storageWindow: l
  }), [c, a, l]), [m, b] = C.useState(() => {
    const $ = (h == null ? void 0 : h.get(t)) || t, I = (g == null ? void 0 : g.get(n)) || n, p = (y == null ? void 0 : y.get(r)) || r;
    return {
      mode: $,
      systemMode: Xf($),
      lightColorScheme: I,
      darkColorScheme: p
    };
  }), [x, E] = C.useState(u || !f);
  C.useEffect(() => {
    E(!0);
  }, []);
  const w = Uw(m), T = C.useCallback(($) => {
    b((I) => {
      if ($ === I.mode)
        return I;
      const p = $ ?? t;
      return h == null || h.set(p), {
        ...I,
        mode: p,
        systemMode: Xf(p)
      };
    });
  }, [h, t]), v = C.useCallback(($) => {
    $ ? typeof $ == "string" ? $ && !d.includes($) ? console.error(`\`${$}\` does not exist in \`theme.colorSchemes\`.`) : b((I) => {
      const p = {
        ...I
      };
      return dg(I, (O) => {
        O === "light" && (g == null || g.set($), p.lightColorScheme = $), O === "dark" && (y == null || y.set($), p.darkColorScheme = $);
      }), p;
    }) : b((I) => {
      const p = {
        ...I
      }, O = $.light === null ? n : $.light, P = $.dark === null ? r : $.dark;
      return O && (d.includes(O) ? (p.lightColorScheme = O, g == null || g.set(O)) : console.error(`\`${O}\` does not exist in \`theme.colorSchemes\`.`)), P && (d.includes(P) ? (p.darkColorScheme = P, y == null || y.set(P)) : console.error(`\`${P}\` does not exist in \`theme.colorSchemes\`.`)), p;
    }) : b((I) => (g == null || g.set(n), y == null || y.set(r), {
      ...I,
      lightColorScheme: n,
      darkColorScheme: r
    }));
  }, [d, g, y, n, r]), S = C.useCallback(($) => {
    m.mode === "system" && b((I) => {
      const p = $ != null && $.matches ? "dark" : "light";
      return I.systemMode === p ? I : {
        ...I,
        systemMode: p
      };
    });
  }, [m.mode]), R = C.useRef(S);
  return R.current = S, C.useEffect(() => {
    if (typeof window.matchMedia != "function" || !f)
      return;
    const $ = (...p) => R.current(...p), I = window.matchMedia("(prefers-color-scheme: dark)");
    return I.addListener($), $(I), () => {
      I.removeListener($);
    };
  }, [f]), C.useEffect(() => {
    if (f) {
      const $ = (h == null ? void 0 : h.subscribe((O) => {
        (!O || ["light", "dark", "system"].includes(O)) && T(O || t);
      })) || nc, I = (g == null ? void 0 : g.subscribe((O) => {
        (!O || d.match(O)) && v({
          light: O
        });
      })) || nc, p = (y == null ? void 0 : y.subscribe((O) => {
        (!O || d.match(O)) && v({
          dark: O
        });
      })) || nc;
      return () => {
        $(), I(), p();
      };
    }
  }, [v, T, d, t, l, f, h, g, y]), {
    ...m,
    mode: x ? m.mode : void 0,
    systemMode: x ? m.systemMode : void 0,
    colorScheme: x ? w : void 0,
    setMode: T,
    setColorScheme: v
  };
}
const qw = "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
function Yw(e) {
  const {
    themeId: t,
    /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */
    theme: n = {},
    modeStorageKey: r = Ju,
    colorSchemeStorageKey: o = Zu,
    disableTransitionOnChange: s = !1,
    defaultColorScheme: a,
    resolveTheme: l
  } = e, c = {
    allColorSchemes: [],
    colorScheme: void 0,
    darkColorScheme: void 0,
    lightColorScheme: void 0,
    mode: void 0,
    setColorScheme: () => {
    },
    setMode: () => {
    },
    systemMode: void 0
  }, u = /* @__PURE__ */ C.createContext(void 0);
  process.env.NODE_ENV !== "production" && (u.displayName = "ColorSchemeContext");
  const d = () => C.useContext(u) || c, f = {}, h = {};
  function g(x) {
    var B, z, G, pe;
    const {
      children: E,
      theme: w,
      modeStorageKey: T = r,
      colorSchemeStorageKey: v = o,
      disableTransitionOnChange: S = s,
      storageManager: R,
      storageWindow: $ = typeof window > "u" ? void 0 : window,
      documentNode: I = typeof document > "u" ? void 0 : document,
      colorSchemeNode: p = typeof document > "u" ? void 0 : document.documentElement,
      disableNestedContext: O = !1,
      disableStyleSheetGeneration: P = !1,
      defaultMode: A = "system",
      forceThemeRerender: D = !1,
      noSsr: _
    } = x, M = C.useRef(!1), V = Qu(), Y = C.useContext(u), U = !!Y && !O, j = C.useMemo(() => w || (typeof n == "function" ? n() : n), [w]), W = j[t], ee = W || j, {
      colorSchemes: K = f,
      components: oe = h,
      cssVarPrefix: ne
    } = ee, se = Object.keys(K).filter((me) => !!K[me]).join(","), de = C.useMemo(() => se.split(","), [se]), X = typeof a == "string" ? a : a.light, ae = typeof a == "string" ? a : a.dark, Q = K[X] && K[ae] ? A : ((z = (B = K[ee.defaultColorScheme]) == null ? void 0 : B.palette) == null ? void 0 : z.mode) || ((G = ee.palette) == null ? void 0 : G.mode), {
      mode: ie,
      setMode: F,
      systemMode: he,
      lightColorScheme: fe,
      darkColorScheme: Se,
      colorScheme: Le,
      setColorScheme: Ae
    } = Hw({
      supportedColorSchemes: de,
      defaultLightColorScheme: X,
      defaultDarkColorScheme: ae,
      modeStorageKey: T,
      colorSchemeStorageKey: v,
      defaultMode: Q,
      storageManager: R,
      storageWindow: $,
      noSsr: _
    });
    let Ie = ie, Re = Le;
    U && (Ie = Y.mode, Re = Y.colorScheme), process.env.NODE_ENV !== "production" && D && !ee.vars && console.warn(["MUI: The `forceThemeRerender` prop should only be used with CSS theme variables.", "Note that it will slow down the app when changing between modes, so only do this when you cannot find a better solution."].join(`
`));
    let Be = Re || ee.defaultColorScheme;
    ee.vars && !D && (Be = ee.defaultColorScheme);
    const Oe = C.useMemo(() => {
      var Z;
      const me = ((Z = ee.generateThemeVars) == null ? void 0 : Z.call(ee)) || ee.vars, re = {
        ...ee,
        components: oe,
        colorSchemes: K,
        cssVarPrefix: ne,
        vars: me
      };
      if (typeof re.generateSpacing == "function" && (re.spacing = re.generateSpacing()), Be) {
        const te = K[Be];
        te && typeof te == "object" && Object.keys(te).forEach((ye) => {
          te[ye] && typeof te[ye] == "object" ? re[ye] = {
            ...re[ye],
            ...te[ye]
          } : re[ye] = te[ye];
        });
      }
      return l ? l(re) : re;
    }, [ee, Be, oe, K, ne]), N = ee.colorSchemeSelector;
    dr(() => {
      if (Re && p && N && N !== "media") {
        const me = N;
        let re = N;
        if (me === "class" && (re = ".%s"), me === "data" && (re = "[data-%s]"), me != null && me.startsWith("data-") && !me.includes("%s") && (re = `[${me}="%s"]`), re.startsWith("."))
          p.classList.remove(...de.map((Z) => re.substring(1).replace("%s", Z))), p.classList.add(re.substring(1).replace("%s", Re));
        else {
          const Z = re.replace("%s", Re).match(/\[([^\]]+)\]/);
          if (Z) {
            const [te, ye] = Z[1].split("=");
            ye || de.forEach((Te) => {
              p.removeAttribute(te.replace(Re, Te));
            }), p.setAttribute(te, ye ? ye.replace(/"|'/g, "") : "");
          } else
            p.setAttribute(re, Re);
        }
      }
    }, [Re, N, p, de]), C.useEffect(() => {
      let me;
      if (S && M.current && I) {
        const re = I.createElement("style");
        re.appendChild(I.createTextNode(qw)), I.head.appendChild(re), window.getComputedStyle(I.body), me = setTimeout(() => {
          I.head.removeChild(re);
        }, 1);
      }
      return () => {
        clearTimeout(me);
      };
    }, [Re, S, I]), C.useEffect(() => (M.current = !0, () => {
      M.current = !1;
    }), []);
    const q = C.useMemo(() => ({
      allColorSchemes: de,
      colorScheme: Re,
      darkColorScheme: Se,
      lightColorScheme: fe,
      mode: Ie,
      setColorScheme: Ae,
      setMode: process.env.NODE_ENV === "production" ? F : (me) => {
        Oe.colorSchemeSelector === "media" && console.error(["MUI: The `setMode` function has no effect if `colorSchemeSelector` is `media` (`media` is the default value).", "To toggle the mode manually, please configure `colorSchemeSelector` to use a class or data attribute.", "To learn more, visit https://mui.com/material-ui/customization/css-theme-variables/configuration/#toggling-dark-mode-manually"].join(`
`)), F(me);
      },
      systemMode: he
    }), [de, Re, Se, fe, Ie, Ae, F, he, Oe.colorSchemeSelector]);
    let J = !0;
    (P || ee.cssVariables === !1 || U && (V == null ? void 0 : V.cssVarPrefix) === ne) && (J = !1);
    const H = /* @__PURE__ */ Pe(C.Fragment, {
      children: [/* @__PURE__ */ k(Zi, {
        themeId: W ? t : void 0,
        theme: Oe,
        children: E
      }), J && /* @__PURE__ */ k(Wu, {
        styles: ((pe = Oe.generateStyleSheets) == null ? void 0 : pe.call(Oe)) || []
      })]
    });
    return U ? H : /* @__PURE__ */ k(u.Provider, {
      value: q,
      children: H
    });
  }
  process.env.NODE_ENV !== "production" && (g.propTypes = {
    /**
     * The component tree.
     */
    children: i.node,
    /**
     * The node used to attach the color-scheme attribute
     */
    colorSchemeNode: i.any,
    /**
     * localStorage key used to store `colorScheme`
     */
    colorSchemeStorageKey: i.string,
    /**
     * The default mode when the storage is empty,
     * require the theme to have `colorSchemes` with light and dark.
     */
    defaultMode: i.string,
    /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */
    disableNestedContext: i.bool,
    /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */
    disableStyleSheetGeneration: i.bool,
    /**
     * Disable CSS transitions when switching between modes or color schemes.
     */
    disableTransitionOnChange: i.bool,
    /**
     * The document to attach the attribute to.
     */
    documentNode: i.any,
    /**
     * If `true`, theme values are recalculated when the mode changes.
     */
    forceThemeRerender: i.bool,
    /**
     * The key in the local storage used to store current color scheme.
     */
    modeStorageKey: i.string,
    /**
     * If `true`, the mode will be the same value as the storage without an extra rerendering after the hydration.
     * You should use this option in conjuction with `InitColorSchemeScript` component.
     */
    noSsr: i.bool,
    /**
     * The storage manager to be used for storing the mode and color scheme
     * @default using `window.localStorage`
     */
    storageManager: i.func,
    /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */
    storageWindow: i.any,
    /**
     * The calculated theme object that will be passed through context.
     */
    theme: i.object
  });
  const y = typeof a == "string" ? a : a.light, m = typeof a == "string" ? a : a.dark;
  return {
    CssVarsProvider: g,
    useColorScheme: d,
    getInitColorSchemeScript: (x) => Vw({
      colorSchemeStorageKey: o,
      defaultLightColorScheme: y,
      defaultDarkColorScheme: m,
      modeStorageKey: r,
      ...x
    })
  };
}
function Gw(e = "") {
  function t(...r) {
    if (!r.length)
      return "";
    const o = r[0];
    return typeof o == "string" && !o.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${o}${t(...r.slice(1))})` : `, ${o}`;
  }
  return (r, ...o) => `var(--${e ? `${e}-` : ""}${r}${t(...o)})`;
}
const Qf = (e, t, n, r = []) => {
  let o = e;
  t.forEach((s, a) => {
    a === t.length - 1 ? Array.isArray(o) ? o[Number(s)] = n : o && typeof o == "object" && (o[s] = n) : o && typeof o == "object" && (o[s] || (o[s] = r.includes(s) ? [] : {}), o = o[s]);
  });
}, Kw = (e, t, n) => {
  function r(o, s = [], a = []) {
    Object.entries(o).forEach(([l, c]) => {
      (!n || n && !n([...s, l])) && c != null && (typeof c == "object" && Object.keys(c).length > 0 ? r(c, [...s, l], Array.isArray(c) ? [...a, l] : a) : t([...s, l], c, a));
    });
  }
  r(e);
}, Xw = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((r) => e.includes(r)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function rc(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: r
  } = t || {}, o = {}, s = {}, a = {};
  return Kw(
    e,
    (l, c, u) => {
      if ((typeof c == "string" || typeof c == "number") && (!r || !r(l, c))) {
        const d = `--${n ? `${n}-` : ""}${l.join("-")}`, f = Xw(l, c);
        Object.assign(o, {
          [d]: f
        }), Qf(s, l, `var(${d})`, u), Qf(a, l, `var(${d}, ${f})`, u);
      }
    },
    (l) => l[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: o,
    vars: s,
    varsWithDefaults: a
  };
}
function Qw(e, t = {}) {
  const {
    getSelector: n = b,
    disableCssColorScheme: r,
    colorSchemeSelector: o
  } = t, {
    colorSchemes: s = {},
    components: a,
    defaultColorScheme: l = "light",
    ...c
  } = e, {
    vars: u,
    css: d,
    varsWithDefaults: f
  } = rc(c, t);
  let h = f;
  const g = {}, {
    [l]: y,
    ...m
  } = s;
  if (Object.entries(m || {}).forEach(([w, T]) => {
    const {
      vars: v,
      css: S,
      varsWithDefaults: R
    } = rc(T, t);
    h = Tn(h, R), g[w] = {
      css: S,
      vars: v
    };
  }), y) {
    const {
      css: w,
      vars: T,
      varsWithDefaults: v
    } = rc(y, t);
    h = Tn(h, v), g[l] = {
      css: w,
      vars: T
    };
  }
  function b(w, T) {
    var S, R;
    let v = o;
    if (o === "class" && (v = ".%s"), o === "data" && (v = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (v = `[${o}="%s"]`), w) {
      if (v === "media")
        return e.defaultColorScheme === w ? ":root" : {
          [`@media (prefers-color-scheme: ${((R = (S = s[w]) == null ? void 0 : S.palette) == null ? void 0 : R.mode) || w})`]: {
            ":root": T
          }
        };
      if (v)
        return e.defaultColorScheme === w ? `:root, ${v.replace("%s", String(w))}` : v.replace("%s", String(w));
    }
    return ":root";
  }
  return {
    vars: h,
    generateThemeVars: () => {
      let w = {
        ...u
      };
      return Object.entries(g).forEach(([, {
        vars: T
      }]) => {
        w = Tn(w, T);
      }), w;
    },
    generateStyleSheets: () => {
      var $, I;
      const w = [], T = e.defaultColorScheme || "light";
      function v(p, O) {
        Object.keys(O).length && w.push(typeof p == "string" ? {
          [p]: {
            ...O
          }
        } : p);
      }
      v(n(void 0, {
        ...d
      }), d);
      const {
        [T]: S,
        ...R
      } = g;
      if (S) {
        const {
          css: p
        } = S, O = (I = ($ = s[T]) == null ? void 0 : $.palette) == null ? void 0 : I.mode, P = !r && O ? {
          colorScheme: O,
          ...p
        } : {
          ...p
        };
        v(n(T, {
          ...P
        }), P);
      }
      return Object.entries(R).forEach(([p, {
        css: O
      }]) => {
        var D, _;
        const P = (_ = (D = s[p]) == null ? void 0 : D.palette) == null ? void 0 : _.mode, A = !r && P ? {
          colorScheme: P,
          ...O
        } : {
          ...O
        };
        v(n(p, {
          ...A
        }), A);
      }), w;
    }
  };
}
function Jw(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
const Zw = rl(), eT = mw("div", {
  name: "MuiContainer",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`maxWidth${xe(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
  }
}), tT = (e) => hw({
  props: e,
  name: "MuiContainer",
  defaultTheme: Zw
}), nT = (e, t) => {
  const n = (c) => gt(t, c), {
    classes: r,
    fixed: o,
    disableGutters: s,
    maxWidth: a
  } = e, l = {
    root: ["root", a && `maxWidth${xe(String(a))}`, o && "fixed", s && "disableGutters"]
  };
  return Ct(l, n, r);
};
function rT(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: t = eT,
    useThemeProps: n = tT,
    componentName: r = "MuiContainer"
  } = e, o = t(({
    theme: a,
    ownerState: l
  }) => ({
    width: "100%",
    marginLeft: "auto",
    boxSizing: "border-box",
    marginRight: "auto",
    ...!l.disableGutters && {
      paddingLeft: a.spacing(2),
      paddingRight: a.spacing(2),
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [a.breakpoints.up("sm")]: {
        paddingLeft: a.spacing(3),
        paddingRight: a.spacing(3)
      }
    }
  }), ({
    theme: a,
    ownerState: l
  }) => l.fixed && Object.keys(a.breakpoints.values).reduce((c, u) => {
    const d = u, f = a.breakpoints.values[d];
    return f !== 0 && (c[a.breakpoints.up(d)] = {
      maxWidth: `${f}${a.breakpoints.unit}`
    }), c;
  }, {}), ({
    theme: a,
    ownerState: l
  }) => ({
    // @ts-ignore module augmentation fails if custom breakpoints are used
    ...l.maxWidth === "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [a.breakpoints.up("xs")]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: Math.max(a.breakpoints.values.xs, 444)
      }
    },
    ...l.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used
    l.maxWidth !== "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [a.breakpoints.up(l.maxWidth)]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: `${a.breakpoints.values[l.maxWidth]}${a.breakpoints.unit}`
      }
    }
  })), s = /* @__PURE__ */ C.forwardRef(function(l, c) {
    const u = n(l), {
      className: d,
      component: f = "div",
      disableGutters: h = !1,
      fixed: g = !1,
      maxWidth: y = "lg",
      classes: m,
      ...b
    } = u, x = {
      ...u,
      component: f,
      disableGutters: h,
      fixed: g,
      maxWidth: y
    }, E = nT(x, r);
    return (
      // @ts-ignore theme is injected by the styled util
      /* @__PURE__ */ k(o, {
        as: f,
        ownerState: x,
        className: Ee(E.root, d),
        ref: c,
        ...b
      })
    );
  });
  return process.env.NODE_ENV !== "production" && (s.propTypes = {
    children: i.node,
    classes: i.object,
    className: i.string,
    component: i.elementType,
    disableGutters: i.bool,
    fixed: i.bool,
    maxWidth: i.oneOfType([i.oneOf(["xs", "sm", "md", "lg", "xl", !1]), i.string]),
    sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
  }), s;
}
const es = {
  black: "#000",
  white: "#fff"
}, oT = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, To = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, So = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, bi = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, Eo = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, Co = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, Oo = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
};
function fg() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: es.white,
      default: es.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const iT = fg();
function pg() {
  return {
    text: {
      primary: es.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: es.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const Jf = pg();
function Zf(e, t, n, r) {
  const o = r.light || r, s = r.dark || r * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = ci(e.main, o) : t === "dark" && (e.dark = li(e.main, s)));
}
function sT(e = "light") {
  return e === "dark" ? {
    main: Eo[200],
    light: Eo[50],
    dark: Eo[400]
  } : {
    main: Eo[700],
    light: Eo[400],
    dark: Eo[800]
  };
}
function aT(e = "light") {
  return e === "dark" ? {
    main: To[200],
    light: To[50],
    dark: To[400]
  } : {
    main: To[500],
    light: To[300],
    dark: To[700]
  };
}
function lT(e = "light") {
  return e === "dark" ? {
    main: So[500],
    light: So[300],
    dark: So[700]
  } : {
    main: So[700],
    light: So[400],
    dark: So[800]
  };
}
function cT(e = "light") {
  return e === "dark" ? {
    main: Co[400],
    light: Co[300],
    dark: Co[700]
  } : {
    main: Co[700],
    light: Co[500],
    dark: Co[900]
  };
}
function uT(e = "light") {
  return e === "dark" ? {
    main: Oo[400],
    light: Oo[300],
    dark: Oo[700]
  } : {
    main: Oo[800],
    light: Oo[500],
    dark: Oo[900]
  };
}
function dT(e = "light") {
  return e === "dark" ? {
    main: bi[400],
    light: bi[300],
    dark: bi[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: bi[500],
    dark: bi[900]
  };
}
function ed(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: r = 0.2,
    ...o
  } = e, s = e.primary || sT(t), a = e.secondary || aT(t), l = e.error || lT(t), c = e.info || cT(t), u = e.success || uT(t), d = e.warning || dT(t);
  function f(m) {
    const b = zf(m, Jf.text.primary) >= n ? Jf.text.primary : iT.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const x = zf(m, b);
      x < 3 && console.error([`MUI: The contrast ratio of ${x}:1 for ${b} on ${m}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return b;
  }
  const h = ({
    color: m,
    name: b,
    mainShade: x = 500,
    lightShade: E = 300,
    darkShade: w = 700
  }) => {
    if (m = {
      ...m
    }, !m.main && m[x] && (m.main = m[x]), !m.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${b ? ` (${b})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${x}\` property.` : Er(11, b ? ` (${b})` : "", x));
    if (typeof m.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${b ? ` (${b})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(m.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : Er(12, b ? ` (${b})` : "", JSON.stringify(m.main)));
    return Zf(m, "light", E, r), Zf(m, "dark", w, r), m.contrastText || (m.contrastText = f(m.main)), m;
  };
  let g;
  return t === "light" ? g = fg() : t === "dark" && (g = pg()), process.env.NODE_ENV !== "production" && (g || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), Tn({
    // A collection of common colors.
    common: {
      ...es
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: h({
      color: s,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: h({
      color: a,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: h({
      color: l,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: h({
      color: d,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: h({
      color: c,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: h({
      color: u,
      name: "success"
    }),
    // The grey colors.
    grey: oT,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: f,
    // Generate a rich color object.
    augmentColor: h,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: r,
    // The light and dark mode object.
    ...g
  }, o);
}
function fT(e) {
  const t = {};
  return Object.entries(e).forEach((r) => {
    const [o, s] = r;
    typeof s == "object" && (t[o] = `${s.fontStyle ? `${s.fontStyle} ` : ""}${s.fontVariant ? `${s.fontVariant} ` : ""}${s.fontWeight ? `${s.fontWeight} ` : ""}${s.fontStretch ? `${s.fontStretch} ` : ""}${s.fontSize || ""}${s.lineHeight ? `/${s.lineHeight} ` : ""}${s.fontFamily || ""}`);
  }), t;
}
function pT(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function mT(e) {
  return Math.round(e * 1e5) / 1e5;
}
const ep = {
  textTransform: "uppercase"
}, tp = '"Roboto", "Helvetica", "Arial", sans-serif';
function mg(e, t) {
  const {
    fontFamily: n = tp,
    // The default font size of the Material Specification.
    fontSize: r = 14,
    // px
    fontWeightLight: o = 300,
    fontWeightRegular: s = 400,
    fontWeightMedium: a = 500,
    fontWeightBold: l = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: c = 16,
    // Apply the CSS properties to all the variants.
    allVariants: u,
    pxToRem: d,
    ...f
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof r != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof c != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const h = r / 14, g = d || ((b) => `${b / c * h}rem`), y = (b, x, E, w, T) => ({
    fontFamily: n,
    fontWeight: b,
    fontSize: g(x),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: E,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === tp ? {
      letterSpacing: `${mT(w / x)}em`
    } : {},
    ...T,
    ...u
  }), m = {
    h1: y(o, 96, 1.167, -1.5),
    h2: y(o, 60, 1.2, -0.5),
    h3: y(s, 48, 1.167, 0),
    h4: y(s, 34, 1.235, 0.25),
    h5: y(s, 24, 1.334, 0),
    h6: y(a, 20, 1.6, 0.15),
    subtitle1: y(s, 16, 1.75, 0.15),
    subtitle2: y(a, 14, 1.57, 0.1),
    body1: y(s, 16, 1.5, 0.15),
    body2: y(s, 14, 1.43, 0.15),
    button: y(a, 14, 1.75, 0.4, ep),
    caption: y(s, 12, 1.66, 0.4),
    overline: y(s, 12, 2.66, 1, ep),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return Tn({
    htmlFontSize: c,
    pxToRem: g,
    fontFamily: n,
    fontSize: r,
    fontWeightLight: o,
    fontWeightRegular: s,
    fontWeightMedium: a,
    fontWeightBold: l,
    ...m
  }, f, {
    clone: !1
    // No need to clone deep
  });
}
const hT = 0.2, gT = 0.14, yT = 0.12;
function bt(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${hT})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${gT})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${yT})`].join(",");
}
const bT = ["none", bt(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), bt(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), bt(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), bt(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), bt(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), bt(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), bt(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), bt(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), bt(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), bt(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), bt(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), bt(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), bt(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), bt(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), bt(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), bt(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), bt(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), bt(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), bt(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), bt(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), bt(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), bt(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), bt(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), bt(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], vT = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, xT = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function np(e) {
  return `${Math.round(e)}ms`;
}
function wT(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function TT(e) {
  const t = {
    ...vT,
    ...e.easing
  }, n = {
    ...xT,
    ...e.duration
  };
  return {
    getAutoHeightDuration: wT,
    create: (o = ["all"], s = {}) => {
      const {
        duration: a = n.standard,
        easing: l = t.easeInOut,
        delay: c = 0,
        ...u
      } = s;
      if (process.env.NODE_ENV !== "production") {
        const d = (h) => typeof h == "string", f = (h) => !Number.isNaN(parseFloat(h));
        !d(o) && !Array.isArray(o) && console.error('MUI: Argument "props" must be a string or Array.'), !f(a) && !d(a) && console.error(`MUI: Argument "duration" must be a number or a string but found ${a}.`), d(l) || console.error('MUI: Argument "easing" must be a string.'), !f(c) && !d(c) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof s != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(u).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(u).join(",")}].`);
      }
      return (Array.isArray(o) ? o : [o]).map((d) => `${d} ${typeof a == "string" ? a : np(a)} ${l} ${typeof c == "string" ? c : np(c)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const ST = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function ET(e) {
  return or(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function hg(e = {}) {
  const t = {
    ...e
  };
  function n(r) {
    const o = Object.entries(r);
    for (let s = 0; s < o.length; s++) {
      const [a, l] = o[s];
      !ET(l) || a.startsWith("unstable_") ? delete r[a] : or(l) && (r[a] = {
        ...l
      }, n(r[a]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function qc(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: r = {},
    spacing: o,
    palette: s = {},
    transitions: a = {},
    typography: l = {},
    shape: c,
    ...u
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : Er(20));
  const d = ed(s), f = rl(e);
  let h = Tn(f, {
    mixins: pT(f.breakpoints, r),
    palette: d,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: bT.slice(),
    typography: mg(d, l),
    transitions: TT(a),
    zIndex: {
      ...ST
    }
  });
  if (h = Tn(h, u), h = t.reduce((g, y) => Tn(g, y), h), process.env.NODE_ENV !== "production") {
    const g = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], y = (m, b) => {
      let x;
      for (x in m) {
        const E = m[x];
        if (g.includes(x) && Object.keys(E).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const w = gt("", x);
            console.error([`MUI: The \`${b}\` component increases the CSS specificity of the \`${x}\` internal state.`, "You can not override it like this: ", JSON.stringify(m, null, 2), "", `Instead, you need to use the '&.${w}' syntax:`, JSON.stringify({
              root: {
                [`&.${w}`]: E
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          m[x] = {};
        }
      }
    };
    Object.keys(h.components).forEach((m) => {
      const b = h.components[m].styleOverrides;
      b && m.startsWith("Mui") && y(b, m);
    });
  }
  return h.unstable_sxConfig = {
    ...ms,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, h.unstable_sx = function(y) {
    return Vr({
      sx: y,
      theme: this
    });
  }, h.toRuntimeSource = hg, h;
}
function Yc(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const CT = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = Yc(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function gg(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function yg(e) {
  return e === "dark" ? CT : [];
}
function OT(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: r,
    ...o
  } = e, s = ed(t);
  return {
    palette: s,
    opacity: {
      ...gg(s.mode),
      ...n
    },
    overlays: r || yg(s.mode),
    ...o
  };
}
function RT(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const $T = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], PT = (e) => (t, n) => {
  const r = e.rootSelector || ":root", o = e.colorSchemeSelector;
  let s = o;
  if (o === "class" && (s = ".%s"), o === "data" && (s = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (s = `[${o}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const a = {};
      return $T(e.cssVarPrefix).forEach((l) => {
        a[l] = n[l], delete n[l];
      }), s === "media" ? {
        [r]: n,
        "@media (prefers-color-scheme: dark)": {
          [r]: a
        }
      } : s ? {
        [s.replace("%s", t)]: a,
        [`${r}, ${s.replace("%s", t)}`]: n
      } : {
        [r]: {
          ...n,
          ...a
        }
      };
    }
    if (s && s !== "media")
      return `${r}, ${s.replace("%s", String(t))}`;
  } else if (t) {
    if (s === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [r]: n
        }
      };
    if (s)
      return s.replace("%s", String(t));
  }
  return r;
};
function kT(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function ce(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function Ni(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : Gh(e);
}
function vr(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = Ii(Ni(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function IT(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const Xn = (e) => {
  try {
    return e();
  } catch {
  }
}, NT = (e = "mui") => Gw(e);
function oc(e, t, n, r) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const o = r === "dark" ? "dark" : "light";
  if (!n) {
    e[r] = OT({
      ...t,
      palette: {
        mode: o,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: s,
    ...a
  } = qc({
    ...n,
    palette: {
      mode: o,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[r] = {
    ...t,
    palette: s,
    opacity: {
      ...gg(o),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || yg(o)
  }, a;
}
function AT(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: r,
    disableCssColorScheme: o = !1,
    cssVarPrefix: s = "mui",
    shouldSkipGeneratingVar: a = RT,
    colorSchemeSelector: l = n.light && n.dark ? "media" : void 0,
    rootSelector: c = ":root",
    ...u
  } = e, d = Object.keys(n)[0], f = r || (n.light && d !== "light" ? "light" : d), h = NT(s), {
    [f]: g,
    light: y,
    dark: m,
    ...b
  } = n, x = {
    ...b
  };
  let E = g;
  if ((f === "dark" && !("dark" in n) || f === "light" && !("light" in n)) && (E = !0), !E)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${f}\` option is either missing or invalid.` : Er(21, f));
  const w = oc(x, E, u, f);
  y && !x.light && oc(x, y, void 0, "light"), m && !x.dark && oc(x, m, void 0, "dark");
  let T = {
    defaultColorScheme: f,
    ...w,
    cssVarPrefix: s,
    colorSchemeSelector: l,
    rootSelector: c,
    getCssVar: h,
    colorSchemes: x,
    font: {
      ...fT(w.typography),
      ...w.font
    },
    spacing: IT(u.spacing)
  };
  Object.keys(T.colorSchemes).forEach((I) => {
    const p = T.colorSchemes[I].palette, O = (P) => {
      const A = P.split("-"), D = A[1], _ = A[2];
      return h(P, p[D][_]);
    };
    if (p.mode === "light" && (ce(p.common, "background", "#fff"), ce(p.common, "onBackground", "#000")), p.mode === "dark" && (ce(p.common, "background", "#000"), ce(p.common, "onBackground", "#fff")), kT(p, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), p.mode === "light") {
      ce(p.Alert, "errorColor", lt(p.error.light, 0.6)), ce(p.Alert, "infoColor", lt(p.info.light, 0.6)), ce(p.Alert, "successColor", lt(p.success.light, 0.6)), ce(p.Alert, "warningColor", lt(p.warning.light, 0.6)), ce(p.Alert, "errorFilledBg", O("palette-error-main")), ce(p.Alert, "infoFilledBg", O("palette-info-main")), ce(p.Alert, "successFilledBg", O("palette-success-main")), ce(p.Alert, "warningFilledBg", O("palette-warning-main")), ce(p.Alert, "errorFilledColor", Xn(() => p.getContrastText(p.error.main))), ce(p.Alert, "infoFilledColor", Xn(() => p.getContrastText(p.info.main))), ce(p.Alert, "successFilledColor", Xn(() => p.getContrastText(p.success.main))), ce(p.Alert, "warningFilledColor", Xn(() => p.getContrastText(p.warning.main))), ce(p.Alert, "errorStandardBg", ct(p.error.light, 0.9)), ce(p.Alert, "infoStandardBg", ct(p.info.light, 0.9)), ce(p.Alert, "successStandardBg", ct(p.success.light, 0.9)), ce(p.Alert, "warningStandardBg", ct(p.warning.light, 0.9)), ce(p.Alert, "errorIconColor", O("palette-error-main")), ce(p.Alert, "infoIconColor", O("palette-info-main")), ce(p.Alert, "successIconColor", O("palette-success-main")), ce(p.Alert, "warningIconColor", O("palette-warning-main")), ce(p.AppBar, "defaultBg", O("palette-grey-100")), ce(p.Avatar, "defaultBg", O("palette-grey-400")), ce(p.Button, "inheritContainedBg", O("palette-grey-300")), ce(p.Button, "inheritContainedHoverBg", O("palette-grey-A100")), ce(p.Chip, "defaultBorder", O("palette-grey-400")), ce(p.Chip, "defaultAvatarColor", O("palette-grey-700")), ce(p.Chip, "defaultIconColor", O("palette-grey-700")), ce(p.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), ce(p.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), ce(p.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), ce(p.LinearProgress, "primaryBg", ct(p.primary.main, 0.62)), ce(p.LinearProgress, "secondaryBg", ct(p.secondary.main, 0.62)), ce(p.LinearProgress, "errorBg", ct(p.error.main, 0.62)), ce(p.LinearProgress, "infoBg", ct(p.info.main, 0.62)), ce(p.LinearProgress, "successBg", ct(p.success.main, 0.62)), ce(p.LinearProgress, "warningBg", ct(p.warning.main, 0.62)), ce(p.Skeleton, "bg", `rgba(${O("palette-text-primaryChannel")} / 0.11)`), ce(p.Slider, "primaryTrack", ct(p.primary.main, 0.62)), ce(p.Slider, "secondaryTrack", ct(p.secondary.main, 0.62)), ce(p.Slider, "errorTrack", ct(p.error.main, 0.62)), ce(p.Slider, "infoTrack", ct(p.info.main, 0.62)), ce(p.Slider, "successTrack", ct(p.success.main, 0.62)), ce(p.Slider, "warningTrack", ct(p.warning.main, 0.62));
      const P = Bs(p.background.default, 0.8);
      ce(p.SnackbarContent, "bg", P), ce(p.SnackbarContent, "color", Xn(() => p.getContrastText(P))), ce(p.SpeedDialAction, "fabHoverBg", Bs(p.background.paper, 0.15)), ce(p.StepConnector, "border", O("palette-grey-400")), ce(p.StepContent, "border", O("palette-grey-400")), ce(p.Switch, "defaultColor", O("palette-common-white")), ce(p.Switch, "defaultDisabledColor", O("palette-grey-100")), ce(p.Switch, "primaryDisabledColor", ct(p.primary.main, 0.62)), ce(p.Switch, "secondaryDisabledColor", ct(p.secondary.main, 0.62)), ce(p.Switch, "errorDisabledColor", ct(p.error.main, 0.62)), ce(p.Switch, "infoDisabledColor", ct(p.info.main, 0.62)), ce(p.Switch, "successDisabledColor", ct(p.success.main, 0.62)), ce(p.Switch, "warningDisabledColor", ct(p.warning.main, 0.62)), ce(p.TableCell, "border", ct(Ds(p.divider, 1), 0.88)), ce(p.Tooltip, "bg", Ds(p.grey[700], 0.92));
    }
    if (p.mode === "dark") {
      ce(p.Alert, "errorColor", ct(p.error.light, 0.6)), ce(p.Alert, "infoColor", ct(p.info.light, 0.6)), ce(p.Alert, "successColor", ct(p.success.light, 0.6)), ce(p.Alert, "warningColor", ct(p.warning.light, 0.6)), ce(p.Alert, "errorFilledBg", O("palette-error-dark")), ce(p.Alert, "infoFilledBg", O("palette-info-dark")), ce(p.Alert, "successFilledBg", O("palette-success-dark")), ce(p.Alert, "warningFilledBg", O("palette-warning-dark")), ce(p.Alert, "errorFilledColor", Xn(() => p.getContrastText(p.error.dark))), ce(p.Alert, "infoFilledColor", Xn(() => p.getContrastText(p.info.dark))), ce(p.Alert, "successFilledColor", Xn(() => p.getContrastText(p.success.dark))), ce(p.Alert, "warningFilledColor", Xn(() => p.getContrastText(p.warning.dark))), ce(p.Alert, "errorStandardBg", lt(p.error.light, 0.9)), ce(p.Alert, "infoStandardBg", lt(p.info.light, 0.9)), ce(p.Alert, "successStandardBg", lt(p.success.light, 0.9)), ce(p.Alert, "warningStandardBg", lt(p.warning.light, 0.9)), ce(p.Alert, "errorIconColor", O("palette-error-main")), ce(p.Alert, "infoIconColor", O("palette-info-main")), ce(p.Alert, "successIconColor", O("palette-success-main")), ce(p.Alert, "warningIconColor", O("palette-warning-main")), ce(p.AppBar, "defaultBg", O("palette-grey-900")), ce(p.AppBar, "darkBg", O("palette-background-paper")), ce(p.AppBar, "darkColor", O("palette-text-primary")), ce(p.Avatar, "defaultBg", O("palette-grey-600")), ce(p.Button, "inheritContainedBg", O("palette-grey-800")), ce(p.Button, "inheritContainedHoverBg", O("palette-grey-700")), ce(p.Chip, "defaultBorder", O("palette-grey-700")), ce(p.Chip, "defaultAvatarColor", O("palette-grey-300")), ce(p.Chip, "defaultIconColor", O("palette-grey-300")), ce(p.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), ce(p.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), ce(p.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), ce(p.LinearProgress, "primaryBg", lt(p.primary.main, 0.5)), ce(p.LinearProgress, "secondaryBg", lt(p.secondary.main, 0.5)), ce(p.LinearProgress, "errorBg", lt(p.error.main, 0.5)), ce(p.LinearProgress, "infoBg", lt(p.info.main, 0.5)), ce(p.LinearProgress, "successBg", lt(p.success.main, 0.5)), ce(p.LinearProgress, "warningBg", lt(p.warning.main, 0.5)), ce(p.Skeleton, "bg", `rgba(${O("palette-text-primaryChannel")} / 0.13)`), ce(p.Slider, "primaryTrack", lt(p.primary.main, 0.5)), ce(p.Slider, "secondaryTrack", lt(p.secondary.main, 0.5)), ce(p.Slider, "errorTrack", lt(p.error.main, 0.5)), ce(p.Slider, "infoTrack", lt(p.info.main, 0.5)), ce(p.Slider, "successTrack", lt(p.success.main, 0.5)), ce(p.Slider, "warningTrack", lt(p.warning.main, 0.5));
      const P = Bs(p.background.default, 0.98);
      ce(p.SnackbarContent, "bg", P), ce(p.SnackbarContent, "color", Xn(() => p.getContrastText(P))), ce(p.SpeedDialAction, "fabHoverBg", Bs(p.background.paper, 0.15)), ce(p.StepConnector, "border", O("palette-grey-600")), ce(p.StepContent, "border", O("palette-grey-600")), ce(p.Switch, "defaultColor", O("palette-grey-300")), ce(p.Switch, "defaultDisabledColor", O("palette-grey-600")), ce(p.Switch, "primaryDisabledColor", lt(p.primary.main, 0.55)), ce(p.Switch, "secondaryDisabledColor", lt(p.secondary.main, 0.55)), ce(p.Switch, "errorDisabledColor", lt(p.error.main, 0.55)), ce(p.Switch, "infoDisabledColor", lt(p.info.main, 0.55)), ce(p.Switch, "successDisabledColor", lt(p.success.main, 0.55)), ce(p.Switch, "warningDisabledColor", lt(p.warning.main, 0.55)), ce(p.TableCell, "border", lt(Ds(p.divider, 1), 0.68)), ce(p.Tooltip, "bg", Ds(p.grey[700], 0.92));
    }
    vr(p.background, "default"), vr(p.background, "paper"), vr(p.common, "background"), vr(p.common, "onBackground"), vr(p, "divider"), Object.keys(p).forEach((P) => {
      const A = p[P];
      P !== "tonalOffset" && A && typeof A == "object" && (A.main && ce(p[P], "mainChannel", Ii(Ni(A.main))), A.light && ce(p[P], "lightChannel", Ii(Ni(A.light))), A.dark && ce(p[P], "darkChannel", Ii(Ni(A.dark))), A.contrastText && ce(p[P], "contrastTextChannel", Ii(Ni(A.contrastText))), P === "text" && (vr(p[P], "primary"), vr(p[P], "secondary")), P === "action" && (A.active && vr(p[P], "active"), A.selected && vr(p[P], "selected")));
    });
  }), T = t.reduce((I, p) => Tn(I, p), T);
  const v = {
    prefix: s,
    disableCssColorScheme: o,
    shouldSkipGeneratingVar: a,
    getSelector: PT(T)
  }, {
    vars: S,
    generateThemeVars: R,
    generateStyleSheets: $
  } = Qw(T, v);
  return T.vars = S, Object.entries(T.colorSchemes[T.defaultColorScheme]).forEach(([I, p]) => {
    T[I] = p;
  }), T.generateThemeVars = R, T.generateStyleSheets = $, T.generateSpacing = function() {
    return Bh(u.spacing, Mu(this));
  }, T.getColorSchemeSelector = Jw(l), T.spacing = T.generateSpacing(), T.shouldSkipGeneratingVar = a, T.unstable_sxConfig = {
    ...ms,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, T.unstable_sx = function(p) {
    return Vr({
      sx: p,
      theme: this
    });
  }, T.toRuntimeSource = hg, T;
}
function rp(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: ed({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function al(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: r = !1,
    colorSchemes: o = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: s = n == null ? void 0 : n.mode,
    ...a
  } = e, l = s || "light", c = o == null ? void 0 : o[l], u = {
    ...o,
    ...n ? {
      [l]: {
        ...typeof c != "boolean" && c,
        palette: n
      }
    } : void 0
  };
  if (r === !1) {
    if (!("colorSchemes" in e))
      return qc(e, ...t);
    let d = n;
    "palette" in e || u[l] && (u[l] !== !0 ? d = u[l].palette : l === "dark" && (d = {
      mode: "dark"
    }));
    const f = qc({
      ...e,
      palette: d
    }, ...t);
    return f.defaultColorScheme = l, f.colorSchemes = u, f.palette.mode === "light" && (f.colorSchemes.light = {
      ...u.light !== !0 && u.light,
      palette: f.palette
    }, rp(f, "dark", u.dark)), f.palette.mode === "dark" && (f.colorSchemes.dark = {
      ...u.dark !== !0 && u.dark,
      palette: f.palette
    }, rp(f, "light", u.light)), f;
  }
  return !n && !("light" in u) && l === "light" && (u.light = !0), AT({
    ...a,
    colorSchemes: u,
    defaultColorScheme: l,
    ...typeof r != "boolean" && r
  }, ...t);
}
const td = al(), qn = "$$material";
function Nr() {
  const e = ol(td);
  return process.env.NODE_ENV !== "production" && C.useDebugValue(e), e[qn] || e;
}
function bg(e) {
  return /* @__PURE__ */ k(Fh, {
    ...e,
    defaultTheme: td,
    themeId: qn
  });
}
process.env.NODE_ENV !== "production" && (bg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: i.oneOfType([i.array, i.func, i.number, i.object, i.string, i.bool])
});
function MT(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const gr = (e) => MT(e) && e !== "classes", ke = Wh({
  themeId: qn,
  defaultTheme: td,
  rootShouldForwardProp: gr
});
function nd(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ k(bg, {
        styles: typeof e == "function" ? (r) => e({
          theme: r,
          ...n
        }) : e
      })
    );
  };
}
function _T() {
  return wh;
}
const Ke = jw;
process.env.NODE_ENV !== "production" && (i.node, i.object.isRequired);
function Tt(e) {
  return Fw(e);
}
function DT(e) {
  return gt("MuiSvgIcon", e);
}
wt("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const BT = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: r
  } = e, o = {
    root: ["root", t !== "inherit" && `color${xe(t)}`, `fontSize${xe(n)}`]
  };
  return Ct(o, DT, r);
}, FT = ke("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${xe(n.color)}`], t[`fontSize${xe(n.fontSize)}`]];
  }
})(Ke(({
  theme: e
}) => {
  var t, n, r, o, s, a, l, c, u, d, f, h, g, y;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (o = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : o.call(t, "fill", {
      duration: (r = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : r.shorter
    }),
    variants: [
      {
        props: (m) => !m.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((a = (s = e.typography) == null ? void 0 : s.pxToRem) == null ? void 0 : a.call(s, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((c = (l = e.typography) == null ? void 0 : l.pxToRem) == null ? void 0 : c.call(l, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((d = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : d.call(u, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, m]) => m && m.main).map(([m]) => {
        var b, x;
        return {
          props: {
            color: m
          },
          style: {
            color: (x = (b = (e.vars ?? e).palette) == null ? void 0 : b[m]) == null ? void 0 : x.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (h = (f = (e.vars ?? e).palette) == null ? void 0 : f.action) == null ? void 0 : h.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (y = (g = (e.vars ?? e).palette) == null ? void 0 : g.action) == null ? void 0 : y.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), qo = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Tt({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: o,
    className: s,
    color: a = "inherit",
    component: l = "svg",
    fontSize: c = "medium",
    htmlColor: u,
    inheritViewBox: d = !1,
    titleAccess: f,
    viewBox: h = "0 0 24 24",
    ...g
  } = r, y = /* @__PURE__ */ C.isValidElement(o) && o.type === "svg", m = {
    ...r,
    color: a,
    component: l,
    fontSize: c,
    instanceFontSize: t.fontSize,
    inheritViewBox: d,
    viewBox: h,
    hasSvgAsChild: y
  }, b = {};
  d || (b.viewBox = h);
  const x = BT(m);
  return /* @__PURE__ */ Pe(FT, {
    as: l,
    className: Ee(x.root, s),
    focusable: "false",
    color: u,
    "aria-hidden": f ? void 0 : !0,
    role: f ? "img" : void 0,
    ref: n,
    ...b,
    ...g,
    ...y && o.props,
    ownerState: m,
    children: [y ? o.props.children : o, f ? /* @__PURE__ */ k("title", {
      children: f
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (qo.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: i.oneOfType([i.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: i.oneOfType([i.oneOf(["inherit", "large", "medium", "small"]), i.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: i.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: i.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: i.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: i.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: i.string
});
qo.muiName = "SvgIcon";
function ui(e, t) {
  function n(r, o) {
    return /* @__PURE__ */ k(qo, {
      "data-testid": process.env.NODE_ENV !== "production" ? `${t}Icon` : void 0,
      ref: o,
      ...r,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = qo.muiName, /* @__PURE__ */ C.memo(/* @__PURE__ */ C.forwardRef(n));
}
const jT = ui(/* @__PURE__ */ k("path", {
  d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
}), "Person");
function LT(e) {
  return gt("MuiAvatar", e);
}
wt("MuiAvatar", ["root", "colorDefault", "circular", "rounded", "square", "img", "fallback"]);
function at(e, t) {
  const {
    className: n,
    elementType: r,
    ownerState: o,
    externalForwardedProps: s,
    internalForwardedProps: a,
    shouldForwardComponentProp: l = !1,
    ...c
  } = t, {
    component: u,
    slots: d = {
      [e]: void 0
    },
    slotProps: f = {
      [e]: void 0
    },
    ...h
  } = s, g = d[e] || r, y = sg(f[e], o), {
    props: {
      component: m,
      ...b
    },
    internalRef: x
  } = ig({
    className: n,
    ...c,
    externalForwardedProps: e === "root" ? h : void 0,
    externalSlotProps: y
  }), E = nn(x, y == null ? void 0 : y.ref, t.ref), w = e === "root" ? m || u : m, T = rg(g, {
    ...e === "root" && !u && !d[e] && a,
    ...e !== "root" && !d[e] && a,
    ...b,
    ...w && !l && {
      as: w
    },
    ...w && l && {
      component: w
    },
    ref: E
  }, o);
  return [g, T];
}
const VT = (e) => {
  const {
    classes: t,
    variant: n,
    colorDefault: r
  } = e;
  return Ct({
    root: ["root", n, r && "colorDefault"],
    img: ["img"],
    fallback: ["fallback"]
  }, LT, t);
}, zT = ke("div", {
  name: "MuiAvatar",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], n.colorDefault && t.colorDefault];
  }
})(Ke(({
  theme: e
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  flexShrink: 0,
  width: 40,
  height: 40,
  fontFamily: e.typography.fontFamily,
  fontSize: e.typography.pxToRem(20),
  lineHeight: 1,
  borderRadius: "50%",
  overflow: "hidden",
  userSelect: "none",
  variants: [{
    props: {
      variant: "rounded"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius
    }
  }, {
    props: {
      variant: "square"
    },
    style: {
      borderRadius: 0
    }
  }, {
    props: {
      colorDefault: !0
    },
    style: {
      color: (e.vars || e).palette.background.default,
      ...e.vars ? {
        backgroundColor: e.vars.palette.Avatar.defaultBg
      } : {
        backgroundColor: e.palette.grey[400],
        ...e.applyStyles("dark", {
          backgroundColor: e.palette.grey[600]
        })
      }
    }
  }]
}))), WT = ke("img", {
  name: "MuiAvatar",
  slot: "Img",
  overridesResolver: (e, t) => t.img
})({
  width: "100%",
  height: "100%",
  textAlign: "center",
  // Handle non-square image.
  objectFit: "cover",
  // Hide alt text.
  color: "transparent",
  // Hide the image broken icon, only works on Chrome.
  textIndent: 1e4
}), UT = ke(jT, {
  name: "MuiAvatar",
  slot: "Fallback",
  overridesResolver: (e, t) => t.fallback
})({
  width: "75%",
  height: "75%"
});
function HT({
  crossOrigin: e,
  referrerPolicy: t,
  src: n,
  srcSet: r
}) {
  const [o, s] = C.useState(!1);
  return C.useEffect(() => {
    if (!n && !r)
      return;
    s(!1);
    let a = !0;
    const l = new Image();
    return l.onload = () => {
      a && s("loaded");
    }, l.onerror = () => {
      a && s("error");
    }, l.crossOrigin = e, l.referrerPolicy = t, l.src = n, r && (l.srcset = r), () => {
      a = !1;
    };
  }, [e, t, n, r]), o;
}
const vg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Tt({
    props: t,
    name: "MuiAvatar"
  }), {
    alt: o,
    children: s,
    className: a,
    component: l = "div",
    slots: c = {},
    slotProps: u = {},
    imgProps: d,
    sizes: f,
    src: h,
    srcSet: g,
    variant: y = "circular",
    ...m
  } = r;
  let b = null;
  const x = {
    ...r,
    component: l,
    variant: y
  }, E = HT({
    ...d,
    ...typeof u.img == "function" ? u.img(x) : u.img,
    src: h,
    srcSet: g
  }), w = h || g, T = w && E !== "error";
  x.colorDefault = !T, delete x.ownerState;
  const v = VT(x), [S, R] = at("img", {
    className: v.img,
    elementType: WT,
    externalForwardedProps: {
      slots: c,
      slotProps: {
        img: {
          ...d,
          ...u.img
        }
      }
    },
    additionalProps: {
      alt: o,
      src: h,
      srcSet: g,
      sizes: f
    },
    ownerState: x
  });
  return T ? b = /* @__PURE__ */ k(S, {
    ...R
  }) : s || s === 0 ? b = s : w && o ? b = o[0] : b = /* @__PURE__ */ k(UT, {
    ownerState: x,
    className: v.fallback
  }), /* @__PURE__ */ k(zT, {
    as: l,
    className: Ee(v.root, a),
    ref: n,
    ...m,
    ownerState: x,
    children: b
  });
});
process.env.NODE_ENV !== "production" && (vg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Used in combination with `src` or `srcSet` to
   * provide an alt attribute for the rendered `img` element.
   */
  alt: i.string,
  /**
   * Used to render icon or text elements inside the Avatar if `src` is not set.
   * This can be an element, or just a string.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.
   * It can be used to listen for the loading error event.
   * @deprecated Use `slotProps.img` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  imgProps: i.object,
  /**
   * The `sizes` attribute for the `img` element.
   */
  sizes: i.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    img: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    img: i.elementType
  }),
  /**
   * The `src` attribute for the `img` element.
   */
  src: i.string,
  /**
   * The `srcSet` attribute for the `img` element.
   * Use this attribute for responsive image display.
   */
  srcSet: i.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The shape of the avatar.
   * @default 'circular'
   */
  variant: i.oneOfType([i.oneOf(["circular", "rounded", "square"]), i.string])
});
function qT(e) {
  const {
    badgeContent: t,
    invisible: n = !1,
    max: r = 99,
    showZero: o = !1
  } = e, s = eg({
    badgeContent: t,
    max: r
  });
  let a = n;
  n === !1 && t === 0 && !o && (a = !0);
  const {
    badgeContent: l,
    max: c = r
  } = a ? s : e, u = l && Number(l) > c ? `${c}+` : l;
  return {
    badgeContent: l,
    invisible: a,
    max: c,
    displayValue: u
  };
}
function YT(e) {
  return typeof e.main == "string";
}
function GT(e, t = []) {
  if (!YT(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function cn(e = []) {
  return ([, t]) => t && GT(t, e);
}
function KT(e) {
  return gt("MuiBadge", e);
}
const Mr = wt("MuiBadge", [
  "root",
  "badge",
  "dot",
  "standard",
  "anchorOriginTopRight",
  "anchorOriginBottomRight",
  "anchorOriginTopLeft",
  "anchorOriginBottomLeft",
  "invisible",
  "colorError",
  "colorInfo",
  "colorPrimary",
  "colorSecondary",
  "colorSuccess",
  "colorWarning",
  "overlapRectangular",
  "overlapCircular",
  // TODO: v6 remove the overlap value from these class keys
  "anchorOriginTopLeftCircular",
  "anchorOriginTopLeftRectangular",
  "anchorOriginTopRightCircular",
  "anchorOriginTopRightRectangular",
  "anchorOriginBottomLeftCircular",
  "anchorOriginBottomLeftRectangular",
  "anchorOriginBottomRightCircular",
  "anchorOriginBottomRightRectangular"
]), ic = 10, sc = 4, XT = (e) => {
  const {
    color: t,
    anchorOrigin: n,
    invisible: r,
    overlap: o,
    variant: s,
    classes: a = {}
  } = e, l = {
    root: ["root"],
    badge: ["badge", s, r && "invisible", `anchorOrigin${xe(n.vertical)}${xe(n.horizontal)}`, `anchorOrigin${xe(n.vertical)}${xe(n.horizontal)}${xe(o)}`, `overlap${xe(o)}`, t !== "default" && `color${xe(t)}`]
  };
  return Ct(l, KT, a);
}, QT = ke("span", {
  name: "MuiBadge",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  position: "relative",
  display: "inline-flex",
  // For correct alignment with the text.
  verticalAlign: "middle",
  flexShrink: 0
}), JT = ke("span", {
  name: "MuiBadge",
  slot: "Badge",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.badge, t[n.variant], t[`anchorOrigin${xe(n.anchorOrigin.vertical)}${xe(n.anchorOrigin.horizontal)}${xe(n.overlap)}`], n.color !== "default" && t[`color${xe(n.color)}`], n.invisible && t.invisible];
  }
})(Ke(({
  theme: e
}) => ({
  display: "flex",
  flexDirection: "row",
  flexWrap: "wrap",
  justifyContent: "center",
  alignContent: "center",
  alignItems: "center",
  position: "absolute",
  boxSizing: "border-box",
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(12),
  minWidth: ic * 2,
  lineHeight: 1,
  padding: "0 6px",
  height: ic * 2,
  borderRadius: ic,
  zIndex: 1,
  // Render the badge on top of potential ripples.
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeInOut,
    duration: e.transitions.duration.enteringScreen
  }),
  variants: [...Object.entries(e.palette).filter(cn(["contrastText"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main,
      color: (e.vars || e).palette[t].contrastText
    }
  })), {
    props: {
      variant: "dot"
    },
    style: {
      borderRadius: sc,
      height: sc * 2,
      minWidth: sc * 2,
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      top: 0,
      right: 0,
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${Mr.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      right: 0,
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${Mr.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      top: 0,
      left: 0,
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${Mr.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      left: 0,
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${Mr.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      top: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${Mr.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      bottom: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${Mr.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      top: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${Mr.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      bottom: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${Mr.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: {
      invisible: !0
    },
    style: {
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeInOut,
        duration: e.transitions.duration.leavingScreen
      })
    }
  }]
})));
function op(e) {
  return {
    vertical: (e == null ? void 0 : e.vertical) ?? "top",
    horizontal: (e == null ? void 0 : e.horizontal) ?? "right"
  };
}
const ll = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Tt({
    props: t,
    name: "MuiBadge"
  }), {
    anchorOrigin: o,
    className: s,
    classes: a,
    component: l,
    components: c = {},
    componentsProps: u = {},
    children: d,
    overlap: f = "rectangular",
    color: h = "default",
    invisible: g = !1,
    max: y = 99,
    badgeContent: m,
    slots: b,
    slotProps: x,
    showZero: E = !1,
    variant: w = "standard",
    ...T
  } = r, {
    badgeContent: v,
    invisible: S,
    max: R,
    displayValue: $
  } = qT({
    max: y,
    invisible: g,
    badgeContent: m,
    showZero: E
  }), I = eg({
    anchorOrigin: op(o),
    color: h,
    overlap: f,
    variant: w,
    badgeContent: m
  }), p = S || v == null && w !== "dot", {
    color: O = h,
    overlap: P = f,
    anchorOrigin: A,
    variant: D = w
  } = p ? I : r, _ = op(A), M = D !== "dot" ? $ : void 0, V = {
    ...r,
    badgeContent: v,
    invisible: p,
    max: R,
    displayValue: M,
    showZero: E,
    anchorOrigin: _,
    color: O,
    overlap: P,
    variant: D
  }, Y = XT(V), U = (b == null ? void 0 : b.root) ?? c.Root ?? QT, j = (b == null ? void 0 : b.badge) ?? c.Badge ?? JT, W = (x == null ? void 0 : x.root) ?? u.root, ee = (x == null ? void 0 : x.badge) ?? u.badge, K = Hc({
    elementType: U,
    externalSlotProps: W,
    externalForwardedProps: T,
    additionalProps: {
      ref: n,
      as: l
    },
    ownerState: V,
    className: Ee(W == null ? void 0 : W.className, Y.root, s)
  }), oe = Hc({
    elementType: j,
    externalSlotProps: ee,
    ownerState: V,
    className: Ee(Y.badge, ee == null ? void 0 : ee.className)
  });
  return /* @__PURE__ */ Pe(U, {
    ...K,
    children: [d, /* @__PURE__ */ k(j, {
      ...oe,
      children: M
    })]
  });
});
process.env.NODE_ENV !== "production" && (ll.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The anchor of the badge.
   * @default {
   *   vertical: 'top',
   *   horizontal: 'right',
   * }
   */
  anchorOrigin: i.shape({
    horizontal: i.oneOf(["left", "right"]),
    vertical: i.oneOf(["bottom", "top"])
  }),
  /**
   * The content rendered within the badge.
   */
  badgeContent: i.node,
  /**
   * The badge will be added relative to this node.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Badge: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    badge: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * If `true`, the badge is invisible.
   * @default false
   */
  invisible: i.bool,
  /**
   * Max count to show.
   * @default 99
   */
  max: i.number,
  /**
   * Wrapped shape the badge should overlap.
   * @default 'rectangular'
   */
  overlap: i.oneOf(["circular", "rectangular"]),
  /**
   * Controls whether the badge is hidden when `badgeContent` is zero.
   * @default false
   */
  showZero: i.bool,
  /**
   * The props used for each slot inside the Badge.
   * @default {}
   */
  slotProps: i.shape({
    badge: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Badge.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    badge: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: i.oneOfType([i.oneOf(["dot", "standard"]), i.string])
});
function rd({ position: e, color: t }) {
  const n = ln(() => {
    switch (e) {
      case "top-left":
        return {
          vertical: "top",
          horizontal: "left",
          transform: "translate(-2px, -2px)"
        };
      case "bottom-left":
        return {
          vertical: "bottom",
          horizontal: "left",
          transform: "translate(-2px, 2px)"
        };
      case "bottom-right":
        return {
          vertical: "bottom",
          horizontal: "right",
          transform: "translate(2px, 2px)"
        };
      case "top-right":
      default:
        return {
          vertical: "top",
          horizontal: "right",
          transform: "translate(2px, -2px)"
        };
    }
  }, [e]), r = ln(() => {
    switch (t) {
      case "auto":
        return "inherit";
      case "success":
        return "success.main";
      case "primary":
        return "primary.main";
      case "error":
      default:
        return "error.main";
    }
  }, [t]);
  return {
    badgePlacementAttributes: n,
    badgeColor: r
  };
}
const xg = _e(
  ({ children: e, isVisible: t, position: n = "top-right", color: r = "error" }) => {
    const { badgePlacementAttributes: o, badgeColor: s } = rd({ position: n, color: r }), { vertical: a, horizontal: l, transform: c } = o;
    return /* @__PURE__ */ k(
      ll,
      {
        className: "VenomousUI-DotBadge",
        variant: "dot",
        invisible: !t,
        anchorOrigin: { vertical: a, horizontal: l },
        sx: {
          ".MuiBadge-badge": {
            ...t ? {
              transform: c,
              color: s,
              backgroundColor: s,
              boxShadow: "0 0 0 2px transparent",
              "&::after": {
                position: "absolute",
                top: 0,
                left: 0,
                width: "100%",
                height: "100%",
                borderRadius: "50%",
                animation: "ripple 1.2s infinite ease-in-out",
                border: "2px solid currentColor",
                content: '""'
              },
              "@keyframes ripple": {
                "0%": { transform: "scale(.8)", opacity: 1 },
                "100%": { transform: "scale(2.4)", opacity: 0 }
              }
            } : {}
          }
        },
        children: e
      }
    );
  }
);
xg.displayName = "DotBadge";
const wg = Object.freeze(
  {
    left: 0,
    top: 0,
    width: 16,
    height: 16
  }
), va = Object.freeze({
  rotate: 0,
  vFlip: !1,
  hFlip: !1
}), od = Object.freeze({
  ...wg,
  ...va
}), Gc = Object.freeze({
  ...od,
  body: "",
  hidden: !1
});
function ZT(e, t) {
  const n = {};
  !e.hFlip != !t.hFlip && (n.hFlip = !0), !e.vFlip != !t.vFlip && (n.vFlip = !0);
  const r = ((e.rotate || 0) + (t.rotate || 0)) % 4;
  return r && (n.rotate = r), n;
}
function ip(e, t) {
  const n = ZT(e, t);
  for (const r in Gc)
    r in va ? r in e && !(r in n) && (n[r] = va[r]) : r in t ? n[r] = t[r] : r in e && (n[r] = e[r]);
  return n;
}
function eS(e, t) {
  const n = e.icons, r = e.aliases || /* @__PURE__ */ Object.create(null), o = /* @__PURE__ */ Object.create(null);
  function s(a) {
    if (n[a])
      return o[a] = [];
    if (!(a in o)) {
      o[a] = null;
      const l = r[a] && r[a].parent, c = l && s(l);
      c && (o[a] = [l].concat(c));
    }
    return o[a];
  }
  return Object.keys(n).concat(Object.keys(r)).forEach(s), o;
}
function tS(e, t, n) {
  const r = e.icons, o = e.aliases || /* @__PURE__ */ Object.create(null);
  let s = {};
  function a(l) {
    s = ip(
      r[l] || o[l],
      s
    );
  }
  return a(t), n.forEach(a), ip(e, s);
}
function Tg(e, t) {
  const n = [];
  if (typeof e != "object" || typeof e.icons != "object")
    return n;
  e.not_found instanceof Array && e.not_found.forEach((o) => {
    t(o, null), n.push(o);
  });
  const r = eS(e);
  for (const o in r) {
    const s = r[o];
    s && (t(o, tS(e, o, s)), n.push(o));
  }
  return n;
}
const nS = {
  provider: "",
  aliases: {},
  not_found: {},
  ...wg
};
function ac(e, t) {
  for (const n in t)
    if (n in e && typeof e[n] != typeof t[n])
      return !1;
  return !0;
}
function Sg(e) {
  if (typeof e != "object" || e === null)
    return null;
  const t = e;
  if (typeof t.prefix != "string" || !e.icons || typeof e.icons != "object" || !ac(e, nS))
    return null;
  const n = t.icons;
  for (const o in n) {
    const s = n[o];
    if (
      // Name cannot be empty
      !o || // Must have body
      typeof s.body != "string" || // Check other props
      !ac(
        s,
        Gc
      )
    )
      return null;
  }
  const r = t.aliases || /* @__PURE__ */ Object.create(null);
  for (const o in r) {
    const s = r[o], a = s.parent;
    if (
      // Name cannot be empty
      !o || // Parent must be set and point to existing icon
      typeof a != "string" || !n[a] && !r[a] || // Check other props
      !ac(
        s,
        Gc
      )
    )
      return null;
  }
  return t;
}
const Eg = /^[a-z0-9]+(-[a-z0-9]+)*$/, cl = (e, t, n, r = "") => {
  const o = e.split(":");
  if (e.slice(0, 1) === "@") {
    if (o.length < 2 || o.length > 3)
      return null;
    r = o.shift().slice(1);
  }
  if (o.length > 3 || !o.length)
    return null;
  if (o.length > 1) {
    const l = o.pop(), c = o.pop(), u = {
      // Allow provider without '@': "provider:prefix:name"
      provider: o.length > 0 ? o[0] : r,
      prefix: c,
      name: l
    };
    return t && !ia(u) ? null : u;
  }
  const s = o[0], a = s.split("-");
  if (a.length > 1) {
    const l = {
      provider: r,
      prefix: a.shift(),
      name: a.join("-")
    };
    return t && !ia(l) ? null : l;
  }
  if (n && r === "") {
    const l = {
      provider: r,
      prefix: "",
      name: s
    };
    return t && !ia(l, n) ? null : l;
  }
  return null;
}, ia = (e, t) => e ? !!// Check prefix: cannot be empty, unless allowSimpleName is enabled
// Check name: cannot be empty
((t && e.prefix === "" || e.prefix) && e.name) : !1, sp = /* @__PURE__ */ Object.create(null);
function rS(e, t) {
  return {
    provider: e,
    prefix: t,
    icons: /* @__PURE__ */ Object.create(null),
    missing: /* @__PURE__ */ new Set()
  };
}
function Yo(e, t) {
  const n = sp[e] || (sp[e] = /* @__PURE__ */ Object.create(null));
  return n[t] || (n[t] = rS(e, t));
}
function Cg(e, t) {
  return Sg(t) ? Tg(t, (n, r) => {
    r ? e.icons[n] = r : e.missing.add(n);
  }) : [];
}
function oS(e, t, n) {
  try {
    if (typeof n.body == "string")
      return e.icons[t] = { ...n }, !0;
  } catch {
  }
  return !1;
}
let ts = !1;
function Og(e) {
  return typeof e == "boolean" && (ts = e), ts;
}
function ap(e) {
  const t = typeof e == "string" ? cl(e, !0, ts) : e;
  if (t) {
    const n = Yo(t.provider, t.prefix), r = t.name;
    return n.icons[r] || (n.missing.has(r) ? null : void 0);
  }
}
function iS(e, t) {
  const n = cl(e, !0, ts);
  if (!n)
    return !1;
  const r = Yo(n.provider, n.prefix);
  return t ? oS(r, n.name, t) : (r.missing.add(n.name), !0);
}
function sS(e, t) {
  if (typeof e != "object")
    return !1;
  if (typeof t != "string" && (t = e.provider || ""), ts && !t && !e.prefix) {
    let o = !1;
    return Sg(e) && (e.prefix = "", Tg(e, (s, a) => {
      iS(s, a) && (o = !0);
    })), o;
  }
  const n = e.prefix;
  if (!ia({
    prefix: n,
    name: "a"
  }))
    return !1;
  const r = Yo(t, n);
  return !!Cg(r, e);
}
const Rg = Object.freeze({
  width: null,
  height: null
}), $g = Object.freeze({
  // Dimensions
  ...Rg,
  // Transformations
  ...va
}), aS = /(-?[0-9.]*[0-9]+[0-9.]*)/g, lS = /^-?[0-9.]*[0-9]+[0-9.]*$/g;
function lp(e, t, n) {
  if (t === 1)
    return e;
  if (n = n || 100, typeof e == "number")
    return Math.ceil(e * t * n) / n;
  if (typeof e != "string")
    return e;
  const r = e.split(aS);
  if (r === null || !r.length)
    return e;
  const o = [];
  let s = r.shift(), a = lS.test(s);
  for (; ; ) {
    if (a) {
      const l = parseFloat(s);
      isNaN(l) ? o.push(s) : o.push(Math.ceil(l * t * n) / n);
    } else
      o.push(s);
    if (s = r.shift(), s === void 0)
      return o.join("");
    a = !a;
  }
}
function cS(e, t = "defs") {
  let n = "";
  const r = e.indexOf("<" + t);
  for (; r >= 0; ) {
    const o = e.indexOf(">", r), s = e.indexOf("</" + t);
    if (o === -1 || s === -1)
      break;
    const a = e.indexOf(">", s);
    if (a === -1)
      break;
    n += e.slice(o + 1, s).trim(), e = e.slice(0, r).trim() + e.slice(a + 1);
  }
  return {
    defs: n,
    content: e
  };
}
function uS(e, t) {
  return e ? "<defs>" + e + "</defs>" + t : t;
}
function dS(e, t, n) {
  const r = cS(e);
  return uS(r.defs, t + r.content + n);
}
const fS = (e) => e === "unset" || e === "undefined" || e === "none";
function pS(e, t) {
  const n = {
    ...od,
    ...e
  }, r = {
    ...$g,
    ...t
  }, o = {
    left: n.left,
    top: n.top,
    width: n.width,
    height: n.height
  };
  let s = n.body;
  [n, r].forEach((m) => {
    const b = [], x = m.hFlip, E = m.vFlip;
    let w = m.rotate;
    x ? E ? w += 2 : (b.push(
      "translate(" + (o.width + o.left).toString() + " " + (0 - o.top).toString() + ")"
    ), b.push("scale(-1 1)"), o.top = o.left = 0) : E && (b.push(
      "translate(" + (0 - o.left).toString() + " " + (o.height + o.top).toString() + ")"
    ), b.push("scale(1 -1)"), o.top = o.left = 0);
    let T;
    switch (w < 0 && (w -= Math.floor(w / 4) * 4), w = w % 4, w) {
      case 1:
        T = o.height / 2 + o.top, b.unshift(
          "rotate(90 " + T.toString() + " " + T.toString() + ")"
        );
        break;
      case 2:
        b.unshift(
          "rotate(180 " + (o.width / 2 + o.left).toString() + " " + (o.height / 2 + o.top).toString() + ")"
        );
        break;
      case 3:
        T = o.width / 2 + o.left, b.unshift(
          "rotate(-90 " + T.toString() + " " + T.toString() + ")"
        );
        break;
    }
    w % 2 === 1 && (o.left !== o.top && (T = o.left, o.left = o.top, o.top = T), o.width !== o.height && (T = o.width, o.width = o.height, o.height = T)), b.length && (s = dS(
      s,
      '<g transform="' + b.join(" ") + '">',
      "</g>"
    ));
  });
  const a = r.width, l = r.height, c = o.width, u = o.height;
  let d, f;
  a === null ? (f = l === null ? "1em" : l === "auto" ? u : l, d = lp(f, c / u)) : (d = a === "auto" ? c : a, f = l === null ? lp(d, u / c) : l === "auto" ? u : l);
  const h = {}, g = (m, b) => {
    fS(b) || (h[m] = b.toString());
  };
  g("width", d), g("height", f);
  const y = [o.left, o.top, c, u];
  return h.viewBox = y.join(" "), {
    attributes: h,
    viewBox: y,
    body: s
  };
}
const mS = /\sid="(\S+)"/g, hS = "IconifyId" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);
let gS = 0;
function yS(e, t = hS) {
  const n = [];
  let r;
  for (; r = mS.exec(e); )
    n.push(r[1]);
  if (!n.length)
    return e;
  const o = "suffix" + (Math.random() * 16777216 | Date.now()).toString(16);
  return n.forEach((s) => {
    const a = typeof t == "function" ? t(s) : t + (gS++).toString(), l = s.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    e = e.replace(
      // Allowed characters before id: [#;"]
      // Allowed characters after id: [)"], .[a-z]
      new RegExp('([#;"])(' + l + ')([")]|\\.[a-z])', "g"),
      "$1" + a + o + "$3"
    );
  }), e = e.replace(new RegExp(o, "g"), ""), e;
}
const Kc = /* @__PURE__ */ Object.create(null);
function bS(e, t) {
  Kc[e] = t;
}
function Xc(e) {
  return Kc[e] || Kc[""];
}
function id(e) {
  let t;
  if (typeof e.resources == "string")
    t = [e.resources];
  else if (t = e.resources, !(t instanceof Array) || !t.length)
    return null;
  return {
    // API hosts
    resources: t,
    // Root path
    path: e.path || "/",
    // URL length limit
    maxURL: e.maxURL || 500,
    // Timeout before next host is used.
    rotate: e.rotate || 750,
    // Timeout before failing query.
    timeout: e.timeout || 5e3,
    // Randomise default API end point.
    random: e.random === !0,
    // Start index
    index: e.index || 0,
    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).
    dataAfterTimeout: e.dataAfterTimeout !== !1
  };
}
const sd = /* @__PURE__ */ Object.create(null), vi = [
  "https://api.simplesvg.com",
  "https://api.unisvg.com"
], sa = [];
for (; vi.length > 0; )
  vi.length === 1 || Math.random() > 0.5 ? sa.push(vi.shift()) : sa.push(vi.pop());
sd[""] = id({
  resources: ["https://api.iconify.design"].concat(sa)
});
function vS(e, t) {
  const n = id(t);
  return n === null ? !1 : (sd[e] = n, !0);
}
function ad(e) {
  return sd[e];
}
const xS = () => {
  let e;
  try {
    if (e = fetch, typeof e == "function")
      return e;
  } catch {
  }
};
let cp = xS();
function wS(e, t) {
  const n = ad(e);
  if (!n)
    return 0;
  let r;
  if (!n.maxURL)
    r = 0;
  else {
    let o = 0;
    n.resources.forEach((a) => {
      o = Math.max(o, a.length);
    });
    const s = t + ".json?icons=";
    r = n.maxURL - o - n.path.length - s.length;
  }
  return r;
}
function TS(e) {
  return e === 404;
}
const SS = (e, t, n) => {
  const r = [], o = wS(e, t), s = "icons";
  let a = {
    type: s,
    provider: e,
    prefix: t,
    icons: []
  }, l = 0;
  return n.forEach((c, u) => {
    l += c.length + 1, l >= o && u > 0 && (r.push(a), a = {
      type: s,
      provider: e,
      prefix: t,
      icons: []
    }, l = c.length), a.icons.push(c);
  }), r.push(a), r;
};
function ES(e) {
  if (typeof e == "string") {
    const t = ad(e);
    if (t)
      return t.path;
  }
  return "/";
}
const CS = (e, t, n) => {
  if (!cp) {
    n("abort", 424);
    return;
  }
  let r = ES(t.provider);
  switch (t.type) {
    case "icons": {
      const s = t.prefix, l = t.icons.join(","), c = new URLSearchParams({
        icons: l
      });
      r += s + ".json?" + c.toString();
      break;
    }
    case "custom": {
      const s = t.uri;
      r += s.slice(0, 1) === "/" ? s.slice(1) : s;
      break;
    }
    default:
      n("abort", 400);
      return;
  }
  let o = 503;
  cp(e + r).then((s) => {
    const a = s.status;
    if (a !== 200) {
      setTimeout(() => {
        n(TS(a) ? "abort" : "next", a);
      });
      return;
    }
    return o = 501, s.json();
  }).then((s) => {
    if (typeof s != "object" || s === null) {
      setTimeout(() => {
        s === 404 ? n("abort", s) : n("next", o);
      });
      return;
    }
    setTimeout(() => {
      n("success", s);
    });
  }).catch(() => {
    n("next", o);
  });
}, OS = {
  prepare: SS,
  send: CS
};
function RS(e) {
  const t = {
    loaded: [],
    missing: [],
    pending: []
  }, n = /* @__PURE__ */ Object.create(null);
  e.sort((o, s) => o.provider !== s.provider ? o.provider.localeCompare(s.provider) : o.prefix !== s.prefix ? o.prefix.localeCompare(s.prefix) : o.name.localeCompare(s.name));
  let r = {
    provider: "",
    prefix: "",
    name: ""
  };
  return e.forEach((o) => {
    if (r.name === o.name && r.prefix === o.prefix && r.provider === o.provider)
      return;
    r = o;
    const s = o.provider, a = o.prefix, l = o.name, c = n[s] || (n[s] = /* @__PURE__ */ Object.create(null)), u = c[a] || (c[a] = Yo(s, a));
    let d;
    l in u.icons ? d = t.loaded : a === "" || u.missing.has(l) ? d = t.missing : d = t.pending;
    const f = {
      provider: s,
      prefix: a,
      name: l
    };
    d.push(f);
  }), t;
}
function Pg(e, t) {
  e.forEach((n) => {
    const r = n.loaderCallbacks;
    r && (n.loaderCallbacks = r.filter((o) => o.id !== t));
  });
}
function $S(e) {
  e.pendingCallbacksFlag || (e.pendingCallbacksFlag = !0, setTimeout(() => {
    e.pendingCallbacksFlag = !1;
    const t = e.loaderCallbacks ? e.loaderCallbacks.slice(0) : [];
    if (!t.length)
      return;
    let n = !1;
    const r = e.provider, o = e.prefix;
    t.forEach((s) => {
      const a = s.icons, l = a.pending.length;
      a.pending = a.pending.filter((c) => {
        if (c.prefix !== o)
          return !0;
        const u = c.name;
        if (e.icons[u])
          a.loaded.push({
            provider: r,
            prefix: o,
            name: u
          });
        else if (e.missing.has(u))
          a.missing.push({
            provider: r,
            prefix: o,
            name: u
          });
        else
          return n = !0, !0;
        return !1;
      }), a.pending.length !== l && (n || Pg([e], s.id), s.callback(
        a.loaded.slice(0),
        a.missing.slice(0),
        a.pending.slice(0),
        s.abort
      ));
    });
  }));
}
let PS = 0;
function kS(e, t, n) {
  const r = PS++, o = Pg.bind(null, n, r);
  if (!t.pending.length)
    return o;
  const s = {
    id: r,
    icons: t,
    callback: e,
    abort: o
  };
  return n.forEach((a) => {
    (a.loaderCallbacks || (a.loaderCallbacks = [])).push(s);
  }), o;
}
function IS(e, t = !0, n = !1) {
  const r = [];
  return e.forEach((o) => {
    const s = typeof o == "string" ? cl(o, t, n) : o;
    s && r.push(s);
  }), r;
}
var NS = {
  resources: [],
  index: 0,
  timeout: 2e3,
  rotate: 750,
  random: !1,
  dataAfterTimeout: !1
};
function AS(e, t, n, r) {
  const o = e.resources.length, s = e.random ? Math.floor(Math.random() * o) : e.index;
  let a;
  if (e.random) {
    let S = e.resources.slice(0);
    for (a = []; S.length > 1; ) {
      const R = Math.floor(Math.random() * S.length);
      a.push(S[R]), S = S.slice(0, R).concat(S.slice(R + 1));
    }
    a = a.concat(S);
  } else
    a = e.resources.slice(s).concat(e.resources.slice(0, s));
  const l = Date.now();
  let c = "pending", u = 0, d, f = null, h = [], g = [];
  typeof r == "function" && g.push(r);
  function y() {
    f && (clearTimeout(f), f = null);
  }
  function m() {
    c === "pending" && (c = "aborted"), y(), h.forEach((S) => {
      S.status === "pending" && (S.status = "aborted");
    }), h = [];
  }
  function b(S, R) {
    R && (g = []), typeof S == "function" && g.push(S);
  }
  function x() {
    return {
      startTime: l,
      payload: t,
      status: c,
      queriesSent: u,
      queriesPending: h.length,
      subscribe: b,
      abort: m
    };
  }
  function E() {
    c = "failed", g.forEach((S) => {
      S(void 0, d);
    });
  }
  function w() {
    h.forEach((S) => {
      S.status === "pending" && (S.status = "aborted");
    }), h = [];
  }
  function T(S, R, $) {
    const I = R !== "success";
    switch (h = h.filter((p) => p !== S), c) {
      case "pending":
        break;
      case "failed":
        if (I || !e.dataAfterTimeout)
          return;
        break;
      default:
        return;
    }
    if (R === "abort") {
      d = $, E();
      return;
    }
    if (I) {
      d = $, h.length || (a.length ? v() : E());
      return;
    }
    if (y(), w(), !e.random) {
      const p = e.resources.indexOf(S.resource);
      p !== -1 && p !== e.index && (e.index = p);
    }
    c = "completed", g.forEach((p) => {
      p($);
    });
  }
  function v() {
    if (c !== "pending")
      return;
    y();
    const S = a.shift();
    if (S === void 0) {
      if (h.length) {
        f = setTimeout(() => {
          y(), c === "pending" && (w(), E());
        }, e.timeout);
        return;
      }
      E();
      return;
    }
    const R = {
      status: "pending",
      resource: S,
      callback: ($, I) => {
        T(R, $, I);
      }
    };
    h.push(R), u++, f = setTimeout(v, e.rotate), n(S, t, R.callback);
  }
  return setTimeout(v), x;
}
function kg(e) {
  const t = {
    ...NS,
    ...e
  };
  let n = [];
  function r() {
    n = n.filter((l) => l().status === "pending");
  }
  function o(l, c, u) {
    const d = AS(
      t,
      l,
      c,
      (f, h) => {
        r(), u && u(f, h);
      }
    );
    return n.push(d), d;
  }
  function s(l) {
    return n.find((c) => l(c)) || null;
  }
  return {
    query: o,
    find: s,
    setIndex: (l) => {
      t.index = l;
    },
    getIndex: () => t.index,
    cleanup: r
  };
}
function up() {
}
const lc = /* @__PURE__ */ Object.create(null);
function MS(e) {
  if (!lc[e]) {
    const t = ad(e);
    if (!t)
      return;
    const n = kg(t), r = {
      config: t,
      redundancy: n
    };
    lc[e] = r;
  }
  return lc[e];
}
function _S(e, t, n) {
  let r, o;
  if (typeof e == "string") {
    const s = Xc(e);
    if (!s)
      return n(void 0, 424), up;
    o = s.send;
    const a = MS(e);
    a && (r = a.redundancy);
  } else {
    const s = id(e);
    if (s) {
      r = kg(s);
      const a = e.resources ? e.resources[0] : "", l = Xc(a);
      l && (o = l.send);
    }
  }
  return !r || !o ? (n(void 0, 424), up) : r.query(t, o, n)().abort;
}
function dp() {
}
function DS(e) {
  e.iconsLoaderFlag || (e.iconsLoaderFlag = !0, setTimeout(() => {
    e.iconsLoaderFlag = !1, $S(e);
  }));
}
function BS(e) {
  const t = [], n = [];
  return e.forEach((r) => {
    (r.match(Eg) ? t : n).push(r);
  }), {
    valid: t,
    invalid: n
  };
}
function xi(e, t, n) {
  function r() {
    const o = e.pendingIcons;
    t.forEach((s) => {
      o && o.delete(s), e.icons[s] || e.missing.add(s);
    });
  }
  if (n && typeof n == "object")
    try {
      if (!Cg(e, n).length) {
        r();
        return;
      }
    } catch (o) {
      console.error(o);
    }
  r(), DS(e);
}
function fp(e, t) {
  e instanceof Promise ? e.then((n) => {
    t(n);
  }).catch(() => {
    t(null);
  }) : t(e);
}
function FS(e, t) {
  e.iconsToLoad ? e.iconsToLoad = e.iconsToLoad.concat(t).sort() : e.iconsToLoad = t, e.iconsQueueFlag || (e.iconsQueueFlag = !0, setTimeout(() => {
    e.iconsQueueFlag = !1;
    const { provider: n, prefix: r } = e, o = e.iconsToLoad;
    if (delete e.iconsToLoad, !o || !o.length)
      return;
    const s = e.loadIcon;
    if (e.loadIcons && (o.length > 1 || !s)) {
      fp(
        e.loadIcons(o, r, n),
        (d) => {
          xi(e, o, d);
        }
      );
      return;
    }
    if (s) {
      o.forEach((d) => {
        const f = s(d, r, n);
        fp(f, (h) => {
          const g = h ? {
            prefix: r,
            icons: {
              [d]: h
            }
          } : null;
          xi(e, [d], g);
        });
      });
      return;
    }
    const { valid: a, invalid: l } = BS(o);
    if (l.length && xi(e, l, null), !a.length)
      return;
    const c = r.match(Eg) ? Xc(n) : null;
    if (!c) {
      xi(e, a, null);
      return;
    }
    c.prepare(n, r, a).forEach((d) => {
      _S(n, d, (f) => {
        xi(e, d.icons, f);
      });
    });
  }));
}
const jS = (e, t) => {
  const n = IS(e, !0, Og()), r = RS(n);
  if (!r.pending.length) {
    let c = !0;
    return t && setTimeout(() => {
      c && t(
        r.loaded,
        r.missing,
        r.pending,
        dp
      );
    }), () => {
      c = !1;
    };
  }
  const o = /* @__PURE__ */ Object.create(null), s = [];
  let a, l;
  return r.pending.forEach((c) => {
    const { provider: u, prefix: d } = c;
    if (d === l && u === a)
      return;
    a = u, l = d, s.push(Yo(u, d));
    const f = o[u] || (o[u] = /* @__PURE__ */ Object.create(null));
    f[d] || (f[d] = []);
  }), r.pending.forEach((c) => {
    const { provider: u, prefix: d, name: f } = c, h = Yo(u, d), g = h.pendingIcons || (h.pendingIcons = /* @__PURE__ */ new Set());
    g.has(f) || (g.add(f), o[u][d].push(f));
  }), s.forEach((c) => {
    const u = o[c.provider][c.prefix];
    u.length && FS(c, u);
  }), t ? kS(t, r, s) : dp;
};
function LS(e, t) {
  const n = {
    ...e
  };
  for (const r in t) {
    const o = t[r], s = typeof o;
    r in Rg ? (o === null || o && (s === "string" || s === "number")) && (n[r] = o) : s === typeof n[r] && (n[r] = r === "rotate" ? o % 4 : o);
  }
  return n;
}
const VS = /[\s,]+/;
function zS(e, t) {
  t.split(VS).forEach((n) => {
    switch (n.trim()) {
      case "horizontal":
        e.hFlip = !0;
        break;
      case "vertical":
        e.vFlip = !0;
        break;
    }
  });
}
function WS(e, t = 0) {
  const n = e.replace(/^-?[0-9.]*/, "");
  function r(o) {
    for (; o < 0; )
      o += 4;
    return o % 4;
  }
  if (n === "") {
    const o = parseInt(e);
    return isNaN(o) ? 0 : r(o);
  } else if (n !== e) {
    let o = 0;
    switch (n) {
      case "%":
        o = 25;
        break;
      case "deg":
        o = 90;
    }
    if (o) {
      let s = parseFloat(e.slice(0, e.length - n.length));
      return isNaN(s) ? 0 : (s = s / o, s % 1 === 0 ? r(s) : 0);
    }
  }
  return t;
}
function US(e, t) {
  let n = e.indexOf("xlink:") === -1 ? "" : ' xmlns:xlink="http://www.w3.org/1999/xlink"';
  for (const r in t)
    n += " " + r + '="' + t[r] + '"';
  return '<svg xmlns="http://www.w3.org/2000/svg"' + n + ">" + e + "</svg>";
}
function HS(e) {
  return e.replace(/"/g, "'").replace(/%/g, "%25").replace(/#/g, "%23").replace(/</g, "%3C").replace(/>/g, "%3E").replace(/\s+/g, " ");
}
function qS(e) {
  return "data:image/svg+xml," + HS(e);
}
function YS(e) {
  return 'url("' + qS(e) + '")';
}
let ji;
function GS() {
  try {
    ji = window.trustedTypes.createPolicy("iconify", {
      // eslint-disable-next-line @typescript-eslint/no-unsafe-return
      createHTML: (e) => e
    });
  } catch {
    ji = null;
  }
}
function KS(e) {
  return ji === void 0 && GS(), ji ? ji.createHTML(e) : e;
}
const Ig = {
  ...$g,
  inline: !1
}, XS = {
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink",
  "aria-hidden": !0,
  role: "img"
}, QS = {
  display: "inline-block"
}, Qc = {
  backgroundColor: "currentColor"
}, Ng = {
  backgroundColor: "transparent"
}, pp = {
  Image: "var(--svg)",
  Repeat: "no-repeat",
  Size: "100% 100%"
}, mp = {
  WebkitMask: Qc,
  mask: Qc,
  background: Ng
};
for (const e in mp) {
  const t = mp[e];
  for (const n in pp)
    t[e + n] = pp[n];
}
const JS = {
  ...Ig,
  inline: !0
};
function hp(e) {
  return e + (e.match(/^[-0-9.]+$/) ? "px" : "");
}
const ZS = (e, t, n) => {
  const r = t.inline ? JS : Ig, o = LS(r, t), s = t.mode || "svg", a = {}, l = t.style || {}, c = {
    ...s === "svg" ? XS : {}
  };
  if (n) {
    const b = cl(n, !1, !0);
    if (b) {
      const x = ["iconify"], E = [
        "provider",
        "prefix"
      ];
      for (const w of E)
        b[w] && x.push("iconify--" + b[w]);
      c.className = x.join(" ");
    }
  }
  for (let b in t) {
    const x = t[b];
    if (x !== void 0)
      switch (b) {
        // Properties to ignore
        case "icon":
        case "style":
        case "children":
        case "onLoad":
        case "mode":
        case "ssr":
          break;
        // Forward ref
        case "_ref":
          c.ref = x;
          break;
        // Merge class names
        case "className":
          c[b] = (c[b] ? c[b] + " " : "") + x;
          break;
        // Boolean attributes
        case "inline":
        case "hFlip":
        case "vFlip":
          o[b] = x === !0 || x === "true" || x === 1;
          break;
        // Flip as string: 'horizontal,vertical'
        case "flip":
          typeof x == "string" && zS(o, x);
          break;
        // Color: copy to style
        case "color":
          a.color = x;
          break;
        // Rotation as string
        case "rotate":
          typeof x == "string" ? o[b] = WS(x) : typeof x == "number" && (o[b] = x);
          break;
        // Remove aria-hidden
        case "ariaHidden":
        case "aria-hidden":
          x !== !0 && x !== "true" && delete c["aria-hidden"];
          break;
        // Copy missing property if it does not exist in customisations
        default:
          r[b] === void 0 && (c[b] = x);
      }
  }
  const u = pS(e, o), d = u.attributes;
  if (o.inline && (a.verticalAlign = "-0.125em"), s === "svg") {
    c.style = {
      ...a,
      ...l
    }, Object.assign(c, d);
    let b = 0, x = t.id;
    return typeof x == "string" && (x = x.replace(/-/g, "_")), c.dangerouslySetInnerHTML = {
      __html: KS(yS(u.body, x ? () => x + "ID" + b++ : "iconifyReact"))
    }, co("svg", c);
  }
  const { body: f, width: h, height: g } = e, y = s === "mask" || (s === "bg" ? !1 : f.indexOf("currentColor") !== -1), m = US(f, {
    ...d,
    width: h + "",
    height: g + ""
  });
  return c.style = {
    ...a,
    "--svg": YS(m),
    width: hp(d.width),
    height: hp(d.height),
    ...QS,
    ...y ? Qc : Ng,
    ...l
  }, co("span", c);
};
Og(!0);
bS("", OS);
if (typeof document < "u" && typeof window < "u") {
  const e = window;
  if (e.IconifyPreload !== void 0) {
    const t = e.IconifyPreload, n = "Invalid IconifyPreload syntax.";
    typeof t == "object" && t !== null && (t instanceof Array ? t : [t]).forEach((r) => {
      try {
        // Check if item is an object and not null/array
        (typeof r != "object" || r === null || r instanceof Array || // Check for 'icons' and 'prefix'
        typeof r.icons != "object" || typeof r.prefix != "string" || // Add icon set
        !sS(r)) && console.error(n);
      } catch {
        console.error(n);
      }
    });
  }
  if (e.IconifyProviders !== void 0) {
    const t = e.IconifyProviders;
    if (typeof t == "object" && t !== null)
      for (let n in t) {
        const r = "IconifyProviders[" + n + "] is invalid.";
        try {
          const o = t[n];
          if (typeof o != "object" || !o || o.resources === void 0)
            continue;
          vS(n, o) || console.error(r);
        } catch {
          console.error(r);
        }
      }
  }
}
function Ag(e) {
  const [t, n] = Sr(!!e.ssr), [r, o] = Sr({});
  function s(g) {
    if (g) {
      const y = e.icon;
      if (typeof y == "object")
        return {
          name: "",
          data: y
        };
      const m = ap(y);
      if (m)
        return {
          name: y,
          data: m
        };
    }
    return {
      name: ""
    };
  }
  const [a, l] = Sr(s(!!e.ssr));
  function c() {
    const g = r.callback;
    g && (g(), o({}));
  }
  function u(g) {
    if (JSON.stringify(a) !== JSON.stringify(g))
      return c(), l(g), !0;
  }
  function d() {
    var g;
    const y = e.icon;
    if (typeof y == "object") {
      u({
        name: "",
        data: y
      });
      return;
    }
    const m = ap(y);
    if (u({
      name: y,
      data: m
    }))
      if (m === void 0) {
        const b = jS([y], d);
        o({
          callback: b
        });
      } else m && ((g = e.onLoad) === null || g === void 0 || g.call(e, y));
  }
  Uo(() => (n(!0), c), []), Uo(() => {
    t && d();
  }, [e.icon, t]);
  const { name: f, data: h } = a;
  return h ? ZS({
    ...od,
    ...h
  }, e, f) : e.children ? e.children : e.fallback ? e.fallback : co("span", {});
}
const e1 = Nu((e, t) => Ag({
  ...e,
  _ref: t
}));
Nu((e, t) => Ag({
  inline: !0,
  ...e,
  _ref: t
}));
function cc({
  theme: e,
  ...t
}) {
  const n = qn in e ? e[qn] : void 0;
  return /* @__PURE__ */ k(Zi, {
    ...t,
    themeId: n ? qn : void 0,
    theme: n || e
  });
}
const Fs = {
  colorSchemeStorageKey: "mui-color-scheme",
  defaultLightColorScheme: "light",
  defaultDarkColorScheme: "dark",
  modeStorageKey: "mui-mode"
}, {
  CssVarsProvider: t1
} = Yw({
  themeId: qn,
  // @ts-ignore ignore module augmentation tests
  theme: () => al({
    cssVariables: !0
  }),
  colorSchemeStorageKey: Fs.colorSchemeStorageKey,
  modeStorageKey: Fs.modeStorageKey,
  defaultColorScheme: {
    light: Fs.defaultLightColorScheme,
    dark: Fs.defaultDarkColorScheme
  },
  resolveTheme: (e) => {
    const t = {
      ...e,
      typography: mg(e.palette, e.typography)
    };
    return t.unstable_sx = function(r) {
      return Vr({
        sx: r,
        theme: this
      });
    }, t;
  }
}), n1 = t1;
function r1({
  theme: e,
  ...t
}) {
  if (typeof e == "function")
    return /* @__PURE__ */ k(cc, {
      theme: e,
      ...t
    });
  const n = qn in e ? e[qn] : e;
  return "colorSchemes" in n ? /* @__PURE__ */ k(n1, {
    theme: e,
    ...t
  }) : "vars" in n ? /* @__PURE__ */ k(cc, {
    theme: e,
    ...t
  }) : /* @__PURE__ */ k(cc, {
    theme: {
      ...e,
      vars: null
    },
    ...t
  });
}
const o1 = wt("MuiBox", ["root"]), i1 = al(), Rr = ow({
  themeId: qn,
  defaultTheme: i1,
  defaultClassName: o1.root,
  generateClassName: jh.generate
});
process.env.NODE_ENV !== "production" && (Rr.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
const pr = _e(({ ref: e, icon: t, width: n = 20, color: r = "auto", sx: o, ...s }) => /* @__PURE__ */ k(
  Rr,
  {
    className: "VenomousUI-Icon",
    ssr: !0,
    ref: e,
    component: e1,
    icon: t,
    sx: {
      width: n,
      height: n,
      flexShrink: 0,
      display: "inline-flex",
      color: (a) => r === "error" ? a.palette.error.main : r === "primary" ? a.palette.primary.main : r === "success" ? a.palette.success.main : r === "disabled" ? a.palette.action.disabled : "inherit",
      ...o
    },
    ...s
  }
));
pr.displayName = "Icon";
function s1(e) {
  return gt("MuiPaper", e);
}
wt("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const a1 = (e) => {
  const {
    square: t,
    elevation: n,
    variant: r,
    classes: o
  } = e, s = {
    root: ["root", r, !t && "rounded", r === "elevation" && `elevation${n}`]
  };
  return Ct(s, s1, o);
}, l1 = ke("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(Ke(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), di = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var g;
  const r = Tt({
    props: t,
    name: "MuiPaper"
  }), o = Nr(), {
    className: s,
    component: a = "div",
    elevation: l = 1,
    square: c = !1,
    variant: u = "elevation",
    ...d
  } = r, f = {
    ...r,
    component: a,
    elevation: l,
    square: c,
    variant: u
  }, h = a1(f);
  return process.env.NODE_ENV !== "production" && o.shadows[l] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${l}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${l}]\` is defined.`].join(`
`)), /* @__PURE__ */ k(l1, {
    as: a,
    ownerState: f,
    className: Ee(h.root, s),
    ref: n,
    ...d,
    style: {
      ...u === "elevation" && {
        "--Paper-shadow": (o.vars || o).shadows[l],
        ...o.vars && {
          "--Paper-overlay": (g = o.vars.overlays) == null ? void 0 : g[l]
        },
        ...!o.vars && o.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${Yt("#fff", Yc(l))}, ${Yt("#fff", Yc(l))})`
        }
      },
      ...d.style
    }
  });
});
process.env.NODE_ENV !== "production" && (di.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: Yr(Ku, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: i.bool,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: i.oneOfType([i.oneOf(["elevation", "outlined"]), i.string])
});
function fi() {
  return {
    paperCommonStyles: ln(
      () => ({
        p: "8px",
        borderRadius: "8px !important",
        backgroundColor: ({ palette: t }) => t.background.paper,
        backgroundImage: "linear-gradient(rgba(255, 255, 255, 0.119), rgba(255, 255, 255, 0.119));"
      }),
      []
    )
  };
}
const Go = _e(({ isOutlined: e, children: t, sx: n, ...r }) => {
  const { paperCommonStyles: o } = fi();
  return /* @__PURE__ */ k(
    di,
    {
      className: "VenomousUI-Paper",
      variant: e ? "outlined" : "elevation",
      elevation: e ? 0 : 3,
      square: !0,
      sx: {
        ...o,
        ...n
      },
      ...r,
      children: t
    }
  );
});
Go.displayName = "Paper";
function Mg(e, t) {
  if (e == null) return {};
  var n = {};
  for (var r in e) if ({}.hasOwnProperty.call(e, r)) {
    if (t.indexOf(r) !== -1) continue;
    n[r] = e[r];
  }
  return n;
}
function Jc(e, t) {
  return Jc = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, r) {
    return n.__proto__ = r, n;
  }, Jc(e, t);
}
function _g(e, t) {
  e.prototype = Object.create(t.prototype), e.prototype.constructor = e, Jc(e, t);
}
const gp = {
  disabled: !1
};
var c1 = process.env.NODE_ENV !== "production" ? i.oneOfType([i.number, i.shape({
  enter: i.number,
  exit: i.number,
  appear: i.number
}).isRequired]) : null;
process.env.NODE_ENV !== "production" && i.oneOfType([i.string, i.shape({
  enter: i.string,
  exit: i.string,
  active: i.string
}), i.shape({
  enter: i.string,
  enterDone: i.string,
  enterActive: i.string,
  exit: i.string,
  exitDone: i.string,
  exitActive: i.string
})]);
const xa = L.createContext(null);
var u1 = function(t) {
  return t.scrollTop;
}, Ai = "unmounted", oo = "exited", io = "entering", Mo = "entered", Zc = "exiting", $n = /* @__PURE__ */ function(e) {
  _g(t, e);
  function t(r, o) {
    var s;
    s = e.call(this, r, o) || this;
    var a = o, l = a && !a.isMounting ? r.enter : r.appear, c;
    return s.appearStatus = null, r.in ? l ? (c = oo, s.appearStatus = io) : c = Mo : r.unmountOnExit || r.mountOnEnter ? c = Ai : c = oo, s.state = {
      status: c
    }, s.nextCallback = null, s;
  }
  t.getDerivedStateFromProps = function(o, s) {
    var a = o.in;
    return a && s.status === Ai ? {
      status: oo
    } : null;
  };
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.updateStatus(!0, this.appearStatus);
  }, n.componentDidUpdate = function(o) {
    var s = null;
    if (o !== this.props) {
      var a = this.state.status;
      this.props.in ? a !== io && a !== Mo && (s = io) : (a === io || a === Mo) && (s = Zc);
    }
    this.updateStatus(!1, s);
  }, n.componentWillUnmount = function() {
    this.cancelNextCallback();
  }, n.getTimeouts = function() {
    var o = this.props.timeout, s, a, l;
    return s = a = l = o, o != null && typeof o != "number" && (s = o.exit, a = o.enter, l = o.appear !== void 0 ? o.appear : a), {
      exit: s,
      enter: a,
      appear: l
    };
  }, n.updateStatus = function(o, s) {
    if (o === void 0 && (o = !1), s !== null)
      if (this.cancelNextCallback(), s === io) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var a = this.props.nodeRef ? this.props.nodeRef.current : Do.findDOMNode(this);
          a && u1(a);
        }
        this.performEnter(o);
      } else
        this.performExit();
    else this.props.unmountOnExit && this.state.status === oo && this.setState({
      status: Ai
    });
  }, n.performEnter = function(o) {
    var s = this, a = this.props.enter, l = this.context ? this.context.isMounting : o, c = this.props.nodeRef ? [l] : [Do.findDOMNode(this), l], u = c[0], d = c[1], f = this.getTimeouts(), h = l ? f.appear : f.enter;
    if (!o && !a || gp.disabled) {
      this.safeSetState({
        status: Mo
      }, function() {
        s.props.onEntered(u);
      });
      return;
    }
    this.props.onEnter(u, d), this.safeSetState({
      status: io
    }, function() {
      s.props.onEntering(u, d), s.onTransitionEnd(h, function() {
        s.safeSetState({
          status: Mo
        }, function() {
          s.props.onEntered(u, d);
        });
      });
    });
  }, n.performExit = function() {
    var o = this, s = this.props.exit, a = this.getTimeouts(), l = this.props.nodeRef ? void 0 : Do.findDOMNode(this);
    if (!s || gp.disabled) {
      this.safeSetState({
        status: oo
      }, function() {
        o.props.onExited(l);
      });
      return;
    }
    this.props.onExit(l), this.safeSetState({
      status: Zc
    }, function() {
      o.props.onExiting(l), o.onTransitionEnd(a.exit, function() {
        o.safeSetState({
          status: oo
        }, function() {
          o.props.onExited(l);
        });
      });
    });
  }, n.cancelNextCallback = function() {
    this.nextCallback !== null && (this.nextCallback.cancel(), this.nextCallback = null);
  }, n.safeSetState = function(o, s) {
    s = this.setNextCallback(s), this.setState(o, s);
  }, n.setNextCallback = function(o) {
    var s = this, a = !0;
    return this.nextCallback = function(l) {
      a && (a = !1, s.nextCallback = null, o(l));
    }, this.nextCallback.cancel = function() {
      a = !1;
    }, this.nextCallback;
  }, n.onTransitionEnd = function(o, s) {
    this.setNextCallback(s);
    var a = this.props.nodeRef ? this.props.nodeRef.current : Do.findDOMNode(this), l = o == null && !this.props.addEndListener;
    if (!a || l) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var c = this.props.nodeRef ? [this.nextCallback] : [a, this.nextCallback], u = c[0], d = c[1];
      this.props.addEndListener(u, d);
    }
    o != null && setTimeout(this.nextCallback, o);
  }, n.render = function() {
    var o = this.state.status;
    if (o === Ai)
      return null;
    var s = this.props, a = s.children;
    s.in, s.mountOnEnter, s.unmountOnExit, s.appear, s.enter, s.exit, s.timeout, s.addEndListener, s.onEnter, s.onEntering, s.onEntered, s.onExit, s.onExiting, s.onExited, s.nodeRef;
    var l = Mg(s, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      /* @__PURE__ */ L.createElement(xa.Provider, {
        value: null
      }, typeof a == "function" ? a(o, l) : L.cloneElement(L.Children.only(a), l))
    );
  }, t;
}(L.Component);
$n.contextType = xa;
$n.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: i.shape({
    current: typeof Element > "u" ? i.any : function(e, t, n, r, o, s) {
      var a = e[t];
      return i.instanceOf(a && "ownerDocument" in a ? a.ownerDocument.defaultView.Element : Element)(e, t, n, r, o, s);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: i.oneOfType([i.func.isRequired, i.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: i.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: i.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: i.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: i.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: i.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: i.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function(t) {
    var n = c1;
    t.addEndListener || (n = n.isRequired);
    for (var r = arguments.length, o = new Array(r > 1 ? r - 1 : 0), s = 1; s < r; s++)
      o[s - 1] = arguments[s];
    return n.apply(void 0, [t].concat(o));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: i.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: i.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: i.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: i.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: i.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: i.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: i.func
} : {};
function Ro() {
}
$n.defaultProps = {
  in: !1,
  mountOnEnter: !1,
  unmountOnExit: !1,
  appear: !1,
  enter: !0,
  exit: !0,
  onEnter: Ro,
  onEntering: Ro,
  onEntered: Ro,
  onExit: Ro,
  onExiting: Ro,
  onExited: Ro
};
$n.UNMOUNTED = Ai;
$n.EXITED = oo;
$n.ENTERING = io;
$n.ENTERED = Mo;
$n.EXITING = Zc;
function d1(e) {
  if (e === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function ld(e, t) {
  var n = function(s) {
    return t && Zs(s) ? t(s) : s;
  }, r = /* @__PURE__ */ Object.create(null);
  return e && Wv.map(e, function(o) {
    return o;
  }).forEach(function(o) {
    r[o.key] = n(o);
  }), r;
}
function f1(e, t) {
  e = e || {}, t = t || {};
  function n(d) {
    return d in t ? t[d] : e[d];
  }
  var r = /* @__PURE__ */ Object.create(null), o = [];
  for (var s in e)
    s in t ? o.length && (r[s] = o, o = []) : o.push(s);
  var a, l = {};
  for (var c in t) {
    if (r[c])
      for (a = 0; a < r[c].length; a++) {
        var u = r[c][a];
        l[r[c][a]] = n(u);
      }
    l[c] = n(c);
  }
  for (a = 0; a < o.length; a++)
    l[o[a]] = n(o[a]);
  return l;
}
function so(e, t, n) {
  return n[t] != null ? n[t] : e.props[t];
}
function p1(e, t) {
  return ld(e.children, function(n) {
    return ea(n, {
      onExited: t.bind(null, n),
      in: !0,
      appear: so(n, "appear", e),
      enter: so(n, "enter", e),
      exit: so(n, "exit", e)
    });
  });
}
function m1(e, t, n) {
  var r = ld(e.children), o = f1(t, r);
  return Object.keys(o).forEach(function(s) {
    var a = o[s];
    if (Zs(a)) {
      var l = s in t, c = s in r, u = t[s], d = Zs(u) && !u.props.in;
      c && (!l || d) ? o[s] = ea(a, {
        onExited: n.bind(null, a),
        in: !0,
        exit: so(a, "exit", e),
        enter: so(a, "enter", e)
      }) : !c && l && !d ? o[s] = ea(a, {
        in: !1
      }) : c && l && Zs(u) && (o[s] = ea(a, {
        onExited: n.bind(null, a),
        in: u.props.in,
        exit: so(a, "exit", e),
        enter: so(a, "enter", e)
      }));
    }
  }), o;
}
var h1 = Object.values || function(e) {
  return Object.keys(e).map(function(t) {
    return e[t];
  });
}, g1 = {
  component: "div",
  childFactory: function(t) {
    return t;
  }
}, cd = /* @__PURE__ */ function(e) {
  _g(t, e);
  function t(r, o) {
    var s;
    s = e.call(this, r, o) || this;
    var a = s.handleExited.bind(d1(s));
    return s.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: a,
      firstRender: !0
    }, s;
  }
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, n.componentWillUnmount = function() {
    this.mounted = !1;
  }, t.getDerivedStateFromProps = function(o, s) {
    var a = s.children, l = s.handleExited, c = s.firstRender;
    return {
      children: c ? p1(o, l) : m1(o, a, l),
      firstRender: !1
    };
  }, n.handleExited = function(o, s) {
    var a = ld(this.props.children);
    o.key in a || (o.props.onExited && o.props.onExited(s), this.mounted && this.setState(function(l) {
      var c = ma({}, l.children);
      return delete c[o.key], {
        children: c
      };
    }));
  }, n.render = function() {
    var o = this.props, s = o.component, a = o.childFactory, l = Mg(o, ["component", "childFactory"]), c = this.state.contextValue, u = h1(this.state.children).map(a);
    return delete l.appear, delete l.enter, delete l.exit, s === null ? /* @__PURE__ */ L.createElement(xa.Provider, {
      value: c
    }, u) : /* @__PURE__ */ L.createElement(xa.Provider, {
      value: c
    }, /* @__PURE__ */ L.createElement(s, l, u));
  }, t;
}(L.Component);
cd.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: i.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: i.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: i.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: i.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: i.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: i.func
} : {};
cd.defaultProps = g1;
const ud = (e) => e.scrollTop;
function Ko(e, t) {
  const {
    timeout: n,
    easing: r,
    style: o = {}
  } = e;
  return {
    duration: o.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: o.transitionTimingFunction ?? (typeof r == "object" ? r[t.mode] : r),
    delay: o.transitionDelay
  };
}
const y1 = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, po = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Nr(), o = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: s,
    appear: a = !0,
    children: l,
    easing: c,
    in: u,
    onEnter: d,
    onEntered: f,
    onEntering: h,
    onExit: g,
    onExited: y,
    onExiting: m,
    style: b,
    timeout: x = o,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: E = $n,
    ...w
  } = t, T = C.useRef(null), v = nn(T, bo(l), n), S = (D) => (_) => {
    if (D) {
      const M = T.current;
      _ === void 0 ? D(M) : D(M, _);
    }
  }, R = S(h), $ = S((D, _) => {
    ud(D);
    const M = Ko({
      style: b,
      timeout: x,
      easing: c
    }, {
      mode: "enter"
    });
    D.style.webkitTransition = r.transitions.create("opacity", M), D.style.transition = r.transitions.create("opacity", M), d && d(D, _);
  }), I = S(f), p = S(m), O = S((D) => {
    const _ = Ko({
      style: b,
      timeout: x,
      easing: c
    }, {
      mode: "exit"
    });
    D.style.webkitTransition = r.transitions.create("opacity", _), D.style.transition = r.transitions.create("opacity", _), g && g(D);
  }), P = S(y);
  return /* @__PURE__ */ k(E, {
    appear: a,
    in: u,
    nodeRef: T,
    onEnter: $,
    onEntered: I,
    onEntering: R,
    onExit: O,
    onExited: P,
    onExiting: p,
    addEndListener: (D) => {
      s && s(T.current, D);
    },
    timeout: x,
    ...w,
    children: (D, {
      ownerState: _,
      ...M
    }) => /* @__PURE__ */ C.cloneElement(l, {
      style: {
        opacity: 0,
        visibility: D === "exited" && !u ? "hidden" : void 0,
        ...y1[D],
        ...b,
        ...l.props.style
      },
      ref: v,
      ...M
    })
  });
});
process.env.NODE_ENV !== "production" && (po.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: Gr.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function eu(e) {
  return `scale(${e}, ${e ** 2})`;
}
const b1 = {
  entering: {
    opacity: 1,
    transform: eu(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, uc = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), ns = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    addEndListener: r,
    appear: o = !0,
    children: s,
    easing: a,
    in: l,
    onEnter: c,
    onEntered: u,
    onEntering: d,
    onExit: f,
    onExited: h,
    onExiting: g,
    style: y,
    timeout: m = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: b = $n,
    ...x
  } = t, E = Bo(), w = C.useRef(), T = Nr(), v = C.useRef(null), S = nn(v, bo(s), n), R = (_) => (M) => {
    if (_) {
      const V = v.current;
      M === void 0 ? _(V) : _(V, M);
    }
  }, $ = R(d), I = R((_, M) => {
    ud(_);
    const {
      duration: V,
      delay: Y,
      easing: U
    } = Ko({
      style: y,
      timeout: m,
      easing: a
    }, {
      mode: "enter"
    });
    let j;
    m === "auto" ? (j = T.transitions.getAutoHeightDuration(_.clientHeight), w.current = j) : j = V, _.style.transition = [T.transitions.create("opacity", {
      duration: j,
      delay: Y
    }), T.transitions.create("transform", {
      duration: uc ? j : j * 0.666,
      delay: Y,
      easing: U
    })].join(","), c && c(_, M);
  }), p = R(u), O = R(g), P = R((_) => {
    const {
      duration: M,
      delay: V,
      easing: Y
    } = Ko({
      style: y,
      timeout: m,
      easing: a
    }, {
      mode: "exit"
    });
    let U;
    m === "auto" ? (U = T.transitions.getAutoHeightDuration(_.clientHeight), w.current = U) : U = M, _.style.transition = [T.transitions.create("opacity", {
      duration: U,
      delay: V
    }), T.transitions.create("transform", {
      duration: uc ? U : U * 0.666,
      delay: uc ? V : V || U * 0.333,
      easing: Y
    })].join(","), _.style.opacity = 0, _.style.transform = eu(0.75), f && f(_);
  }), A = R(h);
  return /* @__PURE__ */ k(b, {
    appear: o,
    in: l,
    nodeRef: v,
    onEnter: I,
    onEntered: p,
    onEntering: $,
    onExit: P,
    onExited: A,
    onExiting: O,
    addEndListener: (_) => {
      m === "auto" && E.start(w.current || 0, _), r && r(v.current, _);
    },
    timeout: m === "auto" ? null : m,
    ...x,
    children: (_, {
      ownerState: M,
      ...V
    }) => /* @__PURE__ */ C.cloneElement(s, {
      style: {
        opacity: 0,
        transform: eu(0.75),
        visibility: _ === "exited" && !l ? "hidden" : void 0,
        ...b1[_],
        ...y,
        ...s.props.style
      },
      ref: S,
      ...V
    })
  });
});
process.env.NODE_ENV !== "production" && (ns.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: Gr.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
ns && (ns.muiSupportAuto = !0);
var mn = "top", Bn = "bottom", Fn = "right", hn = "left", dd = "auto", ys = [mn, Bn, Fn, hn], Xo = "start", rs = "end", v1 = "clippingParents", Dg = "viewport", wi = "popper", x1 = "reference", yp = /* @__PURE__ */ ys.reduce(function(e, t) {
  return e.concat([t + "-" + Xo, t + "-" + rs]);
}, []), Bg = /* @__PURE__ */ [].concat(ys, [dd]).reduce(function(e, t) {
  return e.concat([t, t + "-" + Xo, t + "-" + rs]);
}, []), w1 = "beforeRead", T1 = "read", S1 = "afterRead", E1 = "beforeMain", C1 = "main", O1 = "afterMain", R1 = "beforeWrite", $1 = "write", P1 = "afterWrite", k1 = [w1, T1, S1, E1, C1, O1, R1, $1, P1];
function mr(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function Rn(e) {
  if (e == null)
    return window;
  if (e.toString() !== "[object Window]") {
    var t = e.ownerDocument;
    return t && t.defaultView || window;
  }
  return e;
}
function mo(e) {
  var t = Rn(e).Element;
  return e instanceof t || e instanceof Element;
}
function Dn(e) {
  var t = Rn(e).HTMLElement;
  return e instanceof t || e instanceof HTMLElement;
}
function fd(e) {
  if (typeof ShadowRoot > "u")
    return !1;
  var t = Rn(e).ShadowRoot;
  return e instanceof t || e instanceof ShadowRoot;
}
function I1(e) {
  var t = e.state;
  Object.keys(t.elements).forEach(function(n) {
    var r = t.styles[n] || {}, o = t.attributes[n] || {}, s = t.elements[n];
    !Dn(s) || !mr(s) || (Object.assign(s.style, r), Object.keys(o).forEach(function(a) {
      var l = o[a];
      l === !1 ? s.removeAttribute(a) : s.setAttribute(a, l === !0 ? "" : l);
    }));
  });
}
function N1(e) {
  var t = e.state, n = {
    popper: {
      position: t.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(t.elements.popper.style, n.popper), t.styles = n, t.elements.arrow && Object.assign(t.elements.arrow.style, n.arrow), function() {
    Object.keys(t.elements).forEach(function(r) {
      var o = t.elements[r], s = t.attributes[r] || {}, a = Object.keys(t.styles.hasOwnProperty(r) ? t.styles[r] : n[r]), l = a.reduce(function(c, u) {
        return c[u] = "", c;
      }, {});
      !Dn(o) || !mr(o) || (Object.assign(o.style, l), Object.keys(s).forEach(function(c) {
        o.removeAttribute(c);
      }));
    });
  };
}
const A1 = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: I1,
  effect: N1,
  requires: ["computeStyles"]
};
function cr(e) {
  return e.split("-")[0];
}
var uo = Math.max, wa = Math.min, Qo = Math.round;
function tu() {
  var e = navigator.userAgentData;
  return e != null && e.brands && Array.isArray(e.brands) ? e.brands.map(function(t) {
    return t.brand + "/" + t.version;
  }).join(" ") : navigator.userAgent;
}
function Fg() {
  return !/^((?!chrome|android).)*safari/i.test(tu());
}
function Jo(e, t, n) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  var r = e.getBoundingClientRect(), o = 1, s = 1;
  t && Dn(e) && (o = e.offsetWidth > 0 && Qo(r.width) / e.offsetWidth || 1, s = e.offsetHeight > 0 && Qo(r.height) / e.offsetHeight || 1);
  var a = mo(e) ? Rn(e) : window, l = a.visualViewport, c = !Fg() && n, u = (r.left + (c && l ? l.offsetLeft : 0)) / o, d = (r.top + (c && l ? l.offsetTop : 0)) / s, f = r.width / o, h = r.height / s;
  return {
    width: f,
    height: h,
    top: d,
    right: u + f,
    bottom: d + h,
    left: u,
    x: u,
    y: d
  };
}
function pd(e) {
  var t = Jo(e), n = e.offsetWidth, r = e.offsetHeight;
  return Math.abs(t.width - n) <= 1 && (n = t.width), Math.abs(t.height - r) <= 1 && (r = t.height), {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: n,
    height: r
  };
}
function jg(e, t) {
  var n = t.getRootNode && t.getRootNode();
  if (e.contains(t))
    return !0;
  if (n && fd(n)) {
    var r = t;
    do {
      if (r && e.isSameNode(r))
        return !0;
      r = r.parentNode || r.host;
    } while (r);
  }
  return !1;
}
function $r(e) {
  return Rn(e).getComputedStyle(e);
}
function M1(e) {
  return ["table", "td", "th"].indexOf(mr(e)) >= 0;
}
function Kr(e) {
  return ((mo(e) ? e.ownerDocument : (
    // $FlowFixMe[prop-missing]
    e.document
  )) || window.document).documentElement;
}
function ul(e) {
  return mr(e) === "html" ? e : (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    e.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e.parentNode || // DOM Element detected
    (fd(e) ? e.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    Kr(e)
  );
}
function bp(e) {
  return !Dn(e) || // https://github.com/popperjs/popper-core/issues/837
  $r(e).position === "fixed" ? null : e.offsetParent;
}
function _1(e) {
  var t = /firefox/i.test(tu()), n = /Trident/i.test(tu());
  if (n && Dn(e)) {
    var r = $r(e);
    if (r.position === "fixed")
      return null;
  }
  var o = ul(e);
  for (fd(o) && (o = o.host); Dn(o) && ["html", "body"].indexOf(mr(o)) < 0; ) {
    var s = $r(o);
    if (s.transform !== "none" || s.perspective !== "none" || s.contain === "paint" || ["transform", "perspective"].indexOf(s.willChange) !== -1 || t && s.willChange === "filter" || t && s.filter && s.filter !== "none")
      return o;
    o = o.parentNode;
  }
  return null;
}
function bs(e) {
  for (var t = Rn(e), n = bp(e); n && M1(n) && $r(n).position === "static"; )
    n = bp(n);
  return n && (mr(n) === "html" || mr(n) === "body" && $r(n).position === "static") ? t : n || _1(e) || t;
}
function md(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function Li(e, t, n) {
  return uo(e, wa(t, n));
}
function D1(e, t, n) {
  var r = Li(e, t, n);
  return r > n ? n : r;
}
function Lg() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function Vg(e) {
  return Object.assign({}, Lg(), e);
}
function zg(e, t) {
  return t.reduce(function(n, r) {
    return n[r] = e, n;
  }, {});
}
var B1 = function(t, n) {
  return t = typeof t == "function" ? t(Object.assign({}, n.rects, {
    placement: n.placement
  })) : t, Vg(typeof t != "number" ? t : zg(t, ys));
};
function F1(e) {
  var t, n = e.state, r = e.name, o = e.options, s = n.elements.arrow, a = n.modifiersData.popperOffsets, l = cr(n.placement), c = md(l), u = [hn, Fn].indexOf(l) >= 0, d = u ? "height" : "width";
  if (!(!s || !a)) {
    var f = B1(o.padding, n), h = pd(s), g = c === "y" ? mn : hn, y = c === "y" ? Bn : Fn, m = n.rects.reference[d] + n.rects.reference[c] - a[c] - n.rects.popper[d], b = a[c] - n.rects.reference[c], x = bs(s), E = x ? c === "y" ? x.clientHeight || 0 : x.clientWidth || 0 : 0, w = m / 2 - b / 2, T = f[g], v = E - h[d] - f[y], S = E / 2 - h[d] / 2 + w, R = Li(T, S, v), $ = c;
    n.modifiersData[r] = (t = {}, t[$] = R, t.centerOffset = R - S, t);
  }
}
function j1(e) {
  var t = e.state, n = e.options, r = n.element, o = r === void 0 ? "[data-popper-arrow]" : r;
  o != null && (typeof o == "string" && (o = t.elements.popper.querySelector(o), !o) || jg(t.elements.popper, o) && (t.elements.arrow = o));
}
const L1 = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: F1,
  effect: j1,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function Zo(e) {
  return e.split("-")[1];
}
var V1 = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function z1(e, t) {
  var n = e.x, r = e.y, o = t.devicePixelRatio || 1;
  return {
    x: Qo(n * o) / o || 0,
    y: Qo(r * o) / o || 0
  };
}
function vp(e) {
  var t, n = e.popper, r = e.popperRect, o = e.placement, s = e.variation, a = e.offsets, l = e.position, c = e.gpuAcceleration, u = e.adaptive, d = e.roundOffsets, f = e.isFixed, h = a.x, g = h === void 0 ? 0 : h, y = a.y, m = y === void 0 ? 0 : y, b = typeof d == "function" ? d({
    x: g,
    y: m
  }) : {
    x: g,
    y: m
  };
  g = b.x, m = b.y;
  var x = a.hasOwnProperty("x"), E = a.hasOwnProperty("y"), w = hn, T = mn, v = window;
  if (u) {
    var S = bs(n), R = "clientHeight", $ = "clientWidth";
    if (S === Rn(n) && (S = Kr(n), $r(S).position !== "static" && l === "absolute" && (R = "scrollHeight", $ = "scrollWidth")), S = S, o === mn || (o === hn || o === Fn) && s === rs) {
      T = Bn;
      var I = f && S === v && v.visualViewport ? v.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        S[R]
      );
      m -= I - r.height, m *= c ? 1 : -1;
    }
    if (o === hn || (o === mn || o === Bn) && s === rs) {
      w = Fn;
      var p = f && S === v && v.visualViewport ? v.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        S[$]
      );
      g -= p - r.width, g *= c ? 1 : -1;
    }
  }
  var O = Object.assign({
    position: l
  }, u && V1), P = d === !0 ? z1({
    x: g,
    y: m
  }, Rn(n)) : {
    x: g,
    y: m
  };
  if (g = P.x, m = P.y, c) {
    var A;
    return Object.assign({}, O, (A = {}, A[T] = E ? "0" : "", A[w] = x ? "0" : "", A.transform = (v.devicePixelRatio || 1) <= 1 ? "translate(" + g + "px, " + m + "px)" : "translate3d(" + g + "px, " + m + "px, 0)", A));
  }
  return Object.assign({}, O, (t = {}, t[T] = E ? m + "px" : "", t[w] = x ? g + "px" : "", t.transform = "", t));
}
function W1(e) {
  var t = e.state, n = e.options, r = n.gpuAcceleration, o = r === void 0 ? !0 : r, s = n.adaptive, a = s === void 0 ? !0 : s, l = n.roundOffsets, c = l === void 0 ? !0 : l, u = {
    placement: cr(t.placement),
    variation: Zo(t.placement),
    popper: t.elements.popper,
    popperRect: t.rects.popper,
    gpuAcceleration: o,
    isFixed: t.options.strategy === "fixed"
  };
  t.modifiersData.popperOffsets != null && (t.styles.popper = Object.assign({}, t.styles.popper, vp(Object.assign({}, u, {
    offsets: t.modifiersData.popperOffsets,
    position: t.options.strategy,
    adaptive: a,
    roundOffsets: c
  })))), t.modifiersData.arrow != null && (t.styles.arrow = Object.assign({}, t.styles.arrow, vp(Object.assign({}, u, {
    offsets: t.modifiersData.arrow,
    position: "absolute",
    adaptive: !1,
    roundOffsets: c
  })))), t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-placement": t.placement
  });
}
const U1 = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: W1,
  data: {}
};
var js = {
  passive: !0
};
function H1(e) {
  var t = e.state, n = e.instance, r = e.options, o = r.scroll, s = o === void 0 ? !0 : o, a = r.resize, l = a === void 0 ? !0 : a, c = Rn(t.elements.popper), u = [].concat(t.scrollParents.reference, t.scrollParents.popper);
  return s && u.forEach(function(d) {
    d.addEventListener("scroll", n.update, js);
  }), l && c.addEventListener("resize", n.update, js), function() {
    s && u.forEach(function(d) {
      d.removeEventListener("scroll", n.update, js);
    }), l && c.removeEventListener("resize", n.update, js);
  };
}
const q1 = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: function() {
  },
  effect: H1,
  data: {}
};
var Y1 = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function aa(e) {
  return e.replace(/left|right|bottom|top/g, function(t) {
    return Y1[t];
  });
}
var G1 = {
  start: "end",
  end: "start"
};
function xp(e) {
  return e.replace(/start|end/g, function(t) {
    return G1[t];
  });
}
function hd(e) {
  var t = Rn(e), n = t.pageXOffset, r = t.pageYOffset;
  return {
    scrollLeft: n,
    scrollTop: r
  };
}
function gd(e) {
  return Jo(Kr(e)).left + hd(e).scrollLeft;
}
function K1(e, t) {
  var n = Rn(e), r = Kr(e), o = n.visualViewport, s = r.clientWidth, a = r.clientHeight, l = 0, c = 0;
  if (o) {
    s = o.width, a = o.height;
    var u = Fg();
    (u || !u && t === "fixed") && (l = o.offsetLeft, c = o.offsetTop);
  }
  return {
    width: s,
    height: a,
    x: l + gd(e),
    y: c
  };
}
function X1(e) {
  var t, n = Kr(e), r = hd(e), o = (t = e.ownerDocument) == null ? void 0 : t.body, s = uo(n.scrollWidth, n.clientWidth, o ? o.scrollWidth : 0, o ? o.clientWidth : 0), a = uo(n.scrollHeight, n.clientHeight, o ? o.scrollHeight : 0, o ? o.clientHeight : 0), l = -r.scrollLeft + gd(e), c = -r.scrollTop;
  return $r(o || n).direction === "rtl" && (l += uo(n.clientWidth, o ? o.clientWidth : 0) - s), {
    width: s,
    height: a,
    x: l,
    y: c
  };
}
function yd(e) {
  var t = $r(e), n = t.overflow, r = t.overflowX, o = t.overflowY;
  return /auto|scroll|overlay|hidden/.test(n + o + r);
}
function Wg(e) {
  return ["html", "body", "#document"].indexOf(mr(e)) >= 0 ? e.ownerDocument.body : Dn(e) && yd(e) ? e : Wg(ul(e));
}
function Vi(e, t) {
  var n;
  t === void 0 && (t = []);
  var r = Wg(e), o = r === ((n = e.ownerDocument) == null ? void 0 : n.body), s = Rn(r), a = o ? [s].concat(s.visualViewport || [], yd(r) ? r : []) : r, l = t.concat(a);
  return o ? l : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    l.concat(Vi(ul(a)))
  );
}
function nu(e) {
  return Object.assign({}, e, {
    left: e.x,
    top: e.y,
    right: e.x + e.width,
    bottom: e.y + e.height
  });
}
function Q1(e, t) {
  var n = Jo(e, !1, t === "fixed");
  return n.top = n.top + e.clientTop, n.left = n.left + e.clientLeft, n.bottom = n.top + e.clientHeight, n.right = n.left + e.clientWidth, n.width = e.clientWidth, n.height = e.clientHeight, n.x = n.left, n.y = n.top, n;
}
function wp(e, t, n) {
  return t === Dg ? nu(K1(e, n)) : mo(t) ? Q1(t, n) : nu(X1(Kr(e)));
}
function J1(e) {
  var t = Vi(ul(e)), n = ["absolute", "fixed"].indexOf($r(e).position) >= 0, r = n && Dn(e) ? bs(e) : e;
  return mo(r) ? t.filter(function(o) {
    return mo(o) && jg(o, r) && mr(o) !== "body";
  }) : [];
}
function Z1(e, t, n, r) {
  var o = t === "clippingParents" ? J1(e) : [].concat(t), s = [].concat(o, [n]), a = s[0], l = s.reduce(function(c, u) {
    var d = wp(e, u, r);
    return c.top = uo(d.top, c.top), c.right = wa(d.right, c.right), c.bottom = wa(d.bottom, c.bottom), c.left = uo(d.left, c.left), c;
  }, wp(e, a, r));
  return l.width = l.right - l.left, l.height = l.bottom - l.top, l.x = l.left, l.y = l.top, l;
}
function Ug(e) {
  var t = e.reference, n = e.element, r = e.placement, o = r ? cr(r) : null, s = r ? Zo(r) : null, a = t.x + t.width / 2 - n.width / 2, l = t.y + t.height / 2 - n.height / 2, c;
  switch (o) {
    case mn:
      c = {
        x: a,
        y: t.y - n.height
      };
      break;
    case Bn:
      c = {
        x: a,
        y: t.y + t.height
      };
      break;
    case Fn:
      c = {
        x: t.x + t.width,
        y: l
      };
      break;
    case hn:
      c = {
        x: t.x - n.width,
        y: l
      };
      break;
    default:
      c = {
        x: t.x,
        y: t.y
      };
  }
  var u = o ? md(o) : null;
  if (u != null) {
    var d = u === "y" ? "height" : "width";
    switch (s) {
      case Xo:
        c[u] = c[u] - (t[d] / 2 - n[d] / 2);
        break;
      case rs:
        c[u] = c[u] + (t[d] / 2 - n[d] / 2);
        break;
    }
  }
  return c;
}
function os(e, t) {
  t === void 0 && (t = {});
  var n = t, r = n.placement, o = r === void 0 ? e.placement : r, s = n.strategy, a = s === void 0 ? e.strategy : s, l = n.boundary, c = l === void 0 ? v1 : l, u = n.rootBoundary, d = u === void 0 ? Dg : u, f = n.elementContext, h = f === void 0 ? wi : f, g = n.altBoundary, y = g === void 0 ? !1 : g, m = n.padding, b = m === void 0 ? 0 : m, x = Vg(typeof b != "number" ? b : zg(b, ys)), E = h === wi ? x1 : wi, w = e.rects.popper, T = e.elements[y ? E : h], v = Z1(mo(T) ? T : T.contextElement || Kr(e.elements.popper), c, d, a), S = Jo(e.elements.reference), R = Ug({
    reference: S,
    element: w,
    placement: o
  }), $ = nu(Object.assign({}, w, R)), I = h === wi ? $ : S, p = {
    top: v.top - I.top + x.top,
    bottom: I.bottom - v.bottom + x.bottom,
    left: v.left - I.left + x.left,
    right: I.right - v.right + x.right
  }, O = e.modifiersData.offset;
  if (h === wi && O) {
    var P = O[o];
    Object.keys(p).forEach(function(A) {
      var D = [Fn, Bn].indexOf(A) >= 0 ? 1 : -1, _ = [mn, Bn].indexOf(A) >= 0 ? "y" : "x";
      p[A] += P[_] * D;
    });
  }
  return p;
}
function eE(e, t) {
  t === void 0 && (t = {});
  var n = t, r = n.placement, o = n.boundary, s = n.rootBoundary, a = n.padding, l = n.flipVariations, c = n.allowedAutoPlacements, u = c === void 0 ? Bg : c, d = Zo(r), f = d ? l ? yp : yp.filter(function(y) {
    return Zo(y) === d;
  }) : ys, h = f.filter(function(y) {
    return u.indexOf(y) >= 0;
  });
  h.length === 0 && (h = f);
  var g = h.reduce(function(y, m) {
    return y[m] = os(e, {
      placement: m,
      boundary: o,
      rootBoundary: s,
      padding: a
    })[cr(m)], y;
  }, {});
  return Object.keys(g).sort(function(y, m) {
    return g[y] - g[m];
  });
}
function tE(e) {
  if (cr(e) === dd)
    return [];
  var t = aa(e);
  return [xp(e), t, xp(t)];
}
function nE(e) {
  var t = e.state, n = e.options, r = e.name;
  if (!t.modifiersData[r]._skip) {
    for (var o = n.mainAxis, s = o === void 0 ? !0 : o, a = n.altAxis, l = a === void 0 ? !0 : a, c = n.fallbackPlacements, u = n.padding, d = n.boundary, f = n.rootBoundary, h = n.altBoundary, g = n.flipVariations, y = g === void 0 ? !0 : g, m = n.allowedAutoPlacements, b = t.options.placement, x = cr(b), E = x === b, w = c || (E || !y ? [aa(b)] : tE(b)), T = [b].concat(w).reduce(function(oe, ne) {
      return oe.concat(cr(ne) === dd ? eE(t, {
        placement: ne,
        boundary: d,
        rootBoundary: f,
        padding: u,
        flipVariations: y,
        allowedAutoPlacements: m
      }) : ne);
    }, []), v = t.rects.reference, S = t.rects.popper, R = /* @__PURE__ */ new Map(), $ = !0, I = T[0], p = 0; p < T.length; p++) {
      var O = T[p], P = cr(O), A = Zo(O) === Xo, D = [mn, Bn].indexOf(P) >= 0, _ = D ? "width" : "height", M = os(t, {
        placement: O,
        boundary: d,
        rootBoundary: f,
        altBoundary: h,
        padding: u
      }), V = D ? A ? Fn : hn : A ? Bn : mn;
      v[_] > S[_] && (V = aa(V));
      var Y = aa(V), U = [];
      if (s && U.push(M[P] <= 0), l && U.push(M[V] <= 0, M[Y] <= 0), U.every(function(oe) {
        return oe;
      })) {
        I = O, $ = !1;
        break;
      }
      R.set(O, U);
    }
    if ($)
      for (var j = y ? 3 : 1, W = function(ne) {
        var se = T.find(function(de) {
          var X = R.get(de);
          if (X)
            return X.slice(0, ne).every(function(ae) {
              return ae;
            });
        });
        if (se)
          return I = se, "break";
      }, ee = j; ee > 0; ee--) {
        var K = W(ee);
        if (K === "break") break;
      }
    t.placement !== I && (t.modifiersData[r]._skip = !0, t.placement = I, t.reset = !0);
  }
}
const rE = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: nE,
  requiresIfExists: ["offset"],
  data: {
    _skip: !1
  }
};
function Tp(e, t, n) {
  return n === void 0 && (n = {
    x: 0,
    y: 0
  }), {
    top: e.top - t.height - n.y,
    right: e.right - t.width + n.x,
    bottom: e.bottom - t.height + n.y,
    left: e.left - t.width - n.x
  };
}
function Sp(e) {
  return [mn, Fn, Bn, hn].some(function(t) {
    return e[t] >= 0;
  });
}
function oE(e) {
  var t = e.state, n = e.name, r = t.rects.reference, o = t.rects.popper, s = t.modifiersData.preventOverflow, a = os(t, {
    elementContext: "reference"
  }), l = os(t, {
    altBoundary: !0
  }), c = Tp(a, r), u = Tp(l, o, s), d = Sp(c), f = Sp(u);
  t.modifiersData[n] = {
    referenceClippingOffsets: c,
    popperEscapeOffsets: u,
    isReferenceHidden: d,
    hasPopperEscaped: f
  }, t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-reference-hidden": d,
    "data-popper-escaped": f
  });
}
const iE = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: oE
};
function sE(e, t, n) {
  var r = cr(e), o = [hn, mn].indexOf(r) >= 0 ? -1 : 1, s = typeof n == "function" ? n(Object.assign({}, t, {
    placement: e
  })) : n, a = s[0], l = s[1];
  return a = a || 0, l = (l || 0) * o, [hn, Fn].indexOf(r) >= 0 ? {
    x: l,
    y: a
  } : {
    x: a,
    y: l
  };
}
function aE(e) {
  var t = e.state, n = e.options, r = e.name, o = n.offset, s = o === void 0 ? [0, 0] : o, a = Bg.reduce(function(d, f) {
    return d[f] = sE(f, t.rects, s), d;
  }, {}), l = a[t.placement], c = l.x, u = l.y;
  t.modifiersData.popperOffsets != null && (t.modifiersData.popperOffsets.x += c, t.modifiersData.popperOffsets.y += u), t.modifiersData[r] = a;
}
const lE = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: aE
};
function cE(e) {
  var t = e.state, n = e.name;
  t.modifiersData[n] = Ug({
    reference: t.rects.reference,
    element: t.rects.popper,
    placement: t.placement
  });
}
const uE = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: cE,
  data: {}
};
function dE(e) {
  return e === "x" ? "y" : "x";
}
function fE(e) {
  var t = e.state, n = e.options, r = e.name, o = n.mainAxis, s = o === void 0 ? !0 : o, a = n.altAxis, l = a === void 0 ? !1 : a, c = n.boundary, u = n.rootBoundary, d = n.altBoundary, f = n.padding, h = n.tether, g = h === void 0 ? !0 : h, y = n.tetherOffset, m = y === void 0 ? 0 : y, b = os(t, {
    boundary: c,
    rootBoundary: u,
    padding: f,
    altBoundary: d
  }), x = cr(t.placement), E = Zo(t.placement), w = !E, T = md(x), v = dE(T), S = t.modifiersData.popperOffsets, R = t.rects.reference, $ = t.rects.popper, I = typeof m == "function" ? m(Object.assign({}, t.rects, {
    placement: t.placement
  })) : m, p = typeof I == "number" ? {
    mainAxis: I,
    altAxis: I
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, I), O = t.modifiersData.offset ? t.modifiersData.offset[t.placement] : null, P = {
    x: 0,
    y: 0
  };
  if (S) {
    if (s) {
      var A, D = T === "y" ? mn : hn, _ = T === "y" ? Bn : Fn, M = T === "y" ? "height" : "width", V = S[T], Y = V + b[D], U = V - b[_], j = g ? -$[M] / 2 : 0, W = E === Xo ? R[M] : $[M], ee = E === Xo ? -$[M] : -R[M], K = t.elements.arrow, oe = g && K ? pd(K) : {
        width: 0,
        height: 0
      }, ne = t.modifiersData["arrow#persistent"] ? t.modifiersData["arrow#persistent"].padding : Lg(), se = ne[D], de = ne[_], X = Li(0, R[M], oe[M]), ae = w ? R[M] / 2 - j - X - se - p.mainAxis : W - X - se - p.mainAxis, Q = w ? -R[M] / 2 + j + X + de + p.mainAxis : ee + X + de + p.mainAxis, ie = t.elements.arrow && bs(t.elements.arrow), F = ie ? T === "y" ? ie.clientTop || 0 : ie.clientLeft || 0 : 0, he = (A = O == null ? void 0 : O[T]) != null ? A : 0, fe = V + ae - he - F, Se = V + Q - he, Le = Li(g ? wa(Y, fe) : Y, V, g ? uo(U, Se) : U);
      S[T] = Le, P[T] = Le - V;
    }
    if (l) {
      var Ae, Ie = T === "x" ? mn : hn, Re = T === "x" ? Bn : Fn, Be = S[v], Oe = v === "y" ? "height" : "width", N = Be + b[Ie], q = Be - b[Re], J = [mn, hn].indexOf(x) !== -1, H = (Ae = O == null ? void 0 : O[v]) != null ? Ae : 0, B = J ? N : Be - R[Oe] - $[Oe] - H + p.altAxis, z = J ? Be + R[Oe] + $[Oe] - H - p.altAxis : q, G = g && J ? D1(B, Be, z) : Li(g ? B : N, Be, g ? z : q);
      S[v] = G, P[v] = G - Be;
    }
    t.modifiersData[r] = P;
  }
}
const pE = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: fE,
  requiresIfExists: ["offset"]
};
function mE(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function hE(e) {
  return e === Rn(e) || !Dn(e) ? hd(e) : mE(e);
}
function gE(e) {
  var t = e.getBoundingClientRect(), n = Qo(t.width) / e.offsetWidth || 1, r = Qo(t.height) / e.offsetHeight || 1;
  return n !== 1 || r !== 1;
}
function yE(e, t, n) {
  n === void 0 && (n = !1);
  var r = Dn(t), o = Dn(t) && gE(t), s = Kr(t), a = Jo(e, o, n), l = {
    scrollLeft: 0,
    scrollTop: 0
  }, c = {
    x: 0,
    y: 0
  };
  return (r || !r && !n) && ((mr(t) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  yd(s)) && (l = hE(t)), Dn(t) ? (c = Jo(t, !0), c.x += t.clientLeft, c.y += t.clientTop) : s && (c.x = gd(s))), {
    x: a.left + l.scrollLeft - c.x,
    y: a.top + l.scrollTop - c.y,
    width: a.width,
    height: a.height
  };
}
function bE(e) {
  var t = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), r = [];
  e.forEach(function(s) {
    t.set(s.name, s);
  });
  function o(s) {
    n.add(s.name);
    var a = [].concat(s.requires || [], s.requiresIfExists || []);
    a.forEach(function(l) {
      if (!n.has(l)) {
        var c = t.get(l);
        c && o(c);
      }
    }), r.push(s);
  }
  return e.forEach(function(s) {
    n.has(s.name) || o(s);
  }), r;
}
function vE(e) {
  var t = bE(e);
  return k1.reduce(function(n, r) {
    return n.concat(t.filter(function(o) {
      return o.phase === r;
    }));
  }, []);
}
function xE(e) {
  var t;
  return function() {
    return t || (t = new Promise(function(n) {
      Promise.resolve().then(function() {
        t = void 0, n(e());
      });
    })), t;
  };
}
function wE(e) {
  var t = e.reduce(function(n, r) {
    var o = n[r.name];
    return n[r.name] = o ? Object.assign({}, o, r, {
      options: Object.assign({}, o.options, r.options),
      data: Object.assign({}, o.data, r.data)
    }) : r, n;
  }, {});
  return Object.keys(t).map(function(n) {
    return t[n];
  });
}
var Ep = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function Cp() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return !t.some(function(r) {
    return !(r && typeof r.getBoundingClientRect == "function");
  });
}
function TE(e) {
  e === void 0 && (e = {});
  var t = e, n = t.defaultModifiers, r = n === void 0 ? [] : n, o = t.defaultOptions, s = o === void 0 ? Ep : o;
  return function(l, c, u) {
    u === void 0 && (u = s);
    var d = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, Ep, s),
      modifiersData: {},
      elements: {
        reference: l,
        popper: c
      },
      attributes: {},
      styles: {}
    }, f = [], h = !1, g = {
      state: d,
      setOptions: function(x) {
        var E = typeof x == "function" ? x(d.options) : x;
        m(), d.options = Object.assign({}, s, d.options, E), d.scrollParents = {
          reference: mo(l) ? Vi(l) : l.contextElement ? Vi(l.contextElement) : [],
          popper: Vi(c)
        };
        var w = vE(wE([].concat(r, d.options.modifiers)));
        return d.orderedModifiers = w.filter(function(T) {
          return T.enabled;
        }), y(), g.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function() {
        if (!h) {
          var x = d.elements, E = x.reference, w = x.popper;
          if (Cp(E, w)) {
            d.rects = {
              reference: yE(E, bs(w), d.options.strategy === "fixed"),
              popper: pd(w)
            }, d.reset = !1, d.placement = d.options.placement, d.orderedModifiers.forEach(function(p) {
              return d.modifiersData[p.name] = Object.assign({}, p.data);
            });
            for (var T = 0; T < d.orderedModifiers.length; T++) {
              if (d.reset === !0) {
                d.reset = !1, T = -1;
                continue;
              }
              var v = d.orderedModifiers[T], S = v.fn, R = v.options, $ = R === void 0 ? {} : R, I = v.name;
              typeof S == "function" && (d = S({
                state: d,
                options: $,
                name: I,
                instance: g
              }) || d);
            }
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: xE(function() {
        return new Promise(function(b) {
          g.forceUpdate(), b(d);
        });
      }),
      destroy: function() {
        m(), h = !0;
      }
    };
    if (!Cp(l, c))
      return g;
    g.setOptions(u).then(function(b) {
      !h && u.onFirstUpdate && u.onFirstUpdate(b);
    });
    function y() {
      d.orderedModifiers.forEach(function(b) {
        var x = b.name, E = b.options, w = E === void 0 ? {} : E, T = b.effect;
        if (typeof T == "function") {
          var v = T({
            state: d,
            name: x,
            instance: g,
            options: w
          }), S = function() {
          };
          f.push(v || S);
        }
      });
    }
    function m() {
      f.forEach(function(b) {
        return b();
      }), f = [];
    }
    return g;
  };
}
var SE = [q1, uE, U1, A1, lE, rE, pE, L1, iE], EE = /* @__PURE__ */ TE({
  defaultModifiers: SE
});
function CE(e) {
  return typeof e == "function" ? e() : e;
}
const ei = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    children: r,
    container: o,
    disablePortal: s = !1
  } = t, [a, l] = C.useState(null), c = nn(/* @__PURE__ */ C.isValidElement(r) ? bo(r) : null, n);
  if (dr(() => {
    s || l(CE(o) || document.body);
  }, [o, s]), dr(() => {
    if (a && !s)
      return Wc(n, a), () => {
        Wc(n, null);
      };
  }, [n, a, s]), s) {
    if (/* @__PURE__ */ C.isValidElement(r)) {
      const u = {
        ref: c
      };
      return /* @__PURE__ */ C.cloneElement(r, u);
    }
    return r;
  }
  return a && /* @__PURE__ */ hh.createPortal(r, a);
});
process.env.NODE_ENV !== "production" && (ei.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: i.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([Or, i.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool
});
process.env.NODE_ENV !== "production" && (ei.propTypes = gs(ei.propTypes));
function OE(e) {
  return gt("MuiPopper", e);
}
wt("MuiPopper", ["root"]);
function RE(e, t) {
  if (t === "ltr")
    return e;
  switch (e) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return e;
  }
}
function Ta(e) {
  return typeof e == "function" ? e() : e;
}
function dl(e) {
  return e.nodeType !== void 0;
}
function $E(e) {
  return !dl(e);
}
const PE = (e) => {
  const {
    classes: t
  } = e;
  return Ct({
    root: ["root"]
  }, OE, t);
}, kE = {}, IE = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    anchorEl: r,
    children: o,
    direction: s,
    disablePortal: a,
    modifiers: l,
    open: c,
    placement: u,
    popperOptions: d,
    popperRef: f,
    slotProps: h = {},
    slots: g = {},
    TransitionProps: y,
    // @ts-ignore internal logic
    ownerState: m,
    // prevent from spreading to DOM, it can come from the parent component e.g. Select.
    ...b
  } = t, x = C.useRef(null), E = nn(x, n), w = C.useRef(null), T = nn(w, f), v = C.useRef(T);
  dr(() => {
    v.current = T;
  }, [T]), C.useImperativeHandle(f, () => w.current, []);
  const S = RE(u, s), [R, $] = C.useState(S), [I, p] = C.useState(Ta(r));
  C.useEffect(() => {
    w.current && w.current.forceUpdate();
  }), C.useEffect(() => {
    r && p(Ta(r));
  }, [r]), dr(() => {
    if (!I || !c)
      return;
    const _ = (Y) => {
      $(Y.placement);
    };
    if (process.env.NODE_ENV !== "production" && I && dl(I) && I.nodeType === 1) {
      const Y = I.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && Y.top === 0 && Y.left === 0 && Y.right === 0 && Y.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    let M = [{
      name: "preventOverflow",
      options: {
        altBoundary: a
      }
    }, {
      name: "flip",
      options: {
        altBoundary: a
      }
    }, {
      name: "onUpdate",
      enabled: !0,
      phase: "afterWrite",
      fn: ({
        state: Y
      }) => {
        _(Y);
      }
    }];
    l != null && (M = M.concat(l)), d && d.modifiers != null && (M = M.concat(d.modifiers));
    const V = EE(I, x.current, {
      placement: S,
      ...d,
      modifiers: M
    });
    return v.current(V), () => {
      V.destroy(), v.current(null);
    };
  }, [I, a, l, c, d, S]);
  const O = {
    placement: R
  };
  y !== null && (O.TransitionProps = y);
  const P = PE(t), A = g.root ?? "div", D = Hc({
    elementType: A,
    externalSlotProps: h.root,
    externalForwardedProps: b,
    additionalProps: {
      role: "tooltip",
      ref: E
    },
    ownerState: t,
    className: P.root
  });
  return /* @__PURE__ */ k(A, {
    ...D,
    children: typeof o == "function" ? o(O) : o
  });
}), Hg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    anchorEl: r,
    children: o,
    container: s,
    direction: a = "ltr",
    disablePortal: l = !1,
    keepMounted: c = !1,
    modifiers: u,
    open: d,
    placement: f = "bottom",
    popperOptions: h = kE,
    popperRef: g,
    style: y,
    transition: m = !1,
    slotProps: b = {},
    slots: x = {},
    ...E
  } = t, [w, T] = C.useState(!0), v = () => {
    T(!1);
  }, S = () => {
    T(!0);
  };
  if (!c && !d && (!m || w))
    return null;
  let R;
  if (s)
    R = s;
  else if (r) {
    const p = Ta(r);
    R = p && dl(p) ? pn(p).body : pn(null).body;
  }
  const $ = !d && c && (!m || w) ? "none" : void 0, I = m ? {
    in: d,
    onEnter: v,
    onExited: S
  } : void 0;
  return /* @__PURE__ */ k(ei, {
    disablePortal: l,
    container: R,
    children: /* @__PURE__ */ k(IE, {
      anchorEl: r,
      direction: a,
      disablePortal: l,
      modifiers: u,
      ref: n,
      open: m ? !w : d,
      placement: f,
      popperOptions: h,
      popperRef: g,
      slotProps: b,
      slots: x,
      ...E,
      style: {
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: "fixed",
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display: $,
        ...y
      },
      TransitionProps: I,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (Hg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: Yr(i.oneOfType([Or, i.object, i.func]), (e) => {
    if (e.open) {
      const t = Ta(e.anchorEl);
      if (t && dl(t) && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || $E(t) && t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join(`
`));
    }
    return null;
  }),
  /**
   * Popper render function or node.
   */
  children: i.oneOfType([i.node, i.func]),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([Or, i.func]),
  /**
   * Direction of the text.
   * @default 'ltr'
   */
  direction: i.oneOf(["ltr", "rtl"]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: i.arrayOf(i.shape({
    data: i.object,
    effect: i.func,
    enabled: i.bool,
    fn: i.func,
    name: i.any,
    options: i.object,
    phase: i.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: i.arrayOf(i.string),
    requiresIfExists: i.arrayOf(i.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: i.shape({
    modifiers: i.array,
    onFirstUpdate: i.func,
    placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: i.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Ir,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType
  }),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: i.bool
});
const NE = ke(Hg, {
  name: "MuiPopper",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), fl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = sl(), o = Tt({
    props: t,
    name: "MuiPopper"
  }), {
    anchorEl: s,
    component: a,
    components: l,
    componentsProps: c,
    container: u,
    disablePortal: d,
    keepMounted: f,
    modifiers: h,
    open: g,
    placement: y,
    popperOptions: m,
    popperRef: b,
    transition: x,
    slots: E,
    slotProps: w,
    ...T
  } = o, v = (E == null ? void 0 : E.root) ?? (l == null ? void 0 : l.Root), S = {
    anchorEl: s,
    container: u,
    disablePortal: d,
    keepMounted: f,
    modifiers: h,
    open: g,
    placement: y,
    popperOptions: m,
    popperRef: b,
    transition: x,
    ...T
  };
  return /* @__PURE__ */ k(NE, {
    as: a,
    direction: r ? "rtl" : "ltr",
    slots: {
      root: v
    },
    slotProps: w ?? c,
    ...S,
    ref: n
  });
});
process.env.NODE_ENV !== "production" && (fl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: i.oneOfType([Or, i.object, i.func]),
  /**
   * Popper render function or node.
   */
  children: i.oneOfType([i.node, i.func]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  components: i.shape({
    Root: i.elementType
  }),
  /**
   * The props used for each slot inside the Popper.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  componentsProps: i.shape({
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([Or, i.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: i.arrayOf(i.shape({
    data: i.object,
    effect: i.func,
    enabled: i.bool,
    fn: i.func,
    name: i.any,
    options: i.object,
    phase: i.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: i.arrayOf(i.string),
    requiresIfExists: i.arrayOf(i.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: i.shape({
    modifiers: i.array,
    onFirstUpdate: i.func,
    placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: i.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Ir,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: i.bool
});
function AE(e) {
  return gt("MuiTooltip", e);
}
const kt = wt("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]);
function ME(e) {
  return Math.round(e * 1e5) / 1e5;
}
const _E = (e) => {
  const {
    classes: t,
    disableInteractive: n,
    arrow: r,
    touch: o,
    placement: s
  } = e, a = {
    popper: ["popper", !n && "popperInteractive", r && "popperArrow"],
    tooltip: ["tooltip", r && "tooltipArrow", o && "touch", `tooltipPlacement${xe(s.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return Ct(a, AE, t);
}, DE = ke(fl, {
  name: "MuiTooltip",
  slot: "Popper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.popper, !n.disableInteractive && t.popperInteractive, n.arrow && t.popperArrow, !n.open && t.popperClose];
  }
})(Ke(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.tooltip,
  pointerEvents: "none",
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableInteractive,
    style: {
      pointerEvents: "auto"
    }
  }, {
    props: ({
      open: t
    }) => !t,
    style: {
      pointerEvents: "none"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      [`&[data-popper-placement*="bottom"] .${kt.arrow}`]: {
        top: 0,
        marginTop: "-0.71em",
        "&::before": {
          transformOrigin: "0 100%"
        }
      },
      [`&[data-popper-placement*="top"] .${kt.arrow}`]: {
        bottom: 0,
        marginBottom: "-0.71em",
        "&::before": {
          transformOrigin: "100% 0"
        }
      },
      [`&[data-popper-placement*="right"] .${kt.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "100% 100%"
        }
      },
      [`&[data-popper-placement*="left"] .${kt.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "0 0"
        }
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${kt.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${kt.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${kt.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${kt.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }]
}))), BE = ke("div", {
  name: "MuiTooltip",
  slot: "Tooltip",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.tooltip, n.touch && t.touch, n.arrow && t.tooltipArrow, t[`tooltipPlacement${xe(n.placement.split("-")[0])}`]];
  }
})(Ke(({
  theme: e
}) => ({
  backgroundColor: e.vars ? e.vars.palette.Tooltip.bg : Yt(e.palette.grey[700], 0.92),
  borderRadius: (e.vars || e).shape.borderRadius,
  color: (e.vars || e).palette.common.white,
  fontFamily: e.typography.fontFamily,
  padding: "4px 8px",
  fontSize: e.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: "break-word",
  fontWeight: e.typography.fontWeightMedium,
  [`.${kt.popper}[data-popper-placement*="left"] &`]: {
    transformOrigin: "right center"
  },
  [`.${kt.popper}[data-popper-placement*="right"] &`]: {
    transformOrigin: "left center"
  },
  [`.${kt.popper}[data-popper-placement*="top"] &`]: {
    transformOrigin: "center bottom",
    marginBottom: "14px"
  },
  [`.${kt.popper}[data-popper-placement*="bottom"] &`]: {
    transformOrigin: "center top",
    marginTop: "14px"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      position: "relative",
      margin: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      padding: "8px 16px",
      fontSize: e.typography.pxToRem(14),
      lineHeight: `${ME(16 / 14)}em`,
      fontWeight: e.typography.fontWeightRegular
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl,
    style: {
      [`.${kt.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "14px"
      },
      [`.${kt.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl && t.touch,
    style: {
      [`.${kt.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "24px"
      },
      [`.${kt.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl,
    style: {
      [`.${kt.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "14px"
      },
      [`.${kt.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl && t.touch,
    style: {
      [`.${kt.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "24px"
      },
      [`.${kt.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${kt.popper}[data-popper-placement*="top"] &`]: {
        marginBottom: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${kt.popper}[data-popper-placement*="bottom"] &`]: {
        marginTop: "24px"
      }
    }
  }]
}))), FE = ke("span", {
  name: "MuiTooltip",
  slot: "Arrow",
  overridesResolver: (e, t) => t.arrow
})(Ke(({
  theme: e
}) => ({
  overflow: "hidden",
  position: "absolute",
  width: "1em",
  height: "0.71em",
  boxSizing: "border-box",
  color: e.vars ? e.vars.palette.Tooltip.bg : Yt(e.palette.grey[700], 0.9),
  "&::before": {
    content: '""',
    margin: "auto",
    display: "block",
    width: "100%",
    height: "100%",
    backgroundColor: "currentColor",
    transform: "rotate(45deg)"
  }
})));
let Ls = !1;
const Op = new Jh();
let Ti = {
  x: 0,
  y: 0
};
function Vs(e, t) {
  return (n, ...r) => {
    t && t(n, ...r), e(n, ...r);
  };
}
const bd = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Tt({
    props: t,
    name: "MuiTooltip"
  }), {
    arrow: o = !1,
    children: s,
    classes: a,
    components: l = {},
    componentsProps: c = {},
    describeChild: u = !1,
    disableFocusListener: d = !1,
    disableHoverListener: f = !1,
    disableInteractive: h = !1,
    disableTouchListener: g = !1,
    enterDelay: y = 100,
    enterNextDelay: m = 0,
    enterTouchDelay: b = 700,
    followCursor: x = !1,
    id: E,
    leaveDelay: w = 0,
    leaveTouchDelay: T = 1500,
    onClose: v,
    onOpen: S,
    open: R,
    placement: $ = "bottom",
    PopperComponent: I,
    PopperProps: p = {},
    slotProps: O = {},
    slots: P = {},
    title: A,
    TransitionComponent: D,
    TransitionProps: _,
    ...M
  } = r, V = /* @__PURE__ */ C.isValidElement(s) ? s : /* @__PURE__ */ k("span", {
    children: s
  }), Y = Nr(), U = sl(), [j, W] = C.useState(), [ee, K] = C.useState(null), oe = C.useRef(!1), ne = h || x, se = Bo(), de = Bo(), X = Bo(), ae = Bo(), [Q, ie] = Xh({
    controlled: R,
    default: !1,
    name: "Tooltip",
    state: "open"
  });
  let F = Q;
  if (process.env.NODE_ENV !== "production") {
    const {
      current: $e
    } = C.useRef(R !== void 0);
    C.useEffect(() => {
      j && j.disabled && !$e && A !== "" && j.tagName.toLowerCase() === "button" && console.warn(["MUI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join(`
`));
    }, [A, j, $e]);
  }
  const he = Gu(E), fe = C.useRef(), Se = lr(() => {
    fe.current !== void 0 && (document.body.style.WebkitUserSelect = fe.current, fe.current = void 0), ae.clear();
  });
  C.useEffect(() => Se, [Se]);
  const Le = ($e) => {
    Op.clear(), Ls = !0, ie(!0), S && !F && S($e);
  }, Ae = lr(
    /**
     * @param {React.SyntheticEvent | Event} event
     */
    ($e) => {
      Op.start(800 + w, () => {
        Ls = !1;
      }), ie(!1), v && F && v($e), se.start(Y.transitions.duration.shortest, () => {
        oe.current = !1;
      });
    }
  ), Ie = ($e) => {
    oe.current && $e.type !== "touchstart" || (j && j.removeAttribute("title"), de.clear(), X.clear(), y || Ls && m ? de.start(Ls ? m : y, () => {
      Le($e);
    }) : Le($e));
  }, Re = ($e) => {
    de.clear(), X.start(w, () => {
      Ae($e);
    });
  }, [, Be] = C.useState(!1), Oe = ($e) => {
    ya($e.target) || (Be(!1), Re($e));
  }, N = ($e) => {
    j || W($e.currentTarget), ya($e.target) && (Be(!0), Ie($e));
  }, q = ($e) => {
    oe.current = !0;
    const Lt = V.props;
    Lt.onTouchStart && Lt.onTouchStart($e);
  }, J = ($e) => {
    q($e), X.clear(), se.clear(), Se(), fe.current = document.body.style.WebkitUserSelect, document.body.style.WebkitUserSelect = "none", ae.start(b, () => {
      document.body.style.WebkitUserSelect = fe.current, Ie($e);
    });
  }, H = ($e) => {
    V.props.onTouchEnd && V.props.onTouchEnd($e), Se(), X.start(T, () => {
      Ae($e);
    });
  };
  C.useEffect(() => {
    if (!F)
      return;
    function $e(Lt) {
      Lt.key === "Escape" && Ae(Lt);
    }
    return document.addEventListener("keydown", $e), () => {
      document.removeEventListener("keydown", $e);
    };
  }, [Ae, F]);
  const B = nn(bo(V), W, n);
  !A && A !== 0 && (F = !1);
  const z = C.useRef(), G = ($e) => {
    const Lt = V.props;
    Lt.onMouseMove && Lt.onMouseMove($e), Ti = {
      x: $e.clientX,
      y: $e.clientY
    }, z.current && z.current.update();
  }, pe = {}, me = typeof A == "string";
  u ? (pe.title = !F && me && !f ? A : null, pe["aria-describedby"] = F ? he : null) : (pe["aria-label"] = me ? A : null, pe["aria-labelledby"] = F && !me ? he : null);
  const re = {
    ...pe,
    ...M,
    ...V.props,
    className: Ee(M.className, V.props.className),
    onTouchStart: q,
    ref: B,
    ...x ? {
      onMouseMove: G
    } : {}
  };
  process.env.NODE_ENV !== "production" && (re["data-mui-internal-clone-element"] = !0, C.useEffect(() => {
    j && !j.getAttribute("data-mui-internal-clone-element") && console.error(["MUI: The `children` component of the Tooltip is not forwarding its props correctly.", "Please make sure that props are spread on the same element that the ref is applied to."].join(`
`));
  }, [j]));
  const Z = {};
  g || (re.onTouchStart = J, re.onTouchEnd = H), f || (re.onMouseOver = Vs(Ie, re.onMouseOver), re.onMouseLeave = Vs(Re, re.onMouseLeave), ne || (Z.onMouseOver = Ie, Z.onMouseLeave = Re)), d || (re.onFocus = Vs(N, re.onFocus), re.onBlur = Vs(Oe, re.onBlur), ne || (Z.onFocus = N, Z.onBlur = Oe)), process.env.NODE_ENV !== "production" && V.props.title && console.error(["MUI: You have provided a `title` prop to the child of <Tooltip />.", `Remove this title prop \`${V.props.title}\` or the Tooltip component.`].join(`
`));
  const te = {
    ...r,
    isRtl: U,
    arrow: o,
    disableInteractive: ne,
    placement: $,
    PopperComponentProp: I,
    touch: oe.current
  }, ye = typeof O.popper == "function" ? O.popper(te) : O.popper, Te = C.useMemo(() => {
    var Lt, Dt;
    let $e = [{
      name: "arrow",
      enabled: !!ee,
      options: {
        element: ee,
        padding: 4
      }
    }];
    return (Lt = p.popperOptions) != null && Lt.modifiers && ($e = $e.concat(p.popperOptions.modifiers)), (Dt = ye == null ? void 0 : ye.popperOptions) != null && Dt.modifiers && ($e = $e.concat(ye.popperOptions.modifiers)), {
      ...p.popperOptions,
      ...ye == null ? void 0 : ye.popperOptions,
      modifiers: $e
    };
  }, [ee, p.popperOptions, ye == null ? void 0 : ye.popperOptions]), le = _E(te), we = typeof O.transition == "function" ? O.transition(te) : O.transition, Me = {
    slots: {
      popper: l.Popper,
      transition: l.Transition ?? D,
      tooltip: l.Tooltip,
      arrow: l.Arrow,
      ...P
    },
    slotProps: {
      arrow: O.arrow ?? c.arrow,
      popper: {
        ...p,
        ...ye ?? c.popper
      },
      // resolvedPopperProps can be spread because it's already an object
      tooltip: O.tooltip ?? c.tooltip,
      transition: {
        ..._,
        ...we ?? c.transition
      }
    }
  }, [ze, Ye] = at("popper", {
    elementType: DE,
    externalForwardedProps: Me,
    ownerState: te,
    className: Ee(le.popper, p == null ? void 0 : p.className)
  }), [It, pt] = at("transition", {
    elementType: ns,
    externalForwardedProps: Me,
    ownerState: te
  }), [Nt, De] = at("tooltip", {
    elementType: BE,
    className: le.tooltip,
    externalForwardedProps: Me,
    ownerState: te
  }), [ot, St] = at("arrow", {
    elementType: FE,
    className: le.arrow,
    externalForwardedProps: Me,
    ownerState: te,
    ref: K
  });
  return /* @__PURE__ */ Pe(C.Fragment, {
    children: [/* @__PURE__ */ C.cloneElement(V, re), /* @__PURE__ */ k(ze, {
      as: I ?? fl,
      placement: $,
      anchorEl: x ? {
        getBoundingClientRect: () => ({
          top: Ti.y,
          left: Ti.x,
          right: Ti.x,
          bottom: Ti.y,
          width: 0,
          height: 0
        })
      } : j,
      popperRef: z,
      open: j ? F : !1,
      id: he,
      transition: !0,
      ...Z,
      ...Ye,
      popperOptions: Te,
      children: ({
        TransitionProps: $e
      }) => /* @__PURE__ */ k(It, {
        timeout: Y.transitions.duration.shorter,
        ...$e,
        ...pt,
        children: /* @__PURE__ */ Pe(Nt, {
          ...De,
          children: [A, o ? /* @__PURE__ */ k(ot, {
            ...St
          }) : null]
        })
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (bd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: i.bool,
  /**
   * Tooltip reference element.
   */
  children: Gr.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Arrow: i.elementType,
    Popper: i.elementType,
    Tooltip: i.elementType,
    Transition: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    arrow: i.object,
    popper: i.object,
    tooltip: i.object,
    transition: i.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: i.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: i.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: i.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: i.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: i.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: i.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: i.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: i.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: i.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: i.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: i.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: i.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: i.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The component used for the popper.
   * @deprecated use the `slots.popper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PopperComponent: i.elementType,
  /**
   * Props applied to the [`Popper`](https://mui.com/material-ui/api/popper/) element.
   * @deprecated use the `slotProps.popper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PopperProps: i.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    arrow: i.oneOfType([i.func, i.object]),
    popper: i.oneOfType([i.func, i.object]),
    tooltip: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    arrow: i.elementType,
    popper: i.elementType,
    tooltip: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: i.node,
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: i.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: i.object
});
function jE(e) {
  return gt("MuiTypography", e);
}
wt("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]);
const LE = {
  primary: !0,
  secondary: !0,
  error: !0,
  info: !0,
  success: !0,
  warning: !0,
  textPrimary: !0,
  textSecondary: !0,
  textDisabled: !0
}, VE = _T(), zE = (e) => {
  const {
    align: t,
    gutterBottom: n,
    noWrap: r,
    paragraph: o,
    variant: s,
    classes: a
  } = e, l = {
    root: ["root", s, e.align !== "inherit" && `align${xe(t)}`, n && "gutterBottom", r && "noWrap", o && "paragraph"]
  };
  return Ct(l, jE, a);
}, WE = ke("span", {
  name: "MuiTypography",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.variant && t[n.variant], n.align !== "inherit" && t[`align${xe(n.align)}`], n.noWrap && t.noWrap, n.gutterBottom && t.gutterBottom, n.paragraph && t.paragraph];
  }
})(Ke(({
  theme: e
}) => {
  var t;
  return {
    margin: 0,
    variants: [{
      props: {
        variant: "inherit"
      },
      style: {
        // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
        font: "inherit",
        lineHeight: "inherit",
        letterSpacing: "inherit"
      }
    }, ...Object.entries(e.typography).filter(([n, r]) => n !== "inherit" && r && typeof r == "object").map(([n, r]) => ({
      props: {
        variant: n
      },
      style: r
    })), ...Object.entries(e.palette).filter(cn()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        color: (e.vars || e).palette[n].main
      }
    })), ...Object.entries(((t = e.palette) == null ? void 0 : t.text) || {}).filter(([, n]) => typeof n == "string").map(([n]) => ({
      props: {
        color: `text${xe(n)}`
      },
      style: {
        color: (e.vars || e).palette.text[n]
      }
    })), {
      props: ({
        ownerState: n
      }) => n.align !== "inherit",
      style: {
        textAlign: "var(--Typography-textAlign)"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.noWrap,
      style: {
        overflow: "hidden",
        textOverflow: "ellipsis",
        whiteSpace: "nowrap"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.gutterBottom,
      style: {
        marginBottom: "0.35em"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.paragraph,
      style: {
        marginBottom: 16
      }
    }]
  };
})), Rp = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  inherit: "p"
}, qg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    color: r,
    ...o
  } = Tt({
    props: t,
    name: "MuiTypography"
  }), s = !LE[r], a = VE({
    ...o,
    ...s && {
      color: r
    }
  }), {
    align: l = "inherit",
    className: c,
    component: u,
    gutterBottom: d = !1,
    noWrap: f = !1,
    paragraph: h = !1,
    variant: g = "body1",
    variantMapping: y = Rp,
    ...m
  } = a, b = {
    ...a,
    align: l,
    color: r,
    className: c,
    component: u,
    gutterBottom: d,
    noWrap: f,
    paragraph: h,
    variant: g,
    variantMapping: y
  }, x = u || (h ? "p" : y[g] || Rp[g]) || "span", E = zE(b);
  return /* @__PURE__ */ k(WE, {
    as: x,
    ref: n,
    className: Ee(E.root, c),
    ...m,
    ownerState: b,
    style: {
      ...l !== "inherit" && {
        "--Typography-textAlign": l
      },
      ...m.style
    }
  });
});
process.env.NODE_ENV !== "production" && (qg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the component.
   * @default 'inherit'
   */
  align: i.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "success", "error", "info", "warning", "textPrimary", "textSecondary", "textDisabled"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */
  gutterBottom: i.bool,
  /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */
  noWrap: i.bool,
  /**
   * If `true`, the element will be a paragraph element.
   * @default false
   * @deprecated Use the `component` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  paragraph: i.bool,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Applies the theme typography styles.
   * @default 'body1'
   */
  variant: i.oneOfType([i.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), i.string]),
  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */
  variantMapping: i.object
});
function pl({
  isTitle: e = !1,
  isLabel: t = !1,
  titleLevel: n = "h6",
  textColor: r = "auto",
  bold: o = !1,
  ellipsis: s = !1
}) {
  return {
    textCommonStyles: ln(
      () => ({
        typography: e ? n : t ? "caption" : "body1",
        fontWeight: e || t || o ? "bold" : "normal",
        color: (l) => r === "error" ? l.palette.error.main : r === "primary" ? l.palette.primary.main : r === "success" ? l.palette.success.main : r === "disabled" ? l.palette.action.disabled : "inherit",
        ...s ? {
          width: "100%",
          whiteSpace: "nowrap",
          overflow: "hidden",
          textOverflow: "ellipsis"
        } : {}
      }),
      [e, t, r, o, s]
    )
  };
}
const yn = _e(
  ({
    text: e,
    isLabel: t,
    isTitle: n = !1,
    titleLevel: r = "h6",
    ellipsis: o = !1,
    textColor: s = "auto",
    bold: a,
    sx: l,
    ...c
  }) => {
    const { textCommonStyles: u } = pl({
      isTitle: n,
      isLabel: t,
      titleLevel: r,
      textColor: s,
      bold: a,
      ellipsis: o
    }), d = ln(
      () => /* @__PURE__ */ k(
        qg,
        {
          className: "VenomousUI-Text",
          component: "div",
          variant: n ? r : t ? "caption" : "body1",
          noWrap: o,
          sx: {
            ...u,
            ...l
          },
          ...c,
          children: e
        }
      ),
      [e, n, r, o, l, c, u]
    );
    return o ? /* @__PURE__ */ k(ml, { tooltip: e, hide: !o, children: d }) : d;
  }
);
yn.displayName = "Text";
const ml = _e(({ children: e, tooltip: t, hide: n }) => /* @__PURE__ */ k(
  bd,
  {
    className: "VenomousUI-Tooltip",
    arrow: !0,
    title: /* @__PURE__ */ k(yn, { isLabel: !0, bold: !0, text: t, textColor: "auto" }),
    disableHoverListener: n,
    children: e,
    slots: {
      transition: po
    },
    slotProps: {
      transition: { timeout: 400 }
    }
  }
));
ml.displayName = "Tooltip";
const Yg = _e(
  ({
    children: e,
    position: t = "bottom-right",
    color: n = "error",
    icon: r,
    iconWidth: o = 16,
    iconTooltip: s = ""
  }) => {
    const { paperCommonStyles: a } = fi(), { badgePlacementAttributes: l, badgeColor: c } = rd({ position: t, color: n }), { vertical: u, horizontal: d, transform: f } = l;
    return /* @__PURE__ */ k(
      ll,
      {
        className: "VenomousUI-IconBadge",
        variant: "standard",
        invisible: !r,
        anchorOrigin: { vertical: u, horizontal: d },
        badgeContent: /* @__PURE__ */ k(ml, { tooltip: s, hide: !s, children: /* @__PURE__ */ k(pr, { icon: r, width: o, color: "auto" }) }),
        sx: {
          ".MuiBadge-badge": {
            color: c,
            fontWeight: "bold",
            ...a,
            transform: f,
            p: 0,
            minHeight: Number(o) + 4,
            minWidth: Number(o) + 4,
            height: Number(o) + 4,
            width: Number(o) + 4,
            borderRadius: "50%",
            border: 1,
            borderColor: c
          }
        },
        children: e
      }
    );
  }
);
Yg.displayName = "IconBadge";
const UE = _e(
  ({ children: e, position: t = "top-right", color: n = "primary", value: r = 0, max: o = 99, min: s = 0 }) => {
    const { badgePlacementAttributes: a, badgeColor: l } = rd({ position: t, color: n }), { vertical: c, horizontal: u } = a, d = ln(() => r > o ? `${o}+` : String(r), [r, o]), f = ln(() => r > s, [r, s]);
    return /* @__PURE__ */ k(
      ll,
      {
        className: "VenomousUI-NumberTextBadge",
        variant: "standard",
        invisible: !f,
        anchorOrigin: { vertical: c, horizontal: u },
        badgeContent: /* @__PURE__ */ k(ml, { tooltip: String(r), hide: r <= o, children: /* @__PURE__ */ k("span", { children: d }) }),
        sx: {
          ".MuiBadge-badge": {
            color: "#fff !important",
            backgroundColor: l,
            fontWeight: "bold"
          }
        },
        children: e
      }
    );
  }
);
UE.displayName = "NumberTextBadge";
const HE = _e(
  ({
    width: e = 28,
    src: t,
    alt: n,
    badgeColor: r = "primary",
    badgePosition: o = "bottom-right",
    withDotBadge: s = !1,
    dotBadgeIsVisible: a = !0,
    withIconBadge: l = !1,
    iconBadgeIcon: c = ""
  }) => {
    const u = ln(
      () => /* @__PURE__ */ k(
        vg,
        {
          className: "VenomousUI-Avatar",
          src: t,
          alt: n,
          sx: {
            width: e,
            height: e,
            border: 1,
            borderColor: "divider"
          }
        }
      ),
      [e]
    );
    return s ? /* @__PURE__ */ k(xg, { isVisible: a, position: o, color: r, children: u }) : l ? /* @__PURE__ */ k(Yg, { icon: c, position: o, color: r, children: u }) : u;
  }
);
HE.displayName = "Avatar";
const qE = _e(({ width: e = 100, text: t = "", sx: n }) => /* @__PURE__ */ Pe(Rr, { className: "VenomousUI-Blank", sx: { width: e, ...n }, children: [
  /* @__PURE__ */ k(pr, { width: e, icon: "solar:box-linear", color: "disabled" }),
  /* @__PURE__ */ k(yn, { text: t, isTitle: !0, titleLevel: "h6", textColor: "disabled", textAlign: "center" })
] }));
qE.displayName = "Blank";
function YE(e, t) {
  const n = e.charCodeAt(2);
  return e[0] === "o" && e[1] === "n" && n >= 65 && n <= 90 && typeof t == "function";
}
function vd(e, t) {
  if (!e)
    return t;
  function n(a, l) {
    const c = {};
    return Object.keys(l).forEach((u) => {
      YE(u, l[u]) && typeof a[u] == "function" && (c[u] = (...d) => {
        a[u](...d), l[u](...d);
      });
    }), c;
  }
  if (typeof e == "function" || typeof t == "function")
    return (a) => {
      const l = typeof t == "function" ? t(a) : t, c = typeof e == "function" ? e({
        ...a,
        ...l
      }) : e, u = Ee(a == null ? void 0 : a.className, l == null ? void 0 : l.className, c == null ? void 0 : c.className), d = n(c, l);
      return {
        ...l,
        ...c,
        ...d,
        ...!!u && {
          className: u
        },
        ...(l == null ? void 0 : l.style) && (c == null ? void 0 : c.style) && {
          style: {
            ...l.style,
            ...c.style
          }
        },
        ...(l == null ? void 0 : l.sx) && (c == null ? void 0 : c.sx) && {
          sx: [...Array.isArray(l.sx) ? l.sx : [l.sx], ...Array.isArray(c.sx) ? c.sx : [c.sx]]
        }
      };
    };
  const r = t, o = n(e, r), s = Ee(r == null ? void 0 : r.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...o,
    ...!!s && {
      className: s
    },
    ...(r == null ? void 0 : r.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...r.style,
        ...e.style
      }
    },
    ...(r == null ? void 0 : r.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(r.sx) ? r.sx : [r.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
class Sa {
  constructor() {
    Ar(this, "mountEffect", () => {
      this.shouldMount && !this.didMount && this.ref.current !== null && (this.didMount = !0, this.mounted.resolve());
    });
    this.ref = {
      current: null
    }, this.mounted = null, this.didMount = !1, this.shouldMount = !1, this.setShouldMount = null;
  }
  /** React ref to the ripple instance */
  /** If the ripple component should be mounted */
  /** Promise that resolves when the ripple component is mounted */
  /** If the ripple component has been mounted */
  /** React state hook setter */
  static create() {
    return new Sa();
  }
  static use() {
    const t = Qh(Sa.create).current, [n, r] = C.useState(!1);
    return t.shouldMount = n, t.setShouldMount = r, C.useEffect(t.mountEffect, [n]), t;
  }
  mount() {
    return this.mounted || (this.mounted = KE(), this.shouldMount = !0, this.setShouldMount(this.shouldMount)), this.mounted;
  }
  /* Ripple API */
  start(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.start(...t);
    });
  }
  stop(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.stop(...t);
    });
  }
  pulsate(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.pulsate(...t);
    });
  }
}
function GE() {
  return Sa.use();
}
function KE() {
  let e, t;
  const n = new Promise((r, o) => {
    e = r, t = o;
  });
  return n.resolve = e, n.reject = t, n;
}
function Gg(e) {
  const {
    className: t,
    classes: n,
    pulsate: r = !1,
    rippleX: o,
    rippleY: s,
    rippleSize: a,
    in: l,
    onExited: c,
    timeout: u
  } = e, [d, f] = C.useState(!1), h = Ee(t, n.ripple, n.rippleVisible, r && n.ripplePulsate), g = {
    width: a,
    height: a,
    top: -(a / 2) + s,
    left: -(a / 2) + o
  }, y = Ee(n.child, d && n.childLeaving, r && n.childPulsate);
  return !l && !d && f(!0), C.useEffect(() => {
    if (!l && c != null) {
      const m = setTimeout(c, u);
      return () => {
        clearTimeout(m);
      };
    }
  }, [c, l, u]), /* @__PURE__ */ k("span", {
    className: h,
    style: g,
    children: /* @__PURE__ */ k("span", {
      className: y
    })
  });
}
process.env.NODE_ENV !== "production" && (Gg.propTypes = {
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object.isRequired,
  className: i.string,
  /**
   * @ignore - injected from TransitionGroup
   */
  in: i.bool,
  /**
   * @ignore - injected from TransitionGroup
   */
  onExited: i.func,
  /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */
  pulsate: i.bool,
  /**
   * Diameter of the ripple.
   */
  rippleSize: i.number,
  /**
   * Horizontal position of the ripple center.
   */
  rippleX: i.number,
  /**
   * Vertical position of the ripple center.
   */
  rippleY: i.number,
  /**
   * exit delay
   */
  timeout: i.number.isRequired
});
const kn = wt("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), ru = 550, XE = 80, QE = qr`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`, JE = qr`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`, ZE = qr`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`, eC = ke("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), tC = ke(Gg, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})`
  opacity: 0;
  position: absolute;

  &.${kn.rippleVisible} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${QE};
    animation-duration: ${ru}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  &.${kn.ripplePulsate} {
    animation-duration: ${({
  theme: e
}) => e.transitions.duration.shorter}ms;
  }

  & .${kn.child} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${kn.childLeaving} {
    opacity: 0;
    animation-name: ${JE};
    animation-duration: ${ru}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  & .${kn.childPulsate} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${ZE};
    animation-duration: 2500ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`, Kg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Tt({
    props: t,
    name: "MuiTouchRipple"
  }), {
    center: o = !1,
    classes: s = {},
    className: a,
    ...l
  } = r, [c, u] = C.useState([]), d = C.useRef(0), f = C.useRef(null);
  C.useEffect(() => {
    f.current && (f.current(), f.current = null);
  }, [c]);
  const h = C.useRef(!1), g = Bo(), y = C.useRef(null), m = C.useRef(null), b = C.useCallback((T) => {
    const {
      pulsate: v,
      rippleX: S,
      rippleY: R,
      rippleSize: $,
      cb: I
    } = T;
    u((p) => [...p, /* @__PURE__ */ k(tC, {
      classes: {
        ripple: Ee(s.ripple, kn.ripple),
        rippleVisible: Ee(s.rippleVisible, kn.rippleVisible),
        ripplePulsate: Ee(s.ripplePulsate, kn.ripplePulsate),
        child: Ee(s.child, kn.child),
        childLeaving: Ee(s.childLeaving, kn.childLeaving),
        childPulsate: Ee(s.childPulsate, kn.childPulsate)
      },
      timeout: ru,
      pulsate: v,
      rippleX: S,
      rippleY: R,
      rippleSize: $
    }, d.current)]), d.current += 1, f.current = I;
  }, [s]), x = C.useCallback((T = {}, v = {}, S = () => {
  }) => {
    const {
      pulsate: R = !1,
      center: $ = o || v.pulsate,
      fakeElement: I = !1
      // For test purposes
    } = v;
    if ((T == null ? void 0 : T.type) === "mousedown" && h.current) {
      h.current = !1;
      return;
    }
    (T == null ? void 0 : T.type) === "touchstart" && (h.current = !0);
    const p = I ? null : m.current, O = p ? p.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let P, A, D;
    if ($ || T === void 0 || T.clientX === 0 && T.clientY === 0 || !T.clientX && !T.touches)
      P = Math.round(O.width / 2), A = Math.round(O.height / 2);
    else {
      const {
        clientX: _,
        clientY: M
      } = T.touches && T.touches.length > 0 ? T.touches[0] : T;
      P = Math.round(_ - O.left), A = Math.round(M - O.top);
    }
    if ($)
      D = Math.sqrt((2 * O.width ** 2 + O.height ** 2) / 3), D % 2 === 0 && (D += 1);
    else {
      const _ = Math.max(Math.abs((p ? p.clientWidth : 0) - P), P) * 2 + 2, M = Math.max(Math.abs((p ? p.clientHeight : 0) - A), A) * 2 + 2;
      D = Math.sqrt(_ ** 2 + M ** 2);
    }
    T != null && T.touches ? y.current === null && (y.current = () => {
      b({
        pulsate: R,
        rippleX: P,
        rippleY: A,
        rippleSize: D,
        cb: S
      });
    }, g.start(XE, () => {
      y.current && (y.current(), y.current = null);
    })) : b({
      pulsate: R,
      rippleX: P,
      rippleY: A,
      rippleSize: D,
      cb: S
    });
  }, [o, b, g]), E = C.useCallback(() => {
    x({}, {
      pulsate: !0
    });
  }, [x]), w = C.useCallback((T, v) => {
    if (g.clear(), (T == null ? void 0 : T.type) === "touchend" && y.current) {
      y.current(), y.current = null, g.start(0, () => {
        w(T, v);
      });
      return;
    }
    y.current = null, u((S) => S.length > 0 ? S.slice(1) : S), f.current = v;
  }, [g]);
  return C.useImperativeHandle(n, () => ({
    pulsate: E,
    start: x,
    stop: w
  }), [E, x, w]), /* @__PURE__ */ k(eC, {
    className: Ee(kn.root, s.root, a),
    ref: m,
    ...l,
    children: /* @__PURE__ */ k(cd, {
      component: null,
      exit: !0,
      children: c
    })
  });
});
process.env.NODE_ENV !== "production" && (Kg.propTypes = {
  /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */
  center: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string
});
function nC(e) {
  return gt("MuiButtonBase", e);
}
const rC = wt("MuiButtonBase", ["root", "disabled", "focusVisible"]), oC = (e) => {
  const {
    disabled: t,
    focusVisible: n,
    focusVisibleClassName: r,
    classes: o
  } = e, a = Ct({
    root: ["root", t && "disabled", n && "focusVisible"]
  }, nC, o);
  return n && r && (a.root += ` ${r}`), a;
}, iC = ke("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  textDecoration: "none",
  // So we take precedent over the style of a native <a /> element.
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${rC.disabled}`]: {
    pointerEvents: "none",
    // Disable link interactions
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), xd = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Tt({
    props: t,
    name: "MuiButtonBase"
  }), {
    action: o,
    centerRipple: s = !1,
    children: a,
    className: l,
    component: c = "button",
    disabled: u = !1,
    disableRipple: d = !1,
    disableTouchRipple: f = !1,
    focusRipple: h = !1,
    focusVisibleClassName: g,
    LinkComponent: y = "a",
    onBlur: m,
    onClick: b,
    onContextMenu: x,
    onDragLeave: E,
    onFocus: w,
    onFocusVisible: T,
    onKeyDown: v,
    onKeyUp: S,
    onMouseDown: R,
    onMouseLeave: $,
    onMouseUp: I,
    onTouchEnd: p,
    onTouchMove: O,
    onTouchStart: P,
    tabIndex: A = 0,
    TouchRippleProps: D,
    touchRippleRef: _,
    type: M,
    ...V
  } = r, Y = C.useRef(null), U = GE(), j = nn(U.ref, _), [W, ee] = C.useState(!1);
  u && W && ee(!1), C.useImperativeHandle(o, () => ({
    focusVisible: () => {
      ee(!0), Y.current.focus();
    }
  }), []);
  const K = U.shouldMount && !d && !u;
  C.useEffect(() => {
    W && h && !d && U.pulsate();
  }, [d, h, W, U]);
  const oe = xr(U, "start", R, f), ne = xr(U, "stop", x, f), se = xr(U, "stop", E, f), de = xr(U, "stop", I, f), X = xr(U, "stop", (N) => {
    W && N.preventDefault(), $ && $(N);
  }, f), ae = xr(U, "start", P, f), Q = xr(U, "stop", p, f), ie = xr(U, "stop", O, f), F = xr(U, "stop", (N) => {
    ya(N.target) || ee(!1), m && m(N);
  }, !1), he = lr((N) => {
    Y.current || (Y.current = N.currentTarget), ya(N.target) && (ee(!0), T && T(N)), w && w(N);
  }), fe = () => {
    const N = Y.current;
    return c && c !== "button" && !(N.tagName === "A" && N.href);
  }, Se = lr((N) => {
    h && !N.repeat && W && N.key === " " && U.stop(N, () => {
      U.start(N);
    }), N.target === N.currentTarget && fe() && N.key === " " && N.preventDefault(), v && v(N), N.target === N.currentTarget && fe() && N.key === "Enter" && !u && (N.preventDefault(), b && b(N));
  }), Le = lr((N) => {
    h && N.key === " " && W && !N.defaultPrevented && U.stop(N, () => {
      U.pulsate(N);
    }), S && S(N), b && N.target === N.currentTarget && fe() && N.key === " " && !N.defaultPrevented && b(N);
  });
  let Ae = c;
  Ae === "button" && (V.href || V.to) && (Ae = y);
  const Ie = {};
  Ae === "button" ? (Ie.type = M === void 0 ? "button" : M, Ie.disabled = u) : (!V.href && !V.to && (Ie.role = "button"), u && (Ie["aria-disabled"] = u));
  const Re = nn(n, Y), Be = {
    ...r,
    centerRipple: s,
    component: c,
    disabled: u,
    disableRipple: d,
    disableTouchRipple: f,
    focusRipple: h,
    tabIndex: A,
    focusVisible: W
  }, Oe = oC(Be);
  return /* @__PURE__ */ Pe(iC, {
    as: Ae,
    className: Ee(Oe.root, l),
    ownerState: Be,
    onBlur: F,
    onClick: b,
    onContextMenu: ne,
    onFocus: he,
    onKeyDown: Se,
    onKeyUp: Le,
    onMouseDown: oe,
    onMouseLeave: X,
    onMouseUp: de,
    onDragLeave: se,
    onTouchEnd: Q,
    onTouchMove: ie,
    onTouchStart: ae,
    ref: Re,
    tabIndex: u ? -1 : A,
    type: M,
    ...Ie,
    ...V,
    children: [a, K ? /* @__PURE__ */ k(Kg, {
      ref: j,
      center: s,
      ...D
    }) : null]
  });
});
function xr(e, t, n, r = !1) {
  return lr((o) => (n && n(o), r || e[t](o), !0));
}
process.env.NODE_ENV !== "production" && (xd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: Ir,
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: i.bool,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: qu,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: i.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: i.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: i.string,
  /**
   * @ignore
   */
  href: i.any,
  /**
   * The component used to render a link when the `href` prop is provided.
   * @default 'a'
   */
  LinkComponent: i.elementType,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * @ignore
   */
  onContextMenu: i.func,
  /**
   * @ignore
   */
  onDragLeave: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: i.func,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * @ignore
   */
  onKeyUp: i.func,
  /**
   * @ignore
   */
  onMouseDown: i.func,
  /**
   * @ignore
   */
  onMouseLeave: i.func,
  /**
   * @ignore
   */
  onMouseUp: i.func,
  /**
   * @ignore
   */
  onTouchEnd: i.func,
  /**
   * @ignore
   */
  onTouchMove: i.func,
  /**
   * @ignore
   */
  onTouchStart: i.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * @default 0
   */
  tabIndex: i.number,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: i.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: i.oneOfType([i.func, i.shape({
    current: i.shape({
      pulsate: i.func.isRequired,
      start: i.func.isRequired,
      stop: i.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  type: i.oneOfType([i.oneOf(["button", "reset", "submit"]), i.string])
});
function sC(e) {
  return gt("MuiCircularProgress", e);
}
wt("MuiCircularProgress", ["root", "determinate", "indeterminate", "colorPrimary", "colorSecondary", "svg", "circle", "circleDeterminate", "circleIndeterminate", "circleDisableShrink"]);
const _r = 44, ou = qr`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`, iu = qr`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: -126px;
  }
`, aC = typeof ou != "string" ? ai`
        animation: ${ou} 1.4s linear infinite;
      ` : null, lC = typeof iu != "string" ? ai`
        animation: ${iu} 1.4s ease-in-out infinite;
      ` : null, cC = (e) => {
  const {
    classes: t,
    variant: n,
    color: r,
    disableShrink: o
  } = e, s = {
    root: ["root", n, `color${xe(r)}`],
    svg: ["svg"],
    circle: ["circle", `circle${xe(n)}`, o && "circleDisableShrink"]
  };
  return Ct(s, sC, t);
}, uC = ke("span", {
  name: "MuiCircularProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`color${xe(n.color)}`]];
  }
})(Ke(({
  theme: e
}) => ({
  display: "inline-block",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("transform")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: aC || {
      animation: `${ou} 1.4s linear infinite`
    }
  }, ...Object.entries(e.palette).filter(cn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  }))]
}))), dC = ke("svg", {
  name: "MuiCircularProgress",
  slot: "Svg",
  overridesResolver: (e, t) => t.svg
})({
  display: "block"
  // Keeps the progress centered
}), fC = ke("circle", {
  name: "MuiCircularProgress",
  slot: "Circle",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.circle, t[`circle${xe(n.variant)}`], n.disableShrink && t.circleDisableShrink];
  }
})(Ke(({
  theme: e
}) => ({
  stroke: "currentColor",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("stroke-dashoffset")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: {
      // Some default value that looks fine waiting for the animation to kicks in.
      strokeDasharray: "80px, 200px",
      strokeDashoffset: 0
      // Add the unit to fix a Edge 16 and below bug.
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" && !t.disableShrink,
    style: lC || {
      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
      animation: `${iu} 1.4s ease-in-out infinite`
    }
  }]
}))), wd = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Tt({
    props: t,
    name: "MuiCircularProgress"
  }), {
    className: o,
    color: s = "primary",
    disableShrink: a = !1,
    size: l = 40,
    style: c,
    thickness: u = 3.6,
    value: d = 0,
    variant: f = "indeterminate",
    ...h
  } = r, g = {
    ...r,
    color: s,
    disableShrink: a,
    size: l,
    thickness: u,
    value: d,
    variant: f
  }, y = cC(g), m = {}, b = {}, x = {};
  if (f === "determinate") {
    const E = 2 * Math.PI * ((_r - u) / 2);
    m.strokeDasharray = E.toFixed(3), x["aria-valuenow"] = Math.round(d), m.strokeDashoffset = `${((100 - d) / 100 * E).toFixed(3)}px`, b.transform = "rotate(-90deg)";
  }
  return /* @__PURE__ */ k(uC, {
    className: Ee(y.root, o),
    style: {
      width: l,
      height: l,
      ...b,
      ...c
    },
    ownerState: g,
    ref: n,
    role: "progressbar",
    ...x,
    ...h,
    children: /* @__PURE__ */ k(dC, {
      className: y.svg,
      ownerState: g,
      viewBox: `${_r / 2} ${_r / 2} ${_r} ${_r}`,
      children: /* @__PURE__ */ k(fC, {
        className: y.circle,
        style: m,
        ownerState: g,
        cx: _r,
        cy: _r,
        r: (_r - u) / 2,
        fill: "none",
        strokeWidth: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (wd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   * @default false
   */
  disableShrink: Yr(i.bool, (e) => e.disableShrink && e.variant && e.variant !== "indeterminate" ? new Error("MUI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.") : null),
  /**
   * The size of the component.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, for example '3rem'.
   * @default 40
   */
  size: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The thickness of the circle.
   * @default 3.6
   */
  thickness: i.number,
  /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   * @default 0
   */
  value: i.number,
  /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   * @default 'indeterminate'
   */
  variant: i.oneOf(["determinate", "indeterminate"])
});
function pC(e) {
  return gt("MuiButton", e);
}
const no = wt("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorSuccess", "colorError", "colorInfo", "colorWarning", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "icon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge", "loading", "loadingWrapper", "loadingIconPlaceholder", "loadingIndicator", "loadingPositionCenter", "loadingPositionStart", "loadingPositionEnd"]), Xg = /* @__PURE__ */ C.createContext({});
process.env.NODE_ENV !== "production" && (Xg.displayName = "ButtonGroupContext");
const Qg = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (Qg.displayName = "ButtonGroupButtonContext");
const mC = (e) => {
  const {
    color: t,
    disableElevation: n,
    fullWidth: r,
    size: o,
    variant: s,
    loading: a,
    loadingPosition: l,
    classes: c
  } = e, u = {
    root: ["root", a && "loading", s, `${s}${xe(t)}`, `size${xe(o)}`, `${s}Size${xe(o)}`, `color${xe(t)}`, n && "disableElevation", r && "fullWidth", a && `loadingPosition${xe(l)}`],
    startIcon: ["icon", "startIcon", `iconSize${xe(o)}`],
    endIcon: ["icon", "endIcon", `iconSize${xe(o)}`],
    loadingIndicator: ["loadingIndicator"],
    loadingWrapper: ["loadingWrapper"]
  }, d = Ct(u, pC, c);
  return {
    ...c,
    // forward the focused, disabled, etc. classes to the ButtonBase
    ...d
  };
}, Jg = [{
  props: {
    size: "small"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 18
    }
  }
}, {
  props: {
    size: "medium"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 20
    }
  }
}, {
  props: {
    size: "large"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 22
    }
  }
}], hC = ke(xd, {
  shouldForwardProp: (e) => gr(e) || e === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`${n.variant}${xe(n.color)}`], t[`size${xe(n.size)}`], t[`${n.variant}Size${xe(n.size)}`], n.color === "inherit" && t.colorInherit, n.disableElevation && t.disableElevation, n.fullWidth && t.fullWidth, n.loading && t.loading];
  }
})(Ke(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? e.palette.grey[300] : e.palette.grey[800], n = e.palette.mode === "light" ? e.palette.grey.A100 : e.palette.grey[700];
  return {
    ...e.typography.button,
    minWidth: 64,
    padding: "6px 16px",
    border: 0,
    borderRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: e.transitions.duration.short
    }),
    "&:hover": {
      textDecoration: "none"
    },
    [`&.${no.disabled}`]: {
      color: (e.vars || e).palette.action.disabled
    },
    variants: [{
      props: {
        variant: "contained"
      },
      style: {
        color: "var(--variant-containedColor)",
        backgroundColor: "var(--variant-containedBg)",
        boxShadow: (e.vars || e).shadows[2],
        "&:hover": {
          boxShadow: (e.vars || e).shadows[4],
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            boxShadow: (e.vars || e).shadows[2]
          }
        },
        "&:active": {
          boxShadow: (e.vars || e).shadows[8]
        },
        [`&.${no.focusVisible}`]: {
          boxShadow: (e.vars || e).shadows[6]
        },
        [`&.${no.disabled}`]: {
          color: (e.vars || e).palette.action.disabled,
          boxShadow: (e.vars || e).shadows[0],
          backgroundColor: (e.vars || e).palette.action.disabledBackground
        }
      }
    }, {
      props: {
        variant: "outlined"
      },
      style: {
        padding: "5px 15px",
        border: "1px solid currentColor",
        borderColor: "var(--variant-outlinedBorder, currentColor)",
        backgroundColor: "var(--variant-outlinedBg)",
        color: "var(--variant-outlinedColor)",
        [`&.${no.disabled}`]: {
          border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
        }
      }
    }, {
      props: {
        variant: "text"
      },
      style: {
        padding: "6px 8px",
        color: "var(--variant-textColor)",
        backgroundColor: "var(--variant-textBg)"
      }
    }, ...Object.entries(e.palette).filter(cn()).map(([r]) => ({
      props: {
        color: r
      },
      style: {
        "--variant-textColor": (e.vars || e).palette[r].main,
        "--variant-outlinedColor": (e.vars || e).palette[r].main,
        "--variant-outlinedBorder": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / 0.5)` : Yt(e.palette[r].main, 0.5),
        "--variant-containedColor": (e.vars || e).palette[r].contrastText,
        "--variant-containedBg": (e.vars || e).palette[r].main,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": (e.vars || e).palette[r].dark,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[r].main, e.palette.action.hoverOpacity),
            "--variant-outlinedBorder": (e.vars || e).palette[r].main,
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[r].main, e.palette.action.hoverOpacity)
          }
        }
      }
    })), {
      props: {
        color: "inherit"
      },
      style: {
        color: "inherit",
        borderColor: "currentColor",
        "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedBg : t,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedHoverBg : n,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette.text.primary, e.palette.action.hoverOpacity),
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette.text.primary, e.palette.action.hoverOpacity)
          }
        }
      }
    }, {
      props: {
        size: "small",
        variant: "text"
      },
      style: {
        padding: "4px 5px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "text"
      },
      style: {
        padding: "8px 11px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "outlined"
      },
      style: {
        padding: "3px 9px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "outlined"
      },
      style: {
        padding: "7px 21px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "contained"
      },
      style: {
        padding: "4px 10px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "contained"
      },
      style: {
        padding: "8px 22px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        disableElevation: !0
      },
      style: {
        boxShadow: "none",
        "&:hover": {
          boxShadow: "none"
        },
        [`&.${no.focusVisible}`]: {
          boxShadow: "none"
        },
        "&:active": {
          boxShadow: "none"
        },
        [`&.${no.disabled}`]: {
          boxShadow: "none"
        }
      }
    }, {
      props: {
        fullWidth: !0
      },
      style: {
        width: "100%"
      }
    }, {
      props: {
        loadingPosition: "center"
      },
      style: {
        transition: e.transitions.create(["background-color", "box-shadow", "border-color"], {
          duration: e.transitions.duration.short
        }),
        [`&.${no.loading}`]: {
          color: "transparent"
        }
      }
    }]
  };
})), gC = ke("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.startIcon, n.loading && t.startIconLoadingStart, t[`iconSize${xe(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginLeft: -2
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginRight: -8
    }
  }, ...Jg]
})), yC = ke("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.endIcon, n.loading && t.endIconLoadingEnd, t[`iconSize${xe(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginRight: -2
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginLeft: -8
    }
  }, ...Jg]
})), bC = ke("span", {
  name: "MuiButton",
  slot: "LoadingIndicator",
  overridesResolver: (e, t) => t.loadingIndicator
})(({
  theme: e
}) => ({
  display: "none",
  position: "absolute",
  visibility: "visible",
  variants: [{
    props: {
      loading: !0
    },
    style: {
      display: "flex"
    }
  }, {
    props: {
      loadingPosition: "start"
    },
    style: {
      left: 14
    }
  }, {
    props: {
      loadingPosition: "start",
      size: "small"
    },
    style: {
      left: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "start"
    },
    style: {
      left: 6
    }
  }, {
    props: {
      loadingPosition: "center"
    },
    style: {
      left: "50%",
      transform: "translate(-50%)",
      color: (e.vars || e).palette.action.disabled
    }
  }, {
    props: {
      loadingPosition: "end"
    },
    style: {
      right: 14
    }
  }, {
    props: {
      loadingPosition: "end",
      size: "small"
    },
    style: {
      right: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "end"
    },
    style: {
      right: 6
    }
  }, {
    props: {
      loadingPosition: "start",
      fullWidth: !0
    },
    style: {
      position: "relative",
      left: -10
    }
  }, {
    props: {
      loadingPosition: "end",
      fullWidth: !0
    },
    style: {
      position: "relative",
      right: -10
    }
  }]
})), $p = ke("span", {
  name: "MuiButton",
  slot: "LoadingIconPlaceholder",
  overridesResolver: (e, t) => t.loadingIconPlaceholder
})({
  display: "inline-block",
  width: "1em",
  height: "1em"
}), Td = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = C.useContext(Xg), o = C.useContext(Qg), s = Ji(r, t), a = Tt({
    props: s,
    name: "MuiButton"
  }), {
    children: l,
    color: c = "primary",
    component: u = "button",
    className: d,
    disabled: f = !1,
    disableElevation: h = !1,
    disableFocusRipple: g = !1,
    endIcon: y,
    focusVisibleClassName: m,
    fullWidth: b = !1,
    id: x,
    loading: E = null,
    loadingIndicator: w,
    loadingPosition: T = "center",
    size: v = "medium",
    startIcon: S,
    type: R,
    variant: $ = "text",
    ...I
  } = a, p = Gu(x), O = w ?? /* @__PURE__ */ k(wd, {
    "aria-labelledby": p,
    color: "inherit",
    size: 16
  }), P = {
    ...a,
    color: c,
    component: u,
    disabled: f,
    disableElevation: h,
    disableFocusRipple: g,
    fullWidth: b,
    loading: E,
    loadingIndicator: O,
    loadingPosition: T,
    size: v,
    type: R,
    variant: $
  }, A = mC(P), D = (S || E && T === "start") && /* @__PURE__ */ k(gC, {
    className: A.startIcon,
    ownerState: P,
    children: S || /* @__PURE__ */ k($p, {
      className: A.loadingIconPlaceholder,
      ownerState: P
    })
  }), _ = (y || E && T === "end") && /* @__PURE__ */ k(yC, {
    className: A.endIcon,
    ownerState: P,
    children: y || /* @__PURE__ */ k($p, {
      className: A.loadingIconPlaceholder,
      ownerState: P
    })
  }), M = o || "", V = typeof E == "boolean" ? (
    // use plain HTML span to minimize the runtime overhead
    /* @__PURE__ */ k("span", {
      className: A.loadingWrapper,
      style: {
        display: "contents"
      },
      children: E && /* @__PURE__ */ k(bC, {
        className: A.loadingIndicator,
        ownerState: P,
        children: O
      })
    })
  ) : null;
  return /* @__PURE__ */ Pe(hC, {
    ownerState: P,
    className: Ee(r.className, A.root, d, M),
    component: u,
    disabled: f || E,
    focusRipple: !g,
    focusVisibleClassName: Ee(A.focusVisible, m),
    ref: n,
    type: R,
    id: E ? p : x,
    ...I,
    classes: A,
    children: [D, T !== "end" && V, l, T === "end" && V, _]
  });
});
process.env.NODE_ENV !== "production" && (Td.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: i.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * Element placed after the children.
   */
  endIcon: i.node,
  /**
   * @ignore
   */
  focusVisibleClassName: i.string,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: i.string,
  /**
   * @ignore
   */
  id: i.string,
  /**
   * If `true`, the loading indicator is visible and the button is disabled.
   * If `true | false`, the loading wrapper is always rendered before the children to prevent [Google Translation Crash](https://github.com/mui/material-ui/issues/27853).
   * @default null
   */
  loading: i.bool,
  /**
   * Element placed before the children if the button is in loading state.
   * The node should contain an element with `role="progressbar"` with an accessible name.
   * By default, it renders a `CircularProgress` that is labeled by the button itself.
   * @default <CircularProgress color="inherit" size={16} />
   */
  loadingIndicator: i.node,
  /**
   * The loading indicator can be positioned on the start, end, or the center of the button.
   * @default 'center'
   */
  loadingPosition: i.oneOf(["center", "end", "start"]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["small", "medium", "large"]), i.string]),
  /**
   * Element placed before the children.
   */
  startIcon: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * @ignore
   */
  type: i.oneOfType([i.oneOf(["button", "reset", "submit"]), i.string]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: i.oneOfType([i.oneOf(["contained", "outlined", "text"]), i.string])
});
const Yn = _e(
  ({
    text: e,
    loading: t,
    disabled: n,
    isOutlined: r,
    isGhost: o,
    isCircle: s,
    icon: a,
    iconWidth: l = 20,
    iconPosition: c = void 0,
    color: u = "primary",
    onClick: d,
    sx: f,
    ...h
  }) => {
    const { buttonColors: g } = vC({ color: u, isGhost: o, isOutlined: r }), y = ln(() => a ? /* @__PURE__ */ k(pr, { icon: a, width: l }) : null, [a, l]);
    return /* @__PURE__ */ Pe(
      Td,
      {
        variant: o ? "text" : r ? "outlined" : "contained",
        loading: t,
        disabled: n,
        startIcon: c === "start" && y,
        endIcon: c === "end" && y,
        sx: {
          minWidth: "40px",
          minHeight: "40px",
          width: s ? "40px" : "unset",
          height: s ? "40px" : "unset",
          textTransform: "none",
          fontWeight: "bold",
          borderRadius: s ? "50%" : "8px",
          p: s ? "6px" : "auto",
          px: s ? "0" : "16px !important",
          cursor: t ? "wait !important" : n ? "not-allowed !important" : "pointer",
          pointerEvents: "auto !important",
          transition: "background-color 0s, background-image 0s",
          "& .MuiButton-startIcon": { svg: { color: "inherit", mr: "8px" } },
          "& .MuiButton-endIcon": { svg: { color: "inherit", ml: "8px" } },
          ...g,
          ...f
        },
        onClick: (m) => {
          m.stopPropagation(), d == null || d(m);
        },
        ...h,
        children: [
          !c && y,
          !s && e
        ]
      }
    );
  }
);
Yn.displayName = "Button";
function vC({ color: e = "primary", isGhost: t, isOutlined: n }) {
  const r = Nr();
  return { buttonColors: ln(() => {
    const s = r.palette.mode === "dark", a = {
      auto: r.palette.text.primary,
      disabled: r.palette.action.disabled,
      primary: r.palette.primary.main,
      success: r.palette.success.main,
      error: r.palette.error.main
    }, l = e in a ? a[e] : "inherit", c = s && ["auto", "disabled"].includes(e) ? "black" : r.palette.primary.contrastText;
    return {
      backgroundColor: t || n ? "transparent" : l,
      color: t || n ? l : c,
      borderColor: n ? l : "transparent"
    };
  }, [r, e, t, n]) };
}
const hl = _e(
  ({ isOutlined: e, clickable: t, onClick: n, disabled: r, children: o, sx: s }) => t ? /* @__PURE__ */ k(
    Td,
    {
      className: "VenomousUI-Card",
      component: Go,
      isOutlined: e,
      disabled: r,
      onClick: r ? void 0 : n,
      sx: {
        display: "block",
        color: "inherit",
        textTransform: "none",
        borderRadius: "8px",
        cursor: r ? "not-allowed !important" : "pointer",
        pointerEvents: "auto !important",
        p: "16px",
        ...e ? {
          border: 1,
          borderColor: "divider"
        } : {},
        ...s
      },
      children: o
    }
  ) : /* @__PURE__ */ k(Go, { className: "VenomousUI-Card", isOutlined: e, sx: { p: "16px", ...s }, children: o })
);
hl.displayName = "Card";
const Kt = _e(
  ({ children: e, row: t, alignItems: n, justifyContent: r, gap: o = 1, sx: s, ...a }) => /* @__PURE__ */ k(
    Rr,
    {
      className: "VenomousUI-Flex",
      component: "div",
      sx: {
        display: "flex",
        flexDirection: t ? "row" : "column",
        alignItems: n || (t ? "center" : "start"),
        justifyContent: r || "start",
        ...Array.isArray(o) ? { rowGap: o[0], columnGap: o[1] } : { gap: o },
        ...s
      },
      ...a,
      children: e
    }
  )
);
Kt.displayName = "Flex";
const xC = _e(
  ({ title: e, subtitle: t, headerStartExtra: n, headerEndExtra: r, children: o, ...s }) => /* @__PURE__ */ Pe(hl, { ...s, children: [
    /* @__PURE__ */ Pe(Kt, { row: !0, mb: "8px", justifyContent: "space-between", alignItems: "center", children: [
      n && /* @__PURE__ */ k("div", { style: { marginRight: t ? "8px" : 0 }, children: n }),
      /* @__PURE__ */ Pe(Kt, { gap: 0, children: [
        e && /* @__PURE__ */ k(yn, { text: e, isTitle: !0, titleLevel: "h6", lineHeight: "1.25rem", ellipsis: !0 }),
        t && /* @__PURE__ */ k(yn, { text: t, isLabel: !0, ellipsis: !0 })
      ] }),
      r && /* @__PURE__ */ k(
        "div",
        {
          style: {
            marginRight: t ? "-8px" : 0,
            marginTop: t ? "-8px" : 0,
            marginLeft: "8px"
          },
          children: r
        }
      )
    ] }),
    o
  ] })
);
xC.displayName = "ExhibitCard";
const gl = 0, Xr = 1, pi = 2, Zg = 4;
function Pp(e) {
  return () => e;
}
function wC(e) {
  e();
}
function ey(e, t) {
  return (n) => e(t(n));
}
function kp(e, t) {
  return () => e(t);
}
function ty(e, t) {
  return (n) => e(t, n);
}
function Sd(e) {
  return e !== void 0;
}
function TC(...e) {
  return () => {
    e.map(wC);
  };
}
function mi() {
}
function yl(e, t) {
  return t(e), e;
}
function SC(e, t) {
  return t(e);
}
function yt(...e) {
  return e;
}
function rt(e, t) {
  return e(Xr, t);
}
function We(e, t) {
  e(gl, t);
}
function Ed(e) {
  e(pi);
}
function Zt(e) {
  return e(Zg);
}
function Ne(e, t) {
  return rt(e, ty(t, gl));
}
function hr(e, t) {
  const n = e(Xr, (r) => {
    n(), t(r);
  });
  return n;
}
function Ip(e) {
  let t, n;
  return (r) => (o) => {
    t = o, n && clearTimeout(n), n = setTimeout(() => {
      r(t);
    }, e);
  };
}
function ny(e, t) {
  return e === t;
}
function ht(e = ny) {
  let t;
  return (n) => (r) => {
    e(t, r) || (t = r, n(r));
  };
}
function Fe(e) {
  return (t) => (n) => {
    e(n) && t(n);
  };
}
function Ce(e) {
  return (t) => ey(t, e);
}
function rr(e) {
  return (t) => () => {
    t(e);
  };
}
function ge(e, ...t) {
  const n = EC(...t);
  return (r, o) => {
    switch (r) {
      case pi:
        Ed(e);
        return;
      case Xr:
        return rt(e, n(o));
    }
  };
}
function ir(e, t) {
  return (n) => (r) => {
    n(t = e(t, r));
  };
}
function ti(e) {
  return (t) => (n) => {
    e > 0 ? e-- : t(n);
  };
}
function Lr(e) {
  let t = null, n;
  return (r) => (o) => {
    t = o, !n && (n = setTimeout(() => {
      n = void 0, r(t);
    }, e));
  };
}
function He(...e) {
  const t = new Array(e.length);
  let n = 0, r = null;
  const o = Math.pow(2, e.length) - 1;
  return e.forEach((s, a) => {
    const l = Math.pow(2, a);
    rt(s, (c) => {
      const u = n;
      n = n | l, t[a] = c, u !== o && n === o && r && (r(), r = null);
    });
  }), (s) => (a) => {
    const l = () => {
      s([a].concat(t));
    };
    n === o ? l() : r = l;
  };
}
function EC(...e) {
  return (t) => e.reduceRight(SC, t);
}
function CC(e) {
  let t, n;
  const r = () => t == null ? void 0 : t();
  return function(o, s) {
    switch (o) {
      case Xr:
        return s ? n === s ? void 0 : (r(), n = s, t = rt(e, s), t) : (r(), mi);
      case pi:
        r(), n = null;
        return;
    }
  };
}
function be(e) {
  let t = e;
  const n = qe();
  return (r, o) => {
    switch (r) {
      case gl:
        t = o;
        break;
      case Xr: {
        o(t);
        break;
      }
      case Zg:
        return t;
    }
    return n(r, o);
  };
}
function en(e, t) {
  return yl(be(t), (n) => Ne(e, n));
}
function qe() {
  const e = [];
  return (t, n) => {
    switch (t) {
      case gl:
        e.slice().forEach((r) => {
          r(n);
        });
        return;
      case pi:
        e.splice(0, e.length);
        return;
      case Xr:
        return e.push(n), () => {
          const r = e.indexOf(n);
          r > -1 && e.splice(r, 1);
        };
    }
  };
}
function En(e) {
  return yl(qe(), (t) => Ne(e, t));
}
function Je(e, t = [], { singleton: n } = { singleton: !0 }) {
  return {
    constructor: e,
    dependencies: t,
    id: OC(),
    singleton: n
  };
}
const OC = () => Symbol();
function RC(e) {
  const t = /* @__PURE__ */ new Map(), n = ({ constructor: r, dependencies: o, id: s, singleton: a }) => {
    if (a && t.has(s))
      return t.get(s);
    const l = r(o.map((c) => n(c)));
    return a && t.set(s, l), l;
  };
  return n(e);
}
function zt(...e) {
  const t = qe(), n = new Array(e.length);
  let r = 0;
  const o = Math.pow(2, e.length) - 1;
  return e.forEach((s, a) => {
    const l = Math.pow(2, a);
    rt(s, (c) => {
      n[a] = c, r = r | l, r === o && We(t, n);
    });
  }), function(s, a) {
    switch (s) {
      case pi: {
        Ed(t);
        return;
      }
      case Xr:
        return r === o && a(n), rt(t, a);
    }
  };
}
function je(e, t = ny) {
  return ge(e, ht(t));
}
function Np(...e) {
  return function(t, n) {
    switch (t) {
      case pi:
        return;
      case Xr:
        return TC(...e.map((r) => rt(r, n)));
    }
  };
}
var Cn = /* @__PURE__ */ ((e) => (e[e.DEBUG = 0] = "DEBUG", e[e.INFO = 1] = "INFO", e[e.WARN = 2] = "WARN", e[e.ERROR = 3] = "ERROR", e))(Cn || {});
const $C = {
  0: "debug",
  3: "error",
  1: "log",
  2: "warn"
}, PC = () => typeof globalThis > "u" ? window : globalThis, Qr = Je(
  () => {
    const e = be(
      3
      /* ERROR */
    );
    return {
      log: be((t, n, r = 1) => {
        var o;
        const s = (o = PC().VIRTUOSO_LOG_LEVEL) != null ? o : Zt(e);
        r >= s && console[$C[r]](
          "%creact-virtuoso: %c%s %o",
          "color: #0253b3; font-weight: bold",
          "color: initial",
          t,
          n
        );
      }),
      logLevel: e
    };
  },
  [],
  { singleton: !0 }
);
function vo(e, t, n) {
  return Cd(e, t, n).callbackRef;
}
function Cd(e, t, n) {
  const r = L.useRef(null);
  let o = (s) => {
  };
  if (typeof ResizeObserver < "u") {
    const s = L.useMemo(() => new ResizeObserver((a) => {
      const l = () => {
        const c = a[0].target;
        c.offsetParent !== null && e(c);
      };
      n ? l() : requestAnimationFrame(l);
    }), [e]);
    o = (a) => {
      a && t ? (s.observe(a), r.current = a) : (r.current && s.unobserve(r.current), r.current = null);
    };
  }
  return { callbackRef: o, ref: r };
}
function kC(e, t, n, r, o, s, a, l, c) {
  const u = L.useCallback(
    (d) => {
      const f = IC(d.children, t, l ? "offsetWidth" : "offsetHeight", o);
      let h = d.parentElement;
      for (; !h.dataset.virtuosoScroller; )
        h = h.parentElement;
      const g = h.lastElementChild.dataset.viewportType === "window";
      let y;
      g && (y = h.ownerDocument.defaultView);
      const m = a ? l ? a.scrollLeft : a.scrollTop : g ? l ? y.scrollX || y.document.documentElement.scrollLeft : y.scrollY || y.document.documentElement.scrollTop : l ? h.scrollLeft : h.scrollTop, b = a ? l ? a.scrollWidth : a.scrollHeight : g ? l ? y.document.documentElement.scrollWidth : y.document.documentElement.scrollHeight : l ? h.scrollWidth : h.scrollHeight, x = a ? l ? a.offsetWidth : a.offsetHeight : g ? l ? y.innerWidth : y.innerHeight : l ? h.offsetWidth : h.offsetHeight;
      r({
        scrollHeight: b,
        scrollTop: Math.max(m, 0),
        viewportHeight: x
      }), s == null || s(
        l ? Ap("column-gap", getComputedStyle(d).columnGap, o) : Ap("row-gap", getComputedStyle(d).rowGap, o)
      ), f !== null && e(f);
    },
    [e, t, o, s, a, r]
  );
  return Cd(u, n, c);
}
function IC(e, t, n, r) {
  const o = e.length;
  if (o === 0)
    return null;
  const s = [];
  for (let a = 0; a < o; a++) {
    const l = e.item(a);
    if (l.dataset.index === void 0)
      continue;
    const c = parseInt(l.dataset.index), u = parseFloat(l.dataset.knownSize), d = t(l, n);
    if (d === 0 && r("Zero-sized element, this should not happen", { child: l }, Cn.ERROR), d === u)
      continue;
    const f = s[s.length - 1];
    s.length === 0 || f.size !== d || f.endIndex !== c - 1 ? s.push({ endIndex: c, size: d, startIndex: c }) : s[s.length - 1].endIndex++;
  }
  return s;
}
function Ap(e, t, n) {
  return t !== "normal" && !(t != null && t.endsWith("px")) && n(`${e} was not resolved to pixel value correctly`, t, Cn.WARN), t === "normal" ? 0 : parseInt(t ?? "0", 10);
}
function ry(e, t, n) {
  const r = L.useRef(null), o = L.useCallback(
    (c) => {
      if (!(c != null && c.offsetParent))
        return;
      const u = c.getBoundingClientRect(), d = u.width;
      let f, h;
      if (t) {
        const g = t.getBoundingClientRect(), y = u.top - g.top;
        h = g.height - Math.max(0, y), f = y + t.scrollTop;
      } else {
        const g = a.current.ownerDocument.defaultView;
        h = g.innerHeight - Math.max(0, u.top), f = u.top + g.scrollY;
      }
      r.current = {
        offsetTop: f,
        visibleHeight: h,
        visibleWidth: d
      }, e(r.current);
    },
    [e, t]
  ), { callbackRef: s, ref: a } = Cd(o, !0, n), l = L.useCallback(() => {
    o(a.current);
  }, [o, a]);
  return L.useEffect(() => {
    var c;
    if (t) {
      t.addEventListener("scroll", l);
      const u = new ResizeObserver(() => {
        requestAnimationFrame(l);
      });
      return u.observe(t), () => {
        t.removeEventListener("scroll", l), u.unobserve(t);
      };
    } else {
      const u = (c = a.current) == null ? void 0 : c.ownerDocument.defaultView;
      return u == null || u.addEventListener("scroll", l), u == null || u.addEventListener("resize", l), () => {
        u == null || u.removeEventListener("scroll", l), u == null || u.removeEventListener("resize", l);
      };
    }
  }, [l, t]), s;
}
const un = Je(
  () => {
    const e = qe(), t = qe(), n = be(0), r = qe(), o = be(0), s = qe(), a = qe(), l = be(0), c = be(0), u = be(0), d = be(0), f = qe(), h = qe(), g = be(!1), y = be(!1), m = be(!1);
    return Ne(
      ge(
        e,
        Ce(({ scrollTop: b }) => b)
      ),
      t
    ), Ne(
      ge(
        e,
        Ce(({ scrollHeight: b }) => b)
      ),
      a
    ), Ne(t, o), {
      deviation: n,
      fixedFooterHeight: u,
      fixedHeaderHeight: c,
      footerHeight: d,
      headerHeight: l,
      horizontalDirection: y,
      scrollBy: h,
      // input
      scrollContainerState: e,
      scrollHeight: a,
      scrollingInProgress: g,
      // signals
      scrollTo: f,
      scrollTop: t,
      skipAnimationFrameInResizeObserver: m,
      smoothScrollTargetReached: r,
      // state
      statefulScrollTop: o,
      viewportHeight: s
    };
  },
  [],
  { singleton: !0 }
), is = { lvl: 0 };
function oy(e, t) {
  const n = e.length;
  if (n === 0)
    return [];
  let { index: r, value: o } = t(e[0]);
  const s = [];
  for (let a = 1; a < n; a++) {
    const { index: l, value: c } = t(e[a]);
    s.push({ end: l - 1, start: r, value: o }), r = l, o = c;
  }
  return s.push({ end: 1 / 0, start: r, value: o }), s;
}
function ft(e) {
  return e === is;
}
function ss(e, t) {
  if (!ft(e))
    return t === e.k ? e.v : t < e.k ? ss(e.l, t) : ss(e.r, t);
}
function Gn(e, t, n = "k") {
  if (ft(e))
    return [-1 / 0, void 0];
  if (Number(e[n]) === t)
    return [e.k, e.v];
  if (Number(e[n]) < t) {
    const r = Gn(e.r, t, n);
    return r[0] === -1 / 0 ? [e.k, e.v] : r;
  }
  return Gn(e.l, t, n);
}
function xn(e, t, n) {
  return ft(e) ? ay(t, n, 1) : t === e.k ? Vt(e, { k: t, v: n }) : t < e.k ? Mp(Vt(e, { l: xn(e.l, t, n) })) : Mp(Vt(e, { r: xn(e.r, t, n) }));
}
function Vo() {
  return is;
}
function bl(e, t, n) {
  if (ft(e))
    return [];
  const r = Gn(e, t)[0];
  return NC(au(e, r, n));
}
function su(e, t) {
  if (ft(e)) return is;
  const { k: n, l: r, r: o } = e;
  if (t === n) {
    if (ft(r))
      return o;
    if (ft(o))
      return r;
    {
      const [s, a] = sy(r);
      return la(Vt(e, { k: s, l: iy(r), v: a }));
    }
  } else return t < n ? la(Vt(e, { l: su(r, t) })) : la(Vt(e, { r: su(o, t) }));
}
function ao(e) {
  return ft(e) ? [] : [...ao(e.l), { k: e.k, v: e.v }, ...ao(e.r)];
}
function au(e, t, n) {
  if (ft(e))
    return [];
  const { k: r, l: o, r: s, v: a } = e;
  let l = [];
  return r > t && (l = l.concat(au(o, t, n))), r >= t && r <= n && l.push({ k: r, v: a }), r <= n && (l = l.concat(au(s, t, n))), l;
}
function la(e) {
  const { l: t, lvl: n, r } = e;
  if (r.lvl >= n - 1 && t.lvl >= n - 1)
    return e;
  if (n > r.lvl + 1) {
    if (dc(t))
      return ly(Vt(e, { lvl: n - 1 }));
    if (!ft(t) && !ft(t.r))
      return Vt(t.r, {
        l: Vt(t, { r: t.r.l }),
        lvl: n,
        r: Vt(e, {
          l: t.r.r,
          lvl: n - 1
        })
      });
    throw new Error("Unexpected empty nodes");
  } else {
    if (dc(e))
      return lu(Vt(e, { lvl: n - 1 }));
    if (!ft(r) && !ft(r.l)) {
      const o = r.l, s = dc(o) ? r.lvl - 1 : r.lvl;
      return Vt(o, {
        l: Vt(e, {
          lvl: n - 1,
          r: o.l
        }),
        lvl: o.lvl + 1,
        r: lu(Vt(r, { l: o.r, lvl: s }))
      });
    } else
      throw new Error("Unexpected empty nodes");
  }
}
function Vt(e, t) {
  return ay(
    t.k !== void 0 ? t.k : e.k,
    t.v !== void 0 ? t.v : e.v,
    t.lvl !== void 0 ? t.lvl : e.lvl,
    t.l !== void 0 ? t.l : e.l,
    t.r !== void 0 ? t.r : e.r
  );
}
function iy(e) {
  return ft(e.r) ? e.l : la(Vt(e, { r: iy(e.r) }));
}
function dc(e) {
  return ft(e) || e.lvl > e.r.lvl;
}
function sy(e) {
  return ft(e.r) ? [e.k, e.v] : sy(e.r);
}
function ay(e, t, n, r = is, o = is) {
  return { k: e, l: r, lvl: n, r: o, v: t };
}
function Mp(e) {
  return lu(ly(e));
}
function ly(e) {
  const { l: t } = e;
  return !ft(t) && t.lvl === e.lvl ? Vt(t, { r: Vt(e, { l: t.r }) }) : e;
}
function lu(e) {
  const { lvl: t, r: n } = e;
  return !ft(n) && !ft(n.r) && n.lvl === t && n.r.lvl === t ? Vt(n, { l: Vt(e, { r: n.l }), lvl: t + 1 }) : e;
}
function NC(e) {
  return oy(e, ({ k: t, v: n }) => ({ index: t, value: n }));
}
function cy(e, t) {
  return !!(e && e.startIndex === t.startIndex && e.endIndex === t.endIndex);
}
function as(e, t) {
  return !!(e && e[0] === t[0] && e[1] === t[1]);
}
const Od = Je(
  () => ({ recalcInProgress: be(!1) }),
  [],
  { singleton: !0 }
);
function uy(e, t, n) {
  return e[Ea(e, t, n)];
}
function Ea(e, t, n, r = 0) {
  let o = e.length - 1;
  for (; r <= o; ) {
    const s = Math.floor((r + o) / 2), a = e[s], l = n(a, t);
    if (l === 0)
      return s;
    if (l === -1) {
      if (o - r < 2)
        return s - 1;
      o = s - 1;
    } else {
      if (o === r)
        return s;
      r = s + 1;
    }
  }
  throw new Error(`Failed binary finding record in array - ${e.join(",")}, searched for ${t}`);
}
function AC(e, t, n, r) {
  const o = Ea(e, t, r), s = Ea(e, n, r, o);
  return e.slice(o, s + 1);
}
function Wr(e, t) {
  return Math.round(e.getBoundingClientRect()[t]);
}
function vl(e) {
  return !ft(e.groupOffsetTree);
}
function Rd({ index: e }, t) {
  return t === e ? 0 : t < e ? -1 : 1;
}
function MC() {
  return {
    groupIndices: [],
    groupOffsetTree: Vo(),
    lastIndex: 0,
    lastOffset: 0,
    lastSize: 0,
    offsetTree: [],
    sizeTree: Vo()
  };
}
function _C(e, t) {
  let n = ft(e) ? 0 : 1 / 0;
  for (const r of t) {
    const { endIndex: o, size: s, startIndex: a } = r;
    if (n = Math.min(n, a), ft(e)) {
      e = xn(e, 0, s);
      continue;
    }
    const l = bl(e, a - 1, o + 1);
    if (l.some(zC(r)))
      continue;
    let c = !1, u = !1;
    for (const { end: d, start: f, value: h } of l)
      c ? (o >= f || s === h) && (e = su(e, f)) : (u = h !== s, c = !0), d > o && o >= f && h !== s && (e = xn(e, o + 1, h));
    u && (e = xn(e, a, s));
  }
  return [e, n];
}
function DC(e) {
  return typeof e.groupIndex < "u";
}
function BC({ offset: e }, t) {
  return t === e ? 0 : t < e ? -1 : 1;
}
function ls(e, t, n) {
  if (t.length === 0)
    return 0;
  const { index: r, offset: o, size: s } = uy(t, e, Rd), a = e - r, l = s * a + (a - 1) * n + o;
  return l > 0 ? l + n : l;
}
function dy(e, t) {
  if (!vl(t))
    return e;
  let n = 0;
  for (; t.groupIndices[n] <= e + n; )
    n++;
  return e + n;
}
function fy(e, t, n) {
  if (DC(e))
    return t.groupIndices[e.groupIndex] + 1;
  {
    const r = e.index === "LAST" ? n : e.index;
    let o = dy(r, t);
    return o = Math.max(0, o, Math.min(n, o)), o;
  }
}
function FC(e, t, n, r = 0) {
  return r > 0 && (t = Math.max(t, uy(e, r, Rd).offset)), oy(AC(e, t, n, BC), VC);
}
function jC(e, [t, n, r, o]) {
  t.length > 0 && r("received item sizes", t, Cn.DEBUG);
  const s = e.sizeTree;
  let a = s, l = 0;
  if (n.length > 0 && ft(s) && t.length === 2) {
    const h = t[0].size, g = t[1].size;
    a = n.reduce((y, m) => xn(xn(y, m, h), m + 1, g), a);
  } else
    [a, l] = _C(a, t);
  if (a === s)
    return e;
  const { lastIndex: c, lastOffset: u, lastSize: d, offsetTree: f } = cu(e.offsetTree, l, a, o);
  return {
    groupIndices: n,
    groupOffsetTree: n.reduce((h, g) => xn(h, g, ls(g, f, o)), Vo()),
    lastIndex: c,
    lastOffset: u,
    lastSize: d,
    offsetTree: f,
    sizeTree: a
  };
}
function LC(e) {
  return ao(e).map(({ k: t, v: n }, r, o) => {
    const s = o[r + 1];
    return { endIndex: s ? s.k - 1 : 1 / 0, size: n, startIndex: t };
  });
}
function _p(e, t) {
  let n = 0, r = 0;
  for (; n < e; )
    n += t[r + 1] - t[r] - 1, r++;
  return r - (n === e ? 0 : 1);
}
function cu(e, t, n, r) {
  let o = e, s = 0, a = 0, l = 0, c = 0;
  if (t !== 0) {
    c = Ea(o, t - 1, Rd), l = o[c].offset;
    const u = Gn(n, t - 1);
    s = u[0], a = u[1], o.length && o[c].size === Gn(n, t)[1] && (c -= 1), o = o.slice(0, c + 1);
  } else
    o = [];
  for (const { start: u, value: d } of bl(n, t, 1 / 0)) {
    const f = u - s, h = f * a + l + f * r;
    o.push({
      index: u,
      offset: h,
      size: d
    }), s = u, l = h, a = d;
  }
  return {
    lastIndex: s,
    lastOffset: l,
    lastSize: a,
    offsetTree: o
  };
}
function VC(e) {
  return { index: e.index, value: e };
}
function zC(e) {
  const { endIndex: t, size: n, startIndex: r } = e;
  return (o) => o.start === r && (o.end === t || o.end === 1 / 0) && o.value === n;
}
const WC = {
  offsetHeight: "height",
  offsetWidth: "width"
}, yr = Je(
  ([{ log: e }, { recalcInProgress: t }]) => {
    const n = qe(), r = qe(), o = en(r, 0), s = qe(), a = qe(), l = be(0), c = be([]), u = be(void 0), d = be(void 0), f = be((v, S) => Wr(v, WC[S])), h = be(void 0), g = be(0), y = MC(), m = en(
      ge(n, He(c, e, g), ir(jC, y), ht()),
      y
    ), b = en(
      ge(
        c,
        ht(),
        ir((v, S) => ({ current: S, prev: v.current }), {
          current: [],
          prev: []
        }),
        Ce(({ prev: v }) => v)
      ),
      []
    );
    Ne(
      ge(
        c,
        Fe((v) => v.length > 0),
        He(m, g),
        Ce(([v, S, R]) => {
          const $ = v.reduce((I, p, O) => xn(I, p, ls(p, S.offsetTree, R) || O), Vo());
          return {
            ...S,
            groupIndices: v,
            groupOffsetTree: $
          };
        })
      ),
      m
    ), Ne(
      ge(
        r,
        He(m),
        Fe(([v, { lastIndex: S }]) => v < S),
        Ce(([v, { lastIndex: S, lastSize: R }]) => [
          {
            endIndex: S,
            size: R,
            startIndex: v
          }
        ])
      ),
      n
    ), Ne(u, d);
    const x = en(
      ge(
        u,
        Ce((v) => v === void 0)
      ),
      !0
    );
    Ne(
      ge(
        d,
        Fe((v) => v !== void 0 && ft(Zt(m).sizeTree)),
        Ce((v) => [{ endIndex: 0, size: v, startIndex: 0 }])
      ),
      n
    );
    const E = En(
      ge(
        n,
        He(m),
        ir(
          ({ sizes: v }, [S, R]) => ({
            changed: R !== v,
            sizes: R
          }),
          { changed: !1, sizes: y }
        ),
        Ce((v) => v.changed)
      )
    );
    rt(
      ge(
        l,
        ir(
          (v, S) => ({ diff: v.prev - S, prev: S }),
          { diff: 0, prev: 0 }
        ),
        Ce((v) => v.diff)
      ),
      (v) => {
        const { groupIndices: S } = Zt(m);
        if (v > 0)
          We(t, !0), We(s, v + _p(v, S));
        else if (v < 0) {
          const R = Zt(b);
          R.length > 0 && (v -= _p(-v, R)), We(a, v);
        }
      }
    ), rt(ge(l, He(e)), ([v, S]) => {
      v < 0 && S(
        "`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value",
        { firstItemIndex: l },
        Cn.ERROR
      );
    });
    const w = En(s);
    Ne(
      ge(
        s,
        He(m),
        Ce(([v, S]) => {
          const R = S.groupIndices.length > 0, $ = [], I = S.lastSize;
          if (R) {
            const p = ss(S.sizeTree, 0);
            let O = 0, P = 0;
            for (; O < v; ) {
              const D = S.groupIndices[P], _ = S.groupIndices.length === P + 1 ? 1 / 0 : S.groupIndices[P + 1] - D - 1;
              $.push({
                endIndex: D,
                size: p,
                startIndex: D
              }), $.push({
                endIndex: D + 1 + _ - 1,
                size: I,
                startIndex: D + 1
              }), P++, O += _ + 1;
            }
            const A = ao(S.sizeTree);
            return O !== v && A.shift(), A.reduce(
              (D, { k: _, v: M }) => {
                let V = D.ranges;
                return D.prevSize !== 0 && (V = [
                  ...D.ranges,
                  {
                    endIndex: _ + v - 1,
                    size: D.prevSize,
                    startIndex: D.prevIndex
                  }
                ]), {
                  prevIndex: _ + v,
                  prevSize: M,
                  ranges: V
                };
              },
              {
                prevIndex: v,
                prevSize: 0,
                ranges: $
              }
            ).ranges;
          }
          return ao(S.sizeTree).reduce(
            (p, { k: O, v: P }) => ({
              prevIndex: O + v,
              prevSize: P,
              ranges: [...p.ranges, { endIndex: O + v - 1, size: p.prevSize, startIndex: p.prevIndex }]
            }),
            {
              prevIndex: 0,
              prevSize: I,
              ranges: []
            }
          ).ranges;
        })
      ),
      n
    );
    const T = En(
      ge(
        a,
        He(m, g),
        Ce(([v, { offsetTree: S }, R]) => {
          const $ = -v;
          return ls($, S, R);
        })
      )
    );
    return Ne(
      ge(
        a,
        He(m, g),
        Ce(([v, S, R]) => {
          if (S.groupIndices.length > 0) {
            if (ft(S.sizeTree))
              return S;
            let $ = Vo();
            const I = Zt(b);
            let p = 0, O = 0, P = 0;
            for (; p < -v; ) {
              P = I[O];
              const A = I[O + 1] - P - 1;
              O++, p += A + 1;
            }
            if ($ = ao(S.sizeTree).reduce((A, { k: D, v: _ }) => xn(A, Math.max(0, D + v), _), $), p !== -v) {
              const A = ss(S.sizeTree, P);
              $ = xn($, 0, A);
              const D = Gn(S.sizeTree, -v + 1)[1];
              $ = xn($, 1, D);
            }
            return {
              ...S,
              sizeTree: $,
              ...cu(S.offsetTree, 0, $, R)
            };
          } else {
            const $ = ao(S.sizeTree).reduce((I, { k: p, v: O }) => xn(I, Math.max(0, p + v), O), Vo());
            return {
              ...S,
              sizeTree: $,
              ...cu(S.offsetTree, 0, $, R)
            };
          }
        })
      ),
      m
    ), {
      beforeUnshiftWith: w,
      // input
      data: h,
      defaultItemSize: d,
      firstItemIndex: l,
      fixedItemSize: u,
      gap: g,
      groupIndices: c,
      itemSize: f,
      listRefresh: E,
      shiftWith: a,
      shiftWithOffset: T,
      sizeRanges: n,
      // output
      sizes: m,
      statefulTotalCount: o,
      totalCount: r,
      trackItemSizes: x,
      unshiftWith: s
    };
  },
  yt(Qr, Od),
  { singleton: !0 }
);
function UC(e) {
  return e.reduce(
    (t, n) => (t.groupIndices.push(t.totalCount), t.totalCount += n + 1, t),
    {
      groupIndices: [],
      totalCount: 0
    }
  );
}
const py = Je(
  ([{ groupIndices: e, sizes: t, totalCount: n }, { headerHeight: r, scrollTop: o }]) => {
    const s = qe(), a = qe(), l = En(ge(s, Ce(UC)));
    return Ne(
      ge(
        l,
        Ce((c) => c.totalCount)
      ),
      n
    ), Ne(
      ge(
        l,
        Ce((c) => c.groupIndices)
      ),
      e
    ), Ne(
      ge(
        zt(o, t, r),
        Fe(([c, u]) => vl(u)),
        Ce(([c, u, d]) => Gn(u.groupOffsetTree, Math.max(c - d, 0), "v")[0]),
        ht(),
        Ce((c) => [c])
      ),
      a
    ), { groupCounts: s, topItemsIndexes: a };
  },
  yt(yr, un)
), Jr = Je(
  ([{ log: e }]) => {
    const t = be(!1), n = En(
      ge(
        t,
        Fe((r) => r),
        ht()
      )
    );
    return rt(t, (r) => {
      r && Zt(e)("props updated", {}, Cn.DEBUG);
    }), { didMount: n, propsReady: t };
  },
  yt(Qr),
  { singleton: !0 }
), HC = typeof document < "u" && "scrollBehavior" in document.documentElement.style;
function my(e) {
  const t = typeof e == "number" ? { index: e } : e;
  return t.align || (t.align = "start"), (!t.behavior || !HC) && (t.behavior = "auto"), t.offset || (t.offset = 0), t;
}
const vs = Je(
  ([
    { gap: e, listRefresh: t, sizes: n, totalCount: r },
    {
      fixedFooterHeight: o,
      fixedHeaderHeight: s,
      footerHeight: a,
      headerHeight: l,
      scrollingInProgress: c,
      scrollTo: u,
      smoothScrollTargetReached: d,
      viewportHeight: f
    },
    { log: h }
  ]) => {
    const g = qe(), y = qe(), m = be(0);
    let b = null, x = null, E = null;
    function w() {
      b && (b(), b = null), E && (E(), E = null), x && (clearTimeout(x), x = null), We(c, !1);
    }
    return Ne(
      ge(
        g,
        He(n, f, r, m, l, a, h),
        He(e, s, o),
        Ce(
          ([
            [T, v, S, R, $, I, p, O],
            P,
            A,
            D
          ]) => {
            const _ = my(T), { align: M, behavior: V, offset: Y } = _, U = R - 1, j = fy(_, v, U);
            let W = ls(j, v.offsetTree, P) + I;
            M === "end" ? (W += A + Gn(v.sizeTree, j)[1] - S + D, j === U && (W += p)) : M === "center" ? W += (A + Gn(v.sizeTree, j)[1] - S + D) / 2 : W -= $, Y && (W += Y);
            const ee = (K) => {
              w(), K ? (O("retrying to scroll to", { location: T }, Cn.DEBUG), We(g, T)) : (We(y, !0), O("list did not change, scroll successful", {}, Cn.DEBUG));
            };
            if (w(), V === "smooth") {
              let K = !1;
              E = rt(t, (oe) => {
                K = K || oe;
              }), b = hr(d, () => {
                ee(K);
              });
            } else
              b = hr(ge(t, qC(150)), ee);
            return x = setTimeout(() => {
              w();
            }, 1200), We(c, !0), O("scrolling from index to", { behavior: V, index: j, top: W }, Cn.DEBUG), { behavior: V, top: W };
          }
        )
      ),
      u
    ), {
      scrollTargetReached: y,
      scrollToIndex: g,
      topListHeight: m
    };
  },
  yt(yr, un, Qr),
  { singleton: !0 }
);
function qC(e) {
  return (t) => {
    const n = setTimeout(() => {
      t(!1);
    }, e);
    return (r) => {
      r && (t(!0), clearTimeout(n));
    };
  };
}
function $d(e, t) {
  e == 0 ? t() : requestAnimationFrame(() => {
    $d(e - 1, t);
  });
}
function Pd(e, t) {
  const n = t - 1;
  return typeof e == "number" ? e : e.index === "LAST" ? n : e.index;
}
const xs = Je(
  ([{ defaultItemSize: e, listRefresh: t, sizes: n }, { scrollTop: r }, { scrollTargetReached: o, scrollToIndex: s }, { didMount: a }]) => {
    const l = be(!0), c = be(0), u = be(!0);
    return Ne(
      ge(
        a,
        He(c),
        Fe(([d, f]) => !!f),
        rr(!1)
      ),
      l
    ), Ne(
      ge(
        a,
        He(c),
        Fe(([d, f]) => !!f),
        rr(!1)
      ),
      u
    ), rt(
      ge(
        zt(t, a),
        He(l, n, e, u),
        Fe(([[, d], f, { sizeTree: h }, g, y]) => d && (!ft(h) || Sd(g)) && !f && !y),
        He(c)
      ),
      ([, d]) => {
        hr(o, () => {
          We(u, !0);
        }), $d(4, () => {
          hr(r, () => {
            We(l, !0);
          }), We(s, d);
        });
      }
    ), {
      initialItemFinalLocationReached: u,
      initialTopMostItemIndex: c,
      scrolledToInitialItem: l
    };
  },
  yt(yr, un, vs, Jr),
  { singleton: !0 }
);
function hy(e, t) {
  return Math.abs(e - t) < 1.01;
}
const cs = "up", zi = "down", YC = "none", GC = {
  atBottom: !1,
  notAtBottomBecause: "NOT_SHOWING_LAST_ITEM",
  state: {
    offsetBottom: 0,
    scrollHeight: 0,
    scrollTop: 0,
    viewportHeight: 0
  }
}, KC = 0, ws = Je(([{ footerHeight: e, headerHeight: t, scrollBy: n, scrollContainerState: r, scrollTop: o, viewportHeight: s }]) => {
  const a = be(!1), l = be(!0), c = qe(), u = qe(), d = be(4), f = be(KC), h = en(
    ge(
      Np(ge(je(o), ti(1), rr(!0)), ge(je(o), ti(1), rr(!1), Ip(100))),
      ht()
    ),
    !1
  ), g = en(
    ge(Np(ge(n, rr(!0)), ge(n, rr(!1), Ip(200))), ht()),
    !1
  );
  Ne(
    ge(
      zt(je(o), je(f)),
      Ce(([E, w]) => E <= w),
      ht()
    ),
    l
  ), Ne(ge(l, Lr(50)), u);
  const y = En(
    ge(
      zt(r, je(s), je(t), je(e), je(d)),
      ir((E, [{ scrollHeight: w, scrollTop: T }, v, S, R, $]) => {
        const I = T + v - w > -$, p = {
          scrollHeight: w,
          scrollTop: T,
          viewportHeight: v
        };
        if (I) {
          let P, A;
          return T > E.state.scrollTop ? (P = "SCROLLED_DOWN", A = E.state.scrollTop - T) : (P = "SIZE_DECREASED", A = E.state.scrollTop - T || E.scrollTopDelta), {
            atBottom: !0,
            atBottomBecause: P,
            scrollTopDelta: A,
            state: p
          };
        }
        let O;
        return p.scrollHeight > E.state.scrollHeight ? O = "SIZE_INCREASED" : v < E.state.viewportHeight ? O = "VIEWPORT_HEIGHT_DECREASING" : T < E.state.scrollTop ? O = "SCROLLING_UPWARDS" : O = "NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM", {
          atBottom: !1,
          notAtBottomBecause: O,
          state: p
        };
      }, GC),
      ht((E, w) => E && E.atBottom === w.atBottom)
    )
  ), m = en(
    ge(
      r,
      ir(
        (E, { scrollHeight: w, scrollTop: T, viewportHeight: v }) => {
          if (hy(E.scrollHeight, w))
            return {
              changed: !1,
              jump: 0,
              scrollHeight: w,
              scrollTop: T
            };
          {
            const S = w - (T + v) < 1;
            return E.scrollTop !== T && S ? {
              changed: !0,
              jump: E.scrollTop - T,
              scrollHeight: w,
              scrollTop: T
            } : {
              changed: !0,
              jump: 0,
              scrollHeight: w,
              scrollTop: T
            };
          }
        },
        { changed: !1, jump: 0, scrollHeight: 0, scrollTop: 0 }
      ),
      Fe((E) => E.changed),
      Ce((E) => E.jump)
    ),
    0
  );
  Ne(
    ge(
      y,
      Ce((E) => E.atBottom)
    ),
    a
  ), Ne(ge(a, Lr(50)), c);
  const b = be(zi);
  Ne(
    ge(
      r,
      Ce(({ scrollTop: E }) => E),
      ht(),
      ir(
        (E, w) => Zt(g) ? { direction: E.direction, prevScrollTop: w } : { direction: w < E.prevScrollTop ? cs : zi, prevScrollTop: w },
        { direction: zi, prevScrollTop: 0 }
      ),
      Ce((E) => E.direction)
    ),
    b
  ), Ne(ge(r, Lr(50), rr(YC)), b);
  const x = be(0);
  return Ne(
    ge(
      h,
      Fe((E) => !E),
      rr(0)
    ),
    x
  ), Ne(
    ge(
      o,
      Lr(100),
      He(h),
      Fe(([E, w]) => !!w),
      ir(([E, w], [T]) => [w, T], [0, 0]),
      Ce(([E, w]) => w - E)
    ),
    x
  ), {
    atBottomState: y,
    atBottomStateChange: c,
    atBottomThreshold: d,
    atTopStateChange: u,
    atTopThreshold: f,
    isAtBottom: a,
    isAtTop: l,
    isScrolling: h,
    lastJumpDueToItemResize: m,
    scrollDirection: b,
    scrollVelocity: x
  };
}, yt(un)), Ca = "top", Oa = "bottom", Dp = "none";
function Bp(e, t, n) {
  return typeof e == "number" ? n === cs && t === Ca || n === zi && t === Oa ? e : 0 : n === cs ? t === Ca ? e.main : e.reverse : t === Oa ? e.main : e.reverse;
}
function Fp(e, t) {
  var n;
  return typeof e == "number" ? e : (n = e[t]) != null ? n : 0;
}
const kd = Je(
  ([{ deviation: e, fixedHeaderHeight: t, headerHeight: n, scrollTop: r, viewportHeight: o }]) => {
    const s = qe(), a = be(0), l = be(0), c = be(0), u = en(
      ge(
        zt(
          je(r),
          je(o),
          je(n),
          je(s, as),
          je(c),
          je(a),
          je(t),
          je(e),
          je(l)
        ),
        Ce(
          ([
            d,
            f,
            h,
            [g, y],
            m,
            b,
            x,
            E,
            w
          ]) => {
            const T = d - E, v = b + x, S = Math.max(h - T, 0);
            let R = Dp;
            const $ = Fp(w, Ca), I = Fp(w, Oa);
            return g -= E, g += h + x, y += h + x, y -= E, g > d + v - $ && (R = cs), y < d - S + f + I && (R = zi), R !== Dp ? [
              Math.max(T - h - Bp(m, Ca, R) - $, 0),
              T - S - x + f + Bp(m, Oa, R) + I
            ] : null;
          }
        ),
        Fe((d) => d != null),
        ht(as)
      ),
      [0, 0]
    );
    return {
      increaseViewportBy: l,
      // input
      listBoundary: s,
      overscan: c,
      topListHeight: a,
      // output
      visibleRange: u
    };
  },
  yt(un),
  { singleton: !0 }
);
function XC(e, t, n) {
  if (vl(t)) {
    const r = dy(e, t);
    return [
      { index: Gn(t.groupOffsetTree, r)[0], offset: 0, size: 0 },
      { data: n == null ? void 0 : n[0], index: r, offset: 0, size: 0 }
    ];
  }
  return [{ data: n == null ? void 0 : n[0], index: e, offset: 0, size: 0 }];
}
const fc = {
  bottom: 0,
  firstItemIndex: 0,
  items: [],
  offsetBottom: 0,
  offsetTop: 0,
  top: 0,
  topItems: [],
  topListHeight: 0,
  totalCount: 0
};
function ca(e, t, n, r, o, s) {
  const { lastIndex: a, lastOffset: l, lastSize: c } = o;
  let u = 0, d = 0;
  if (e.length > 0) {
    u = e[0].offset;
    const m = e[e.length - 1];
    d = m.offset + m.size;
  }
  const f = n - a, h = l + f * c + (f - 1) * r, g = u, y = h - d;
  return {
    bottom: d,
    firstItemIndex: s,
    items: jp(e, o, s),
    offsetBottom: y,
    offsetTop: u,
    top: g,
    topItems: jp(t, o, s),
    topListHeight: t.reduce((m, b) => b.size + m, 0),
    totalCount: n
  };
}
function gy(e, t, n, r, o, s) {
  let a = 0;
  if (n.groupIndices.length > 0)
    for (const d of n.groupIndices) {
      if (d - a >= e)
        break;
      a++;
    }
  const l = e + a, c = Pd(t, l), u = Array.from({ length: l }).map((d, f) => ({
    data: s[f + c],
    index: f + c,
    offset: 0,
    size: 0
  }));
  return ca(u, [], l, o, n, r);
}
function jp(e, t, n) {
  if (e.length === 0)
    return [];
  if (!vl(t))
    return e.map((u) => ({ ...u, index: u.index + n, originalIndex: u.index }));
  const r = e[0].index, o = e[e.length - 1].index, s = [], a = bl(t.groupOffsetTree, r, o);
  let l, c = 0;
  for (const u of e) {
    (!l || l.end < u.index) && (l = a.shift(), c = t.groupIndices.indexOf(l.start));
    let d;
    u.index === l.start ? d = {
      index: c,
      type: "group"
    } : d = {
      groupIndex: c,
      index: u.index - (c + 1) + n
    }, s.push({
      ...d,
      data: u.data,
      offset: u.offset,
      originalIndex: u.index,
      size: u.size
    });
  }
  return s;
}
const xo = Je(
  ([
    { data: e, firstItemIndex: t, gap: n, sizes: r, totalCount: o },
    s,
    { listBoundary: a, topListHeight: l, visibleRange: c },
    { initialTopMostItemIndex: u, scrolledToInitialItem: d },
    { topListHeight: f },
    h,
    { didMount: g },
    { recalcInProgress: y }
  ]) => {
    const m = be([]), b = be(0), x = qe();
    Ne(s.topItemsIndexes, m);
    const E = en(
      ge(
        zt(
          g,
          y,
          je(c, as),
          je(o),
          je(r),
          je(u),
          d,
          je(m),
          je(t),
          je(n),
          e
        ),
        Fe(([S, R, , $, , , , , , , I]) => {
          const p = I && I.length !== $;
          return S && !R && !p;
        }),
        Ce(
          ([
            ,
            ,
            [S, R],
            $,
            I,
            p,
            O,
            P,
            A,
            D,
            _
          ]) => {
            const M = I, { offsetTree: V, sizeTree: Y } = M, U = Zt(b);
            if ($ === 0)
              return { ...fc, totalCount: $ };
            if (S === 0 && R === 0)
              return U === 0 ? { ...fc, totalCount: $ } : gy(U, p, I, A, D, _ || []);
            if (ft(Y))
              return U > 0 ? null : ca(
                XC(Pd(p, $), M, _),
                [],
                $,
                D,
                M,
                A
              );
            const j = [];
            if (P.length > 0) {
              const ne = P[0], se = P[P.length - 1];
              let de = 0;
              for (const X of bl(Y, ne, se)) {
                const ae = X.value, Q = Math.max(X.start, ne), ie = Math.min(X.end, se);
                for (let F = Q; F <= ie; F++)
                  j.push({ data: _ == null ? void 0 : _[F], index: F, offset: de, size: ae }), de += ae;
              }
            }
            if (!O)
              return ca([], j, $, D, M, A);
            const W = P.length > 0 ? P[P.length - 1] + 1 : 0, ee = FC(V, S, R, W);
            if (ee.length === 0)
              return null;
            const K = $ - 1, oe = yl([], (ne) => {
              for (const se of ee) {
                const de = se.value;
                let X = de.offset, ae = se.start;
                const Q = de.size;
                if (de.offset < S) {
                  ae += Math.floor((S - de.offset + D) / (Q + D));
                  const F = ae - se.start;
                  X += F * Q + F * D;
                }
                ae < W && (X += (W - ae) * Q, ae = W);
                const ie = Math.min(se.end, K);
                for (let F = ae; F <= ie && !(X >= R); F++)
                  ne.push({ data: _ == null ? void 0 : _[F], index: F, offset: X, size: Q }), X += Q + D;
              }
            });
            return ca(oe, j, $, D, M, A);
          }
        ),
        //@ts-expect-error filter needs to be fixed
        Fe((S) => S !== null),
        ht()
      ),
      fc
    );
    Ne(
      ge(
        e,
        Fe(Sd),
        Ce((S) => S == null ? void 0 : S.length)
      ),
      o
    ), Ne(
      ge(
        E,
        Ce((S) => S.topListHeight)
      ),
      f
    ), Ne(f, l), Ne(
      ge(
        E,
        Ce((S) => [S.top, S.bottom])
      ),
      a
    ), Ne(
      ge(
        E,
        Ce((S) => S.items)
      ),
      x
    );
    const w = En(
      ge(
        E,
        Fe(({ items: S }) => S.length > 0),
        He(o, e),
        Fe(([{ items: S }, R]) => S[S.length - 1].originalIndex === R - 1),
        Ce(([, S, R]) => [S - 1, R]),
        ht(as),
        Ce(([S]) => S)
      )
    ), T = En(
      ge(
        E,
        Lr(200),
        Fe(({ items: S, topItems: R }) => S.length > 0 && S[0].originalIndex === R.length),
        Ce(({ items: S }) => S[0].index),
        ht()
      )
    ), v = En(
      ge(
        E,
        Fe(({ items: S }) => S.length > 0),
        Ce(({ items: S }) => {
          let R = 0, $ = S.length - 1;
          for (; S[R].type === "group" && R < $; )
            R++;
          for (; S[$].type === "group" && $ > R; )
            $--;
          return {
            endIndex: S[$].index,
            startIndex: S[R].index
          };
        }),
        ht(cy)
      )
    );
    return { endReached: w, initialItemCount: b, itemsRendered: x, listState: E, rangeChanged: v, startReached: T, topItemsIndexes: m, ...h };
  },
  yt(
    yr,
    py,
    kd,
    xs,
    vs,
    ws,
    Jr,
    Od
  ),
  { singleton: !0 }
), yy = Je(
  ([{ fixedFooterHeight: e, fixedHeaderHeight: t, footerHeight: n, headerHeight: r }, { listState: o }]) => {
    const s = qe(), a = en(
      ge(
        zt(n, e, r, t, o),
        Ce(([l, c, u, d, f]) => l + c + u + d + f.offsetBottom + f.bottom)
      ),
      0
    );
    return Ne(je(a), s), { totalListHeight: a, totalListHeightChanged: s };
  },
  yt(un, xo),
  { singleton: !0 }
), QC = Je(
  ([{ viewportHeight: e }, { totalListHeight: t }]) => {
    const n = be(!1), r = en(
      ge(
        zt(n, e, t),
        Fe(([o]) => o),
        Ce(([, o, s]) => Math.max(0, o - s)),
        Lr(0),
        ht()
      ),
      0
    );
    return { alignToBottom: n, paddingTopAddition: r };
  },
  yt(un, yy),
  { singleton: !0 }
);
function Lp(e) {
  return e ? e === "smooth" ? "smooth" : "auto" : !1;
}
const JC = (e, t) => typeof e == "function" ? Lp(e(t)) : t && Lp(e), ZC = Je(
  ([
    { listRefresh: e, totalCount: t },
    { atBottomState: n, isAtBottom: r },
    { scrollToIndex: o },
    { scrolledToInitialItem: s },
    { didMount: a, propsReady: l },
    { log: c },
    { scrollingInProgress: u }
  ]) => {
    const d = be(!1), f = qe();
    let h = null;
    function g(m) {
      We(o, {
        align: "end",
        behavior: m,
        index: "LAST"
      });
    }
    rt(
      ge(
        zt(ge(je(t), ti(1)), a),
        He(je(d), r, s, u),
        Ce(([[m, b], x, E, w, T]) => {
          let v = b && w, S = "auto";
          return v && (S = JC(x, E || T), v = v && !!S), { followOutputBehavior: S, shouldFollow: v, totalCount: m };
        }),
        Fe(({ shouldFollow: m }) => m)
      ),
      ({ followOutputBehavior: m, totalCount: b }) => {
        h && (h(), h = null), h = hr(e, () => {
          Zt(c)("following output to ", { totalCount: b }, Cn.DEBUG), g(m), h = null;
        });
      }
    );
    function y(m) {
      const b = hr(n, (x) => {
        m && !x.atBottom && x.notAtBottomBecause === "SIZE_INCREASED" && !h && (Zt(c)("scrolling to bottom due to increased size", {}, Cn.DEBUG), g("auto"));
      });
      setTimeout(b, 100);
    }
    return rt(
      ge(
        zt(je(d), t, l),
        Fe(([m, , b]) => m && b),
        ir(
          ({ value: m }, [, b]) => ({ refreshed: m === b, value: b }),
          { refreshed: !1, value: 0 }
        ),
        Fe(({ refreshed: m }) => m),
        He(d, t)
      ),
      ([, m]) => {
        Zt(s) && y(m !== !1);
      }
    ), rt(f, () => {
      y(Zt(d) !== !1);
    }), rt(zt(je(d), n), ([m, b]) => {
      m && !b.atBottom && b.notAtBottomBecause === "VIEWPORT_HEIGHT_DECREASING" && g("auto");
    }), { autoscrollToBottom: f, followOutput: d };
  },
  yt(yr, ws, vs, xs, Jr, Qr, un)
), eO = Je(
  ([{ data: e, firstItemIndex: t, gap: n, sizes: r }, { initialTopMostItemIndex: o }, { initialItemCount: s, listState: a }, { didMount: l }]) => (Ne(
    ge(
      l,
      He(s),
      Fe(([, c]) => c !== 0),
      He(o, r, t, n, e),
      Ce(([[, c], u, d, f, h, g = []]) => gy(c, u, d, f, h, g))
    ),
    a
  ), {}),
  yt(yr, xs, xo, Jr),
  { singleton: !0 }
), tO = Je(
  ([{ didMount: e }, { scrollTo: t }, { listState: n }]) => {
    const r = be(0);
    return rt(
      ge(
        e,
        He(r),
        Fe(([, o]) => o !== 0),
        Ce(([, o]) => ({ top: o }))
      ),
      (o) => {
        hr(
          ge(
            n,
            ti(1),
            Fe((s) => s.items.length > 1)
          ),
          () => {
            requestAnimationFrame(() => {
              We(t, o);
            });
          }
        );
      }
    ), {
      initialScrollTop: r
    };
  },
  yt(Jr, un, xo),
  { singleton: !0 }
), nO = ({
  itemBottom: e,
  itemTop: t,
  locationParams: { align: n, behavior: r, ...o },
  viewportBottom: s,
  viewportTop: a
}) => t < a ? { ...o, align: n ?? "start", behavior: r } : e > s ? { ...o, align: n ?? "end", behavior: r } : null, rO = Je(
  ([
    { gap: e, sizes: t, totalCount: n },
    { fixedFooterHeight: r, fixedHeaderHeight: o, headerHeight: s, scrollingInProgress: a, scrollTop: l, viewportHeight: c },
    { scrollToIndex: u }
  ]) => {
    const d = qe();
    return Ne(
      ge(
        d,
        He(t, c, n, s, o, r, l),
        He(e),
        Ce(([[f, h, g, y, m, b, x, E], w]) => {
          const { align: T, behavior: v, calculateViewLocation: S = nO, done: R, ...$ } = f, I = fy(f, h, y - 1), p = ls(I, h.offsetTree, w) + m + b, O = p + Gn(h.sizeTree, I)[1], P = E + b, A = E + g - x, D = S({
            itemBottom: O,
            itemTop: p,
            locationParams: { align: T, behavior: v, ...$ },
            viewportBottom: A,
            viewportTop: P
          });
          return D ? R && hr(
            ge(
              a,
              Fe((_) => !_),
              // skips the initial publish of false, and the cleanup call.
              // but if scrollingInProgress is true, we skip the initial publish.
              ti(Zt(a) ? 1 : 2)
            ),
            R
          ) : R && R(), D;
        }),
        Fe((f) => f !== null)
      ),
      u
    ), {
      scrollIntoView: d
    };
  },
  yt(yr, un, vs, xo, Qr),
  { singleton: !0 }
), by = Je(
  ([{ scrollVelocity: e }]) => {
    const t = be(!1), n = qe(), r = be(!1);
    return Ne(
      ge(
        e,
        He(r, t, n),
        Fe(([o, s]) => !!s),
        Ce(([o, s, a, l]) => {
          const { enter: c, exit: u } = s;
          if (a) {
            if (u(o, l))
              return !1;
          } else if (c(o, l))
            return !0;
          return a;
        }),
        ht()
      ),
      t
    ), rt(
      ge(zt(t, e, n), He(r)),
      ([[o, s, a], l]) => {
        o && l && l.change && l.change(s, a);
      }
    ), { isSeeking: t, scrollSeekConfiguration: r, scrollSeekRangeChanged: n, scrollVelocity: e };
  },
  yt(ws),
  { singleton: !0 }
), Id = Je(([{ scrollContainerState: e, scrollTo: t }]) => {
  const n = qe(), r = qe(), o = qe(), s = be(!1), a = be(void 0);
  return Ne(
    ge(
      zt(n, r),
      Ce(([{ scrollHeight: l, scrollTop: c, viewportHeight: u }, { offsetTop: d }]) => ({
        scrollHeight: l,
        scrollTop: Math.max(0, c - d),
        viewportHeight: u
      }))
    ),
    e
  ), Ne(
    ge(
      t,
      He(r),
      Ce(([l, { offsetTop: c }]) => ({
        ...l,
        top: l.top + c
      }))
    ),
    o
  ), {
    customScrollParent: a,
    // config
    useWindowScroll: s,
    // input
    windowScrollContainerState: n,
    // signals
    windowScrollTo: o,
    windowViewportRect: r
  };
}, yt(un)), oO = Je(
  ([
    { sizeRanges: e, sizes: t },
    { headerHeight: n, scrollTop: r },
    { initialTopMostItemIndex: o },
    { didMount: s },
    { useWindowScroll: a, windowScrollContainerState: l, windowViewportRect: c }
  ]) => {
    const u = qe(), d = be(void 0), f = be(null), h = be(null);
    return Ne(l, f), Ne(c, h), rt(
      ge(
        u,
        He(t, r, a, f, h, n)
      ),
      ([g, y, m, b, x, E, w]) => {
        const T = LC(y.sizeTree);
        b && x !== null && E !== null && (m = x.scrollTop - E.offsetTop), m -= w, g({ ranges: T, scrollTop: m });
      }
    ), Ne(ge(d, Fe(Sd), Ce(iO)), o), Ne(
      ge(
        s,
        He(d),
        Fe(([, g]) => g !== void 0),
        ht(),
        Ce(([, g]) => g.ranges)
      ),
      e
    ), {
      getState: u,
      restoreStateFrom: d
    };
  },
  yt(yr, un, xs, Jr, Id)
);
function iO(e) {
  return { align: "start", index: 0, offset: e.scrollTop };
}
const sO = Je(([{ topItemsIndexes: e }]) => {
  const t = be(0);
  return Ne(
    ge(
      t,
      Fe((n) => n >= 0),
      Ce((n) => Array.from({ length: n }).map((r, o) => o))
    ),
    e
  ), { topItemCount: t };
}, yt(xo));
function vy(e) {
  let t = !1, n;
  return () => (t || (t = !0, n = e()), n);
}
const aO = vy(() => /iP(ad|od|hone)/i.test(navigator.userAgent) && /WebKit/i.test(navigator.userAgent)), lO = Je(
  ([
    { deviation: e, scrollBy: t, scrollingInProgress: n, scrollTop: r },
    { isAtBottom: o, isScrolling: s, lastJumpDueToItemResize: a, scrollDirection: l },
    { listState: c },
    { beforeUnshiftWith: u, gap: d, shiftWithOffset: f, sizes: h },
    { log: g },
    { recalcInProgress: y }
  ]) => {
    const m = En(
      ge(
        c,
        He(a),
        ir(
          ([, x, E, w], [{ bottom: T, items: v, offsetBottom: S, totalCount: R }, $]) => {
            const I = T + S;
            let p = 0;
            return E === R && x.length > 0 && v.length > 0 && (v[0].originalIndex === 0 && x[0].originalIndex === 0 || (p = I - w, p !== 0 && (p += $))), [p, v, R, I];
          },
          [0, [], 0, 0]
        ),
        Fe(([x]) => x !== 0),
        He(r, l, n, o, g, y),
        Fe(([, x, E, w, , , T]) => !T && !w && x !== 0 && E === cs),
        Ce(([[x], , , , , E]) => (E("Upward scrolling compensation", { amount: x }, Cn.DEBUG), x))
      )
    );
    function b(x) {
      x > 0 ? (We(t, { behavior: "auto", top: -x }), We(e, 0)) : (We(e, 0), We(t, { behavior: "auto", top: -x }));
    }
    return rt(ge(m, He(e, s)), ([x, E, w]) => {
      w && aO() ? We(e, E - x) : b(-x);
    }), rt(
      ge(
        zt(en(s, !1), e, y),
        Fe(([x, E, w]) => !x && !w && E !== 0),
        Ce(([x, E]) => E),
        Lr(1)
      ),
      b
    ), Ne(
      ge(
        f,
        Ce((x) => ({ top: -x }))
      ),
      t
    ), rt(
      ge(
        u,
        He(h, d),
        Ce(([x, { groupIndices: E, lastSize: w, sizeTree: T }, v]) => {
          function S(R) {
            return R * (w + v);
          }
          if (E.length === 0)
            return S(x);
          {
            let R = 0;
            const $ = ss(T, 0);
            let I = 0, p = 0;
            for (; I < x; ) {
              I++, R += $;
              let O = E.length === p + 1 ? 1 / 0 : E[p + 1] - E[p] - 1;
              I + O > x && (R -= $, O = x - I + 1), I += O, R += S(O), p++;
            }
            return R;
          }
        })
      ),
      (x) => {
        We(e, x), requestAnimationFrame(() => {
          We(t, { top: x }), requestAnimationFrame(() => {
            We(e, 0), We(y, !1);
          });
        });
      }
    ), { deviation: e };
  },
  yt(un, ws, xo, yr, Qr, Od)
), cO = Je(
  ([
    e,
    t,
    n,
    r,
    o,
    s,
    a,
    l,
    c,
    u
  ]) => ({
    ...e,
    ...t,
    ...n,
    ...r,
    ...o,
    ...s,
    ...a,
    ...l,
    ...c,
    ...u
  }),
  yt(
    kd,
    eO,
    Jr,
    by,
    yy,
    tO,
    QC,
    Id,
    rO,
    Qr
  )
), xy = Je(
  ([
    {
      data: e,
      defaultItemSize: t,
      firstItemIndex: n,
      fixedItemSize: r,
      gap: o,
      groupIndices: s,
      itemSize: a,
      sizeRanges: l,
      sizes: c,
      statefulTotalCount: u,
      totalCount: d,
      trackItemSizes: f
    },
    { initialItemFinalLocationReached: h, initialTopMostItemIndex: g, scrolledToInitialItem: y },
    m,
    b,
    x,
    { listState: E, topItemsIndexes: w, ...T },
    { scrollToIndex: v },
    S,
    { topItemCount: R },
    { groupCounts: $ },
    I
  ]) => (Ne(T.rangeChanged, I.scrollSeekRangeChanged), Ne(
    ge(
      I.windowViewportRect,
      Ce((p) => p.visibleHeight)
    ),
    m.viewportHeight
  ), {
    data: e,
    defaultItemHeight: t,
    firstItemIndex: n,
    fixedItemHeight: r,
    gap: o,
    groupCounts: $,
    initialItemFinalLocationReached: h,
    initialTopMostItemIndex: g,
    scrolledToInitialItem: y,
    sizeRanges: l,
    topItemCount: R,
    topItemsIndexes: w,
    // input
    totalCount: d,
    ...x,
    groupIndices: s,
    itemSize: a,
    listState: E,
    scrollToIndex: v,
    // output
    statefulTotalCount: u,
    trackItemSizes: f,
    // exported from stateFlagsSystem
    ...T,
    // the bag of IO from featureGroup1System
    ...I,
    ...m,
    sizes: c,
    ...b
  }),
  yt(
    yr,
    xs,
    un,
    oO,
    ZC,
    xo,
    vs,
    lO,
    sO,
    py,
    cO
  )
);
function uO(e, t) {
  const n = {}, r = {};
  let o = 0;
  const s = e.length;
  for (; o < s; )
    r[e[o]] = 1, o += 1;
  for (const a in t)
    Object.hasOwn(r, a) || (n[a] = t[a]);
  return n;
}
const zs = typeof document < "u" ? L.useLayoutEffect : L.useEffect;
function wy(e, t, n) {
  const r = Object.keys(t.required || {}), o = Object.keys(t.optional || {}), s = Object.keys(t.methods || {}), a = Object.keys(t.events || {}), l = L.createContext({});
  function c(b, x) {
    b.propsReady && We(b.propsReady, !1);
    for (const E of r) {
      const w = b[t.required[E]];
      We(w, x[E]);
    }
    for (const E of o)
      if (E in x) {
        const w = b[t.optional[E]];
        We(w, x[E]);
      }
    b.propsReady && We(b.propsReady, !0);
  }
  function u(b) {
    return s.reduce((x, E) => (x[E] = (w) => {
      const T = b[t.methods[E]];
      We(T, w);
    }, x), {});
  }
  function d(b) {
    return a.reduce((x, E) => (x[E] = CC(b[t.events[E]]), x), {});
  }
  const f = L.forwardRef((b, x) => {
    const { children: E, ...w } = b, [T] = L.useState(() => yl(RC(e), (R) => {
      c(R, w);
    })), [v] = L.useState(kp(d, T));
    zs(() => {
      for (const R of a)
        R in w && rt(v[R], w[R]);
      return () => {
        Object.values(v).map(Ed);
      };
    }, [w, v, T]), zs(() => {
      c(T, w);
    }), L.useImperativeHandle(x, Pp(u(T)));
    const S = n;
    return /* @__PURE__ */ k(l.Provider, { value: T, children: n ? /* @__PURE__ */ k(S, { ...uO([...r, ...o, ...a], w), children: E }) : E });
  }), h = (b) => L.useCallback(ty(We, L.useContext(l)[b]), [b]), g = (b) => {
    const x = L.useContext(l)[b], E = L.useCallback(
      (w) => rt(x, w),
      [x]
    );
    return L.useSyncExternalStore(
      E,
      () => Zt(x),
      () => Zt(x)
    );
  }, y = (b) => {
    const x = L.useContext(l)[b], [E, w] = L.useState(kp(Zt, x));
    return zs(
      () => rt(x, (T) => {
        T !== E && w(Pp(T));
      }),
      [x, E]
    ), E;
  }, m = L.version.startsWith("18") ? g : y;
  return {
    Component: f,
    useEmitter: (b, x) => {
      const E = L.useContext(l)[b];
      zs(() => rt(E, x), [x, E]);
    },
    useEmitterValue: m,
    usePublisher: h
  };
}
const Ty = L.createContext(void 0), Sy = L.createContext(void 0), Ey = typeof document < "u" ? L.useLayoutEffect : L.useEffect;
function pc(e) {
  return "self" in e;
}
function dO(e) {
  return "body" in e;
}
function Cy(e, t, n, r = mi, o, s) {
  const a = L.useRef(null), l = L.useRef(null), c = L.useRef(null), u = L.useCallback(
    (h) => {
      let g, y, m;
      const b = h.target;
      if (dO(b) || pc(b)) {
        const E = pc(b) ? b : b.defaultView;
        m = s ? E.scrollX : E.scrollY, g = s ? E.document.documentElement.scrollWidth : E.document.documentElement.scrollHeight, y = s ? E.innerWidth : E.innerHeight;
      } else
        m = s ? b.scrollLeft : b.scrollTop, g = s ? b.scrollWidth : b.scrollHeight, y = s ? b.offsetWidth : b.offsetHeight;
      const x = () => {
        e({
          scrollHeight: g,
          scrollTop: Math.max(m, 0),
          viewportHeight: y
        });
      };
      h.suppressFlushSync ? x() : Do.flushSync(x), l.current !== null && (m === l.current || m <= 0 || m === g - y) && (l.current = null, t(!0), c.current && (clearTimeout(c.current), c.current = null));
    },
    [e, t]
  );
  L.useEffect(() => {
    const h = o || a.current;
    return r(o || a.current), u({ suppressFlushSync: !0, target: h }), h.addEventListener("scroll", u, { passive: !0 }), () => {
      r(null), h.removeEventListener("scroll", u);
    };
  }, [a, u, n, r, o]);
  function d(h) {
    const g = a.current;
    if (!g || (s ? "offsetWidth" in g && g.offsetWidth === 0 : "offsetHeight" in g && g.offsetHeight === 0))
      return;
    const y = h.behavior === "smooth";
    let m, b, x;
    pc(g) ? (b = Math.max(
      Wr(g.document.documentElement, s ? "width" : "height"),
      s ? g.document.documentElement.scrollWidth : g.document.documentElement.scrollHeight
    ), m = s ? g.innerWidth : g.innerHeight, x = s ? window.scrollX : window.scrollY) : (b = g[s ? "scrollWidth" : "scrollHeight"], m = Wr(g, s ? "width" : "height"), x = g[s ? "scrollLeft" : "scrollTop"]);
    const E = b - m;
    if (h.top = Math.ceil(Math.max(Math.min(E, h.top), 0)), hy(m, b) || h.top === x) {
      e({ scrollHeight: b, scrollTop: x, viewportHeight: m }), y && t(!0);
      return;
    }
    y ? (l.current = h.top, c.current && clearTimeout(c.current), c.current = setTimeout(() => {
      c.current = null, l.current = null, t(!0);
    }, 1e3)) : l.current = null, s && (h = { behavior: h.behavior, left: h.top }), g.scrollTo(h);
  }
  function f(h) {
    s && (h = { behavior: h.behavior, left: h.top }), a.current.scrollBy(h);
  }
  return { scrollByCallback: f, scrollerRef: a, scrollToCallback: d };
}
const mc = "-webkit-sticky", Vp = "sticky", Oy = vy(() => {
  if (typeof document > "u")
    return Vp;
  const e = document.createElement("div");
  return e.style.position = mc, e.style.position === mc ? mc : Vp;
});
function Nd(e) {
  return e;
}
const fO = /* @__PURE__ */ Je(() => {
  const e = be((c) => `Item ${c}`), t = be(null), n = be((c) => `Group ${c}`), r = be({}), o = be(Nd), s = be("div"), a = be(mi), l = (c, u = null) => en(
    ge(
      r,
      Ce((d) => d[c]),
      ht()
    ),
    u
  );
  return {
    components: r,
    computeItemKey: o,
    context: t,
    EmptyPlaceholder: l("EmptyPlaceholder"),
    FooterComponent: l("Footer"),
    GroupComponent: l("Group", "div"),
    groupContent: n,
    HeaderComponent: l("Header"),
    HeaderFooterTag: s,
    ItemComponent: l("Item", "div"),
    itemContent: e,
    ListComponent: l("List", "div"),
    ScrollerComponent: l("Scroller", "div"),
    scrollerRef: a,
    ScrollSeekPlaceholder: l("ScrollSeekPlaceholder"),
    TopItemListComponent: l("TopItemList")
  };
}), pO = /* @__PURE__ */ Je(
  ([e, t]) => ({ ...e, ...t }),
  yt(xy, fO)
), mO = ({ height: e }) => /* @__PURE__ */ k("div", { style: { height: e } }), hO = { overflowAnchor: "none", position: Oy(), zIndex: 1 }, Ry = { overflowAnchor: "none" }, gO = { ...Ry, display: "inline-block", height: "100%" }, zp = /* @__PURE__ */ L.memo(function({ showTopList: e = !1 }) {
  const t = Ve("listState"), n = Mn("sizeRanges"), r = Ve("useWindowScroll"), o = Ve("customScrollParent"), s = Mn("windowScrollContainerState"), a = Mn("scrollContainerState"), l = o || r ? s : a, c = Ve("itemContent"), u = Ve("context"), d = Ve("groupContent"), f = Ve("trackItemSizes"), h = Ve("itemSize"), g = Ve("log"), y = Mn("gap"), m = Ve("horizontalDirection"), { callbackRef: b } = kC(
    n,
    h,
    f,
    e ? mi : l,
    g,
    y,
    o,
    m,
    Ve("skipAnimationFrameInResizeObserver")
  ), [x, E] = L.useState(0);
  Ad("deviation", (D) => {
    x !== D && E(D);
  });
  const w = Ve("EmptyPlaceholder"), T = Ve("ScrollSeekPlaceholder") || mO, v = Ve("ListComponent"), S = Ve("ItemComponent"), R = Ve("GroupComponent"), $ = Ve("computeItemKey"), I = Ve("isSeeking"), p = Ve("groupIndices").length > 0, O = Ve("alignToBottom"), P = Ve("initialItemFinalLocationReached"), A = e ? {} : {
    boxSizing: "border-box",
    ...m ? {
      display: "inline-block",
      height: "100%",
      marginLeft: x !== 0 ? x : O ? "auto" : 0,
      paddingLeft: t.offsetTop,
      paddingRight: t.offsetBottom,
      whiteSpace: "nowrap"
    } : {
      marginTop: x !== 0 ? x : O ? "auto" : 0,
      paddingBottom: t.offsetBottom,
      paddingTop: t.offsetTop
    },
    ...P ? {} : { visibility: "hidden" }
  };
  return !e && t.totalCount === 0 && w ? /* @__PURE__ */ k(w, { ...Gt(w, u) }) : /* @__PURE__ */ k(
    v,
    {
      ...Gt(v, u),
      "data-testid": e ? "virtuoso-top-item-list" : "virtuoso-item-list",
      ref: b,
      style: A,
      children: (e ? t.topItems : t.items).map((D) => {
        const _ = D.originalIndex, M = $(_ + t.firstItemIndex, D.data, u);
        return I ? /* @__PURE__ */ co(
          T,
          {
            ...Gt(T, u),
            height: D.size,
            index: D.index,
            key: M,
            type: D.type || "item",
            ...D.type === "group" ? {} : { groupIndex: D.groupIndex }
          }
        ) : D.type === "group" ? /* @__PURE__ */ co(
          R,
          {
            ...Gt(R, u),
            "data-index": _,
            "data-item-index": D.index,
            "data-known-size": D.size,
            key: M,
            style: hO
          },
          d(D.index, u)
        ) : /* @__PURE__ */ co(
          S,
          {
            ...Gt(S, u),
            ...xO(S, D.data),
            "data-index": _,
            "data-item-group-index": D.groupIndex,
            "data-item-index": D.index,
            "data-known-size": D.size,
            key: M,
            style: m ? gO : Ry
          },
          p ? c(D.index, D.groupIndex, D.data, u) : c(D.index, D.data, u)
        );
      })
    }
  );
}), yO = {
  height: "100%",
  outline: "none",
  overflowY: "auto",
  position: "relative",
  WebkitOverflowScrolling: "touch"
}, bO = {
  outline: "none",
  overflowX: "auto",
  position: "relative"
}, xl = (e) => ({
  height: "100%",
  position: "absolute",
  top: 0,
  width: "100%",
  ...e ? { display: "flex", flexDirection: "column" } : {}
}), vO = {
  position: Oy(),
  top: 0,
  width: "100%",
  zIndex: 1
};
function Gt(e, t) {
  if (typeof e != "string")
    return { context: t };
}
function xO(e, t) {
  return { item: typeof e == "string" ? void 0 : t };
}
const wO = /* @__PURE__ */ L.memo(function() {
  const e = Ve("HeaderComponent"), t = Mn("headerHeight"), n = Ve("HeaderFooterTag"), r = vo(
    L.useMemo(
      () => (s) => {
        t(Wr(s, "height"));
      },
      [t]
    ),
    !0,
    Ve("skipAnimationFrameInResizeObserver")
  ), o = Ve("context");
  return e ? /* @__PURE__ */ k(n, { ref: r, children: /* @__PURE__ */ k(e, { ...Gt(e, o) }) }) : null;
}), TO = /* @__PURE__ */ L.memo(function() {
  const e = Ve("FooterComponent"), t = Mn("footerHeight"), n = Ve("HeaderFooterTag"), r = vo(
    L.useMemo(
      () => (s) => {
        t(Wr(s, "height"));
      },
      [t]
    ),
    !0,
    Ve("skipAnimationFrameInResizeObserver")
  ), o = Ve("context");
  return e ? /* @__PURE__ */ k(n, { ref: r, children: /* @__PURE__ */ k(e, { ...Gt(e, o) }) }) : null;
});
function $y({ useEmitter: e, useEmitterValue: t, usePublisher: n }) {
  return L.memo(function({ children: r, style: o, ...s }) {
    const a = n("scrollContainerState"), l = t("ScrollerComponent"), c = n("smoothScrollTargetReached"), u = t("scrollerRef"), d = t("context"), f = t("horizontalDirection") || !1, { scrollByCallback: h, scrollerRef: g, scrollToCallback: y } = Cy(
      a,
      c,
      l,
      u,
      void 0,
      f
    );
    return e("scrollTo", y), e("scrollBy", h), /* @__PURE__ */ k(
      l,
      {
        "data-testid": "virtuoso-scroller",
        "data-virtuoso-scroller": !0,
        ref: g,
        style: { ...f ? bO : yO, ...o },
        tabIndex: 0,
        ...s,
        ...Gt(l, d),
        children: r
      }
    );
  });
}
function Py({ useEmitter: e, useEmitterValue: t, usePublisher: n }) {
  return L.memo(function({ children: r, style: o, ...s }) {
    const a = n("windowScrollContainerState"), l = t("ScrollerComponent"), c = n("smoothScrollTargetReached"), u = t("totalListHeight"), d = t("deviation"), f = t("customScrollParent"), h = t("context"), g = L.useRef(null), y = t("scrollerRef"), { scrollByCallback: m, scrollerRef: b, scrollToCallback: x } = Cy(
      a,
      c,
      l,
      y,
      f
    );
    return Ey(() => {
      var E;
      return b.current = f || ((E = g.current) == null ? void 0 : E.ownerDocument.defaultView), () => {
        b.current = null;
      };
    }, [b, f]), e("windowScrollTo", x), e("scrollBy", m), /* @__PURE__ */ k(
      l,
      {
        ref: g,
        "data-virtuoso-scroller": !0,
        style: { position: "relative", ...o, ...u !== 0 ? { height: u + d } : {} },
        ...s,
        ...Gt(l, h),
        children: r
      }
    );
  });
}
const SO = ({ children: e }) => {
  const t = L.useContext(Ty), n = Mn("viewportHeight"), r = Mn("fixedItemHeight"), o = Ve("alignToBottom"), s = Ve("horizontalDirection"), a = L.useMemo(
    () => ey(n, (c) => Wr(c, s ? "width" : "height")),
    [n, s]
  ), l = vo(a, !0, Ve("skipAnimationFrameInResizeObserver"));
  return L.useEffect(() => {
    t && (n(t.viewportHeight), r(t.itemHeight));
  }, [t, n, r]), /* @__PURE__ */ k("div", { "data-viewport-type": "element", ref: l, style: xl(o), children: e });
}, EO = ({ children: e }) => {
  const t = L.useContext(Ty), n = Mn("windowViewportRect"), r = Mn("fixedItemHeight"), o = Ve("customScrollParent"), s = ry(
    n,
    o,
    Ve("skipAnimationFrameInResizeObserver")
  ), a = Ve("alignToBottom");
  return L.useEffect(() => {
    t && (r(t.itemHeight), n({ offsetTop: 0, visibleHeight: t.viewportHeight, visibleWidth: 100 }));
  }, [t, n, r]), /* @__PURE__ */ k("div", { "data-viewport-type": "window", ref: s, style: xl(a), children: e });
}, CO = ({ children: e }) => {
  const t = Ve("TopItemListComponent") || "div", n = Ve("headerHeight"), r = { ...vO, marginTop: `${n}px` }, o = Ve("context");
  return /* @__PURE__ */ k(t, { style: r, ...Gt(t, o), children: e });
}, OO = /* @__PURE__ */ L.memo(function(e) {
  const t = Ve("useWindowScroll"), n = Ve("topItemsIndexes").length > 0, r = Ve("customScrollParent"), o = Ve("context"), s = r || t ? PO : $O, a = r || t ? EO : SO;
  return /* @__PURE__ */ Pe(s, { ...e, ...Gt(s, o), children: [
    n && /* @__PURE__ */ k(CO, { children: /* @__PURE__ */ k(zp, { showTopList: !0 }) }),
    /* @__PURE__ */ Pe(a, { children: [
      /* @__PURE__ */ k(wO, {}),
      /* @__PURE__ */ k(zp, {}),
      /* @__PURE__ */ k(TO, {})
    ] })
  ] });
}), {
  Component: RO,
  useEmitter: Ad,
  useEmitterValue: Ve,
  usePublisher: Mn
} = /* @__PURE__ */ wy(
  pO,
  {
    events: {
      atBottomStateChange: "atBottomStateChange",
      atTopStateChange: "atTopStateChange",
      endReached: "endReached",
      groupIndices: "groupIndices",
      isScrolling: "isScrolling",
      itemsRendered: "itemsRendered",
      rangeChanged: "rangeChanged",
      startReached: "startReached",
      totalListHeightChanged: "totalListHeightChanged"
    },
    methods: {
      autoscrollToBottom: "autoscrollToBottom",
      getState: "getState",
      scrollBy: "scrollBy",
      scrollIntoView: "scrollIntoView",
      scrollTo: "scrollTo",
      scrollToIndex: "scrollToIndex"
    },
    optional: {
      alignToBottom: "alignToBottom",
      atBottomThreshold: "atBottomThreshold",
      atTopThreshold: "atTopThreshold",
      components: "components",
      computeItemKey: "computeItemKey",
      context: "context",
      customScrollParent: "customScrollParent",
      data: "data",
      defaultItemHeight: "defaultItemHeight",
      firstItemIndex: "firstItemIndex",
      fixedItemHeight: "fixedItemHeight",
      followOutput: "followOutput",
      groupContent: "groupContent",
      groupCounts: "groupCounts",
      headerFooterTag: "HeaderFooterTag",
      horizontalDirection: "horizontalDirection",
      increaseViewportBy: "increaseViewportBy",
      initialItemCount: "initialItemCount",
      initialScrollTop: "initialScrollTop",
      initialTopMostItemIndex: "initialTopMostItemIndex",
      itemContent: "itemContent",
      itemSize: "itemSize",
      logLevel: "logLevel",
      overscan: "overscan",
      restoreStateFrom: "restoreStateFrom",
      scrollerRef: "scrollerRef",
      scrollSeekConfiguration: "scrollSeekConfiguration",
      skipAnimationFrameInResizeObserver: "skipAnimationFrameInResizeObserver",
      topItemCount: "topItemCount",
      totalCount: "totalCount",
      useWindowScroll: "useWindowScroll"
    },
    required: {}
  },
  OO
), $O = /* @__PURE__ */ $y({ useEmitter: Ad, useEmitterValue: Ve, usePublisher: Mn }), PO = /* @__PURE__ */ Py({ useEmitter: Ad, useEmitterValue: Ve, usePublisher: Mn }), kO = RO, IO = /* @__PURE__ */ Je(() => {
  const e = be((c) => /* @__PURE__ */ Pe("td", { children: [
    "Item $",
    c
  ] })), t = be(null), n = be(null), r = be(null), o = be({}), s = be(Nd), a = be(mi), l = (c, u = null) => en(
    ge(
      o,
      Ce((d) => d[c]),
      ht()
    ),
    u
  );
  return {
    components: o,
    computeItemKey: s,
    context: t,
    EmptyPlaceholder: l("EmptyPlaceholder"),
    FillerRow: l("FillerRow"),
    fixedFooterContent: r,
    fixedHeaderContent: n,
    itemContent: e,
    ScrollerComponent: l("Scroller", "div"),
    scrollerRef: a,
    ScrollSeekPlaceholder: l("ScrollSeekPlaceholder"),
    TableBodyComponent: l("TableBody", "tbody"),
    TableComponent: l("Table", "table"),
    TableFooterComponent: l("TableFoot", "tfoot"),
    TableHeadComponent: l("TableHead", "thead"),
    TableRowComponent: l("TableRow", "tr")
  };
});
yt(xy, IO);
const Wp = {
  bottom: 0,
  itemHeight: 0,
  items: [],
  itemWidth: 0,
  offsetBottom: 0,
  offsetTop: 0,
  top: 0
}, NO = {
  bottom: 0,
  itemHeight: 0,
  items: [{ index: 0 }],
  itemWidth: 0,
  offsetBottom: 0,
  offsetTop: 0,
  top: 0
}, { ceil: Up, floor: Ra, max: Wi, min: hc, round: Hp } = Math;
function qp(e, t, n) {
  return Array.from({ length: t - e + 1 }).map((r, o) => ({ data: n === null ? null : n[o + e], index: o + e }));
}
function AO(e) {
  return {
    ...NO,
    items: e
  };
}
function Ws(e, t) {
  return e && e.width === t.width && e.height === t.height;
}
function MO(e, t) {
  return e && e.column === t.column && e.row === t.row;
}
const _O = /* @__PURE__ */ Je(
  ([
    { increaseViewportBy: e, listBoundary: t, overscan: n, visibleRange: r },
    { footerHeight: o, headerHeight: s, scrollBy: a, scrollContainerState: l, scrollTo: c, scrollTop: u, smoothScrollTargetReached: d, viewportHeight: f },
    h,
    g,
    { didMount: y, propsReady: m },
    { customScrollParent: b, useWindowScroll: x, windowScrollContainerState: E, windowScrollTo: w, windowViewportRect: T },
    v
  ]) => {
    const S = be(0), R = be(0), $ = be(Wp), I = be({ height: 0, width: 0 }), p = be({ height: 0, width: 0 }), O = qe(), P = qe(), A = be(0), D = be(null), _ = be({ column: 0, row: 0 }), M = qe(), V = qe(), Y = be(!1), U = be(0), j = be(!0), W = be(!1), ee = be(!1);
    rt(
      ge(
        y,
        He(U),
        Fe(([X, ae]) => !!ae)
      ),
      () => {
        We(j, !1);
      }
    ), rt(
      ge(
        zt(y, j, p, I, U, W),
        Fe(([X, ae, Q, ie, , F]) => X && !ae && Q.height !== 0 && ie.height !== 0 && !F)
      ),
      ([, , , , X]) => {
        We(W, !0), $d(1, () => {
          We(O, X);
        }), hr(ge(u), () => {
          We(t, [0, 0]), We(j, !0);
        });
      }
    ), Ne(
      ge(
        V,
        Fe((X) => X != null && X.scrollTop > 0),
        rr(0)
      ),
      R
    ), rt(
      ge(
        y,
        He(V),
        Fe(([, X]) => X != null)
      ),
      ([, X]) => {
        X && (We(I, X.viewport), We(p, X.item), We(_, X.gap), X.scrollTop > 0 && (We(Y, !0), hr(ge(u, ti(1)), (ae) => {
          We(Y, !1);
        }), We(c, { top: X.scrollTop })));
      }
    ), Ne(
      ge(
        I,
        Ce(({ height: X }) => X)
      ),
      f
    ), Ne(
      ge(
        zt(
          je(I, Ws),
          je(p, Ws),
          je(_, (X, ae) => X && X.column === ae.column && X.row === ae.row),
          je(u)
        ),
        Ce(([X, ae, Q, ie]) => ({
          gap: Q,
          item: ae,
          scrollTop: ie,
          viewport: X
        }))
      ),
      M
    ), Ne(
      ge(
        zt(
          je(S),
          r,
          je(_, MO),
          je(p, Ws),
          je(I, Ws),
          je(D),
          je(R),
          je(Y),
          je(j),
          je(U)
        ),
        Fe(([, , , , , , , X]) => !X),
        Ce(
          ([
            X,
            [ae, Q],
            ie,
            F,
            he,
            fe,
            Se,
            ,
            Le,
            Ae
          ]) => {
            const { column: Ie, row: Re } = ie, { height: Be, width: Oe } = F, { width: N } = he;
            if (Se === 0 && (X === 0 || N === 0))
              return Wp;
            if (Oe === 0) {
              const re = Pd(Ae, X), Z = re + Math.max(Se - 1, 0);
              return AO(qp(re, Z, fe));
            }
            const q = ky(N, Oe, Ie);
            let J, H;
            Le ? ae === 0 && Q === 0 && Se > 0 ? (J = 0, H = Se - 1) : (J = q * Ra((ae + Re) / (Be + Re)), H = q * Up((Q + Re) / (Be + Re)) - 1, H = hc(X - 1, Wi(H, q - 1)), J = hc(H, Wi(0, J))) : (J = 0, H = -1);
            const B = qp(J, H, fe), { bottom: z, top: G } = Yp(he, ie, F, B), pe = Up(X / q), me = pe * Be + (pe - 1) * Re - z;
            return { bottom: z, itemHeight: Be, items: B, itemWidth: Oe, offsetBottom: me, offsetTop: G, top: G };
          }
        )
      ),
      $
    ), Ne(
      ge(
        D,
        Fe((X) => X !== null),
        Ce((X) => X.length)
      ),
      S
    ), Ne(
      ge(
        zt(I, p, $, _),
        Fe(([X, ae, { items: Q }]) => Q.length > 0 && ae.height !== 0 && X.height !== 0),
        Ce(([X, ae, { items: Q }, ie]) => {
          const { bottom: F, top: he } = Yp(X, ie, ae, Q);
          return [he, F];
        }),
        ht(as)
      ),
      t
    );
    const K = be(!1);
    Ne(
      ge(
        u,
        He(K),
        Ce(([X, ae]) => ae || X !== 0)
      ),
      K
    );
    const oe = En(
      ge(
        zt($, S),
        Fe(([{ items: X }]) => X.length > 0),
        He(K),
        Fe(([[X, ae], Q]) => {
          const ie = X.items[X.items.length - 1].index === ae - 1;
          return (Q || X.bottom > 0 && X.itemHeight > 0 && X.offsetBottom === 0 && X.items.length === ae) && ie;
        }),
        Ce(([[, X]]) => X - 1),
        ht()
      )
    ), ne = En(
      ge(
        je($),
        Fe(({ items: X }) => X.length > 0 && X[0].index === 0),
        rr(0),
        ht()
      )
    ), se = En(
      ge(
        je($),
        He(Y),
        Fe(([{ items: X }, ae]) => X.length > 0 && !ae),
        Ce(([{ items: X }]) => ({
          endIndex: X[X.length - 1].index,
          startIndex: X[0].index
        })),
        ht(cy),
        Lr(0)
      )
    );
    Ne(se, g.scrollSeekRangeChanged), Ne(
      ge(
        O,
        He(I, p, S, _),
        Ce(([X, ae, Q, ie, F]) => {
          const he = my(X), { align: fe, behavior: Se, offset: Le } = he;
          let Ae = he.index;
          Ae === "LAST" && (Ae = ie - 1), Ae = Wi(0, Ae, hc(ie - 1, Ae));
          let Ie = uu(ae, F, Q, Ae);
          return fe === "end" ? Ie = Hp(Ie - ae.height + Q.height) : fe === "center" && (Ie = Hp(Ie - ae.height / 2 + Q.height / 2)), Le && (Ie += Le), { behavior: Se, top: Ie };
        })
      ),
      c
    );
    const de = en(
      ge(
        $,
        Ce((X) => X.offsetBottom + X.bottom)
      ),
      0
    );
    return Ne(
      ge(
        T,
        Ce((X) => ({ height: X.visibleHeight, width: X.visibleWidth }))
      ),
      I
    ), {
      customScrollParent: b,
      // input
      data: D,
      deviation: A,
      footerHeight: o,
      gap: _,
      headerHeight: s,
      increaseViewportBy: e,
      initialItemCount: R,
      itemDimensions: p,
      overscan: n,
      restoreStateFrom: V,
      scrollBy: a,
      scrollContainerState: l,
      scrollHeight: P,
      scrollTo: c,
      scrollToIndex: O,
      scrollTop: u,
      smoothScrollTargetReached: d,
      totalCount: S,
      useWindowScroll: x,
      viewportDimensions: I,
      windowScrollContainerState: E,
      windowScrollTo: w,
      windowViewportRect: T,
      ...g,
      // output
      gridState: $,
      horizontalDirection: ee,
      initialTopMostItemIndex: U,
      totalListHeight: de,
      ...h,
      endReached: oe,
      propsReady: m,
      rangeChanged: se,
      startReached: ne,
      stateChanged: M,
      stateRestoreInProgress: Y,
      ...v
    };
  },
  yt(kd, un, ws, by, Jr, Id, Qr)
);
function ky(e, t, n) {
  return Wi(1, Ra((e + n) / (Ra(t) + n)));
}
function Yp(e, t, n, r) {
  const { height: o } = n;
  if (o === void 0 || r.length === 0)
    return { bottom: 0, top: 0 };
  const s = uu(e, t, n, r[0].index);
  return { bottom: uu(e, t, n, r[r.length - 1].index) + o, top: s };
}
function uu(e, t, n, r) {
  const o = ky(e.width, n.width, t.column), s = Ra(r / o), a = s * n.height + Wi(0, s - 1) * t.row;
  return a > 0 ? a + t.row : a;
}
const DO = /* @__PURE__ */ Je(() => {
  const e = be((f) => `Item ${f}`), t = be({}), n = be(null), r = be("virtuoso-grid-item"), o = be("virtuoso-grid-list"), s = be(Nd), a = be("div"), l = be(mi), c = (f, h = null) => en(
    ge(
      t,
      Ce((g) => g[f]),
      ht()
    ),
    h
  ), u = be(!1), d = be(!1);
  return Ne(je(d), u), {
    components: t,
    computeItemKey: s,
    context: n,
    FooterComponent: c("Footer"),
    HeaderComponent: c("Header"),
    headerFooterTag: a,
    itemClassName: r,
    ItemComponent: c("Item", "div"),
    itemContent: e,
    listClassName: o,
    ListComponent: c("List", "div"),
    readyStateChanged: u,
    reportReadyState: d,
    ScrollerComponent: c("Scroller", "div"),
    scrollerRef: l,
    ScrollSeekPlaceholder: c("ScrollSeekPlaceholder", "div")
  };
}), BO = /* @__PURE__ */ Je(
  ([e, t]) => ({ ...e, ...t }),
  yt(_O, DO)
), FO = /* @__PURE__ */ L.memo(function() {
  const e = xt("gridState"), t = xt("listClassName"), n = xt("itemClassName"), r = xt("itemContent"), o = xt("computeItemKey"), s = xt("isSeeking"), a = _n("scrollHeight"), l = xt("ItemComponent"), c = xt("ListComponent"), u = xt("ScrollSeekPlaceholder"), d = xt("context"), f = _n("itemDimensions"), h = _n("gap"), g = xt("log"), y = xt("stateRestoreInProgress"), m = _n("reportReadyState"), b = vo(
    L.useMemo(
      () => (x) => {
        const E = x.parentElement.parentElement.scrollHeight;
        a(E);
        const w = x.firstChild;
        if (w) {
          const { height: T, width: v } = w.getBoundingClientRect();
          f({ height: T, width: v });
        }
        h({
          column: Gp("column-gap", getComputedStyle(x).columnGap, g),
          row: Gp("row-gap", getComputedStyle(x).rowGap, g)
        });
      },
      [a, f, h, g]
    ),
    !0,
    !1
  );
  return Ey(() => {
    e.itemHeight > 0 && e.itemWidth > 0 && m(!0);
  }, [e]), y ? null : /* @__PURE__ */ k(
    c,
    {
      className: t,
      ref: b,
      ...Gt(c, d),
      "data-testid": "virtuoso-item-list",
      style: { paddingBottom: e.offsetBottom, paddingTop: e.offsetTop },
      children: e.items.map((x) => {
        const E = o(x.index, x.data, d);
        return s ? /* @__PURE__ */ k(
          u,
          {
            ...Gt(u, d),
            height: e.itemHeight,
            index: x.index,
            width: e.itemWidth
          },
          E
        ) : /* @__PURE__ */ co(
          l,
          {
            ...Gt(l, d),
            className: n,
            "data-index": x.index,
            key: E
          },
          r(x.index, x.data, d)
        );
      })
    }
  );
}), jO = L.memo(function() {
  const e = xt("HeaderComponent"), t = _n("headerHeight"), n = xt("headerFooterTag"), r = vo(
    L.useMemo(
      () => (s) => {
        t(Wr(s, "height"));
      },
      [t]
    ),
    !0,
    !1
  ), o = xt("context");
  return e ? /* @__PURE__ */ k(n, { ref: r, children: /* @__PURE__ */ k(e, { ...Gt(e, o) }) }) : null;
}), LO = L.memo(function() {
  const e = xt("FooterComponent"), t = _n("footerHeight"), n = xt("headerFooterTag"), r = vo(
    L.useMemo(
      () => (s) => {
        t(Wr(s, "height"));
      },
      [t]
    ),
    !0,
    !1
  ), o = xt("context");
  return e ? /* @__PURE__ */ k(n, { ref: r, children: /* @__PURE__ */ k(e, { ...Gt(e, o) }) }) : null;
}), VO = ({ children: e }) => {
  const t = L.useContext(Sy), n = _n("itemDimensions"), r = _n("viewportDimensions"), o = vo(
    L.useMemo(
      () => (s) => {
        r(s.getBoundingClientRect());
      },
      [r]
    ),
    !0,
    !1
  );
  return L.useEffect(() => {
    t && (r({ height: t.viewportHeight, width: t.viewportWidth }), n({ height: t.itemHeight, width: t.itemWidth }));
  }, [t, r, n]), /* @__PURE__ */ k("div", { ref: o, style: xl(!1), children: e });
}, zO = ({ children: e }) => {
  const t = L.useContext(Sy), n = _n("windowViewportRect"), r = _n("itemDimensions"), o = xt("customScrollParent"), s = ry(n, o, !1);
  return L.useEffect(() => {
    t && (r({ height: t.itemHeight, width: t.itemWidth }), n({ offsetTop: 0, visibleHeight: t.viewportHeight, visibleWidth: t.viewportWidth }));
  }, [t, n, r]), /* @__PURE__ */ k("div", { ref: s, style: xl(!1), children: e });
}, WO = /* @__PURE__ */ L.memo(function({ ...e }) {
  const t = xt("useWindowScroll"), n = xt("customScrollParent"), r = n || t ? qO : HO, o = n || t ? zO : VO, s = xt("context");
  return /* @__PURE__ */ k(r, { ...e, ...Gt(r, s), children: /* @__PURE__ */ Pe(o, { children: [
    /* @__PURE__ */ k(jO, {}),
    /* @__PURE__ */ k(FO, {}),
    /* @__PURE__ */ k(LO, {})
  ] }) });
}), {
  Component: UO,
  useEmitter: Iy,
  useEmitterValue: xt,
  usePublisher: _n
} = /* @__PURE__ */ wy(
  BO,
  {
    events: {
      atBottomStateChange: "atBottomStateChange",
      atTopStateChange: "atTopStateChange",
      endReached: "endReached",
      isScrolling: "isScrolling",
      rangeChanged: "rangeChanged",
      readyStateChanged: "readyStateChanged",
      startReached: "startReached",
      stateChanged: "stateChanged"
    },
    methods: {
      scrollBy: "scrollBy",
      scrollTo: "scrollTo",
      scrollToIndex: "scrollToIndex"
    },
    optional: {
      components: "components",
      computeItemKey: "computeItemKey",
      context: "context",
      customScrollParent: "customScrollParent",
      data: "data",
      headerFooterTag: "headerFooterTag",
      increaseViewportBy: "increaseViewportBy",
      initialItemCount: "initialItemCount",
      initialTopMostItemIndex: "initialTopMostItemIndex",
      itemClassName: "itemClassName",
      itemContent: "itemContent",
      listClassName: "listClassName",
      logLevel: "logLevel",
      overscan: "overscan",
      restoreStateFrom: "restoreStateFrom",
      scrollerRef: "scrollerRef",
      scrollSeekConfiguration: "scrollSeekConfiguration",
      totalCount: "totalCount",
      useWindowScroll: "useWindowScroll"
    }
  },
  WO
), HO = /* @__PURE__ */ $y({ useEmitter: Iy, useEmitterValue: xt, usePublisher: _n }), qO = /* @__PURE__ */ Py({ useEmitter: Iy, useEmitterValue: xt, usePublisher: _n });
function Gp(e, t, n) {
  return t !== "normal" && !(t != null && t.endsWith("px")) && n(`${e} was not resolved to pixel value correctly`, t, Cn.WARN), t === "normal" ? 0 : parseInt(t ?? "0", 10);
}
const YO = UO, $a = _e(({ height: e, width: t, isVirtualized: n, items: r, renderItem: o, sx: s }) => n ? /* @__PURE__ */ k(
  Kt,
  {
    className: "VenomousUI-Menu",
    sx: { height: e || "100%", width: t || "100%", ...s },
    children: /* @__PURE__ */ k(
      kO,
      {
        style: { height: "100%", width: "100%" },
        totalCount: r == null ? void 0 : r.length,
        data: r,
        itemContent: (a, l) => o ? o(l, a) : l.label
      }
    )
  }
) : /* @__PURE__ */ k(
  Kt,
  {
    className: "VenomousUI-Menu",
    gap: 1,
    sx: {
      height: e || "100%",
      width: t || "100%",
      overflowY: "scroll",
      overflowX: "hidden",
      ...s,
      "& > .VenomousUI-MenuItem": {
        width: "100% !important"
      }
      // '& .VenomousUI-MenuItem': { mb: '4px' },
      // '& .VenomousUI-MenuItem:last-child': { mb: 0 },
    },
    children: r == null ? void 0 : r.map((a, l) => /* @__PURE__ */ k(Uv, { children: o ? o(a, l) : a.label }, a.label))
  }
));
$a.displayName = "Menu";
const Ui = _e(
  ({
    icon: e = "",
    label: t,
    clickable: n,
    disabled: r,
    onClick: o,
    onMouseEnter: s,
    onMouseLeave: a,
    isActive: l,
    sx: c,
    ellipsis: u = !1
  }) => n ? /* @__PURE__ */ k(
    Yn,
    {
      className: "VenomousUI-MenuItem",
      isGhost: !0,
      text: /* @__PURE__ */ k(yn, { text: t, ellipsis: u, sx: { textAlign: "left" } }),
      icon: e,
      iconWidth: 28,
      iconPosition: "start",
      onClick: o,
      onMouseEnter: s,
      onMouseLeave: a,
      disabled: r,
      color: l ? "primary" : "auto",
      sx: {
        py: "8px",
        px: "16px",
        width: "100%",
        justifyContent: "flex-start",
        transition: "background-color 0.2s ease; color 0.2s ease",
        backgroundColor: l ? "divider" : "transparent",
        "&:hover": { backgroundColor: "divider" },
        ...c
      }
    }
  ) : /* @__PURE__ */ Pe(Kt, { row: !0, py: "8px", px: "16px", sx: { width: "100%", ...c }, className: "VenomousUI-MenuItem", children: [
    /* @__PURE__ */ k(pr, { icon: e, width: 28, color: l ? "primary" : "auto" }),
    /* @__PURE__ */ k(
      yn,
      {
        text: t,
        ellipsis: u,
        flex: 1,
        textColor: l ? "primary" : "auto",
        sx: { cursor: "default" }
      }
    )
  ] })
);
Ui.displayName = "MenuItem";
function GO({ currentPath: e }) {
  const t = tn(
    (r) => {
      let o = r.url;
      if (!o && r.subItems && r.subItems.length > 0) {
        const a = r.subItems.map((l) => l.url).filter(Boolean);
        o = KO(a);
      }
      return !!(o && (e == null ? void 0 : e.startsWith(o)) || r.subItems && r.subItems.some(
        (a) => a.url && (e == null ? void 0 : e.startsWith(a.url))
      ));
    },
    [e]
  ), n = tn(
    (r) => !!(r.url && (e != null && e.startsWith(r.url))),
    [e]
  );
  return {
    checkIsParentItemActive: t,
    checkIsSubItemActive: n
  };
}
function KO(e) {
  if (e.length === 0) return "";
  let t = e[0];
  for (let n = 1; n < e.length; n++)
    for (; e[n].indexOf(t) !== 0; )
      if (t = t.slice(0, -1), !t) return "";
  if (!t.endsWith("/")) {
    const n = t.lastIndexOf("/");
    t = t.slice(0, n + 1);
  }
  return t;
}
function du(e) {
  return typeof e == "string";
}
function XO(e) {
  const t = pn(e);
  return t.body === e ? fr(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function Hi(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function Kp(e) {
  return parseInt(fr(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function QO(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), r = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || r;
}
function Xp(e, t, n, r, o) {
  const s = [t, n, ...r];
  [].forEach.call(e.children, (a) => {
    const l = !s.includes(a), c = !QO(a);
    l && c && Hi(a, o);
  });
}
function gc(e, t) {
  let n = -1;
  return e.some((r, o) => t(r) ? (n = o, !0) : !1), n;
}
function JO(e, t) {
  const n = [], r = e.container;
  if (!t.disableScrollLock) {
    if (XO(r)) {
      const a = Iw(fr(r));
      n.push({
        value: r.style.paddingRight,
        property: "padding-right",
        el: r
      }), r.style.paddingRight = `${Kp(r) + a}px`;
      const l = pn(r).querySelectorAll(".mui-fixed");
      [].forEach.call(l, (c) => {
        n.push({
          value: c.style.paddingRight,
          property: "padding-right",
          el: c
        }), c.style.paddingRight = `${Kp(c) + a}px`;
      });
    }
    let s;
    if (r.parentNode instanceof DocumentFragment)
      s = pn(r).body;
    else {
      const a = r.parentElement, l = fr(r);
      s = (a == null ? void 0 : a.nodeName) === "HTML" && l.getComputedStyle(a).overflowY === "scroll" ? a : r;
    }
    n.push({
      value: s.style.overflow,
      property: "overflow",
      el: s
    }, {
      value: s.style.overflowX,
      property: "overflow-x",
      el: s
    }, {
      value: s.style.overflowY,
      property: "overflow-y",
      el: s
    }), s.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: s,
      el: a,
      property: l
    }) => {
      s ? a.style.setProperty(l, s) : a.style.removeProperty(l);
    });
  };
}
function ZO(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
let eR = class {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let r = this.modals.indexOf(t);
    if (r !== -1)
      return r;
    r = this.modals.length, this.modals.push(t), t.modalRef && Hi(t.modalRef, !1);
    const o = ZO(n);
    Xp(n, t.mount, t.modalRef, o, !0);
    const s = gc(this.containers, (a) => a.container === n);
    return s !== -1 ? (this.containers[s].modals.push(t), r) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: o
    }), r);
  }
  mount(t, n) {
    const r = gc(this.containers, (s) => s.modals.includes(t)), o = this.containers[r];
    o.restore || (o.restore = JO(o, n));
  }
  remove(t, n = !0) {
    const r = this.modals.indexOf(t);
    if (r === -1)
      return r;
    const o = gc(this.containers, (a) => a.modals.includes(t)), s = this.containers[o];
    if (s.modals.splice(s.modals.indexOf(t), 1), this.modals.splice(r, 1), s.modals.length === 0)
      s.restore && s.restore(), t.modalRef && Hi(t.modalRef, n), Xp(s.container, t.mount, t.modalRef, s.hiddenSiblings, !1), this.containers.splice(o, 1);
    else {
      const a = s.modals[s.modals.length - 1];
      a.modalRef && Hi(a.modalRef, !1);
    }
    return r;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
};
const tR = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function nR(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function rR(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (r) => e.ownerDocument.querySelector(`input[type="radio"]${r}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function oR(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || rR(e));
}
function iR(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(tR)).forEach((r, o) => {
    const s = nR(r);
    s === -1 || !oR(r) || (s === 0 ? t.push(r) : n.push({
      documentOrder: o,
      tabIndex: s,
      node: r
    }));
  }), n.sort((r, o) => r.tabIndex === o.tabIndex ? r.documentOrder - o.documentOrder : r.tabIndex - o.tabIndex).map((r) => r.node).concat(t);
}
function sR() {
  return !0;
}
function Pa(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: r = !1,
    disableRestoreFocus: o = !1,
    getTabbable: s = iR,
    isEnabled: a = sR,
    open: l
  } = e, c = C.useRef(!1), u = C.useRef(null), d = C.useRef(null), f = C.useRef(null), h = C.useRef(null), g = C.useRef(!1), y = C.useRef(null), m = nn(bo(t), y), b = C.useRef(null);
  C.useEffect(() => {
    !l || !y.current || (g.current = !n);
  }, [n, l]), C.useEffect(() => {
    if (!l || !y.current)
      return;
    const w = pn(y.current);
    return y.current.contains(w.activeElement) || (y.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), y.current.setAttribute("tabIndex", "-1")), g.current && y.current.focus()), () => {
      o || (f.current && f.current.focus && (c.current = !0, f.current.focus()), f.current = null);
    };
  }, [l]), C.useEffect(() => {
    if (!l || !y.current)
      return;
    const w = pn(y.current), T = (R) => {
      b.current = R, !(r || !a() || R.key !== "Tab") && w.activeElement === y.current && R.shiftKey && (c.current = !0, d.current && d.current.focus());
    }, v = () => {
      var I, p;
      const R = y.current;
      if (R === null)
        return;
      if (!w.hasFocus() || !a() || c.current) {
        c.current = !1;
        return;
      }
      if (R.contains(w.activeElement) || r && w.activeElement !== u.current && w.activeElement !== d.current)
        return;
      if (w.activeElement !== h.current)
        h.current = null;
      else if (h.current !== null)
        return;
      if (!g.current)
        return;
      let $ = [];
      if ((w.activeElement === u.current || w.activeElement === d.current) && ($ = s(y.current)), $.length > 0) {
        const O = !!((I = b.current) != null && I.shiftKey && ((p = b.current) == null ? void 0 : p.key) === "Tab"), P = $[0], A = $[$.length - 1];
        typeof P != "string" && typeof A != "string" && (O ? A.focus() : P.focus());
      } else
        R.focus();
    };
    w.addEventListener("focusin", v), w.addEventListener("keydown", T, !0);
    const S = setInterval(() => {
      w.activeElement && w.activeElement.tagName === "BODY" && v();
    }, 50);
    return () => {
      clearInterval(S), w.removeEventListener("focusin", v), w.removeEventListener("keydown", T, !0);
    };
  }, [n, r, o, a, l, s]);
  const x = (w) => {
    f.current === null && (f.current = w.relatedTarget), g.current = !0, h.current = w.target;
    const T = t.props.onFocus;
    T && T(w);
  }, E = (w) => {
    f.current === null && (f.current = w.relatedTarget), g.current = !0;
  };
  return /* @__PURE__ */ Pe(C.Fragment, {
    children: [/* @__PURE__ */ k("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: u,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ C.cloneElement(t, {
      ref: m,
      onFocus: x
    }), /* @__PURE__ */ k("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: d,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (Pa.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: Gr,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: i.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: i.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: i.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: i.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: i.func,
  /**
   * If `true`, focus is locked.
   */
  open: i.bool.isRequired
});
process.env.NODE_ENV !== "production" && (Pa.propTypes = gs(Pa.propTypes));
function aR(e) {
  return gt("MuiBackdrop", e);
}
wt("MuiBackdrop", ["root", "invisible"]);
const lR = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return Ct({
    root: ["root", n && "invisible"]
  }, aR, t);
}, cR = ke("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), Md = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Tt({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: o,
    className: s,
    component: a = "div",
    invisible: l = !1,
    open: c,
    components: u = {},
    componentsProps: d = {},
    slotProps: f = {},
    slots: h = {},
    TransitionComponent: g,
    transitionDuration: y,
    ...m
  } = r, b = {
    ...r,
    component: a,
    invisible: l
  }, x = lR(b), E = {
    transition: g,
    root: u.Root,
    ...h
  }, w = {
    ...d,
    ...f
  }, T = {
    slots: E,
    slotProps: w
  }, [v, S] = at("root", {
    elementType: cR,
    externalForwardedProps: T,
    className: Ee(x.root, s),
    ownerState: b
  }), [R, $] = at("transition", {
    elementType: po,
    externalForwardedProps: T,
    ownerState: b
  });
  return /* @__PURE__ */ k(R, {
    in: c,
    timeout: y,
    ...m,
    ...$,
    children: /* @__PURE__ */ k(v, {
      "aria-hidden": !0,
      ...S,
      classes: x,
      ref: n,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (Md.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    root: i.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: i.bool,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: i.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function uR(e) {
  return typeof e == "function" ? e() : e;
}
function dR(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const Qp = () => {
}, Us = new eR();
function fR(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: r = !1,
    closeAfterTransition: o = !1,
    onTransitionEnter: s,
    onTransitionExited: a,
    children: l,
    onClose: c,
    open: u,
    rootRef: d
  } = e, f = C.useRef({}), h = C.useRef(null), g = C.useRef(null), y = nn(g, d), [m, b] = C.useState(!u), x = dR(l);
  let E = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (E = !1);
  const w = () => pn(h.current), T = () => (f.current.modalRef = g.current, f.current.mount = h.current, f.current), v = () => {
    Us.mount(T(), {
      disableScrollLock: r
    }), g.current && (g.current.scrollTop = 0);
  }, S = lr(() => {
    const _ = uR(t) || w().body;
    Us.add(T(), _), g.current && v();
  }), R = () => Us.isTopModal(T()), $ = lr((_) => {
    h.current = _, _ && (u && R() ? v() : g.current && Hi(g.current, E));
  }), I = C.useCallback(() => {
    Us.remove(T(), E);
  }, [E]);
  C.useEffect(() => () => {
    I();
  }, [I]), C.useEffect(() => {
    u ? S() : (!x || !o) && I();
  }, [u, I, x, o, S]);
  const p = (_) => (M) => {
    var V;
    (V = _.onKeyDown) == null || V.call(_, M), !(M.key !== "Escape" || M.which === 229 || // Wait until IME is settled.
    !R()) && (n || (M.stopPropagation(), c && c(M, "escapeKeyDown")));
  }, O = (_) => (M) => {
    var V;
    (V = _.onClick) == null || V.call(_, M), M.target === M.currentTarget && c && c(M, "backdropClick");
  };
  return {
    getRootProps: (_ = {}) => {
      const M = og(e);
      delete M.onTransitionEnter, delete M.onTransitionExited;
      const V = {
        ...M,
        ..._
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...V,
        onKeyDown: p(V),
        ref: y
      };
    },
    getBackdropProps: (_ = {}) => {
      const M = _;
      return {
        "aria-hidden": !0,
        ...M,
        onClick: O(M),
        open: u
      };
    },
    getTransitionProps: () => {
      const _ = () => {
        b(!1), s && s();
      }, M = () => {
        b(!0), a && a(), o && I();
      };
      return {
        onEnter: zc(_, (l == null ? void 0 : l.props.onEnter) ?? Qp),
        onExited: zc(M, (l == null ? void 0 : l.props.onExited) ?? Qp)
      };
    },
    rootRef: y,
    portalRef: $,
    isTopModal: R,
    exited: m,
    hasTransition: x
  };
}
function pR(e) {
  return gt("MuiModal", e);
}
wt("MuiModal", ["root", "hidden", "backdrop"]);
const mR = (e) => {
  const {
    open: t,
    exited: n,
    classes: r
  } = e;
  return Ct({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, pR, r);
}, hR = ke("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(Ke(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), gR = ke(Md, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), wl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Tt({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: o = gR,
    BackdropProps: s,
    classes: a,
    className: l,
    closeAfterTransition: c = !1,
    children: u,
    container: d,
    component: f,
    components: h = {},
    componentsProps: g = {},
    disableAutoFocus: y = !1,
    disableEnforceFocus: m = !1,
    disableEscapeKeyDown: b = !1,
    disablePortal: x = !1,
    disableRestoreFocus: E = !1,
    disableScrollLock: w = !1,
    hideBackdrop: T = !1,
    keepMounted: v = !1,
    onClose: S,
    onTransitionEnter: R,
    onTransitionExited: $,
    open: I,
    slotProps: p = {},
    slots: O = {},
    // eslint-disable-next-line react/prop-types
    theme: P,
    ...A
  } = r, D = {
    ...r,
    closeAfterTransition: c,
    disableAutoFocus: y,
    disableEnforceFocus: m,
    disableEscapeKeyDown: b,
    disablePortal: x,
    disableRestoreFocus: E,
    disableScrollLock: w,
    hideBackdrop: T,
    keepMounted: v
  }, {
    getRootProps: _,
    getBackdropProps: M,
    getTransitionProps: V,
    portalRef: Y,
    isTopModal: U,
    exited: j,
    hasTransition: W
  } = fR({
    ...D,
    rootRef: n
  }), ee = {
    ...D,
    exited: j
  }, K = mR(ee), oe = {};
  if (u.props.tabIndex === void 0 && (oe.tabIndex = "-1"), W) {
    const {
      onEnter: Q,
      onExited: ie
    } = V();
    oe.onEnter = Q, oe.onExited = ie;
  }
  const ne = {
    slots: {
      root: h.Root,
      backdrop: h.Backdrop,
      ...O
    },
    slotProps: {
      ...g,
      ...p
    }
  }, [se, de] = at("root", {
    ref: n,
    elementType: hR,
    externalForwardedProps: {
      ...ne,
      ...A,
      component: f
    },
    getSlotProps: _,
    ownerState: ee,
    className: Ee(l, K == null ? void 0 : K.root, !ee.open && ee.exited && (K == null ? void 0 : K.hidden))
  }), [X, ae] = at("backdrop", {
    ref: s == null ? void 0 : s.ref,
    elementType: o,
    externalForwardedProps: ne,
    shouldForwardComponentProp: !0,
    additionalProps: s,
    getSlotProps: (Q) => M({
      ...Q,
      onClick: (ie) => {
        Q != null && Q.onClick && Q.onClick(ie);
      }
    }),
    className: Ee(s == null ? void 0 : s.className, K == null ? void 0 : K.backdrop),
    ownerState: ee
  });
  return !v && !I && (!W || j) ? null : /* @__PURE__ */ k(ei, {
    ref: Y,
    container: d,
    disablePortal: x,
    children: /* @__PURE__ */ Pe(se, {
      ...de,
      children: [!T && o ? /* @__PURE__ */ k(X, {
        ...ae
      }) : null, /* @__PURE__ */ k(Pa, {
        disableEnforceFocus: m,
        disableAutoFocus: y,
        disableRestoreFocus: E,
        isEnabled: U,
        open: I,
        children: /* @__PURE__ */ C.cloneElement(u, oe)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (wl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: i.object,
  /**
   * A single child content element.
   */
  children: Gr.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: i.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Backdrop: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([Or, i.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: i.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: i.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: i.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: i.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: i.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: i.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: i.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
function yR(e) {
  return gt("MuiPopover", e);
}
wt("MuiPopover", ["root", "paper"]);
function Jp(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function Zp(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function em(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function Mi(e) {
  return typeof e == "function" ? e() : e;
}
const bR = (e) => {
  const {
    classes: t
  } = e;
  return Ct({
    root: ["root"],
    paper: ["paper"]
  }, yR, t);
}, vR = ke(wl, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), xR = ke(di, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), Ny = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Tt({
    props: t,
    name: "MuiPopover"
  }), {
    action: o,
    anchorEl: s,
    anchorOrigin: a = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: l,
    anchorReference: c = "anchorEl",
    children: u,
    className: d,
    container: f,
    elevation: h = 8,
    marginThreshold: g = 16,
    open: y,
    PaperProps: m = {},
    // TODO: remove in v7
    slots: b = {},
    slotProps: x = {},
    transformOrigin: E = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: w,
    // TODO: remove in v7
    transitionDuration: T = "auto",
    TransitionProps: v = {},
    // TODO: remove in v7
    disableScrollLock: S = !1,
    ...R
  } = r, $ = C.useRef(), I = {
    ...r,
    anchorOrigin: a,
    anchorReference: c,
    elevation: h,
    marginThreshold: g,
    transformOrigin: E,
    TransitionComponent: w,
    transitionDuration: T,
    TransitionProps: v
  }, p = bR(I), O = C.useCallback(() => {
    if (c === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (l || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), l;
    const Q = Mi(s), ie = Q && Q.nodeType === 1 ? Q : pn($.current).body, F = ie.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const he = ie.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && he.top === 0 && he.left === 0 && he.right === 0 && he.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: F.top + Jp(F, a.vertical),
      left: F.left + Zp(F, a.horizontal)
    };
  }, [s, a.horizontal, a.vertical, l, c]), P = C.useCallback((Q) => ({
    vertical: Jp(Q, E.vertical),
    horizontal: Zp(Q, E.horizontal)
  }), [E.horizontal, E.vertical]), A = C.useCallback((Q) => {
    const ie = {
      width: Q.offsetWidth,
      height: Q.offsetHeight
    }, F = P(ie);
    if (c === "none")
      return {
        top: null,
        left: null,
        transformOrigin: em(F)
      };
    const he = O();
    let fe = he.top - F.vertical, Se = he.left - F.horizontal;
    const Le = fe + ie.height, Ae = Se + ie.width, Ie = fr(Mi(s)), Re = Ie.innerHeight - g, Be = Ie.innerWidth - g;
    if (g !== null && fe < g) {
      const Oe = fe - g;
      fe -= Oe, F.vertical += Oe;
    } else if (g !== null && Le > Re) {
      const Oe = Le - Re;
      fe -= Oe, F.vertical += Oe;
    }
    if (process.env.NODE_ENV !== "production" && ie.height > Re && ie.height && Re && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${ie.height - Re}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), g !== null && Se < g) {
      const Oe = Se - g;
      Se -= Oe, F.horizontal += Oe;
    } else if (Ae > Be) {
      const Oe = Ae - Be;
      Se -= Oe, F.horizontal += Oe;
    }
    return {
      top: `${Math.round(fe)}px`,
      left: `${Math.round(Se)}px`,
      transformOrigin: em(F)
    };
  }, [s, c, O, P, g]), [D, _] = C.useState(y), M = C.useCallback(() => {
    const Q = $.current;
    if (!Q)
      return;
    const ie = A(Q);
    ie.top !== null && Q.style.setProperty("top", ie.top), ie.left !== null && (Q.style.left = ie.left), Q.style.transformOrigin = ie.transformOrigin, _(!0);
  }, [A]);
  C.useEffect(() => (S && window.addEventListener("scroll", M), () => window.removeEventListener("scroll", M)), [s, S, M]);
  const V = () => {
    M();
  }, Y = () => {
    _(!1);
  };
  C.useEffect(() => {
    y && M();
  }), C.useImperativeHandle(o, () => y ? {
    updatePosition: () => {
      M();
    }
  } : null, [y, M]), C.useEffect(() => {
    if (!y)
      return;
    const Q = Yu(() => {
      M();
    }), ie = fr(Mi(s));
    return ie.addEventListener("resize", Q), () => {
      Q.clear(), ie.removeEventListener("resize", Q);
    };
  }, [s, y, M]);
  let U = T;
  const j = {
    slots: {
      transition: w,
      ...b
    },
    slotProps: {
      transition: v,
      paper: m,
      ...x
    }
  }, [W, ee] = at("transition", {
    elementType: ns,
    externalForwardedProps: j,
    ownerState: I,
    getSlotProps: (Q) => ({
      ...Q,
      onEntering: (ie, F) => {
        var he;
        (he = Q.onEntering) == null || he.call(Q, ie, F), V();
      },
      onExited: (ie) => {
        var F;
        (F = Q.onExited) == null || F.call(Q, ie), Y();
      }
    }),
    additionalProps: {
      appear: !0,
      in: y
    }
  });
  T === "auto" && !W.muiSupportAuto && (U = void 0);
  const K = f || (s ? pn(Mi(s)).body : void 0), [oe, {
    slots: ne,
    slotProps: se,
    ...de
  }] = at("root", {
    ref: n,
    elementType: vR,
    externalForwardedProps: {
      ...j,
      ...R
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: b.backdrop
      },
      slotProps: {
        backdrop: vd(typeof x.backdrop == "function" ? x.backdrop(I) : x.backdrop, {
          invisible: !0
        })
      },
      container: K,
      open: y
    },
    ownerState: I,
    className: Ee(p.root, d)
  }), [X, ae] = at("paper", {
    ref: $,
    className: p.paper,
    elementType: xR,
    externalForwardedProps: j,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: h,
      style: D ? void 0 : {
        opacity: 0
      }
    },
    ownerState: I
  });
  return /* @__PURE__ */ k(oe, {
    ...de,
    ...!du(oe) && {
      slots: ne,
      slotProps: se,
      disableScrollLock: S
    },
    children: /* @__PURE__ */ k(W, {
      ...ee,
      timeout: U,
      children: /* @__PURE__ */ k(X, {
        ...ae,
        children: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (Ny.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: Ir,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: Yr(i.oneOfType([Or, i.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = Mi(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: i.shape({
    horizontal: i.oneOfType([i.oneOf(["center", "left", "right"]), i.number]).isRequired,
    vertical: i.oneOfType([i.oneOf(["bottom", "center", "top"]), i.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: i.shape({
    left: i.number.isRequired,
    top: i.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: i.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: i.object,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([Or, i.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: i.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: Ku,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: i.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: i.shape({
    component: qu
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: i.shape({
    horizontal: i.oneOfType([i.oneOf(["center", "left", "right"]), i.number]).isRequired,
    vertical: i.oneOfType([i.oneOf(["bottom", "center", "top"]), i.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: i.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: i.object
});
function wR() {
  const [e, t] = Sr(null), n = !!e, r = tn((s) => {
    const a = s.currentTarget;
    t(a);
  }, []), o = tn(() => {
    var s;
    (s = window.getSelection()) != null && s.toString() || t(null);
  }, []);
  return {
    anchorEl: e,
    isOpen: n,
    openPopover: r,
    closePopover: o
  };
}
const Ay = _e(({ children: e, renderPopoverHandler: t, sx: n }) => {
  const { paperCommonStyles: r } = fi(), { anchorEl: o, isOpen: s, openPopover: a, closePopover: l } = wR();
  return /* @__PURE__ */ Pe(ph, { children: [
    t({ anchorEl: o, isOpen: s, openPopover: a, closePopover: l }),
    /* @__PURE__ */ k(
      Ny,
      {
        open: s,
        anchorEl: o,
        onClose: l,
        anchorOrigin: { vertical: "bottom", horizontal: "center" },
        transformOrigin: { vertical: "top", horizontal: "center" },
        slotProps: {
          paper: {
            elevation: 3,
            square: !0,
            sx: {
              ...r,
              border: 1,
              borderColor: "divider",
              ...n
            }
          }
        },
        children: /* @__PURE__ */ k(po, { in: s, children: /* @__PURE__ */ k("div", { children: e }) })
      }
    )
  ] });
});
Ay.displayName = "Popover";
const TR = _e(
  ({ icon: e = "solar:menu-dots-line-duotone", menuItems: t }) => /* @__PURE__ */ k(
    Ay,
    {
      renderPopoverHandler: ({ isOpen: n, openPopover: r }) => /* @__PURE__ */ k(
        Yn,
        {
          isCircle: !0,
          isGhost: !0,
          color: "auto",
          icon: e,
          iconWidth: 20,
          disabled: n,
          onClick: r
        }
      ),
      children: /* @__PURE__ */ k($a, { items: t, renderItem: (n) => /* @__PURE__ */ k(Ui, { ...n, clickable: !0 }) })
    }
  )
);
TR.displayName = "ExhibitCardActionButton";
const My = rT({
  createStyledComponent: ke("div", {
    name: "MuiContainer",
    slot: "Root",
    overridesResolver: (e, t) => {
      const {
        ownerState: n
      } = e;
      return [t.root, t[`maxWidth${xe(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
    }
  }),
  useThemeProps: (e) => Tt({
    props: e,
    name: "MuiContainer"
  })
});
process.env.NODE_ENV !== "production" && (My.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: i.bool,
  /**
   * Set the max-width to match the min-width of the current breakpoint.
   * This is useful if you'd prefer to design for a fixed set of sizes
   * instead of trying to accommodate a fully fluid viewport.
   * It's fluid by default.
   * @default false
   */
  fixed: i.bool,
  /**
   * Determine the max-width of the container.
   * The container width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'lg'
   */
  maxWidth: i.oneOfType([i.oneOf(["xs", "sm", "md", "lg", "xl", !1]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
const SR = _e(({ children: e, maxWidth: t = "lg", ...n }) => /* @__PURE__ */ k(
  My,
  {
    className: "VenomousUI-Container",
    disableGutters: !0,
    maxWidth: t === "fullwidth" ? !1 : t,
    ...n,
    children: e
  }
));
SR.displayName = "Container";
function ER(e, t, n) {
  const r = t.getBoundingClientRect(), o = n && n.getBoundingClientRect(), s = fr(t);
  let a;
  if (t.fakeTransform)
    a = t.fakeTransform;
  else {
    const u = s.getComputedStyle(t);
    a = u.getPropertyValue("-webkit-transform") || u.getPropertyValue("transform");
  }
  let l = 0, c = 0;
  if (a && a !== "none" && typeof a == "string") {
    const u = a.split("(")[1].split(")")[0].split(",");
    l = parseInt(u[4], 10), c = parseInt(u[5], 10);
  }
  return e === "left" ? o ? `translateX(${o.right + l - r.left}px)` : `translateX(${s.innerWidth + l - r.left}px)` : e === "right" ? o ? `translateX(-${r.right - o.left - l}px)` : `translateX(-${r.left + r.width - l}px)` : e === "up" ? o ? `translateY(${o.bottom + c - r.top}px)` : `translateY(${s.innerHeight + c - r.top}px)` : o ? `translateY(-${r.top - o.top + r.height - c}px)` : `translateY(-${r.top + r.height - c}px)`;
}
function _y(e) {
  return typeof e == "function" ? e() : e;
}
function Hs(e, t, n) {
  const r = _y(n), o = ER(e, t, r);
  o && (t.style.webkitTransform = o, t.style.transform = o);
}
const Dy = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Nr(), o = {
    enter: r.transitions.easing.easeOut,
    exit: r.transitions.easing.sharp
  }, s = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: a,
    appear: l = !0,
    children: c,
    container: u,
    direction: d = "down",
    easing: f = o,
    in: h,
    onEnter: g,
    onEntered: y,
    onEntering: m,
    onExit: b,
    onExited: x,
    onExiting: E,
    style: w,
    timeout: T = s,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: v = $n,
    ...S
  } = t, R = C.useRef(null), $ = nn(bo(c), R, n), I = (Y) => (U) => {
    Y && (U === void 0 ? Y(R.current) : Y(R.current, U));
  }, p = I((Y, U) => {
    Hs(d, Y, u), ud(Y), g && g(Y, U);
  }), O = I((Y, U) => {
    const j = Ko({
      timeout: T,
      style: w,
      easing: f
    }, {
      mode: "enter"
    });
    Y.style.webkitTransition = r.transitions.create("-webkit-transform", {
      ...j
    }), Y.style.transition = r.transitions.create("transform", {
      ...j
    }), Y.style.webkitTransform = "none", Y.style.transform = "none", m && m(Y, U);
  }), P = I(y), A = I(E), D = I((Y) => {
    const U = Ko({
      timeout: T,
      style: w,
      easing: f
    }, {
      mode: "exit"
    });
    Y.style.webkitTransition = r.transitions.create("-webkit-transform", U), Y.style.transition = r.transitions.create("transform", U), Hs(d, Y, u), b && b(Y);
  }), _ = I((Y) => {
    Y.style.webkitTransition = "", Y.style.transition = "", x && x(Y);
  }), M = (Y) => {
    a && a(R.current, Y);
  }, V = C.useCallback(() => {
    R.current && Hs(d, R.current, u);
  }, [d, u]);
  return C.useEffect(() => {
    if (h || d === "down" || d === "right")
      return;
    const Y = Yu(() => {
      R.current && Hs(d, R.current, u);
    }), U = fr(R.current);
    return U.addEventListener("resize", Y), () => {
      Y.clear(), U.removeEventListener("resize", Y);
    };
  }, [d, h, u]), C.useEffect(() => {
    h || V();
  }, [h, V]), /* @__PURE__ */ k(v, {
    nodeRef: R,
    onEnter: p,
    onEntered: P,
    onEntering: O,
    onExit: D,
    onExited: _,
    onExiting: A,
    addEndListener: M,
    appear: l,
    in: h,
    timeout: T,
    ...S,
    children: (Y, {
      ownerState: U,
      ...j
    }) => /* @__PURE__ */ C.cloneElement(c, {
      ref: $,
      style: {
        visibility: Y === "exited" && !h ? "hidden" : void 0,
        ...w,
        ...c.props.style
      },
      ...j
    })
  });
});
process.env.NODE_ENV !== "production" && (Dy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: Gr.isRequired,
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the container the Slide is transitioning from.
   */
  container: Yr(i.oneOfType([Or, i.func]), (e) => {
    if (e.open) {
      const t = _y(e.container);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `container` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `container` prop provided to the component is invalid.", "It should be an HTML element instance."].join(`
`));
    }
    return null;
  }),
  /**
   * Direction the child node will enter from.
   * @default 'down'
   */
  direction: i.oneOf(["down", "left", "right", "up"]),
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   * @default {
   *   enter: theme.transitions.easing.easeOut,
   *   exit: theme.transitions.easing.sharp,
   * }
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function CR(e) {
  return gt("MuiDrawer", e);
}
wt("MuiDrawer", ["root", "docked", "paper", "anchorLeft", "anchorRight", "anchorTop", "anchorBottom", "paperAnchorLeft", "paperAnchorRight", "paperAnchorTop", "paperAnchorBottom", "paperAnchorDockedLeft", "paperAnchorDockedRight", "paperAnchorDockedTop", "paperAnchorDockedBottom", "modal"]);
const By = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, (n.variant === "permanent" || n.variant === "persistent") && t.docked, t.modal];
}, OR = (e) => {
  const {
    classes: t,
    anchor: n,
    variant: r
  } = e, o = {
    root: ["root", `anchor${xe(n)}`],
    docked: [(r === "permanent" || r === "persistent") && "docked"],
    modal: ["modal"],
    paper: ["paper", `paperAnchor${xe(n)}`, r !== "temporary" && `paperAnchorDocked${xe(n)}`]
  };
  return Ct(o, CR, t);
}, RR = ke(wl, {
  name: "MuiDrawer",
  slot: "Root",
  overridesResolver: By
})(Ke(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.drawer
}))), $R = ke("div", {
  shouldForwardProp: gr,
  name: "MuiDrawer",
  slot: "Docked",
  skipVariantsResolver: !1,
  overridesResolver: By
})({
  flex: "0 0 auto"
}), PR = ke(di, {
  name: "MuiDrawer",
  slot: "Paper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.paper, t[`paperAnchor${xe(n.anchor)}`], n.variant !== "temporary" && t[`paperAnchorDocked${xe(n.anchor)}`]];
  }
})(Ke(({
  theme: e
}) => ({
  overflowY: "auto",
  display: "flex",
  flexDirection: "column",
  height: "100%",
  flex: "1 0 auto",
  zIndex: (e.vars || e).zIndex.drawer,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  // temporary style
  position: "fixed",
  top: 0,
  // We disable the focus ring for mouse, touch and keyboard users.
  // At some point, it would be better to keep it for keyboard users.
  // :focus-ring CSS pseudo-class will help.
  outline: 0,
  variants: [{
    props: {
      anchor: "left"
    },
    style: {
      left: 0
    }
  }, {
    props: {
      anchor: "top"
    },
    style: {
      top: 0,
      left: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    }
  }, {
    props: {
      anchor: "right"
    },
    style: {
      right: 0
    }
  }, {
    props: {
      anchor: "bottom"
    },
    style: {
      top: "auto",
      left: 0,
      bottom: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "left" && t.variant !== "temporary",
    style: {
      borderRight: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "top" && t.variant !== "temporary",
    style: {
      borderBottom: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "right" && t.variant !== "temporary",
    style: {
      borderLeft: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "bottom" && t.variant !== "temporary",
    style: {
      borderTop: `1px solid ${(e.vars || e).palette.divider}`
    }
  }]
}))), Fy = {
  left: "right",
  right: "left",
  top: "down",
  bottom: "up"
};
function kR(e) {
  return ["left", "right"].includes(e);
}
function IR({
  direction: e
}, t) {
  return e === "rtl" && kR(t) ? Fy[t] : t;
}
const jy = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Tt({
    props: t,
    name: "MuiDrawer"
  }), o = Nr(), s = sl(), a = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    anchor: l = "left",
    BackdropProps: c,
    children: u,
    className: d,
    elevation: f = 16,
    hideBackdrop: h = !1,
    ModalProps: {
      BackdropProps: g,
      ...y
    } = {},
    onClose: m,
    open: b = !1,
    PaperProps: x = {},
    SlideProps: E,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: w,
    transitionDuration: T = a,
    variant: v = "temporary",
    slots: S = {},
    slotProps: R = {},
    ...$
  } = r, I = C.useRef(!1);
  C.useEffect(() => {
    I.current = !0;
  }, []);
  const p = IR({
    direction: s ? "rtl" : "ltr"
  }, l), P = {
    ...r,
    anchor: l,
    elevation: f,
    open: b,
    variant: v,
    ...$
  }, A = OR(P), D = {
    slots: {
      transition: w,
      ...S
    },
    slotProps: {
      paper: x,
      transition: E,
      ...R,
      backdrop: vd(R.backdrop || {
        ...c,
        ...g
      }, {
        transitionDuration: T
      })
    }
  }, [_, M] = at("root", {
    ref: n,
    elementType: RR,
    className: Ee(A.root, A.modal, d),
    shouldForwardComponentProp: !0,
    ownerState: P,
    externalForwardedProps: {
      ...D,
      ...$,
      ...y
    },
    additionalProps: {
      open: b,
      onClose: m,
      hideBackdrop: h,
      slots: {
        backdrop: D.slots.backdrop
      },
      slotProps: {
        backdrop: D.slotProps.backdrop
      }
    }
  }), [V, Y] = at("paper", {
    elementType: PR,
    shouldForwardComponentProp: !0,
    className: Ee(A.paper, x.className),
    ownerState: P,
    externalForwardedProps: D,
    additionalProps: {
      elevation: v === "temporary" ? f : 0,
      square: !0
    }
  }), [U, j] = at("docked", {
    elementType: $R,
    ref: n,
    className: Ee(A.root, A.docked, d),
    ownerState: P,
    externalForwardedProps: D,
    additionalProps: $
    // pass `other` here because `DockedSlot` is also a root slot for some variants
  }), [W, ee] = at("transition", {
    elementType: Dy,
    ownerState: P,
    externalForwardedProps: D,
    additionalProps: {
      in: b,
      direction: Fy[p],
      timeout: T,
      appear: I.current
    }
  }), K = /* @__PURE__ */ k(V, {
    ...Y,
    children: u
  });
  if (v === "permanent")
    return /* @__PURE__ */ k(U, {
      ...j,
      children: K
    });
  const oe = /* @__PURE__ */ k(W, {
    ...ee,
    children: K
  });
  return v === "persistent" ? /* @__PURE__ */ k(U, {
    ...j,
    children: oe
  }) : /* @__PURE__ */ k(_, {
    ...M,
    children: oe
  });
});
process.env.NODE_ENV !== "production" && (jy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Side from which the drawer will appear.
   * @default 'left'
   */
  anchor: i.oneOf(["bottom", "left", "right", "top"]),
  /**
   * @ignore
   */
  BackdropProps: i.object,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The elevation of the drawer.
   * @default 16
   */
  elevation: Ku,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: i.bool,
  /**
   * Props applied to the [`Modal`](https://mui.com/material-ui/api/modal/) element.
   * @default {}
   */
  ModalProps: i.object,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: i.bool,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @deprecated use the `slotProps.paper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PaperProps: i.object,
  /**
   * Props applied to the [`Slide`](https://mui.com/material-ui/api/slide/) element.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SlideProps: i.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    docked: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    docked: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * The variant to use.
   * @default 'temporary'
   */
  variant: i.oneOf(["permanent", "persistent", "temporary"])
});
const Ly = _e(
  ({ children: e, isOpen: t, closeDrawer: n, width: r, position: o = "right", sx: s }) => {
    const { paperCommonStyles: a } = fi();
    return /* @__PURE__ */ k(
      jy,
      {
        className: "VenomousUI-Drawer",
        open: t,
        onClose: n,
        anchor: o,
        keepMounted: !0,
        slotProps: {
          paper: {
            sx: {
              ...a,
              ...NR(o),
              width: r,
              p: "16px",
              ...s
            }
          }
        },
        children: /* @__PURE__ */ k("div", { style: { width: "100%" }, children: e })
      }
    );
  }
);
Ly.displayName = "Drawer";
function NR(e) {
  switch (e) {
    case "right":
      return { borderTopRightRadius: "0px !important", borderBottomRightRadius: "0px !important" };
    case "top":
      return { borderTopLeftRadius: "0px !important", borderTopRightRadius: "0px !important" };
    case "bottom":
      return {
        borderBottomLeftRadius: "0px !important",
        borderBottomRightRadius: "0px !important"
      };
    case "left":
    default:
      return { borderTopLeftRadius: "0px !important", borderBottomLeftRadius: "0px !important" };
  }
}
function AR() {
  const [e, t] = Sr(!1), n = tn(() => {
    t(!0);
  }, []), r = tn(() => {
    t(!1);
  }, []), o = tn(() => {
    t((s) => !s);
  }, []);
  return {
    isOpen: e,
    setIsOpen: t,
    openDrawer: n,
    closeDrawer: r,
    toggleDrawer: o
  };
}
const Vy = _e(({ height: e = 50, title: t, closeDrawer: n }) => {
  const { paperCommonStyles: r } = fi();
  return /* @__PURE__ */ Pe(
    Kt,
    {
      className: "VenomousUI-DrawerHeader",
      row: !0,
      sx: {
        ...r,
        borderRadius: 0,
        height: e,
        width: "100%",
        position: "sticky",
        top: 0,
        left: 0,
        justifyContent: "space-between",
        transform: "translateY(-8px)"
      },
      children: [
        n && /* @__PURE__ */ k(
          Yn,
          {
            isCircle: !0,
            isGhost: !0,
            icon: "solar:close-circle-line-duotone",
            iconWidth: 24,
            color: "auto",
            onClick: n,
            sx: { width: 24, mr: "8px", ml: "-8px" }
          }
        ),
        /* @__PURE__ */ k(yn, { text: t, isTitle: !0 })
      ]
    }
  );
});
Vy.displayName = "DrawerHeader";
const _d = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (_d.displayName = "FormControlContext");
function Tl() {
  return C.useContext(_d);
}
function MR(e) {
  return gt("PrivateSwitchBase", e);
}
wt("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);
const _R = (e) => {
  const {
    classes: t,
    checked: n,
    disabled: r,
    edge: o
  } = e, s = {
    root: ["root", n && "checked", r && "disabled", o && `edge${xe(o)}`],
    input: ["input"]
  };
  return Ct(s, MR, t);
}, DR = ke(xd)({
  padding: 9,
  borderRadius: "50%",
  variants: [{
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "start" && t.size !== "small",
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "end" && t.size !== "small",
    style: {
      marginRight: -12
    }
  }]
}), BR = ke("input", {
  shouldForwardProp: gr
})({
  cursor: "inherit",
  position: "absolute",
  opacity: 0,
  width: "100%",
  height: "100%",
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
}), Sl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    autoFocus: r,
    checked: o,
    checkedIcon: s,
    defaultChecked: a,
    disabled: l,
    disableFocusRipple: c = !1,
    edge: u = !1,
    icon: d,
    id: f,
    inputProps: h,
    inputRef: g,
    name: y,
    onBlur: m,
    onChange: b,
    onFocus: x,
    readOnly: E,
    required: w = !1,
    tabIndex: T,
    type: v,
    value: S,
    slots: R = {},
    slotProps: $ = {},
    ...I
  } = t, [p, O] = Xh({
    controlled: o,
    default: !!a,
    name: "SwitchBase",
    state: "checked"
  }), P = Tl(), A = (ne) => {
    x && x(ne), P && P.onFocus && P.onFocus(ne);
  }, D = (ne) => {
    m && m(ne), P && P.onBlur && P.onBlur(ne);
  }, _ = (ne) => {
    if (ne.nativeEvent.defaultPrevented)
      return;
    const se = ne.target.checked;
    O(se), b && b(ne, se);
  };
  let M = l;
  P && typeof M > "u" && (M = P.disabled);
  const V = v === "checkbox" || v === "radio", Y = {
    ...t,
    checked: p,
    disabled: M,
    disableFocusRipple: c,
    edge: u
  }, U = _R(Y), j = {
    slots: R,
    slotProps: {
      input: h,
      ...$
    }
  }, [W, ee] = at("root", {
    ref: n,
    elementType: DR,
    className: U.root,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...j,
      component: "span",
      ...I
    },
    getSlotProps: (ne) => ({
      ...ne,
      onFocus: (se) => {
        var de;
        (de = ne.onFocus) == null || de.call(ne, se), A(se);
      },
      onBlur: (se) => {
        var de;
        (de = ne.onBlur) == null || de.call(ne, se), D(se);
      }
    }),
    ownerState: Y,
    additionalProps: {
      centerRipple: !0,
      focusRipple: !c,
      disabled: M,
      role: void 0,
      tabIndex: null
    }
  }), [K, oe] = at("input", {
    ref: g,
    elementType: BR,
    className: U.input,
    externalForwardedProps: j,
    getSlotProps: (ne) => ({
      ...ne,
      onChange: (se) => {
        var de;
        (de = ne.onChange) == null || de.call(ne, se), _(se);
      }
    }),
    ownerState: Y,
    additionalProps: {
      autoFocus: r,
      checked: o,
      defaultChecked: a,
      disabled: M,
      id: V ? f : void 0,
      name: y,
      readOnly: E,
      required: w,
      tabIndex: T,
      type: v,
      ...v === "checkbox" && S === void 0 ? {} : {
        value: S
      }
    }
  });
  return /* @__PURE__ */ Pe(W, {
    ...ee,
    children: [/* @__PURE__ */ k(K, {
      ...oe
    }), p ? s : d]
  });
});
process.env.NODE_ENV !== "production" && (Sl.propTypes = {
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: i.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * @ignore
   */
  defaultChecked: i.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: i.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: i.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: i.node.isRequired,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ir,
  /*
   * @ignore
   */
  name: i.string,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: i.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    input: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.object,
  /**
   * @ignore
   */
  tabIndex: i.oneOfType([i.number, i.string]),
  /**
   * The input component prop `type`.
   */
  type: i.string.isRequired,
  /**
   * The value of the component.
   */
  value: i.any
});
const FR = ui(/* @__PURE__ */ k("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank"), jR = ui(/* @__PURE__ */ k("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox"), LR = ui(/* @__PURE__ */ k("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");
function VR(e) {
  return gt("MuiCheckbox", e);
}
const yc = wt("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium"]), zR = (e) => {
  const {
    classes: t,
    indeterminate: n,
    color: r,
    size: o
  } = e, s = {
    root: ["root", n && "indeterminate", `color${xe(r)}`, `size${xe(o)}`]
  }, a = Ct(s, VR, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...a
  };
}, WR = ke(Sl, {
  shouldForwardProp: (e) => gr(e) || e === "classes",
  name: "MuiCheckbox",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.indeterminate && t.indeterminate, t[`size${xe(n.size)}`], n.color !== "default" && t[`color${xe(n.color)}`]];
  }
})(Ke(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  variants: [{
    props: {
      color: "default",
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(cn()).map(([t]) => ({
    props: {
      color: t,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(cn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${yc.checked}, &.${yc.indeterminate}`]: {
        color: (e.vars || e).palette[t].main
      },
      [`&.${yc.disabled}`]: {
        color: (e.vars || e).palette.action.disabled
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
}))), UR = /* @__PURE__ */ k(jR, {}), HR = /* @__PURE__ */ k(FR, {}), qR = /* @__PURE__ */ k(LR, {}), zy = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Tt({
    props: t,
    name: "MuiCheckbox"
  }), {
    checkedIcon: o = UR,
    color: s = "primary",
    icon: a = HR,
    indeterminate: l = !1,
    indeterminateIcon: c = qR,
    inputProps: u,
    size: d = "medium",
    disableRipple: f = !1,
    className: h,
    slots: g = {},
    slotProps: y = {},
    ...m
  } = r, b = l ? c : a, x = l ? c : o, E = {
    ...r,
    disableRipple: f,
    color: s,
    indeterminate: l,
    size: d
  }, w = zR(E), T = y.input ?? u, [v, S] = at("root", {
    ref: n,
    elementType: WR,
    className: Ee(w.root, h),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: g,
      slotProps: y,
      ...m
    },
    ownerState: E,
    additionalProps: {
      type: "checkbox",
      icon: /* @__PURE__ */ C.cloneElement(b, {
        fontSize: b.props.fontSize ?? d
      }),
      checkedIcon: /* @__PURE__ */ C.cloneElement(x, {
        fontSize: x.props.fontSize ?? d
      }),
      disableRipple: f,
      slots: g,
      slotProps: {
        input: vd(typeof T == "function" ? T(E) : T, {
          "data-indeterminate": l
        })
      }
    }
  });
  return /* @__PURE__ */ k(v, {
    ...S,
    classes: w
  });
});
process.env.NODE_ENV !== "production" && (zy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   * @default <CheckBoxIcon />
   */
  checkedIcon: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: i.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <CheckBoxOutlineBlankIcon />
   */
  icon: i.node,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the `input`.
   * @default false
   */
  indeterminate: i.bool,
  /**
   * The icon to display when the component is indeterminate.
   * @default <IndeterminateCheckBoxIcon />
   */
  indeterminateIcon: i.node,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: i.object,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense checkbox styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    input: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: i.any
});
const ni = _e(
  ({ label: e, elementId: t, tooltip: n, isDisabled: r, isError: o, isRequired: s }) => {
    const { textCommonStyles: a } = pl({
      isTitle: !1,
      isLabel: !0,
      textColor: r ? "disabled" : o ? "error" : "auto"
    });
    return /* @__PURE__ */ Pe(
      Rr,
      {
        className: "VenomousUI-Label",
        component: "label",
        htmlFor: t,
        sx: {
          ...a,
          cursor: r ? "not-allowed" : "pointer",
          display: "flex",
          alignItems: "center"
        },
        children: [
          /* @__PURE__ */ k(
            Rr,
            {
              component: "i",
              sx: {
                width: "14px",
                marginLeft: "-14px",
                fontSize: "1.5rem",
                transform: "translateY(0.25rem)",
                opacity: s ? 1 : 0,
                color: "error.main"
              },
              children: "*"
            }
          ),
          e,
          n && /* @__PURE__ */ k(bd, { title: n, arrow: !0, placement: "top", children: /* @__PURE__ */ k(
            pr,
            {
              icon: "solar:info-circle-bold",
              width: 16,
              color: o ? "error" : "primary",
              ml: "4px"
            }
          ) })
        ]
      }
    );
  }
);
ni.displayName = "Label";
const El = _e(
  ({ startLabel: e, endLabel: t, labelsDirection: n = "row", renderElement: r, isDisabled: o, isError: s }) => {
    const a = mh();
    return /* @__PURE__ */ Pe(Kt, { className: "VenomousUI-Labels", gap: 0, row: n === "row", children: [
      e && /* @__PURE__ */ k(ni, { label: e, elementId: a, isDisabled: o, isError: s }),
      r(a),
      t && /* @__PURE__ */ k(ni, { label: t, elementId: a, isDisabled: o, isError: s })
    ] });
  }
);
El.displayName = "Labels";
const Wy = _e(
  ({ value: e, onChange: t, isDisabled: n, isError: r, label: o, labelDirection: s = "end" }) => {
    const a = tn(
      (l) => /* @__PURE__ */ k(
        zy,
        {
          id: l,
          checked: e,
          onChange: (c) => t(c.target.checked),
          disabled: n,
          icon: /* @__PURE__ */ k(YR, { isDisabled: n, isError: r }),
          checkedIcon: /* @__PURE__ */ k(GR, { isDisabled: n, isError: r }),
          sx: {
            "& .MuiSwitch-track": { transition: "background-color 0s" },
            "& svg.MuiSvgIcon-root": { transform: "translate(-1px, 0px)" }
          }
        }
      ),
      [e, t, n, r]
    );
    return o ? /* @__PURE__ */ k(
      El,
      {
        labelsDirection: "row",
        startLabel: s === "start" ? o : "",
        endLabel: s === "end" ? o : "",
        isDisabled: n,
        isError: r,
        renderElement: a
      }
    ) : a();
  }
);
Wy.displayName = "Checkbox";
const YR = _e(
  ({ isDisabled: e, isError: t }) => /* @__PURE__ */ k(
    qo,
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "32",
      height: "32",
      viewBox: "0 0 20 20",
      sx: {
        color: (n) => t ? n.palette.error.main : e ? n.palette.action.disabled : "auto"
      },
      children: /* @__PURE__ */ k(
        "path",
        {
          fill: "currentColor",
          d: "M3 6a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3zm3-2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"
        }
      )
    }
  )
), GR = _e(
  ({ isDisabled: e, isError: t }) => /* @__PURE__ */ k(
    qo,
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "32",
      height: "32",
      viewBox: "0 0 24 24",
      sx: {
        color: (n) => t ? n.palette.error.main : e ? n.palette.action.disabled : "auto"
      },
      children: /* @__PURE__ */ k(
        "path",
        {
          fill: "currentColor",
          d: "M6.25 3A3.25 3.25 0 0 0 3 6.25v11.5A3.25 3.25 0 0 0 6.25 21h11.5A3.25 3.25 0 0 0 21 17.75V6.25A3.25 3.25 0 0 0 17.75 3zm11.03 6.28l-6.754 6.747a.75.75 0 0 1-1.06 0L6.72 13.28a.75.75 0 0 1 1.06-1.06l2.217 2.216l6.223-6.217a.75.75 0 1 1 1.06 1.062"
        }
      )
    }
  )
);
var tm;
const KR = ke("fieldset", {
  shouldForwardProp: gr
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), XR = ke("legend", {
  shouldForwardProp: gr
})(Ke(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function Uy(e) {
  const {
    children: t,
    classes: n,
    className: r,
    label: o,
    notched: s,
    ...a
  } = e, l = o != null && o !== "", c = {
    ...e,
    notched: s,
    withLabel: l
  };
  return /* @__PURE__ */ k(KR, {
    "aria-hidden": !0,
    className: r,
    ownerState: c,
    ...a,
    children: /* @__PURE__ */ k(XR, {
      ownerState: c,
      children: l ? /* @__PURE__ */ k("span", {
        children: o
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        tm || (tm = /* @__PURE__ */ k("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (Uy.propTypes = {
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The label.
   */
  label: i.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: i.bool.isRequired,
  /**
   * @ignore
   */
  style: i.object
});
function Hy({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((r, o) => (r[o] = e[o], n && typeof e[o] > "u" && (r[o] = n[o]), r), {});
}
function qs(e) {
  return parseInt(e, 10) || 0;
}
const QR = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function JR(e) {
  for (const t in e)
    return !1;
  return !0;
}
function nm(e) {
  return JR(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const qy = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    onChange: r,
    maxRows: o,
    minRows: s = 1,
    style: a,
    value: l,
    ...c
  } = t, {
    current: u
  } = C.useRef(l != null), d = C.useRef(null), f = nn(n, d), h = C.useRef(null), g = C.useRef(null), y = C.useCallback(() => {
    const w = d.current, T = g.current;
    if (!w || !T)
      return;
    const S = fr(w).getComputedStyle(w);
    if (S.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    T.style.width = S.width, T.value = w.value || t.placeholder || "x", T.value.slice(-1) === `
` && (T.value += " ");
    const R = S.boxSizing, $ = qs(S.paddingBottom) + qs(S.paddingTop), I = qs(S.borderBottomWidth) + qs(S.borderTopWidth), p = T.scrollHeight;
    T.value = "x";
    const O = T.scrollHeight;
    let P = p;
    s && (P = Math.max(Number(s) * O, P)), o && (P = Math.min(Number(o) * O, P)), P = Math.max(P, O);
    const A = P + (R === "border-box" ? $ + I : 0), D = Math.abs(P - p) <= 1;
    return {
      outerHeightStyle: A,
      overflowing: D
    };
  }, [o, s, t.placeholder]), m = lr(() => {
    const w = d.current, T = y();
    if (!w || !T || nm(T))
      return !1;
    const v = T.outerHeightStyle;
    return h.current != null && h.current !== v;
  }), b = C.useCallback(() => {
    const w = d.current, T = y();
    if (!w || !T || nm(T))
      return;
    const v = T.outerHeightStyle;
    h.current !== v && (h.current = v, w.style.height = `${v}px`), w.style.overflow = T.overflowing ? "hidden" : "";
  }, [y]), x = C.useRef(-1);
  dr(() => {
    const w = Yu(b), T = d == null ? void 0 : d.current;
    if (!T)
      return;
    const v = fr(T);
    v.addEventListener("resize", w);
    let S;
    return typeof ResizeObserver < "u" && (S = new ResizeObserver(() => {
      m() && (S.unobserve(T), cancelAnimationFrame(x.current), b(), x.current = requestAnimationFrame(() => {
        S.observe(T);
      }));
    }), S.observe(T)), () => {
      w.clear(), cancelAnimationFrame(x.current), v.removeEventListener("resize", w), S && S.disconnect();
    };
  }, [y, b, m]), dr(() => {
    b();
  });
  const E = (w) => {
    u || b(), r && r(w);
  };
  return /* @__PURE__ */ Pe(C.Fragment, {
    children: [/* @__PURE__ */ k("textarea", {
      value: l,
      onChange: E,
      ref: f,
      rows: s,
      style: a,
      ...c
    }), /* @__PURE__ */ k("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: g,
      tabIndex: -1,
      style: {
        ...QR.shadow,
        ...a,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (qy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: i.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  onChange: i.func,
  /**
   * @ignore
   */
  placeholder: i.string,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * @ignore
   */
  value: i.oneOfType([i.arrayOf(i.string), i.number, i.string])
});
function rm(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function ZR(e, t = !1) {
  return e && (rm(e.value) && e.value !== "" || t && rm(e.defaultValue) && e.defaultValue !== "");
}
function e$(e) {
  return gt("MuiInputBase", e);
}
const ka = wt("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var om;
const Yy = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${xe(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, Gy = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, t$ = (e) => {
  const {
    classes: t,
    color: n,
    disabled: r,
    error: o,
    endAdornment: s,
    focused: a,
    formControl: l,
    fullWidth: c,
    hiddenLabel: u,
    multiline: d,
    readOnly: f,
    size: h,
    startAdornment: g,
    type: y
  } = e, m = {
    root: ["root", `color${xe(n)}`, r && "disabled", o && "error", c && "fullWidth", a && "focused", l && "formControl", h && h !== "medium" && `size${xe(h)}`, d && "multiline", g && "adornedStart", s && "adornedEnd", u && "hiddenLabel", f && "readOnly"],
    input: ["input", r && "disabled", y === "search" && "inputTypeSearch", d && "inputMultiline", h === "small" && "inputSizeSmall", u && "inputHiddenLabel", g && "inputAdornedStart", s && "inputAdornedEnd", f && "readOnly"]
  };
  return Ct(m, e$, t);
}, Ky = ke("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: Yy
})(Ke(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${ka.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), Xy = ke("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: Gy
})(Ke(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, r = {
    opacity: "0 !important"
  }, o = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${ka.formControl} &`]: {
      "&::-webkit-input-placeholder": r,
      "&::-moz-placeholder": r,
      // Firefox 19+
      "&::-ms-input-placeholder": r,
      // Edge
      "&:focus::-webkit-input-placeholder": o,
      "&:focus::-moz-placeholder": o,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": o
      // Edge
    },
    [`&.${ka.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: s
      }) => !s.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), im = nd({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), Qy = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Tt({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": o,
    autoComplete: s,
    autoFocus: a,
    className: l,
    color: c,
    components: u = {},
    componentsProps: d = {},
    defaultValue: f,
    disabled: h,
    disableInjectingGlobalStyles: g,
    endAdornment: y,
    error: m,
    fullWidth: b = !1,
    id: x,
    inputComponent: E = "input",
    inputProps: w = {},
    inputRef: T,
    margin: v,
    maxRows: S,
    minRows: R,
    multiline: $ = !1,
    name: I,
    onBlur: p,
    onChange: O,
    onClick: P,
    onFocus: A,
    onKeyDown: D,
    onKeyUp: _,
    placeholder: M,
    readOnly: V,
    renderSuffix: Y,
    rows: U,
    size: j,
    slotProps: W = {},
    slots: ee = {},
    startAdornment: K,
    type: oe = "text",
    value: ne,
    ...se
  } = r, de = w.value != null ? w.value : ne, {
    current: X
  } = C.useRef(de != null), ae = C.useRef(), Q = C.useCallback((re) => {
    process.env.NODE_ENV !== "production" && re && re.nodeName !== "INPUT" && !re.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), ie = nn(ae, T, w.ref, Q), [F, he] = C.useState(!1), fe = Tl();
  process.env.NODE_ENV !== "production" && C.useEffect(() => {
    if (fe)
      return fe.registerEffect();
  }, [fe]);
  const Se = Hy({
    props: r,
    muiFormControl: fe,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  Se.focused = fe ? fe.focused : F, C.useEffect(() => {
    !fe && h && F && (he(!1), p && p());
  }, [fe, h, F, p]);
  const Le = fe && fe.onFilled, Ae = fe && fe.onEmpty, Ie = C.useCallback((re) => {
    ZR(re) ? Le && Le() : Ae && Ae();
  }, [Le, Ae]);
  dr(() => {
    X && Ie({
      value: de
    });
  }, [de, Ie, X]);
  const Re = (re) => {
    A && A(re), w.onFocus && w.onFocus(re), fe && fe.onFocus ? fe.onFocus(re) : he(!0);
  }, Be = (re) => {
    p && p(re), w.onBlur && w.onBlur(re), fe && fe.onBlur ? fe.onBlur(re) : he(!1);
  }, Oe = (re, ...Z) => {
    if (!X) {
      const te = re.target || ae.current;
      if (te == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : Er(1));
      Ie({
        value: te.value
      });
    }
    w.onChange && w.onChange(re, ...Z), O && O(re, ...Z);
  };
  C.useEffect(() => {
    Ie(ae.current);
  }, []);
  const N = (re) => {
    ae.current && re.currentTarget === re.target && ae.current.focus(), P && P(re);
  };
  let q = E, J = w;
  $ && q === "input" && (U ? (process.env.NODE_ENV !== "production" && (R || S) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), J = {
    type: void 0,
    minRows: U,
    maxRows: U,
    ...J
  }) : J = {
    type: void 0,
    maxRows: S,
    minRows: R,
    ...J
  }, q = qy);
  const H = (re) => {
    Ie(re.animationName === "mui-auto-fill-cancel" ? ae.current : {
      value: "x"
    });
  };
  C.useEffect(() => {
    fe && fe.setAdornedStart(!!K);
  }, [fe, K]);
  const B = {
    ...r,
    color: Se.color || "primary",
    disabled: Se.disabled,
    endAdornment: y,
    error: Se.error,
    focused: Se.focused,
    formControl: fe,
    fullWidth: b,
    hiddenLabel: Se.hiddenLabel,
    multiline: $,
    size: Se.size,
    startAdornment: K,
    type: oe
  }, z = t$(B), G = ee.root || u.Root || Ky, pe = W.root || d.root || {}, me = ee.input || u.Input || Xy;
  return J = {
    ...J,
    ...W.input ?? d.input
  }, /* @__PURE__ */ Pe(C.Fragment, {
    children: [!g && typeof im == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (om || (om = /* @__PURE__ */ k(im, {}))), /* @__PURE__ */ Pe(G, {
      ...pe,
      ref: n,
      onClick: N,
      ...se,
      ...!du(G) && {
        ownerState: {
          ...B,
          ...pe.ownerState
        }
      },
      className: Ee(z.root, pe.className, l, V && "MuiInputBase-readOnly"),
      children: [K, /* @__PURE__ */ k(_d.Provider, {
        value: null,
        children: /* @__PURE__ */ k(me, {
          "aria-invalid": Se.error,
          "aria-describedby": o,
          autoComplete: s,
          autoFocus: a,
          defaultValue: f,
          disabled: Se.disabled,
          id: x,
          onAnimationStart: H,
          name: I,
          placeholder: M,
          readOnly: V,
          required: Se.required,
          rows: U,
          value: de,
          onKeyDown: D,
          onKeyUp: _,
          type: oe,
          ...J,
          ...!du(me) && {
            as: q,
            ownerState: {
              ...B,
              ...J.ownerState
            }
          },
          ref: ie,
          className: Ee(z.input, J.className, V && "MuiInputBase-readOnly"),
          onBlur: Be,
          onChange: Oe,
          onFocus: Re
        })
      }), y, Y ? Y({
        ...Se,
        startAdornment: K
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (Qy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": i.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: qu,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ir,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: i.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: i.func,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * @ignore
   */
  onKeyUp: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * @ignore
   */
  renderSuffix: i.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The size of the component.
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
function n$(e) {
  return gt("MuiOutlinedInput", e);
}
const Qn = {
  ...ka,
  ...wt("MuiOutlinedInput", ["root", "notchedOutline", "input"])
}, r$ = (e) => {
  const {
    classes: t
  } = e, r = Ct({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, n$, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...r
  };
}, o$ = ke(Ky, {
  shouldForwardProp: (e) => gr(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: Yy
})(Ke(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${Qn.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${Qn.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${Qn.focused} .${Qn.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(cn()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${Qn.focused} .${Qn.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${Qn.error} .${Qn.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${Qn.disabled} .${Qn.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: r
      }) => n.multiline && r === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), i$ = ke(Uy, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(Ke(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), s$ = ke(Xy, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: Gy
})(Ke(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), Dd = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var r;
  const o = Tt({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: s = {},
    fullWidth: a = !1,
    inputComponent: l = "input",
    label: c,
    multiline: u = !1,
    notched: d,
    slots: f = {},
    type: h = "text",
    ...g
  } = o, y = r$(o), m = Tl(), b = Hy({
    props: o,
    muiFormControl: m,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), x = {
    ...o,
    color: b.color || "primary",
    disabled: b.disabled,
    error: b.error,
    focused: b.focused,
    formControl: m,
    fullWidth: a,
    hiddenLabel: b.hiddenLabel,
    multiline: u,
    size: b.size,
    type: h
  }, E = f.root ?? s.Root ?? o$, w = f.input ?? s.Input ?? s$;
  return /* @__PURE__ */ k(Qy, {
    slots: {
      root: E,
      input: w
    },
    renderSuffix: (T) => /* @__PURE__ */ k(i$, {
      ownerState: x,
      className: y.notchedOutline,
      label: c != null && c !== "" && b.required ? r || (r = /* @__PURE__ */ Pe(C.Fragment, {
        children: [c, " ", "*"]
      })) : c,
      notched: typeof d < "u" ? d : !!(T.startAdornment || T.filled || T.focused)
    }),
    fullWidth: a,
    inputComponent: l,
    multiline: u,
    ref: n,
    type: h,
    ...g,
    classes: {
      ...y,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (Dd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Ir,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: i.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: i.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
Dd.muiName = "Input";
function Jy({
  isDisabled: e,
  isError: t
}) {
  return {
    inputCommonStyle: ln(
      () => ({
        borderRadius: "8px",
        minWidth: "200px",
        "& input": {
          cursor: e ? "not-allowed" : "text",
          color: (r) => e ? "disabled" : t ? r.palette.error.main : "inherit"
        }
      }),
      [e, t]
    )
  };
}
const Cl = _e(
  ({
    label: e = "",
    tooltip: t,
    fullWidth: n = !1,
    value: r,
    onChange: o,
    isRequired: s,
    isDisabled: a,
    isError: l,
    errorMessage: c = "",
    sx: u,
    ...d
  }) => {
    const f = mh(), { inputCommonStyle: h } = Jy({
      isDisabled: a,
      isError: l
    }), { textCommonStyles: g } = pl({
      isTitle: !1,
      isLabel: !0,
      textColor: a ? "disabled" : l ? "error" : "auto"
    });
    return /* @__PURE__ */ Pe(Kt, { gap: 0, width: n ? "100%" : "auto", children: [
      e && /* @__PURE__ */ k(
        ni,
        {
          label: e,
          elementId: f,
          tooltip: t,
          isRequired: s,
          isDisabled: a,
          isError: l
        }
      ),
      /* @__PURE__ */ k(
        Dd,
        {
          id: f,
          autoComplete: "off",
          fullWidth: n,
          size: "small",
          error: l,
          disabled: a,
          value: r,
          onChange: (y) => o(y.target.value),
          sx: { ...h, ...u },
          ...d
        }
      ),
      l && /* @__PURE__ */ k(
        yn,
        {
          text: l ? c : "",
          isLabel: !0,
          sx: { ...g, minHeight: "24px" }
        }
      )
    ] });
  }
);
Cl.displayName = "Input";
const Zy = _e(
  ({ isError: e, fullWidth: t, value: n = 0, onChange: r, sx: o, min: s = 0, max: a = 1e3, step: l = 1, ...c }) => {
    const u = tn(
      (d) => {
        if (!d || isNaN(parseInt(d, 10))) {
          r(s);
          return;
        }
        const f = Math.abs(parseInt(d, 10));
        r(f);
      },
      [s, r]
    );
    return /* @__PURE__ */ k(
      Cl,
      {
        type: "number",
        fullWidth: t,
        isError: e,
        value: Math.abs(n).toString(),
        onChange: u,
        sx: {
          ...o
        },
        slotProps: {
          input: {
            type: "number",
            min: s,
            max: a,
            step: l
          }
        },
        ...c
      }
    );
  }
);
Zy.displayName = "Number";
function ho(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((r) => n.searchParams.append("args[]", r)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
const Ol = "$$material";
function Ia(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((r) => n.searchParams.append("args[]", r)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
function a$(e) {
  return e == null || Object.keys(e).length === 0;
}
function eb(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e;
  return /* @__PURE__ */ k(_h, {
    styles: typeof t == "function" ? (o) => t(a$(o) ? n : o) : t
  });
}
process.env.NODE_ENV !== "production" && (eb.propTypes = {
  defaultTheme: i.object,
  styles: i.oneOfType([i.array, i.string, i.object, i.func])
});
/**
 * @mui/styled-engine v7.0.2
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function tb(e, t) {
  const n = ga(e, t);
  return process.env.NODE_ENV !== "production" ? (...r) => {
    const o = typeof e == "string" ? `"${e}"` : "component";
    return r.length === 0 ? console.error([`MUI: Seems like you called \`styled(${o})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : r.some((s) => s === void 0) && console.error(`MUI: the styled(${o})(...args) API requires all its args to be defined.`), n(...r);
  } : n;
}
function l$(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const sm = [];
function am(e) {
  return sm[0] = e, ii(sm);
}
function Br(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function nb(e) {
  if (/* @__PURE__ */ C.isValidElement(e) || On.isValidElementType(e) || !Br(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = nb(e[n]);
  }), t;
}
function fo(e, t, n = {
  clone: !0
}) {
  const r = n.clone ? {
    ...e
  } : e;
  return Br(e) && Br(t) && Object.keys(t).forEach((o) => {
    /* @__PURE__ */ C.isValidElement(t[o]) || On.isValidElementType(t[o]) ? r[o] = t[o] : Br(t[o]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, o) && Br(e[o]) ? r[o] = fo(e[o], t[o], n) : n.clone ? r[o] = Br(t[o]) ? nb(t[o]) : t[o] : r[o] = t[o];
  }), r;
}
const c$ = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, r) => n.val - r.val), t.reduce((n, r) => ({
    ...n,
    [r.key]: r.val
  }), {});
};
function u$(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: r = 5,
    ...o
  } = e, s = c$(t), a = Object.keys(s);
  function l(h) {
    return `@media (min-width:${typeof t[h] == "number" ? t[h] : h}${n})`;
  }
  function c(h) {
    return `@media (max-width:${(typeof t[h] == "number" ? t[h] : h) - r / 100}${n})`;
  }
  function u(h, g) {
    const y = a.indexOf(g);
    return `@media (min-width:${typeof t[h] == "number" ? t[h] : h}${n}) and (max-width:${(y !== -1 && typeof t[a[y]] == "number" ? t[a[y]] : g) - r / 100}${n})`;
  }
  function d(h) {
    return a.indexOf(h) + 1 < a.length ? u(h, a[a.indexOf(h) + 1]) : l(h);
  }
  function f(h) {
    const g = a.indexOf(h);
    return g === 0 ? l(a[1]) : g === a.length - 1 ? c(a[g]) : u(h, a[a.indexOf(h) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: a,
    values: s,
    up: l,
    down: c,
    between: u,
    only: d,
    not: f,
    unit: n,
    ...o
  };
}
function d$(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((r) => r.startsWith("@container")).sort((r, o) => {
    var a, l;
    const s = /min-width:\s*([0-9.]+)/;
    return +(((a = r.match(s)) == null ? void 0 : a[1]) || 0) - +(((l = o.match(s)) == null ? void 0 : l[1]) || 0);
  });
  return n.length ? n.reduce((r, o) => {
    const s = t[o];
    return delete r[o], r[o] = s, r;
  }, {
    ...t
  }) : t;
}
function f$(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function p$(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : Ia(18, `(${t})`));
    return null;
  }
  const [, r, o] = n, s = Number.isNaN(+r) ? r || 0 : +r;
  return e.containerQueries(o).up(s);
}
function m$(e) {
  const t = (s, a) => s.replace("@media", a ? `@container ${a}` : "@container");
  function n(s, a) {
    s.up = (...l) => t(e.breakpoints.up(...l), a), s.down = (...l) => t(e.breakpoints.down(...l), a), s.between = (...l) => t(e.breakpoints.between(...l), a), s.only = (...l) => t(e.breakpoints.only(...l), a), s.not = (...l) => {
      const c = t(e.breakpoints.not(...l), a);
      return c.includes("not all and") ? c.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : c;
    };
  }
  const r = {}, o = (s) => (n(r, s), r);
  return n(o), {
    ...e,
    containerQueries: o
  };
}
const h$ = {
  borderRadius: 4
}, Zr = process.env.NODE_ENV !== "production" ? i.oneOfType([i.number, i.string, i.object, i.array]) : {};
function qi(e, t) {
  return t ? fo(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const Rl = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, lm = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${Rl[e]}px)`
}, g$ = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : Rl[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function Pr(e, t, n) {
  const r = e.theme || {};
  if (Array.isArray(t)) {
    const s = r.breakpoints || lm;
    return t.reduce((a, l, c) => (a[s.up(s.keys[c])] = n(t[c]), a), {});
  }
  if (typeof t == "object") {
    const s = r.breakpoints || lm;
    return Object.keys(t).reduce((a, l) => {
      if (f$(s.keys, l)) {
        const c = p$(r.containerQueries ? r : g$, l);
        c && (a[c] = n(t[l], l));
      } else if (Object.keys(s.values || Rl).includes(l)) {
        const c = s.up(l);
        a[c] = n(t[l], l);
      } else {
        const c = l;
        a[c] = t[c];
      }
      return a;
    }, {});
  }
  return n(t);
}
function y$(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((r, o) => {
    const s = e.up(o);
    return r[s] = {}, r;
  }, {})) || {};
}
function b$(e, t) {
  return e.reduce((n, r) => {
    const o = n[r];
    return (!o || Object.keys(o).length === 0) && delete n[r], n;
  }, t);
}
function Bd(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : Ia(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function $l(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const r = `vars.${t}`.split(".").reduce((o, s) => o && o[s] ? o[s] : null, e);
    if (r != null)
      return r;
  }
  return t.split(".").reduce((r, o) => r && r[o] != null ? r[o] : null, e);
}
function Na(e, t, n, r = n) {
  let o;
  return typeof e == "function" ? o = e(n) : Array.isArray(e) ? o = e[n] || r : o = $l(e, n) || r, t && (o = t(o, r, e)), o;
}
function _t(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: r,
    transform: o
  } = e, s = (a) => {
    if (a[t] == null)
      return null;
    const l = a[t], c = a.theme, u = $l(c, r) || {};
    return Pr(a, l, (f) => {
      let h = Na(u, o, f);
      return f === h && typeof f == "string" && (h = Na(u, o, `${t}${f === "default" ? "" : Bd(f)}`, f)), n === !1 ? h : {
        [n]: h
      };
    });
  };
  return s.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: Zr
  } : {}, s.filterProps = [t], s;
}
function v$(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const x$ = {
  m: "margin",
  p: "padding"
}, w$ = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, cm = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, T$ = v$((e) => {
  if (e.length > 2)
    if (cm[e])
      e = cm[e];
    else
      return [e];
  const [t, n] = e.split(""), r = x$[t], o = w$[n] || "";
  return Array.isArray(o) ? o.map((s) => r + s) : [r + o];
}), Pl = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], kl = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], S$ = [...Pl, ...kl];
function Ts(e, t, n, r) {
  const o = $l(e, t, !0) ?? n;
  return typeof o == "number" || typeof o == "string" ? (s) => typeof s == "string" ? s : (process.env.NODE_ENV !== "production" && typeof s != "number" && console.error(`MUI: Expected ${r} argument to be a number or a string, got ${s}.`), typeof o == "string" ? o.startsWith("var(") && s === 0 ? 0 : o.startsWith("var(") && s === 1 ? o : `calc(${s} * ${o})` : o * s) : Array.isArray(o) ? (s) => {
    if (typeof s == "string")
      return s;
    const a = Math.abs(s);
    process.env.NODE_ENV !== "production" && (Number.isInteger(a) ? a > o.length - 1 && console.error([`MUI: The value provided (${a}) overflows.`, `The supported values are: ${JSON.stringify(o)}.`, `${a} > ${o.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const l = o[a];
    return s >= 0 ? l : typeof l == "number" ? -l : typeof l == "string" && l.startsWith("var(") ? `calc(-1 * ${l})` : `-${l}`;
  } : typeof o == "function" ? o : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${o}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function Fd(e) {
  return Ts(e, "spacing", 8, "spacing");
}
function Ss(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function E$(e, t) {
  return (n) => e.reduce((r, o) => (r[o] = Ss(t, n), r), {});
}
function C$(e, t, n, r) {
  if (!t.includes(n))
    return null;
  const o = T$(n), s = E$(o, r), a = e[n];
  return Pr(e, a, s);
}
function rb(e, t) {
  const n = Fd(e.theme);
  return Object.keys(e).map((r) => C$(e, t, r, n)).reduce(qi, {});
}
function $t(e) {
  return rb(e, Pl);
}
$t.propTypes = process.env.NODE_ENV !== "production" ? Pl.reduce((e, t) => (e[t] = Zr, e), {}) : {};
$t.filterProps = Pl;
function Pt(e) {
  return rb(e, kl);
}
Pt.propTypes = process.env.NODE_ENV !== "production" ? kl.reduce((e, t) => (e[t] = Zr, e), {}) : {};
Pt.filterProps = kl;
process.env.NODE_ENV !== "production" && S$.reduce((e, t) => (e[t] = Zr, e), {});
function ob(e = 8, t = Fd({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...r) => (process.env.NODE_ENV !== "production" && (r.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${r.length}`)), (r.length === 0 ? [1] : r).map((s) => {
    const a = t(s);
    return typeof a == "number" ? `${a}px` : a;
  }).join(" "));
  return n.mui = !0, n;
}
function Il(...e) {
  const t = e.reduce((r, o) => (o.filterProps.forEach((s) => {
    r[s] = o;
  }), r), {}), n = (r) => Object.keys(r).reduce((o, s) => t[s] ? qi(o, t[s](r)) : o, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((r, o) => Object.assign(r, o.propTypes), {}) : {}, n.filterProps = e.reduce((r, o) => r.concat(o.filterProps), []), n;
}
function Nn(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function Ln(e, t) {
  return _t({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const O$ = Ln("border", Nn), R$ = Ln("borderTop", Nn), $$ = Ln("borderRight", Nn), P$ = Ln("borderBottom", Nn), k$ = Ln("borderLeft", Nn), I$ = Ln("borderColor"), N$ = Ln("borderTopColor"), A$ = Ln("borderRightColor"), M$ = Ln("borderBottomColor"), _$ = Ln("borderLeftColor"), D$ = Ln("outline", Nn), B$ = Ln("outlineColor"), Nl = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = Ts(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (r) => ({
      borderRadius: Ss(t, r)
    });
    return Pr(e, e.borderRadius, n);
  }
  return null;
};
Nl.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: Zr
} : {};
Nl.filterProps = ["borderRadius"];
Il(O$, R$, $$, P$, k$, I$, N$, A$, M$, _$, Nl, D$, B$);
const Al = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = Ts(e.theme, "spacing", 8, "gap"), n = (r) => ({
      gap: Ss(t, r)
    });
    return Pr(e, e.gap, n);
  }
  return null;
};
Al.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: Zr
} : {};
Al.filterProps = ["gap"];
const Ml = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = Ts(e.theme, "spacing", 8, "columnGap"), n = (r) => ({
      columnGap: Ss(t, r)
    });
    return Pr(e, e.columnGap, n);
  }
  return null;
};
Ml.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: Zr
} : {};
Ml.filterProps = ["columnGap"];
const _l = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = Ts(e.theme, "spacing", 8, "rowGap"), n = (r) => ({
      rowGap: Ss(t, r)
    });
    return Pr(e, e.rowGap, n);
  }
  return null;
};
_l.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: Zr
} : {};
_l.filterProps = ["rowGap"];
const F$ = _t({
  prop: "gridColumn"
}), j$ = _t({
  prop: "gridRow"
}), L$ = _t({
  prop: "gridAutoFlow"
}), V$ = _t({
  prop: "gridAutoColumns"
}), z$ = _t({
  prop: "gridAutoRows"
}), W$ = _t({
  prop: "gridTemplateColumns"
}), U$ = _t({
  prop: "gridTemplateRows"
}), H$ = _t({
  prop: "gridTemplateAreas"
}), q$ = _t({
  prop: "gridArea"
});
Il(Al, Ml, _l, F$, j$, L$, V$, z$, W$, U$, H$, q$);
function zo(e, t) {
  return t === "grey" ? t : e;
}
const Y$ = _t({
  prop: "color",
  themeKey: "palette",
  transform: zo
}), G$ = _t({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: zo
}), K$ = _t({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: zo
});
Il(Y$, G$, K$);
function wn(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const X$ = _t({
  prop: "width",
  transform: wn
}), jd = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var o, s, a, l, c;
      const r = ((a = (s = (o = e.theme) == null ? void 0 : o.breakpoints) == null ? void 0 : s.values) == null ? void 0 : a[n]) || Rl[n];
      return r ? ((c = (l = e.theme) == null ? void 0 : l.breakpoints) == null ? void 0 : c.unit) !== "px" ? {
        maxWidth: `${r}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: r
      } : {
        maxWidth: wn(n)
      };
    };
    return Pr(e, e.maxWidth, t);
  }
  return null;
};
jd.filterProps = ["maxWidth"];
const Q$ = _t({
  prop: "minWidth",
  transform: wn
}), J$ = _t({
  prop: "height",
  transform: wn
}), Z$ = _t({
  prop: "maxHeight",
  transform: wn
}), eP = _t({
  prop: "minHeight",
  transform: wn
});
_t({
  prop: "size",
  cssProperty: "width",
  transform: wn
});
_t({
  prop: "size",
  cssProperty: "height",
  transform: wn
});
const tP = _t({
  prop: "boxSizing"
});
Il(X$, jd, Q$, J$, Z$, eP, tP);
const Es = {
  // borders
  border: {
    themeKey: "borders",
    transform: Nn
  },
  borderTop: {
    themeKey: "borders",
    transform: Nn
  },
  borderRight: {
    themeKey: "borders",
    transform: Nn
  },
  borderBottom: {
    themeKey: "borders",
    transform: Nn
  },
  borderLeft: {
    themeKey: "borders",
    transform: Nn
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: Nn
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: Nl
  },
  // palette
  color: {
    themeKey: "palette",
    transform: zo
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: zo
  },
  backgroundColor: {
    themeKey: "palette",
    transform: zo
  },
  // spacing
  p: {
    style: Pt
  },
  pt: {
    style: Pt
  },
  pr: {
    style: Pt
  },
  pb: {
    style: Pt
  },
  pl: {
    style: Pt
  },
  px: {
    style: Pt
  },
  py: {
    style: Pt
  },
  padding: {
    style: Pt
  },
  paddingTop: {
    style: Pt
  },
  paddingRight: {
    style: Pt
  },
  paddingBottom: {
    style: Pt
  },
  paddingLeft: {
    style: Pt
  },
  paddingX: {
    style: Pt
  },
  paddingY: {
    style: Pt
  },
  paddingInline: {
    style: Pt
  },
  paddingInlineStart: {
    style: Pt
  },
  paddingInlineEnd: {
    style: Pt
  },
  paddingBlock: {
    style: Pt
  },
  paddingBlockStart: {
    style: Pt
  },
  paddingBlockEnd: {
    style: Pt
  },
  m: {
    style: $t
  },
  mt: {
    style: $t
  },
  mr: {
    style: $t
  },
  mb: {
    style: $t
  },
  ml: {
    style: $t
  },
  mx: {
    style: $t
  },
  my: {
    style: $t
  },
  margin: {
    style: $t
  },
  marginTop: {
    style: $t
  },
  marginRight: {
    style: $t
  },
  marginBottom: {
    style: $t
  },
  marginLeft: {
    style: $t
  },
  marginX: {
    style: $t
  },
  marginY: {
    style: $t
  },
  marginInline: {
    style: $t
  },
  marginInlineStart: {
    style: $t
  },
  marginInlineEnd: {
    style: $t
  },
  marginBlock: {
    style: $t
  },
  marginBlockStart: {
    style: $t
  },
  marginBlockEnd: {
    style: $t
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: Al
  },
  rowGap: {
    style: _l
  },
  columnGap: {
    style: Ml
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: wn
  },
  maxWidth: {
    style: jd
  },
  minWidth: {
    transform: wn
  },
  height: {
    transform: wn
  },
  maxHeight: {
    transform: wn
  },
  minHeight: {
    transform: wn
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function nP(...e) {
  const t = e.reduce((r, o) => r.concat(Object.keys(o)), []), n = new Set(t);
  return e.every((r) => n.size === Object.keys(r).length);
}
function rP(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function oP() {
  function e(n, r, o, s) {
    const a = {
      [n]: r,
      theme: o
    }, l = s[n];
    if (!l)
      return {
        [n]: r
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: d,
      style: f
    } = l;
    if (r == null)
      return null;
    if (u === "typography" && r === "inherit")
      return {
        [n]: r
      };
    const h = $l(o, u) || {};
    return f ? f(a) : Pr(a, r, (y) => {
      let m = Na(h, d, y);
      return y === m && typeof y == "string" && (m = Na(h, d, `${n}${y === "default" ? "" : Bd(y)}`, y)), c === !1 ? m : {
        [c]: m
      };
    });
  }
  function t(n) {
    const {
      sx: r,
      theme: o = {}
    } = n || {};
    if (!r)
      return null;
    const s = o.unstable_sxConfig ?? Es;
    function a(l) {
      let c = l;
      if (typeof l == "function")
        c = l(o);
      else if (typeof l != "object")
        return l;
      if (!c)
        return null;
      const u = y$(o.breakpoints), d = Object.keys(u);
      let f = u;
      return Object.keys(c).forEach((h) => {
        const g = rP(c[h], o);
        if (g != null)
          if (typeof g == "object")
            if (s[h])
              f = qi(f, e(h, g, o, s));
            else {
              const y = Pr({
                theme: o
              }, g, (m) => ({
                [h]: m
              }));
              nP(y, g) ? f[h] = t({
                sx: g,
                theme: o
              }) : f = qi(f, y);
            }
          else
            f = qi(f, e(h, g, o, s));
      }), d$(o, b$(d, f));
    }
    return Array.isArray(r) ? r.map(a) : a(r);
  }
  return t;
}
const go = oP();
go.filterProps = ["sx"];
function iP(e, t) {
  var r;
  const n = this;
  if (n.vars) {
    if (!((r = n.colorSchemes) != null && r[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let o = n.getColorSchemeSelector(e);
    return o === "&" ? t : ((o.includes("data-") || o.includes(".")) && (o = `*:where(${o.replace(/\s*&$/, "")}) &`), {
      [o]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function Ld(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: r = {},
    spacing: o,
    shape: s = {},
    ...a
  } = e, l = u$(n), c = ob(o);
  let u = fo({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...r
    },
    spacing: c,
    shape: {
      ...h$,
      ...s
    }
  }, a);
  return u = m$(u), u.applyStyles = iP, u = t.reduce((d, f) => fo(d, f), u), u.unstable_sxConfig = {
    ...Es,
    ...a == null ? void 0 : a.unstable_sxConfig
  }, u.unstable_sx = function(f) {
    return go({
      sx: f,
      theme: this
    });
  }, u;
}
function sP(e) {
  return Object.keys(e).length === 0;
}
function aP(e = null) {
  const t = C.useContext(si);
  return !t || sP(t) ? e : t;
}
const lP = Ld();
function Vd(e = lP) {
  return aP(e);
}
function ib({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const r = Vd(n), o = typeof e == "function" ? e(t && r[t] || r) : e;
  return /* @__PURE__ */ k(eb, {
    styles: o
  });
}
process.env.NODE_ENV !== "production" && (ib.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: i.object,
  /**
   * @ignore
   */
  styles: i.oneOfType([i.array, i.func, i.number, i.object, i.string, i.bool]),
  /**
   * @ignore
   */
  themeId: i.string
});
const cP = (e) => {
  var r;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((r = e == null ? void 0 : e.theme) == null ? void 0 : r.unstable_sxConfig) ?? Es;
  return Object.keys(e).forEach((o) => {
    n[o] ? t.systemProps[o] = e[o] : t.otherProps[o] = e[o];
  }), t;
};
function uP(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: r,
    otherProps: o
  } = cP(n);
  let s;
  return Array.isArray(t) ? s = [r, ...t] : typeof t == "function" ? s = (...a) => {
    const l = t(...a);
    return Br(l) ? {
      ...r,
      ...l
    } : r;
  } : s = {
    ...r,
    ...t
  }, {
    ...o,
    sx: s
  };
}
function dP(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: r = "MuiBox-root",
    generateClassName: o
  } = e, s = tb("div", {
    shouldForwardProp: (l) => l !== "theme" && l !== "sx" && l !== "as"
  })(go);
  return /* @__PURE__ */ C.forwardRef(function(c, u) {
    const d = Vd(n), {
      className: f,
      component: h = "div",
      ...g
    } = uP(c);
    return /* @__PURE__ */ k(s, {
      as: h,
      ref: u,
      className: Ee(f, o ? o(r) : r),
      theme: t && d[t] || d,
      ...g
    });
  });
}
function sb(e, t = "") {
  return e.displayName || e.name || t;
}
function um(e, t, n) {
  const r = sb(t);
  return e.displayName || (r !== "" ? `${n}(${r})` : n);
}
function fP(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return sb(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case On.ForwardRef:
          return um(e, e.render, "ForwardRef");
        case On.Memo:
          return um(e, e.type, "memo");
        default:
          return;
      }
  }
}
function ab(e) {
  const {
    variants: t,
    ...n
  } = e, r = {
    variants: t,
    style: am(n),
    isProcessed: !0
  };
  return r.style === n || t && t.forEach((o) => {
    typeof o.style != "function" && (o.style = am(o.style));
  }), r;
}
const pP = Ld();
function bc(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function mP(e) {
  return e ? (t, n) => n[e] : null;
}
function hP(e, t, n) {
  e.theme = vP(e.theme) ? n : e.theme[t] || e.theme;
}
function ua(e, t) {
  const n = typeof t == "function" ? t(e) : t;
  if (Array.isArray(n))
    return n.flatMap((r) => ua(e, r));
  if (Array.isArray(n == null ? void 0 : n.variants)) {
    let r;
    if (n.isProcessed)
      r = n.style;
    else {
      const {
        variants: o,
        ...s
      } = n;
      r = s;
    }
    return lb(e, n.variants, [r]);
  }
  return n != null && n.isProcessed ? n.style : n;
}
function lb(e, t, n = []) {
  var o;
  let r;
  e: for (let s = 0; s < t.length; s += 1) {
    const a = t[s];
    if (typeof a.props == "function") {
      if (r ?? (r = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !a.props(r))
        continue;
    } else
      for (const l in a.props)
        if (e[l] !== a.props[l] && ((o = e.ownerState) == null ? void 0 : o[l]) !== a.props[l])
          continue e;
    typeof a.style == "function" ? (r ?? (r = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(a.style(r))) : n.push(a.style);
  }
  return n;
}
function gP(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = pP,
    rootShouldForwardProp: r = bc,
    slotShouldForwardProp: o = bc
  } = e;
  function s(l) {
    hP(l, t, n);
  }
  return (l, c = {}) => {
    l$(l, (v) => v.filter((S) => S !== go));
    const {
      name: u,
      slot: d,
      skipVariantsResolver: f,
      skipSx: h,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: g = mP(cb(d)),
      ...y
    } = c, m = f !== void 0 ? f : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      d && d !== "Root" && d !== "root" || !1
    ), b = h || !1;
    let x = bc;
    d === "Root" || d === "root" ? x = r : d ? x = o : xP(l) && (x = void 0);
    const E = tb(l, {
      shouldForwardProp: x,
      label: bP(u, d),
      ...y
    }), w = (v) => {
      if (typeof v == "function" && v.__emotion_real !== v)
        return function(R) {
          return ua(R, v);
        };
      if (Br(v)) {
        const S = ab(v);
        return S.variants ? function($) {
          return ua($, S);
        } : S.style;
      }
      return v;
    }, T = (...v) => {
      const S = [], R = v.map(w), $ = [];
      if (S.push(s), u && g && $.push(function(P) {
        var M, V;
        const D = (V = (M = P.theme.components) == null ? void 0 : M[u]) == null ? void 0 : V.styleOverrides;
        if (!D)
          return null;
        const _ = {};
        for (const Y in D)
          _[Y] = ua(P, D[Y]);
        return g(P, _);
      }), u && !m && $.push(function(P) {
        var _, M;
        const A = P.theme, D = (M = (_ = A == null ? void 0 : A.components) == null ? void 0 : _[u]) == null ? void 0 : M.variants;
        return D ? lb(P, D) : null;
      }), b || $.push(go), Array.isArray(R[0])) {
        const O = R.shift(), P = new Array(S.length).fill(""), A = new Array($.length).fill("");
        let D;
        D = [...P, ...O, ...A], D.raw = [...P, ...O.raw, ...A], S.unshift(D);
      }
      const I = [...S, ...R, ...$], p = E(...I);
      return l.muiName && (p.muiName = l.muiName), process.env.NODE_ENV !== "production" && (p.displayName = yP(u, d, l)), p;
    };
    return E.withConfig && (T.withConfig = E.withConfig), T;
  };
}
function yP(e, t, n) {
  return e ? `${e}${Bd(t || "")}` : `Styled(${fP(n)})`;
}
function bP(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${cb(t || "Root")}`), n;
}
function vP(e) {
  for (const t in e)
    return !1;
  return !0;
}
function xP(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function cb(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
function fu(e, t) {
  const n = {
    ...t
  };
  for (const r in e)
    if (Object.prototype.hasOwnProperty.call(e, r)) {
      const o = r;
      if (o === "components" || o === "slots")
        n[o] = {
          ...e[o],
          ...n[o]
        };
      else if (o === "componentsProps" || o === "slotProps") {
        const s = e[o], a = t[o];
        if (!a)
          n[o] = s || {};
        else if (!s)
          n[o] = a;
        else {
          n[o] = {
            ...a
          };
          for (const l in s)
            if (Object.prototype.hasOwnProperty.call(s, l)) {
              const c = l;
              n[o][c] = fu(s[c], a[c]);
            }
        }
      } else n[o] === void 0 && (n[o] = e[o]);
    }
  return n;
}
function wP(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function zd(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), wP(e, t, n);
}
function TP(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((r) => r + r)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((r, o) => o < 3 ? parseInt(r, 16) : Math.round(parseInt(r, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function Ur(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return Ur(TP(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : Ia(9, e));
  let r = e.substring(t + 1, e.length - 1), o;
  if (n === "color") {
    if (r = r.split(" "), o = r.shift(), r.length === 4 && r[3].charAt(0) === "/" && (r[3] = r[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(o))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${o}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : Ia(10, o));
  } else
    r = r.split(",");
  return r = r.map((s) => parseFloat(s)), {
    type: n,
    values: r,
    colorSpace: o
  };
}
const SP = (e) => {
  const t = Ur(e);
  return t.values.slice(0, 3).map((n, r) => t.type.includes("hsl") && r !== 0 ? `${n}%` : n).join(" ");
}, _i = (e, t) => {
  try {
    return SP(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function Dl(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: r
  } = e;
  return t.includes("rgb") ? r = r.map((o, s) => s < 3 ? parseInt(o, 10) : o) : t.includes("hsl") && (r[1] = `${r[1]}%`, r[2] = `${r[2]}%`), t.includes("color") ? r = `${n} ${r.join(" ")}` : r = `${r.join(", ")}`, `${t}(${r})`;
}
function ub(e) {
  e = Ur(e);
  const {
    values: t
  } = e, n = t[0], r = t[1] / 100, o = t[2] / 100, s = r * Math.min(o, 1 - o), a = (u, d = (u + n / 30) % 12) => o - s * Math.max(Math.min(d - 3, 9 - d, 1), -1);
  let l = "rgb";
  const c = [Math.round(a(0) * 255), Math.round(a(8) * 255), Math.round(a(4) * 255)];
  return e.type === "hsla" && (l += "a", c.push(t[3])), Dl({
    type: l,
    values: c
  });
}
function pu(e) {
  e = Ur(e);
  let t = e.type === "hsl" || e.type === "hsla" ? Ur(ub(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function dm(e, t) {
  const n = pu(e), r = pu(t);
  return (Math.max(n, r) + 0.05) / (Math.min(n, r) + 0.05);
}
function mu(e, t) {
  return e = Ur(e), t = zd(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, Dl(e);
}
function Ys(e, t, n) {
  try {
    return mu(e, t);
  } catch {
    return e;
  }
}
function Wd(e, t) {
  if (e = Ur(e), t = zd(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return Dl(e);
}
function ut(e, t, n) {
  try {
    return Wd(e, t);
  } catch {
    return e;
  }
}
function Ud(e, t) {
  if (e = Ur(e), t = zd(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return Dl(e);
}
function dt(e, t, n) {
  try {
    return Ud(e, t);
  } catch {
    return e;
  }
}
function EP(e, t = 0.15) {
  return pu(e) > 0.5 ? Wd(e, t) : Ud(e, t);
}
function Gs(e, t, n) {
  try {
    return EP(e, t);
  } catch {
    return e;
  }
}
const CP = /* @__PURE__ */ C.createContext();
process.env.NODE_ENV !== "production" && (i.node, i.bool);
const OP = () => C.useContext(CP) ?? !1, RP = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (i.node, i.object);
function $P(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  if (!t || !t.components || !t.components[n])
    return r;
  const o = t.components[n];
  return o.defaultProps ? fu(o.defaultProps, r) : !o.styleOverrides && !o.variants ? fu(o, r) : r;
}
function PP({
  props: e,
  name: t
}) {
  const n = C.useContext(RP);
  return $P({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
const fm = {
  theme: void 0
};
function kP(e) {
  let t, n;
  return function(o) {
    let s = t;
    return (s === void 0 || o.theme !== n) && (fm.theme = o.theme, s = ab(e(fm)), t = s, n = o.theme), s;
  };
}
function IP(e = "") {
  function t(...r) {
    if (!r.length)
      return "";
    const o = r[0];
    return typeof o == "string" && !o.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${o}${t(...r.slice(1))})` : `, ${o}`;
  }
  return (r, ...o) => `var(--${e ? `${e}-` : ""}${r}${t(...o)})`;
}
const pm = (e, t, n, r = []) => {
  let o = e;
  t.forEach((s, a) => {
    a === t.length - 1 ? Array.isArray(o) ? o[Number(s)] = n : o && typeof o == "object" && (o[s] = n) : o && typeof o == "object" && (o[s] || (o[s] = r.includes(s) ? [] : {}), o = o[s]);
  });
}, NP = (e, t, n) => {
  function r(o, s = [], a = []) {
    Object.entries(o).forEach(([l, c]) => {
      (!n || n && !n([...s, l])) && c != null && (typeof c == "object" && Object.keys(c).length > 0 ? r(c, [...s, l], Array.isArray(c) ? [...a, l] : a) : t([...s, l], c, a));
    });
  }
  r(e);
}, AP = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((r) => e.includes(r)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function vc(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: r
  } = t || {}, o = {}, s = {}, a = {};
  return NP(
    e,
    (l, c, u) => {
      if ((typeof c == "string" || typeof c == "number") && (!r || !r(l, c))) {
        const d = `--${n ? `${n}-` : ""}${l.join("-")}`, f = AP(l, c);
        Object.assign(o, {
          [d]: f
        }), pm(s, l, `var(${d})`, u), pm(a, l, `var(${d}, ${f})`, u);
      }
    },
    (l) => l[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: o,
    vars: s,
    varsWithDefaults: a
  };
}
function MP(e, t = {}) {
  const {
    getSelector: n = b,
    disableCssColorScheme: r,
    colorSchemeSelector: o
  } = t, {
    colorSchemes: s = {},
    components: a,
    defaultColorScheme: l = "light",
    ...c
  } = e, {
    vars: u,
    css: d,
    varsWithDefaults: f
  } = vc(c, t);
  let h = f;
  const g = {}, {
    [l]: y,
    ...m
  } = s;
  if (Object.entries(m || {}).forEach(([w, T]) => {
    const {
      vars: v,
      css: S,
      varsWithDefaults: R
    } = vc(T, t);
    h = fo(h, R), g[w] = {
      css: S,
      vars: v
    };
  }), y) {
    const {
      css: w,
      vars: T,
      varsWithDefaults: v
    } = vc(y, t);
    h = fo(h, v), g[l] = {
      css: w,
      vars: T
    };
  }
  function b(w, T) {
    var S, R;
    let v = o;
    if (o === "class" && (v = ".%s"), o === "data" && (v = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (v = `[${o}="%s"]`), w) {
      if (v === "media")
        return e.defaultColorScheme === w ? ":root" : {
          [`@media (prefers-color-scheme: ${((R = (S = s[w]) == null ? void 0 : S.palette) == null ? void 0 : R.mode) || w})`]: {
            ":root": T
          }
        };
      if (v)
        return e.defaultColorScheme === w ? `:root, ${v.replace("%s", String(w))}` : v.replace("%s", String(w));
    }
    return ":root";
  }
  return {
    vars: h,
    generateThemeVars: () => {
      let w = {
        ...u
      };
      return Object.entries(g).forEach(([, {
        vars: T
      }]) => {
        w = fo(w, T);
      }), w;
    },
    generateStyleSheets: () => {
      var $, I;
      const w = [], T = e.defaultColorScheme || "light";
      function v(p, O) {
        Object.keys(O).length && w.push(typeof p == "string" ? {
          [p]: {
            ...O
          }
        } : p);
      }
      v(n(void 0, {
        ...d
      }), d);
      const {
        [T]: S,
        ...R
      } = g;
      if (S) {
        const {
          css: p
        } = S, O = (I = ($ = s[T]) == null ? void 0 : $.palette) == null ? void 0 : I.mode, P = !r && O ? {
          colorScheme: O,
          ...p
        } : {
          ...p
        };
        v(n(T, {
          ...P
        }), P);
      }
      return Object.entries(R).forEach(([p, {
        css: O
      }]) => {
        var D, _;
        const P = (_ = (D = s[p]) == null ? void 0 : D.palette) == null ? void 0 : _.mode, A = !r && P ? {
          colorScheme: P,
          ...O
        } : {
          ...O
        };
        v(n(p, {
          ...A
        }), A);
      }), w;
    }
  };
}
function _P(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
function Fr(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function db(e) {
  if (/* @__PURE__ */ C.isValidElement(e) || On.isValidElementType(e) || !Fr(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = db(e[n]);
  }), t;
}
function ur(e, t, n = {
  clone: !0
}) {
  const r = n.clone ? {
    ...e
  } : e;
  return Fr(e) && Fr(t) && Object.keys(t).forEach((o) => {
    /* @__PURE__ */ C.isValidElement(t[o]) || On.isValidElementType(t[o]) ? r[o] = t[o] : Fr(t[o]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, o) && Fr(e[o]) ? r[o] = ur(e[o], t[o], n) : n.clone ? r[o] = Fr(t[o]) ? db(t[o]) : t[o] : r[o] = t[o];
  }), r;
}
const us = {
  black: "#000",
  white: "#fff"
}, DP = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, $o = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, Po = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, Si = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, ko = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, Io = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, No = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
};
function fb() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: us.white,
      default: us.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const BP = fb();
function pb() {
  return {
    text: {
      primary: us.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: us.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const mm = pb();
function hm(e, t, n, r) {
  const o = r.light || r, s = r.dark || r * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = Ud(e.main, o) : t === "dark" && (e.dark = Wd(e.main, s)));
}
function FP(e = "light") {
  return e === "dark" ? {
    main: ko[200],
    light: ko[50],
    dark: ko[400]
  } : {
    main: ko[700],
    light: ko[400],
    dark: ko[800]
  };
}
function jP(e = "light") {
  return e === "dark" ? {
    main: $o[200],
    light: $o[50],
    dark: $o[400]
  } : {
    main: $o[500],
    light: $o[300],
    dark: $o[700]
  };
}
function LP(e = "light") {
  return e === "dark" ? {
    main: Po[500],
    light: Po[300],
    dark: Po[700]
  } : {
    main: Po[700],
    light: Po[400],
    dark: Po[800]
  };
}
function VP(e = "light") {
  return e === "dark" ? {
    main: Io[400],
    light: Io[300],
    dark: Io[700]
  } : {
    main: Io[700],
    light: Io[500],
    dark: Io[900]
  };
}
function zP(e = "light") {
  return e === "dark" ? {
    main: No[400],
    light: No[300],
    dark: No[700]
  } : {
    main: No[800],
    light: No[500],
    dark: No[900]
  };
}
function WP(e = "light") {
  return e === "dark" ? {
    main: Si[400],
    light: Si[300],
    dark: Si[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: Si[500],
    dark: Si[900]
  };
}
function Hd(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: r = 0.2,
    ...o
  } = e, s = e.primary || FP(t), a = e.secondary || jP(t), l = e.error || LP(t), c = e.info || VP(t), u = e.success || zP(t), d = e.warning || WP(t);
  function f(m) {
    const b = dm(m, mm.text.primary) >= n ? mm.text.primary : BP.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const x = dm(m, b);
      x < 3 && console.error([`MUI: The contrast ratio of ${x}:1 for ${b} on ${m}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return b;
  }
  const h = ({
    color: m,
    name: b,
    mainShade: x = 500,
    lightShade: E = 300,
    darkShade: w = 700
  }) => {
    if (m = {
      ...m
    }, !m.main && m[x] && (m.main = m[x]), !m.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${b ? ` (${b})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${x}\` property.` : ho(11, b ? ` (${b})` : "", x));
    if (typeof m.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${b ? ` (${b})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(m.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : ho(12, b ? ` (${b})` : "", JSON.stringify(m.main)));
    return hm(m, "light", E, r), hm(m, "dark", w, r), m.contrastText || (m.contrastText = f(m.main)), m;
  };
  let g;
  return t === "light" ? g = fb() : t === "dark" && (g = pb()), process.env.NODE_ENV !== "production" && (g || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), ur({
    // A collection of common colors.
    common: {
      ...us
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: h({
      color: s,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: h({
      color: a,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: h({
      color: l,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: h({
      color: d,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: h({
      color: c,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: h({
      color: u,
      name: "success"
    }),
    // The grey colors.
    grey: DP,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: f,
    // Generate a rich color object.
    augmentColor: h,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: r,
    // The light and dark mode object.
    ...g
  }, o);
}
function UP(e) {
  const t = {};
  return Object.entries(e).forEach((r) => {
    const [o, s] = r;
    typeof s == "object" && (t[o] = `${s.fontStyle ? `${s.fontStyle} ` : ""}${s.fontVariant ? `${s.fontVariant} ` : ""}${s.fontWeight ? `${s.fontWeight} ` : ""}${s.fontStretch ? `${s.fontStretch} ` : ""}${s.fontSize || ""}${s.lineHeight ? `/${s.lineHeight} ` : ""}${s.fontFamily || ""}`);
  }), t;
}
const gm = (e) => e, HP = () => {
  let e = gm;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = gm;
    }
  };
}, mb = HP(), qP = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function jt(e, t, n = "Mui") {
  const r = qP[t];
  return r ? `${n}-${r}` : `${mb.generate(e)}-${t}`;
}
function YP(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function GP(e) {
  return Math.round(e * 1e5) / 1e5;
}
const ym = {
  textTransform: "uppercase"
}, bm = '"Roboto", "Helvetica", "Arial", sans-serif';
function KP(e, t) {
  const {
    fontFamily: n = bm,
    // The default font size of the Material Specification.
    fontSize: r = 14,
    // px
    fontWeightLight: o = 300,
    fontWeightRegular: s = 400,
    fontWeightMedium: a = 500,
    fontWeightBold: l = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: c = 16,
    // Apply the CSS properties to all the variants.
    allVariants: u,
    pxToRem: d,
    ...f
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof r != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof c != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const h = r / 14, g = d || ((b) => `${b / c * h}rem`), y = (b, x, E, w, T) => ({
    fontFamily: n,
    fontWeight: b,
    fontSize: g(x),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: E,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === bm ? {
      letterSpacing: `${GP(w / x)}em`
    } : {},
    ...T,
    ...u
  }), m = {
    h1: y(o, 96, 1.167, -1.5),
    h2: y(o, 60, 1.2, -0.5),
    h3: y(s, 48, 1.167, 0),
    h4: y(s, 34, 1.235, 0.25),
    h5: y(s, 24, 1.334, 0),
    h6: y(a, 20, 1.6, 0.15),
    subtitle1: y(s, 16, 1.75, 0.15),
    subtitle2: y(a, 14, 1.57, 0.1),
    body1: y(s, 16, 1.5, 0.15),
    body2: y(s, 14, 1.43, 0.15),
    button: y(a, 14, 1.75, 0.4, ym),
    caption: y(s, 12, 1.66, 0.4),
    overline: y(s, 12, 2.66, 1, ym),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return ur({
    htmlFontSize: c,
    pxToRem: g,
    fontFamily: n,
    fontSize: r,
    fontWeightLight: o,
    fontWeightRegular: s,
    fontWeightMedium: a,
    fontWeightBold: l,
    ...m
  }, f, {
    clone: !1
    // No need to clone deep
  });
}
const XP = 0.2, QP = 0.14, JP = 0.12;
function vt(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${XP})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${QP})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${JP})`].join(",");
}
const ZP = ["none", vt(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), vt(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), vt(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), vt(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), vt(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), vt(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), vt(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), vt(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), vt(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), vt(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), vt(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), vt(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), vt(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), vt(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), vt(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), vt(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), vt(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), vt(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), vt(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), vt(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), vt(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), vt(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), vt(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), vt(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], ek = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, tk = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function vm(e) {
  return `${Math.round(e)}ms`;
}
function nk(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function rk(e) {
  const t = {
    ...ek,
    ...e.easing
  }, n = {
    ...tk,
    ...e.duration
  };
  return {
    getAutoHeightDuration: nk,
    create: (o = ["all"], s = {}) => {
      const {
        duration: a = n.standard,
        easing: l = t.easeInOut,
        delay: c = 0,
        ...u
      } = s;
      if (process.env.NODE_ENV !== "production") {
        const d = (h) => typeof h == "string", f = (h) => !Number.isNaN(parseFloat(h));
        !d(o) && !Array.isArray(o) && console.error('MUI: Argument "props" must be a string or Array.'), !f(a) && !d(a) && console.error(`MUI: Argument "duration" must be a number or a string but found ${a}.`), d(l) || console.error('MUI: Argument "easing" must be a string.'), !f(c) && !d(c) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof s != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(u).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(u).join(",")}].`);
      }
      return (Array.isArray(o) ? o : [o]).map((d) => `${d} ${typeof a == "string" ? a : vm(a)} ${l} ${typeof c == "string" ? c : vm(c)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const ok = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function ik(e) {
  return Fr(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function hb(e = {}) {
  const t = {
    ...e
  };
  function n(r) {
    const o = Object.entries(r);
    for (let s = 0; s < o.length; s++) {
      const [a, l] = o[s];
      !ik(l) || a.startsWith("unstable_") ? delete r[a] : Fr(l) && (r[a] = {
        ...l
      }, n(r[a]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function hu(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: r = {},
    spacing: o,
    palette: s = {},
    transitions: a = {},
    typography: l = {},
    shape: c,
    ...u
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : ho(20));
  const d = Hd(s), f = Ld(e);
  let h = ur(f, {
    mixins: YP(f.breakpoints, r),
    palette: d,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: ZP.slice(),
    typography: KP(d, l),
    transitions: rk(a),
    zIndex: {
      ...ok
    }
  });
  if (h = ur(h, u), h = t.reduce((g, y) => ur(g, y), h), process.env.NODE_ENV !== "production") {
    const g = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], y = (m, b) => {
      let x;
      for (x in m) {
        const E = m[x];
        if (g.includes(x) && Object.keys(E).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const w = jt("", x);
            console.error([`MUI: The \`${b}\` component increases the CSS specificity of the \`${x}\` internal state.`, "You can not override it like this: ", JSON.stringify(m, null, 2), "", `Instead, you need to use the '&.${w}' syntax:`, JSON.stringify({
              root: {
                [`&.${w}`]: E
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          m[x] = {};
        }
      }
    };
    Object.keys(h.components).forEach((m) => {
      const b = h.components[m].styleOverrides;
      b && m.startsWith("Mui") && y(b, m);
    });
  }
  return h.unstable_sxConfig = {
    ...Es,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, h.unstable_sx = function(y) {
    return go({
      sx: y,
      theme: this
    });
  }, h.toRuntimeSource = hb, h;
}
function gu(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const sk = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = gu(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function gb(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function yb(e) {
  return e === "dark" ? sk : [];
}
function ak(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: r,
    ...o
  } = e, s = Hd(t);
  return {
    palette: s,
    opacity: {
      ...gb(s.mode),
      ...n
    },
    overlays: r || yb(s.mode),
    ...o
  };
}
function lk(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const ck = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], uk = (e) => (t, n) => {
  const r = e.rootSelector || ":root", o = e.colorSchemeSelector;
  let s = o;
  if (o === "class" && (s = ".%s"), o === "data" && (s = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (s = `[${o}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const a = {};
      return ck(e.cssVarPrefix).forEach((l) => {
        a[l] = n[l], delete n[l];
      }), s === "media" ? {
        [r]: n,
        "@media (prefers-color-scheme: dark)": {
          [r]: a
        }
      } : s ? {
        [s.replace("%s", t)]: a,
        [`${r}, ${s.replace("%s", t)}`]: n
      } : {
        [r]: {
          ...n,
          ...a
        }
      };
    }
    if (s && s !== "media")
      return `${r}, ${s.replace("%s", String(t))}`;
  } else if (t) {
    if (s === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [r]: n
        }
      };
    if (s)
      return s.replace("%s", String(t));
  }
  return r;
};
function dk(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function ue(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function Di(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : ub(e);
}
function wr(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = _i(Di(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function fk(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const Jn = (e) => {
  try {
    return e();
  } catch {
  }
}, pk = (e = "mui") => IP(e);
function xc(e, t, n, r) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const o = r === "dark" ? "dark" : "light";
  if (!n) {
    e[r] = ak({
      ...t,
      palette: {
        mode: o,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: s,
    ...a
  } = hu({
    ...n,
    palette: {
      mode: o,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[r] = {
    ...t,
    palette: s,
    opacity: {
      ...gb(o),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || yb(o)
  }, a;
}
function mk(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: r,
    disableCssColorScheme: o = !1,
    cssVarPrefix: s = "mui",
    shouldSkipGeneratingVar: a = lk,
    colorSchemeSelector: l = n.light && n.dark ? "media" : void 0,
    rootSelector: c = ":root",
    ...u
  } = e, d = Object.keys(n)[0], f = r || (n.light && d !== "light" ? "light" : d), h = pk(s), {
    [f]: g,
    light: y,
    dark: m,
    ...b
  } = n, x = {
    ...b
  };
  let E = g;
  if ((f === "dark" && !("dark" in n) || f === "light" && !("light" in n)) && (E = !0), !E)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${f}\` option is either missing or invalid.` : ho(21, f));
  const w = xc(x, E, u, f);
  y && !x.light && xc(x, y, void 0, "light"), m && !x.dark && xc(x, m, void 0, "dark");
  let T = {
    defaultColorScheme: f,
    ...w,
    cssVarPrefix: s,
    colorSchemeSelector: l,
    rootSelector: c,
    getCssVar: h,
    colorSchemes: x,
    font: {
      ...UP(w.typography),
      ...w.font
    },
    spacing: fk(u.spacing)
  };
  Object.keys(T.colorSchemes).forEach((I) => {
    const p = T.colorSchemes[I].palette, O = (P) => {
      const A = P.split("-"), D = A[1], _ = A[2];
      return h(P, p[D][_]);
    };
    if (p.mode === "light" && (ue(p.common, "background", "#fff"), ue(p.common, "onBackground", "#000")), p.mode === "dark" && (ue(p.common, "background", "#000"), ue(p.common, "onBackground", "#fff")), dk(p, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), p.mode === "light") {
      ue(p.Alert, "errorColor", ut(p.error.light, 0.6)), ue(p.Alert, "infoColor", ut(p.info.light, 0.6)), ue(p.Alert, "successColor", ut(p.success.light, 0.6)), ue(p.Alert, "warningColor", ut(p.warning.light, 0.6)), ue(p.Alert, "errorFilledBg", O("palette-error-main")), ue(p.Alert, "infoFilledBg", O("palette-info-main")), ue(p.Alert, "successFilledBg", O("palette-success-main")), ue(p.Alert, "warningFilledBg", O("palette-warning-main")), ue(p.Alert, "errorFilledColor", Jn(() => p.getContrastText(p.error.main))), ue(p.Alert, "infoFilledColor", Jn(() => p.getContrastText(p.info.main))), ue(p.Alert, "successFilledColor", Jn(() => p.getContrastText(p.success.main))), ue(p.Alert, "warningFilledColor", Jn(() => p.getContrastText(p.warning.main))), ue(p.Alert, "errorStandardBg", dt(p.error.light, 0.9)), ue(p.Alert, "infoStandardBg", dt(p.info.light, 0.9)), ue(p.Alert, "successStandardBg", dt(p.success.light, 0.9)), ue(p.Alert, "warningStandardBg", dt(p.warning.light, 0.9)), ue(p.Alert, "errorIconColor", O("palette-error-main")), ue(p.Alert, "infoIconColor", O("palette-info-main")), ue(p.Alert, "successIconColor", O("palette-success-main")), ue(p.Alert, "warningIconColor", O("palette-warning-main")), ue(p.AppBar, "defaultBg", O("palette-grey-100")), ue(p.Avatar, "defaultBg", O("palette-grey-400")), ue(p.Button, "inheritContainedBg", O("palette-grey-300")), ue(p.Button, "inheritContainedHoverBg", O("palette-grey-A100")), ue(p.Chip, "defaultBorder", O("palette-grey-400")), ue(p.Chip, "defaultAvatarColor", O("palette-grey-700")), ue(p.Chip, "defaultIconColor", O("palette-grey-700")), ue(p.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), ue(p.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), ue(p.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), ue(p.LinearProgress, "primaryBg", dt(p.primary.main, 0.62)), ue(p.LinearProgress, "secondaryBg", dt(p.secondary.main, 0.62)), ue(p.LinearProgress, "errorBg", dt(p.error.main, 0.62)), ue(p.LinearProgress, "infoBg", dt(p.info.main, 0.62)), ue(p.LinearProgress, "successBg", dt(p.success.main, 0.62)), ue(p.LinearProgress, "warningBg", dt(p.warning.main, 0.62)), ue(p.Skeleton, "bg", `rgba(${O("palette-text-primaryChannel")} / 0.11)`), ue(p.Slider, "primaryTrack", dt(p.primary.main, 0.62)), ue(p.Slider, "secondaryTrack", dt(p.secondary.main, 0.62)), ue(p.Slider, "errorTrack", dt(p.error.main, 0.62)), ue(p.Slider, "infoTrack", dt(p.info.main, 0.62)), ue(p.Slider, "successTrack", dt(p.success.main, 0.62)), ue(p.Slider, "warningTrack", dt(p.warning.main, 0.62));
      const P = Gs(p.background.default, 0.8);
      ue(p.SnackbarContent, "bg", P), ue(p.SnackbarContent, "color", Jn(() => p.getContrastText(P))), ue(p.SpeedDialAction, "fabHoverBg", Gs(p.background.paper, 0.15)), ue(p.StepConnector, "border", O("palette-grey-400")), ue(p.StepContent, "border", O("palette-grey-400")), ue(p.Switch, "defaultColor", O("palette-common-white")), ue(p.Switch, "defaultDisabledColor", O("palette-grey-100")), ue(p.Switch, "primaryDisabledColor", dt(p.primary.main, 0.62)), ue(p.Switch, "secondaryDisabledColor", dt(p.secondary.main, 0.62)), ue(p.Switch, "errorDisabledColor", dt(p.error.main, 0.62)), ue(p.Switch, "infoDisabledColor", dt(p.info.main, 0.62)), ue(p.Switch, "successDisabledColor", dt(p.success.main, 0.62)), ue(p.Switch, "warningDisabledColor", dt(p.warning.main, 0.62)), ue(p.TableCell, "border", dt(Ys(p.divider, 1), 0.88)), ue(p.Tooltip, "bg", Ys(p.grey[700], 0.92));
    }
    if (p.mode === "dark") {
      ue(p.Alert, "errorColor", dt(p.error.light, 0.6)), ue(p.Alert, "infoColor", dt(p.info.light, 0.6)), ue(p.Alert, "successColor", dt(p.success.light, 0.6)), ue(p.Alert, "warningColor", dt(p.warning.light, 0.6)), ue(p.Alert, "errorFilledBg", O("palette-error-dark")), ue(p.Alert, "infoFilledBg", O("palette-info-dark")), ue(p.Alert, "successFilledBg", O("palette-success-dark")), ue(p.Alert, "warningFilledBg", O("palette-warning-dark")), ue(p.Alert, "errorFilledColor", Jn(() => p.getContrastText(p.error.dark))), ue(p.Alert, "infoFilledColor", Jn(() => p.getContrastText(p.info.dark))), ue(p.Alert, "successFilledColor", Jn(() => p.getContrastText(p.success.dark))), ue(p.Alert, "warningFilledColor", Jn(() => p.getContrastText(p.warning.dark))), ue(p.Alert, "errorStandardBg", ut(p.error.light, 0.9)), ue(p.Alert, "infoStandardBg", ut(p.info.light, 0.9)), ue(p.Alert, "successStandardBg", ut(p.success.light, 0.9)), ue(p.Alert, "warningStandardBg", ut(p.warning.light, 0.9)), ue(p.Alert, "errorIconColor", O("palette-error-main")), ue(p.Alert, "infoIconColor", O("palette-info-main")), ue(p.Alert, "successIconColor", O("palette-success-main")), ue(p.Alert, "warningIconColor", O("palette-warning-main")), ue(p.AppBar, "defaultBg", O("palette-grey-900")), ue(p.AppBar, "darkBg", O("palette-background-paper")), ue(p.AppBar, "darkColor", O("palette-text-primary")), ue(p.Avatar, "defaultBg", O("palette-grey-600")), ue(p.Button, "inheritContainedBg", O("palette-grey-800")), ue(p.Button, "inheritContainedHoverBg", O("palette-grey-700")), ue(p.Chip, "defaultBorder", O("palette-grey-700")), ue(p.Chip, "defaultAvatarColor", O("palette-grey-300")), ue(p.Chip, "defaultIconColor", O("palette-grey-300")), ue(p.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), ue(p.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), ue(p.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), ue(p.LinearProgress, "primaryBg", ut(p.primary.main, 0.5)), ue(p.LinearProgress, "secondaryBg", ut(p.secondary.main, 0.5)), ue(p.LinearProgress, "errorBg", ut(p.error.main, 0.5)), ue(p.LinearProgress, "infoBg", ut(p.info.main, 0.5)), ue(p.LinearProgress, "successBg", ut(p.success.main, 0.5)), ue(p.LinearProgress, "warningBg", ut(p.warning.main, 0.5)), ue(p.Skeleton, "bg", `rgba(${O("palette-text-primaryChannel")} / 0.13)`), ue(p.Slider, "primaryTrack", ut(p.primary.main, 0.5)), ue(p.Slider, "secondaryTrack", ut(p.secondary.main, 0.5)), ue(p.Slider, "errorTrack", ut(p.error.main, 0.5)), ue(p.Slider, "infoTrack", ut(p.info.main, 0.5)), ue(p.Slider, "successTrack", ut(p.success.main, 0.5)), ue(p.Slider, "warningTrack", ut(p.warning.main, 0.5));
      const P = Gs(p.background.default, 0.98);
      ue(p.SnackbarContent, "bg", P), ue(p.SnackbarContent, "color", Jn(() => p.getContrastText(P))), ue(p.SpeedDialAction, "fabHoverBg", Gs(p.background.paper, 0.15)), ue(p.StepConnector, "border", O("palette-grey-600")), ue(p.StepContent, "border", O("palette-grey-600")), ue(p.Switch, "defaultColor", O("palette-grey-300")), ue(p.Switch, "defaultDisabledColor", O("palette-grey-600")), ue(p.Switch, "primaryDisabledColor", ut(p.primary.main, 0.55)), ue(p.Switch, "secondaryDisabledColor", ut(p.secondary.main, 0.55)), ue(p.Switch, "errorDisabledColor", ut(p.error.main, 0.55)), ue(p.Switch, "infoDisabledColor", ut(p.info.main, 0.55)), ue(p.Switch, "successDisabledColor", ut(p.success.main, 0.55)), ue(p.Switch, "warningDisabledColor", ut(p.warning.main, 0.55)), ue(p.TableCell, "border", ut(Ys(p.divider, 1), 0.68)), ue(p.Tooltip, "bg", Ys(p.grey[700], 0.92));
    }
    wr(p.background, "default"), wr(p.background, "paper"), wr(p.common, "background"), wr(p.common, "onBackground"), wr(p, "divider"), Object.keys(p).forEach((P) => {
      const A = p[P];
      P !== "tonalOffset" && A && typeof A == "object" && (A.main && ue(p[P], "mainChannel", _i(Di(A.main))), A.light && ue(p[P], "lightChannel", _i(Di(A.light))), A.dark && ue(p[P], "darkChannel", _i(Di(A.dark))), A.contrastText && ue(p[P], "contrastTextChannel", _i(Di(A.contrastText))), P === "text" && (wr(p[P], "primary"), wr(p[P], "secondary")), P === "action" && (A.active && wr(p[P], "active"), A.selected && wr(p[P], "selected")));
    });
  }), T = t.reduce((I, p) => ur(I, p), T);
  const v = {
    prefix: s,
    disableCssColorScheme: o,
    shouldSkipGeneratingVar: a,
    getSelector: uk(T)
  }, {
    vars: S,
    generateThemeVars: R,
    generateStyleSheets: $
  } = MP(T, v);
  return T.vars = S, Object.entries(T.colorSchemes[T.defaultColorScheme]).forEach(([I, p]) => {
    T[I] = p;
  }), T.generateThemeVars = R, T.generateStyleSheets = $, T.generateSpacing = function() {
    return ob(u.spacing, Fd(this));
  }, T.getColorSchemeSelector = _P(l), T.spacing = T.generateSpacing(), T.shouldSkipGeneratingVar = a, T.unstable_sxConfig = {
    ...Es,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, T.unstable_sx = function(p) {
    return go({
      sx: p,
      theme: this
    });
  }, T.toRuntimeSource = hb, T;
}
function xm(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: Hd({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function bb(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: r = !1,
    colorSchemes: o = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: s = n == null ? void 0 : n.mode,
    ...a
  } = e, l = s || "light", c = o == null ? void 0 : o[l], u = {
    ...o,
    ...n ? {
      [l]: {
        ...typeof c != "boolean" && c,
        palette: n
      }
    } : void 0
  };
  if (r === !1) {
    if (!("colorSchemes" in e))
      return hu(e, ...t);
    let d = n;
    "palette" in e || u[l] && (u[l] !== !0 ? d = u[l].palette : l === "dark" && (d = {
      mode: "dark"
    }));
    const f = hu({
      ...e,
      palette: d
    }, ...t);
    return f.defaultColorScheme = l, f.colorSchemes = u, f.palette.mode === "light" && (f.colorSchemes.light = {
      ...u.light !== !0 && u.light,
      palette: f.palette
    }, xm(f, "dark", u.dark)), f.palette.mode === "dark" && (f.colorSchemes.dark = {
      ...u.dark !== !0 && u.dark,
      palette: f.palette
    }, xm(f, "light", u.light)), f;
  }
  return !n && !("light" in u) && l === "light" && (u.light = !0), mk({
    ...a,
    colorSchemes: u,
    defaultColorScheme: l,
    ...typeof r != "boolean" && r
  }, ...t);
}
const qd = bb();
function Yd() {
  const e = Vd(qd);
  return process.env.NODE_ENV !== "production" && C.useDebugValue(e), e[Ol] || e;
}
function vb(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const br = (e) => vb(e) && e !== "classes", Ue = gP({
  themeId: Ol,
  defaultTheme: qd,
  rootShouldForwardProp: br
});
function Wt(e, t, n = void 0) {
  const r = {};
  for (const o in e) {
    const s = e[o];
    let a = "", l = !0;
    for (let c = 0; c < s.length; c += 1) {
      const u = s[c];
      u && (a += (l === !0 ? "" : " ") + t(u), l = !1, n && n[u] && (a += " " + n[u]));
    }
    r[o] = a;
  }
  return r;
}
let wm = 0;
function hk(e) {
  const [t, n] = C.useState(e), r = e || t;
  return C.useEffect(() => {
    t == null && (wm += 1, n(`mui-${wm}`));
  }, [t]), r;
}
const gk = {
  ...C
}, Tm = gk.useId;
function xb(e) {
  if (Tm !== void 0) {
    const t = Tm();
    return e ?? t;
  }
  return hk(e);
}
const eo = i.oneOfType([i.func, i.object]);
function wb(e) {
  return /* @__PURE__ */ k(ib, {
    ...e,
    defaultTheme: qd,
    themeId: Ol
  });
}
process.env.NODE_ENV !== "production" && (wb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: i.oneOfType([i.array, i.func, i.number, i.object, i.string, i.bool])
});
function yk(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ k(wb, {
        styles: typeof e == "function" ? (r) => e({
          theme: r,
          ...n
        }) : e
      })
    );
  };
}
process.env.NODE_ENV !== "production" && (i.node, i.object.isRequired);
function Xt(e) {
  return PP(e);
}
function Cs(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...r) {
    return e(...r) || t(...r);
  };
}
function bk(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function vk(e, t, n, r, o) {
  const s = e[t], a = o || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  return typeof s == "function" && !bk(s) && (l = "Did you accidentally provide a plain function component instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Tb = Cs(i.elementType, vk);
function xk(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function Sb(e, t, n, r, o) {
  const s = e[t], a = o || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  const c = s.type;
  return typeof c == "function" && !xk(c) && (l = "Did you accidentally use a plain function component for an element instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Os = Cs(i.element, Sb);
Os.isRequired = Cs(i.element.isRequired, Sb);
const wk = "exact-prop: ​";
function Eb(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [wk]: (t) => {
      const n = Object.keys(t).filter((r) => !e.hasOwnProperty(r));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((r) => `\`${r}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
function ds(e, t, n, r, o) {
  if (process.env.NODE_ENV === "production")
    return null;
  const s = e[t], a = o || t;
  return s == null ? null : s && s.nodeType !== 1 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
function Ht(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : ho(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function Sm(...e) {
  return e.reduce((t, n) => n == null ? t : function(...o) {
    t.apply(this, o), n.apply(this, o);
  }, () => {
  });
}
function Cb(e, t = 166) {
  let n;
  function r(...o) {
    const s = () => {
      e.apply(this, o);
    };
    clearTimeout(n), n = setTimeout(s, t);
  }
  return r.clear = () => {
    clearTimeout(n);
  }, r;
}
function wc(e, t) {
  var n, r, o;
  return /* @__PURE__ */ C.isValidElement(e) && t.indexOf(
    // For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    e.type.muiName ?? ((o = (r = (n = e.type) == null ? void 0 : n._payload) == null ? void 0 : r.value) == null ? void 0 : o.muiName)
  ) !== -1;
}
function Kn(e) {
  return e && e.ownerDocument || document;
}
function kr(e) {
  return Kn(e).defaultView || window;
}
function Em(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
const yo = typeof window < "u" ? C.useLayoutEffect : C.useEffect;
function Cm({
  controlled: e,
  default: t,
  name: n,
  state: r = "value"
}) {
  const {
    current: o
  } = C.useRef(e !== void 0), [s, a] = C.useState(t), l = o ? e : s;
  if (process.env.NODE_ENV !== "production") {
    C.useEffect(() => {
      o !== (e !== void 0) && console.error([`MUI: A component is changing the ${o ? "" : "un"}controlled ${r} state of ${n} to be ${o ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [r, n, e]);
    const {
      current: u
    } = C.useRef(t);
    C.useEffect(() => {
      !o && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${r} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = C.useCallback((u) => {
    o || a(u);
  }, []);
  return [l, c];
}
function yu(e) {
  const t = C.useRef(e);
  return yo(() => {
    t.current = e;
  }), C.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function Vn(...e) {
  const t = C.useRef(void 0), n = C.useCallback((r) => {
    const o = e.map((s) => {
      if (s == null)
        return null;
      if (typeof s == "function") {
        const a = s, l = a(r);
        return typeof l == "function" ? l : () => {
          a(null);
        };
      }
      return s.current = r, () => {
        s.current = null;
      };
    });
    return () => {
      o.forEach((s) => s == null ? void 0 : s());
    };
  }, e);
  return C.useMemo(() => e.every((r) => r == null) ? null : (r) => {
    t.current && (t.current(), t.current = void 0), r != null && (t.current = n(r));
  }, e);
}
const Om = {};
function Tk(e, t) {
  const n = C.useRef(Om);
  return n.current === Om && (n.current = e(t)), n;
}
const Sk = [];
function Ek(e) {
  C.useEffect(e, Sk);
}
class Gd {
  constructor() {
    Ar(this, "currentId", null);
    Ar(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    Ar(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new Gd();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
}
function Ck() {
  const e = Tk(Gd.create).current;
  return Ek(e.disposeEffect), e;
}
function Ob(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
function Ok(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function Rb(e, t, n, r) {
  const o = e[t];
  if (o == null || !Number.isInteger(o)) {
    const s = Ok(o);
    return new RangeError(`Invalid ${r} \`${t}\` of type \`${s}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function $b(e, t, ...n) {
  return e[t] === void 0 ? null : Rb(e, t, ...n);
}
function bu() {
  return null;
}
$b.isRequired = Rb;
bu.isRequired = bu;
const Pb = process.env.NODE_ENV === "production" ? bu : $b;
function Ut(e, t, n = "Mui") {
  const r = {};
  return t.forEach((o) => {
    r[o] = jt(e, o, n);
  }), r;
}
function Rk(e) {
  return typeof e == "string";
}
function kb(e, t, n) {
  return e === void 0 || Rk(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function Ib(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((r) => r.match(/^on[A-Z]/) && typeof e[r] == "function" && !t.includes(r)).forEach((r) => {
    n[r] = e[r];
  }), n;
}
function Rm(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function Nb(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: r,
    externalForwardedProps: o,
    className: s
  } = e;
  if (!t) {
    const g = Ee(n == null ? void 0 : n.className, s, o == null ? void 0 : o.className, r == null ? void 0 : r.className), y = {
      ...n == null ? void 0 : n.style,
      ...o == null ? void 0 : o.style,
      ...r == null ? void 0 : r.style
    }, m = {
      ...n,
      ...o,
      ...r
    };
    return g.length > 0 && (m.className = g), Object.keys(y).length > 0 && (m.style = y), {
      props: m,
      internalRef: void 0
    };
  }
  const a = Ib({
    ...o,
    ...r
  }), l = Rm(r), c = Rm(o), u = t(a), d = Ee(u == null ? void 0 : u.className, n == null ? void 0 : n.className, s, o == null ? void 0 : o.className, r == null ? void 0 : r.className), f = {
    ...u == null ? void 0 : u.style,
    ...n == null ? void 0 : n.style,
    ...o == null ? void 0 : o.style,
    ...r == null ? void 0 : r.style
  }, h = {
    ...u,
    ...n,
    ...c,
    ...l
  };
  return d.length > 0 && (h.className = d), Object.keys(f).length > 0 && (h.style = f), {
    props: h,
    internalRef: u.ref
  };
}
function Ab(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function $k(e) {
  var f;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: r,
    skipResolvingSlotProps: o = !1,
    ...s
  } = e, a = o ? {} : Ab(n, r), {
    props: l,
    internalRef: c
  } = Nb({
    ...s,
    externalSlotProps: a
  }), u = Vn(c, a == null ? void 0 : a.ref, (f = e.additionalProps) == null ? void 0 : f.ref);
  return kb(t, {
    ...l,
    ref: u
  }, r);
}
function Rs(e) {
  var t;
  return parseInt(C.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
function Ks(e) {
  return parseInt(e, 10) || 0;
}
const Pk = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function kk(e) {
  for (const t in e)
    return !1;
  return !0;
}
function $m(e) {
  return kk(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const Mb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    onChange: r,
    maxRows: o,
    minRows: s = 1,
    style: a,
    value: l,
    ...c
  } = t, {
    current: u
  } = C.useRef(l != null), d = C.useRef(null), f = Vn(n, d), h = C.useRef(null), g = C.useRef(null), y = C.useCallback(() => {
    const w = d.current, T = g.current;
    if (!w || !T)
      return;
    const S = kr(w).getComputedStyle(w);
    if (S.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    T.style.width = S.width, T.value = w.value || t.placeholder || "x", T.value.slice(-1) === `
` && (T.value += " ");
    const R = S.boxSizing, $ = Ks(S.paddingBottom) + Ks(S.paddingTop), I = Ks(S.borderBottomWidth) + Ks(S.borderTopWidth), p = T.scrollHeight;
    T.value = "x";
    const O = T.scrollHeight;
    let P = p;
    s && (P = Math.max(Number(s) * O, P)), o && (P = Math.min(Number(o) * O, P)), P = Math.max(P, O);
    const A = P + (R === "border-box" ? $ + I : 0), D = Math.abs(P - p) <= 1;
    return {
      outerHeightStyle: A,
      overflowing: D
    };
  }, [o, s, t.placeholder]), m = yu(() => {
    const w = d.current, T = y();
    if (!w || !T || $m(T))
      return !1;
    const v = T.outerHeightStyle;
    return h.current != null && h.current !== v;
  }), b = C.useCallback(() => {
    const w = d.current, T = y();
    if (!w || !T || $m(T))
      return;
    const v = T.outerHeightStyle;
    h.current !== v && (h.current = v, w.style.height = `${v}px`), w.style.overflow = T.overflowing ? "hidden" : "";
  }, [y]), x = C.useRef(-1);
  yo(() => {
    const w = Cb(b), T = d == null ? void 0 : d.current;
    if (!T)
      return;
    const v = kr(T);
    v.addEventListener("resize", w);
    let S;
    return typeof ResizeObserver < "u" && (S = new ResizeObserver(() => {
      m() && (S.unobserve(T), cancelAnimationFrame(x.current), b(), x.current = requestAnimationFrame(() => {
        S.observe(T);
      }));
    }), S.observe(T)), () => {
      w.clear(), cancelAnimationFrame(x.current), v.removeEventListener("resize", w), S && S.disconnect();
    };
  }, [y, b, m]), yo(() => {
    b();
  });
  const E = (w) => {
    u || b(), r && r(w);
  };
  return /* @__PURE__ */ Pe(C.Fragment, {
    children: [/* @__PURE__ */ k("textarea", {
      value: l,
      onChange: E,
      ref: f,
      rows: s,
      style: a,
      ...c
    }), /* @__PURE__ */ k("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: g,
      tabIndex: -1,
      style: {
        ...Pk.shadow,
        ...a,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (Mb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: i.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  onChange: i.func,
  /**
   * @ignore
   */
  placeholder: i.string,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * @ignore
   */
  value: i.oneOfType([i.arrayOf(i.string), i.number, i.string])
});
function vu(e) {
  return typeof e == "string";
}
function hi({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((r, o) => (r[o] = e[o], n && typeof e[o] > "u" && (r[o] = n[o]), r), {});
}
const Bl = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (Bl.displayName = "FormControlContext");
function gi() {
  return C.useContext(Bl);
}
const rn = kP;
function Pm(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function Aa(e, t = !1) {
  return e && (Pm(e.value) && e.value !== "" || t && Pm(e.defaultValue) && e.defaultValue !== "");
}
function Ik(e) {
  return e.startAdornment;
}
function Nk(e) {
  return jt("MuiInputBase", e);
}
const ri = Ut("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var km;
const Fl = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${Ht(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, jl = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, Ak = (e) => {
  const {
    classes: t,
    color: n,
    disabled: r,
    error: o,
    endAdornment: s,
    focused: a,
    formControl: l,
    fullWidth: c,
    hiddenLabel: u,
    multiline: d,
    readOnly: f,
    size: h,
    startAdornment: g,
    type: y
  } = e, m = {
    root: ["root", `color${Ht(n)}`, r && "disabled", o && "error", c && "fullWidth", a && "focused", l && "formControl", h && h !== "medium" && `size${Ht(h)}`, d && "multiline", g && "adornedStart", s && "adornedEnd", u && "hiddenLabel", f && "readOnly"],
    input: ["input", r && "disabled", y === "search" && "inputTypeSearch", d && "inputMultiline", h === "small" && "inputSizeSmall", u && "inputHiddenLabel", g && "inputAdornedStart", s && "inputAdornedEnd", f && "readOnly"]
  };
  return Wt(m, Nk, t);
}, Ll = Ue("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: Fl
})(rn(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${ri.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), Vl = Ue("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: jl
})(rn(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, r = {
    opacity: "0 !important"
  }, o = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${ri.formControl} &`]: {
      "&::-webkit-input-placeholder": r,
      "&::-moz-placeholder": r,
      // Firefox 19+
      "&::-ms-input-placeholder": r,
      // Edge
      "&:focus::-webkit-input-placeholder": o,
      "&:focus::-moz-placeholder": o,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": o
      // Edge
    },
    [`&.${ri.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: s
      }) => !s.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), Im = yk({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), zl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": o,
    autoComplete: s,
    autoFocus: a,
    className: l,
    color: c,
    components: u = {},
    componentsProps: d = {},
    defaultValue: f,
    disabled: h,
    disableInjectingGlobalStyles: g,
    endAdornment: y,
    error: m,
    fullWidth: b = !1,
    id: x,
    inputComponent: E = "input",
    inputProps: w = {},
    inputRef: T,
    margin: v,
    maxRows: S,
    minRows: R,
    multiline: $ = !1,
    name: I,
    onBlur: p,
    onChange: O,
    onClick: P,
    onFocus: A,
    onKeyDown: D,
    onKeyUp: _,
    placeholder: M,
    readOnly: V,
    renderSuffix: Y,
    rows: U,
    size: j,
    slotProps: W = {},
    slots: ee = {},
    startAdornment: K,
    type: oe = "text",
    value: ne,
    ...se
  } = r, de = w.value != null ? w.value : ne, {
    current: X
  } = C.useRef(de != null), ae = C.useRef(), Q = C.useCallback((re) => {
    process.env.NODE_ENV !== "production" && re && re.nodeName !== "INPUT" && !re.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), ie = Vn(ae, T, w.ref, Q), [F, he] = C.useState(!1), fe = gi();
  process.env.NODE_ENV !== "production" && C.useEffect(() => {
    if (fe)
      return fe.registerEffect();
  }, [fe]);
  const Se = hi({
    props: r,
    muiFormControl: fe,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  Se.focused = fe ? fe.focused : F, C.useEffect(() => {
    !fe && h && F && (he(!1), p && p());
  }, [fe, h, F, p]);
  const Le = fe && fe.onFilled, Ae = fe && fe.onEmpty, Ie = C.useCallback((re) => {
    Aa(re) ? Le && Le() : Ae && Ae();
  }, [Le, Ae]);
  yo(() => {
    X && Ie({
      value: de
    });
  }, [de, Ie, X]);
  const Re = (re) => {
    A && A(re), w.onFocus && w.onFocus(re), fe && fe.onFocus ? fe.onFocus(re) : he(!0);
  }, Be = (re) => {
    p && p(re), w.onBlur && w.onBlur(re), fe && fe.onBlur ? fe.onBlur(re) : he(!1);
  }, Oe = (re, ...Z) => {
    if (!X) {
      const te = re.target || ae.current;
      if (te == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : ho(1));
      Ie({
        value: te.value
      });
    }
    w.onChange && w.onChange(re, ...Z), O && O(re, ...Z);
  };
  C.useEffect(() => {
    Ie(ae.current);
  }, []);
  const N = (re) => {
    ae.current && re.currentTarget === re.target && ae.current.focus(), P && P(re);
  };
  let q = E, J = w;
  $ && q === "input" && (U ? (process.env.NODE_ENV !== "production" && (R || S) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), J = {
    type: void 0,
    minRows: U,
    maxRows: U,
    ...J
  }) : J = {
    type: void 0,
    maxRows: S,
    minRows: R,
    ...J
  }, q = Mb);
  const H = (re) => {
    Ie(re.animationName === "mui-auto-fill-cancel" ? ae.current : {
      value: "x"
    });
  };
  C.useEffect(() => {
    fe && fe.setAdornedStart(!!K);
  }, [fe, K]);
  const B = {
    ...r,
    color: Se.color || "primary",
    disabled: Se.disabled,
    endAdornment: y,
    error: Se.error,
    focused: Se.focused,
    formControl: fe,
    fullWidth: b,
    hiddenLabel: Se.hiddenLabel,
    multiline: $,
    size: Se.size,
    startAdornment: K,
    type: oe
  }, z = Ak(B), G = ee.root || u.Root || Ll, pe = W.root || d.root || {}, me = ee.input || u.Input || Vl;
  return J = {
    ...J,
    ...W.input ?? d.input
  }, /* @__PURE__ */ Pe(C.Fragment, {
    children: [!g && typeof Im == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (km || (km = /* @__PURE__ */ k(Im, {}))), /* @__PURE__ */ Pe(G, {
      ...pe,
      ref: n,
      onClick: N,
      ...se,
      ...!vu(G) && {
        ownerState: {
          ...B,
          ...pe.ownerState
        }
      },
      className: Ee(z.root, pe.className, l, V && "MuiInputBase-readOnly"),
      children: [K, /* @__PURE__ */ k(Bl.Provider, {
        value: null,
        children: /* @__PURE__ */ k(me, {
          "aria-invalid": Se.error,
          "aria-describedby": o,
          autoComplete: s,
          autoFocus: a,
          defaultValue: f,
          disabled: Se.disabled,
          id: x,
          onAnimationStart: H,
          name: I,
          placeholder: M,
          readOnly: V,
          required: Se.required,
          rows: U,
          value: de,
          onKeyDown: D,
          onKeyUp: _,
          type: oe,
          ...J,
          ...!vu(me) && {
            as: q,
            ownerState: {
              ...B,
              ...J.ownerState
            }
          },
          ref: ie,
          className: Ee(z.input, J.className, V && "MuiInputBase-readOnly"),
          onBlur: Be,
          onChange: Oe,
          onFocus: Re
        })
      }), y, Y ? Y({
        ...Se,
        startAdornment: K
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (zl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": i.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: Tb,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: eo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: i.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: i.func,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * @ignore
   */
  onKeyUp: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * @ignore
   */
  renderSuffix: i.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The size of the component.
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
function Mk(e) {
  return typeof e.main == "string";
}
function _k(e, t = []) {
  if (!Mk(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function Wl(e = []) {
  return ([, t]) => t && _k(t, e);
}
function Dk(e) {
  return jt("MuiInput", e);
}
const Ei = {
  ...ri,
  ...Ut("MuiInput", ["root", "underline", "input"])
}, Bk = (e) => {
  const {
    classes: t,
    disableUnderline: n
  } = e, o = Wt({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, Dk, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...o
  };
}, Fk = Ue(Ll, {
  shouldForwardProp: (e) => br(e) || e === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...Fl(e, t), !n.disableUnderline && t.underline];
  }
})(rn(({
  theme: e
}) => {
  let n = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e.vars && (n = `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`), {
    position: "relative",
    variants: [{
      props: ({
        ownerState: r
      }) => r.formControl,
      style: {
        "label + &": {
          marginTop: 16
        }
      }
    }, {
      props: ({
        ownerState: r
      }) => !r.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${Ei.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${Ei.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${Ei.disabled}, .${Ei.error}):before`]: {
          borderBottom: `2px solid ${(e.vars || e).palette.text.primary}`,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            borderBottom: `1px solid ${n}`
          }
        },
        [`&.${Ei.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(Wl()).map(([r]) => ({
      props: {
        color: r,
        disableUnderline: !1
      },
      style: {
        "&::after": {
          borderBottom: `2px solid ${(e.vars || e).palette[r].main}`
        }
      }
    }))]
  };
})), jk = Ue(Vl, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: jl
})({}), Ul = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiInput"
  }), {
    disableUnderline: o = !1,
    components: s = {},
    componentsProps: a,
    fullWidth: l = !1,
    inputComponent: c = "input",
    multiline: u = !1,
    slotProps: d,
    slots: f = {},
    type: h = "text",
    ...g
  } = r, y = Bk(r), b = {
    root: {
      ownerState: {
        disableUnderline: o
      }
    }
  }, x = d ?? a ? ur(d ?? a, b) : b, E = f.root ?? s.Root ?? Fk, w = f.input ?? s.Input ?? jk;
  return /* @__PURE__ */ k(zl, {
    slots: {
      root: E,
      input: w
    },
    slotProps: x,
    fullWidth: l,
    inputComponent: c,
    multiline: u,
    ref: n,
    type: h,
    ...g,
    classes: y
  });
});
process.env.NODE_ENV !== "production" && (Ul.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, the `input` will not have an underline.
   * @default false
   */
  disableUnderline: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: eo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
Ul.muiName = "Input";
function Lk(e) {
  return jt("MuiFilledInput", e);
}
const ro = {
  ...ri,
  ...Ut("MuiFilledInput", ["root", "underline", "input", "adornedStart", "adornedEnd", "sizeSmall", "multiline", "hiddenLabel"])
};
function Vk(e) {
  return jt("MuiSvgIcon", e);
}
Ut("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const zk = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: r
  } = e, o = {
    root: ["root", t !== "inherit" && `color${Ht(t)}`, `fontSize${Ht(n)}`]
  };
  return Wt(o, Vk, r);
}, Wk = Ue("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${Ht(n.color)}`], t[`fontSize${Ht(n.fontSize)}`]];
  }
})(rn(({
  theme: e
}) => {
  var t, n, r, o, s, a, l, c, u, d, f, h, g, y;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (o = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : o.call(t, "fill", {
      duration: (r = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : r.shorter
    }),
    variants: [
      {
        props: (m) => !m.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((a = (s = e.typography) == null ? void 0 : s.pxToRem) == null ? void 0 : a.call(s, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((c = (l = e.typography) == null ? void 0 : l.pxToRem) == null ? void 0 : c.call(l, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((d = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : d.call(u, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, m]) => m && m.main).map(([m]) => {
        var b, x;
        return {
          props: {
            color: m
          },
          style: {
            color: (x = (b = (e.vars ?? e).palette) == null ? void 0 : b[m]) == null ? void 0 : x.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (h = (f = (e.vars ?? e).palette) == null ? void 0 : f.action) == null ? void 0 : h.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (y = (g = (e.vars ?? e).palette) == null ? void 0 : g.action) == null ? void 0 : y.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), Ma = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: o,
    className: s,
    color: a = "inherit",
    component: l = "svg",
    fontSize: c = "medium",
    htmlColor: u,
    inheritViewBox: d = !1,
    titleAccess: f,
    viewBox: h = "0 0 24 24",
    ...g
  } = r, y = /* @__PURE__ */ C.isValidElement(o) && o.type === "svg", m = {
    ...r,
    color: a,
    component: l,
    fontSize: c,
    instanceFontSize: t.fontSize,
    inheritViewBox: d,
    viewBox: h,
    hasSvgAsChild: y
  }, b = {};
  d || (b.viewBox = h);
  const x = zk(m);
  return /* @__PURE__ */ Pe(Wk, {
    as: l,
    className: Ee(x.root, s),
    focusable: "false",
    color: u,
    "aria-hidden": f ? void 0 : !0,
    role: f ? "img" : void 0,
    ref: n,
    ...b,
    ...g,
    ...y && o.props,
    ownerState: m,
    children: [y ? o.props.children : o, f ? /* @__PURE__ */ k("title", {
      children: f
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (Ma.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: i.oneOfType([i.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: i.oneOfType([i.oneOf(["inherit", "large", "medium", "small"]), i.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: i.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: i.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Reference/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: i.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: i.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: i.string
});
Ma.muiName = "SvgIcon";
function Uk(e, t) {
  function n(r, o) {
    return /* @__PURE__ */ k(Ma, {
      "data-testid": process.env.NODE_ENV !== "production" ? `${t}Icon` : void 0,
      ref: o,
      ...r,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = Ma.muiName, /* @__PURE__ */ C.memo(/* @__PURE__ */ C.forwardRef(n));
}
function Hk(e, t) {
  const n = e.charCodeAt(2);
  return e[0] === "o" && e[1] === "n" && n >= 65 && n <= 90 && typeof t == "function";
}
function qk(e, t) {
  if (!e)
    return t;
  function n(a, l) {
    const c = {};
    return Object.keys(l).forEach((u) => {
      Hk(u, l[u]) && typeof a[u] == "function" && (c[u] = (...d) => {
        a[u](...d), l[u](...d);
      });
    }), c;
  }
  if (typeof e == "function" || typeof t == "function")
    return (a) => {
      const l = typeof t == "function" ? t(a) : t, c = typeof e == "function" ? e({
        ...a,
        ...l
      }) : e, u = Ee(a == null ? void 0 : a.className, l == null ? void 0 : l.className, c == null ? void 0 : c.className), d = n(c, l);
      return {
        ...l,
        ...c,
        ...d,
        ...!!u && {
          className: u
        },
        ...(l == null ? void 0 : l.style) && (c == null ? void 0 : c.style) && {
          style: {
            ...l.style,
            ...c.style
          }
        },
        ...(l == null ? void 0 : l.sx) && (c == null ? void 0 : c.sx) && {
          sx: [...Array.isArray(l.sx) ? l.sx : [l.sx], ...Array.isArray(c.sx) ? c.sx : [c.sx]]
        }
      };
    };
  const r = t, o = n(e, r), s = Ee(r == null ? void 0 : r.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...o,
    ...!!s && {
      className: s
    },
    ...(r == null ? void 0 : r.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...r.style,
        ...e.style
      }
    },
    ...(r == null ? void 0 : r.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(r.sx) ? r.sx : [r.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
const Yk = (e) => {
  const {
    classes: t,
    disableUnderline: n,
    startAdornment: r,
    endAdornment: o,
    size: s,
    hiddenLabel: a,
    multiline: l
  } = e, c = {
    root: ["root", !n && "underline", r && "adornedStart", o && "adornedEnd", s === "small" && `size${Ht(s)}`, a && "hiddenLabel", l && "multiline"],
    input: ["input"]
  }, u = Wt(c, Lk, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...u
  };
}, Gk = Ue(Ll, {
  shouldForwardProp: (e) => br(e) || e === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...Fl(e, t), !n.disableUnderline && t.underline];
  }
})(rn(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = t ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", r = t ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", o = t ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", s = t ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return {
    position: "relative",
    backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r,
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create("background-color", {
      duration: e.transitions.duration.shorter,
      easing: e.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.hoverBg : o,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r
      }
    },
    [`&.${ro.focused}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r
    },
    [`&.${ro.disabled}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.disabledBg : s
    },
    variants: [{
      props: ({
        ownerState: a
      }) => !a.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${ro.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${ro.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})` : n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${ro.disabled}, .${ro.error}):before`]: {
          borderBottom: `1px solid ${(e.vars || e).palette.text.primary}`
        },
        [`&.${ro.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(Wl()).map(([a]) => {
      var l;
      return {
        props: {
          disableUnderline: !1,
          color: a
        },
        style: {
          "&::after": {
            borderBottom: `2px solid ${(l = (e.vars || e).palette[a]) == null ? void 0 : l.main}`
          }
        }
      };
    }), {
      props: ({
        ownerState: a
      }) => a.startAdornment,
      style: {
        paddingLeft: 12
      }
    }, {
      props: ({
        ownerState: a
      }) => a.endAdornment,
      style: {
        paddingRight: 12
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline,
      style: {
        padding: "25px 12px 8px"
      }
    }, {
      props: ({
        ownerState: a,
        size: l
      }) => a.multiline && l === "small",
      style: {
        paddingTop: 21,
        paddingBottom: 4
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline && a.hiddenLabel,
      style: {
        paddingTop: 16,
        paddingBottom: 17
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline && a.hiddenLabel && a.size === "small",
      style: {
        paddingTop: 8,
        paddingBottom: 9
      }
    }]
  };
})), Kk = Ue(Vl, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: jl
})(rn(({
  theme: e
}) => ({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12,
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      paddingTop: 21,
      paddingBottom: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel,
    style: {
      paddingTop: 16,
      paddingBottom: 17
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel && t.size === "small",
    style: {
      paddingTop: 8,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      paddingTop: 0,
      paddingBottom: 0,
      paddingLeft: 0,
      paddingRight: 0
    }
  }]
}))), Hl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiFilledInput"
  }), {
    disableUnderline: o = !1,
    components: s = {},
    componentsProps: a,
    fullWidth: l = !1,
    hiddenLabel: c,
    // declare here to prevent spreading to DOM
    inputComponent: u = "input",
    multiline: d = !1,
    slotProps: f,
    slots: h = {},
    type: g = "text",
    ...y
  } = r, m = {
    ...r,
    disableUnderline: o,
    fullWidth: l,
    inputComponent: u,
    multiline: d,
    type: g
  }, b = Yk(r), x = {
    root: {
      ownerState: m
    },
    input: {
      ownerState: m
    }
  }, E = f ?? a ? ur(x, f ?? a) : x, w = h.root ?? s.Root ?? Gk, T = h.input ?? s.Input ?? Kk;
  return /* @__PURE__ */ k(zl, {
    slots: {
      root: w,
      input: T
    },
    slotProps: E,
    fullWidth: l,
    inputComponent: u,
    multiline: d,
    ref: n,
    type: g,
    ...y,
    classes: b
  });
});
process.env.NODE_ENV !== "production" && (Hl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, the input will not have an underline.
   * @default false
   */
  disableUnderline: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: eo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
Hl.muiName = "Input";
var Nm;
const Xk = Ue("fieldset", {
  shouldForwardProp: br
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), Qk = Ue("legend", {
  shouldForwardProp: br
})(rn(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function _b(e) {
  const {
    children: t,
    classes: n,
    className: r,
    label: o,
    notched: s,
    ...a
  } = e, l = o != null && o !== "", c = {
    ...e,
    notched: s,
    withLabel: l
  };
  return /* @__PURE__ */ k(Xk, {
    "aria-hidden": !0,
    className: r,
    ownerState: c,
    ...a,
    children: /* @__PURE__ */ k(Qk, {
      ownerState: c,
      children: l ? /* @__PURE__ */ k("span", {
        children: o
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        Nm || (Nm = /* @__PURE__ */ k("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (_b.propTypes = {
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The label.
   */
  label: i.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: i.bool.isRequired,
  /**
   * @ignore
   */
  style: i.object
});
function Jk(e) {
  return jt("MuiOutlinedInput", e);
}
const Zn = {
  ...ri,
  ...Ut("MuiOutlinedInput", ["root", "notchedOutline", "input"])
}, Zk = (e) => {
  const {
    classes: t
  } = e, r = Wt({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, Jk, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...r
  };
}, eI = Ue(Ll, {
  shouldForwardProp: (e) => br(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: Fl
})(rn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${Zn.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${Zn.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${Zn.focused} .${Zn.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(Wl()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${Zn.focused} .${Zn.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${Zn.error} .${Zn.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${Zn.disabled} .${Zn.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: r
      }) => n.multiline && r === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), tI = Ue(_b, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(rn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), nI = Ue(Vl, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: jl
})(rn(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), ql = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var r;
  const o = Xt({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: s = {},
    fullWidth: a = !1,
    inputComponent: l = "input",
    label: c,
    multiline: u = !1,
    notched: d,
    slots: f = {},
    type: h = "text",
    ...g
  } = o, y = Zk(o), m = gi(), b = hi({
    props: o,
    muiFormControl: m,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), x = {
    ...o,
    color: b.color || "primary",
    disabled: b.disabled,
    error: b.error,
    focused: b.focused,
    formControl: m,
    fullWidth: a,
    hiddenLabel: b.hiddenLabel,
    multiline: u,
    size: b.size,
    type: h
  }, E = f.root ?? s.Root ?? eI, w = f.input ?? s.Input ?? nI;
  return /* @__PURE__ */ k(zl, {
    slots: {
      root: E,
      input: w
    },
    renderSuffix: (T) => /* @__PURE__ */ k(tI, {
      ownerState: x,
      className: y.notchedOutline,
      label: c != null && c !== "" && b.required ? r || (r = /* @__PURE__ */ Pe(C.Fragment, {
        children: [c, " ", "*"]
      })) : c,
      notched: typeof d < "u" ? d : !!(T.startAdornment || T.filled || T.focused)
    }),
    fullWidth: a,
    inputComponent: l,
    multiline: u,
    ref: n,
    type: h,
    ...g,
    classes: {
      ...y,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (ql.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: eo,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: i.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: i.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
ql.muiName = "Input";
function rI(e) {
  return jt("MuiFormLabel", e);
}
const Yi = Ut("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]), oI = (e) => {
  const {
    classes: t,
    color: n,
    focused: r,
    disabled: o,
    error: s,
    filled: a,
    required: l
  } = e, c = {
    root: ["root", `color${Ht(n)}`, o && "disabled", s && "error", a && "filled", r && "focused", l && "required"],
    asterisk: ["asterisk", s && "error"]
  };
  return Wt(c, rI, t);
}, iI = Ue("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color === "secondary" && t.colorSecondary, n.filled && t.filled];
  }
})(rn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.body1,
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  variants: [...Object.entries(e.palette).filter(Wl()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${Yi.focused}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    props: {},
    style: {
      [`&.${Yi.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      },
      [`&.${Yi.error}`]: {
        color: (e.vars || e).palette.error.main
      }
    }
  }]
}))), sI = Ue("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (e, t) => t.asterisk
})(rn(({
  theme: e
}) => ({
  [`&.${Yi.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}))), Db = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiFormLabel"
  }), {
    children: o,
    className: s,
    color: a,
    component: l = "label",
    disabled: c,
    error: u,
    filled: d,
    focused: f,
    required: h,
    ...g
  } = r, y = gi(), m = hi({
    props: r,
    muiFormControl: y,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  }), b = {
    ...r,
    color: m.color || "primary",
    component: l,
    disabled: m.disabled,
    error: m.error,
    filled: m.filled,
    focused: m.focused,
    required: m.required
  }, x = oI(b);
  return /* @__PURE__ */ Pe(iI, {
    as: l,
    ownerState: b,
    className: Ee(x.root, s),
    ref: n,
    ...g,
    children: [o, m.required && /* @__PURE__ */ Pe(sI, {
      ownerState: b,
      "aria-hidden": !0,
      className: x.asterisk,
      children: [" ", "*"]
    })]
  });
});
process.env.NODE_ENV !== "production" && (Db.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: i.oneOfType([i.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: i.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: i.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: i.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
function aI(e) {
  return jt("MuiInputLabel", e);
}
Ut("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]);
const lI = (e) => {
  const {
    classes: t,
    formControl: n,
    size: r,
    shrink: o,
    disableAnimation: s,
    variant: a,
    required: l
  } = e, c = {
    root: ["root", n && "formControl", !s && "animated", o && "shrink", r && r !== "medium" && `size${Ht(r)}`, a],
    asterisk: [l && "asterisk"]
  }, u = Wt(c, aI, t);
  return {
    ...t,
    // forward the focused, disabled, etc. classes to the FormLabel
    ...u
  };
}, cI = Ue(Db, {
  shouldForwardProp: (e) => br(e) || e === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${Yi.asterisk}`]: t.asterisk
    }, t.root, n.formControl && t.formControl, n.size === "small" && t.sizeSmall, n.shrink && t.shrink, !n.disableAnimation && t.animated, n.focused && t.focused, t[n.variant]];
  }
})(rn(({
  theme: e
}) => ({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%",
  variants: [{
    props: ({
      ownerState: t
    }) => t.formControl,
    style: {
      position: "absolute",
      left: 0,
      top: 0,
      // slight alteration to spec spacing to match visual spec result
      transform: "translate(0, 20px) scale(1)"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      // Compensation for the `Input.inputSizeSmall` style.
      transform: "translate(0, 17px) scale(1)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.shrink,
    style: {
      transform: "translate(0, -1.5px) scale(0.75)",
      transformOrigin: "top left",
      maxWidth: "133%"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableAnimation,
    style: {
      transition: e.transitions.create(["color", "transform", "max-width"], {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      // Chrome's autofill feature gives the input field a yellow background.
      // Since the input field is behind the label in the HTML tree,
      // the input field is drawn last and hides the label with an opaque background color.
      // zIndex: 1 will raise the label above opaque background-colors of input.
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(12px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "filled",
      size: "small"
    },
    style: {
      transform: "translate(12px, 13px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "filled" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      transform: "translate(12px, 7px) scale(0.75)",
      maxWidth: "calc(133% - 24px)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n,
      size: r
    }) => t === "filled" && n.shrink && r === "small",
    style: {
      transform: "translate(12px, 4px) scale(0.75)"
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      // see comment above on filled.zIndex
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(14px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "outlined",
      size: "small"
    },
    style: {
      transform: "translate(14px, 9px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "outlined" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      // Theoretically, we should have (8+5)*2/0.75 = 34px
      // but it feels a better when it bleeds a bit on the left, so 32px.
      maxWidth: "calc(133% - 32px)",
      transform: "translate(14px, -9px) scale(0.75)"
    }
  }]
}))), Bb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    name: "MuiInputLabel",
    props: t
  }), {
    disableAnimation: o = !1,
    margin: s,
    shrink: a,
    variant: l,
    className: c,
    ...u
  } = r, d = gi();
  let f = a;
  typeof f > "u" && d && (f = d.filled || d.focused || d.adornedStart);
  const h = hi({
    props: r,
    muiFormControl: d,
    states: ["size", "variant", "required", "focused"]
  }), g = {
    ...r,
    disableAnimation: o,
    formControl: d,
    shrink: f,
    size: h.size,
    variant: h.variant,
    required: h.required,
    focused: h.focused
  }, y = lI(g);
  return /* @__PURE__ */ k(cI, {
    "data-shrink": f,
    ref: n,
    className: Ee(y.root, c),
    ...u,
    ownerState: g,
    classes: y
  });
});
process.env.NODE_ENV !== "production" && (Bb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: i.oneOfType([i.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), i.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: i.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: i.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: i.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: i.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: i.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: i.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
});
function uI(e) {
  return jt("MuiFormControl", e);
}
Ut("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]);
const dI = (e) => {
  const {
    classes: t,
    margin: n,
    fullWidth: r
  } = e, o = {
    root: ["root", n !== "none" && `margin${Ht(n)}`, r && "fullWidth"]
  };
  return Wt(o, uI, t);
}, fI = Ue("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`margin${Ht(n.margin)}`], n.fullWidth && t.fullWidth];
  }
})({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top",
  // Fix alignment issue on Safari.
  variants: [{
    props: {
      margin: "normal"
    },
    style: {
      marginTop: 16,
      marginBottom: 8
    }
  }, {
    props: {
      margin: "dense"
    },
    style: {
      marginTop: 8,
      marginBottom: 4
    }
  }, {
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }]
}), Fb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiFormControl"
  }), {
    children: o,
    className: s,
    color: a = "primary",
    component: l = "div",
    disabled: c = !1,
    error: u = !1,
    focused: d,
    fullWidth: f = !1,
    hiddenLabel: h = !1,
    margin: g = "none",
    required: y = !1,
    size: m = "medium",
    variant: b = "outlined",
    ...x
  } = r, E = {
    ...r,
    color: a,
    component: l,
    disabled: c,
    error: u,
    fullWidth: f,
    hiddenLabel: h,
    margin: g,
    required: y,
    size: m,
    variant: b
  }, w = dI(E), [T, v] = C.useState(() => {
    let M = !1;
    return o && C.Children.forEach(o, (V) => {
      if (!wc(V, ["Input", "Select"]))
        return;
      const Y = wc(V, ["Select"]) ? V.props.input : V;
      Y && Ik(Y.props) && (M = !0);
    }), M;
  }), [S, R] = C.useState(() => {
    let M = !1;
    return o && C.Children.forEach(o, (V) => {
      wc(V, ["Input", "Select"]) && (Aa(V.props, !0) || Aa(V.props.inputProps, !0)) && (M = !0);
    }), M;
  }), [$, I] = C.useState(!1);
  c && $ && I(!1);
  const p = d !== void 0 && !c ? d : $;
  let O;
  const P = C.useRef(!1);
  process.env.NODE_ENV !== "production" && (O = () => (P.current && console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join(`
`)), P.current = !0, () => {
    P.current = !1;
  }));
  const A = C.useCallback(() => {
    R(!0);
  }, []), D = C.useCallback(() => {
    R(!1);
  }, []), _ = C.useMemo(() => ({
    adornedStart: T,
    setAdornedStart: v,
    color: a,
    disabled: c,
    error: u,
    filled: S,
    focused: p,
    fullWidth: f,
    hiddenLabel: h,
    size: m,
    onBlur: () => {
      I(!1);
    },
    onFocus: () => {
      I(!0);
    },
    onEmpty: D,
    onFilled: A,
    registerEffect: O,
    required: y,
    variant: b
  }), [T, a, c, u, S, p, f, h, O, D, A, y, m, b]);
  return /* @__PURE__ */ k(Bl.Provider, {
    value: _,
    children: /* @__PURE__ */ k(fI, {
      as: l,
      ownerState: E,
      className: Ee(w.root, s),
      ref: n,
      ...x,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (Fb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: i.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: i.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: i.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: i.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
});
function pI(e) {
  return jt("MuiFormHelperText", e);
}
const Am = Ut("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]);
var Mm;
const mI = (e) => {
  const {
    classes: t,
    contained: n,
    size: r,
    disabled: o,
    error: s,
    filled: a,
    focused: l,
    required: c
  } = e, u = {
    root: ["root", o && "disabled", s && "error", r && `size${Ht(r)}`, n && "contained", l && "focused", a && "filled", c && "required"]
  };
  return Wt(u, pI, t);
}, hI = Ue("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size && t[`size${Ht(n.size)}`], n.contained && t.contained, n.filled && t.filled];
  }
})(rn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.caption,
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${Am.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${Am.error}`]: {
    color: (e.vars || e).palette.error.main
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginTop: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.contained,
    style: {
      marginLeft: 14,
      marginRight: 14
    }
  }]
}))), jb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiFormHelperText"
  }), {
    children: o,
    className: s,
    component: a = "p",
    disabled: l,
    error: c,
    filled: u,
    focused: d,
    margin: f,
    required: h,
    variant: g,
    ...y
  } = r, m = gi(), b = hi({
    props: r,
    muiFormControl: m,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  }), x = {
    ...r,
    component: a,
    contained: b.variant === "filled" || b.variant === "outlined",
    variant: b.variant,
    size: b.size,
    disabled: b.disabled,
    error: b.error,
    filled: b.filled,
    focused: b.focused,
    required: b.required
  };
  delete x.ownerState;
  const E = mI(x);
  return /* @__PURE__ */ k(hI, {
    as: a,
    className: Ee(E.root, s),
    ref: n,
    ...y,
    ownerState: x,
    children: o === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      Mm || (Mm = /* @__PURE__ */ k("span", {
        className: "notranslate",
        "aria-hidden": !0,
        children: "​"
      }))
    ) : o
  });
});
process.env.NODE_ENV !== "production" && (jb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: i.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: i.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: i.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: i.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: i.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   */
  variant: i.oneOfType([i.oneOf(["filled", "outlined", "standard"]), i.string])
});
const Lb = /* @__PURE__ */ C.createContext({});
process.env.NODE_ENV !== "production" && (Lb.displayName = "ListContext");
function gI(e) {
  return jt("MuiList", e);
}
Ut("MuiList", ["root", "padding", "dense", "subheader"]);
const yI = (e) => {
  const {
    classes: t,
    disablePadding: n,
    dense: r,
    subheader: o
  } = e;
  return Wt({
    root: ["root", !n && "padding", r && "dense", o && "subheader"]
  }, gI, t);
}, bI = Ue("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.disablePadding && t.padding, n.dense && t.dense, n.subheader && t.subheader];
  }
})({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative",
  variants: [{
    props: ({
      ownerState: e
    }) => !e.disablePadding,
    style: {
      paddingTop: 8,
      paddingBottom: 8
    }
  }, {
    props: ({
      ownerState: e
    }) => e.subheader,
    style: {
      paddingTop: 0
    }
  }]
}), Vb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiList"
  }), {
    children: o,
    className: s,
    component: a = "ul",
    dense: l = !1,
    disablePadding: c = !1,
    subheader: u,
    ...d
  } = r, f = C.useMemo(() => ({
    dense: l
  }), [l]), h = {
    ...r,
    component: a,
    dense: l,
    disablePadding: c
  }, g = yI(h);
  return /* @__PURE__ */ k(Lb.Provider, {
    value: f,
    children: /* @__PURE__ */ Pe(bI, {
      as: a,
      className: Ee(g.root, s),
      ref: n,
      ownerState: h,
      ...d,
      children: [u, o]
    })
  });
});
process.env.NODE_ENV !== "production" && (Vb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: i.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: i.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
function Tc(e, t, n) {
  return e === t ? e.firstChild : t && t.nextElementSibling ? t.nextElementSibling : n ? null : e.firstChild;
}
function _m(e, t, n) {
  return e === t ? n ? e.firstChild : e.lastChild : t && t.previousElementSibling ? t.previousElementSibling : n ? null : e.lastChild;
}
function zb(e, t) {
  if (t === void 0)
    return !0;
  let n = e.innerText;
  return n === void 0 && (n = e.textContent), n = n.trim().toLowerCase(), n.length === 0 ? !1 : t.repeating ? n[0] === t.keys[0] : n.startsWith(t.keys.join(""));
}
function Ci(e, t, n, r, o, s) {
  let a = !1, l = o(e, t, t ? n : !1);
  for (; l; ) {
    if (l === e.firstChild) {
      if (a)
        return !1;
      a = !0;
    }
    const c = r ? !1 : l.disabled || l.getAttribute("aria-disabled") === "true";
    if (!l.hasAttribute("tabindex") || !zb(l, s) || c)
      l = o(e, l, n);
    else
      return l.focus(), !0;
  }
  return !1;
}
const Wb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: r,
    autoFocus: o = !1,
    autoFocusItem: s = !1,
    children: a,
    className: l,
    disabledItemsFocusable: c = !1,
    disableListWrap: u = !1,
    onKeyDown: d,
    variant: f = "selectedMenu",
    ...h
  } = t, g = C.useRef(null), y = C.useRef({
    keys: [],
    repeating: !0,
    previousKeyMatched: !0,
    lastTime: null
  });
  yo(() => {
    o && g.current.focus();
  }, [o]), C.useImperativeHandle(r, () => ({
    adjustStyleForScrollbar: (w, {
      direction: T
    }) => {
      const v = !g.current.style.width;
      if (w.clientHeight < g.current.clientHeight && v) {
        const S = `${Ob(kr(w))}px`;
        g.current.style[T === "rtl" ? "paddingLeft" : "paddingRight"] = S, g.current.style.width = `calc(100% + ${S})`;
      }
      return g.current;
    }
  }), []);
  const m = (w) => {
    const T = g.current, v = w.key;
    if (w.ctrlKey || w.metaKey || w.altKey) {
      d && d(w);
      return;
    }
    const R = Kn(T).activeElement;
    if (v === "ArrowDown")
      w.preventDefault(), Ci(T, R, u, c, Tc);
    else if (v === "ArrowUp")
      w.preventDefault(), Ci(T, R, u, c, _m);
    else if (v === "Home")
      w.preventDefault(), Ci(T, null, u, c, Tc);
    else if (v === "End")
      w.preventDefault(), Ci(T, null, u, c, _m);
    else if (v.length === 1) {
      const $ = y.current, I = v.toLowerCase(), p = performance.now();
      $.keys.length > 0 && (p - $.lastTime > 500 ? ($.keys = [], $.repeating = !0, $.previousKeyMatched = !0) : $.repeating && I !== $.keys[0] && ($.repeating = !1)), $.lastTime = p, $.keys.push(I);
      const O = R && !$.repeating && zb(R, $);
      $.previousKeyMatched && (O || Ci(T, R, !1, c, Tc, $)) ? w.preventDefault() : $.previousKeyMatched = !1;
    }
    d && d(w);
  }, b = Vn(g, n);
  let x = -1;
  C.Children.forEach(a, (w, T) => {
    if (!/* @__PURE__ */ C.isValidElement(w)) {
      x === T && (x += 1, x >= a.length && (x = -1));
      return;
    }
    process.env.NODE_ENV !== "production" && On.isFragment(w) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), w.props.disabled || (f === "selectedMenu" && w.props.selected || x === -1) && (x = T), x === T && (w.props.disabled || w.props.muiSkipListHighlight || w.type.muiSkipListHighlight) && (x += 1, x >= a.length && (x = -1));
  });
  const E = C.Children.map(a, (w, T) => {
    if (T === x) {
      const v = {};
      return s && (v.autoFocus = !0), w.props.tabIndex === void 0 && f === "selectedMenu" && (v.tabIndex = 0), /* @__PURE__ */ C.cloneElement(w, v);
    }
    return w;
  });
  return /* @__PURE__ */ k(Vb, {
    role: "menu",
    ref: b,
    className: l,
    onKeyDown: m,
    tabIndex: o ? 0 : -1,
    ...h,
    children: E
  });
});
process.env.NODE_ENV !== "production" && (Wb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: i.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: i.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: i.node,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: i.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: i.bool,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: i.oneOf(["menu", "selectedMenu"])
});
const Ub = (e) => e.scrollTop;
function _a(e, t) {
  const {
    timeout: n,
    easing: r,
    style: o = {}
  } = e;
  return {
    duration: o.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: o.transitionTimingFunction ?? (typeof r == "object" ? r[t.mode] : r),
    delay: o.transitionDelay
  };
}
function xu(e) {
  return `scale(${e}, ${e ** 2})`;
}
const vI = {
  entering: {
    opacity: 1,
    transform: xu(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, Sc = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), Da = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    addEndListener: r,
    appear: o = !0,
    children: s,
    easing: a,
    in: l,
    onEnter: c,
    onEntered: u,
    onEntering: d,
    onExit: f,
    onExited: h,
    onExiting: g,
    style: y,
    timeout: m = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: b = $n,
    ...x
  } = t, E = Ck(), w = C.useRef(), T = Yd(), v = C.useRef(null), S = Vn(v, Rs(s), n), R = (_) => (M) => {
    if (_) {
      const V = v.current;
      M === void 0 ? _(V) : _(V, M);
    }
  }, $ = R(d), I = R((_, M) => {
    Ub(_);
    const {
      duration: V,
      delay: Y,
      easing: U
    } = _a({
      style: y,
      timeout: m,
      easing: a
    }, {
      mode: "enter"
    });
    let j;
    m === "auto" ? (j = T.transitions.getAutoHeightDuration(_.clientHeight), w.current = j) : j = V, _.style.transition = [T.transitions.create("opacity", {
      duration: j,
      delay: Y
    }), T.transitions.create("transform", {
      duration: Sc ? j : j * 0.666,
      delay: Y,
      easing: U
    })].join(","), c && c(_, M);
  }), p = R(u), O = R(g), P = R((_) => {
    const {
      duration: M,
      delay: V,
      easing: Y
    } = _a({
      style: y,
      timeout: m,
      easing: a
    }, {
      mode: "exit"
    });
    let U;
    m === "auto" ? (U = T.transitions.getAutoHeightDuration(_.clientHeight), w.current = U) : U = M, _.style.transition = [T.transitions.create("opacity", {
      duration: U,
      delay: V
    }), T.transitions.create("transform", {
      duration: Sc ? U : U * 0.666,
      delay: Sc ? V : V || U * 0.333,
      easing: Y
    })].join(","), _.style.opacity = 0, _.style.transform = xu(0.75), f && f(_);
  }), A = R(h);
  return /* @__PURE__ */ k(b, {
    appear: o,
    in: l,
    nodeRef: v,
    onEnter: I,
    onEntered: p,
    onEntering: $,
    onExit: P,
    onExited: A,
    onExiting: O,
    addEndListener: (_) => {
      m === "auto" && E.start(w.current || 0, _), r && r(v.current, _);
    },
    timeout: m === "auto" ? null : m,
    ...x,
    children: (_, {
      ownerState: M,
      ...V
    }) => /* @__PURE__ */ C.cloneElement(s, {
      style: {
        opacity: 0,
        transform: xu(0.75),
        visibility: _ === "exited" && !l ? "hidden" : void 0,
        ...vI[_],
        ...y,
        ...s.props.style
      },
      ref: S,
      ...V
    })
  });
});
process.env.NODE_ENV !== "production" && (Da.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: Os.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
Da && (Da.muiSupportAuto = !0);
function xI(e) {
  const t = Kn(e);
  return t.body === e ? kr(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function Gi(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function Dm(e) {
  return parseInt(kr(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function wI(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), r = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || r;
}
function Bm(e, t, n, r, o) {
  const s = [t, n, ...r];
  [].forEach.call(e.children, (a) => {
    const l = !s.includes(a), c = !wI(a);
    l && c && Gi(a, o);
  });
}
function Ec(e, t) {
  let n = -1;
  return e.some((r, o) => t(r) ? (n = o, !0) : !1), n;
}
function TI(e, t) {
  const n = [], r = e.container;
  if (!t.disableScrollLock) {
    if (xI(r)) {
      const a = Ob(kr(r));
      n.push({
        value: r.style.paddingRight,
        property: "padding-right",
        el: r
      }), r.style.paddingRight = `${Dm(r) + a}px`;
      const l = Kn(r).querySelectorAll(".mui-fixed");
      [].forEach.call(l, (c) => {
        n.push({
          value: c.style.paddingRight,
          property: "padding-right",
          el: c
        }), c.style.paddingRight = `${Dm(c) + a}px`;
      });
    }
    let s;
    if (r.parentNode instanceof DocumentFragment)
      s = Kn(r).body;
    else {
      const a = r.parentElement, l = kr(r);
      s = (a == null ? void 0 : a.nodeName) === "HTML" && l.getComputedStyle(a).overflowY === "scroll" ? a : r;
    }
    n.push({
      value: s.style.overflow,
      property: "overflow",
      el: s
    }, {
      value: s.style.overflowX,
      property: "overflow-x",
      el: s
    }, {
      value: s.style.overflowY,
      property: "overflow-y",
      el: s
    }), s.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: s,
      el: a,
      property: l
    }) => {
      s ? a.style.setProperty(l, s) : a.style.removeProperty(l);
    });
  };
}
function SI(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
class EI {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let r = this.modals.indexOf(t);
    if (r !== -1)
      return r;
    r = this.modals.length, this.modals.push(t), t.modalRef && Gi(t.modalRef, !1);
    const o = SI(n);
    Bm(n, t.mount, t.modalRef, o, !0);
    const s = Ec(this.containers, (a) => a.container === n);
    return s !== -1 ? (this.containers[s].modals.push(t), r) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: o
    }), r);
  }
  mount(t, n) {
    const r = Ec(this.containers, (s) => s.modals.includes(t)), o = this.containers[r];
    o.restore || (o.restore = TI(o, n));
  }
  remove(t, n = !0) {
    const r = this.modals.indexOf(t);
    if (r === -1)
      return r;
    const o = Ec(this.containers, (a) => a.modals.includes(t)), s = this.containers[o];
    if (s.modals.splice(s.modals.indexOf(t), 1), this.modals.splice(r, 1), s.modals.length === 0)
      s.restore && s.restore(), t.modalRef && Gi(t.modalRef, n), Bm(s.container, t.mount, t.modalRef, s.hiddenSiblings, !1), this.containers.splice(o, 1);
    else {
      const a = s.modals[s.modals.length - 1];
      a.modalRef && Gi(a.modalRef, !1);
    }
    return r;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
}
const CI = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function OI(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function RI(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (r) => e.ownerDocument.querySelector(`input[type="radio"]${r}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function $I(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || RI(e));
}
function PI(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(CI)).forEach((r, o) => {
    const s = OI(r);
    s === -1 || !$I(r) || (s === 0 ? t.push(r) : n.push({
      documentOrder: o,
      tabIndex: s,
      node: r
    }));
  }), n.sort((r, o) => r.tabIndex === o.tabIndex ? r.documentOrder - o.documentOrder : r.tabIndex - o.tabIndex).map((r) => r.node).concat(t);
}
function kI() {
  return !0;
}
function Ba(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: r = !1,
    disableRestoreFocus: o = !1,
    getTabbable: s = PI,
    isEnabled: a = kI,
    open: l
  } = e, c = C.useRef(!1), u = C.useRef(null), d = C.useRef(null), f = C.useRef(null), h = C.useRef(null), g = C.useRef(!1), y = C.useRef(null), m = Vn(Rs(t), y), b = C.useRef(null);
  C.useEffect(() => {
    !l || !y.current || (g.current = !n);
  }, [n, l]), C.useEffect(() => {
    if (!l || !y.current)
      return;
    const w = Kn(y.current);
    return y.current.contains(w.activeElement) || (y.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), y.current.setAttribute("tabIndex", "-1")), g.current && y.current.focus()), () => {
      o || (f.current && f.current.focus && (c.current = !0, f.current.focus()), f.current = null);
    };
  }, [l]), C.useEffect(() => {
    if (!l || !y.current)
      return;
    const w = Kn(y.current), T = (R) => {
      b.current = R, !(r || !a() || R.key !== "Tab") && w.activeElement === y.current && R.shiftKey && (c.current = !0, d.current && d.current.focus());
    }, v = () => {
      var I, p;
      const R = y.current;
      if (R === null)
        return;
      if (!w.hasFocus() || !a() || c.current) {
        c.current = !1;
        return;
      }
      if (R.contains(w.activeElement) || r && w.activeElement !== u.current && w.activeElement !== d.current)
        return;
      if (w.activeElement !== h.current)
        h.current = null;
      else if (h.current !== null)
        return;
      if (!g.current)
        return;
      let $ = [];
      if ((w.activeElement === u.current || w.activeElement === d.current) && ($ = s(y.current)), $.length > 0) {
        const O = !!((I = b.current) != null && I.shiftKey && ((p = b.current) == null ? void 0 : p.key) === "Tab"), P = $[0], A = $[$.length - 1];
        typeof P != "string" && typeof A != "string" && (O ? A.focus() : P.focus());
      } else
        R.focus();
    };
    w.addEventListener("focusin", v), w.addEventListener("keydown", T, !0);
    const S = setInterval(() => {
      w.activeElement && w.activeElement.tagName === "BODY" && v();
    }, 50);
    return () => {
      clearInterval(S), w.removeEventListener("focusin", v), w.removeEventListener("keydown", T, !0);
    };
  }, [n, r, o, a, l, s]);
  const x = (w) => {
    f.current === null && (f.current = w.relatedTarget), g.current = !0, h.current = w.target;
    const T = t.props.onFocus;
    T && T(w);
  }, E = (w) => {
    f.current === null && (f.current = w.relatedTarget), g.current = !0;
  };
  return /* @__PURE__ */ Pe(C.Fragment, {
    children: [/* @__PURE__ */ k("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: u,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ C.cloneElement(t, {
      ref: m,
      onFocus: x
    }), /* @__PURE__ */ k("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: d,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (Ba.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: Os,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: i.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: i.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: i.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: i.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: i.func,
  /**
   * If `true`, focus is locked.
   */
  open: i.bool.isRequired
});
process.env.NODE_ENV !== "production" && (Ba.propTypes = Eb(Ba.propTypes));
function II(e) {
  return typeof e == "function" ? e() : e;
}
const Fa = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    children: r,
    container: o,
    disablePortal: s = !1
  } = t, [a, l] = C.useState(null), c = Vn(/* @__PURE__ */ C.isValidElement(r) ? Rs(r) : null, n);
  if (yo(() => {
    s || l(II(o) || document.body);
  }, [o, s]), yo(() => {
    if (a && !s)
      return Em(n, a), () => {
        Em(n, null);
      };
  }, [n, a, s]), s) {
    if (/* @__PURE__ */ C.isValidElement(r)) {
      const u = {
        ref: c
      };
      return /* @__PURE__ */ C.cloneElement(r, u);
    }
    return r;
  }
  return a && /* @__PURE__ */ hh.createPortal(r, a);
});
process.env.NODE_ENV !== "production" && (Fa.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: i.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([ds, i.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool
});
process.env.NODE_ENV !== "production" && (Fa.propTypes = Eb(Fa.propTypes));
function an(e, t) {
  const {
    className: n,
    elementType: r,
    ownerState: o,
    externalForwardedProps: s,
    internalForwardedProps: a,
    shouldForwardComponentProp: l = !1,
    ...c
  } = t, {
    component: u,
    slots: d = {
      [e]: void 0
    },
    slotProps: f = {
      [e]: void 0
    },
    ...h
  } = s, g = d[e] || r, y = Ab(f[e], o), {
    props: {
      component: m,
      ...b
    },
    internalRef: x
  } = Nb({
    className: n,
    ...c,
    externalForwardedProps: e === "root" ? h : void 0,
    externalSlotProps: y
  }), E = Vn(x, y == null ? void 0 : y.ref, t.ref), w = e === "root" ? m || u : m, T = kb(g, {
    ...e === "root" && !u && !d[e] && a,
    ...e !== "root" && !d[e] && a,
    ...b,
    ...w && !l && {
      as: w
    },
    ...w && l && {
      component: w
    },
    ref: E
  }, o);
  return [g, T];
}
const NI = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, Hb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Yd(), o = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: s,
    appear: a = !0,
    children: l,
    easing: c,
    in: u,
    onEnter: d,
    onEntered: f,
    onEntering: h,
    onExit: g,
    onExited: y,
    onExiting: m,
    style: b,
    timeout: x = o,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: E = $n,
    ...w
  } = t, T = C.useRef(null), v = Vn(T, Rs(l), n), S = (D) => (_) => {
    if (D) {
      const M = T.current;
      _ === void 0 ? D(M) : D(M, _);
    }
  }, R = S(h), $ = S((D, _) => {
    Ub(D);
    const M = _a({
      style: b,
      timeout: x,
      easing: c
    }, {
      mode: "enter"
    });
    D.style.webkitTransition = r.transitions.create("opacity", M), D.style.transition = r.transitions.create("opacity", M), d && d(D, _);
  }), I = S(f), p = S(m), O = S((D) => {
    const _ = _a({
      style: b,
      timeout: x,
      easing: c
    }, {
      mode: "exit"
    });
    D.style.webkitTransition = r.transitions.create("opacity", _), D.style.transition = r.transitions.create("opacity", _), g && g(D);
  }), P = S(y);
  return /* @__PURE__ */ k(E, {
    appear: a,
    in: u,
    nodeRef: T,
    onEnter: $,
    onEntered: I,
    onEntering: R,
    onExit: O,
    onExited: P,
    onExiting: p,
    addEndListener: (D) => {
      s && s(T.current, D);
    },
    timeout: x,
    ...w,
    children: (D, {
      ownerState: _,
      ...M
    }) => /* @__PURE__ */ C.cloneElement(l, {
      style: {
        opacity: 0,
        visibility: D === "exited" && !u ? "hidden" : void 0,
        ...NI[D],
        ...b,
        ...l.props.style
      },
      ref: v,
      ...M
    })
  });
});
process.env.NODE_ENV !== "production" && (Hb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: Os.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function AI(e) {
  return jt("MuiBackdrop", e);
}
Ut("MuiBackdrop", ["root", "invisible"]);
const MI = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return Wt({
    root: ["root", n && "invisible"]
  }, AI, t);
}, _I = Ue("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), qb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: o,
    className: s,
    component: a = "div",
    invisible: l = !1,
    open: c,
    components: u = {},
    componentsProps: d = {},
    slotProps: f = {},
    slots: h = {},
    TransitionComponent: g,
    transitionDuration: y,
    ...m
  } = r, b = {
    ...r,
    component: a,
    invisible: l
  }, x = MI(b), E = {
    transition: g,
    root: u.Root,
    ...h
  }, w = {
    ...d,
    ...f
  }, T = {
    slots: E,
    slotProps: w
  }, [v, S] = an("root", {
    elementType: _I,
    externalForwardedProps: T,
    className: Ee(x.root, s),
    ownerState: b
  }), [R, $] = an("transition", {
    elementType: Hb,
    externalForwardedProps: T,
    ownerState: b
  });
  return /* @__PURE__ */ k(R, {
    in: c,
    timeout: y,
    ...m,
    ...$,
    children: /* @__PURE__ */ k(v, {
      "aria-hidden": !0,
      ...S,
      classes: x,
      ref: n,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (qb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    root: i.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: i.bool,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: i.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function DI(e) {
  return typeof e == "function" ? e() : e;
}
function BI(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const Fm = () => {
}, Xs = new EI();
function FI(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: r = !1,
    closeAfterTransition: o = !1,
    onTransitionEnter: s,
    onTransitionExited: a,
    children: l,
    onClose: c,
    open: u,
    rootRef: d
  } = e, f = C.useRef({}), h = C.useRef(null), g = C.useRef(null), y = Vn(g, d), [m, b] = C.useState(!u), x = BI(l);
  let E = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (E = !1);
  const w = () => Kn(h.current), T = () => (f.current.modalRef = g.current, f.current.mount = h.current, f.current), v = () => {
    Xs.mount(T(), {
      disableScrollLock: r
    }), g.current && (g.current.scrollTop = 0);
  }, S = yu(() => {
    const _ = DI(t) || w().body;
    Xs.add(T(), _), g.current && v();
  }), R = () => Xs.isTopModal(T()), $ = yu((_) => {
    h.current = _, _ && (u && R() ? v() : g.current && Gi(g.current, E));
  }), I = C.useCallback(() => {
    Xs.remove(T(), E);
  }, [E]);
  C.useEffect(() => () => {
    I();
  }, [I]), C.useEffect(() => {
    u ? S() : (!x || !o) && I();
  }, [u, I, x, o, S]);
  const p = (_) => (M) => {
    var V;
    (V = _.onKeyDown) == null || V.call(_, M), !(M.key !== "Escape" || M.which === 229 || // Wait until IME is settled.
    !R()) && (n || (M.stopPropagation(), c && c(M, "escapeKeyDown")));
  }, O = (_) => (M) => {
    var V;
    (V = _.onClick) == null || V.call(_, M), M.target === M.currentTarget && c && c(M, "backdropClick");
  };
  return {
    getRootProps: (_ = {}) => {
      const M = Ib(e);
      delete M.onTransitionEnter, delete M.onTransitionExited;
      const V = {
        ...M,
        ..._
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...V,
        onKeyDown: p(V),
        ref: y
      };
    },
    getBackdropProps: (_ = {}) => {
      const M = _;
      return {
        "aria-hidden": !0,
        ...M,
        onClick: O(M),
        open: u
      };
    },
    getTransitionProps: () => {
      const _ = () => {
        b(!1), s && s();
      }, M = () => {
        b(!0), a && a(), o && I();
      };
      return {
        onEnter: Sm(_, (l == null ? void 0 : l.props.onEnter) ?? Fm),
        onExited: Sm(M, (l == null ? void 0 : l.props.onExited) ?? Fm)
      };
    },
    rootRef: y,
    portalRef: $,
    isTopModal: R,
    exited: m,
    hasTransition: x
  };
}
function jI(e) {
  return jt("MuiModal", e);
}
Ut("MuiModal", ["root", "hidden", "backdrop"]);
const LI = (e) => {
  const {
    open: t,
    exited: n,
    classes: r
  } = e;
  return Wt({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, jI, r);
}, VI = Ue("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(rn(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), zI = Ue(qb, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), Yb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: o = zI,
    BackdropProps: s,
    classes: a,
    className: l,
    closeAfterTransition: c = !1,
    children: u,
    container: d,
    component: f,
    components: h = {},
    componentsProps: g = {},
    disableAutoFocus: y = !1,
    disableEnforceFocus: m = !1,
    disableEscapeKeyDown: b = !1,
    disablePortal: x = !1,
    disableRestoreFocus: E = !1,
    disableScrollLock: w = !1,
    hideBackdrop: T = !1,
    keepMounted: v = !1,
    onClose: S,
    onTransitionEnter: R,
    onTransitionExited: $,
    open: I,
    slotProps: p = {},
    slots: O = {},
    // eslint-disable-next-line react/prop-types
    theme: P,
    ...A
  } = r, D = {
    ...r,
    closeAfterTransition: c,
    disableAutoFocus: y,
    disableEnforceFocus: m,
    disableEscapeKeyDown: b,
    disablePortal: x,
    disableRestoreFocus: E,
    disableScrollLock: w,
    hideBackdrop: T,
    keepMounted: v
  }, {
    getRootProps: _,
    getBackdropProps: M,
    getTransitionProps: V,
    portalRef: Y,
    isTopModal: U,
    exited: j,
    hasTransition: W
  } = FI({
    ...D,
    rootRef: n
  }), ee = {
    ...D,
    exited: j
  }, K = LI(ee), oe = {};
  if (u.props.tabIndex === void 0 && (oe.tabIndex = "-1"), W) {
    const {
      onEnter: Q,
      onExited: ie
    } = V();
    oe.onEnter = Q, oe.onExited = ie;
  }
  const ne = {
    slots: {
      root: h.Root,
      backdrop: h.Backdrop,
      ...O
    },
    slotProps: {
      ...g,
      ...p
    }
  }, [se, de] = an("root", {
    ref: n,
    elementType: VI,
    externalForwardedProps: {
      ...ne,
      ...A,
      component: f
    },
    getSlotProps: _,
    ownerState: ee,
    className: Ee(l, K == null ? void 0 : K.root, !ee.open && ee.exited && (K == null ? void 0 : K.hidden))
  }), [X, ae] = an("backdrop", {
    ref: s == null ? void 0 : s.ref,
    elementType: o,
    externalForwardedProps: ne,
    shouldForwardComponentProp: !0,
    additionalProps: s,
    getSlotProps: (Q) => M({
      ...Q,
      onClick: (ie) => {
        Q != null && Q.onClick && Q.onClick(ie);
      }
    }),
    className: Ee(s == null ? void 0 : s.className, K == null ? void 0 : K.backdrop),
    ownerState: ee
  });
  return !v && !I && (!W || j) ? null : /* @__PURE__ */ k(Fa, {
    ref: Y,
    container: d,
    disablePortal: x,
    children: /* @__PURE__ */ Pe(se, {
      ...de,
      children: [!T && o ? /* @__PURE__ */ k(X, {
        ...ae
      }) : null, /* @__PURE__ */ k(Ba, {
        disableEnforceFocus: m,
        disableAutoFocus: y,
        disableRestoreFocus: E,
        isEnabled: U,
        open: I,
        children: /* @__PURE__ */ C.cloneElement(u, oe)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (Yb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: i.object,
  /**
   * A single child content element.
   */
  children: Os.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: i.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Backdrop: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([ds, i.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: i.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: i.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: i.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: i.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: i.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: i.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: i.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
function WI(e) {
  return jt("MuiPaper", e);
}
Ut("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const UI = (e) => {
  const {
    square: t,
    elevation: n,
    variant: r,
    classes: o
  } = e, s = {
    root: ["root", r, !t && "rounded", r === "elevation" && `elevation${n}`]
  };
  return Wt(s, WI, o);
}, HI = Ue("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(rn(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), Gb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var g;
  const r = Xt({
    props: t,
    name: "MuiPaper"
  }), o = Yd(), {
    className: s,
    component: a = "div",
    elevation: l = 1,
    square: c = !1,
    variant: u = "elevation",
    ...d
  } = r, f = {
    ...r,
    component: a,
    elevation: l,
    square: c,
    variant: u
  }, h = UI(f);
  return process.env.NODE_ENV !== "production" && o.shadows[l] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${l}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${l}]\` is defined.`].join(`
`)), /* @__PURE__ */ k(HI, {
    as: a,
    ownerState: f,
    className: Ee(h.root, s),
    ref: n,
    ...d,
    style: {
      ...u === "elevation" && {
        "--Paper-shadow": (o.vars || o).shadows[l],
        ...o.vars && {
          "--Paper-overlay": (g = o.vars.overlays) == null ? void 0 : g[l]
        },
        ...!o.vars && o.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${mu("#fff", gu(l))}, ${mu("#fff", gu(l))})`
        }
      },
      ...d.style
    }
  });
});
process.env.NODE_ENV !== "production" && (Gb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: Cs(Pb, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: i.bool,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: i.oneOfType([i.oneOf(["elevation", "outlined"]), i.string])
});
function qI(e) {
  return jt("MuiPopover", e);
}
Ut("MuiPopover", ["root", "paper"]);
function jm(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function Lm(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function Vm(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function Bi(e) {
  return typeof e == "function" ? e() : e;
}
const YI = (e) => {
  const {
    classes: t
  } = e;
  return Wt({
    root: ["root"],
    paper: ["paper"]
  }, qI, t);
}, GI = Ue(Yb, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), Kb = Ue(Gb, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), Xb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiPopover"
  }), {
    action: o,
    anchorEl: s,
    anchorOrigin: a = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: l,
    anchorReference: c = "anchorEl",
    children: u,
    className: d,
    container: f,
    elevation: h = 8,
    marginThreshold: g = 16,
    open: y,
    PaperProps: m = {},
    // TODO: remove in v7
    slots: b = {},
    slotProps: x = {},
    transformOrigin: E = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: w,
    // TODO: remove in v7
    transitionDuration: T = "auto",
    TransitionProps: v = {},
    // TODO: remove in v7
    disableScrollLock: S = !1,
    ...R
  } = r, $ = C.useRef(), I = {
    ...r,
    anchorOrigin: a,
    anchorReference: c,
    elevation: h,
    marginThreshold: g,
    transformOrigin: E,
    TransitionComponent: w,
    transitionDuration: T,
    TransitionProps: v
  }, p = YI(I), O = C.useCallback(() => {
    if (c === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (l || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), l;
    const Q = Bi(s), ie = Q && Q.nodeType === 1 ? Q : Kn($.current).body, F = ie.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const he = ie.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && he.top === 0 && he.left === 0 && he.right === 0 && he.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: F.top + jm(F, a.vertical),
      left: F.left + Lm(F, a.horizontal)
    };
  }, [s, a.horizontal, a.vertical, l, c]), P = C.useCallback((Q) => ({
    vertical: jm(Q, E.vertical),
    horizontal: Lm(Q, E.horizontal)
  }), [E.horizontal, E.vertical]), A = C.useCallback((Q) => {
    const ie = {
      width: Q.offsetWidth,
      height: Q.offsetHeight
    }, F = P(ie);
    if (c === "none")
      return {
        top: null,
        left: null,
        transformOrigin: Vm(F)
      };
    const he = O();
    let fe = he.top - F.vertical, Se = he.left - F.horizontal;
    const Le = fe + ie.height, Ae = Se + ie.width, Ie = kr(Bi(s)), Re = Ie.innerHeight - g, Be = Ie.innerWidth - g;
    if (g !== null && fe < g) {
      const Oe = fe - g;
      fe -= Oe, F.vertical += Oe;
    } else if (g !== null && Le > Re) {
      const Oe = Le - Re;
      fe -= Oe, F.vertical += Oe;
    }
    if (process.env.NODE_ENV !== "production" && ie.height > Re && ie.height && Re && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${ie.height - Re}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), g !== null && Se < g) {
      const Oe = Se - g;
      Se -= Oe, F.horizontal += Oe;
    } else if (Ae > Be) {
      const Oe = Ae - Be;
      Se -= Oe, F.horizontal += Oe;
    }
    return {
      top: `${Math.round(fe)}px`,
      left: `${Math.round(Se)}px`,
      transformOrigin: Vm(F)
    };
  }, [s, c, O, P, g]), [D, _] = C.useState(y), M = C.useCallback(() => {
    const Q = $.current;
    if (!Q)
      return;
    const ie = A(Q);
    ie.top !== null && Q.style.setProperty("top", ie.top), ie.left !== null && (Q.style.left = ie.left), Q.style.transformOrigin = ie.transformOrigin, _(!0);
  }, [A]);
  C.useEffect(() => (S && window.addEventListener("scroll", M), () => window.removeEventListener("scroll", M)), [s, S, M]);
  const V = () => {
    M();
  }, Y = () => {
    _(!1);
  };
  C.useEffect(() => {
    y && M();
  }), C.useImperativeHandle(o, () => y ? {
    updatePosition: () => {
      M();
    }
  } : null, [y, M]), C.useEffect(() => {
    if (!y)
      return;
    const Q = Cb(() => {
      M();
    }), ie = kr(Bi(s));
    return ie.addEventListener("resize", Q), () => {
      Q.clear(), ie.removeEventListener("resize", Q);
    };
  }, [s, y, M]);
  let U = T;
  const j = {
    slots: {
      transition: w,
      ...b
    },
    slotProps: {
      transition: v,
      paper: m,
      ...x
    }
  }, [W, ee] = an("transition", {
    elementType: Da,
    externalForwardedProps: j,
    ownerState: I,
    getSlotProps: (Q) => ({
      ...Q,
      onEntering: (ie, F) => {
        var he;
        (he = Q.onEntering) == null || he.call(Q, ie, F), V();
      },
      onExited: (ie) => {
        var F;
        (F = Q.onExited) == null || F.call(Q, ie), Y();
      }
    }),
    additionalProps: {
      appear: !0,
      in: y
    }
  });
  T === "auto" && !W.muiSupportAuto && (U = void 0);
  const K = f || (s ? Kn(Bi(s)).body : void 0), [oe, {
    slots: ne,
    slotProps: se,
    ...de
  }] = an("root", {
    ref: n,
    elementType: GI,
    externalForwardedProps: {
      ...j,
      ...R
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: b.backdrop
      },
      slotProps: {
        backdrop: qk(typeof x.backdrop == "function" ? x.backdrop(I) : x.backdrop, {
          invisible: !0
        })
      },
      container: K,
      open: y
    },
    ownerState: I,
    className: Ee(p.root, d)
  }), [X, ae] = an("paper", {
    ref: $,
    className: p.paper,
    elementType: Kb,
    externalForwardedProps: j,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: h,
      style: D ? void 0 : {
        opacity: 0
      }
    },
    ownerState: I
  });
  return /* @__PURE__ */ k(oe, {
    ...de,
    ...!vu(oe) && {
      slots: ne,
      slotProps: se,
      disableScrollLock: S
    },
    children: /* @__PURE__ */ k(W, {
      ...ee,
      timeout: U,
      children: /* @__PURE__ */ k(X, {
        ...ae,
        children: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (Xb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: eo,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: Cs(i.oneOfType([ds, i.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = Bi(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: i.shape({
    horizontal: i.oneOfType([i.oneOf(["center", "left", "right"]), i.number]).isRequired,
    vertical: i.oneOfType([i.oneOf(["bottom", "center", "top"]), i.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: i.shape({
    left: i.number.isRequired,
    top: i.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: i.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: i.object,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([ds, i.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: i.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: Pb,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: i.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: i.shape({
    component: Tb
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: i.shape({
    horizontal: i.oneOfType([i.oneOf(["center", "left", "right"]), i.number]).isRequired,
    vertical: i.oneOfType([i.oneOf(["bottom", "center", "top"]), i.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: i.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: i.object
});
function KI(e) {
  return jt("MuiMenu", e);
}
Ut("MuiMenu", ["root", "paper", "list"]);
const XI = {
  vertical: "top",
  horizontal: "right"
}, QI = {
  vertical: "top",
  horizontal: "left"
}, JI = (e) => {
  const {
    classes: t
  } = e;
  return Wt({
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  }, KI, t);
}, ZI = Ue(Xb, {
  shouldForwardProp: (e) => br(e) || e === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), eN = Ue(Kb, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}), tN = Ue(Wb, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (e, t) => t.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), Qb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiMenu"
  }), {
    autoFocus: o = !0,
    children: s,
    className: a,
    disableAutoFocusItem: l = !1,
    MenuListProps: c = {},
    onClose: u,
    open: d,
    PaperProps: f = {},
    PopoverClasses: h,
    transitionDuration: g = "auto",
    TransitionProps: {
      onEntering: y,
      ...m
    } = {},
    variant: b = "selectedMenu",
    slots: x = {},
    slotProps: E = {},
    ...w
  } = r, T = OP(), v = {
    ...r,
    autoFocus: o,
    disableAutoFocusItem: l,
    MenuListProps: c,
    onEntering: y,
    PaperProps: f,
    transitionDuration: g,
    TransitionProps: m,
    variant: b
  }, S = JI(v), R = o && !l && d, $ = C.useRef(null), I = (U, j) => {
    $.current && $.current.adjustStyleForScrollbar(U, {
      direction: T ? "rtl" : "ltr"
    }), y && y(U, j);
  }, p = (U) => {
    U.key === "Tab" && (U.preventDefault(), u && u(U, "tabKeyDown"));
  };
  let O = -1;
  C.Children.map(s, (U, j) => {
    /* @__PURE__ */ C.isValidElement(U) && (process.env.NODE_ENV !== "production" && On.isFragment(U) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), U.props.disabled || (b === "selectedMenu" && U.props.selected || O === -1) && (O = j));
  });
  const P = {
    slots: x,
    slotProps: {
      list: c,
      transition: m,
      paper: f,
      ...E
    }
  }, A = $k({
    elementType: x.root,
    externalSlotProps: E.root,
    ownerState: v,
    className: [S.root, a]
  }), [D, _] = an("paper", {
    className: S.paper,
    elementType: eN,
    externalForwardedProps: P,
    shouldForwardComponentProp: !0,
    ownerState: v
  }), [M, V] = an("list", {
    className: Ee(S.list, c.className),
    elementType: tN,
    shouldForwardComponentProp: !0,
    externalForwardedProps: P,
    getSlotProps: (U) => ({
      ...U,
      onKeyDown: (j) => {
        var W;
        p(j), (W = U.onKeyDown) == null || W.call(U, j);
      }
    }),
    ownerState: v
  }), Y = typeof P.slotProps.transition == "function" ? P.slotProps.transition(v) : P.slotProps.transition;
  return /* @__PURE__ */ k(ZI, {
    onClose: u,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: T ? "right" : "left"
    },
    transformOrigin: T ? XI : QI,
    slots: {
      root: x.root,
      paper: D,
      backdrop: x.backdrop,
      ...x.transition && {
        // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover
        transition: x.transition
      }
    },
    slotProps: {
      root: A,
      paper: _,
      backdrop: typeof E.backdrop == "function" ? E.backdrop(v) : E.backdrop,
      transition: {
        ...Y,
        onEntering: (...U) => {
          var j;
          I(...U), (j = Y == null ? void 0 : Y.onEntering) == null || j.call(Y, ...U);
        }
      }
    },
    open: d,
    ref: n,
    transitionDuration: g,
    ownerState: v,
    ...w,
    classes: h,
    children: /* @__PURE__ */ k(M, {
      actions: $,
      autoFocus: o && (O === -1 || l),
      autoFocusItem: R,
      variant: b,
      ...V,
      children: s
    })
  });
});
process.env.NODE_ENV !== "production" && (Qb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: i.oneOfType([ds, i.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: i.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: i.bool,
  /**
   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.
   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  MenuListProps: i.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: i.object,
  /**
   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.
   */
  PopoverClasses: i.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    list: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    list: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: i.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: i.oneOf(["menu", "selectedMenu"])
});
function nN(e) {
  return jt("MuiNativeSelect", e);
}
const Kd = Ut("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), rN = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: r,
    multiple: o,
    open: s,
    error: a
  } = e, l = {
    select: ["select", n, r && "disabled", o && "multiple", a && "error"],
    icon: ["icon", `icon${Ht(n)}`, s && "iconOpen", r && "disabled"]
  };
  return Wt(l, nN, t);
}, Jb = Ue("select")(({
  theme: e
}) => ({
  // Reset
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  // Reset
  borderRadius: 0,
  cursor: "pointer",
  "&:focus": {
    // Reset Chrome style
    borderRadius: 0
  },
  [`&.${Kd.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (e.vars || e).palette.background.paper
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.variant !== "filled" && t.variant !== "outlined",
    style: {
      // Bump specificity to allow extending custom inputs
      "&&&": {
        paddingRight: 24,
        minWidth: 16
        // So it doesn't collapse.
      }
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      "&&&": {
        paddingRight: 32
      }
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius,
      "&:focus": {
        borderRadius: (e.vars || e).shape.borderRadius
        // Reset the reset for Chrome style
      },
      "&&&": {
        paddingRight: 32
      }
    }
  }]
})), oN = Ue(Jb, {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: br,
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.select, t[n.variant], n.error && t.error, {
      [`&.${Kd.multiple}`]: t.multiple
    }];
  }
})({}), Zb = Ue("svg")(({
  theme: e
}) => ({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  // Center vertically, height is 1em
  top: "calc(50% - .5em)",
  // Don't block pointer events on the select under the icon.
  pointerEvents: "none",
  color: (e.vars || e).palette.action.active,
  [`&.${Kd.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.open,
    style: {
      transform: "rotate(180deg)"
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      right: 7
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      right: 7
    }
  }]
})), iN = Ue(Zb, {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${Ht(n.variant)}`], n.open && t.iconOpen];
  }
})({}), ev = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    className: r,
    disabled: o,
    error: s,
    IconComponent: a,
    inputRef: l,
    variant: c = "standard",
    ...u
  } = t, d = {
    ...t,
    disabled: o,
    variant: c,
    error: s
  }, f = rN(d);
  return /* @__PURE__ */ Pe(C.Fragment, {
    children: [/* @__PURE__ */ k(oN, {
      ownerState: d,
      className: Ee(f.select, r),
      disabled: o,
      ref: l || n,
      ...u
    }), t.multiple ? null : /* @__PURE__ */ k(iN, {
      as: a,
      ownerState: d,
      className: f.icon
    })]
  });
});
process.env.NODE_ENV !== "production" && (ev.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The CSS class name of the select element.
   */
  className: i.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: i.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: i.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: eo,
  /**
   * @ignore
   */
  multiple: i.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: i.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The input value.
   */
  value: i.any,
  /**
   * The variant to use.
   */
  variant: i.oneOf(["standard", "outlined", "filled"])
});
function tv(e) {
  return jt("MuiSelect", e);
}
const Oi = Ut("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]);
var zm;
const sN = Ue(Jb, {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [
      // Win specificity over the input base
      {
        [`&.${Oi.select}`]: t.select
      },
      {
        [`&.${Oi.select}`]: t[n.variant]
      },
      {
        [`&.${Oi.error}`]: t.error
      },
      {
        [`&.${Oi.multiple}`]: t.multiple
      }
    ];
  }
})({
  // Win specificity over the input base
  [`&.${Oi.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
}), aN = Ue(Zb, {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${Ht(n.variant)}`], n.open && t.iconOpen];
  }
})({}), lN = Ue("input", {
  shouldForwardProp: (e) => vb(e) && e !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (e, t) => t.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function Wm(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
function cN(e) {
  return e == null || typeof e == "string" && !e.trim();
}
const uN = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: r,
    multiple: o,
    open: s,
    error: a
  } = e, l = {
    select: ["select", n, r && "disabled", o && "multiple", a && "error"],
    icon: ["icon", `icon${Ht(n)}`, s && "iconOpen", r && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return Wt(l, tv, t);
}, nv = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var Te;
  const {
    "aria-describedby": r,
    "aria-label": o,
    autoFocus: s,
    autoWidth: a,
    children: l,
    className: c,
    defaultOpen: u,
    defaultValue: d,
    disabled: f,
    displayEmpty: h,
    error: g = !1,
    IconComponent: y,
    inputRef: m,
    labelId: b,
    MenuProps: x = {},
    multiple: E,
    name: w,
    onBlur: T,
    onChange: v,
    onClose: S,
    onFocus: R,
    onOpen: $,
    open: I,
    readOnly: p,
    renderValue: O,
    required: P,
    SelectDisplayProps: A = {},
    tabIndex: D,
    // catching `type` from Input which makes no sense for SelectInput
    type: _,
    value: M,
    variant: V = "standard",
    ...Y
  } = t, [U, j] = Cm({
    controlled: M,
    default: d,
    name: "Select"
  }), [W, ee] = Cm({
    controlled: I,
    default: u,
    name: "Select"
  }), K = C.useRef(null), oe = C.useRef(null), [ne, se] = C.useState(null), {
    current: de
  } = C.useRef(I != null), [X, ae] = C.useState(), Q = Vn(n, m), ie = C.useCallback((le) => {
    oe.current = le, le && se(le);
  }, []), F = ne == null ? void 0 : ne.parentNode;
  C.useImperativeHandle(Q, () => ({
    focus: () => {
      oe.current.focus();
    },
    node: K.current,
    value: U
  }), [U]), C.useEffect(() => {
    u && W && ne && !de && (ae(a ? null : F.clientWidth), oe.current.focus());
  }, [ne, a]), C.useEffect(() => {
    s && oe.current.focus();
  }, [s]), C.useEffect(() => {
    if (!b)
      return;
    const le = Kn(oe.current).getElementById(b);
    if (le) {
      const we = () => {
        getSelection().isCollapsed && oe.current.focus();
      };
      return le.addEventListener("click", we), () => {
        le.removeEventListener("click", we);
      };
    }
  }, [b]);
  const he = (le, we) => {
    le ? $ && $(we) : S && S(we), de || (ae(a ? null : F.clientWidth), ee(le));
  }, fe = (le) => {
    le.button === 0 && (le.preventDefault(), oe.current.focus(), he(!0, le));
  }, Se = (le) => {
    he(!1, le);
  }, Le = C.Children.toArray(l), Ae = (le) => {
    const we = Le.find((Me) => Me.props.value === le.target.value);
    we !== void 0 && (j(we.props.value), v && v(le, we));
  }, Ie = (le) => (we) => {
    let Me;
    if (we.currentTarget.hasAttribute("tabindex")) {
      if (E) {
        Me = Array.isArray(U) ? U.slice() : [];
        const ze = U.indexOf(le.props.value);
        ze === -1 ? Me.push(le.props.value) : Me.splice(ze, 1);
      } else
        Me = le.props.value;
      if (le.props.onClick && le.props.onClick(we), U !== Me && (j(Me), v)) {
        const ze = we.nativeEvent || we, Ye = new ze.constructor(ze.type, ze);
        Object.defineProperty(Ye, "target", {
          writable: !0,
          value: {
            value: Me,
            name: w
          }
        }), v(Ye, le);
      }
      E || he(!1, we);
    }
  }, Re = (le) => {
    p || [
      " ",
      "ArrowUp",
      "ArrowDown",
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
      "Enter"
    ].includes(le.key) && (le.preventDefault(), he(!0, le));
  }, Be = ne !== null && W, Oe = (le) => {
    !Be && T && (Object.defineProperty(le, "target", {
      writable: !0,
      value: {
        value: U,
        name: w
      }
    }), T(le));
  };
  delete Y["aria-invalid"];
  let N, q;
  const J = [];
  let H = !1, B = !1;
  (Aa({
    value: U
  }) || h) && (O ? N = O(U) : H = !0);
  const z = Le.map((le) => {
    if (!/* @__PURE__ */ C.isValidElement(le))
      return null;
    process.env.NODE_ENV !== "production" && On.isFragment(le) && console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    let we;
    if (E) {
      if (!Array.isArray(U))
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `value` prop must be an array when using the `Select` component with `multiple`." : ho(2));
      we = U.some((Me) => Wm(Me, le.props.value)), we && H && J.push(le.props.children);
    } else
      we = Wm(U, le.props.value), we && H && (q = le.props.children);
    return we && (B = !0), /* @__PURE__ */ C.cloneElement(le, {
      "aria-selected": we ? "true" : "false",
      onClick: Ie(le),
      onKeyUp: (Me) => {
        Me.key === " " && Me.preventDefault(), le.props.onKeyUp && le.props.onKeyUp(Me);
      },
      role: "option",
      selected: we,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": le.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  process.env.NODE_ENV !== "production" && C.useEffect(() => {
    if (!B && !E && U !== "") {
      const le = Le.map((we) => we.props.value);
      console.warn([`MUI: You have provided an out-of-range value \`${U}\` for the select ${w ? `(name="${w}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${le.filter((we) => we != null).map((we) => `\`${we}\``).join(", ") || '""'}.`].join(`
`));
    }
  }, [B, Le, E, w, U]), H && (E ? J.length === 0 ? N = null : N = J.reduce((le, we, Me) => (le.push(we), Me < J.length - 1 && le.push(", "), le), []) : N = q);
  let G = X;
  !a && de && ne && (G = F.clientWidth);
  let pe;
  typeof D < "u" ? pe = D : pe = f ? null : 0;
  const me = A.id || (w ? `mui-component-select-${w}` : void 0), re = {
    ...t,
    variant: V,
    value: U,
    open: Be,
    error: g
  }, Z = uN(re), te = {
    ...x.PaperProps,
    ...(Te = x.slotProps) == null ? void 0 : Te.paper
  }, ye = xb();
  return /* @__PURE__ */ Pe(C.Fragment, {
    children: [/* @__PURE__ */ k(sN, {
      as: "div",
      ref: ie,
      tabIndex: pe,
      role: "combobox",
      "aria-controls": Be ? ye : void 0,
      "aria-disabled": f ? "true" : void 0,
      "aria-expanded": Be ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": o,
      "aria-labelledby": [b, me].filter(Boolean).join(" ") || void 0,
      "aria-describedby": r,
      "aria-required": P ? "true" : void 0,
      "aria-invalid": g ? "true" : void 0,
      onKeyDown: Re,
      onMouseDown: f || p ? null : fe,
      onBlur: Oe,
      onFocus: R,
      ...A,
      ownerState: re,
      className: Ee(A.className, Z.select, c),
      id: me,
      children: cN(N) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        zm || (zm = /* @__PURE__ */ k("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      ) : N
    }), /* @__PURE__ */ k(lN, {
      "aria-invalid": g,
      value: Array.isArray(U) ? U.join(",") : U,
      name: w,
      ref: K,
      "aria-hidden": !0,
      onChange: Ae,
      tabIndex: -1,
      disabled: f,
      className: Z.nativeInput,
      autoFocus: s,
      required: P,
      ...Y,
      ownerState: re
    }), /* @__PURE__ */ k(aN, {
      as: y,
      className: Z.icon,
      ownerState: re
    }), /* @__PURE__ */ k(Qb, {
      id: `menu-${w || ""}`,
      anchorEl: F,
      open: Be,
      onClose: Se,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      },
      ...x,
      slotProps: {
        ...x.slotProps,
        list: {
          "aria-labelledby": b,
          role: "listbox",
          "aria-multiselectable": E ? "true" : void 0,
          disableListWrap: !0,
          id: ye,
          ...x.MenuListProps
        },
        paper: {
          ...te,
          style: {
            minWidth: G,
            ...te != null ? te.style : null
          }
        }
      },
      children: z
    })]
  });
});
process.env.NODE_ENV !== "production" && (nv.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": i.string,
  /**
   * @ignore
   */
  "aria-label": i.string,
  /**
   * @ignore
   */
  autoFocus: i.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: i.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The CSS class name of the select element.
   */
  className: i.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: i.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: i.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: i.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: i.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: eo,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: i.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: i.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: i.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: i.string,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: i.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool,
  /**
   * @ignore
   */
  readOnly: i.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: i.func,
  /**
   * If `true`, the component is required.
   */
  required: i.bool,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: i.object,
  /**
   * @ignore
   */
  tabIndex: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  type: i.any,
  /**
   * The input value.
   */
  value: i.any,
  /**
   * The variant to use.
   */
  variant: i.oneOf(["standard", "outlined", "filled"])
});
const dN = Uk(/* @__PURE__ */ k("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown"), fN = (e) => {
  const {
    classes: t
  } = e, r = Wt({
    root: ["root"]
  }, tv, t);
  return {
    ...t,
    ...r
  };
}, Xd = {
  name: "MuiSelect",
  overridesResolver: (e, t) => t.root,
  shouldForwardProp: (e) => br(e) && e !== "variant",
  slot: "Root"
}, pN = Ue(Ul, Xd)(""), mN = Ue(ql, Xd)(""), hN = Ue(Hl, Xd)(""), Qd = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    name: "MuiSelect",
    props: t
  }), {
    autoWidth: o = !1,
    children: s,
    classes: a = {},
    className: l,
    defaultOpen: c = !1,
    displayEmpty: u = !1,
    IconComponent: d = dN,
    id: f,
    input: h,
    inputProps: g,
    label: y,
    labelId: m,
    MenuProps: b,
    multiple: x = !1,
    native: E = !1,
    onClose: w,
    onOpen: T,
    open: v,
    renderValue: S,
    SelectDisplayProps: R,
    variant: $ = "outlined",
    ...I
  } = r, p = E ? ev : nv, O = gi(), P = hi({
    props: r,
    muiFormControl: O,
    states: ["variant", "error"]
  }), A = P.variant || $, D = {
    ...r,
    variant: A,
    classes: a
  }, _ = fN(D), {
    root: M,
    ...V
  } = _, Y = h || {
    standard: /* @__PURE__ */ k(pN, {
      ownerState: D
    }),
    outlined: /* @__PURE__ */ k(mN, {
      label: y,
      ownerState: D
    }),
    filled: /* @__PURE__ */ k(hN, {
      ownerState: D
    })
  }[A], U = Vn(n, Rs(Y));
  return /* @__PURE__ */ k(C.Fragment, {
    children: /* @__PURE__ */ C.cloneElement(Y, {
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: p,
      inputProps: {
        children: s,
        error: P.error,
        IconComponent: d,
        variant: A,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: x,
        ...E ? {
          id: f
        } : {
          autoWidth: o,
          defaultOpen: c,
          displayEmpty: u,
          labelId: m,
          MenuProps: b,
          onClose: w,
          onOpen: T,
          open: v,
          renderValue: S,
          SelectDisplayProps: {
            id: f,
            ...R
          }
        },
        ...g,
        classes: g ? ur(V, g.classes) : V,
        ...h ? h.props.inputProps : {}
      },
      ...(x && E || u) && A === "outlined" ? {
        notched: !0
      } : {},
      ref: U,
      className: Ee(Y.props.className, l, _.root),
      // If a custom input is provided via 'input' prop, do not allow 'variant' to be propagated to it's root element. See https://github.com/mui/material-ui/issues/33894.
      ...!h && {
        variant: A
      },
      ...I
    })
  });
});
process.env.NODE_ENV !== "production" && (Qd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: i.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: i.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: i.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: i.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: i.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: i.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: i.object,
  /**
   * See [OutlinedInput#label](https://mui.com/material-ui/api/outlined-input/#props)
   */
  label: i.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: i.string,
  /**
   * Props applied to the [`Menu`](https://mui.com/material-ui/api/menu/) element.
   */
  MenuProps: i.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: i.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: i.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: i.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: i.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: i.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: i.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: i.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: i.oneOfType([i.oneOf([""]), i.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
});
Qd.muiName = "Select";
function gN(e) {
  return jt("MuiTextField", e);
}
Ut("MuiTextField", ["root"]);
const yN = {
  standard: Ul,
  filled: Hl,
  outlined: ql
}, bN = (e) => {
  const {
    classes: t
  } = e;
  return Wt({
    root: ["root"]
  }, gN, t);
}, vN = Ue(Fb, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), rv = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Xt({
    props: t,
    name: "MuiTextField"
  }), {
    autoComplete: o,
    autoFocus: s = !1,
    children: a,
    className: l,
    color: c = "primary",
    defaultValue: u,
    disabled: d = !1,
    error: f = !1,
    FormHelperTextProps: h,
    fullWidth: g = !1,
    helperText: y,
    id: m,
    InputLabelProps: b,
    inputProps: x,
    InputProps: E,
    inputRef: w,
    label: T,
    maxRows: v,
    minRows: S,
    multiline: R = !1,
    name: $,
    onBlur: I,
    onChange: p,
    onFocus: O,
    placeholder: P,
    required: A = !1,
    rows: D,
    select: _ = !1,
    SelectProps: M,
    slots: V = {},
    slotProps: Y = {},
    type: U,
    value: j,
    variant: W = "outlined",
    ...ee
  } = r, K = {
    ...r,
    autoFocus: s,
    color: c,
    disabled: d,
    error: f,
    fullWidth: g,
    multiline: R,
    required: A,
    select: _,
    variant: W
  }, oe = bN(K);
  process.env.NODE_ENV !== "production" && _ && !a && console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
  const ne = xb(m), se = y && ne ? `${ne}-helper-text` : void 0, de = T && ne ? `${ne}-label` : void 0, X = yN[W], ae = {
    slots: V,
    slotProps: {
      input: E,
      inputLabel: b,
      htmlInput: x,
      formHelperText: h,
      select: M,
      ...Y
    }
  }, Q = {}, ie = ae.slotProps.inputLabel;
  W === "outlined" && (ie && typeof ie.shrink < "u" && (Q.notched = ie.shrink), Q.label = T), _ && ((!M || !M.native) && (Q.id = void 0), Q["aria-describedby"] = void 0);
  const [F, he] = an("root", {
    elementType: vN,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...ae,
      ...ee
    },
    ownerState: K,
    className: Ee(oe.root, l),
    ref: n,
    additionalProps: {
      disabled: d,
      error: f,
      fullWidth: g,
      required: A,
      color: c,
      variant: W
    }
  }), [fe, Se] = an("input", {
    elementType: X,
    externalForwardedProps: ae,
    additionalProps: Q,
    ownerState: K
  }), [Le, Ae] = an("inputLabel", {
    elementType: Bb,
    externalForwardedProps: ae,
    ownerState: K
  }), [Ie, Re] = an("htmlInput", {
    elementType: "input",
    externalForwardedProps: ae,
    ownerState: K
  }), [Be, Oe] = an("formHelperText", {
    elementType: jb,
    externalForwardedProps: ae,
    ownerState: K
  }), [N, q] = an("select", {
    elementType: Qd,
    externalForwardedProps: ae,
    ownerState: K
  }), J = /* @__PURE__ */ k(fe, {
    "aria-describedby": se,
    autoComplete: o,
    autoFocus: s,
    defaultValue: u,
    fullWidth: g,
    multiline: R,
    name: $,
    rows: D,
    maxRows: v,
    minRows: S,
    type: U,
    value: j,
    id: ne,
    inputRef: w,
    onBlur: I,
    onChange: p,
    onFocus: O,
    placeholder: P,
    inputProps: Re,
    slots: {
      input: V.htmlInput ? Ie : void 0
    },
    ...Se
  });
  return /* @__PURE__ */ Pe(F, {
    ...he,
    children: [T != null && T !== "" && /* @__PURE__ */ k(Le, {
      htmlFor: ne,
      id: de,
      ...Ae,
      children: T
    }), _ ? /* @__PURE__ */ k(N, {
      "aria-describedby": se,
      id: ne,
      labelId: de,
      value: j,
      input: J,
      ...q,
      children: a
    }) : J, y && /* @__PURE__ */ k(Be, {
      id: se,
      ...Oe,
      children: y
    })]
  });
});
process.env.NODE_ENV !== "production" && (rv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: i.bool,
  /**
   * @ignore
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: i.bool,
  /**
   * Props applied to the [`FormHelperText`](https://mui.com/material-ui/api/form-helper-text/) element.
   * @deprecated Use `slotProps.formHelperText` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  FormHelperTextProps: i.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The helper text content.
   */
  helperText: i.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: i.string,
  /**
   * Props applied to the [`InputLabel`](https://mui.com/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   * @deprecated Use `slotProps.inputLabel` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputLabelProps: i.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.htmlInput` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: i.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](https://mui.com/material-ui/api/filled-input/),
   * [`OutlinedInput`](https://mui.com/material-ui/api/outlined-input/) or [`Input`](https://mui.com/material-ui/api/input/)
   * component depending on the `variant` prop value.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: eo,
  /**
   * The label content.
   */
  label: i.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: i.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * Render a [`Select`](https://mui.com/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: i.bool,
  /**
   * Props applied to the [`Select`](https://mui.com/material-ui/api/select/) element.
   * @deprecated Use `slotProps.select` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SelectProps: i.object,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    formHelperText: i.oneOfType([i.func, i.object]),
    htmlInput: i.oneOfType([i.func, i.object]),
    input: i.oneOfType([i.func, i.object]),
    inputLabel: i.oneOfType([i.func, i.object]),
    select: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    formHelperText: i.elementType,
    htmlInput: i.elementType,
    input: i.elementType,
    inputLabel: i.elementType,
    root: i.elementType,
    select: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
});
const xN = Ut("MuiBox", ["root"]), wN = bb(), ov = dP({
  themeId: Ol,
  defaultTheme: wN,
  defaultClassName: xN.root,
  generateClassName: mb.generate
});
process.env.NODE_ENV !== "production" && (ov.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
const TN = Ue(rv)`
  input {
    text-align: center;
  }
`, SN = {
  TextFieldStyled: TN
}, EN = (e) => /* @__PURE__ */ k(SN.TextFieldStyled, { ...e }), Ri = {
  left: "ArrowLeft",
  right: "ArrowRight",
  backspace: "Backspace",
  home: "Home",
  end: "End"
};
function CN(e, t) {
  return e <= 0 ? [] : Array.from({ length: e }, t);
}
function ON(e, t, n) {
  return e.map((r, o) => t === o ? n : r);
}
function Um(e) {
  return e.join("");
}
function Hm(e, t) {
  return [...e, t];
}
function RN(e, t, n) {
  return e.reduce(
    (r, o, s) => {
      const { characters: a, restArrayMerged: l } = r;
      if (s < n)
        return {
          restArrayMerged: l,
          characters: Hm(a, o)
        };
      const [c, ...u] = l;
      return {
        restArrayMerged: u,
        characters: Hm(a, c || "")
      };
    },
    {
      restArrayMerged: t,
      characters: []
    }
  ).characters;
}
function $N(e) {
  return (t) => {
    e.forEach((n) => {
      typeof n == "function" ? n(t) : n != null && (n.current = t);
    });
  };
}
function PN(e) {
  return e.split("");
}
function qm(e) {
  const t = L.useRef(() => {
    throw new Error("Cannot call an event handler while rendering.");
  });
  return L.useInsertionEffect(() => {
    t.current = e;
  }), L.useCallback((...n) => {
    var r;
    return (r = t.current) == null ? void 0 : r.call(t, ...n);
  }, []);
}
const kN = () => !0, IN = L.forwardRef(
  (e, t) => {
    const {
      value: n = "",
      length: r = 4,
      autoFocus: o = !1,
      onChange: s,
      TextFieldsProps: a,
      onComplete: l,
      validateChar: c = kN,
      className: u,
      onBlur: d,
      ...f
    } = e, h = L.useRef(n), g = qm(l), y = qm((O) => {
      const P = O.slice(0, r);
      return {
        isCompleted: P.length === r,
        finalValue: P
      };
    });
    L.useEffect(() => {
      const { isCompleted: O, finalValue: P } = y(
        h.current
      );
      O && g(P);
    }, [r, g, y]);
    const m = CN(
      r,
      (O, P) => ({
        character: n[P] || "",
        inputRef: L.createRef()
      })
    ), b = (O) => m.findIndex(({ inputRef: P }) => P.current === O), x = () => m.map(({ character: O }) => O), E = (O, P) => {
      const A = ON(
        x(),
        O,
        P
      );
      return Um(A);
    }, w = (O) => {
      var P, A;
      (A = (P = m[O]) == null ? void 0 : P.inputRef.current) == null || A.focus();
    }, T = (O) => {
      var P, A;
      (A = (P = m[O]) == null ? void 0 : P.inputRef.current) == null || A.select();
    }, v = (O) => {
      O + 1 !== r && (m[O + 1].character ? T(O + 1) : w(O + 1));
    }, S = (O, P) => typeof c != "function" ? !0 : c(O, P), R = (O) => {
      const P = b(O.target);
      if (P === 0 && O.target.value.length > 1) {
        const { finalValue: Y, isCompleted: U } = y(
          O.target.value
        );
        s == null || s(Y), U && (l == null || l(Y)), T(Y.length - 1);
        return;
      }
      const A = O.target.value[0] || "";
      let D = A;
      D && !S(D, P) && (D = "");
      const _ = E(P, D);
      s == null || s(_);
      const { isCompleted: M, finalValue: V } = y(_);
      M && (l == null || l(V)), D !== "" ? _.length - 1 < P ? T(_.length) : v(P) : A === "" && _.length <= P && T(P - 1);
    }, $ = (O) => {
      const P = O.target, A = P.selectionStart, D = P.selectionEnd, _ = b(P), M = A === 0 && D === 0;
      if (P.value === O.key)
        O.preventDefault(), v(_);
      else if (Ri.backspace === O.key) {
        if (!P.value)
          O.preventDefault(), T(_ - 1);
        else if (M) {
          O.preventDefault();
          const V = E(_, "");
          s == null || s(V), V.length <= _ && T(_ - 1);
        }
      } else Ri.left === O.key ? (O.preventDefault(), T(_ - 1)) : Ri.right === O.key ? (O.preventDefault(), T(_ + 1)) : Ri.home === O.key ? (O.preventDefault(), T(0)) : Ri.end === O.key && (O.preventDefault(), T(m.length - 1));
    }, I = (O) => {
      const P = O.clipboardData.getData("text/plain"), A = O.target, D = m.findIndex(
        ({ character: j, inputRef: W }) => j === "" || W.current === A
      ), _ = x(), M = RN(
        _,
        PN(P),
        D
      ).map((j, W) => S(j, W) ? j : ""), V = Um(M);
      s == null || s(V);
      const { isCompleted: Y, finalValue: U } = y(V);
      Y ? (l == null || l(U), T(r - 1)) : T(V.length);
    }, p = (O) => {
      if (!m.some(({ inputRef: P }) => P.current === O.relatedTarget)) {
        const { isCompleted: P, finalValue: A } = y(n);
        d == null || d(A, P);
      }
    };
    return /* @__PURE__ */ k(
      ov,
      {
        display: "flex",
        gap: "20px",
        alignItems: "center",
        ref: t,
        className: `MuiOtpInput-Box ${u || ""}`,
        ...f,
        children: m.map(({ character: O, inputRef: P }, A) => {
          const {
            onPaste: D,
            onFocus: _,
            onKeyDown: M,
            className: V,
            onBlur: Y,
            inputRef: U,
            ...j
          } = typeof a == "function" ? a(A) || {} : a || {};
          return /* @__PURE__ */ k(
            EN,
            {
              autoFocus: o ? A === 0 : !1,
              autoComplete: "one-time-code",
              value: O,
              inputRef: $N([P, U]),
              className: `MuiOtpInput-TextField MuiOtpInput-TextField-${A + 1} ${V || ""}`,
              onPaste: (W) => {
                W.preventDefault(), I(W), D == null || D(W);
              },
              onFocus: (W) => {
                W.preventDefault(), W.target.select(), _ == null || _(W);
              },
              onChange: R,
              onKeyDown: (W) => {
                $(W), M == null || M(W);
              },
              onBlur: (W) => {
                Y == null || Y(W), p(W);
              },
              ...j
            },
            A
          );
        })
      }
    );
  }
), iv = _e(
  ({
    label: e = "",
    tooltip: t,
    value: n,
    onChange: r,
    isRequired: o,
    isDisabled: s,
    isError: a,
    errorMessage: l = ""
  }) => {
    const { textCommonStyles: c } = pl({
      isTitle: !1,
      isLabel: !0,
      textColor: s ? "disabled" : a ? "error" : "auto"
    });
    return /* @__PURE__ */ Pe(Kt, { gap: 0, children: [
      /* @__PURE__ */ k(
        ni,
        {
          label: e,
          elementId: void 0,
          tooltip: t,
          isRequired: o,
          isDisabled: s,
          isError: a
        }
      ),
      /* @__PURE__ */ k(
        IN,
        {
          value: n,
          onChange: r,
          length: 6,
          TextFieldsProps: {
            disabled: s,
            error: a
          },
          sx: {
            "& .MuiInputBase-root": {
              borderRadius: "8px"
            },
            "& input": {
              width: "8px",
              height: "8px",
              p: "16px",
              borderRadius: "8px"
            }
          }
        }
      ),
      /* @__PURE__ */ k(
        yn,
        {
          text: a ? l : "",
          isLabel: !0,
          sx: { ...c, minHeight: "24px" }
        }
      )
    ] });
  }
);
iv.displayName = "OtpInput";
const sv = _e(({ isError: e, isDisabled: t, fullWidth: n, sx: r, ...o }) => {
  const { inputCommonStyle: s } = Jy({
    isDisabled: t,
    isError: e
  }), [a, l] = Sr(!1);
  return /* @__PURE__ */ k(
    Cl,
    {
      type: a ? "text" : "password",
      fullWidth: n,
      isError: e,
      endAdornment: /* @__PURE__ */ k(
        Yn,
        {
          isCircle: !0,
          isGhost: !0,
          icon: a ? "solar:eye-closed-bold-duotone" : "solar:eye-bold-duotone",
          color: e ? "error" : "primary",
          sx: { mr: -2 },
          onClick: () => l((c) => !c)
        }
      ),
      sx: {
        width: n ? "100%" : `calc(${s.minWidth} - 40px) !important`,
        ...r
      },
      ...o
    }
  );
});
sv.displayName = "Password";
const NN = ui(/* @__PURE__ */ k("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "RadioButtonUnchecked"), AN = ui(/* @__PURE__ */ k("path", {
  d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
}), "RadioButtonChecked"), MN = ke("span", {
  shouldForwardProp: gr
})({
  position: "relative",
  display: "flex"
}), _N = ke(NN)({
  // Scale applied to prevent dot misalignment in Safari
  transform: "scale(1)"
}), DN = ke(AN)(Ke(({
  theme: e
}) => ({
  left: 0,
  position: "absolute",
  transform: "scale(0)",
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeIn,
    duration: e.transitions.duration.shortest
  }),
  variants: [{
    props: {
      checked: !0
    },
    style: {
      transform: "scale(1)",
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeOut,
        duration: e.transitions.duration.shortest
      })
    }
  }]
})));
function Jd(e) {
  const {
    checked: t = !1,
    classes: n = {},
    fontSize: r
  } = e, o = {
    ...e,
    checked: t
  };
  return /* @__PURE__ */ Pe(MN, {
    className: n.root,
    ownerState: o,
    children: [/* @__PURE__ */ k(_N, {
      fontSize: r,
      className: n.background,
      ownerState: o
    }), /* @__PURE__ */ k(DN, {
      fontSize: r,
      className: n.dot,
      ownerState: o
    })]
  });
}
process.env.NODE_ENV !== "production" && (Jd.propTypes = {
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   */
  fontSize: i.oneOf(["small", "medium"])
});
const av = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (av.displayName = "RadioGroupContext");
function BN() {
  return C.useContext(av);
}
function FN(e) {
  return gt("MuiRadio", e);
}
const Ym = wt("MuiRadio", ["root", "checked", "disabled", "colorPrimary", "colorSecondary", "sizeSmall"]), jN = (e) => {
  const {
    classes: t,
    color: n,
    size: r
  } = e, o = {
    root: ["root", `color${xe(n)}`, r !== "medium" && `size${xe(r)}`]
  };
  return {
    ...t,
    ...Ct(o, FN, t)
  };
}, LN = ke(Sl, {
  shouldForwardProp: (e) => gr(e) || e === "classes",
  name: "MuiRadio",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size !== "medium" && t[`size${xe(n.size)}`], t[`color${xe(n.color)}`]];
  }
})(Ke(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  [`&.${Ym.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: {
      color: "default",
      disabled: !1,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(cn()).map(([t]) => ({
    props: {
      color: t,
      disabled: !1,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(cn()).map(([t]) => ({
    props: {
      color: t,
      disabled: !1
    },
    style: {
      [`&.${Ym.checked}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
})));
function VN(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
const zN = /* @__PURE__ */ k(Jd, {
  checked: !0
}), WN = /* @__PURE__ */ k(Jd, {}), lv = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Tt({
    props: t,
    name: "MuiRadio"
  }), {
    checked: o,
    checkedIcon: s = zN,
    color: a = "primary",
    icon: l = WN,
    name: c,
    onChange: u,
    size: d = "medium",
    className: f,
    disabled: h,
    disableRipple: g = !1,
    slots: y = {},
    slotProps: m = {},
    inputProps: b,
    ...x
  } = r, E = Tl();
  let w = h;
  E && typeof w > "u" && (w = E.disabled), w ?? (w = !1);
  const T = {
    ...r,
    disabled: w,
    disableRipple: g,
    color: a,
    size: d
  }, v = jN(T), S = BN();
  let R = o;
  const $ = zc(u, S && S.onChange);
  let I = c;
  S && (typeof R > "u" && (R = VN(S.value, r.value)), typeof I > "u" && (I = S.name));
  const p = m.input ?? b, [O, P] = at("root", {
    ref: n,
    elementType: LN,
    className: Ee(v.root, f),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: y,
      slotProps: m,
      ...x
    },
    getSlotProps: (A) => ({
      ...A,
      onChange: (D, ..._) => {
        var M;
        (M = A.onChange) == null || M.call(A, D, ..._), $(D, ..._);
      }
    }),
    ownerState: T,
    additionalProps: {
      type: "radio",
      icon: /* @__PURE__ */ C.cloneElement(l, {
        fontSize: l.props.fontSize ?? d
      }),
      checkedIcon: /* @__PURE__ */ C.cloneElement(s, {
        fontSize: s.props.fontSize ?? d
      }),
      disabled: w,
      name: I,
      checked: R,
      slots: y,
      slotProps: {
        // Do not forward `slotProps.root` again because it's already handled by the `RootSlot` in this file.
        input: typeof p == "function" ? p(T) : p
      }
    }
  });
  return /* @__PURE__ */ k(O, {
    ...P,
    classes: v
  });
});
process.env.NODE_ENV !== "production" && (lv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   * @default <RadioButtonIcon checked />
   */
  checkedIcon: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <RadioButtonIcon />
   */
  icon: i.node,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   * @deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputRef: Ir,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    input: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   */
  value: i.any
});
const cv = _e(
  ({ label: e = "", tooltip: t, name: n, options: r, optionLabelDirection: o = "end", value: s, onChange: a }) => /* @__PURE__ */ Pe(Kt, { gap: 0, children: [
    /* @__PURE__ */ k(ni, { label: e, elementId: void 0, tooltip: t }),
    /* @__PURE__ */ k(Kt, { gap: 0, children: r.map((l) => /* @__PURE__ */ k(
      El,
      {
        labelsDirection: "row",
        startLabel: o === "start" ? l.label : "",
        endLabel: o === "end" ? l.label : "",
        isDisabled: l.isDisabled,
        renderElement: (c) => /* @__PURE__ */ k(
          lv,
          {
            id: c,
            name: n,
            value: l.value,
            checked: s === l.value,
            disabled: l.isDisabled,
            onChange: (u) => a(r.find(({ value: d }) => d === u.target.value)),
            sx: {
              py: "6px",
              px: 0,
              mr: o === "start" ? "2px" : "8px",
              ml: o === "end" ? "2px" : "8px"
            }
          }
        )
      },
      l.value
    )) })
  ] })
);
cv.displayName = "Radios";
function UN(e) {
  return gt("MuiSwitch", e);
}
const on = wt("MuiSwitch", ["root", "edgeStart", "edgeEnd", "switchBase", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium", "checked", "disabled", "input", "thumb", "track"]), HN = (e) => {
  const {
    classes: t,
    edge: n,
    size: r,
    color: o,
    checked: s,
    disabled: a
  } = e, l = {
    root: ["root", n && `edge${xe(n)}`, `size${xe(r)}`],
    switchBase: ["switchBase", `color${xe(o)}`, s && "checked", a && "disabled"],
    thumb: ["thumb"],
    track: ["track"],
    input: ["input"]
  }, c = Ct(l, UN, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...c
  };
}, qN = ke("span", {
  name: "MuiSwitch",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.edge && t[`edge${xe(n.edge)}`], t[`size${xe(n.size)}`]];
  }
})({
  display: "inline-flex",
  width: 34 + 12 * 2,
  height: 14 + 12 * 2,
  overflow: "hidden",
  padding: 12,
  boxSizing: "border-box",
  position: "relative",
  flexShrink: 0,
  zIndex: 0,
  // Reset the stacking context.
  verticalAlign: "middle",
  // For correct alignment with the text.
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [{
    props: {
      edge: "start"
    },
    style: {
      marginLeft: -8
    }
  }, {
    props: {
      edge: "end"
    },
    style: {
      marginRight: -8
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      width: 40,
      height: 24,
      padding: 7,
      [`& .${on.thumb}`]: {
        width: 16,
        height: 16
      },
      [`& .${on.switchBase}`]: {
        padding: 4,
        [`&.${on.checked}`]: {
          transform: "translateX(16px)"
        }
      }
    }
  }]
}), YN = ke(Sl, {
  name: "MuiSwitch",
  slot: "SwitchBase",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.switchBase, {
      [`& .${on.input}`]: t.input
    }, n.color !== "default" && t[`color${xe(n.color)}`]];
  }
})(Ke(({
  theme: e
}) => ({
  position: "absolute",
  top: 0,
  left: 0,
  zIndex: 1,
  // Render above the focus ripple.
  color: e.vars ? e.vars.palette.Switch.defaultColor : `${e.palette.mode === "light" ? e.palette.common.white : e.palette.grey[300]}`,
  transition: e.transitions.create(["left", "transform"], {
    duration: e.transitions.duration.shortest
  }),
  [`&.${on.checked}`]: {
    transform: "translateX(20px)"
  },
  [`&.${on.disabled}`]: {
    color: e.vars ? e.vars.palette.Switch.defaultDisabledColor : `${e.palette.mode === "light" ? e.palette.grey[100] : e.palette.grey[600]}`
  },
  [`&.${on.checked} + .${on.track}`]: {
    opacity: 0.5
  },
  [`&.${on.disabled} + .${on.track}`]: {
    opacity: e.vars ? e.vars.opacity.switchTrackDisabled : `${e.palette.mode === "light" ? 0.12 : 0.2}`
  },
  [`& .${on.input}`]: {
    left: "-100%",
    width: "300%"
  }
})), Ke(({
  theme: e
}) => ({
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette.action.active, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  variants: [...Object.entries(e.palette).filter(cn(["light"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${on.checked}`]: {
        color: (e.vars || e).palette[t].main,
        "&:hover": {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[t].main, e.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        },
        [`&.${on.disabled}`]: {
          color: e.vars ? e.vars.palette.Switch[`${t}DisabledColor`] : `${e.palette.mode === "light" ? ci(e.palette[t].main, 0.62) : li(e.palette[t].main, 0.55)}`
        }
      },
      [`&.${on.checked} + .${on.track}`]: {
        backgroundColor: (e.vars || e).palette[t].main
      }
    }
  }))]
}))), GN = ke("span", {
  name: "MuiSwitch",
  slot: "Track",
  overridesResolver: (e, t) => t.track
})(Ke(({
  theme: e
}) => ({
  height: "100%",
  width: "100%",
  borderRadius: 14 / 2,
  zIndex: -1,
  transition: e.transitions.create(["opacity", "background-color"], {
    duration: e.transitions.duration.shortest
  }),
  backgroundColor: e.vars ? e.vars.palette.common.onBackground : `${e.palette.mode === "light" ? e.palette.common.black : e.palette.common.white}`,
  opacity: e.vars ? e.vars.opacity.switchTrack : `${e.palette.mode === "light" ? 0.38 : 0.3}`
}))), KN = ke("span", {
  name: "MuiSwitch",
  slot: "Thumb",
  overridesResolver: (e, t) => t.thumb
})(Ke(({
  theme: e
}) => ({
  boxShadow: (e.vars || e).shadows[1],
  backgroundColor: "currentColor",
  width: 20,
  height: 20,
  borderRadius: "50%"
}))), uv = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Tt({
    props: t,
    name: "MuiSwitch"
  }), {
    className: o,
    color: s = "primary",
    edge: a = !1,
    size: l = "medium",
    sx: c,
    slots: u = {},
    slotProps: d = {},
    ...f
  } = r, h = {
    ...r,
    color: s,
    edge: a,
    size: l
  }, g = HN(h), y = {
    slots: u,
    slotProps: d
  }, [m, b] = at("root", {
    className: Ee(g.root, o),
    elementType: qN,
    externalForwardedProps: y,
    ownerState: h,
    additionalProps: {
      sx: c
    }
  }), [x, E] = at("thumb", {
    className: g.thumb,
    elementType: KN,
    externalForwardedProps: y,
    ownerState: h
  }), w = /* @__PURE__ */ k(x, {
    ...E
  }), [T, v] = at("track", {
    className: g.track,
    elementType: GN,
    externalForwardedProps: y,
    ownerState: h
  });
  return /* @__PURE__ */ Pe(m, {
    ...b,
    children: [/* @__PURE__ */ k(YN, {
      type: "checkbox",
      icon: w,
      checkedIcon: w,
      ref: n,
      ownerState: h,
      ...f,
      classes: {
        ...g,
        root: g.switchBase
      },
      slots: {
        ...u.switchBase && {
          root: u.switchBase
        },
        ...u.input && {
          input: u.input
        }
      },
      slotProps: {
        ...d.switchBase && {
          root: typeof d.switchBase == "function" ? d.switchBase(h) : d.switchBase
        },
        ...d.input && {
          input: typeof d.input == "function" ? d.input(h) : d.input
        }
      }
    }), /* @__PURE__ */ k(T, {
      ...v
    })]
  });
});
process.env.NODE_ENV !== "production" && (uv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: i.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: i.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: i.node,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   * @deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputRef: Ir,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense switch styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    input: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    switchBase: i.oneOfType([i.func, i.object]),
    thumb: i.oneOfType([i.func, i.object]),
    track: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType,
    switchBase: i.elementType,
    thumb: i.elementType,
    track: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: i.any
});
const Zd = _e(
  ({ value: e, onChange: t, startLabel: n, endLabel: r, labelsDirection: o = "row", isDisabled: s }) => {
    const a = tn(
      (l) => /* @__PURE__ */ k(
        uv,
        {
          id: l,
          color: "primary",
          checked: e,
          disabled: s,
          onChange: (c) => t(c.target.checked),
          sx: {
            "& .MuiSwitch-track": {
              transition: "background-color 0s"
            }
          }
        }
      ),
      [e, t]
    );
    return n || r ? /* @__PURE__ */ k(
      El,
      {
        labelsDirection: o,
        startLabel: n,
        endLabel: r,
        isDisabled: s,
        renderElement: a
      }
    ) : a();
  }
);
Zd.displayName = "Switch";
var $s = (e) => e.type === "checkbox", lo = (e) => e instanceof Date, sn = (e) => e == null;
const dv = (e) => typeof e == "object";
var At = (e) => !sn(e) && !Array.isArray(e) && dv(e) && !lo(e), fv = (e) => At(e) && e.target ? $s(e.target) ? e.target.checked : e.target.value : e, XN = (e) => e.substring(0, e.search(/\.\d+(\.|$)/)) || e, pv = (e, t) => e.has(XN(t)), QN = (e) => {
  const t = e.constructor && e.constructor.prototype;
  return At(t) && t.hasOwnProperty("isPrototypeOf");
}, ef = typeof window < "u" && typeof window.HTMLElement < "u" && typeof document < "u";
function Et(e) {
  let t;
  const n = Array.isArray(e), r = typeof FileList < "u" ? e instanceof FileList : !1;
  if (e instanceof Date)
    t = new Date(e);
  else if (e instanceof Set)
    t = new Set(e);
  else if (!(ef && (e instanceof Blob || r)) && (n || At(e)))
    if (t = n ? [] : {}, !n && !QN(e))
      t = e;
    else
      for (const o in e)
        e.hasOwnProperty(o) && (t[o] = Et(e[o]));
  else
    return e;
  return t;
}
var Ps = (e) => Array.isArray(e) ? e.filter(Boolean) : [], mt = (e) => e === void 0, ve = (e, t, n) => {
  if (!t || !At(e))
    return n;
  const r = Ps(t.split(/[,[\].]+?/)).reduce((o, s) => sn(o) ? o : o[s], e);
  return mt(r) || r === e ? mt(e[t]) ? n : e[t] : r;
}, bn = (e) => typeof e == "boolean", tf = (e) => /^\w*$/.test(e), mv = (e) => Ps(e.replace(/["|']|\]/g, "").split(/\.|\[/)), Ge = (e, t, n) => {
  let r = -1;
  const o = tf(t) ? [t] : mv(t), s = o.length, a = s - 1;
  for (; ++r < s; ) {
    const l = o[r];
    let c = n;
    if (r !== a) {
      const u = e[l];
      c = At(u) || Array.isArray(u) ? u : isNaN(+o[r + 1]) ? {} : [];
    }
    if (l === "__proto__" || l === "constructor" || l === "prototype")
      return;
    e[l] = c, e = e[l];
  }
};
const ja = {
  BLUR: "blur",
  FOCUS_OUT: "focusout",
  CHANGE: "change"
}, An = {
  onBlur: "onBlur",
  onChange: "onChange",
  onSubmit: "onSubmit",
  onTouched: "onTouched",
  all: "all"
}, Tr = {
  max: "max",
  min: "min",
  maxLength: "maxLength",
  minLength: "minLength",
  pattern: "pattern",
  required: "required",
  validate: "validate"
}, hv = L.createContext(null), zn = () => L.useContext(hv), JN = (e) => {
  const { children: t, ...n } = e;
  return L.createElement(hv.Provider, { value: n }, t);
};
var gv = (e, t, n, r = !0) => {
  const o = {
    defaultValues: t._defaultValues
  };
  for (const s in e)
    Object.defineProperty(o, s, {
      get: () => {
        const a = s;
        return t._proxyFormState[a] !== An.all && (t._proxyFormState[a] = !r || An.all), n && (n[a] = !0), e[a];
      }
    });
  return o;
};
function ZN(e) {
  const t = zn(), { control: n = t.control, disabled: r, name: o, exact: s } = e || {}, [a, l] = L.useState(n._formState), c = L.useRef({
    isDirty: !1,
    isLoading: !1,
    dirtyFields: !1,
    touchedFields: !1,
    validatingFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  }), u = L.useRef(o);
  return u.current = o, L.useEffect(() => n._subscribe({
    name: u.current,
    formState: c.current,
    exact: s,
    callback: (d) => {
      !r && l({
        ...n._formState,
        ...d
      });
    }
  }), [n, r, s]), L.useEffect(() => {
    c.current.isValid && n._setValid(!0);
  }, [n]), L.useMemo(() => gv(a, n, c.current, !1), [a, n]);
}
var sr = (e) => typeof e == "string", yv = (e, t, n, r, o) => sr(e) ? (r && t.watch.add(e), ve(n, e, o)) : Array.isArray(e) ? e.map((s) => (r && t.watch.add(s), ve(n, s))) : (r && (t.watchAll = !0), n);
function eA(e) {
  const t = zn(), { control: n = t.control, name: r, defaultValue: o, disabled: s, exact: a } = e || {}, l = L.useRef(r), c = L.useRef(o);
  l.current = r, L.useEffect(() => n._subscribe({
    name: l.current,
    formState: {
      values: !0
    },
    exact: a,
    callback: (f) => !s && d(yv(l.current, n._names, f.values || n._formValues, !1, c.current))
  }), [n, s, a]);
  const [u, d] = L.useState(n._getWatch(r, o));
  return L.useEffect(() => n._removeUnmounted()), u;
}
function tA(e) {
  const t = zn(), { name: n, disabled: r, control: o = t.control, shouldUnregister: s } = e, a = pv(o._names.array, n), l = eA({
    control: o,
    name: n,
    defaultValue: ve(o._formValues, n, ve(o._defaultValues, n, e.defaultValue)),
    exact: !0
  }), c = ZN({
    control: o,
    name: n,
    exact: !0
  }), u = L.useRef(e), d = L.useRef(o.register(n, {
    ...e.rules,
    value: l,
    ...bn(e.disabled) ? { disabled: e.disabled } : {}
  })), f = L.useMemo(() => Object.defineProperties({}, {
    invalid: {
      enumerable: !0,
      get: () => !!ve(c.errors, n)
    },
    isDirty: {
      enumerable: !0,
      get: () => !!ve(c.dirtyFields, n)
    },
    isTouched: {
      enumerable: !0,
      get: () => !!ve(c.touchedFields, n)
    },
    isValidating: {
      enumerable: !0,
      get: () => !!ve(c.validatingFields, n)
    },
    error: {
      enumerable: !0,
      get: () => ve(c.errors, n)
    }
  }), [c, n]), h = L.useCallback((b) => d.current.onChange({
    target: {
      value: fv(b),
      name: n
    },
    type: ja.CHANGE
  }), [n]), g = L.useCallback(() => d.current.onBlur({
    target: {
      value: ve(o._formValues, n),
      name: n
    },
    type: ja.BLUR
  }), [n, o._formValues]), y = L.useCallback((b) => {
    const x = ve(o._fields, n);
    x && b && (x._f.ref = {
      focus: () => b.focus(),
      select: () => b.select(),
      setCustomValidity: (E) => b.setCustomValidity(E),
      reportValidity: () => b.reportValidity()
    });
  }, [o._fields, n]), m = L.useMemo(() => ({
    name: n,
    value: l,
    ...bn(r) || c.disabled ? { disabled: c.disabled || r } : {},
    onChange: h,
    onBlur: g,
    ref: y
  }), [n, r, c.disabled, h, g, y, l]);
  return L.useEffect(() => {
    const b = o._options.shouldUnregister || s;
    o.register(n, {
      ...u.current.rules,
      ...bn(u.current.disabled) ? { disabled: u.current.disabled } : {}
    });
    const x = (E, w) => {
      const T = ve(o._fields, E);
      T && T._f && (T._f.mount = w);
    };
    if (x(n, !0), b) {
      const E = Et(ve(o._options.defaultValues, n));
      Ge(o._defaultValues, n, E), mt(ve(o._formValues, n)) && Ge(o._formValues, n, E);
    }
    return !a && o.register(n), () => {
      (a ? b && !o._state.action : b) ? o.unregister(n) : x(n, !1);
    };
  }, [n, o, a, s]), L.useEffect(() => {
    o._setDisabledField({
      disabled: r,
      name: n
    });
  }, [r, n, o]), L.useMemo(() => ({
    field: m,
    formState: c,
    fieldState: f
  }), [m, c, f]);
}
const wo = (e) => e.render(tA(e));
var bv = (e, t, n, r, o) => t ? {
  ...n[e],
  types: {
    ...n[e] && n[e].types ? n[e].types : {},
    [r]: o || !0
  }
} : {}, fn = (e) => Array.isArray(e) ? e : [e], Gm = () => {
  let e = [];
  return {
    get observers() {
      return e;
    },
    next: (o) => {
      for (const s of e)
        s.next && s.next(o);
    },
    subscribe: (o) => (e.push(o), {
      unsubscribe: () => {
        e = e.filter((s) => s !== o);
      }
    }),
    unsubscribe: () => {
      e = [];
    }
  };
}, wu = (e) => sn(e) || !dv(e);
function jr(e, t) {
  if (wu(e) || wu(t))
    return e === t;
  if (lo(e) && lo(t))
    return e.getTime() === t.getTime();
  const n = Object.keys(e), r = Object.keys(t);
  if (n.length !== r.length)
    return !1;
  for (const o of n) {
    const s = e[o];
    if (!r.includes(o))
      return !1;
    if (o !== "ref") {
      const a = t[o];
      if (lo(s) && lo(a) || At(s) && At(a) || Array.isArray(s) && Array.isArray(a) ? !jr(s, a) : s !== a)
        return !1;
    }
  }
  return !0;
}
var Jt = (e) => At(e) && !Object.keys(e).length, nf = (e) => e.type === "file", Hn = (e) => typeof e == "function", La = (e) => {
  if (!ef)
    return !1;
  const t = e ? e.ownerDocument : 0;
  return e instanceof (t && t.defaultView ? t.defaultView.HTMLElement : HTMLElement);
}, vv = (e) => e.type === "select-multiple", rf = (e) => e.type === "radio", nA = (e) => rf(e) || $s(e), Cc = (e) => La(e) && e.isConnected;
function rA(e, t) {
  const n = t.slice(0, -1).length;
  let r = 0;
  for (; r < n; )
    e = mt(e) ? r++ : e[t[r++]];
  return e;
}
function oA(e) {
  for (const t in e)
    if (e.hasOwnProperty(t) && !mt(e[t]))
      return !1;
  return !0;
}
function Bt(e, t) {
  const n = Array.isArray(t) ? t : tf(t) ? [t] : mv(t), r = n.length === 1 ? e : rA(e, n), o = n.length - 1, s = n[o];
  return r && delete r[s], o !== 0 && (At(r) && Jt(r) || Array.isArray(r) && oA(r)) && Bt(e, n.slice(0, -1)), e;
}
var xv = (e) => {
  for (const t in e)
    if (Hn(e[t]))
      return !0;
  return !1;
};
function Va(e, t = {}) {
  const n = Array.isArray(e);
  if (At(e) || n)
    for (const r in e)
      Array.isArray(e[r]) || At(e[r]) && !xv(e[r]) ? (t[r] = Array.isArray(e[r]) ? [] : {}, Va(e[r], t[r])) : sn(e[r]) || (t[r] = !0);
  return t;
}
function wv(e, t, n) {
  const r = Array.isArray(e);
  if (At(e) || r)
    for (const o in e)
      Array.isArray(e[o]) || At(e[o]) && !xv(e[o]) ? mt(t) || wu(n[o]) ? n[o] = Array.isArray(e[o]) ? Va(e[o], []) : { ...Va(e[o]) } : wv(e[o], sn(t) ? {} : t[o], n[o]) : n[o] = !jr(e[o], t[o]);
  return n;
}
var $i = (e, t) => wv(e, t, Va(t));
const Km = {
  value: !1,
  isValid: !1
}, Xm = { value: !0, isValid: !0 };
var Tv = (e) => {
  if (Array.isArray(e)) {
    if (e.length > 1) {
      const t = e.filter((n) => n && n.checked && !n.disabled).map((n) => n.value);
      return { value: t, isValid: !!t.length };
    }
    return e[0].checked && !e[0].disabled ? (
      // @ts-expect-error expected to work in the browser
      e[0].attributes && !mt(e[0].attributes.value) ? mt(e[0].value) || e[0].value === "" ? Xm : { value: e[0].value, isValid: !0 } : Xm
    ) : Km;
  }
  return Km;
}, Sv = (e, { valueAsNumber: t, valueAsDate: n, setValueAs: r }) => mt(e) ? e : t ? e === "" ? NaN : e && +e : n && sr(e) ? new Date(e) : r ? r(e) : e;
const Qm = {
  isValid: !1,
  value: null
};
var Ev = (e) => Array.isArray(e) ? e.reduce((t, n) => n && n.checked && !n.disabled ? {
  isValid: !0,
  value: n.value
} : t, Qm) : Qm;
function Jm(e) {
  const t = e.ref;
  return nf(t) ? t.files : rf(t) ? Ev(e.refs).value : vv(t) ? [...t.selectedOptions].map(({ value: n }) => n) : $s(t) ? Tv(e.refs).value : Sv(mt(t.value) ? e.ref.value : t.value, e);
}
var iA = (e, t, n, r) => {
  const o = {};
  for (const s of e) {
    const a = ve(t, s);
    a && Ge(o, s, a._f);
  }
  return {
    criteriaMode: n,
    names: [...e],
    fields: o,
    shouldUseNativeValidation: r
  };
}, za = (e) => e instanceof RegExp, Pi = (e) => mt(e) ? e : za(e) ? e.source : At(e) ? za(e.value) ? e.value.source : e.value : e, Fo = (e) => ({
  isOnSubmit: !e || e === An.onSubmit,
  isOnBlur: e === An.onBlur,
  isOnChange: e === An.onChange,
  isOnAll: e === An.all,
  isOnTouch: e === An.onTouched
});
const Zm = "AsyncFunction";
var sA = (e) => !!e && !!e.validate && !!(Hn(e.validate) && e.validate.constructor.name === Zm || At(e.validate) && Object.values(e.validate).find((t) => t.constructor.name === Zm)), aA = (e) => e.mount && (e.required || e.min || e.max || e.maxLength || e.minLength || e.pattern || e.validate), Tu = (e, t, n) => !n && (t.watchAll || t.watch.has(e) || [...t.watch].some((r) => e.startsWith(r) && /^\.\w+/.test(e.slice(r.length))));
const Wo = (e, t, n, r) => {
  for (const o of n || Object.keys(e)) {
    const s = ve(e, o);
    if (s) {
      const { _f: a, ...l } = s;
      if (a) {
        if (a.refs && a.refs[0] && t(a.refs[0], o) && !r)
          return !0;
        if (a.ref && t(a.ref, a.name) && !r)
          return !0;
        if (Wo(l, t))
          break;
      } else if (At(l) && Wo(l, t))
        break;
    }
  }
};
function eh(e, t, n) {
  const r = ve(e, n);
  if (r || tf(n))
    return {
      error: r,
      name: n
    };
  const o = n.split(".");
  for (; o.length; ) {
    const s = o.join("."), a = ve(t, s), l = ve(e, s);
    if (a && !Array.isArray(a) && n !== s)
      return { name: n };
    if (l && l.type)
      return {
        name: s,
        error: l
      };
    o.pop();
  }
  return {
    name: n
  };
}
var lA = (e, t, n, r) => {
  n(e);
  const { name: o, ...s } = e;
  return Jt(s) || Object.keys(s).length >= Object.keys(t).length || Object.keys(s).find((a) => t[a] === (!r || An.all));
}, cA = (e, t, n) => !e || !t || e === t || fn(e).some((r) => r && (n ? r === t : r.startsWith(t) || t.startsWith(r))), uA = (e, t, n, r, o) => o.isOnAll ? !1 : !n && o.isOnTouch ? !(t || e) : (n ? r.isOnBlur : o.isOnBlur) ? !e : (n ? r.isOnChange : o.isOnChange) ? e : !0, dA = (e, t) => !Ps(ve(e, t)).length && Bt(e, t), Cv = (e, t, n) => {
  const r = fn(ve(e, n));
  return Ge(r, "root", t[n]), Ge(e, n, r), e;
}, da = (e) => sr(e);
function th(e, t, n = "validate") {
  if (da(e) || Array.isArray(e) && e.every(da) || bn(e) && !e)
    return {
      type: n,
      message: da(e) ? e : "",
      ref: t
    };
}
var Ao = (e) => At(e) && !za(e) ? e : {
  value: e,
  message: ""
}, Su = async (e, t, n, r, o, s) => {
  const { ref: a, refs: l, required: c, maxLength: u, minLength: d, min: f, max: h, pattern: g, validate: y, name: m, valueAsNumber: b, mount: x } = e._f, E = ve(n, m);
  if (!x || t.has(m))
    return {};
  const w = l ? l[0] : a, T = (P) => {
    o && w.reportValidity && (w.setCustomValidity(bn(P) ? "" : P || ""), w.reportValidity());
  }, v = {}, S = rf(a), R = $s(a), $ = S || R, I = (b || nf(a)) && mt(a.value) && mt(E) || La(a) && a.value === "" || E === "" || Array.isArray(E) && !E.length, p = bv.bind(null, m, r, v), O = (P, A, D, _ = Tr.maxLength, M = Tr.minLength) => {
    const V = P ? A : D;
    v[m] = {
      type: P ? _ : M,
      message: V,
      ref: a,
      ...p(P ? _ : M, V)
    };
  };
  if (s ? !Array.isArray(E) || !E.length : c && (!$ && (I || sn(E)) || bn(E) && !E || R && !Tv(l).isValid || S && !Ev(l).isValid)) {
    const { value: P, message: A } = da(c) ? { value: !!c, message: c } : Ao(c);
    if (P && (v[m] = {
      type: Tr.required,
      message: A,
      ref: w,
      ...p(Tr.required, A)
    }, !r))
      return T(A), v;
  }
  if (!I && (!sn(f) || !sn(h))) {
    let P, A;
    const D = Ao(h), _ = Ao(f);
    if (!sn(E) && !isNaN(E)) {
      const M = a.valueAsNumber || E && +E;
      sn(D.value) || (P = M > D.value), sn(_.value) || (A = M < _.value);
    } else {
      const M = a.valueAsDate || new Date(E), V = (j) => /* @__PURE__ */ new Date((/* @__PURE__ */ new Date()).toDateString() + " " + j), Y = a.type == "time", U = a.type == "week";
      sr(D.value) && E && (P = Y ? V(E) > V(D.value) : U ? E > D.value : M > new Date(D.value)), sr(_.value) && E && (A = Y ? V(E) < V(_.value) : U ? E < _.value : M < new Date(_.value));
    }
    if ((P || A) && (O(!!P, D.message, _.message, Tr.max, Tr.min), !r))
      return T(v[m].message), v;
  }
  if ((u || d) && !I && (sr(E) || s && Array.isArray(E))) {
    const P = Ao(u), A = Ao(d), D = !sn(P.value) && E.length > +P.value, _ = !sn(A.value) && E.length < +A.value;
    if ((D || _) && (O(D, P.message, A.message), !r))
      return T(v[m].message), v;
  }
  if (g && !I && sr(E)) {
    const { value: P, message: A } = Ao(g);
    if (za(P) && !E.match(P) && (v[m] = {
      type: Tr.pattern,
      message: A,
      ref: a,
      ...p(Tr.pattern, A)
    }, !r))
      return T(A), v;
  }
  if (y) {
    if (Hn(y)) {
      const P = await y(E, n), A = th(P, w);
      if (A && (v[m] = {
        ...A,
        ...p(Tr.validate, A.message)
      }, !r))
        return T(A.message), v;
    } else if (At(y)) {
      let P = {};
      for (const A in y) {
        if (!Jt(P) && !r)
          break;
        const D = th(await y[A](E, n), w, A);
        D && (P = {
          ...D,
          ...p(A, D.message)
        }, T(D.message), r && (v[m] = P));
      }
      if (!Jt(P) && (v[m] = {
        ref: w,
        ...P
      }, !r))
        return v;
    }
  }
  return T(!0), v;
};
const fA = {
  mode: An.onSubmit,
  reValidateMode: An.onChange,
  shouldFocusError: !0
};
function pA(e = {}) {
  let t = {
    ...fA,
    ...e
  }, n = {
    submitCount: 0,
    isDirty: !1,
    isLoading: Hn(t.defaultValues),
    isValidating: !1,
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    touchedFields: {},
    dirtyFields: {},
    validatingFields: {},
    errors: t.errors || {},
    disabled: t.disabled || !1
  };
  const r = {};
  let o = At(t.defaultValues) || At(t.values) ? Et(t.values || t.defaultValues) || {} : {}, s = t.shouldUnregister ? {} : Et(o), a = {
    action: !1,
    mount: !1,
    watch: !1
  }, l = {
    mount: /* @__PURE__ */ new Set(),
    disabled: /* @__PURE__ */ new Set(),
    unMount: /* @__PURE__ */ new Set(),
    array: /* @__PURE__ */ new Set(),
    watch: /* @__PURE__ */ new Set()
  }, c, u = 0;
  const d = {
    isDirty: !1,
    dirtyFields: !1,
    validatingFields: !1,
    touchedFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  };
  let f = {
    ...d
  };
  const h = {
    array: Gm(),
    state: Gm()
  }, g = Fo(t.mode), y = Fo(t.reValidateMode), m = t.criteriaMode === An.all, b = (N) => (q) => {
    clearTimeout(u), u = setTimeout(N, q);
  }, x = async (N) => {
    if (!t.disabled && (d.isValid || f.isValid || N)) {
      const q = t.resolver ? Jt((await I()).errors) : await O(r, !0);
      q !== n.isValid && h.state.next({
        isValid: q
      });
    }
  }, E = (N, q) => {
    !t.disabled && (d.isValidating || d.validatingFields || f.isValidating || f.validatingFields) && ((N || Array.from(l.mount)).forEach((J) => {
      J && (q ? Ge(n.validatingFields, J, q) : Bt(n.validatingFields, J));
    }), h.state.next({
      validatingFields: n.validatingFields,
      isValidating: !Jt(n.validatingFields)
    }));
  }, w = (N, q = [], J, H, B = !0, z = !0) => {
    if (H && J && !t.disabled) {
      if (a.action = !0, z && Array.isArray(ve(r, N))) {
        const G = J(ve(r, N), H.argA, H.argB);
        B && Ge(r, N, G);
      }
      if (z && Array.isArray(ve(n.errors, N))) {
        const G = J(ve(n.errors, N), H.argA, H.argB);
        B && Ge(n.errors, N, G), dA(n.errors, N);
      }
      if ((d.touchedFields || f.touchedFields) && z && Array.isArray(ve(n.touchedFields, N))) {
        const G = J(ve(n.touchedFields, N), H.argA, H.argB);
        B && Ge(n.touchedFields, N, G);
      }
      (d.dirtyFields || f.dirtyFields) && (n.dirtyFields = $i(o, s)), h.state.next({
        name: N,
        isDirty: A(N, q),
        dirtyFields: n.dirtyFields,
        errors: n.errors,
        isValid: n.isValid
      });
    } else
      Ge(s, N, q);
  }, T = (N, q) => {
    Ge(n.errors, N, q), h.state.next({
      errors: n.errors
    });
  }, v = (N) => {
    n.errors = N, h.state.next({
      errors: n.errors,
      isValid: !1
    });
  }, S = (N, q, J, H) => {
    const B = ve(r, N);
    if (B) {
      const z = ve(s, N, mt(J) ? ve(o, N) : J);
      mt(z) || H && H.defaultChecked || q ? Ge(s, N, q ? z : Jm(B._f)) : M(N, z), a.mount && x();
    }
  }, R = (N, q, J, H, B) => {
    let z = !1, G = !1;
    const pe = {
      name: N
    };
    if (!t.disabled) {
      if (!J || H) {
        (d.isDirty || f.isDirty) && (G = n.isDirty, n.isDirty = pe.isDirty = A(), z = G !== pe.isDirty);
        const me = jr(ve(o, N), q);
        G = !!ve(n.dirtyFields, N), me ? Bt(n.dirtyFields, N) : Ge(n.dirtyFields, N, !0), pe.dirtyFields = n.dirtyFields, z = z || (d.dirtyFields || f.dirtyFields) && G !== !me;
      }
      if (J) {
        const me = ve(n.touchedFields, N);
        me || (Ge(n.touchedFields, N, J), pe.touchedFields = n.touchedFields, z = z || (d.touchedFields || f.touchedFields) && me !== J);
      }
      z && B && h.state.next(pe);
    }
    return z ? pe : {};
  }, $ = (N, q, J, H) => {
    const B = ve(n.errors, N), z = (d.isValid || f.isValid) && bn(q) && n.isValid !== q;
    if (t.delayError && J ? (c = b(() => T(N, J)), c(t.delayError)) : (clearTimeout(u), c = null, J ? Ge(n.errors, N, J) : Bt(n.errors, N)), (J ? !jr(B, J) : B) || !Jt(H) || z) {
      const G = {
        ...H,
        ...z && bn(q) ? { isValid: q } : {},
        errors: n.errors,
        name: N
      };
      n = {
        ...n,
        ...G
      }, h.state.next(G);
    }
  }, I = async (N) => {
    E(N, !0);
    const q = await t.resolver(s, t.context, iA(N || l.mount, r, t.criteriaMode, t.shouldUseNativeValidation));
    return E(N), q;
  }, p = async (N) => {
    const { errors: q } = await I(N);
    if (N)
      for (const J of N) {
        const H = ve(q, J);
        H ? Ge(n.errors, J, H) : Bt(n.errors, J);
      }
    else
      n.errors = q;
    return q;
  }, O = async (N, q, J = {
    valid: !0
  }) => {
    for (const H in N) {
      const B = N[H];
      if (B) {
        const { _f: z, ...G } = B;
        if (z) {
          const pe = l.array.has(z.name), me = B._f && sA(B._f);
          me && d.validatingFields && E([H], !0);
          const re = await Su(B, l.disabled, s, m, t.shouldUseNativeValidation && !q, pe);
          if (me && d.validatingFields && E([H]), re[z.name] && (J.valid = !1, q))
            break;
          !q && (ve(re, z.name) ? pe ? Cv(n.errors, re, z.name) : Ge(n.errors, z.name, re[z.name]) : Bt(n.errors, z.name));
        }
        !Jt(G) && await O(G, q, J);
      }
    }
    return J.valid;
  }, P = () => {
    for (const N of l.unMount) {
      const q = ve(r, N);
      q && (q._f.refs ? q._f.refs.every((J) => !Cc(J)) : !Cc(q._f.ref)) && ae(N);
    }
    l.unMount = /* @__PURE__ */ new Set();
  }, A = (N, q) => !t.disabled && (N && q && Ge(s, N, q), !jr(ee(), o)), D = (N, q, J) => yv(N, l, {
    ...a.mount ? s : mt(q) ? o : sr(N) ? { [N]: q } : q
  }, J, q), _ = (N) => Ps(ve(a.mount ? s : o, N, t.shouldUnregister ? ve(o, N, []) : [])), M = (N, q, J = {}) => {
    const H = ve(r, N);
    let B = q;
    if (H) {
      const z = H._f;
      z && (!z.disabled && Ge(s, N, Sv(q, z)), B = La(z.ref) && sn(q) ? "" : q, vv(z.ref) ? [...z.ref.options].forEach((G) => G.selected = B.includes(G.value)) : z.refs ? $s(z.ref) ? z.refs.length > 1 ? z.refs.forEach((G) => (!G.defaultChecked || !G.disabled) && (G.checked = Array.isArray(B) ? !!B.find((pe) => pe === G.value) : B === G.value)) : z.refs[0] && (z.refs[0].checked = !!B) : z.refs.forEach((G) => G.checked = G.value === B) : nf(z.ref) ? z.ref.value = "" : (z.ref.value = B, z.ref.type || h.state.next({
        name: N,
        values: Et(s)
      })));
    }
    (J.shouldDirty || J.shouldTouch) && R(N, B, J.shouldTouch, J.shouldDirty, !0), J.shouldValidate && W(N);
  }, V = (N, q, J) => {
    for (const H in q) {
      const B = q[H], z = `${N}.${H}`, G = ve(r, z);
      (l.array.has(N) || At(B) || G && !G._f) && !lo(B) ? V(z, B, J) : M(z, B, J);
    }
  }, Y = (N, q, J = {}) => {
    const H = ve(r, N), B = l.array.has(N), z = Et(q);
    Ge(s, N, z), B ? (h.array.next({
      name: N,
      values: Et(s)
    }), (d.isDirty || d.dirtyFields || f.isDirty || f.dirtyFields) && J.shouldDirty && h.state.next({
      name: N,
      dirtyFields: $i(o, s),
      isDirty: A(N, z)
    })) : H && !H._f && !sn(z) ? V(N, z, J) : M(N, z, J), Tu(N, l) && h.state.next({ ...n }), h.state.next({
      name: a.mount ? N : void 0,
      values: Et(s)
    });
  }, U = async (N) => {
    a.mount = !0;
    const q = N.target;
    let J = q.name, H = !0;
    const B = ve(r, J), z = (G) => {
      H = Number.isNaN(G) || lo(G) && isNaN(G.getTime()) || jr(G, ve(s, J, G));
    };
    if (B) {
      let G, pe;
      const me = q.type ? Jm(B._f) : fv(N), re = N.type === ja.BLUR || N.type === ja.FOCUS_OUT, Z = !aA(B._f) && !t.resolver && !ve(n.errors, J) && !B._f.deps || uA(re, ve(n.touchedFields, J), n.isSubmitted, y, g), te = Tu(J, l, re);
      Ge(s, J, me), re ? (B._f.onBlur && B._f.onBlur(N), c && c(0)) : B._f.onChange && B._f.onChange(N);
      const ye = R(J, me, re), Te = !Jt(ye) || te;
      if (!re && h.state.next({
        name: J,
        type: N.type,
        values: Et(s)
      }), Z)
        return (d.isValid || f.isValid) && (t.mode === "onBlur" ? re && x() : re || x()), Te && h.state.next({ name: J, ...te ? {} : ye });
      if (!re && te && h.state.next({ ...n }), t.resolver) {
        const { errors: le } = await I([J]);
        if (z(me), H) {
          const we = eh(n.errors, r, J), Me = eh(le, r, we.name || J);
          G = Me.error, J = Me.name, pe = Jt(le);
        }
      } else
        E([J], !0), G = (await Su(B, l.disabled, s, m, t.shouldUseNativeValidation))[J], E([J]), z(me), H && (G ? pe = !1 : (d.isValid || f.isValid) && (pe = await O(r, !0)));
      H && (B._f.deps && W(B._f.deps), $(J, pe, G, ye));
    }
  }, j = (N, q) => {
    if (ve(n.errors, q) && N.focus)
      return N.focus(), 1;
  }, W = async (N, q = {}) => {
    let J, H;
    const B = fn(N);
    if (t.resolver) {
      const z = await p(mt(N) ? N : B);
      J = Jt(z), H = N ? !B.some((G) => ve(z, G)) : J;
    } else N ? (H = (await Promise.all(B.map(async (z) => {
      const G = ve(r, z);
      return await O(G && G._f ? { [z]: G } : G);
    }))).every(Boolean), !(!H && !n.isValid) && x()) : H = J = await O(r);
    return h.state.next({
      ...!sr(N) || (d.isValid || f.isValid) && J !== n.isValid ? {} : { name: N },
      ...t.resolver || !N ? { isValid: J } : {},
      errors: n.errors
    }), q.shouldFocus && !H && Wo(r, j, N ? B : l.mount), H;
  }, ee = (N) => {
    const q = {
      ...a.mount ? s : o
    };
    return mt(N) ? q : sr(N) ? ve(q, N) : N.map((J) => ve(q, J));
  }, K = (N, q) => ({
    invalid: !!ve((q || n).errors, N),
    isDirty: !!ve((q || n).dirtyFields, N),
    error: ve((q || n).errors, N),
    isValidating: !!ve(n.validatingFields, N),
    isTouched: !!ve((q || n).touchedFields, N)
  }), oe = (N) => {
    N && fn(N).forEach((q) => Bt(n.errors, q)), h.state.next({
      errors: N ? n.errors : {}
    });
  }, ne = (N, q, J) => {
    const H = (ve(r, N, { _f: {} })._f || {}).ref, B = ve(n.errors, N) || {}, { ref: z, message: G, type: pe, ...me } = B;
    Ge(n.errors, N, {
      ...me,
      ...q,
      ref: H
    }), h.state.next({
      name: N,
      errors: n.errors,
      isValid: !1
    }), J && J.shouldFocus && H && H.focus && H.focus();
  }, se = (N, q) => Hn(N) ? h.state.subscribe({
    next: (J) => N(D(void 0, q), J)
  }) : D(N, q, !0), de = (N) => h.state.subscribe({
    next: (q) => {
      cA(N.name, q.name, N.exact) && lA(q, N.formState || d, Re, N.reRenderRoot) && N.callback({
        values: { ...s },
        ...n,
        ...q
      });
    }
  }).unsubscribe, X = (N) => (a.mount = !0, f = {
    ...f,
    ...N.formState
  }, de({
    ...N,
    formState: f
  })), ae = (N, q = {}) => {
    for (const J of N ? fn(N) : l.mount)
      l.mount.delete(J), l.array.delete(J), q.keepValue || (Bt(r, J), Bt(s, J)), !q.keepError && Bt(n.errors, J), !q.keepDirty && Bt(n.dirtyFields, J), !q.keepTouched && Bt(n.touchedFields, J), !q.keepIsValidating && Bt(n.validatingFields, J), !t.shouldUnregister && !q.keepDefaultValue && Bt(o, J);
    h.state.next({
      values: Et(s)
    }), h.state.next({
      ...n,
      ...q.keepDirty ? { isDirty: A() } : {}
    }), !q.keepIsValid && x();
  }, Q = ({ disabled: N, name: q }) => {
    (bn(N) && a.mount || N || l.disabled.has(q)) && (N ? l.disabled.add(q) : l.disabled.delete(q));
  }, ie = (N, q = {}) => {
    let J = ve(r, N);
    const H = bn(q.disabled) || bn(t.disabled);
    return Ge(r, N, {
      ...J || {},
      _f: {
        ...J && J._f ? J._f : { ref: { name: N } },
        name: N,
        mount: !0,
        ...q
      }
    }), l.mount.add(N), J ? Q({
      disabled: bn(q.disabled) ? q.disabled : t.disabled,
      name: N
    }) : S(N, !0, q.value), {
      ...H ? { disabled: q.disabled || t.disabled } : {},
      ...t.progressive ? {
        required: !!q.required,
        min: Pi(q.min),
        max: Pi(q.max),
        minLength: Pi(q.minLength),
        maxLength: Pi(q.maxLength),
        pattern: Pi(q.pattern)
      } : {},
      name: N,
      onChange: U,
      onBlur: U,
      ref: (B) => {
        if (B) {
          ie(N, q), J = ve(r, N);
          const z = mt(B.value) && B.querySelectorAll && B.querySelectorAll("input,select,textarea")[0] || B, G = nA(z), pe = J._f.refs || [];
          if (G ? pe.find((me) => me === z) : z === J._f.ref)
            return;
          Ge(r, N, {
            _f: {
              ...J._f,
              ...G ? {
                refs: [
                  ...pe.filter(Cc),
                  z,
                  ...Array.isArray(ve(o, N)) ? [{}] : []
                ],
                ref: { type: z.type, name: N }
              } : { ref: z }
            }
          }), S(N, !1, void 0, z);
        } else
          J = ve(r, N, {}), J._f && (J._f.mount = !1), (t.shouldUnregister || q.shouldUnregister) && !(pv(l.array, N) && a.action) && l.unMount.add(N);
      }
    };
  }, F = () => t.shouldFocusError && Wo(r, j, l.mount), he = (N) => {
    bn(N) && (h.state.next({ disabled: N }), Wo(r, (q, J) => {
      const H = ve(r, J);
      H && (q.disabled = H._f.disabled || N, Array.isArray(H._f.refs) && H._f.refs.forEach((B) => {
        B.disabled = H._f.disabled || N;
      }));
    }, 0, !1));
  }, fe = (N, q) => async (J) => {
    let H;
    J && (J.preventDefault && J.preventDefault(), J.persist && J.persist());
    let B = Et(s);
    if (h.state.next({
      isSubmitting: !0
    }), t.resolver) {
      const { errors: z, values: G } = await I();
      n.errors = z, B = G;
    } else
      await O(r);
    if (l.disabled.size)
      for (const z of l.disabled)
        Ge(B, z, void 0);
    if (Bt(n.errors, "root"), Jt(n.errors)) {
      h.state.next({
        errors: {}
      });
      try {
        await N(B, J);
      } catch (z) {
        H = z;
      }
    } else
      q && await q({ ...n.errors }, J), F(), setTimeout(F);
    if (h.state.next({
      isSubmitted: !0,
      isSubmitting: !1,
      isSubmitSuccessful: Jt(n.errors) && !H,
      submitCount: n.submitCount + 1,
      errors: n.errors
    }), H)
      throw H;
  }, Se = (N, q = {}) => {
    ve(r, N) && (mt(q.defaultValue) ? Y(N, Et(ve(o, N))) : (Y(N, q.defaultValue), Ge(o, N, Et(q.defaultValue))), q.keepTouched || Bt(n.touchedFields, N), q.keepDirty || (Bt(n.dirtyFields, N), n.isDirty = q.defaultValue ? A(N, Et(ve(o, N))) : A()), q.keepError || (Bt(n.errors, N), d.isValid && x()), h.state.next({ ...n }));
  }, Le = (N, q = {}) => {
    const J = N ? Et(N) : o, H = Et(J), B = Jt(N), z = B ? o : H;
    if (q.keepDefaultValues || (o = J), !q.keepValues) {
      if (q.keepDirtyValues) {
        const G = /* @__PURE__ */ new Set([
          ...l.mount,
          ...Object.keys($i(o, s))
        ]);
        for (const pe of Array.from(G))
          ve(n.dirtyFields, pe) ? Ge(z, pe, ve(s, pe)) : Y(pe, ve(z, pe));
      } else {
        if (ef && mt(N))
          for (const G of l.mount) {
            const pe = ve(r, G);
            if (pe && pe._f) {
              const me = Array.isArray(pe._f.refs) ? pe._f.refs[0] : pe._f.ref;
              if (La(me)) {
                const re = me.closest("form");
                if (re) {
                  re.reset();
                  break;
                }
              }
            }
          }
        for (const G of l.mount)
          Y(G, ve(z, G));
      }
      s = Et(z), h.array.next({
        values: { ...z }
      }), h.state.next({
        values: { ...z }
      });
    }
    l = {
      mount: q.keepDirtyValues ? l.mount : /* @__PURE__ */ new Set(),
      unMount: /* @__PURE__ */ new Set(),
      array: /* @__PURE__ */ new Set(),
      disabled: /* @__PURE__ */ new Set(),
      watch: /* @__PURE__ */ new Set(),
      watchAll: !1,
      focus: ""
    }, a.mount = !d.isValid || !!q.keepIsValid || !!q.keepDirtyValues, a.watch = !!t.shouldUnregister, h.state.next({
      submitCount: q.keepSubmitCount ? n.submitCount : 0,
      isDirty: B ? !1 : q.keepDirty ? n.isDirty : !!(q.keepDefaultValues && !jr(N, o)),
      isSubmitted: q.keepIsSubmitted ? n.isSubmitted : !1,
      dirtyFields: B ? {} : q.keepDirtyValues ? q.keepDefaultValues && s ? $i(o, s) : n.dirtyFields : q.keepDefaultValues && N ? $i(o, N) : q.keepDirty ? n.dirtyFields : {},
      touchedFields: q.keepTouched ? n.touchedFields : {},
      errors: q.keepErrors ? n.errors : {},
      isSubmitSuccessful: q.keepIsSubmitSuccessful ? n.isSubmitSuccessful : !1,
      isSubmitting: !1
    });
  }, Ae = (N, q) => Le(Hn(N) ? N(s) : N, q), Ie = (N, q = {}) => {
    const J = ve(r, N), H = J && J._f;
    if (H) {
      const B = H.refs ? H.refs[0] : H.ref;
      B.focus && (B.focus(), q.shouldSelect && Hn(B.select) && B.select());
    }
  }, Re = (N) => {
    n = {
      ...n,
      ...N
    };
  }, Oe = {
    control: {
      register: ie,
      unregister: ae,
      getFieldState: K,
      handleSubmit: fe,
      setError: ne,
      _subscribe: de,
      _runSchema: I,
      _getWatch: D,
      _getDirty: A,
      _setValid: x,
      _setFieldArray: w,
      _setDisabledField: Q,
      _setErrors: v,
      _getFieldArray: _,
      _reset: Le,
      _resetDefaultValues: () => Hn(t.defaultValues) && t.defaultValues().then((N) => {
        Ae(N, t.resetOptions), h.state.next({
          isLoading: !1
        });
      }),
      _removeUnmounted: P,
      _disableForm: he,
      _subjects: h,
      _proxyFormState: d,
      get _fields() {
        return r;
      },
      get _formValues() {
        return s;
      },
      get _state() {
        return a;
      },
      set _state(N) {
        a = N;
      },
      get _defaultValues() {
        return o;
      },
      get _names() {
        return l;
      },
      set _names(N) {
        l = N;
      },
      get _formState() {
        return n;
      },
      get _options() {
        return t;
      },
      set _options(N) {
        t = {
          ...t,
          ...N
        };
      }
    },
    subscribe: X,
    trigger: W,
    register: ie,
    handleSubmit: fe,
    watch: se,
    setValue: Y,
    getValues: ee,
    reset: Ae,
    resetField: Se,
    clearErrors: oe,
    unregister: ae,
    setError: ne,
    setFocus: Ie,
    getFieldState: K
  };
  return {
    ...Oe,
    formControl: Oe
  };
}
var Dr = () => {
  const e = typeof performance > "u" ? Date.now() : performance.now() * 1e3;
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (t) => {
    const n = (Math.random() * 16 + e) % 16 | 0;
    return (t == "x" ? n : n & 3 | 8).toString(16);
  });
}, Oc = (e, t, n = {}) => n.shouldFocus || mt(n.shouldFocus) ? n.focusName || `${e}.${mt(n.focusIndex) ? t : n.focusIndex}.` : "", Rc = (e, t) => [
  ...e,
  ...fn(t)
], $c = (e) => Array.isArray(e) ? e.map(() => {
}) : void 0;
function Pc(e, t, n) {
  return [
    ...e.slice(0, t),
    ...fn(n),
    ...e.slice(t)
  ];
}
var kc = (e, t, n) => Array.isArray(e) ? (mt(e[n]) && (e[n] = void 0), e.splice(n, 0, e.splice(t, 1)[0]), e) : [], Ic = (e, t) => [
  ...fn(t),
  ...fn(e)
];
function mA(e, t) {
  let n = 0;
  const r = [...e];
  for (const o of t)
    r.splice(o - n, 1), n++;
  return Ps(r).length ? r : [];
}
var Nc = (e, t) => mt(t) ? [] : mA(e, fn(t).sort((n, r) => n - r)), Ac = (e, t, n) => {
  [e[t], e[n]] = [e[n], e[t]];
}, nh = (e, t, n) => (e[t] = n, e);
function a2(e) {
  const t = zn(), { control: n = t.control, name: r, keyName: o = "id", shouldUnregister: s, rules: a } = e, [l, c] = L.useState(n._getFieldArray(r)), u = L.useRef(n._getFieldArray(r).map(Dr)), d = L.useRef(l), f = L.useRef(r), h = L.useRef(!1);
  f.current = r, d.current = l, n._names.array.add(r), a && n.register(r, a), L.useEffect(() => n._subjects.array.subscribe({
    next: ({ values: S, name: R }) => {
      if (R === f.current || !R) {
        const $ = ve(S, f.current);
        Array.isArray($) && (c($), u.current = $.map(Dr));
      }
    }
  }).unsubscribe, [n]);
  const g = L.useCallback((S) => {
    h.current = !0, n._setFieldArray(r, S);
  }, [n, r]), y = (S, R) => {
    const $ = fn(Et(S)), I = Rc(n._getFieldArray(r), $);
    n._names.focus = Oc(r, I.length - 1, R), u.current = Rc(u.current, $.map(Dr)), g(I), c(I), n._setFieldArray(r, I, Rc, {
      argA: $c(S)
    });
  }, m = (S, R) => {
    const $ = fn(Et(S)), I = Ic(n._getFieldArray(r), $);
    n._names.focus = Oc(r, 0, R), u.current = Ic(u.current, $.map(Dr)), g(I), c(I), n._setFieldArray(r, I, Ic, {
      argA: $c(S)
    });
  }, b = (S) => {
    const R = Nc(n._getFieldArray(r), S);
    u.current = Nc(u.current, S), g(R), c(R), !Array.isArray(ve(n._fields, r)) && Ge(n._fields, r, void 0), n._setFieldArray(r, R, Nc, {
      argA: S
    });
  }, x = (S, R, $) => {
    const I = fn(Et(R)), p = Pc(n._getFieldArray(r), S, I);
    n._names.focus = Oc(r, S, $), u.current = Pc(u.current, S, I.map(Dr)), g(p), c(p), n._setFieldArray(r, p, Pc, {
      argA: S,
      argB: $c(R)
    });
  }, E = (S, R) => {
    const $ = n._getFieldArray(r);
    Ac($, S, R), Ac(u.current, S, R), g($), c($), n._setFieldArray(r, $, Ac, {
      argA: S,
      argB: R
    }, !1);
  }, w = (S, R) => {
    const $ = n._getFieldArray(r);
    kc($, S, R), kc(u.current, S, R), g($), c($), n._setFieldArray(r, $, kc, {
      argA: S,
      argB: R
    }, !1);
  }, T = (S, R) => {
    const $ = Et(R), I = nh(n._getFieldArray(r), S, $);
    u.current = [...I].map((p, O) => !p || O === S ? Dr() : u.current[O]), g(I), c([...I]), n._setFieldArray(r, I, nh, {
      argA: S,
      argB: $
    }, !0, !1);
  }, v = (S) => {
    const R = fn(Et(S));
    u.current = R.map(Dr), g([...R]), c([...R]), n._setFieldArray(r, [...R], ($) => $, {}, !0, !1);
  };
  return L.useEffect(() => {
    if (n._state.action = !1, Tu(r, n._names) && n._subjects.state.next({
      ...n._formState
    }), h.current && (!Fo(n._options.mode).isOnSubmit || n._formState.isSubmitted) && !Fo(n._options.reValidateMode).isOnSubmit)
      if (n._options.resolver)
        n._runSchema([r]).then((S) => {
          const R = ve(S.errors, r), $ = ve(n._formState.errors, r);
          ($ ? !R && $.type || R && ($.type !== R.type || $.message !== R.message) : R && R.type) && (R ? Ge(n._formState.errors, r, R) : Bt(n._formState.errors, r), n._subjects.state.next({
            errors: n._formState.errors
          }));
        });
      else {
        const S = ve(n._fields, r);
        S && S._f && !(Fo(n._options.reValidateMode).isOnSubmit && Fo(n._options.mode).isOnSubmit) && Su(S, n._names.disabled, n._formValues, n._options.criteriaMode === An.all, n._options.shouldUseNativeValidation, !0).then((R) => !Jt(R) && n._subjects.state.next({
          errors: Cv(n._formState.errors, R, r)
        }));
      }
    n._subjects.state.next({
      name: r,
      values: Et(n._formValues)
    }), n._names.focus && Wo(n._fields, (S, R) => {
      if (n._names.focus && R.startsWith(n._names.focus) && S.focus)
        return S.focus(), 1;
    }), n._names.focus = "", n._setValid(), h.current = !1;
  }, [l, r, n]), L.useEffect(() => (!ve(n._formValues, r) && n._setFieldArray(r), () => {
    const S = (R, $) => {
      const I = ve(n._fields, R);
      I && I._f && (I._f.mount = $);
    };
    n._options.shouldUnregister || s ? n.unregister(r) : S(r, !1);
  }), [r, n, o, s]), {
    swap: L.useCallback(E, [g, r, n]),
    move: L.useCallback(w, [g, r, n]),
    prepend: L.useCallback(m, [g, r, n]),
    append: L.useCallback(y, [g, r, n]),
    remove: L.useCallback(b, [g, r, n]),
    insert: L.useCallback(x, [g, r, n]),
    update: L.useCallback(T, [g, r, n]),
    replace: L.useCallback(v, [g, r, n]),
    fields: L.useMemo(() => l.map((S, R) => ({
      ...S,
      [o]: u.current[R] || Dr()
    })), [l, o])
  };
}
function l2(e = {}) {
  const t = L.useRef(void 0), n = L.useRef(void 0), [r, o] = L.useState({
    isDirty: !1,
    isValidating: !1,
    isLoading: Hn(e.defaultValues),
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    submitCount: 0,
    dirtyFields: {},
    touchedFields: {},
    validatingFields: {},
    errors: e.errors || {},
    disabled: e.disabled || !1,
    defaultValues: Hn(e.defaultValues) ? void 0 : e.defaultValues
  });
  t.current || (t.current = {
    ...e.formControl ? e.formControl : pA(e),
    formState: r
  }, e.formControl && e.defaultValues && !Hn(e.defaultValues) && e.formControl.reset(e.defaultValues, e.resetOptions));
  const s = t.current.control;
  return s._options = e, L.useLayoutEffect(() => s._subscribe({
    formState: s._proxyFormState,
    callback: () => o({ ...s._formState }),
    reRenderRoot: !0
  }), [s]), L.useEffect(() => s._disableForm(e.disabled), [s, e.disabled]), L.useEffect(() => {
    if (s._proxyFormState.isDirty) {
      const a = s._getDirty();
      a !== r.isDirty && s._subjects.state.next({
        isDirty: a
      });
    }
  }, [s, r.isDirty]), L.useEffect(() => {
    e.values && !jr(e.values, n.current) ? (s._reset(e.values, s._options.resetOptions), n.current = e.values, o((a) => ({ ...a }))) : s._resetDefaultValues();
  }, [e.values, s]), L.useEffect(() => {
    e.errors && !Jt(e.errors) && s._setErrors(e.errors);
  }, [e.errors, s]), L.useEffect(() => {
    s._state.mount || (s._setValid(), s._state.mount = !0), s._state.watch && (s._state.watch = !1, s._subjects.state.next({ ...s._formState })), s._removeUnmounted();
  }), L.useEffect(() => {
    e.shouldUnregister && s._subjects.state.next({
      values: s._getWatch()
    });
  }, [e.shouldUnregister, s]), t.current.formState = gv(r, s), t.current;
}
const rh = (e, t, n) => {
  if (e && "reportValidity" in e) {
    const r = ve(n, t);
    e.setCustomValidity(r && r.message || ""), e.reportValidity();
  }
}, Ov = (e, t) => {
  for (const n in t.fields) {
    const r = t.fields[n];
    r && r.ref && "reportValidity" in r.ref ? rh(r.ref, n, e) : r && r.refs && r.refs.forEach((o) => rh(o, n, e));
  }
}, hA = (e, t) => {
  t.shouldUseNativeValidation && Ov(e, t);
  const n = {};
  for (const r in e) {
    const o = ve(t.fields, r), s = Object.assign(e[r] || {}, { ref: o && o.ref });
    if (gA(t.names || Object.keys(e), r)) {
      const a = Object.assign({}, ve(n, r));
      Ge(a, "root", s), Ge(n, r, a);
    } else Ge(n, r, s);
  }
  return n;
}, gA = (e, t) => {
  const n = oh(t);
  return e.some((r) => oh(r).match(`^${n}\\.\\d+`));
};
function oh(e) {
  return e.replace(/\]|\[/g, "");
}
function yA(e, t) {
  for (var n = {}; e.length; ) {
    var r = e[0], o = r.code, s = r.message, a = r.path.join(".");
    if (!n[a]) if ("unionErrors" in r) {
      var l = r.unionErrors[0].errors[0];
      n[a] = { message: l.message, type: l.code };
    } else n[a] = { message: s, type: o };
    if ("unionErrors" in r && r.unionErrors.forEach(function(d) {
      return d.errors.forEach(function(f) {
        return e.push(f);
      });
    }), t) {
      var c = n[a].types, u = c && c[r.code];
      n[a] = bv(a, t, n, o, u ? [].concat(u, r.message) : r.message);
    }
    e.shift();
  }
  return n;
}
function c2(e, t, n) {
  return n === void 0 && (n = {}), function(r, o, s) {
    try {
      return Promise.resolve(function(a, l) {
        try {
          var c = Promise.resolve(e[n.mode === "sync" ? "parse" : "parseAsync"](r, t)).then(function(u) {
            return s.shouldUseNativeValidation && Ov({}, s), { errors: {}, values: n.raw ? Object.assign({}, r) : u };
          });
        } catch (u) {
          return l(u);
        }
        return c && c.then ? c.then(void 0, l) : c;
      }(0, function(a) {
        if (function(l) {
          return Array.isArray(l == null ? void 0 : l.errors);
        }(a)) return { values: {}, errors: hA(yA(a.errors, !s.shouldUseNativeValidation && s.criteriaMode === "all"), s) };
        throw a;
      }));
    } catch (a) {
      return Promise.reject(a);
    }
  };
}
function bA({
  children: e,
  formInstance: t,
  onSubmit: n
}) {
  const { handleSubmit: r, trigger: o } = t;
  return Uo(() => {
    o();
  }, [o]), t ? /* @__PURE__ */ k(JN, { ...t, children: /* @__PURE__ */ k(Rr, { component: "form", autoComplete: "off", onSubmit: r(n), children: e }) }) : null;
}
const u2 = _e(bA), vA = _e(({ name: e, ...t }) => {
  const { control: n } = zn();
  return /* @__PURE__ */ k(
    wo,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, value: o, ref: s }, fieldState: { error: a } }) => /* @__PURE__ */ k(
        Wy,
        {
          ...t,
          value: o,
          onChange: r,
          inputRef: s,
          isError: !!a
        }
      )
    }
  );
});
vA.displayName = "CheckboxUncontrolled";
function xA({
  isSubmitting: e,
  submitButtonText: t = "Submit",
  cancelButtonText: n = "Cancel"
}) {
  const r = zn();
  if (!r)
    return null;
  const { formState: o, reset: s } = r, { isValid: a, isSubmitting: l, defaultValues: c } = o;
  return /* @__PURE__ */ Pe(Kt, { row: !0, mt: "32px", children: [
    /* @__PURE__ */ k(
      Yn,
      {
        type: "reset",
        text: n,
        isOutlined: !0,
        disabled: e || l,
        onClick: () => s(c)
      }
    ),
    /* @__PURE__ */ k(
      Yn,
      {
        type: "submit",
        text: t,
        loading: e || l,
        disabled: !a
      }
    )
  ] });
}
xA.displayName = "FormUncontrolledAction";
const wA = _e(({ name: e, ...t }) => {
  const { control: n } = zn();
  return /* @__PURE__ */ k(
    wo,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ k(
        Cl,
        {
          ...t,
          value: s,
          onChange: r,
          onBlur: o,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
wA.displayName = "InputUncontrolled";
const TA = _e(({ name: e, ...t }) => {
  const { control: n } = zn();
  return /* @__PURE__ */ k(
    wo,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ k(
        Zy,
        {
          ...t,
          value: s,
          onChange: r,
          onBlur: o,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || "　"
        }
      )
    }
  );
});
TA.displayName = "NumberUncontrolled";
const SA = _e(({ name: e, ...t }) => {
  const { control: n } = zn();
  return /* @__PURE__ */ k(
    wo,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ k(
        iv,
        {
          ...t,
          value: s,
          onChange: r,
          onBlur: o,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
SA.displayName = "OtpInputUncontrolled";
const EA = _e(({ name: e, ...t }) => {
  const { control: n } = zn();
  return /* @__PURE__ */ k(
    wo,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ k(
        sv,
        {
          ...t,
          value: s,
          onChange: r,
          onBlur: o,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
EA.displayName = "PasswordUncontrolled";
const CA = [], OA = _e(
  ({ name: e, options: t = CA, ...n }) => {
    const { control: r } = zn();
    return /* @__PURE__ */ k(
      wo,
      {
        control: r,
        name: e,
        render: ({ field: { onChange: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ k(
          cv,
          {
            ...n,
            name: e,
            options: t,
            value: s,
            onChange: (c) => o(c.value),
            inputRef: a,
            isError: !!l
          }
        )
      }
    );
  }
);
OA.displayName = "RadiosUncontrolled";
const RA = _e(({ name: e, ...t }) => {
  const { control: n } = zn();
  return /* @__PURE__ */ k(
    wo,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, value: o, ref: s } }) => /* @__PURE__ */ k(Zd, { ...t, value: o, onChange: r, inputRef: s })
    }
  );
});
RA.displayName = "SwitchUncontrolled";
const _o = {
  xs: 1,
  // 1行1个
  sm: 1,
  // 1行1个
  md: 2,
  // 1行2个
  lg: 3,
  // 1行3个
  xl: 4
  // 1行4个
}, $A = [], ih = (e) => {
  let t;
  const n = /* @__PURE__ */ new Set(), r = (u, d) => {
    const f = typeof u == "function" ? u(t) : u;
    if (!Object.is(f, t)) {
      const h = t;
      t = d ?? (typeof f != "object" || f === null) ? f : Object.assign({}, t, f), n.forEach((g) => g(t, h));
    }
  }, o = () => t, l = { setState: r, getState: o, getInitialState: () => c, subscribe: (u) => (n.add(u), () => n.delete(u)) }, c = t = e(r, o, l);
  return l;
}, PA = (e) => e ? ih(e) : ih, kA = (e) => e;
function Rv(e, t = kA) {
  const n = L.useSyncExternalStore(
    e.subscribe,
    () => t(e.getState()),
    () => t(e.getInitialState())
  );
  return L.useDebugValue(n), n;
}
const sh = (e) => {
  const t = PA(e), n = (r) => Rv(t, r);
  return Object.assign(n, t), n;
}, of = (e) => e ? sh(e) : sh, ah = { BASE_URL: "/", DEV: !1, MODE: "production", PROD: !0, SSR: !1 }, Eu = /* @__PURE__ */ new Map(), Qs = (e) => {
  const t = Eu.get(e);
  return t ? Object.fromEntries(
    Object.entries(t.stores).map(([n, r]) => [n, r.getState()])
  ) : {};
}, IA = (e, t, n) => {
  if (e === void 0)
    return {
      type: "untracked",
      connection: t.connect(n)
    };
  const r = Eu.get(n.name);
  if (r)
    return { type: "tracked", store: e, ...r };
  const o = {
    connection: t.connect(n),
    stores: {}
  };
  return Eu.set(n.name, o), { type: "tracked", store: e, ...o };
}, NA = (e, t = {}) => (n, r, o) => {
  const { enabled: s, anonymousActionType: a, store: l, ...c } = t;
  let u;
  try {
    u = (s ?? (ah ? "production" : void 0) !== "production") && window.__REDUX_DEVTOOLS_EXTENSION__;
  } catch {
  }
  if (!u)
    return e(n, r, o);
  const { connection: d, ...f } = IA(l, u, c);
  let h = !0;
  o.setState = (m, b, x) => {
    const E = n(m, b);
    if (!h) return E;
    const w = x === void 0 ? { type: a || "anonymous" } : typeof x == "string" ? { type: x } : x;
    return l === void 0 ? (d == null || d.send(w, r()), E) : (d == null || d.send(
      {
        ...w,
        type: `${l}/${w.type}`
      },
      {
        ...Qs(c.name),
        [l]: o.getState()
      }
    ), E);
  };
  const g = (...m) => {
    const b = h;
    h = !1, n(...m), h = b;
  }, y = e(o.setState, r, o);
  if (f.type === "untracked" ? d == null || d.init(y) : (f.stores[f.store] = o, d == null || d.init(
    Object.fromEntries(
      Object.entries(f.stores).map(([m, b]) => [
        m,
        m === f.store ? y : b.getState()
      ])
    )
  )), o.dispatchFromDevtools && typeof o.dispatch == "function") {
    let m = !1;
    const b = o.dispatch;
    o.dispatch = (...x) => {
      (ah ? "production" : void 0) !== "production" && x[0].type === "__setState" && !m && (console.warn(
        '[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'
      ), m = !0), b(...x);
    };
  }
  return d.subscribe((m) => {
    var b;
    switch (m.type) {
      case "ACTION":
        if (typeof m.payload != "string") {
          console.error(
            "[zustand devtools middleware] Unsupported action format"
          );
          return;
        }
        return Mc(
          m.payload,
          (x) => {
            if (x.type === "__setState") {
              if (l === void 0) {
                g(x.state);
                return;
              }
              Object.keys(x.state).length !== 1 && console.error(
                `
                    [zustand devtools middleware] Unsupported __setState action format.
                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),
                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }
                    `
              );
              const E = x.state[l];
              if (E == null)
                return;
              JSON.stringify(o.getState()) !== JSON.stringify(E) && g(E);
              return;
            }
            o.dispatchFromDevtools && typeof o.dispatch == "function" && o.dispatch(x);
          }
        );
      case "DISPATCH":
        switch (m.payload.type) {
          case "RESET":
            return g(y), l === void 0 ? d == null ? void 0 : d.init(o.getState()) : d == null ? void 0 : d.init(Qs(c.name));
          case "COMMIT":
            if (l === void 0) {
              d == null || d.init(o.getState());
              return;
            }
            return d == null ? void 0 : d.init(Qs(c.name));
          case "ROLLBACK":
            return Mc(m.state, (x) => {
              if (l === void 0) {
                g(x), d == null || d.init(o.getState());
                return;
              }
              g(x[l]), d == null || d.init(Qs(c.name));
            });
          case "JUMP_TO_STATE":
          case "JUMP_TO_ACTION":
            return Mc(m.state, (x) => {
              if (l === void 0) {
                g(x);
                return;
              }
              JSON.stringify(o.getState()) !== JSON.stringify(x[l]) && g(x[l]);
            });
          case "IMPORT_STATE": {
            const { nextLiftedState: x } = m.payload, E = (b = x.computedStates.slice(-1)[0]) == null ? void 0 : b.state;
            if (!E) return;
            g(l === void 0 ? E : E[l]), d == null || d.send(
              null,
              // FIXME no-any
              x
            );
            return;
          }
          case "PAUSE_RECORDING":
            return h = !h;
        }
        return;
    }
  }), y;
}, $v = NA, Mc = (e, t) => {
  let n;
  try {
    n = JSON.parse(e);
  } catch (r) {
    console.error(
      "[zustand devtools middleware] Could not parse the received json",
      r
    );
  }
  n !== void 0 && t(n);
};
function AA(e, t) {
  let n;
  try {
    n = e();
  } catch {
    return;
  }
  return {
    getItem: (o) => {
      var s;
      const a = (c) => c === null ? null : JSON.parse(c, void 0), l = (s = n.getItem(o)) != null ? s : null;
      return l instanceof Promise ? l.then(a) : a(l);
    },
    setItem: (o, s) => n.setItem(
      o,
      JSON.stringify(s, void 0)
    ),
    removeItem: (o) => n.removeItem(o)
  };
}
const Cu = (e) => (t) => {
  try {
    const n = e(t);
    return n instanceof Promise ? n : {
      then(r) {
        return Cu(r)(n);
      },
      catch(r) {
        return this;
      }
    };
  } catch (n) {
    return {
      then(r) {
        return this;
      },
      catch(r) {
        return Cu(r)(n);
      }
    };
  }
}, MA = (e, t) => (n, r, o) => {
  let s = {
    storage: AA(() => localStorage),
    partialize: (m) => m,
    version: 0,
    merge: (m, b) => ({
      ...b,
      ...m
    }),
    ...t
  }, a = !1;
  const l = /* @__PURE__ */ new Set(), c = /* @__PURE__ */ new Set();
  let u = s.storage;
  if (!u)
    return e(
      (...m) => {
        console.warn(
          `[zustand persist middleware] Unable to update item '${s.name}', the given storage is currently unavailable.`
        ), n(...m);
      },
      r,
      o
    );
  const d = () => {
    const m = s.partialize({ ...r() });
    return u.setItem(s.name, {
      state: m,
      version: s.version
    });
  }, f = o.setState;
  o.setState = (m, b) => {
    f(m, b), d();
  };
  const h = e(
    (...m) => {
      n(...m), d();
    },
    r,
    o
  );
  o.getInitialState = () => h;
  let g;
  const y = () => {
    var m, b;
    if (!u) return;
    a = !1, l.forEach((E) => {
      var w;
      return E((w = r()) != null ? w : h);
    });
    const x = ((b = s.onRehydrateStorage) == null ? void 0 : b.call(s, (m = r()) != null ? m : h)) || void 0;
    return Cu(u.getItem.bind(u))(s.name).then((E) => {
      if (E)
        if (typeof E.version == "number" && E.version !== s.version) {
          if (s.migrate) {
            const w = s.migrate(
              E.state,
              E.version
            );
            return w instanceof Promise ? w.then((T) => [!0, T]) : [!0, w];
          }
          console.error(
            "State loaded from storage couldn't be migrated since no migrate function was provided"
          );
        } else
          return [!1, E.state];
      return [!1, void 0];
    }).then((E) => {
      var w;
      const [T, v] = E;
      if (g = s.merge(
        v,
        (w = r()) != null ? w : h
      ), n(g, !0), T)
        return d();
    }).then(() => {
      x == null || x(g, void 0), g = r(), a = !0, c.forEach((E) => E(g));
    }).catch((E) => {
      x == null || x(void 0, E);
    });
  };
  return o.persist = {
    setOptions: (m) => {
      s = {
        ...s,
        ...m
      }, m.storage && (u = m.storage);
    },
    clearStorage: () => {
      u == null || u.removeItem(s.name);
    },
    getOptions: () => s,
    rehydrate: () => y(),
    hasHydrated: () => a,
    onHydrate: (m) => (l.add(m), () => {
      l.delete(m);
    }),
    onFinishHydration: (m) => (c.add(m), () => {
      c.delete(m);
    })
  }, s.skipHydration || y(), g || h;
}, Pv = MA;
function lh() {
  return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
const _A = of()(
  $v(
    Pv(
      (e) => ({
        themeMode: lh(),
        setThemeMode: (t) => e({ themeMode: t }),
        toggleThemeMode: () => e((t) => ({ themeMode: t.themeMode === "dark" ? "light" : "dark" })),
        resetThemeMode: () => e({ themeMode: lh() })
      }),
      {
        name: "VENOMOUS_UI__THEME_MODE"
      }
    )
  )
);
function sf() {
  const e = Rv(_A);
  return {
    ...e,
    isDarkMode: e.themeMode === "dark"
  };
}
var kv = /* @__PURE__ */ ((e) => (e.Skyblue = "Skyblue", e.Teal = "Teal", e.Amber = "Amber", e))(kv || {});
const Iv = {
  Skyblue: "#0097a7",
  Teal: "#009688",
  Amber: "#ffb300"
};
function Wa(e) {
  const t = Iv[e];
  return {
    main: t,
    light: ci(t, 0.5),
    dark: li(t, 0.5),
    opacity: Yt(t, 0.2),
    contrastText: "#fff"
  };
}
const DA = of()(
  $v(
    Pv(
      (e) => ({
        themePaletteName: "Skyblue",
        themePalette: Wa(
          "Skyblue"
          /* Skyblue */
        ),
        setThemePaletteName: (t) => e({ themePaletteName: t, themePalette: Wa(t) })
      }),
      {
        name: "VENOMOUS_UI__THEME_PALETTE"
      }
    )
  )
);
function Nv() {
  return {
    ...DA(),
    allPaletteNames: Object.keys(kv),
    allPaletteMainColors: Iv
  };
}
const ki = Yh({
  themeId: qn
});
function BA() {
  const { breakpoints: e } = Nr(), t = ki(e.down("sm")), n = ki(e.between("sm", "md")), r = ki(e.between("md", "lg")), o = ki(e.between("lg", "xl")), s = ki(e.up("xl")), a = ln(() => {
    var l;
    return ((l = [
      ["xs", t],
      ["sm", n],
      ["md", r],
      ["lg", o],
      ["xl", s]
    ].find(([, c]) => c)) == null ? void 0 : l[0].toString()) || "xs";
  }, [t, n, r, o, s]);
  return {
    isXs: t,
    isSm: n,
    isMd: r,
    isLg: o,
    isXl: s,
    breakpoints: {
      current: a,
      unit: "px",
      values: {
        xs: 0,
        sm: 600,
        md: 900,
        lg: 1200,
        xl: 1536
      }
    }
  };
}
function d2() {
  return (e) => e;
}
function FA() {
  const e = qM(), [t, n] = Sr(!1), r = tn(() => {
    t ? document.exitFullscreen().then(() => {
      n(!1);
    }).catch(() => {
      e({
        type: "error",
        title: "Error",
        description: "Error attempting to disable full-screen mode"
      });
    }) : document.documentElement.requestFullscreen().then(() => {
      n(!0);
    }).catch(() => {
      e({
        type: "error",
        title: "Error",
        description: "Error attempting to enable full-screen mode"
      });
    });
  }, [t, e]);
  return Uo(() => {
    const o = () => {
      n(document.fullscreenElement !== null);
    };
    return document.addEventListener("fullscreenchange", o), () => {
      document.removeEventListener("fullscreenchange", o);
    };
  }, []), {
    isFullScreen: t,
    setIsFullScreen: n,
    toggleFullScreen: r
  };
}
function jA({
  gridStyle: e,
  cols: t
}) {
  const { isXs: n, isSm: r, isMd: o, isLg: s } = BA(), a = ln(() => {
    let c;
    return n ? c = (t == null ? void 0 : t.xs) ?? _o.xs : r ? c = (t == null ? void 0 : t.sm) ?? _o.sm : o ? c = (t == null ? void 0 : t.md) ?? _o.md : s ? c = (t == null ? void 0 : t.lg) ?? _o.lg : c = (t == null ? void 0 : t.xl) ?? _o.xl, `${100 / c}%`;
  }, [n, r, o, s, t]);
  return {
    gridComponents: ln(
      () => ({
        List: ({ ref: c, style: u, children: d, ...f }) => /* @__PURE__ */ k(
          "div",
          {
            ref: c,
            ...f,
            style: { display: "flex", flexWrap: "wrap", ...u, ...e },
            children: d
          }
        ),
        Item: ({ children: c, ...u }) => /* @__PURE__ */ k(
          "div",
          {
            ...u,
            style: {
              width: a,
              display: "flex",
              boxSizing: "border-box",
              flex: "none",
              alignContent: "stretch"
            },
            children: c
          }
        )
      }),
      [a, e]
    )
  };
}
const LA = ({
  height: e,
  width: t,
  items: n = $A,
  renderGridItem: r,
  gridStyle: o,
  cols: s = _o
}) => {
  const { gridComponents: a } = jA({ gridStyle: o, cols: s });
  return /* @__PURE__ */ k(
    Kt,
    {
      className: "VenomousUI-Grid",
      sx: {
        height: e || "100%",
        width: t || "100%",
        "& > *": {
          flex: "unset",
          width: "100%"
        }
      },
      children: /* @__PURE__ */ k(
        YO,
        {
          style: { height: "100%" },
          totalCount: n.length,
          components: a,
          itemContent: (l) => r(n[l], l)
        }
      )
    }
  );
}, VA = _e(LA);
var _c = { exports: {} }, ch;
function zA() {
  return ch || (ch = 1, (() => {
    var e = { 296: (o, s, a) => {
      var l = /^\s+|\s+$/g, c = /^[-+]0x[0-9a-f]+$/i, u = /^0b[01]+$/i, d = /^0o[0-7]+$/i, f = parseInt, h = typeof a.g == "object" && a.g && a.g.Object === Object && a.g, g = typeof self == "object" && self && self.Object === Object && self, y = h || g || Function("return this")(), m = Object.prototype.toString, b = Math.max, x = Math.min, E = function() {
        return y.Date.now();
      };
      function w(v) {
        var S = typeof v;
        return !!v && (S == "object" || S == "function");
      }
      function T(v) {
        if (typeof v == "number") return v;
        if (function($) {
          return typeof $ == "symbol" || /* @__PURE__ */ function(I) {
            return !!I && typeof I == "object";
          }($) && m.call($) == "[object Symbol]";
        }(v)) return NaN;
        if (w(v)) {
          var S = typeof v.valueOf == "function" ? v.valueOf() : v;
          v = w(S) ? S + "" : S;
        }
        if (typeof v != "string") return v === 0 ? v : +v;
        v = v.replace(l, "");
        var R = u.test(v);
        return R || d.test(v) ? f(v.slice(2), R ? 2 : 8) : c.test(v) ? NaN : +v;
      }
      o.exports = function(v, S, R) {
        var $, I, p, O, P, A, D = 0, _ = !1, M = !1, V = !0;
        if (typeof v != "function") throw new TypeError("Expected a function");
        function Y(K) {
          var oe = $, ne = I;
          return $ = I = void 0, D = K, O = v.apply(ne, oe);
        }
        function U(K) {
          var oe = K - A;
          return A === void 0 || oe >= S || oe < 0 || M && K - D >= p;
        }
        function j() {
          var K = E();
          if (U(K)) return W(K);
          P = setTimeout(j, function(oe) {
            var ne = S - (oe - A);
            return M ? x(ne, p - (oe - D)) : ne;
          }(K));
        }
        function W(K) {
          return P = void 0, V && $ ? Y(K) : ($ = I = void 0, O);
        }
        function ee() {
          var K = E(), oe = U(K);
          if ($ = arguments, I = this, A = K, oe) {
            if (P === void 0) return function(ne) {
              return D = ne, P = setTimeout(j, S), _ ? Y(ne) : O;
            }(A);
            if (M) return P = setTimeout(j, S), Y(A);
          }
          return P === void 0 && (P = setTimeout(j, S)), O;
        }
        return S = T(S) || 0, w(R) && (_ = !!R.leading, p = (M = "maxWait" in R) ? b(T(R.maxWait) || 0, S) : p, V = "trailing" in R ? !!R.trailing : V), ee.cancel = function() {
          P !== void 0 && clearTimeout(P), D = 0, $ = A = I = P = void 0;
        }, ee.flush = function() {
          return P === void 0 ? O : W(E());
        }, ee;
      };
    }, 96: (o, s, a) => {
      var l = "Expected a function", c = NaN, u = "[object Symbol]", d = /^\s+|\s+$/g, f = /^[-+]0x[0-9a-f]+$/i, h = /^0b[01]+$/i, g = /^0o[0-7]+$/i, y = parseInt, m = typeof a.g == "object" && a.g && a.g.Object === Object && a.g, b = typeof self == "object" && self && self.Object === Object && self, x = m || b || Function("return this")(), E = Object.prototype.toString, w = Math.max, T = Math.min, v = function() {
        return x.Date.now();
      };
      function S($) {
        var I = typeof $;
        return !!$ && (I == "object" || I == "function");
      }
      function R($) {
        if (typeof $ == "number") return $;
        if (function(O) {
          return typeof O == "symbol" || /* @__PURE__ */ function(P) {
            return !!P && typeof P == "object";
          }(O) && E.call(O) == u;
        }($)) return c;
        if (S($)) {
          var I = typeof $.valueOf == "function" ? $.valueOf() : $;
          $ = S(I) ? I + "" : I;
        }
        if (typeof $ != "string") return $ === 0 ? $ : +$;
        $ = $.replace(d, "");
        var p = h.test($);
        return p || g.test($) ? y($.slice(2), p ? 2 : 8) : f.test($) ? c : +$;
      }
      o.exports = function($, I, p) {
        var O = !0, P = !0;
        if (typeof $ != "function") throw new TypeError(l);
        return S(p) && (O = "leading" in p ? !!p.leading : O, P = "trailing" in p ? !!p.trailing : P), function(A, D, _) {
          var M, V, Y, U, j, W, ee = 0, K = !1, oe = !1, ne = !0;
          if (typeof A != "function") throw new TypeError(l);
          function se(ie) {
            var F = M, he = V;
            return M = V = void 0, ee = ie, U = A.apply(he, F);
          }
          function de(ie) {
            var F = ie - W;
            return W === void 0 || F >= D || F < 0 || oe && ie - ee >= Y;
          }
          function X() {
            var ie = v();
            if (de(ie)) return ae(ie);
            j = setTimeout(X, function(F) {
              var he = D - (F - W);
              return oe ? T(he, Y - (F - ee)) : he;
            }(ie));
          }
          function ae(ie) {
            return j = void 0, ne && M ? se(ie) : (M = V = void 0, U);
          }
          function Q() {
            var ie = v(), F = de(ie);
            if (M = arguments, V = this, W = ie, F) {
              if (j === void 0) return function(he) {
                return ee = he, j = setTimeout(X, D), K ? se(he) : U;
              }(W);
              if (oe) return j = setTimeout(X, D), se(W);
            }
            return j === void 0 && (j = setTimeout(X, D)), U;
          }
          return D = R(D) || 0, S(_) && (K = !!_.leading, Y = (oe = "maxWait" in _) ? w(R(_.maxWait) || 0, D) : Y, ne = "trailing" in _ ? !!_.trailing : ne), Q.cancel = function() {
            j !== void 0 && clearTimeout(j), ee = 0, M = W = V = j = void 0;
          }, Q.flush = function() {
            return j === void 0 ? U : ae(v());
          }, Q;
        }($, I, { leading: O, maxWait: I, trailing: P });
      };
    }, 703: (o, s, a) => {
      var l = a(414);
      function c() {
      }
      function u() {
      }
      u.resetWarningCache = c, o.exports = function() {
        function d(g, y, m, b, x, E) {
          if (E !== l) {
            var w = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
            throw w.name = "Invariant Violation", w;
          }
        }
        function f() {
          return d;
        }
        d.isRequired = d;
        var h = { array: d, bigint: d, bool: d, func: d, number: d, object: d, string: d, symbol: d, any: d, arrayOf: f, element: d, elementType: d, instanceOf: f, node: d, objectOf: f, oneOf: f, oneOfType: f, shape: f, exact: f, checkPropTypes: u, resetWarningCache: c };
        return h.PropTypes = h, h;
      };
    }, 697: (o, s, a) => {
      o.exports = a(703)();
    }, 414: (o) => {
      o.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    } }, t = {};
    function n(o) {
      var s = t[o];
      if (s !== void 0) return s.exports;
      var a = t[o] = { exports: {} };
      return e[o](a, a.exports, n), a.exports;
    }
    n.n = (o) => {
      var s = o && o.__esModule ? () => o.default : () => o;
      return n.d(s, { a: s }), s;
    }, n.d = (o, s) => {
      for (var a in s) n.o(s, a) && !n.o(o, a) && Object.defineProperty(o, a, { enumerable: !0, get: s[a] });
    }, n.g = function() {
      if (typeof globalThis == "object") return globalThis;
      try {
        return this || new Function("return this")();
      } catch {
        if (typeof window == "object") return window;
      }
    }(), n.o = (o, s) => Object.prototype.hasOwnProperty.call(o, s), n.r = (o) => {
      typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(o, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(o, "__esModule", { value: !0 });
    };
    var r = {};
    (() => {
      n.r(r), n.d(r, { LazyLoadComponent: () => F, LazyLoadImage: () => J, trackWindowScroll: () => U });
      const o = L;
      var s = n.n(o), a = n(697);
      function l() {
        return typeof window < "u" && "IntersectionObserver" in window && "isIntersecting" in window.IntersectionObserverEntry.prototype;
      }
      function c(H) {
        return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(B) {
          return typeof B;
        } : function(B) {
          return B && typeof Symbol == "function" && B.constructor === Symbol && B !== Symbol.prototype ? "symbol" : typeof B;
        }, c(H);
      }
      function u(H, B) {
        var z = Object.keys(H);
        if (Object.getOwnPropertySymbols) {
          var G = Object.getOwnPropertySymbols(H);
          B && (G = G.filter(function(pe) {
            return Object.getOwnPropertyDescriptor(H, pe).enumerable;
          })), z.push.apply(z, G);
        }
        return z;
      }
      function d(H, B, z) {
        return (B = h(B)) in H ? Object.defineProperty(H, B, { value: z, enumerable: !0, configurable: !0, writable: !0 }) : H[B] = z, H;
      }
      function f(H, B) {
        for (var z = 0; z < B.length; z++) {
          var G = B[z];
          G.enumerable = G.enumerable || !1, G.configurable = !0, "value" in G && (G.writable = !0), Object.defineProperty(H, h(G.key), G);
        }
      }
      function h(H) {
        var B = function(z, G) {
          if (c(z) !== "object" || z === null) return z;
          var pe = z[Symbol.toPrimitive];
          if (pe !== void 0) {
            var me = pe.call(z, "string");
            if (c(me) !== "object") return me;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(z);
        }(H);
        return c(B) === "symbol" ? B : String(B);
      }
      function g(H, B) {
        return g = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(z, G) {
          return z.__proto__ = G, z;
        }, g(H, B);
      }
      function y(H) {
        return y = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(B) {
          return B.__proto__ || Object.getPrototypeOf(B);
        }, y(H);
      }
      var m = function(H) {
        H.forEach(function(B) {
          B.isIntersecting && B.target.onVisible();
        });
      }, b = {}, x = function(H) {
        (function(Z, te) {
          if (typeof te != "function" && te !== null) throw new TypeError("Super expression must either be null or a function");
          Z.prototype = Object.create(te && te.prototype, { constructor: { value: Z, writable: !0, configurable: !0 } }), Object.defineProperty(Z, "prototype", { writable: !1 }), te && g(Z, te);
        })(re, H);
        var B, z, G, pe, me = (G = re, pe = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var Z, te = y(G);
          if (pe) {
            var ye = y(this).constructor;
            Z = Reflect.construct(te, arguments, ye);
          } else Z = te.apply(this, arguments);
          return function(Te, le) {
            if (le && (c(le) === "object" || typeof le == "function")) return le;
            if (le !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(we) {
              if (we === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return we;
            }(Te);
          }(this, Z);
        });
        function re(Z) {
          var te;
          if (function(Te, le) {
            if (!(Te instanceof le)) throw new TypeError("Cannot call a class as a function");
          }(this, re), (te = me.call(this, Z)).supportsObserver = !Z.scrollPosition && Z.useIntersectionObserver && l(), te.supportsObserver) {
            var ye = Z.threshold;
            te.observer = function(Te) {
              return b[Te] = b[Te] || new IntersectionObserver(m, { rootMargin: Te + "px" }), b[Te];
            }(ye);
          }
          return te;
        }
        return B = re, z = [{ key: "componentDidMount", value: function() {
          this.placeholder && this.observer && (this.placeholder.onVisible = this.props.onVisible, this.observer.observe(this.placeholder)), this.supportsObserver || this.updateVisibility();
        } }, { key: "componentWillUnmount", value: function() {
          this.observer && this.placeholder && this.observer.unobserve(this.placeholder);
        } }, { key: "componentDidUpdate", value: function() {
          this.supportsObserver || this.updateVisibility();
        } }, { key: "getPlaceholderBoundingBox", value: function() {
          var Z = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props.scrollPosition, te = this.placeholder.getBoundingClientRect(), ye = this.placeholder.style, Te = parseInt(ye.getPropertyValue("margin-left"), 10) || 0, le = parseInt(ye.getPropertyValue("margin-top"), 10) || 0;
          return { bottom: Z.y + te.bottom + le, left: Z.x + te.left + Te, right: Z.x + te.right + Te, top: Z.y + te.top + le };
        } }, { key: "isPlaceholderInViewport", value: function() {
          if (typeof window > "u" || !this.placeholder) return !1;
          var Z = this.props, te = Z.scrollPosition, ye = Z.threshold, Te = this.getPlaceholderBoundingBox(te), le = te.y + window.innerHeight, we = te.x, Me = te.x + window.innerWidth, ze = te.y;
          return ze - ye <= Te.bottom && le + ye >= Te.top && we - ye <= Te.right && Me + ye >= Te.left;
        } }, { key: "updateVisibility", value: function() {
          this.isPlaceholderInViewport() && this.props.onVisible();
        } }, { key: "render", value: function() {
          var Z = this, te = this.props, ye = te.className, Te = te.height, le = te.placeholder, we = te.style, Me = te.width;
          if (le && typeof le.type != "function") return s().cloneElement(le, { ref: function(Ye) {
            return Z.placeholder = Ye;
          } });
          var ze = function(Ye) {
            for (var It = 1; It < arguments.length; It++) {
              var pt = arguments[It] != null ? arguments[It] : {};
              It % 2 ? u(Object(pt), !0).forEach(function(Nt) {
                d(Ye, Nt, pt[Nt]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(Ye, Object.getOwnPropertyDescriptors(pt)) : u(Object(pt)).forEach(function(Nt) {
                Object.defineProperty(Ye, Nt, Object.getOwnPropertyDescriptor(pt, Nt));
              });
            }
            return Ye;
          }({ display: "inline-block" }, we);
          return Me !== void 0 && (ze.width = Me), Te !== void 0 && (ze.height = Te), s().createElement("span", { className: ye, ref: function(Ye) {
            return Z.placeholder = Ye;
          }, style: ze }, le);
        } }], z && f(B.prototype, z), Object.defineProperty(B, "prototype", { writable: !1 }), re;
      }(s().Component);
      x.propTypes = { onVisible: a.PropTypes.func.isRequired, className: a.PropTypes.string, height: a.PropTypes.oneOfType([a.PropTypes.number, a.PropTypes.string]), placeholder: a.PropTypes.element, threshold: a.PropTypes.number, useIntersectionObserver: a.PropTypes.bool, scrollPosition: a.PropTypes.shape({ x: a.PropTypes.number.isRequired, y: a.PropTypes.number.isRequired }), width: a.PropTypes.oneOfType([a.PropTypes.number, a.PropTypes.string]) }, x.defaultProps = { className: "", placeholder: null, threshold: 100, useIntersectionObserver: !0 };
      const E = x;
      var w = n(296), T = n.n(w), v = n(96), S = n.n(v), R = function(H) {
        var B = getComputedStyle(H, null);
        return B.getPropertyValue("overflow") + B.getPropertyValue("overflow-y") + B.getPropertyValue("overflow-x");
      };
      const $ = function(H) {
        if (!(H instanceof HTMLElement)) return window;
        for (var B = H; B && B instanceof HTMLElement; ) {
          if (/(scroll|auto)/.test(R(B))) return B;
          B = B.parentNode;
        }
        return window;
      };
      function I(H) {
        return I = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(B) {
          return typeof B;
        } : function(B) {
          return B && typeof Symbol == "function" && B.constructor === Symbol && B !== Symbol.prototype ? "symbol" : typeof B;
        }, I(H);
      }
      var p = ["delayMethod", "delayTime"];
      function O() {
        return O = Object.assign ? Object.assign.bind() : function(H) {
          for (var B = 1; B < arguments.length; B++) {
            var z = arguments[B];
            for (var G in z) Object.prototype.hasOwnProperty.call(z, G) && (H[G] = z[G]);
          }
          return H;
        }, O.apply(this, arguments);
      }
      function P(H, B) {
        for (var z = 0; z < B.length; z++) {
          var G = B[z];
          G.enumerable = G.enumerable || !1, G.configurable = !0, "value" in G && (G.writable = !0), Object.defineProperty(H, (pe = function(me, re) {
            if (I(me) !== "object" || me === null) return me;
            var Z = me[Symbol.toPrimitive];
            if (Z !== void 0) {
              var te = Z.call(me, "string");
              if (I(te) !== "object") return te;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(me);
          }(G.key), I(pe) === "symbol" ? pe : String(pe)), G);
        }
        var pe;
      }
      function A(H, B) {
        return A = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(z, G) {
          return z.__proto__ = G, z;
        }, A(H, B);
      }
      function D(H, B) {
        if (B && (I(B) === "object" || typeof B == "function")) return B;
        if (B !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
        return _(H);
      }
      function _(H) {
        if (H === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return H;
      }
      function M(H) {
        return M = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(B) {
          return B.__proto__ || Object.getPrototypeOf(B);
        }, M(H);
      }
      var V = function() {
        return typeof window > "u" ? 0 : window.scrollX || window.pageXOffset;
      }, Y = function() {
        return typeof window > "u" ? 0 : window.scrollY || window.pageYOffset;
      };
      const U = function(H) {
        var B = function(z) {
          (function(ye, Te) {
            if (typeof Te != "function" && Te !== null) throw new TypeError("Super expression must either be null or a function");
            ye.prototype = Object.create(Te && Te.prototype, { constructor: { value: ye, writable: !0, configurable: !0 } }), Object.defineProperty(ye, "prototype", { writable: !1 }), Te && A(ye, Te);
          })(te, z);
          var G, pe, me, re, Z = (me = te, re = function() {
            if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
            if (typeof Proxy == "function") return !0;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              })), !0;
            } catch {
              return !1;
            }
          }(), function() {
            var ye, Te = M(me);
            if (re) {
              var le = M(this).constructor;
              ye = Reflect.construct(Te, arguments, le);
            } else ye = Te.apply(this, arguments);
            return D(this, ye);
          });
          function te(ye) {
            var Te;
            if (function(we, Me) {
              if (!(we instanceof Me)) throw new TypeError("Cannot call a class as a function");
            }(this, te), (Te = Z.call(this, ye)).useIntersectionObserver = ye.useIntersectionObserver && l(), Te.useIntersectionObserver) return D(Te);
            var le = Te.onChangeScroll.bind(_(Te));
            return ye.delayMethod === "debounce" ? Te.delayedScroll = T()(le, ye.delayTime) : ye.delayMethod === "throttle" && (Te.delayedScroll = S()(le, ye.delayTime)), Te.state = { scrollPosition: { x: V(), y: Y() } }, Te.baseComponentRef = s().createRef(), Te;
          }
          return G = te, (pe = [{ key: "componentDidMount", value: function() {
            this.addListeners();
          } }, { key: "componentWillUnmount", value: function() {
            this.removeListeners();
          } }, { key: "componentDidUpdate", value: function() {
            typeof window > "u" || this.useIntersectionObserver || $(this.baseComponentRef.current) !== this.scrollElement && (this.removeListeners(), this.addListeners());
          } }, { key: "addListeners", value: function() {
            typeof window > "u" || this.useIntersectionObserver || (this.scrollElement = $(this.baseComponentRef.current), this.scrollElement.addEventListener("scroll", this.delayedScroll, { passive: !0 }), window.addEventListener("resize", this.delayedScroll, { passive: !0 }), this.scrollElement !== window && window.addEventListener("scroll", this.delayedScroll, { passive: !0 }));
          } }, { key: "removeListeners", value: function() {
            typeof window > "u" || this.useIntersectionObserver || (this.scrollElement.removeEventListener("scroll", this.delayedScroll), window.removeEventListener("resize", this.delayedScroll), this.scrollElement !== window && window.removeEventListener("scroll", this.delayedScroll));
          } }, { key: "onChangeScroll", value: function() {
            this.useIntersectionObserver || this.setState({ scrollPosition: { x: V(), y: Y() } });
          } }, { key: "render", value: function() {
            var ye = this.props, Te = (ye.delayMethod, ye.delayTime, function(we, Me) {
              if (we == null) return {};
              var ze, Ye, It = function(Nt, De) {
                if (Nt == null) return {};
                var ot, St, $e = {}, Lt = Object.keys(Nt);
                for (St = 0; St < Lt.length; St++) ot = Lt[St], De.indexOf(ot) >= 0 || ($e[ot] = Nt[ot]);
                return $e;
              }(we, Me);
              if (Object.getOwnPropertySymbols) {
                var pt = Object.getOwnPropertySymbols(we);
                for (Ye = 0; Ye < pt.length; Ye++) ze = pt[Ye], Me.indexOf(ze) >= 0 || Object.prototype.propertyIsEnumerable.call(we, ze) && (It[ze] = we[ze]);
              }
              return It;
            }(ye, p)), le = this.useIntersectionObserver ? null : this.state.scrollPosition;
            return s().createElement(H, O({ forwardRef: this.baseComponentRef, scrollPosition: le }, Te));
          } }]) && P(G.prototype, pe), Object.defineProperty(G, "prototype", { writable: !1 }), te;
        }(s().Component);
        return B.propTypes = { delayMethod: a.PropTypes.oneOf(["debounce", "throttle"]), delayTime: a.PropTypes.number, useIntersectionObserver: a.PropTypes.bool }, B.defaultProps = { delayMethod: "throttle", delayTime: 300, useIntersectionObserver: !0 }, B;
      };
      function j(H) {
        return j = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(B) {
          return typeof B;
        } : function(B) {
          return B && typeof Symbol == "function" && B.constructor === Symbol && B !== Symbol.prototype ? "symbol" : typeof B;
        }, j(H);
      }
      function W(H, B) {
        for (var z = 0; z < B.length; z++) {
          var G = B[z];
          G.enumerable = G.enumerable || !1, G.configurable = !0, "value" in G && (G.writable = !0), Object.defineProperty(H, (pe = function(me, re) {
            if (j(me) !== "object" || me === null) return me;
            var Z = me[Symbol.toPrimitive];
            if (Z !== void 0) {
              var te = Z.call(me, "string");
              if (j(te) !== "object") return te;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(me);
          }(G.key), j(pe) === "symbol" ? pe : String(pe)), G);
        }
        var pe;
      }
      function ee(H, B) {
        return ee = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(z, G) {
          return z.__proto__ = G, z;
        }, ee(H, B);
      }
      function K(H) {
        return K = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(B) {
          return B.__proto__ || Object.getPrototypeOf(B);
        }, K(H);
      }
      var oe = function(H) {
        (function(Z, te) {
          if (typeof te != "function" && te !== null) throw new TypeError("Super expression must either be null or a function");
          Z.prototype = Object.create(te && te.prototype, { constructor: { value: Z, writable: !0, configurable: !0 } }), Object.defineProperty(Z, "prototype", { writable: !1 }), te && ee(Z, te);
        })(re, H);
        var B, z, G, pe, me = (G = re, pe = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var Z, te = K(G);
          if (pe) {
            var ye = K(this).constructor;
            Z = Reflect.construct(te, arguments, ye);
          } else Z = te.apply(this, arguments);
          return function(Te, le) {
            if (le && (j(le) === "object" || typeof le == "function")) return le;
            if (le !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(we) {
              if (we === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return we;
            }(Te);
          }(this, Z);
        });
        function re(Z) {
          return function(te, ye) {
            if (!(te instanceof ye)) throw new TypeError("Cannot call a class as a function");
          }(this, re), me.call(this, Z);
        }
        return B = re, (z = [{ key: "render", value: function() {
          return s().createElement(E, this.props);
        } }]) && W(B.prototype, z), Object.defineProperty(B, "prototype", { writable: !1 }), re;
      }(s().Component);
      const ne = U(oe);
      function se(H) {
        return se = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(B) {
          return typeof B;
        } : function(B) {
          return B && typeof Symbol == "function" && B.constructor === Symbol && B !== Symbol.prototype ? "symbol" : typeof B;
        }, se(H);
      }
      function de(H, B) {
        for (var z = 0; z < B.length; z++) {
          var G = B[z];
          G.enumerable = G.enumerable || !1, G.configurable = !0, "value" in G && (G.writable = !0), Object.defineProperty(H, (pe = function(me, re) {
            if (se(me) !== "object" || me === null) return me;
            var Z = me[Symbol.toPrimitive];
            if (Z !== void 0) {
              var te = Z.call(me, "string");
              if (se(te) !== "object") return te;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(me);
          }(G.key), se(pe) === "symbol" ? pe : String(pe)), G);
        }
        var pe;
      }
      function X(H, B) {
        return X = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(z, G) {
          return z.__proto__ = G, z;
        }, X(H, B);
      }
      function ae(H) {
        if (H === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return H;
      }
      function Q(H) {
        return Q = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(B) {
          return B.__proto__ || Object.getPrototypeOf(B);
        }, Q(H);
      }
      var ie = function(H) {
        (function(Z, te) {
          if (typeof te != "function" && te !== null) throw new TypeError("Super expression must either be null or a function");
          Z.prototype = Object.create(te && te.prototype, { constructor: { value: Z, writable: !0, configurable: !0 } }), Object.defineProperty(Z, "prototype", { writable: !1 }), te && X(Z, te);
        })(re, H);
        var B, z, G, pe, me = (G = re, pe = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var Z, te = Q(G);
          if (pe) {
            var ye = Q(this).constructor;
            Z = Reflect.construct(te, arguments, ye);
          } else Z = te.apply(this, arguments);
          return function(Te, le) {
            if (le && (se(le) === "object" || typeof le == "function")) return le;
            if (le !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return ae(Te);
          }(this, Z);
        });
        function re(Z) {
          var te;
          (function(Me, ze) {
            if (!(Me instanceof ze)) throw new TypeError("Cannot call a class as a function");
          })(this, re), te = me.call(this, Z);
          var ye = Z.afterLoad, Te = Z.beforeLoad, le = Z.scrollPosition, we = Z.visibleByDefault;
          return te.state = { visible: we }, we && (Te(), ye()), te.onVisible = te.onVisible.bind(ae(te)), te.isScrollTracked = !!(le && Number.isFinite(le.x) && le.x >= 0 && Number.isFinite(le.y) && le.y >= 0), te;
        }
        return B = re, (z = [{ key: "componentDidUpdate", value: function(Z, te) {
          te.visible !== this.state.visible && this.props.afterLoad();
        } }, { key: "onVisible", value: function() {
          this.props.beforeLoad(), this.setState({ visible: !0 });
        } }, { key: "render", value: function() {
          if (this.state.visible) return this.props.children;
          var Z = this.props, te = Z.className, ye = Z.delayMethod, Te = Z.delayTime, le = Z.height, we = Z.placeholder, Me = Z.scrollPosition, ze = Z.style, Ye = Z.threshold, It = Z.useIntersectionObserver, pt = Z.width;
          return this.isScrollTracked || It && l() ? s().createElement(E, { className: te, height: le, onVisible: this.onVisible, placeholder: we, scrollPosition: Me, style: ze, threshold: Ye, useIntersectionObserver: It, width: pt }) : s().createElement(ne, { className: te, delayMethod: ye, delayTime: Te, height: le, onVisible: this.onVisible, placeholder: we, style: ze, threshold: Ye, width: pt });
        } }]) && de(B.prototype, z), Object.defineProperty(B, "prototype", { writable: !1 }), re;
      }(s().Component);
      ie.propTypes = { afterLoad: a.PropTypes.func, beforeLoad: a.PropTypes.func, useIntersectionObserver: a.PropTypes.bool, visibleByDefault: a.PropTypes.bool }, ie.defaultProps = { afterLoad: function() {
        return {};
      }, beforeLoad: function() {
        return {};
      }, useIntersectionObserver: !0, visibleByDefault: !1 };
      const F = ie;
      function he(H) {
        return he = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(B) {
          return typeof B;
        } : function(B) {
          return B && typeof Symbol == "function" && B.constructor === Symbol && B !== Symbol.prototype ? "symbol" : typeof B;
        }, he(H);
      }
      var fe = ["afterLoad", "beforeLoad", "delayMethod", "delayTime", "effect", "placeholder", "placeholderSrc", "scrollPosition", "threshold", "useIntersectionObserver", "visibleByDefault", "wrapperClassName", "wrapperProps"];
      function Se(H, B) {
        var z = Object.keys(H);
        if (Object.getOwnPropertySymbols) {
          var G = Object.getOwnPropertySymbols(H);
          B && (G = G.filter(function(pe) {
            return Object.getOwnPropertyDescriptor(H, pe).enumerable;
          })), z.push.apply(z, G);
        }
        return z;
      }
      function Le(H) {
        for (var B = 1; B < arguments.length; B++) {
          var z = arguments[B] != null ? arguments[B] : {};
          B % 2 ? Se(Object(z), !0).forEach(function(G) {
            Ae(H, G, z[G]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(H, Object.getOwnPropertyDescriptors(z)) : Se(Object(z)).forEach(function(G) {
            Object.defineProperty(H, G, Object.getOwnPropertyDescriptor(z, G));
          });
        }
        return H;
      }
      function Ae(H, B, z) {
        return (B = Be(B)) in H ? Object.defineProperty(H, B, { value: z, enumerable: !0, configurable: !0, writable: !0 }) : H[B] = z, H;
      }
      function Ie() {
        return Ie = Object.assign ? Object.assign.bind() : function(H) {
          for (var B = 1; B < arguments.length; B++) {
            var z = arguments[B];
            for (var G in z) Object.prototype.hasOwnProperty.call(z, G) && (H[G] = z[G]);
          }
          return H;
        }, Ie.apply(this, arguments);
      }
      function Re(H, B) {
        for (var z = 0; z < B.length; z++) {
          var G = B[z];
          G.enumerable = G.enumerable || !1, G.configurable = !0, "value" in G && (G.writable = !0), Object.defineProperty(H, Be(G.key), G);
        }
      }
      function Be(H) {
        var B = function(z, G) {
          if (he(z) !== "object" || z === null) return z;
          var pe = z[Symbol.toPrimitive];
          if (pe !== void 0) {
            var me = pe.call(z, "string");
            if (he(me) !== "object") return me;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(z);
        }(H);
        return he(B) === "symbol" ? B : String(B);
      }
      function Oe(H, B) {
        return Oe = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(z, G) {
          return z.__proto__ = G, z;
        }, Oe(H, B);
      }
      function N(H) {
        return N = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(B) {
          return B.__proto__ || Object.getPrototypeOf(B);
        }, N(H);
      }
      var q = function(H) {
        (function(Z, te) {
          if (typeof te != "function" && te !== null) throw new TypeError("Super expression must either be null or a function");
          Z.prototype = Object.create(te && te.prototype, { constructor: { value: Z, writable: !0, configurable: !0 } }), Object.defineProperty(Z, "prototype", { writable: !1 }), te && Oe(Z, te);
        })(re, H);
        var B, z, G, pe, me = (G = re, pe = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var Z, te = N(G);
          if (pe) {
            var ye = N(this).constructor;
            Z = Reflect.construct(te, arguments, ye);
          } else Z = te.apply(this, arguments);
          return function(Te, le) {
            if (le && (he(le) === "object" || typeof le == "function")) return le;
            if (le !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(we) {
              if (we === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return we;
            }(Te);
          }(this, Z);
        });
        function re(Z) {
          var te;
          return function(ye, Te) {
            if (!(ye instanceof Te)) throw new TypeError("Cannot call a class as a function");
          }(this, re), (te = me.call(this, Z)).state = { loaded: !1 }, te;
        }
        return B = re, (z = [{ key: "onImageLoad", value: function() {
          var Z = this;
          return this.state.loaded ? null : function(te) {
            Z.props.onLoad(te), Z.props.afterLoad(), Z.setState({ loaded: !0 });
          };
        } }, { key: "getImg", value: function() {
          var Z = this.props, te = (Z.afterLoad, Z.beforeLoad, Z.delayMethod, Z.delayTime, Z.effect, Z.placeholder, Z.placeholderSrc, Z.scrollPosition, Z.threshold, Z.useIntersectionObserver, Z.visibleByDefault, Z.wrapperClassName, Z.wrapperProps, function(ye, Te) {
            if (ye == null) return {};
            var le, we, Me = function(Ye, It) {
              if (Ye == null) return {};
              var pt, Nt, De = {}, ot = Object.keys(Ye);
              for (Nt = 0; Nt < ot.length; Nt++) pt = ot[Nt], It.indexOf(pt) >= 0 || (De[pt] = Ye[pt]);
              return De;
            }(ye, Te);
            if (Object.getOwnPropertySymbols) {
              var ze = Object.getOwnPropertySymbols(ye);
              for (we = 0; we < ze.length; we++) le = ze[we], Te.indexOf(le) >= 0 || Object.prototype.propertyIsEnumerable.call(ye, le) && (Me[le] = ye[le]);
            }
            return Me;
          }(Z, fe));
          return s().createElement("img", Ie({}, te, { onLoad: this.onImageLoad() }));
        } }, { key: "getLazyLoadImage", value: function() {
          var Z = this.props, te = Z.beforeLoad, ye = Z.className, Te = Z.delayMethod, le = Z.delayTime, we = Z.height, Me = Z.placeholder, ze = Z.scrollPosition, Ye = Z.style, It = Z.threshold, pt = Z.useIntersectionObserver, Nt = Z.visibleByDefault, De = Z.width;
          return s().createElement(F, { beforeLoad: te, className: ye, delayMethod: Te, delayTime: le, height: we, placeholder: Me, scrollPosition: ze, style: Ye, threshold: It, useIntersectionObserver: pt, visibleByDefault: Nt, width: De }, this.getImg());
        } }, { key: "getWrappedLazyLoadImage", value: function(Z) {
          var te = this.props, ye = te.effect, Te = te.height, le = te.placeholderSrc, we = te.width, Me = te.wrapperClassName, ze = te.wrapperProps, Ye = this.state.loaded, It = Ye ? " lazy-load-image-loaded" : "", pt = Ye || !le ? {} : { backgroundImage: "url(".concat(le, ")"), backgroundSize: "100% 100%" };
          return s().createElement("span", Ie({ className: Me + " lazy-load-image-background " + ye + It, style: Le(Le({}, pt), {}, { color: "transparent", display: "inline-block", height: Te, width: we }) }, ze), Z);
        } }, { key: "render", value: function() {
          var Z = this.props, te = Z.effect, ye = Z.placeholderSrc, Te = Z.visibleByDefault, le = Z.wrapperClassName, we = Z.wrapperProps, Me = this.getLazyLoadImage();
          return (te || ye) && !Te || le || we ? this.getWrappedLazyLoadImage(Me) : Me;
        } }]) && Re(B.prototype, z), Object.defineProperty(B, "prototype", { writable: !1 }), re;
      }(s().Component);
      q.propTypes = { onLoad: a.PropTypes.func, afterLoad: a.PropTypes.func, beforeLoad: a.PropTypes.func, delayMethod: a.PropTypes.string, delayTime: a.PropTypes.number, effect: a.PropTypes.string, placeholderSrc: a.PropTypes.string, threshold: a.PropTypes.number, useIntersectionObserver: a.PropTypes.bool, visibleByDefault: a.PropTypes.bool, wrapperClassName: a.PropTypes.string, wrapperProps: a.PropTypes.object }, q.defaultProps = { onLoad: function() {
      }, afterLoad: function() {
        return {};
      }, beforeLoad: function() {
        return {};
      }, delayMethod: "throttle", delayTime: 300, effect: "", placeholderSrc: null, threshold: 100, useIntersectionObserver: !0, visibleByDefault: !1, wrapperClassName: "" };
      const J = q;
    })(), _c.exports = r;
  })()), _c.exports;
}
var WA = zA();
const UA = _e(({ src: e, alt: t, ...n }) => /* @__PURE__ */ k(
  WA.LazyLoadImage,
  {
    src: e,
    alt: t,
    effect: "blur",
    wrapperProps: {
      // If you need to, you can tweak the effect transition using the wrapper style.
      style: { transitionDelay: "1s" }
    },
    draggable: !1,
    ...n
  }
));
UA.displayName = "LazyImage";
function HA(e) {
  return gt("MuiLinearProgress", e);
}
wt("MuiLinearProgress", ["root", "colorPrimary", "colorSecondary", "determinate", "indeterminate", "buffer", "query", "dashed", "dashedColorPrimary", "dashedColorSecondary", "bar", "bar1", "bar2", "barColorPrimary", "barColorSecondary", "bar1Indeterminate", "bar1Determinate", "bar1Buffer", "bar2Indeterminate", "bar2Buffer"]);
const Ou = 4, Ru = qr`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`, qA = typeof Ru != "string" ? ai`
        animation: ${Ru} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
      ` : null, $u = qr`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`, YA = typeof $u != "string" ? ai`
        animation: ${$u} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
      ` : null, Pu = qr`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`, GA = typeof Pu != "string" ? ai`
        animation: ${Pu} 3s infinite linear;
      ` : null, KA = (e) => {
  const {
    classes: t,
    variant: n,
    color: r
  } = e, o = {
    root: ["root", `color${xe(r)}`, n],
    dashed: ["dashed", `dashedColor${xe(r)}`],
    bar1: ["bar", "bar1", `barColor${xe(r)}`, (n === "indeterminate" || n === "query") && "bar1Indeterminate", n === "determinate" && "bar1Determinate", n === "buffer" && "bar1Buffer"],
    bar2: ["bar", "bar2", n !== "buffer" && `barColor${xe(r)}`, n === "buffer" && `color${xe(r)}`, (n === "indeterminate" || n === "query") && "bar2Indeterminate", n === "buffer" && "bar2Buffer"]
  };
  return Ct(o, HA, t);
}, af = (e, t) => e.vars ? e.vars.palette.LinearProgress[`${t}Bg`] : e.palette.mode === "light" ? ci(e.palette[t].main, 0.62) : li(e.palette[t].main, 0.5), XA = ke("span", {
  name: "MuiLinearProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`color${xe(n.color)}`], t[n.variant]];
  }
})(Ke(({
  theme: e
}) => ({
  position: "relative",
  overflow: "hidden",
  display: "block",
  height: 4,
  // Fix Safari's bug during composition of different paint.
  zIndex: 0,
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [...Object.entries(e.palette).filter(cn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: af(e, t)
    }
  })), {
    props: ({
      ownerState: t
    }) => t.color === "inherit" && t.variant !== "buffer",
    style: {
      "&::before": {
        content: '""',
        position: "absolute",
        left: 0,
        top: 0,
        right: 0,
        bottom: 0,
        backgroundColor: "currentColor",
        opacity: 0.3
      }
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      backgroundColor: "transparent"
    }
  }, {
    props: {
      variant: "query"
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
}))), QA = ke("span", {
  name: "MuiLinearProgress",
  slot: "Dashed",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.dashed, t[`dashedColor${xe(n.color)}`]];
  }
})(Ke(({
  theme: e
}) => ({
  position: "absolute",
  marginTop: 0,
  height: "100%",
  width: "100%",
  backgroundSize: "10px 10px",
  backgroundPosition: "0 -23px",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3,
      backgroundImage: "radial-gradient(currentColor 0%, currentColor 16%, transparent 42%)"
    }
  }, ...Object.entries(e.palette).filter(cn()).map(([t]) => {
    const n = af(e, t);
    return {
      props: {
        color: t
      },
      style: {
        backgroundImage: `radial-gradient(${n} 0%, ${n} 16%, transparent 42%)`
      }
    };
  })]
})), GA || {
  // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
  animation: `${Pu} 3s infinite linear`
}), JA = ke("span", {
  name: "MuiLinearProgress",
  slot: "Bar1",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar1, t[`barColor${xe(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar1Indeterminate, n.variant === "determinate" && t.bar1Determinate, n.variant === "buffer" && t.bar1Buffer];
  }
})(Ke(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      backgroundColor: "currentColor"
    }
  }, ...Object.entries(e.palette).filter(cn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main
    }
  })), {
    props: {
      variant: "determinate"
    },
    style: {
      transition: `transform .${Ou}s linear`
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      zIndex: 1,
      transition: `transform .${Ou}s linear`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: qA || {
      animation: `${Ru} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`
    }
  }]
}))), ZA = ke("span", {
  name: "MuiLinearProgress",
  slot: "Bar2",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar2, t[`barColor${xe(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar2Indeterminate, n.variant === "buffer" && t.bar2Buffer];
  }
})(Ke(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [...Object.entries(e.palette).filter(cn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--LinearProgressBar2-barColor": (e.vars || e).palette[t].main
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color !== "inherit",
    style: {
      backgroundColor: "var(--LinearProgressBar2-barColor, currentColor)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color === "inherit",
    style: {
      backgroundColor: "currentColor"
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3
    }
  }, ...Object.entries(e.palette).filter(cn()).map(([t]) => ({
    props: {
      color: t,
      variant: "buffer"
    },
    style: {
      backgroundColor: af(e, t),
      transition: `transform .${Ou}s linear`
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: YA || {
      animation: `${$u} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`
    }
  }]
}))), Av = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Tt({
    props: t,
    name: "MuiLinearProgress"
  }), {
    className: o,
    color: s = "primary",
    value: a,
    valueBuffer: l,
    variant: c = "indeterminate",
    ...u
  } = r, d = {
    ...r,
    color: s,
    variant: c
  }, f = KA(d), h = sl(), g = {}, y = {
    bar1: {},
    bar2: {}
  };
  if (c === "determinate" || c === "buffer")
    if (a !== void 0) {
      g["aria-valuenow"] = Math.round(a), g["aria-valuemin"] = 0, g["aria-valuemax"] = 100;
      let m = a - 100;
      h && (m = -m), y.bar1.transform = `translateX(${m}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
  if (c === "buffer")
    if (l !== void 0) {
      let m = (l || 0) - 100;
      h && (m = -m), y.bar2.transform = `translateX(${m}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
  return /* @__PURE__ */ Pe(XA, {
    className: Ee(f.root, o),
    ownerState: d,
    role: "progressbar",
    ...g,
    ref: n,
    ...u,
    children: [c === "buffer" ? /* @__PURE__ */ k(QA, {
      className: f.dashed,
      ownerState: d
    }) : null, /* @__PURE__ */ k(JA, {
      className: f.bar1,
      ownerState: d,
      style: y.bar1
    }), c === "determinate" ? null : /* @__PURE__ */ k(ZA, {
      className: f.bar2,
      ownerState: d,
      style: y.bar2
    })]
  });
});
process.env.NODE_ENV !== "production" && (Av.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["inherit", "primary", "secondary"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */
  value: i.number,
  /**
   * The value for the buffer variant.
   * Value between 0 and 100.
   */
  valueBuffer: i.number,
  /**
   * The variant to use.
   * Use indeterminate or query when there is no progress value.
   * @default 'indeterminate'
   */
  variant: i.oneOf(["buffer", "determinate", "indeterminate", "query"])
});
const eM = _e(({ disablePortal: e, isCircle: t = !1 }) => /* @__PURE__ */ k(ei, { disablePortal: e, children: /* @__PURE__ */ Pe(
  Rr,
  {
    sx: {
      width: 1,
      minHeight: 1,
      flexGrow: 1,
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      position: "fixed",
      // 基于 <body>
      top: 0,
      left: 0,
      right: 0
    },
    children: [
      t && /* @__PURE__ */ k(wd, { color: "primary", disableShrink: !0, size: 40 }),
      !t && /* @__PURE__ */ k(
        Av,
        {
          color: "primary",
          sx: { width: 1, maxWidth: 360, height: "4px", borderRadius: "8px" }
        }
      )
    ]
  }
) }));
eM.displayName = "Loading";
function tM(e) {
  return gt("MuiDialog", e);
}
const Dc = wt("MuiDialog", ["root", "scrollPaper", "scrollBody", "container", "paper", "paperScrollPaper", "paperScrollBody", "paperWidthFalse", "paperWidthXs", "paperWidthSm", "paperWidthMd", "paperWidthLg", "paperWidthXl", "paperFullWidth", "paperFullScreen"]), Mv = /* @__PURE__ */ C.createContext({});
process.env.NODE_ENV !== "production" && (Mv.displayName = "DialogContext");
const nM = ke(Md, {
  name: "MuiDialog",
  slot: "Backdrop",
  overrides: (e, t) => t.backdrop
})({
  // Improve scrollable dialog support.
  zIndex: -1
}), rM = (e) => {
  const {
    classes: t,
    scroll: n,
    maxWidth: r,
    fullWidth: o,
    fullScreen: s
  } = e, a = {
    root: ["root"],
    container: ["container", `scroll${xe(n)}`],
    paper: ["paper", `paperScroll${xe(n)}`, `paperWidth${xe(String(r))}`, o && "paperFullWidth", s && "paperFullScreen"]
  };
  return Ct(a, tM, t);
}, oM = ke(wl, {
  name: "MuiDialog",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  "@media print": {
    // Use !important to override the Modal inline-style.
    position: "absolute !important"
  }
}), iM = ke("div", {
  name: "MuiDialog",
  slot: "Container",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.container, t[`scroll${xe(n.scroll)}`]];
  }
})({
  height: "100%",
  "@media print": {
    height: "auto"
  },
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      justifyContent: "center",
      alignItems: "center"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      overflowY: "auto",
      overflowX: "hidden",
      textAlign: "center",
      "&::after": {
        content: '""',
        display: "inline-block",
        verticalAlign: "middle",
        height: "100%",
        width: "0"
      }
    }
  }]
}), sM = ke(di, {
  name: "MuiDialog",
  slot: "Paper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.paper, t[`scrollPaper${xe(n.scroll)}`], t[`paperWidth${xe(String(n.maxWidth))}`], n.fullWidth && t.paperFullWidth, n.fullScreen && t.paperFullScreen];
  }
})(Ke(({
  theme: e
}) => ({
  margin: 32,
  position: "relative",
  overflowY: "auto",
  "@media print": {
    overflowY: "visible",
    boxShadow: "none"
  },
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      flexDirection: "column",
      maxHeight: "calc(100% - 64px)"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      display: "inline-block",
      verticalAlign: "middle",
      textAlign: "initial"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.maxWidth,
    style: {
      maxWidth: "calc(100% - 64px)"
    }
  }, {
    props: {
      maxWidth: "xs"
    },
    style: {
      maxWidth: e.breakpoints.unit === "px" ? Math.max(e.breakpoints.values.xs, 444) : `max(${e.breakpoints.values.xs}${e.breakpoints.unit}, 444px)`,
      [`&.${Dc.paperScrollBody}`]: {
        [e.breakpoints.down(Math.max(e.breakpoints.values.xs, 444) + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  }, ...Object.keys(e.breakpoints.values).filter((t) => t !== "xs").map((t) => ({
    props: {
      maxWidth: t
    },
    style: {
      maxWidth: `${e.breakpoints.values[t]}${e.breakpoints.unit}`,
      [`&.${Dc.paperScrollBody}`]: {
        [e.breakpoints.down(e.breakpoints.values[t] + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  })), {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "calc(100% - 64px)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullScreen,
    style: {
      margin: 0,
      width: "100%",
      maxWidth: "100%",
      height: "100%",
      maxHeight: "none",
      borderRadius: 0,
      [`&.${Dc.paperScrollBody}`]: {
        margin: 0,
        maxWidth: "100%"
      }
    }
  }]
}))), _v = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Tt({
    props: t,
    name: "MuiDialog"
  }), o = Nr(), s = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    "aria-describedby": a,
    "aria-labelledby": l,
    "aria-modal": c = !0,
    BackdropComponent: u,
    BackdropProps: d,
    children: f,
    className: h,
    disableEscapeKeyDown: g = !1,
    fullScreen: y = !1,
    fullWidth: m = !1,
    maxWidth: b = "sm",
    onClick: x,
    onClose: E,
    open: w,
    PaperComponent: T = di,
    PaperProps: v = {},
    scroll: S = "paper",
    slots: R = {},
    slotProps: $ = {},
    TransitionComponent: I = po,
    transitionDuration: p = s,
    TransitionProps: O,
    ...P
  } = r, A = {
    ...r,
    disableEscapeKeyDown: g,
    fullScreen: y,
    fullWidth: m,
    maxWidth: b,
    scroll: S
  }, D = rM(A), _ = C.useRef(), M = (he) => {
    _.current = he.target === he.currentTarget;
  }, V = (he) => {
    x && x(he), _.current && (_.current = null, E && E(he, "backdropClick"));
  }, Y = Gu(l), U = C.useMemo(() => ({
    titleId: Y
  }), [Y]), j = {
    transition: I,
    ...R
  }, W = {
    transition: O,
    paper: v,
    backdrop: d,
    ...$
  }, ee = {
    slots: j,
    slotProps: W
  }, [K, oe] = at("root", {
    elementType: oM,
    shouldForwardComponentProp: !0,
    externalForwardedProps: ee,
    ownerState: A,
    className: Ee(D.root, h),
    ref: n
  }), [ne, se] = at("backdrop", {
    elementType: nM,
    shouldForwardComponentProp: !0,
    externalForwardedProps: ee,
    ownerState: A
  }), [de, X] = at("paper", {
    elementType: sM,
    shouldForwardComponentProp: !0,
    externalForwardedProps: ee,
    ownerState: A,
    className: Ee(D.paper, v.className)
  }), [ae, Q] = at("container", {
    elementType: iM,
    externalForwardedProps: ee,
    ownerState: A,
    className: Ee(D.container)
  }), [ie, F] = at("transition", {
    elementType: po,
    externalForwardedProps: ee,
    ownerState: A,
    additionalProps: {
      appear: !0,
      in: w,
      timeout: p,
      role: "presentation"
    }
  });
  return /* @__PURE__ */ k(K, {
    closeAfterTransition: !0,
    slots: {
      backdrop: ne
    },
    slotProps: {
      backdrop: {
        transitionDuration: p,
        as: u,
        ...se
      }
    },
    disableEscapeKeyDown: g,
    onClose: E,
    open: w,
    onClick: V,
    ...oe,
    ...P,
    children: /* @__PURE__ */ k(ie, {
      ...F,
      children: /* @__PURE__ */ k(ae, {
        onMouseDown: M,
        ...Q,
        children: /* @__PURE__ */ k(de, {
          as: T,
          elevation: 24,
          role: "dialog",
          "aria-describedby": a,
          "aria-labelledby": Y,
          "aria-modal": c,
          ...X,
          children: /* @__PURE__ */ k(Mv.Provider, {
            value: U,
            children: f
          })
        })
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (_v.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The id(s) of the element(s) that describe the dialog.
   */
  "aria-describedby": i.string,
  /**
   * The id(s) of the element(s) that label the dialog.
   */
  "aria-labelledby": i.string,
  /**
   * Informs assistive technologies that the element is modal.
   * It's added on the element with role="dialog".
   * @default true
   */
  "aria-modal": i.oneOfType([i.oneOf(["false", "true"]), i.bool]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * @ignore
   */
  BackdropProps: i.object,
  /**
   * Dialog children, usually the included sub-components.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: i.bool,
  /**
   * If `true`, the dialog is full-screen.
   * @default false
   */
  fullScreen: i.bool,
  /**
   * If `true`, the dialog stretches to `maxWidth`.
   *
   * Notice that the dialog width grow is limited by the default margin.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * Determine the max-width of the dialog.
   * The dialog width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'sm'
   */
  maxWidth: i.oneOfType([i.oneOf(["xs", "sm", "md", "lg", "xl", !1]), i.string]),
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The component used to render the body of the dialog.
   * @default Paper
   */
  PaperComponent: i.elementType,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @default {}
   * @deprecated Use `slotProps.paper` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PaperProps: i.object,
  /**
   * Determine the container for scrolling the dialog.
   * @default 'paper'
   */
  scroll: i.oneOf(["body", "paper"]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    container: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    container: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: i.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated Use `slotProps.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionProps: i.object
});
const Dv = _e(
  ({
    isOpen: e,
    closeModal: t,
    isPrevented: n = !0,
    children: r,
    maxWidth: o = "sm",
    fullWidth: s = !0,
    sx: a,
    ...l
  }) => {
    const { paperCommonStyles: c } = fi();
    return /* @__PURE__ */ k(
      _v,
      {
        className: "VenomousUI-Modal",
        open: e,
        onClose: n ? void 0 : t,
        scroll: "paper",
        keepMounted: !0,
        maxWidth: o,
        fullWidth: s,
        sx: { ...a },
        slotProps: {
          paper: {
            sx: {
              ...c
            }
          }
        },
        ...l,
        children: r
      }
    );
  }
);
Dv.displayName = "Modal";
function f2() {
  const [e, t] = Sr(!1), n = tn(() => t(!0), []), r = tn(() => t(!1), []);
  return {
    isOpen: e,
    openModal: n,
    closeModal: r
  };
}
const aM = _e(
  ({
    onSubmit: e,
    onClose: t,
    isSubmitting: n = !1,
    title: r = "",
    contentMessage: o = "",
    cancelButtonText: s = "Cancel",
    confirmButtonText: a = "Confirm",
    confirmButtonIsDisabled: l = !1,
    cancelButtonIsDisabled: c = !1,
    ...u
  }) => {
    const d = Hv(u.isOpen);
    return Uo(() => {
      d.current && !u.isOpen && (t == null || t()), d.current = u.isOpen;
    }, [u.isOpen, t]), /* @__PURE__ */ Pe(Dv, { isPrevented: !0, ...u, children: [
      /* @__PURE__ */ k(yn, { isTitle: !0, text: r, p: "8px" }),
      /* @__PURE__ */ k(yn, { text: o, p: "8px", pb: "24px" }),
      /* @__PURE__ */ Pe(Kt, { row: !0, justifyContent: "flex-end", children: [
        /* @__PURE__ */ k(
          Yn,
          {
            text: s,
            onClick: u.closeModal,
            disabled: c || n,
            isOutlined: !0
          }
        ),
        /* @__PURE__ */ k(
          Yn,
          {
            text: a,
            onClick: () => {
              (async () => (await (e == null ? void 0 : e()), u.closeModal()))();
            },
            disabled: l,
            loading: n,
            autoFocus: !0
          }
        )
      ] })
    ] });
  }
);
aM.displayName = "ConfirmModal";
function uh(e) {
  return e.substring(2).toLowerCase();
}
function lM(e, t) {
  return t.documentElement.clientWidth < e.clientX || t.documentElement.clientHeight < e.clientY;
}
function Ua(e) {
  const {
    children: t,
    disableReactTree: n = !1,
    mouseEvent: r = "onClick",
    onClickAway: o,
    touchEvent: s = "onTouchEnd"
  } = e, a = C.useRef(!1), l = C.useRef(null), c = C.useRef(!1), u = C.useRef(!1);
  C.useEffect(() => (setTimeout(() => {
    c.current = !0;
  }, 0), () => {
    c.current = !1;
  }), []);
  const d = nn(bo(t), l), f = lr((y) => {
    const m = u.current;
    u.current = !1;
    const b = pn(l.current);
    if (!c.current || !l.current || "clientX" in y && lM(y, b))
      return;
    if (a.current) {
      a.current = !1;
      return;
    }
    let x;
    y.composedPath ? x = y.composedPath().includes(l.current) : x = !b.documentElement.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      y.target
    ) || l.current.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      y.target
    ), !x && (n || !m) && o(y);
  }), h = (y) => (m) => {
    u.current = !0;
    const b = t.props[y];
    b && b(m);
  }, g = {
    ref: d
  };
  return s !== !1 && (g[s] = h(s)), C.useEffect(() => {
    if (s !== !1) {
      const y = uh(s), m = pn(l.current), b = () => {
        a.current = !0;
      };
      return m.addEventListener(y, f), m.addEventListener("touchmove", b), () => {
        m.removeEventListener(y, f), m.removeEventListener("touchmove", b);
      };
    }
  }, [f, s]), r !== !1 && (g[r] = h(r)), C.useEffect(() => {
    if (r !== !1) {
      const y = uh(r), m = pn(l.current);
      return m.addEventListener(y, f), () => {
        m.removeEventListener(y, f);
      };
    }
  }, [f, r]), /* @__PURE__ */ C.cloneElement(t, g);
}
process.env.NODE_ENV !== "production" && (Ua.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The wrapped element.
   */
  children: Gr.isRequired,
  /**
   * If `true`, the React tree is ignored and only the DOM tree is considered.
   * This prop changes how portaled elements are handled.
   * @default false
   */
  disableReactTree: i.bool,
  /**
   * The mouse event to listen to. You can disable the listener by providing `false`.
   * @default 'onClick'
   */
  mouseEvent: i.oneOf(["onClick", "onMouseDown", "onMouseUp", "onPointerDown", "onPointerUp", !1]),
  /**
   * Callback fired when a "click away" event is detected.
   */
  onClickAway: i.func.isRequired,
  /**
   * The touch event to listen to. You can disable the listener by providing `false`.
   * @default 'onTouchEnd'
   */
  touchEvent: i.oneOf(["onTouchEnd", "onTouchStart", !1])
});
process.env.NODE_ENV !== "production" && (Ua.propTypes = gs(Ua.propTypes));
const cM = of((e) => ({
  activeId: null,
  setActiveId: (t) => e({ activeId: t })
}));
function uM(e) {
  const { activeId: t, setActiveId: n } = cM(), [r, o] = Sr(null), s = !!r && (!e || t === e), a = tn(
    (c) => {
      const u = c.currentTarget;
      e ? (n(e), o(u)) : o(r ? null : u);
    },
    [e, n]
  ), l = tn(() => {
    var c;
    (c = window.getSelection()) != null && c.toString() || (e && n(null), o(null));
  }, [e, n]);
  return {
    anchorEl: r,
    isOpen: s,
    openPopper: a,
    closePopper: l
  };
}
const Bv = _e(
  ({ id: e, children: t, renderPopperHandler: n, position: r = "bottom", sx: o, contentSx: s }) => {
    const { anchorEl: a, isOpen: l, openPopper: c, closePopper: u } = uM(e);
    return /* @__PURE__ */ k(Ua, { onClickAway: u, children: /* @__PURE__ */ Pe(
      Rr,
      {
        sx: { position: "relative", ...o },
        role: "presentation",
        className: "VenomousUI-Popper",
        children: [
          n({ anchorEl: a, isOpen: l, openPopper: c, closePopper: u }),
          /* @__PURE__ */ k(fl, { open: l, anchorEl: a, placement: r, transition: !0, keepMounted: !0, children: ({ TransitionProps: d }) => /* @__PURE__ */ k(po, { ...d, children: /* @__PURE__ */ k(Go, { isOutlined: !0, sx: { width: "100%", ...s }, children: t }) }) })
        ]
      }
    ) });
  }
);
Bv.displayName = "Popper";
const ku = typeof nd({}) == "function", dM = (e, t) => ({
  WebkitFontSmoothing: "antialiased",
  // Antialiasing.
  MozOsxFontSmoothing: "grayscale",
  // Antialiasing.
  // Change from `box-sizing: content-box` so that `width`
  // is not affected by `padding` or `border`.
  boxSizing: "border-box",
  // Fix font resize problem in iOS
  WebkitTextSizeAdjust: "100%",
  // When used under CssVarsProvider, colorScheme should not be applied dynamically because it will generate the stylesheet twice for server-rendered applications.
  ...t && !e.vars && {
    colorScheme: e.palette.mode
  }
}), fM = (e) => ({
  color: (e.vars || e).palette.text.primary,
  ...e.typography.body1,
  backgroundColor: (e.vars || e).palette.background.default,
  "@media print": {
    // Save printer ink.
    backgroundColor: (e.vars || e).palette.common.white
  }
}), Fv = (e, t = !1) => {
  var s, a;
  const n = {};
  t && e.colorSchemes && typeof e.getColorSchemeSelector == "function" && Object.entries(e.colorSchemes).forEach(([l, c]) => {
    var d, f;
    const u = e.getColorSchemeSelector(l);
    u.startsWith("@") ? n[u] = {
      ":root": {
        colorScheme: (d = c.palette) == null ? void 0 : d.mode
      }
    } : n[u.replace(/\s*&/, "")] = {
      colorScheme: (f = c.palette) == null ? void 0 : f.mode
    };
  });
  let r = {
    html: dM(e, t),
    "*, *::before, *::after": {
      boxSizing: "inherit"
    },
    "strong, b": {
      fontWeight: e.typography.fontWeightBold
    },
    body: {
      margin: 0,
      // Remove the margin in all browsers.
      ...fM(e),
      // Add support for document.body.requestFullScreen().
      // Other elements, if background transparent, are not supported.
      "&::backdrop": {
        backgroundColor: (e.vars || e).palette.background.default
      }
    },
    ...n
  };
  const o = (a = (s = e.components) == null ? void 0 : s.MuiCssBaseline) == null ? void 0 : a.styleOverrides;
  return o && (r = [r, o]), r;
}, fa = "mui-ecs", pM = (e) => {
  const t = Fv(e, !1), n = Array.isArray(t) ? t[0] : t;
  return !e.vars && n && (n.html[`:root:has(${fa})`] = {
    colorScheme: e.palette.mode
  }), e.colorSchemes && Object.entries(e.colorSchemes).forEach(([r, o]) => {
    var a, l;
    const s = e.getColorSchemeSelector(r);
    s.startsWith("@") ? n[s] = {
      [`:root:not(:has(.${fa}))`]: {
        colorScheme: (a = o.palette) == null ? void 0 : a.mode
      }
    } : n[s.replace(/\s*&/, "")] = {
      [`&:not(:has(.${fa}))`]: {
        colorScheme: (l = o.palette) == null ? void 0 : l.mode
      }
    };
  }), t;
}, mM = nd(ku ? ({
  theme: e,
  enableColorScheme: t
}) => Fv(e, t) : ({
  theme: e
}) => pM(e));
function jv(e) {
  const t = Tt({
    props: e,
    name: "MuiCssBaseline"
  }), {
    children: n,
    enableColorScheme: r = !1
  } = t;
  return /* @__PURE__ */ Pe(C.Fragment, {
    children: [ku && /* @__PURE__ */ k(mM, {
      enableColorScheme: r
    }), !ku && !r && /* @__PURE__ */ k("span", {
      className: fa,
      style: {
        display: "none"
      }
    }), n]
  });
}
process.env.NODE_ENV !== "production" && (jv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * You can wrap a node.
   */
  children: i.node,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   * @default false
   */
  enableColorScheme: i.bool
});
function hM() {
  const { themeMode: e } = sf(), { themePalette: t } = Nv(), n = ln(() => al({
    palette: {
      mode: e,
      primary: {
        main: t.main,
        dark: t.dark,
        light: t.light,
        contrastText: t.contrastText
      }
    }
  }), [e, t]);
  return gM(t), { theme: n };
}
function gM(e) {
  Uo(() => {
    const t = document.createElement("style");
    return t.innerHTML = `
          /* 设置选中文本的样式 */
          ::selection {
            background-color: ${e.light};                        /* 设置选中文本的背景色 */
            color: white;                                                   /* 设置选中文本的文字颜色 */
          }
    
          /* 设置滚动条的样式 */
          ::-webkit-scrollbar {
            width: 8px;                                                     /* 设置滚动条的宽度 */
            height: 8px;                                                    /* 设置滚动条的高度 */
          }
          ::-webkit-scrollbar-thumb {
            background-color: ${e.main};                         /* 设置滚动条的颜色 */
            border-radius: 4px;                                             /* 设置滚动条的圆角 */
          }
          ::-webkit-scrollbar-thumb:hover {
            background-color: ${e.dark};                         /* 悬停时加深颜色 */
          } 
          ::-webkit-scrollbar-track {
            background-color: rgba(0, 0, 0, 0.1);                         /* 滑轨颜色 */
            border-radius: 4px;                                             /* 圆角 */
            transition: opacity 0.5s ease-in-out;                           /* 滑轨过渡效果 */
          }
          /* Firefox 滚动条样式 */
          * {
            scrollbar-color: ${e.main} rgba(0, 0, 0, 0.1);     /* 滑块 和 滑轨颜色 */
            scrollbar-width: medium;                                        /* 滚动条宽度 */
          }
          /* Firefox 滚动条的过渡效果 */
          *::-webkit-scrollbar {
            transition: opacity 0.5s ease-in-out;
          }
        `, document.head.appendChild(t), () => {
      document.head.removeChild(t);
    };
  }, [e]);
}
const yM = _e(({ children: e }) => {
  const { theme: t } = hM();
  return /* @__PURE__ */ Pe(r1, { theme: t, disableTransitionOnChange: !0, children: [
    /* @__PURE__ */ k(jv, {}),
    e
  ] });
});
yM.displayName = "ThemeProvider";
function bM(e) {
  if (typeof document > "u") return;
  let t = document.head || document.getElementsByTagName("head")[0], n = document.createElement("style");
  n.type = "text/css", t.appendChild(n), n.styleSheet ? n.styleSheet.cssText = e : n.appendChild(document.createTextNode(e));
}
const vM = (e) => {
  switch (e) {
    case "success":
      return TM;
    case "info":
      return EM;
    case "warning":
      return SM;
    case "error":
      return CM;
    default:
      return null;
  }
}, xM = Array(12).fill(0), wM = ({ visible: e, className: t }) => /* @__PURE__ */ L.createElement("div", {
  className: [
    "sonner-loading-wrapper",
    t
  ].filter(Boolean).join(" "),
  "data-visible": e
}, /* @__PURE__ */ L.createElement("div", {
  className: "sonner-spinner"
}, xM.map((n, r) => /* @__PURE__ */ L.createElement("div", {
  className: "sonner-loading-bar",
  key: `spinner-bar-${r}`
})))), TM = /* @__PURE__ */ L.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ L.createElement("path", {
  fillRule: "evenodd",
  d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
  clipRule: "evenodd"
})), SM = /* @__PURE__ */ L.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ L.createElement("path", {
  fillRule: "evenodd",
  d: "M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z",
  clipRule: "evenodd"
})), EM = /* @__PURE__ */ L.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ L.createElement("path", {
  fillRule: "evenodd",
  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z",
  clipRule: "evenodd"
})), CM = /* @__PURE__ */ L.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ L.createElement("path", {
  fillRule: "evenodd",
  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0110 5zm0 10a1 1 0 100-2 1 1 0 000 2z",
  clipRule: "evenodd"
})), OM = /* @__PURE__ */ L.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "12",
  height: "12",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "1.5",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, /* @__PURE__ */ L.createElement("line", {
  x1: "18",
  y1: "6",
  x2: "6",
  y2: "18"
}), /* @__PURE__ */ L.createElement("line", {
  x1: "6",
  y1: "6",
  x2: "18",
  y2: "18"
})), RM = () => {
  const [e, t] = L.useState(document.hidden);
  return L.useEffect(() => {
    const n = () => {
      t(document.hidden);
    };
    return document.addEventListener("visibilitychange", n), () => window.removeEventListener("visibilitychange", n);
  }, []), e;
};
let Iu = 1;
class $M {
  constructor() {
    this.subscribe = (t) => (this.subscribers.push(t), () => {
      const n = this.subscribers.indexOf(t);
      this.subscribers.splice(n, 1);
    }), this.publish = (t) => {
      this.subscribers.forEach((n) => n(t));
    }, this.addToast = (t) => {
      this.publish(t), this.toasts = [
        ...this.toasts,
        t
      ];
    }, this.create = (t) => {
      var n;
      const { message: r, ...o } = t, s = typeof (t == null ? void 0 : t.id) == "number" || ((n = t.id) == null ? void 0 : n.length) > 0 ? t.id : Iu++, a = this.toasts.find((c) => c.id === s), l = t.dismissible === void 0 ? !0 : t.dismissible;
      return this.dismissedToasts.has(s) && this.dismissedToasts.delete(s), a ? this.toasts = this.toasts.map((c) => c.id === s ? (this.publish({
        ...c,
        ...t,
        id: s,
        title: r
      }), {
        ...c,
        ...t,
        id: s,
        dismissible: l,
        title: r
      }) : c) : this.addToast({
        title: r,
        ...o,
        dismissible: l,
        id: s
      }), s;
    }, this.dismiss = (t) => (t ? (this.dismissedToasts.add(t), requestAnimationFrame(() => this.subscribers.forEach((n) => n({
      id: t,
      dismiss: !0
    })))) : this.toasts.forEach((n) => {
      this.subscribers.forEach((r) => r({
        id: n.id,
        dismiss: !0
      }));
    }), t), this.message = (t, n) => this.create({
      ...n,
      message: t
    }), this.error = (t, n) => this.create({
      ...n,
      message: t,
      type: "error"
    }), this.success = (t, n) => this.create({
      ...n,
      type: "success",
      message: t
    }), this.info = (t, n) => this.create({
      ...n,
      type: "info",
      message: t
    }), this.warning = (t, n) => this.create({
      ...n,
      type: "warning",
      message: t
    }), this.loading = (t, n) => this.create({
      ...n,
      type: "loading",
      message: t
    }), this.promise = (t, n) => {
      if (!n)
        return;
      let r;
      n.loading !== void 0 && (r = this.create({
        ...n,
        promise: t,
        type: "loading",
        message: n.loading,
        description: typeof n.description != "function" ? n.description : void 0
      }));
      const o = Promise.resolve(t instanceof Function ? t() : t);
      let s = r !== void 0, a;
      const l = o.then(async (u) => {
        if (a = [
          "resolve",
          u
        ], L.isValidElement(u))
          s = !1, this.create({
            id: r,
            type: "default",
            message: u
          });
        else if (kM(u) && !u.ok) {
          s = !1;
          const f = typeof n.error == "function" ? await n.error(`HTTP error! status: ${u.status}`) : n.error, h = typeof n.description == "function" ? await n.description(`HTTP error! status: ${u.status}`) : n.description, y = typeof f == "object" && !L.isValidElement(f) ? f : {
            message: f
          };
          this.create({
            id: r,
            type: "error",
            description: h,
            ...y
          });
        } else if (u instanceof Error) {
          s = !1;
          const f = typeof n.error == "function" ? await n.error(u) : n.error, h = typeof n.description == "function" ? await n.description(u) : n.description, y = typeof f == "object" && !L.isValidElement(f) ? f : {
            message: f
          };
          this.create({
            id: r,
            type: "error",
            description: h,
            ...y
          });
        } else if (n.success !== void 0) {
          s = !1;
          const f = typeof n.success == "function" ? await n.success(u) : n.success, h = typeof n.description == "function" ? await n.description(u) : n.description, y = typeof f == "object" && !L.isValidElement(f) ? f : {
            message: f
          };
          this.create({
            id: r,
            type: "success",
            description: h,
            ...y
          });
        }
      }).catch(async (u) => {
        if (a = [
          "reject",
          u
        ], n.error !== void 0) {
          s = !1;
          const d = typeof n.error == "function" ? await n.error(u) : n.error, f = typeof n.description == "function" ? await n.description(u) : n.description, g = typeof d == "object" && !L.isValidElement(d) ? d : {
            message: d
          };
          this.create({
            id: r,
            type: "error",
            description: f,
            ...g
          });
        }
      }).finally(() => {
        s && (this.dismiss(r), r = void 0), n.finally == null || n.finally.call(n);
      }), c = () => new Promise((u, d) => l.then(() => a[0] === "reject" ? d(a[1]) : u(a[1])).catch(d));
      return typeof r != "string" && typeof r != "number" ? {
        unwrap: c
      } : Object.assign(r, {
        unwrap: c
      });
    }, this.custom = (t, n) => {
      const r = (n == null ? void 0 : n.id) || Iu++;
      return this.create({
        jsx: t(r),
        id: r,
        ...n
      }), r;
    }, this.getActiveToasts = () => this.toasts.filter((t) => !this.dismissedToasts.has(t.id)), this.subscribers = [], this.toasts = [], this.dismissedToasts = /* @__PURE__ */ new Set();
  }
}
const dn = new $M(), PM = (e, t) => {
  const n = (t == null ? void 0 : t.id) || Iu++;
  return dn.addToast({
    title: e,
    ...t,
    id: n
  }), n;
}, kM = (e) => e && typeof e == "object" && "ok" in e && typeof e.ok == "boolean" && "status" in e && typeof e.status == "number", IM = PM, NM = () => dn.toasts, AM = () => dn.getActiveToasts(), Bc = Object.assign(IM, {
  success: dn.success,
  info: dn.info,
  warning: dn.warning,
  error: dn.error,
  custom: dn.custom,
  message: dn.message,
  promise: dn.promise,
  dismiss: dn.dismiss,
  loading: dn.loading
}, {
  getHistory: NM,
  getToasts: AM
});
bM("[data-sonner-toaster][dir=ltr],html[dir=ltr]{--toast-icon-margin-start:-3px;--toast-icon-margin-end:4px;--toast-svg-margin-start:-1px;--toast-svg-margin-end:0px;--toast-button-margin-start:auto;--toast-button-margin-end:0;--toast-close-button-start:0;--toast-close-button-end:unset;--toast-close-button-transform:translate(-35%, -35%)}[data-sonner-toaster][dir=rtl],html[dir=rtl]{--toast-icon-margin-start:4px;--toast-icon-margin-end:-3px;--toast-svg-margin-start:0px;--toast-svg-margin-end:-1px;--toast-button-margin-start:0;--toast-button-margin-end:auto;--toast-close-button-start:unset;--toast-close-button-end:0;--toast-close-button-transform:translate(35%, -35%)}[data-sonner-toaster]{position:fixed;width:var(--width);font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;--gray1:hsl(0, 0%, 99%);--gray2:hsl(0, 0%, 97.3%);--gray3:hsl(0, 0%, 95.1%);--gray4:hsl(0, 0%, 93%);--gray5:hsl(0, 0%, 90.9%);--gray6:hsl(0, 0%, 88.7%);--gray7:hsl(0, 0%, 85.8%);--gray8:hsl(0, 0%, 78%);--gray9:hsl(0, 0%, 56.1%);--gray10:hsl(0, 0%, 52.3%);--gray11:hsl(0, 0%, 43.5%);--gray12:hsl(0, 0%, 9%);--border-radius:8px;box-sizing:border-box;padding:0;margin:0;list-style:none;outline:0;z-index:999999999;transition:transform .4s ease}[data-sonner-toaster][data-lifted=true]{transform:translateY(-8px)}@media (hover:none) and (pointer:coarse){[data-sonner-toaster][data-lifted=true]{transform:none}}[data-sonner-toaster][data-x-position=right]{right:var(--offset-right)}[data-sonner-toaster][data-x-position=left]{left:var(--offset-left)}[data-sonner-toaster][data-x-position=center]{left:50%;transform:translateX(-50%)}[data-sonner-toaster][data-y-position=top]{top:var(--offset-top)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--offset-bottom)}[data-sonner-toast]{--y:translateY(100%);--lift-amount:calc(var(--lift) * var(--gap));z-index:var(--z-index);position:absolute;opacity:0;transform:var(--y);touch-action:none;transition:transform .4s,opacity .4s,height .4s,box-shadow .2s;box-sizing:border-box;outline:0;overflow-wrap:anywhere}[data-sonner-toast][data-styled=true]{padding:16px;background:var(--normal-bg);border:1px solid var(--normal-border);color:var(--normal-text);border-radius:var(--border-radius);box-shadow:0 4px 12px rgba(0,0,0,.1);width:var(--width);font-size:13px;display:flex;align-items:center;gap:6px}[data-sonner-toast]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-y-position=top]{top:0;--y:translateY(-100%);--lift:1;--lift-amount:calc(1 * var(--gap))}[data-sonner-toast][data-y-position=bottom]{bottom:0;--y:translateY(100%);--lift:-1;--lift-amount:calc(var(--lift) * var(--gap))}[data-sonner-toast][data-styled=true] [data-description]{font-weight:400;line-height:1.4;color:#3f3f3f}[data-rich-colors=true][data-sonner-toast][data-styled=true] [data-description]{color:inherit}[data-sonner-toaster][data-sonner-theme=dark] [data-description]{color:#e8e8e8}[data-sonner-toast][data-styled=true] [data-title]{font-weight:500;line-height:1.5;color:inherit}[data-sonner-toast][data-styled=true] [data-icon]{display:flex;height:16px;width:16px;position:relative;justify-content:flex-start;align-items:center;flex-shrink:0;margin-left:var(--toast-icon-margin-start);margin-right:var(--toast-icon-margin-end)}[data-sonner-toast][data-promise=true] [data-icon]>svg{opacity:0;transform:scale(.8);transform-origin:center;animation:sonner-fade-in .3s ease forwards}[data-sonner-toast][data-styled=true] [data-icon]>*{flex-shrink:0}[data-sonner-toast][data-styled=true] [data-icon] svg{margin-left:var(--toast-svg-margin-start);margin-right:var(--toast-svg-margin-end)}[data-sonner-toast][data-styled=true] [data-content]{display:flex;flex-direction:column;gap:2px}[data-sonner-toast][data-styled=true] [data-button]{border-radius:4px;padding-left:8px;padding-right:8px;height:24px;font-size:12px;color:var(--normal-bg);background:var(--normal-text);margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end);border:none;font-weight:500;cursor:pointer;outline:0;display:flex;align-items:center;flex-shrink:0;transition:opacity .4s,box-shadow .2s}[data-sonner-toast][data-styled=true] [data-button]:focus-visible{box-shadow:0 0 0 2px rgba(0,0,0,.4)}[data-sonner-toast][data-styled=true] [data-button]:first-of-type{margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end)}[data-sonner-toast][data-styled=true] [data-cancel]{color:var(--normal-text);background:rgba(0,0,0,.08)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-styled=true] [data-cancel]{background:rgba(255,255,255,.3)}[data-sonner-toast][data-styled=true] [data-close-button]{position:absolute;left:var(--toast-close-button-start);right:var(--toast-close-button-end);top:0;height:20px;width:20px;display:flex;justify-content:center;align-items:center;padding:0;color:var(--gray12);background:var(--normal-bg);border:1px solid var(--gray4);transform:var(--toast-close-button-transform);border-radius:50%;cursor:pointer;z-index:1;transition:opacity .1s,background .2s,border-color .2s}[data-sonner-toast][data-styled=true] [data-close-button]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-styled=true] [data-disabled=true]{cursor:not-allowed}[data-sonner-toast][data-styled=true]:hover [data-close-button]:hover{background:var(--gray2);border-color:var(--gray5)}[data-sonner-toast][data-swiping=true]::before{content:'';position:absolute;left:-100%;right:-100%;height:100%;z-index:-1}[data-sonner-toast][data-y-position=top][data-swiping=true]::before{bottom:50%;transform:scaleY(3) translateY(50%)}[data-sonner-toast][data-y-position=bottom][data-swiping=true]::before{top:50%;transform:scaleY(3) translateY(-50%)}[data-sonner-toast][data-swiping=false][data-removed=true]::before{content:'';position:absolute;inset:0;transform:scaleY(2)}[data-sonner-toast][data-expanded=true]::after{content:'';position:absolute;left:0;height:calc(var(--gap) + 1px);bottom:100%;width:100%}[data-sonner-toast][data-mounted=true]{--y:translateY(0);opacity:1}[data-sonner-toast][data-expanded=false][data-front=false]{--scale:var(--toasts-before) * 0.05 + 1;--y:translateY(calc(var(--lift-amount) * var(--toasts-before))) scale(calc(-1 * var(--scale)));height:var(--front-toast-height)}[data-sonner-toast]>*{transition:opacity .4s}[data-sonner-toast][data-x-position=right]{right:0}[data-sonner-toast][data-x-position=left]{left:0}[data-sonner-toast][data-expanded=false][data-front=false][data-styled=true]>*{opacity:0}[data-sonner-toast][data-visible=false]{opacity:0;pointer-events:none}[data-sonner-toast][data-mounted=true][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset)));height:var(--initial-height)}[data-sonner-toast][data-removed=true][data-front=true][data-swipe-out=false]{--y:translateY(calc(var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset) + var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=false]{--y:translateY(40%);opacity:0;transition:transform .5s,opacity .2s}[data-sonner-toast][data-removed=true][data-front=false]::before{height:calc(var(--initial-height) + 20%)}[data-sonner-toast][data-swiping=true]{transform:var(--y) translateY(var(--swipe-amount-y,0)) translateX(var(--swipe-amount-x,0));transition:none}[data-sonner-toast][data-swiped=true]{user-select:none}[data-sonner-toast][data-swipe-out=true][data-y-position=bottom],[data-sonner-toast][data-swipe-out=true][data-y-position=top]{animation-duration:.2s;animation-timing-function:ease-out;animation-fill-mode:forwards}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=left]{animation-name:swipe-out-left}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=right]{animation-name:swipe-out-right}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=up]{animation-name:swipe-out-up}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=down]{animation-name:swipe-out-down}@keyframes swipe-out-left{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) - 100%));opacity:0}}@keyframes swipe-out-right{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) + 100%));opacity:0}}@keyframes swipe-out-up{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) - 100%));opacity:0}}@keyframes swipe-out-down{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) + 100%));opacity:0}}@media (max-width:600px){[data-sonner-toaster]{position:fixed;right:var(--mobile-offset-right);left:var(--mobile-offset-left);width:100%}[data-sonner-toaster][dir=rtl]{left:calc(var(--mobile-offset-left) * -1)}[data-sonner-toaster] [data-sonner-toast]{left:0;right:0;width:calc(100% - var(--mobile-offset-left) * 2)}[data-sonner-toaster][data-x-position=left]{left:var(--mobile-offset-left)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--mobile-offset-bottom)}[data-sonner-toaster][data-y-position=top]{top:var(--mobile-offset-top)}[data-sonner-toaster][data-x-position=center]{left:var(--mobile-offset-left);right:var(--mobile-offset-right);transform:none}}[data-sonner-toaster][data-sonner-theme=light]{--normal-bg:#fff;--normal-border:var(--gray4);--normal-text:var(--gray12);--success-bg:hsl(143, 85%, 96%);--success-border:hsl(145, 92%, 87%);--success-text:hsl(140, 100%, 27%);--info-bg:hsl(208, 100%, 97%);--info-border:hsl(221, 91%, 93%);--info-text:hsl(210, 92%, 45%);--warning-bg:hsl(49, 100%, 97%);--warning-border:hsl(49, 91%, 84%);--warning-text:hsl(31, 92%, 45%);--error-bg:hsl(359, 100%, 97%);--error-border:hsl(359, 100%, 94%);--error-text:hsl(360, 100%, 45%)}[data-sonner-toaster][data-sonner-theme=light] [data-sonner-toast][data-invert=true]{--normal-bg:#000;--normal-border:hsl(0, 0%, 20%);--normal-text:var(--gray1)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-invert=true]{--normal-bg:#fff;--normal-border:var(--gray3);--normal-text:var(--gray12)}[data-sonner-toaster][data-sonner-theme=dark]{--normal-bg:#000;--normal-bg-hover:hsl(0, 0%, 12%);--normal-border:hsl(0, 0%, 20%);--normal-border-hover:hsl(0, 0%, 25%);--normal-text:var(--gray1);--success-bg:hsl(150, 100%, 6%);--success-border:hsl(147, 100%, 12%);--success-text:hsl(150, 86%, 65%);--info-bg:hsl(215, 100%, 6%);--info-border:hsl(223, 43%, 17%);--info-text:hsl(216, 87%, 65%);--warning-bg:hsl(64, 100%, 6%);--warning-border:hsl(60, 100%, 9%);--warning-text:hsl(46, 87%, 65%);--error-bg:hsl(358, 76%, 10%);--error-border:hsl(357, 89%, 16%);--error-text:hsl(358, 100%, 81%)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]{background:var(--normal-bg);border-color:var(--normal-border);color:var(--normal-text)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]:hover{background:var(--normal-bg-hover);border-color:var(--normal-border-hover)}[data-rich-colors=true][data-sonner-toast][data-type=success]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=success] [data-close-button]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=info]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=info] [data-close-button]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning] [data-close-button]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=error]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}[data-rich-colors=true][data-sonner-toast][data-type=error] [data-close-button]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}.sonner-loading-wrapper{--size:16px;height:var(--size);width:var(--size);position:absolute;inset:0;z-index:10}.sonner-loading-wrapper[data-visible=false]{transform-origin:center;animation:sonner-fade-out .2s ease forwards}.sonner-spinner{position:relative;top:50%;left:50%;height:var(--size);width:var(--size)}.sonner-loading-bar{animation:sonner-spin 1.2s linear infinite;background:var(--gray11);border-radius:6px;height:8%;left:-10%;position:absolute;top:-3.9%;width:24%}.sonner-loading-bar:first-child{animation-delay:-1.2s;transform:rotate(.0001deg) translate(146%)}.sonner-loading-bar:nth-child(2){animation-delay:-1.1s;transform:rotate(30deg) translate(146%)}.sonner-loading-bar:nth-child(3){animation-delay:-1s;transform:rotate(60deg) translate(146%)}.sonner-loading-bar:nth-child(4){animation-delay:-.9s;transform:rotate(90deg) translate(146%)}.sonner-loading-bar:nth-child(5){animation-delay:-.8s;transform:rotate(120deg) translate(146%)}.sonner-loading-bar:nth-child(6){animation-delay:-.7s;transform:rotate(150deg) translate(146%)}.sonner-loading-bar:nth-child(7){animation-delay:-.6s;transform:rotate(180deg) translate(146%)}.sonner-loading-bar:nth-child(8){animation-delay:-.5s;transform:rotate(210deg) translate(146%)}.sonner-loading-bar:nth-child(9){animation-delay:-.4s;transform:rotate(240deg) translate(146%)}.sonner-loading-bar:nth-child(10){animation-delay:-.3s;transform:rotate(270deg) translate(146%)}.sonner-loading-bar:nth-child(11){animation-delay:-.2s;transform:rotate(300deg) translate(146%)}.sonner-loading-bar:nth-child(12){animation-delay:-.1s;transform:rotate(330deg) translate(146%)}@keyframes sonner-fade-in{0%{opacity:0;transform:scale(.8)}100%{opacity:1;transform:scale(1)}}@keyframes sonner-fade-out{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(.8)}}@keyframes sonner-spin{0%{opacity:1}100%{opacity:.15}}@media (prefers-reduced-motion){.sonner-loading-bar,[data-sonner-toast],[data-sonner-toast]>*{transition:none!important;animation:none!important}}.sonner-loader{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);transform-origin:center;transition:opacity .2s,transform .2s}.sonner-loader[data-visible=false]{opacity:0;transform:scale(.8) translate(-50%,-50%)}");
function Js(e) {
  return e.label !== void 0;
}
const MM = 3, _M = "24px", DM = "16px", dh = 4e3, BM = 356, FM = 14, jM = 45, LM = 200;
function er(...e) {
  return e.filter(Boolean).join(" ");
}
function VM(e) {
  const [t, n] = e.split("-"), r = [];
  return t && r.push(t), n && r.push(n), r;
}
const zM = (e) => {
  var t, n, r, o, s, a, l, c, u;
  const { invert: d, toast: f, unstyled: h, interacting: g, setHeights: y, visibleToasts: m, heights: b, index: x, toasts: E, expanded: w, removeToast: T, defaultRichColors: v, closeButton: S, style: R, cancelButtonStyle: $, actionButtonStyle: I, className: p = "", descriptionClassName: O = "", duration: P, position: A, gap: D, expandByDefault: _, classNames: M, icons: V, closeButtonAriaLabel: Y = "Close toast" } = e, [U, j] = L.useState(null), [W, ee] = L.useState(null), [K, oe] = L.useState(!1), [ne, se] = L.useState(!1), [de, X] = L.useState(!1), [ae, Q] = L.useState(!1), [ie, F] = L.useState(!1), [he, fe] = L.useState(0), [Se, Le] = L.useState(0), Ae = L.useRef(f.duration || P || dh), Ie = L.useRef(null), Re = L.useRef(null), Be = x === 0, Oe = x + 1 <= m, N = f.type, q = f.dismissible !== !1, J = f.className || "", H = f.descriptionClassName || "", B = L.useMemo(() => b.findIndex((De) => De.toastId === f.id) || 0, [
    b,
    f.id
  ]), z = L.useMemo(() => {
    var De;
    return (De = f.closeButton) != null ? De : S;
  }, [
    f.closeButton,
    S
  ]), G = L.useMemo(() => f.duration || P || dh, [
    f.duration,
    P
  ]), pe = L.useRef(0), me = L.useRef(0), re = L.useRef(0), Z = L.useRef(null), [te, ye] = A.split("-"), Te = L.useMemo(() => b.reduce((De, ot, St) => St >= B ? De : De + ot.height, 0), [
    b,
    B
  ]), le = RM(), we = f.invert || d, Me = N === "loading";
  me.current = L.useMemo(() => B * D + Te, [
    B,
    Te
  ]), L.useEffect(() => {
    Ae.current = G;
  }, [
    G
  ]), L.useEffect(() => {
    oe(!0);
  }, []), L.useEffect(() => {
    const De = Re.current;
    if (De) {
      const ot = De.getBoundingClientRect().height;
      return Le(ot), y((St) => [
        {
          toastId: f.id,
          height: ot,
          position: f.position
        },
        ...St
      ]), () => y((St) => St.filter(($e) => $e.toastId !== f.id));
    }
  }, [
    y,
    f.id
  ]), L.useLayoutEffect(() => {
    if (!K) return;
    const De = Re.current, ot = De.style.height;
    De.style.height = "auto";
    const St = De.getBoundingClientRect().height;
    De.style.height = ot, Le(St), y(($e) => $e.find((Dt) => Dt.toastId === f.id) ? $e.map((Dt) => Dt.toastId === f.id ? {
      ...Dt,
      height: St
    } : Dt) : [
      {
        toastId: f.id,
        height: St,
        position: f.position
      },
      ...$e
    ]);
  }, [
    K,
    f.title,
    f.description,
    y,
    f.id
  ]);
  const ze = L.useCallback(() => {
    se(!0), fe(me.current), y((De) => De.filter((ot) => ot.toastId !== f.id)), setTimeout(() => {
      T(f);
    }, LM);
  }, [
    f,
    T,
    y,
    me
  ]);
  L.useEffect(() => {
    if (f.promise && N === "loading" || f.duration === 1 / 0 || f.type === "loading") return;
    let De;
    return w || g || le ? (() => {
      if (re.current < pe.current) {
        const $e = (/* @__PURE__ */ new Date()).getTime() - pe.current;
        Ae.current = Ae.current - $e;
      }
      re.current = (/* @__PURE__ */ new Date()).getTime();
    })() : (() => {
      Ae.current !== 1 / 0 && (pe.current = (/* @__PURE__ */ new Date()).getTime(), De = setTimeout(() => {
        f.onAutoClose == null || f.onAutoClose.call(f, f), ze();
      }, Ae.current));
    })(), () => clearTimeout(De);
  }, [
    w,
    g,
    f,
    N,
    le,
    ze
  ]), L.useEffect(() => {
    f.delete && ze();
  }, [
    ze,
    f.delete
  ]);
  function Ye() {
    var De;
    if (V != null && V.loading) {
      var ot;
      return /* @__PURE__ */ L.createElement("div", {
        className: er(M == null ? void 0 : M.loader, f == null || (ot = f.classNames) == null ? void 0 : ot.loader, "sonner-loader"),
        "data-visible": N === "loading"
      }, V.loading);
    }
    return /* @__PURE__ */ L.createElement(wM, {
      className: er(M == null ? void 0 : M.loader, f == null || (De = f.classNames) == null ? void 0 : De.loader),
      visible: N === "loading"
    });
  }
  const It = f.icon || (V == null ? void 0 : V[N]) || vM(N);
  var pt, Nt;
  return /* @__PURE__ */ L.createElement("li", {
    tabIndex: 0,
    ref: Re,
    className: er(p, J, M == null ? void 0 : M.toast, f == null || (t = f.classNames) == null ? void 0 : t.toast, M == null ? void 0 : M.default, M == null ? void 0 : M[N], f == null || (n = f.classNames) == null ? void 0 : n[N]),
    "data-sonner-toast": "",
    "data-rich-colors": (pt = f.richColors) != null ? pt : v,
    "data-styled": !(f.jsx || f.unstyled || h),
    "data-mounted": K,
    "data-promise": !!f.promise,
    "data-swiped": ie,
    "data-removed": ne,
    "data-visible": Oe,
    "data-y-position": te,
    "data-x-position": ye,
    "data-index": x,
    "data-front": Be,
    "data-swiping": de,
    "data-dismissible": q,
    "data-type": N,
    "data-invert": we,
    "data-swipe-out": ae,
    "data-swipe-direction": W,
    "data-expanded": !!(w || _ && K),
    style: {
      "--index": x,
      "--toasts-before": x,
      "--z-index": E.length - x,
      "--offset": `${ne ? he : me.current}px`,
      "--initial-height": _ ? "auto" : `${Se}px`,
      ...R,
      ...f.style
    },
    onDragEnd: () => {
      X(!1), j(null), Z.current = null;
    },
    onPointerDown: (De) => {
      Me || !q || (Ie.current = /* @__PURE__ */ new Date(), fe(me.current), De.target.setPointerCapture(De.pointerId), De.target.tagName !== "BUTTON" && (X(!0), Z.current = {
        x: De.clientX,
        y: De.clientY
      }));
    },
    onPointerUp: () => {
      var De, ot, St;
      if (ae || !q) return;
      Z.current = null;
      const $e = Number(((De = Re.current) == null ? void 0 : De.style.getPropertyValue("--swipe-amount-x").replace("px", "")) || 0), Lt = Number(((ot = Re.current) == null ? void 0 : ot.style.getPropertyValue("--swipe-amount-y").replace("px", "")) || 0), Dt = (/* @__PURE__ */ new Date()).getTime() - ((St = Ie.current) == null ? void 0 : St.getTime()), Pn = U === "x" ? $e : Lt, ks = Math.abs(Pn) / Dt;
      if (Math.abs(Pn) >= jM || ks > 0.11) {
        fe(me.current), f.onDismiss == null || f.onDismiss.call(f, f), ee(U === "x" ? $e > 0 ? "right" : "left" : Lt > 0 ? "down" : "up"), ze(), Q(!0);
        return;
      } else {
        var Wn, Un;
        (Wn = Re.current) == null || Wn.style.setProperty("--swipe-amount-x", "0px"), (Un = Re.current) == null || Un.style.setProperty("--swipe-amount-y", "0px");
      }
      F(!1), X(!1), j(null);
    },
    onPointerMove: (De) => {
      var ot, St, $e;
      if (!Z.current || !q || ((ot = window.getSelection()) == null ? void 0 : ot.toString().length) > 0) return;
      const Dt = De.clientY - Z.current.y, Pn = De.clientX - Z.current.x;
      var ks;
      const Wn = (ks = e.swipeDirections) != null ? ks : VM(A);
      !U && (Math.abs(Pn) > 1 || Math.abs(Dt) > 1) && j(Math.abs(Pn) > Math.abs(Dt) ? "x" : "y");
      let Un = {
        x: 0,
        y: 0
      };
      const lf = (to) => 1 / (1.5 + Math.abs(to) / 20);
      if (U === "y") {
        if (Wn.includes("top") || Wn.includes("bottom"))
          if (Wn.includes("top") && Dt < 0 || Wn.includes("bottom") && Dt > 0)
            Un.y = Dt;
          else {
            const to = Dt * lf(Dt);
            Un.y = Math.abs(to) < Math.abs(Dt) ? to : Dt;
          }
      } else if (U === "x" && (Wn.includes("left") || Wn.includes("right")))
        if (Wn.includes("left") && Pn < 0 || Wn.includes("right") && Pn > 0)
          Un.x = Pn;
        else {
          const to = Pn * lf(Pn);
          Un.x = Math.abs(to) < Math.abs(Pn) ? to : Pn;
        }
      (Math.abs(Un.x) > 0 || Math.abs(Un.y) > 0) && F(!0), (St = Re.current) == null || St.style.setProperty("--swipe-amount-x", `${Un.x}px`), ($e = Re.current) == null || $e.style.setProperty("--swipe-amount-y", `${Un.y}px`);
    }
  }, z && !f.jsx && N !== "loading" ? /* @__PURE__ */ L.createElement("button", {
    "aria-label": Y,
    "data-disabled": Me,
    "data-close-button": !0,
    onClick: Me || !q ? () => {
    } : () => {
      ze(), f.onDismiss == null || f.onDismiss.call(f, f);
    },
    className: er(M == null ? void 0 : M.closeButton, f == null || (r = f.classNames) == null ? void 0 : r.closeButton)
  }, (Nt = V == null ? void 0 : V.close) != null ? Nt : OM) : null, (N || f.icon || f.promise) && f.icon !== null && ((V == null ? void 0 : V[N]) !== null || f.icon) ? /* @__PURE__ */ L.createElement("div", {
    "data-icon": "",
    className: er(M == null ? void 0 : M.icon, f == null || (o = f.classNames) == null ? void 0 : o.icon)
  }, f.promise || f.type === "loading" && !f.icon ? f.icon || Ye() : null, f.type !== "loading" ? It : null) : null, /* @__PURE__ */ L.createElement("div", {
    "data-content": "",
    className: er(M == null ? void 0 : M.content, f == null || (s = f.classNames) == null ? void 0 : s.content)
  }, /* @__PURE__ */ L.createElement("div", {
    "data-title": "",
    className: er(M == null ? void 0 : M.title, f == null || (a = f.classNames) == null ? void 0 : a.title)
  }, f.jsx ? f.jsx : typeof f.title == "function" ? f.title() : f.title), f.description ? /* @__PURE__ */ L.createElement("div", {
    "data-description": "",
    className: er(O, H, M == null ? void 0 : M.description, f == null || (l = f.classNames) == null ? void 0 : l.description)
  }, typeof f.description == "function" ? f.description() : f.description) : null), /* @__PURE__ */ L.isValidElement(f.cancel) ? f.cancel : f.cancel && Js(f.cancel) ? /* @__PURE__ */ L.createElement("button", {
    "data-button": !0,
    "data-cancel": !0,
    style: f.cancelButtonStyle || $,
    onClick: (De) => {
      Js(f.cancel) && q && (f.cancel.onClick == null || f.cancel.onClick.call(f.cancel, De), ze());
    },
    className: er(M == null ? void 0 : M.cancelButton, f == null || (c = f.classNames) == null ? void 0 : c.cancelButton)
  }, f.cancel.label) : null, /* @__PURE__ */ L.isValidElement(f.action) ? f.action : f.action && Js(f.action) ? /* @__PURE__ */ L.createElement("button", {
    "data-button": !0,
    "data-action": !0,
    style: f.actionButtonStyle || I,
    onClick: (De) => {
      Js(f.action) && (f.action.onClick == null || f.action.onClick.call(f.action, De), !De.defaultPrevented && ze());
    },
    className: er(M == null ? void 0 : M.actionButton, f == null || (u = f.classNames) == null ? void 0 : u.actionButton)
  }, f.action.label) : null);
};
function fh() {
  if (typeof window > "u" || typeof document > "u") return "ltr";
  const e = document.documentElement.getAttribute("dir");
  return e === "auto" || !e ? window.getComputedStyle(document.documentElement).direction : e;
}
function WM(e, t) {
  const n = {};
  return [
    e,
    t
  ].forEach((r, o) => {
    const s = o === 1, a = s ? "--mobile-offset" : "--offset", l = s ? DM : _M;
    function c(u) {
      [
        "top",
        "right",
        "bottom",
        "left"
      ].forEach((d) => {
        n[`${a}-${d}`] = typeof u == "number" ? `${u}px` : u;
      });
    }
    typeof r == "number" || typeof r == "string" ? c(r) : typeof r == "object" ? [
      "top",
      "right",
      "bottom",
      "left"
    ].forEach((u) => {
      r[u] === void 0 ? n[`${a}-${u}`] = l : n[`${a}-${u}`] = typeof r[u] == "number" ? `${r[u]}px` : r[u];
    }) : c(l);
  }), n;
}
const UM = /* @__PURE__ */ L.forwardRef(function(t, n) {
  const { invert: r, position: o = "bottom-right", hotkey: s = [
    "altKey",
    "KeyT"
  ], expand: a, closeButton: l, className: c, offset: u, mobileOffset: d, theme: f = "light", richColors: h, duration: g, style: y, visibleToasts: m = MM, toastOptions: b, dir: x = fh(), gap: E = FM, icons: w, containerAriaLabel: T = "Notifications" } = t, [v, S] = L.useState([]), R = L.useMemo(() => Array.from(new Set([
    o
  ].concat(v.filter((W) => W.position).map((W) => W.position)))), [
    v,
    o
  ]), [$, I] = L.useState([]), [p, O] = L.useState(!1), [P, A] = L.useState(!1), [D, _] = L.useState(f !== "system" ? f : typeof window < "u" && window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light"), M = L.useRef(null), V = s.join("+").replace(/Key/g, "").replace(/Digit/g, ""), Y = L.useRef(null), U = L.useRef(!1), j = L.useCallback((W) => {
    S((ee) => {
      var K;
      return (K = ee.find((oe) => oe.id === W.id)) != null && K.delete || dn.dismiss(W.id), ee.filter(({ id: oe }) => oe !== W.id);
    });
  }, []);
  return L.useEffect(() => dn.subscribe((W) => {
    if (W.dismiss) {
      requestAnimationFrame(() => {
        S((ee) => ee.map((K) => K.id === W.id ? {
          ...K,
          delete: !0
        } : K));
      });
      return;
    }
    setTimeout(() => {
      Do.flushSync(() => {
        S((ee) => {
          const K = ee.findIndex((oe) => oe.id === W.id);
          return K !== -1 ? [
            ...ee.slice(0, K),
            {
              ...ee[K],
              ...W
            },
            ...ee.slice(K + 1)
          ] : [
            W,
            ...ee
          ];
        });
      });
    });
  }), [
    v
  ]), L.useEffect(() => {
    if (f !== "system") {
      _(f);
      return;
    }
    if (f === "system" && (window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? _("dark") : _("light")), typeof window > "u") return;
    const W = window.matchMedia("(prefers-color-scheme: dark)");
    try {
      W.addEventListener("change", ({ matches: ee }) => {
        _(ee ? "dark" : "light");
      });
    } catch {
      W.addListener(({ matches: K }) => {
        try {
          _(K ? "dark" : "light");
        } catch (oe) {
          console.error(oe);
        }
      });
    }
  }, [
    f
  ]), L.useEffect(() => {
    v.length <= 1 && O(!1);
  }, [
    v
  ]), L.useEffect(() => {
    const W = (ee) => {
      var K;
      if (s.every((se) => ee[se] || ee.code === se)) {
        var ne;
        O(!0), (ne = M.current) == null || ne.focus();
      }
      ee.code === "Escape" && (document.activeElement === M.current || (K = M.current) != null && K.contains(document.activeElement)) && O(!1);
    };
    return document.addEventListener("keydown", W), () => document.removeEventListener("keydown", W);
  }, [
    s
  ]), L.useEffect(() => {
    if (M.current)
      return () => {
        Y.current && (Y.current.focus({
          preventScroll: !0
        }), Y.current = null, U.current = !1);
      };
  }, [
    M.current
  ]), // Remove item from normal navigation flow, only available via hotkey
  /* @__PURE__ */ L.createElement("section", {
    ref: n,
    "aria-label": `${T} ${V}`,
    tabIndex: -1,
    "aria-live": "polite",
    "aria-relevant": "additions text",
    "aria-atomic": "false",
    suppressHydrationWarning: !0
  }, R.map((W, ee) => {
    var K;
    const [oe, ne] = W.split("-");
    return v.length ? /* @__PURE__ */ L.createElement("ol", {
      key: W,
      dir: x === "auto" ? fh() : x,
      tabIndex: -1,
      ref: M,
      className: c,
      "data-sonner-toaster": !0,
      "data-sonner-theme": D,
      "data-y-position": oe,
      "data-lifted": p && v.length > 1 && !a,
      "data-x-position": ne,
      style: {
        "--front-toast-height": `${((K = $[0]) == null ? void 0 : K.height) || 0}px`,
        "--width": `${BM}px`,
        "--gap": `${E}px`,
        ...y,
        ...WM(u, d)
      },
      onBlur: (se) => {
        U.current && !se.currentTarget.contains(se.relatedTarget) && (U.current = !1, Y.current && (Y.current.focus({
          preventScroll: !0
        }), Y.current = null));
      },
      onFocus: (se) => {
        se.target instanceof HTMLElement && se.target.dataset.dismissible === "false" || U.current || (U.current = !0, Y.current = se.relatedTarget);
      },
      onMouseEnter: () => O(!0),
      onMouseMove: () => O(!0),
      onMouseLeave: () => {
        P || O(!1);
      },
      onDragEnd: () => O(!1),
      onPointerDown: (se) => {
        se.target instanceof HTMLElement && se.target.dataset.dismissible === "false" || A(!0);
      },
      onPointerUp: () => A(!1)
    }, v.filter((se) => !se.position && ee === 0 || se.position === W).map((se, de) => {
      var X, ae;
      return /* @__PURE__ */ L.createElement(zM, {
        key: se.id,
        icons: w,
        index: de,
        toast: se,
        defaultRichColors: h,
        duration: (X = b == null ? void 0 : b.duration) != null ? X : g,
        className: b == null ? void 0 : b.className,
        descriptionClassName: b == null ? void 0 : b.descriptionClassName,
        invert: r,
        visibleToasts: m,
        closeButton: (ae = b == null ? void 0 : b.closeButton) != null ? ae : l,
        interacting: P,
        position: W,
        style: b == null ? void 0 : b.style,
        unstyled: b == null ? void 0 : b.unstyled,
        classNames: b == null ? void 0 : b.classNames,
        cancelButtonStyle: b == null ? void 0 : b.cancelButtonStyle,
        actionButtonStyle: b == null ? void 0 : b.actionButtonStyle,
        closeButtonAriaLabel: b == null ? void 0 : b.closeButtonAriaLabel,
        removeToast: j,
        toasts: v.filter((Q) => Q.position == se.position),
        heights: $.filter((Q) => Q.position == se.position),
        setHeights: I,
        expandByDefault: a,
        gap: E,
        expanded: p,
        swipeDirections: t.swipeDirections
      });
    })) : null;
  }));
}), HM = _e(({ position: e = "bottom-right" }) => {
  const { isDarkMode: t } = sf();
  return /* @__PURE__ */ k(
    UM,
    {
      closeButton: !1,
      invert: t,
      visibleToasts: 3,
      position: e,
      gap: 6
    }
  );
});
HM.displayName = "Button";
function qM() {
  return tn(({ type: t, title: n, description: r }) => {
    const o = {
      description: r,
      icon: /* @__PURE__ */ k(pr, { icon: YM(t), color: GM(t) }),
      cancel: {
        label: /* @__PURE__ */ k(pr, { icon: "solar:close-circle-outline" }),
        onClick: () => {
        }
      },
      cancelButtonStyle: { background: "transparent" }
    };
    return t === "success" ? Bc.success(n, o) : t === "error" ? Bc.error(n, o) : Bc.info(n, o);
  }, []);
}
function YM(e) {
  switch (e) {
    case "success":
      return "solar:check-circle-bold";
    case "error":
      return "solar:danger-triangle-bold";
    case "info":
    default:
      return "solar:danger-circle-bold";
  }
}
function GM(e) {
  switch (e) {
    case "success":
      return "success";
    case "error":
      return "error";
    case "info":
      return "auto";
    default:
      return "disabled";
  }
}
const KM = _e(() => {
  const { isFullScreen: e, toggleFullScreen: t } = FA();
  return /* @__PURE__ */ k(
    Yn,
    {
      isCircle: !0,
      isGhost: !0,
      color: "auto",
      icon: e ? "solar:quit-full-screen-square-line-duotone" : "solar:full-screen-square-line-duotone",
      iconWidth: 28,
      onClick: t
    }
  );
});
KM.displayName = "AdminFullScreen";
const XM = _e(({ children: e, sx: t }) => /* @__PURE__ */ k(
  Go,
  {
    isOutlined: !0,
    sx: {
      width: "100%",
      position: "sticky",
      top: 0,
      left: 0,
      right: 0,
      ...t
    },
    children: /* @__PURE__ */ k(
      Kt,
      {
        className: "VenomousUI-AdminHeader",
        row: !0,
        component: "header",
        sx: {
          width: "100%",
          height: 50,
          alignItems: "center",
          justifyContent: "space-between"
        },
        children: e
      }
    )
  }
));
XM.displayName = "AdminHeader";
const QM = _e(
  ({
    children: e,
    width: t = 300,
    title: n = "Settings",
    labelOfThemeMode: r = "ThemeMode",
    labelOfThemePalettes: o = "ThemePalettes"
  }) => {
    const { isOpen: s, openDrawer: a, closeDrawer: l } = AR();
    return /* @__PURE__ */ Pe(ph, { children: [
      /* @__PURE__ */ k(
        Yn,
        {
          isCircle: !0,
          isGhost: !0,
          icon: "solar:settings-line-duotone",
          iconWidth: 28,
          onClick: a,
          color: "auto"
        }
      ),
      /* @__PURE__ */ Pe(Ly, { width: t, position: "right", isOpen: s, closeDrawer: l, children: [
        /* @__PURE__ */ k(Vy, { title: n, closeDrawer: l }),
        /* @__PURE__ */ k(yn, { text: r, isLabel: !0 }),
        /* @__PURE__ */ k(JM, {}),
        /* @__PURE__ */ k("br", {}),
        /* @__PURE__ */ k(yn, { text: o, isLabel: !0 }),
        /* @__PURE__ */ k(ZM, {}),
        /* @__PURE__ */ k("br", {}),
        e
      ] })
    ] });
  }
);
QM.displayName = "AdminSettingsDrawer";
function JM() {
  const { isDarkMode: e, toggleThemeMode: t } = sf();
  return /* @__PURE__ */ Pe(
    hl,
    {
      isOutlined: !0,
      clickable: !0,
      onClick: t,
      sx: {
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between",
        height: "60px"
      },
      children: [
        /* @__PURE__ */ k(
          pr,
          {
            icon: e ? "solar:moon-bold-duotone" : "solar:sun-2-bold-duotone",
            width: 24,
            color: "primary"
          }
        ),
        /* @__PURE__ */ k(Zd, { value: e, onChange: () => {
        } })
      ]
    }
  );
}
function ZM() {
  const { allPaletteNames: e, themePaletteName: t, setThemePaletteName: n } = Nv();
  return /* @__PURE__ */ k(
    VA,
    {
      cols: { xs: 3, sm: 3, md: 3, lg: 3, xl: 3 },
      height: 68 * Math.ceil(e.length / 3),
      items: e.map((r) => r),
      renderGridItem: (r) => /* @__PURE__ */ k(
        hl,
        {
          isOutlined: !0,
          clickable: !0,
          disabled: r === t,
          onClick: () => n(r),
          sx: {
            width: "100%",
            height: "60px",
            m: "4px",
            p: "8px",
            border: 0,
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            backgroundColor: r === t ? Wa(r).opacity : "transparent"
          },
          children: /* @__PURE__ */ k(
            pr,
            {
              icon: "solar:siderbar-bold-duotone",
              width: 32,
              sx: {
                color: Wa(r).main
              }
            }
          )
        }
      )
    }
  );
}
const e2 = _e(
  ({ menuHeaderHeight: e = 50, menuWidth: t = 220, menuItems: n, currentPath: r, menuHeaderElement: o, sx: s }) => {
    const { checkIsParentItemActive: a, checkIsSubItemActive: l } = GO({
      currentPath: r
    });
    return /* @__PURE__ */ Pe(
      Go,
      {
        className: "VenomousUI-AdminSideNavMenu",
        isOutlined: !0,
        sx: { width: t, height: "100svh", ...s },
        children: [
          /* @__PURE__ */ k(Kt, { row: !0, gap: 0, height: e, px: "8px", mb: "8px", children: o }),
          /* @__PURE__ */ k(
            $a,
            {
              width: "100%",
              height: `calc(100svh - ${e}px - 16px)`,
              items: n,
              renderItem: (c) => c.subItems ? /* @__PURE__ */ k(
                Bv,
                {
                  id: c.label,
                  position: "right",
                  sx: { width: "100%" },
                  contentSx: { p: "8px" },
                  renderPopperHandler: ({ isOpen: u, openPopper: d }) => /* @__PURE__ */ k(
                    Ui,
                    {
                      label: c.label,
                      isActive: a(c),
                      icon: c.icon,
                      clickable: !0,
                      onClick: d,
                      onMouseEnter: d,
                      sx: { backgroundColor: u ? "divider" : "transparent" }
                    }
                  ),
                  children: /* @__PURE__ */ k(
                    $a,
                    {
                      items: c.subItems,
                      renderItem: (u) => /* @__PURE__ */ k(
                        Ui,
                        {
                          label: u.label,
                          isActive: l(u),
                          icon: u.icon,
                          clickable: !0,
                          onClick: u.onClick
                        },
                        u.label
                      )
                    }
                  )
                }
              ) : /* @__PURE__ */ k(
                Ui,
                {
                  label: c.label,
                  isActive: a(c),
                  icon: c.icon,
                  clickable: !0,
                  onClick: c.onClick
                },
                c.label
              )
            }
          )
        ]
      }
    );
  }
);
e2.displayName = "AdminSideNavMenu";
export {
  KM as AdminFullScreen,
  XM as AdminHeader,
  QM as AdminSettingsDrawer,
  e2 as AdminSideNavMenu,
  HE as Avatar,
  qE as Blank,
  Yn as Button,
  hl as Card,
  Wy as Checkbox,
  vA as CheckboxUncontrolled,
  aM as ConfirmModal,
  SR as Container,
  xg as DotBadge,
  Ly as Drawer,
  Vy as DrawerHeader,
  xC as ExhibitCard,
  TR as ExhibitCardActionButton,
  Kt as Flex,
  u2 as FormUncontrolled,
  xA as FormUncontrolledAction,
  VA as Grid,
  pr as Icon,
  Yg as IconBadge,
  Cl as Input,
  wA as InputUncontrolled,
  ni as Label,
  El as Labels,
  UA as LazyImage,
  eM as Loading,
  $a as Menu,
  Ui as MenuItem,
  Dv as Modal,
  Zy as Number,
  UE as NumberTextBadge,
  TA as NumberUncontrolled,
  iv as OtpInput,
  SA as OtpInputUncontrolled,
  Go as Paper,
  sv as Password,
  EA as PasswordUncontrolled,
  Ay as Popover,
  Bv as Popper,
  cv as Radios,
  OA as RadiosUncontrolled,
  Zd as Switch,
  RA as SwitchUncontrolled,
  yn as Text,
  kv as ThemePaletteName,
  yM as ThemeProvider,
  HM as Toast,
  ml as Tooltip,
  pA as createFormControl,
  d2 as createZodSchema,
  GO as useCheckNavMenuActive,
  tA as useController,
  AR as useDrawer,
  a2 as useFieldArray,
  l2 as useForm,
  zn as useFormContext,
  ZN as useFormState,
  FA as useFullScreen,
  f2 as useModal,
  fi as usePaper,
  pl as useText,
  BA as useThemeBreakpoint,
  sf as useThemeMode,
  Nv as useThemePalette,
  qM as useToast,
  eA as useWatch,
  c2 as zodResolver
};
