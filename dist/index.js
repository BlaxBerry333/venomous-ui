var JT = Object.defineProperty;
var eC = (e, t, n) => t in e ? JT(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;
var po = (e, t, n) => eC(e, typeof t != "symbol" ? t + "" : t, n);
import { jsx as N, jsxs as we, Fragment as rr } from "react/jsx-runtime";
import * as M from "react";
import Y, { forwardRef as Aa, useContext as Ro, useMemo as Ye, memo as ve, useState as Jt, useEffect as Xe, createElement as Go, isValidElement as Wl, cloneElement as Ul, Children as tC, Fragment as nC, useCallback as $e, useId as G0, useRef as Ue, createContext as Da, useLayoutEffect as X0, Suspense as rC, lazy as Np } from "react";
import * as Z0 from "react-dom";
import ki, { createPortal as oC } from "react-dom";
function Q0(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var dl = { exports: {} }, fl = { exports: {} }, st = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var $m;
function iC() {
  if ($m) return st;
  $m = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, i = e ? Symbol.for("react.profiler") : 60114, s = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, f = e ? Symbol.for("react.forward_ref") : 60112, d = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, h = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, y = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
  function v(S) {
    if (typeof S == "object" && S !== null) {
      var T = S.$$typeof;
      switch (T) {
        case t:
          switch (S = S.type, S) {
            case c:
            case u:
            case r:
            case i:
            case o:
            case d:
              return S;
            default:
              switch (S = S && S.$$typeof, S) {
                case l:
                case f:
                case g:
                case h:
                case s:
                  return S;
                default:
                  return T;
              }
          }
        case n:
          return T;
      }
    }
  }
  function w(S) {
    return v(S) === u;
  }
  return st.AsyncMode = c, st.ConcurrentMode = u, st.ContextConsumer = l, st.ContextProvider = s, st.Element = t, st.ForwardRef = f, st.Fragment = r, st.Lazy = g, st.Memo = h, st.Portal = n, st.Profiler = i, st.StrictMode = o, st.Suspense = d, st.isAsyncMode = function(S) {
    return w(S) || v(S) === c;
  }, st.isConcurrentMode = w, st.isContextConsumer = function(S) {
    return v(S) === l;
  }, st.isContextProvider = function(S) {
    return v(S) === s;
  }, st.isElement = function(S) {
    return typeof S == "object" && S !== null && S.$$typeof === t;
  }, st.isForwardRef = function(S) {
    return v(S) === f;
  }, st.isFragment = function(S) {
    return v(S) === r;
  }, st.isLazy = function(S) {
    return v(S) === g;
  }, st.isMemo = function(S) {
    return v(S) === h;
  }, st.isPortal = function(S) {
    return v(S) === n;
  }, st.isProfiler = function(S) {
    return v(S) === i;
  }, st.isStrictMode = function(S) {
    return v(S) === o;
  }, st.isSuspense = function(S) {
    return v(S) === d;
  }, st.isValidElementType = function(S) {
    return typeof S == "string" || typeof S == "function" || S === r || S === u || S === i || S === o || S === d || S === p || typeof S == "object" && S !== null && (S.$$typeof === g || S.$$typeof === h || S.$$typeof === s || S.$$typeof === l || S.$$typeof === f || S.$$typeof === y || S.$$typeof === x || S.$$typeof === E || S.$$typeof === m);
  }, st.typeOf = v, st;
}
var at = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Pm;
function sC() {
  return Pm || (Pm = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, i = e ? Symbol.for("react.profiler") : 60114, s = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, f = e ? Symbol.for("react.forward_ref") : 60112, d = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, h = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, y = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
    function v(j) {
      return typeof j == "string" || typeof j == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      j === r || j === u || j === i || j === o || j === d || j === p || typeof j == "object" && j !== null && (j.$$typeof === g || j.$$typeof === h || j.$$typeof === s || j.$$typeof === l || j.$$typeof === f || j.$$typeof === y || j.$$typeof === x || j.$$typeof === E || j.$$typeof === m);
    }
    function w(j) {
      if (typeof j == "object" && j !== null) {
        var pe = j.$$typeof;
        switch (pe) {
          case t:
            var ce = j.type;
            switch (ce) {
              case c:
              case u:
              case r:
              case i:
              case o:
              case d:
                return ce;
              default:
                var be = ce && ce.$$typeof;
                switch (be) {
                  case l:
                  case f:
                  case g:
                  case h:
                  case s:
                    return be;
                  default:
                    return pe;
                }
            }
          case n:
            return pe;
        }
      }
    }
    var S = c, T = u, C = l, R = s, I = t, b = f, k = r, P = g, A = h, O = n, _ = i, $ = o, D = d, z = !1;
    function B(j) {
      return z || (z = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), L(j) || w(j) === c;
    }
    function L(j) {
      return w(j) === u;
    }
    function F(j) {
      return w(j) === l;
    }
    function W(j) {
      return w(j) === s;
    }
    function U(j) {
      return typeof j == "object" && j !== null && j.$$typeof === t;
    }
    function Z(j) {
      return w(j) === f;
    }
    function Q(j) {
      return w(j) === r;
    }
    function ee(j) {
      return w(j) === g;
    }
    function te(j) {
      return w(j) === h;
    }
    function q(j) {
      return w(j) === n;
    }
    function oe(j) {
      return w(j) === i;
    }
    function G(j) {
      return w(j) === o;
    }
    function ne(j) {
      return w(j) === d;
    }
    at.AsyncMode = S, at.ConcurrentMode = T, at.ContextConsumer = C, at.ContextProvider = R, at.Element = I, at.ForwardRef = b, at.Fragment = k, at.Lazy = P, at.Memo = A, at.Portal = O, at.Profiler = _, at.StrictMode = $, at.Suspense = D, at.isAsyncMode = B, at.isConcurrentMode = L, at.isContextConsumer = F, at.isContextProvider = W, at.isElement = U, at.isForwardRef = Z, at.isFragment = Q, at.isLazy = ee, at.isMemo = te, at.isPortal = q, at.isProfiler = oe, at.isStrictMode = G, at.isSuspense = ne, at.isValidElementType = v, at.typeOf = w;
  }()), at;
}
var Im;
function J0() {
  return Im || (Im = 1, process.env.NODE_ENV === "production" ? fl.exports = iC() : fl.exports = sC()), fl.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var fd, _m;
function aC() {
  if (_m) return fd;
  _m = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
  function r(i) {
    if (i == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(i);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var i = new String("abc");
      if (i[5] = "de", Object.getOwnPropertyNames(i)[0] === "5")
        return !1;
      for (var s = {}, l = 0; l < 10; l++)
        s["_" + String.fromCharCode(l)] = l;
      var c = Object.getOwnPropertyNames(s).map(function(f) {
        return s[f];
      });
      if (c.join("") !== "0123456789")
        return !1;
      var u = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(f) {
        u[f] = f;
      }), Object.keys(Object.assign({}, u)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return fd = o() ? Object.assign : function(i, s) {
    for (var l, c = r(i), u, f = 1; f < arguments.length; f++) {
      l = Object(arguments[f]);
      for (var d in l)
        t.call(l, d) && (c[d] = l[d]);
      if (e) {
        u = e(l);
        for (var p = 0; p < u.length; p++)
          n.call(l, u[p]) && (c[u[p]] = l[u[p]]);
      }
    }
    return c;
  }, fd;
}
var pd, Mm;
function $p() {
  if (Mm) return pd;
  Mm = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return pd = e, pd;
}
var hd, Am;
function ev() {
  return Am || (Am = 1, hd = Function.call.bind(Object.prototype.hasOwnProperty)), hd;
}
var md, Dm;
function lC() {
  if (Dm) return md;
  Dm = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ $p(), n = {}, r = /* @__PURE__ */ ev();
    e = function(i) {
      var s = "Warning: " + i;
      typeof console < "u" && console.error(s);
      try {
        throw new Error(s);
      } catch {
      }
    };
  }
  function o(i, s, l, c, u) {
    if (process.env.NODE_ENV !== "production") {
      for (var f in i)
        if (r(i, f)) {
          var d;
          try {
            if (typeof i[f] != "function") {
              var p = Error(
                (c || "React class") + ": " + l + " type `" + f + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof i[f] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw p.name = "Invariant Violation", p;
            }
            d = i[f](s, f, c, l, null, t);
          } catch (g) {
            d = g;
          }
          if (d && !(d instanceof Error) && e(
            (c || "React class") + ": type specification of " + l + " `" + f + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof d + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), d instanceof Error && !(d.message in n)) {
            n[d.message] = !0;
            var h = u ? u() : "";
            e(
              "Failed " + l + " type: " + d.message + (h ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (n = {});
  }, md = o, md;
}
var gd, Bm;
function cC() {
  if (Bm) return gd;
  Bm = 1;
  var e = J0(), t = aC(), n = /* @__PURE__ */ $p(), r = /* @__PURE__ */ ev(), o = /* @__PURE__ */ lC(), i = function() {
  };
  process.env.NODE_ENV !== "production" && (i = function(l) {
    var c = "Warning: " + l;
    typeof console < "u" && console.error(c);
    try {
      throw new Error(c);
    } catch {
    }
  });
  function s() {
    return null;
  }
  return gd = function(l, c) {
    var u = typeof Symbol == "function" && Symbol.iterator, f = "@@iterator";
    function d(L) {
      var F = L && (u && L[u] || L[f]);
      if (typeof F == "function")
        return F;
    }
    var p = "<<anonymous>>", h = {
      array: x("array"),
      bigint: x("bigint"),
      bool: x("boolean"),
      func: x("function"),
      number: x("number"),
      object: x("object"),
      string: x("string"),
      symbol: x("symbol"),
      any: E(),
      arrayOf: v,
      element: w(),
      elementType: S(),
      instanceOf: T,
      node: b(),
      objectOf: R,
      oneOf: C,
      oneOfType: I,
      shape: P,
      exact: A
    };
    function g(L, F) {
      return L === F ? L !== 0 || 1 / L === 1 / F : L !== L && F !== F;
    }
    function m(L, F) {
      this.message = L, this.data = F && typeof F == "object" ? F : {}, this.stack = "";
    }
    m.prototype = Error.prototype;
    function y(L) {
      if (process.env.NODE_ENV !== "production")
        var F = {}, W = 0;
      function U(Q, ee, te, q, oe, G, ne) {
        if (q = q || p, G = G || te, ne !== n) {
          if (c) {
            var j = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw j.name = "Invariant Violation", j;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var pe = q + ":" + te;
            !F[pe] && // Avoid spamming the console because they are often not actionable except for lib authors
            W < 3 && (i(
              "You are manually calling a React.PropTypes validation function for the `" + G + "` prop on `" + q + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), F[pe] = !0, W++);
          }
        }
        return ee[te] == null ? Q ? ee[te] === null ? new m("The " + oe + " `" + G + "` is marked as required " + ("in `" + q + "`, but its value is `null`.")) : new m("The " + oe + " `" + G + "` is marked as required in " + ("`" + q + "`, but its value is `undefined`.")) : null : L(ee, te, q, oe, G);
      }
      var Z = U.bind(null, !1);
      return Z.isRequired = U.bind(null, !0), Z;
    }
    function x(L) {
      function F(W, U, Z, Q, ee, te) {
        var q = W[U], oe = $(q);
        if (oe !== L) {
          var G = D(q);
          return new m(
            "Invalid " + Q + " `" + ee + "` of type " + ("`" + G + "` supplied to `" + Z + "`, expected ") + ("`" + L + "`."),
            { expectedType: L }
          );
        }
        return null;
      }
      return y(F);
    }
    function E() {
      return y(s);
    }
    function v(L) {
      function F(W, U, Z, Q, ee) {
        if (typeof L != "function")
          return new m("Property `" + ee + "` of component `" + Z + "` has invalid PropType notation inside arrayOf.");
        var te = W[U];
        if (!Array.isArray(te)) {
          var q = $(te);
          return new m("Invalid " + Q + " `" + ee + "` of type " + ("`" + q + "` supplied to `" + Z + "`, expected an array."));
        }
        for (var oe = 0; oe < te.length; oe++) {
          var G = L(te, oe, Z, Q, ee + "[" + oe + "]", n);
          if (G instanceof Error)
            return G;
        }
        return null;
      }
      return y(F);
    }
    function w() {
      function L(F, W, U, Z, Q) {
        var ee = F[W];
        if (!l(ee)) {
          var te = $(ee);
          return new m("Invalid " + Z + " `" + Q + "` of type " + ("`" + te + "` supplied to `" + U + "`, expected a single ReactElement."));
        }
        return null;
      }
      return y(L);
    }
    function S() {
      function L(F, W, U, Z, Q) {
        var ee = F[W];
        if (!e.isValidElementType(ee)) {
          var te = $(ee);
          return new m("Invalid " + Z + " `" + Q + "` of type " + ("`" + te + "` supplied to `" + U + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return y(L);
    }
    function T(L) {
      function F(W, U, Z, Q, ee) {
        if (!(W[U] instanceof L)) {
          var te = L.name || p, q = B(W[U]);
          return new m("Invalid " + Q + " `" + ee + "` of type " + ("`" + q + "` supplied to `" + Z + "`, expected ") + ("instance of `" + te + "`."));
        }
        return null;
      }
      return y(F);
    }
    function C(L) {
      if (!Array.isArray(L))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? i(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : i("Invalid argument supplied to oneOf, expected an array.")), s;
      function F(W, U, Z, Q, ee) {
        for (var te = W[U], q = 0; q < L.length; q++)
          if (g(te, L[q]))
            return null;
        var oe = JSON.stringify(L, function(ne, j) {
          var pe = D(j);
          return pe === "symbol" ? String(j) : j;
        });
        return new m("Invalid " + Q + " `" + ee + "` of value `" + String(te) + "` " + ("supplied to `" + Z + "`, expected one of " + oe + "."));
      }
      return y(F);
    }
    function R(L) {
      function F(W, U, Z, Q, ee) {
        if (typeof L != "function")
          return new m("Property `" + ee + "` of component `" + Z + "` has invalid PropType notation inside objectOf.");
        var te = W[U], q = $(te);
        if (q !== "object")
          return new m("Invalid " + Q + " `" + ee + "` of type " + ("`" + q + "` supplied to `" + Z + "`, expected an object."));
        for (var oe in te)
          if (r(te, oe)) {
            var G = L(te, oe, Z, Q, ee + "." + oe, n);
            if (G instanceof Error)
              return G;
          }
        return null;
      }
      return y(F);
    }
    function I(L) {
      if (!Array.isArray(L))
        return process.env.NODE_ENV !== "production" && i("Invalid argument supplied to oneOfType, expected an instance of array."), s;
      for (var F = 0; F < L.length; F++) {
        var W = L[F];
        if (typeof W != "function")
          return i(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + z(W) + " at index " + F + "."
          ), s;
      }
      function U(Z, Q, ee, te, q) {
        for (var oe = [], G = 0; G < L.length; G++) {
          var ne = L[G], j = ne(Z, Q, ee, te, q, n);
          if (j == null)
            return null;
          j.data && r(j.data, "expectedType") && oe.push(j.data.expectedType);
        }
        var pe = oe.length > 0 ? ", expected one of type [" + oe.join(", ") + "]" : "";
        return new m("Invalid " + te + " `" + q + "` supplied to " + ("`" + ee + "`" + pe + "."));
      }
      return y(U);
    }
    function b() {
      function L(F, W, U, Z, Q) {
        return O(F[W]) ? null : new m("Invalid " + Z + " `" + Q + "` supplied to " + ("`" + U + "`, expected a ReactNode."));
      }
      return y(L);
    }
    function k(L, F, W, U, Z) {
      return new m(
        (L || "React class") + ": " + F + " type `" + W + "." + U + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + Z + "`."
      );
    }
    function P(L) {
      function F(W, U, Z, Q, ee) {
        var te = W[U], q = $(te);
        if (q !== "object")
          return new m("Invalid " + Q + " `" + ee + "` of type `" + q + "` " + ("supplied to `" + Z + "`, expected `object`."));
        for (var oe in L) {
          var G = L[oe];
          if (typeof G != "function")
            return k(Z, Q, ee, oe, D(G));
          var ne = G(te, oe, Z, Q, ee + "." + oe, n);
          if (ne)
            return ne;
        }
        return null;
      }
      return y(F);
    }
    function A(L) {
      function F(W, U, Z, Q, ee) {
        var te = W[U], q = $(te);
        if (q !== "object")
          return new m("Invalid " + Q + " `" + ee + "` of type `" + q + "` " + ("supplied to `" + Z + "`, expected `object`."));
        var oe = t({}, W[U], L);
        for (var G in oe) {
          var ne = L[G];
          if (r(L, G) && typeof ne != "function")
            return k(Z, Q, ee, G, D(ne));
          if (!ne)
            return new m(
              "Invalid " + Q + " `" + ee + "` key `" + G + "` supplied to `" + Z + "`.\nBad object: " + JSON.stringify(W[U], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(L), null, "  ")
            );
          var j = ne(te, G, Z, Q, ee + "." + G, n);
          if (j)
            return j;
        }
        return null;
      }
      return y(F);
    }
    function O(L) {
      switch (typeof L) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !L;
        case "object":
          if (Array.isArray(L))
            return L.every(O);
          if (L === null || l(L))
            return !0;
          var F = d(L);
          if (F) {
            var W = F.call(L), U;
            if (F !== L.entries) {
              for (; !(U = W.next()).done; )
                if (!O(U.value))
                  return !1;
            } else
              for (; !(U = W.next()).done; ) {
                var Z = U.value;
                if (Z && !O(Z[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function _(L, F) {
      return L === "symbol" ? !0 : F ? F["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && F instanceof Symbol : !1;
    }
    function $(L) {
      var F = typeof L;
      return Array.isArray(L) ? "array" : L instanceof RegExp ? "object" : _(F, L) ? "symbol" : F;
    }
    function D(L) {
      if (typeof L > "u" || L === null)
        return "" + L;
      var F = $(L);
      if (F === "object") {
        if (L instanceof Date)
          return "date";
        if (L instanceof RegExp)
          return "regexp";
      }
      return F;
    }
    function z(L) {
      var F = D(L);
      switch (F) {
        case "array":
        case "object":
          return "an " + F;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + F;
        default:
          return F;
      }
    }
    function B(L) {
      return !L.constructor || !L.constructor.name ? p : L.constructor.name;
    }
    return h.checkPropTypes = o, h.resetWarningCache = o.resetWarningCache, h.PropTypes = h, h;
  }, gd;
}
var yd, Lm;
function uC() {
  if (Lm) return yd;
  Lm = 1;
  var e = /* @__PURE__ */ $p();
  function t() {
  }
  function n() {
  }
  return n.resetWarningCache = t, yd = function() {
    function r(s, l, c, u, f, d) {
      if (d !== e) {
        var p = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw p.name = "Invariant Violation", p;
      }
    }
    r.isRequired = r;
    function o() {
      return r;
    }
    var i = {
      array: r,
      bigint: r,
      bool: r,
      func: r,
      number: r,
      object: r,
      string: r,
      symbol: r,
      any: r,
      arrayOf: o,
      element: r,
      elementType: r,
      instanceOf: o,
      node: r,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: n,
      resetWarningCache: t
    };
    return i.PropTypes = i, i;
  }, yd;
}
var Fm;
function dC() {
  if (Fm) return dl.exports;
  if (Fm = 1, process.env.NODE_ENV !== "production") {
    var e = J0(), t = !0;
    dl.exports = /* @__PURE__ */ cC()(e.isElement, t);
  } else
    dl.exports = /* @__PURE__ */ uC()();
  return dl.exports;
}
var fC = /* @__PURE__ */ dC();
const a = /* @__PURE__ */ Q0(fC);
function tv(e) {
  var t, n, r = "";
  if (typeof e == "string" || typeof e == "number") r += e;
  else if (typeof e == "object") if (Array.isArray(e)) {
    var o = e.length;
    for (t = 0; t < o; t++) e[t] && (n = tv(e[t])) && (r && (r += " "), r += n);
  } else for (n in e) e[n] && (r && (r += " "), r += n);
  return r;
}
function Oe() {
  for (var e, t, n = 0, r = "", o = arguments.length; n < o; n++) (e = arguments[n]) && (t = tv(e)) && (r && (r += " "), r += t);
  return r;
}
function At(e, t, n = void 0) {
  const r = {};
  for (const o in e) {
    const i = e[o];
    let s = "", l = !0;
    for (let c = 0; c < i.length; c += 1) {
      const u = i[c];
      u && (s += (l === !0 ? "" : " ") + t(u), l = !1, n && n[u] && (s += " " + n[u]));
    }
    r[o] = s;
  }
  return r;
}
function eo(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((r) => n.searchParams.append("args[]", r)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
function Ee(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : eo(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
var pl = { exports: {} }, dt = {};
/**
 * @license React
 * react-is.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var zm;
function pC() {
  if (zm) return dt;
  zm = 1;
  var e = Symbol.for("react.transitional.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), o = Symbol.for("react.profiler"), i = Symbol.for("react.consumer"), s = Symbol.for("react.context"), l = Symbol.for("react.forward_ref"), c = Symbol.for("react.suspense"), u = Symbol.for("react.suspense_list"), f = Symbol.for("react.memo"), d = Symbol.for("react.lazy"), p = Symbol.for("react.view_transition"), h = Symbol.for("react.client.reference");
  function g(m) {
    if (typeof m == "object" && m !== null) {
      var y = m.$$typeof;
      switch (y) {
        case e:
          switch (m = m.type, m) {
            case n:
            case o:
            case r:
            case c:
            case u:
            case p:
              return m;
            default:
              switch (m = m && m.$$typeof, m) {
                case s:
                case l:
                case d:
                case f:
                  return m;
                case i:
                  return m;
                default:
                  return y;
              }
          }
        case t:
          return y;
      }
    }
  }
  return dt.ContextConsumer = i, dt.ContextProvider = s, dt.Element = e, dt.ForwardRef = l, dt.Fragment = n, dt.Lazy = d, dt.Memo = f, dt.Portal = t, dt.Profiler = o, dt.StrictMode = r, dt.Suspense = c, dt.SuspenseList = u, dt.isContextConsumer = function(m) {
    return g(m) === i;
  }, dt.isContextProvider = function(m) {
    return g(m) === s;
  }, dt.isElement = function(m) {
    return typeof m == "object" && m !== null && m.$$typeof === e;
  }, dt.isForwardRef = function(m) {
    return g(m) === l;
  }, dt.isFragment = function(m) {
    return g(m) === n;
  }, dt.isLazy = function(m) {
    return g(m) === d;
  }, dt.isMemo = function(m) {
    return g(m) === f;
  }, dt.isPortal = function(m) {
    return g(m) === t;
  }, dt.isProfiler = function(m) {
    return g(m) === o;
  }, dt.isStrictMode = function(m) {
    return g(m) === r;
  }, dt.isSuspense = function(m) {
    return g(m) === c;
  }, dt.isSuspenseList = function(m) {
    return g(m) === u;
  }, dt.isValidElementType = function(m) {
    return typeof m == "string" || typeof m == "function" || m === n || m === o || m === r || m === c || m === u || typeof m == "object" && m !== null && (m.$$typeof === d || m.$$typeof === f || m.$$typeof === s || m.$$typeof === i || m.$$typeof === l || m.$$typeof === h || m.getModuleId !== void 0);
  }, dt.typeOf = g, dt;
}
var ft = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Vm;
function hC() {
  return Vm || (Vm = 1, process.env.NODE_ENV !== "production" && function() {
    function e(m) {
      if (typeof m == "object" && m !== null) {
        var y = m.$$typeof;
        switch (y) {
          case t:
            switch (m = m.type, m) {
              case r:
              case i:
              case o:
              case u:
              case f:
              case h:
                return m;
              default:
                switch (m = m && m.$$typeof, m) {
                  case l:
                  case c:
                  case p:
                  case d:
                    return m;
                  case s:
                    return m;
                  default:
                    return y;
                }
            }
          case n:
            return y;
        }
      }
    }
    var t = Symbol.for("react.transitional.element"), n = Symbol.for("react.portal"), r = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), i = Symbol.for("react.profiler"), s = Symbol.for("react.consumer"), l = Symbol.for("react.context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), f = Symbol.for("react.suspense_list"), d = Symbol.for("react.memo"), p = Symbol.for("react.lazy"), h = Symbol.for("react.view_transition"), g = Symbol.for("react.client.reference");
    ft.ContextConsumer = s, ft.ContextProvider = l, ft.Element = t, ft.ForwardRef = c, ft.Fragment = r, ft.Lazy = p, ft.Memo = d, ft.Portal = n, ft.Profiler = i, ft.StrictMode = o, ft.Suspense = u, ft.SuspenseList = f, ft.isContextConsumer = function(m) {
      return e(m) === s;
    }, ft.isContextProvider = function(m) {
      return e(m) === l;
    }, ft.isElement = function(m) {
      return typeof m == "object" && m !== null && m.$$typeof === t;
    }, ft.isForwardRef = function(m) {
      return e(m) === c;
    }, ft.isFragment = function(m) {
      return e(m) === r;
    }, ft.isLazy = function(m) {
      return e(m) === p;
    }, ft.isMemo = function(m) {
      return e(m) === d;
    }, ft.isPortal = function(m) {
      return e(m) === n;
    }, ft.isProfiler = function(m) {
      return e(m) === i;
    }, ft.isStrictMode = function(m) {
      return e(m) === o;
    }, ft.isSuspense = function(m) {
      return e(m) === u;
    }, ft.isSuspenseList = function(m) {
      return e(m) === f;
    }, ft.isValidElementType = function(m) {
      return typeof m == "string" || typeof m == "function" || m === r || m === i || m === o || m === u || m === f || typeof m == "object" && m !== null && (m.$$typeof === p || m.$$typeof === d || m.$$typeof === l || m.$$typeof === s || m.$$typeof === c || m.$$typeof === g || m.getModuleId !== void 0);
    }, ft.typeOf = e;
  }()), ft;
}
var jm;
function mC() {
  return jm || (jm = 1, process.env.NODE_ENV === "production" ? pl.exports = /* @__PURE__ */ pC() : pl.exports = /* @__PURE__ */ hC()), pl.exports;
}
var pr = /* @__PURE__ */ mC();
function kr(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function nv(e) {
  if (/* @__PURE__ */ M.isValidElement(e) || pr.isValidElementType(e) || !kr(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = nv(e[n]);
  }), t;
}
function Vn(e, t, n = {
  clone: !0
}) {
  const r = n.clone ? {
    ...e
  } : e;
  return kr(e) && kr(t) && Object.keys(t).forEach((o) => {
    /* @__PURE__ */ M.isValidElement(t[o]) || pr.isValidElementType(t[o]) ? r[o] = t[o] : kr(t[o]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, o) && kr(e[o]) ? r[o] = Vn(e[o], t[o], n) : n.clone ? r[o] = kr(t[o]) ? nv(t[o]) : t[o] : r[o] = t[o];
  }), r;
}
function Ys(e, t) {
  return t ? Vn(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const No = process.env.NODE_ENV !== "production" ? a.oneOfType([a.number, a.string, a.object, a.array]) : {};
function gC(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((r) => r.startsWith("@container")).sort((r, o) => {
    var s, l;
    const i = /min-width:\s*([0-9.]+)/;
    return +(((s = r.match(i)) == null ? void 0 : s[1]) || 0) - +(((l = o.match(i)) == null ? void 0 : l[1]) || 0);
  });
  return n.length ? n.reduce((r, o) => {
    const i = t[o];
    return delete r[o], r[o] = i, r;
  }, {
    ...t
  }) : t;
}
function yC(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function bC(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : eo(18, `(${t})`));
    return null;
  }
  const [, r, o] = n, i = Number.isNaN(+r) ? r || 0 : +r;
  return e.containerQueries(o).up(i);
}
function vC(e) {
  const t = (i, s) => i.replace("@media", s ? `@container ${s}` : "@container");
  function n(i, s) {
    i.up = (...l) => t(e.breakpoints.up(...l), s), i.down = (...l) => t(e.breakpoints.down(...l), s), i.between = (...l) => t(e.breakpoints.between(...l), s), i.only = (...l) => t(e.breakpoints.only(...l), s), i.not = (...l) => {
      const c = t(e.breakpoints.not(...l), s);
      return c.includes("not all and") ? c.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : c;
    };
  }
  const r = {}, o = (i) => (n(r, i), r);
  return n(o), {
    ...e,
    containerQueries: o
  };
}
const Xc = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, Hm = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${Xc[e]}px)`
}, xC = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : Xc[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function to(e, t, n) {
  const r = e.theme || {};
  if (Array.isArray(t)) {
    const i = r.breakpoints || Hm;
    return t.reduce((s, l, c) => (s[i.up(i.keys[c])] = n(t[c]), s), {});
  }
  if (typeof t == "object") {
    const i = r.breakpoints || Hm;
    return Object.keys(t).reduce((s, l) => {
      if (yC(i.keys, l)) {
        const c = bC(r.containerQueries ? r : xC, l);
        c && (s[c] = n(t[l], l));
      } else if (Object.keys(i.values || Xc).includes(l)) {
        const c = i.up(l);
        s[c] = n(t[l], l);
      } else {
        const c = l;
        s[c] = t[c];
      }
      return s;
    }, {});
  }
  return n(t);
}
function wC(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((r, o) => {
    const i = e.up(o);
    return r[i] = {}, r;
  }, {})) || {};
}
function SC(e, t) {
  return e.reduce((n, r) => {
    const o = n[r];
    return (!o || Object.keys(o).length === 0) && delete n[r], n;
  }, t);
}
function Zc(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const r = `vars.${t}`.split(".").reduce((o, i) => o && o[i] ? o[i] : null, e);
    if (r != null)
      return r;
  }
  return t.split(".").reduce((r, o) => r && r[o] != null ? r[o] : null, e);
}
function lc(e, t, n, r = n) {
  let o;
  return typeof e == "function" ? o = e(n) : Array.isArray(e) ? o = e[n] || r : o = Zc(e, n) || r, t && (o = t(o, r, e)), o;
}
function Ut(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: r,
    transform: o
  } = e, i = (s) => {
    if (s[t] == null)
      return null;
    const l = s[t], c = s.theme, u = Zc(c, r) || {};
    return to(s, l, (d) => {
      let p = lc(u, o, d);
      return d === p && typeof d == "string" && (p = lc(u, o, `${t}${d === "default" ? "" : Ee(d)}`, d)), n === !1 ? p : {
        [n]: p
      };
    });
  };
  return i.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: No
  } : {}, i.filterProps = [t], i;
}
function EC(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const TC = {
  m: "margin",
  p: "padding"
}, CC = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, Wm = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, OC = EC((e) => {
  if (e.length > 2)
    if (Wm[e])
      e = Wm[e];
    else
      return [e];
  const [t, n] = e.split(""), r = TC[t], o = CC[n] || "";
  return Array.isArray(o) ? o.map((i) => r + i) : [r + o];
}), Qc = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], Jc = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], kC = [...Qc, ...Jc];
function Ba(e, t, n, r) {
  const o = Zc(e, t, !0) ?? n;
  return typeof o == "number" || typeof o == "string" ? (i) => typeof i == "string" ? i : (process.env.NODE_ENV !== "production" && typeof i != "number" && console.error(`MUI: Expected ${r} argument to be a number or a string, got ${i}.`), typeof o == "string" ? o.startsWith("var(") && i === 0 ? 0 : o.startsWith("var(") && i === 1 ? o : `calc(${i} * ${o})` : o * i) : Array.isArray(o) ? (i) => {
    if (typeof i == "string")
      return i;
    const s = Math.abs(i);
    process.env.NODE_ENV !== "production" && (Number.isInteger(s) ? s > o.length - 1 && console.error([`MUI: The value provided (${s}) overflows.`, `The supported values are: ${JSON.stringify(o)}.`, `${s} > ${o.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const l = o[s];
    return i >= 0 ? l : typeof l == "number" ? -l : typeof l == "string" && l.startsWith("var(") ? `calc(-1 * ${l})` : `-${l}`;
  } : typeof o == "function" ? o : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${o}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function Pp(e) {
  return Ba(e, "spacing", 8, "spacing");
}
function La(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function RC(e, t) {
  return (n) => e.reduce((r, o) => (r[o] = La(t, n), r), {});
}
function NC(e, t, n, r) {
  if (!t.includes(n))
    return null;
  const o = OC(n), i = RC(o, r), s = e[n];
  return to(e, s, i);
}
function rv(e, t) {
  const n = Pp(e.theme);
  return Object.keys(e).map((r) => NC(e, t, r, n)).reduce(Ys, {});
}
function Bt(e) {
  return rv(e, Qc);
}
Bt.propTypes = process.env.NODE_ENV !== "production" ? Qc.reduce((e, t) => (e[t] = No, e), {}) : {};
Bt.filterProps = Qc;
function Lt(e) {
  return rv(e, Jc);
}
Lt.propTypes = process.env.NODE_ENV !== "production" ? Jc.reduce((e, t) => (e[t] = No, e), {}) : {};
Lt.filterProps = Jc;
process.env.NODE_ENV !== "production" && kC.reduce((e, t) => (e[t] = No, e), {});
function eu(...e) {
  const t = e.reduce((r, o) => (o.filterProps.forEach((i) => {
    r[i] = o;
  }), r), {}), n = (r) => Object.keys(r).reduce((o, i) => t[i] ? Ys(o, t[i](r)) : o, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((r, o) => Object.assign(r, o.propTypes), {}) : {}, n.filterProps = e.reduce((r, o) => r.concat(o.filterProps), []), n;
}
function Gn(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function or(e, t) {
  return Ut({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const $C = or("border", Gn), PC = or("borderTop", Gn), IC = or("borderRight", Gn), _C = or("borderBottom", Gn), MC = or("borderLeft", Gn), AC = or("borderColor"), DC = or("borderTopColor"), BC = or("borderRightColor"), LC = or("borderBottomColor"), FC = or("borderLeftColor"), zC = or("outline", Gn), VC = or("outlineColor"), tu = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = Ba(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (r) => ({
      borderRadius: La(t, r)
    });
    return to(e, e.borderRadius, n);
  }
  return null;
};
tu.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: No
} : {};
tu.filterProps = ["borderRadius"];
eu($C, PC, IC, _C, MC, AC, DC, BC, LC, FC, tu, zC, VC);
const nu = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = Ba(e.theme, "spacing", 8, "gap"), n = (r) => ({
      gap: La(t, r)
    });
    return to(e, e.gap, n);
  }
  return null;
};
nu.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: No
} : {};
nu.filterProps = ["gap"];
const ru = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = Ba(e.theme, "spacing", 8, "columnGap"), n = (r) => ({
      columnGap: La(t, r)
    });
    return to(e, e.columnGap, n);
  }
  return null;
};
ru.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: No
} : {};
ru.filterProps = ["columnGap"];
const ou = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = Ba(e.theme, "spacing", 8, "rowGap"), n = (r) => ({
      rowGap: La(t, r)
    });
    return to(e, e.rowGap, n);
  }
  return null;
};
ou.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: No
} : {};
ou.filterProps = ["rowGap"];
const jC = Ut({
  prop: "gridColumn"
}), HC = Ut({
  prop: "gridRow"
}), WC = Ut({
  prop: "gridAutoFlow"
}), UC = Ut({
  prop: "gridAutoColumns"
}), qC = Ut({
  prop: "gridAutoRows"
}), YC = Ut({
  prop: "gridTemplateColumns"
}), KC = Ut({
  prop: "gridTemplateRows"
}), GC = Ut({
  prop: "gridTemplateAreas"
}), XC = Ut({
  prop: "gridArea"
});
eu(nu, ru, ou, jC, HC, WC, UC, qC, YC, KC, GC, XC);
function Ii(e, t) {
  return t === "grey" ? t : e;
}
const ZC = Ut({
  prop: "color",
  themeKey: "palette",
  transform: Ii
}), QC = Ut({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: Ii
}), JC = Ut({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: Ii
});
eu(ZC, QC, JC);
function Dn(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const eO = Ut({
  prop: "width",
  transform: Dn
}), Ip = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var o, i, s, l, c;
      const r = ((s = (i = (o = e.theme) == null ? void 0 : o.breakpoints) == null ? void 0 : i.values) == null ? void 0 : s[n]) || Xc[n];
      return r ? ((c = (l = e.theme) == null ? void 0 : l.breakpoints) == null ? void 0 : c.unit) !== "px" ? {
        maxWidth: `${r}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: r
      } : {
        maxWidth: Dn(n)
      };
    };
    return to(e, e.maxWidth, t);
  }
  return null;
};
Ip.filterProps = ["maxWidth"];
const tO = Ut({
  prop: "minWidth",
  transform: Dn
}), nO = Ut({
  prop: "height",
  transform: Dn
}), rO = Ut({
  prop: "maxHeight",
  transform: Dn
}), oO = Ut({
  prop: "minHeight",
  transform: Dn
});
Ut({
  prop: "size",
  cssProperty: "width",
  transform: Dn
});
Ut({
  prop: "size",
  cssProperty: "height",
  transform: Dn
});
const iO = Ut({
  prop: "boxSizing"
});
eu(eO, Ip, tO, nO, rO, oO, iO);
const Fa = {
  // borders
  border: {
    themeKey: "borders",
    transform: Gn
  },
  borderTop: {
    themeKey: "borders",
    transform: Gn
  },
  borderRight: {
    themeKey: "borders",
    transform: Gn
  },
  borderBottom: {
    themeKey: "borders",
    transform: Gn
  },
  borderLeft: {
    themeKey: "borders",
    transform: Gn
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: Gn
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: tu
  },
  // palette
  color: {
    themeKey: "palette",
    transform: Ii
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: Ii
  },
  backgroundColor: {
    themeKey: "palette",
    transform: Ii
  },
  // spacing
  p: {
    style: Lt
  },
  pt: {
    style: Lt
  },
  pr: {
    style: Lt
  },
  pb: {
    style: Lt
  },
  pl: {
    style: Lt
  },
  px: {
    style: Lt
  },
  py: {
    style: Lt
  },
  padding: {
    style: Lt
  },
  paddingTop: {
    style: Lt
  },
  paddingRight: {
    style: Lt
  },
  paddingBottom: {
    style: Lt
  },
  paddingLeft: {
    style: Lt
  },
  paddingX: {
    style: Lt
  },
  paddingY: {
    style: Lt
  },
  paddingInline: {
    style: Lt
  },
  paddingInlineStart: {
    style: Lt
  },
  paddingInlineEnd: {
    style: Lt
  },
  paddingBlock: {
    style: Lt
  },
  paddingBlockStart: {
    style: Lt
  },
  paddingBlockEnd: {
    style: Lt
  },
  m: {
    style: Bt
  },
  mt: {
    style: Bt
  },
  mr: {
    style: Bt
  },
  mb: {
    style: Bt
  },
  ml: {
    style: Bt
  },
  mx: {
    style: Bt
  },
  my: {
    style: Bt
  },
  margin: {
    style: Bt
  },
  marginTop: {
    style: Bt
  },
  marginRight: {
    style: Bt
  },
  marginBottom: {
    style: Bt
  },
  marginLeft: {
    style: Bt
  },
  marginX: {
    style: Bt
  },
  marginY: {
    style: Bt
  },
  marginInline: {
    style: Bt
  },
  marginInlineStart: {
    style: Bt
  },
  marginInlineEnd: {
    style: Bt
  },
  marginBlock: {
    style: Bt
  },
  marginBlockStart: {
    style: Bt
  },
  marginBlockEnd: {
    style: Bt
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: nu
  },
  rowGap: {
    style: ou
  },
  columnGap: {
    style: ru
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: Dn
  },
  maxWidth: {
    style: Ip
  },
  minWidth: {
    transform: Dn
  },
  height: {
    transform: Dn
  },
  maxHeight: {
    transform: Dn
  },
  minHeight: {
    transform: Dn
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function sO(...e) {
  const t = e.reduce((r, o) => r.concat(Object.keys(o)), []), n = new Set(t);
  return e.every((r) => n.size === Object.keys(r).length);
}
function aO(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function lO() {
  function e(n, r, o, i) {
    const s = {
      [n]: r,
      theme: o
    }, l = i[n];
    if (!l)
      return {
        [n]: r
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: f,
      style: d
    } = l;
    if (r == null)
      return null;
    if (u === "typography" && r === "inherit")
      return {
        [n]: r
      };
    const p = Zc(o, u) || {};
    return d ? d(s) : to(s, r, (g) => {
      let m = lc(p, f, g);
      return g === m && typeof g == "string" && (m = lc(p, f, `${n}${g === "default" ? "" : Ee(g)}`, g)), c === !1 ? m : {
        [c]: m
      };
    });
  }
  function t(n) {
    const {
      sx: r,
      theme: o = {}
    } = n || {};
    if (!r)
      return null;
    const i = o.unstable_sxConfig ?? Fa;
    function s(l) {
      let c = l;
      if (typeof l == "function")
        c = l(o);
      else if (typeof l != "object")
        return l;
      if (!c)
        return null;
      const u = wC(o.breakpoints), f = Object.keys(u);
      let d = u;
      return Object.keys(c).forEach((p) => {
        const h = aO(c[p], o);
        if (h != null)
          if (typeof h == "object")
            if (i[p])
              d = Ys(d, e(p, h, o, i));
            else {
              const g = to({
                theme: o
              }, h, (m) => ({
                [p]: m
              }));
              sO(g, h) ? d[p] = t({
                sx: h,
                theme: o
              }) : d = Ys(d, g);
            }
          else
            d = Ys(d, e(p, h, o, i));
      }), gC(o, SC(f, d));
    }
    return Array.isArray(r) ? r.map(s) : s(r);
  }
  return t;
}
const To = lO();
To.filterProps = ["sx"];
const cO = (e) => {
  var r;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((r = e == null ? void 0 : e.theme) == null ? void 0 : r.unstable_sxConfig) ?? Fa;
  return Object.keys(e).forEach((o) => {
    n[o] ? t.systemProps[o] = e[o] : t.otherProps[o] = e[o];
  }), t;
};
function ov(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: r,
    otherProps: o
  } = cO(n);
  let i;
  return Array.isArray(t) ? i = [r, ...t] : typeof t == "function" ? i = (...s) => {
    const l = t(...s);
    return kr(l) ? {
      ...r,
      ...l
    } : r;
  } : i = {
    ...r,
    ...t
  }, {
    ...o,
    sx: i
  };
}
function cc() {
  return cc = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var r in n) ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
    }
    return e;
  }, cc.apply(null, arguments);
}
function uO(e) {
  if (e.sheet)
    return e.sheet;
  for (var t = 0; t < document.styleSheets.length; t++)
    if (document.styleSheets[t].ownerNode === e)
      return document.styleSheets[t];
}
function dO(e) {
  var t = document.createElement("style");
  return t.setAttribute("data-emotion", e.key), e.nonce !== void 0 && t.setAttribute("nonce", e.nonce), t.appendChild(document.createTextNode("")), t.setAttribute("data-s", ""), t;
}
var fO = /* @__PURE__ */ function() {
  function e(n) {
    var r = this;
    this._insertTag = function(o) {
      var i;
      r.tags.length === 0 ? r.insertionPoint ? i = r.insertionPoint.nextSibling : r.prepend ? i = r.container.firstChild : i = r.before : i = r.tags[r.tags.length - 1].nextSibling, r.container.insertBefore(o, i), r.tags.push(o);
    }, this.isSpeedy = n.speedy === void 0 ? !0 : n.speedy, this.tags = [], this.ctr = 0, this.nonce = n.nonce, this.key = n.key, this.container = n.container, this.prepend = n.prepend, this.insertionPoint = n.insertionPoint, this.before = null;
  }
  var t = e.prototype;
  return t.hydrate = function(r) {
    r.forEach(this._insertTag);
  }, t.insert = function(r) {
    this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(dO(this));
    var o = this.tags[this.tags.length - 1];
    if (this.isSpeedy) {
      var i = uO(o);
      try {
        i.insertRule(r, i.cssRules.length);
      } catch {
      }
    } else
      o.appendChild(document.createTextNode(r));
    this.ctr++;
  }, t.flush = function() {
    this.tags.forEach(function(r) {
      var o;
      return (o = r.parentNode) == null ? void 0 : o.removeChild(r);
    }), this.tags = [], this.ctr = 0;
  }, e;
}(), cn = "-ms-", uc = "-moz-", nt = "-webkit-", iv = "comm", _p = "rule", Mp = "decl", pO = "@import", sv = "@keyframes", hO = "@layer", mO = Math.abs, iu = String.fromCharCode, gO = Object.assign;
function yO(e, t) {
  return rn(e, 0) ^ 45 ? (((t << 2 ^ rn(e, 0)) << 2 ^ rn(e, 1)) << 2 ^ rn(e, 2)) << 2 ^ rn(e, 3) : 0;
}
function av(e) {
  return e.trim();
}
function bO(e, t) {
  return (e = t.exec(e)) ? e[0] : e;
}
function rt(e, t, n) {
  return e.replace(t, n);
}
function xf(e, t) {
  return e.indexOf(t);
}
function rn(e, t) {
  return e.charCodeAt(t) | 0;
}
function aa(e, t, n) {
  return e.slice(t, n);
}
function Tr(e) {
  return e.length;
}
function Ap(e) {
  return e.length;
}
function hl(e, t) {
  return t.push(e), e;
}
function vO(e, t) {
  return e.map(t).join("");
}
var su = 1, Fi = 1, lv = 0, In = 0, Kt = 0, as = "";
function au(e, t, n, r, o, i, s) {
  return { value: e, root: t, parent: n, type: r, props: o, children: i, line: su, column: Fi, length: s, return: "" };
}
function xs(e, t) {
  return gO(au("", null, null, "", null, null, 0), e, { length: -e.length }, t);
}
function xO() {
  return Kt;
}
function wO() {
  return Kt = In > 0 ? rn(as, --In) : 0, Fi--, Kt === 10 && (Fi = 1, su--), Kt;
}
function jn() {
  return Kt = In < lv ? rn(as, In++) : 0, Fi++, Kt === 10 && (Fi = 1, su++), Kt;
}
function Pr() {
  return rn(as, In);
}
function ql() {
  return In;
}
function za(e, t) {
  return aa(as, e, t);
}
function la(e) {
  switch (e) {
    // \0 \t \n \r \s whitespace token
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    // ! + , / > @ ~ isolate token
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    // ; { } breakpoint token
    case 59:
    case 123:
    case 125:
      return 4;
    // : accompanied token
    case 58:
      return 3;
    // " ' ( [ opening delimit token
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    // ) ] closing delimit token
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function cv(e) {
  return su = Fi = 1, lv = Tr(as = e), In = 0, [];
}
function uv(e) {
  return as = "", e;
}
function Yl(e) {
  return av(za(In - 1, wf(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function SO(e) {
  for (; (Kt = Pr()) && Kt < 33; )
    jn();
  return la(e) > 2 || la(Kt) > 3 ? "" : " ";
}
function EO(e, t) {
  for (; --t && jn() && !(Kt < 48 || Kt > 102 || Kt > 57 && Kt < 65 || Kt > 70 && Kt < 97); )
    ;
  return za(e, ql() + (t < 6 && Pr() == 32 && jn() == 32));
}
function wf(e) {
  for (; jn(); )
    switch (Kt) {
      // ] ) " '
      case e:
        return In;
      // " '
      case 34:
      case 39:
        e !== 34 && e !== 39 && wf(Kt);
        break;
      // (
      case 40:
        e === 41 && wf(e);
        break;
      // \
      case 92:
        jn();
        break;
    }
  return In;
}
function TO(e, t) {
  for (; jn() && e + Kt !== 57; )
    if (e + Kt === 84 && Pr() === 47)
      break;
  return "/*" + za(t, In - 1) + "*" + iu(e === 47 ? e : jn());
}
function CO(e) {
  for (; !la(Pr()); )
    jn();
  return za(e, In);
}
function OO(e) {
  return uv(Kl("", null, null, null, [""], e = cv(e), 0, [0], e));
}
function Kl(e, t, n, r, o, i, s, l, c) {
  for (var u = 0, f = 0, d = s, p = 0, h = 0, g = 0, m = 1, y = 1, x = 1, E = 0, v = "", w = o, S = i, T = r, C = v; y; )
    switch (g = E, E = jn()) {
      // (
      case 40:
        if (g != 108 && rn(C, d - 1) == 58) {
          xf(C += rt(Yl(E), "&", "&\f"), "&\f") != -1 && (x = -1);
          break;
        }
      // " ' [
      case 34:
      case 39:
      case 91:
        C += Yl(E);
        break;
      // \t \n \r \s
      case 9:
      case 10:
      case 13:
      case 32:
        C += SO(g);
        break;
      // \
      case 92:
        C += EO(ql() - 1, 7);
        continue;
      // /
      case 47:
        switch (Pr()) {
          case 42:
          case 47:
            hl(kO(TO(jn(), ql()), t, n), c);
            break;
          default:
            C += "/";
        }
        break;
      // {
      case 123 * m:
        l[u++] = Tr(C) * x;
      // } ; \0
      case 125 * m:
      case 59:
      case 0:
        switch (E) {
          // \0 }
          case 0:
          case 125:
            y = 0;
          // ;
          case 59 + f:
            x == -1 && (C = rt(C, /\f/g, "")), h > 0 && Tr(C) - d && hl(h > 32 ? qm(C + ";", r, n, d - 1) : qm(rt(C, " ", "") + ";", r, n, d - 2), c);
            break;
          // @ ;
          case 59:
            C += ";";
          // { rule/at-rule
          default:
            if (hl(T = Um(C, t, n, u, f, o, l, v, w = [], S = [], d), i), E === 123)
              if (f === 0)
                Kl(C, t, T, T, w, i, d, l, S);
              else
                switch (p === 99 && rn(C, 3) === 110 ? 100 : p) {
                  // d l m s
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    Kl(e, T, T, r && hl(Um(e, T, T, 0, 0, o, l, v, o, w = [], d), S), o, S, d, l, r ? w : S);
                    break;
                  default:
                    Kl(C, T, T, T, [""], S, 0, l, S);
                }
        }
        u = f = h = 0, m = x = 1, v = C = "", d = s;
        break;
      // :
      case 58:
        d = 1 + Tr(C), h = g;
      default:
        if (m < 1) {
          if (E == 123)
            --m;
          else if (E == 125 && m++ == 0 && wO() == 125)
            continue;
        }
        switch (C += iu(E), E * m) {
          // &
          case 38:
            x = f > 0 ? 1 : (C += "\f", -1);
            break;
          // ,
          case 44:
            l[u++] = (Tr(C) - 1) * x, x = 1;
            break;
          // @
          case 64:
            Pr() === 45 && (C += Yl(jn())), p = Pr(), f = d = Tr(v = C += CO(ql())), E++;
            break;
          // -
          case 45:
            g === 45 && Tr(C) == 2 && (m = 0);
        }
    }
  return i;
}
function Um(e, t, n, r, o, i, s, l, c, u, f) {
  for (var d = o - 1, p = o === 0 ? i : [""], h = Ap(p), g = 0, m = 0, y = 0; g < r; ++g)
    for (var x = 0, E = aa(e, d + 1, d = mO(m = s[g])), v = e; x < h; ++x)
      (v = av(m > 0 ? p[x] + " " + E : rt(E, /&\f/g, p[x]))) && (c[y++] = v);
  return au(e, t, n, o === 0 ? _p : l, c, u, f);
}
function kO(e, t, n) {
  return au(e, t, n, iv, iu(xO()), aa(e, 2, -2), 0);
}
function qm(e, t, n, r) {
  return au(e, t, n, Mp, aa(e, 0, r), aa(e, r + 1, -1), r);
}
function _i(e, t) {
  for (var n = "", r = Ap(e), o = 0; o < r; o++)
    n += t(e[o], o, e, t) || "";
  return n;
}
function RO(e, t, n, r) {
  switch (e.type) {
    case hO:
      if (e.children.length) break;
    case pO:
    case Mp:
      return e.return = e.return || e.value;
    case iv:
      return "";
    case sv:
      return e.return = e.value + "{" + _i(e.children, r) + "}";
    case _p:
      e.value = e.props.join(",");
  }
  return Tr(n = _i(e.children, r)) ? e.return = e.value + "{" + n + "}" : "";
}
function NO(e) {
  var t = Ap(e);
  return function(n, r, o, i) {
    for (var s = "", l = 0; l < t; l++)
      s += e[l](n, r, o, i) || "";
    return s;
  };
}
function $O(e) {
  return function(t) {
    t.root || (t = t.return) && e(t);
  };
}
function dv(e) {
  var t = /* @__PURE__ */ Object.create(null);
  return function(n) {
    return t[n] === void 0 && (t[n] = e(n)), t[n];
  };
}
var PO = function(t, n, r) {
  for (var o = 0, i = 0; o = i, i = Pr(), o === 38 && i === 12 && (n[r] = 1), !la(i); )
    jn();
  return za(t, In);
}, IO = function(t, n) {
  var r = -1, o = 44;
  do
    switch (la(o)) {
      case 0:
        o === 38 && Pr() === 12 && (n[r] = 1), t[r] += PO(In - 1, n, r);
        break;
      case 2:
        t[r] += Yl(o);
        break;
      case 4:
        if (o === 44) {
          t[++r] = Pr() === 58 ? "&\f" : "", n[r] = t[r].length;
          break;
        }
      // fallthrough
      default:
        t[r] += iu(o);
    }
  while (o = jn());
  return t;
}, _O = function(t, n) {
  return uv(IO(cv(t), n));
}, Ym = /* @__PURE__ */ new WeakMap(), MO = function(t) {
  if (!(t.type !== "rule" || !t.parent || // positive .length indicates that this rule contains pseudo
  // negative .length indicates that this rule has been already prefixed
  t.length < 1)) {
    for (var n = t.value, r = t.parent, o = t.column === r.column && t.line === r.line; r.type !== "rule"; )
      if (r = r.parent, !r) return;
    if (!(t.props.length === 1 && n.charCodeAt(0) !== 58 && !Ym.get(r)) && !o) {
      Ym.set(t, !0);
      for (var i = [], s = _O(n, i), l = r.props, c = 0, u = 0; c < s.length; c++)
        for (var f = 0; f < l.length; f++, u++)
          t.props[u] = i[c] ? s[c].replace(/&\f/g, l[f]) : l[f] + " " + s[c];
    }
  }
}, AO = function(t) {
  if (t.type === "decl") {
    var n = t.value;
    // charcode for l
    n.charCodeAt(0) === 108 && // charcode for b
    n.charCodeAt(2) === 98 && (t.return = "", t.value = "");
  }
};
function fv(e, t) {
  switch (yO(e, t)) {
    // color-adjust
    case 5103:
      return nt + "print-" + e + e;
    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return nt + e + e;
    // appearance, user-select, transform, hyphens, text-size-adjust
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return nt + e + uc + e + cn + e + e;
    // flex, flex-direction
    case 6828:
    case 4268:
      return nt + e + cn + e + e;
    // order
    case 6165:
      return nt + e + cn + "flex-" + e + e;
    // align-items
    case 5187:
      return nt + e + rt(e, /(\w+).+(:[^]+)/, nt + "box-$1$2" + cn + "flex-$1$2") + e;
    // align-self
    case 5443:
      return nt + e + cn + "flex-item-" + rt(e, /flex-|-self/, "") + e;
    // align-content
    case 4675:
      return nt + e + cn + "flex-line-pack" + rt(e, /align-content|flex-|-self/, "") + e;
    // flex-shrink
    case 5548:
      return nt + e + cn + rt(e, "shrink", "negative") + e;
    // flex-basis
    case 5292:
      return nt + e + cn + rt(e, "basis", "preferred-size") + e;
    // flex-grow
    case 6060:
      return nt + "box-" + rt(e, "-grow", "") + nt + e + cn + rt(e, "grow", "positive") + e;
    // transition
    case 4554:
      return nt + rt(e, /([^-])(transform)/g, "$1" + nt + "$2") + e;
    // cursor
    case 6187:
      return rt(rt(rt(e, /(zoom-|grab)/, nt + "$1"), /(image-set)/, nt + "$1"), e, "") + e;
    // background, background-image
    case 5495:
    case 3959:
      return rt(e, /(image-set\([^]*)/, nt + "$1$`$1");
    // justify-content
    case 4968:
      return rt(rt(e, /(.+:)(flex-)?(.*)/, nt + "box-pack:$3" + cn + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + nt + e + e;
    // (margin|padding)-inline-(start|end)
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return rt(e, /(.+)-inline(.+)/, nt + "$1$2") + e;
    // (min|max)?(width|height|inline-size|block-size)
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (Tr(e) - 1 - t > 6) switch (rn(e, t + 1)) {
        // (m)ax-content, (m)in-content
        case 109:
          if (rn(e, t + 4) !== 45) break;
        // (f)ill-available, (f)it-content
        case 102:
          return rt(e, /(.+:)(.+)-([^]+)/, "$1" + nt + "$2-$3$1" + uc + (rn(e, t + 3) == 108 ? "$3" : "$2-$3")) + e;
        // (s)tretch
        case 115:
          return ~xf(e, "stretch") ? fv(rt(e, "stretch", "fill-available"), t) + e : e;
      }
      break;
    // position: sticky
    case 4949:
      if (rn(e, t + 1) !== 115) break;
    // display: (flex|inline-flex)
    case 6444:
      switch (rn(e, Tr(e) - 3 - (~xf(e, "!important") && 10))) {
        // stic(k)y
        case 107:
          return rt(e, ":", ":" + nt) + e;
        // (inline-)?fl(e)x
        case 101:
          return rt(e, /(.+:)([^;!]+)(;|!.+)?/, "$1" + nt + (rn(e, 14) === 45 ? "inline-" : "") + "box$3$1" + nt + "$2$3$1" + cn + "$2box$3") + e;
      }
      break;
    // writing-mode
    case 5936:
      switch (rn(e, t + 11)) {
        // vertical-l(r)
        case 114:
          return nt + e + cn + rt(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
        // vertical-r(l)
        case 108:
          return nt + e + cn + rt(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
        // horizontal(-)tb
        case 45:
          return nt + e + cn + rt(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
      }
      return nt + e + cn + e + e;
  }
  return e;
}
var DO = function(t, n, r, o) {
  if (t.length > -1 && !t.return) switch (t.type) {
    case Mp:
      t.return = fv(t.value, t.length);
      break;
    case sv:
      return _i([xs(t, {
        value: rt(t.value, "@", "@" + nt)
      })], o);
    case _p:
      if (t.length) return vO(t.props, function(i) {
        switch (bO(i, /(::plac\w+|:read-\w+)/)) {
          // :read-(only|write)
          case ":read-only":
          case ":read-write":
            return _i([xs(t, {
              props: [rt(i, /:(read-\w+)/, ":" + uc + "$1")]
            })], o);
          // :placeholder
          case "::placeholder":
            return _i([xs(t, {
              props: [rt(i, /:(plac\w+)/, ":" + nt + "input-$1")]
            }), xs(t, {
              props: [rt(i, /:(plac\w+)/, ":" + uc + "$1")]
            }), xs(t, {
              props: [rt(i, /:(plac\w+)/, cn + "input-$1")]
            })], o);
        }
        return "";
      });
  }
}, BO = [DO], LO = function(t) {
  var n = t.key;
  if (n === "css") {
    var r = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(r, function(m) {
      var y = m.getAttribute("data-emotion");
      y.indexOf(" ") !== -1 && (document.head.appendChild(m), m.setAttribute("data-s", ""));
    });
  }
  var o = t.stylisPlugins || BO, i = {}, s, l = [];
  s = t.container || document.head, Array.prototype.forEach.call(
    // this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll('style[data-emotion^="' + n + ' "]'),
    function(m) {
      for (var y = m.getAttribute("data-emotion").split(" "), x = 1; x < y.length; x++)
        i[y[x]] = !0;
      l.push(m);
    }
  );
  var c, u = [MO, AO];
  {
    var f, d = [RO, $O(function(m) {
      f.insert(m);
    })], p = NO(u.concat(o, d)), h = function(y) {
      return _i(OO(y), p);
    };
    c = function(y, x, E, v) {
      f = E, h(y ? y + "{" + x.styles + "}" : x.styles), v && (g.inserted[x.name] = !0);
    };
  }
  var g = {
    key: n,
    sheet: new fO({
      key: n,
      container: s,
      nonce: t.nonce,
      speedy: t.speedy,
      prepend: t.prepend,
      insertionPoint: t.insertionPoint
    }),
    nonce: t.nonce,
    inserted: i,
    registered: {},
    insert: c
  };
  return g.sheet.hydrate(l), g;
}, ml = { exports: {} }, lt = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Km;
function FO() {
  if (Km) return lt;
  Km = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, i = e ? Symbol.for("react.profiler") : 60114, s = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, f = e ? Symbol.for("react.forward_ref") : 60112, d = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, h = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, y = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
  function v(S) {
    if (typeof S == "object" && S !== null) {
      var T = S.$$typeof;
      switch (T) {
        case t:
          switch (S = S.type, S) {
            case c:
            case u:
            case r:
            case i:
            case o:
            case d:
              return S;
            default:
              switch (S = S && S.$$typeof, S) {
                case l:
                case f:
                case g:
                case h:
                case s:
                  return S;
                default:
                  return T;
              }
          }
        case n:
          return T;
      }
    }
  }
  function w(S) {
    return v(S) === u;
  }
  return lt.AsyncMode = c, lt.ConcurrentMode = u, lt.ContextConsumer = l, lt.ContextProvider = s, lt.Element = t, lt.ForwardRef = f, lt.Fragment = r, lt.Lazy = g, lt.Memo = h, lt.Portal = n, lt.Profiler = i, lt.StrictMode = o, lt.Suspense = d, lt.isAsyncMode = function(S) {
    return w(S) || v(S) === c;
  }, lt.isConcurrentMode = w, lt.isContextConsumer = function(S) {
    return v(S) === l;
  }, lt.isContextProvider = function(S) {
    return v(S) === s;
  }, lt.isElement = function(S) {
    return typeof S == "object" && S !== null && S.$$typeof === t;
  }, lt.isForwardRef = function(S) {
    return v(S) === f;
  }, lt.isFragment = function(S) {
    return v(S) === r;
  }, lt.isLazy = function(S) {
    return v(S) === g;
  }, lt.isMemo = function(S) {
    return v(S) === h;
  }, lt.isPortal = function(S) {
    return v(S) === n;
  }, lt.isProfiler = function(S) {
    return v(S) === i;
  }, lt.isStrictMode = function(S) {
    return v(S) === o;
  }, lt.isSuspense = function(S) {
    return v(S) === d;
  }, lt.isValidElementType = function(S) {
    return typeof S == "string" || typeof S == "function" || S === r || S === u || S === i || S === o || S === d || S === p || typeof S == "object" && S !== null && (S.$$typeof === g || S.$$typeof === h || S.$$typeof === s || S.$$typeof === l || S.$$typeof === f || S.$$typeof === y || S.$$typeof === x || S.$$typeof === E || S.$$typeof === m);
  }, lt.typeOf = v, lt;
}
var ct = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Gm;
function zO() {
  return Gm || (Gm = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, i = e ? Symbol.for("react.profiler") : 60114, s = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, f = e ? Symbol.for("react.forward_ref") : 60112, d = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, h = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, y = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
    function v(j) {
      return typeof j == "string" || typeof j == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      j === r || j === u || j === i || j === o || j === d || j === p || typeof j == "object" && j !== null && (j.$$typeof === g || j.$$typeof === h || j.$$typeof === s || j.$$typeof === l || j.$$typeof === f || j.$$typeof === y || j.$$typeof === x || j.$$typeof === E || j.$$typeof === m);
    }
    function w(j) {
      if (typeof j == "object" && j !== null) {
        var pe = j.$$typeof;
        switch (pe) {
          case t:
            var ce = j.type;
            switch (ce) {
              case c:
              case u:
              case r:
              case i:
              case o:
              case d:
                return ce;
              default:
                var be = ce && ce.$$typeof;
                switch (be) {
                  case l:
                  case f:
                  case g:
                  case h:
                  case s:
                    return be;
                  default:
                    return pe;
                }
            }
          case n:
            return pe;
        }
      }
    }
    var S = c, T = u, C = l, R = s, I = t, b = f, k = r, P = g, A = h, O = n, _ = i, $ = o, D = d, z = !1;
    function B(j) {
      return z || (z = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), L(j) || w(j) === c;
    }
    function L(j) {
      return w(j) === u;
    }
    function F(j) {
      return w(j) === l;
    }
    function W(j) {
      return w(j) === s;
    }
    function U(j) {
      return typeof j == "object" && j !== null && j.$$typeof === t;
    }
    function Z(j) {
      return w(j) === f;
    }
    function Q(j) {
      return w(j) === r;
    }
    function ee(j) {
      return w(j) === g;
    }
    function te(j) {
      return w(j) === h;
    }
    function q(j) {
      return w(j) === n;
    }
    function oe(j) {
      return w(j) === i;
    }
    function G(j) {
      return w(j) === o;
    }
    function ne(j) {
      return w(j) === d;
    }
    ct.AsyncMode = S, ct.ConcurrentMode = T, ct.ContextConsumer = C, ct.ContextProvider = R, ct.Element = I, ct.ForwardRef = b, ct.Fragment = k, ct.Lazy = P, ct.Memo = A, ct.Portal = O, ct.Profiler = _, ct.StrictMode = $, ct.Suspense = D, ct.isAsyncMode = B, ct.isConcurrentMode = L, ct.isContextConsumer = F, ct.isContextProvider = W, ct.isElement = U, ct.isForwardRef = Z, ct.isFragment = Q, ct.isLazy = ee, ct.isMemo = te, ct.isPortal = q, ct.isProfiler = oe, ct.isStrictMode = G, ct.isSuspense = ne, ct.isValidElementType = v, ct.typeOf = w;
  }()), ct;
}
var Xm;
function VO() {
  return Xm || (Xm = 1, process.env.NODE_ENV === "production" ? ml.exports = FO() : ml.exports = zO()), ml.exports;
}
var bd, Zm;
function jO() {
  if (Zm) return bd;
  Zm = 1;
  var e = VO(), t = {
    childContextTypes: !0,
    contextType: !0,
    contextTypes: !0,
    defaultProps: !0,
    displayName: !0,
    getDefaultProps: !0,
    getDerivedStateFromError: !0,
    getDerivedStateFromProps: !0,
    mixins: !0,
    propTypes: !0,
    type: !0
  }, n = {
    name: !0,
    length: !0,
    prototype: !0,
    caller: !0,
    callee: !0,
    arguments: !0,
    arity: !0
  }, r = {
    $$typeof: !0,
    render: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0
  }, o = {
    $$typeof: !0,
    compare: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0,
    type: !0
  }, i = {};
  i[e.ForwardRef] = r, i[e.Memo] = o;
  function s(g) {
    return e.isMemo(g) ? o : i[g.$$typeof] || t;
  }
  var l = Object.defineProperty, c = Object.getOwnPropertyNames, u = Object.getOwnPropertySymbols, f = Object.getOwnPropertyDescriptor, d = Object.getPrototypeOf, p = Object.prototype;
  function h(g, m, y) {
    if (typeof m != "string") {
      if (p) {
        var x = d(m);
        x && x !== p && h(g, x, y);
      }
      var E = c(m);
      u && (E = E.concat(u(m)));
      for (var v = s(g), w = s(m), S = 0; S < E.length; ++S) {
        var T = E[S];
        if (!n[T] && !(y && y[T]) && !(w && w[T]) && !(v && v[T])) {
          var C = f(m, T);
          try {
            l(g, T, C);
          } catch {
          }
        }
      }
    }
    return g;
  }
  return bd = h, bd;
}
jO();
var HO = !0;
function pv(e, t, n) {
  var r = "";
  return n.split(" ").forEach(function(o) {
    e[o] !== void 0 ? t.push(e[o] + ";") : o && (r += o + " ");
  }), r;
}
var Dp = function(t, n, r) {
  var o = t.key + "-" + n.name;
  // we only need to add the styles to the registered cache if the
  // class name could be used further down
  // the tree but if it's a string tag, we know it won't
  // so we don't have to add it to registered cache.
  // this improves memory usage since we can avoid storing the whole style string
  (r === !1 || // we need to always store it if we're in compat mode and
  // in node since emotion-server relies on whether a style is in
  // the registered cache to know whether a style is global or not
  // also, note that this check will be dead code eliminated in the browser
  HO === !1) && t.registered[o] === void 0 && (t.registered[o] = n.styles);
}, Bp = function(t, n, r) {
  Dp(t, n, r);
  var o = t.key + "-" + n.name;
  if (t.inserted[n.name] === void 0) {
    var i = n;
    do
      t.insert(n === i ? "." + o : "", i, t.sheet, !0), i = i.next;
    while (i !== void 0);
  }
};
function WO(e) {
  for (var t = 0, n, r = 0, o = e.length; o >= 4; ++r, o -= 4)
    n = e.charCodeAt(r) & 255 | (e.charCodeAt(++r) & 255) << 8 | (e.charCodeAt(++r) & 255) << 16 | (e.charCodeAt(++r) & 255) << 24, n = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16), n ^= /* k >>> r: */
    n >>> 24, t = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  switch (o) {
    case 3:
      t ^= (e.charCodeAt(r + 2) & 255) << 16;
    case 2:
      t ^= (e.charCodeAt(r + 1) & 255) << 8;
    case 1:
      t ^= e.charCodeAt(r) & 255, t = /* Math.imul(h, m): */
      (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  }
  return t ^= t >>> 13, t = /* Math.imul(h, m): */
  (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16), ((t ^ t >>> 15) >>> 0).toString(36);
}
var UO = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  scale: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, qO = /[A-Z]|^ms/g, YO = /_EMO_([^_]+?)_([^]*?)_EMO_/g, hv = function(t) {
  return t.charCodeAt(1) === 45;
}, Qm = function(t) {
  return t != null && typeof t != "boolean";
}, vd = /* @__PURE__ */ dv(function(e) {
  return hv(e) ? e : e.replace(qO, "-$&").toLowerCase();
}), Jm = function(t, n) {
  switch (t) {
    case "animation":
    case "animationName":
      if (typeof n == "string")
        return n.replace(YO, function(r, o, i) {
          return Cr = {
            name: o,
            styles: i,
            next: Cr
          }, o;
        });
  }
  return UO[t] !== 1 && !hv(t) && typeof n == "number" && n !== 0 ? n + "px" : n;
};
function ca(e, t, n) {
  if (n == null)
    return "";
  var r = n;
  if (r.__emotion_styles !== void 0)
    return r;
  switch (typeof n) {
    case "boolean":
      return "";
    case "object": {
      var o = n;
      if (o.anim === 1)
        return Cr = {
          name: o.name,
          styles: o.styles,
          next: Cr
        }, o.name;
      var i = n;
      if (i.styles !== void 0) {
        var s = i.next;
        if (s !== void 0)
          for (; s !== void 0; )
            Cr = {
              name: s.name,
              styles: s.styles,
              next: Cr
            }, s = s.next;
        var l = i.styles + ";";
        return l;
      }
      return KO(e, t, n);
    }
    case "function": {
      if (e !== void 0) {
        var c = Cr, u = n(e);
        return Cr = c, ca(e, t, u);
      }
      break;
    }
  }
  var f = n;
  if (t == null)
    return f;
  var d = t[f];
  return d !== void 0 ? d : f;
}
function KO(e, t, n) {
  var r = "";
  if (Array.isArray(n))
    for (var o = 0; o < n.length; o++)
      r += ca(e, t, n[o]) + ";";
  else
    for (var i in n) {
      var s = n[i];
      if (typeof s != "object") {
        var l = s;
        t != null && t[l] !== void 0 ? r += i + "{" + t[l] + "}" : Qm(l) && (r += vd(i) + ":" + Jm(i, l) + ";");
      } else if (Array.isArray(s) && typeof s[0] == "string" && (t == null || t[s[0]] === void 0))
        for (var c = 0; c < s.length; c++)
          Qm(s[c]) && (r += vd(i) + ":" + Jm(i, s[c]) + ";");
      else {
        var u = ca(e, t, s);
        switch (i) {
          case "animation":
          case "animationName": {
            r += vd(i) + ":" + u + ";";
            break;
          }
          default:
            r += i + "{" + u + "}";
        }
      }
    }
  return r;
}
var eg = /label:\s*([^\s;{]+)\s*(;|$)/g, Cr;
function ls(e, t, n) {
  if (e.length === 1 && typeof e[0] == "object" && e[0] !== null && e[0].styles !== void 0)
    return e[0];
  var r = !0, o = "";
  Cr = void 0;
  var i = e[0];
  if (i == null || i.raw === void 0)
    r = !1, o += ca(n, t, i);
  else {
    var s = i;
    o += s[0];
  }
  for (var l = 1; l < e.length; l++)
    if (o += ca(n, t, e[l]), r) {
      var c = i;
      o += c[l];
    }
  eg.lastIndex = 0;
  for (var u = "", f; (f = eg.exec(o)) !== null; )
    u += "-" + f[1];
  var d = WO(o) + u;
  return {
    name: d,
    styles: o,
    next: Cr
  };
}
var GO = function(t) {
  return t();
}, mv = M.useInsertionEffect ? M.useInsertionEffect : !1, gv = mv || GO, tg = mv || M.useLayoutEffect, yv = /* @__PURE__ */ M.createContext(
  // we're doing this to avoid preconstruct's dead code elimination in this one case
  // because this module is primarily intended for the browser and node
  // but it's also required in react native and similar environments sometimes
  // and we could have a special build just for that
  // but this is much easier and the native packages
  // might use a different theme context in the future anyway
  typeof HTMLElement < "u" ? /* @__PURE__ */ LO({
    key: "css"
  }) : null
);
yv.Provider;
var Lp = function(t) {
  return /* @__PURE__ */ Aa(function(n, r) {
    var o = Ro(yv);
    return t(n, o, r);
  });
}, cs = /* @__PURE__ */ M.createContext({}), Fp = {}.hasOwnProperty, Sf = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__", XO = function(t, n) {
  var r = {};
  for (var o in n)
    Fp.call(n, o) && (r[o] = n[o]);
  return r[Sf] = t, r;
}, ZO = function(t) {
  var n = t.cache, r = t.serialized, o = t.isStringTag;
  return Dp(n, r, o), gv(function() {
    return Bp(n, r, o);
  }), null;
}, QO = /* @__PURE__ */ Lp(function(e, t, n) {
  var r = e.css;
  typeof r == "string" && t.registered[r] !== void 0 && (r = t.registered[r]);
  var o = e[Sf], i = [r], s = "";
  typeof e.className == "string" ? s = pv(t.registered, i, e.className) : e.className != null && (s = e.className + " ");
  var l = ls(i, void 0, M.useContext(cs));
  s += t.key + "-" + l.name;
  var c = {};
  for (var u in e)
    Fp.call(e, u) && u !== "css" && u !== Sf && (c[u] = e[u]);
  return c.className = s, n && (c.ref = n), /* @__PURE__ */ M.createElement(M.Fragment, null, /* @__PURE__ */ M.createElement(ZO, {
    cache: t,
    serialized: l,
    isStringTag: typeof o == "string"
  }), /* @__PURE__ */ M.createElement(o, c));
}), JO = QO, ng = function(t, n) {
  var r = arguments;
  if (n == null || !Fp.call(n, "css"))
    return M.createElement.apply(void 0, r);
  var o = r.length, i = new Array(o);
  i[0] = JO, i[1] = XO(t, n);
  for (var s = 2; s < o; s++)
    i[s] = r[s];
  return M.createElement.apply(null, i);
};
(function(e) {
  var t;
  t || (t = e.JSX || (e.JSX = {}));
})(ng || (ng = {}));
var bv = /* @__PURE__ */ Lp(function(e, t) {
  var n = e.styles, r = ls([n], void 0, M.useContext(cs)), o = M.useRef();
  return tg(function() {
    var i = t.key + "-global", s = new t.sheet.constructor({
      key: i,
      nonce: t.sheet.nonce,
      container: t.sheet.container,
      speedy: t.sheet.isSpeedy
    }), l = !1, c = document.querySelector('style[data-emotion="' + i + " " + r.name + '"]');
    return t.sheet.tags.length && (s.before = t.sheet.tags[0]), c !== null && (l = !0, c.setAttribute("data-emotion", i), s.hydrate([c])), o.current = [s, l], function() {
      s.flush();
    };
  }, [t]), tg(function() {
    var i = o.current, s = i[0], l = i[1];
    if (l) {
      i[1] = !1;
      return;
    }
    if (r.next !== void 0 && Bp(t, r.next, !0), s.tags.length) {
      var c = s.tags[s.tags.length - 1].nextElementSibling;
      s.before = c, s.flush();
    }
    t.insert("", r, s, !1);
  }, [t, r.name]), null;
});
function us() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return ls(t);
}
function $o() {
  var e = us.apply(void 0, arguments), t = "animation-" + e.name;
  return {
    name: t,
    styles: "@keyframes " + t + "{" + e.styles + "}",
    anim: 1,
    toString: function() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
}
var ek = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, tk = /* @__PURE__ */ dv(
  function(e) {
    return ek.test(e) || e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && e.charCodeAt(2) < 91;
  }
  /* Z+1 */
), nk = tk, rk = function(t) {
  return t !== "theme";
}, rg = function(t) {
  return typeof t == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  t.charCodeAt(0) > 96 ? nk : rk;
}, og = function(t, n, r) {
  var o;
  if (n) {
    var i = n.shouldForwardProp;
    o = t.__emotion_forwardProp && i ? function(s) {
      return t.__emotion_forwardProp(s) && i(s);
    } : i;
  }
  return typeof o != "function" && r && (o = t.__emotion_forwardProp), o;
}, ok = function(t) {
  var n = t.cache, r = t.serialized, o = t.isStringTag;
  return Dp(n, r, o), gv(function() {
    return Bp(n, r, o);
  }), null;
}, ik = function e(t, n) {
  var r = t.__emotion_real === t, o = r && t.__emotion_base || t, i, s;
  n !== void 0 && (i = n.label, s = n.target);
  var l = og(t, n, r), c = l || rg(o), u = !c("as");
  return function() {
    var f = arguments, d = r && t.__emotion_styles !== void 0 ? t.__emotion_styles.slice(0) : [];
    if (i !== void 0 && d.push("label:" + i + ";"), f[0] == null || f[0].raw === void 0)
      d.push.apply(d, f);
    else {
      var p = f[0];
      d.push(p[0]);
      for (var h = f.length, g = 1; g < h; g++)
        d.push(f[g], p[g]);
    }
    var m = Lp(function(y, x, E) {
      var v = u && y.as || o, w = "", S = [], T = y;
      if (y.theme == null) {
        T = {};
        for (var C in y)
          T[C] = y[C];
        T.theme = M.useContext(cs);
      }
      typeof y.className == "string" ? w = pv(x.registered, S, y.className) : y.className != null && (w = y.className + " ");
      var R = ls(d.concat(S), x.registered, T);
      w += x.key + "-" + R.name, s !== void 0 && (w += " " + s);
      var I = u && l === void 0 ? rg(v) : c, b = {};
      for (var k in y)
        u && k === "as" || I(k) && (b[k] = y[k]);
      return b.className = w, E && (b.ref = E), /* @__PURE__ */ M.createElement(M.Fragment, null, /* @__PURE__ */ M.createElement(ok, {
        cache: x,
        serialized: R,
        isStringTag: typeof v == "string"
      }), /* @__PURE__ */ M.createElement(v, b));
    });
    return m.displayName = i !== void 0 ? i : "Styled(" + (typeof o == "string" ? o : o.displayName || o.name || "Component") + ")", m.defaultProps = t.defaultProps, m.__emotion_real = m, m.__emotion_base = o, m.__emotion_styles = d, m.__emotion_forwardProp = l, Object.defineProperty(m, "toString", {
      value: function() {
        return "." + s;
      }
    }), m.withComponent = function(y, x) {
      var E = e(y, cc({}, n, x, {
        shouldForwardProp: og(m, x, !0)
      }));
      return E.apply(void 0, d);
    }, m;
  };
}, sk = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], dc = ik.bind(null);
sk.forEach(function(e) {
  dc[e] = dc(e);
});
function ak(e) {
  return e == null || Object.keys(e).length === 0;
}
function zp(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e;
  return /* @__PURE__ */ N(bv, {
    styles: typeof t == "function" ? (o) => t(ak(o) ? n : o) : t
  });
}
process.env.NODE_ENV !== "production" && (zp.propTypes = {
  defaultTheme: a.object,
  styles: a.oneOfType([a.array, a.string, a.object, a.func])
});
/**
 * @mui/styled-engine v7.0.1
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function vv(e, t) {
  const n = dc(e, t);
  return process.env.NODE_ENV !== "production" ? (...r) => {
    const o = typeof e == "string" ? `"${e}"` : "component";
    return r.length === 0 ? console.error([`MUI: Seems like you called \`styled(${o})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : r.some((i) => i === void 0) && console.error(`MUI: the styled(${o})(...args) API requires all its args to be defined.`), n(...r);
  } : n;
}
function lk(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const ig = [];
function sg(e) {
  return ig[0] = e, ls(ig);
}
const ck = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, r) => n.val - r.val), t.reduce((n, r) => ({
    ...n,
    [r.key]: r.val
  }), {});
};
function uk(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: r = 5,
    ...o
  } = e, i = ck(t), s = Object.keys(i);
  function l(p) {
    return `@media (min-width:${typeof t[p] == "number" ? t[p] : p}${n})`;
  }
  function c(p) {
    return `@media (max-width:${(typeof t[p] == "number" ? t[p] : p) - r / 100}${n})`;
  }
  function u(p, h) {
    const g = s.indexOf(h);
    return `@media (min-width:${typeof t[p] == "number" ? t[p] : p}${n}) and (max-width:${(g !== -1 && typeof t[s[g]] == "number" ? t[s[g]] : h) - r / 100}${n})`;
  }
  function f(p) {
    return s.indexOf(p) + 1 < s.length ? u(p, s[s.indexOf(p) + 1]) : l(p);
  }
  function d(p) {
    const h = s.indexOf(p);
    return h === 0 ? l(s[1]) : h === s.length - 1 ? c(s[h]) : u(p, s[s.indexOf(p) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: s,
    values: i,
    up: l,
    down: c,
    between: u,
    only: f,
    not: d,
    unit: n,
    ...o
  };
}
const dk = {
  borderRadius: 4
};
function xv(e = 8, t = Pp({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...r) => (process.env.NODE_ENV !== "production" && (r.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${r.length}`)), (r.length === 0 ? [1] : r).map((i) => {
    const s = t(i);
    return typeof s == "number" ? `${s}px` : s;
  }).join(" "));
  return n.mui = !0, n;
}
function fk(e, t) {
  var r;
  const n = this;
  if (n.vars) {
    if (!((r = n.colorSchemes) != null && r[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let o = n.getColorSchemeSelector(e);
    return o === "&" ? t : ((o.includes("data-") || o.includes(".")) && (o = `*:where(${o.replace(/\s*&$/, "")}) &`), {
      [o]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function lu(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: r = {},
    spacing: o,
    shape: i = {},
    ...s
  } = e, l = uk(n), c = xv(o);
  let u = Vn({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...r
    },
    spacing: c,
    shape: {
      ...dk,
      ...i
    }
  }, s);
  return u = vC(u), u.applyStyles = fk, u = t.reduce((f, d) => Vn(f, d), u), u.unstable_sxConfig = {
    ...Fa,
    ...s == null ? void 0 : s.unstable_sxConfig
  }, u.unstable_sx = function(d) {
    return To({
      sx: d,
      theme: this
    });
  }, u;
}
function pk(e) {
  return Object.keys(e).length === 0;
}
function Vp(e = null) {
  const t = M.useContext(cs);
  return !t || pk(t) ? e : t;
}
const hk = lu();
function cu(e = hk) {
  return Vp(e);
}
function wv({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const r = cu(n), o = typeof e == "function" ? e(t && r[t] || r) : e;
  return /* @__PURE__ */ N(zp, {
    styles: o
  });
}
process.env.NODE_ENV !== "production" && (wv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: a.object,
  /**
   * @ignore
   */
  styles: a.oneOfType([a.array, a.func, a.number, a.object, a.string, a.bool]),
  /**
   * @ignore
   */
  themeId: a.string
});
const ag = (e) => e, mk = () => {
  let e = ag;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = ag;
    }
  };
}, Sv = mk();
function gk(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: r = "MuiBox-root",
    generateClassName: o
  } = e, i = vv("div", {
    shouldForwardProp: (l) => l !== "theme" && l !== "sx" && l !== "as"
  })(To);
  return /* @__PURE__ */ M.forwardRef(function(c, u) {
    const f = cu(n), {
      className: d,
      component: p = "div",
      ...h
    } = ov(c);
    return /* @__PURE__ */ N(i, {
      as: p,
      ref: u,
      className: Oe(d, o ? o(r) : r),
      theme: t && f[t] || f,
      ...h
    });
  });
}
const yk = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function Et(e, t, n = "Mui") {
  const r = yk[t];
  return r ? `${n}-${r}` : `${Sv.generate(e)}-${t}`;
}
function Rt(e, t, n = "Mui") {
  const r = {};
  return t.forEach((o) => {
    r[o] = Et(e, o, n);
  }), r;
}
function Ev(e, t = "") {
  return e.displayName || e.name || t;
}
function lg(e, t, n) {
  const r = Ev(t);
  return e.displayName || (r !== "" ? `${n}(${r})` : n);
}
function bk(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return Ev(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case pr.ForwardRef:
          return lg(e, e.render, "ForwardRef");
        case pr.Memo:
          return lg(e, e.type, "memo");
        default:
          return;
      }
  }
}
function Tv(e) {
  const {
    variants: t,
    ...n
  } = e, r = {
    variants: t,
    style: sg(n),
    isProcessed: !0
  };
  return r.style === n || t && t.forEach((o) => {
    typeof o.style != "function" && (o.style = sg(o.style));
  }), r;
}
const vk = lu();
function xd(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function xk(e) {
  return e ? (t, n) => n[e] : null;
}
function wk(e, t, n) {
  e.theme = Tk(e.theme) ? n : e.theme[t] || e.theme;
}
function Gl(e, t) {
  const n = typeof t == "function" ? t(e) : t;
  if (Array.isArray(n))
    return n.flatMap((r) => Gl(e, r));
  if (Array.isArray(n == null ? void 0 : n.variants)) {
    let r;
    if (n.isProcessed)
      r = n.style;
    else {
      const {
        variants: o,
        ...i
      } = n;
      r = i;
    }
    return Cv(e, n.variants, [r]);
  }
  return n != null && n.isProcessed ? n.style : n;
}
function Cv(e, t, n = []) {
  var o;
  let r;
  e: for (let i = 0; i < t.length; i += 1) {
    const s = t[i];
    if (typeof s.props == "function") {
      if (r ?? (r = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !s.props(r))
        continue;
    } else
      for (const l in s.props)
        if (e[l] !== s.props[l] && ((o = e.ownerState) == null ? void 0 : o[l]) !== s.props[l])
          continue e;
    typeof s.style == "function" ? (r ?? (r = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(s.style(r))) : n.push(s.style);
  }
  return n;
}
function Ov(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = vk,
    rootShouldForwardProp: r = xd,
    slotShouldForwardProp: o = xd
  } = e;
  function i(l) {
    wk(l, t, n);
  }
  return (l, c = {}) => {
    lk(l, (S) => S.filter((T) => T !== To));
    const {
      name: u,
      slot: f,
      skipVariantsResolver: d,
      skipSx: p,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: h = xk(kv(f)),
      ...g
    } = c, m = d !== void 0 ? d : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      f && f !== "Root" && f !== "root" || !1
    ), y = p || !1;
    let x = xd;
    f === "Root" || f === "root" ? x = r : f ? x = o : Ck(l) && (x = void 0);
    const E = vv(l, {
      shouldForwardProp: x,
      label: Ek(u, f),
      ...g
    }), v = (S) => {
      if (typeof S == "function" && S.__emotion_real !== S)
        return function(C) {
          return Gl(C, S);
        };
      if (kr(S)) {
        const T = Tv(S);
        return T.variants ? function(R) {
          return Gl(R, T);
        } : T.style;
      }
      return S;
    }, w = (...S) => {
      const T = [], C = S.map(v), R = [];
      if (T.push(i), u && h && R.push(function(P) {
        var $, D;
        const O = (D = ($ = P.theme.components) == null ? void 0 : $[u]) == null ? void 0 : D.styleOverrides;
        if (!O)
          return null;
        const _ = {};
        for (const z in O)
          _[z] = Gl(P, O[z]);
        return h(P, _);
      }), u && !m && R.push(function(P) {
        var _, $;
        const A = P.theme, O = ($ = (_ = A == null ? void 0 : A.components) == null ? void 0 : _[u]) == null ? void 0 : $.variants;
        return O ? Cv(P, O) : null;
      }), y || R.push(To), Array.isArray(C[0])) {
        const k = C.shift(), P = new Array(T.length).fill(""), A = new Array(R.length).fill("");
        let O;
        O = [...P, ...k, ...A], O.raw = [...P, ...k.raw, ...A], T.unshift(O);
      }
      const I = [...T, ...C, ...R], b = E(...I);
      return l.muiName && (b.muiName = l.muiName), process.env.NODE_ENV !== "production" && (b.displayName = Sk(u, f, l)), b;
    };
    return E.withConfig && (w.withConfig = E.withConfig), w;
  };
}
function Sk(e, t, n) {
  return e ? `${e}${Ee(t || "")}` : `Styled(${bk(n)})`;
}
function Ek(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${kv(t || "Root")}`), n;
}
function Tk(e) {
  for (const t in e)
    return !1;
  return !0;
}
function Ck(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function kv(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
const Ok = Ov();
function ua(e, t) {
  const n = {
    ...t
  };
  for (const r in e)
    if (Object.prototype.hasOwnProperty.call(e, r)) {
      const o = r;
      if (o === "components" || o === "slots")
        n[o] = {
          ...e[o],
          ...n[o]
        };
      else if (o === "componentsProps" || o === "slotProps") {
        const i = e[o], s = t[o];
        if (!s)
          n[o] = i || {};
        else if (!i)
          n[o] = s;
        else {
          n[o] = {
            ...s
          };
          for (const l in i)
            if (Object.prototype.hasOwnProperty.call(i, l)) {
              const c = l;
              n[o][c] = ua(i[c], s[c]);
            }
        }
      } else n[o] === void 0 && (n[o] = e[o]);
    }
  return n;
}
function Rv(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  return !t || !t.components || !t.components[n] || !t.components[n].defaultProps ? r : ua(t.components[n].defaultProps, r);
}
function kk({
  props: e,
  name: t,
  defaultTheme: n,
  themeId: r
}) {
  let o = cu(n);
  return r && (o = o[r] || o), Rv({
    theme: o,
    name: t,
    props: e
  });
}
const Ar = typeof window < "u" ? M.useLayoutEffect : M.useEffect;
function Rk(e, t, n, r, o) {
  const [i, s] = M.useState(() => o && n ? n(e).matches : r ? r(e).matches : t);
  return Ar(() => {
    if (!n)
      return;
    const l = n(e), c = () => {
      s(l.matches);
    };
    return c(), l.addEventListener("change", c), () => {
      l.removeEventListener("change", c);
    };
  }, [e, n]), i;
}
const Nk = {
  ...M
}, Nv = Nk.useSyncExternalStore;
function $k(e, t, n, r, o) {
  const i = M.useCallback(() => t, [t]), s = M.useMemo(() => {
    if (o && n)
      return () => n(e).matches;
    if (r !== null) {
      const {
        matches: f
      } = r(e);
      return () => f;
    }
    return i;
  }, [i, e, r, o, n]), [l, c] = M.useMemo(() => {
    if (n === null)
      return [i, () => () => {
      }];
    const f = n(e);
    return [() => f.matches, (d) => (f.addEventListener("change", d), () => {
      f.removeEventListener("change", d);
    })];
  }, [i, n, e]);
  return Nv(c, l, s);
}
function $v(e = {}) {
  const {
    themeId: t
  } = e;
  return function(r, o = {}) {
    let i = Vp();
    i && t && (i = i[t] || i);
    const s = typeof window < "u" && typeof window.matchMedia < "u", {
      defaultMatches: l = !1,
      matchMedia: c = s ? window.matchMedia : null,
      ssrMatchMedia: u = null,
      noSsr: f = !1
    } = Rv({
      name: "MuiUseMediaQuery",
      props: o,
      theme: i
    });
    process.env.NODE_ENV !== "production" && typeof r == "function" && i === null && console.error(["MUI: The `query` argument provided is invalid.", "You are providing a function without a theme in the context.", "One of the parent elements needs to use a ThemeProvider."].join(`
`));
    let d = typeof r == "function" ? r(i) : r;
    d = d.replace(/^@media( ?)/m, "");
    const h = (Nv !== void 0 ? $k : Rk)(d, l, c, u, f);
    return process.env.NODE_ENV !== "production" && M.useDebugValue({
      query: d,
      match: h
    }), h;
  };
}
$v();
function Pk(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function jp(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), Pk(e, t, n);
}
function Ik(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((r) => r + r)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((r, o) => o < 3 ? parseInt(r, 16) : Math.round(parseInt(r, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function Co(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return Co(Ik(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : eo(9, e));
  let r = e.substring(t + 1, e.length - 1), o;
  if (n === "color") {
    if (r = r.split(" "), o = r.shift(), r.length === 4 && r[3].charAt(0) === "/" && (r[3] = r[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(o))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${o}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : eo(10, o));
  } else
    r = r.split(",");
  return r = r.map((i) => parseFloat(i)), {
    type: n,
    values: r,
    colorSpace: o
  };
}
const _k = (e) => {
  const t = Co(e);
  return t.values.slice(0, 3).map((n, r) => t.type.includes("hsl") && r !== 0 ? `${n}%` : n).join(" ");
}, Bs = (e, t) => {
  try {
    return _k(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function uu(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: r
  } = e;
  return t.includes("rgb") ? r = r.map((o, i) => i < 3 ? parseInt(o, 10) : o) : t.includes("hsl") && (r[1] = `${r[1]}%`, r[2] = `${r[2]}%`), t.includes("color") ? r = `${n} ${r.join(" ")}` : r = `${r.join(", ")}`, `${t}(${r})`;
}
function Pv(e) {
  e = Co(e);
  const {
    values: t
  } = e, n = t[0], r = t[1] / 100, o = t[2] / 100, i = r * Math.min(o, 1 - o), s = (u, f = (u + n / 30) % 12) => o - i * Math.max(Math.min(f - 3, 9 - f, 1), -1);
  let l = "rgb";
  const c = [Math.round(s(0) * 255), Math.round(s(8) * 255), Math.round(s(4) * 255)];
  return e.type === "hsla" && (l += "a", c.push(t[3])), uu({
    type: l,
    values: c
  });
}
function Ef(e) {
  e = Co(e);
  let t = e.type === "hsl" || e.type === "hsla" ? Co(Pv(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function cg(e, t) {
  const n = Ef(e), r = Ef(t);
  return (Math.max(n, r) + 0.05) / (Math.min(n, r) + 0.05);
}
function on(e, t) {
  return e = Co(e), t = jp(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, uu(e);
}
function gl(e, t, n) {
  try {
    return on(e, t);
  } catch {
    return e;
  }
}
function ds(e, t) {
  if (e = Co(e), t = jp(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return uu(e);
}
function mt(e, t, n) {
  try {
    return ds(e, t);
  } catch {
    return e;
  }
}
function fs(e, t) {
  if (e = Co(e), t = jp(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return uu(e);
}
function gt(e, t, n) {
  try {
    return fs(e, t);
  } catch {
    return e;
  }
}
function Mk(e, t = 0.15) {
  return Ef(e) > 0.5 ? ds(e, t) : fs(e, t);
}
function yl(e, t, n) {
  try {
    return Mk(e, t);
  } catch {
    return e;
  }
}
function Po(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...r) {
    return e(...r) || t(...r);
  };
}
function Ak(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function Iv(e, t, n, r, o) {
  const i = e[t], s = o || t;
  if (i == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  const c = i.type;
  return typeof c == "function" && !Ak(c) && (l = "Did you accidentally use a plain function component for an element instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${s}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Io = Po(a.element, Iv);
Io.isRequired = Po(a.element.isRequired, Iv);
function Dk(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function Bk(e, t, n, r, o) {
  const i = e[t], s = o || t;
  if (i == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  return typeof i == "function" && !Dk(i) && (l = "Did you accidentally provide a plain function component instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${s}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Hp = Po(a.elementType, Bk), Lk = "exact-prop: ​";
function Va(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [Lk]: (t) => {
      const n = Object.keys(t).filter((r) => !e.hasOwnProperty(r));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((r) => `\`${r}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
function no(e, t, n, r, o) {
  if (process.env.NODE_ENV === "production")
    return null;
  const i = e[t], s = o || t;
  return i == null ? null : i && i.nodeType !== 1 ? new Error(`Invalid ${r} \`${s}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
const co = a.oneOfType([a.func, a.object]);
function Tf(...e) {
  return e.reduce((t, n) => n == null ? t : function(...o) {
    t.apply(this, o), n.apply(this, o);
  }, () => {
  });
}
function Wp(e, t = 166) {
  let n;
  function r(...o) {
    const i = () => {
      e.apply(this, o);
    };
    clearTimeout(n), n = setTimeout(i, t);
  }
  return r.clear = () => {
    clearTimeout(n);
  }, r;
}
function Nn(e) {
  return e && e.ownerDocument || document;
}
function Dr(e) {
  return Nn(e).defaultView || window;
}
function Cf(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
let ug = 0;
function Fk(e) {
  const [t, n] = M.useState(e), r = e || t;
  return M.useEffect(() => {
    t == null && (ug += 1, n(`mui-${ug}`));
  }, [t]), r;
}
const zk = {
  ...M
}, dg = zk.useId;
function Up(e) {
  if (dg !== void 0) {
    const t = dg();
    return e ?? t;
  }
  return Fk(e);
}
function _v({
  controlled: e,
  default: t,
  name: n,
  state: r = "value"
}) {
  const {
    current: o
  } = M.useRef(e !== void 0), [i, s] = M.useState(t), l = o ? e : i;
  if (process.env.NODE_ENV !== "production") {
    M.useEffect(() => {
      o !== (e !== void 0) && console.error([`MUI: A component is changing the ${o ? "" : "un"}controlled ${r} state of ${n} to be ${o ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [r, n, e]);
    const {
      current: u
    } = M.useRef(t);
    M.useEffect(() => {
      !o && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${r} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = M.useCallback((u) => {
    o || s(u);
  }, []);
  return [l, c];
}
function Ir(e) {
  const t = M.useRef(e);
  return Ar(() => {
    t.current = e;
  }), M.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function mn(...e) {
  return M.useMemo(() => e.every((t) => t == null) ? null : (t) => {
    e.forEach((n) => {
      Cf(n, t);
    });
  }, e);
}
const fg = {};
function Mv(e, t) {
  const n = M.useRef(fg);
  return n.current === fg && (n.current = e(t)), n;
}
const Vk = [];
function jk(e) {
  M.useEffect(e, Vk);
}
let Av = class Dv {
  constructor() {
    po(this, "currentId", null);
    po(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    po(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new Dv();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
};
function Ri() {
  const e = Mv(Av.create).current;
  return jk(e.disposeEffect), e;
}
function fc(e) {
  try {
    return e.matches(":focus-visible");
  } catch {
    process.env.NODE_ENV !== "production" && !/jsdom/.test(window.navigator.userAgent) && console.warn(["MUI: The `:focus-visible` pseudo class is not supported in this browser.", "Some components rely on this feature to work properly."].join(`
`));
  }
  return !1;
}
function Hk(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
const Bv = (e) => {
  const t = M.useRef({});
  return M.useEffect(() => {
    t.current = e;
  }), t.current;
};
function Wk(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function Lv(e, t, n, r) {
  const o = e[t];
  if (o == null || !Number.isInteger(o)) {
    const i = Wk(o);
    return new RangeError(`Invalid ${r} \`${t}\` of type \`${i}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function Fv(e, t, ...n) {
  return e[t] === void 0 ? null : Lv(e, t, ...n);
}
function Of() {
  return null;
}
Fv.isRequired = Lv;
Of.isRequired = Of;
const qp = process.env.NODE_ENV === "production" ? Of : Fv;
function Uk(e) {
  return typeof e == "string";
}
function zv(e, t, n) {
  return e === void 0 || Uk(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function Vv(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((r) => r.match(/^on[A-Z]/) && typeof e[r] == "function" && !t.includes(r)).forEach((r) => {
    n[r] = e[r];
  }), n;
}
function pg(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function jv(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: r,
    externalForwardedProps: o,
    className: i
  } = e;
  if (!t) {
    const h = Oe(n == null ? void 0 : n.className, i, o == null ? void 0 : o.className, r == null ? void 0 : r.className), g = {
      ...n == null ? void 0 : n.style,
      ...o == null ? void 0 : o.style,
      ...r == null ? void 0 : r.style
    }, m = {
      ...n,
      ...o,
      ...r
    };
    return h.length > 0 && (m.className = h), Object.keys(g).length > 0 && (m.style = g), {
      props: m,
      internalRef: void 0
    };
  }
  const s = Vv({
    ...o,
    ...r
  }), l = pg(r), c = pg(o), u = t(s), f = Oe(u == null ? void 0 : u.className, n == null ? void 0 : n.className, i, o == null ? void 0 : o.className, r == null ? void 0 : r.className), d = {
    ...u == null ? void 0 : u.style,
    ...n == null ? void 0 : n.style,
    ...o == null ? void 0 : o.style,
    ...r == null ? void 0 : r.style
  }, p = {
    ...u,
    ...n,
    ...c,
    ...l
  };
  return f.length > 0 && (p.className = f), Object.keys(d).length > 0 && (p.style = d), {
    props: p,
    internalRef: u.ref
  };
}
function Hv(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function kf(e) {
  var d;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: r,
    skipResolvingSlotProps: o = !1,
    ...i
  } = e, s = o ? {} : Hv(n, r), {
    props: l,
    internalRef: c
  } = jv({
    ...i,
    externalSlotProps: s
  }), u = mn(c, s == null ? void 0 : s.ref, (d = e.additionalProps) == null ? void 0 : d.ref);
  return zv(t, {
    ...l,
    ref: u
  }, r);
}
function ii(e) {
  var t;
  return parseInt(M.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
const Yp = /* @__PURE__ */ M.createContext(null);
process.env.NODE_ENV !== "production" && (Yp.displayName = "ThemeContext");
function Kp() {
  const e = M.useContext(Yp);
  return process.env.NODE_ENV !== "production" && M.useDebugValue(e), e;
}
const qk = typeof Symbol == "function" && Symbol.for, Yk = qk ? Symbol.for("mui.nested") : "__THEME_NESTED__";
function Kk(e, t) {
  if (typeof t == "function") {
    const n = t(e);
    return process.env.NODE_ENV !== "production" && (n || console.error(["MUI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join(`
`))), n;
  }
  return {
    ...e,
    ...t
  };
}
function pc(e) {
  const {
    children: t,
    theme: n
  } = e, r = Kp();
  process.env.NODE_ENV !== "production" && r === null && typeof n == "function" && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const o = M.useMemo(() => {
    const i = r === null ? {
      ...n
    } : Kk(r, n);
    return i != null && (i[Yk] = r !== null), i;
  }, [n, r]);
  return /* @__PURE__ */ N(Yp.Provider, {
    value: o,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (pc.propTypes = {
  /**
   * Your component tree.
   */
  children: a.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: a.oneOfType([a.object, a.func]).isRequired
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (pc.propTypes = Va(pc.propTypes));
const Wv = /* @__PURE__ */ M.createContext();
function Uv({
  value: e,
  ...t
}) {
  return /* @__PURE__ */ N(Wv.Provider, {
    value: e ?? !0,
    ...t
  });
}
process.env.NODE_ENV !== "production" && (Uv.propTypes = {
  children: a.node,
  value: a.bool
});
const du = () => M.useContext(Wv) ?? !1, qv = /* @__PURE__ */ M.createContext(void 0);
function Yv({
  value: e,
  children: t
}) {
  return /* @__PURE__ */ N(qv.Provider, {
    value: e,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (Yv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: a.node,
  /**
   * @ignore
   */
  value: a.object
});
function Gk(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  if (!t || !t.components || !t.components[n])
    return r;
  const o = t.components[n];
  return o.defaultProps ? ua(o.defaultProps, r) : !o.styleOverrides && !o.variants ? ua(o, r) : r;
}
function Xk({
  props: e,
  name: t
}) {
  const n = M.useContext(qv);
  return Gk({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
const hg = {};
function mg(e, t, n, r = !1) {
  return M.useMemo(() => {
    const o = e && t[e] || t;
    if (typeof n == "function") {
      const i = n(o), s = e ? {
        ...t,
        [e]: i
      } : i;
      return r ? () => s : s;
    }
    return e ? {
      ...t,
      [e]: n
    } : {
      ...t,
      ...n
    };
  }, [e, t, n, r]);
}
function da(e) {
  const {
    children: t,
    theme: n,
    themeId: r
  } = e, o = Vp(hg), i = Kp() || hg;
  process.env.NODE_ENV !== "production" && (o === null && typeof n == "function" || r && o && !o[r] && typeof n == "function") && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const s = mg(r, o, n), l = mg(r, i, n, !0), c = (r ? s[r] : s).direction === "rtl";
  return /* @__PURE__ */ N(pc, {
    theme: l,
    children: /* @__PURE__ */ N(cs.Provider, {
      value: s,
      children: /* @__PURE__ */ N(Uv, {
        value: c,
        children: /* @__PURE__ */ N(Yv, {
          value: r ? s[r].components : s.components,
          children: t
        })
      })
    })
  });
}
process.env.NODE_ENV !== "production" && (da.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Your component tree.
   */
  children: a.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: a.oneOfType([a.func, a.object]).isRequired,
  /**
   * The design system's unique id for getting the corresponded theme when there are multiple design systems.
   */
  themeId: a.string
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (da.propTypes = Va(da.propTypes));
const gg = {
  theme: void 0
};
function Zk(e) {
  let t, n;
  return function(o) {
    let i = t;
    return (i === void 0 || o.theme !== n) && (gg.theme = o.theme, i = Tv(e(gg)), t = i, n = o.theme), i;
  };
}
const Gp = "mode", Xp = "color-scheme", Qk = "data-color-scheme";
function Jk(e) {
  const {
    defaultMode: t = "system",
    defaultLightColorScheme: n = "light",
    defaultDarkColorScheme: r = "dark",
    modeStorageKey: o = Gp,
    colorSchemeStorageKey: i = Xp,
    attribute: s = Qk,
    colorSchemeNode: l = "document.documentElement",
    nonce: c
  } = e || {};
  let u = "", f = s;
  if (s === "class" && (f = ".%s"), s === "data" && (f = "[data-%s]"), f.startsWith(".")) {
    const p = f.substring(1);
    u += `${l}.classList.remove('${p}'.replace('%s', light), '${p}'.replace('%s', dark));
      ${l}.classList.add('${p}'.replace('%s', colorScheme));`;
  }
  const d = f.match(/\[([^\]]+)\]/);
  if (d) {
    const [p, h] = d[1].split("=");
    h || (u += `${l}.removeAttribute('${p}'.replace('%s', light));
      ${l}.removeAttribute('${p}'.replace('%s', dark));`), u += `
      ${l}.setAttribute('${p}'.replace('%s', colorScheme), ${h ? `${h}.replace('%s', colorScheme)` : '""'});`;
  } else
    u += `${l}.setAttribute('${f}', colorScheme);`;
  return /* @__PURE__ */ N("script", {
    suppressHydrationWarning: !0,
    nonce: typeof window > "u" ? c : "",
    dangerouslySetInnerHTML: {
      __html: `(function() {
try {
  let colorScheme = '';
  const mode = localStorage.getItem('${o}') || '${t}';
  const dark = localStorage.getItem('${i}-dark') || '${r}';
  const light = localStorage.getItem('${i}-light') || '${n}';
  if (mode === 'system') {
    // handle system mode
    const mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = dark
    } else {
      colorScheme = light
    }
  }
  if (mode === 'light') {
    colorScheme = light;
  }
  if (mode === 'dark') {
    colorScheme = dark;
  }
  if (colorScheme) {
    ${u}
  }
} catch(e){}})();`
    }
  }, "mui-color-scheme-init");
}
function eR() {
}
const tR = ({
  key: e,
  storageWindow: t
}) => (!t && typeof window < "u" && (t = window), {
  get(n) {
    if (typeof window > "u")
      return;
    if (!t)
      return n;
    let r;
    try {
      r = t.localStorage.getItem(e);
    } catch {
    }
    return r || n;
  },
  set: (n) => {
    if (t)
      try {
        t.localStorage.setItem(e, n);
      } catch {
      }
  },
  subscribe: (n) => {
    if (!t)
      return eR;
    const r = (o) => {
      const i = o.newValue;
      o.key === e && n(i);
    };
    return t.addEventListener("storage", r), () => {
      t.removeEventListener("storage", r);
    };
  }
});
function wd() {
}
function yg(e) {
  if (typeof window < "u" && typeof window.matchMedia == "function" && e === "system")
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
function Kv(e, t) {
  if (e.mode === "light" || e.mode === "system" && e.systemMode === "light")
    return t("light");
  if (e.mode === "dark" || e.mode === "system" && e.systemMode === "dark")
    return t("dark");
}
function nR(e) {
  return Kv(e, (t) => {
    if (t === "light")
      return e.lightColorScheme;
    if (t === "dark")
      return e.darkColorScheme;
  });
}
function rR(e) {
  const {
    defaultMode: t = "light",
    defaultLightColorScheme: n,
    defaultDarkColorScheme: r,
    supportedColorSchemes: o = [],
    modeStorageKey: i = Gp,
    colorSchemeStorageKey: s = Xp,
    storageWindow: l = typeof window > "u" ? void 0 : window,
    storageManager: c = tR,
    noSsr: u = !1
  } = e, f = o.join(","), d = o.length > 1, p = M.useMemo(() => c == null ? void 0 : c({
    key: i,
    storageWindow: l
  }), [c, i, l]), h = M.useMemo(() => c == null ? void 0 : c({
    key: `${s}-light`,
    storageWindow: l
  }), [c, s, l]), g = M.useMemo(() => c == null ? void 0 : c({
    key: `${s}-dark`,
    storageWindow: l
  }), [c, s, l]), [m, y] = M.useState(() => {
    const R = (p == null ? void 0 : p.get(t)) || t, I = (h == null ? void 0 : h.get(n)) || n, b = (g == null ? void 0 : g.get(r)) || r;
    return {
      mode: R,
      systemMode: yg(R),
      lightColorScheme: I,
      darkColorScheme: b
    };
  }), [x, E] = M.useState(u || !d);
  M.useEffect(() => {
    E(!0);
  }, []);
  const v = nR(m), w = M.useCallback((R) => {
    y((I) => {
      if (R === I.mode)
        return I;
      const b = R ?? t;
      return p == null || p.set(b), {
        ...I,
        mode: b,
        systemMode: yg(b)
      };
    });
  }, [p, t]), S = M.useCallback((R) => {
    R ? typeof R == "string" ? R && !f.includes(R) ? console.error(`\`${R}\` does not exist in \`theme.colorSchemes\`.`) : y((I) => {
      const b = {
        ...I
      };
      return Kv(I, (k) => {
        k === "light" && (h == null || h.set(R), b.lightColorScheme = R), k === "dark" && (g == null || g.set(R), b.darkColorScheme = R);
      }), b;
    }) : y((I) => {
      const b = {
        ...I
      }, k = R.light === null ? n : R.light, P = R.dark === null ? r : R.dark;
      return k && (f.includes(k) ? (b.lightColorScheme = k, h == null || h.set(k)) : console.error(`\`${k}\` does not exist in \`theme.colorSchemes\`.`)), P && (f.includes(P) ? (b.darkColorScheme = P, g == null || g.set(P)) : console.error(`\`${P}\` does not exist in \`theme.colorSchemes\`.`)), b;
    }) : y((I) => (h == null || h.set(n), g == null || g.set(r), {
      ...I,
      lightColorScheme: n,
      darkColorScheme: r
    }));
  }, [f, h, g, n, r]), T = M.useCallback((R) => {
    m.mode === "system" && y((I) => {
      const b = R != null && R.matches ? "dark" : "light";
      return I.systemMode === b ? I : {
        ...I,
        systemMode: b
      };
    });
  }, [m.mode]), C = M.useRef(T);
  return C.current = T, M.useEffect(() => {
    if (typeof window.matchMedia != "function" || !d)
      return;
    const R = (...b) => C.current(...b), I = window.matchMedia("(prefers-color-scheme: dark)");
    return I.addListener(R), R(I), () => {
      I.removeListener(R);
    };
  }, [d]), M.useEffect(() => {
    if (d) {
      const R = (p == null ? void 0 : p.subscribe((k) => {
        (!k || ["light", "dark", "system"].includes(k)) && w(k || t);
      })) || wd, I = (h == null ? void 0 : h.subscribe((k) => {
        (!k || f.match(k)) && S({
          light: k
        });
      })) || wd, b = (g == null ? void 0 : g.subscribe((k) => {
        (!k || f.match(k)) && S({
          dark: k
        });
      })) || wd;
      return () => {
        R(), I(), b();
      };
    }
  }, [S, w, f, t, l, d, p, h, g]), {
    ...m,
    mode: x ? m.mode : void 0,
    systemMode: x ? m.systemMode : void 0,
    colorScheme: x ? v : void 0,
    setMode: w,
    setColorScheme: S
  };
}
const oR = "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
function iR(e) {
  const {
    themeId: t,
    /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */
    theme: n = {},
    modeStorageKey: r = Gp,
    colorSchemeStorageKey: o = Xp,
    disableTransitionOnChange: i = !1,
    defaultColorScheme: s,
    resolveTheme: l
  } = e, c = {
    allColorSchemes: [],
    colorScheme: void 0,
    darkColorScheme: void 0,
    lightColorScheme: void 0,
    mode: void 0,
    setColorScheme: () => {
    },
    setMode: () => {
    },
    systemMode: void 0
  }, u = /* @__PURE__ */ M.createContext(void 0);
  process.env.NODE_ENV !== "production" && (u.displayName = "ColorSchemeContext");
  const f = () => M.useContext(u) || c, d = {}, p = {};
  function h(x) {
    var H, K, re, he;
    const {
      children: E,
      theme: v,
      modeStorageKey: w = r,
      colorSchemeStorageKey: S = o,
      disableTransitionOnChange: T = i,
      storageManager: C,
      storageWindow: R = typeof window > "u" ? void 0 : window,
      documentNode: I = typeof document > "u" ? void 0 : document,
      colorSchemeNode: b = typeof document > "u" ? void 0 : document.documentElement,
      disableNestedContext: k = !1,
      disableStyleSheetGeneration: P = !1,
      defaultMode: A = "system",
      forceThemeRerender: O = !1,
      noSsr: _
    } = x, $ = M.useRef(!1), D = Kp(), z = M.useContext(u), B = !!z && !k, L = M.useMemo(() => v || (typeof n == "function" ? n() : n), [v]), F = L[t], W = F || L, {
      colorSchemes: U = d,
      components: Z = p,
      cssVarPrefix: Q
    } = W, ee = Object.keys(U).filter((me) => !!U[me]).join(","), te = M.useMemo(() => ee.split(","), [ee]), q = typeof s == "string" ? s : s.light, oe = typeof s == "string" ? s : s.dark, G = U[q] && U[oe] ? A : ((K = (H = U[W.defaultColorScheme]) == null ? void 0 : H.palette) == null ? void 0 : K.mode) || ((re = W.palette) == null ? void 0 : re.mode), {
      mode: ne,
      setMode: j,
      systemMode: pe,
      lightColorScheme: ce,
      darkColorScheme: be,
      colorScheme: Pe,
      setColorScheme: Me
    } = rR({
      supportedColorSchemes: te,
      defaultLightColorScheme: q,
      defaultDarkColorScheme: oe,
      modeStorageKey: w,
      colorSchemeStorageKey: S,
      defaultMode: G,
      storageManager: C,
      storageWindow: R,
      noSsr: _
    });
    let Ie = ne, Ne = Pe;
    B && (Ie = z.mode, Ne = z.colorScheme), process.env.NODE_ENV !== "production" && O && !W.vars && console.warn(["MUI: The `forceThemeRerender` prop should only be used with CSS theme variables.", "Note that it will slow down the app when changing between modes, so only do this when you cannot find a better solution."].join(`
`));
    let Fe = Ne || W.defaultColorScheme;
    W.vars && !O && (Fe = W.defaultColorScheme);
    const ke = M.useMemo(() => {
      var se;
      const me = ((se = W.generateThemeVars) == null ? void 0 : se.call(W)) || W.vars, le = {
        ...W,
        components: Z,
        colorSchemes: U,
        cssVarPrefix: Q,
        vars: me
      };
      if (typeof le.generateSpacing == "function" && (le.spacing = le.generateSpacing()), Fe) {
        const ae = U[Fe];
        ae && typeof ae == "object" && Object.keys(ae).forEach((ge) => {
          ae[ge] && typeof ae[ge] == "object" ? le[ge] = {
            ...le[ge],
            ...ae[ge]
          } : le[ge] = ae[ge];
        });
      }
      return l ? l(le) : le;
    }, [W, Fe, Z, U, Q]), V = W.colorSchemeSelector;
    Ar(() => {
      if (Ne && b && V && V !== "media") {
        const me = V;
        let le = V;
        if (me === "class" && (le = ".%s"), me === "data" && (le = "[data-%s]"), me != null && me.startsWith("data-") && !me.includes("%s") && (le = `[${me}="%s"]`), le.startsWith("."))
          b.classList.remove(...te.map((se) => le.substring(1).replace("%s", se))), b.classList.add(le.substring(1).replace("%s", Ne));
        else {
          const se = le.replace("%s", Ne).match(/\[([^\]]+)\]/);
          if (se) {
            const [ae, ge] = se[1].split("=");
            ge || te.forEach((Ce) => {
              b.removeAttribute(ae.replace(Ne, Ce));
            }), b.setAttribute(ae, ge ? ge.replace(/"|'/g, "") : "");
          } else
            b.setAttribute(le, Ne);
        }
      }
    }, [Ne, V, b, te]), M.useEffect(() => {
      let me;
      if (T && $.current && I) {
        const le = I.createElement("style");
        le.appendChild(I.createTextNode(oR)), I.head.appendChild(le), window.getComputedStyle(I.body), me = setTimeout(() => {
          I.head.removeChild(le);
        }, 1);
      }
      return () => {
        clearTimeout(me);
      };
    }, [Ne, T, I]), M.useEffect(() => ($.current = !0, () => {
      $.current = !1;
    }), []);
    const J = M.useMemo(() => ({
      allColorSchemes: te,
      colorScheme: Ne,
      darkColorScheme: be,
      lightColorScheme: ce,
      mode: Ie,
      setColorScheme: Me,
      setMode: process.env.NODE_ENV === "production" ? j : (me) => {
        ke.colorSchemeSelector === "media" && console.error(["MUI: The `setMode` function has no effect if `colorSchemeSelector` is `media` (`media` is the default value).", "To toggle the mode manually, please configure `colorSchemeSelector` to use a class or data attribute.", "To learn more, visit https://mui.com/material-ui/customization/css-theme-variables/configuration/#toggling-dark-mode-manually"].join(`
`)), j(me);
      },
      systemMode: pe
    }), [te, Ne, be, ce, Ie, Me, j, pe, ke.colorSchemeSelector]);
    let ie = !0;
    (P || W.cssVariables === !1 || B && (D == null ? void 0 : D.cssVarPrefix) === Q) && (ie = !1);
    const X = /* @__PURE__ */ we(M.Fragment, {
      children: [/* @__PURE__ */ N(da, {
        themeId: F ? t : void 0,
        theme: ke,
        children: E
      }), ie && /* @__PURE__ */ N(zp, {
        styles: ((he = ke.generateStyleSheets) == null ? void 0 : he.call(ke)) || []
      })]
    });
    return B ? X : /* @__PURE__ */ N(u.Provider, {
      value: J,
      children: X
    });
  }
  process.env.NODE_ENV !== "production" && (h.propTypes = {
    /**
     * The component tree.
     */
    children: a.node,
    /**
     * The node used to attach the color-scheme attribute
     */
    colorSchemeNode: a.any,
    /**
     * localStorage key used to store `colorScheme`
     */
    colorSchemeStorageKey: a.string,
    /**
     * The default mode when the storage is empty,
     * require the theme to have `colorSchemes` with light and dark.
     */
    defaultMode: a.string,
    /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */
    disableNestedContext: a.bool,
    /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */
    disableStyleSheetGeneration: a.bool,
    /**
     * Disable CSS transitions when switching between modes or color schemes.
     */
    disableTransitionOnChange: a.bool,
    /**
     * The document to attach the attribute to.
     */
    documentNode: a.any,
    /**
     * If `true`, theme values are recalculated when the mode changes.
     */
    forceThemeRerender: a.bool,
    /**
     * The key in the local storage used to store current color scheme.
     */
    modeStorageKey: a.string,
    /**
     * If `true`, the mode will be the same value as the storage without an extra rerendering after the hydration.
     * You should use this option in conjuction with `InitColorSchemeScript` component.
     */
    noSsr: a.bool,
    /**
     * The storage manager to be used for storing the mode and color scheme
     * @default using `window.localStorage`
     */
    storageManager: a.func,
    /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */
    storageWindow: a.any,
    /**
     * The calculated theme object that will be passed through context.
     */
    theme: a.object
  });
  const g = typeof s == "string" ? s : s.light, m = typeof s == "string" ? s : s.dark;
  return {
    CssVarsProvider: h,
    useColorScheme: f,
    getInitColorSchemeScript: (x) => Jk({
      colorSchemeStorageKey: o,
      defaultLightColorScheme: g,
      defaultDarkColorScheme: m,
      modeStorageKey: r,
      ...x
    })
  };
}
function sR(e = "") {
  function t(...r) {
    if (!r.length)
      return "";
    const o = r[0];
    return typeof o == "string" && !o.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${o}${t(...r.slice(1))})` : `, ${o}`;
  }
  return (r, ...o) => `var(--${e ? `${e}-` : ""}${r}${t(...o)})`;
}
const bg = (e, t, n, r = []) => {
  let o = e;
  t.forEach((i, s) => {
    s === t.length - 1 ? Array.isArray(o) ? o[Number(i)] = n : o && typeof o == "object" && (o[i] = n) : o && typeof o == "object" && (o[i] || (o[i] = r.includes(i) ? [] : {}), o = o[i]);
  });
}, aR = (e, t, n) => {
  function r(o, i = [], s = []) {
    Object.entries(o).forEach(([l, c]) => {
      (!n || n && !n([...i, l])) && c != null && (typeof c == "object" && Object.keys(c).length > 0 ? r(c, [...i, l], Array.isArray(c) ? [...s, l] : s) : t([...i, l], c, s));
    });
  }
  r(e);
}, lR = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((r) => e.includes(r)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function Sd(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: r
  } = t || {}, o = {}, i = {}, s = {};
  return aR(
    e,
    (l, c, u) => {
      if ((typeof c == "string" || typeof c == "number") && (!r || !r(l, c))) {
        const f = `--${n ? `${n}-` : ""}${l.join("-")}`, d = lR(l, c);
        Object.assign(o, {
          [f]: d
        }), bg(i, l, `var(${f})`, u), bg(s, l, `var(${f}, ${d})`, u);
      }
    },
    (l) => l[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: o,
    vars: i,
    varsWithDefaults: s
  };
}
function cR(e, t = {}) {
  const {
    getSelector: n = y,
    disableCssColorScheme: r,
    colorSchemeSelector: o
  } = t, {
    colorSchemes: i = {},
    components: s,
    defaultColorScheme: l = "light",
    ...c
  } = e, {
    vars: u,
    css: f,
    varsWithDefaults: d
  } = Sd(c, t);
  let p = d;
  const h = {}, {
    [l]: g,
    ...m
  } = i;
  if (Object.entries(m || {}).forEach(([v, w]) => {
    const {
      vars: S,
      css: T,
      varsWithDefaults: C
    } = Sd(w, t);
    p = Vn(p, C), h[v] = {
      css: T,
      vars: S
    };
  }), g) {
    const {
      css: v,
      vars: w,
      varsWithDefaults: S
    } = Sd(g, t);
    p = Vn(p, S), h[l] = {
      css: v,
      vars: w
    };
  }
  function y(v, w) {
    var T, C;
    let S = o;
    if (o === "class" && (S = ".%s"), o === "data" && (S = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (S = `[${o}="%s"]`), v) {
      if (S === "media")
        return e.defaultColorScheme === v ? ":root" : {
          [`@media (prefers-color-scheme: ${((C = (T = i[v]) == null ? void 0 : T.palette) == null ? void 0 : C.mode) || v})`]: {
            ":root": w
          }
        };
      if (S)
        return e.defaultColorScheme === v ? `:root, ${S.replace("%s", String(v))}` : S.replace("%s", String(v));
    }
    return ":root";
  }
  return {
    vars: p,
    generateThemeVars: () => {
      let v = {
        ...u
      };
      return Object.entries(h).forEach(([, {
        vars: w
      }]) => {
        v = Vn(v, w);
      }), v;
    },
    generateStyleSheets: () => {
      var R, I;
      const v = [], w = e.defaultColorScheme || "light";
      function S(b, k) {
        Object.keys(k).length && v.push(typeof b == "string" ? {
          [b]: {
            ...k
          }
        } : b);
      }
      S(n(void 0, {
        ...f
      }), f);
      const {
        [w]: T,
        ...C
      } = h;
      if (T) {
        const {
          css: b
        } = T, k = (I = (R = i[w]) == null ? void 0 : R.palette) == null ? void 0 : I.mode, P = !r && k ? {
          colorScheme: k,
          ...b
        } : {
          ...b
        };
        S(n(w, {
          ...P
        }), P);
      }
      return Object.entries(C).forEach(([b, {
        css: k
      }]) => {
        var O, _;
        const P = (_ = (O = i[b]) == null ? void 0 : O.palette) == null ? void 0 : _.mode, A = !r && P ? {
          colorScheme: P,
          ...k
        } : {
          ...k
        };
        S(n(b, {
          ...A
        }), A);
      }), v;
    }
  };
}
function uR(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
const dR = lu(), fR = Ok("div", {
  name: "MuiContainer",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`maxWidth${Ee(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
  }
}), pR = (e) => kk({
  props: e,
  name: "MuiContainer",
  defaultTheme: dR
}), hR = (e, t) => {
  const n = (c) => Et(t, c), {
    classes: r,
    fixed: o,
    disableGutters: i,
    maxWidth: s
  } = e, l = {
    root: ["root", s && `maxWidth${Ee(String(s))}`, o && "fixed", i && "disableGutters"]
  };
  return At(l, n, r);
};
function mR(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: t = fR,
    useThemeProps: n = pR,
    componentName: r = "MuiContainer"
  } = e, o = t(({
    theme: s,
    ownerState: l
  }) => ({
    width: "100%",
    marginLeft: "auto",
    boxSizing: "border-box",
    marginRight: "auto",
    ...!l.disableGutters && {
      paddingLeft: s.spacing(2),
      paddingRight: s.spacing(2),
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [s.breakpoints.up("sm")]: {
        paddingLeft: s.spacing(3),
        paddingRight: s.spacing(3)
      }
    }
  }), ({
    theme: s,
    ownerState: l
  }) => l.fixed && Object.keys(s.breakpoints.values).reduce((c, u) => {
    const f = u, d = s.breakpoints.values[f];
    return d !== 0 && (c[s.breakpoints.up(f)] = {
      maxWidth: `${d}${s.breakpoints.unit}`
    }), c;
  }, {}), ({
    theme: s,
    ownerState: l
  }) => ({
    // @ts-ignore module augmentation fails if custom breakpoints are used
    ...l.maxWidth === "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [s.breakpoints.up("xs")]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: Math.max(s.breakpoints.values.xs, 444)
      }
    },
    ...l.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used
    l.maxWidth !== "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [s.breakpoints.up(l.maxWidth)]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: `${s.breakpoints.values[l.maxWidth]}${s.breakpoints.unit}`
      }
    }
  })), i = /* @__PURE__ */ M.forwardRef(function(l, c) {
    const u = n(l), {
      className: f,
      component: d = "div",
      disableGutters: p = !1,
      fixed: h = !1,
      maxWidth: g = "lg",
      classes: m,
      ...y
    } = u, x = {
      ...u,
      component: d,
      disableGutters: p,
      fixed: h,
      maxWidth: g
    }, E = hR(x, r);
    return (
      // @ts-ignore theme is injected by the styled util
      /* @__PURE__ */ N(o, {
        as: d,
        ownerState: x,
        className: Oe(E.root, f),
        ref: c,
        ...y
      })
    );
  });
  return process.env.NODE_ENV !== "production" && (i.propTypes = {
    children: a.node,
    classes: a.object,
    className: a.string,
    component: a.elementType,
    disableGutters: a.bool,
    fixed: a.bool,
    maxWidth: a.oneOfType([a.oneOf(["xs", "sm", "md", "lg", "xl", !1]), a.string]),
    sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
  }), i;
}
const fa = {
  black: "#000",
  white: "#fff"
}, gR = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, fi = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, pi = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, ws = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, hi = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, mi = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, gi = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
};
function Gv() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: fa.white,
      default: fa.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const yR = Gv();
function Xv() {
  return {
    text: {
      primary: fa.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: fa.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const vg = Xv();
function xg(e, t, n, r) {
  const o = r.light || r, i = r.dark || r * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = fs(e.main, o) : t === "dark" && (e.dark = ds(e.main, i)));
}
function bR(e = "light") {
  return e === "dark" ? {
    main: hi[200],
    light: hi[50],
    dark: hi[400]
  } : {
    main: hi[700],
    light: hi[400],
    dark: hi[800]
  };
}
function vR(e = "light") {
  return e === "dark" ? {
    main: fi[200],
    light: fi[50],
    dark: fi[400]
  } : {
    main: fi[500],
    light: fi[300],
    dark: fi[700]
  };
}
function xR(e = "light") {
  return e === "dark" ? {
    main: pi[500],
    light: pi[300],
    dark: pi[700]
  } : {
    main: pi[700],
    light: pi[400],
    dark: pi[800]
  };
}
function wR(e = "light") {
  return e === "dark" ? {
    main: mi[400],
    light: mi[300],
    dark: mi[700]
  } : {
    main: mi[700],
    light: mi[500],
    dark: mi[900]
  };
}
function SR(e = "light") {
  return e === "dark" ? {
    main: gi[400],
    light: gi[300],
    dark: gi[700]
  } : {
    main: gi[800],
    light: gi[500],
    dark: gi[900]
  };
}
function ER(e = "light") {
  return e === "dark" ? {
    main: ws[400],
    light: ws[300],
    dark: ws[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: ws[500],
    dark: ws[900]
  };
}
function Zp(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: r = 0.2,
    ...o
  } = e, i = e.primary || bR(t), s = e.secondary || vR(t), l = e.error || xR(t), c = e.info || wR(t), u = e.success || SR(t), f = e.warning || ER(t);
  function d(m) {
    const y = cg(m, vg.text.primary) >= n ? vg.text.primary : yR.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const x = cg(m, y);
      x < 3 && console.error([`MUI: The contrast ratio of ${x}:1 for ${y} on ${m}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return y;
  }
  const p = ({
    color: m,
    name: y,
    mainShade: x = 500,
    lightShade: E = 300,
    darkShade: v = 700
  }) => {
    if (m = {
      ...m
    }, !m.main && m[x] && (m.main = m[x]), !m.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${y ? ` (${y})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${x}\` property.` : eo(11, y ? ` (${y})` : "", x));
    if (typeof m.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${y ? ` (${y})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(m.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : eo(12, y ? ` (${y})` : "", JSON.stringify(m.main)));
    return xg(m, "light", E, r), xg(m, "dark", v, r), m.contrastText || (m.contrastText = d(m.main)), m;
  };
  let h;
  return t === "light" ? h = Gv() : t === "dark" && (h = Xv()), process.env.NODE_ENV !== "production" && (h || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), Vn({
    // A collection of common colors.
    common: {
      ...fa
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: p({
      color: i,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: p({
      color: s,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: p({
      color: l,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: p({
      color: f,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: p({
      color: c,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: p({
      color: u,
      name: "success"
    }),
    // The grey colors.
    grey: gR,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: d,
    // Generate a rich color object.
    augmentColor: p,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: r,
    // The light and dark mode object.
    ...h
  }, o);
}
function TR(e) {
  const t = {};
  return Object.entries(e).forEach((r) => {
    const [o, i] = r;
    typeof i == "object" && (t[o] = `${i.fontStyle ? `${i.fontStyle} ` : ""}${i.fontVariant ? `${i.fontVariant} ` : ""}${i.fontWeight ? `${i.fontWeight} ` : ""}${i.fontStretch ? `${i.fontStretch} ` : ""}${i.fontSize || ""}${i.lineHeight ? `/${i.lineHeight} ` : ""}${i.fontFamily || ""}`);
  }), t;
}
function CR(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function OR(e) {
  return Math.round(e * 1e5) / 1e5;
}
const wg = {
  textTransform: "uppercase"
}, Sg = '"Roboto", "Helvetica", "Arial", sans-serif';
function Zv(e, t) {
  const {
    fontFamily: n = Sg,
    // The default font size of the Material Specification.
    fontSize: r = 14,
    // px
    fontWeightLight: o = 300,
    fontWeightRegular: i = 400,
    fontWeightMedium: s = 500,
    fontWeightBold: l = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: c = 16,
    // Apply the CSS properties to all the variants.
    allVariants: u,
    pxToRem: f,
    ...d
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof r != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof c != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const p = r / 14, h = f || ((y) => `${y / c * p}rem`), g = (y, x, E, v, w) => ({
    fontFamily: n,
    fontWeight: y,
    fontSize: h(x),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: E,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === Sg ? {
      letterSpacing: `${OR(v / x)}em`
    } : {},
    ...w,
    ...u
  }), m = {
    h1: g(o, 96, 1.167, -1.5),
    h2: g(o, 60, 1.2, -0.5),
    h3: g(i, 48, 1.167, 0),
    h4: g(i, 34, 1.235, 0.25),
    h5: g(i, 24, 1.334, 0),
    h6: g(s, 20, 1.6, 0.15),
    subtitle1: g(i, 16, 1.75, 0.15),
    subtitle2: g(s, 14, 1.57, 0.1),
    body1: g(i, 16, 1.5, 0.15),
    body2: g(i, 14, 1.43, 0.15),
    button: g(s, 14, 1.75, 0.4, wg),
    caption: g(i, 12, 1.66, 0.4),
    overline: g(i, 12, 2.66, 1, wg),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return Vn({
    htmlFontSize: c,
    pxToRem: h,
    fontFamily: n,
    fontSize: r,
    fontWeightLight: o,
    fontWeightRegular: i,
    fontWeightMedium: s,
    fontWeightBold: l,
    ...m
  }, d, {
    clone: !1
    // No need to clone deep
  });
}
const kR = 0.2, RR = 0.14, NR = 0.12;
function Ct(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${kR})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${RR})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${NR})`].join(",");
}
const $R = ["none", Ct(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), Ct(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), Ct(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), Ct(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), Ct(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), Ct(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), Ct(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), Ct(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), Ct(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), Ct(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), Ct(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), Ct(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), Ct(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), Ct(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), Ct(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), Ct(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), Ct(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), Ct(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), Ct(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), Ct(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), Ct(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), Ct(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), Ct(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), Ct(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], PR = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, IR = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function Eg(e) {
  return `${Math.round(e)}ms`;
}
function _R(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function MR(e) {
  const t = {
    ...PR,
    ...e.easing
  }, n = {
    ...IR,
    ...e.duration
  };
  return {
    getAutoHeightDuration: _R,
    create: (o = ["all"], i = {}) => {
      const {
        duration: s = n.standard,
        easing: l = t.easeInOut,
        delay: c = 0,
        ...u
      } = i;
      if (process.env.NODE_ENV !== "production") {
        const f = (p) => typeof p == "string", d = (p) => !Number.isNaN(parseFloat(p));
        !f(o) && !Array.isArray(o) && console.error('MUI: Argument "props" must be a string or Array.'), !d(s) && !f(s) && console.error(`MUI: Argument "duration" must be a number or a string but found ${s}.`), f(l) || console.error('MUI: Argument "easing" must be a string.'), !d(c) && !f(c) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof i != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(u).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(u).join(",")}].`);
      }
      return (Array.isArray(o) ? o : [o]).map((f) => `${f} ${typeof s == "string" ? s : Eg(s)} ${l} ${typeof c == "string" ? c : Eg(c)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const AR = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function DR(e) {
  return kr(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function Qv(e = {}) {
  const t = {
    ...e
  };
  function n(r) {
    const o = Object.entries(r);
    for (let i = 0; i < o.length; i++) {
      const [s, l] = o[i];
      !DR(l) || s.startsWith("unstable_") ? delete r[s] : kr(l) && (r[s] = {
        ...l
      }, n(r[s]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function Rf(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: r = {},
    spacing: o,
    palette: i = {},
    transitions: s = {},
    typography: l = {},
    shape: c,
    ...u
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : eo(20));
  const f = Zp(i), d = lu(e);
  let p = Vn(d, {
    mixins: CR(d.breakpoints, r),
    palette: f,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: $R.slice(),
    typography: Zv(f, l),
    transitions: MR(s),
    zIndex: {
      ...AR
    }
  });
  if (p = Vn(p, u), p = t.reduce((h, g) => Vn(h, g), p), process.env.NODE_ENV !== "production") {
    const h = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], g = (m, y) => {
      let x;
      for (x in m) {
        const E = m[x];
        if (h.includes(x) && Object.keys(E).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const v = Et("", x);
            console.error([`MUI: The \`${y}\` component increases the CSS specificity of the \`${x}\` internal state.`, "You can not override it like this: ", JSON.stringify(m, null, 2), "", `Instead, you need to use the '&.${v}' syntax:`, JSON.stringify({
              root: {
                [`&.${v}`]: E
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          m[x] = {};
        }
      }
    };
    Object.keys(p.components).forEach((m) => {
      const y = p.components[m].styleOverrides;
      y && m.startsWith("Mui") && g(y, m);
    });
  }
  return p.unstable_sxConfig = {
    ...Fa,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, p.unstable_sx = function(g) {
    return To({
      sx: g,
      theme: this
    });
  }, p.toRuntimeSource = Qv, p;
}
function Nf(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const BR = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = Nf(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function Jv(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function ex(e) {
  return e === "dark" ? BR : [];
}
function LR(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: r,
    ...o
  } = e, i = Zp(t);
  return {
    palette: i,
    opacity: {
      ...Jv(i.mode),
      ...n
    },
    overlays: r || ex(i.mode),
    ...o
  };
}
function FR(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const zR = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], VR = (e) => (t, n) => {
  const r = e.rootSelector || ":root", o = e.colorSchemeSelector;
  let i = o;
  if (o === "class" && (i = ".%s"), o === "data" && (i = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (i = `[${o}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const s = {};
      return zR(e.cssVarPrefix).forEach((l) => {
        s[l] = n[l], delete n[l];
      }), i === "media" ? {
        [r]: n,
        "@media (prefers-color-scheme: dark)": {
          [r]: s
        }
      } : i ? {
        [i.replace("%s", t)]: s,
        [`${r}, ${i.replace("%s", t)}`]: n
      } : {
        [r]: {
          ...n,
          ...s
        }
      };
    }
    if (i && i !== "media")
      return `${r}, ${i.replace("%s", String(t))}`;
  } else if (t) {
    if (i === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [r]: n
        }
      };
    if (i)
      return i.replace("%s", String(t));
  }
  return r;
};
function jR(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function de(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function Ls(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : Pv(e);
}
function qr(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = Bs(Ls(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function HR(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const vr = (e) => {
  try {
    return e();
  } catch {
  }
}, WR = (e = "mui") => sR(e);
function Ed(e, t, n, r) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const o = r === "dark" ? "dark" : "light";
  if (!n) {
    e[r] = LR({
      ...t,
      palette: {
        mode: o,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: i,
    ...s
  } = Rf({
    ...n,
    palette: {
      mode: o,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[r] = {
    ...t,
    palette: i,
    opacity: {
      ...Jv(o),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || ex(o)
  }, s;
}
function UR(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: r,
    disableCssColorScheme: o = !1,
    cssVarPrefix: i = "mui",
    shouldSkipGeneratingVar: s = FR,
    colorSchemeSelector: l = n.light && n.dark ? "media" : void 0,
    rootSelector: c = ":root",
    ...u
  } = e, f = Object.keys(n)[0], d = r || (n.light && f !== "light" ? "light" : f), p = WR(i), {
    [d]: h,
    light: g,
    dark: m,
    ...y
  } = n, x = {
    ...y
  };
  let E = h;
  if ((d === "dark" && !("dark" in n) || d === "light" && !("light" in n)) && (E = !0), !E)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${d}\` option is either missing or invalid.` : eo(21, d));
  const v = Ed(x, E, u, d);
  g && !x.light && Ed(x, g, void 0, "light"), m && !x.dark && Ed(x, m, void 0, "dark");
  let w = {
    defaultColorScheme: d,
    ...v,
    cssVarPrefix: i,
    colorSchemeSelector: l,
    rootSelector: c,
    getCssVar: p,
    colorSchemes: x,
    font: {
      ...TR(v.typography),
      ...v.font
    },
    spacing: HR(u.spacing)
  };
  Object.keys(w.colorSchemes).forEach((I) => {
    const b = w.colorSchemes[I].palette, k = (P) => {
      const A = P.split("-"), O = A[1], _ = A[2];
      return p(P, b[O][_]);
    };
    if (b.mode === "light" && (de(b.common, "background", "#fff"), de(b.common, "onBackground", "#000")), b.mode === "dark" && (de(b.common, "background", "#000"), de(b.common, "onBackground", "#fff")), jR(b, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), b.mode === "light") {
      de(b.Alert, "errorColor", mt(b.error.light, 0.6)), de(b.Alert, "infoColor", mt(b.info.light, 0.6)), de(b.Alert, "successColor", mt(b.success.light, 0.6)), de(b.Alert, "warningColor", mt(b.warning.light, 0.6)), de(b.Alert, "errorFilledBg", k("palette-error-main")), de(b.Alert, "infoFilledBg", k("palette-info-main")), de(b.Alert, "successFilledBg", k("palette-success-main")), de(b.Alert, "warningFilledBg", k("palette-warning-main")), de(b.Alert, "errorFilledColor", vr(() => b.getContrastText(b.error.main))), de(b.Alert, "infoFilledColor", vr(() => b.getContrastText(b.info.main))), de(b.Alert, "successFilledColor", vr(() => b.getContrastText(b.success.main))), de(b.Alert, "warningFilledColor", vr(() => b.getContrastText(b.warning.main))), de(b.Alert, "errorStandardBg", gt(b.error.light, 0.9)), de(b.Alert, "infoStandardBg", gt(b.info.light, 0.9)), de(b.Alert, "successStandardBg", gt(b.success.light, 0.9)), de(b.Alert, "warningStandardBg", gt(b.warning.light, 0.9)), de(b.Alert, "errorIconColor", k("palette-error-main")), de(b.Alert, "infoIconColor", k("palette-info-main")), de(b.Alert, "successIconColor", k("palette-success-main")), de(b.Alert, "warningIconColor", k("palette-warning-main")), de(b.AppBar, "defaultBg", k("palette-grey-100")), de(b.Avatar, "defaultBg", k("palette-grey-400")), de(b.Button, "inheritContainedBg", k("palette-grey-300")), de(b.Button, "inheritContainedHoverBg", k("palette-grey-A100")), de(b.Chip, "defaultBorder", k("palette-grey-400")), de(b.Chip, "defaultAvatarColor", k("palette-grey-700")), de(b.Chip, "defaultIconColor", k("palette-grey-700")), de(b.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), de(b.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), de(b.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), de(b.LinearProgress, "primaryBg", gt(b.primary.main, 0.62)), de(b.LinearProgress, "secondaryBg", gt(b.secondary.main, 0.62)), de(b.LinearProgress, "errorBg", gt(b.error.main, 0.62)), de(b.LinearProgress, "infoBg", gt(b.info.main, 0.62)), de(b.LinearProgress, "successBg", gt(b.success.main, 0.62)), de(b.LinearProgress, "warningBg", gt(b.warning.main, 0.62)), de(b.Skeleton, "bg", `rgba(${k("palette-text-primaryChannel")} / 0.11)`), de(b.Slider, "primaryTrack", gt(b.primary.main, 0.62)), de(b.Slider, "secondaryTrack", gt(b.secondary.main, 0.62)), de(b.Slider, "errorTrack", gt(b.error.main, 0.62)), de(b.Slider, "infoTrack", gt(b.info.main, 0.62)), de(b.Slider, "successTrack", gt(b.success.main, 0.62)), de(b.Slider, "warningTrack", gt(b.warning.main, 0.62));
      const P = yl(b.background.default, 0.8);
      de(b.SnackbarContent, "bg", P), de(b.SnackbarContent, "color", vr(() => b.getContrastText(P))), de(b.SpeedDialAction, "fabHoverBg", yl(b.background.paper, 0.15)), de(b.StepConnector, "border", k("palette-grey-400")), de(b.StepContent, "border", k("palette-grey-400")), de(b.Switch, "defaultColor", k("palette-common-white")), de(b.Switch, "defaultDisabledColor", k("palette-grey-100")), de(b.Switch, "primaryDisabledColor", gt(b.primary.main, 0.62)), de(b.Switch, "secondaryDisabledColor", gt(b.secondary.main, 0.62)), de(b.Switch, "errorDisabledColor", gt(b.error.main, 0.62)), de(b.Switch, "infoDisabledColor", gt(b.info.main, 0.62)), de(b.Switch, "successDisabledColor", gt(b.success.main, 0.62)), de(b.Switch, "warningDisabledColor", gt(b.warning.main, 0.62)), de(b.TableCell, "border", gt(gl(b.divider, 1), 0.88)), de(b.Tooltip, "bg", gl(b.grey[700], 0.92));
    }
    if (b.mode === "dark") {
      de(b.Alert, "errorColor", gt(b.error.light, 0.6)), de(b.Alert, "infoColor", gt(b.info.light, 0.6)), de(b.Alert, "successColor", gt(b.success.light, 0.6)), de(b.Alert, "warningColor", gt(b.warning.light, 0.6)), de(b.Alert, "errorFilledBg", k("palette-error-dark")), de(b.Alert, "infoFilledBg", k("palette-info-dark")), de(b.Alert, "successFilledBg", k("palette-success-dark")), de(b.Alert, "warningFilledBg", k("palette-warning-dark")), de(b.Alert, "errorFilledColor", vr(() => b.getContrastText(b.error.dark))), de(b.Alert, "infoFilledColor", vr(() => b.getContrastText(b.info.dark))), de(b.Alert, "successFilledColor", vr(() => b.getContrastText(b.success.dark))), de(b.Alert, "warningFilledColor", vr(() => b.getContrastText(b.warning.dark))), de(b.Alert, "errorStandardBg", mt(b.error.light, 0.9)), de(b.Alert, "infoStandardBg", mt(b.info.light, 0.9)), de(b.Alert, "successStandardBg", mt(b.success.light, 0.9)), de(b.Alert, "warningStandardBg", mt(b.warning.light, 0.9)), de(b.Alert, "errorIconColor", k("palette-error-main")), de(b.Alert, "infoIconColor", k("palette-info-main")), de(b.Alert, "successIconColor", k("palette-success-main")), de(b.Alert, "warningIconColor", k("palette-warning-main")), de(b.AppBar, "defaultBg", k("palette-grey-900")), de(b.AppBar, "darkBg", k("palette-background-paper")), de(b.AppBar, "darkColor", k("palette-text-primary")), de(b.Avatar, "defaultBg", k("palette-grey-600")), de(b.Button, "inheritContainedBg", k("palette-grey-800")), de(b.Button, "inheritContainedHoverBg", k("palette-grey-700")), de(b.Chip, "defaultBorder", k("palette-grey-700")), de(b.Chip, "defaultAvatarColor", k("palette-grey-300")), de(b.Chip, "defaultIconColor", k("palette-grey-300")), de(b.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), de(b.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), de(b.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), de(b.LinearProgress, "primaryBg", mt(b.primary.main, 0.5)), de(b.LinearProgress, "secondaryBg", mt(b.secondary.main, 0.5)), de(b.LinearProgress, "errorBg", mt(b.error.main, 0.5)), de(b.LinearProgress, "infoBg", mt(b.info.main, 0.5)), de(b.LinearProgress, "successBg", mt(b.success.main, 0.5)), de(b.LinearProgress, "warningBg", mt(b.warning.main, 0.5)), de(b.Skeleton, "bg", `rgba(${k("palette-text-primaryChannel")} / 0.13)`), de(b.Slider, "primaryTrack", mt(b.primary.main, 0.5)), de(b.Slider, "secondaryTrack", mt(b.secondary.main, 0.5)), de(b.Slider, "errorTrack", mt(b.error.main, 0.5)), de(b.Slider, "infoTrack", mt(b.info.main, 0.5)), de(b.Slider, "successTrack", mt(b.success.main, 0.5)), de(b.Slider, "warningTrack", mt(b.warning.main, 0.5));
      const P = yl(b.background.default, 0.98);
      de(b.SnackbarContent, "bg", P), de(b.SnackbarContent, "color", vr(() => b.getContrastText(P))), de(b.SpeedDialAction, "fabHoverBg", yl(b.background.paper, 0.15)), de(b.StepConnector, "border", k("palette-grey-600")), de(b.StepContent, "border", k("palette-grey-600")), de(b.Switch, "defaultColor", k("palette-grey-300")), de(b.Switch, "defaultDisabledColor", k("palette-grey-600")), de(b.Switch, "primaryDisabledColor", mt(b.primary.main, 0.55)), de(b.Switch, "secondaryDisabledColor", mt(b.secondary.main, 0.55)), de(b.Switch, "errorDisabledColor", mt(b.error.main, 0.55)), de(b.Switch, "infoDisabledColor", mt(b.info.main, 0.55)), de(b.Switch, "successDisabledColor", mt(b.success.main, 0.55)), de(b.Switch, "warningDisabledColor", mt(b.warning.main, 0.55)), de(b.TableCell, "border", mt(gl(b.divider, 1), 0.68)), de(b.Tooltip, "bg", gl(b.grey[700], 0.92));
    }
    qr(b.background, "default"), qr(b.background, "paper"), qr(b.common, "background"), qr(b.common, "onBackground"), qr(b, "divider"), Object.keys(b).forEach((P) => {
      const A = b[P];
      P !== "tonalOffset" && A && typeof A == "object" && (A.main && de(b[P], "mainChannel", Bs(Ls(A.main))), A.light && de(b[P], "lightChannel", Bs(Ls(A.light))), A.dark && de(b[P], "darkChannel", Bs(Ls(A.dark))), A.contrastText && de(b[P], "contrastTextChannel", Bs(Ls(A.contrastText))), P === "text" && (qr(b[P], "primary"), qr(b[P], "secondary")), P === "action" && (A.active && qr(b[P], "active"), A.selected && qr(b[P], "selected")));
    });
  }), w = t.reduce((I, b) => Vn(I, b), w);
  const S = {
    prefix: i,
    disableCssColorScheme: o,
    shouldSkipGeneratingVar: s,
    getSelector: VR(w)
  }, {
    vars: T,
    generateThemeVars: C,
    generateStyleSheets: R
  } = cR(w, S);
  return w.vars = T, Object.entries(w.colorSchemes[w.defaultColorScheme]).forEach(([I, b]) => {
    w[I] = b;
  }), w.generateThemeVars = C, w.generateStyleSheets = R, w.generateSpacing = function() {
    return xv(u.spacing, Pp(this));
  }, w.getColorSchemeSelector = uR(l), w.spacing = w.generateSpacing(), w.shouldSkipGeneratingVar = s, w.unstable_sxConfig = {
    ...Fa,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, w.unstable_sx = function(b) {
    return To({
      sx: b,
      theme: this
    });
  }, w.toRuntimeSource = Qv, w;
}
function Tg(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: Zp({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function fu(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: r = !1,
    colorSchemes: o = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: i = n == null ? void 0 : n.mode,
    ...s
  } = e, l = i || "light", c = o == null ? void 0 : o[l], u = {
    ...o,
    ...n ? {
      [l]: {
        ...typeof c != "boolean" && c,
        palette: n
      }
    } : void 0
  };
  if (r === !1) {
    if (!("colorSchemes" in e))
      return Rf(e, ...t);
    let f = n;
    "palette" in e || u[l] && (u[l] !== !0 ? f = u[l].palette : l === "dark" && (f = {
      mode: "dark"
    }));
    const d = Rf({
      ...e,
      palette: f
    }, ...t);
    return d.defaultColorScheme = l, d.colorSchemes = u, d.palette.mode === "light" && (d.colorSchemes.light = {
      ...u.light !== !0 && u.light,
      palette: d.palette
    }, Tg(d, "dark", u.dark)), d.palette.mode === "dark" && (d.colorSchemes.dark = {
      ...u.dark !== !0 && u.dark,
      palette: d.palette
    }, Tg(d, "light", u.light)), d;
  }
  return !n && !("light" in u) && l === "light" && (u.light = !0), UR({
    ...s,
    colorSchemes: u,
    defaultColorScheme: l,
    ...typeof r != "boolean" && r
  }, ...t);
}
const Qp = fu(), fr = "$$material";
function uo() {
  const e = cu(Qp);
  return process.env.NODE_ENV !== "production" && M.useDebugValue(e), e[fr] || e;
}
function tx(e) {
  return /* @__PURE__ */ N(wv, {
    ...e,
    defaultTheme: Qp,
    themeId: fr
  });
}
process.env.NODE_ENV !== "production" && (tx.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: a.oneOfType([a.array, a.func, a.number, a.object, a.string, a.bool])
});
function qR(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const Vr = (e) => qR(e) && e !== "classes", Ae = Ov({
  themeId: fr,
  defaultTheme: Qp,
  rootShouldForwardProp: Vr
});
function Jp(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ N(tx, {
        styles: typeof e == "function" ? (r) => e({
          theme: r,
          ...n
        }) : e
      })
    );
  };
}
function YR() {
  return ov;
}
const tt = Zk;
process.env.NODE_ENV !== "production" && (a.node, a.object.isRequired);
function Nt(e) {
  return Xk(e);
}
function KR(e) {
  return Et("MuiSvgIcon", e);
}
Rt("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const GR = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: r
  } = e, o = {
    root: ["root", t !== "inherit" && `color${Ee(t)}`, `fontSize${Ee(n)}`]
  };
  return At(o, KR, r);
}, XR = Ae("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${Ee(n.color)}`], t[`fontSize${Ee(n.fontSize)}`]];
  }
})(tt(({
  theme: e
}) => {
  var t, n, r, o, i, s, l, c, u, f, d, p, h, g;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (o = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : o.call(t, "fill", {
      duration: (r = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : r.shorter
    }),
    variants: [
      {
        props: (m) => !m.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((s = (i = e.typography) == null ? void 0 : i.pxToRem) == null ? void 0 : s.call(i, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((c = (l = e.typography) == null ? void 0 : l.pxToRem) == null ? void 0 : c.call(l, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((f = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : f.call(u, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, m]) => m && m.main).map(([m]) => {
        var y, x;
        return {
          props: {
            color: m
          },
          style: {
            color: (x = (y = (e.vars ?? e).palette) == null ? void 0 : y[m]) == null ? void 0 : x.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (p = (d = (e.vars ?? e).palette) == null ? void 0 : d.action) == null ? void 0 : p.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (g = (h = (e.vars ?? e).palette) == null ? void 0 : h.action) == null ? void 0 : g.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), zi = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: o,
    className: i,
    color: s = "inherit",
    component: l = "svg",
    fontSize: c = "medium",
    htmlColor: u,
    inheritViewBox: f = !1,
    titleAccess: d,
    viewBox: p = "0 0 24 24",
    ...h
  } = r, g = /* @__PURE__ */ M.isValidElement(o) && o.type === "svg", m = {
    ...r,
    color: s,
    component: l,
    fontSize: c,
    instanceFontSize: t.fontSize,
    inheritViewBox: f,
    viewBox: p,
    hasSvgAsChild: g
  }, y = {};
  f || (y.viewBox = p);
  const x = GR(m);
  return /* @__PURE__ */ we(XR, {
    as: l,
    className: Oe(x.root, i),
    focusable: "false",
    color: u,
    "aria-hidden": d ? void 0 : !0,
    role: d ? "img" : void 0,
    ref: n,
    ...y,
    ...h,
    ...g && o.props,
    ownerState: m,
    children: [g ? o.props.children : o, d ? /* @__PURE__ */ N("title", {
      children: d
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (zi.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: a.oneOfType([a.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: a.oneOfType([a.oneOf(["inherit", "large", "medium", "small"]), a.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: a.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: a.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: a.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: a.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: a.string
});
zi.muiName = "SvgIcon";
function ps(e, t) {
  function n(r, o) {
    return /* @__PURE__ */ N(zi, {
      "data-testid": process.env.NODE_ENV !== "production" ? `${t}Icon` : void 0,
      ref: o,
      ...r,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = zi.muiName, /* @__PURE__ */ M.memo(/* @__PURE__ */ M.forwardRef(n));
}
const ZR = ps(/* @__PURE__ */ N("path", {
  d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
}), "Person");
function QR(e) {
  return Et("MuiAvatar", e);
}
Rt("MuiAvatar", ["root", "colorDefault", "circular", "rounded", "square", "img", "fallback"]);
function pt(e, t) {
  const {
    className: n,
    elementType: r,
    ownerState: o,
    externalForwardedProps: i,
    internalForwardedProps: s,
    shouldForwardComponentProp: l = !1,
    ...c
  } = t, {
    component: u,
    slots: f = {
      [e]: void 0
    },
    slotProps: d = {
      [e]: void 0
    },
    ...p
  } = i, h = f[e] || r, g = Hv(d[e], o), {
    props: {
      component: m,
      ...y
    },
    internalRef: x
  } = jv({
    className: n,
    ...c,
    externalForwardedProps: e === "root" ? p : void 0,
    externalSlotProps: g
  }), E = mn(x, g == null ? void 0 : g.ref, t.ref), v = e === "root" ? m || u : m, w = zv(h, {
    ...e === "root" && !u && !f[e] && s,
    ...e !== "root" && !f[e] && s,
    ...y,
    ...v && !l && {
      as: v
    },
    ...v && l && {
      component: v
    },
    ref: E
  }, o);
  return [h, w];
}
const JR = (e) => {
  const {
    classes: t,
    variant: n,
    colorDefault: r
  } = e;
  return At({
    root: ["root", n, r && "colorDefault"],
    img: ["img"],
    fallback: ["fallback"]
  }, QR, t);
}, eN = Ae("div", {
  name: "MuiAvatar",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], n.colorDefault && t.colorDefault];
  }
})(tt(({
  theme: e
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  flexShrink: 0,
  width: 40,
  height: 40,
  fontFamily: e.typography.fontFamily,
  fontSize: e.typography.pxToRem(20),
  lineHeight: 1,
  borderRadius: "50%",
  overflow: "hidden",
  userSelect: "none",
  variants: [{
    props: {
      variant: "rounded"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius
    }
  }, {
    props: {
      variant: "square"
    },
    style: {
      borderRadius: 0
    }
  }, {
    props: {
      colorDefault: !0
    },
    style: {
      color: (e.vars || e).palette.background.default,
      ...e.vars ? {
        backgroundColor: e.vars.palette.Avatar.defaultBg
      } : {
        backgroundColor: e.palette.grey[400],
        ...e.applyStyles("dark", {
          backgroundColor: e.palette.grey[600]
        })
      }
    }
  }]
}))), tN = Ae("img", {
  name: "MuiAvatar",
  slot: "Img",
  overridesResolver: (e, t) => t.img
})({
  width: "100%",
  height: "100%",
  textAlign: "center",
  // Handle non-square image.
  objectFit: "cover",
  // Hide alt text.
  color: "transparent",
  // Hide the image broken icon, only works on Chrome.
  textIndent: 1e4
}), nN = Ae(ZR, {
  name: "MuiAvatar",
  slot: "Fallback",
  overridesResolver: (e, t) => t.fallback
})({
  width: "75%",
  height: "75%"
});
function rN({
  crossOrigin: e,
  referrerPolicy: t,
  src: n,
  srcSet: r
}) {
  const [o, i] = M.useState(!1);
  return M.useEffect(() => {
    if (!n && !r)
      return;
    i(!1);
    let s = !0;
    const l = new Image();
    return l.onload = () => {
      s && i("loaded");
    }, l.onerror = () => {
      s && i("error");
    }, l.crossOrigin = e, l.referrerPolicy = t, l.src = n, r && (l.srcset = r), () => {
      s = !1;
    };
  }, [e, t, n, r]), o;
}
const nx = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiAvatar"
  }), {
    alt: o,
    children: i,
    className: s,
    component: l = "div",
    slots: c = {},
    slotProps: u = {},
    imgProps: f,
    sizes: d,
    src: p,
    srcSet: h,
    variant: g = "circular",
    ...m
  } = r;
  let y = null;
  const x = {
    ...r,
    component: l,
    variant: g
  }, E = rN({
    ...f,
    ...typeof u.img == "function" ? u.img(x) : u.img,
    src: p,
    srcSet: h
  }), v = p || h, w = v && E !== "error";
  x.colorDefault = !w, delete x.ownerState;
  const S = JR(x), [T, C] = pt("img", {
    className: S.img,
    elementType: tN,
    externalForwardedProps: {
      slots: c,
      slotProps: {
        img: {
          ...f,
          ...u.img
        }
      }
    },
    additionalProps: {
      alt: o,
      src: p,
      srcSet: h,
      sizes: d
    },
    ownerState: x
  });
  return w ? y = /* @__PURE__ */ N(T, {
    ...C
  }) : i || i === 0 ? y = i : v && o ? y = o[0] : y = /* @__PURE__ */ N(nN, {
    ownerState: x,
    className: S.fallback
  }), /* @__PURE__ */ N(eN, {
    as: l,
    className: Oe(S.root, s),
    ref: n,
    ...m,
    ownerState: x,
    children: y
  });
});
process.env.NODE_ENV !== "production" && (nx.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Used in combination with `src` or `srcSet` to
   * provide an alt attribute for the rendered `img` element.
   */
  alt: a.string,
  /**
   * Used to render icon or text elements inside the Avatar if `src` is not set.
   * This can be an element, or just a string.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.
   * It can be used to listen for the loading error event.
   * @deprecated Use `slotProps.img` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  imgProps: a.object,
  /**
   * The `sizes` attribute for the `img` element.
   */
  sizes: a.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    img: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    img: a.elementType
  }),
  /**
   * The `src` attribute for the `img` element.
   */
  src: a.string,
  /**
   * The `srcSet` attribute for the `img` element.
   * Use this attribute for responsive image display.
   */
  srcSet: a.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The shape of the avatar.
   * @default 'circular'
   */
  variant: a.oneOfType([a.oneOf(["circular", "rounded", "square"]), a.string])
});
function oN(e) {
  const {
    badgeContent: t,
    invisible: n = !1,
    max: r = 99,
    showZero: o = !1
  } = e, i = Bv({
    badgeContent: t,
    max: r
  });
  let s = n;
  n === !1 && t === 0 && !o && (s = !0);
  const {
    badgeContent: l,
    max: c = r
  } = s ? i : e, u = l && Number(l) > c ? `${c}+` : l;
  return {
    badgeContent: l,
    invisible: s,
    max: c,
    displayValue: u
  };
}
function iN(e) {
  return typeof e.main == "string";
}
function sN(e, t = []) {
  if (!iN(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function xn(e = []) {
  return ([, t]) => t && sN(t, e);
}
function aN(e) {
  return Et("MuiBadge", e);
}
const ho = Rt("MuiBadge", [
  "root",
  "badge",
  "dot",
  "standard",
  "anchorOriginTopRight",
  "anchorOriginBottomRight",
  "anchorOriginTopLeft",
  "anchorOriginBottomLeft",
  "invisible",
  "colorError",
  "colorInfo",
  "colorPrimary",
  "colorSecondary",
  "colorSuccess",
  "colorWarning",
  "overlapRectangular",
  "overlapCircular",
  // TODO: v6 remove the overlap value from these class keys
  "anchorOriginTopLeftCircular",
  "anchorOriginTopLeftRectangular",
  "anchorOriginTopRightCircular",
  "anchorOriginTopRightRectangular",
  "anchorOriginBottomLeftCircular",
  "anchorOriginBottomLeftRectangular",
  "anchorOriginBottomRightCircular",
  "anchorOriginBottomRightRectangular"
]), Td = 10, Cd = 4, lN = (e) => {
  const {
    color: t,
    anchorOrigin: n,
    invisible: r,
    overlap: o,
    variant: i,
    classes: s = {}
  } = e, l = {
    root: ["root"],
    badge: ["badge", i, r && "invisible", `anchorOrigin${Ee(n.vertical)}${Ee(n.horizontal)}`, `anchorOrigin${Ee(n.vertical)}${Ee(n.horizontal)}${Ee(o)}`, `overlap${Ee(o)}`, t !== "default" && `color${Ee(t)}`]
  };
  return At(l, aN, s);
}, cN = Ae("span", {
  name: "MuiBadge",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  position: "relative",
  display: "inline-flex",
  // For correct alignment with the text.
  verticalAlign: "middle",
  flexShrink: 0
}), uN = Ae("span", {
  name: "MuiBadge",
  slot: "Badge",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.badge, t[n.variant], t[`anchorOrigin${Ee(n.anchorOrigin.vertical)}${Ee(n.anchorOrigin.horizontal)}${Ee(n.overlap)}`], n.color !== "default" && t[`color${Ee(n.color)}`], n.invisible && t.invisible];
  }
})(tt(({
  theme: e
}) => ({
  display: "flex",
  flexDirection: "row",
  flexWrap: "wrap",
  justifyContent: "center",
  alignContent: "center",
  alignItems: "center",
  position: "absolute",
  boxSizing: "border-box",
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(12),
  minWidth: Td * 2,
  lineHeight: 1,
  padding: "0 6px",
  height: Td * 2,
  borderRadius: Td,
  zIndex: 1,
  // Render the badge on top of potential ripples.
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeInOut,
    duration: e.transitions.duration.enteringScreen
  }),
  variants: [...Object.entries(e.palette).filter(xn(["contrastText"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main,
      color: (e.vars || e).palette[t].contrastText
    }
  })), {
    props: {
      variant: "dot"
    },
    style: {
      borderRadius: Cd,
      height: Cd * 2,
      minWidth: Cd * 2,
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      top: 0,
      right: 0,
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${ho.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      right: 0,
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${ho.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      top: 0,
      left: 0,
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${ho.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      left: 0,
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${ho.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      top: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${ho.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      bottom: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${ho.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      top: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${ho.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      bottom: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${ho.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: {
      invisible: !0
    },
    style: {
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeInOut,
        duration: e.transitions.duration.leavingScreen
      })
    }
  }]
})));
function Cg(e) {
  return {
    vertical: (e == null ? void 0 : e.vertical) ?? "top",
    horizontal: (e == null ? void 0 : e.horizontal) ?? "right"
  };
}
const pu = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiBadge"
  }), {
    anchorOrigin: o,
    className: i,
    classes: s,
    component: l,
    components: c = {},
    componentsProps: u = {},
    children: f,
    overlap: d = "rectangular",
    color: p = "default",
    invisible: h = !1,
    max: g = 99,
    badgeContent: m,
    slots: y,
    slotProps: x,
    showZero: E = !1,
    variant: v = "standard",
    ...w
  } = r, {
    badgeContent: S,
    invisible: T,
    max: C,
    displayValue: R
  } = oN({
    max: g,
    invisible: h,
    badgeContent: m,
    showZero: E
  }), I = Bv({
    anchorOrigin: Cg(o),
    color: p,
    overlap: d,
    variant: v,
    badgeContent: m
  }), b = T || S == null && v !== "dot", {
    color: k = p,
    overlap: P = d,
    anchorOrigin: A,
    variant: O = v
  } = b ? I : r, _ = Cg(A), $ = O !== "dot" ? R : void 0, D = {
    ...r,
    badgeContent: S,
    invisible: b,
    max: C,
    displayValue: $,
    showZero: E,
    anchorOrigin: _,
    color: k,
    overlap: P,
    variant: O
  }, z = lN(D), B = (y == null ? void 0 : y.root) ?? c.Root ?? cN, L = (y == null ? void 0 : y.badge) ?? c.Badge ?? uN, F = (x == null ? void 0 : x.root) ?? u.root, W = (x == null ? void 0 : x.badge) ?? u.badge, U = kf({
    elementType: B,
    externalSlotProps: F,
    externalForwardedProps: w,
    additionalProps: {
      ref: n,
      as: l
    },
    ownerState: D,
    className: Oe(F == null ? void 0 : F.className, z.root, i)
  }), Z = kf({
    elementType: L,
    externalSlotProps: W,
    ownerState: D,
    className: Oe(z.badge, W == null ? void 0 : W.className)
  });
  return /* @__PURE__ */ we(B, {
    ...U,
    children: [f, /* @__PURE__ */ N(L, {
      ...Z,
      children: $
    })]
  });
});
process.env.NODE_ENV !== "production" && (pu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The anchor of the badge.
   * @default {
   *   vertical: 'top',
   *   horizontal: 'right',
   * }
   */
  anchorOrigin: a.shape({
    horizontal: a.oneOf(["left", "right"]),
    vertical: a.oneOf(["bottom", "top"])
  }),
  /**
   * The content rendered within the badge.
   */
  badgeContent: a.node,
  /**
   * The badge will be added relative to this node.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Badge: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    badge: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * If `true`, the badge is invisible.
   * @default false
   */
  invisible: a.bool,
  /**
   * Max count to show.
   * @default 99
   */
  max: a.number,
  /**
   * Wrapped shape the badge should overlap.
   * @default 'rectangular'
   */
  overlap: a.oneOf(["circular", "rectangular"]),
  /**
   * Controls whether the badge is hidden when `badgeContent` is zero.
   * @default false
   */
  showZero: a.bool,
  /**
   * The props used for each slot inside the Badge.
   * @default {}
   */
  slotProps: a.shape({
    badge: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Badge.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    badge: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: a.oneOfType([a.oneOf(["dot", "standard"]), a.string])
});
function eh({ position: e, color: t }) {
  const n = Ye(() => {
    switch (e) {
      case "top-left":
        return {
          vertical: "top",
          horizontal: "left",
          transform: "translate(-2px, -2px)"
        };
      case "bottom-left":
        return {
          vertical: "bottom",
          horizontal: "left",
          transform: "translate(-2px, 2px)"
        };
      case "bottom-right":
        return {
          vertical: "bottom",
          horizontal: "right",
          transform: "translate(2px, 2px)"
        };
      case "top-right":
      default:
        return {
          vertical: "top",
          horizontal: "right",
          transform: "translate(2px, -2px)"
        };
    }
  }, [e]), r = Ye(() => {
    switch (t) {
      case "auto":
        return "inherit";
      case "success":
        return "success.main";
      case "primary":
        return "primary.main";
      case "error":
      default:
        return "error.main";
    }
  }, [t]);
  return {
    badgePlacementAttributes: n,
    badgeColor: r
  };
}
const rx = ve(
  ({ children: e, isVisible: t, position: n = "top-right", color: r = "error" }) => {
    const { badgePlacementAttributes: o, badgeColor: i } = eh({ position: n, color: r }), { vertical: s, horizontal: l, transform: c } = o;
    return /* @__PURE__ */ N(
      pu,
      {
        className: "VenomousUI-DotBadge",
        variant: "dot",
        invisible: !t,
        anchorOrigin: { vertical: s, horizontal: l },
        sx: {
          ".MuiBadge-badge": {
            ...t ? {
              transform: c,
              color: i,
              backgroundColor: i,
              boxShadow: "0 0 0 2px transparent",
              "&::after": {
                position: "absolute",
                top: 0,
                left: 0,
                width: "100%",
                height: "100%",
                borderRadius: "50%",
                animation: "ripple 1.2s infinite ease-in-out",
                border: "2px solid currentColor",
                content: '""'
              },
              "@keyframes ripple": {
                "0%": { transform: "scale(.8)", opacity: 1 },
                "100%": { transform: "scale(2.4)", opacity: 0 }
              }
            } : {}
          }
        },
        children: e
      }
    );
  }
);
rx.displayName = "DotBadge";
const ox = Object.freeze(
  {
    left: 0,
    top: 0,
    width: 16,
    height: 16
  }
), hc = Object.freeze({
  rotate: 0,
  vFlip: !1,
  hFlip: !1
}), th = Object.freeze({
  ...ox,
  ...hc
}), $f = Object.freeze({
  ...th,
  body: "",
  hidden: !1
});
function dN(e, t) {
  const n = {};
  !e.hFlip != !t.hFlip && (n.hFlip = !0), !e.vFlip != !t.vFlip && (n.vFlip = !0);
  const r = ((e.rotate || 0) + (t.rotate || 0)) % 4;
  return r && (n.rotate = r), n;
}
function Og(e, t) {
  const n = dN(e, t);
  for (const r in $f)
    r in hc ? r in e && !(r in n) && (n[r] = hc[r]) : r in t ? n[r] = t[r] : r in e && (n[r] = e[r]);
  return n;
}
function fN(e, t) {
  const n = e.icons, r = e.aliases || /* @__PURE__ */ Object.create(null), o = /* @__PURE__ */ Object.create(null);
  function i(s) {
    if (n[s])
      return o[s] = [];
    if (!(s in o)) {
      o[s] = null;
      const l = r[s] && r[s].parent, c = l && i(l);
      c && (o[s] = [l].concat(c));
    }
    return o[s];
  }
  return Object.keys(n).concat(Object.keys(r)).forEach(i), o;
}
function pN(e, t, n) {
  const r = e.icons, o = e.aliases || /* @__PURE__ */ Object.create(null);
  let i = {};
  function s(l) {
    i = Og(
      r[l] || o[l],
      i
    );
  }
  return s(t), n.forEach(s), Og(e, i);
}
function ix(e, t) {
  const n = [];
  if (typeof e != "object" || typeof e.icons != "object")
    return n;
  e.not_found instanceof Array && e.not_found.forEach((o) => {
    t(o, null), n.push(o);
  });
  const r = fN(e);
  for (const o in r) {
    const i = r[o];
    i && (t(o, pN(e, o, i)), n.push(o));
  }
  return n;
}
const hN = {
  provider: "",
  aliases: {},
  not_found: {},
  ...ox
};
function Od(e, t) {
  for (const n in t)
    if (n in e && typeof e[n] != typeof t[n])
      return !1;
  return !0;
}
function sx(e) {
  if (typeof e != "object" || e === null)
    return null;
  const t = e;
  if (typeof t.prefix != "string" || !e.icons || typeof e.icons != "object" || !Od(e, hN))
    return null;
  const n = t.icons;
  for (const o in n) {
    const i = n[o];
    if (
      // Name cannot be empty
      !o || // Must have body
      typeof i.body != "string" || // Check other props
      !Od(
        i,
        $f
      )
    )
      return null;
  }
  const r = t.aliases || /* @__PURE__ */ Object.create(null);
  for (const o in r) {
    const i = r[o], s = i.parent;
    if (
      // Name cannot be empty
      !o || // Parent must be set and point to existing icon
      typeof s != "string" || !n[s] && !r[s] || // Check other props
      !Od(
        i,
        $f
      )
    )
      return null;
  }
  return t;
}
const ax = /^[a-z0-9]+(-[a-z0-9]+)*$/, hu = (e, t, n, r = "") => {
  const o = e.split(":");
  if (e.slice(0, 1) === "@") {
    if (o.length < 2 || o.length > 3)
      return null;
    r = o.shift().slice(1);
  }
  if (o.length > 3 || !o.length)
    return null;
  if (o.length > 1) {
    const l = o.pop(), c = o.pop(), u = {
      // Allow provider without '@': "provider:prefix:name"
      provider: o.length > 0 ? o[0] : r,
      prefix: c,
      name: l
    };
    return t && !Xl(u) ? null : u;
  }
  const i = o[0], s = i.split("-");
  if (s.length > 1) {
    const l = {
      provider: r,
      prefix: s.shift(),
      name: s.join("-")
    };
    return t && !Xl(l) ? null : l;
  }
  if (n && r === "") {
    const l = {
      provider: r,
      prefix: "",
      name: i
    };
    return t && !Xl(l, n) ? null : l;
  }
  return null;
}, Xl = (e, t) => e ? !!// Check prefix: cannot be empty, unless allowSimpleName is enabled
// Check name: cannot be empty
((t && e.prefix === "" || e.prefix) && e.name) : !1, kg = /* @__PURE__ */ Object.create(null);
function mN(e, t) {
  return {
    provider: e,
    prefix: t,
    icons: /* @__PURE__ */ Object.create(null),
    missing: /* @__PURE__ */ new Set()
  };
}
function Vi(e, t) {
  const n = kg[e] || (kg[e] = /* @__PURE__ */ Object.create(null));
  return n[t] || (n[t] = mN(e, t));
}
function lx(e, t) {
  return sx(t) ? ix(t, (n, r) => {
    r ? e.icons[n] = r : e.missing.add(n);
  }) : [];
}
function gN(e, t, n) {
  try {
    if (typeof n.body == "string")
      return e.icons[t] = { ...n }, !0;
  } catch {
  }
  return !1;
}
let pa = !1;
function cx(e) {
  return typeof e == "boolean" && (pa = e), pa;
}
function Rg(e) {
  const t = typeof e == "string" ? hu(e, !0, pa) : e;
  if (t) {
    const n = Vi(t.provider, t.prefix), r = t.name;
    return n.icons[r] || (n.missing.has(r) ? null : void 0);
  }
}
function yN(e, t) {
  const n = hu(e, !0, pa);
  if (!n)
    return !1;
  const r = Vi(n.provider, n.prefix);
  return t ? gN(r, n.name, t) : (r.missing.add(n.name), !0);
}
function bN(e, t) {
  if (typeof e != "object")
    return !1;
  if (typeof t != "string" && (t = e.provider || ""), pa && !t && !e.prefix) {
    let o = !1;
    return sx(e) && (e.prefix = "", ix(e, (i, s) => {
      yN(i, s) && (o = !0);
    })), o;
  }
  const n = e.prefix;
  if (!Xl({
    prefix: n,
    name: "a"
  }))
    return !1;
  const r = Vi(t, n);
  return !!lx(r, e);
}
const ux = Object.freeze({
  width: null,
  height: null
}), dx = Object.freeze({
  // Dimensions
  ...ux,
  // Transformations
  ...hc
}), vN = /(-?[0-9.]*[0-9]+[0-9.]*)/g, xN = /^-?[0-9.]*[0-9]+[0-9.]*$/g;
function Ng(e, t, n) {
  if (t === 1)
    return e;
  if (n = n || 100, typeof e == "number")
    return Math.ceil(e * t * n) / n;
  if (typeof e != "string")
    return e;
  const r = e.split(vN);
  if (r === null || !r.length)
    return e;
  const o = [];
  let i = r.shift(), s = xN.test(i);
  for (; ; ) {
    if (s) {
      const l = parseFloat(i);
      isNaN(l) ? o.push(i) : o.push(Math.ceil(l * t * n) / n);
    } else
      o.push(i);
    if (i = r.shift(), i === void 0)
      return o.join("");
    s = !s;
  }
}
function wN(e, t = "defs") {
  let n = "";
  const r = e.indexOf("<" + t);
  for (; r >= 0; ) {
    const o = e.indexOf(">", r), i = e.indexOf("</" + t);
    if (o === -1 || i === -1)
      break;
    const s = e.indexOf(">", i);
    if (s === -1)
      break;
    n += e.slice(o + 1, i).trim(), e = e.slice(0, r).trim() + e.slice(s + 1);
  }
  return {
    defs: n,
    content: e
  };
}
function SN(e, t) {
  return e ? "<defs>" + e + "</defs>" + t : t;
}
function EN(e, t, n) {
  const r = wN(e);
  return SN(r.defs, t + r.content + n);
}
const TN = (e) => e === "unset" || e === "undefined" || e === "none";
function CN(e, t) {
  const n = {
    ...th,
    ...e
  }, r = {
    ...dx,
    ...t
  }, o = {
    left: n.left,
    top: n.top,
    width: n.width,
    height: n.height
  };
  let i = n.body;
  [n, r].forEach((m) => {
    const y = [], x = m.hFlip, E = m.vFlip;
    let v = m.rotate;
    x ? E ? v += 2 : (y.push(
      "translate(" + (o.width + o.left).toString() + " " + (0 - o.top).toString() + ")"
    ), y.push("scale(-1 1)"), o.top = o.left = 0) : E && (y.push(
      "translate(" + (0 - o.left).toString() + " " + (o.height + o.top).toString() + ")"
    ), y.push("scale(1 -1)"), o.top = o.left = 0);
    let w;
    switch (v < 0 && (v -= Math.floor(v / 4) * 4), v = v % 4, v) {
      case 1:
        w = o.height / 2 + o.top, y.unshift(
          "rotate(90 " + w.toString() + " " + w.toString() + ")"
        );
        break;
      case 2:
        y.unshift(
          "rotate(180 " + (o.width / 2 + o.left).toString() + " " + (o.height / 2 + o.top).toString() + ")"
        );
        break;
      case 3:
        w = o.width / 2 + o.left, y.unshift(
          "rotate(-90 " + w.toString() + " " + w.toString() + ")"
        );
        break;
    }
    v % 2 === 1 && (o.left !== o.top && (w = o.left, o.left = o.top, o.top = w), o.width !== o.height && (w = o.width, o.width = o.height, o.height = w)), y.length && (i = EN(
      i,
      '<g transform="' + y.join(" ") + '">',
      "</g>"
    ));
  });
  const s = r.width, l = r.height, c = o.width, u = o.height;
  let f, d;
  s === null ? (d = l === null ? "1em" : l === "auto" ? u : l, f = Ng(d, c / u)) : (f = s === "auto" ? c : s, d = l === null ? Ng(f, u / c) : l === "auto" ? u : l);
  const p = {}, h = (m, y) => {
    TN(y) || (p[m] = y.toString());
  };
  h("width", f), h("height", d);
  const g = [o.left, o.top, c, u];
  return p.viewBox = g.join(" "), {
    attributes: p,
    viewBox: g,
    body: i
  };
}
const ON = /\sid="(\S+)"/g, kN = "IconifyId" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);
let RN = 0;
function NN(e, t = kN) {
  const n = [];
  let r;
  for (; r = ON.exec(e); )
    n.push(r[1]);
  if (!n.length)
    return e;
  const o = "suffix" + (Math.random() * 16777216 | Date.now()).toString(16);
  return n.forEach((i) => {
    const s = typeof t == "function" ? t(i) : t + (RN++).toString(), l = i.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    e = e.replace(
      // Allowed characters before id: [#;"]
      // Allowed characters after id: [)"], .[a-z]
      new RegExp('([#;"])(' + l + ')([")]|\\.[a-z])', "g"),
      "$1" + s + o + "$3"
    );
  }), e = e.replace(new RegExp(o, "g"), ""), e;
}
const Pf = /* @__PURE__ */ Object.create(null);
function $N(e, t) {
  Pf[e] = t;
}
function If(e) {
  return Pf[e] || Pf[""];
}
function nh(e) {
  let t;
  if (typeof e.resources == "string")
    t = [e.resources];
  else if (t = e.resources, !(t instanceof Array) || !t.length)
    return null;
  return {
    // API hosts
    resources: t,
    // Root path
    path: e.path || "/",
    // URL length limit
    maxURL: e.maxURL || 500,
    // Timeout before next host is used.
    rotate: e.rotate || 750,
    // Timeout before failing query.
    timeout: e.timeout || 5e3,
    // Randomise default API end point.
    random: e.random === !0,
    // Start index
    index: e.index || 0,
    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).
    dataAfterTimeout: e.dataAfterTimeout !== !1
  };
}
const rh = /* @__PURE__ */ Object.create(null), Ss = [
  "https://api.simplesvg.com",
  "https://api.unisvg.com"
], Zl = [];
for (; Ss.length > 0; )
  Ss.length === 1 || Math.random() > 0.5 ? Zl.push(Ss.shift()) : Zl.push(Ss.pop());
rh[""] = nh({
  resources: ["https://api.iconify.design"].concat(Zl)
});
function PN(e, t) {
  const n = nh(t);
  return n === null ? !1 : (rh[e] = n, !0);
}
function oh(e) {
  return rh[e];
}
const IN = () => {
  let e;
  try {
    if (e = fetch, typeof e == "function")
      return e;
  } catch {
  }
};
let $g = IN();
function _N(e, t) {
  const n = oh(e);
  if (!n)
    return 0;
  let r;
  if (!n.maxURL)
    r = 0;
  else {
    let o = 0;
    n.resources.forEach((s) => {
      o = Math.max(o, s.length);
    });
    const i = t + ".json?icons=";
    r = n.maxURL - o - n.path.length - i.length;
  }
  return r;
}
function MN(e) {
  return e === 404;
}
const AN = (e, t, n) => {
  const r = [], o = _N(e, t), i = "icons";
  let s = {
    type: i,
    provider: e,
    prefix: t,
    icons: []
  }, l = 0;
  return n.forEach((c, u) => {
    l += c.length + 1, l >= o && u > 0 && (r.push(s), s = {
      type: i,
      provider: e,
      prefix: t,
      icons: []
    }, l = c.length), s.icons.push(c);
  }), r.push(s), r;
};
function DN(e) {
  if (typeof e == "string") {
    const t = oh(e);
    if (t)
      return t.path;
  }
  return "/";
}
const BN = (e, t, n) => {
  if (!$g) {
    n("abort", 424);
    return;
  }
  let r = DN(t.provider);
  switch (t.type) {
    case "icons": {
      const i = t.prefix, l = t.icons.join(","), c = new URLSearchParams({
        icons: l
      });
      r += i + ".json?" + c.toString();
      break;
    }
    case "custom": {
      const i = t.uri;
      r += i.slice(0, 1) === "/" ? i.slice(1) : i;
      break;
    }
    default:
      n("abort", 400);
      return;
  }
  let o = 503;
  $g(e + r).then((i) => {
    const s = i.status;
    if (s !== 200) {
      setTimeout(() => {
        n(MN(s) ? "abort" : "next", s);
      });
      return;
    }
    return o = 501, i.json();
  }).then((i) => {
    if (typeof i != "object" || i === null) {
      setTimeout(() => {
        i === 404 ? n("abort", i) : n("next", o);
      });
      return;
    }
    setTimeout(() => {
      n("success", i);
    });
  }).catch(() => {
    n("next", o);
  });
}, LN = {
  prepare: AN,
  send: BN
};
function FN(e) {
  const t = {
    loaded: [],
    missing: [],
    pending: []
  }, n = /* @__PURE__ */ Object.create(null);
  e.sort((o, i) => o.provider !== i.provider ? o.provider.localeCompare(i.provider) : o.prefix !== i.prefix ? o.prefix.localeCompare(i.prefix) : o.name.localeCompare(i.name));
  let r = {
    provider: "",
    prefix: "",
    name: ""
  };
  return e.forEach((o) => {
    if (r.name === o.name && r.prefix === o.prefix && r.provider === o.provider)
      return;
    r = o;
    const i = o.provider, s = o.prefix, l = o.name, c = n[i] || (n[i] = /* @__PURE__ */ Object.create(null)), u = c[s] || (c[s] = Vi(i, s));
    let f;
    l in u.icons ? f = t.loaded : s === "" || u.missing.has(l) ? f = t.missing : f = t.pending;
    const d = {
      provider: i,
      prefix: s,
      name: l
    };
    f.push(d);
  }), t;
}
function fx(e, t) {
  e.forEach((n) => {
    const r = n.loaderCallbacks;
    r && (n.loaderCallbacks = r.filter((o) => o.id !== t));
  });
}
function zN(e) {
  e.pendingCallbacksFlag || (e.pendingCallbacksFlag = !0, setTimeout(() => {
    e.pendingCallbacksFlag = !1;
    const t = e.loaderCallbacks ? e.loaderCallbacks.slice(0) : [];
    if (!t.length)
      return;
    let n = !1;
    const r = e.provider, o = e.prefix;
    t.forEach((i) => {
      const s = i.icons, l = s.pending.length;
      s.pending = s.pending.filter((c) => {
        if (c.prefix !== o)
          return !0;
        const u = c.name;
        if (e.icons[u])
          s.loaded.push({
            provider: r,
            prefix: o,
            name: u
          });
        else if (e.missing.has(u))
          s.missing.push({
            provider: r,
            prefix: o,
            name: u
          });
        else
          return n = !0, !0;
        return !1;
      }), s.pending.length !== l && (n || fx([e], i.id), i.callback(
        s.loaded.slice(0),
        s.missing.slice(0),
        s.pending.slice(0),
        i.abort
      ));
    });
  }));
}
let VN = 0;
function jN(e, t, n) {
  const r = VN++, o = fx.bind(null, n, r);
  if (!t.pending.length)
    return o;
  const i = {
    id: r,
    icons: t,
    callback: e,
    abort: o
  };
  return n.forEach((s) => {
    (s.loaderCallbacks || (s.loaderCallbacks = [])).push(i);
  }), o;
}
function HN(e, t = !0, n = !1) {
  const r = [];
  return e.forEach((o) => {
    const i = typeof o == "string" ? hu(o, t, n) : o;
    i && r.push(i);
  }), r;
}
var WN = {
  resources: [],
  index: 0,
  timeout: 2e3,
  rotate: 750,
  random: !1,
  dataAfterTimeout: !1
};
function UN(e, t, n, r) {
  const o = e.resources.length, i = e.random ? Math.floor(Math.random() * o) : e.index;
  let s;
  if (e.random) {
    let T = e.resources.slice(0);
    for (s = []; T.length > 1; ) {
      const C = Math.floor(Math.random() * T.length);
      s.push(T[C]), T = T.slice(0, C).concat(T.slice(C + 1));
    }
    s = s.concat(T);
  } else
    s = e.resources.slice(i).concat(e.resources.slice(0, i));
  const l = Date.now();
  let c = "pending", u = 0, f, d = null, p = [], h = [];
  typeof r == "function" && h.push(r);
  function g() {
    d && (clearTimeout(d), d = null);
  }
  function m() {
    c === "pending" && (c = "aborted"), g(), p.forEach((T) => {
      T.status === "pending" && (T.status = "aborted");
    }), p = [];
  }
  function y(T, C) {
    C && (h = []), typeof T == "function" && h.push(T);
  }
  function x() {
    return {
      startTime: l,
      payload: t,
      status: c,
      queriesSent: u,
      queriesPending: p.length,
      subscribe: y,
      abort: m
    };
  }
  function E() {
    c = "failed", h.forEach((T) => {
      T(void 0, f);
    });
  }
  function v() {
    p.forEach((T) => {
      T.status === "pending" && (T.status = "aborted");
    }), p = [];
  }
  function w(T, C, R) {
    const I = C !== "success";
    switch (p = p.filter((b) => b !== T), c) {
      case "pending":
        break;
      case "failed":
        if (I || !e.dataAfterTimeout)
          return;
        break;
      default:
        return;
    }
    if (C === "abort") {
      f = R, E();
      return;
    }
    if (I) {
      f = R, p.length || (s.length ? S() : E());
      return;
    }
    if (g(), v(), !e.random) {
      const b = e.resources.indexOf(T.resource);
      b !== -1 && b !== e.index && (e.index = b);
    }
    c = "completed", h.forEach((b) => {
      b(R);
    });
  }
  function S() {
    if (c !== "pending")
      return;
    g();
    const T = s.shift();
    if (T === void 0) {
      if (p.length) {
        d = setTimeout(() => {
          g(), c === "pending" && (v(), E());
        }, e.timeout);
        return;
      }
      E();
      return;
    }
    const C = {
      status: "pending",
      resource: T,
      callback: (R, I) => {
        w(C, R, I);
      }
    };
    p.push(C), u++, d = setTimeout(S, e.rotate), n(T, t, C.callback);
  }
  return setTimeout(S), x;
}
function px(e) {
  const t = {
    ...WN,
    ...e
  };
  let n = [];
  function r() {
    n = n.filter((l) => l().status === "pending");
  }
  function o(l, c, u) {
    const f = UN(
      t,
      l,
      c,
      (d, p) => {
        r(), u && u(d, p);
      }
    );
    return n.push(f), f;
  }
  function i(l) {
    return n.find((c) => l(c)) || null;
  }
  return {
    query: o,
    find: i,
    setIndex: (l) => {
      t.index = l;
    },
    getIndex: () => t.index,
    cleanup: r
  };
}
function Pg() {
}
const kd = /* @__PURE__ */ Object.create(null);
function qN(e) {
  if (!kd[e]) {
    const t = oh(e);
    if (!t)
      return;
    const n = px(t), r = {
      config: t,
      redundancy: n
    };
    kd[e] = r;
  }
  return kd[e];
}
function YN(e, t, n) {
  let r, o;
  if (typeof e == "string") {
    const i = If(e);
    if (!i)
      return n(void 0, 424), Pg;
    o = i.send;
    const s = qN(e);
    s && (r = s.redundancy);
  } else {
    const i = nh(e);
    if (i) {
      r = px(i);
      const s = e.resources ? e.resources[0] : "", l = If(s);
      l && (o = l.send);
    }
  }
  return !r || !o ? (n(void 0, 424), Pg) : r.query(t, o, n)().abort;
}
function Ig() {
}
function KN(e) {
  e.iconsLoaderFlag || (e.iconsLoaderFlag = !0, setTimeout(() => {
    e.iconsLoaderFlag = !1, zN(e);
  }));
}
function GN(e) {
  const t = [], n = [];
  return e.forEach((r) => {
    (r.match(ax) ? t : n).push(r);
  }), {
    valid: t,
    invalid: n
  };
}
function Es(e, t, n) {
  function r() {
    const o = e.pendingIcons;
    t.forEach((i) => {
      o && o.delete(i), e.icons[i] || e.missing.add(i);
    });
  }
  if (n && typeof n == "object")
    try {
      if (!lx(e, n).length) {
        r();
        return;
      }
    } catch (o) {
      console.error(o);
    }
  r(), KN(e);
}
function _g(e, t) {
  e instanceof Promise ? e.then((n) => {
    t(n);
  }).catch(() => {
    t(null);
  }) : t(e);
}
function XN(e, t) {
  e.iconsToLoad ? e.iconsToLoad = e.iconsToLoad.concat(t).sort() : e.iconsToLoad = t, e.iconsQueueFlag || (e.iconsQueueFlag = !0, setTimeout(() => {
    e.iconsQueueFlag = !1;
    const { provider: n, prefix: r } = e, o = e.iconsToLoad;
    if (delete e.iconsToLoad, !o || !o.length)
      return;
    const i = e.loadIcon;
    if (e.loadIcons && (o.length > 1 || !i)) {
      _g(
        e.loadIcons(o, r, n),
        (f) => {
          Es(e, o, f);
        }
      );
      return;
    }
    if (i) {
      o.forEach((f) => {
        const d = i(f, r, n);
        _g(d, (p) => {
          const h = p ? {
            prefix: r,
            icons: {
              [f]: p
            }
          } : null;
          Es(e, [f], h);
        });
      });
      return;
    }
    const { valid: s, invalid: l } = GN(o);
    if (l.length && Es(e, l, null), !s.length)
      return;
    const c = r.match(ax) ? If(n) : null;
    if (!c) {
      Es(e, s, null);
      return;
    }
    c.prepare(n, r, s).forEach((f) => {
      YN(n, f, (d) => {
        Es(e, f.icons, d);
      });
    });
  }));
}
const ZN = (e, t) => {
  const n = HN(e, !0, cx()), r = FN(n);
  if (!r.pending.length) {
    let c = !0;
    return t && setTimeout(() => {
      c && t(
        r.loaded,
        r.missing,
        r.pending,
        Ig
      );
    }), () => {
      c = !1;
    };
  }
  const o = /* @__PURE__ */ Object.create(null), i = [];
  let s, l;
  return r.pending.forEach((c) => {
    const { provider: u, prefix: f } = c;
    if (f === l && u === s)
      return;
    s = u, l = f, i.push(Vi(u, f));
    const d = o[u] || (o[u] = /* @__PURE__ */ Object.create(null));
    d[f] || (d[f] = []);
  }), r.pending.forEach((c) => {
    const { provider: u, prefix: f, name: d } = c, p = Vi(u, f), h = p.pendingIcons || (p.pendingIcons = /* @__PURE__ */ new Set());
    h.has(d) || (h.add(d), o[u][f].push(d));
  }), i.forEach((c) => {
    const u = o[c.provider][c.prefix];
    u.length && XN(c, u);
  }), t ? jN(t, r, i) : Ig;
};
function QN(e, t) {
  const n = {
    ...e
  };
  for (const r in t) {
    const o = t[r], i = typeof o;
    r in ux ? (o === null || o && (i === "string" || i === "number")) && (n[r] = o) : i === typeof n[r] && (n[r] = r === "rotate" ? o % 4 : o);
  }
  return n;
}
const JN = /[\s,]+/;
function e$(e, t) {
  t.split(JN).forEach((n) => {
    switch (n.trim()) {
      case "horizontal":
        e.hFlip = !0;
        break;
      case "vertical":
        e.vFlip = !0;
        break;
    }
  });
}
function t$(e, t = 0) {
  const n = e.replace(/^-?[0-9.]*/, "");
  function r(o) {
    for (; o < 0; )
      o += 4;
    return o % 4;
  }
  if (n === "") {
    const o = parseInt(e);
    return isNaN(o) ? 0 : r(o);
  } else if (n !== e) {
    let o = 0;
    switch (n) {
      case "%":
        o = 25;
        break;
      case "deg":
        o = 90;
    }
    if (o) {
      let i = parseFloat(e.slice(0, e.length - n.length));
      return isNaN(i) ? 0 : (i = i / o, i % 1 === 0 ? r(i) : 0);
    }
  }
  return t;
}
function n$(e, t) {
  let n = e.indexOf("xlink:") === -1 ? "" : ' xmlns:xlink="http://www.w3.org/1999/xlink"';
  for (const r in t)
    n += " " + r + '="' + t[r] + '"';
  return '<svg xmlns="http://www.w3.org/2000/svg"' + n + ">" + e + "</svg>";
}
function r$(e) {
  return e.replace(/"/g, "'").replace(/%/g, "%25").replace(/#/g, "%23").replace(/</g, "%3C").replace(/>/g, "%3E").replace(/\s+/g, " ");
}
function o$(e) {
  return "data:image/svg+xml," + r$(e);
}
function i$(e) {
  return 'url("' + o$(e) + '")';
}
let Ks;
function s$() {
  try {
    Ks = window.trustedTypes.createPolicy("iconify", {
      // eslint-disable-next-line @typescript-eslint/no-unsafe-return
      createHTML: (e) => e
    });
  } catch {
    Ks = null;
  }
}
function a$(e) {
  return Ks === void 0 && s$(), Ks ? Ks.createHTML(e) : e;
}
const hx = {
  ...dx,
  inline: !1
}, l$ = {
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink",
  "aria-hidden": !0,
  role: "img"
}, c$ = {
  display: "inline-block"
}, _f = {
  backgroundColor: "currentColor"
}, mx = {
  backgroundColor: "transparent"
}, Mg = {
  Image: "var(--svg)",
  Repeat: "no-repeat",
  Size: "100% 100%"
}, Ag = {
  WebkitMask: _f,
  mask: _f,
  background: mx
};
for (const e in Ag) {
  const t = Ag[e];
  for (const n in Mg)
    t[e + n] = Mg[n];
}
const u$ = {
  ...hx,
  inline: !0
};
function Dg(e) {
  return e + (e.match(/^[-0-9.]+$/) ? "px" : "");
}
const d$ = (e, t, n) => {
  const r = t.inline ? u$ : hx, o = QN(r, t), i = t.mode || "svg", s = {}, l = t.style || {}, c = {
    ...i === "svg" ? l$ : {}
  };
  if (n) {
    const y = hu(n, !1, !0);
    if (y) {
      const x = ["iconify"], E = [
        "provider",
        "prefix"
      ];
      for (const v of E)
        y[v] && x.push("iconify--" + y[v]);
      c.className = x.join(" ");
    }
  }
  for (let y in t) {
    const x = t[y];
    if (x !== void 0)
      switch (y) {
        // Properties to ignore
        case "icon":
        case "style":
        case "children":
        case "onLoad":
        case "mode":
        case "ssr":
          break;
        // Forward ref
        case "_ref":
          c.ref = x;
          break;
        // Merge class names
        case "className":
          c[y] = (c[y] ? c[y] + " " : "") + x;
          break;
        // Boolean attributes
        case "inline":
        case "hFlip":
        case "vFlip":
          o[y] = x === !0 || x === "true" || x === 1;
          break;
        // Flip as string: 'horizontal,vertical'
        case "flip":
          typeof x == "string" && e$(o, x);
          break;
        // Color: copy to style
        case "color":
          s.color = x;
          break;
        // Rotation as string
        case "rotate":
          typeof x == "string" ? o[y] = t$(x) : typeof x == "number" && (o[y] = x);
          break;
        // Remove aria-hidden
        case "ariaHidden":
        case "aria-hidden":
          x !== !0 && x !== "true" && delete c["aria-hidden"];
          break;
        // Copy missing property if it does not exist in customisations
        default:
          r[y] === void 0 && (c[y] = x);
      }
  }
  const u = CN(e, o), f = u.attributes;
  if (o.inline && (s.verticalAlign = "-0.125em"), i === "svg") {
    c.style = {
      ...s,
      ...l
    }, Object.assign(c, f);
    let y = 0, x = t.id;
    return typeof x == "string" && (x = x.replace(/-/g, "_")), c.dangerouslySetInnerHTML = {
      __html: a$(NN(u.body, x ? () => x + "ID" + y++ : "iconifyReact"))
    }, Go("svg", c);
  }
  const { body: d, width: p, height: h } = e, g = i === "mask" || (i === "bg" ? !1 : d.indexOf("currentColor") !== -1), m = n$(d, {
    ...f,
    width: p + "",
    height: h + ""
  });
  return c.style = {
    ...s,
    "--svg": i$(m),
    width: Dg(f.width),
    height: Dg(f.height),
    ...c$,
    ...g ? _f : mx,
    ...l
  }, Go("span", c);
};
cx(!0);
$N("", LN);
if (typeof document < "u" && typeof window < "u") {
  const e = window;
  if (e.IconifyPreload !== void 0) {
    const t = e.IconifyPreload, n = "Invalid IconifyPreload syntax.";
    typeof t == "object" && t !== null && (t instanceof Array ? t : [t]).forEach((r) => {
      try {
        // Check if item is an object and not null/array
        (typeof r != "object" || r === null || r instanceof Array || // Check for 'icons' and 'prefix'
        typeof r.icons != "object" || typeof r.prefix != "string" || // Add icon set
        !bN(r)) && console.error(n);
      } catch {
        console.error(n);
      }
    });
  }
  if (e.IconifyProviders !== void 0) {
    const t = e.IconifyProviders;
    if (typeof t == "object" && t !== null)
      for (let n in t) {
        const r = "IconifyProviders[" + n + "] is invalid.";
        try {
          const o = t[n];
          if (typeof o != "object" || !o || o.resources === void 0)
            continue;
          PN(n, o) || console.error(r);
        } catch {
          console.error(r);
        }
      }
  }
}
function gx(e) {
  const [t, n] = Jt(!!e.ssr), [r, o] = Jt({});
  function i(h) {
    if (h) {
      const g = e.icon;
      if (typeof g == "object")
        return {
          name: "",
          data: g
        };
      const m = Rg(g);
      if (m)
        return {
          name: g,
          data: m
        };
    }
    return {
      name: ""
    };
  }
  const [s, l] = Jt(i(!!e.ssr));
  function c() {
    const h = r.callback;
    h && (h(), o({}));
  }
  function u(h) {
    if (JSON.stringify(s) !== JSON.stringify(h))
      return c(), l(h), !0;
  }
  function f() {
    var h;
    const g = e.icon;
    if (typeof g == "object") {
      u({
        name: "",
        data: g
      });
      return;
    }
    const m = Rg(g);
    if (u({
      name: g,
      data: m
    }))
      if (m === void 0) {
        const y = ZN([g], f);
        o({
          callback: y
        });
      } else m && ((h = e.onLoad) === null || h === void 0 || h.call(e, g));
  }
  Xe(() => (n(!0), c), []), Xe(() => {
    t && f();
  }, [e.icon, t]);
  const { name: d, data: p } = s;
  return p ? d$({
    ...th,
    ...p
  }, e, d) : e.children ? e.children : e.fallback ? e.fallback : Go("span", {});
}
const f$ = Aa((e, t) => gx({
  ...e,
  _ref: t
}));
Aa((e, t) => gx({
  inline: !0,
  ...e,
  _ref: t
}));
function Rd({
  theme: e,
  ...t
}) {
  const n = fr in e ? e[fr] : void 0;
  return /* @__PURE__ */ N(da, {
    ...t,
    themeId: n ? fr : void 0,
    theme: n || e
  });
}
const bl = {
  colorSchemeStorageKey: "mui-color-scheme",
  defaultLightColorScheme: "light",
  defaultDarkColorScheme: "dark",
  modeStorageKey: "mui-mode"
}, {
  CssVarsProvider: p$
} = iR({
  themeId: fr,
  // @ts-ignore ignore module augmentation tests
  theme: () => fu({
    cssVariables: !0
  }),
  colorSchemeStorageKey: bl.colorSchemeStorageKey,
  modeStorageKey: bl.modeStorageKey,
  defaultColorScheme: {
    light: bl.defaultLightColorScheme,
    dark: bl.defaultDarkColorScheme
  },
  resolveTheme: (e) => {
    const t = {
      ...e,
      typography: Zv(e.palette, e.typography)
    };
    return t.unstable_sx = function(r) {
      return To({
        sx: r,
        theme: this
      });
    }, t;
  }
}), h$ = p$;
function m$({
  theme: e,
  ...t
}) {
  if (typeof e == "function")
    return /* @__PURE__ */ N(Rd, {
      theme: e,
      ...t
    });
  const n = fr in e ? e[fr] : e;
  return "colorSchemes" in n ? /* @__PURE__ */ N(h$, {
    theme: e,
    ...t
  }) : "vars" in n ? /* @__PURE__ */ N(Rd, {
    theme: e,
    ...t
  }) : /* @__PURE__ */ N(Rd, {
    theme: {
      ...e,
      vars: null
    },
    ...t
  });
}
const g$ = Rt("MuiBox", ["root"]), y$ = fu(), Br = gk({
  themeId: fr,
  defaultTheme: y$,
  defaultClassName: g$.root,
  generateClassName: Sv.generate
});
process.env.NODE_ENV !== "production" && (Br.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: a.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const hr = ve(({ ref: e, icon: t, width: n = 20, color: r = "auto", sx: o, ...i }) => /* @__PURE__ */ N(
  Br,
  {
    className: "VenomousUI-Icon",
    ssr: !0,
    ref: e,
    component: f$,
    icon: t,
    sx: {
      width: n,
      height: n,
      flexShrink: 0,
      display: "inline-flex",
      color: (s) => r === "error" ? s.palette.error.main : r === "primary" ? s.palette.primary.main : r === "success" ? s.palette.success.main : r === "disabled" ? s.palette.action.disabled : "inherit",
      ...o
    },
    ...i
  }
));
hr.displayName = "Icon";
function b$(e) {
  return Et("MuiPaper", e);
}
Rt("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const v$ = (e) => {
  const {
    square: t,
    elevation: n,
    variant: r,
    classes: o
  } = e, i = {
    root: ["root", r, !t && "rounded", r === "elevation" && `elevation${n}`]
  };
  return At(i, b$, o);
}, x$ = Ae("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(tt(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), hs = /* @__PURE__ */ M.forwardRef(function(t, n) {
  var h;
  const r = Nt({
    props: t,
    name: "MuiPaper"
  }), o = uo(), {
    className: i,
    component: s = "div",
    elevation: l = 1,
    square: c = !1,
    variant: u = "elevation",
    ...f
  } = r, d = {
    ...r,
    component: s,
    elevation: l,
    square: c,
    variant: u
  }, p = v$(d);
  return process.env.NODE_ENV !== "production" && o.shadows[l] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${l}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${l}]\` is defined.`].join(`
`)), /* @__PURE__ */ N(x$, {
    as: s,
    ownerState: d,
    className: Oe(p.root, i),
    ref: n,
    ...f,
    style: {
      ...u === "elevation" && {
        "--Paper-shadow": (o.vars || o).shadows[l],
        ...o.vars && {
          "--Paper-overlay": (h = o.vars.overlays) == null ? void 0 : h[l]
        },
        ...!o.vars && o.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${on("#fff", Nf(l))}, ${on("#fff", Nf(l))})`
        }
      },
      ...f.style
    }
  });
});
process.env.NODE_ENV !== "production" && (hs.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: Po(qp, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: a.bool,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: a.oneOfType([a.oneOf(["elevation", "outlined"]), a.string])
});
function ms() {
  return {
    paperCommonStyles: Ye(
      () => ({
        p: "8px",
        borderRadius: "8px !important",
        backgroundColor: ({ palette: t }) => t.background.paper,
        backgroundImage: "linear-gradient(rgba(255, 255, 255, 0.119), rgba(255, 255, 255, 0.119));"
      }),
      []
    )
  };
}
const ro = ve(({ isOutlined: e, children: t, sx: n, ...r }) => {
  const { paperCommonStyles: o } = ms();
  return /* @__PURE__ */ N(
    hs,
    {
      className: "VenomousUI-Paper",
      variant: e ? "outlined" : "elevation",
      elevation: e ? 0 : 3,
      square: !0,
      sx: {
        ...o,
        ...n
      },
      ...r,
      children: t
    }
  );
});
ro.displayName = "Paper";
function yx(e, t) {
  if (e == null) return {};
  var n = {};
  for (var r in e) if ({}.hasOwnProperty.call(e, r)) {
    if (t.indexOf(r) !== -1) continue;
    n[r] = e[r];
  }
  return n;
}
function Mf(e, t) {
  return Mf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, r) {
    return n.__proto__ = r, n;
  }, Mf(e, t);
}
function bx(e, t) {
  e.prototype = Object.create(t.prototype), e.prototype.constructor = e, Mf(e, t);
}
const Bg = {
  disabled: !1
};
var w$ = process.env.NODE_ENV !== "production" ? a.oneOfType([a.number, a.shape({
  enter: a.number,
  exit: a.number,
  appear: a.number
}).isRequired]) : null;
process.env.NODE_ENV !== "production" && a.oneOfType([a.string, a.shape({
  enter: a.string,
  exit: a.string,
  active: a.string
}), a.shape({
  enter: a.string,
  enterDone: a.string,
  enterActive: a.string,
  exit: a.string,
  exitDone: a.string,
  exitActive: a.string
})]);
const mc = Y.createContext(null);
var S$ = function(t) {
  return t.scrollTop;
}, Fs = "unmounted", jo = "exited", Ho = "entering", Ci = "entered", Af = "exiting", Yn = /* @__PURE__ */ function(e) {
  bx(t, e);
  function t(r, o) {
    var i;
    i = e.call(this, r, o) || this;
    var s = o, l = s && !s.isMounting ? r.enter : r.appear, c;
    return i.appearStatus = null, r.in ? l ? (c = jo, i.appearStatus = Ho) : c = Ci : r.unmountOnExit || r.mountOnEnter ? c = Fs : c = jo, i.state = {
      status: c
    }, i.nextCallback = null, i;
  }
  t.getDerivedStateFromProps = function(o, i) {
    var s = o.in;
    return s && i.status === Fs ? {
      status: jo
    } : null;
  };
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.updateStatus(!0, this.appearStatus);
  }, n.componentDidUpdate = function(o) {
    var i = null;
    if (o !== this.props) {
      var s = this.state.status;
      this.props.in ? s !== Ho && s !== Ci && (i = Ho) : (s === Ho || s === Ci) && (i = Af);
    }
    this.updateStatus(!1, i);
  }, n.componentWillUnmount = function() {
    this.cancelNextCallback();
  }, n.getTimeouts = function() {
    var o = this.props.timeout, i, s, l;
    return i = s = l = o, o != null && typeof o != "number" && (i = o.exit, s = o.enter, l = o.appear !== void 0 ? o.appear : s), {
      exit: i,
      enter: s,
      appear: l
    };
  }, n.updateStatus = function(o, i) {
    if (o === void 0 && (o = !1), i !== null)
      if (this.cancelNextCallback(), i === Ho) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var s = this.props.nodeRef ? this.props.nodeRef.current : ki.findDOMNode(this);
          s && S$(s);
        }
        this.performEnter(o);
      } else
        this.performExit();
    else this.props.unmountOnExit && this.state.status === jo && this.setState({
      status: Fs
    });
  }, n.performEnter = function(o) {
    var i = this, s = this.props.enter, l = this.context ? this.context.isMounting : o, c = this.props.nodeRef ? [l] : [ki.findDOMNode(this), l], u = c[0], f = c[1], d = this.getTimeouts(), p = l ? d.appear : d.enter;
    if (!o && !s || Bg.disabled) {
      this.safeSetState({
        status: Ci
      }, function() {
        i.props.onEntered(u);
      });
      return;
    }
    this.props.onEnter(u, f), this.safeSetState({
      status: Ho
    }, function() {
      i.props.onEntering(u, f), i.onTransitionEnd(p, function() {
        i.safeSetState({
          status: Ci
        }, function() {
          i.props.onEntered(u, f);
        });
      });
    });
  }, n.performExit = function() {
    var o = this, i = this.props.exit, s = this.getTimeouts(), l = this.props.nodeRef ? void 0 : ki.findDOMNode(this);
    if (!i || Bg.disabled) {
      this.safeSetState({
        status: jo
      }, function() {
        o.props.onExited(l);
      });
      return;
    }
    this.props.onExit(l), this.safeSetState({
      status: Af
    }, function() {
      o.props.onExiting(l), o.onTransitionEnd(s.exit, function() {
        o.safeSetState({
          status: jo
        }, function() {
          o.props.onExited(l);
        });
      });
    });
  }, n.cancelNextCallback = function() {
    this.nextCallback !== null && (this.nextCallback.cancel(), this.nextCallback = null);
  }, n.safeSetState = function(o, i) {
    i = this.setNextCallback(i), this.setState(o, i);
  }, n.setNextCallback = function(o) {
    var i = this, s = !0;
    return this.nextCallback = function(l) {
      s && (s = !1, i.nextCallback = null, o(l));
    }, this.nextCallback.cancel = function() {
      s = !1;
    }, this.nextCallback;
  }, n.onTransitionEnd = function(o, i) {
    this.setNextCallback(i);
    var s = this.props.nodeRef ? this.props.nodeRef.current : ki.findDOMNode(this), l = o == null && !this.props.addEndListener;
    if (!s || l) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var c = this.props.nodeRef ? [this.nextCallback] : [s, this.nextCallback], u = c[0], f = c[1];
      this.props.addEndListener(u, f);
    }
    o != null && setTimeout(this.nextCallback, o);
  }, n.render = function() {
    var o = this.state.status;
    if (o === Fs)
      return null;
    var i = this.props, s = i.children;
    i.in, i.mountOnEnter, i.unmountOnExit, i.appear, i.enter, i.exit, i.timeout, i.addEndListener, i.onEnter, i.onEntering, i.onEntered, i.onExit, i.onExiting, i.onExited, i.nodeRef;
    var l = yx(i, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      /* @__PURE__ */ Y.createElement(mc.Provider, {
        value: null
      }, typeof s == "function" ? s(o, l) : Y.cloneElement(Y.Children.only(s), l))
    );
  }, t;
}(Y.Component);
Yn.contextType = mc;
Yn.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: a.shape({
    current: typeof Element > "u" ? a.any : function(e, t, n, r, o, i) {
      var s = e[t];
      return a.instanceOf(s && "ownerDocument" in s ? s.ownerDocument.defaultView.Element : Element)(e, t, n, r, o, i);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: a.oneOfType([a.func.isRequired, a.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: a.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: a.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: a.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: a.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: a.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: a.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function(t) {
    var n = w$;
    t.addEndListener || (n = n.isRequired);
    for (var r = arguments.length, o = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++)
      o[i - 1] = arguments[i];
    return n.apply(void 0, [t].concat(o));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: a.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: a.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: a.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: a.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: a.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: a.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: a.func
} : {};
function yi() {
}
Yn.defaultProps = {
  in: !1,
  mountOnEnter: !1,
  unmountOnExit: !1,
  appear: !1,
  enter: !0,
  exit: !0,
  onEnter: yi,
  onEntering: yi,
  onEntered: yi,
  onExit: yi,
  onExiting: yi,
  onExited: yi
};
Yn.UNMOUNTED = Fs;
Yn.EXITED = jo;
Yn.ENTERING = Ho;
Yn.ENTERED = Ci;
Yn.EXITING = Af;
function E$(e) {
  if (e === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function ih(e, t) {
  var n = function(i) {
    return t && Wl(i) ? t(i) : i;
  }, r = /* @__PURE__ */ Object.create(null);
  return e && tC.map(e, function(o) {
    return o;
  }).forEach(function(o) {
    r[o.key] = n(o);
  }), r;
}
function T$(e, t) {
  e = e || {}, t = t || {};
  function n(f) {
    return f in t ? t[f] : e[f];
  }
  var r = /* @__PURE__ */ Object.create(null), o = [];
  for (var i in e)
    i in t ? o.length && (r[i] = o, o = []) : o.push(i);
  var s, l = {};
  for (var c in t) {
    if (r[c])
      for (s = 0; s < r[c].length; s++) {
        var u = r[c][s];
        l[r[c][s]] = n(u);
      }
    l[c] = n(c);
  }
  for (s = 0; s < o.length; s++)
    l[o[s]] = n(o[s]);
  return l;
}
function Uo(e, t, n) {
  return n[t] != null ? n[t] : e.props[t];
}
function C$(e, t) {
  return ih(e.children, function(n) {
    return Ul(n, {
      onExited: t.bind(null, n),
      in: !0,
      appear: Uo(n, "appear", e),
      enter: Uo(n, "enter", e),
      exit: Uo(n, "exit", e)
    });
  });
}
function O$(e, t, n) {
  var r = ih(e.children), o = T$(t, r);
  return Object.keys(o).forEach(function(i) {
    var s = o[i];
    if (Wl(s)) {
      var l = i in t, c = i in r, u = t[i], f = Wl(u) && !u.props.in;
      c && (!l || f) ? o[i] = Ul(s, {
        onExited: n.bind(null, s),
        in: !0,
        exit: Uo(s, "exit", e),
        enter: Uo(s, "enter", e)
      }) : !c && l && !f ? o[i] = Ul(s, {
        in: !1
      }) : c && l && Wl(u) && (o[i] = Ul(s, {
        onExited: n.bind(null, s),
        in: u.props.in,
        exit: Uo(s, "exit", e),
        enter: Uo(s, "enter", e)
      }));
    }
  }), o;
}
var k$ = Object.values || function(e) {
  return Object.keys(e).map(function(t) {
    return e[t];
  });
}, R$ = {
  component: "div",
  childFactory: function(t) {
    return t;
  }
}, sh = /* @__PURE__ */ function(e) {
  bx(t, e);
  function t(r, o) {
    var i;
    i = e.call(this, r, o) || this;
    var s = i.handleExited.bind(E$(i));
    return i.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: s,
      firstRender: !0
    }, i;
  }
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, n.componentWillUnmount = function() {
    this.mounted = !1;
  }, t.getDerivedStateFromProps = function(o, i) {
    var s = i.children, l = i.handleExited, c = i.firstRender;
    return {
      children: c ? C$(o, l) : O$(o, s, l),
      firstRender: !1
    };
  }, n.handleExited = function(o, i) {
    var s = ih(this.props.children);
    o.key in s || (o.props.onExited && o.props.onExited(i), this.mounted && this.setState(function(l) {
      var c = cc({}, l.children);
      return delete c[o.key], {
        children: c
      };
    }));
  }, n.render = function() {
    var o = this.props, i = o.component, s = o.childFactory, l = yx(o, ["component", "childFactory"]), c = this.state.contextValue, u = k$(this.state.children).map(s);
    return delete l.appear, delete l.enter, delete l.exit, i === null ? /* @__PURE__ */ Y.createElement(mc.Provider, {
      value: c
    }, u) : /* @__PURE__ */ Y.createElement(mc.Provider, {
      value: c
    }, /* @__PURE__ */ Y.createElement(i, l, u));
  }, t;
}(Y.Component);
sh.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: a.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: a.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: a.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: a.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: a.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: a.func
} : {};
sh.defaultProps = R$;
const ah = (e) => e.scrollTop;
function ji(e, t) {
  const {
    timeout: n,
    easing: r,
    style: o = {}
  } = e;
  return {
    duration: o.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: o.transitionTimingFunction ?? (typeof r == "object" ? r[t.mode] : r),
    delay: o.transitionDelay
  };
}
const N$ = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, Jo = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = uo(), o = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: i,
    appear: s = !0,
    children: l,
    easing: c,
    in: u,
    onEnter: f,
    onEntered: d,
    onEntering: p,
    onExit: h,
    onExited: g,
    onExiting: m,
    style: y,
    timeout: x = o,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: E = Yn,
    ...v
  } = t, w = M.useRef(null), S = mn(w, ii(l), n), T = (O) => (_) => {
    if (O) {
      const $ = w.current;
      _ === void 0 ? O($) : O($, _);
    }
  }, C = T(p), R = T((O, _) => {
    ah(O);
    const $ = ji({
      style: y,
      timeout: x,
      easing: c
    }, {
      mode: "enter"
    });
    O.style.webkitTransition = r.transitions.create("opacity", $), O.style.transition = r.transitions.create("opacity", $), f && f(O, _);
  }), I = T(d), b = T(m), k = T((O) => {
    const _ = ji({
      style: y,
      timeout: x,
      easing: c
    }, {
      mode: "exit"
    });
    O.style.webkitTransition = r.transitions.create("opacity", _), O.style.transition = r.transitions.create("opacity", _), h && h(O);
  }), P = T(g);
  return /* @__PURE__ */ N(E, {
    appear: s,
    in: u,
    nodeRef: w,
    onEnter: R,
    onEntered: I,
    onEntering: C,
    onExit: k,
    onExited: P,
    onExiting: b,
    addEndListener: (O) => {
      i && i(w.current, O);
    },
    timeout: x,
    ...v,
    children: (O, {
      ownerState: _,
      ...$
    }) => /* @__PURE__ */ M.cloneElement(l, {
      style: {
        opacity: 0,
        visibility: O === "exited" && !u ? "hidden" : void 0,
        ...N$[O],
        ...y,
        ...l.props.style
      },
      ref: S,
      ...$
    })
  });
});
process.env.NODE_ENV !== "production" && (Jo.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: Io.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function Df(e) {
  return `scale(${e}, ${e ** 2})`;
}
const $$ = {
  entering: {
    opacity: 1,
    transform: Df(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, Nd = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), ha = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    addEndListener: r,
    appear: o = !0,
    children: i,
    easing: s,
    in: l,
    onEnter: c,
    onEntered: u,
    onEntering: f,
    onExit: d,
    onExited: p,
    onExiting: h,
    style: g,
    timeout: m = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: y = Yn,
    ...x
  } = t, E = Ri(), v = M.useRef(), w = uo(), S = M.useRef(null), T = mn(S, ii(i), n), C = (_) => ($) => {
    if (_) {
      const D = S.current;
      $ === void 0 ? _(D) : _(D, $);
    }
  }, R = C(f), I = C((_, $) => {
    ah(_);
    const {
      duration: D,
      delay: z,
      easing: B
    } = ji({
      style: g,
      timeout: m,
      easing: s
    }, {
      mode: "enter"
    });
    let L;
    m === "auto" ? (L = w.transitions.getAutoHeightDuration(_.clientHeight), v.current = L) : L = D, _.style.transition = [w.transitions.create("opacity", {
      duration: L,
      delay: z
    }), w.transitions.create("transform", {
      duration: Nd ? L : L * 0.666,
      delay: z,
      easing: B
    })].join(","), c && c(_, $);
  }), b = C(u), k = C(h), P = C((_) => {
    const {
      duration: $,
      delay: D,
      easing: z
    } = ji({
      style: g,
      timeout: m,
      easing: s
    }, {
      mode: "exit"
    });
    let B;
    m === "auto" ? (B = w.transitions.getAutoHeightDuration(_.clientHeight), v.current = B) : B = $, _.style.transition = [w.transitions.create("opacity", {
      duration: B,
      delay: D
    }), w.transitions.create("transform", {
      duration: Nd ? B : B * 0.666,
      delay: Nd ? D : D || B * 0.333,
      easing: z
    })].join(","), _.style.opacity = 0, _.style.transform = Df(0.75), d && d(_);
  }), A = C(p);
  return /* @__PURE__ */ N(y, {
    appear: o,
    in: l,
    nodeRef: S,
    onEnter: I,
    onEntered: b,
    onEntering: R,
    onExit: P,
    onExited: A,
    onExiting: k,
    addEndListener: (_) => {
      m === "auto" && E.start(v.current || 0, _), r && r(S.current, _);
    },
    timeout: m === "auto" ? null : m,
    ...x,
    children: (_, {
      ownerState: $,
      ...D
    }) => /* @__PURE__ */ M.cloneElement(i, {
      style: {
        opacity: 0,
        transform: Df(0.75),
        visibility: _ === "exited" && !l ? "hidden" : void 0,
        ...$$[_],
        ...g,
        ...i.props.style
      },
      ref: T,
      ...D
    })
  });
});
process.env.NODE_ENV !== "production" && (ha.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: Io.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
ha && (ha.muiSupportAuto = !0);
var $n = "top", tr = "bottom", nr = "right", Pn = "left", lh = "auto", ja = [$n, tr, nr, Pn], Hi = "start", ma = "end", P$ = "clippingParents", vx = "viewport", Ts = "popper", I$ = "reference", Lg = /* @__PURE__ */ ja.reduce(function(e, t) {
  return e.concat([t + "-" + Hi, t + "-" + ma]);
}, []), xx = /* @__PURE__ */ [].concat(ja, [lh]).reduce(function(e, t) {
  return e.concat([t, t + "-" + Hi, t + "-" + ma]);
}, []), _$ = "beforeRead", M$ = "read", A$ = "afterRead", D$ = "beforeMain", B$ = "main", L$ = "afterMain", F$ = "beforeWrite", z$ = "write", V$ = "afterWrite", j$ = [_$, M$, A$, D$, B$, L$, F$, z$, V$];
function Lr(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function Un(e) {
  if (e == null)
    return window;
  if (e.toString() !== "[object Window]") {
    var t = e.ownerDocument;
    return t && t.defaultView || window;
  }
  return e;
}
function ei(e) {
  var t = Un(e).Element;
  return e instanceof t || e instanceof Element;
}
function er(e) {
  var t = Un(e).HTMLElement;
  return e instanceof t || e instanceof HTMLElement;
}
function ch(e) {
  if (typeof ShadowRoot > "u")
    return !1;
  var t = Un(e).ShadowRoot;
  return e instanceof t || e instanceof ShadowRoot;
}
function H$(e) {
  var t = e.state;
  Object.keys(t.elements).forEach(function(n) {
    var r = t.styles[n] || {}, o = t.attributes[n] || {}, i = t.elements[n];
    !er(i) || !Lr(i) || (Object.assign(i.style, r), Object.keys(o).forEach(function(s) {
      var l = o[s];
      l === !1 ? i.removeAttribute(s) : i.setAttribute(s, l === !0 ? "" : l);
    }));
  });
}
function W$(e) {
  var t = e.state, n = {
    popper: {
      position: t.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(t.elements.popper.style, n.popper), t.styles = n, t.elements.arrow && Object.assign(t.elements.arrow.style, n.arrow), function() {
    Object.keys(t.elements).forEach(function(r) {
      var o = t.elements[r], i = t.attributes[r] || {}, s = Object.keys(t.styles.hasOwnProperty(r) ? t.styles[r] : n[r]), l = s.reduce(function(c, u) {
        return c[u] = "", c;
      }, {});
      !er(o) || !Lr(o) || (Object.assign(o.style, l), Object.keys(i).forEach(function(c) {
        o.removeAttribute(c);
      }));
    });
  };
}
const U$ = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: H$,
  effect: W$,
  requires: ["computeStyles"]
};
function _r(e) {
  return e.split("-")[0];
}
var Xo = Math.max, gc = Math.min, Wi = Math.round;
function Bf() {
  var e = navigator.userAgentData;
  return e != null && e.brands && Array.isArray(e.brands) ? e.brands.map(function(t) {
    return t.brand + "/" + t.version;
  }).join(" ") : navigator.userAgent;
}
function wx() {
  return !/^((?!chrome|android).)*safari/i.test(Bf());
}
function Ui(e, t, n) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  var r = e.getBoundingClientRect(), o = 1, i = 1;
  t && er(e) && (o = e.offsetWidth > 0 && Wi(r.width) / e.offsetWidth || 1, i = e.offsetHeight > 0 && Wi(r.height) / e.offsetHeight || 1);
  var s = ei(e) ? Un(e) : window, l = s.visualViewport, c = !wx() && n, u = (r.left + (c && l ? l.offsetLeft : 0)) / o, f = (r.top + (c && l ? l.offsetTop : 0)) / i, d = r.width / o, p = r.height / i;
  return {
    width: d,
    height: p,
    top: f,
    right: u + d,
    bottom: f + p,
    left: u,
    x: u,
    y: f
  };
}
function uh(e) {
  var t = Ui(e), n = e.offsetWidth, r = e.offsetHeight;
  return Math.abs(t.width - n) <= 1 && (n = t.width), Math.abs(t.height - r) <= 1 && (r = t.height), {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: n,
    height: r
  };
}
function Sx(e, t) {
  var n = t.getRootNode && t.getRootNode();
  if (e.contains(t))
    return !0;
  if (n && ch(n)) {
    var r = t;
    do {
      if (r && e.isSameNode(r))
        return !0;
      r = r.parentNode || r.host;
    } while (r);
  }
  return !1;
}
function oo(e) {
  return Un(e).getComputedStyle(e);
}
function q$(e) {
  return ["table", "td", "th"].indexOf(Lr(e)) >= 0;
}
function _o(e) {
  return ((ei(e) ? e.ownerDocument : (
    // $FlowFixMe[prop-missing]
    e.document
  )) || window.document).documentElement;
}
function mu(e) {
  return Lr(e) === "html" ? e : (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    e.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e.parentNode || // DOM Element detected
    (ch(e) ? e.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    _o(e)
  );
}
function Fg(e) {
  return !er(e) || // https://github.com/popperjs/popper-core/issues/837
  oo(e).position === "fixed" ? null : e.offsetParent;
}
function Y$(e) {
  var t = /firefox/i.test(Bf()), n = /Trident/i.test(Bf());
  if (n && er(e)) {
    var r = oo(e);
    if (r.position === "fixed")
      return null;
  }
  var o = mu(e);
  for (ch(o) && (o = o.host); er(o) && ["html", "body"].indexOf(Lr(o)) < 0; ) {
    var i = oo(o);
    if (i.transform !== "none" || i.perspective !== "none" || i.contain === "paint" || ["transform", "perspective"].indexOf(i.willChange) !== -1 || t && i.willChange === "filter" || t && i.filter && i.filter !== "none")
      return o;
    o = o.parentNode;
  }
  return null;
}
function Ha(e) {
  for (var t = Un(e), n = Fg(e); n && q$(n) && oo(n).position === "static"; )
    n = Fg(n);
  return n && (Lr(n) === "html" || Lr(n) === "body" && oo(n).position === "static") ? t : n || Y$(e) || t;
}
function dh(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function Gs(e, t, n) {
  return Xo(e, gc(t, n));
}
function K$(e, t, n) {
  var r = Gs(e, t, n);
  return r > n ? n : r;
}
function Ex() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function Tx(e) {
  return Object.assign({}, Ex(), e);
}
function Cx(e, t) {
  return t.reduce(function(n, r) {
    return n[r] = e, n;
  }, {});
}
var G$ = function(t, n) {
  return t = typeof t == "function" ? t(Object.assign({}, n.rects, {
    placement: n.placement
  })) : t, Tx(typeof t != "number" ? t : Cx(t, ja));
};
function X$(e) {
  var t, n = e.state, r = e.name, o = e.options, i = n.elements.arrow, s = n.modifiersData.popperOffsets, l = _r(n.placement), c = dh(l), u = [Pn, nr].indexOf(l) >= 0, f = u ? "height" : "width";
  if (!(!i || !s)) {
    var d = G$(o.padding, n), p = uh(i), h = c === "y" ? $n : Pn, g = c === "y" ? tr : nr, m = n.rects.reference[f] + n.rects.reference[c] - s[c] - n.rects.popper[f], y = s[c] - n.rects.reference[c], x = Ha(i), E = x ? c === "y" ? x.clientHeight || 0 : x.clientWidth || 0 : 0, v = m / 2 - y / 2, w = d[h], S = E - p[f] - d[g], T = E / 2 - p[f] / 2 + v, C = Gs(w, T, S), R = c;
    n.modifiersData[r] = (t = {}, t[R] = C, t.centerOffset = C - T, t);
  }
}
function Z$(e) {
  var t = e.state, n = e.options, r = n.element, o = r === void 0 ? "[data-popper-arrow]" : r;
  o != null && (typeof o == "string" && (o = t.elements.popper.querySelector(o), !o) || Sx(t.elements.popper, o) && (t.elements.arrow = o));
}
const Q$ = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: X$,
  effect: Z$,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function qi(e) {
  return e.split("-")[1];
}
var J$ = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function eP(e, t) {
  var n = e.x, r = e.y, o = t.devicePixelRatio || 1;
  return {
    x: Wi(n * o) / o || 0,
    y: Wi(r * o) / o || 0
  };
}
function zg(e) {
  var t, n = e.popper, r = e.popperRect, o = e.placement, i = e.variation, s = e.offsets, l = e.position, c = e.gpuAcceleration, u = e.adaptive, f = e.roundOffsets, d = e.isFixed, p = s.x, h = p === void 0 ? 0 : p, g = s.y, m = g === void 0 ? 0 : g, y = typeof f == "function" ? f({
    x: h,
    y: m
  }) : {
    x: h,
    y: m
  };
  h = y.x, m = y.y;
  var x = s.hasOwnProperty("x"), E = s.hasOwnProperty("y"), v = Pn, w = $n, S = window;
  if (u) {
    var T = Ha(n), C = "clientHeight", R = "clientWidth";
    if (T === Un(n) && (T = _o(n), oo(T).position !== "static" && l === "absolute" && (C = "scrollHeight", R = "scrollWidth")), T = T, o === $n || (o === Pn || o === nr) && i === ma) {
      w = tr;
      var I = d && T === S && S.visualViewport ? S.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        T[C]
      );
      m -= I - r.height, m *= c ? 1 : -1;
    }
    if (o === Pn || (o === $n || o === tr) && i === ma) {
      v = nr;
      var b = d && T === S && S.visualViewport ? S.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        T[R]
      );
      h -= b - r.width, h *= c ? 1 : -1;
    }
  }
  var k = Object.assign({
    position: l
  }, u && J$), P = f === !0 ? eP({
    x: h,
    y: m
  }, Un(n)) : {
    x: h,
    y: m
  };
  if (h = P.x, m = P.y, c) {
    var A;
    return Object.assign({}, k, (A = {}, A[w] = E ? "0" : "", A[v] = x ? "0" : "", A.transform = (S.devicePixelRatio || 1) <= 1 ? "translate(" + h + "px, " + m + "px)" : "translate3d(" + h + "px, " + m + "px, 0)", A));
  }
  return Object.assign({}, k, (t = {}, t[w] = E ? m + "px" : "", t[v] = x ? h + "px" : "", t.transform = "", t));
}
function tP(e) {
  var t = e.state, n = e.options, r = n.gpuAcceleration, o = r === void 0 ? !0 : r, i = n.adaptive, s = i === void 0 ? !0 : i, l = n.roundOffsets, c = l === void 0 ? !0 : l, u = {
    placement: _r(t.placement),
    variation: qi(t.placement),
    popper: t.elements.popper,
    popperRect: t.rects.popper,
    gpuAcceleration: o,
    isFixed: t.options.strategy === "fixed"
  };
  t.modifiersData.popperOffsets != null && (t.styles.popper = Object.assign({}, t.styles.popper, zg(Object.assign({}, u, {
    offsets: t.modifiersData.popperOffsets,
    position: t.options.strategy,
    adaptive: s,
    roundOffsets: c
  })))), t.modifiersData.arrow != null && (t.styles.arrow = Object.assign({}, t.styles.arrow, zg(Object.assign({}, u, {
    offsets: t.modifiersData.arrow,
    position: "absolute",
    adaptive: !1,
    roundOffsets: c
  })))), t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-placement": t.placement
  });
}
const nP = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: tP,
  data: {}
};
var vl = {
  passive: !0
};
function rP(e) {
  var t = e.state, n = e.instance, r = e.options, o = r.scroll, i = o === void 0 ? !0 : o, s = r.resize, l = s === void 0 ? !0 : s, c = Un(t.elements.popper), u = [].concat(t.scrollParents.reference, t.scrollParents.popper);
  return i && u.forEach(function(f) {
    f.addEventListener("scroll", n.update, vl);
  }), l && c.addEventListener("resize", n.update, vl), function() {
    i && u.forEach(function(f) {
      f.removeEventListener("scroll", n.update, vl);
    }), l && c.removeEventListener("resize", n.update, vl);
  };
}
const oP = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: function() {
  },
  effect: rP,
  data: {}
};
var iP = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function Ql(e) {
  return e.replace(/left|right|bottom|top/g, function(t) {
    return iP[t];
  });
}
var sP = {
  start: "end",
  end: "start"
};
function Vg(e) {
  return e.replace(/start|end/g, function(t) {
    return sP[t];
  });
}
function fh(e) {
  var t = Un(e), n = t.pageXOffset, r = t.pageYOffset;
  return {
    scrollLeft: n,
    scrollTop: r
  };
}
function ph(e) {
  return Ui(_o(e)).left + fh(e).scrollLeft;
}
function aP(e, t) {
  var n = Un(e), r = _o(e), o = n.visualViewport, i = r.clientWidth, s = r.clientHeight, l = 0, c = 0;
  if (o) {
    i = o.width, s = o.height;
    var u = wx();
    (u || !u && t === "fixed") && (l = o.offsetLeft, c = o.offsetTop);
  }
  return {
    width: i,
    height: s,
    x: l + ph(e),
    y: c
  };
}
function lP(e) {
  var t, n = _o(e), r = fh(e), o = (t = e.ownerDocument) == null ? void 0 : t.body, i = Xo(n.scrollWidth, n.clientWidth, o ? o.scrollWidth : 0, o ? o.clientWidth : 0), s = Xo(n.scrollHeight, n.clientHeight, o ? o.scrollHeight : 0, o ? o.clientHeight : 0), l = -r.scrollLeft + ph(e), c = -r.scrollTop;
  return oo(o || n).direction === "rtl" && (l += Xo(n.clientWidth, o ? o.clientWidth : 0) - i), {
    width: i,
    height: s,
    x: l,
    y: c
  };
}
function hh(e) {
  var t = oo(e), n = t.overflow, r = t.overflowX, o = t.overflowY;
  return /auto|scroll|overlay|hidden/.test(n + o + r);
}
function Ox(e) {
  return ["html", "body", "#document"].indexOf(Lr(e)) >= 0 ? e.ownerDocument.body : er(e) && hh(e) ? e : Ox(mu(e));
}
function Xs(e, t) {
  var n;
  t === void 0 && (t = []);
  var r = Ox(e), o = r === ((n = e.ownerDocument) == null ? void 0 : n.body), i = Un(r), s = o ? [i].concat(i.visualViewport || [], hh(r) ? r : []) : r, l = t.concat(s);
  return o ? l : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    l.concat(Xs(mu(s)))
  );
}
function Lf(e) {
  return Object.assign({}, e, {
    left: e.x,
    top: e.y,
    right: e.x + e.width,
    bottom: e.y + e.height
  });
}
function cP(e, t) {
  var n = Ui(e, !1, t === "fixed");
  return n.top = n.top + e.clientTop, n.left = n.left + e.clientLeft, n.bottom = n.top + e.clientHeight, n.right = n.left + e.clientWidth, n.width = e.clientWidth, n.height = e.clientHeight, n.x = n.left, n.y = n.top, n;
}
function jg(e, t, n) {
  return t === vx ? Lf(aP(e, n)) : ei(t) ? cP(t, n) : Lf(lP(_o(e)));
}
function uP(e) {
  var t = Xs(mu(e)), n = ["absolute", "fixed"].indexOf(oo(e).position) >= 0, r = n && er(e) ? Ha(e) : e;
  return ei(r) ? t.filter(function(o) {
    return ei(o) && Sx(o, r) && Lr(o) !== "body";
  }) : [];
}
function dP(e, t, n, r) {
  var o = t === "clippingParents" ? uP(e) : [].concat(t), i = [].concat(o, [n]), s = i[0], l = i.reduce(function(c, u) {
    var f = jg(e, u, r);
    return c.top = Xo(f.top, c.top), c.right = gc(f.right, c.right), c.bottom = gc(f.bottom, c.bottom), c.left = Xo(f.left, c.left), c;
  }, jg(e, s, r));
  return l.width = l.right - l.left, l.height = l.bottom - l.top, l.x = l.left, l.y = l.top, l;
}
function kx(e) {
  var t = e.reference, n = e.element, r = e.placement, o = r ? _r(r) : null, i = r ? qi(r) : null, s = t.x + t.width / 2 - n.width / 2, l = t.y + t.height / 2 - n.height / 2, c;
  switch (o) {
    case $n:
      c = {
        x: s,
        y: t.y - n.height
      };
      break;
    case tr:
      c = {
        x: s,
        y: t.y + t.height
      };
      break;
    case nr:
      c = {
        x: t.x + t.width,
        y: l
      };
      break;
    case Pn:
      c = {
        x: t.x - n.width,
        y: l
      };
      break;
    default:
      c = {
        x: t.x,
        y: t.y
      };
  }
  var u = o ? dh(o) : null;
  if (u != null) {
    var f = u === "y" ? "height" : "width";
    switch (i) {
      case Hi:
        c[u] = c[u] - (t[f] / 2 - n[f] / 2);
        break;
      case ma:
        c[u] = c[u] + (t[f] / 2 - n[f] / 2);
        break;
    }
  }
  return c;
}
function ga(e, t) {
  t === void 0 && (t = {});
  var n = t, r = n.placement, o = r === void 0 ? e.placement : r, i = n.strategy, s = i === void 0 ? e.strategy : i, l = n.boundary, c = l === void 0 ? P$ : l, u = n.rootBoundary, f = u === void 0 ? vx : u, d = n.elementContext, p = d === void 0 ? Ts : d, h = n.altBoundary, g = h === void 0 ? !1 : h, m = n.padding, y = m === void 0 ? 0 : m, x = Tx(typeof y != "number" ? y : Cx(y, ja)), E = p === Ts ? I$ : Ts, v = e.rects.popper, w = e.elements[g ? E : p], S = dP(ei(w) ? w : w.contextElement || _o(e.elements.popper), c, f, s), T = Ui(e.elements.reference), C = kx({
    reference: T,
    element: v,
    placement: o
  }), R = Lf(Object.assign({}, v, C)), I = p === Ts ? R : T, b = {
    top: S.top - I.top + x.top,
    bottom: I.bottom - S.bottom + x.bottom,
    left: S.left - I.left + x.left,
    right: I.right - S.right + x.right
  }, k = e.modifiersData.offset;
  if (p === Ts && k) {
    var P = k[o];
    Object.keys(b).forEach(function(A) {
      var O = [nr, tr].indexOf(A) >= 0 ? 1 : -1, _ = [$n, tr].indexOf(A) >= 0 ? "y" : "x";
      b[A] += P[_] * O;
    });
  }
  return b;
}
function fP(e, t) {
  t === void 0 && (t = {});
  var n = t, r = n.placement, o = n.boundary, i = n.rootBoundary, s = n.padding, l = n.flipVariations, c = n.allowedAutoPlacements, u = c === void 0 ? xx : c, f = qi(r), d = f ? l ? Lg : Lg.filter(function(g) {
    return qi(g) === f;
  }) : ja, p = d.filter(function(g) {
    return u.indexOf(g) >= 0;
  });
  p.length === 0 && (p = d);
  var h = p.reduce(function(g, m) {
    return g[m] = ga(e, {
      placement: m,
      boundary: o,
      rootBoundary: i,
      padding: s
    })[_r(m)], g;
  }, {});
  return Object.keys(h).sort(function(g, m) {
    return h[g] - h[m];
  });
}
function pP(e) {
  if (_r(e) === lh)
    return [];
  var t = Ql(e);
  return [Vg(e), t, Vg(t)];
}
function hP(e) {
  var t = e.state, n = e.options, r = e.name;
  if (!t.modifiersData[r]._skip) {
    for (var o = n.mainAxis, i = o === void 0 ? !0 : o, s = n.altAxis, l = s === void 0 ? !0 : s, c = n.fallbackPlacements, u = n.padding, f = n.boundary, d = n.rootBoundary, p = n.altBoundary, h = n.flipVariations, g = h === void 0 ? !0 : h, m = n.allowedAutoPlacements, y = t.options.placement, x = _r(y), E = x === y, v = c || (E || !g ? [Ql(y)] : pP(y)), w = [y].concat(v).reduce(function(Z, Q) {
      return Z.concat(_r(Q) === lh ? fP(t, {
        placement: Q,
        boundary: f,
        rootBoundary: d,
        padding: u,
        flipVariations: g,
        allowedAutoPlacements: m
      }) : Q);
    }, []), S = t.rects.reference, T = t.rects.popper, C = /* @__PURE__ */ new Map(), R = !0, I = w[0], b = 0; b < w.length; b++) {
      var k = w[b], P = _r(k), A = qi(k) === Hi, O = [$n, tr].indexOf(P) >= 0, _ = O ? "width" : "height", $ = ga(t, {
        placement: k,
        boundary: f,
        rootBoundary: d,
        altBoundary: p,
        padding: u
      }), D = O ? A ? nr : Pn : A ? tr : $n;
      S[_] > T[_] && (D = Ql(D));
      var z = Ql(D), B = [];
      if (i && B.push($[P] <= 0), l && B.push($[D] <= 0, $[z] <= 0), B.every(function(Z) {
        return Z;
      })) {
        I = k, R = !1;
        break;
      }
      C.set(k, B);
    }
    if (R)
      for (var L = g ? 3 : 1, F = function(Q) {
        var ee = w.find(function(te) {
          var q = C.get(te);
          if (q)
            return q.slice(0, Q).every(function(oe) {
              return oe;
            });
        });
        if (ee)
          return I = ee, "break";
      }, W = L; W > 0; W--) {
        var U = F(W);
        if (U === "break") break;
      }
    t.placement !== I && (t.modifiersData[r]._skip = !0, t.placement = I, t.reset = !0);
  }
}
const mP = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: hP,
  requiresIfExists: ["offset"],
  data: {
    _skip: !1
  }
};
function Hg(e, t, n) {
  return n === void 0 && (n = {
    x: 0,
    y: 0
  }), {
    top: e.top - t.height - n.y,
    right: e.right - t.width + n.x,
    bottom: e.bottom - t.height + n.y,
    left: e.left - t.width - n.x
  };
}
function Wg(e) {
  return [$n, nr, tr, Pn].some(function(t) {
    return e[t] >= 0;
  });
}
function gP(e) {
  var t = e.state, n = e.name, r = t.rects.reference, o = t.rects.popper, i = t.modifiersData.preventOverflow, s = ga(t, {
    elementContext: "reference"
  }), l = ga(t, {
    altBoundary: !0
  }), c = Hg(s, r), u = Hg(l, o, i), f = Wg(c), d = Wg(u);
  t.modifiersData[n] = {
    referenceClippingOffsets: c,
    popperEscapeOffsets: u,
    isReferenceHidden: f,
    hasPopperEscaped: d
  }, t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-reference-hidden": f,
    "data-popper-escaped": d
  });
}
const yP = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: gP
};
function bP(e, t, n) {
  var r = _r(e), o = [Pn, $n].indexOf(r) >= 0 ? -1 : 1, i = typeof n == "function" ? n(Object.assign({}, t, {
    placement: e
  })) : n, s = i[0], l = i[1];
  return s = s || 0, l = (l || 0) * o, [Pn, nr].indexOf(r) >= 0 ? {
    x: l,
    y: s
  } : {
    x: s,
    y: l
  };
}
function vP(e) {
  var t = e.state, n = e.options, r = e.name, o = n.offset, i = o === void 0 ? [0, 0] : o, s = xx.reduce(function(f, d) {
    return f[d] = bP(d, t.rects, i), f;
  }, {}), l = s[t.placement], c = l.x, u = l.y;
  t.modifiersData.popperOffsets != null && (t.modifiersData.popperOffsets.x += c, t.modifiersData.popperOffsets.y += u), t.modifiersData[r] = s;
}
const xP = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: vP
};
function wP(e) {
  var t = e.state, n = e.name;
  t.modifiersData[n] = kx({
    reference: t.rects.reference,
    element: t.rects.popper,
    placement: t.placement
  });
}
const SP = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: wP,
  data: {}
};
function EP(e) {
  return e === "x" ? "y" : "x";
}
function TP(e) {
  var t = e.state, n = e.options, r = e.name, o = n.mainAxis, i = o === void 0 ? !0 : o, s = n.altAxis, l = s === void 0 ? !1 : s, c = n.boundary, u = n.rootBoundary, f = n.altBoundary, d = n.padding, p = n.tether, h = p === void 0 ? !0 : p, g = n.tetherOffset, m = g === void 0 ? 0 : g, y = ga(t, {
    boundary: c,
    rootBoundary: u,
    padding: d,
    altBoundary: f
  }), x = _r(t.placement), E = qi(t.placement), v = !E, w = dh(x), S = EP(w), T = t.modifiersData.popperOffsets, C = t.rects.reference, R = t.rects.popper, I = typeof m == "function" ? m(Object.assign({}, t.rects, {
    placement: t.placement
  })) : m, b = typeof I == "number" ? {
    mainAxis: I,
    altAxis: I
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, I), k = t.modifiersData.offset ? t.modifiersData.offset[t.placement] : null, P = {
    x: 0,
    y: 0
  };
  if (T) {
    if (i) {
      var A, O = w === "y" ? $n : Pn, _ = w === "y" ? tr : nr, $ = w === "y" ? "height" : "width", D = T[w], z = D + y[O], B = D - y[_], L = h ? -R[$] / 2 : 0, F = E === Hi ? C[$] : R[$], W = E === Hi ? -R[$] : -C[$], U = t.elements.arrow, Z = h && U ? uh(U) : {
        width: 0,
        height: 0
      }, Q = t.modifiersData["arrow#persistent"] ? t.modifiersData["arrow#persistent"].padding : Ex(), ee = Q[O], te = Q[_], q = Gs(0, C[$], Z[$]), oe = v ? C[$] / 2 - L - q - ee - b.mainAxis : F - q - ee - b.mainAxis, G = v ? -C[$] / 2 + L + q + te + b.mainAxis : W + q + te + b.mainAxis, ne = t.elements.arrow && Ha(t.elements.arrow), j = ne ? w === "y" ? ne.clientTop || 0 : ne.clientLeft || 0 : 0, pe = (A = k == null ? void 0 : k[w]) != null ? A : 0, ce = D + oe - pe - j, be = D + G - pe, Pe = Gs(h ? gc(z, ce) : z, D, h ? Xo(B, be) : B);
      T[w] = Pe, P[w] = Pe - D;
    }
    if (l) {
      var Me, Ie = w === "x" ? $n : Pn, Ne = w === "x" ? tr : nr, Fe = T[S], ke = S === "y" ? "height" : "width", V = Fe + y[Ie], J = Fe - y[Ne], ie = [$n, Pn].indexOf(x) !== -1, X = (Me = k == null ? void 0 : k[S]) != null ? Me : 0, H = ie ? V : Fe - C[ke] - R[ke] - X + b.altAxis, K = ie ? Fe + C[ke] + R[ke] - X - b.altAxis : J, re = h && ie ? K$(H, Fe, K) : Gs(h ? H : V, Fe, h ? K : J);
      T[S] = re, P[S] = re - Fe;
    }
    t.modifiersData[r] = P;
  }
}
const CP = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: TP,
  requiresIfExists: ["offset"]
};
function OP(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function kP(e) {
  return e === Un(e) || !er(e) ? fh(e) : OP(e);
}
function RP(e) {
  var t = e.getBoundingClientRect(), n = Wi(t.width) / e.offsetWidth || 1, r = Wi(t.height) / e.offsetHeight || 1;
  return n !== 1 || r !== 1;
}
function NP(e, t, n) {
  n === void 0 && (n = !1);
  var r = er(t), o = er(t) && RP(t), i = _o(t), s = Ui(e, o, n), l = {
    scrollLeft: 0,
    scrollTop: 0
  }, c = {
    x: 0,
    y: 0
  };
  return (r || !r && !n) && ((Lr(t) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  hh(i)) && (l = kP(t)), er(t) ? (c = Ui(t, !0), c.x += t.clientLeft, c.y += t.clientTop) : i && (c.x = ph(i))), {
    x: s.left + l.scrollLeft - c.x,
    y: s.top + l.scrollTop - c.y,
    width: s.width,
    height: s.height
  };
}
function $P(e) {
  var t = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), r = [];
  e.forEach(function(i) {
    t.set(i.name, i);
  });
  function o(i) {
    n.add(i.name);
    var s = [].concat(i.requires || [], i.requiresIfExists || []);
    s.forEach(function(l) {
      if (!n.has(l)) {
        var c = t.get(l);
        c && o(c);
      }
    }), r.push(i);
  }
  return e.forEach(function(i) {
    n.has(i.name) || o(i);
  }), r;
}
function PP(e) {
  var t = $P(e);
  return j$.reduce(function(n, r) {
    return n.concat(t.filter(function(o) {
      return o.phase === r;
    }));
  }, []);
}
function IP(e) {
  var t;
  return function() {
    return t || (t = new Promise(function(n) {
      Promise.resolve().then(function() {
        t = void 0, n(e());
      });
    })), t;
  };
}
function _P(e) {
  var t = e.reduce(function(n, r) {
    var o = n[r.name];
    return n[r.name] = o ? Object.assign({}, o, r, {
      options: Object.assign({}, o.options, r.options),
      data: Object.assign({}, o.data, r.data)
    }) : r, n;
  }, {});
  return Object.keys(t).map(function(n) {
    return t[n];
  });
}
var Ug = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function qg() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return !t.some(function(r) {
    return !(r && typeof r.getBoundingClientRect == "function");
  });
}
function MP(e) {
  e === void 0 && (e = {});
  var t = e, n = t.defaultModifiers, r = n === void 0 ? [] : n, o = t.defaultOptions, i = o === void 0 ? Ug : o;
  return function(l, c, u) {
    u === void 0 && (u = i);
    var f = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, Ug, i),
      modifiersData: {},
      elements: {
        reference: l,
        popper: c
      },
      attributes: {},
      styles: {}
    }, d = [], p = !1, h = {
      state: f,
      setOptions: function(x) {
        var E = typeof x == "function" ? x(f.options) : x;
        m(), f.options = Object.assign({}, i, f.options, E), f.scrollParents = {
          reference: ei(l) ? Xs(l) : l.contextElement ? Xs(l.contextElement) : [],
          popper: Xs(c)
        };
        var v = PP(_P([].concat(r, f.options.modifiers)));
        return f.orderedModifiers = v.filter(function(w) {
          return w.enabled;
        }), g(), h.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function() {
        if (!p) {
          var x = f.elements, E = x.reference, v = x.popper;
          if (qg(E, v)) {
            f.rects = {
              reference: NP(E, Ha(v), f.options.strategy === "fixed"),
              popper: uh(v)
            }, f.reset = !1, f.placement = f.options.placement, f.orderedModifiers.forEach(function(b) {
              return f.modifiersData[b.name] = Object.assign({}, b.data);
            });
            for (var w = 0; w < f.orderedModifiers.length; w++) {
              if (f.reset === !0) {
                f.reset = !1, w = -1;
                continue;
              }
              var S = f.orderedModifiers[w], T = S.fn, C = S.options, R = C === void 0 ? {} : C, I = S.name;
              typeof T == "function" && (f = T({
                state: f,
                options: R,
                name: I,
                instance: h
              }) || f);
            }
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: IP(function() {
        return new Promise(function(y) {
          h.forceUpdate(), y(f);
        });
      }),
      destroy: function() {
        m(), p = !0;
      }
    };
    if (!qg(l, c))
      return h;
    h.setOptions(u).then(function(y) {
      !p && u.onFirstUpdate && u.onFirstUpdate(y);
    });
    function g() {
      f.orderedModifiers.forEach(function(y) {
        var x = y.name, E = y.options, v = E === void 0 ? {} : E, w = y.effect;
        if (typeof w == "function") {
          var S = w({
            state: f,
            name: x,
            instance: h,
            options: v
          }), T = function() {
          };
          d.push(S || T);
        }
      });
    }
    function m() {
      d.forEach(function(y) {
        return y();
      }), d = [];
    }
    return h;
  };
}
var AP = [oP, SP, nP, U$, xP, mP, CP, Q$, yP], DP = /* @__PURE__ */ MP({
  defaultModifiers: AP
});
function BP(e) {
  return typeof e == "function" ? e() : e;
}
const Yi = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    children: r,
    container: o,
    disablePortal: i = !1
  } = t, [s, l] = M.useState(null), c = mn(/* @__PURE__ */ M.isValidElement(r) ? ii(r) : null, n);
  if (Ar(() => {
    i || l(BP(o) || document.body);
  }, [o, i]), Ar(() => {
    if (s && !i)
      return Cf(n, s), () => {
        Cf(n, null);
      };
  }, [n, s, i]), i) {
    if (/* @__PURE__ */ M.isValidElement(r)) {
      const u = {
        ref: c
      };
      return /* @__PURE__ */ M.cloneElement(r, u);
    }
    return r;
  }
  return s && /* @__PURE__ */ Z0.createPortal(r, s);
});
process.env.NODE_ENV !== "production" && (Yi.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: a.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([no, a.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool
});
process.env.NODE_ENV !== "production" && (Yi.propTypes = Va(Yi.propTypes));
function LP(e) {
  return Et("MuiPopper", e);
}
Rt("MuiPopper", ["root"]);
function FP(e, t) {
  if (t === "ltr")
    return e;
  switch (e) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return e;
  }
}
function yc(e) {
  return typeof e == "function" ? e() : e;
}
function gu(e) {
  return e.nodeType !== void 0;
}
function zP(e) {
  return !gu(e);
}
const VP = (e) => {
  const {
    classes: t
  } = e;
  return At({
    root: ["root"]
  }, LP, t);
}, jP = {}, HP = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    anchorEl: r,
    children: o,
    direction: i,
    disablePortal: s,
    modifiers: l,
    open: c,
    placement: u,
    popperOptions: f,
    popperRef: d,
    slotProps: p = {},
    slots: h = {},
    TransitionProps: g,
    // @ts-ignore internal logic
    ownerState: m,
    // prevent from spreading to DOM, it can come from the parent component e.g. Select.
    ...y
  } = t, x = M.useRef(null), E = mn(x, n), v = M.useRef(null), w = mn(v, d), S = M.useRef(w);
  Ar(() => {
    S.current = w;
  }, [w]), M.useImperativeHandle(d, () => v.current, []);
  const T = FP(u, i), [C, R] = M.useState(T), [I, b] = M.useState(yc(r));
  M.useEffect(() => {
    v.current && v.current.forceUpdate();
  }), M.useEffect(() => {
    r && b(yc(r));
  }, [r]), Ar(() => {
    if (!I || !c)
      return;
    const _ = (z) => {
      R(z.placement);
    };
    if (process.env.NODE_ENV !== "production" && I && gu(I) && I.nodeType === 1) {
      const z = I.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && z.top === 0 && z.left === 0 && z.right === 0 && z.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    let $ = [{
      name: "preventOverflow",
      options: {
        altBoundary: s
      }
    }, {
      name: "flip",
      options: {
        altBoundary: s
      }
    }, {
      name: "onUpdate",
      enabled: !0,
      phase: "afterWrite",
      fn: ({
        state: z
      }) => {
        _(z);
      }
    }];
    l != null && ($ = $.concat(l)), f && f.modifiers != null && ($ = $.concat(f.modifiers));
    const D = DP(I, x.current, {
      placement: T,
      ...f,
      modifiers: $
    });
    return S.current(D), () => {
      D.destroy(), S.current(null);
    };
  }, [I, s, l, c, f, T]);
  const k = {
    placement: C
  };
  g !== null && (k.TransitionProps = g);
  const P = VP(t), A = h.root ?? "div", O = kf({
    elementType: A,
    externalSlotProps: p.root,
    externalForwardedProps: y,
    additionalProps: {
      role: "tooltip",
      ref: E
    },
    ownerState: t,
    className: P.root
  });
  return /* @__PURE__ */ N(A, {
    ...O,
    children: typeof o == "function" ? o(k) : o
  });
}), Rx = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    anchorEl: r,
    children: o,
    container: i,
    direction: s = "ltr",
    disablePortal: l = !1,
    keepMounted: c = !1,
    modifiers: u,
    open: f,
    placement: d = "bottom",
    popperOptions: p = jP,
    popperRef: h,
    style: g,
    transition: m = !1,
    slotProps: y = {},
    slots: x = {},
    ...E
  } = t, [v, w] = M.useState(!0), S = () => {
    w(!1);
  }, T = () => {
    w(!0);
  };
  if (!c && !f && (!m || v))
    return null;
  let C;
  if (i)
    C = i;
  else if (r) {
    const b = yc(r);
    C = b && gu(b) ? Nn(b).body : Nn(null).body;
  }
  const R = !f && c && (!m || v) ? "none" : void 0, I = m ? {
    in: f,
    onEnter: S,
    onExited: T
  } : void 0;
  return /* @__PURE__ */ N(Yi, {
    disablePortal: l,
    container: C,
    children: /* @__PURE__ */ N(HP, {
      anchorEl: r,
      direction: s,
      disablePortal: l,
      modifiers: u,
      ref: n,
      open: m ? !v : f,
      placement: d,
      popperOptions: p,
      popperRef: h,
      slotProps: y,
      slots: x,
      ...E,
      style: {
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: "fixed",
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display: R,
        ...g
      },
      TransitionProps: I,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (Rx.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: Po(a.oneOfType([no, a.object, a.func]), (e) => {
    if (e.open) {
      const t = yc(e.anchorEl);
      if (t && gu(t) && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || zP(t) && t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join(`
`));
    }
    return null;
  }),
  /**
   * Popper render function or node.
   */
  children: a.oneOfType([a.node, a.func]),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([no, a.func]),
  /**
   * Direction of the text.
   * @default 'ltr'
   */
  direction: a.oneOf(["ltr", "rtl"]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: a.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: a.arrayOf(a.shape({
    data: a.object,
    effect: a.func,
    enabled: a.bool,
    fn: a.func,
    name: a.any,
    options: a.object,
    phase: a.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: a.arrayOf(a.string),
    requiresIfExists: a.arrayOf(a.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: a.shape({
    modifiers: a.array,
    onFirstUpdate: a.func,
    placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: a.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: co,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: a.shape({
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    root: a.elementType
  }),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: a.bool
});
const WP = Ae(Rx, {
  name: "MuiPopper",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), yu = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = du(), o = Nt({
    props: t,
    name: "MuiPopper"
  }), {
    anchorEl: i,
    component: s,
    components: l,
    componentsProps: c,
    container: u,
    disablePortal: f,
    keepMounted: d,
    modifiers: p,
    open: h,
    placement: g,
    popperOptions: m,
    popperRef: y,
    transition: x,
    slots: E,
    slotProps: v,
    ...w
  } = o, S = (E == null ? void 0 : E.root) ?? (l == null ? void 0 : l.Root), T = {
    anchorEl: i,
    container: u,
    disablePortal: f,
    keepMounted: d,
    modifiers: p,
    open: h,
    placement: g,
    popperOptions: m,
    popperRef: y,
    transition: x,
    ...w
  };
  return /* @__PURE__ */ N(WP, {
    as: s,
    direction: r ? "rtl" : "ltr",
    slots: {
      root: S
    },
    slotProps: v ?? c,
    ...T,
    ref: n
  });
});
process.env.NODE_ENV !== "production" && (yu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: a.oneOfType([no, a.object, a.func]),
  /**
   * Popper render function or node.
   */
  children: a.oneOfType([a.node, a.func]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  components: a.shape({
    Root: a.elementType
  }),
  /**
   * The props used for each slot inside the Popper.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  componentsProps: a.shape({
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([no, a.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: a.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: a.arrayOf(a.shape({
    data: a.object,
    effect: a.func,
    enabled: a.bool,
    fn: a.func,
    name: a.any,
    options: a.object,
    phase: a.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: a.arrayOf(a.string),
    requiresIfExists: a.arrayOf(a.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: a.shape({
    modifiers: a.array,
    onFirstUpdate: a.func,
    placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: a.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: co,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: a.shape({
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: a.bool
});
function UP(e) {
  return Et("MuiTooltip", e);
}
const Vt = Rt("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]);
function qP(e) {
  return Math.round(e * 1e5) / 1e5;
}
const YP = (e) => {
  const {
    classes: t,
    disableInteractive: n,
    arrow: r,
    touch: o,
    placement: i
  } = e, s = {
    popper: ["popper", !n && "popperInteractive", r && "popperArrow"],
    tooltip: ["tooltip", r && "tooltipArrow", o && "touch", `tooltipPlacement${Ee(i.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return At(s, UP, t);
}, KP = Ae(yu, {
  name: "MuiTooltip",
  slot: "Popper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.popper, !n.disableInteractive && t.popperInteractive, n.arrow && t.popperArrow, !n.open && t.popperClose];
  }
})(tt(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.tooltip,
  pointerEvents: "none",
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableInteractive,
    style: {
      pointerEvents: "auto"
    }
  }, {
    props: ({
      open: t
    }) => !t,
    style: {
      pointerEvents: "none"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      [`&[data-popper-placement*="bottom"] .${Vt.arrow}`]: {
        top: 0,
        marginTop: "-0.71em",
        "&::before": {
          transformOrigin: "0 100%"
        }
      },
      [`&[data-popper-placement*="top"] .${Vt.arrow}`]: {
        bottom: 0,
        marginBottom: "-0.71em",
        "&::before": {
          transformOrigin: "100% 0"
        }
      },
      [`&[data-popper-placement*="right"] .${Vt.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "100% 100%"
        }
      },
      [`&[data-popper-placement*="left"] .${Vt.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "0 0"
        }
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${Vt.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${Vt.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${Vt.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${Vt.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }]
}))), GP = Ae("div", {
  name: "MuiTooltip",
  slot: "Tooltip",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.tooltip, n.touch && t.touch, n.arrow && t.tooltipArrow, t[`tooltipPlacement${Ee(n.placement.split("-")[0])}`]];
  }
})(tt(({
  theme: e
}) => ({
  backgroundColor: e.vars ? e.vars.palette.Tooltip.bg : on(e.palette.grey[700], 0.92),
  borderRadius: (e.vars || e).shape.borderRadius,
  color: (e.vars || e).palette.common.white,
  fontFamily: e.typography.fontFamily,
  padding: "4px 8px",
  fontSize: e.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: "break-word",
  fontWeight: e.typography.fontWeightMedium,
  [`.${Vt.popper}[data-popper-placement*="left"] &`]: {
    transformOrigin: "right center"
  },
  [`.${Vt.popper}[data-popper-placement*="right"] &`]: {
    transformOrigin: "left center"
  },
  [`.${Vt.popper}[data-popper-placement*="top"] &`]: {
    transformOrigin: "center bottom",
    marginBottom: "14px"
  },
  [`.${Vt.popper}[data-popper-placement*="bottom"] &`]: {
    transformOrigin: "center top",
    marginTop: "14px"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      position: "relative",
      margin: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      padding: "8px 16px",
      fontSize: e.typography.pxToRem(14),
      lineHeight: `${qP(16 / 14)}em`,
      fontWeight: e.typography.fontWeightRegular
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl,
    style: {
      [`.${Vt.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "14px"
      },
      [`.${Vt.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl && t.touch,
    style: {
      [`.${Vt.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "24px"
      },
      [`.${Vt.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl,
    style: {
      [`.${Vt.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "14px"
      },
      [`.${Vt.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl && t.touch,
    style: {
      [`.${Vt.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "24px"
      },
      [`.${Vt.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${Vt.popper}[data-popper-placement*="top"] &`]: {
        marginBottom: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${Vt.popper}[data-popper-placement*="bottom"] &`]: {
        marginTop: "24px"
      }
    }
  }]
}))), XP = Ae("span", {
  name: "MuiTooltip",
  slot: "Arrow",
  overridesResolver: (e, t) => t.arrow
})(tt(({
  theme: e
}) => ({
  overflow: "hidden",
  position: "absolute",
  width: "1em",
  height: "0.71em",
  boxSizing: "border-box",
  color: e.vars ? e.vars.palette.Tooltip.bg : on(e.palette.grey[700], 0.9),
  "&::before": {
    content: '""',
    margin: "auto",
    display: "block",
    width: "100%",
    height: "100%",
    backgroundColor: "currentColor",
    transform: "rotate(45deg)"
  }
})));
let xl = !1;
const Yg = new Av();
let Cs = {
  x: 0,
  y: 0
};
function wl(e, t) {
  return (n, ...r) => {
    t && t(n, ...r), e(n, ...r);
  };
}
const mh = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiTooltip"
  }), {
    arrow: o = !1,
    children: i,
    classes: s,
    components: l = {},
    componentsProps: c = {},
    describeChild: u = !1,
    disableFocusListener: f = !1,
    disableHoverListener: d = !1,
    disableInteractive: p = !1,
    disableTouchListener: h = !1,
    enterDelay: g = 100,
    enterNextDelay: m = 0,
    enterTouchDelay: y = 700,
    followCursor: x = !1,
    id: E,
    leaveDelay: v = 0,
    leaveTouchDelay: w = 1500,
    onClose: S,
    onOpen: T,
    open: C,
    placement: R = "bottom",
    PopperComponent: I,
    PopperProps: b = {},
    slotProps: k = {},
    slots: P = {},
    title: A,
    TransitionComponent: O,
    TransitionProps: _,
    ...$
  } = r, D = /* @__PURE__ */ M.isValidElement(i) ? i : /* @__PURE__ */ N("span", {
    children: i
  }), z = uo(), B = du(), [L, F] = M.useState(), [W, U] = M.useState(null), Z = M.useRef(!1), Q = p || x, ee = Ri(), te = Ri(), q = Ri(), oe = Ri(), [G, ne] = _v({
    controlled: C,
    default: !1,
    name: "Tooltip",
    state: "open"
  });
  let j = G;
  if (process.env.NODE_ENV !== "production") {
    const {
      current: _e
    } = M.useRef(C !== void 0);
    M.useEffect(() => {
      L && L.disabled && !_e && A !== "" && L.tagName.toLowerCase() === "button" && console.warn(["MUI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join(`
`));
    }, [A, L, _e]);
  }
  const pe = Up(E), ce = M.useRef(), be = Ir(() => {
    ce.current !== void 0 && (document.body.style.WebkitUserSelect = ce.current, ce.current = void 0), oe.clear();
  });
  M.useEffect(() => be, [be]);
  const Pe = (_e) => {
    Yg.clear(), xl = !0, ne(!0), T && !j && T(_e);
  }, Me = Ir(
    /**
     * @param {React.SyntheticEvent | Event} event
     */
    (_e) => {
      Yg.start(800 + v, () => {
        xl = !1;
      }), ne(!1), S && j && S(_e), ee.start(z.transitions.duration.shortest, () => {
        Z.current = !1;
      });
    }
  ), Ie = (_e) => {
    Z.current && _e.type !== "touchstart" || (L && L.removeAttribute("title"), te.clear(), q.clear(), g || xl && m ? te.start(xl ? m : g, () => {
      Pe(_e);
    }) : Pe(_e));
  }, Ne = (_e) => {
    te.clear(), q.start(v, () => {
      Me(_e);
    });
  }, [, Fe] = M.useState(!1), ke = (_e) => {
    fc(_e.target) || (Fe(!1), Ne(_e));
  }, V = (_e) => {
    L || F(_e.currentTarget), fc(_e.target) && (Fe(!0), Ie(_e));
  }, J = (_e) => {
    Z.current = !0;
    const jt = D.props;
    jt.onTouchStart && jt.onTouchStart(_e);
  }, ie = (_e) => {
    J(_e), q.clear(), ee.clear(), be(), ce.current = document.body.style.WebkitUserSelect, document.body.style.WebkitUserSelect = "none", oe.start(y, () => {
      document.body.style.WebkitUserSelect = ce.current, Ie(_e);
    });
  }, X = (_e) => {
    D.props.onTouchEnd && D.props.onTouchEnd(_e), be(), q.start(w, () => {
      Me(_e);
    });
  };
  M.useEffect(() => {
    if (!j)
      return;
    function _e(jt) {
      jt.key === "Escape" && Me(jt);
    }
    return document.addEventListener("keydown", _e), () => {
      document.removeEventListener("keydown", _e);
    };
  }, [Me, j]);
  const H = mn(ii(D), F, n);
  !A && A !== 0 && (j = !1);
  const K = M.useRef(), re = (_e) => {
    const jt = D.props;
    jt.onMouseMove && jt.onMouseMove(_e), Cs = {
      x: _e.clientX,
      y: _e.clientY
    }, K.current && K.current.update();
  }, he = {}, me = typeof A == "string";
  u ? (he.title = !j && me && !d ? A : null, he["aria-describedby"] = j ? pe : null) : (he["aria-label"] = me ? A : null, he["aria-labelledby"] = j && !me ? pe : null);
  const le = {
    ...he,
    ...$,
    ...D.props,
    className: Oe($.className, D.props.className),
    onTouchStart: J,
    ref: H,
    ...x ? {
      onMouseMove: re
    } : {}
  };
  process.env.NODE_ENV !== "production" && (le["data-mui-internal-clone-element"] = !0, M.useEffect(() => {
    L && !L.getAttribute("data-mui-internal-clone-element") && console.error(["MUI: The `children` component of the Tooltip is not forwarding its props correctly.", "Please make sure that props are spread on the same element that the ref is applied to."].join(`
`));
  }, [L]));
  const se = {};
  h || (le.onTouchStart = ie, le.onTouchEnd = X), d || (le.onMouseOver = wl(Ie, le.onMouseOver), le.onMouseLeave = wl(Ne, le.onMouseLeave), Q || (se.onMouseOver = Ie, se.onMouseLeave = Ne)), f || (le.onFocus = wl(V, le.onFocus), le.onBlur = wl(ke, le.onBlur), Q || (se.onFocus = V, se.onBlur = ke)), process.env.NODE_ENV !== "production" && D.props.title && console.error(["MUI: You have provided a `title` prop to the child of <Tooltip />.", `Remove this title prop \`${D.props.title}\` or the Tooltip component.`].join(`
`));
  const ae = {
    ...r,
    isRtl: B,
    arrow: o,
    disableInteractive: Q,
    placement: R,
    PopperComponentProp: I,
    touch: Z.current
  }, ge = typeof k.popper == "function" ? k.popper(ae) : k.popper, Ce = M.useMemo(() => {
    var jt, Dt;
    let _e = [{
      name: "arrow",
      enabled: !!W,
      options: {
        element: W,
        padding: 4
      }
    }];
    return (jt = b.popperOptions) != null && jt.modifiers && (_e = _e.concat(b.popperOptions.modifiers)), (Dt = ge == null ? void 0 : ge.popperOptions) != null && Dt.modifiers && (_e = _e.concat(ge.popperOptions.modifiers)), {
      ...b.popperOptions,
      ...ge == null ? void 0 : ge.popperOptions,
      modifiers: _e
    };
  }, [W, b.popperOptions, ge == null ? void 0 : ge.popperOptions]), ue = YP(ae), Te = typeof k.transition == "function" ? k.transition(ae) : k.transition, Le = {
    slots: {
      popper: l.Popper,
      transition: l.Transition ?? O,
      tooltip: l.Tooltip,
      arrow: l.Arrow,
      ...P
    },
    slotProps: {
      arrow: k.arrow ?? c.arrow,
      popper: {
        ...b,
        ...ge ?? c.popper
      },
      // resolvedPopperProps can be spread because it's already an object
      tooltip: k.tooltip ?? c.tooltip,
      transition: {
        ..._,
        ...Te ?? c.transition
      }
    }
  }, [We, Qe] = pt("popper", {
    elementType: KP,
    externalForwardedProps: Le,
    ownerState: ae,
    className: Oe(ue.popper, b == null ? void 0 : b.className)
  }), [Pt, ht] = pt("transition", {
    elementType: ha,
    externalForwardedProps: Le,
    ownerState: ae
  }), [It, ze] = pt("tooltip", {
    elementType: GP,
    className: ue.tooltip,
    externalForwardedProps: Le,
    ownerState: ae
  }), [it, xt] = pt("arrow", {
    elementType: XP,
    className: ue.arrow,
    externalForwardedProps: Le,
    ownerState: ae,
    ref: U
  });
  return /* @__PURE__ */ we(M.Fragment, {
    children: [/* @__PURE__ */ M.cloneElement(D, le), /* @__PURE__ */ N(We, {
      as: I ?? yu,
      placement: R,
      anchorEl: x ? {
        getBoundingClientRect: () => ({
          top: Cs.y,
          left: Cs.x,
          right: Cs.x,
          bottom: Cs.y,
          width: 0,
          height: 0
        })
      } : L,
      popperRef: K,
      open: L ? j : !1,
      id: pe,
      transition: !0,
      ...se,
      ...Qe,
      popperOptions: Ce,
      children: ({
        TransitionProps: _e
      }) => /* @__PURE__ */ N(Pt, {
        timeout: z.transitions.duration.shorter,
        ..._e,
        ...ht,
        children: /* @__PURE__ */ we(It, {
          ...ze,
          children: [A, o ? /* @__PURE__ */ N(it, {
            ...xt
          }) : null]
        })
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (mh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: a.bool,
  /**
   * Tooltip reference element.
   */
  children: Io.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Arrow: a.elementType,
    Popper: a.elementType,
    Tooltip: a.elementType,
    Transition: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    arrow: a.object,
    popper: a.object,
    tooltip: a.object,
    transition: a.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: a.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: a.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: a.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: a.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: a.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: a.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: a.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: a.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: a.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: a.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: a.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: a.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The component used for the popper.
   * @deprecated use the `slots.popper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PopperComponent: a.elementType,
  /**
   * Props applied to the [`Popper`](https://mui.com/material-ui/api/popper/) element.
   * @deprecated use the `slotProps.popper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PopperProps: a.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    arrow: a.oneOfType([a.func, a.object]),
    popper: a.oneOfType([a.func, a.object]),
    tooltip: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    arrow: a.elementType,
    popper: a.elementType,
    tooltip: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: a.node,
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: a.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object
});
function ZP(e) {
  return Et("MuiTypography", e);
}
Rt("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]);
const QP = {
  primary: !0,
  secondary: !0,
  error: !0,
  info: !0,
  success: !0,
  warning: !0,
  textPrimary: !0,
  textSecondary: !0,
  textDisabled: !0
}, JP = YR(), eI = (e) => {
  const {
    align: t,
    gutterBottom: n,
    noWrap: r,
    paragraph: o,
    variant: i,
    classes: s
  } = e, l = {
    root: ["root", i, e.align !== "inherit" && `align${Ee(t)}`, n && "gutterBottom", r && "noWrap", o && "paragraph"]
  };
  return At(l, ZP, s);
}, tI = Ae("span", {
  name: "MuiTypography",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.variant && t[n.variant], n.align !== "inherit" && t[`align${Ee(n.align)}`], n.noWrap && t.noWrap, n.gutterBottom && t.gutterBottom, n.paragraph && t.paragraph];
  }
})(tt(({
  theme: e
}) => {
  var t;
  return {
    margin: 0,
    variants: [{
      props: {
        variant: "inherit"
      },
      style: {
        // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
        font: "inherit",
        lineHeight: "inherit",
        letterSpacing: "inherit"
      }
    }, ...Object.entries(e.typography).filter(([n, r]) => n !== "inherit" && r && typeof r == "object").map(([n, r]) => ({
      props: {
        variant: n
      },
      style: r
    })), ...Object.entries(e.palette).filter(xn()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        color: (e.vars || e).palette[n].main
      }
    })), ...Object.entries(((t = e.palette) == null ? void 0 : t.text) || {}).filter(([, n]) => typeof n == "string").map(([n]) => ({
      props: {
        color: `text${Ee(n)}`
      },
      style: {
        color: (e.vars || e).palette.text[n]
      }
    })), {
      props: ({
        ownerState: n
      }) => n.align !== "inherit",
      style: {
        textAlign: "var(--Typography-textAlign)"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.noWrap,
      style: {
        overflow: "hidden",
        textOverflow: "ellipsis",
        whiteSpace: "nowrap"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.gutterBottom,
      style: {
        marginBottom: "0.35em"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.paragraph,
      style: {
        marginBottom: 16
      }
    }]
  };
})), Kg = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  inherit: "p"
}, Nx = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    color: r,
    ...o
  } = Nt({
    props: t,
    name: "MuiTypography"
  }), i = !QP[r], s = JP({
    ...o,
    ...i && {
      color: r
    }
  }), {
    align: l = "inherit",
    className: c,
    component: u,
    gutterBottom: f = !1,
    noWrap: d = !1,
    paragraph: p = !1,
    variant: h = "body1",
    variantMapping: g = Kg,
    ...m
  } = s, y = {
    ...s,
    align: l,
    color: r,
    className: c,
    component: u,
    gutterBottom: f,
    noWrap: d,
    paragraph: p,
    variant: h,
    variantMapping: g
  }, x = u || (p ? "p" : g[h] || Kg[h]) || "span", E = eI(y);
  return /* @__PURE__ */ N(tI, {
    as: x,
    ref: n,
    className: Oe(E.root, c),
    ...m,
    ownerState: y,
    style: {
      ...l !== "inherit" && {
        "--Typography-textAlign": l
      },
      ...m.style
    }
  });
});
process.env.NODE_ENV !== "production" && (Nx.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the component.
   * @default 'inherit'
   */
  align: a.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "success", "error", "info", "warning", "textPrimary", "textSecondary", "textDisabled"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */
  gutterBottom: a.bool,
  /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */
  noWrap: a.bool,
  /**
   * If `true`, the element will be a paragraph element.
   * @default false
   * @deprecated Use the `component` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  paragraph: a.bool,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Applies the theme typography styles.
   * @default 'body1'
   */
  variant: a.oneOfType([a.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), a.string]),
  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */
  variantMapping: a.object
});
function bu({
  isTitle: e = !1,
  isLabel: t = !1,
  titleLevel: n = "h6",
  textColor: r = "auto",
  bold: o = !1,
  ellipsis: i = !1
}) {
  return {
    textCommonStyles: Ye(
      () => ({
        typography: e ? n : t ? "caption" : "body1",
        fontWeight: e || t || o ? "bold" : "normal",
        color: (l) => r === "error" ? l.palette.error.main : r === "primary" ? l.palette.primary.main : r === "success" ? l.palette.success.main : r === "disabled" ? l.palette.action.disabled : "inherit",
        ...i ? {
          width: "100%",
          whiteSpace: "nowrap",
          overflow: "hidden",
          textOverflow: "ellipsis"
        } : {}
      }),
      [e, t, r, o, i]
    )
  };
}
const wn = ve(
  ({
    text: e,
    isLabel: t,
    isTitle: n = !1,
    titleLevel: r = "h6",
    ellipsis: o = !1,
    textColor: i = "auto",
    bold: s,
    sx: l,
    ...c
  }) => {
    const { textCommonStyles: u } = bu({
      isTitle: n,
      isLabel: t,
      titleLevel: r,
      textColor: i,
      bold: s,
      ellipsis: o
    }), f = Ye(
      () => /* @__PURE__ */ N(
        Nx,
        {
          className: "VenomousUI-Text",
          component: "div",
          variant: n ? r : t ? "caption" : "body1",
          noWrap: o,
          sx: {
            ...u,
            ...l
          },
          ...c,
          children: e
        }
      ),
      [e, n, r, o, l, c, u]
    );
    return o ? /* @__PURE__ */ N(Ki, { tooltip: e, hide: !o, children: f }) : f;
  }
);
wn.displayName = "Text";
const Ki = ve(({ children: e, tooltip: t, hide: n }) => /* @__PURE__ */ N(
  mh,
  {
    className: "VenomousUI-Tooltip",
    arrow: !0,
    title: /* @__PURE__ */ N(wn, { isLabel: !0, bold: !0, text: t, textColor: "auto" }),
    disableHoverListener: n,
    children: e,
    slots: {
      transition: Jo
    },
    slotProps: {
      transition: { timeout: 400 }
    }
  }
));
Ki.displayName = "Tooltip";
const $x = ve(
  ({
    children: e,
    position: t = "bottom-right",
    color: n = "error",
    icon: r,
    iconWidth: o = 16,
    iconTooltip: i = ""
  }) => {
    const { paperCommonStyles: s } = ms(), { badgePlacementAttributes: l, badgeColor: c } = eh({ position: t, color: n }), { vertical: u, horizontal: f, transform: d } = l;
    return /* @__PURE__ */ N(
      pu,
      {
        className: "VenomousUI-IconBadge",
        variant: "standard",
        invisible: !r,
        anchorOrigin: { vertical: u, horizontal: f },
        badgeContent: /* @__PURE__ */ N(Ki, { tooltip: i, hide: !i, children: /* @__PURE__ */ N(hr, { icon: r, width: o, color: "auto" }) }),
        sx: {
          ".MuiBadge-badge": {
            color: c,
            fontWeight: "bold",
            ...s,
            transform: d,
            p: 0,
            minHeight: Number(o) + 4,
            minWidth: Number(o) + 4,
            height: Number(o) + 4,
            width: Number(o) + 4,
            borderRadius: "50%",
            border: 1,
            borderColor: c
          }
        },
        children: e
      }
    );
  }
);
$x.displayName = "IconBadge";
const nI = ve(
  ({ children: e, position: t = "top-right", color: n = "primary", value: r = 0, max: o = 99, min: i = 0 }) => {
    const { badgePlacementAttributes: s, badgeColor: l } = eh({ position: t, color: n }), { vertical: c, horizontal: u } = s, f = Ye(() => r > o ? `${o}+` : String(r), [r, o]), d = Ye(() => r > i, [r, i]);
    return /* @__PURE__ */ N(
      pu,
      {
        className: "VenomousUI-NumberTextBadge",
        variant: "standard",
        invisible: !d,
        anchorOrigin: { vertical: c, horizontal: u },
        badgeContent: /* @__PURE__ */ N(Ki, { tooltip: String(r), hide: r <= o, children: /* @__PURE__ */ N("span", { children: f }) }),
        sx: {
          ".MuiBadge-badge": {
            color: "#fff !important",
            backgroundColor: l,
            fontWeight: "bold"
          }
        },
        children: e
      }
    );
  }
);
nI.displayName = "NumberTextBadge";
const rI = ve(
  ({
    width: e = 28,
    src: t,
    alt: n,
    onClick: r,
    sx: o,
    badgeColor: i = "primary",
    badgePosition: s = "bottom-right",
    withDotBadge: l = !1,
    dotBadgeIsVisible: c = !0,
    withIconBadge: u = !1,
    iconBadgeIcon: f = ""
  }) => {
    const d = Ye(
      () => /* @__PURE__ */ N(
        nx,
        {
          className: "VenomousUI-Avatar",
          src: t,
          alt: n,
          sx: {
            width: e,
            height: e,
            border: 1,
            borderColor: "divider",
            cursor: r ? "pointer" : "default",
            ...o
          },
          onClick: r
        }
      ),
      [e, t, n, r, o]
    );
    return l ? /* @__PURE__ */ N(rx, { isVisible: c, position: s, color: i, children: d }) : u ? /* @__PURE__ */ N($x, { icon: f, position: s, color: i, children: d }) : d;
  }
);
rI.displayName = "Avatar";
const oI = ve(({ width: e = 100, text: t = "", sx: n }) => /* @__PURE__ */ we(Br, { className: "VenomousUI-Blank", sx: { width: e, ...n }, children: [
  /* @__PURE__ */ N(hr, { width: e, icon: "solar:box-linear", color: "disabled" }),
  /* @__PURE__ */ N(wn, { text: t, isTitle: !0, titleLevel: "h6", textColor: "disabled", textAlign: "center" })
] }));
oI.displayName = "Blank";
function iI(e, t) {
  const n = e.charCodeAt(2);
  return e[0] === "o" && e[1] === "n" && n >= 65 && n <= 90 && typeof t == "function";
}
function gh(e, t) {
  if (!e)
    return t;
  function n(s, l) {
    const c = {};
    return Object.keys(l).forEach((u) => {
      iI(u, l[u]) && typeof s[u] == "function" && (c[u] = (...f) => {
        s[u](...f), l[u](...f);
      });
    }), c;
  }
  if (typeof e == "function" || typeof t == "function")
    return (s) => {
      const l = typeof t == "function" ? t(s) : t, c = typeof e == "function" ? e({
        ...s,
        ...l
      }) : e, u = Oe(s == null ? void 0 : s.className, l == null ? void 0 : l.className, c == null ? void 0 : c.className), f = n(c, l);
      return {
        ...l,
        ...c,
        ...f,
        ...!!u && {
          className: u
        },
        ...(l == null ? void 0 : l.style) && (c == null ? void 0 : c.style) && {
          style: {
            ...l.style,
            ...c.style
          }
        },
        ...(l == null ? void 0 : l.sx) && (c == null ? void 0 : c.sx) && {
          sx: [...Array.isArray(l.sx) ? l.sx : [l.sx], ...Array.isArray(c.sx) ? c.sx : [c.sx]]
        }
      };
    };
  const r = t, o = n(e, r), i = Oe(r == null ? void 0 : r.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...o,
    ...!!i && {
      className: i
    },
    ...(r == null ? void 0 : r.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...r.style,
        ...e.style
      }
    },
    ...(r == null ? void 0 : r.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(r.sx) ? r.sx : [r.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
class bc {
  constructor() {
    po(this, "mountEffect", () => {
      this.shouldMount && !this.didMount && this.ref.current !== null && (this.didMount = !0, this.mounted.resolve());
    });
    this.ref = {
      current: null
    }, this.mounted = null, this.didMount = !1, this.shouldMount = !1, this.setShouldMount = null;
  }
  /** React ref to the ripple instance */
  /** If the ripple component should be mounted */
  /** Promise that resolves when the ripple component is mounted */
  /** If the ripple component has been mounted */
  /** React state hook setter */
  static create() {
    return new bc();
  }
  static use() {
    const t = Mv(bc.create).current, [n, r] = M.useState(!1);
    return t.shouldMount = n, t.setShouldMount = r, M.useEffect(t.mountEffect, [n]), t;
  }
  mount() {
    return this.mounted || (this.mounted = aI(), this.shouldMount = !0, this.setShouldMount(this.shouldMount)), this.mounted;
  }
  /* Ripple API */
  start(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.start(...t);
    });
  }
  stop(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.stop(...t);
    });
  }
  pulsate(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.pulsate(...t);
    });
  }
}
function sI() {
  return bc.use();
}
function aI() {
  let e, t;
  const n = new Promise((r, o) => {
    e = r, t = o;
  });
  return n.resolve = e, n.reject = t, n;
}
function Px(e) {
  const {
    className: t,
    classes: n,
    pulsate: r = !1,
    rippleX: o,
    rippleY: i,
    rippleSize: s,
    in: l,
    onExited: c,
    timeout: u
  } = e, [f, d] = M.useState(!1), p = Oe(t, n.ripple, n.rippleVisible, r && n.ripplePulsate), h = {
    width: s,
    height: s,
    top: -(s / 2) + i,
    left: -(s / 2) + o
  }, g = Oe(n.child, f && n.childLeaving, r && n.childPulsate);
  return !l && !f && d(!0), M.useEffect(() => {
    if (!l && c != null) {
      const m = setTimeout(c, u);
      return () => {
        clearTimeout(m);
      };
    }
  }, [c, l, u]), /* @__PURE__ */ N("span", {
    className: p,
    style: h,
    children: /* @__PURE__ */ N("span", {
      className: g
    })
  });
}
process.env.NODE_ENV !== "production" && (Px.propTypes = {
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object.isRequired,
  className: a.string,
  /**
   * @ignore - injected from TransitionGroup
   */
  in: a.bool,
  /**
   * @ignore - injected from TransitionGroup
   */
  onExited: a.func,
  /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */
  pulsate: a.bool,
  /**
   * Diameter of the ripple.
   */
  rippleSize: a.number,
  /**
   * Horizontal position of the ripple center.
   */
  rippleX: a.number,
  /**
   * Vertical position of the ripple center.
   */
  rippleY: a.number,
  /**
   * exit delay
   */
  timeout: a.number.isRequired
});
const Kn = Rt("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), Ff = 550, lI = 80, cI = $o`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`, uI = $o`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`, dI = $o`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`, fI = Ae("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), pI = Ae(Px, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})`
  opacity: 0;
  position: absolute;

  &.${Kn.rippleVisible} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${cI};
    animation-duration: ${Ff}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  &.${Kn.ripplePulsate} {
    animation-duration: ${({
  theme: e
}) => e.transitions.duration.shorter}ms;
  }

  & .${Kn.child} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${Kn.childLeaving} {
    opacity: 0;
    animation-name: ${uI};
    animation-duration: ${Ff}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  & .${Kn.childPulsate} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${dI};
    animation-duration: 2500ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`, Ix = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiTouchRipple"
  }), {
    center: o = !1,
    classes: i = {},
    className: s,
    ...l
  } = r, [c, u] = M.useState([]), f = M.useRef(0), d = M.useRef(null);
  M.useEffect(() => {
    d.current && (d.current(), d.current = null);
  }, [c]);
  const p = M.useRef(!1), h = Ri(), g = M.useRef(null), m = M.useRef(null), y = M.useCallback((w) => {
    const {
      pulsate: S,
      rippleX: T,
      rippleY: C,
      rippleSize: R,
      cb: I
    } = w;
    u((b) => [...b, /* @__PURE__ */ N(pI, {
      classes: {
        ripple: Oe(i.ripple, Kn.ripple),
        rippleVisible: Oe(i.rippleVisible, Kn.rippleVisible),
        ripplePulsate: Oe(i.ripplePulsate, Kn.ripplePulsate),
        child: Oe(i.child, Kn.child),
        childLeaving: Oe(i.childLeaving, Kn.childLeaving),
        childPulsate: Oe(i.childPulsate, Kn.childPulsate)
      },
      timeout: Ff,
      pulsate: S,
      rippleX: T,
      rippleY: C,
      rippleSize: R
    }, f.current)]), f.current += 1, d.current = I;
  }, [i]), x = M.useCallback((w = {}, S = {}, T = () => {
  }) => {
    const {
      pulsate: C = !1,
      center: R = o || S.pulsate,
      fakeElement: I = !1
      // For test purposes
    } = S;
    if ((w == null ? void 0 : w.type) === "mousedown" && p.current) {
      p.current = !1;
      return;
    }
    (w == null ? void 0 : w.type) === "touchstart" && (p.current = !0);
    const b = I ? null : m.current, k = b ? b.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let P, A, O;
    if (R || w === void 0 || w.clientX === 0 && w.clientY === 0 || !w.clientX && !w.touches)
      P = Math.round(k.width / 2), A = Math.round(k.height / 2);
    else {
      const {
        clientX: _,
        clientY: $
      } = w.touches && w.touches.length > 0 ? w.touches[0] : w;
      P = Math.round(_ - k.left), A = Math.round($ - k.top);
    }
    if (R)
      O = Math.sqrt((2 * k.width ** 2 + k.height ** 2) / 3), O % 2 === 0 && (O += 1);
    else {
      const _ = Math.max(Math.abs((b ? b.clientWidth : 0) - P), P) * 2 + 2, $ = Math.max(Math.abs((b ? b.clientHeight : 0) - A), A) * 2 + 2;
      O = Math.sqrt(_ ** 2 + $ ** 2);
    }
    w != null && w.touches ? g.current === null && (g.current = () => {
      y({
        pulsate: C,
        rippleX: P,
        rippleY: A,
        rippleSize: O,
        cb: T
      });
    }, h.start(lI, () => {
      g.current && (g.current(), g.current = null);
    })) : y({
      pulsate: C,
      rippleX: P,
      rippleY: A,
      rippleSize: O,
      cb: T
    });
  }, [o, y, h]), E = M.useCallback(() => {
    x({}, {
      pulsate: !0
    });
  }, [x]), v = M.useCallback((w, S) => {
    if (h.clear(), (w == null ? void 0 : w.type) === "touchend" && g.current) {
      g.current(), g.current = null, h.start(0, () => {
        v(w, S);
      });
      return;
    }
    g.current = null, u((T) => T.length > 0 ? T.slice(1) : T), d.current = S;
  }, [h]);
  return M.useImperativeHandle(n, () => ({
    pulsate: E,
    start: x,
    stop: v
  }), [E, x, v]), /* @__PURE__ */ N(fI, {
    className: Oe(Kn.root, i.root, s),
    ref: m,
    ...l,
    children: /* @__PURE__ */ N(sh, {
      component: null,
      exit: !0,
      children: c
    })
  });
});
process.env.NODE_ENV !== "production" && (Ix.propTypes = {
  /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */
  center: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string
});
function hI(e) {
  return Et("MuiButtonBase", e);
}
const mI = Rt("MuiButtonBase", ["root", "disabled", "focusVisible"]), gI = (e) => {
  const {
    disabled: t,
    focusVisible: n,
    focusVisibleClassName: r,
    classes: o
  } = e, s = At({
    root: ["root", t && "disabled", n && "focusVisible"]
  }, hI, o);
  return n && r && (s.root += ` ${r}`), s;
}, yI = Ae("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  textDecoration: "none",
  // So we take precedent over the style of a native <a /> element.
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${mI.disabled}`]: {
    pointerEvents: "none",
    // Disable link interactions
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), yh = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiButtonBase"
  }), {
    action: o,
    centerRipple: i = !1,
    children: s,
    className: l,
    component: c = "button",
    disabled: u = !1,
    disableRipple: f = !1,
    disableTouchRipple: d = !1,
    focusRipple: p = !1,
    focusVisibleClassName: h,
    LinkComponent: g = "a",
    onBlur: m,
    onClick: y,
    onContextMenu: x,
    onDragLeave: E,
    onFocus: v,
    onFocusVisible: w,
    onKeyDown: S,
    onKeyUp: T,
    onMouseDown: C,
    onMouseLeave: R,
    onMouseUp: I,
    onTouchEnd: b,
    onTouchMove: k,
    onTouchStart: P,
    tabIndex: A = 0,
    TouchRippleProps: O,
    touchRippleRef: _,
    type: $,
    ...D
  } = r, z = M.useRef(null), B = sI(), L = mn(B.ref, _), [F, W] = M.useState(!1);
  u && F && W(!1), M.useImperativeHandle(o, () => ({
    focusVisible: () => {
      W(!0), z.current.focus();
    }
  }), []);
  const U = B.shouldMount && !f && !u;
  M.useEffect(() => {
    F && p && !f && B.pulsate();
  }, [f, p, F, B]);
  const Z = Yr(B, "start", C, d), Q = Yr(B, "stop", x, d), ee = Yr(B, "stop", E, d), te = Yr(B, "stop", I, d), q = Yr(B, "stop", (V) => {
    F && V.preventDefault(), R && R(V);
  }, d), oe = Yr(B, "start", P, d), G = Yr(B, "stop", b, d), ne = Yr(B, "stop", k, d), j = Yr(B, "stop", (V) => {
    fc(V.target) || W(!1), m && m(V);
  }, !1), pe = Ir((V) => {
    z.current || (z.current = V.currentTarget), fc(V.target) && (W(!0), w && w(V)), v && v(V);
  }), ce = () => {
    const V = z.current;
    return c && c !== "button" && !(V.tagName === "A" && V.href);
  }, be = Ir((V) => {
    p && !V.repeat && F && V.key === " " && B.stop(V, () => {
      B.start(V);
    }), V.target === V.currentTarget && ce() && V.key === " " && V.preventDefault(), S && S(V), V.target === V.currentTarget && ce() && V.key === "Enter" && !u && (V.preventDefault(), y && y(V));
  }), Pe = Ir((V) => {
    p && V.key === " " && F && !V.defaultPrevented && B.stop(V, () => {
      B.pulsate(V);
    }), T && T(V), y && V.target === V.currentTarget && ce() && V.key === " " && !V.defaultPrevented && y(V);
  });
  let Me = c;
  Me === "button" && (D.href || D.to) && (Me = g);
  const Ie = {};
  Me === "button" ? (Ie.type = $ === void 0 ? "button" : $, Ie.disabled = u) : (!D.href && !D.to && (Ie.role = "button"), u && (Ie["aria-disabled"] = u));
  const Ne = mn(n, z), Fe = {
    ...r,
    centerRipple: i,
    component: c,
    disabled: u,
    disableRipple: f,
    disableTouchRipple: d,
    focusRipple: p,
    tabIndex: A,
    focusVisible: F
  }, ke = gI(Fe);
  return /* @__PURE__ */ we(yI, {
    as: Me,
    className: Oe(ke.root, l),
    ownerState: Fe,
    onBlur: j,
    onClick: y,
    onContextMenu: Q,
    onFocus: pe,
    onKeyDown: be,
    onKeyUp: Pe,
    onMouseDown: Z,
    onMouseLeave: q,
    onMouseUp: te,
    onDragLeave: ee,
    onTouchEnd: G,
    onTouchMove: ne,
    onTouchStart: oe,
    ref: Ne,
    tabIndex: u ? -1 : A,
    type: $,
    ...Ie,
    ...D,
    children: [s, U ? /* @__PURE__ */ N(Ix, {
      ref: L,
      center: i,
      ...O
    }) : null]
  });
});
function Yr(e, t, n, r = !1) {
  return Ir((o) => (n && n(o), r || e[t](o), !0));
}
process.env.NODE_ENV !== "production" && (yh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: co,
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: a.bool,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: Hp,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: a.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: a.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: a.string,
  /**
   * @ignore
   */
  href: a.any,
  /**
   * The component used to render a link when the `href` prop is provided.
   * @default 'a'
   */
  LinkComponent: a.elementType,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * @ignore
   */
  onContextMenu: a.func,
  /**
   * @ignore
   */
  onDragLeave: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * @ignore
   */
  onKeyUp: a.func,
  /**
   * @ignore
   */
  onMouseDown: a.func,
  /**
   * @ignore
   */
  onMouseLeave: a.func,
  /**
   * @ignore
   */
  onMouseUp: a.func,
  /**
   * @ignore
   */
  onTouchEnd: a.func,
  /**
   * @ignore
   */
  onTouchMove: a.func,
  /**
   * @ignore
   */
  onTouchStart: a.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * @default 0
   */
  tabIndex: a.number,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: a.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: a.oneOfType([a.func, a.shape({
    current: a.shape({
      pulsate: a.func.isRequired,
      start: a.func.isRequired,
      stop: a.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  type: a.oneOfType([a.oneOf(["button", "reset", "submit"]), a.string])
});
function bI(e) {
  return Et("MuiCircularProgress", e);
}
Rt("MuiCircularProgress", ["root", "determinate", "indeterminate", "colorPrimary", "colorSecondary", "svg", "circle", "circleDeterminate", "circleIndeterminate", "circleDisableShrink"]);
const mo = 44, zf = $o`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`, Vf = $o`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: -126px;
  }
`, vI = typeof zf != "string" ? us`
        animation: ${zf} 1.4s linear infinite;
      ` : null, xI = typeof Vf != "string" ? us`
        animation: ${Vf} 1.4s ease-in-out infinite;
      ` : null, wI = (e) => {
  const {
    classes: t,
    variant: n,
    color: r,
    disableShrink: o
  } = e, i = {
    root: ["root", n, `color${Ee(r)}`],
    svg: ["svg"],
    circle: ["circle", `circle${Ee(n)}`, o && "circleDisableShrink"]
  };
  return At(i, bI, t);
}, SI = Ae("span", {
  name: "MuiCircularProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`color${Ee(n.color)}`]];
  }
})(tt(({
  theme: e
}) => ({
  display: "inline-block",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("transform")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: vI || {
      animation: `${zf} 1.4s linear infinite`
    }
  }, ...Object.entries(e.palette).filter(xn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  }))]
}))), EI = Ae("svg", {
  name: "MuiCircularProgress",
  slot: "Svg",
  overridesResolver: (e, t) => t.svg
})({
  display: "block"
  // Keeps the progress centered
}), TI = Ae("circle", {
  name: "MuiCircularProgress",
  slot: "Circle",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.circle, t[`circle${Ee(n.variant)}`], n.disableShrink && t.circleDisableShrink];
  }
})(tt(({
  theme: e
}) => ({
  stroke: "currentColor",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("stroke-dashoffset")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: {
      // Some default value that looks fine waiting for the animation to kicks in.
      strokeDasharray: "80px, 200px",
      strokeDashoffset: 0
      // Add the unit to fix a Edge 16 and below bug.
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" && !t.disableShrink,
    style: xI || {
      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
      animation: `${Vf} 1.4s ease-in-out infinite`
    }
  }]
}))), bh = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiCircularProgress"
  }), {
    className: o,
    color: i = "primary",
    disableShrink: s = !1,
    size: l = 40,
    style: c,
    thickness: u = 3.6,
    value: f = 0,
    variant: d = "indeterminate",
    ...p
  } = r, h = {
    ...r,
    color: i,
    disableShrink: s,
    size: l,
    thickness: u,
    value: f,
    variant: d
  }, g = wI(h), m = {}, y = {}, x = {};
  if (d === "determinate") {
    const E = 2 * Math.PI * ((mo - u) / 2);
    m.strokeDasharray = E.toFixed(3), x["aria-valuenow"] = Math.round(f), m.strokeDashoffset = `${((100 - f) / 100 * E).toFixed(3)}px`, y.transform = "rotate(-90deg)";
  }
  return /* @__PURE__ */ N(SI, {
    className: Oe(g.root, o),
    style: {
      width: l,
      height: l,
      ...y,
      ...c
    },
    ownerState: h,
    ref: n,
    role: "progressbar",
    ...x,
    ...p,
    children: /* @__PURE__ */ N(EI, {
      className: g.svg,
      ownerState: h,
      viewBox: `${mo / 2} ${mo / 2} ${mo} ${mo}`,
      children: /* @__PURE__ */ N(TI, {
        className: g.circle,
        style: m,
        ownerState: h,
        cx: mo,
        cy: mo,
        r: (mo - u) / 2,
        fill: "none",
        strokeWidth: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (bh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   * @default false
   */
  disableShrink: Po(a.bool, (e) => e.disableShrink && e.variant && e.variant !== "indeterminate" ? new Error("MUI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.") : null),
  /**
   * The size of the component.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, for example '3rem'.
   * @default 40
   */
  size: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The thickness of the circle.
   * @default 3.6
   */
  thickness: a.number,
  /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   * @default 0
   */
  value: a.number,
  /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   * @default 'indeterminate'
   */
  variant: a.oneOf(["determinate", "indeterminate"])
});
function CI(e) {
  return Et("MuiButton", e);
}
const zo = Rt("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorSuccess", "colorError", "colorInfo", "colorWarning", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "icon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge", "loading", "loadingWrapper", "loadingIconPlaceholder", "loadingIndicator", "loadingPositionCenter", "loadingPositionStart", "loadingPositionEnd"]), _x = /* @__PURE__ */ M.createContext({});
process.env.NODE_ENV !== "production" && (_x.displayName = "ButtonGroupContext");
const Mx = /* @__PURE__ */ M.createContext(void 0);
process.env.NODE_ENV !== "production" && (Mx.displayName = "ButtonGroupButtonContext");
const OI = (e) => {
  const {
    color: t,
    disableElevation: n,
    fullWidth: r,
    size: o,
    variant: i,
    loading: s,
    loadingPosition: l,
    classes: c
  } = e, u = {
    root: ["root", s && "loading", i, `${i}${Ee(t)}`, `size${Ee(o)}`, `${i}Size${Ee(o)}`, `color${Ee(t)}`, n && "disableElevation", r && "fullWidth", s && `loadingPosition${Ee(l)}`],
    startIcon: ["icon", "startIcon", `iconSize${Ee(o)}`],
    endIcon: ["icon", "endIcon", `iconSize${Ee(o)}`],
    loadingIndicator: ["loadingIndicator"],
    loadingWrapper: ["loadingWrapper"]
  }, f = At(u, CI, c);
  return {
    ...c,
    // forward the focused, disabled, etc. classes to the ButtonBase
    ...f
  };
}, Ax = [{
  props: {
    size: "small"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 18
    }
  }
}, {
  props: {
    size: "medium"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 20
    }
  }
}, {
  props: {
    size: "large"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 22
    }
  }
}], kI = Ae(yh, {
  shouldForwardProp: (e) => Vr(e) || e === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`${n.variant}${Ee(n.color)}`], t[`size${Ee(n.size)}`], t[`${n.variant}Size${Ee(n.size)}`], n.color === "inherit" && t.colorInherit, n.disableElevation && t.disableElevation, n.fullWidth && t.fullWidth, n.loading && t.loading];
  }
})(tt(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? e.palette.grey[300] : e.palette.grey[800], n = e.palette.mode === "light" ? e.palette.grey.A100 : e.palette.grey[700];
  return {
    ...e.typography.button,
    minWidth: 64,
    padding: "6px 16px",
    border: 0,
    borderRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: e.transitions.duration.short
    }),
    "&:hover": {
      textDecoration: "none"
    },
    [`&.${zo.disabled}`]: {
      color: (e.vars || e).palette.action.disabled
    },
    variants: [{
      props: {
        variant: "contained"
      },
      style: {
        color: "var(--variant-containedColor)",
        backgroundColor: "var(--variant-containedBg)",
        boxShadow: (e.vars || e).shadows[2],
        "&:hover": {
          boxShadow: (e.vars || e).shadows[4],
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            boxShadow: (e.vars || e).shadows[2]
          }
        },
        "&:active": {
          boxShadow: (e.vars || e).shadows[8]
        },
        [`&.${zo.focusVisible}`]: {
          boxShadow: (e.vars || e).shadows[6]
        },
        [`&.${zo.disabled}`]: {
          color: (e.vars || e).palette.action.disabled,
          boxShadow: (e.vars || e).shadows[0],
          backgroundColor: (e.vars || e).palette.action.disabledBackground
        }
      }
    }, {
      props: {
        variant: "outlined"
      },
      style: {
        padding: "5px 15px",
        border: "1px solid currentColor",
        borderColor: "var(--variant-outlinedBorder, currentColor)",
        backgroundColor: "var(--variant-outlinedBg)",
        color: "var(--variant-outlinedColor)",
        [`&.${zo.disabled}`]: {
          border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
        }
      }
    }, {
      props: {
        variant: "text"
      },
      style: {
        padding: "6px 8px",
        color: "var(--variant-textColor)",
        backgroundColor: "var(--variant-textBg)"
      }
    }, ...Object.entries(e.palette).filter(xn()).map(([r]) => ({
      props: {
        color: r
      },
      style: {
        "--variant-textColor": (e.vars || e).palette[r].main,
        "--variant-outlinedColor": (e.vars || e).palette[r].main,
        "--variant-outlinedBorder": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / 0.5)` : on(e.palette[r].main, 0.5),
        "--variant-containedColor": (e.vars || e).palette[r].contrastText,
        "--variant-containedBg": (e.vars || e).palette[r].main,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": (e.vars || e).palette[r].dark,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : on(e.palette[r].main, e.palette.action.hoverOpacity),
            "--variant-outlinedBorder": (e.vars || e).palette[r].main,
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : on(e.palette[r].main, e.palette.action.hoverOpacity)
          }
        }
      }
    })), {
      props: {
        color: "inherit"
      },
      style: {
        color: "inherit",
        borderColor: "currentColor",
        "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedBg : t,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedHoverBg : n,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : on(e.palette.text.primary, e.palette.action.hoverOpacity),
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : on(e.palette.text.primary, e.palette.action.hoverOpacity)
          }
        }
      }
    }, {
      props: {
        size: "small",
        variant: "text"
      },
      style: {
        padding: "4px 5px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "text"
      },
      style: {
        padding: "8px 11px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "outlined"
      },
      style: {
        padding: "3px 9px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "outlined"
      },
      style: {
        padding: "7px 21px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "contained"
      },
      style: {
        padding: "4px 10px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "contained"
      },
      style: {
        padding: "8px 22px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        disableElevation: !0
      },
      style: {
        boxShadow: "none",
        "&:hover": {
          boxShadow: "none"
        },
        [`&.${zo.focusVisible}`]: {
          boxShadow: "none"
        },
        "&:active": {
          boxShadow: "none"
        },
        [`&.${zo.disabled}`]: {
          boxShadow: "none"
        }
      }
    }, {
      props: {
        fullWidth: !0
      },
      style: {
        width: "100%"
      }
    }, {
      props: {
        loadingPosition: "center"
      },
      style: {
        transition: e.transitions.create(["background-color", "box-shadow", "border-color"], {
          duration: e.transitions.duration.short
        }),
        [`&.${zo.loading}`]: {
          color: "transparent"
        }
      }
    }]
  };
})), RI = Ae("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.startIcon, n.loading && t.startIconLoadingStart, t[`iconSize${Ee(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginLeft: -2
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginRight: -8
    }
  }, ...Ax]
})), NI = Ae("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.endIcon, n.loading && t.endIconLoadingEnd, t[`iconSize${Ee(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginRight: -2
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginLeft: -8
    }
  }, ...Ax]
})), $I = Ae("span", {
  name: "MuiButton",
  slot: "LoadingIndicator",
  overridesResolver: (e, t) => t.loadingIndicator
})(({
  theme: e
}) => ({
  display: "none",
  position: "absolute",
  visibility: "visible",
  variants: [{
    props: {
      loading: !0
    },
    style: {
      display: "flex"
    }
  }, {
    props: {
      loadingPosition: "start"
    },
    style: {
      left: 14
    }
  }, {
    props: {
      loadingPosition: "start",
      size: "small"
    },
    style: {
      left: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "start"
    },
    style: {
      left: 6
    }
  }, {
    props: {
      loadingPosition: "center"
    },
    style: {
      left: "50%",
      transform: "translate(-50%)",
      color: (e.vars || e).palette.action.disabled
    }
  }, {
    props: {
      loadingPosition: "end"
    },
    style: {
      right: 14
    }
  }, {
    props: {
      loadingPosition: "end",
      size: "small"
    },
    style: {
      right: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "end"
    },
    style: {
      right: 6
    }
  }, {
    props: {
      loadingPosition: "start",
      fullWidth: !0
    },
    style: {
      position: "relative",
      left: -10
    }
  }, {
    props: {
      loadingPosition: "end",
      fullWidth: !0
    },
    style: {
      position: "relative",
      right: -10
    }
  }]
})), Gg = Ae("span", {
  name: "MuiButton",
  slot: "LoadingIconPlaceholder",
  overridesResolver: (e, t) => t.loadingIconPlaceholder
})({
  display: "inline-block",
  width: "1em",
  height: "1em"
}), vh = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = M.useContext(_x), o = M.useContext(Mx), i = ua(r, t), s = Nt({
    props: i,
    name: "MuiButton"
  }), {
    children: l,
    color: c = "primary",
    component: u = "button",
    className: f,
    disabled: d = !1,
    disableElevation: p = !1,
    disableFocusRipple: h = !1,
    endIcon: g,
    focusVisibleClassName: m,
    fullWidth: y = !1,
    id: x,
    loading: E = null,
    loadingIndicator: v,
    loadingPosition: w = "center",
    size: S = "medium",
    startIcon: T,
    type: C,
    variant: R = "text",
    ...I
  } = s, b = Up(x), k = v ?? /* @__PURE__ */ N(bh, {
    "aria-labelledby": b,
    color: "inherit",
    size: 16
  }), P = {
    ...s,
    color: c,
    component: u,
    disabled: d,
    disableElevation: p,
    disableFocusRipple: h,
    fullWidth: y,
    loading: E,
    loadingIndicator: k,
    loadingPosition: w,
    size: S,
    type: C,
    variant: R
  }, A = OI(P), O = (T || E && w === "start") && /* @__PURE__ */ N(RI, {
    className: A.startIcon,
    ownerState: P,
    children: T || /* @__PURE__ */ N(Gg, {
      className: A.loadingIconPlaceholder,
      ownerState: P
    })
  }), _ = (g || E && w === "end") && /* @__PURE__ */ N(NI, {
    className: A.endIcon,
    ownerState: P,
    children: g || /* @__PURE__ */ N(Gg, {
      className: A.loadingIconPlaceholder,
      ownerState: P
    })
  }), $ = o || "", D = typeof E == "boolean" ? (
    // use plain HTML span to minimize the runtime overhead
    /* @__PURE__ */ N("span", {
      className: A.loadingWrapper,
      style: {
        display: "contents"
      },
      children: E && /* @__PURE__ */ N($I, {
        className: A.loadingIndicator,
        ownerState: P,
        children: k
      })
    })
  ) : null;
  return /* @__PURE__ */ we(kI, {
    ownerState: P,
    className: Oe(r.className, A.root, f, $),
    component: u,
    disabled: d || E,
    focusRipple: !h,
    focusVisibleClassName: Oe(A.focusVisible, m),
    ref: n,
    type: C,
    id: E ? b : x,
    ...I,
    classes: A,
    children: [O, w !== "end" && D, l, w === "end" && D, _]
  });
});
process.env.NODE_ENV !== "production" && (vh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: a.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * Element placed after the children.
   */
  endIcon: a.node,
  /**
   * @ignore
   */
  focusVisibleClassName: a.string,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: a.string,
  /**
   * @ignore
   */
  id: a.string,
  /**
   * If `true`, the loading indicator is visible and the button is disabled.
   * If `true | false`, the loading wrapper is always rendered before the children to prevent [Google Translation Crash](https://github.com/mui/material-ui/issues/27853).
   * @default null
   */
  loading: a.bool,
  /**
   * Element placed before the children if the button is in loading state.
   * The node should contain an element with `role="progressbar"` with an accessible name.
   * By default, it renders a `CircularProgress` that is labeled by the button itself.
   * @default <CircularProgress color="inherit" size={16} />
   */
  loadingIndicator: a.node,
  /**
   * The loading indicator can be positioned on the start, end, or the center of the button.
   * @default 'center'
   */
  loadingPosition: a.oneOf(["center", "end", "start"]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["small", "medium", "large"]), a.string]),
  /**
   * Element placed before the children.
   */
  startIcon: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * @ignore
   */
  type: a.oneOfType([a.oneOf(["button", "reset", "submit"]), a.string]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: a.oneOfType([a.oneOf(["contained", "outlined", "text"]), a.string])
});
const an = ve(
  ({
    text: e,
    loading: t,
    disabled: n,
    isOutlined: r,
    isGhost: o,
    isCircle: i,
    isSquare: s,
    icon: l = void 0,
    iconWidth: c = 20,
    iconPosition: u = void 0,
    color: f = "primary",
    onClick: d,
    sx: p,
    ...h
  }) => {
    const { buttonColors: g } = PI({ color: f, isGhost: o, isOutlined: r }), m = Ye(() => l ? /* @__PURE__ */ N(hr, { icon: l, width: c }) : null, [l, c]);
    return /* @__PURE__ */ we(
      vh,
      {
        variant: o ? "text" : r ? "outlined" : "contained",
        loading: t,
        disabled: n,
        startIcon: u === "start" && m,
        endIcon: u === "end" && m,
        sx: {
          minWidth: "40px",
          minHeight: "40px",
          width: i ? "40px" : "unset",
          height: i ? "40px" : "unset",
          textTransform: "none",
          fontWeight: "bold",
          borderRadius: i ? "50%" : "8px",
          p: i || s ? "6px" : "auto",
          px: i || s ? "0" : "16px !important",
          cursor: t ? "wait !important" : n ? "not-allowed !important" : "pointer",
          pointerEvents: "auto !important",
          transition: "background-color 0s, background-image 0s",
          "& .MuiButton-startIcon": { width: c, mr: "8px", svg: { color: "inherit" } },
          "& .MuiButton-endIcon": { width: c, mr: "8px", svg: { color: "inherit" } },
          ...g,
          ...p
        },
        onClick: (y) => {
          y.stopPropagation(), d == null || d(y);
        },
        ...h,
        children: [
          !u && m,
          !i && e
        ]
      }
    );
  }
);
an.displayName = "Button";
function PI({ color: e = "primary", isGhost: t, isOutlined: n }) {
  const r = uo();
  return { buttonColors: Ye(() => {
    const i = r.palette.mode === "dark", s = {
      auto: r.palette.text.primary,
      disabled: r.palette.action.disabled,
      primary: r.palette.primary.main,
      success: r.palette.success.main,
      error: r.palette.error.main
    }, l = e in s ? s[e] : "inherit", c = i && ["auto", "disabled"].includes(e) ? "black" : r.palette.primary.contrastText;
    return {
      backgroundColor: t || n ? "transparent" : l,
      color: t || n ? l : c,
      borderColor: n ? l : "transparent"
    };
  }, [r, e, t, n]) };
}
const vu = ve(
  ({ isOutlined: e, clickable: t, onClick: n, disabled: r, children: o, sx: i }) => t ? /* @__PURE__ */ N(
    vh,
    {
      className: "VenomousUI-Card",
      component: ro,
      isOutlined: e,
      disabled: r,
      onClick: r ? void 0 : n,
      sx: {
        display: "block",
        color: "inherit",
        textTransform: "none",
        borderRadius: "8px",
        cursor: r ? "not-allowed !important" : "pointer",
        pointerEvents: "auto !important",
        p: "16px",
        ...e ? {
          border: 1,
          borderColor: "divider"
        } : {},
        ...i
      },
      children: o
    }
  ) : /* @__PURE__ */ N(ro, { className: "VenomousUI-Card", isOutlined: e, sx: { p: "16px", ...i }, children: o })
);
vu.displayName = "Card";
const en = ve(
  ({ children: e, row: t, alignItems: n, justifyContent: r, gap: o = 1, sx: i, ...s }) => /* @__PURE__ */ N(
    Br,
    {
      className: "VenomousUI-Flex",
      component: "div",
      sx: {
        display: "flex",
        flexDirection: t ? "row" : "column",
        alignItems: n || (t ? "center" : "start"),
        justifyContent: r || "start",
        ...Array.isArray(o) ? { rowGap: o[0], columnGap: o[1] } : { gap: o },
        ...i
      },
      ...s,
      children: e
    }
  )
);
en.displayName = "Flex";
const II = ve(
  ({ title: e, subtitle: t, headerStartExtra: n, headerEndExtra: r, children: o, ...i }) => /* @__PURE__ */ we(vu, { ...i, children: [
    /* @__PURE__ */ we(en, { row: !0, mb: "8px", justifyContent: "space-between", alignItems: "center", children: [
      n && /* @__PURE__ */ N("div", { style: { marginRight: t ? "8px" : 0 }, children: n }),
      /* @__PURE__ */ we(en, { gap: 0, children: [
        e && /* @__PURE__ */ N(wn, { text: e, isTitle: !0, titleLevel: "h6", lineHeight: "1.25rem", ellipsis: !0 }),
        t && /* @__PURE__ */ N(wn, { text: t, isLabel: !0, ellipsis: !0 })
      ] }),
      r && /* @__PURE__ */ N(
        "div",
        {
          style: {
            marginRight: t ? "-8px" : 0,
            marginTop: t ? "-8px" : 0,
            marginLeft: "8px"
          },
          children: r
        }
      )
    ] }),
    o
  ] })
);
II.displayName = "ExhibitCard";
const xu = 0, Mo = 1, gs = 2, Dx = 4;
function Xg(e) {
  return () => e;
}
function _I(e) {
  e();
}
function Bx(e, t) {
  return (n) => e(t(n));
}
function Zg(e, t) {
  return () => e(t);
}
function Lx(e, t) {
  return (n) => e(t, n);
}
function xh(e) {
  return e !== void 0;
}
function MI(...e) {
  return () => {
    e.map(_I);
  };
}
function ys() {
}
function wu(e, t) {
  return t(e), e;
}
function AI(e, t) {
  return t(e);
}
function Tt(...e) {
  return e;
}
function ut(e, t) {
  return e(Mo, t);
}
function qe(e, t) {
  e(xu, t);
}
function wh(e) {
  e(gs);
}
function fn(e) {
  return e(Dx);
}
function Be(e, t) {
  return ut(e, Lx(t, xu));
}
function Fr(e, t) {
  const n = e(Mo, (r) => {
    n(), t(r);
  });
  return n;
}
function Qg(e) {
  let t, n;
  return (r) => (o) => {
    t = o, n && clearTimeout(n), n = setTimeout(() => {
      r(t);
    }, e);
  };
}
function Fx(e, t) {
  return e === t;
}
function St(e = Fx) {
  let t;
  return (n) => (r) => {
    e(t, r) || (t = r, n(r));
  };
}
function Ve(e) {
  return (t) => (n) => {
    e(n) && t(n);
  };
}
function Re(e) {
  return (t) => Bx(t, e);
}
function Or(e) {
  return (t) => () => {
    t(e);
  };
}
function ye(e, ...t) {
  const n = DI(...t);
  return (r, o) => {
    switch (r) {
      case gs:
        wh(e);
        return;
      case Mo:
        return ut(e, n(o));
    }
  };
}
function Nr(e, t) {
  return (n) => (r) => {
    n(t = e(t, r));
  };
}
function Gi(e) {
  return (t) => (n) => {
    e > 0 ? e-- : t(n);
  };
}
function wo(e) {
  let t = null, n;
  return (r) => (o) => {
    t = o, !n && (n = setTimeout(() => {
      n = void 0, r(t);
    }, e));
  };
}
function Ge(...e) {
  const t = new Array(e.length);
  let n = 0, r = null;
  const o = Math.pow(2, e.length) - 1;
  return e.forEach((i, s) => {
    const l = Math.pow(2, s);
    ut(i, (c) => {
      const u = n;
      n = n | l, t[s] = c, u !== o && n === o && r && (r(), r = null);
    });
  }), (i) => (s) => {
    const l = () => {
      i([s].concat(t));
    };
    n === o ? l() : r = l;
  };
}
function DI(...e) {
  return (t) => e.reduceRight(AI, t);
}
function BI(e) {
  let t, n;
  const r = () => t == null ? void 0 : t();
  return function(o, i) {
    switch (o) {
      case Mo:
        return i ? n === i ? void 0 : (r(), n = i, t = ut(e, i), t) : (r(), ys);
      case gs:
        r(), n = null;
        return;
    }
  };
}
function xe(e) {
  let t = e;
  const n = Je();
  return (r, o) => {
    switch (r) {
      case xu:
        t = o;
        break;
      case Mo: {
        o(t);
        break;
      }
      case Dx:
        return t;
    }
    return n(r, o);
  };
}
function pn(e, t) {
  return wu(xe(t), (n) => Be(e, n));
}
function Je() {
  const e = [];
  return (t, n) => {
    switch (t) {
      case xu:
        e.slice().forEach((r) => {
          r(n);
        });
        return;
      case gs:
        e.splice(0, e.length);
        return;
      case Mo:
        return e.push(n), () => {
          const r = e.indexOf(n);
          r > -1 && e.splice(r, 1);
        };
    }
  };
}
function Hn(e) {
  return wu(Je(), (t) => Be(e, t));
}
function ot(e, t = [], { singleton: n } = { singleton: !0 }) {
  return {
    constructor: e,
    dependencies: t,
    id: LI(),
    singleton: n
  };
}
const LI = () => Symbol();
function FI(e) {
  const t = /* @__PURE__ */ new Map(), n = ({ constructor: r, dependencies: o, id: i, singleton: s }) => {
    if (s && t.has(i))
      return t.get(i);
    const l = r(o.map((c) => n(c)));
    return s && t.set(i, l), l;
  };
  return n(e);
}
function Qt(...e) {
  const t = Je(), n = new Array(e.length);
  let r = 0;
  const o = Math.pow(2, e.length) - 1;
  return e.forEach((i, s) => {
    const l = Math.pow(2, s);
    ut(i, (c) => {
      n[s] = c, r = r | l, r === o && qe(t, n);
    });
  }), function(i, s) {
    switch (i) {
      case gs: {
        wh(t);
        return;
      }
      case Mo:
        return r === o && s(n), ut(t, s);
    }
  };
}
function je(e, t = Fx) {
  return ye(e, St(t));
}
function Jg(...e) {
  return function(t, n) {
    switch (t) {
      case gs:
        return;
      case Mo:
        return MI(...e.map((r) => ut(r, n)));
    }
  };
}
var Wn = /* @__PURE__ */ ((e) => (e[e.DEBUG = 0] = "DEBUG", e[e.INFO = 1] = "INFO", e[e.WARN = 2] = "WARN", e[e.ERROR = 3] = "ERROR", e))(Wn || {});
const zI = {
  0: "debug",
  3: "error",
  1: "log",
  2: "warn"
}, VI = () => typeof globalThis > "u" ? window : globalThis, Ao = ot(
  () => {
    const e = xe(
      3
      /* ERROR */
    );
    return {
      log: xe((t, n, r = 1) => {
        var o;
        const i = (o = VI().VIRTUOSO_LOG_LEVEL) != null ? o : fn(e);
        r >= i && console[zI[r]](
          "%creact-virtuoso: %c%s %o",
          "color: #0253b3; font-weight: bold",
          "color: initial",
          t,
          n
        );
      }),
      logLevel: e
    };
  },
  [],
  { singleton: !0 }
);
function si(e, t, n) {
  return Sh(e, t, n).callbackRef;
}
function Sh(e, t, n) {
  const r = Y.useRef(null);
  let o = (i) => {
  };
  if (typeof ResizeObserver < "u") {
    const i = Y.useMemo(() => new ResizeObserver((s) => {
      const l = () => {
        const c = s[0].target;
        c.offsetParent !== null && e(c);
      };
      n ? l() : requestAnimationFrame(l);
    }), [e]);
    o = (s) => {
      s && t ? (i.observe(s), r.current = s) : (r.current && i.unobserve(r.current), r.current = null);
    };
  }
  return { callbackRef: o, ref: r };
}
function jI(e, t, n, r, o, i, s, l, c) {
  const u = Y.useCallback(
    (f) => {
      const d = HI(f.children, t, l ? "offsetWidth" : "offsetHeight", o);
      let p = f.parentElement;
      for (; !p.dataset.virtuosoScroller; )
        p = p.parentElement;
      const h = p.lastElementChild.dataset.viewportType === "window";
      let g;
      h && (g = p.ownerDocument.defaultView);
      const m = s ? l ? s.scrollLeft : s.scrollTop : h ? l ? g.scrollX || g.document.documentElement.scrollLeft : g.scrollY || g.document.documentElement.scrollTop : l ? p.scrollLeft : p.scrollTop, y = s ? l ? s.scrollWidth : s.scrollHeight : h ? l ? g.document.documentElement.scrollWidth : g.document.documentElement.scrollHeight : l ? p.scrollWidth : p.scrollHeight, x = s ? l ? s.offsetWidth : s.offsetHeight : h ? l ? g.innerWidth : g.innerHeight : l ? p.offsetWidth : p.offsetHeight;
      r({
        scrollHeight: y,
        scrollTop: Math.max(m, 0),
        viewportHeight: x
      }), i == null || i(
        l ? ey("column-gap", getComputedStyle(f).columnGap, o) : ey("row-gap", getComputedStyle(f).rowGap, o)
      ), d !== null && e(d);
    },
    [e, t, o, i, s, r]
  );
  return Sh(u, n, c);
}
function HI(e, t, n, r) {
  const o = e.length;
  if (o === 0)
    return null;
  const i = [];
  for (let s = 0; s < o; s++) {
    const l = e.item(s);
    if (l.dataset.index === void 0)
      continue;
    const c = parseInt(l.dataset.index), u = parseFloat(l.dataset.knownSize), f = t(l, n);
    if (f === 0 && r("Zero-sized element, this should not happen", { child: l }, Wn.ERROR), f === u)
      continue;
    const d = i[i.length - 1];
    i.length === 0 || d.size !== f || d.endIndex !== c - 1 ? i.push({ endIndex: c, size: f, startIndex: c }) : i[i.length - 1].endIndex++;
  }
  return i;
}
function ey(e, t, n) {
  return t !== "normal" && !(t != null && t.endsWith("px")) && n(`${e} was not resolved to pixel value correctly`, t, Wn.WARN), t === "normal" ? 0 : parseInt(t ?? "0", 10);
}
function zx(e, t, n) {
  const r = Y.useRef(null), o = Y.useCallback(
    (c) => {
      if (!(c != null && c.offsetParent))
        return;
      const u = c.getBoundingClientRect(), f = u.width;
      let d, p;
      if (t) {
        const h = t.getBoundingClientRect(), g = u.top - h.top;
        p = h.height - Math.max(0, g), d = g + t.scrollTop;
      } else {
        const h = s.current.ownerDocument.defaultView;
        p = h.innerHeight - Math.max(0, u.top), d = u.top + h.scrollY;
      }
      r.current = {
        offsetTop: d,
        visibleHeight: p,
        visibleWidth: f
      }, e(r.current);
    },
    [e, t]
  ), { callbackRef: i, ref: s } = Sh(o, !0, n), l = Y.useCallback(() => {
    o(s.current);
  }, [o, s]);
  return Y.useEffect(() => {
    var c;
    if (t) {
      t.addEventListener("scroll", l);
      const u = new ResizeObserver(() => {
        requestAnimationFrame(l);
      });
      return u.observe(t), () => {
        t.removeEventListener("scroll", l), u.unobserve(t);
      };
    } else {
      const u = (c = s.current) == null ? void 0 : c.ownerDocument.defaultView;
      return u == null || u.addEventListener("scroll", l), u == null || u.addEventListener("resize", l), () => {
        u == null || u.removeEventListener("scroll", l), u == null || u.removeEventListener("resize", l);
      };
    }
  }, [l, t]), i;
}
const En = ot(
  () => {
    const e = Je(), t = Je(), n = xe(0), r = Je(), o = xe(0), i = Je(), s = Je(), l = xe(0), c = xe(0), u = xe(0), f = xe(0), d = Je(), p = Je(), h = xe(!1), g = xe(!1), m = xe(!1);
    return Be(
      ye(
        e,
        Re(({ scrollTop: y }) => y)
      ),
      t
    ), Be(
      ye(
        e,
        Re(({ scrollHeight: y }) => y)
      ),
      s
    ), Be(t, o), {
      deviation: n,
      fixedFooterHeight: u,
      fixedHeaderHeight: c,
      footerHeight: f,
      headerHeight: l,
      horizontalDirection: g,
      scrollBy: p,
      // input
      scrollContainerState: e,
      scrollHeight: s,
      scrollingInProgress: h,
      // signals
      scrollTo: d,
      scrollTop: t,
      skipAnimationFrameInResizeObserver: m,
      smoothScrollTargetReached: r,
      // state
      statefulScrollTop: o,
      viewportHeight: i
    };
  },
  [],
  { singleton: !0 }
), ya = { lvl: 0 };
function Vx(e, t) {
  const n = e.length;
  if (n === 0)
    return [];
  let { index: r, value: o } = t(e[0]);
  const i = [];
  for (let s = 1; s < n; s++) {
    const { index: l, value: c } = t(e[s]);
    i.push({ end: l - 1, start: r, value: o }), r = l, o = c;
  }
  return i.push({ end: 1 / 0, start: r, value: o }), i;
}
function vt(e) {
  return e === ya;
}
function ba(e, t) {
  if (!vt(e))
    return t === e.k ? e.v : t < e.k ? ba(e.l, t) : ba(e.r, t);
}
function mr(e, t, n = "k") {
  if (vt(e))
    return [-1 / 0, void 0];
  if (Number(e[n]) === t)
    return [e.k, e.v];
  if (Number(e[n]) < t) {
    const r = mr(e.r, t, n);
    return r[0] === -1 / 0 ? [e.k, e.v] : r;
  }
  return mr(e.l, t, n);
}
function Bn(e, t, n) {
  return vt(e) ? Wx(t, n, 1) : t === e.k ? Zt(e, { k: t, v: n }) : t < e.k ? ty(Zt(e, { l: Bn(e.l, t, n) })) : ty(Zt(e, { r: Bn(e.r, t, n) }));
}
function Mi() {
  return ya;
}
function Su(e, t, n) {
  if (vt(e))
    return [];
  const r = mr(e, t)[0];
  return WI(Hf(e, r, n));
}
function jf(e, t) {
  if (vt(e)) return ya;
  const { k: n, l: r, r: o } = e;
  if (t === n) {
    if (vt(r))
      return o;
    if (vt(o))
      return r;
    {
      const [i, s] = Hx(r);
      return Jl(Zt(e, { k: i, l: jx(r), v: s }));
    }
  } else return t < n ? Jl(Zt(e, { l: jf(r, t) })) : Jl(Zt(e, { r: jf(o, t) }));
}
function qo(e) {
  return vt(e) ? [] : [...qo(e.l), { k: e.k, v: e.v }, ...qo(e.r)];
}
function Hf(e, t, n) {
  if (vt(e))
    return [];
  const { k: r, l: o, r: i, v: s } = e;
  let l = [];
  return r > t && (l = l.concat(Hf(o, t, n))), r >= t && r <= n && l.push({ k: r, v: s }), r <= n && (l = l.concat(Hf(i, t, n))), l;
}
function Jl(e) {
  const { l: t, lvl: n, r } = e;
  if (r.lvl >= n - 1 && t.lvl >= n - 1)
    return e;
  if (n > r.lvl + 1) {
    if ($d(t))
      return Ux(Zt(e, { lvl: n - 1 }));
    if (!vt(t) && !vt(t.r))
      return Zt(t.r, {
        l: Zt(t, { r: t.r.l }),
        lvl: n,
        r: Zt(e, {
          l: t.r.r,
          lvl: n - 1
        })
      });
    throw new Error("Unexpected empty nodes");
  } else {
    if ($d(e))
      return Wf(Zt(e, { lvl: n - 1 }));
    if (!vt(r) && !vt(r.l)) {
      const o = r.l, i = $d(o) ? r.lvl - 1 : r.lvl;
      return Zt(o, {
        l: Zt(e, {
          lvl: n - 1,
          r: o.l
        }),
        lvl: o.lvl + 1,
        r: Wf(Zt(r, { l: o.r, lvl: i }))
      });
    } else
      throw new Error("Unexpected empty nodes");
  }
}
function Zt(e, t) {
  return Wx(
    t.k !== void 0 ? t.k : e.k,
    t.v !== void 0 ? t.v : e.v,
    t.lvl !== void 0 ? t.lvl : e.lvl,
    t.l !== void 0 ? t.l : e.l,
    t.r !== void 0 ? t.r : e.r
  );
}
function jx(e) {
  return vt(e.r) ? e.l : Jl(Zt(e, { r: jx(e.r) }));
}
function $d(e) {
  return vt(e) || e.lvl > e.r.lvl;
}
function Hx(e) {
  return vt(e.r) ? [e.k, e.v] : Hx(e.r);
}
function Wx(e, t, n, r = ya, o = ya) {
  return { k: e, l: r, lvl: n, r: o, v: t };
}
function ty(e) {
  return Wf(Ux(e));
}
function Ux(e) {
  const { l: t } = e;
  return !vt(t) && t.lvl === e.lvl ? Zt(t, { r: Zt(e, { l: t.r }) }) : e;
}
function Wf(e) {
  const { lvl: t, r: n } = e;
  return !vt(n) && !vt(n.r) && n.lvl === t && n.r.lvl === t ? Zt(n, { l: Zt(e, { r: n.l }), lvl: t + 1 }) : e;
}
function WI(e) {
  return Vx(e, ({ k: t, v: n }) => ({ index: t, value: n }));
}
function qx(e, t) {
  return !!(e && e.startIndex === t.startIndex && e.endIndex === t.endIndex);
}
function va(e, t) {
  return !!(e && e[0] === t[0] && e[1] === t[1]);
}
const Eh = ot(
  () => ({ recalcInProgress: xe(!1) }),
  [],
  { singleton: !0 }
);
function Yx(e, t, n) {
  return e[vc(e, t, n)];
}
function vc(e, t, n, r = 0) {
  let o = e.length - 1;
  for (; r <= o; ) {
    const i = Math.floor((r + o) / 2), s = e[i], l = n(s, t);
    if (l === 0)
      return i;
    if (l === -1) {
      if (o - r < 2)
        return i - 1;
      o = i - 1;
    } else {
      if (o === r)
        return i;
      r = i + 1;
    }
  }
  throw new Error(`Failed binary finding record in array - ${e.join(",")}, searched for ${t}`);
}
function UI(e, t, n, r) {
  const o = vc(e, t, r), i = vc(e, n, r, o);
  return e.slice(o, i + 1);
}
function Oo(e, t) {
  return Math.round(e.getBoundingClientRect()[t]);
}
function Eu(e) {
  return !vt(e.groupOffsetTree);
}
function Th({ index: e }, t) {
  return t === e ? 0 : t < e ? -1 : 1;
}
function qI() {
  return {
    groupIndices: [],
    groupOffsetTree: Mi(),
    lastIndex: 0,
    lastOffset: 0,
    lastSize: 0,
    offsetTree: [],
    sizeTree: Mi()
  };
}
function YI(e, t) {
  let n = vt(e) ? 0 : 1 / 0;
  for (const r of t) {
    const { endIndex: o, size: i, startIndex: s } = r;
    if (n = Math.min(n, s), vt(e)) {
      e = Bn(e, 0, i);
      continue;
    }
    const l = Su(e, s - 1, o + 1);
    if (l.some(e_(r)))
      continue;
    let c = !1, u = !1;
    for (const { end: f, start: d, value: p } of l)
      c ? (o >= d || i === p) && (e = jf(e, d)) : (u = p !== i, c = !0), f > o && o >= d && p !== i && (e = Bn(e, o + 1, p));
    u && (e = Bn(e, s, i));
  }
  return [e, n];
}
function KI(e) {
  return typeof e.groupIndex < "u";
}
function GI({ offset: e }, t) {
  return t === e ? 0 : t < e ? -1 : 1;
}
function xa(e, t, n) {
  if (t.length === 0)
    return 0;
  const { index: r, offset: o, size: i } = Yx(t, e, Th), s = e - r, l = i * s + (s - 1) * n + o;
  return l > 0 ? l + n : l;
}
function Kx(e, t) {
  if (!Eu(t))
    return e;
  let n = 0;
  for (; t.groupIndices[n] <= e + n; )
    n++;
  return e + n;
}
function Gx(e, t, n) {
  if (KI(e))
    return t.groupIndices[e.groupIndex] + 1;
  {
    const r = e.index === "LAST" ? n : e.index;
    let o = Kx(r, t);
    return o = Math.max(0, o, Math.min(n, o)), o;
  }
}
function XI(e, t, n, r = 0) {
  return r > 0 && (t = Math.max(t, Yx(e, r, Th).offset)), Vx(UI(e, t, n, GI), JI);
}
function ZI(e, [t, n, r, o]) {
  t.length > 0 && r("received item sizes", t, Wn.DEBUG);
  const i = e.sizeTree;
  let s = i, l = 0;
  if (n.length > 0 && vt(i) && t.length === 2) {
    const p = t[0].size, h = t[1].size;
    s = n.reduce((g, m) => Bn(Bn(g, m, p), m + 1, h), s);
  } else
    [s, l] = YI(s, t);
  if (s === i)
    return e;
  const { lastIndex: c, lastOffset: u, lastSize: f, offsetTree: d } = Uf(e.offsetTree, l, s, o);
  return {
    groupIndices: n,
    groupOffsetTree: n.reduce((p, h) => Bn(p, h, xa(h, d, o)), Mi()),
    lastIndex: c,
    lastOffset: u,
    lastSize: f,
    offsetTree: d,
    sizeTree: s
  };
}
function QI(e) {
  return qo(e).map(({ k: t, v: n }, r, o) => {
    const i = o[r + 1];
    return { endIndex: i ? i.k - 1 : 1 / 0, size: n, startIndex: t };
  });
}
function ny(e, t) {
  let n = 0, r = 0;
  for (; n < e; )
    n += t[r + 1] - t[r] - 1, r++;
  return r - (n === e ? 0 : 1);
}
function Uf(e, t, n, r) {
  let o = e, i = 0, s = 0, l = 0, c = 0;
  if (t !== 0) {
    c = vc(o, t - 1, Th), l = o[c].offset;
    const u = mr(n, t - 1);
    i = u[0], s = u[1], o.length && o[c].size === mr(n, t)[1] && (c -= 1), o = o.slice(0, c + 1);
  } else
    o = [];
  for (const { start: u, value: f } of Su(n, t, 1 / 0)) {
    const d = u - i, p = d * s + l + d * r;
    o.push({
      index: u,
      offset: p,
      size: f
    }), i = u, l = p, s = f;
  }
  return {
    lastIndex: i,
    lastOffset: l,
    lastSize: s,
    offsetTree: o
  };
}
function JI(e) {
  return { index: e.index, value: e };
}
function e_(e) {
  const { endIndex: t, size: n, startIndex: r } = e;
  return (o) => o.start === r && (o.end === t || o.end === 1 / 0) && o.value === n;
}
const t_ = {
  offsetHeight: "height",
  offsetWidth: "width"
}, jr = ot(
  ([{ log: e }, { recalcInProgress: t }]) => {
    const n = Je(), r = Je(), o = pn(r, 0), i = Je(), s = Je(), l = xe(0), c = xe([]), u = xe(void 0), f = xe(void 0), d = xe((S, T) => Oo(S, t_[T])), p = xe(void 0), h = xe(0), g = qI(), m = pn(
      ye(n, Ge(c, e, h), Nr(ZI, g), St()),
      g
    ), y = pn(
      ye(
        c,
        St(),
        Nr((S, T) => ({ current: T, prev: S.current }), {
          current: [],
          prev: []
        }),
        Re(({ prev: S }) => S)
      ),
      []
    );
    Be(
      ye(
        c,
        Ve((S) => S.length > 0),
        Ge(m, h),
        Re(([S, T, C]) => {
          const R = S.reduce((I, b, k) => Bn(I, b, xa(b, T.offsetTree, C) || k), Mi());
          return {
            ...T,
            groupIndices: S,
            groupOffsetTree: R
          };
        })
      ),
      m
    ), Be(
      ye(
        r,
        Ge(m),
        Ve(([S, { lastIndex: T }]) => S < T),
        Re(([S, { lastIndex: T, lastSize: C }]) => [
          {
            endIndex: T,
            size: C,
            startIndex: S
          }
        ])
      ),
      n
    ), Be(u, f);
    const x = pn(
      ye(
        u,
        Re((S) => S === void 0)
      ),
      !0
    );
    Be(
      ye(
        f,
        Ve((S) => S !== void 0 && vt(fn(m).sizeTree)),
        Re((S) => [{ endIndex: 0, size: S, startIndex: 0 }])
      ),
      n
    );
    const E = Hn(
      ye(
        n,
        Ge(m),
        Nr(
          ({ sizes: S }, [T, C]) => ({
            changed: C !== S,
            sizes: C
          }),
          { changed: !1, sizes: g }
        ),
        Re((S) => S.changed)
      )
    );
    ut(
      ye(
        l,
        Nr(
          (S, T) => ({ diff: S.prev - T, prev: T }),
          { diff: 0, prev: 0 }
        ),
        Re((S) => S.diff)
      ),
      (S) => {
        const { groupIndices: T } = fn(m);
        if (S > 0)
          qe(t, !0), qe(i, S + ny(S, T));
        else if (S < 0) {
          const C = fn(y);
          C.length > 0 && (S -= ny(-S, C)), qe(s, S);
        }
      }
    ), ut(ye(l, Ge(e)), ([S, T]) => {
      S < 0 && T(
        "`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value",
        { firstItemIndex: l },
        Wn.ERROR
      );
    });
    const v = Hn(i);
    Be(
      ye(
        i,
        Ge(m),
        Re(([S, T]) => {
          const C = T.groupIndices.length > 0, R = [], I = T.lastSize;
          if (C) {
            const b = ba(T.sizeTree, 0);
            let k = 0, P = 0;
            for (; k < S; ) {
              const O = T.groupIndices[P], _ = T.groupIndices.length === P + 1 ? 1 / 0 : T.groupIndices[P + 1] - O - 1;
              R.push({
                endIndex: O,
                size: b,
                startIndex: O
              }), R.push({
                endIndex: O + 1 + _ - 1,
                size: I,
                startIndex: O + 1
              }), P++, k += _ + 1;
            }
            const A = qo(T.sizeTree);
            return k !== S && A.shift(), A.reduce(
              (O, { k: _, v: $ }) => {
                let D = O.ranges;
                return O.prevSize !== 0 && (D = [
                  ...O.ranges,
                  {
                    endIndex: _ + S - 1,
                    size: O.prevSize,
                    startIndex: O.prevIndex
                  }
                ]), {
                  prevIndex: _ + S,
                  prevSize: $,
                  ranges: D
                };
              },
              {
                prevIndex: S,
                prevSize: 0,
                ranges: R
              }
            ).ranges;
          }
          return qo(T.sizeTree).reduce(
            (b, { k, v: P }) => ({
              prevIndex: k + S,
              prevSize: P,
              ranges: [...b.ranges, { endIndex: k + S - 1, size: b.prevSize, startIndex: b.prevIndex }]
            }),
            {
              prevIndex: 0,
              prevSize: I,
              ranges: []
            }
          ).ranges;
        })
      ),
      n
    );
    const w = Hn(
      ye(
        s,
        Ge(m, h),
        Re(([S, { offsetTree: T }, C]) => {
          const R = -S;
          return xa(R, T, C);
        })
      )
    );
    return Be(
      ye(
        s,
        Ge(m, h),
        Re(([S, T, C]) => {
          if (T.groupIndices.length > 0) {
            if (vt(T.sizeTree))
              return T;
            let R = Mi();
            const I = fn(y);
            let b = 0, k = 0, P = 0;
            for (; b < -S; ) {
              P = I[k];
              const A = I[k + 1] - P - 1;
              k++, b += A + 1;
            }
            if (R = qo(T.sizeTree).reduce((A, { k: O, v: _ }) => Bn(A, Math.max(0, O + S), _), R), b !== -S) {
              const A = ba(T.sizeTree, P);
              R = Bn(R, 0, A);
              const O = mr(T.sizeTree, -S + 1)[1];
              R = Bn(R, 1, O);
            }
            return {
              ...T,
              sizeTree: R,
              ...Uf(T.offsetTree, 0, R, C)
            };
          } else {
            const R = qo(T.sizeTree).reduce((I, { k: b, v: k }) => Bn(I, Math.max(0, b + S), k), Mi());
            return {
              ...T,
              sizeTree: R,
              ...Uf(T.offsetTree, 0, R, C)
            };
          }
        })
      ),
      m
    ), {
      beforeUnshiftWith: v,
      // input
      data: p,
      defaultItemSize: f,
      firstItemIndex: l,
      fixedItemSize: u,
      gap: h,
      groupIndices: c,
      itemSize: d,
      listRefresh: E,
      shiftWith: s,
      shiftWithOffset: w,
      sizeRanges: n,
      // output
      sizes: m,
      statefulTotalCount: o,
      totalCount: r,
      trackItemSizes: x,
      unshiftWith: i
    };
  },
  Tt(Ao, Eh),
  { singleton: !0 }
);
function n_(e) {
  return e.reduce(
    (t, n) => (t.groupIndices.push(t.totalCount), t.totalCount += n + 1, t),
    {
      groupIndices: [],
      totalCount: 0
    }
  );
}
const Xx = ot(
  ([{ groupIndices: e, sizes: t, totalCount: n }, { headerHeight: r, scrollTop: o }]) => {
    const i = Je(), s = Je(), l = Hn(ye(i, Re(n_)));
    return Be(
      ye(
        l,
        Re((c) => c.totalCount)
      ),
      n
    ), Be(
      ye(
        l,
        Re((c) => c.groupIndices)
      ),
      e
    ), Be(
      ye(
        Qt(o, t, r),
        Ve(([c, u]) => Eu(u)),
        Re(([c, u, f]) => mr(u.groupOffsetTree, Math.max(c - f, 0), "v")[0]),
        St(),
        Re((c) => [c])
      ),
      s
    ), { groupCounts: i, topItemsIndexes: s };
  },
  Tt(jr, En)
), Do = ot(
  ([{ log: e }]) => {
    const t = xe(!1), n = Hn(
      ye(
        t,
        Ve((r) => r),
        St()
      )
    );
    return ut(t, (r) => {
      r && fn(e)("props updated", {}, Wn.DEBUG);
    }), { didMount: n, propsReady: t };
  },
  Tt(Ao),
  { singleton: !0 }
), r_ = typeof document < "u" && "scrollBehavior" in document.documentElement.style;
function Zx(e) {
  const t = typeof e == "number" ? { index: e } : e;
  return t.align || (t.align = "start"), (!t.behavior || !r_) && (t.behavior = "auto"), t.offset || (t.offset = 0), t;
}
const Wa = ot(
  ([
    { gap: e, listRefresh: t, sizes: n, totalCount: r },
    {
      fixedFooterHeight: o,
      fixedHeaderHeight: i,
      footerHeight: s,
      headerHeight: l,
      scrollingInProgress: c,
      scrollTo: u,
      smoothScrollTargetReached: f,
      viewportHeight: d
    },
    { log: p }
  ]) => {
    const h = Je(), g = Je(), m = xe(0);
    let y = null, x = null, E = null;
    function v() {
      y && (y(), y = null), E && (E(), E = null), x && (clearTimeout(x), x = null), qe(c, !1);
    }
    return Be(
      ye(
        h,
        Ge(n, d, r, m, l, s, p),
        Ge(e, i, o),
        Re(
          ([
            [w, S, T, C, R, I, b, k],
            P,
            A,
            O
          ]) => {
            const _ = Zx(w), { align: $, behavior: D, offset: z } = _, B = C - 1, L = Gx(_, S, B);
            let F = xa(L, S.offsetTree, P) + I;
            $ === "end" ? (F += A + mr(S.sizeTree, L)[1] - T + O, L === B && (F += b)) : $ === "center" ? F += (A + mr(S.sizeTree, L)[1] - T + O) / 2 : F -= R, z && (F += z);
            const W = (U) => {
              v(), U ? (k("retrying to scroll to", { location: w }, Wn.DEBUG), qe(h, w)) : (qe(g, !0), k("list did not change, scroll successful", {}, Wn.DEBUG));
            };
            if (v(), D === "smooth") {
              let U = !1;
              E = ut(t, (Z) => {
                U = U || Z;
              }), y = Fr(f, () => {
                W(U);
              });
            } else
              y = Fr(ye(t, o_(150)), W);
            return x = setTimeout(() => {
              v();
            }, 1200), qe(c, !0), k("scrolling from index to", { behavior: D, index: L, top: F }, Wn.DEBUG), { behavior: D, top: F };
          }
        )
      ),
      u
    ), {
      scrollTargetReached: g,
      scrollToIndex: h,
      topListHeight: m
    };
  },
  Tt(jr, En, Ao),
  { singleton: !0 }
);
function o_(e) {
  return (t) => {
    const n = setTimeout(() => {
      t(!1);
    }, e);
    return (r) => {
      r && (t(!0), clearTimeout(n));
    };
  };
}
function Ch(e, t) {
  e == 0 ? t() : requestAnimationFrame(() => {
    Ch(e - 1, t);
  });
}
function Oh(e, t) {
  const n = t - 1;
  return typeof e == "number" ? e : e.index === "LAST" ? n : e.index;
}
const Ua = ot(
  ([{ defaultItemSize: e, listRefresh: t, sizes: n }, { scrollTop: r }, { scrollTargetReached: o, scrollToIndex: i }, { didMount: s }]) => {
    const l = xe(!0), c = xe(0), u = xe(!0);
    return Be(
      ye(
        s,
        Ge(c),
        Ve(([f, d]) => !!d),
        Or(!1)
      ),
      l
    ), Be(
      ye(
        s,
        Ge(c),
        Ve(([f, d]) => !!d),
        Or(!1)
      ),
      u
    ), ut(
      ye(
        Qt(t, s),
        Ge(l, n, e, u),
        Ve(([[, f], d, { sizeTree: p }, h, g]) => f && (!vt(p) || xh(h)) && !d && !g),
        Ge(c)
      ),
      ([, f]) => {
        Fr(o, () => {
          qe(u, !0);
        }), Ch(4, () => {
          Fr(r, () => {
            qe(l, !0);
          }), qe(i, f);
        });
      }
    ), {
      initialItemFinalLocationReached: u,
      initialTopMostItemIndex: c,
      scrolledToInitialItem: l
    };
  },
  Tt(jr, En, Wa, Do),
  { singleton: !0 }
);
function Qx(e, t) {
  return Math.abs(e - t) < 1.01;
}
const wa = "up", Zs = "down", i_ = "none", s_ = {
  atBottom: !1,
  notAtBottomBecause: "NOT_SHOWING_LAST_ITEM",
  state: {
    offsetBottom: 0,
    scrollHeight: 0,
    scrollTop: 0,
    viewportHeight: 0
  }
}, a_ = 0, qa = ot(([{ footerHeight: e, headerHeight: t, scrollBy: n, scrollContainerState: r, scrollTop: o, viewportHeight: i }]) => {
  const s = xe(!1), l = xe(!0), c = Je(), u = Je(), f = xe(4), d = xe(a_), p = pn(
    ye(
      Jg(ye(je(o), Gi(1), Or(!0)), ye(je(o), Gi(1), Or(!1), Qg(100))),
      St()
    ),
    !1
  ), h = pn(
    ye(Jg(ye(n, Or(!0)), ye(n, Or(!1), Qg(200))), St()),
    !1
  );
  Be(
    ye(
      Qt(je(o), je(d)),
      Re(([E, v]) => E <= v),
      St()
    ),
    l
  ), Be(ye(l, wo(50)), u);
  const g = Hn(
    ye(
      Qt(r, je(i), je(t), je(e), je(f)),
      Nr((E, [{ scrollHeight: v, scrollTop: w }, S, T, C, R]) => {
        const I = w + S - v > -R, b = {
          scrollHeight: v,
          scrollTop: w,
          viewportHeight: S
        };
        if (I) {
          let P, A;
          return w > E.state.scrollTop ? (P = "SCROLLED_DOWN", A = E.state.scrollTop - w) : (P = "SIZE_DECREASED", A = E.state.scrollTop - w || E.scrollTopDelta), {
            atBottom: !0,
            atBottomBecause: P,
            scrollTopDelta: A,
            state: b
          };
        }
        let k;
        return b.scrollHeight > E.state.scrollHeight ? k = "SIZE_INCREASED" : S < E.state.viewportHeight ? k = "VIEWPORT_HEIGHT_DECREASING" : w < E.state.scrollTop ? k = "SCROLLING_UPWARDS" : k = "NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM", {
          atBottom: !1,
          notAtBottomBecause: k,
          state: b
        };
      }, s_),
      St((E, v) => E && E.atBottom === v.atBottom)
    )
  ), m = pn(
    ye(
      r,
      Nr(
        (E, { scrollHeight: v, scrollTop: w, viewportHeight: S }) => {
          if (Qx(E.scrollHeight, v))
            return {
              changed: !1,
              jump: 0,
              scrollHeight: v,
              scrollTop: w
            };
          {
            const T = v - (w + S) < 1;
            return E.scrollTop !== w && T ? {
              changed: !0,
              jump: E.scrollTop - w,
              scrollHeight: v,
              scrollTop: w
            } : {
              changed: !0,
              jump: 0,
              scrollHeight: v,
              scrollTop: w
            };
          }
        },
        { changed: !1, jump: 0, scrollHeight: 0, scrollTop: 0 }
      ),
      Ve((E) => E.changed),
      Re((E) => E.jump)
    ),
    0
  );
  Be(
    ye(
      g,
      Re((E) => E.atBottom)
    ),
    s
  ), Be(ye(s, wo(50)), c);
  const y = xe(Zs);
  Be(
    ye(
      r,
      Re(({ scrollTop: E }) => E),
      St(),
      Nr(
        (E, v) => fn(h) ? { direction: E.direction, prevScrollTop: v } : { direction: v < E.prevScrollTop ? wa : Zs, prevScrollTop: v },
        { direction: Zs, prevScrollTop: 0 }
      ),
      Re((E) => E.direction)
    ),
    y
  ), Be(ye(r, wo(50), Or(i_)), y);
  const x = xe(0);
  return Be(
    ye(
      p,
      Ve((E) => !E),
      Or(0)
    ),
    x
  ), Be(
    ye(
      o,
      wo(100),
      Ge(p),
      Ve(([E, v]) => !!v),
      Nr(([E, v], [w]) => [v, w], [0, 0]),
      Re(([E, v]) => v - E)
    ),
    x
  ), {
    atBottomState: g,
    atBottomStateChange: c,
    atBottomThreshold: f,
    atTopStateChange: u,
    atTopThreshold: d,
    isAtBottom: s,
    isAtTop: l,
    isScrolling: p,
    lastJumpDueToItemResize: m,
    scrollDirection: y,
    scrollVelocity: x
  };
}, Tt(En)), xc = "top", wc = "bottom", ry = "none";
function oy(e, t, n) {
  return typeof e == "number" ? n === wa && t === xc || n === Zs && t === wc ? e : 0 : n === wa ? t === xc ? e.main : e.reverse : t === wc ? e.main : e.reverse;
}
function iy(e, t) {
  var n;
  return typeof e == "number" ? e : (n = e[t]) != null ? n : 0;
}
const kh = ot(
  ([{ deviation: e, fixedHeaderHeight: t, headerHeight: n, scrollTop: r, viewportHeight: o }]) => {
    const i = Je(), s = xe(0), l = xe(0), c = xe(0), u = pn(
      ye(
        Qt(
          je(r),
          je(o),
          je(n),
          je(i, va),
          je(c),
          je(s),
          je(t),
          je(e),
          je(l)
        ),
        Re(
          ([
            f,
            d,
            p,
            [h, g],
            m,
            y,
            x,
            E,
            v
          ]) => {
            const w = f - E, S = y + x, T = Math.max(p - w, 0);
            let C = ry;
            const R = iy(v, xc), I = iy(v, wc);
            return h -= E, h += p + x, g += p + x, g -= E, h > f + S - R && (C = wa), g < f - T + d + I && (C = Zs), C !== ry ? [
              Math.max(w - p - oy(m, xc, C) - R, 0),
              w - T - x + d + oy(m, wc, C) + I
            ] : null;
          }
        ),
        Ve((f) => f != null),
        St(va)
      ),
      [0, 0]
    );
    return {
      increaseViewportBy: l,
      // input
      listBoundary: i,
      overscan: c,
      topListHeight: s,
      // output
      visibleRange: u
    };
  },
  Tt(En),
  { singleton: !0 }
);
function l_(e, t, n) {
  if (Eu(t)) {
    const r = Kx(e, t);
    return [
      { index: mr(t.groupOffsetTree, r)[0], offset: 0, size: 0 },
      { data: n == null ? void 0 : n[0], index: r, offset: 0, size: 0 }
    ];
  }
  return [{ data: n == null ? void 0 : n[0], index: e, offset: 0, size: 0 }];
}
const Pd = {
  bottom: 0,
  firstItemIndex: 0,
  items: [],
  offsetBottom: 0,
  offsetTop: 0,
  top: 0,
  topItems: [],
  topListHeight: 0,
  totalCount: 0
};
function ec(e, t, n, r, o, i) {
  const { lastIndex: s, lastOffset: l, lastSize: c } = o;
  let u = 0, f = 0;
  if (e.length > 0) {
    u = e[0].offset;
    const m = e[e.length - 1];
    f = m.offset + m.size;
  }
  const d = n - s, p = l + d * c + (d - 1) * r, h = u, g = p - f;
  return {
    bottom: f,
    firstItemIndex: i,
    items: sy(e, o, i),
    offsetBottom: g,
    offsetTop: u,
    top: h,
    topItems: sy(t, o, i),
    topListHeight: t.reduce((m, y) => y.size + m, 0),
    totalCount: n
  };
}
function Jx(e, t, n, r, o, i) {
  let s = 0;
  if (n.groupIndices.length > 0)
    for (const f of n.groupIndices) {
      if (f - s >= e)
        break;
      s++;
    }
  const l = e + s, c = Oh(t, l), u = Array.from({ length: l }).map((f, d) => ({
    data: i[d + c],
    index: d + c,
    offset: 0,
    size: 0
  }));
  return ec(u, [], l, o, n, r);
}
function sy(e, t, n) {
  if (e.length === 0)
    return [];
  if (!Eu(t))
    return e.map((u) => ({ ...u, index: u.index + n, originalIndex: u.index }));
  const r = e[0].index, o = e[e.length - 1].index, i = [], s = Su(t.groupOffsetTree, r, o);
  let l, c = 0;
  for (const u of e) {
    (!l || l.end < u.index) && (l = s.shift(), c = t.groupIndices.indexOf(l.start));
    let f;
    u.index === l.start ? f = {
      index: c,
      type: "group"
    } : f = {
      groupIndex: c,
      index: u.index - (c + 1) + n
    }, i.push({
      ...f,
      data: u.data,
      offset: u.offset,
      originalIndex: u.index,
      size: u.size
    });
  }
  return i;
}
const ai = ot(
  ([
    { data: e, firstItemIndex: t, gap: n, sizes: r, totalCount: o },
    i,
    { listBoundary: s, topListHeight: l, visibleRange: c },
    { initialTopMostItemIndex: u, scrolledToInitialItem: f },
    { topListHeight: d },
    p,
    { didMount: h },
    { recalcInProgress: g }
  ]) => {
    const m = xe([]), y = xe(0), x = Je();
    Be(i.topItemsIndexes, m);
    const E = pn(
      ye(
        Qt(
          h,
          g,
          je(c, va),
          je(o),
          je(r),
          je(u),
          f,
          je(m),
          je(t),
          je(n),
          e
        ),
        Ve(([T, C, , R, , , , , , , I]) => {
          const b = I && I.length !== R;
          return T && !C && !b;
        }),
        Re(
          ([
            ,
            ,
            [T, C],
            R,
            I,
            b,
            k,
            P,
            A,
            O,
            _
          ]) => {
            const $ = I, { offsetTree: D, sizeTree: z } = $, B = fn(y);
            if (R === 0)
              return { ...Pd, totalCount: R };
            if (T === 0 && C === 0)
              return B === 0 ? { ...Pd, totalCount: R } : Jx(B, b, I, A, O, _ || []);
            if (vt(z))
              return B > 0 ? null : ec(
                l_(Oh(b, R), $, _),
                [],
                R,
                O,
                $,
                A
              );
            const L = [];
            if (P.length > 0) {
              const Q = P[0], ee = P[P.length - 1];
              let te = 0;
              for (const q of Su(z, Q, ee)) {
                const oe = q.value, G = Math.max(q.start, Q), ne = Math.min(q.end, ee);
                for (let j = G; j <= ne; j++)
                  L.push({ data: _ == null ? void 0 : _[j], index: j, offset: te, size: oe }), te += oe;
              }
            }
            if (!k)
              return ec([], L, R, O, $, A);
            const F = P.length > 0 ? P[P.length - 1] + 1 : 0, W = XI(D, T, C, F);
            if (W.length === 0)
              return null;
            const U = R - 1, Z = wu([], (Q) => {
              for (const ee of W) {
                const te = ee.value;
                let q = te.offset, oe = ee.start;
                const G = te.size;
                if (te.offset < T) {
                  oe += Math.floor((T - te.offset + O) / (G + O));
                  const j = oe - ee.start;
                  q += j * G + j * O;
                }
                oe < F && (q += (F - oe) * G, oe = F);
                const ne = Math.min(ee.end, U);
                for (let j = oe; j <= ne && !(q >= C); j++)
                  Q.push({ data: _ == null ? void 0 : _[j], index: j, offset: q, size: G }), q += G + O;
              }
            });
            return ec(Z, L, R, O, $, A);
          }
        ),
        //@ts-expect-error filter needs to be fixed
        Ve((T) => T !== null),
        St()
      ),
      Pd
    );
    Be(
      ye(
        e,
        Ve(xh),
        Re((T) => T == null ? void 0 : T.length)
      ),
      o
    ), Be(
      ye(
        E,
        Re((T) => T.topListHeight)
      ),
      d
    ), Be(d, l), Be(
      ye(
        E,
        Re((T) => [T.top, T.bottom])
      ),
      s
    ), Be(
      ye(
        E,
        Re((T) => T.items)
      ),
      x
    );
    const v = Hn(
      ye(
        E,
        Ve(({ items: T }) => T.length > 0),
        Ge(o, e),
        Ve(([{ items: T }, C]) => T[T.length - 1].originalIndex === C - 1),
        Re(([, T, C]) => [T - 1, C]),
        St(va),
        Re(([T]) => T)
      )
    ), w = Hn(
      ye(
        E,
        wo(200),
        Ve(({ items: T, topItems: C }) => T.length > 0 && T[0].originalIndex === C.length),
        Re(({ items: T }) => T[0].index),
        St()
      )
    ), S = Hn(
      ye(
        E,
        Ve(({ items: T }) => T.length > 0),
        Re(({ items: T }) => {
          let C = 0, R = T.length - 1;
          for (; T[C].type === "group" && C < R; )
            C++;
          for (; T[R].type === "group" && R > C; )
            R--;
          return {
            endIndex: T[R].index,
            startIndex: T[C].index
          };
        }),
        St(qx)
      )
    );
    return { endReached: v, initialItemCount: y, itemsRendered: x, listState: E, rangeChanged: S, startReached: w, topItemsIndexes: m, ...p };
  },
  Tt(
    jr,
    Xx,
    kh,
    Ua,
    Wa,
    qa,
    Do,
    Eh
  ),
  { singleton: !0 }
), ew = ot(
  ([{ fixedFooterHeight: e, fixedHeaderHeight: t, footerHeight: n, headerHeight: r }, { listState: o }]) => {
    const i = Je(), s = pn(
      ye(
        Qt(n, e, r, t, o),
        Re(([l, c, u, f, d]) => l + c + u + f + d.offsetBottom + d.bottom)
      ),
      0
    );
    return Be(je(s), i), { totalListHeight: s, totalListHeightChanged: i };
  },
  Tt(En, ai),
  { singleton: !0 }
), c_ = ot(
  ([{ viewportHeight: e }, { totalListHeight: t }]) => {
    const n = xe(!1), r = pn(
      ye(
        Qt(n, e, t),
        Ve(([o]) => o),
        Re(([, o, i]) => Math.max(0, o - i)),
        wo(0),
        St()
      ),
      0
    );
    return { alignToBottom: n, paddingTopAddition: r };
  },
  Tt(En, ew),
  { singleton: !0 }
);
function ay(e) {
  return e ? e === "smooth" ? "smooth" : "auto" : !1;
}
const u_ = (e, t) => typeof e == "function" ? ay(e(t)) : t && ay(e), d_ = ot(
  ([
    { listRefresh: e, totalCount: t },
    { atBottomState: n, isAtBottom: r },
    { scrollToIndex: o },
    { scrolledToInitialItem: i },
    { didMount: s, propsReady: l },
    { log: c },
    { scrollingInProgress: u }
  ]) => {
    const f = xe(!1), d = Je();
    let p = null;
    function h(m) {
      qe(o, {
        align: "end",
        behavior: m,
        index: "LAST"
      });
    }
    ut(
      ye(
        Qt(ye(je(t), Gi(1)), s),
        Ge(je(f), r, i, u),
        Re(([[m, y], x, E, v, w]) => {
          let S = y && v, T = "auto";
          return S && (T = u_(x, E || w), S = S && !!T), { followOutputBehavior: T, shouldFollow: S, totalCount: m };
        }),
        Ve(({ shouldFollow: m }) => m)
      ),
      ({ followOutputBehavior: m, totalCount: y }) => {
        p && (p(), p = null), p = Fr(e, () => {
          fn(c)("following output to ", { totalCount: y }, Wn.DEBUG), h(m), p = null;
        });
      }
    );
    function g(m) {
      const y = Fr(n, (x) => {
        m && !x.atBottom && x.notAtBottomBecause === "SIZE_INCREASED" && !p && (fn(c)("scrolling to bottom due to increased size", {}, Wn.DEBUG), h("auto"));
      });
      setTimeout(y, 100);
    }
    return ut(
      ye(
        Qt(je(f), t, l),
        Ve(([m, , y]) => m && y),
        Nr(
          ({ value: m }, [, y]) => ({ refreshed: m === y, value: y }),
          { refreshed: !1, value: 0 }
        ),
        Ve(({ refreshed: m }) => m),
        Ge(f, t)
      ),
      ([, m]) => {
        fn(i) && g(m !== !1);
      }
    ), ut(d, () => {
      g(fn(f) !== !1);
    }), ut(Qt(je(f), n), ([m, y]) => {
      m && !y.atBottom && y.notAtBottomBecause === "VIEWPORT_HEIGHT_DECREASING" && h("auto");
    }), { autoscrollToBottom: d, followOutput: f };
  },
  Tt(jr, qa, Wa, Ua, Do, Ao, En)
), f_ = ot(
  ([{ data: e, firstItemIndex: t, gap: n, sizes: r }, { initialTopMostItemIndex: o }, { initialItemCount: i, listState: s }, { didMount: l }]) => (Be(
    ye(
      l,
      Ge(i),
      Ve(([, c]) => c !== 0),
      Ge(o, r, t, n, e),
      Re(([[, c], u, f, d, p, h = []]) => Jx(c, u, f, d, p, h))
    ),
    s
  ), {}),
  Tt(jr, Ua, ai, Do),
  { singleton: !0 }
), p_ = ot(
  ([{ didMount: e }, { scrollTo: t }, { listState: n }]) => {
    const r = xe(0);
    return ut(
      ye(
        e,
        Ge(r),
        Ve(([, o]) => o !== 0),
        Re(([, o]) => ({ top: o }))
      ),
      (o) => {
        Fr(
          ye(
            n,
            Gi(1),
            Ve((i) => i.items.length > 1)
          ),
          () => {
            requestAnimationFrame(() => {
              qe(t, o);
            });
          }
        );
      }
    ), {
      initialScrollTop: r
    };
  },
  Tt(Do, En, ai),
  { singleton: !0 }
), h_ = ({
  itemBottom: e,
  itemTop: t,
  locationParams: { align: n, behavior: r, ...o },
  viewportBottom: i,
  viewportTop: s
}) => t < s ? { ...o, align: n ?? "start", behavior: r } : e > i ? { ...o, align: n ?? "end", behavior: r } : null, m_ = ot(
  ([
    { gap: e, sizes: t, totalCount: n },
    { fixedFooterHeight: r, fixedHeaderHeight: o, headerHeight: i, scrollingInProgress: s, scrollTop: l, viewportHeight: c },
    { scrollToIndex: u }
  ]) => {
    const f = Je();
    return Be(
      ye(
        f,
        Ge(t, c, n, i, o, r, l),
        Ge(e),
        Re(([[d, p, h, g, m, y, x, E], v]) => {
          const { align: w, behavior: S, calculateViewLocation: T = h_, done: C, ...R } = d, I = Gx(d, p, g - 1), b = xa(I, p.offsetTree, v) + m + y, k = b + mr(p.sizeTree, I)[1], P = E + y, A = E + h - x, O = T({
            itemBottom: k,
            itemTop: b,
            locationParams: { align: w, behavior: S, ...R },
            viewportBottom: A,
            viewportTop: P
          });
          return O ? C && Fr(
            ye(
              s,
              Ve((_) => !_),
              // skips the initial publish of false, and the cleanup call.
              // but if scrollingInProgress is true, we skip the initial publish.
              Gi(fn(s) ? 1 : 2)
            ),
            C
          ) : C && C(), O;
        }),
        Ve((d) => d !== null)
      ),
      u
    ), {
      scrollIntoView: f
    };
  },
  Tt(jr, En, Wa, ai, Ao),
  { singleton: !0 }
), tw = ot(
  ([{ scrollVelocity: e }]) => {
    const t = xe(!1), n = Je(), r = xe(!1);
    return Be(
      ye(
        e,
        Ge(r, t, n),
        Ve(([o, i]) => !!i),
        Re(([o, i, s, l]) => {
          const { enter: c, exit: u } = i;
          if (s) {
            if (u(o, l))
              return !1;
          } else if (c(o, l))
            return !0;
          return s;
        }),
        St()
      ),
      t
    ), ut(
      ye(Qt(t, e, n), Ge(r)),
      ([[o, i, s], l]) => {
        o && l && l.change && l.change(i, s);
      }
    ), { isSeeking: t, scrollSeekConfiguration: r, scrollSeekRangeChanged: n, scrollVelocity: e };
  },
  Tt(qa),
  { singleton: !0 }
), Rh = ot(([{ scrollContainerState: e, scrollTo: t }]) => {
  const n = Je(), r = Je(), o = Je(), i = xe(!1), s = xe(void 0);
  return Be(
    ye(
      Qt(n, r),
      Re(([{ scrollHeight: l, scrollTop: c, viewportHeight: u }, { offsetTop: f }]) => ({
        scrollHeight: l,
        scrollTop: Math.max(0, c - f),
        viewportHeight: u
      }))
    ),
    e
  ), Be(
    ye(
      t,
      Ge(r),
      Re(([l, { offsetTop: c }]) => ({
        ...l,
        top: l.top + c
      }))
    ),
    o
  ), {
    customScrollParent: s,
    // config
    useWindowScroll: i,
    // input
    windowScrollContainerState: n,
    // signals
    windowScrollTo: o,
    windowViewportRect: r
  };
}, Tt(En)), g_ = ot(
  ([
    { sizeRanges: e, sizes: t },
    { headerHeight: n, scrollTop: r },
    { initialTopMostItemIndex: o },
    { didMount: i },
    { useWindowScroll: s, windowScrollContainerState: l, windowViewportRect: c }
  ]) => {
    const u = Je(), f = xe(void 0), d = xe(null), p = xe(null);
    return Be(l, d), Be(c, p), ut(
      ye(
        u,
        Ge(t, r, s, d, p, n)
      ),
      ([h, g, m, y, x, E, v]) => {
        const w = QI(g.sizeTree);
        y && x !== null && E !== null && (m = x.scrollTop - E.offsetTop), m -= v, h({ ranges: w, scrollTop: m });
      }
    ), Be(ye(f, Ve(xh), Re(y_)), o), Be(
      ye(
        i,
        Ge(f),
        Ve(([, h]) => h !== void 0),
        St(),
        Re(([, h]) => h.ranges)
      ),
      e
    ), {
      getState: u,
      restoreStateFrom: f
    };
  },
  Tt(jr, En, Ua, Do, Rh)
);
function y_(e) {
  return { align: "start", index: 0, offset: e.scrollTop };
}
const b_ = ot(([{ topItemsIndexes: e }]) => {
  const t = xe(0);
  return Be(
    ye(
      t,
      Ve((n) => n >= 0),
      Re((n) => Array.from({ length: n }).map((r, o) => o))
    ),
    e
  ), { topItemCount: t };
}, Tt(ai));
function nw(e) {
  let t = !1, n;
  return () => (t || (t = !0, n = e()), n);
}
const v_ = nw(() => /iP(ad|od|hone)/i.test(navigator.userAgent) && /WebKit/i.test(navigator.userAgent)), x_ = ot(
  ([
    { deviation: e, scrollBy: t, scrollingInProgress: n, scrollTop: r },
    { isAtBottom: o, isScrolling: i, lastJumpDueToItemResize: s, scrollDirection: l },
    { listState: c },
    { beforeUnshiftWith: u, gap: f, shiftWithOffset: d, sizes: p },
    { log: h },
    { recalcInProgress: g }
  ]) => {
    const m = Hn(
      ye(
        c,
        Ge(s),
        Nr(
          ([, x, E, v], [{ bottom: w, items: S, offsetBottom: T, totalCount: C }, R]) => {
            const I = w + T;
            let b = 0;
            return E === C && x.length > 0 && S.length > 0 && (S[0].originalIndex === 0 && x[0].originalIndex === 0 || (b = I - v, b !== 0 && (b += R))), [b, S, C, I];
          },
          [0, [], 0, 0]
        ),
        Ve(([x]) => x !== 0),
        Ge(r, l, n, o, h, g),
        Ve(([, x, E, v, , , w]) => !w && !v && x !== 0 && E === wa),
        Re(([[x], , , , , E]) => (E("Upward scrolling compensation", { amount: x }, Wn.DEBUG), x))
      )
    );
    function y(x) {
      x > 0 ? (qe(t, { behavior: "auto", top: -x }), qe(e, 0)) : (qe(e, 0), qe(t, { behavior: "auto", top: -x }));
    }
    return ut(ye(m, Ge(e, i)), ([x, E, v]) => {
      v && v_() ? qe(e, E - x) : y(-x);
    }), ut(
      ye(
        Qt(pn(i, !1), e, g),
        Ve(([x, E, v]) => !x && !v && E !== 0),
        Re(([x, E]) => E),
        wo(1)
      ),
      y
    ), Be(
      ye(
        d,
        Re((x) => ({ top: -x }))
      ),
      t
    ), ut(
      ye(
        u,
        Ge(p, f),
        Re(([x, { groupIndices: E, lastSize: v, sizeTree: w }, S]) => {
          function T(C) {
            return C * (v + S);
          }
          if (E.length === 0)
            return T(x);
          {
            let C = 0;
            const R = ba(w, 0);
            let I = 0, b = 0;
            for (; I < x; ) {
              I++, C += R;
              let k = E.length === b + 1 ? 1 / 0 : E[b + 1] - E[b] - 1;
              I + k > x && (C -= R, k = x - I + 1), I += k, C += T(k), b++;
            }
            return C;
          }
        })
      ),
      (x) => {
        qe(e, x), requestAnimationFrame(() => {
          qe(t, { top: x }), requestAnimationFrame(() => {
            qe(e, 0), qe(g, !1);
          });
        });
      }
    ), { deviation: e };
  },
  Tt(En, qa, ai, jr, Ao, Eh)
), w_ = ot(
  ([
    e,
    t,
    n,
    r,
    o,
    i,
    s,
    l,
    c,
    u
  ]) => ({
    ...e,
    ...t,
    ...n,
    ...r,
    ...o,
    ...i,
    ...s,
    ...l,
    ...c,
    ...u
  }),
  Tt(
    kh,
    f_,
    Do,
    tw,
    ew,
    p_,
    c_,
    Rh,
    m_,
    Ao
  )
), rw = ot(
  ([
    {
      data: e,
      defaultItemSize: t,
      firstItemIndex: n,
      fixedItemSize: r,
      gap: o,
      groupIndices: i,
      itemSize: s,
      sizeRanges: l,
      sizes: c,
      statefulTotalCount: u,
      totalCount: f,
      trackItemSizes: d
    },
    { initialItemFinalLocationReached: p, initialTopMostItemIndex: h, scrolledToInitialItem: g },
    m,
    y,
    x,
    { listState: E, topItemsIndexes: v, ...w },
    { scrollToIndex: S },
    T,
    { topItemCount: C },
    { groupCounts: R },
    I
  ]) => (Be(w.rangeChanged, I.scrollSeekRangeChanged), Be(
    ye(
      I.windowViewportRect,
      Re((b) => b.visibleHeight)
    ),
    m.viewportHeight
  ), {
    data: e,
    defaultItemHeight: t,
    firstItemIndex: n,
    fixedItemHeight: r,
    gap: o,
    groupCounts: R,
    initialItemFinalLocationReached: p,
    initialTopMostItemIndex: h,
    scrolledToInitialItem: g,
    sizeRanges: l,
    topItemCount: C,
    topItemsIndexes: v,
    // input
    totalCount: f,
    ...x,
    groupIndices: i,
    itemSize: s,
    listState: E,
    scrollToIndex: S,
    // output
    statefulTotalCount: u,
    trackItemSizes: d,
    // exported from stateFlagsSystem
    ...w,
    // the bag of IO from featureGroup1System
    ...I,
    ...m,
    sizes: c,
    ...y
  }),
  Tt(
    jr,
    Ua,
    En,
    g_,
    d_,
    ai,
    Wa,
    x_,
    b_,
    Xx,
    w_
  )
);
function S_(e, t) {
  const n = {}, r = {};
  let o = 0;
  const i = e.length;
  for (; o < i; )
    r[e[o]] = 1, o += 1;
  for (const s in t)
    Object.hasOwn(r, s) || (n[s] = t[s]);
  return n;
}
const Sl = typeof document < "u" ? Y.useLayoutEffect : Y.useEffect;
function ow(e, t, n) {
  const r = Object.keys(t.required || {}), o = Object.keys(t.optional || {}), i = Object.keys(t.methods || {}), s = Object.keys(t.events || {}), l = Y.createContext({});
  function c(y, x) {
    y.propsReady && qe(y.propsReady, !1);
    for (const E of r) {
      const v = y[t.required[E]];
      qe(v, x[E]);
    }
    for (const E of o)
      if (E in x) {
        const v = y[t.optional[E]];
        qe(v, x[E]);
      }
    y.propsReady && qe(y.propsReady, !0);
  }
  function u(y) {
    return i.reduce((x, E) => (x[E] = (v) => {
      const w = y[t.methods[E]];
      qe(w, v);
    }, x), {});
  }
  function f(y) {
    return s.reduce((x, E) => (x[E] = BI(y[t.events[E]]), x), {});
  }
  const d = Y.forwardRef((y, x) => {
    const { children: E, ...v } = y, [w] = Y.useState(() => wu(FI(e), (C) => {
      c(C, v);
    })), [S] = Y.useState(Zg(f, w));
    Sl(() => {
      for (const C of s)
        C in v && ut(S[C], v[C]);
      return () => {
        Object.values(S).map(wh);
      };
    }, [v, S, w]), Sl(() => {
      c(w, v);
    }), Y.useImperativeHandle(x, Xg(u(w)));
    const T = n;
    return /* @__PURE__ */ N(l.Provider, { value: w, children: n ? /* @__PURE__ */ N(T, { ...S_([...r, ...o, ...s], v), children: E }) : E });
  }), p = (y) => Y.useCallback(Lx(qe, Y.useContext(l)[y]), [y]), h = (y) => {
    const x = Y.useContext(l)[y], E = Y.useCallback(
      (v) => ut(x, v),
      [x]
    );
    return Y.useSyncExternalStore(
      E,
      () => fn(x),
      () => fn(x)
    );
  }, g = (y) => {
    const x = Y.useContext(l)[y], [E, v] = Y.useState(Zg(fn, x));
    return Sl(
      () => ut(x, (w) => {
        w !== E && v(Xg(w));
      }),
      [x, E]
    ), E;
  }, m = Y.version.startsWith("18") ? h : g;
  return {
    Component: d,
    useEmitter: (y, x) => {
      const E = Y.useContext(l)[y];
      Sl(() => ut(E, x), [x, E]);
    },
    useEmitterValue: m,
    usePublisher: p
  };
}
const iw = Y.createContext(void 0), sw = Y.createContext(void 0), aw = typeof document < "u" ? Y.useLayoutEffect : Y.useEffect;
function Id(e) {
  return "self" in e;
}
function E_(e) {
  return "body" in e;
}
function lw(e, t, n, r = ys, o, i) {
  const s = Y.useRef(null), l = Y.useRef(null), c = Y.useRef(null), u = Y.useCallback(
    (p) => {
      let h, g, m;
      const y = p.target;
      if (E_(y) || Id(y)) {
        const E = Id(y) ? y : y.defaultView;
        m = i ? E.scrollX : E.scrollY, h = i ? E.document.documentElement.scrollWidth : E.document.documentElement.scrollHeight, g = i ? E.innerWidth : E.innerHeight;
      } else
        m = i ? y.scrollLeft : y.scrollTop, h = i ? y.scrollWidth : y.scrollHeight, g = i ? y.offsetWidth : y.offsetHeight;
      const x = () => {
        e({
          scrollHeight: h,
          scrollTop: Math.max(m, 0),
          viewportHeight: g
        });
      };
      p.suppressFlushSync ? x() : ki.flushSync(x), l.current !== null && (m === l.current || m <= 0 || m === h - g) && (l.current = null, t(!0), c.current && (clearTimeout(c.current), c.current = null));
    },
    [e, t]
  );
  Y.useEffect(() => {
    const p = o || s.current;
    return r(o || s.current), u({ suppressFlushSync: !0, target: p }), p.addEventListener("scroll", u, { passive: !0 }), () => {
      r(null), p.removeEventListener("scroll", u);
    };
  }, [s, u, n, r, o]);
  function f(p) {
    const h = s.current;
    if (!h || (i ? "offsetWidth" in h && h.offsetWidth === 0 : "offsetHeight" in h && h.offsetHeight === 0))
      return;
    const g = p.behavior === "smooth";
    let m, y, x;
    Id(h) ? (y = Math.max(
      Oo(h.document.documentElement, i ? "width" : "height"),
      i ? h.document.documentElement.scrollWidth : h.document.documentElement.scrollHeight
    ), m = i ? h.innerWidth : h.innerHeight, x = i ? window.scrollX : window.scrollY) : (y = h[i ? "scrollWidth" : "scrollHeight"], m = Oo(h, i ? "width" : "height"), x = h[i ? "scrollLeft" : "scrollTop"]);
    const E = y - m;
    if (p.top = Math.ceil(Math.max(Math.min(E, p.top), 0)), Qx(m, y) || p.top === x) {
      e({ scrollHeight: y, scrollTop: x, viewportHeight: m }), g && t(!0);
      return;
    }
    g ? (l.current = p.top, c.current && clearTimeout(c.current), c.current = setTimeout(() => {
      c.current = null, l.current = null, t(!0);
    }, 1e3)) : l.current = null, i && (p = { behavior: p.behavior, left: p.top }), h.scrollTo(p);
  }
  function d(p) {
    i && (p = { behavior: p.behavior, left: p.top }), s.current.scrollBy(p);
  }
  return { scrollByCallback: d, scrollerRef: s, scrollToCallback: f };
}
const _d = "-webkit-sticky", ly = "sticky", cw = nw(() => {
  if (typeof document > "u")
    return ly;
  const e = document.createElement("div");
  return e.style.position = _d, e.style.position === _d ? _d : ly;
});
function Nh(e) {
  return e;
}
const T_ = /* @__PURE__ */ ot(() => {
  const e = xe((c) => `Item ${c}`), t = xe(null), n = xe((c) => `Group ${c}`), r = xe({}), o = xe(Nh), i = xe("div"), s = xe(ys), l = (c, u = null) => pn(
    ye(
      r,
      Re((f) => f[c]),
      St()
    ),
    u
  );
  return {
    components: r,
    computeItemKey: o,
    context: t,
    EmptyPlaceholder: l("EmptyPlaceholder"),
    FooterComponent: l("Footer"),
    GroupComponent: l("Group", "div"),
    groupContent: n,
    HeaderComponent: l("Header"),
    HeaderFooterTag: i,
    ItemComponent: l("Item", "div"),
    itemContent: e,
    ListComponent: l("List", "div"),
    ScrollerComponent: l("Scroller", "div"),
    scrollerRef: s,
    ScrollSeekPlaceholder: l("ScrollSeekPlaceholder"),
    TopItemListComponent: l("TopItemList")
  };
}), C_ = /* @__PURE__ */ ot(
  ([e, t]) => ({ ...e, ...t }),
  Tt(rw, T_)
), O_ = ({ height: e }) => /* @__PURE__ */ N("div", { style: { height: e } }), k_ = { overflowAnchor: "none", position: cw(), zIndex: 1 }, uw = { overflowAnchor: "none" }, R_ = { ...uw, display: "inline-block", height: "100%" }, cy = /* @__PURE__ */ Y.memo(function({ showTopList: e = !1 }) {
  const t = He("listState"), n = Qn("sizeRanges"), r = He("useWindowScroll"), o = He("customScrollParent"), i = Qn("windowScrollContainerState"), s = Qn("scrollContainerState"), l = o || r ? i : s, c = He("itemContent"), u = He("context"), f = He("groupContent"), d = He("trackItemSizes"), p = He("itemSize"), h = He("log"), g = Qn("gap"), m = He("horizontalDirection"), { callbackRef: y } = jI(
    n,
    p,
    d,
    e ? ys : l,
    h,
    g,
    o,
    m,
    He("skipAnimationFrameInResizeObserver")
  ), [x, E] = Y.useState(0);
  $h("deviation", (O) => {
    x !== O && E(O);
  });
  const v = He("EmptyPlaceholder"), w = He("ScrollSeekPlaceholder") || O_, S = He("ListComponent"), T = He("ItemComponent"), C = He("GroupComponent"), R = He("computeItemKey"), I = He("isSeeking"), b = He("groupIndices").length > 0, k = He("alignToBottom"), P = He("initialItemFinalLocationReached"), A = e ? {} : {
    boxSizing: "border-box",
    ...m ? {
      display: "inline-block",
      height: "100%",
      marginLeft: x !== 0 ? x : k ? "auto" : 0,
      paddingLeft: t.offsetTop,
      paddingRight: t.offsetBottom,
      whiteSpace: "nowrap"
    } : {
      marginTop: x !== 0 ? x : k ? "auto" : 0,
      paddingBottom: t.offsetBottom,
      paddingTop: t.offsetTop
    },
    ...P ? {} : { visibility: "hidden" }
  };
  return !e && t.totalCount === 0 && v ? /* @__PURE__ */ N(v, { ...sn(v, u) }) : /* @__PURE__ */ N(
    S,
    {
      ...sn(S, u),
      "data-testid": e ? "virtuoso-top-item-list" : "virtuoso-item-list",
      ref: y,
      style: A,
      children: (e ? t.topItems : t.items).map((O) => {
        const _ = O.originalIndex, $ = R(_ + t.firstItemIndex, O.data, u);
        return I ? /* @__PURE__ */ Go(
          w,
          {
            ...sn(w, u),
            height: O.size,
            index: O.index,
            key: $,
            type: O.type || "item",
            ...O.type === "group" ? {} : { groupIndex: O.groupIndex }
          }
        ) : O.type === "group" ? /* @__PURE__ */ Go(
          C,
          {
            ...sn(C, u),
            "data-index": _,
            "data-item-index": O.index,
            "data-known-size": O.size,
            key: $,
            style: k_
          },
          f(O.index, u)
        ) : /* @__PURE__ */ Go(
          T,
          {
            ...sn(T, u),
            ...I_(T, O.data),
            "data-index": _,
            "data-item-group-index": O.groupIndex,
            "data-item-index": O.index,
            "data-known-size": O.size,
            key: $,
            style: m ? R_ : uw
          },
          b ? c(O.index, O.groupIndex, O.data, u) : c(O.index, O.data, u)
        );
      })
    }
  );
}), N_ = {
  height: "100%",
  outline: "none",
  overflowY: "auto",
  position: "relative",
  WebkitOverflowScrolling: "touch"
}, $_ = {
  outline: "none",
  overflowX: "auto",
  position: "relative"
}, Tu = (e) => ({
  height: "100%",
  position: "absolute",
  top: 0,
  width: "100%",
  ...e ? { display: "flex", flexDirection: "column" } : {}
}), P_ = {
  position: cw(),
  top: 0,
  width: "100%",
  zIndex: 1
};
function sn(e, t) {
  if (typeof e != "string")
    return { context: t };
}
function I_(e, t) {
  return { item: typeof e == "string" ? void 0 : t };
}
const __ = /* @__PURE__ */ Y.memo(function() {
  const e = He("HeaderComponent"), t = Qn("headerHeight"), n = He("HeaderFooterTag"), r = si(
    Y.useMemo(
      () => (i) => {
        t(Oo(i, "height"));
      },
      [t]
    ),
    !0,
    He("skipAnimationFrameInResizeObserver")
  ), o = He("context");
  return e ? /* @__PURE__ */ N(n, { ref: r, children: /* @__PURE__ */ N(e, { ...sn(e, o) }) }) : null;
}), M_ = /* @__PURE__ */ Y.memo(function() {
  const e = He("FooterComponent"), t = Qn("footerHeight"), n = He("HeaderFooterTag"), r = si(
    Y.useMemo(
      () => (i) => {
        t(Oo(i, "height"));
      },
      [t]
    ),
    !0,
    He("skipAnimationFrameInResizeObserver")
  ), o = He("context");
  return e ? /* @__PURE__ */ N(n, { ref: r, children: /* @__PURE__ */ N(e, { ...sn(e, o) }) }) : null;
});
function dw({ useEmitter: e, useEmitterValue: t, usePublisher: n }) {
  return Y.memo(function({ children: r, style: o, ...i }) {
    const s = n("scrollContainerState"), l = t("ScrollerComponent"), c = n("smoothScrollTargetReached"), u = t("scrollerRef"), f = t("context"), d = t("horizontalDirection") || !1, { scrollByCallback: p, scrollerRef: h, scrollToCallback: g } = lw(
      s,
      c,
      l,
      u,
      void 0,
      d
    );
    return e("scrollTo", g), e("scrollBy", p), /* @__PURE__ */ N(
      l,
      {
        "data-testid": "virtuoso-scroller",
        "data-virtuoso-scroller": !0,
        ref: h,
        style: { ...d ? $_ : N_, ...o },
        tabIndex: 0,
        ...i,
        ...sn(l, f),
        children: r
      }
    );
  });
}
function fw({ useEmitter: e, useEmitterValue: t, usePublisher: n }) {
  return Y.memo(function({ children: r, style: o, ...i }) {
    const s = n("windowScrollContainerState"), l = t("ScrollerComponent"), c = n("smoothScrollTargetReached"), u = t("totalListHeight"), f = t("deviation"), d = t("customScrollParent"), p = t("context"), h = Y.useRef(null), g = t("scrollerRef"), { scrollByCallback: m, scrollerRef: y, scrollToCallback: x } = lw(
      s,
      c,
      l,
      g,
      d
    );
    return aw(() => {
      var E;
      return y.current = d || ((E = h.current) == null ? void 0 : E.ownerDocument.defaultView), () => {
        y.current = null;
      };
    }, [y, d]), e("windowScrollTo", x), e("scrollBy", m), /* @__PURE__ */ N(
      l,
      {
        ref: h,
        "data-virtuoso-scroller": !0,
        style: { position: "relative", ...o, ...u !== 0 ? { height: u + f } : {} },
        ...i,
        ...sn(l, p),
        children: r
      }
    );
  });
}
const A_ = ({ children: e }) => {
  const t = Y.useContext(iw), n = Qn("viewportHeight"), r = Qn("fixedItemHeight"), o = He("alignToBottom"), i = He("horizontalDirection"), s = Y.useMemo(
    () => Bx(n, (c) => Oo(c, i ? "width" : "height")),
    [n, i]
  ), l = si(s, !0, He("skipAnimationFrameInResizeObserver"));
  return Y.useEffect(() => {
    t && (n(t.viewportHeight), r(t.itemHeight));
  }, [t, n, r]), /* @__PURE__ */ N("div", { "data-viewport-type": "element", ref: l, style: Tu(o), children: e });
}, D_ = ({ children: e }) => {
  const t = Y.useContext(iw), n = Qn("windowViewportRect"), r = Qn("fixedItemHeight"), o = He("customScrollParent"), i = zx(
    n,
    o,
    He("skipAnimationFrameInResizeObserver")
  ), s = He("alignToBottom");
  return Y.useEffect(() => {
    t && (r(t.itemHeight), n({ offsetTop: 0, visibleHeight: t.viewportHeight, visibleWidth: 100 }));
  }, [t, n, r]), /* @__PURE__ */ N("div", { "data-viewport-type": "window", ref: i, style: Tu(s), children: e });
}, B_ = ({ children: e }) => {
  const t = He("TopItemListComponent") || "div", n = He("headerHeight"), r = { ...P_, marginTop: `${n}px` }, o = He("context");
  return /* @__PURE__ */ N(t, { style: r, ...sn(t, o), children: e });
}, L_ = /* @__PURE__ */ Y.memo(function(e) {
  const t = He("useWindowScroll"), n = He("topItemsIndexes").length > 0, r = He("customScrollParent"), o = He("context"), i = r || t ? V_ : z_, s = r || t ? D_ : A_;
  return /* @__PURE__ */ we(i, { ...e, ...sn(i, o), children: [
    n && /* @__PURE__ */ N(B_, { children: /* @__PURE__ */ N(cy, { showTopList: !0 }) }),
    /* @__PURE__ */ we(s, { children: [
      /* @__PURE__ */ N(__, {}),
      /* @__PURE__ */ N(cy, {}),
      /* @__PURE__ */ N(M_, {})
    ] })
  ] });
}), {
  Component: F_,
  useEmitter: $h,
  useEmitterValue: He,
  usePublisher: Qn
} = /* @__PURE__ */ ow(
  C_,
  {
    events: {
      atBottomStateChange: "atBottomStateChange",
      atTopStateChange: "atTopStateChange",
      endReached: "endReached",
      groupIndices: "groupIndices",
      isScrolling: "isScrolling",
      itemsRendered: "itemsRendered",
      rangeChanged: "rangeChanged",
      startReached: "startReached",
      totalListHeightChanged: "totalListHeightChanged"
    },
    methods: {
      autoscrollToBottom: "autoscrollToBottom",
      getState: "getState",
      scrollBy: "scrollBy",
      scrollIntoView: "scrollIntoView",
      scrollTo: "scrollTo",
      scrollToIndex: "scrollToIndex"
    },
    optional: {
      alignToBottom: "alignToBottom",
      atBottomThreshold: "atBottomThreshold",
      atTopThreshold: "atTopThreshold",
      components: "components",
      computeItemKey: "computeItemKey",
      context: "context",
      customScrollParent: "customScrollParent",
      data: "data",
      defaultItemHeight: "defaultItemHeight",
      firstItemIndex: "firstItemIndex",
      fixedItemHeight: "fixedItemHeight",
      followOutput: "followOutput",
      groupContent: "groupContent",
      groupCounts: "groupCounts",
      headerFooterTag: "HeaderFooterTag",
      horizontalDirection: "horizontalDirection",
      increaseViewportBy: "increaseViewportBy",
      initialItemCount: "initialItemCount",
      initialScrollTop: "initialScrollTop",
      initialTopMostItemIndex: "initialTopMostItemIndex",
      itemContent: "itemContent",
      itemSize: "itemSize",
      logLevel: "logLevel",
      overscan: "overscan",
      restoreStateFrom: "restoreStateFrom",
      scrollerRef: "scrollerRef",
      scrollSeekConfiguration: "scrollSeekConfiguration",
      skipAnimationFrameInResizeObserver: "skipAnimationFrameInResizeObserver",
      topItemCount: "topItemCount",
      totalCount: "totalCount",
      useWindowScroll: "useWindowScroll"
    },
    required: {}
  },
  L_
), z_ = /* @__PURE__ */ dw({ useEmitter: $h, useEmitterValue: He, usePublisher: Qn }), V_ = /* @__PURE__ */ fw({ useEmitter: $h, useEmitterValue: He, usePublisher: Qn }), j_ = F_, H_ = /* @__PURE__ */ ot(() => {
  const e = xe((c) => /* @__PURE__ */ we("td", { children: [
    "Item $",
    c
  ] })), t = xe(null), n = xe(null), r = xe(null), o = xe({}), i = xe(Nh), s = xe(ys), l = (c, u = null) => pn(
    ye(
      o,
      Re((f) => f[c]),
      St()
    ),
    u
  );
  return {
    components: o,
    computeItemKey: i,
    context: t,
    EmptyPlaceholder: l("EmptyPlaceholder"),
    FillerRow: l("FillerRow"),
    fixedFooterContent: r,
    fixedHeaderContent: n,
    itemContent: e,
    ScrollerComponent: l("Scroller", "div"),
    scrollerRef: s,
    ScrollSeekPlaceholder: l("ScrollSeekPlaceholder"),
    TableBodyComponent: l("TableBody", "tbody"),
    TableComponent: l("Table", "table"),
    TableFooterComponent: l("TableFoot", "tfoot"),
    TableHeadComponent: l("TableHead", "thead"),
    TableRowComponent: l("TableRow", "tr")
  };
});
Tt(rw, H_);
const uy = {
  bottom: 0,
  itemHeight: 0,
  items: [],
  itemWidth: 0,
  offsetBottom: 0,
  offsetTop: 0,
  top: 0
}, W_ = {
  bottom: 0,
  itemHeight: 0,
  items: [{ index: 0 }],
  itemWidth: 0,
  offsetBottom: 0,
  offsetTop: 0,
  top: 0
}, { ceil: dy, floor: Sc, max: Qs, min: Md, round: fy } = Math;
function py(e, t, n) {
  return Array.from({ length: t - e + 1 }).map((r, o) => ({ data: n === null ? null : n[o + e], index: o + e }));
}
function U_(e) {
  return {
    ...W_,
    items: e
  };
}
function El(e, t) {
  return e && e.width === t.width && e.height === t.height;
}
function q_(e, t) {
  return e && e.column === t.column && e.row === t.row;
}
const Y_ = /* @__PURE__ */ ot(
  ([
    { increaseViewportBy: e, listBoundary: t, overscan: n, visibleRange: r },
    { footerHeight: o, headerHeight: i, scrollBy: s, scrollContainerState: l, scrollTo: c, scrollTop: u, smoothScrollTargetReached: f, viewportHeight: d },
    p,
    h,
    { didMount: g, propsReady: m },
    { customScrollParent: y, useWindowScroll: x, windowScrollContainerState: E, windowScrollTo: v, windowViewportRect: w },
    S
  ]) => {
    const T = xe(0), C = xe(0), R = xe(uy), I = xe({ height: 0, width: 0 }), b = xe({ height: 0, width: 0 }), k = Je(), P = Je(), A = xe(0), O = xe(null), _ = xe({ column: 0, row: 0 }), $ = Je(), D = Je(), z = xe(!1), B = xe(0), L = xe(!0), F = xe(!1), W = xe(!1);
    ut(
      ye(
        g,
        Ge(B),
        Ve(([q, oe]) => !!oe)
      ),
      () => {
        qe(L, !1);
      }
    ), ut(
      ye(
        Qt(g, L, b, I, B, F),
        Ve(([q, oe, G, ne, , j]) => q && !oe && G.height !== 0 && ne.height !== 0 && !j)
      ),
      ([, , , , q]) => {
        qe(F, !0), Ch(1, () => {
          qe(k, q);
        }), Fr(ye(u), () => {
          qe(t, [0, 0]), qe(L, !0);
        });
      }
    ), Be(
      ye(
        D,
        Ve((q) => q != null && q.scrollTop > 0),
        Or(0)
      ),
      C
    ), ut(
      ye(
        g,
        Ge(D),
        Ve(([, q]) => q != null)
      ),
      ([, q]) => {
        q && (qe(I, q.viewport), qe(b, q.item), qe(_, q.gap), q.scrollTop > 0 && (qe(z, !0), Fr(ye(u, Gi(1)), (oe) => {
          qe(z, !1);
        }), qe(c, { top: q.scrollTop })));
      }
    ), Be(
      ye(
        I,
        Re(({ height: q }) => q)
      ),
      d
    ), Be(
      ye(
        Qt(
          je(I, El),
          je(b, El),
          je(_, (q, oe) => q && q.column === oe.column && q.row === oe.row),
          je(u)
        ),
        Re(([q, oe, G, ne]) => ({
          gap: G,
          item: oe,
          scrollTop: ne,
          viewport: q
        }))
      ),
      $
    ), Be(
      ye(
        Qt(
          je(T),
          r,
          je(_, q_),
          je(b, El),
          je(I, El),
          je(O),
          je(C),
          je(z),
          je(L),
          je(B)
        ),
        Ve(([, , , , , , , q]) => !q),
        Re(
          ([
            q,
            [oe, G],
            ne,
            j,
            pe,
            ce,
            be,
            ,
            Pe,
            Me
          ]) => {
            const { column: Ie, row: Ne } = ne, { height: Fe, width: ke } = j, { width: V } = pe;
            if (be === 0 && (q === 0 || V === 0))
              return uy;
            if (ke === 0) {
              const le = Oh(Me, q), se = le + Math.max(be - 1, 0);
              return U_(py(le, se, ce));
            }
            const J = pw(V, ke, Ie);
            let ie, X;
            Pe ? oe === 0 && G === 0 && be > 0 ? (ie = 0, X = be - 1) : (ie = J * Sc((oe + Ne) / (Fe + Ne)), X = J * dy((G + Ne) / (Fe + Ne)) - 1, X = Md(q - 1, Qs(X, J - 1)), ie = Md(X, Qs(0, ie))) : (ie = 0, X = -1);
            const H = py(ie, X, ce), { bottom: K, top: re } = hy(pe, ne, j, H), he = dy(q / J), me = he * Fe + (he - 1) * Ne - K;
            return { bottom: K, itemHeight: Fe, items: H, itemWidth: ke, offsetBottom: me, offsetTop: re, top: re };
          }
        )
      ),
      R
    ), Be(
      ye(
        O,
        Ve((q) => q !== null),
        Re((q) => q.length)
      ),
      T
    ), Be(
      ye(
        Qt(I, b, R, _),
        Ve(([q, oe, { items: G }]) => G.length > 0 && oe.height !== 0 && q.height !== 0),
        Re(([q, oe, { items: G }, ne]) => {
          const { bottom: j, top: pe } = hy(q, ne, oe, G);
          return [pe, j];
        }),
        St(va)
      ),
      t
    );
    const U = xe(!1);
    Be(
      ye(
        u,
        Ge(U),
        Re(([q, oe]) => oe || q !== 0)
      ),
      U
    );
    const Z = Hn(
      ye(
        Qt(R, T),
        Ve(([{ items: q }]) => q.length > 0),
        Ge(U),
        Ve(([[q, oe], G]) => {
          const ne = q.items[q.items.length - 1].index === oe - 1;
          return (G || q.bottom > 0 && q.itemHeight > 0 && q.offsetBottom === 0 && q.items.length === oe) && ne;
        }),
        Re(([[, q]]) => q - 1),
        St()
      )
    ), Q = Hn(
      ye(
        je(R),
        Ve(({ items: q }) => q.length > 0 && q[0].index === 0),
        Or(0),
        St()
      )
    ), ee = Hn(
      ye(
        je(R),
        Ge(z),
        Ve(([{ items: q }, oe]) => q.length > 0 && !oe),
        Re(([{ items: q }]) => ({
          endIndex: q[q.length - 1].index,
          startIndex: q[0].index
        })),
        St(qx),
        wo(0)
      )
    );
    Be(ee, h.scrollSeekRangeChanged), Be(
      ye(
        k,
        Ge(I, b, T, _),
        Re(([q, oe, G, ne, j]) => {
          const pe = Zx(q), { align: ce, behavior: be, offset: Pe } = pe;
          let Me = pe.index;
          Me === "LAST" && (Me = ne - 1), Me = Qs(0, Me, Md(ne - 1, Me));
          let Ie = qf(oe, j, G, Me);
          return ce === "end" ? Ie = fy(Ie - oe.height + G.height) : ce === "center" && (Ie = fy(Ie - oe.height / 2 + G.height / 2)), Pe && (Ie += Pe), { behavior: be, top: Ie };
        })
      ),
      c
    );
    const te = pn(
      ye(
        R,
        Re((q) => q.offsetBottom + q.bottom)
      ),
      0
    );
    return Be(
      ye(
        w,
        Re((q) => ({ height: q.visibleHeight, width: q.visibleWidth }))
      ),
      I
    ), {
      customScrollParent: y,
      // input
      data: O,
      deviation: A,
      footerHeight: o,
      gap: _,
      headerHeight: i,
      increaseViewportBy: e,
      initialItemCount: C,
      itemDimensions: b,
      overscan: n,
      restoreStateFrom: D,
      scrollBy: s,
      scrollContainerState: l,
      scrollHeight: P,
      scrollTo: c,
      scrollToIndex: k,
      scrollTop: u,
      smoothScrollTargetReached: f,
      totalCount: T,
      useWindowScroll: x,
      viewportDimensions: I,
      windowScrollContainerState: E,
      windowScrollTo: v,
      windowViewportRect: w,
      ...h,
      // output
      gridState: R,
      horizontalDirection: W,
      initialTopMostItemIndex: B,
      totalListHeight: te,
      ...p,
      endReached: Z,
      propsReady: m,
      rangeChanged: ee,
      startReached: Q,
      stateChanged: $,
      stateRestoreInProgress: z,
      ...S
    };
  },
  Tt(kh, En, qa, tw, Do, Rh, Ao)
);
function pw(e, t, n) {
  return Qs(1, Sc((e + n) / (Sc(t) + n)));
}
function hy(e, t, n, r) {
  const { height: o } = n;
  if (o === void 0 || r.length === 0)
    return { bottom: 0, top: 0 };
  const i = qf(e, t, n, r[0].index);
  return { bottom: qf(e, t, n, r[r.length - 1].index) + o, top: i };
}
function qf(e, t, n, r) {
  const o = pw(e.width, n.width, t.column), i = Sc(r / o), s = i * n.height + Qs(0, i - 1) * t.row;
  return s > 0 ? s + t.row : s;
}
const K_ = /* @__PURE__ */ ot(() => {
  const e = xe((d) => `Item ${d}`), t = xe({}), n = xe(null), r = xe("virtuoso-grid-item"), o = xe("virtuoso-grid-list"), i = xe(Nh), s = xe("div"), l = xe(ys), c = (d, p = null) => pn(
    ye(
      t,
      Re((h) => h[d]),
      St()
    ),
    p
  ), u = xe(!1), f = xe(!1);
  return Be(je(f), u), {
    components: t,
    computeItemKey: i,
    context: n,
    FooterComponent: c("Footer"),
    HeaderComponent: c("Header"),
    headerFooterTag: s,
    itemClassName: r,
    ItemComponent: c("Item", "div"),
    itemContent: e,
    listClassName: o,
    ListComponent: c("List", "div"),
    readyStateChanged: u,
    reportReadyState: f,
    ScrollerComponent: c("Scroller", "div"),
    scrollerRef: l,
    ScrollSeekPlaceholder: c("ScrollSeekPlaceholder", "div")
  };
}), G_ = /* @__PURE__ */ ot(
  ([e, t]) => ({ ...e, ...t }),
  Tt(Y_, K_)
), X_ = /* @__PURE__ */ Y.memo(function() {
  const e = kt("gridState"), t = kt("listClassName"), n = kt("itemClassName"), r = kt("itemContent"), o = kt("computeItemKey"), i = kt("isSeeking"), s = Jn("scrollHeight"), l = kt("ItemComponent"), c = kt("ListComponent"), u = kt("ScrollSeekPlaceholder"), f = kt("context"), d = Jn("itemDimensions"), p = Jn("gap"), h = kt("log"), g = kt("stateRestoreInProgress"), m = Jn("reportReadyState"), y = si(
    Y.useMemo(
      () => (x) => {
        const E = x.parentElement.parentElement.scrollHeight;
        s(E);
        const v = x.firstChild;
        if (v) {
          const { height: w, width: S } = v.getBoundingClientRect();
          d({ height: w, width: S });
        }
        p({
          column: my("column-gap", getComputedStyle(x).columnGap, h),
          row: my("row-gap", getComputedStyle(x).rowGap, h)
        });
      },
      [s, d, p, h]
    ),
    !0,
    !1
  );
  return aw(() => {
    e.itemHeight > 0 && e.itemWidth > 0 && m(!0);
  }, [e]), g ? null : /* @__PURE__ */ N(
    c,
    {
      className: t,
      ref: y,
      ...sn(c, f),
      "data-testid": "virtuoso-item-list",
      style: { paddingBottom: e.offsetBottom, paddingTop: e.offsetTop },
      children: e.items.map((x) => {
        const E = o(x.index, x.data, f);
        return i ? /* @__PURE__ */ N(
          u,
          {
            ...sn(u, f),
            height: e.itemHeight,
            index: x.index,
            width: e.itemWidth
          },
          E
        ) : /* @__PURE__ */ Go(
          l,
          {
            ...sn(l, f),
            className: n,
            "data-index": x.index,
            key: E
          },
          r(x.index, x.data, f)
        );
      })
    }
  );
}), Z_ = Y.memo(function() {
  const e = kt("HeaderComponent"), t = Jn("headerHeight"), n = kt("headerFooterTag"), r = si(
    Y.useMemo(
      () => (i) => {
        t(Oo(i, "height"));
      },
      [t]
    ),
    !0,
    !1
  ), o = kt("context");
  return e ? /* @__PURE__ */ N(n, { ref: r, children: /* @__PURE__ */ N(e, { ...sn(e, o) }) }) : null;
}), Q_ = Y.memo(function() {
  const e = kt("FooterComponent"), t = Jn("footerHeight"), n = kt("headerFooterTag"), r = si(
    Y.useMemo(
      () => (i) => {
        t(Oo(i, "height"));
      },
      [t]
    ),
    !0,
    !1
  ), o = kt("context");
  return e ? /* @__PURE__ */ N(n, { ref: r, children: /* @__PURE__ */ N(e, { ...sn(e, o) }) }) : null;
}), J_ = ({ children: e }) => {
  const t = Y.useContext(sw), n = Jn("itemDimensions"), r = Jn("viewportDimensions"), o = si(
    Y.useMemo(
      () => (i) => {
        r(i.getBoundingClientRect());
      },
      [r]
    ),
    !0,
    !1
  );
  return Y.useEffect(() => {
    t && (r({ height: t.viewportHeight, width: t.viewportWidth }), n({ height: t.itemHeight, width: t.itemWidth }));
  }, [t, r, n]), /* @__PURE__ */ N("div", { ref: o, style: Tu(!1), children: e });
}, eM = ({ children: e }) => {
  const t = Y.useContext(sw), n = Jn("windowViewportRect"), r = Jn("itemDimensions"), o = kt("customScrollParent"), i = zx(n, o, !1);
  return Y.useEffect(() => {
    t && (r({ height: t.itemHeight, width: t.itemWidth }), n({ offsetTop: 0, visibleHeight: t.viewportHeight, visibleWidth: t.viewportWidth }));
  }, [t, n, r]), /* @__PURE__ */ N("div", { ref: i, style: Tu(!1), children: e });
}, tM = /* @__PURE__ */ Y.memo(function({ ...e }) {
  const t = kt("useWindowScroll"), n = kt("customScrollParent"), r = n || t ? oM : rM, o = n || t ? eM : J_, i = kt("context");
  return /* @__PURE__ */ N(r, { ...e, ...sn(r, i), children: /* @__PURE__ */ we(o, { children: [
    /* @__PURE__ */ N(Z_, {}),
    /* @__PURE__ */ N(X_, {}),
    /* @__PURE__ */ N(Q_, {})
  ] }) });
}), {
  Component: nM,
  useEmitter: hw,
  useEmitterValue: kt,
  usePublisher: Jn
} = /* @__PURE__ */ ow(
  G_,
  {
    events: {
      atBottomStateChange: "atBottomStateChange",
      atTopStateChange: "atTopStateChange",
      endReached: "endReached",
      isScrolling: "isScrolling",
      rangeChanged: "rangeChanged",
      readyStateChanged: "readyStateChanged",
      startReached: "startReached",
      stateChanged: "stateChanged"
    },
    methods: {
      scrollBy: "scrollBy",
      scrollTo: "scrollTo",
      scrollToIndex: "scrollToIndex"
    },
    optional: {
      components: "components",
      computeItemKey: "computeItemKey",
      context: "context",
      customScrollParent: "customScrollParent",
      data: "data",
      headerFooterTag: "headerFooterTag",
      increaseViewportBy: "increaseViewportBy",
      initialItemCount: "initialItemCount",
      initialTopMostItemIndex: "initialTopMostItemIndex",
      itemClassName: "itemClassName",
      itemContent: "itemContent",
      listClassName: "listClassName",
      logLevel: "logLevel",
      overscan: "overscan",
      restoreStateFrom: "restoreStateFrom",
      scrollerRef: "scrollerRef",
      scrollSeekConfiguration: "scrollSeekConfiguration",
      totalCount: "totalCount",
      useWindowScroll: "useWindowScroll"
    }
  },
  tM
), rM = /* @__PURE__ */ dw({ useEmitter: hw, useEmitterValue: kt, usePublisher: Jn }), oM = /* @__PURE__ */ fw({ useEmitter: hw, useEmitterValue: kt, usePublisher: Jn });
function my(e, t, n) {
  return t !== "normal" && !(t != null && t.endsWith("px")) && n(`${e} was not resolved to pixel value correctly`, t, Wn.WARN), t === "normal" ? 0 : parseInt(t ?? "0", 10);
}
const iM = nM, Ec = ve(({ height: e, width: t, isVirtualized: n, items: r, renderItem: o, sx: i }) => n ? /* @__PURE__ */ N(
  en,
  {
    className: "VenomousUI-Menu",
    sx: { height: e || "100%", width: t || "100%", ...i },
    children: /* @__PURE__ */ N(
      j_,
      {
        style: { height: "100%", width: "100%" },
        totalCount: r == null ? void 0 : r.length,
        data: r,
        itemContent: (s, l) => o ? o(l, s) : l.label
      }
    )
  }
) : /* @__PURE__ */ N(
  en,
  {
    className: "VenomousUI-Menu",
    gap: 1,
    sx: {
      height: e || "100%",
      width: t || "100%",
      overflowY: "scroll",
      overflowX: "hidden",
      ...i,
      "& > .VenomousUI-MenuItem": {
        width: "100% !important"
      }
      // '& .VenomousUI-MenuItem': { mb: '4px' },
      // '& .VenomousUI-MenuItem:last-child': { mb: 0 },
    },
    children: r == null ? void 0 : r.map((s, l) => /* @__PURE__ */ N(nC, { children: o ? o(s, l) : s.label }, s.label))
  }
));
Ec.displayName = "Menu";
const Js = ve(
  ({
    icon: e = "",
    label: t,
    value: n,
    clickable: r,
    disabled: o,
    onClick: i,
    onMouseEnter: s,
    onMouseLeave: l,
    isActive: c,
    sx: u,
    ellipsis: f = !1
  }) => r ? /* @__PURE__ */ N(
    an,
    {
      className: "VenomousUI-MenuItem",
      value: n,
      isGhost: !0,
      text: /* @__PURE__ */ N(wn, { text: t, ellipsis: f, sx: { textAlign: "left" } }),
      icon: e,
      iconWidth: 28,
      iconPosition: "start",
      onClick: i,
      onMouseEnter: s,
      onMouseLeave: l,
      disabled: o,
      color: c ? "primary" : "auto",
      sx: {
        py: "8px",
        px: "16px",
        width: "100%",
        justifyContent: "flex-start",
        transition: "background-color 0.2s ease; color 0.2s ease",
        backgroundColor: c ? "divider" : "transparent",
        "&:hover": { backgroundColor: "divider" },
        ...u
      }
    }
  ) : /* @__PURE__ */ we(en, { row: !0, py: "8px", px: "16px", sx: { width: "100%", ...u }, className: "VenomousUI-MenuItem", children: [
    /* @__PURE__ */ N(hr, { icon: e, width: 28, color: c ? "primary" : "auto" }),
    /* @__PURE__ */ N(
      wn,
      {
        text: t,
        ellipsis: f,
        flex: 1,
        textColor: c ? "primary" : "auto",
        sx: { cursor: "default" }
      }
    )
  ] })
);
Js.displayName = "MenuItem";
function sM({ currentPath: e }) {
  const t = $e(
    (r) => {
      let o = r.url;
      if (!o && r.subItems && r.subItems.length > 0) {
        const s = r.subItems.map((l) => l.url).filter(Boolean);
        o = aM(s);
      }
      return !!(o && (e == null ? void 0 : e.startsWith(o)) || r.subItems && r.subItems.some(
        (s) => s.url && (e == null ? void 0 : e.startsWith(s.url))
      ));
    },
    [e]
  ), n = $e(
    (r) => !!(r.url && (e != null && e.startsWith(r.url))),
    [e]
  );
  return {
    checkIsParentItemActive: t,
    checkIsSubItemActive: n
  };
}
function aM(e) {
  if (e.length === 0) return "";
  let t = e[0];
  for (let n = 1; n < e.length; n++)
    for (; e[n].indexOf(t) !== 0; )
      if (t = t.slice(0, -1), !t) return "";
  if (!t.endsWith("/")) {
    const n = t.lastIndexOf("/");
    t = t.slice(0, n + 1);
  }
  return t;
}
function Yf(e) {
  return typeof e == "string";
}
function lM(e) {
  const t = Nn(e);
  return t.body === e ? Dr(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function ea(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function gy(e) {
  return parseInt(Dr(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function cM(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), r = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || r;
}
function yy(e, t, n, r, o) {
  const i = [t, n, ...r];
  [].forEach.call(e.children, (s) => {
    const l = !i.includes(s), c = !cM(s);
    l && c && ea(s, o);
  });
}
function Ad(e, t) {
  let n = -1;
  return e.some((r, o) => t(r) ? (n = o, !0) : !1), n;
}
function uM(e, t) {
  const n = [], r = e.container;
  if (!t.disableScrollLock) {
    if (lM(r)) {
      const s = Hk(Dr(r));
      n.push({
        value: r.style.paddingRight,
        property: "padding-right",
        el: r
      }), r.style.paddingRight = `${gy(r) + s}px`;
      const l = Nn(r).querySelectorAll(".mui-fixed");
      [].forEach.call(l, (c) => {
        n.push({
          value: c.style.paddingRight,
          property: "padding-right",
          el: c
        }), c.style.paddingRight = `${gy(c) + s}px`;
      });
    }
    let i;
    if (r.parentNode instanceof DocumentFragment)
      i = Nn(r).body;
    else {
      const s = r.parentElement, l = Dr(r);
      i = (s == null ? void 0 : s.nodeName) === "HTML" && l.getComputedStyle(s).overflowY === "scroll" ? s : r;
    }
    n.push({
      value: i.style.overflow,
      property: "overflow",
      el: i
    }, {
      value: i.style.overflowX,
      property: "overflow-x",
      el: i
    }, {
      value: i.style.overflowY,
      property: "overflow-y",
      el: i
    }), i.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: i,
      el: s,
      property: l
    }) => {
      i ? s.style.setProperty(l, i) : s.style.removeProperty(l);
    });
  };
}
function dM(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
let fM = class {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let r = this.modals.indexOf(t);
    if (r !== -1)
      return r;
    r = this.modals.length, this.modals.push(t), t.modalRef && ea(t.modalRef, !1);
    const o = dM(n);
    yy(n, t.mount, t.modalRef, o, !0);
    const i = Ad(this.containers, (s) => s.container === n);
    return i !== -1 ? (this.containers[i].modals.push(t), r) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: o
    }), r);
  }
  mount(t, n) {
    const r = Ad(this.containers, (i) => i.modals.includes(t)), o = this.containers[r];
    o.restore || (o.restore = uM(o, n));
  }
  remove(t, n = !0) {
    const r = this.modals.indexOf(t);
    if (r === -1)
      return r;
    const o = Ad(this.containers, (s) => s.modals.includes(t)), i = this.containers[o];
    if (i.modals.splice(i.modals.indexOf(t), 1), this.modals.splice(r, 1), i.modals.length === 0)
      i.restore && i.restore(), t.modalRef && ea(t.modalRef, n), yy(i.container, t.mount, t.modalRef, i.hiddenSiblings, !1), this.containers.splice(o, 1);
    else {
      const s = i.modals[i.modals.length - 1];
      s.modalRef && ea(s.modalRef, !1);
    }
    return r;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
};
const pM = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function hM(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function mM(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (r) => e.ownerDocument.querySelector(`input[type="radio"]${r}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function gM(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || mM(e));
}
function yM(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(pM)).forEach((r, o) => {
    const i = hM(r);
    i === -1 || !gM(r) || (i === 0 ? t.push(r) : n.push({
      documentOrder: o,
      tabIndex: i,
      node: r
    }));
  }), n.sort((r, o) => r.tabIndex === o.tabIndex ? r.documentOrder - o.documentOrder : r.tabIndex - o.tabIndex).map((r) => r.node).concat(t);
}
function bM() {
  return !0;
}
function Tc(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: r = !1,
    disableRestoreFocus: o = !1,
    getTabbable: i = yM,
    isEnabled: s = bM,
    open: l
  } = e, c = M.useRef(!1), u = M.useRef(null), f = M.useRef(null), d = M.useRef(null), p = M.useRef(null), h = M.useRef(!1), g = M.useRef(null), m = mn(ii(t), g), y = M.useRef(null);
  M.useEffect(() => {
    !l || !g.current || (h.current = !n);
  }, [n, l]), M.useEffect(() => {
    if (!l || !g.current)
      return;
    const v = Nn(g.current);
    return g.current.contains(v.activeElement) || (g.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), g.current.setAttribute("tabIndex", "-1")), h.current && g.current.focus()), () => {
      o || (d.current && d.current.focus && (c.current = !0, d.current.focus()), d.current = null);
    };
  }, [l]), M.useEffect(() => {
    if (!l || !g.current)
      return;
    const v = Nn(g.current), w = (C) => {
      y.current = C, !(r || !s() || C.key !== "Tab") && v.activeElement === g.current && C.shiftKey && (c.current = !0, f.current && f.current.focus());
    }, S = () => {
      var I, b;
      const C = g.current;
      if (C === null)
        return;
      if (!v.hasFocus() || !s() || c.current) {
        c.current = !1;
        return;
      }
      if (C.contains(v.activeElement) || r && v.activeElement !== u.current && v.activeElement !== f.current)
        return;
      if (v.activeElement !== p.current)
        p.current = null;
      else if (p.current !== null)
        return;
      if (!h.current)
        return;
      let R = [];
      if ((v.activeElement === u.current || v.activeElement === f.current) && (R = i(g.current)), R.length > 0) {
        const k = !!((I = y.current) != null && I.shiftKey && ((b = y.current) == null ? void 0 : b.key) === "Tab"), P = R[0], A = R[R.length - 1];
        typeof P != "string" && typeof A != "string" && (k ? A.focus() : P.focus());
      } else
        C.focus();
    };
    v.addEventListener("focusin", S), v.addEventListener("keydown", w, !0);
    const T = setInterval(() => {
      v.activeElement && v.activeElement.tagName === "BODY" && S();
    }, 50);
    return () => {
      clearInterval(T), v.removeEventListener("focusin", S), v.removeEventListener("keydown", w, !0);
    };
  }, [n, r, o, s, l, i]);
  const x = (v) => {
    d.current === null && (d.current = v.relatedTarget), h.current = !0, p.current = v.target;
    const w = t.props.onFocus;
    w && w(v);
  }, E = (v) => {
    d.current === null && (d.current = v.relatedTarget), h.current = !0;
  };
  return /* @__PURE__ */ we(M.Fragment, {
    children: [/* @__PURE__ */ N("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: u,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ M.cloneElement(t, {
      ref: m,
      onFocus: x
    }), /* @__PURE__ */ N("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: f,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (Tc.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: Io,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: a.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: a.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: a.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: a.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: a.func,
  /**
   * If `true`, focus is locked.
   */
  open: a.bool.isRequired
});
process.env.NODE_ENV !== "production" && (Tc.propTypes = Va(Tc.propTypes));
function vM(e) {
  return Et("MuiBackdrop", e);
}
Rt("MuiBackdrop", ["root", "invisible"]);
const xM = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return At({
    root: ["root", n && "invisible"]
  }, vM, t);
}, wM = Ae("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), Ph = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: o,
    className: i,
    component: s = "div",
    invisible: l = !1,
    open: c,
    components: u = {},
    componentsProps: f = {},
    slotProps: d = {},
    slots: p = {},
    TransitionComponent: h,
    transitionDuration: g,
    ...m
  } = r, y = {
    ...r,
    component: s,
    invisible: l
  }, x = xM(y), E = {
    transition: h,
    root: u.Root,
    ...p
  }, v = {
    ...f,
    ...d
  }, w = {
    slots: E,
    slotProps: v
  }, [S, T] = pt("root", {
    elementType: wM,
    externalForwardedProps: w,
    className: Oe(x.root, i),
    ownerState: y
  }), [C, R] = pt("transition", {
    elementType: Jo,
    externalForwardedProps: w,
    ownerState: y
  });
  return /* @__PURE__ */ N(C, {
    in: c,
    timeout: g,
    ...m,
    ...R,
    children: /* @__PURE__ */ N(S, {
      "aria-hidden": !0,
      ...T,
      classes: x,
      ref: n,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (Ph.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    root: a.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: a.bool,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: a.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function SM(e) {
  return typeof e == "function" ? e() : e;
}
function EM(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const by = () => {
}, Tl = new fM();
function TM(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: r = !1,
    closeAfterTransition: o = !1,
    onTransitionEnter: i,
    onTransitionExited: s,
    children: l,
    onClose: c,
    open: u,
    rootRef: f
  } = e, d = M.useRef({}), p = M.useRef(null), h = M.useRef(null), g = mn(h, f), [m, y] = M.useState(!u), x = EM(l);
  let E = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (E = !1);
  const v = () => Nn(p.current), w = () => (d.current.modalRef = h.current, d.current.mount = p.current, d.current), S = () => {
    Tl.mount(w(), {
      disableScrollLock: r
    }), h.current && (h.current.scrollTop = 0);
  }, T = Ir(() => {
    const _ = SM(t) || v().body;
    Tl.add(w(), _), h.current && S();
  }), C = () => Tl.isTopModal(w()), R = Ir((_) => {
    p.current = _, _ && (u && C() ? S() : h.current && ea(h.current, E));
  }), I = M.useCallback(() => {
    Tl.remove(w(), E);
  }, [E]);
  M.useEffect(() => () => {
    I();
  }, [I]), M.useEffect(() => {
    u ? T() : (!x || !o) && I();
  }, [u, I, x, o, T]);
  const b = (_) => ($) => {
    var D;
    (D = _.onKeyDown) == null || D.call(_, $), !($.key !== "Escape" || $.which === 229 || // Wait until IME is settled.
    !C()) && (n || ($.stopPropagation(), c && c($, "escapeKeyDown")));
  }, k = (_) => ($) => {
    var D;
    (D = _.onClick) == null || D.call(_, $), $.target === $.currentTarget && c && c($, "backdropClick");
  };
  return {
    getRootProps: (_ = {}) => {
      const $ = Vv(e);
      delete $.onTransitionEnter, delete $.onTransitionExited;
      const D = {
        ...$,
        ..._
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...D,
        onKeyDown: b(D),
        ref: g
      };
    },
    getBackdropProps: (_ = {}) => {
      const $ = _;
      return {
        "aria-hidden": !0,
        ...$,
        onClick: k($),
        open: u
      };
    },
    getTransitionProps: () => {
      const _ = () => {
        y(!1), i && i();
      }, $ = () => {
        y(!0), s && s(), o && I();
      };
      return {
        onEnter: Tf(_, (l == null ? void 0 : l.props.onEnter) ?? by),
        onExited: Tf($, (l == null ? void 0 : l.props.onExited) ?? by)
      };
    },
    rootRef: g,
    portalRef: R,
    isTopModal: C,
    exited: m,
    hasTransition: x
  };
}
function CM(e) {
  return Et("MuiModal", e);
}
Rt("MuiModal", ["root", "hidden", "backdrop"]);
const OM = (e) => {
  const {
    open: t,
    exited: n,
    classes: r
  } = e;
  return At({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, CM, r);
}, kM = Ae("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(tt(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), RM = Ae(Ph, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), Cu = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: o = RM,
    BackdropProps: i,
    classes: s,
    className: l,
    closeAfterTransition: c = !1,
    children: u,
    container: f,
    component: d,
    components: p = {},
    componentsProps: h = {},
    disableAutoFocus: g = !1,
    disableEnforceFocus: m = !1,
    disableEscapeKeyDown: y = !1,
    disablePortal: x = !1,
    disableRestoreFocus: E = !1,
    disableScrollLock: v = !1,
    hideBackdrop: w = !1,
    keepMounted: S = !1,
    onClose: T,
    onTransitionEnter: C,
    onTransitionExited: R,
    open: I,
    slotProps: b = {},
    slots: k = {},
    // eslint-disable-next-line react/prop-types
    theme: P,
    ...A
  } = r, O = {
    ...r,
    closeAfterTransition: c,
    disableAutoFocus: g,
    disableEnforceFocus: m,
    disableEscapeKeyDown: y,
    disablePortal: x,
    disableRestoreFocus: E,
    disableScrollLock: v,
    hideBackdrop: w,
    keepMounted: S
  }, {
    getRootProps: _,
    getBackdropProps: $,
    getTransitionProps: D,
    portalRef: z,
    isTopModal: B,
    exited: L,
    hasTransition: F
  } = TM({
    ...O,
    rootRef: n
  }), W = {
    ...O,
    exited: L
  }, U = OM(W), Z = {};
  if (u.props.tabIndex === void 0 && (Z.tabIndex = "-1"), F) {
    const {
      onEnter: G,
      onExited: ne
    } = D();
    Z.onEnter = G, Z.onExited = ne;
  }
  const Q = {
    slots: {
      root: p.Root,
      backdrop: p.Backdrop,
      ...k
    },
    slotProps: {
      ...h,
      ...b
    }
  }, [ee, te] = pt("root", {
    ref: n,
    elementType: kM,
    externalForwardedProps: {
      ...Q,
      ...A,
      component: d
    },
    getSlotProps: _,
    ownerState: W,
    className: Oe(l, U == null ? void 0 : U.root, !W.open && W.exited && (U == null ? void 0 : U.hidden))
  }), [q, oe] = pt("backdrop", {
    ref: i == null ? void 0 : i.ref,
    elementType: o,
    externalForwardedProps: Q,
    shouldForwardComponentProp: !0,
    additionalProps: i,
    getSlotProps: (G) => $({
      ...G,
      onClick: (ne) => {
        G != null && G.onClick && G.onClick(ne);
      }
    }),
    className: Oe(i == null ? void 0 : i.className, U == null ? void 0 : U.backdrop),
    ownerState: W
  });
  return !S && !I && (!F || L) ? null : /* @__PURE__ */ N(Yi, {
    ref: z,
    container: f,
    disablePortal: x,
    children: /* @__PURE__ */ we(ee, {
      ...te,
      children: [!w && o ? /* @__PURE__ */ N(q, {
        ...oe
      }) : null, /* @__PURE__ */ N(Tc, {
        disableEnforceFocus: m,
        disableAutoFocus: g,
        disableRestoreFocus: E,
        isEnabled: B,
        open: I,
        children: /* @__PURE__ */ M.cloneElement(u, Z)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (Cu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: a.object,
  /**
   * A single child content element.
   */
  children: Io.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: a.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Backdrop: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([no, a.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: a.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: a.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: a.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: a.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: a.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: a.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: a.bool,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: a.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: a.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function NM(e) {
  return Et("MuiPopover", e);
}
Rt("MuiPopover", ["root", "paper"]);
function vy(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function xy(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function wy(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function zs(e) {
  return typeof e == "function" ? e() : e;
}
const $M = (e) => {
  const {
    classes: t
  } = e;
  return At({
    root: ["root"],
    paper: ["paper"]
  }, NM, t);
}, PM = Ae(Cu, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), IM = Ae(hs, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), mw = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiPopover"
  }), {
    action: o,
    anchorEl: i,
    anchorOrigin: s = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: l,
    anchorReference: c = "anchorEl",
    children: u,
    className: f,
    container: d,
    elevation: p = 8,
    marginThreshold: h = 16,
    open: g,
    PaperProps: m = {},
    // TODO: remove in v7
    slots: y = {},
    slotProps: x = {},
    transformOrigin: E = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: v,
    // TODO: remove in v7
    transitionDuration: w = "auto",
    TransitionProps: S = {},
    // TODO: remove in v7
    disableScrollLock: T = !1,
    ...C
  } = r, R = M.useRef(), I = {
    ...r,
    anchorOrigin: s,
    anchorReference: c,
    elevation: p,
    marginThreshold: h,
    transformOrigin: E,
    TransitionComponent: v,
    transitionDuration: w,
    TransitionProps: S
  }, b = $M(I), k = M.useCallback(() => {
    if (c === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (l || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), l;
    const G = zs(i), ne = G && G.nodeType === 1 ? G : Nn(R.current).body, j = ne.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const pe = ne.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && pe.top === 0 && pe.left === 0 && pe.right === 0 && pe.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: j.top + vy(j, s.vertical),
      left: j.left + xy(j, s.horizontal)
    };
  }, [i, s.horizontal, s.vertical, l, c]), P = M.useCallback((G) => ({
    vertical: vy(G, E.vertical),
    horizontal: xy(G, E.horizontal)
  }), [E.horizontal, E.vertical]), A = M.useCallback((G) => {
    const ne = {
      width: G.offsetWidth,
      height: G.offsetHeight
    }, j = P(ne);
    if (c === "none")
      return {
        top: null,
        left: null,
        transformOrigin: wy(j)
      };
    const pe = k();
    let ce = pe.top - j.vertical, be = pe.left - j.horizontal;
    const Pe = ce + ne.height, Me = be + ne.width, Ie = Dr(zs(i)), Ne = Ie.innerHeight - h, Fe = Ie.innerWidth - h;
    if (h !== null && ce < h) {
      const ke = ce - h;
      ce -= ke, j.vertical += ke;
    } else if (h !== null && Pe > Ne) {
      const ke = Pe - Ne;
      ce -= ke, j.vertical += ke;
    }
    if (process.env.NODE_ENV !== "production" && ne.height > Ne && ne.height && Ne && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${ne.height - Ne}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), h !== null && be < h) {
      const ke = be - h;
      be -= ke, j.horizontal += ke;
    } else if (Me > Fe) {
      const ke = Me - Fe;
      be -= ke, j.horizontal += ke;
    }
    return {
      top: `${Math.round(ce)}px`,
      left: `${Math.round(be)}px`,
      transformOrigin: wy(j)
    };
  }, [i, c, k, P, h]), [O, _] = M.useState(g), $ = M.useCallback(() => {
    const G = R.current;
    if (!G)
      return;
    const ne = A(G);
    ne.top !== null && G.style.setProperty("top", ne.top), ne.left !== null && (G.style.left = ne.left), G.style.transformOrigin = ne.transformOrigin, _(!0);
  }, [A]);
  M.useEffect(() => (T && window.addEventListener("scroll", $), () => window.removeEventListener("scroll", $)), [i, T, $]);
  const D = () => {
    $();
  }, z = () => {
    _(!1);
  };
  M.useEffect(() => {
    g && $();
  }), M.useImperativeHandle(o, () => g ? {
    updatePosition: () => {
      $();
    }
  } : null, [g, $]), M.useEffect(() => {
    if (!g)
      return;
    const G = Wp(() => {
      $();
    }), ne = Dr(zs(i));
    return ne.addEventListener("resize", G), () => {
      G.clear(), ne.removeEventListener("resize", G);
    };
  }, [i, g, $]);
  let B = w;
  const L = {
    slots: {
      transition: v,
      ...y
    },
    slotProps: {
      transition: S,
      paper: m,
      ...x
    }
  }, [F, W] = pt("transition", {
    elementType: ha,
    externalForwardedProps: L,
    ownerState: I,
    getSlotProps: (G) => ({
      ...G,
      onEntering: (ne, j) => {
        var pe;
        (pe = G.onEntering) == null || pe.call(G, ne, j), D();
      },
      onExited: (ne) => {
        var j;
        (j = G.onExited) == null || j.call(G, ne), z();
      }
    }),
    additionalProps: {
      appear: !0,
      in: g
    }
  });
  w === "auto" && !F.muiSupportAuto && (B = void 0);
  const U = d || (i ? Nn(zs(i)).body : void 0), [Z, {
    slots: Q,
    slotProps: ee,
    ...te
  }] = pt("root", {
    ref: n,
    elementType: PM,
    externalForwardedProps: {
      ...L,
      ...C
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: y.backdrop
      },
      slotProps: {
        backdrop: gh(typeof x.backdrop == "function" ? x.backdrop(I) : x.backdrop, {
          invisible: !0
        })
      },
      container: U,
      open: g
    },
    ownerState: I,
    className: Oe(b.root, f)
  }), [q, oe] = pt("paper", {
    ref: R,
    className: b.paper,
    elementType: IM,
    externalForwardedProps: L,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: p,
      style: O ? void 0 : {
        opacity: 0
      }
    },
    ownerState: I
  });
  return /* @__PURE__ */ N(Z, {
    ...te,
    ...!Yf(Z) && {
      slots: Q,
      slotProps: ee,
      disableScrollLock: T
    },
    children: /* @__PURE__ */ N(F, {
      ...W,
      timeout: B,
      children: /* @__PURE__ */ N(q, {
        ...oe,
        children: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (mw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: co,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: Po(a.oneOfType([no, a.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = zs(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: a.shape({
    horizontal: a.oneOfType([a.oneOf(["center", "left", "right"]), a.number]).isRequired,
    vertical: a.oneOfType([a.oneOf(["bottom", "center", "top"]), a.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: a.shape({
    left: a.number.isRequired,
    top: a.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: a.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: a.object,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([no, a.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: a.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: qp,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: a.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: a.shape({
    component: Hp
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: a.shape({
    horizontal: a.oneOfType([a.oneOf(["center", "left", "right"]), a.number]).isRequired,
    vertical: a.oneOfType([a.oneOf(["bottom", "center", "top"]), a.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: a.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object
});
function _M() {
  const [e, t] = Jt(null), n = !!e, r = $e((i) => {
    const s = i.currentTarget;
    t(s);
  }, []), o = $e(() => {
    var i;
    (i = window.getSelection()) != null && i.toString() || t(null);
  }, []);
  return {
    anchorEl: e,
    isOpen: n,
    openPopover: r,
    closePopover: o
  };
}
const gw = ve(({ children: e, renderPopoverHandler: t, sx: n }) => {
  const { paperCommonStyles: r } = ms(), { anchorEl: o, isOpen: i, openPopover: s, closePopover: l } = _M();
  return /* @__PURE__ */ we(rr, { children: [
    t({ anchorEl: o, isOpen: i, openPopover: s, closePopover: l }),
    /* @__PURE__ */ N(
      mw,
      {
        open: i,
        anchorEl: o,
        onClose: l,
        anchorOrigin: { vertical: "bottom", horizontal: "center" },
        transformOrigin: { vertical: "top", horizontal: "center" },
        slotProps: {
          paper: {
            elevation: 3,
            square: !0,
            sx: {
              ...r,
              border: 1,
              borderColor: "divider",
              ...n
            }
          }
        },
        children: /* @__PURE__ */ N(Jo, { in: i, children: /* @__PURE__ */ N("div", { children: e }) })
      }
    )
  ] });
});
gw.displayName = "Popover";
const MM = ve(
  ({ icon: e = "solar:menu-dots-line-duotone", menuItems: t }) => /* @__PURE__ */ N(
    gw,
    {
      renderPopoverHandler: ({ isOpen: n, openPopover: r }) => /* @__PURE__ */ N(
        an,
        {
          isCircle: !0,
          isGhost: !0,
          color: "auto",
          icon: e,
          iconWidth: 20,
          disabled: n,
          onClick: r
        }
      ),
      children: /* @__PURE__ */ N(Ec, { items: t, renderItem: (n) => /* @__PURE__ */ N(Js, { ...n, clickable: !0 }) })
    }
  )
);
MM.displayName = "ExhibitCardActionButton";
const yw = mR({
  createStyledComponent: Ae("div", {
    name: "MuiContainer",
    slot: "Root",
    overridesResolver: (e, t) => {
      const {
        ownerState: n
      } = e;
      return [t.root, t[`maxWidth${Ee(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
    }
  }),
  useThemeProps: (e) => Nt({
    props: e,
    name: "MuiContainer"
  })
});
process.env.NODE_ENV !== "production" && (yw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: a.bool,
  /**
   * Set the max-width to match the min-width of the current breakpoint.
   * This is useful if you'd prefer to design for a fixed set of sizes
   * instead of trying to accommodate a fully fluid viewport.
   * It's fluid by default.
   * @default false
   */
  fixed: a.bool,
  /**
   * Determine the max-width of the container.
   * The container width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'lg'
   */
  maxWidth: a.oneOfType([a.oneOf(["xs", "sm", "md", "lg", "xl", !1]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const AM = ve(({ children: e, maxWidth: t = "lg", ...n }) => /* @__PURE__ */ N(
  yw,
  {
    className: "VenomousUI-Container",
    disableGutters: !0,
    maxWidth: t === "fullwidth" ? !1 : t,
    ...n,
    children: e
  }
));
AM.displayName = "Container";
function DM(e, t, n) {
  const r = t.getBoundingClientRect(), o = n && n.getBoundingClientRect(), i = Dr(t);
  let s;
  if (t.fakeTransform)
    s = t.fakeTransform;
  else {
    const u = i.getComputedStyle(t);
    s = u.getPropertyValue("-webkit-transform") || u.getPropertyValue("transform");
  }
  let l = 0, c = 0;
  if (s && s !== "none" && typeof s == "string") {
    const u = s.split("(")[1].split(")")[0].split(",");
    l = parseInt(u[4], 10), c = parseInt(u[5], 10);
  }
  return e === "left" ? o ? `translateX(${o.right + l - r.left}px)` : `translateX(${i.innerWidth + l - r.left}px)` : e === "right" ? o ? `translateX(-${r.right - o.left - l}px)` : `translateX(-${r.left + r.width - l}px)` : e === "up" ? o ? `translateY(${o.bottom + c - r.top}px)` : `translateY(${i.innerHeight + c - r.top}px)` : o ? `translateY(-${r.top - o.top + r.height - c}px)` : `translateY(-${r.top + r.height - c}px)`;
}
function bw(e) {
  return typeof e == "function" ? e() : e;
}
function Cl(e, t, n) {
  const r = bw(n), o = DM(e, t, r);
  o && (t.style.webkitTransform = o, t.style.transform = o);
}
const vw = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = uo(), o = {
    enter: r.transitions.easing.easeOut,
    exit: r.transitions.easing.sharp
  }, i = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: s,
    appear: l = !0,
    children: c,
    container: u,
    direction: f = "down",
    easing: d = o,
    in: p,
    onEnter: h,
    onEntered: g,
    onEntering: m,
    onExit: y,
    onExited: x,
    onExiting: E,
    style: v,
    timeout: w = i,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: S = Yn,
    ...T
  } = t, C = M.useRef(null), R = mn(ii(c), C, n), I = (z) => (B) => {
    z && (B === void 0 ? z(C.current) : z(C.current, B));
  }, b = I((z, B) => {
    Cl(f, z, u), ah(z), h && h(z, B);
  }), k = I((z, B) => {
    const L = ji({
      timeout: w,
      style: v,
      easing: d
    }, {
      mode: "enter"
    });
    z.style.webkitTransition = r.transitions.create("-webkit-transform", {
      ...L
    }), z.style.transition = r.transitions.create("transform", {
      ...L
    }), z.style.webkitTransform = "none", z.style.transform = "none", m && m(z, B);
  }), P = I(g), A = I(E), O = I((z) => {
    const B = ji({
      timeout: w,
      style: v,
      easing: d
    }, {
      mode: "exit"
    });
    z.style.webkitTransition = r.transitions.create("-webkit-transform", B), z.style.transition = r.transitions.create("transform", B), Cl(f, z, u), y && y(z);
  }), _ = I((z) => {
    z.style.webkitTransition = "", z.style.transition = "", x && x(z);
  }), $ = (z) => {
    s && s(C.current, z);
  }, D = M.useCallback(() => {
    C.current && Cl(f, C.current, u);
  }, [f, u]);
  return M.useEffect(() => {
    if (p || f === "down" || f === "right")
      return;
    const z = Wp(() => {
      C.current && Cl(f, C.current, u);
    }), B = Dr(C.current);
    return B.addEventListener("resize", z), () => {
      z.clear(), B.removeEventListener("resize", z);
    };
  }, [f, p, u]), M.useEffect(() => {
    p || D();
  }, [p, D]), /* @__PURE__ */ N(S, {
    nodeRef: C,
    onEnter: b,
    onEntered: P,
    onEntering: k,
    onExit: O,
    onExited: _,
    onExiting: A,
    addEndListener: $,
    appear: l,
    in: p,
    timeout: w,
    ...T,
    children: (z, {
      ownerState: B,
      ...L
    }) => /* @__PURE__ */ M.cloneElement(c, {
      ref: R,
      style: {
        visibility: z === "exited" && !p ? "hidden" : void 0,
        ...v,
        ...c.props.style
      },
      ...L
    })
  });
});
process.env.NODE_ENV !== "production" && (vw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: Io.isRequired,
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the container the Slide is transitioning from.
   */
  container: Po(a.oneOfType([no, a.func]), (e) => {
    if (e.open) {
      const t = bw(e.container);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `container` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `container` prop provided to the component is invalid.", "It should be an HTML element instance."].join(`
`));
    }
    return null;
  }),
  /**
   * Direction the child node will enter from.
   * @default 'down'
   */
  direction: a.oneOf(["down", "left", "right", "up"]),
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   * @default {
   *   enter: theme.transitions.easing.easeOut,
   *   exit: theme.transitions.easing.sharp,
   * }
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function BM(e) {
  return Et("MuiDrawer", e);
}
Rt("MuiDrawer", ["root", "docked", "paper", "anchorLeft", "anchorRight", "anchorTop", "anchorBottom", "paperAnchorLeft", "paperAnchorRight", "paperAnchorTop", "paperAnchorBottom", "paperAnchorDockedLeft", "paperAnchorDockedRight", "paperAnchorDockedTop", "paperAnchorDockedBottom", "modal"]);
const xw = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, (n.variant === "permanent" || n.variant === "persistent") && t.docked, t.modal];
}, LM = (e) => {
  const {
    classes: t,
    anchor: n,
    variant: r
  } = e, o = {
    root: ["root", `anchor${Ee(n)}`],
    docked: [(r === "permanent" || r === "persistent") && "docked"],
    modal: ["modal"],
    paper: ["paper", `paperAnchor${Ee(n)}`, r !== "temporary" && `paperAnchorDocked${Ee(n)}`]
  };
  return At(o, BM, t);
}, FM = Ae(Cu, {
  name: "MuiDrawer",
  slot: "Root",
  overridesResolver: xw
})(tt(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.drawer
}))), zM = Ae("div", {
  shouldForwardProp: Vr,
  name: "MuiDrawer",
  slot: "Docked",
  skipVariantsResolver: !1,
  overridesResolver: xw
})({
  flex: "0 0 auto"
}), VM = Ae(hs, {
  name: "MuiDrawer",
  slot: "Paper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.paper, t[`paperAnchor${Ee(n.anchor)}`], n.variant !== "temporary" && t[`paperAnchorDocked${Ee(n.anchor)}`]];
  }
})(tt(({
  theme: e
}) => ({
  overflowY: "auto",
  display: "flex",
  flexDirection: "column",
  height: "100%",
  flex: "1 0 auto",
  zIndex: (e.vars || e).zIndex.drawer,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  // temporary style
  position: "fixed",
  top: 0,
  // We disable the focus ring for mouse, touch and keyboard users.
  // At some point, it would be better to keep it for keyboard users.
  // :focus-ring CSS pseudo-class will help.
  outline: 0,
  variants: [{
    props: {
      anchor: "left"
    },
    style: {
      left: 0
    }
  }, {
    props: {
      anchor: "top"
    },
    style: {
      top: 0,
      left: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    }
  }, {
    props: {
      anchor: "right"
    },
    style: {
      right: 0
    }
  }, {
    props: {
      anchor: "bottom"
    },
    style: {
      top: "auto",
      left: 0,
      bottom: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "left" && t.variant !== "temporary",
    style: {
      borderRight: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "top" && t.variant !== "temporary",
    style: {
      borderBottom: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "right" && t.variant !== "temporary",
    style: {
      borderLeft: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "bottom" && t.variant !== "temporary",
    style: {
      borderTop: `1px solid ${(e.vars || e).palette.divider}`
    }
  }]
}))), ww = {
  left: "right",
  right: "left",
  top: "down",
  bottom: "up"
};
function jM(e) {
  return ["left", "right"].includes(e);
}
function HM({
  direction: e
}, t) {
  return e === "rtl" && jM(t) ? ww[t] : t;
}
const Sw = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiDrawer"
  }), o = uo(), i = du(), s = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    anchor: l = "left",
    BackdropProps: c,
    children: u,
    className: f,
    elevation: d = 16,
    hideBackdrop: p = !1,
    ModalProps: {
      BackdropProps: h,
      ...g
    } = {},
    onClose: m,
    open: y = !1,
    PaperProps: x = {},
    SlideProps: E,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: v,
    transitionDuration: w = s,
    variant: S = "temporary",
    slots: T = {},
    slotProps: C = {},
    ...R
  } = r, I = M.useRef(!1);
  M.useEffect(() => {
    I.current = !0;
  }, []);
  const b = HM({
    direction: i ? "rtl" : "ltr"
  }, l), P = {
    ...r,
    anchor: l,
    elevation: d,
    open: y,
    variant: S,
    ...R
  }, A = LM(P), O = {
    slots: {
      transition: v,
      ...T
    },
    slotProps: {
      paper: x,
      transition: E,
      ...C,
      backdrop: gh(C.backdrop || {
        ...c,
        ...h
      }, {
        transitionDuration: w
      })
    }
  }, [_, $] = pt("root", {
    ref: n,
    elementType: FM,
    className: Oe(A.root, A.modal, f),
    shouldForwardComponentProp: !0,
    ownerState: P,
    externalForwardedProps: {
      ...O,
      ...R,
      ...g
    },
    additionalProps: {
      open: y,
      onClose: m,
      hideBackdrop: p,
      slots: {
        backdrop: O.slots.backdrop
      },
      slotProps: {
        backdrop: O.slotProps.backdrop
      }
    }
  }), [D, z] = pt("paper", {
    elementType: VM,
    shouldForwardComponentProp: !0,
    className: Oe(A.paper, x.className),
    ownerState: P,
    externalForwardedProps: O,
    additionalProps: {
      elevation: S === "temporary" ? d : 0,
      square: !0
    }
  }), [B, L] = pt("docked", {
    elementType: zM,
    ref: n,
    className: Oe(A.root, A.docked, f),
    ownerState: P,
    externalForwardedProps: O,
    additionalProps: R
    // pass `other` here because `DockedSlot` is also a root slot for some variants
  }), [F, W] = pt("transition", {
    elementType: vw,
    ownerState: P,
    externalForwardedProps: O,
    additionalProps: {
      in: y,
      direction: ww[b],
      timeout: w,
      appear: I.current
    }
  }), U = /* @__PURE__ */ N(D, {
    ...z,
    children: u
  });
  if (S === "permanent")
    return /* @__PURE__ */ N(B, {
      ...L,
      children: U
    });
  const Z = /* @__PURE__ */ N(F, {
    ...W,
    children: U
  });
  return S === "persistent" ? /* @__PURE__ */ N(B, {
    ...L,
    children: Z
  }) : /* @__PURE__ */ N(_, {
    ...$,
    children: Z
  });
});
process.env.NODE_ENV !== "production" && (Sw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Side from which the drawer will appear.
   * @default 'left'
   */
  anchor: a.oneOf(["bottom", "left", "right", "top"]),
  /**
   * @ignore
   */
  BackdropProps: a.object,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The elevation of the drawer.
   * @default 16
   */
  elevation: qp,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: a.bool,
  /**
   * Props applied to the [`Modal`](https://mui.com/material-ui/api/modal/) element.
   * @default {}
   */
  ModalProps: a.object,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: a.bool,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @deprecated use the `slotProps.paper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PaperProps: a.object,
  /**
   * Props applied to the [`Slide`](https://mui.com/material-ui/api/slide/) element.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SlideProps: a.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    docked: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    docked: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * The variant to use.
   * @default 'temporary'
   */
  variant: a.oneOf(["permanent", "persistent", "temporary"])
});
const Ew = ve(
  ({ children: e, isOpen: t, closeDrawer: n, width: r, position: o = "right", sx: i }) => {
    const { paperCommonStyles: s } = ms();
    return /* @__PURE__ */ N(
      Sw,
      {
        className: "VenomousUI-Drawer",
        open: t,
        onClose: n,
        anchor: o,
        keepMounted: !0,
        slotProps: {
          paper: {
            sx: {
              ...s,
              ...WM(o),
              width: r,
              p: "16px",
              ...i
            }
          }
        },
        children: /* @__PURE__ */ N("div", { style: { width: "100%" }, children: e })
      }
    );
  }
);
Ew.displayName = "Drawer";
function WM(e) {
  switch (e) {
    case "right":
      return { borderTopRightRadius: "0px !important", borderBottomRightRadius: "0px !important" };
    case "top":
      return { borderTopLeftRadius: "0px !important", borderTopRightRadius: "0px !important" };
    case "bottom":
      return {
        borderBottomLeftRadius: "0px !important",
        borderBottomRightRadius: "0px !important"
      };
    case "left":
    default:
      return { borderTopLeftRadius: "0px !important", borderBottomLeftRadius: "0px !important" };
  }
}
function UM() {
  const [e, t] = Jt(!1), n = $e(() => {
    t(!0);
  }, []), r = $e(() => {
    t(!1);
  }, []), o = $e(() => {
    t((i) => !i);
  }, []);
  return {
    isOpen: e,
    setIsOpen: t,
    openDrawer: n,
    closeDrawer: r,
    toggleDrawer: o
  };
}
const Tw = ve(({ height: e = 50, title: t, closeDrawer: n }) => {
  const { paperCommonStyles: r } = ms();
  return /* @__PURE__ */ we(
    en,
    {
      className: "VenomousUI-DrawerHeader",
      row: !0,
      sx: {
        ...r,
        borderRadius: 0,
        height: e,
        width: "100%",
        position: "sticky",
        top: 0,
        left: 0,
        justifyContent: "space-between",
        transform: "translateY(-8px)"
      },
      children: [
        n && /* @__PURE__ */ N(
          an,
          {
            isCircle: !0,
            isGhost: !0,
            icon: "solar:close-circle-line-duotone",
            iconWidth: 24,
            color: "auto",
            onClick: n,
            sx: { width: 24, mr: "8px", ml: "-8px" }
          }
        ),
        /* @__PURE__ */ N(wn, { text: t, isTitle: !0 })
      ]
    }
  );
});
Tw.displayName = "DrawerHeader";
const Ih = /* @__PURE__ */ M.createContext(void 0);
process.env.NODE_ENV !== "production" && (Ih.displayName = "FormControlContext");
function Ou() {
  return M.useContext(Ih);
}
function qM(e) {
  return Et("PrivateSwitchBase", e);
}
Rt("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);
const YM = (e) => {
  const {
    classes: t,
    checked: n,
    disabled: r,
    edge: o
  } = e, i = {
    root: ["root", n && "checked", r && "disabled", o && `edge${Ee(o)}`],
    input: ["input"]
  };
  return At(i, qM, t);
}, KM = Ae(yh)({
  padding: 9,
  borderRadius: "50%",
  variants: [{
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "start" && t.size !== "small",
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "end" && t.size !== "small",
    style: {
      marginRight: -12
    }
  }]
}), GM = Ae("input", {
  shouldForwardProp: Vr
})({
  cursor: "inherit",
  position: "absolute",
  opacity: 0,
  width: "100%",
  height: "100%",
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
}), ku = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    autoFocus: r,
    checked: o,
    checkedIcon: i,
    defaultChecked: s,
    disabled: l,
    disableFocusRipple: c = !1,
    edge: u = !1,
    icon: f,
    id: d,
    inputProps: p,
    inputRef: h,
    name: g,
    onBlur: m,
    onChange: y,
    onFocus: x,
    readOnly: E,
    required: v = !1,
    tabIndex: w,
    type: S,
    value: T,
    slots: C = {},
    slotProps: R = {},
    ...I
  } = t, [b, k] = _v({
    controlled: o,
    default: !!s,
    name: "SwitchBase",
    state: "checked"
  }), P = Ou(), A = (Q) => {
    x && x(Q), P && P.onFocus && P.onFocus(Q);
  }, O = (Q) => {
    m && m(Q), P && P.onBlur && P.onBlur(Q);
  }, _ = (Q) => {
    if (Q.nativeEvent.defaultPrevented)
      return;
    const ee = Q.target.checked;
    k(ee), y && y(Q, ee);
  };
  let $ = l;
  P && typeof $ > "u" && ($ = P.disabled);
  const D = S === "checkbox" || S === "radio", z = {
    ...t,
    checked: b,
    disabled: $,
    disableFocusRipple: c,
    edge: u
  }, B = YM(z), L = {
    slots: C,
    slotProps: {
      input: p,
      ...R
    }
  }, [F, W] = pt("root", {
    ref: n,
    elementType: KM,
    className: B.root,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...L,
      component: "span",
      ...I
    },
    getSlotProps: (Q) => ({
      ...Q,
      onFocus: (ee) => {
        var te;
        (te = Q.onFocus) == null || te.call(Q, ee), A(ee);
      },
      onBlur: (ee) => {
        var te;
        (te = Q.onBlur) == null || te.call(Q, ee), O(ee);
      }
    }),
    ownerState: z,
    additionalProps: {
      centerRipple: !0,
      focusRipple: !c,
      disabled: $,
      role: void 0,
      tabIndex: null
    }
  }), [U, Z] = pt("input", {
    ref: h,
    elementType: GM,
    className: B.input,
    externalForwardedProps: L,
    getSlotProps: (Q) => ({
      ...Q,
      onChange: (ee) => {
        var te;
        (te = Q.onChange) == null || te.call(Q, ee), _(ee);
      }
    }),
    ownerState: z,
    additionalProps: {
      autoFocus: r,
      checked: o,
      defaultChecked: s,
      disabled: $,
      id: D ? d : void 0,
      name: g,
      readOnly: E,
      required: v,
      tabIndex: w,
      type: S,
      ...S === "checkbox" && T === void 0 ? {} : {
        value: T
      }
    }
  });
  return /* @__PURE__ */ we(F, {
    ...W,
    children: [/* @__PURE__ */ N(U, {
      ...Z
    }), b ? i : f]
  });
});
process.env.NODE_ENV !== "production" && (ku.propTypes = {
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: a.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * @ignore
   */
  defaultChecked: a.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: a.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: a.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: a.node.isRequired,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: co,
  /*
   * @ignore
   */
  name: a.string,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: a.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    input: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.object,
  /**
   * @ignore
   */
  tabIndex: a.oneOfType([a.number, a.string]),
  /**
   * The input component prop `type`.
   */
  type: a.string.isRequired,
  /**
   * The value of the component.
   */
  value: a.any
});
const XM = ps(/* @__PURE__ */ N("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank"), ZM = ps(/* @__PURE__ */ N("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox"), QM = ps(/* @__PURE__ */ N("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");
function JM(e) {
  return Et("MuiCheckbox", e);
}
const Dd = Rt("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium"]), eA = (e) => {
  const {
    classes: t,
    indeterminate: n,
    color: r,
    size: o
  } = e, i = {
    root: ["root", n && "indeterminate", `color${Ee(r)}`, `size${Ee(o)}`]
  }, s = At(i, JM, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...s
  };
}, tA = Ae(ku, {
  shouldForwardProp: (e) => Vr(e) || e === "classes",
  name: "MuiCheckbox",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.indeterminate && t.indeterminate, t[`size${Ee(n.size)}`], n.color !== "default" && t[`color${Ee(n.color)}`]];
  }
})(tt(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  variants: [{
    props: {
      color: "default",
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : on(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(xn()).map(([t]) => ({
    props: {
      color: t,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : on(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(xn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${Dd.checked}, &.${Dd.indeterminate}`]: {
        color: (e.vars || e).palette[t].main
      },
      [`&.${Dd.disabled}`]: {
        color: (e.vars || e).palette.action.disabled
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
}))), nA = /* @__PURE__ */ N(ZM, {}), rA = /* @__PURE__ */ N(XM, {}), oA = /* @__PURE__ */ N(QM, {}), Cw = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiCheckbox"
  }), {
    checkedIcon: o = nA,
    color: i = "primary",
    icon: s = rA,
    indeterminate: l = !1,
    indeterminateIcon: c = oA,
    inputProps: u,
    size: f = "medium",
    disableRipple: d = !1,
    className: p,
    slots: h = {},
    slotProps: g = {},
    ...m
  } = r, y = l ? c : s, x = l ? c : o, E = {
    ...r,
    disableRipple: d,
    color: i,
    indeterminate: l,
    size: f
  }, v = eA(E), w = g.input ?? u, [S, T] = pt("root", {
    ref: n,
    elementType: tA,
    className: Oe(v.root, p),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: h,
      slotProps: g,
      ...m
    },
    ownerState: E,
    additionalProps: {
      type: "checkbox",
      icon: /* @__PURE__ */ M.cloneElement(y, {
        fontSize: y.props.fontSize ?? f
      }),
      checkedIcon: /* @__PURE__ */ M.cloneElement(x, {
        fontSize: x.props.fontSize ?? f
      }),
      disableRipple: d,
      slots: h,
      slotProps: {
        input: gh(typeof w == "function" ? w(E) : w, {
          "data-indeterminate": l
        })
      }
    }
  });
  return /* @__PURE__ */ N(S, {
    ...T,
    classes: v
  });
});
process.env.NODE_ENV !== "production" && (Cw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * The icon to display when the component is checked.
   * @default <CheckBoxIcon />
   */
  checkedIcon: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: a.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <CheckBoxOutlineBlankIcon />
   */
  icon: a.node,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the `input`.
   * @default false
   */
  indeterminate: a.bool,
  /**
   * The icon to display when the component is indeterminate.
   * @default <IndeterminateCheckBoxIcon />
   */
  indeterminateIcon: a.node,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: a.object,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: a.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: a.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense checkbox styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    input: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: a.any
});
const Xi = ve(
  ({ label: e, elementId: t, tooltip: n, isDisabled: r, isError: o, isRequired: i }) => {
    const { textCommonStyles: s } = bu({
      isTitle: !1,
      isLabel: !0,
      textColor: r ? "disabled" : o ? "error" : "auto"
    });
    return /* @__PURE__ */ we(
      Br,
      {
        className: "VenomousUI-Label",
        component: "label",
        htmlFor: t,
        sx: {
          ...s,
          cursor: r ? "not-allowed" : "pointer",
          display: "flex",
          alignItems: "center"
        },
        children: [
          /* @__PURE__ */ N(
            Br,
            {
              component: "i",
              sx: {
                width: "14px",
                marginLeft: "-14px",
                fontSize: "1.5rem",
                transform: "translateY(0.25rem)",
                opacity: i ? 1 : 0,
                color: "error.main"
              },
              children: "*"
            }
          ),
          e,
          n && /* @__PURE__ */ N(mh, { title: n, arrow: !0, placement: "top", children: /* @__PURE__ */ N(
            hr,
            {
              icon: "solar:info-circle-bold",
              width: 16,
              color: o ? "error" : "primary",
              ml: "4px"
            }
          ) })
        ]
      }
    );
  }
);
Xi.displayName = "Label";
const Ru = ve(
  ({ startLabel: e, endLabel: t, labelsDirection: n = "row", renderElement: r, isDisabled: o, isError: i }) => {
    const s = G0();
    return /* @__PURE__ */ we(en, { className: "VenomousUI-Labels", gap: 0, row: n === "row", children: [
      e && /* @__PURE__ */ N(Xi, { label: e, elementId: s, isDisabled: o, isError: i }),
      r(s),
      t && /* @__PURE__ */ N(Xi, { label: t, elementId: s, isDisabled: o, isError: i })
    ] });
  }
);
Ru.displayName = "Labels";
const Ow = ve(
  ({ value: e, onChange: t, isDisabled: n, isError: r, label: o, labelDirection: i = "end" }) => {
    const s = $e(
      (l) => /* @__PURE__ */ N(
        Cw,
        {
          id: l,
          checked: e,
          onChange: (c) => t(c.target.checked),
          disabled: n,
          icon: /* @__PURE__ */ N(iA, { isDisabled: n, isError: r }),
          checkedIcon: /* @__PURE__ */ N(sA, { isDisabled: n, isError: r }),
          sx: {
            "& .MuiSwitch-track": { transition: "background-color 0s" },
            "& svg.MuiSvgIcon-root": { transform: "translate(-1px, 0px)" }
          }
        }
      ),
      [e, t, n, r]
    );
    return o ? /* @__PURE__ */ N(
      Ru,
      {
        labelsDirection: "row",
        startLabel: i === "start" ? o : "",
        endLabel: i === "end" ? o : "",
        isDisabled: n,
        isError: r,
        renderElement: s
      }
    ) : s();
  }
);
Ow.displayName = "Checkbox";
const iA = ve(
  ({ isDisabled: e, isError: t }) => /* @__PURE__ */ N(
    zi,
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "32",
      height: "32",
      viewBox: "0 0 20 20",
      sx: {
        color: (n) => t ? n.palette.error.main : e ? n.palette.action.disabled : "auto"
      },
      children: /* @__PURE__ */ N(
        "path",
        {
          fill: "currentColor",
          d: "M3 6a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3zm3-2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"
        }
      )
    }
  )
), sA = ve(
  ({ isDisabled: e, isError: t }) => /* @__PURE__ */ N(
    zi,
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "32",
      height: "32",
      viewBox: "0 0 24 24",
      sx: {
        color: (n) => t ? n.palette.error.main : e ? n.palette.action.disabled : "auto"
      },
      children: /* @__PURE__ */ N(
        "path",
        {
          fill: "currentColor",
          d: "M6.25 3A3.25 3.25 0 0 0 3 6.25v11.5A3.25 3.25 0 0 0 6.25 21h11.5A3.25 3.25 0 0 0 21 17.75V6.25A3.25 3.25 0 0 0 17.75 3zm11.03 6.28l-6.754 6.747a.75.75 0 0 1-1.06 0L6.72 13.28a.75.75 0 0 1 1.06-1.06l2.217 2.216l6.223-6.217a.75.75 0 1 1 1.06 1.062"
        }
      )
    }
  )
);
var Sy;
const aA = Ae("fieldset", {
  shouldForwardProp: Vr
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), lA = Ae("legend", {
  shouldForwardProp: Vr
})(tt(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function kw(e) {
  const {
    children: t,
    classes: n,
    className: r,
    label: o,
    notched: i,
    ...s
  } = e, l = o != null && o !== "", c = {
    ...e,
    notched: i,
    withLabel: l
  };
  return /* @__PURE__ */ N(aA, {
    "aria-hidden": !0,
    className: r,
    ownerState: c,
    ...s,
    children: /* @__PURE__ */ N(lA, {
      ownerState: c,
      children: l ? /* @__PURE__ */ N("span", {
        children: o
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        Sy || (Sy = /* @__PURE__ */ N("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (kw.propTypes = {
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The label.
   */
  label: a.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: a.bool.isRequired,
  /**
   * @ignore
   */
  style: a.object
});
function Rw({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((r, o) => (r[o] = e[o], n && typeof e[o] > "u" && (r[o] = n[o]), r), {});
}
function Ol(e) {
  return parseInt(e, 10) || 0;
}
const cA = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function uA(e) {
  for (const t in e)
    return !1;
  return !0;
}
function Ey(e) {
  return uA(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const Nw = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    onChange: r,
    maxRows: o,
    minRows: i = 1,
    style: s,
    value: l,
    ...c
  } = t, {
    current: u
  } = M.useRef(l != null), f = M.useRef(null), d = mn(n, f), p = M.useRef(null), h = M.useRef(null), g = M.useCallback(() => {
    const v = f.current, w = h.current;
    if (!v || !w)
      return;
    const T = Dr(v).getComputedStyle(v);
    if (T.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    w.style.width = T.width, w.value = v.value || t.placeholder || "x", w.value.slice(-1) === `
` && (w.value += " ");
    const C = T.boxSizing, R = Ol(T.paddingBottom) + Ol(T.paddingTop), I = Ol(T.borderBottomWidth) + Ol(T.borderTopWidth), b = w.scrollHeight;
    w.value = "x";
    const k = w.scrollHeight;
    let P = b;
    i && (P = Math.max(Number(i) * k, P)), o && (P = Math.min(Number(o) * k, P)), P = Math.max(P, k);
    const A = P + (C === "border-box" ? R + I : 0), O = Math.abs(P - b) <= 1;
    return {
      outerHeightStyle: A,
      overflowing: O
    };
  }, [o, i, t.placeholder]), m = Ir(() => {
    const v = f.current, w = g();
    if (!v || !w || Ey(w))
      return !1;
    const S = w.outerHeightStyle;
    return p.current != null && p.current !== S;
  }), y = M.useCallback(() => {
    const v = f.current, w = g();
    if (!v || !w || Ey(w))
      return;
    const S = w.outerHeightStyle;
    p.current !== S && (p.current = S, v.style.height = `${S}px`), v.style.overflow = w.overflowing ? "hidden" : "";
  }, [g]), x = M.useRef(-1);
  Ar(() => {
    const v = Wp(y), w = f == null ? void 0 : f.current;
    if (!w)
      return;
    const S = Dr(w);
    S.addEventListener("resize", v);
    let T;
    return typeof ResizeObserver < "u" && (T = new ResizeObserver(() => {
      m() && (T.unobserve(w), cancelAnimationFrame(x.current), y(), x.current = requestAnimationFrame(() => {
        T.observe(w);
      }));
    }), T.observe(w)), () => {
      v.clear(), cancelAnimationFrame(x.current), S.removeEventListener("resize", v), T && T.disconnect();
    };
  }, [g, y, m]), Ar(() => {
    y();
  });
  const E = (v) => {
    u || y(), r && r(v);
  };
  return /* @__PURE__ */ we(M.Fragment, {
    children: [/* @__PURE__ */ N("textarea", {
      value: l,
      onChange: E,
      ref: d,
      rows: i,
      style: s,
      ...c
    }), /* @__PURE__ */ N("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: h,
      tabIndex: -1,
      style: {
        ...cA.shadow,
        ...s,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (Nw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: a.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  onChange: a.func,
  /**
   * @ignore
   */
  placeholder: a.string,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * @ignore
   */
  value: a.oneOfType([a.arrayOf(a.string), a.number, a.string])
});
function Ty(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function dA(e, t = !1) {
  return e && (Ty(e.value) && e.value !== "" || t && Ty(e.defaultValue) && e.defaultValue !== "");
}
function fA(e) {
  return Et("MuiInputBase", e);
}
const Cc = Rt("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var Cy;
const $w = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${Ee(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, Pw = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, pA = (e) => {
  const {
    classes: t,
    color: n,
    disabled: r,
    error: o,
    endAdornment: i,
    focused: s,
    formControl: l,
    fullWidth: c,
    hiddenLabel: u,
    multiline: f,
    readOnly: d,
    size: p,
    startAdornment: h,
    type: g
  } = e, m = {
    root: ["root", `color${Ee(n)}`, r && "disabled", o && "error", c && "fullWidth", s && "focused", l && "formControl", p && p !== "medium" && `size${Ee(p)}`, f && "multiline", h && "adornedStart", i && "adornedEnd", u && "hiddenLabel", d && "readOnly"],
    input: ["input", r && "disabled", g === "search" && "inputTypeSearch", f && "inputMultiline", p === "small" && "inputSizeSmall", u && "inputHiddenLabel", h && "inputAdornedStart", i && "inputAdornedEnd", d && "readOnly"]
  };
  return At(m, fA, t);
}, Iw = Ae("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: $w
})(tt(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${Cc.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), _w = Ae("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: Pw
})(tt(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, r = {
    opacity: "0 !important"
  }, o = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${Cc.formControl} &`]: {
      "&::-webkit-input-placeholder": r,
      "&::-moz-placeholder": r,
      // Firefox 19+
      "&::-ms-input-placeholder": r,
      // Edge
      "&:focus::-webkit-input-placeholder": o,
      "&:focus::-moz-placeholder": o,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": o
      // Edge
    },
    [`&.${Cc.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: i
      }) => !i.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: i
      }) => i.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), Oy = Jp({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), Mw = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": o,
    autoComplete: i,
    autoFocus: s,
    className: l,
    color: c,
    components: u = {},
    componentsProps: f = {},
    defaultValue: d,
    disabled: p,
    disableInjectingGlobalStyles: h,
    endAdornment: g,
    error: m,
    fullWidth: y = !1,
    id: x,
    inputComponent: E = "input",
    inputProps: v = {},
    inputRef: w,
    margin: S,
    maxRows: T,
    minRows: C,
    multiline: R = !1,
    name: I,
    onBlur: b,
    onChange: k,
    onClick: P,
    onFocus: A,
    onKeyDown: O,
    onKeyUp: _,
    placeholder: $,
    readOnly: D,
    renderSuffix: z,
    rows: B,
    size: L,
    slotProps: F = {},
    slots: W = {},
    startAdornment: U,
    type: Z = "text",
    value: Q,
    ...ee
  } = r, te = v.value != null ? v.value : Q, {
    current: q
  } = M.useRef(te != null), oe = M.useRef(), G = M.useCallback((le) => {
    process.env.NODE_ENV !== "production" && le && le.nodeName !== "INPUT" && !le.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), ne = mn(oe, w, v.ref, G), [j, pe] = M.useState(!1), ce = Ou();
  process.env.NODE_ENV !== "production" && M.useEffect(() => {
    if (ce)
      return ce.registerEffect();
  }, [ce]);
  const be = Rw({
    props: r,
    muiFormControl: ce,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  be.focused = ce ? ce.focused : j, M.useEffect(() => {
    !ce && p && j && (pe(!1), b && b());
  }, [ce, p, j, b]);
  const Pe = ce && ce.onFilled, Me = ce && ce.onEmpty, Ie = M.useCallback((le) => {
    dA(le) ? Pe && Pe() : Me && Me();
  }, [Pe, Me]);
  Ar(() => {
    q && Ie({
      value: te
    });
  }, [te, Ie, q]);
  const Ne = (le) => {
    A && A(le), v.onFocus && v.onFocus(le), ce && ce.onFocus ? ce.onFocus(le) : pe(!0);
  }, Fe = (le) => {
    b && b(le), v.onBlur && v.onBlur(le), ce && ce.onBlur ? ce.onBlur(le) : pe(!1);
  }, ke = (le, ...se) => {
    if (!q) {
      const ae = le.target || oe.current;
      if (ae == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : eo(1));
      Ie({
        value: ae.value
      });
    }
    v.onChange && v.onChange(le, ...se), k && k(le, ...se);
  };
  M.useEffect(() => {
    Ie(oe.current);
  }, []);
  const V = (le) => {
    oe.current && le.currentTarget === le.target && oe.current.focus(), P && P(le);
  };
  let J = E, ie = v;
  R && J === "input" && (B ? (process.env.NODE_ENV !== "production" && (C || T) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), ie = {
    type: void 0,
    minRows: B,
    maxRows: B,
    ...ie
  }) : ie = {
    type: void 0,
    maxRows: T,
    minRows: C,
    ...ie
  }, J = Nw);
  const X = (le) => {
    Ie(le.animationName === "mui-auto-fill-cancel" ? oe.current : {
      value: "x"
    });
  };
  M.useEffect(() => {
    ce && ce.setAdornedStart(!!U);
  }, [ce, U]);
  const H = {
    ...r,
    color: be.color || "primary",
    disabled: be.disabled,
    endAdornment: g,
    error: be.error,
    focused: be.focused,
    formControl: ce,
    fullWidth: y,
    hiddenLabel: be.hiddenLabel,
    multiline: R,
    size: be.size,
    startAdornment: U,
    type: Z
  }, K = pA(H), re = W.root || u.Root || Iw, he = F.root || f.root || {}, me = W.input || u.Input || _w;
  return ie = {
    ...ie,
    ...F.input ?? f.input
  }, /* @__PURE__ */ we(M.Fragment, {
    children: [!h && typeof Oy == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (Cy || (Cy = /* @__PURE__ */ N(Oy, {}))), /* @__PURE__ */ we(re, {
      ...he,
      ref: n,
      onClick: V,
      ...ee,
      ...!Yf(re) && {
        ownerState: {
          ...H,
          ...he.ownerState
        }
      },
      className: Oe(K.root, he.className, l, D && "MuiInputBase-readOnly"),
      children: [U, /* @__PURE__ */ N(Ih.Provider, {
        value: null,
        children: /* @__PURE__ */ N(me, {
          "aria-invalid": be.error,
          "aria-describedby": o,
          autoComplete: i,
          autoFocus: s,
          defaultValue: d,
          disabled: be.disabled,
          id: x,
          onAnimationStart: X,
          name: I,
          placeholder: $,
          readOnly: D,
          required: be.required,
          rows: B,
          value: te,
          onKeyDown: O,
          onKeyUp: _,
          type: Z,
          ...ie,
          ...!Yf(me) && {
            as: J,
            ownerState: {
              ...H,
              ...ie.ownerState
            }
          },
          ref: ne,
          className: Oe(K.input, ie.className, D && "MuiInputBase-readOnly"),
          onBlur: Fe,
          onChange: ke,
          onFocus: Ne
        })
      }), g, z ? z({
        ...be,
        startAdornment: U
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (Mw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": a.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: Hp,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: co,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: a.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * @ignore
   */
  onKeyUp: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * @ignore
   */
  renderSuffix: a.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The size of the component.
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
function hA(e) {
  return Et("MuiOutlinedInput", e);
}
const xr = {
  ...Cc,
  ...Rt("MuiOutlinedInput", ["root", "notchedOutline", "input"])
}, mA = (e) => {
  const {
    classes: t
  } = e, r = At({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, hA, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...r
  };
}, gA = Ae(Iw, {
  shouldForwardProp: (e) => Vr(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: $w
})(tt(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${xr.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${xr.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${xr.focused} .${xr.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(xn()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${xr.focused} .${xr.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${xr.error} .${xr.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${xr.disabled} .${xr.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: r
      }) => n.multiline && r === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), yA = Ae(kw, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(tt(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), bA = Ae(_w, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: Pw
})(tt(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), _h = /* @__PURE__ */ M.forwardRef(function(t, n) {
  var r;
  const o = Nt({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: i = {},
    fullWidth: s = !1,
    inputComponent: l = "input",
    label: c,
    multiline: u = !1,
    notched: f,
    slots: d = {},
    type: p = "text",
    ...h
  } = o, g = mA(o), m = Ou(), y = Rw({
    props: o,
    muiFormControl: m,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), x = {
    ...o,
    color: y.color || "primary",
    disabled: y.disabled,
    error: y.error,
    focused: y.focused,
    formControl: m,
    fullWidth: s,
    hiddenLabel: y.hiddenLabel,
    multiline: u,
    size: y.size,
    type: p
  }, E = d.root ?? i.Root ?? gA, v = d.input ?? i.Input ?? bA;
  return /* @__PURE__ */ N(Mw, {
    slots: {
      root: E,
      input: v
    },
    renderSuffix: (w) => /* @__PURE__ */ N(yA, {
      ownerState: x,
      className: g.notchedOutline,
      label: c != null && c !== "" && y.required ? r || (r = /* @__PURE__ */ we(M.Fragment, {
        children: [c, " ", "*"]
      })) : c,
      notched: typeof f < "u" ? f : !!(w.startAdornment || w.filled || w.focused)
    }),
    fullWidth: s,
    inputComponent: l,
    multiline: u,
    ref: n,
    type: p,
    ...h,
    classes: {
      ...g,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (_h.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: co,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: a.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: a.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
_h.muiName = "Input";
function Aw({
  isDisabled: e,
  isError: t
}) {
  return {
    inputCommonStyle: Ye(
      () => ({
        borderRadius: "8px",
        minWidth: "200px",
        "& input": {
          cursor: e ? "not-allowed" : "text",
          color: (r) => e ? "disabled" : t ? r.palette.error.main : "inherit"
        }
      }),
      [e, t]
    )
  };
}
const Nu = ve(
  ({
    label: e = "",
    tooltip: t,
    fullWidth: n = !1,
    value: r,
    onChange: o,
    isRequired: i,
    isDisabled: s,
    isError: l,
    errorMessage: c = "",
    sx: u,
    ...f
  }) => {
    const d = G0(), { inputCommonStyle: p } = Aw({
      isDisabled: s,
      isError: l
    }), { textCommonStyles: h } = bu({
      isTitle: !1,
      isLabel: !0,
      textColor: s ? "disabled" : l ? "error" : "auto"
    });
    return /* @__PURE__ */ we(en, { gap: 0, width: n ? "100%" : "auto", children: [
      e && /* @__PURE__ */ N(
        Xi,
        {
          label: e,
          elementId: d,
          tooltip: t,
          isRequired: i,
          isDisabled: s,
          isError: l
        }
      ),
      /* @__PURE__ */ N(
        _h,
        {
          id: d,
          autoComplete: "off",
          fullWidth: n,
          size: "small",
          error: l,
          disabled: s,
          value: r,
          onChange: (g) => o(g.target.value),
          sx: { ...p, ...u },
          ...f
        }
      ),
      l && /* @__PURE__ */ N(
        wn,
        {
          text: l ? c : "",
          isLabel: !0,
          sx: { ...h, minHeight: "24px" }
        }
      )
    ] });
  }
);
Nu.displayName = "Input";
const Dw = ve(
  ({ isError: e, fullWidth: t, value: n = 0, onChange: r, sx: o, min: i = 0, max: s = 1e3, step: l = 1, ...c }) => {
    const u = $e(
      (f) => {
        if (!f || isNaN(parseInt(f, 10))) {
          r(i);
          return;
        }
        const d = Math.abs(parseInt(f, 10));
        r(d);
      },
      [i, r]
    );
    return /* @__PURE__ */ N(
      Nu,
      {
        type: "number",
        fullWidth: t,
        isError: e,
        value: Math.abs(n).toString(),
        onChange: u,
        sx: {
          ...o
        },
        slotProps: {
          input: {
            type: "number",
            min: i,
            max: s,
            step: l
          }
        },
        ...c
      }
    );
  }
);
Dw.displayName = "Number";
function zr(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((r) => n.searchParams.append("args[]", r)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
const $u = "$$material";
function vA(e) {
  return e == null || Object.keys(e).length === 0;
}
function Bw(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e;
  return /* @__PURE__ */ N(bv, {
    styles: typeof t == "function" ? (o) => t(vA(o) ? n : o) : t
  });
}
process.env.NODE_ENV !== "production" && (Bw.propTypes = {
  defaultTheme: a.object,
  styles: a.oneOfType([a.array, a.string, a.object, a.func])
});
/**
 * @mui/styled-engine v7.0.2
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function Lw(e, t) {
  const n = dc(e, t);
  return process.env.NODE_ENV !== "production" ? (...r) => {
    const o = typeof e == "string" ? `"${e}"` : "component";
    return r.length === 0 ? console.error([`MUI: Seems like you called \`styled(${o})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : r.some((i) => i === void 0) && console.error(`MUI: the styled(${o})(...args) API requires all its args to be defined.`), n(...r);
  } : n;
}
function xA(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const ky = [];
function Ry(e) {
  return ky[0] = e, ls(ky);
}
function Rr(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function Fw(e) {
  if (/* @__PURE__ */ M.isValidElement(e) || pr.isValidElementType(e) || !Rr(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = Fw(e[n]);
  }), t;
}
function hn(e, t, n = {
  clone: !0
}) {
  const r = n.clone ? {
    ...e
  } : e;
  return Rr(e) && Rr(t) && Object.keys(t).forEach((o) => {
    /* @__PURE__ */ M.isValidElement(t[o]) || pr.isValidElementType(t[o]) ? r[o] = t[o] : Rr(t[o]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, o) && Rr(e[o]) ? r[o] = hn(e[o], t[o], n) : n.clone ? r[o] = Rr(t[o]) ? Fw(t[o]) : t[o] : r[o] = t[o];
  }), r;
}
const wA = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, r) => n.val - r.val), t.reduce((n, r) => ({
    ...n,
    [r.key]: r.val
  }), {});
};
function SA(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: r = 5,
    ...o
  } = e, i = wA(t), s = Object.keys(i);
  function l(p) {
    return `@media (min-width:${typeof t[p] == "number" ? t[p] : p}${n})`;
  }
  function c(p) {
    return `@media (max-width:${(typeof t[p] == "number" ? t[p] : p) - r / 100}${n})`;
  }
  function u(p, h) {
    const g = s.indexOf(h);
    return `@media (min-width:${typeof t[p] == "number" ? t[p] : p}${n}) and (max-width:${(g !== -1 && typeof t[s[g]] == "number" ? t[s[g]] : h) - r / 100}${n})`;
  }
  function f(p) {
    return s.indexOf(p) + 1 < s.length ? u(p, s[s.indexOf(p) + 1]) : l(p);
  }
  function d(p) {
    const h = s.indexOf(p);
    return h === 0 ? l(s[1]) : h === s.length - 1 ? c(s[h]) : u(p, s[s.indexOf(p) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: s,
    values: i,
    up: l,
    down: c,
    between: u,
    only: f,
    not: d,
    unit: n,
    ...o
  };
}
function EA(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((r) => r.startsWith("@container")).sort((r, o) => {
    var s, l;
    const i = /min-width:\s*([0-9.]+)/;
    return +(((s = r.match(i)) == null ? void 0 : s[1]) || 0) - +(((l = o.match(i)) == null ? void 0 : l[1]) || 0);
  });
  return n.length ? n.reduce((r, o) => {
    const i = t[o];
    return delete r[o], r[o] = i, r;
  }, {
    ...t
  }) : t;
}
function TA(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function CA(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : zr(18, `(${t})`));
    return null;
  }
  const [, r, o] = n, i = Number.isNaN(+r) ? r || 0 : +r;
  return e.containerQueries(o).up(i);
}
function OA(e) {
  const t = (i, s) => i.replace("@media", s ? `@container ${s}` : "@container");
  function n(i, s) {
    i.up = (...l) => t(e.breakpoints.up(...l), s), i.down = (...l) => t(e.breakpoints.down(...l), s), i.between = (...l) => t(e.breakpoints.between(...l), s), i.only = (...l) => t(e.breakpoints.only(...l), s), i.not = (...l) => {
      const c = t(e.breakpoints.not(...l), s);
      return c.includes("not all and") ? c.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : c;
    };
  }
  const r = {}, o = (i) => (n(r, i), r);
  return n(o), {
    ...e,
    containerQueries: o
  };
}
const kA = {
  borderRadius: 4
}, Bo = process.env.NODE_ENV !== "production" ? a.oneOfType([a.number, a.string, a.object, a.array]) : {};
function ta(e, t) {
  return t ? hn(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const Pu = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, Ny = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${Pu[e]}px)`
}, RA = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : Pu[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function io(e, t, n) {
  const r = e.theme || {};
  if (Array.isArray(t)) {
    const i = r.breakpoints || Ny;
    return t.reduce((s, l, c) => (s[i.up(i.keys[c])] = n(t[c]), s), {});
  }
  if (typeof t == "object") {
    const i = r.breakpoints || Ny;
    return Object.keys(t).reduce((s, l) => {
      if (TA(i.keys, l)) {
        const c = CA(r.containerQueries ? r : RA, l);
        c && (s[c] = n(t[l], l));
      } else if (Object.keys(i.values || Pu).includes(l)) {
        const c = i.up(l);
        s[c] = n(t[l], l);
      } else {
        const c = l;
        s[c] = t[c];
      }
      return s;
    }, {});
  }
  return n(t);
}
function NA(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((r, o) => {
    const i = e.up(o);
    return r[i] = {}, r;
  }, {})) || {};
}
function $A(e, t) {
  return e.reduce((n, r) => {
    const o = n[r];
    return (!o || Object.keys(o).length === 0) && delete n[r], n;
  }, t);
}
function Wt(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : zr(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function Iu(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const r = `vars.${t}`.split(".").reduce((o, i) => o && o[i] ? o[i] : null, e);
    if (r != null)
      return r;
  }
  return t.split(".").reduce((r, o) => r && r[o] != null ? r[o] : null, e);
}
function Oc(e, t, n, r = n) {
  let o;
  return typeof e == "function" ? o = e(n) : Array.isArray(e) ? o = e[n] || r : o = Iu(e, n) || r, t && (o = t(o, r, e)), o;
}
function qt(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: r,
    transform: o
  } = e, i = (s) => {
    if (s[t] == null)
      return null;
    const l = s[t], c = s.theme, u = Iu(c, r) || {};
    return io(s, l, (d) => {
      let p = Oc(u, o, d);
      return d === p && typeof d == "string" && (p = Oc(u, o, `${t}${d === "default" ? "" : Wt(d)}`, d)), n === !1 ? p : {
        [n]: p
      };
    });
  };
  return i.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: Bo
  } : {}, i.filterProps = [t], i;
}
function PA(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const IA = {
  m: "margin",
  p: "padding"
}, _A = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, $y = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, MA = PA((e) => {
  if (e.length > 2)
    if ($y[e])
      e = $y[e];
    else
      return [e];
  const [t, n] = e.split(""), r = IA[t], o = _A[n] || "";
  return Array.isArray(o) ? o.map((i) => r + i) : [r + o];
}), _u = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], Mu = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], AA = [..._u, ...Mu];
function Ya(e, t, n, r) {
  const o = Iu(e, t, !0) ?? n;
  return typeof o == "number" || typeof o == "string" ? (i) => typeof i == "string" ? i : (process.env.NODE_ENV !== "production" && typeof i != "number" && console.error(`MUI: Expected ${r} argument to be a number or a string, got ${i}.`), typeof o == "string" ? o.startsWith("var(") && i === 0 ? 0 : o.startsWith("var(") && i === 1 ? o : `calc(${i} * ${o})` : o * i) : Array.isArray(o) ? (i) => {
    if (typeof i == "string")
      return i;
    const s = Math.abs(i);
    process.env.NODE_ENV !== "production" && (Number.isInteger(s) ? s > o.length - 1 && console.error([`MUI: The value provided (${s}) overflows.`, `The supported values are: ${JSON.stringify(o)}.`, `${s} > ${o.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const l = o[s];
    return i >= 0 ? l : typeof l == "number" ? -l : typeof l == "string" && l.startsWith("var(") ? `calc(-1 * ${l})` : `-${l}`;
  } : typeof o == "function" ? o : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${o}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function Mh(e) {
  return Ya(e, "spacing", 8, "spacing");
}
function Ka(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function DA(e, t) {
  return (n) => e.reduce((r, o) => (r[o] = Ka(t, n), r), {});
}
function BA(e, t, n, r) {
  if (!t.includes(n))
    return null;
  const o = MA(n), i = DA(o, r), s = e[n];
  return io(e, s, i);
}
function zw(e, t) {
  const n = Mh(e.theme);
  return Object.keys(e).map((r) => BA(e, t, r, n)).reduce(ta, {});
}
function Ft(e) {
  return zw(e, _u);
}
Ft.propTypes = process.env.NODE_ENV !== "production" ? _u.reduce((e, t) => (e[t] = Bo, e), {}) : {};
Ft.filterProps = _u;
function zt(e) {
  return zw(e, Mu);
}
zt.propTypes = process.env.NODE_ENV !== "production" ? Mu.reduce((e, t) => (e[t] = Bo, e), {}) : {};
zt.filterProps = Mu;
process.env.NODE_ENV !== "production" && AA.reduce((e, t) => (e[t] = Bo, e), {});
function Vw(e = 8, t = Mh({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...r) => (process.env.NODE_ENV !== "production" && (r.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${r.length}`)), (r.length === 0 ? [1] : r).map((i) => {
    const s = t(i);
    return typeof s == "number" ? `${s}px` : s;
  }).join(" "));
  return n.mui = !0, n;
}
function Au(...e) {
  const t = e.reduce((r, o) => (o.filterProps.forEach((i) => {
    r[i] = o;
  }), r), {}), n = (r) => Object.keys(r).reduce((o, i) => t[i] ? ta(o, t[i](r)) : o, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((r, o) => Object.assign(r, o.propTypes), {}) : {}, n.filterProps = e.reduce((r, o) => r.concat(o.filterProps), []), n;
}
function Xn(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function ir(e, t) {
  return qt({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const LA = ir("border", Xn), FA = ir("borderTop", Xn), zA = ir("borderRight", Xn), VA = ir("borderBottom", Xn), jA = ir("borderLeft", Xn), HA = ir("borderColor"), WA = ir("borderTopColor"), UA = ir("borderRightColor"), qA = ir("borderBottomColor"), YA = ir("borderLeftColor"), KA = ir("outline", Xn), GA = ir("outlineColor"), Du = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = Ya(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (r) => ({
      borderRadius: Ka(t, r)
    });
    return io(e, e.borderRadius, n);
  }
  return null;
};
Du.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: Bo
} : {};
Du.filterProps = ["borderRadius"];
Au(LA, FA, zA, VA, jA, HA, WA, UA, qA, YA, Du, KA, GA);
const Bu = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = Ya(e.theme, "spacing", 8, "gap"), n = (r) => ({
      gap: Ka(t, r)
    });
    return io(e, e.gap, n);
  }
  return null;
};
Bu.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: Bo
} : {};
Bu.filterProps = ["gap"];
const Lu = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = Ya(e.theme, "spacing", 8, "columnGap"), n = (r) => ({
      columnGap: Ka(t, r)
    });
    return io(e, e.columnGap, n);
  }
  return null;
};
Lu.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: Bo
} : {};
Lu.filterProps = ["columnGap"];
const Fu = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = Ya(e.theme, "spacing", 8, "rowGap"), n = (r) => ({
      rowGap: Ka(t, r)
    });
    return io(e, e.rowGap, n);
  }
  return null;
};
Fu.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: Bo
} : {};
Fu.filterProps = ["rowGap"];
const XA = qt({
  prop: "gridColumn"
}), ZA = qt({
  prop: "gridRow"
}), QA = qt({
  prop: "gridAutoFlow"
}), JA = qt({
  prop: "gridAutoColumns"
}), e2 = qt({
  prop: "gridAutoRows"
}), t2 = qt({
  prop: "gridTemplateColumns"
}), n2 = qt({
  prop: "gridTemplateRows"
}), r2 = qt({
  prop: "gridTemplateAreas"
}), o2 = qt({
  prop: "gridArea"
});
Au(Bu, Lu, Fu, XA, ZA, QA, JA, e2, t2, n2, r2, o2);
function Ai(e, t) {
  return t === "grey" ? t : e;
}
const i2 = qt({
  prop: "color",
  themeKey: "palette",
  transform: Ai
}), s2 = qt({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: Ai
}), a2 = qt({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: Ai
});
Au(i2, s2, a2);
function Ln(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const l2 = qt({
  prop: "width",
  transform: Ln
}), Ah = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var o, i, s, l, c;
      const r = ((s = (i = (o = e.theme) == null ? void 0 : o.breakpoints) == null ? void 0 : i.values) == null ? void 0 : s[n]) || Pu[n];
      return r ? ((c = (l = e.theme) == null ? void 0 : l.breakpoints) == null ? void 0 : c.unit) !== "px" ? {
        maxWidth: `${r}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: r
      } : {
        maxWidth: Ln(n)
      };
    };
    return io(e, e.maxWidth, t);
  }
  return null;
};
Ah.filterProps = ["maxWidth"];
const c2 = qt({
  prop: "minWidth",
  transform: Ln
}), u2 = qt({
  prop: "height",
  transform: Ln
}), d2 = qt({
  prop: "maxHeight",
  transform: Ln
}), f2 = qt({
  prop: "minHeight",
  transform: Ln
});
qt({
  prop: "size",
  cssProperty: "width",
  transform: Ln
});
qt({
  prop: "size",
  cssProperty: "height",
  transform: Ln
});
const p2 = qt({
  prop: "boxSizing"
});
Au(l2, Ah, c2, u2, d2, f2, p2);
const Ga = {
  // borders
  border: {
    themeKey: "borders",
    transform: Xn
  },
  borderTop: {
    themeKey: "borders",
    transform: Xn
  },
  borderRight: {
    themeKey: "borders",
    transform: Xn
  },
  borderBottom: {
    themeKey: "borders",
    transform: Xn
  },
  borderLeft: {
    themeKey: "borders",
    transform: Xn
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: Xn
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: Du
  },
  // palette
  color: {
    themeKey: "palette",
    transform: Ai
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: Ai
  },
  backgroundColor: {
    themeKey: "palette",
    transform: Ai
  },
  // spacing
  p: {
    style: zt
  },
  pt: {
    style: zt
  },
  pr: {
    style: zt
  },
  pb: {
    style: zt
  },
  pl: {
    style: zt
  },
  px: {
    style: zt
  },
  py: {
    style: zt
  },
  padding: {
    style: zt
  },
  paddingTop: {
    style: zt
  },
  paddingRight: {
    style: zt
  },
  paddingBottom: {
    style: zt
  },
  paddingLeft: {
    style: zt
  },
  paddingX: {
    style: zt
  },
  paddingY: {
    style: zt
  },
  paddingInline: {
    style: zt
  },
  paddingInlineStart: {
    style: zt
  },
  paddingInlineEnd: {
    style: zt
  },
  paddingBlock: {
    style: zt
  },
  paddingBlockStart: {
    style: zt
  },
  paddingBlockEnd: {
    style: zt
  },
  m: {
    style: Ft
  },
  mt: {
    style: Ft
  },
  mr: {
    style: Ft
  },
  mb: {
    style: Ft
  },
  ml: {
    style: Ft
  },
  mx: {
    style: Ft
  },
  my: {
    style: Ft
  },
  margin: {
    style: Ft
  },
  marginTop: {
    style: Ft
  },
  marginRight: {
    style: Ft
  },
  marginBottom: {
    style: Ft
  },
  marginLeft: {
    style: Ft
  },
  marginX: {
    style: Ft
  },
  marginY: {
    style: Ft
  },
  marginInline: {
    style: Ft
  },
  marginInlineStart: {
    style: Ft
  },
  marginInlineEnd: {
    style: Ft
  },
  marginBlock: {
    style: Ft
  },
  marginBlockStart: {
    style: Ft
  },
  marginBlockEnd: {
    style: Ft
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: Bu
  },
  rowGap: {
    style: Fu
  },
  columnGap: {
    style: Lu
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: Ln
  },
  maxWidth: {
    style: Ah
  },
  minWidth: {
    transform: Ln
  },
  height: {
    transform: Ln
  },
  maxHeight: {
    transform: Ln
  },
  minHeight: {
    transform: Ln
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function h2(...e) {
  const t = e.reduce((r, o) => r.concat(Object.keys(o)), []), n = new Set(t);
  return e.every((r) => n.size === Object.keys(r).length);
}
function m2(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function g2() {
  function e(n, r, o, i) {
    const s = {
      [n]: r,
      theme: o
    }, l = i[n];
    if (!l)
      return {
        [n]: r
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: f,
      style: d
    } = l;
    if (r == null)
      return null;
    if (u === "typography" && r === "inherit")
      return {
        [n]: r
      };
    const p = Iu(o, u) || {};
    return d ? d(s) : io(s, r, (g) => {
      let m = Oc(p, f, g);
      return g === m && typeof g == "string" && (m = Oc(p, f, `${n}${g === "default" ? "" : Wt(g)}`, g)), c === !1 ? m : {
        [c]: m
      };
    });
  }
  function t(n) {
    const {
      sx: r,
      theme: o = {}
    } = n || {};
    if (!r)
      return null;
    const i = o.unstable_sxConfig ?? Ga;
    function s(l) {
      let c = l;
      if (typeof l == "function")
        c = l(o);
      else if (typeof l != "object")
        return l;
      if (!c)
        return null;
      const u = NA(o.breakpoints), f = Object.keys(u);
      let d = u;
      return Object.keys(c).forEach((p) => {
        const h = m2(c[p], o);
        if (h != null)
          if (typeof h == "object")
            if (i[p])
              d = ta(d, e(p, h, o, i));
            else {
              const g = io({
                theme: o
              }, h, (m) => ({
                [p]: m
              }));
              h2(g, h) ? d[p] = t({
                sx: h,
                theme: o
              }) : d = ta(d, g);
            }
          else
            d = ta(d, e(p, h, o, i));
      }), EA(o, $A(f, d));
    }
    return Array.isArray(r) ? r.map(s) : s(r);
  }
  return t;
}
const ti = g2();
ti.filterProps = ["sx"];
function y2(e, t) {
  var r;
  const n = this;
  if (n.vars) {
    if (!((r = n.colorSchemes) != null && r[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let o = n.getColorSchemeSelector(e);
    return o === "&" ? t : ((o.includes("data-") || o.includes(".")) && (o = `*:where(${o.replace(/\s*&$/, "")}) &`), {
      [o]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function Dh(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: r = {},
    spacing: o,
    shape: i = {},
    ...s
  } = e, l = SA(n), c = Vw(o);
  let u = hn({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...r
    },
    spacing: c,
    shape: {
      ...kA,
      ...i
    }
  }, s);
  return u = OA(u), u.applyStyles = y2, u = t.reduce((f, d) => hn(f, d), u), u.unstable_sxConfig = {
    ...Ga,
    ...s == null ? void 0 : s.unstable_sxConfig
  }, u.unstable_sx = function(d) {
    return ti({
      sx: d,
      theme: this
    });
  }, u;
}
function b2(e) {
  return Object.keys(e).length === 0;
}
function v2(e = null) {
  const t = M.useContext(cs);
  return !t || b2(t) ? e : t;
}
const x2 = Dh();
function Bh(e = x2) {
  return v2(e);
}
function jw({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const r = Bh(n), o = typeof e == "function" ? e(t && r[t] || r) : e;
  return /* @__PURE__ */ N(Bw, {
    styles: o
  });
}
process.env.NODE_ENV !== "production" && (jw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: a.object,
  /**
   * @ignore
   */
  styles: a.oneOfType([a.array, a.func, a.number, a.object, a.string, a.bool]),
  /**
   * @ignore
   */
  themeId: a.string
});
const w2 = (e) => {
  var r;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((r = e == null ? void 0 : e.theme) == null ? void 0 : r.unstable_sxConfig) ?? Ga;
  return Object.keys(e).forEach((o) => {
    n[o] ? t.systemProps[o] = e[o] : t.otherProps[o] = e[o];
  }), t;
};
function S2(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: r,
    otherProps: o
  } = w2(n);
  let i;
  return Array.isArray(t) ? i = [r, ...t] : typeof t == "function" ? i = (...s) => {
    const l = t(...s);
    return Rr(l) ? {
      ...r,
      ...l
    } : r;
  } : i = {
    ...r,
    ...t
  }, {
    ...o,
    sx: i
  };
}
const Py = (e) => e, E2 = () => {
  let e = Py;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = Py;
    }
  };
}, Hw = E2();
function T2(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: r = "MuiBox-root",
    generateClassName: o
  } = e, i = Lw("div", {
    shouldForwardProp: (l) => l !== "theme" && l !== "sx" && l !== "as"
  })(ti);
  return /* @__PURE__ */ M.forwardRef(function(c, u) {
    const f = Bh(n), {
      className: d,
      component: p = "div",
      ...h
    } = S2(c);
    return /* @__PURE__ */ N(i, {
      as: p,
      ref: u,
      className: Oe(d, o ? o(r) : r),
      theme: t && f[t] || f,
      ...h
    });
  });
}
const C2 = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function Gt(e, t, n = "Mui") {
  const r = C2[t];
  return r ? `${n}-${r}` : `${Hw.generate(e)}-${t}`;
}
function tn(e, t, n = "Mui") {
  const r = {};
  return t.forEach((o) => {
    r[o] = Gt(e, o, n);
  }), r;
}
function Ww(e, t = "") {
  return e.displayName || e.name || t;
}
function Iy(e, t, n) {
  const r = Ww(t);
  return e.displayName || (r !== "" ? `${n}(${r})` : n);
}
function O2(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return Ww(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case pr.ForwardRef:
          return Iy(e, e.render, "ForwardRef");
        case pr.Memo:
          return Iy(e, e.type, "memo");
        default:
          return;
      }
  }
}
function Uw(e) {
  const {
    variants: t,
    ...n
  } = e, r = {
    variants: t,
    style: Ry(n),
    isProcessed: !0
  };
  return r.style === n || t && t.forEach((o) => {
    typeof o.style != "function" && (o.style = Ry(o.style));
  }), r;
}
const k2 = Dh();
function Bd(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function R2(e) {
  return e ? (t, n) => n[e] : null;
}
function N2(e, t, n) {
  e.theme = _2(e.theme) ? n : e.theme[t] || e.theme;
}
function tc(e, t) {
  const n = typeof t == "function" ? t(e) : t;
  if (Array.isArray(n))
    return n.flatMap((r) => tc(e, r));
  if (Array.isArray(n == null ? void 0 : n.variants)) {
    let r;
    if (n.isProcessed)
      r = n.style;
    else {
      const {
        variants: o,
        ...i
      } = n;
      r = i;
    }
    return qw(e, n.variants, [r]);
  }
  return n != null && n.isProcessed ? n.style : n;
}
function qw(e, t, n = []) {
  var o;
  let r;
  e: for (let i = 0; i < t.length; i += 1) {
    const s = t[i];
    if (typeof s.props == "function") {
      if (r ?? (r = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !s.props(r))
        continue;
    } else
      for (const l in s.props)
        if (e[l] !== s.props[l] && ((o = e.ownerState) == null ? void 0 : o[l]) !== s.props[l])
          continue e;
    typeof s.style == "function" ? (r ?? (r = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(s.style(r))) : n.push(s.style);
  }
  return n;
}
function $2(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = k2,
    rootShouldForwardProp: r = Bd,
    slotShouldForwardProp: o = Bd
  } = e;
  function i(l) {
    N2(l, t, n);
  }
  return (l, c = {}) => {
    xA(l, (S) => S.filter((T) => T !== ti));
    const {
      name: u,
      slot: f,
      skipVariantsResolver: d,
      skipSx: p,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: h = R2(Yw(f)),
      ...g
    } = c, m = d !== void 0 ? d : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      f && f !== "Root" && f !== "root" || !1
    ), y = p || !1;
    let x = Bd;
    f === "Root" || f === "root" ? x = r : f ? x = o : M2(l) && (x = void 0);
    const E = Lw(l, {
      shouldForwardProp: x,
      label: I2(u, f),
      ...g
    }), v = (S) => {
      if (typeof S == "function" && S.__emotion_real !== S)
        return function(C) {
          return tc(C, S);
        };
      if (Rr(S)) {
        const T = Uw(S);
        return T.variants ? function(R) {
          return tc(R, T);
        } : T.style;
      }
      return S;
    }, w = (...S) => {
      const T = [], C = S.map(v), R = [];
      if (T.push(i), u && h && R.push(function(P) {
        var $, D;
        const O = (D = ($ = P.theme.components) == null ? void 0 : $[u]) == null ? void 0 : D.styleOverrides;
        if (!O)
          return null;
        const _ = {};
        for (const z in O)
          _[z] = tc(P, O[z]);
        return h(P, _);
      }), u && !m && R.push(function(P) {
        var _, $;
        const A = P.theme, O = ($ = (_ = A == null ? void 0 : A.components) == null ? void 0 : _[u]) == null ? void 0 : $.variants;
        return O ? qw(P, O) : null;
      }), y || R.push(ti), Array.isArray(C[0])) {
        const k = C.shift(), P = new Array(T.length).fill(""), A = new Array(R.length).fill("");
        let O;
        O = [...P, ...k, ...A], O.raw = [...P, ...k.raw, ...A], T.unshift(O);
      }
      const I = [...T, ...C, ...R], b = E(...I);
      return l.muiName && (b.muiName = l.muiName), process.env.NODE_ENV !== "production" && (b.displayName = P2(u, f, l)), b;
    };
    return E.withConfig && (w.withConfig = E.withConfig), w;
  };
}
function P2(e, t, n) {
  return e ? `${e}${Wt(t || "")}` : `Styled(${O2(n)})`;
}
function I2(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${Yw(t || "Root")}`), n;
}
function _2(e) {
  for (const t in e)
    return !1;
  return !0;
}
function M2(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function Yw(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
function Kf(e, t) {
  const n = {
    ...t
  };
  for (const r in e)
    if (Object.prototype.hasOwnProperty.call(e, r)) {
      const o = r;
      if (o === "components" || o === "slots")
        n[o] = {
          ...e[o],
          ...n[o]
        };
      else if (o === "componentsProps" || o === "slotProps") {
        const i = e[o], s = t[o];
        if (!s)
          n[o] = i || {};
        else if (!i)
          n[o] = s;
        else {
          n[o] = {
            ...s
          };
          for (const l in i)
            if (Object.prototype.hasOwnProperty.call(i, l)) {
              const c = l;
              n[o][c] = Kf(i[c], s[c]);
            }
        }
      } else n[o] === void 0 && (n[o] = e[o]);
    }
  return n;
}
const ni = typeof window < "u" ? M.useLayoutEffect : M.useEffect;
function A2(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function Lh(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), A2(e, t, n);
}
function D2(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((r) => r + r)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((r, o) => o < 3 ? parseInt(r, 16) : Math.round(parseInt(r, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function ko(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return ko(D2(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : zr(9, e));
  let r = e.substring(t + 1, e.length - 1), o;
  if (n === "color") {
    if (r = r.split(" "), o = r.shift(), r.length === 4 && r[3].charAt(0) === "/" && (r[3] = r[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(o))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${o}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : zr(10, o));
  } else
    r = r.split(",");
  return r = r.map((i) => parseFloat(i)), {
    type: n,
    values: r,
    colorSpace: o
  };
}
const B2 = (e) => {
  const t = ko(e);
  return t.values.slice(0, 3).map((n, r) => t.type.includes("hsl") && r !== 0 ? `${n}%` : n).join(" ");
}, Vs = (e, t) => {
  try {
    return B2(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function zu(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: r
  } = e;
  return t.includes("rgb") ? r = r.map((o, i) => i < 3 ? parseInt(o, 10) : o) : t.includes("hsl") && (r[1] = `${r[1]}%`, r[2] = `${r[2]}%`), t.includes("color") ? r = `${n} ${r.join(" ")}` : r = `${r.join(", ")}`, `${t}(${r})`;
}
function Kw(e) {
  e = ko(e);
  const {
    values: t
  } = e, n = t[0], r = t[1] / 100, o = t[2] / 100, i = r * Math.min(o, 1 - o), s = (u, f = (u + n / 30) % 12) => o - i * Math.max(Math.min(f - 3, 9 - f, 1), -1);
  let l = "rgb";
  const c = [Math.round(s(0) * 255), Math.round(s(8) * 255), Math.round(s(4) * 255)];
  return e.type === "hsla" && (l += "a", c.push(t[3])), zu({
    type: l,
    values: c
  });
}
function Gf(e) {
  e = ko(e);
  let t = e.type === "hsl" || e.type === "hsla" ? ko(Kw(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function _y(e, t) {
  const n = Gf(e), r = Gf(t);
  return (Math.max(n, r) + 0.05) / (Math.min(n, r) + 0.05);
}
function Xf(e, t) {
  return e = ko(e), t = Lh(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, zu(e);
}
function kl(e, t, n) {
  try {
    return Xf(e, t);
  } catch {
    return e;
  }
}
function Fh(e, t) {
  if (e = ko(e), t = Lh(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return zu(e);
}
function yt(e, t, n) {
  try {
    return Fh(e, t);
  } catch {
    return e;
  }
}
function zh(e, t) {
  if (e = ko(e), t = Lh(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return zu(e);
}
function bt(e, t, n) {
  try {
    return zh(e, t);
  } catch {
    return e;
  }
}
function L2(e, t = 0.15) {
  return Gf(e) > 0.5 ? Fh(e, t) : zh(e, t);
}
function Rl(e, t, n) {
  try {
    return L2(e, t);
  } catch {
    return e;
  }
}
const F2 = "exact-prop: ​";
function Gw(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [F2]: (t) => {
      const n = Object.keys(t).filter((r) => !e.hasOwnProperty(r));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((r) => `\`${r}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
const z2 = /* @__PURE__ */ M.createContext();
process.env.NODE_ENV !== "production" && (a.node, a.bool);
const V2 = () => M.useContext(z2) ?? !1, j2 = /* @__PURE__ */ M.createContext(void 0);
process.env.NODE_ENV !== "production" && (a.node, a.object);
function H2(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  if (!t || !t.components || !t.components[n])
    return r;
  const o = t.components[n];
  return o.defaultProps ? Kf(o.defaultProps, r) : !o.styleOverrides && !o.variants ? Kf(o, r) : r;
}
function W2({
  props: e,
  name: t
}) {
  const n = M.useContext(j2);
  return H2({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
const My = {
  theme: void 0
};
function U2(e) {
  let t, n;
  return function(o) {
    let i = t;
    return (i === void 0 || o.theme !== n) && (My.theme = o.theme, i = Uw(e(My)), t = i, n = o.theme), i;
  };
}
function q2(e = "") {
  function t(...r) {
    if (!r.length)
      return "";
    const o = r[0];
    return typeof o == "string" && !o.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${o}${t(...r.slice(1))})` : `, ${o}`;
  }
  return (r, ...o) => `var(--${e ? `${e}-` : ""}${r}${t(...o)})`;
}
const Ay = (e, t, n, r = []) => {
  let o = e;
  t.forEach((i, s) => {
    s === t.length - 1 ? Array.isArray(o) ? o[Number(i)] = n : o && typeof o == "object" && (o[i] = n) : o && typeof o == "object" && (o[i] || (o[i] = r.includes(i) ? [] : {}), o = o[i]);
  });
}, Y2 = (e, t, n) => {
  function r(o, i = [], s = []) {
    Object.entries(o).forEach(([l, c]) => {
      (!n || n && !n([...i, l])) && c != null && (typeof c == "object" && Object.keys(c).length > 0 ? r(c, [...i, l], Array.isArray(c) ? [...s, l] : s) : t([...i, l], c, s));
    });
  }
  r(e);
}, K2 = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((r) => e.includes(r)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function Ld(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: r
  } = t || {}, o = {}, i = {}, s = {};
  return Y2(
    e,
    (l, c, u) => {
      if ((typeof c == "string" || typeof c == "number") && (!r || !r(l, c))) {
        const f = `--${n ? `${n}-` : ""}${l.join("-")}`, d = K2(l, c);
        Object.assign(o, {
          [f]: d
        }), Ay(i, l, `var(${f})`, u), Ay(s, l, `var(${f}, ${d})`, u);
      }
    },
    (l) => l[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: o,
    vars: i,
    varsWithDefaults: s
  };
}
function G2(e, t = {}) {
  const {
    getSelector: n = y,
    disableCssColorScheme: r,
    colorSchemeSelector: o
  } = t, {
    colorSchemes: i = {},
    components: s,
    defaultColorScheme: l = "light",
    ...c
  } = e, {
    vars: u,
    css: f,
    varsWithDefaults: d
  } = Ld(c, t);
  let p = d;
  const h = {}, {
    [l]: g,
    ...m
  } = i;
  if (Object.entries(m || {}).forEach(([v, w]) => {
    const {
      vars: S,
      css: T,
      varsWithDefaults: C
    } = Ld(w, t);
    p = hn(p, C), h[v] = {
      css: T,
      vars: S
    };
  }), g) {
    const {
      css: v,
      vars: w,
      varsWithDefaults: S
    } = Ld(g, t);
    p = hn(p, S), h[l] = {
      css: v,
      vars: w
    };
  }
  function y(v, w) {
    var T, C;
    let S = o;
    if (o === "class" && (S = ".%s"), o === "data" && (S = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (S = `[${o}="%s"]`), v) {
      if (S === "media")
        return e.defaultColorScheme === v ? ":root" : {
          [`@media (prefers-color-scheme: ${((C = (T = i[v]) == null ? void 0 : T.palette) == null ? void 0 : C.mode) || v})`]: {
            ":root": w
          }
        };
      if (S)
        return e.defaultColorScheme === v ? `:root, ${S.replace("%s", String(v))}` : S.replace("%s", String(v));
    }
    return ":root";
  }
  return {
    vars: p,
    generateThemeVars: () => {
      let v = {
        ...u
      };
      return Object.entries(h).forEach(([, {
        vars: w
      }]) => {
        v = hn(v, w);
      }), v;
    },
    generateStyleSheets: () => {
      var R, I;
      const v = [], w = e.defaultColorScheme || "light";
      function S(b, k) {
        Object.keys(k).length && v.push(typeof b == "string" ? {
          [b]: {
            ...k
          }
        } : b);
      }
      S(n(void 0, {
        ...f
      }), f);
      const {
        [w]: T,
        ...C
      } = h;
      if (T) {
        const {
          css: b
        } = T, k = (I = (R = i[w]) == null ? void 0 : R.palette) == null ? void 0 : I.mode, P = !r && k ? {
          colorScheme: k,
          ...b
        } : {
          ...b
        };
        S(n(w, {
          ...P
        }), P);
      }
      return Object.entries(C).forEach(([b, {
        css: k
      }]) => {
        var O, _;
        const P = (_ = (O = i[b]) == null ? void 0 : O.palette) == null ? void 0 : _.mode, A = !r && P ? {
          colorScheme: P,
          ...k
        } : {
          ...k
        };
        S(n(b, {
          ...A
        }), A);
      }), v;
    }
  };
}
function X2(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
function nn(e, t, n = void 0) {
  const r = {};
  for (const o in e) {
    const i = e[o];
    let s = "", l = !0;
    for (let c = 0; c < i.length; c += 1) {
      const u = i[c];
      u && (s += (l === !0 ? "" : " ") + t(u), l = !1, n && n[u] && (s += " " + n[u]));
    }
    r[o] = s;
  }
  return r;
}
function Fd(e, t) {
  var n, r, o;
  return /* @__PURE__ */ M.isValidElement(e) && t.indexOf(
    // For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    e.type.muiName ?? ((o = (r = (n = e.type) == null ? void 0 : n._payload) == null ? void 0 : r.value) == null ? void 0 : o.muiName)
  ) !== -1;
}
const Sa = {
  black: "#000",
  white: "#fff"
}, Z2 = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, bi = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, vi = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, Os = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, xi = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, wi = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, Si = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
};
function Xw() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: Sa.white,
      default: Sa.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const Q2 = Xw();
function Zw() {
  return {
    text: {
      primary: Sa.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: Sa.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const Dy = Zw();
function By(e, t, n, r) {
  const o = r.light || r, i = r.dark || r * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = zh(e.main, o) : t === "dark" && (e.dark = Fh(e.main, i)));
}
function J2(e = "light") {
  return e === "dark" ? {
    main: xi[200],
    light: xi[50],
    dark: xi[400]
  } : {
    main: xi[700],
    light: xi[400],
    dark: xi[800]
  };
}
function eD(e = "light") {
  return e === "dark" ? {
    main: bi[200],
    light: bi[50],
    dark: bi[400]
  } : {
    main: bi[500],
    light: bi[300],
    dark: bi[700]
  };
}
function tD(e = "light") {
  return e === "dark" ? {
    main: vi[500],
    light: vi[300],
    dark: vi[700]
  } : {
    main: vi[700],
    light: vi[400],
    dark: vi[800]
  };
}
function nD(e = "light") {
  return e === "dark" ? {
    main: wi[400],
    light: wi[300],
    dark: wi[700]
  } : {
    main: wi[700],
    light: wi[500],
    dark: wi[900]
  };
}
function rD(e = "light") {
  return e === "dark" ? {
    main: Si[400],
    light: Si[300],
    dark: Si[700]
  } : {
    main: Si[800],
    light: Si[500],
    dark: Si[900]
  };
}
function oD(e = "light") {
  return e === "dark" ? {
    main: Os[400],
    light: Os[300],
    dark: Os[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: Os[500],
    dark: Os[900]
  };
}
function Vh(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: r = 0.2,
    ...o
  } = e, i = e.primary || J2(t), s = e.secondary || eD(t), l = e.error || tD(t), c = e.info || nD(t), u = e.success || rD(t), f = e.warning || oD(t);
  function d(m) {
    const y = _y(m, Dy.text.primary) >= n ? Dy.text.primary : Q2.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const x = _y(m, y);
      x < 3 && console.error([`MUI: The contrast ratio of ${x}:1 for ${y} on ${m}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return y;
  }
  const p = ({
    color: m,
    name: y,
    mainShade: x = 500,
    lightShade: E = 300,
    darkShade: v = 700
  }) => {
    if (m = {
      ...m
    }, !m.main && m[x] && (m.main = m[x]), !m.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${y ? ` (${y})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${x}\` property.` : zr(11, y ? ` (${y})` : "", x));
    if (typeof m.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${y ? ` (${y})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(m.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : zr(12, y ? ` (${y})` : "", JSON.stringify(m.main)));
    return By(m, "light", E, r), By(m, "dark", v, r), m.contrastText || (m.contrastText = d(m.main)), m;
  };
  let h;
  return t === "light" ? h = Xw() : t === "dark" && (h = Zw()), process.env.NODE_ENV !== "production" && (h || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), hn({
    // A collection of common colors.
    common: {
      ...Sa
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: p({
      color: i,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: p({
      color: s,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: p({
      color: l,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: p({
      color: f,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: p({
      color: c,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: p({
      color: u,
      name: "success"
    }),
    // The grey colors.
    grey: Z2,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: d,
    // Generate a rich color object.
    augmentColor: p,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: r,
    // The light and dark mode object.
    ...h
  }, o);
}
function iD(e) {
  const t = {};
  return Object.entries(e).forEach((r) => {
    const [o, i] = r;
    typeof i == "object" && (t[o] = `${i.fontStyle ? `${i.fontStyle} ` : ""}${i.fontVariant ? `${i.fontVariant} ` : ""}${i.fontWeight ? `${i.fontWeight} ` : ""}${i.fontStretch ? `${i.fontStretch} ` : ""}${i.fontSize || ""}${i.lineHeight ? `/${i.lineHeight} ` : ""}${i.fontFamily || ""}`);
  }), t;
}
function sD(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function aD(e) {
  return Math.round(e * 1e5) / 1e5;
}
const Ly = {
  textTransform: "uppercase"
}, Fy = '"Roboto", "Helvetica", "Arial", sans-serif';
function lD(e, t) {
  const {
    fontFamily: n = Fy,
    // The default font size of the Material Specification.
    fontSize: r = 14,
    // px
    fontWeightLight: o = 300,
    fontWeightRegular: i = 400,
    fontWeightMedium: s = 500,
    fontWeightBold: l = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: c = 16,
    // Apply the CSS properties to all the variants.
    allVariants: u,
    pxToRem: f,
    ...d
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof r != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof c != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const p = r / 14, h = f || ((y) => `${y / c * p}rem`), g = (y, x, E, v, w) => ({
    fontFamily: n,
    fontWeight: y,
    fontSize: h(x),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: E,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === Fy ? {
      letterSpacing: `${aD(v / x)}em`
    } : {},
    ...w,
    ...u
  }), m = {
    h1: g(o, 96, 1.167, -1.5),
    h2: g(o, 60, 1.2, -0.5),
    h3: g(i, 48, 1.167, 0),
    h4: g(i, 34, 1.235, 0.25),
    h5: g(i, 24, 1.334, 0),
    h6: g(s, 20, 1.6, 0.15),
    subtitle1: g(i, 16, 1.75, 0.15),
    subtitle2: g(s, 14, 1.57, 0.1),
    body1: g(i, 16, 1.5, 0.15),
    body2: g(i, 14, 1.43, 0.15),
    button: g(s, 14, 1.75, 0.4, Ly),
    caption: g(i, 12, 1.66, 0.4),
    overline: g(i, 12, 2.66, 1, Ly),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return hn({
    htmlFontSize: c,
    pxToRem: h,
    fontFamily: n,
    fontSize: r,
    fontWeightLight: o,
    fontWeightRegular: i,
    fontWeightMedium: s,
    fontWeightBold: l,
    ...m
  }, d, {
    clone: !1
    // No need to clone deep
  });
}
const cD = 0.2, uD = 0.14, dD = 0.12;
function Ot(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${cD})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${uD})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${dD})`].join(",");
}
const fD = ["none", Ot(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), Ot(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), Ot(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), Ot(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), Ot(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), Ot(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), Ot(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), Ot(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), Ot(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), Ot(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), Ot(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), Ot(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), Ot(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), Ot(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), Ot(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), Ot(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), Ot(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), Ot(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), Ot(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), Ot(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), Ot(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), Ot(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), Ot(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), Ot(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], pD = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, hD = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function zy(e) {
  return `${Math.round(e)}ms`;
}
function mD(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function gD(e) {
  const t = {
    ...pD,
    ...e.easing
  }, n = {
    ...hD,
    ...e.duration
  };
  return {
    getAutoHeightDuration: mD,
    create: (o = ["all"], i = {}) => {
      const {
        duration: s = n.standard,
        easing: l = t.easeInOut,
        delay: c = 0,
        ...u
      } = i;
      if (process.env.NODE_ENV !== "production") {
        const f = (p) => typeof p == "string", d = (p) => !Number.isNaN(parseFloat(p));
        !f(o) && !Array.isArray(o) && console.error('MUI: Argument "props" must be a string or Array.'), !d(s) && !f(s) && console.error(`MUI: Argument "duration" must be a number or a string but found ${s}.`), f(l) || console.error('MUI: Argument "easing" must be a string.'), !d(c) && !f(c) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof i != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(u).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(u).join(",")}].`);
      }
      return (Array.isArray(o) ? o : [o]).map((f) => `${f} ${typeof s == "string" ? s : zy(s)} ${l} ${typeof c == "string" ? c : zy(c)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const yD = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function bD(e) {
  return Rr(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function Qw(e = {}) {
  const t = {
    ...e
  };
  function n(r) {
    const o = Object.entries(r);
    for (let i = 0; i < o.length; i++) {
      const [s, l] = o[i];
      !bD(l) || s.startsWith("unstable_") ? delete r[s] : Rr(l) && (r[s] = {
        ...l
      }, n(r[s]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function Zf(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: r = {},
    spacing: o,
    palette: i = {},
    transitions: s = {},
    typography: l = {},
    shape: c,
    ...u
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : zr(20));
  const f = Vh(i), d = Dh(e);
  let p = hn(d, {
    mixins: sD(d.breakpoints, r),
    palette: f,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: fD.slice(),
    typography: lD(f, l),
    transitions: gD(s),
    zIndex: {
      ...yD
    }
  });
  if (p = hn(p, u), p = t.reduce((h, g) => hn(h, g), p), process.env.NODE_ENV !== "production") {
    const h = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], g = (m, y) => {
      let x;
      for (x in m) {
        const E = m[x];
        if (h.includes(x) && Object.keys(E).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const v = Gt("", x);
            console.error([`MUI: The \`${y}\` component increases the CSS specificity of the \`${x}\` internal state.`, "You can not override it like this: ", JSON.stringify(m, null, 2), "", `Instead, you need to use the '&.${v}' syntax:`, JSON.stringify({
              root: {
                [`&.${v}`]: E
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          m[x] = {};
        }
      }
    };
    Object.keys(p.components).forEach((m) => {
      const y = p.components[m].styleOverrides;
      y && m.startsWith("Mui") && g(y, m);
    });
  }
  return p.unstable_sxConfig = {
    ...Ga,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, p.unstable_sx = function(g) {
    return ti({
      sx: g,
      theme: this
    });
  }, p.toRuntimeSource = Qw, p;
}
function Qf(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const vD = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = Qf(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function Jw(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function eS(e) {
  return e === "dark" ? vD : [];
}
function xD(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: r,
    ...o
  } = e, i = Vh(t);
  return {
    palette: i,
    opacity: {
      ...Jw(i.mode),
      ...n
    },
    overlays: r || eS(i.mode),
    ...o
  };
}
function wD(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const SD = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], ED = (e) => (t, n) => {
  const r = e.rootSelector || ":root", o = e.colorSchemeSelector;
  let i = o;
  if (o === "class" && (i = ".%s"), o === "data" && (i = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (i = `[${o}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const s = {};
      return SD(e.cssVarPrefix).forEach((l) => {
        s[l] = n[l], delete n[l];
      }), i === "media" ? {
        [r]: n,
        "@media (prefers-color-scheme: dark)": {
          [r]: s
        }
      } : i ? {
        [i.replace("%s", t)]: s,
        [`${r}, ${i.replace("%s", t)}`]: n
      } : {
        [r]: {
          ...n,
          ...s
        }
      };
    }
    if (i && i !== "media")
      return `${r}, ${i.replace("%s", String(t))}`;
  } else if (t) {
    if (i === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [r]: n
        }
      };
    if (i)
      return i.replace("%s", String(t));
  }
  return r;
};
function TD(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function fe(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function js(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : Kw(e);
}
function Kr(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = Vs(js(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function CD(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const wr = (e) => {
  try {
    return e();
  } catch {
  }
}, OD = (e = "mui") => q2(e);
function zd(e, t, n, r) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const o = r === "dark" ? "dark" : "light";
  if (!n) {
    e[r] = xD({
      ...t,
      palette: {
        mode: o,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: i,
    ...s
  } = Zf({
    ...n,
    palette: {
      mode: o,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[r] = {
    ...t,
    palette: i,
    opacity: {
      ...Jw(o),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || eS(o)
  }, s;
}
function kD(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: r,
    disableCssColorScheme: o = !1,
    cssVarPrefix: i = "mui",
    shouldSkipGeneratingVar: s = wD,
    colorSchemeSelector: l = n.light && n.dark ? "media" : void 0,
    rootSelector: c = ":root",
    ...u
  } = e, f = Object.keys(n)[0], d = r || (n.light && f !== "light" ? "light" : f), p = OD(i), {
    [d]: h,
    light: g,
    dark: m,
    ...y
  } = n, x = {
    ...y
  };
  let E = h;
  if ((d === "dark" && !("dark" in n) || d === "light" && !("light" in n)) && (E = !0), !E)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${d}\` option is either missing or invalid.` : zr(21, d));
  const v = zd(x, E, u, d);
  g && !x.light && zd(x, g, void 0, "light"), m && !x.dark && zd(x, m, void 0, "dark");
  let w = {
    defaultColorScheme: d,
    ...v,
    cssVarPrefix: i,
    colorSchemeSelector: l,
    rootSelector: c,
    getCssVar: p,
    colorSchemes: x,
    font: {
      ...iD(v.typography),
      ...v.font
    },
    spacing: CD(u.spacing)
  };
  Object.keys(w.colorSchemes).forEach((I) => {
    const b = w.colorSchemes[I].palette, k = (P) => {
      const A = P.split("-"), O = A[1], _ = A[2];
      return p(P, b[O][_]);
    };
    if (b.mode === "light" && (fe(b.common, "background", "#fff"), fe(b.common, "onBackground", "#000")), b.mode === "dark" && (fe(b.common, "background", "#000"), fe(b.common, "onBackground", "#fff")), TD(b, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), b.mode === "light") {
      fe(b.Alert, "errorColor", yt(b.error.light, 0.6)), fe(b.Alert, "infoColor", yt(b.info.light, 0.6)), fe(b.Alert, "successColor", yt(b.success.light, 0.6)), fe(b.Alert, "warningColor", yt(b.warning.light, 0.6)), fe(b.Alert, "errorFilledBg", k("palette-error-main")), fe(b.Alert, "infoFilledBg", k("palette-info-main")), fe(b.Alert, "successFilledBg", k("palette-success-main")), fe(b.Alert, "warningFilledBg", k("palette-warning-main")), fe(b.Alert, "errorFilledColor", wr(() => b.getContrastText(b.error.main))), fe(b.Alert, "infoFilledColor", wr(() => b.getContrastText(b.info.main))), fe(b.Alert, "successFilledColor", wr(() => b.getContrastText(b.success.main))), fe(b.Alert, "warningFilledColor", wr(() => b.getContrastText(b.warning.main))), fe(b.Alert, "errorStandardBg", bt(b.error.light, 0.9)), fe(b.Alert, "infoStandardBg", bt(b.info.light, 0.9)), fe(b.Alert, "successStandardBg", bt(b.success.light, 0.9)), fe(b.Alert, "warningStandardBg", bt(b.warning.light, 0.9)), fe(b.Alert, "errorIconColor", k("palette-error-main")), fe(b.Alert, "infoIconColor", k("palette-info-main")), fe(b.Alert, "successIconColor", k("palette-success-main")), fe(b.Alert, "warningIconColor", k("palette-warning-main")), fe(b.AppBar, "defaultBg", k("palette-grey-100")), fe(b.Avatar, "defaultBg", k("palette-grey-400")), fe(b.Button, "inheritContainedBg", k("palette-grey-300")), fe(b.Button, "inheritContainedHoverBg", k("palette-grey-A100")), fe(b.Chip, "defaultBorder", k("palette-grey-400")), fe(b.Chip, "defaultAvatarColor", k("palette-grey-700")), fe(b.Chip, "defaultIconColor", k("palette-grey-700")), fe(b.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), fe(b.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), fe(b.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), fe(b.LinearProgress, "primaryBg", bt(b.primary.main, 0.62)), fe(b.LinearProgress, "secondaryBg", bt(b.secondary.main, 0.62)), fe(b.LinearProgress, "errorBg", bt(b.error.main, 0.62)), fe(b.LinearProgress, "infoBg", bt(b.info.main, 0.62)), fe(b.LinearProgress, "successBg", bt(b.success.main, 0.62)), fe(b.LinearProgress, "warningBg", bt(b.warning.main, 0.62)), fe(b.Skeleton, "bg", `rgba(${k("palette-text-primaryChannel")} / 0.11)`), fe(b.Slider, "primaryTrack", bt(b.primary.main, 0.62)), fe(b.Slider, "secondaryTrack", bt(b.secondary.main, 0.62)), fe(b.Slider, "errorTrack", bt(b.error.main, 0.62)), fe(b.Slider, "infoTrack", bt(b.info.main, 0.62)), fe(b.Slider, "successTrack", bt(b.success.main, 0.62)), fe(b.Slider, "warningTrack", bt(b.warning.main, 0.62));
      const P = Rl(b.background.default, 0.8);
      fe(b.SnackbarContent, "bg", P), fe(b.SnackbarContent, "color", wr(() => b.getContrastText(P))), fe(b.SpeedDialAction, "fabHoverBg", Rl(b.background.paper, 0.15)), fe(b.StepConnector, "border", k("palette-grey-400")), fe(b.StepContent, "border", k("palette-grey-400")), fe(b.Switch, "defaultColor", k("palette-common-white")), fe(b.Switch, "defaultDisabledColor", k("palette-grey-100")), fe(b.Switch, "primaryDisabledColor", bt(b.primary.main, 0.62)), fe(b.Switch, "secondaryDisabledColor", bt(b.secondary.main, 0.62)), fe(b.Switch, "errorDisabledColor", bt(b.error.main, 0.62)), fe(b.Switch, "infoDisabledColor", bt(b.info.main, 0.62)), fe(b.Switch, "successDisabledColor", bt(b.success.main, 0.62)), fe(b.Switch, "warningDisabledColor", bt(b.warning.main, 0.62)), fe(b.TableCell, "border", bt(kl(b.divider, 1), 0.88)), fe(b.Tooltip, "bg", kl(b.grey[700], 0.92));
    }
    if (b.mode === "dark") {
      fe(b.Alert, "errorColor", bt(b.error.light, 0.6)), fe(b.Alert, "infoColor", bt(b.info.light, 0.6)), fe(b.Alert, "successColor", bt(b.success.light, 0.6)), fe(b.Alert, "warningColor", bt(b.warning.light, 0.6)), fe(b.Alert, "errorFilledBg", k("palette-error-dark")), fe(b.Alert, "infoFilledBg", k("palette-info-dark")), fe(b.Alert, "successFilledBg", k("palette-success-dark")), fe(b.Alert, "warningFilledBg", k("palette-warning-dark")), fe(b.Alert, "errorFilledColor", wr(() => b.getContrastText(b.error.dark))), fe(b.Alert, "infoFilledColor", wr(() => b.getContrastText(b.info.dark))), fe(b.Alert, "successFilledColor", wr(() => b.getContrastText(b.success.dark))), fe(b.Alert, "warningFilledColor", wr(() => b.getContrastText(b.warning.dark))), fe(b.Alert, "errorStandardBg", yt(b.error.light, 0.9)), fe(b.Alert, "infoStandardBg", yt(b.info.light, 0.9)), fe(b.Alert, "successStandardBg", yt(b.success.light, 0.9)), fe(b.Alert, "warningStandardBg", yt(b.warning.light, 0.9)), fe(b.Alert, "errorIconColor", k("palette-error-main")), fe(b.Alert, "infoIconColor", k("palette-info-main")), fe(b.Alert, "successIconColor", k("palette-success-main")), fe(b.Alert, "warningIconColor", k("palette-warning-main")), fe(b.AppBar, "defaultBg", k("palette-grey-900")), fe(b.AppBar, "darkBg", k("palette-background-paper")), fe(b.AppBar, "darkColor", k("palette-text-primary")), fe(b.Avatar, "defaultBg", k("palette-grey-600")), fe(b.Button, "inheritContainedBg", k("palette-grey-800")), fe(b.Button, "inheritContainedHoverBg", k("palette-grey-700")), fe(b.Chip, "defaultBorder", k("palette-grey-700")), fe(b.Chip, "defaultAvatarColor", k("palette-grey-300")), fe(b.Chip, "defaultIconColor", k("palette-grey-300")), fe(b.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), fe(b.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), fe(b.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), fe(b.LinearProgress, "primaryBg", yt(b.primary.main, 0.5)), fe(b.LinearProgress, "secondaryBg", yt(b.secondary.main, 0.5)), fe(b.LinearProgress, "errorBg", yt(b.error.main, 0.5)), fe(b.LinearProgress, "infoBg", yt(b.info.main, 0.5)), fe(b.LinearProgress, "successBg", yt(b.success.main, 0.5)), fe(b.LinearProgress, "warningBg", yt(b.warning.main, 0.5)), fe(b.Skeleton, "bg", `rgba(${k("palette-text-primaryChannel")} / 0.13)`), fe(b.Slider, "primaryTrack", yt(b.primary.main, 0.5)), fe(b.Slider, "secondaryTrack", yt(b.secondary.main, 0.5)), fe(b.Slider, "errorTrack", yt(b.error.main, 0.5)), fe(b.Slider, "infoTrack", yt(b.info.main, 0.5)), fe(b.Slider, "successTrack", yt(b.success.main, 0.5)), fe(b.Slider, "warningTrack", yt(b.warning.main, 0.5));
      const P = Rl(b.background.default, 0.98);
      fe(b.SnackbarContent, "bg", P), fe(b.SnackbarContent, "color", wr(() => b.getContrastText(P))), fe(b.SpeedDialAction, "fabHoverBg", Rl(b.background.paper, 0.15)), fe(b.StepConnector, "border", k("palette-grey-600")), fe(b.StepContent, "border", k("palette-grey-600")), fe(b.Switch, "defaultColor", k("palette-grey-300")), fe(b.Switch, "defaultDisabledColor", k("palette-grey-600")), fe(b.Switch, "primaryDisabledColor", yt(b.primary.main, 0.55)), fe(b.Switch, "secondaryDisabledColor", yt(b.secondary.main, 0.55)), fe(b.Switch, "errorDisabledColor", yt(b.error.main, 0.55)), fe(b.Switch, "infoDisabledColor", yt(b.info.main, 0.55)), fe(b.Switch, "successDisabledColor", yt(b.success.main, 0.55)), fe(b.Switch, "warningDisabledColor", yt(b.warning.main, 0.55)), fe(b.TableCell, "border", yt(kl(b.divider, 1), 0.68)), fe(b.Tooltip, "bg", kl(b.grey[700], 0.92));
    }
    Kr(b.background, "default"), Kr(b.background, "paper"), Kr(b.common, "background"), Kr(b.common, "onBackground"), Kr(b, "divider"), Object.keys(b).forEach((P) => {
      const A = b[P];
      P !== "tonalOffset" && A && typeof A == "object" && (A.main && fe(b[P], "mainChannel", Vs(js(A.main))), A.light && fe(b[P], "lightChannel", Vs(js(A.light))), A.dark && fe(b[P], "darkChannel", Vs(js(A.dark))), A.contrastText && fe(b[P], "contrastTextChannel", Vs(js(A.contrastText))), P === "text" && (Kr(b[P], "primary"), Kr(b[P], "secondary")), P === "action" && (A.active && Kr(b[P], "active"), A.selected && Kr(b[P], "selected")));
    });
  }), w = t.reduce((I, b) => hn(I, b), w);
  const S = {
    prefix: i,
    disableCssColorScheme: o,
    shouldSkipGeneratingVar: s,
    getSelector: ED(w)
  }, {
    vars: T,
    generateThemeVars: C,
    generateStyleSheets: R
  } = G2(w, S);
  return w.vars = T, Object.entries(w.colorSchemes[w.defaultColorScheme]).forEach(([I, b]) => {
    w[I] = b;
  }), w.generateThemeVars = C, w.generateStyleSheets = R, w.generateSpacing = function() {
    return Vw(u.spacing, Mh(this));
  }, w.getColorSchemeSelector = X2(l), w.spacing = w.generateSpacing(), w.shouldSkipGeneratingVar = s, w.unstable_sxConfig = {
    ...Ga,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, w.unstable_sx = function(b) {
    return ti({
      sx: b,
      theme: this
    });
  }, w.toRuntimeSource = Qw, w;
}
function Vy(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: Vh({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function tS(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: r = !1,
    colorSchemes: o = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: i = n == null ? void 0 : n.mode,
    ...s
  } = e, l = i || "light", c = o == null ? void 0 : o[l], u = {
    ...o,
    ...n ? {
      [l]: {
        ...typeof c != "boolean" && c,
        palette: n
      }
    } : void 0
  };
  if (r === !1) {
    if (!("colorSchemes" in e))
      return Zf(e, ...t);
    let f = n;
    "palette" in e || u[l] && (u[l] !== !0 ? f = u[l].palette : l === "dark" && (f = {
      mode: "dark"
    }));
    const d = Zf({
      ...e,
      palette: f
    }, ...t);
    return d.defaultColorScheme = l, d.colorSchemes = u, d.palette.mode === "light" && (d.colorSchemes.light = {
      ...u.light !== !0 && u.light,
      palette: d.palette
    }, Vy(d, "dark", u.dark)), d.palette.mode === "dark" && (d.colorSchemes.dark = {
      ...u.dark !== !0 && u.dark,
      palette: d.palette
    }, Vy(d, "light", u.light)), d;
  }
  return !n && !("light" in u) && l === "light" && (u.light = !0), kD({
    ...s,
    colorSchemes: u,
    defaultColorScheme: l,
    ...typeof r != "boolean" && r
  }, ...t);
}
const jh = tS();
function Hh() {
  const e = Bh(jh);
  return process.env.NODE_ENV !== "production" && M.useDebugValue(e), e[$u] || e;
}
function nS(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const Hr = (e) => nS(e) && e !== "classes", Ke = $2({
  themeId: $u,
  defaultTheme: jh,
  rootShouldForwardProp: Hr
});
let jy = 0;
function RD(e) {
  const [t, n] = M.useState(e), r = e || t;
  return M.useEffect(() => {
    t == null && (jy += 1, n(`mui-${jy}`));
  }, [t]), r;
}
const ND = {
  ...M
}, Hy = ND.useId;
function rS(e) {
  if (Hy !== void 0) {
    const t = Hy();
    return e ?? t;
  }
  return RD(e);
}
const Lo = a.oneOfType([a.func, a.object]);
function oS(e) {
  return /* @__PURE__ */ N(jw, {
    ...e,
    defaultTheme: jh,
    themeId: $u
  });
}
process.env.NODE_ENV !== "production" && (oS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: a.oneOfType([a.array, a.func, a.number, a.object, a.string, a.bool])
});
function $D(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ N(oS, {
        styles: typeof e == "function" ? (r) => e({
          theme: r,
          ...n
        }) : e
      })
    );
  };
}
process.env.NODE_ENV !== "production" && (a.node, a.object.isRequired);
function ln(e) {
  return W2(e);
}
function Xa(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...r) {
    return e(...r) || t(...r);
  };
}
function PD(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function ID(e, t, n, r, o) {
  const i = e[t], s = o || t;
  if (i == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  return typeof i == "function" && !PD(i) && (l = "Did you accidentally provide a plain function component instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${s}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const iS = Xa(a.elementType, ID);
function _D(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function sS(e, t, n, r, o) {
  const i = e[t], s = o || t;
  if (i == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  const c = i.type;
  return typeof c == "function" && !_D(c) && (l = "Did you accidentally use a plain function component for an element instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${s}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Za = Xa(a.element, sS);
Za.isRequired = Xa(a.element.isRequired, sS);
function Ea(e, t, n, r, o) {
  if (process.env.NODE_ENV === "production")
    return null;
  const i = e[t], s = o || t;
  return i == null ? null : i && i.nodeType !== 1 ? new Error(`Invalid ${r} \`${s}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
function Wy(...e) {
  return e.reduce((t, n) => n == null ? t : function(...o) {
    t.apply(this, o), n.apply(this, o);
  }, () => {
  });
}
function aS(e, t = 166) {
  let n;
  function r(...o) {
    const i = () => {
      e.apply(this, o);
    };
    clearTimeout(n), n = setTimeout(i, t);
  }
  return r.clear = () => {
    clearTimeout(n);
  }, r;
}
function gr(e) {
  return e && e.ownerDocument || document;
}
function so(e) {
  return gr(e).defaultView || window;
}
function Uy(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
function qy({
  controlled: e,
  default: t,
  name: n,
  state: r = "value"
}) {
  const {
    current: o
  } = M.useRef(e !== void 0), [i, s] = M.useState(t), l = o ? e : i;
  if (process.env.NODE_ENV !== "production") {
    M.useEffect(() => {
      o !== (e !== void 0) && console.error([`MUI: A component is changing the ${o ? "" : "un"}controlled ${r} state of ${n} to be ${o ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [r, n, e]);
    const {
      current: u
    } = M.useRef(t);
    M.useEffect(() => {
      !o && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${r} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = M.useCallback((u) => {
    o || s(u);
  }, []);
  return [l, c];
}
function Jf(e) {
  const t = M.useRef(e);
  return ni(() => {
    t.current = e;
  }), M.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function sr(...e) {
  const t = M.useRef(void 0), n = M.useCallback((r) => {
    const o = e.map((i) => {
      if (i == null)
        return null;
      if (typeof i == "function") {
        const s = i, l = s(r);
        return typeof l == "function" ? l : () => {
          s(null);
        };
      }
      return i.current = r, () => {
        i.current = null;
      };
    });
    return () => {
      o.forEach((i) => i == null ? void 0 : i());
    };
  }, e);
  return M.useMemo(() => e.every((r) => r == null) ? null : (r) => {
    t.current && (t.current(), t.current = void 0), r != null && (t.current = n(r));
  }, e);
}
const Yy = {};
function MD(e, t) {
  const n = M.useRef(Yy);
  return n.current === Yy && (n.current = e(t)), n;
}
const AD = [];
function DD(e) {
  M.useEffect(e, AD);
}
class Wh {
  constructor() {
    po(this, "currentId", null);
    po(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    po(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new Wh();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
}
function BD() {
  const e = MD(Wh.create).current;
  return DD(e.disposeEffect), e;
}
function lS(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
function LD(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function cS(e, t, n, r) {
  const o = e[t];
  if (o == null || !Number.isInteger(o)) {
    const i = LD(o);
    return new RangeError(`Invalid ${r} \`${t}\` of type \`${i}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function uS(e, t, ...n) {
  return e[t] === void 0 ? null : cS(e, t, ...n);
}
function ep() {
  return null;
}
uS.isRequired = cS;
ep.isRequired = ep;
const dS = process.env.NODE_ENV === "production" ? ep : uS;
function FD(e) {
  return typeof e == "string";
}
function fS(e, t, n) {
  return e === void 0 || FD(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function pS(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((r) => r.match(/^on[A-Z]/) && typeof e[r] == "function" && !t.includes(r)).forEach((r) => {
    n[r] = e[r];
  }), n;
}
function Ky(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function hS(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: r,
    externalForwardedProps: o,
    className: i
  } = e;
  if (!t) {
    const h = Oe(n == null ? void 0 : n.className, i, o == null ? void 0 : o.className, r == null ? void 0 : r.className), g = {
      ...n == null ? void 0 : n.style,
      ...o == null ? void 0 : o.style,
      ...r == null ? void 0 : r.style
    }, m = {
      ...n,
      ...o,
      ...r
    };
    return h.length > 0 && (m.className = h), Object.keys(g).length > 0 && (m.style = g), {
      props: m,
      internalRef: void 0
    };
  }
  const s = pS({
    ...o,
    ...r
  }), l = Ky(r), c = Ky(o), u = t(s), f = Oe(u == null ? void 0 : u.className, n == null ? void 0 : n.className, i, o == null ? void 0 : o.className, r == null ? void 0 : r.className), d = {
    ...u == null ? void 0 : u.style,
    ...n == null ? void 0 : n.style,
    ...o == null ? void 0 : o.style,
    ...r == null ? void 0 : r.style
  }, p = {
    ...u,
    ...n,
    ...c,
    ...l
  };
  return f.length > 0 && (p.className = f), Object.keys(d).length > 0 && (p.style = d), {
    props: p,
    internalRef: u.ref
  };
}
function mS(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function zD(e) {
  var d;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: r,
    skipResolvingSlotProps: o = !1,
    ...i
  } = e, s = o ? {} : mS(n, r), {
    props: l,
    internalRef: c
  } = hS({
    ...i,
    externalSlotProps: s
  }), u = sr(c, s == null ? void 0 : s.ref, (d = e.additionalProps) == null ? void 0 : d.ref);
  return fS(t, {
    ...l,
    ref: u
  }, r);
}
function Qa(e) {
  var t;
  return parseInt(M.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
function Nl(e) {
  return parseInt(e, 10) || 0;
}
const VD = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function jD(e) {
  for (const t in e)
    return !1;
  return !0;
}
function Gy(e) {
  return jD(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const gS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    onChange: r,
    maxRows: o,
    minRows: i = 1,
    style: s,
    value: l,
    ...c
  } = t, {
    current: u
  } = M.useRef(l != null), f = M.useRef(null), d = sr(n, f), p = M.useRef(null), h = M.useRef(null), g = M.useCallback(() => {
    const v = f.current, w = h.current;
    if (!v || !w)
      return;
    const T = so(v).getComputedStyle(v);
    if (T.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    w.style.width = T.width, w.value = v.value || t.placeholder || "x", w.value.slice(-1) === `
` && (w.value += " ");
    const C = T.boxSizing, R = Nl(T.paddingBottom) + Nl(T.paddingTop), I = Nl(T.borderBottomWidth) + Nl(T.borderTopWidth), b = w.scrollHeight;
    w.value = "x";
    const k = w.scrollHeight;
    let P = b;
    i && (P = Math.max(Number(i) * k, P)), o && (P = Math.min(Number(o) * k, P)), P = Math.max(P, k);
    const A = P + (C === "border-box" ? R + I : 0), O = Math.abs(P - b) <= 1;
    return {
      outerHeightStyle: A,
      overflowing: O
    };
  }, [o, i, t.placeholder]), m = Jf(() => {
    const v = f.current, w = g();
    if (!v || !w || Gy(w))
      return !1;
    const S = w.outerHeightStyle;
    return p.current != null && p.current !== S;
  }), y = M.useCallback(() => {
    const v = f.current, w = g();
    if (!v || !w || Gy(w))
      return;
    const S = w.outerHeightStyle;
    p.current !== S && (p.current = S, v.style.height = `${S}px`), v.style.overflow = w.overflowing ? "hidden" : "";
  }, [g]), x = M.useRef(-1);
  ni(() => {
    const v = aS(y), w = f == null ? void 0 : f.current;
    if (!w)
      return;
    const S = so(w);
    S.addEventListener("resize", v);
    let T;
    return typeof ResizeObserver < "u" && (T = new ResizeObserver(() => {
      m() && (T.unobserve(w), cancelAnimationFrame(x.current), y(), x.current = requestAnimationFrame(() => {
        T.observe(w);
      }));
    }), T.observe(w)), () => {
      v.clear(), cancelAnimationFrame(x.current), S.removeEventListener("resize", v), T && T.disconnect();
    };
  }, [g, y, m]), ni(() => {
    y();
  });
  const E = (v) => {
    u || y(), r && r(v);
  };
  return /* @__PURE__ */ we(M.Fragment, {
    children: [/* @__PURE__ */ N("textarea", {
      value: l,
      onChange: E,
      ref: d,
      rows: i,
      style: s,
      ...c
    }), /* @__PURE__ */ N("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: h,
      tabIndex: -1,
      style: {
        ...VD.shadow,
        ...s,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (gS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: a.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  onChange: a.func,
  /**
   * @ignore
   */
  placeholder: a.string,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * @ignore
   */
  value: a.oneOfType([a.arrayOf(a.string), a.number, a.string])
});
function tp(e) {
  return typeof e == "string";
}
function bs({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((r, o) => (r[o] = e[o], n && typeof e[o] > "u" && (r[o] = n[o]), r), {});
}
const Vu = /* @__PURE__ */ M.createContext(void 0);
process.env.NODE_ENV !== "production" && (Vu.displayName = "FormControlContext");
function vs() {
  return M.useContext(Vu);
}
const gn = U2;
function Xy(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function kc(e, t = !1) {
  return e && (Xy(e.value) && e.value !== "" || t && Xy(e.defaultValue) && e.defaultValue !== "");
}
function HD(e) {
  return e.startAdornment;
}
function WD(e) {
  return Gt("MuiInputBase", e);
}
const Zi = tn("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var Zy;
const ju = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${Wt(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, Hu = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, UD = (e) => {
  const {
    classes: t,
    color: n,
    disabled: r,
    error: o,
    endAdornment: i,
    focused: s,
    formControl: l,
    fullWidth: c,
    hiddenLabel: u,
    multiline: f,
    readOnly: d,
    size: p,
    startAdornment: h,
    type: g
  } = e, m = {
    root: ["root", `color${Wt(n)}`, r && "disabled", o && "error", c && "fullWidth", s && "focused", l && "formControl", p && p !== "medium" && `size${Wt(p)}`, f && "multiline", h && "adornedStart", i && "adornedEnd", u && "hiddenLabel", d && "readOnly"],
    input: ["input", r && "disabled", g === "search" && "inputTypeSearch", f && "inputMultiline", p === "small" && "inputSizeSmall", u && "inputHiddenLabel", h && "inputAdornedStart", i && "inputAdornedEnd", d && "readOnly"]
  };
  return nn(m, WD, t);
}, Wu = Ke("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: ju
})(gn(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${Zi.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), Uu = Ke("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: Hu
})(gn(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, r = {
    opacity: "0 !important"
  }, o = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${Zi.formControl} &`]: {
      "&::-webkit-input-placeholder": r,
      "&::-moz-placeholder": r,
      // Firefox 19+
      "&::-ms-input-placeholder": r,
      // Edge
      "&:focus::-webkit-input-placeholder": o,
      "&:focus::-moz-placeholder": o,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": o
      // Edge
    },
    [`&.${Zi.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: i
      }) => !i.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: i
      }) => i.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), Qy = $D({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), qu = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = ln({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": o,
    autoComplete: i,
    autoFocus: s,
    className: l,
    color: c,
    components: u = {},
    componentsProps: f = {},
    defaultValue: d,
    disabled: p,
    disableInjectingGlobalStyles: h,
    endAdornment: g,
    error: m,
    fullWidth: y = !1,
    id: x,
    inputComponent: E = "input",
    inputProps: v = {},
    inputRef: w,
    margin: S,
    maxRows: T,
    minRows: C,
    multiline: R = !1,
    name: I,
    onBlur: b,
    onChange: k,
    onClick: P,
    onFocus: A,
    onKeyDown: O,
    onKeyUp: _,
    placeholder: $,
    readOnly: D,
    renderSuffix: z,
    rows: B,
    size: L,
    slotProps: F = {},
    slots: W = {},
    startAdornment: U,
    type: Z = "text",
    value: Q,
    ...ee
  } = r, te = v.value != null ? v.value : Q, {
    current: q
  } = M.useRef(te != null), oe = M.useRef(), G = M.useCallback((le) => {
    process.env.NODE_ENV !== "production" && le && le.nodeName !== "INPUT" && !le.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), ne = sr(oe, w, v.ref, G), [j, pe] = M.useState(!1), ce = vs();
  process.env.NODE_ENV !== "production" && M.useEffect(() => {
    if (ce)
      return ce.registerEffect();
  }, [ce]);
  const be = bs({
    props: r,
    muiFormControl: ce,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  be.focused = ce ? ce.focused : j, M.useEffect(() => {
    !ce && p && j && (pe(!1), b && b());
  }, [ce, p, j, b]);
  const Pe = ce && ce.onFilled, Me = ce && ce.onEmpty, Ie = M.useCallback((le) => {
    kc(le) ? Pe && Pe() : Me && Me();
  }, [Pe, Me]);
  ni(() => {
    q && Ie({
      value: te
    });
  }, [te, Ie, q]);
  const Ne = (le) => {
    A && A(le), v.onFocus && v.onFocus(le), ce && ce.onFocus ? ce.onFocus(le) : pe(!0);
  }, Fe = (le) => {
    b && b(le), v.onBlur && v.onBlur(le), ce && ce.onBlur ? ce.onBlur(le) : pe(!1);
  }, ke = (le, ...se) => {
    if (!q) {
      const ae = le.target || oe.current;
      if (ae == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : zr(1));
      Ie({
        value: ae.value
      });
    }
    v.onChange && v.onChange(le, ...se), k && k(le, ...se);
  };
  M.useEffect(() => {
    Ie(oe.current);
  }, []);
  const V = (le) => {
    oe.current && le.currentTarget === le.target && oe.current.focus(), P && P(le);
  };
  let J = E, ie = v;
  R && J === "input" && (B ? (process.env.NODE_ENV !== "production" && (C || T) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), ie = {
    type: void 0,
    minRows: B,
    maxRows: B,
    ...ie
  }) : ie = {
    type: void 0,
    maxRows: T,
    minRows: C,
    ...ie
  }, J = gS);
  const X = (le) => {
    Ie(le.animationName === "mui-auto-fill-cancel" ? oe.current : {
      value: "x"
    });
  };
  M.useEffect(() => {
    ce && ce.setAdornedStart(!!U);
  }, [ce, U]);
  const H = {
    ...r,
    color: be.color || "primary",
    disabled: be.disabled,
    endAdornment: g,
    error: be.error,
    focused: be.focused,
    formControl: ce,
    fullWidth: y,
    hiddenLabel: be.hiddenLabel,
    multiline: R,
    size: be.size,
    startAdornment: U,
    type: Z
  }, K = UD(H), re = W.root || u.Root || Wu, he = F.root || f.root || {}, me = W.input || u.Input || Uu;
  return ie = {
    ...ie,
    ...F.input ?? f.input
  }, /* @__PURE__ */ we(M.Fragment, {
    children: [!h && typeof Qy == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (Zy || (Zy = /* @__PURE__ */ N(Qy, {}))), /* @__PURE__ */ we(re, {
      ...he,
      ref: n,
      onClick: V,
      ...ee,
      ...!tp(re) && {
        ownerState: {
          ...H,
          ...he.ownerState
        }
      },
      className: Oe(K.root, he.className, l, D && "MuiInputBase-readOnly"),
      children: [U, /* @__PURE__ */ N(Vu.Provider, {
        value: null,
        children: /* @__PURE__ */ N(me, {
          "aria-invalid": be.error,
          "aria-describedby": o,
          autoComplete: i,
          autoFocus: s,
          defaultValue: d,
          disabled: be.disabled,
          id: x,
          onAnimationStart: X,
          name: I,
          placeholder: $,
          readOnly: D,
          required: be.required,
          rows: B,
          value: te,
          onKeyDown: O,
          onKeyUp: _,
          type: Z,
          ...ie,
          ...!tp(me) && {
            as: J,
            ownerState: {
              ...H,
              ...ie.ownerState
            }
          },
          ref: ne,
          className: Oe(K.input, ie.className, D && "MuiInputBase-readOnly"),
          onBlur: Fe,
          onChange: ke,
          onFocus: Ne
        })
      }), g, z ? z({
        ...be,
        startAdornment: U
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (qu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": a.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: iS,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: a.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * @ignore
   */
  onKeyUp: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * @ignore
   */
  renderSuffix: a.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The size of the component.
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
function qD(e) {
  return typeof e.main == "string";
}
function YD(e, t = []) {
  if (!qD(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function Yu(e = []) {
  return ([, t]) => t && YD(t, e);
}
function KD(e) {
  return Gt("MuiInput", e);
}
const ks = {
  ...Zi,
  ...tn("MuiInput", ["root", "underline", "input"])
}, GD = (e) => {
  const {
    classes: t,
    disableUnderline: n
  } = e, o = nn({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, KD, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...o
  };
}, XD = Ke(Wu, {
  shouldForwardProp: (e) => Hr(e) || e === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...ju(e, t), !n.disableUnderline && t.underline];
  }
})(gn(({
  theme: e
}) => {
  let n = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e.vars && (n = `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`), {
    position: "relative",
    variants: [{
      props: ({
        ownerState: r
      }) => r.formControl,
      style: {
        "label + &": {
          marginTop: 16
        }
      }
    }, {
      props: ({
        ownerState: r
      }) => !r.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${ks.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${ks.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${ks.disabled}, .${ks.error}):before`]: {
          borderBottom: `2px solid ${(e.vars || e).palette.text.primary}`,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            borderBottom: `1px solid ${n}`
          }
        },
        [`&.${ks.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(Yu()).map(([r]) => ({
      props: {
        color: r,
        disableUnderline: !1
      },
      style: {
        "&::after": {
          borderBottom: `2px solid ${(e.vars || e).palette[r].main}`
        }
      }
    }))]
  };
})), ZD = Ke(Uu, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: Hu
})({}), Ku = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = ln({
    props: t,
    name: "MuiInput"
  }), {
    disableUnderline: o = !1,
    components: i = {},
    componentsProps: s,
    fullWidth: l = !1,
    inputComponent: c = "input",
    multiline: u = !1,
    slotProps: f,
    slots: d = {},
    type: p = "text",
    ...h
  } = r, g = GD(r), y = {
    root: {
      ownerState: {
        disableUnderline: o
      }
    }
  }, x = f ?? s ? hn(f ?? s, y) : y, E = d.root ?? i.Root ?? XD, v = d.input ?? i.Input ?? ZD;
  return /* @__PURE__ */ N(qu, {
    slots: {
      root: E,
      input: v
    },
    slotProps: x,
    fullWidth: l,
    inputComponent: c,
    multiline: u,
    ref: n,
    type: p,
    ...h,
    classes: g
  });
});
process.env.NODE_ENV !== "production" && (Ku.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, the `input` will not have an underline.
   * @default false
   */
  disableUnderline: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
Ku.muiName = "Input";
function QD(e) {
  return Gt("MuiFilledInput", e);
}
const Vo = {
  ...Zi,
  ...tn("MuiFilledInput", ["root", "underline", "input", "adornedStart", "adornedEnd", "sizeSmall", "multiline", "hiddenLabel"])
};
function JD(e) {
  return Gt("MuiSvgIcon", e);
}
tn("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const e5 = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: r
  } = e, o = {
    root: ["root", t !== "inherit" && `color${Wt(t)}`, `fontSize${Wt(n)}`]
  };
  return nn(o, JD, r);
}, t5 = Ke("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${Wt(n.color)}`], t[`fontSize${Wt(n.fontSize)}`]];
  }
})(gn(({
  theme: e
}) => {
  var t, n, r, o, i, s, l, c, u, f, d, p, h, g;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (o = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : o.call(t, "fill", {
      duration: (r = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : r.shorter
    }),
    variants: [
      {
        props: (m) => !m.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((s = (i = e.typography) == null ? void 0 : i.pxToRem) == null ? void 0 : s.call(i, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((c = (l = e.typography) == null ? void 0 : l.pxToRem) == null ? void 0 : c.call(l, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((f = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : f.call(u, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, m]) => m && m.main).map(([m]) => {
        var y, x;
        return {
          props: {
            color: m
          },
          style: {
            color: (x = (y = (e.vars ?? e).palette) == null ? void 0 : y[m]) == null ? void 0 : x.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (p = (d = (e.vars ?? e).palette) == null ? void 0 : d.action) == null ? void 0 : p.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (g = (h = (e.vars ?? e).palette) == null ? void 0 : h.action) == null ? void 0 : g.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), Rc = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = ln({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: o,
    className: i,
    color: s = "inherit",
    component: l = "svg",
    fontSize: c = "medium",
    htmlColor: u,
    inheritViewBox: f = !1,
    titleAccess: d,
    viewBox: p = "0 0 24 24",
    ...h
  } = r, g = /* @__PURE__ */ M.isValidElement(o) && o.type === "svg", m = {
    ...r,
    color: s,
    component: l,
    fontSize: c,
    instanceFontSize: t.fontSize,
    inheritViewBox: f,
    viewBox: p,
    hasSvgAsChild: g
  }, y = {};
  f || (y.viewBox = p);
  const x = e5(m);
  return /* @__PURE__ */ we(t5, {
    as: l,
    className: Oe(x.root, i),
    focusable: "false",
    color: u,
    "aria-hidden": d ? void 0 : !0,
    role: d ? "img" : void 0,
    ref: n,
    ...y,
    ...h,
    ...g && o.props,
    ownerState: m,
    children: [g ? o.props.children : o, d ? /* @__PURE__ */ N("title", {
      children: d
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (Rc.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: a.oneOfType([a.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: a.oneOfType([a.oneOf(["inherit", "large", "medium", "small"]), a.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: a.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: a.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Reference/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: a.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: a.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: a.string
});
Rc.muiName = "SvgIcon";
function n5(e, t) {
  function n(r, o) {
    return /* @__PURE__ */ N(Rc, {
      "data-testid": process.env.NODE_ENV !== "production" ? `${t}Icon` : void 0,
      ref: o,
      ...r,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = Rc.muiName, /* @__PURE__ */ M.memo(/* @__PURE__ */ M.forwardRef(n));
}
function r5(e, t) {
  const n = e.charCodeAt(2);
  return e[0] === "o" && e[1] === "n" && n >= 65 && n <= 90 && typeof t == "function";
}
function o5(e, t) {
  if (!e)
    return t;
  function n(s, l) {
    const c = {};
    return Object.keys(l).forEach((u) => {
      r5(u, l[u]) && typeof s[u] == "function" && (c[u] = (...f) => {
        s[u](...f), l[u](...f);
      });
    }), c;
  }
  if (typeof e == "function" || typeof t == "function")
    return (s) => {
      const l = typeof t == "function" ? t(s) : t, c = typeof e == "function" ? e({
        ...s,
        ...l
      }) : e, u = Oe(s == null ? void 0 : s.className, l == null ? void 0 : l.className, c == null ? void 0 : c.className), f = n(c, l);
      return {
        ...l,
        ...c,
        ...f,
        ...!!u && {
          className: u
        },
        ...(l == null ? void 0 : l.style) && (c == null ? void 0 : c.style) && {
          style: {
            ...l.style,
            ...c.style
          }
        },
        ...(l == null ? void 0 : l.sx) && (c == null ? void 0 : c.sx) && {
          sx: [...Array.isArray(l.sx) ? l.sx : [l.sx], ...Array.isArray(c.sx) ? c.sx : [c.sx]]
        }
      };
    };
  const r = t, o = n(e, r), i = Oe(r == null ? void 0 : r.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...o,
    ...!!i && {
      className: i
    },
    ...(r == null ? void 0 : r.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...r.style,
        ...e.style
      }
    },
    ...(r == null ? void 0 : r.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(r.sx) ? r.sx : [r.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
const i5 = (e) => {
  const {
    classes: t,
    disableUnderline: n,
    startAdornment: r,
    endAdornment: o,
    size: i,
    hiddenLabel: s,
    multiline: l
  } = e, c = {
    root: ["root", !n && "underline", r && "adornedStart", o && "adornedEnd", i === "small" && `size${Wt(i)}`, s && "hiddenLabel", l && "multiline"],
    input: ["input"]
  }, u = nn(c, QD, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...u
  };
}, s5 = Ke(Wu, {
  shouldForwardProp: (e) => Hr(e) || e === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...ju(e, t), !n.disableUnderline && t.underline];
  }
})(gn(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = t ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", r = t ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", o = t ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", i = t ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return {
    position: "relative",
    backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r,
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create("background-color", {
      duration: e.transitions.duration.shorter,
      easing: e.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.hoverBg : o,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r
      }
    },
    [`&.${Vo.focused}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r
    },
    [`&.${Vo.disabled}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.disabledBg : i
    },
    variants: [{
      props: ({
        ownerState: s
      }) => !s.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${Vo.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${Vo.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})` : n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${Vo.disabled}, .${Vo.error}):before`]: {
          borderBottom: `1px solid ${(e.vars || e).palette.text.primary}`
        },
        [`&.${Vo.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(Yu()).map(([s]) => {
      var l;
      return {
        props: {
          disableUnderline: !1,
          color: s
        },
        style: {
          "&::after": {
            borderBottom: `2px solid ${(l = (e.vars || e).palette[s]) == null ? void 0 : l.main}`
          }
        }
      };
    }), {
      props: ({
        ownerState: s
      }) => s.startAdornment,
      style: {
        paddingLeft: 12
      }
    }, {
      props: ({
        ownerState: s
      }) => s.endAdornment,
      style: {
        paddingRight: 12
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline,
      style: {
        padding: "25px 12px 8px"
      }
    }, {
      props: ({
        ownerState: s,
        size: l
      }) => s.multiline && l === "small",
      style: {
        paddingTop: 21,
        paddingBottom: 4
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline && s.hiddenLabel,
      style: {
        paddingTop: 16,
        paddingBottom: 17
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline && s.hiddenLabel && s.size === "small",
      style: {
        paddingTop: 8,
        paddingBottom: 9
      }
    }]
  };
})), a5 = Ke(Uu, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: Hu
})(gn(({
  theme: e
}) => ({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12,
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      paddingTop: 21,
      paddingBottom: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel,
    style: {
      paddingTop: 16,
      paddingBottom: 17
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel && t.size === "small",
    style: {
      paddingTop: 8,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      paddingTop: 0,
      paddingBottom: 0,
      paddingLeft: 0,
      paddingRight: 0
    }
  }]
}))), Gu = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = ln({
    props: t,
    name: "MuiFilledInput"
  }), {
    disableUnderline: o = !1,
    components: i = {},
    componentsProps: s,
    fullWidth: l = !1,
    hiddenLabel: c,
    // declare here to prevent spreading to DOM
    inputComponent: u = "input",
    multiline: f = !1,
    slotProps: d,
    slots: p = {},
    type: h = "text",
    ...g
  } = r, m = {
    ...r,
    disableUnderline: o,
    fullWidth: l,
    inputComponent: u,
    multiline: f,
    type: h
  }, y = i5(r), x = {
    root: {
      ownerState: m
    },
    input: {
      ownerState: m
    }
  }, E = d ?? s ? hn(x, d ?? s) : x, v = p.root ?? i.Root ?? s5, w = p.input ?? i.Input ?? a5;
  return /* @__PURE__ */ N(qu, {
    slots: {
      root: v,
      input: w
    },
    slotProps: E,
    fullWidth: l,
    inputComponent: u,
    multiline: f,
    ref: n,
    type: h,
    ...g,
    classes: y
  });
});
process.env.NODE_ENV !== "production" && (Gu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, the input will not have an underline.
   * @default false
   */
  disableUnderline: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
Gu.muiName = "Input";
var Jy;
const l5 = Ke("fieldset", {
  shouldForwardProp: Hr
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), c5 = Ke("legend", {
  shouldForwardProp: Hr
})(gn(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function yS(e) {
  const {
    children: t,
    classes: n,
    className: r,
    label: o,
    notched: i,
    ...s
  } = e, l = o != null && o !== "", c = {
    ...e,
    notched: i,
    withLabel: l
  };
  return /* @__PURE__ */ N(l5, {
    "aria-hidden": !0,
    className: r,
    ownerState: c,
    ...s,
    children: /* @__PURE__ */ N(c5, {
      ownerState: c,
      children: l ? /* @__PURE__ */ N("span", {
        children: o
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        Jy || (Jy = /* @__PURE__ */ N("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (yS.propTypes = {
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The label.
   */
  label: a.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: a.bool.isRequired,
  /**
   * @ignore
   */
  style: a.object
});
function u5(e) {
  return Gt("MuiOutlinedInput", e);
}
const Sr = {
  ...Zi,
  ...tn("MuiOutlinedInput", ["root", "notchedOutline", "input"])
}, d5 = (e) => {
  const {
    classes: t
  } = e, r = nn({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, u5, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...r
  };
}, f5 = Ke(Wu, {
  shouldForwardProp: (e) => Hr(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: ju
})(gn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${Sr.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${Sr.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${Sr.focused} .${Sr.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(Yu()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${Sr.focused} .${Sr.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${Sr.error} .${Sr.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${Sr.disabled} .${Sr.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: r
      }) => n.multiline && r === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), p5 = Ke(yS, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(gn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), h5 = Ke(Uu, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: Hu
})(gn(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), Xu = /* @__PURE__ */ M.forwardRef(function(t, n) {
  var r;
  const o = ln({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: i = {},
    fullWidth: s = !1,
    inputComponent: l = "input",
    label: c,
    multiline: u = !1,
    notched: f,
    slots: d = {},
    type: p = "text",
    ...h
  } = o, g = d5(o), m = vs(), y = bs({
    props: o,
    muiFormControl: m,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), x = {
    ...o,
    color: y.color || "primary",
    disabled: y.disabled,
    error: y.error,
    focused: y.focused,
    formControl: m,
    fullWidth: s,
    hiddenLabel: y.hiddenLabel,
    multiline: u,
    size: y.size,
    type: p
  }, E = d.root ?? i.Root ?? f5, v = d.input ?? i.Input ?? h5;
  return /* @__PURE__ */ N(qu, {
    slots: {
      root: E,
      input: v
    },
    renderSuffix: (w) => /* @__PURE__ */ N(p5, {
      ownerState: x,
      className: g.notchedOutline,
      label: c != null && c !== "" && y.required ? r || (r = /* @__PURE__ */ we(M.Fragment, {
        children: [c, " ", "*"]
      })) : c,
      notched: typeof f < "u" ? f : !!(w.startAdornment || w.filled || w.focused)
    }),
    fullWidth: s,
    inputComponent: l,
    multiline: u,
    ref: n,
    type: p,
    ...h,
    classes: {
      ...g,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (Xu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: a.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: a.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
Xu.muiName = "Input";
function m5(e) {
  return Gt("MuiFormLabel", e);
}
const na = tn("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]), g5 = (e) => {
  const {
    classes: t,
    color: n,
    focused: r,
    disabled: o,
    error: i,
    filled: s,
    required: l
  } = e, c = {
    root: ["root", `color${Wt(n)}`, o && "disabled", i && "error", s && "filled", r && "focused", l && "required"],
    asterisk: ["asterisk", i && "error"]
  };
  return nn(c, m5, t);
}, y5 = Ke("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color === "secondary" && t.colorSecondary, n.filled && t.filled];
  }
})(gn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.body1,
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  variants: [...Object.entries(e.palette).filter(Yu()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${na.focused}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    props: {},
    style: {
      [`&.${na.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      },
      [`&.${na.error}`]: {
        color: (e.vars || e).palette.error.main
      }
    }
  }]
}))), b5 = Ke("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (e, t) => t.asterisk
})(gn(({
  theme: e
}) => ({
  [`&.${na.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}))), bS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = ln({
    props: t,
    name: "MuiFormLabel"
  }), {
    children: o,
    className: i,
    color: s,
    component: l = "label",
    disabled: c,
    error: u,
    filled: f,
    focused: d,
    required: p,
    ...h
  } = r, g = vs(), m = bs({
    props: r,
    muiFormControl: g,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  }), y = {
    ...r,
    color: m.color || "primary",
    component: l,
    disabled: m.disabled,
    error: m.error,
    filled: m.filled,
    focused: m.focused,
    required: m.required
  }, x = g5(y);
  return /* @__PURE__ */ we(y5, {
    as: l,
    ownerState: y,
    className: Oe(x.root, i),
    ref: n,
    ...h,
    children: [o, m.required && /* @__PURE__ */ we(b5, {
      ownerState: y,
      "aria-hidden": !0,
      className: x.asterisk,
      children: [" ", "*"]
    })]
  });
});
process.env.NODE_ENV !== "production" && (bS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: a.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: a.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: a.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function v5(e) {
  return Gt("MuiInputLabel", e);
}
tn("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]);
const x5 = (e) => {
  const {
    classes: t,
    formControl: n,
    size: r,
    shrink: o,
    disableAnimation: i,
    variant: s,
    required: l
  } = e, c = {
    root: ["root", n && "formControl", !i && "animated", o && "shrink", r && r !== "medium" && `size${Wt(r)}`, s],
    asterisk: [l && "asterisk"]
  }, u = nn(c, v5, t);
  return {
    ...t,
    // forward the focused, disabled, etc. classes to the FormLabel
    ...u
  };
}, w5 = Ke(bS, {
  shouldForwardProp: (e) => Hr(e) || e === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${na.asterisk}`]: t.asterisk
    }, t.root, n.formControl && t.formControl, n.size === "small" && t.sizeSmall, n.shrink && t.shrink, !n.disableAnimation && t.animated, n.focused && t.focused, t[n.variant]];
  }
})(gn(({
  theme: e
}) => ({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%",
  variants: [{
    props: ({
      ownerState: t
    }) => t.formControl,
    style: {
      position: "absolute",
      left: 0,
      top: 0,
      // slight alteration to spec spacing to match visual spec result
      transform: "translate(0, 20px) scale(1)"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      // Compensation for the `Input.inputSizeSmall` style.
      transform: "translate(0, 17px) scale(1)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.shrink,
    style: {
      transform: "translate(0, -1.5px) scale(0.75)",
      transformOrigin: "top left",
      maxWidth: "133%"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableAnimation,
    style: {
      transition: e.transitions.create(["color", "transform", "max-width"], {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      // Chrome's autofill feature gives the input field a yellow background.
      // Since the input field is behind the label in the HTML tree,
      // the input field is drawn last and hides the label with an opaque background color.
      // zIndex: 1 will raise the label above opaque background-colors of input.
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(12px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "filled",
      size: "small"
    },
    style: {
      transform: "translate(12px, 13px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "filled" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      transform: "translate(12px, 7px) scale(0.75)",
      maxWidth: "calc(133% - 24px)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n,
      size: r
    }) => t === "filled" && n.shrink && r === "small",
    style: {
      transform: "translate(12px, 4px) scale(0.75)"
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      // see comment above on filled.zIndex
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(14px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "outlined",
      size: "small"
    },
    style: {
      transform: "translate(14px, 9px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "outlined" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      // Theoretically, we should have (8+5)*2/0.75 = 34px
      // but it feels a better when it bleeds a bit on the left, so 32px.
      maxWidth: "calc(133% - 32px)",
      transform: "translate(14px, -9px) scale(0.75)"
    }
  }]
}))), vS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = ln({
    name: "MuiInputLabel",
    props: t
  }), {
    disableAnimation: o = !1,
    margin: i,
    shrink: s,
    variant: l,
    className: c,
    ...u
  } = r, f = vs();
  let d = s;
  typeof d > "u" && f && (d = f.filled || f.focused || f.adornedStart);
  const p = bs({
    props: r,
    muiFormControl: f,
    states: ["size", "variant", "required", "focused"]
  }), h = {
    ...r,
    disableAnimation: o,
    formControl: f,
    shrink: d,
    size: p.size,
    variant: p.variant,
    required: p.required,
    focused: p.focused
  }, g = x5(h);
  return /* @__PURE__ */ N(w5, {
    "data-shrink": d,
    ref: n,
    className: Oe(g.root, c),
    ...u,
    ownerState: h,
    classes: g
  });
});
process.env.NODE_ENV !== "production" && (vS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), a.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: a.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: a.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: a.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: a.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: a.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: a.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
function S5(e) {
  return Gt("MuiFormControl", e);
}
tn("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]);
const E5 = (e) => {
  const {
    classes: t,
    margin: n,
    fullWidth: r
  } = e, o = {
    root: ["root", n !== "none" && `margin${Wt(n)}`, r && "fullWidth"]
  };
  return nn(o, S5, t);
}, T5 = Ke("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`margin${Wt(n.margin)}`], n.fullWidth && t.fullWidth];
  }
})({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top",
  // Fix alignment issue on Safari.
  variants: [{
    props: {
      margin: "normal"
    },
    style: {
      marginTop: 16,
      marginBottom: 8
    }
  }, {
    props: {
      margin: "dense"
    },
    style: {
      marginTop: 8,
      marginBottom: 4
    }
  }, {
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }]
}), xS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = ln({
    props: t,
    name: "MuiFormControl"
  }), {
    children: o,
    className: i,
    color: s = "primary",
    component: l = "div",
    disabled: c = !1,
    error: u = !1,
    focused: f,
    fullWidth: d = !1,
    hiddenLabel: p = !1,
    margin: h = "none",
    required: g = !1,
    size: m = "medium",
    variant: y = "outlined",
    ...x
  } = r, E = {
    ...r,
    color: s,
    component: l,
    disabled: c,
    error: u,
    fullWidth: d,
    hiddenLabel: p,
    margin: h,
    required: g,
    size: m,
    variant: y
  }, v = E5(E), [w, S] = M.useState(() => {
    let $ = !1;
    return o && M.Children.forEach(o, (D) => {
      if (!Fd(D, ["Input", "Select"]))
        return;
      const z = Fd(D, ["Select"]) ? D.props.input : D;
      z && HD(z.props) && ($ = !0);
    }), $;
  }), [T, C] = M.useState(() => {
    let $ = !1;
    return o && M.Children.forEach(o, (D) => {
      Fd(D, ["Input", "Select"]) && (kc(D.props, !0) || kc(D.props.inputProps, !0)) && ($ = !0);
    }), $;
  }), [R, I] = M.useState(!1);
  c && R && I(!1);
  const b = f !== void 0 && !c ? f : R;
  let k;
  const P = M.useRef(!1);
  process.env.NODE_ENV !== "production" && (k = () => (P.current && console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join(`
`)), P.current = !0, () => {
    P.current = !1;
  }));
  const A = M.useCallback(() => {
    C(!0);
  }, []), O = M.useCallback(() => {
    C(!1);
  }, []), _ = M.useMemo(() => ({
    adornedStart: w,
    setAdornedStart: S,
    color: s,
    disabled: c,
    error: u,
    filled: T,
    focused: b,
    fullWidth: d,
    hiddenLabel: p,
    size: m,
    onBlur: () => {
      I(!1);
    },
    onFocus: () => {
      I(!0);
    },
    onEmpty: O,
    onFilled: A,
    registerEffect: k,
    required: g,
    variant: y
  }), [w, s, c, u, T, b, d, p, k, O, A, g, m, y]);
  return /* @__PURE__ */ N(Vu.Provider, {
    value: _,
    children: /* @__PURE__ */ N(T5, {
      as: l,
      ownerState: E,
      className: Oe(v.root, i),
      ref: n,
      ...x,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (xS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: a.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: a.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: a.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: a.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: a.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
function C5(e) {
  return Gt("MuiFormHelperText", e);
}
const eb = tn("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]);
var tb;
const O5 = (e) => {
  const {
    classes: t,
    contained: n,
    size: r,
    disabled: o,
    error: i,
    filled: s,
    focused: l,
    required: c
  } = e, u = {
    root: ["root", o && "disabled", i && "error", r && `size${Wt(r)}`, n && "contained", l && "focused", s && "filled", c && "required"]
  };
  return nn(u, C5, t);
}, k5 = Ke("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size && t[`size${Wt(n.size)}`], n.contained && t.contained, n.filled && t.filled];
  }
})(gn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.caption,
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${eb.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${eb.error}`]: {
    color: (e.vars || e).palette.error.main
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginTop: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.contained,
    style: {
      marginLeft: 14,
      marginRight: 14
    }
  }]
}))), wS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = ln({
    props: t,
    name: "MuiFormHelperText"
  }), {
    children: o,
    className: i,
    component: s = "p",
    disabled: l,
    error: c,
    filled: u,
    focused: f,
    margin: d,
    required: p,
    variant: h,
    ...g
  } = r, m = vs(), y = bs({
    props: r,
    muiFormControl: m,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  }), x = {
    ...r,
    component: s,
    contained: y.variant === "filled" || y.variant === "outlined",
    variant: y.variant,
    size: y.size,
    disabled: y.disabled,
    error: y.error,
    filled: y.filled,
    focused: y.focused,
    required: y.required
  };
  delete x.ownerState;
  const E = O5(x);
  return /* @__PURE__ */ N(k5, {
    as: s,
    className: Oe(E.root, i),
    ref: n,
    ...g,
    ownerState: x,
    children: o === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      tb || (tb = /* @__PURE__ */ N("span", {
        className: "notranslate",
        "aria-hidden": !0,
        children: "​"
      }))
    ) : o
  });
});
process.env.NODE_ENV !== "production" && (wS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: a.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: a.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: a.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: a.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: a.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   */
  variant: a.oneOfType([a.oneOf(["filled", "outlined", "standard"]), a.string])
});
const SS = /* @__PURE__ */ M.createContext({});
process.env.NODE_ENV !== "production" && (SS.displayName = "ListContext");
function R5(e) {
  return Gt("MuiList", e);
}
tn("MuiList", ["root", "padding", "dense", "subheader"]);
const N5 = (e) => {
  const {
    classes: t,
    disablePadding: n,
    dense: r,
    subheader: o
  } = e;
  return nn({
    root: ["root", !n && "padding", r && "dense", o && "subheader"]
  }, R5, t);
}, $5 = Ke("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.disablePadding && t.padding, n.dense && t.dense, n.subheader && t.subheader];
  }
})({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative",
  variants: [{
    props: ({
      ownerState: e
    }) => !e.disablePadding,
    style: {
      paddingTop: 8,
      paddingBottom: 8
    }
  }, {
    props: ({
      ownerState: e
    }) => e.subheader,
    style: {
      paddingTop: 0
    }
  }]
}), ES = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = ln({
    props: t,
    name: "MuiList"
  }), {
    children: o,
    className: i,
    component: s = "ul",
    dense: l = !1,
    disablePadding: c = !1,
    subheader: u,
    ...f
  } = r, d = M.useMemo(() => ({
    dense: l
  }), [l]), p = {
    ...r,
    component: s,
    dense: l,
    disablePadding: c
  }, h = N5(p);
  return /* @__PURE__ */ N(SS.Provider, {
    value: d,
    children: /* @__PURE__ */ we($5, {
      as: s,
      className: Oe(h.root, i),
      ref: n,
      ownerState: p,
      ...f,
      children: [u, o]
    })
  });
});
process.env.NODE_ENV !== "production" && (ES.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: a.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: a.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function Vd(e, t, n) {
  return e === t ? e.firstChild : t && t.nextElementSibling ? t.nextElementSibling : n ? null : e.firstChild;
}
function nb(e, t, n) {
  return e === t ? n ? e.firstChild : e.lastChild : t && t.previousElementSibling ? t.previousElementSibling : n ? null : e.lastChild;
}
function TS(e, t) {
  if (t === void 0)
    return !0;
  let n = e.innerText;
  return n === void 0 && (n = e.textContent), n = n.trim().toLowerCase(), n.length === 0 ? !1 : t.repeating ? n[0] === t.keys[0] : n.startsWith(t.keys.join(""));
}
function Rs(e, t, n, r, o, i) {
  let s = !1, l = o(e, t, t ? n : !1);
  for (; l; ) {
    if (l === e.firstChild) {
      if (s)
        return !1;
      s = !0;
    }
    const c = r ? !1 : l.disabled || l.getAttribute("aria-disabled") === "true";
    if (!l.hasAttribute("tabindex") || !TS(l, i) || c)
      l = o(e, l, n);
    else
      return l.focus(), !0;
  }
  return !1;
}
const CS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: r,
    autoFocus: o = !1,
    autoFocusItem: i = !1,
    children: s,
    className: l,
    disabledItemsFocusable: c = !1,
    disableListWrap: u = !1,
    onKeyDown: f,
    variant: d = "selectedMenu",
    ...p
  } = t, h = M.useRef(null), g = M.useRef({
    keys: [],
    repeating: !0,
    previousKeyMatched: !0,
    lastTime: null
  });
  ni(() => {
    o && h.current.focus();
  }, [o]), M.useImperativeHandle(r, () => ({
    adjustStyleForScrollbar: (v, {
      direction: w
    }) => {
      const S = !h.current.style.width;
      if (v.clientHeight < h.current.clientHeight && S) {
        const T = `${lS(so(v))}px`;
        h.current.style[w === "rtl" ? "paddingLeft" : "paddingRight"] = T, h.current.style.width = `calc(100% + ${T})`;
      }
      return h.current;
    }
  }), []);
  const m = (v) => {
    const w = h.current, S = v.key;
    if (v.ctrlKey || v.metaKey || v.altKey) {
      f && f(v);
      return;
    }
    const C = gr(w).activeElement;
    if (S === "ArrowDown")
      v.preventDefault(), Rs(w, C, u, c, Vd);
    else if (S === "ArrowUp")
      v.preventDefault(), Rs(w, C, u, c, nb);
    else if (S === "Home")
      v.preventDefault(), Rs(w, null, u, c, Vd);
    else if (S === "End")
      v.preventDefault(), Rs(w, null, u, c, nb);
    else if (S.length === 1) {
      const R = g.current, I = S.toLowerCase(), b = performance.now();
      R.keys.length > 0 && (b - R.lastTime > 500 ? (R.keys = [], R.repeating = !0, R.previousKeyMatched = !0) : R.repeating && I !== R.keys[0] && (R.repeating = !1)), R.lastTime = b, R.keys.push(I);
      const k = C && !R.repeating && TS(C, R);
      R.previousKeyMatched && (k || Rs(w, C, !1, c, Vd, R)) ? v.preventDefault() : R.previousKeyMatched = !1;
    }
    f && f(v);
  }, y = sr(h, n);
  let x = -1;
  M.Children.forEach(s, (v, w) => {
    if (!/* @__PURE__ */ M.isValidElement(v)) {
      x === w && (x += 1, x >= s.length && (x = -1));
      return;
    }
    process.env.NODE_ENV !== "production" && pr.isFragment(v) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), v.props.disabled || (d === "selectedMenu" && v.props.selected || x === -1) && (x = w), x === w && (v.props.disabled || v.props.muiSkipListHighlight || v.type.muiSkipListHighlight) && (x += 1, x >= s.length && (x = -1));
  });
  const E = M.Children.map(s, (v, w) => {
    if (w === x) {
      const S = {};
      return i && (S.autoFocus = !0), v.props.tabIndex === void 0 && d === "selectedMenu" && (S.tabIndex = 0), /* @__PURE__ */ M.cloneElement(v, S);
    }
    return v;
  });
  return /* @__PURE__ */ N(ES, {
    role: "menu",
    ref: y,
    className: l,
    onKeyDown: m,
    tabIndex: o ? 0 : -1,
    ...p,
    children: E
  });
});
process.env.NODE_ENV !== "production" && (CS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: a.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: a.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: a.node,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: a.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: a.bool,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: a.oneOf(["menu", "selectedMenu"])
});
const OS = (e) => e.scrollTop;
function Nc(e, t) {
  const {
    timeout: n,
    easing: r,
    style: o = {}
  } = e;
  return {
    duration: o.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: o.transitionTimingFunction ?? (typeof r == "object" ? r[t.mode] : r),
    delay: o.transitionDelay
  };
}
function np(e) {
  return `scale(${e}, ${e ** 2})`;
}
const P5 = {
  entering: {
    opacity: 1,
    transform: np(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, jd = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), $c = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    addEndListener: r,
    appear: o = !0,
    children: i,
    easing: s,
    in: l,
    onEnter: c,
    onEntered: u,
    onEntering: f,
    onExit: d,
    onExited: p,
    onExiting: h,
    style: g,
    timeout: m = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: y = Yn,
    ...x
  } = t, E = BD(), v = M.useRef(), w = Hh(), S = M.useRef(null), T = sr(S, Qa(i), n), C = (_) => ($) => {
    if (_) {
      const D = S.current;
      $ === void 0 ? _(D) : _(D, $);
    }
  }, R = C(f), I = C((_, $) => {
    OS(_);
    const {
      duration: D,
      delay: z,
      easing: B
    } = Nc({
      style: g,
      timeout: m,
      easing: s
    }, {
      mode: "enter"
    });
    let L;
    m === "auto" ? (L = w.transitions.getAutoHeightDuration(_.clientHeight), v.current = L) : L = D, _.style.transition = [w.transitions.create("opacity", {
      duration: L,
      delay: z
    }), w.transitions.create("transform", {
      duration: jd ? L : L * 0.666,
      delay: z,
      easing: B
    })].join(","), c && c(_, $);
  }), b = C(u), k = C(h), P = C((_) => {
    const {
      duration: $,
      delay: D,
      easing: z
    } = Nc({
      style: g,
      timeout: m,
      easing: s
    }, {
      mode: "exit"
    });
    let B;
    m === "auto" ? (B = w.transitions.getAutoHeightDuration(_.clientHeight), v.current = B) : B = $, _.style.transition = [w.transitions.create("opacity", {
      duration: B,
      delay: D
    }), w.transitions.create("transform", {
      duration: jd ? B : B * 0.666,
      delay: jd ? D : D || B * 0.333,
      easing: z
    })].join(","), _.style.opacity = 0, _.style.transform = np(0.75), d && d(_);
  }), A = C(p);
  return /* @__PURE__ */ N(y, {
    appear: o,
    in: l,
    nodeRef: S,
    onEnter: I,
    onEntered: b,
    onEntering: R,
    onExit: P,
    onExited: A,
    onExiting: k,
    addEndListener: (_) => {
      m === "auto" && E.start(v.current || 0, _), r && r(S.current, _);
    },
    timeout: m === "auto" ? null : m,
    ...x,
    children: (_, {
      ownerState: $,
      ...D
    }) => /* @__PURE__ */ M.cloneElement(i, {
      style: {
        opacity: 0,
        transform: np(0.75),
        visibility: _ === "exited" && !l ? "hidden" : void 0,
        ...P5[_],
        ...g,
        ...i.props.style
      },
      ref: T,
      ...D
    })
  });
});
process.env.NODE_ENV !== "production" && ($c.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: Za.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
$c && ($c.muiSupportAuto = !0);
function I5(e) {
  const t = gr(e);
  return t.body === e ? so(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function ra(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function rb(e) {
  return parseInt(so(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function _5(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), r = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || r;
}
function ob(e, t, n, r, o) {
  const i = [t, n, ...r];
  [].forEach.call(e.children, (s) => {
    const l = !i.includes(s), c = !_5(s);
    l && c && ra(s, o);
  });
}
function Hd(e, t) {
  let n = -1;
  return e.some((r, o) => t(r) ? (n = o, !0) : !1), n;
}
function M5(e, t) {
  const n = [], r = e.container;
  if (!t.disableScrollLock) {
    if (I5(r)) {
      const s = lS(so(r));
      n.push({
        value: r.style.paddingRight,
        property: "padding-right",
        el: r
      }), r.style.paddingRight = `${rb(r) + s}px`;
      const l = gr(r).querySelectorAll(".mui-fixed");
      [].forEach.call(l, (c) => {
        n.push({
          value: c.style.paddingRight,
          property: "padding-right",
          el: c
        }), c.style.paddingRight = `${rb(c) + s}px`;
      });
    }
    let i;
    if (r.parentNode instanceof DocumentFragment)
      i = gr(r).body;
    else {
      const s = r.parentElement, l = so(r);
      i = (s == null ? void 0 : s.nodeName) === "HTML" && l.getComputedStyle(s).overflowY === "scroll" ? s : r;
    }
    n.push({
      value: i.style.overflow,
      property: "overflow",
      el: i
    }, {
      value: i.style.overflowX,
      property: "overflow-x",
      el: i
    }, {
      value: i.style.overflowY,
      property: "overflow-y",
      el: i
    }), i.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: i,
      el: s,
      property: l
    }) => {
      i ? s.style.setProperty(l, i) : s.style.removeProperty(l);
    });
  };
}
function A5(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
class D5 {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let r = this.modals.indexOf(t);
    if (r !== -1)
      return r;
    r = this.modals.length, this.modals.push(t), t.modalRef && ra(t.modalRef, !1);
    const o = A5(n);
    ob(n, t.mount, t.modalRef, o, !0);
    const i = Hd(this.containers, (s) => s.container === n);
    return i !== -1 ? (this.containers[i].modals.push(t), r) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: o
    }), r);
  }
  mount(t, n) {
    const r = Hd(this.containers, (i) => i.modals.includes(t)), o = this.containers[r];
    o.restore || (o.restore = M5(o, n));
  }
  remove(t, n = !0) {
    const r = this.modals.indexOf(t);
    if (r === -1)
      return r;
    const o = Hd(this.containers, (s) => s.modals.includes(t)), i = this.containers[o];
    if (i.modals.splice(i.modals.indexOf(t), 1), this.modals.splice(r, 1), i.modals.length === 0)
      i.restore && i.restore(), t.modalRef && ra(t.modalRef, n), ob(i.container, t.mount, t.modalRef, i.hiddenSiblings, !1), this.containers.splice(o, 1);
    else {
      const s = i.modals[i.modals.length - 1];
      s.modalRef && ra(s.modalRef, !1);
    }
    return r;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
}
const B5 = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function L5(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function F5(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (r) => e.ownerDocument.querySelector(`input[type="radio"]${r}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function z5(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || F5(e));
}
function V5(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(B5)).forEach((r, o) => {
    const i = L5(r);
    i === -1 || !z5(r) || (i === 0 ? t.push(r) : n.push({
      documentOrder: o,
      tabIndex: i,
      node: r
    }));
  }), n.sort((r, o) => r.tabIndex === o.tabIndex ? r.documentOrder - o.documentOrder : r.tabIndex - o.tabIndex).map((r) => r.node).concat(t);
}
function j5() {
  return !0;
}
function Pc(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: r = !1,
    disableRestoreFocus: o = !1,
    getTabbable: i = V5,
    isEnabled: s = j5,
    open: l
  } = e, c = M.useRef(!1), u = M.useRef(null), f = M.useRef(null), d = M.useRef(null), p = M.useRef(null), h = M.useRef(!1), g = M.useRef(null), m = sr(Qa(t), g), y = M.useRef(null);
  M.useEffect(() => {
    !l || !g.current || (h.current = !n);
  }, [n, l]), M.useEffect(() => {
    if (!l || !g.current)
      return;
    const v = gr(g.current);
    return g.current.contains(v.activeElement) || (g.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), g.current.setAttribute("tabIndex", "-1")), h.current && g.current.focus()), () => {
      o || (d.current && d.current.focus && (c.current = !0, d.current.focus()), d.current = null);
    };
  }, [l]), M.useEffect(() => {
    if (!l || !g.current)
      return;
    const v = gr(g.current), w = (C) => {
      y.current = C, !(r || !s() || C.key !== "Tab") && v.activeElement === g.current && C.shiftKey && (c.current = !0, f.current && f.current.focus());
    }, S = () => {
      var I, b;
      const C = g.current;
      if (C === null)
        return;
      if (!v.hasFocus() || !s() || c.current) {
        c.current = !1;
        return;
      }
      if (C.contains(v.activeElement) || r && v.activeElement !== u.current && v.activeElement !== f.current)
        return;
      if (v.activeElement !== p.current)
        p.current = null;
      else if (p.current !== null)
        return;
      if (!h.current)
        return;
      let R = [];
      if ((v.activeElement === u.current || v.activeElement === f.current) && (R = i(g.current)), R.length > 0) {
        const k = !!((I = y.current) != null && I.shiftKey && ((b = y.current) == null ? void 0 : b.key) === "Tab"), P = R[0], A = R[R.length - 1];
        typeof P != "string" && typeof A != "string" && (k ? A.focus() : P.focus());
      } else
        C.focus();
    };
    v.addEventListener("focusin", S), v.addEventListener("keydown", w, !0);
    const T = setInterval(() => {
      v.activeElement && v.activeElement.tagName === "BODY" && S();
    }, 50);
    return () => {
      clearInterval(T), v.removeEventListener("focusin", S), v.removeEventListener("keydown", w, !0);
    };
  }, [n, r, o, s, l, i]);
  const x = (v) => {
    d.current === null && (d.current = v.relatedTarget), h.current = !0, p.current = v.target;
    const w = t.props.onFocus;
    w && w(v);
  }, E = (v) => {
    d.current === null && (d.current = v.relatedTarget), h.current = !0;
  };
  return /* @__PURE__ */ we(M.Fragment, {
    children: [/* @__PURE__ */ N("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: u,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ M.cloneElement(t, {
      ref: m,
      onFocus: x
    }), /* @__PURE__ */ N("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: f,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (Pc.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: Za,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: a.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: a.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: a.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: a.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: a.func,
  /**
   * If `true`, focus is locked.
   */
  open: a.bool.isRequired
});
process.env.NODE_ENV !== "production" && (Pc.propTypes = Gw(Pc.propTypes));
function H5(e) {
  return typeof e == "function" ? e() : e;
}
const Ic = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    children: r,
    container: o,
    disablePortal: i = !1
  } = t, [s, l] = M.useState(null), c = sr(/* @__PURE__ */ M.isValidElement(r) ? Qa(r) : null, n);
  if (ni(() => {
    i || l(H5(o) || document.body);
  }, [o, i]), ni(() => {
    if (s && !i)
      return Uy(n, s), () => {
        Uy(n, null);
      };
  }, [n, s, i]), i) {
    if (/* @__PURE__ */ M.isValidElement(r)) {
      const u = {
        ref: c
      };
      return /* @__PURE__ */ M.cloneElement(r, u);
    }
    return r;
  }
  return s && /* @__PURE__ */ Z0.createPortal(r, s);
});
process.env.NODE_ENV !== "production" && (Ic.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: a.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Ea, a.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool
});
process.env.NODE_ENV !== "production" && (Ic.propTypes = Gw(Ic.propTypes));
function vn(e, t) {
  const {
    className: n,
    elementType: r,
    ownerState: o,
    externalForwardedProps: i,
    internalForwardedProps: s,
    shouldForwardComponentProp: l = !1,
    ...c
  } = t, {
    component: u,
    slots: f = {
      [e]: void 0
    },
    slotProps: d = {
      [e]: void 0
    },
    ...p
  } = i, h = f[e] || r, g = mS(d[e], o), {
    props: {
      component: m,
      ...y
    },
    internalRef: x
  } = hS({
    className: n,
    ...c,
    externalForwardedProps: e === "root" ? p : void 0,
    externalSlotProps: g
  }), E = sr(x, g == null ? void 0 : g.ref, t.ref), v = e === "root" ? m || u : m, w = fS(h, {
    ...e === "root" && !u && !f[e] && s,
    ...e !== "root" && !f[e] && s,
    ...y,
    ...v && !l && {
      as: v
    },
    ...v && l && {
      component: v
    },
    ref: E
  }, o);
  return [h, w];
}
const W5 = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, kS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Hh(), o = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: i,
    appear: s = !0,
    children: l,
    easing: c,
    in: u,
    onEnter: f,
    onEntered: d,
    onEntering: p,
    onExit: h,
    onExited: g,
    onExiting: m,
    style: y,
    timeout: x = o,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: E = Yn,
    ...v
  } = t, w = M.useRef(null), S = sr(w, Qa(l), n), T = (O) => (_) => {
    if (O) {
      const $ = w.current;
      _ === void 0 ? O($) : O($, _);
    }
  }, C = T(p), R = T((O, _) => {
    OS(O);
    const $ = Nc({
      style: y,
      timeout: x,
      easing: c
    }, {
      mode: "enter"
    });
    O.style.webkitTransition = r.transitions.create("opacity", $), O.style.transition = r.transitions.create("opacity", $), f && f(O, _);
  }), I = T(d), b = T(m), k = T((O) => {
    const _ = Nc({
      style: y,
      timeout: x,
      easing: c
    }, {
      mode: "exit"
    });
    O.style.webkitTransition = r.transitions.create("opacity", _), O.style.transition = r.transitions.create("opacity", _), h && h(O);
  }), P = T(g);
  return /* @__PURE__ */ N(E, {
    appear: s,
    in: u,
    nodeRef: w,
    onEnter: R,
    onEntered: I,
    onEntering: C,
    onExit: k,
    onExited: P,
    onExiting: b,
    addEndListener: (O) => {
      i && i(w.current, O);
    },
    timeout: x,
    ...v,
    children: (O, {
      ownerState: _,
      ...$
    }) => /* @__PURE__ */ M.cloneElement(l, {
      style: {
        opacity: 0,
        visibility: O === "exited" && !u ? "hidden" : void 0,
        ...W5[O],
        ...y,
        ...l.props.style
      },
      ref: S,
      ...$
    })
  });
});
process.env.NODE_ENV !== "production" && (kS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: Za.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function U5(e) {
  return Gt("MuiBackdrop", e);
}
tn("MuiBackdrop", ["root", "invisible"]);
const q5 = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return nn({
    root: ["root", n && "invisible"]
  }, U5, t);
}, Y5 = Ke("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), RS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = ln({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: o,
    className: i,
    component: s = "div",
    invisible: l = !1,
    open: c,
    components: u = {},
    componentsProps: f = {},
    slotProps: d = {},
    slots: p = {},
    TransitionComponent: h,
    transitionDuration: g,
    ...m
  } = r, y = {
    ...r,
    component: s,
    invisible: l
  }, x = q5(y), E = {
    transition: h,
    root: u.Root,
    ...p
  }, v = {
    ...f,
    ...d
  }, w = {
    slots: E,
    slotProps: v
  }, [S, T] = vn("root", {
    elementType: Y5,
    externalForwardedProps: w,
    className: Oe(x.root, i),
    ownerState: y
  }), [C, R] = vn("transition", {
    elementType: kS,
    externalForwardedProps: w,
    ownerState: y
  });
  return /* @__PURE__ */ N(C, {
    in: c,
    timeout: g,
    ...m,
    ...R,
    children: /* @__PURE__ */ N(S, {
      "aria-hidden": !0,
      ...T,
      classes: x,
      ref: n,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (RS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    root: a.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: a.bool,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: a.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function K5(e) {
  return typeof e == "function" ? e() : e;
}
function G5(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const ib = () => {
}, $l = new D5();
function X5(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: r = !1,
    closeAfterTransition: o = !1,
    onTransitionEnter: i,
    onTransitionExited: s,
    children: l,
    onClose: c,
    open: u,
    rootRef: f
  } = e, d = M.useRef({}), p = M.useRef(null), h = M.useRef(null), g = sr(h, f), [m, y] = M.useState(!u), x = G5(l);
  let E = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (E = !1);
  const v = () => gr(p.current), w = () => (d.current.modalRef = h.current, d.current.mount = p.current, d.current), S = () => {
    $l.mount(w(), {
      disableScrollLock: r
    }), h.current && (h.current.scrollTop = 0);
  }, T = Jf(() => {
    const _ = K5(t) || v().body;
    $l.add(w(), _), h.current && S();
  }), C = () => $l.isTopModal(w()), R = Jf((_) => {
    p.current = _, _ && (u && C() ? S() : h.current && ra(h.current, E));
  }), I = M.useCallback(() => {
    $l.remove(w(), E);
  }, [E]);
  M.useEffect(() => () => {
    I();
  }, [I]), M.useEffect(() => {
    u ? T() : (!x || !o) && I();
  }, [u, I, x, o, T]);
  const b = (_) => ($) => {
    var D;
    (D = _.onKeyDown) == null || D.call(_, $), !($.key !== "Escape" || $.which === 229 || // Wait until IME is settled.
    !C()) && (n || ($.stopPropagation(), c && c($, "escapeKeyDown")));
  }, k = (_) => ($) => {
    var D;
    (D = _.onClick) == null || D.call(_, $), $.target === $.currentTarget && c && c($, "backdropClick");
  };
  return {
    getRootProps: (_ = {}) => {
      const $ = pS(e);
      delete $.onTransitionEnter, delete $.onTransitionExited;
      const D = {
        ...$,
        ..._
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...D,
        onKeyDown: b(D),
        ref: g
      };
    },
    getBackdropProps: (_ = {}) => {
      const $ = _;
      return {
        "aria-hidden": !0,
        ...$,
        onClick: k($),
        open: u
      };
    },
    getTransitionProps: () => {
      const _ = () => {
        y(!1), i && i();
      }, $ = () => {
        y(!0), s && s(), o && I();
      };
      return {
        onEnter: Wy(_, (l == null ? void 0 : l.props.onEnter) ?? ib),
        onExited: Wy($, (l == null ? void 0 : l.props.onExited) ?? ib)
      };
    },
    rootRef: g,
    portalRef: R,
    isTopModal: C,
    exited: m,
    hasTransition: x
  };
}
function Z5(e) {
  return Gt("MuiModal", e);
}
tn("MuiModal", ["root", "hidden", "backdrop"]);
const Q5 = (e) => {
  const {
    open: t,
    exited: n,
    classes: r
  } = e;
  return nn({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, Z5, r);
}, J5 = Ke("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(gn(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), eB = Ke(RS, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), NS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = ln({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: o = eB,
    BackdropProps: i,
    classes: s,
    className: l,
    closeAfterTransition: c = !1,
    children: u,
    container: f,
    component: d,
    components: p = {},
    componentsProps: h = {},
    disableAutoFocus: g = !1,
    disableEnforceFocus: m = !1,
    disableEscapeKeyDown: y = !1,
    disablePortal: x = !1,
    disableRestoreFocus: E = !1,
    disableScrollLock: v = !1,
    hideBackdrop: w = !1,
    keepMounted: S = !1,
    onClose: T,
    onTransitionEnter: C,
    onTransitionExited: R,
    open: I,
    slotProps: b = {},
    slots: k = {},
    // eslint-disable-next-line react/prop-types
    theme: P,
    ...A
  } = r, O = {
    ...r,
    closeAfterTransition: c,
    disableAutoFocus: g,
    disableEnforceFocus: m,
    disableEscapeKeyDown: y,
    disablePortal: x,
    disableRestoreFocus: E,
    disableScrollLock: v,
    hideBackdrop: w,
    keepMounted: S
  }, {
    getRootProps: _,
    getBackdropProps: $,
    getTransitionProps: D,
    portalRef: z,
    isTopModal: B,
    exited: L,
    hasTransition: F
  } = X5({
    ...O,
    rootRef: n
  }), W = {
    ...O,
    exited: L
  }, U = Q5(W), Z = {};
  if (u.props.tabIndex === void 0 && (Z.tabIndex = "-1"), F) {
    const {
      onEnter: G,
      onExited: ne
    } = D();
    Z.onEnter = G, Z.onExited = ne;
  }
  const Q = {
    slots: {
      root: p.Root,
      backdrop: p.Backdrop,
      ...k
    },
    slotProps: {
      ...h,
      ...b
    }
  }, [ee, te] = vn("root", {
    ref: n,
    elementType: J5,
    externalForwardedProps: {
      ...Q,
      ...A,
      component: d
    },
    getSlotProps: _,
    ownerState: W,
    className: Oe(l, U == null ? void 0 : U.root, !W.open && W.exited && (U == null ? void 0 : U.hidden))
  }), [q, oe] = vn("backdrop", {
    ref: i == null ? void 0 : i.ref,
    elementType: o,
    externalForwardedProps: Q,
    shouldForwardComponentProp: !0,
    additionalProps: i,
    getSlotProps: (G) => $({
      ...G,
      onClick: (ne) => {
        G != null && G.onClick && G.onClick(ne);
      }
    }),
    className: Oe(i == null ? void 0 : i.className, U == null ? void 0 : U.backdrop),
    ownerState: W
  });
  return !S && !I && (!F || L) ? null : /* @__PURE__ */ N(Ic, {
    ref: z,
    container: f,
    disablePortal: x,
    children: /* @__PURE__ */ we(ee, {
      ...te,
      children: [!w && o ? /* @__PURE__ */ N(q, {
        ...oe
      }) : null, /* @__PURE__ */ N(Pc, {
        disableEnforceFocus: m,
        disableAutoFocus: g,
        disableRestoreFocus: E,
        isEnabled: B,
        open: I,
        children: /* @__PURE__ */ M.cloneElement(u, Z)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (NS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: a.object,
  /**
   * A single child content element.
   */
  children: Za.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: a.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Backdrop: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Ea, a.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: a.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: a.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: a.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: a.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: a.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: a.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: a.bool,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: a.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: a.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function tB(e) {
  return Gt("MuiPaper", e);
}
tn("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const nB = (e) => {
  const {
    square: t,
    elevation: n,
    variant: r,
    classes: o
  } = e, i = {
    root: ["root", r, !t && "rounded", r === "elevation" && `elevation${n}`]
  };
  return nn(i, tB, o);
}, rB = Ke("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(gn(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), $S = /* @__PURE__ */ M.forwardRef(function(t, n) {
  var h;
  const r = ln({
    props: t,
    name: "MuiPaper"
  }), o = Hh(), {
    className: i,
    component: s = "div",
    elevation: l = 1,
    square: c = !1,
    variant: u = "elevation",
    ...f
  } = r, d = {
    ...r,
    component: s,
    elevation: l,
    square: c,
    variant: u
  }, p = nB(d);
  return process.env.NODE_ENV !== "production" && o.shadows[l] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${l}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${l}]\` is defined.`].join(`
`)), /* @__PURE__ */ N(rB, {
    as: s,
    ownerState: d,
    className: Oe(p.root, i),
    ref: n,
    ...f,
    style: {
      ...u === "elevation" && {
        "--Paper-shadow": (o.vars || o).shadows[l],
        ...o.vars && {
          "--Paper-overlay": (h = o.vars.overlays) == null ? void 0 : h[l]
        },
        ...!o.vars && o.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${Xf("#fff", Qf(l))}, ${Xf("#fff", Qf(l))})`
        }
      },
      ...f.style
    }
  });
});
process.env.NODE_ENV !== "production" && ($S.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: Xa(dS, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: a.bool,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: a.oneOfType([a.oneOf(["elevation", "outlined"]), a.string])
});
function oB(e) {
  return Gt("MuiPopover", e);
}
tn("MuiPopover", ["root", "paper"]);
function sb(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function ab(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function lb(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function Hs(e) {
  return typeof e == "function" ? e() : e;
}
const iB = (e) => {
  const {
    classes: t
  } = e;
  return nn({
    root: ["root"],
    paper: ["paper"]
  }, oB, t);
}, sB = Ke(NS, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), PS = Ke($S, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), IS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = ln({
    props: t,
    name: "MuiPopover"
  }), {
    action: o,
    anchorEl: i,
    anchorOrigin: s = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: l,
    anchorReference: c = "anchorEl",
    children: u,
    className: f,
    container: d,
    elevation: p = 8,
    marginThreshold: h = 16,
    open: g,
    PaperProps: m = {},
    // TODO: remove in v7
    slots: y = {},
    slotProps: x = {},
    transformOrigin: E = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: v,
    // TODO: remove in v7
    transitionDuration: w = "auto",
    TransitionProps: S = {},
    // TODO: remove in v7
    disableScrollLock: T = !1,
    ...C
  } = r, R = M.useRef(), I = {
    ...r,
    anchorOrigin: s,
    anchorReference: c,
    elevation: p,
    marginThreshold: h,
    transformOrigin: E,
    TransitionComponent: v,
    transitionDuration: w,
    TransitionProps: S
  }, b = iB(I), k = M.useCallback(() => {
    if (c === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (l || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), l;
    const G = Hs(i), ne = G && G.nodeType === 1 ? G : gr(R.current).body, j = ne.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const pe = ne.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && pe.top === 0 && pe.left === 0 && pe.right === 0 && pe.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: j.top + sb(j, s.vertical),
      left: j.left + ab(j, s.horizontal)
    };
  }, [i, s.horizontal, s.vertical, l, c]), P = M.useCallback((G) => ({
    vertical: sb(G, E.vertical),
    horizontal: ab(G, E.horizontal)
  }), [E.horizontal, E.vertical]), A = M.useCallback((G) => {
    const ne = {
      width: G.offsetWidth,
      height: G.offsetHeight
    }, j = P(ne);
    if (c === "none")
      return {
        top: null,
        left: null,
        transformOrigin: lb(j)
      };
    const pe = k();
    let ce = pe.top - j.vertical, be = pe.left - j.horizontal;
    const Pe = ce + ne.height, Me = be + ne.width, Ie = so(Hs(i)), Ne = Ie.innerHeight - h, Fe = Ie.innerWidth - h;
    if (h !== null && ce < h) {
      const ke = ce - h;
      ce -= ke, j.vertical += ke;
    } else if (h !== null && Pe > Ne) {
      const ke = Pe - Ne;
      ce -= ke, j.vertical += ke;
    }
    if (process.env.NODE_ENV !== "production" && ne.height > Ne && ne.height && Ne && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${ne.height - Ne}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), h !== null && be < h) {
      const ke = be - h;
      be -= ke, j.horizontal += ke;
    } else if (Me > Fe) {
      const ke = Me - Fe;
      be -= ke, j.horizontal += ke;
    }
    return {
      top: `${Math.round(ce)}px`,
      left: `${Math.round(be)}px`,
      transformOrigin: lb(j)
    };
  }, [i, c, k, P, h]), [O, _] = M.useState(g), $ = M.useCallback(() => {
    const G = R.current;
    if (!G)
      return;
    const ne = A(G);
    ne.top !== null && G.style.setProperty("top", ne.top), ne.left !== null && (G.style.left = ne.left), G.style.transformOrigin = ne.transformOrigin, _(!0);
  }, [A]);
  M.useEffect(() => (T && window.addEventListener("scroll", $), () => window.removeEventListener("scroll", $)), [i, T, $]);
  const D = () => {
    $();
  }, z = () => {
    _(!1);
  };
  M.useEffect(() => {
    g && $();
  }), M.useImperativeHandle(o, () => g ? {
    updatePosition: () => {
      $();
    }
  } : null, [g, $]), M.useEffect(() => {
    if (!g)
      return;
    const G = aS(() => {
      $();
    }), ne = so(Hs(i));
    return ne.addEventListener("resize", G), () => {
      G.clear(), ne.removeEventListener("resize", G);
    };
  }, [i, g, $]);
  let B = w;
  const L = {
    slots: {
      transition: v,
      ...y
    },
    slotProps: {
      transition: S,
      paper: m,
      ...x
    }
  }, [F, W] = vn("transition", {
    elementType: $c,
    externalForwardedProps: L,
    ownerState: I,
    getSlotProps: (G) => ({
      ...G,
      onEntering: (ne, j) => {
        var pe;
        (pe = G.onEntering) == null || pe.call(G, ne, j), D();
      },
      onExited: (ne) => {
        var j;
        (j = G.onExited) == null || j.call(G, ne), z();
      }
    }),
    additionalProps: {
      appear: !0,
      in: g
    }
  });
  w === "auto" && !F.muiSupportAuto && (B = void 0);
  const U = d || (i ? gr(Hs(i)).body : void 0), [Z, {
    slots: Q,
    slotProps: ee,
    ...te
  }] = vn("root", {
    ref: n,
    elementType: sB,
    externalForwardedProps: {
      ...L,
      ...C
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: y.backdrop
      },
      slotProps: {
        backdrop: o5(typeof x.backdrop == "function" ? x.backdrop(I) : x.backdrop, {
          invisible: !0
        })
      },
      container: U,
      open: g
    },
    ownerState: I,
    className: Oe(b.root, f)
  }), [q, oe] = vn("paper", {
    ref: R,
    className: b.paper,
    elementType: PS,
    externalForwardedProps: L,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: p,
      style: O ? void 0 : {
        opacity: 0
      }
    },
    ownerState: I
  });
  return /* @__PURE__ */ N(Z, {
    ...te,
    ...!tp(Z) && {
      slots: Q,
      slotProps: ee,
      disableScrollLock: T
    },
    children: /* @__PURE__ */ N(F, {
      ...W,
      timeout: B,
      children: /* @__PURE__ */ N(q, {
        ...oe,
        children: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (IS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: Lo,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: Xa(a.oneOfType([Ea, a.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = Hs(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: a.shape({
    horizontal: a.oneOfType([a.oneOf(["center", "left", "right"]), a.number]).isRequired,
    vertical: a.oneOfType([a.oneOf(["bottom", "center", "top"]), a.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: a.shape({
    left: a.number.isRequired,
    top: a.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: a.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: a.object,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Ea, a.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: a.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: dS,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: a.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: a.shape({
    component: iS
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: a.shape({
    horizontal: a.oneOfType([a.oneOf(["center", "left", "right"]), a.number]).isRequired,
    vertical: a.oneOfType([a.oneOf(["bottom", "center", "top"]), a.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: a.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object
});
function aB(e) {
  return Gt("MuiMenu", e);
}
tn("MuiMenu", ["root", "paper", "list"]);
const lB = {
  vertical: "top",
  horizontal: "right"
}, cB = {
  vertical: "top",
  horizontal: "left"
}, uB = (e) => {
  const {
    classes: t
  } = e;
  return nn({
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  }, aB, t);
}, dB = Ke(IS, {
  shouldForwardProp: (e) => Hr(e) || e === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), fB = Ke(PS, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}), pB = Ke(CS, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (e, t) => t.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), _S = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = ln({
    props: t,
    name: "MuiMenu"
  }), {
    autoFocus: o = !0,
    children: i,
    className: s,
    disableAutoFocusItem: l = !1,
    MenuListProps: c = {},
    onClose: u,
    open: f,
    PaperProps: d = {},
    PopoverClasses: p,
    transitionDuration: h = "auto",
    TransitionProps: {
      onEntering: g,
      ...m
    } = {},
    variant: y = "selectedMenu",
    slots: x = {},
    slotProps: E = {},
    ...v
  } = r, w = V2(), S = {
    ...r,
    autoFocus: o,
    disableAutoFocusItem: l,
    MenuListProps: c,
    onEntering: g,
    PaperProps: d,
    transitionDuration: h,
    TransitionProps: m,
    variant: y
  }, T = uB(S), C = o && !l && f, R = M.useRef(null), I = (B, L) => {
    R.current && R.current.adjustStyleForScrollbar(B, {
      direction: w ? "rtl" : "ltr"
    }), g && g(B, L);
  }, b = (B) => {
    B.key === "Tab" && (B.preventDefault(), u && u(B, "tabKeyDown"));
  };
  let k = -1;
  M.Children.map(i, (B, L) => {
    /* @__PURE__ */ M.isValidElement(B) && (process.env.NODE_ENV !== "production" && pr.isFragment(B) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), B.props.disabled || (y === "selectedMenu" && B.props.selected || k === -1) && (k = L));
  });
  const P = {
    slots: x,
    slotProps: {
      list: c,
      transition: m,
      paper: d,
      ...E
    }
  }, A = zD({
    elementType: x.root,
    externalSlotProps: E.root,
    ownerState: S,
    className: [T.root, s]
  }), [O, _] = vn("paper", {
    className: T.paper,
    elementType: fB,
    externalForwardedProps: P,
    shouldForwardComponentProp: !0,
    ownerState: S
  }), [$, D] = vn("list", {
    className: Oe(T.list, c.className),
    elementType: pB,
    shouldForwardComponentProp: !0,
    externalForwardedProps: P,
    getSlotProps: (B) => ({
      ...B,
      onKeyDown: (L) => {
        var F;
        b(L), (F = B.onKeyDown) == null || F.call(B, L);
      }
    }),
    ownerState: S
  }), z = typeof P.slotProps.transition == "function" ? P.slotProps.transition(S) : P.slotProps.transition;
  return /* @__PURE__ */ N(dB, {
    onClose: u,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: w ? "right" : "left"
    },
    transformOrigin: w ? lB : cB,
    slots: {
      root: x.root,
      paper: O,
      backdrop: x.backdrop,
      ...x.transition && {
        // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover
        transition: x.transition
      }
    },
    slotProps: {
      root: A,
      paper: _,
      backdrop: typeof E.backdrop == "function" ? E.backdrop(S) : E.backdrop,
      transition: {
        ...z,
        onEntering: (...B) => {
          var L;
          I(...B), (L = z == null ? void 0 : z.onEntering) == null || L.call(z, ...B);
        }
      }
    },
    open: f,
    ref: n,
    transitionDuration: h,
    ownerState: S,
    ...v,
    classes: p,
    children: /* @__PURE__ */ N($, {
      actions: R,
      autoFocus: o && (k === -1 || l),
      autoFocusItem: C,
      variant: y,
      ...D,
      children: i
    })
  });
});
process.env.NODE_ENV !== "production" && (_S.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: a.oneOfType([Ea, a.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: a.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: a.bool,
  /**
   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.
   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  MenuListProps: a.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: a.object,
  /**
   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.
   */
  PopoverClasses: a.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    list: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    list: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: a.oneOf(["menu", "selectedMenu"])
});
function hB(e) {
  return Gt("MuiNativeSelect", e);
}
const Uh = tn("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), mB = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: r,
    multiple: o,
    open: i,
    error: s
  } = e, l = {
    select: ["select", n, r && "disabled", o && "multiple", s && "error"],
    icon: ["icon", `icon${Wt(n)}`, i && "iconOpen", r && "disabled"]
  };
  return nn(l, hB, t);
}, MS = Ke("select")(({
  theme: e
}) => ({
  // Reset
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  // Reset
  borderRadius: 0,
  cursor: "pointer",
  "&:focus": {
    // Reset Chrome style
    borderRadius: 0
  },
  [`&.${Uh.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (e.vars || e).palette.background.paper
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.variant !== "filled" && t.variant !== "outlined",
    style: {
      // Bump specificity to allow extending custom inputs
      "&&&": {
        paddingRight: 24,
        minWidth: 16
        // So it doesn't collapse.
      }
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      "&&&": {
        paddingRight: 32
      }
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius,
      "&:focus": {
        borderRadius: (e.vars || e).shape.borderRadius
        // Reset the reset for Chrome style
      },
      "&&&": {
        paddingRight: 32
      }
    }
  }]
})), gB = Ke(MS, {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: Hr,
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.select, t[n.variant], n.error && t.error, {
      [`&.${Uh.multiple}`]: t.multiple
    }];
  }
})({}), AS = Ke("svg")(({
  theme: e
}) => ({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  // Center vertically, height is 1em
  top: "calc(50% - .5em)",
  // Don't block pointer events on the select under the icon.
  pointerEvents: "none",
  color: (e.vars || e).palette.action.active,
  [`&.${Uh.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.open,
    style: {
      transform: "rotate(180deg)"
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      right: 7
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      right: 7
    }
  }]
})), yB = Ke(AS, {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${Wt(n.variant)}`], n.open && t.iconOpen];
  }
})({}), DS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    className: r,
    disabled: o,
    error: i,
    IconComponent: s,
    inputRef: l,
    variant: c = "standard",
    ...u
  } = t, f = {
    ...t,
    disabled: o,
    variant: c,
    error: i
  }, d = mB(f);
  return /* @__PURE__ */ we(M.Fragment, {
    children: [/* @__PURE__ */ N(gB, {
      ownerState: f,
      className: Oe(d.select, r),
      disabled: o,
      ref: l || n,
      ...u
    }), t.multiple ? null : /* @__PURE__ */ N(yB, {
      as: s,
      ownerState: f,
      className: d.icon
    })]
  });
});
process.env.NODE_ENV !== "production" && (DS.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The CSS class name of the select element.
   */
  className: a.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: a.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: a.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: Lo,
  /**
   * @ignore
   */
  multiple: a.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: a.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The input value.
   */
  value: a.any,
  /**
   * The variant to use.
   */
  variant: a.oneOf(["standard", "outlined", "filled"])
});
function BS(e) {
  return Gt("MuiSelect", e);
}
const Ns = tn("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]);
var cb;
const bB = Ke(MS, {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [
      // Win specificity over the input base
      {
        [`&.${Ns.select}`]: t.select
      },
      {
        [`&.${Ns.select}`]: t[n.variant]
      },
      {
        [`&.${Ns.error}`]: t.error
      },
      {
        [`&.${Ns.multiple}`]: t.multiple
      }
    ];
  }
})({
  // Win specificity over the input base
  [`&.${Ns.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
}), vB = Ke(AS, {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${Wt(n.variant)}`], n.open && t.iconOpen];
  }
})({}), xB = Ke("input", {
  shouldForwardProp: (e) => nS(e) && e !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (e, t) => t.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function ub(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
function wB(e) {
  return e == null || typeof e == "string" && !e.trim();
}
const SB = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: r,
    multiple: o,
    open: i,
    error: s
  } = e, l = {
    select: ["select", n, r && "disabled", o && "multiple", s && "error"],
    icon: ["icon", `icon${Wt(n)}`, i && "iconOpen", r && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return nn(l, BS, t);
}, LS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  var Ce;
  const {
    "aria-describedby": r,
    "aria-label": o,
    autoFocus: i,
    autoWidth: s,
    children: l,
    className: c,
    defaultOpen: u,
    defaultValue: f,
    disabled: d,
    displayEmpty: p,
    error: h = !1,
    IconComponent: g,
    inputRef: m,
    labelId: y,
    MenuProps: x = {},
    multiple: E,
    name: v,
    onBlur: w,
    onChange: S,
    onClose: T,
    onFocus: C,
    onOpen: R,
    open: I,
    readOnly: b,
    renderValue: k,
    required: P,
    SelectDisplayProps: A = {},
    tabIndex: O,
    // catching `type` from Input which makes no sense for SelectInput
    type: _,
    value: $,
    variant: D = "standard",
    ...z
  } = t, [B, L] = qy({
    controlled: $,
    default: f,
    name: "Select"
  }), [F, W] = qy({
    controlled: I,
    default: u,
    name: "Select"
  }), U = M.useRef(null), Z = M.useRef(null), [Q, ee] = M.useState(null), {
    current: te
  } = M.useRef(I != null), [q, oe] = M.useState(), G = sr(n, m), ne = M.useCallback((ue) => {
    Z.current = ue, ue && ee(ue);
  }, []), j = Q == null ? void 0 : Q.parentNode;
  M.useImperativeHandle(G, () => ({
    focus: () => {
      Z.current.focus();
    },
    node: U.current,
    value: B
  }), [B]), M.useEffect(() => {
    u && F && Q && !te && (oe(s ? null : j.clientWidth), Z.current.focus());
  }, [Q, s]), M.useEffect(() => {
    i && Z.current.focus();
  }, [i]), M.useEffect(() => {
    if (!y)
      return;
    const ue = gr(Z.current).getElementById(y);
    if (ue) {
      const Te = () => {
        getSelection().isCollapsed && Z.current.focus();
      };
      return ue.addEventListener("click", Te), () => {
        ue.removeEventListener("click", Te);
      };
    }
  }, [y]);
  const pe = (ue, Te) => {
    ue ? R && R(Te) : T && T(Te), te || (oe(s ? null : j.clientWidth), W(ue));
  }, ce = (ue) => {
    ue.button === 0 && (ue.preventDefault(), Z.current.focus(), pe(!0, ue));
  }, be = (ue) => {
    pe(!1, ue);
  }, Pe = M.Children.toArray(l), Me = (ue) => {
    const Te = Pe.find((Le) => Le.props.value === ue.target.value);
    Te !== void 0 && (L(Te.props.value), S && S(ue, Te));
  }, Ie = (ue) => (Te) => {
    let Le;
    if (Te.currentTarget.hasAttribute("tabindex")) {
      if (E) {
        Le = Array.isArray(B) ? B.slice() : [];
        const We = B.indexOf(ue.props.value);
        We === -1 ? Le.push(ue.props.value) : Le.splice(We, 1);
      } else
        Le = ue.props.value;
      if (ue.props.onClick && ue.props.onClick(Te), B !== Le && (L(Le), S)) {
        const We = Te.nativeEvent || Te, Qe = new We.constructor(We.type, We);
        Object.defineProperty(Qe, "target", {
          writable: !0,
          value: {
            value: Le,
            name: v
          }
        }), S(Qe, ue);
      }
      E || pe(!1, Te);
    }
  }, Ne = (ue) => {
    b || [
      " ",
      "ArrowUp",
      "ArrowDown",
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
      "Enter"
    ].includes(ue.key) && (ue.preventDefault(), pe(!0, ue));
  }, Fe = Q !== null && F, ke = (ue) => {
    !Fe && w && (Object.defineProperty(ue, "target", {
      writable: !0,
      value: {
        value: B,
        name: v
      }
    }), w(ue));
  };
  delete z["aria-invalid"];
  let V, J;
  const ie = [];
  let X = !1, H = !1;
  (kc({
    value: B
  }) || p) && (k ? V = k(B) : X = !0);
  const K = Pe.map((ue) => {
    if (!/* @__PURE__ */ M.isValidElement(ue))
      return null;
    process.env.NODE_ENV !== "production" && pr.isFragment(ue) && console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    let Te;
    if (E) {
      if (!Array.isArray(B))
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `value` prop must be an array when using the `Select` component with `multiple`." : zr(2));
      Te = B.some((Le) => ub(Le, ue.props.value)), Te && X && ie.push(ue.props.children);
    } else
      Te = ub(B, ue.props.value), Te && X && (J = ue.props.children);
    return Te && (H = !0), /* @__PURE__ */ M.cloneElement(ue, {
      "aria-selected": Te ? "true" : "false",
      onClick: Ie(ue),
      onKeyUp: (Le) => {
        Le.key === " " && Le.preventDefault(), ue.props.onKeyUp && ue.props.onKeyUp(Le);
      },
      role: "option",
      selected: Te,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": ue.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  process.env.NODE_ENV !== "production" && M.useEffect(() => {
    if (!H && !E && B !== "") {
      const ue = Pe.map((Te) => Te.props.value);
      console.warn([`MUI: You have provided an out-of-range value \`${B}\` for the select ${v ? `(name="${v}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${ue.filter((Te) => Te != null).map((Te) => `\`${Te}\``).join(", ") || '""'}.`].join(`
`));
    }
  }, [H, Pe, E, v, B]), X && (E ? ie.length === 0 ? V = null : V = ie.reduce((ue, Te, Le) => (ue.push(Te), Le < ie.length - 1 && ue.push(", "), ue), []) : V = J);
  let re = q;
  !s && te && Q && (re = j.clientWidth);
  let he;
  typeof O < "u" ? he = O : he = d ? null : 0;
  const me = A.id || (v ? `mui-component-select-${v}` : void 0), le = {
    ...t,
    variant: D,
    value: B,
    open: Fe,
    error: h
  }, se = SB(le), ae = {
    ...x.PaperProps,
    ...(Ce = x.slotProps) == null ? void 0 : Ce.paper
  }, ge = rS();
  return /* @__PURE__ */ we(M.Fragment, {
    children: [/* @__PURE__ */ N(bB, {
      as: "div",
      ref: ne,
      tabIndex: he,
      role: "combobox",
      "aria-controls": Fe ? ge : void 0,
      "aria-disabled": d ? "true" : void 0,
      "aria-expanded": Fe ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": o,
      "aria-labelledby": [y, me].filter(Boolean).join(" ") || void 0,
      "aria-describedby": r,
      "aria-required": P ? "true" : void 0,
      "aria-invalid": h ? "true" : void 0,
      onKeyDown: Ne,
      onMouseDown: d || b ? null : ce,
      onBlur: ke,
      onFocus: C,
      ...A,
      ownerState: le,
      className: Oe(A.className, se.select, c),
      id: me,
      children: wB(V) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        cb || (cb = /* @__PURE__ */ N("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      ) : V
    }), /* @__PURE__ */ N(xB, {
      "aria-invalid": h,
      value: Array.isArray(B) ? B.join(",") : B,
      name: v,
      ref: U,
      "aria-hidden": !0,
      onChange: Me,
      tabIndex: -1,
      disabled: d,
      className: se.nativeInput,
      autoFocus: i,
      required: P,
      ...z,
      ownerState: le
    }), /* @__PURE__ */ N(vB, {
      as: g,
      className: se.icon,
      ownerState: le
    }), /* @__PURE__ */ N(_S, {
      id: `menu-${v || ""}`,
      anchorEl: j,
      open: Fe,
      onClose: be,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      },
      ...x,
      slotProps: {
        ...x.slotProps,
        list: {
          "aria-labelledby": y,
          role: "listbox",
          "aria-multiselectable": E ? "true" : void 0,
          disableListWrap: !0,
          id: ge,
          ...x.MenuListProps
        },
        paper: {
          ...ae,
          style: {
            minWidth: re,
            ...ae != null ? ae.style : null
          }
        }
      },
      children: K
    })]
  });
});
process.env.NODE_ENV !== "production" && (LS.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": a.string,
  /**
   * @ignore
   */
  "aria-label": a.string,
  /**
   * @ignore
   */
  autoFocus: a.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: a.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The CSS class name of the select element.
   */
  className: a.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: a.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: a.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: a.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: a.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: Lo,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: a.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: a.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: a.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: a.string,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: a.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool,
  /**
   * @ignore
   */
  readOnly: a.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: a.func,
  /**
   * If `true`, the component is required.
   */
  required: a.bool,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: a.object,
  /**
   * @ignore
   */
  tabIndex: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  type: a.any,
  /**
   * The input value.
   */
  value: a.any,
  /**
   * The variant to use.
   */
  variant: a.oneOf(["standard", "outlined", "filled"])
});
const EB = n5(/* @__PURE__ */ N("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown"), TB = (e) => {
  const {
    classes: t
  } = e, r = nn({
    root: ["root"]
  }, BS, t);
  return {
    ...t,
    ...r
  };
}, qh = {
  name: "MuiSelect",
  overridesResolver: (e, t) => t.root,
  shouldForwardProp: (e) => Hr(e) && e !== "variant",
  slot: "Root"
}, CB = Ke(Ku, qh)(""), OB = Ke(Xu, qh)(""), kB = Ke(Gu, qh)(""), Yh = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = ln({
    name: "MuiSelect",
    props: t
  }), {
    autoWidth: o = !1,
    children: i,
    classes: s = {},
    className: l,
    defaultOpen: c = !1,
    displayEmpty: u = !1,
    IconComponent: f = EB,
    id: d,
    input: p,
    inputProps: h,
    label: g,
    labelId: m,
    MenuProps: y,
    multiple: x = !1,
    native: E = !1,
    onClose: v,
    onOpen: w,
    open: S,
    renderValue: T,
    SelectDisplayProps: C,
    variant: R = "outlined",
    ...I
  } = r, b = E ? DS : LS, k = vs(), P = bs({
    props: r,
    muiFormControl: k,
    states: ["variant", "error"]
  }), A = P.variant || R, O = {
    ...r,
    variant: A,
    classes: s
  }, _ = TB(O), {
    root: $,
    ...D
  } = _, z = p || {
    standard: /* @__PURE__ */ N(CB, {
      ownerState: O
    }),
    outlined: /* @__PURE__ */ N(OB, {
      label: g,
      ownerState: O
    }),
    filled: /* @__PURE__ */ N(kB, {
      ownerState: O
    })
  }[A], B = sr(n, Qa(z));
  return /* @__PURE__ */ N(M.Fragment, {
    children: /* @__PURE__ */ M.cloneElement(z, {
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: b,
      inputProps: {
        children: i,
        error: P.error,
        IconComponent: f,
        variant: A,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: x,
        ...E ? {
          id: d
        } : {
          autoWidth: o,
          defaultOpen: c,
          displayEmpty: u,
          labelId: m,
          MenuProps: y,
          onClose: v,
          onOpen: w,
          open: S,
          renderValue: T,
          SelectDisplayProps: {
            id: d,
            ...C
          }
        },
        ...h,
        classes: h ? hn(D, h.classes) : D,
        ...p ? p.props.inputProps : {}
      },
      ...(x && E || u) && A === "outlined" ? {
        notched: !0
      } : {},
      ref: B,
      className: Oe(z.props.className, l, _.root),
      // If a custom input is provided via 'input' prop, do not allow 'variant' to be propagated to it's root element. See https://github.com/mui/material-ui/issues/33894.
      ...!p && {
        variant: A
      },
      ...I
    })
  });
});
process.env.NODE_ENV !== "production" && (Yh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: a.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: a.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: a.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: a.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: a.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: a.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: a.object,
  /**
   * See [OutlinedInput#label](https://mui.com/material-ui/api/outlined-input/#props)
   */
  label: a.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: a.string,
  /**
   * Props applied to the [`Menu`](https://mui.com/material-ui/api/menu/) element.
   */
  MenuProps: a.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: a.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: a.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: a.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: a.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: a.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: a.oneOfType([a.oneOf([""]), a.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
Yh.muiName = "Select";
function RB(e) {
  return Gt("MuiTextField", e);
}
tn("MuiTextField", ["root"]);
const NB = {
  standard: Ku,
  filled: Gu,
  outlined: Xu
}, $B = (e) => {
  const {
    classes: t
  } = e;
  return nn({
    root: ["root"]
  }, RB, t);
}, PB = Ke(xS, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), FS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = ln({
    props: t,
    name: "MuiTextField"
  }), {
    autoComplete: o,
    autoFocus: i = !1,
    children: s,
    className: l,
    color: c = "primary",
    defaultValue: u,
    disabled: f = !1,
    error: d = !1,
    FormHelperTextProps: p,
    fullWidth: h = !1,
    helperText: g,
    id: m,
    InputLabelProps: y,
    inputProps: x,
    InputProps: E,
    inputRef: v,
    label: w,
    maxRows: S,
    minRows: T,
    multiline: C = !1,
    name: R,
    onBlur: I,
    onChange: b,
    onFocus: k,
    placeholder: P,
    required: A = !1,
    rows: O,
    select: _ = !1,
    SelectProps: $,
    slots: D = {},
    slotProps: z = {},
    type: B,
    value: L,
    variant: F = "outlined",
    ...W
  } = r, U = {
    ...r,
    autoFocus: i,
    color: c,
    disabled: f,
    error: d,
    fullWidth: h,
    multiline: C,
    required: A,
    select: _,
    variant: F
  }, Z = $B(U);
  process.env.NODE_ENV !== "production" && _ && !s && console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
  const Q = rS(m), ee = g && Q ? `${Q}-helper-text` : void 0, te = w && Q ? `${Q}-label` : void 0, q = NB[F], oe = {
    slots: D,
    slotProps: {
      input: E,
      inputLabel: y,
      htmlInput: x,
      formHelperText: p,
      select: $,
      ...z
    }
  }, G = {}, ne = oe.slotProps.inputLabel;
  F === "outlined" && (ne && typeof ne.shrink < "u" && (G.notched = ne.shrink), G.label = w), _ && ((!$ || !$.native) && (G.id = void 0), G["aria-describedby"] = void 0);
  const [j, pe] = vn("root", {
    elementType: PB,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...oe,
      ...W
    },
    ownerState: U,
    className: Oe(Z.root, l),
    ref: n,
    additionalProps: {
      disabled: f,
      error: d,
      fullWidth: h,
      required: A,
      color: c,
      variant: F
    }
  }), [ce, be] = vn("input", {
    elementType: q,
    externalForwardedProps: oe,
    additionalProps: G,
    ownerState: U
  }), [Pe, Me] = vn("inputLabel", {
    elementType: vS,
    externalForwardedProps: oe,
    ownerState: U
  }), [Ie, Ne] = vn("htmlInput", {
    elementType: "input",
    externalForwardedProps: oe,
    ownerState: U
  }), [Fe, ke] = vn("formHelperText", {
    elementType: wS,
    externalForwardedProps: oe,
    ownerState: U
  }), [V, J] = vn("select", {
    elementType: Yh,
    externalForwardedProps: oe,
    ownerState: U
  }), ie = /* @__PURE__ */ N(ce, {
    "aria-describedby": ee,
    autoComplete: o,
    autoFocus: i,
    defaultValue: u,
    fullWidth: h,
    multiline: C,
    name: R,
    rows: O,
    maxRows: S,
    minRows: T,
    type: B,
    value: L,
    id: Q,
    inputRef: v,
    onBlur: I,
    onChange: b,
    onFocus: k,
    placeholder: P,
    inputProps: Ne,
    slots: {
      input: D.htmlInput ? Ie : void 0
    },
    ...be
  });
  return /* @__PURE__ */ we(j, {
    ...pe,
    children: [w != null && w !== "" && /* @__PURE__ */ N(Pe, {
      htmlFor: Q,
      id: te,
      ...Me,
      children: w
    }), _ ? /* @__PURE__ */ N(V, {
      "aria-describedby": ee,
      id: Q,
      labelId: te,
      value: L,
      input: ie,
      ...J,
      children: s
    }) : ie, g && /* @__PURE__ */ N(Fe, {
      id: ee,
      ...ke,
      children: g
    })]
  });
});
process.env.NODE_ENV !== "production" && (FS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: a.bool,
  /**
   * @ignore
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: a.bool,
  /**
   * Props applied to the [`FormHelperText`](https://mui.com/material-ui/api/form-helper-text/) element.
   * @deprecated Use `slotProps.formHelperText` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  FormHelperTextProps: a.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The helper text content.
   */
  helperText: a.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: a.string,
  /**
   * Props applied to the [`InputLabel`](https://mui.com/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   * @deprecated Use `slotProps.inputLabel` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputLabelProps: a.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.htmlInput` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: a.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](https://mui.com/material-ui/api/filled-input/),
   * [`OutlinedInput`](https://mui.com/material-ui/api/outlined-input/) or [`Input`](https://mui.com/material-ui/api/input/)
   * component depending on the `variant` prop value.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /**
   * The label content.
   */
  label: a.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: a.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * Render a [`Select`](https://mui.com/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: a.bool,
  /**
   * Props applied to the [`Select`](https://mui.com/material-ui/api/select/) element.
   * @deprecated Use `slotProps.select` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SelectProps: a.object,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    formHelperText: a.oneOfType([a.func, a.object]),
    htmlInput: a.oneOfType([a.func, a.object]),
    input: a.oneOfType([a.func, a.object]),
    inputLabel: a.oneOfType([a.func, a.object]),
    select: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    formHelperText: a.elementType,
    htmlInput: a.elementType,
    input: a.elementType,
    inputLabel: a.elementType,
    root: a.elementType,
    select: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
const IB = tn("MuiBox", ["root"]), _B = tS(), zS = T2({
  themeId: $u,
  defaultTheme: _B,
  defaultClassName: IB.root,
  generateClassName: Hw.generate
});
process.env.NODE_ENV !== "production" && (zS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: a.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const MB = Ke(FS)`
  input {
    text-align: center;
  }
`, AB = {
  TextFieldStyled: MB
}, DB = (e) => /* @__PURE__ */ N(AB.TextFieldStyled, { ...e }), $s = {
  left: "ArrowLeft",
  right: "ArrowRight",
  backspace: "Backspace",
  home: "Home",
  end: "End"
};
function BB(e, t) {
  return e <= 0 ? [] : Array.from({ length: e }, t);
}
function LB(e, t, n) {
  return e.map((r, o) => t === o ? n : r);
}
function db(e) {
  return e.join("");
}
function fb(e, t) {
  return [...e, t];
}
function FB(e, t, n) {
  return e.reduce(
    (r, o, i) => {
      const { characters: s, restArrayMerged: l } = r;
      if (i < n)
        return {
          restArrayMerged: l,
          characters: fb(s, o)
        };
      const [c, ...u] = l;
      return {
        restArrayMerged: u,
        characters: fb(s, c || "")
      };
    },
    {
      restArrayMerged: t,
      characters: []
    }
  ).characters;
}
function zB(e) {
  return (t) => {
    e.forEach((n) => {
      typeof n == "function" ? n(t) : n != null && (n.current = t);
    });
  };
}
function VB(e) {
  return e.split("");
}
function pb(e) {
  const t = Y.useRef(() => {
    throw new Error("Cannot call an event handler while rendering.");
  });
  return Y.useInsertionEffect(() => {
    t.current = e;
  }), Y.useCallback((...n) => {
    var r;
    return (r = t.current) == null ? void 0 : r.call(t, ...n);
  }, []);
}
const jB = () => !0, HB = Y.forwardRef(
  (e, t) => {
    const {
      value: n = "",
      length: r = 4,
      autoFocus: o = !1,
      onChange: i,
      TextFieldsProps: s,
      onComplete: l,
      validateChar: c = jB,
      className: u,
      onBlur: f,
      ...d
    } = e, p = Y.useRef(n), h = pb(l), g = pb((k) => {
      const P = k.slice(0, r);
      return {
        isCompleted: P.length === r,
        finalValue: P
      };
    });
    Y.useEffect(() => {
      const { isCompleted: k, finalValue: P } = g(
        p.current
      );
      k && h(P);
    }, [r, h, g]);
    const m = BB(
      r,
      (k, P) => ({
        character: n[P] || "",
        inputRef: Y.createRef()
      })
    ), y = (k) => m.findIndex(({ inputRef: P }) => P.current === k), x = () => m.map(({ character: k }) => k), E = (k, P) => {
      const A = LB(
        x(),
        k,
        P
      );
      return db(A);
    }, v = (k) => {
      var P, A;
      (A = (P = m[k]) == null ? void 0 : P.inputRef.current) == null || A.focus();
    }, w = (k) => {
      var P, A;
      (A = (P = m[k]) == null ? void 0 : P.inputRef.current) == null || A.select();
    }, S = (k) => {
      k + 1 !== r && (m[k + 1].character ? w(k + 1) : v(k + 1));
    }, T = (k, P) => typeof c != "function" ? !0 : c(k, P), C = (k) => {
      const P = y(k.target);
      if (P === 0 && k.target.value.length > 1) {
        const { finalValue: z, isCompleted: B } = g(
          k.target.value
        );
        i == null || i(z), B && (l == null || l(z)), w(z.length - 1);
        return;
      }
      const A = k.target.value[0] || "";
      let O = A;
      O && !T(O, P) && (O = "");
      const _ = E(P, O);
      i == null || i(_);
      const { isCompleted: $, finalValue: D } = g(_);
      $ && (l == null || l(D)), O !== "" ? _.length - 1 < P ? w(_.length) : S(P) : A === "" && _.length <= P && w(P - 1);
    }, R = (k) => {
      const P = k.target, A = P.selectionStart, O = P.selectionEnd, _ = y(P), $ = A === 0 && O === 0;
      if (P.value === k.key)
        k.preventDefault(), S(_);
      else if ($s.backspace === k.key) {
        if (!P.value)
          k.preventDefault(), w(_ - 1);
        else if ($) {
          k.preventDefault();
          const D = E(_, "");
          i == null || i(D), D.length <= _ && w(_ - 1);
        }
      } else $s.left === k.key ? (k.preventDefault(), w(_ - 1)) : $s.right === k.key ? (k.preventDefault(), w(_ + 1)) : $s.home === k.key ? (k.preventDefault(), w(0)) : $s.end === k.key && (k.preventDefault(), w(m.length - 1));
    }, I = (k) => {
      const P = k.clipboardData.getData("text/plain"), A = k.target, O = m.findIndex(
        ({ character: L, inputRef: F }) => L === "" || F.current === A
      ), _ = x(), $ = FB(
        _,
        VB(P),
        O
      ).map((L, F) => T(L, F) ? L : ""), D = db($);
      i == null || i(D);
      const { isCompleted: z, finalValue: B } = g(D);
      z ? (l == null || l(B), w(r - 1)) : w(D.length);
    }, b = (k) => {
      if (!m.some(({ inputRef: P }) => P.current === k.relatedTarget)) {
        const { isCompleted: P, finalValue: A } = g(n);
        f == null || f(A, P);
      }
    };
    return /* @__PURE__ */ N(
      zS,
      {
        display: "flex",
        gap: "20px",
        alignItems: "center",
        ref: t,
        className: `MuiOtpInput-Box ${u || ""}`,
        ...d,
        children: m.map(({ character: k, inputRef: P }, A) => {
          const {
            onPaste: O,
            onFocus: _,
            onKeyDown: $,
            className: D,
            onBlur: z,
            inputRef: B,
            ...L
          } = typeof s == "function" ? s(A) || {} : s || {};
          return /* @__PURE__ */ N(
            DB,
            {
              autoFocus: o ? A === 0 : !1,
              autoComplete: "one-time-code",
              value: k,
              inputRef: zB([P, B]),
              className: `MuiOtpInput-TextField MuiOtpInput-TextField-${A + 1} ${D || ""}`,
              onPaste: (F) => {
                F.preventDefault(), I(F), O == null || O(F);
              },
              onFocus: (F) => {
                F.preventDefault(), F.target.select(), _ == null || _(F);
              },
              onChange: C,
              onKeyDown: (F) => {
                R(F), $ == null || $(F);
              },
              onBlur: (F) => {
                z == null || z(F), b(F);
              },
              ...L
            },
            A
          );
        })
      }
    );
  }
), VS = ve(
  ({
    label: e = "",
    tooltip: t,
    value: n,
    onChange: r,
    isRequired: o,
    isDisabled: i,
    isError: s,
    errorMessage: l = ""
  }) => {
    const { textCommonStyles: c } = bu({
      isTitle: !1,
      isLabel: !0,
      textColor: i ? "disabled" : s ? "error" : "auto"
    });
    return /* @__PURE__ */ we(en, { gap: 0, children: [
      /* @__PURE__ */ N(
        Xi,
        {
          label: e,
          elementId: void 0,
          tooltip: t,
          isRequired: o,
          isDisabled: i,
          isError: s
        }
      ),
      /* @__PURE__ */ N(
        HB,
        {
          value: n,
          onChange: r,
          length: 6,
          TextFieldsProps: {
            disabled: i,
            error: s
          },
          sx: {
            "& .MuiInputBase-root": {
              borderRadius: "8px"
            },
            "& input": {
              width: "8px",
              height: "8px",
              p: "16px",
              borderRadius: "8px"
            }
          }
        }
      ),
      /* @__PURE__ */ N(
        wn,
        {
          text: s ? l : "",
          isLabel: !0,
          sx: { ...c, minHeight: "24px" }
        }
      )
    ] });
  }
);
VS.displayName = "OtpInput";
const jS = ve(({ isError: e, isDisabled: t, fullWidth: n, sx: r, ...o }) => {
  const { inputCommonStyle: i } = Aw({
    isDisabled: t,
    isError: e
  }), [s, l] = Jt(!1);
  return /* @__PURE__ */ N(
    Nu,
    {
      type: s ? "text" : "password",
      fullWidth: n,
      isError: e,
      endAdornment: /* @__PURE__ */ N(
        an,
        {
          isCircle: !0,
          isGhost: !0,
          icon: s ? "solar:eye-closed-bold-duotone" : "solar:eye-bold-duotone",
          color: e ? "error" : "primary",
          sx: { mr: -2 },
          onClick: () => l((c) => !c)
        }
      ),
      sx: {
        width: n ? "100%" : `calc(${i.minWidth} - 40px) !important`,
        ...r
      },
      ...o
    }
  );
});
jS.displayName = "Password";
const WB = ps(/* @__PURE__ */ N("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "RadioButtonUnchecked"), UB = ps(/* @__PURE__ */ N("path", {
  d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
}), "RadioButtonChecked"), qB = Ae("span", {
  shouldForwardProp: Vr
})({
  position: "relative",
  display: "flex"
}), YB = Ae(WB)({
  // Scale applied to prevent dot misalignment in Safari
  transform: "scale(1)"
}), KB = Ae(UB)(tt(({
  theme: e
}) => ({
  left: 0,
  position: "absolute",
  transform: "scale(0)",
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeIn,
    duration: e.transitions.duration.shortest
  }),
  variants: [{
    props: {
      checked: !0
    },
    style: {
      transform: "scale(1)",
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeOut,
        duration: e.transitions.duration.shortest
      })
    }
  }]
})));
function Kh(e) {
  const {
    checked: t = !1,
    classes: n = {},
    fontSize: r
  } = e, o = {
    ...e,
    checked: t
  };
  return /* @__PURE__ */ we(qB, {
    className: n.root,
    ownerState: o,
    children: [/* @__PURE__ */ N(YB, {
      fontSize: r,
      className: n.background,
      ownerState: o
    }), /* @__PURE__ */ N(KB, {
      fontSize: r,
      className: n.dot,
      ownerState: o
    })]
  });
}
process.env.NODE_ENV !== "production" && (Kh.propTypes = {
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   */
  fontSize: a.oneOf(["small", "medium"])
});
const HS = /* @__PURE__ */ M.createContext(void 0);
process.env.NODE_ENV !== "production" && (HS.displayName = "RadioGroupContext");
function GB() {
  return M.useContext(HS);
}
function XB(e) {
  return Et("MuiRadio", e);
}
const hb = Rt("MuiRadio", ["root", "checked", "disabled", "colorPrimary", "colorSecondary", "sizeSmall"]), ZB = (e) => {
  const {
    classes: t,
    color: n,
    size: r
  } = e, o = {
    root: ["root", `color${Ee(n)}`, r !== "medium" && `size${Ee(r)}`]
  };
  return {
    ...t,
    ...At(o, XB, t)
  };
}, QB = Ae(ku, {
  shouldForwardProp: (e) => Vr(e) || e === "classes",
  name: "MuiRadio",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size !== "medium" && t[`size${Ee(n.size)}`], t[`color${Ee(n.color)}`]];
  }
})(tt(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  [`&.${hb.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: {
      color: "default",
      disabled: !1,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : on(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(xn()).map(([t]) => ({
    props: {
      color: t,
      disabled: !1,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : on(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(xn()).map(([t]) => ({
    props: {
      color: t,
      disabled: !1
    },
    style: {
      [`&.${hb.checked}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
})));
function JB(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
const eL = /* @__PURE__ */ N(Kh, {
  checked: !0
}), tL = /* @__PURE__ */ N(Kh, {}), WS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiRadio"
  }), {
    checked: o,
    checkedIcon: i = eL,
    color: s = "primary",
    icon: l = tL,
    name: c,
    onChange: u,
    size: f = "medium",
    className: d,
    disabled: p,
    disableRipple: h = !1,
    slots: g = {},
    slotProps: m = {},
    inputProps: y,
    ...x
  } = r, E = Ou();
  let v = p;
  E && typeof v > "u" && (v = E.disabled), v ?? (v = !1);
  const w = {
    ...r,
    disabled: v,
    disableRipple: h,
    color: s,
    size: f
  }, S = ZB(w), T = GB();
  let C = o;
  const R = Tf(u, T && T.onChange);
  let I = c;
  T && (typeof C > "u" && (C = JB(T.value, r.value)), typeof I > "u" && (I = T.name));
  const b = m.input ?? y, [k, P] = pt("root", {
    ref: n,
    elementType: QB,
    className: Oe(S.root, d),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: g,
      slotProps: m,
      ...x
    },
    getSlotProps: (A) => ({
      ...A,
      onChange: (O, ..._) => {
        var $;
        ($ = A.onChange) == null || $.call(A, O, ..._), R(O, ..._);
      }
    }),
    ownerState: w,
    additionalProps: {
      type: "radio",
      icon: /* @__PURE__ */ M.cloneElement(l, {
        fontSize: l.props.fontSize ?? f
      }),
      checkedIcon: /* @__PURE__ */ M.cloneElement(i, {
        fontSize: i.props.fontSize ?? f
      }),
      disabled: v,
      name: I,
      checked: C,
      slots: g,
      slotProps: {
        // Do not forward `slotProps.root` again because it's already handled by the `RootSlot` in this file.
        input: typeof b == "function" ? b(w) : b
      }
    }
  });
  return /* @__PURE__ */ N(k, {
    ...P,
    classes: S
  });
});
process.env.NODE_ENV !== "production" && (WS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * The icon to display when the component is checked.
   * @default <RadioButtonIcon checked />
   */
  checkedIcon: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * If `true`, the component is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <RadioButtonIcon />
   */
  icon: a.node,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   * @deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputRef: co,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: a.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: a.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    input: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   */
  value: a.any
});
const US = ve(
  ({ label: e = "", tooltip: t, name: n, options: r, optionLabelDirection: o = "end", value: i, onChange: s }) => /* @__PURE__ */ we(en, { gap: 0, children: [
    /* @__PURE__ */ N(Xi, { label: e, elementId: void 0, tooltip: t }),
    /* @__PURE__ */ N(en, { gap: 0, children: r.map((l) => /* @__PURE__ */ N(
      Ru,
      {
        labelsDirection: "row",
        startLabel: o === "start" ? l.label : "",
        endLabel: o === "end" ? l.label : "",
        isDisabled: l.isDisabled,
        renderElement: (c) => /* @__PURE__ */ N(
          WS,
          {
            id: c,
            name: n,
            value: l.value,
            checked: i === l.value,
            disabled: l.isDisabled,
            onChange: (u) => s(r.find(({ value: f }) => f === u.target.value)),
            sx: {
              py: "6px",
              px: 0,
              mr: o === "start" ? "2px" : "8px",
              ml: o === "end" ? "2px" : "8px"
            }
          }
        )
      },
      l.value
    )) })
  ] })
);
US.displayName = "Radios";
function nL(e) {
  return Et("MuiSwitch", e);
}
const yn = Rt("MuiSwitch", ["root", "edgeStart", "edgeEnd", "switchBase", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium", "checked", "disabled", "input", "thumb", "track"]), rL = (e) => {
  const {
    classes: t,
    edge: n,
    size: r,
    color: o,
    checked: i,
    disabled: s
  } = e, l = {
    root: ["root", n && `edge${Ee(n)}`, `size${Ee(r)}`],
    switchBase: ["switchBase", `color${Ee(o)}`, i && "checked", s && "disabled"],
    thumb: ["thumb"],
    track: ["track"],
    input: ["input"]
  }, c = At(l, nL, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...c
  };
}, oL = Ae("span", {
  name: "MuiSwitch",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.edge && t[`edge${Ee(n.edge)}`], t[`size${Ee(n.size)}`]];
  }
})({
  display: "inline-flex",
  width: 34 + 12 * 2,
  height: 14 + 12 * 2,
  overflow: "hidden",
  padding: 12,
  boxSizing: "border-box",
  position: "relative",
  flexShrink: 0,
  zIndex: 0,
  // Reset the stacking context.
  verticalAlign: "middle",
  // For correct alignment with the text.
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [{
    props: {
      edge: "start"
    },
    style: {
      marginLeft: -8
    }
  }, {
    props: {
      edge: "end"
    },
    style: {
      marginRight: -8
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      width: 40,
      height: 24,
      padding: 7,
      [`& .${yn.thumb}`]: {
        width: 16,
        height: 16
      },
      [`& .${yn.switchBase}`]: {
        padding: 4,
        [`&.${yn.checked}`]: {
          transform: "translateX(16px)"
        }
      }
    }
  }]
}), iL = Ae(ku, {
  name: "MuiSwitch",
  slot: "SwitchBase",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.switchBase, {
      [`& .${yn.input}`]: t.input
    }, n.color !== "default" && t[`color${Ee(n.color)}`]];
  }
})(tt(({
  theme: e
}) => ({
  position: "absolute",
  top: 0,
  left: 0,
  zIndex: 1,
  // Render above the focus ripple.
  color: e.vars ? e.vars.palette.Switch.defaultColor : `${e.palette.mode === "light" ? e.palette.common.white : e.palette.grey[300]}`,
  transition: e.transitions.create(["left", "transform"], {
    duration: e.transitions.duration.shortest
  }),
  [`&.${yn.checked}`]: {
    transform: "translateX(20px)"
  },
  [`&.${yn.disabled}`]: {
    color: e.vars ? e.vars.palette.Switch.defaultDisabledColor : `${e.palette.mode === "light" ? e.palette.grey[100] : e.palette.grey[600]}`
  },
  [`&.${yn.checked} + .${yn.track}`]: {
    opacity: 0.5
  },
  [`&.${yn.disabled} + .${yn.track}`]: {
    opacity: e.vars ? e.vars.opacity.switchTrackDisabled : `${e.palette.mode === "light" ? 0.12 : 0.2}`
  },
  [`& .${yn.input}`]: {
    left: "-100%",
    width: "300%"
  }
})), tt(({
  theme: e
}) => ({
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : on(e.palette.action.active, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  variants: [...Object.entries(e.palette).filter(xn(["light"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${yn.checked}`]: {
        color: (e.vars || e).palette[t].main,
        "&:hover": {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : on(e.palette[t].main, e.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        },
        [`&.${yn.disabled}`]: {
          color: e.vars ? e.vars.palette.Switch[`${t}DisabledColor`] : `${e.palette.mode === "light" ? fs(e.palette[t].main, 0.62) : ds(e.palette[t].main, 0.55)}`
        }
      },
      [`&.${yn.checked} + .${yn.track}`]: {
        backgroundColor: (e.vars || e).palette[t].main
      }
    }
  }))]
}))), sL = Ae("span", {
  name: "MuiSwitch",
  slot: "Track",
  overridesResolver: (e, t) => t.track
})(tt(({
  theme: e
}) => ({
  height: "100%",
  width: "100%",
  borderRadius: 14 / 2,
  zIndex: -1,
  transition: e.transitions.create(["opacity", "background-color"], {
    duration: e.transitions.duration.shortest
  }),
  backgroundColor: e.vars ? e.vars.palette.common.onBackground : `${e.palette.mode === "light" ? e.palette.common.black : e.palette.common.white}`,
  opacity: e.vars ? e.vars.opacity.switchTrack : `${e.palette.mode === "light" ? 0.38 : 0.3}`
}))), aL = Ae("span", {
  name: "MuiSwitch",
  slot: "Thumb",
  overridesResolver: (e, t) => t.thumb
})(tt(({
  theme: e
}) => ({
  boxShadow: (e.vars || e).shadows[1],
  backgroundColor: "currentColor",
  width: 20,
  height: 20,
  borderRadius: "50%"
}))), qS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiSwitch"
  }), {
    className: o,
    color: i = "primary",
    edge: s = !1,
    size: l = "medium",
    sx: c,
    slots: u = {},
    slotProps: f = {},
    ...d
  } = r, p = {
    ...r,
    color: i,
    edge: s,
    size: l
  }, h = rL(p), g = {
    slots: u,
    slotProps: f
  }, [m, y] = pt("root", {
    className: Oe(h.root, o),
    elementType: oL,
    externalForwardedProps: g,
    ownerState: p,
    additionalProps: {
      sx: c
    }
  }), [x, E] = pt("thumb", {
    className: h.thumb,
    elementType: aL,
    externalForwardedProps: g,
    ownerState: p
  }), v = /* @__PURE__ */ N(x, {
    ...E
  }), [w, S] = pt("track", {
    className: h.track,
    elementType: sL,
    externalForwardedProps: g,
    ownerState: p
  });
  return /* @__PURE__ */ we(m, {
    ...y,
    children: [/* @__PURE__ */ N(iL, {
      type: "checkbox",
      icon: v,
      checkedIcon: v,
      ref: n,
      ownerState: p,
      ...d,
      classes: {
        ...h,
        root: h.switchBase
      },
      slots: {
        ...u.switchBase && {
          root: u.switchBase
        },
        ...u.input && {
          input: u.input
        }
      },
      slotProps: {
        ...f.switchBase && {
          root: typeof f.switchBase == "function" ? f.switchBase(p) : f.switchBase
        },
        ...f.input && {
          input: typeof f.input == "function" ? f.input(p) : f.input
        }
      }
    }), /* @__PURE__ */ N(w, {
      ...S
    })]
  });
});
process.env.NODE_ENV !== "production" && (qS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: a.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: a.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: a.node,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   * @deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputRef: co,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: a.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: a.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense switch styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    input: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    switchBase: a.oneOfType([a.func, a.object]),
    thumb: a.oneOfType([a.func, a.object]),
    track: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType,
    switchBase: a.elementType,
    thumb: a.elementType,
    track: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: a.any
});
const Gh = ve(
  ({ value: e, onChange: t, startLabel: n, endLabel: r, labelsDirection: o = "row", isDisabled: i }) => {
    const s = $e(
      (l) => /* @__PURE__ */ N(
        qS,
        {
          id: l,
          color: "primary",
          checked: e,
          disabled: i,
          onChange: (c) => t(c.target.checked),
          sx: {
            "& .MuiSwitch-track": {
              transition: "background-color 0s"
            }
          }
        }
      ),
      [e, t]
    );
    return n || r ? /* @__PURE__ */ N(
      Ru,
      {
        labelsDirection: o,
        startLabel: n,
        endLabel: r,
        isDisabled: i,
        renderElement: s
      }
    ) : s();
  }
);
Gh.displayName = "Switch";
var Ja = (e) => e.type === "checkbox", Yo = (e) => e instanceof Date, bn = (e) => e == null;
const YS = (e) => typeof e == "object";
var Ht = (e) => !bn(e) && !Array.isArray(e) && YS(e) && !Yo(e), KS = (e) => Ht(e) && e.target ? Ja(e.target) ? e.target.checked : e.target.value : e, lL = (e) => e.substring(0, e.search(/\.\d+(\.|$)/)) || e, GS = (e, t) => e.has(lL(t)), cL = (e) => {
  const t = e.constructor && e.constructor.prototype;
  return Ht(t) && t.hasOwnProperty("isPrototypeOf");
}, Xh = typeof window < "u" && typeof window.HTMLElement < "u" && typeof document < "u";
function _t(e) {
  let t;
  const n = Array.isArray(e), r = typeof FileList < "u" ? e instanceof FileList : !1;
  if (e instanceof Date)
    t = new Date(e);
  else if (e instanceof Set)
    t = new Set(e);
  else if (!(Xh && (e instanceof Blob || r)) && (n || Ht(e)))
    if (t = n ? [] : {}, !n && !cL(e))
      t = e;
    else
      for (const o in e)
        e.hasOwnProperty(o) && (t[o] = _t(e[o]));
  else
    return e;
  return t;
}
var el = (e) => Array.isArray(e) ? e.filter(Boolean) : [], wt = (e) => e === void 0, Se = (e, t, n) => {
  if (!t || !Ht(e))
    return n;
  const r = el(t.split(/[,[\].]+?/)).reduce((o, i) => bn(o) ? o : o[i], e);
  return wt(r) || r === e ? wt(e[t]) ? n : e[t] : r;
}, An = (e) => typeof e == "boolean", Zh = (e) => /^\w*$/.test(e), XS = (e) => el(e.replace(/["|']|\]/g, "").split(/\.|\[/)), et = (e, t, n) => {
  let r = -1;
  const o = Zh(t) ? [t] : XS(t), i = o.length, s = i - 1;
  for (; ++r < i; ) {
    const l = o[r];
    let c = n;
    if (r !== s) {
      const u = e[l];
      c = Ht(u) || Array.isArray(u) ? u : isNaN(+o[r + 1]) ? {} : [];
    }
    if (l === "__proto__" || l === "constructor" || l === "prototype")
      return;
    e[l] = c, e = e[l];
  }
};
const _c = {
  BLUR: "blur",
  FOCUS_OUT: "focusout",
  CHANGE: "change"
}, Zn = {
  onBlur: "onBlur",
  onChange: "onChange",
  onSubmit: "onSubmit",
  onTouched: "onTouched",
  all: "all"
}, Gr = {
  max: "max",
  min: "min",
  maxLength: "maxLength",
  minLength: "minLength",
  pattern: "pattern",
  required: "required",
  validate: "validate"
}, ZS = Y.createContext(null), ar = () => Y.useContext(ZS), uL = (e) => {
  const { children: t, ...n } = e;
  return Y.createElement(ZS.Provider, { value: n }, t);
};
var QS = (e, t, n, r = !0) => {
  const o = {
    defaultValues: t._defaultValues
  };
  for (const i in e)
    Object.defineProperty(o, i, {
      get: () => {
        const s = i;
        return t._proxyFormState[s] !== Zn.all && (t._proxyFormState[s] = !r || Zn.all), n && (n[s] = !0), e[s];
      }
    });
  return o;
};
function dL(e) {
  const t = ar(), { control: n = t.control, disabled: r, name: o, exact: i } = e || {}, [s, l] = Y.useState(n._formState), c = Y.useRef({
    isDirty: !1,
    isLoading: !1,
    dirtyFields: !1,
    touchedFields: !1,
    validatingFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  }), u = Y.useRef(o);
  return u.current = o, Y.useEffect(() => n._subscribe({
    name: u.current,
    formState: c.current,
    exact: i,
    callback: (f) => {
      !r && l({
        ...n._formState,
        ...f
      });
    }
  }), [n, r, i]), Y.useEffect(() => {
    c.current.isValid && n._setValid(!0);
  }, [n]), Y.useMemo(() => QS(s, n, c.current, !1), [s, n]);
}
var $r = (e) => typeof e == "string", JS = (e, t, n, r, o) => $r(e) ? (r && t.watch.add(e), Se(n, e, o)) : Array.isArray(e) ? e.map((i) => (r && t.watch.add(i), Se(n, i))) : (r && (t.watchAll = !0), n);
function fL(e) {
  const t = ar(), { control: n = t.control, name: r, defaultValue: o, disabled: i, exact: s } = e || {}, l = Y.useRef(r), c = Y.useRef(o);
  l.current = r, Y.useEffect(() => n._subscribe({
    name: l.current,
    formState: {
      values: !0
    },
    exact: s,
    callback: (d) => !i && f(JS(l.current, n._names, d.values || n._formValues, !1, c.current))
  }), [n, i, s]);
  const [u, f] = Y.useState(n._getWatch(r, o));
  return Y.useEffect(() => n._removeUnmounted()), u;
}
function pL(e) {
  const t = ar(), { name: n, disabled: r, control: o = t.control, shouldUnregister: i } = e, s = GS(o._names.array, n), l = fL({
    control: o,
    name: n,
    defaultValue: Se(o._formValues, n, Se(o._defaultValues, n, e.defaultValue)),
    exact: !0
  }), c = dL({
    control: o,
    name: n,
    exact: !0
  }), u = Y.useRef(e), f = Y.useRef(o.register(n, {
    ...e.rules,
    value: l,
    ...An(e.disabled) ? { disabled: e.disabled } : {}
  })), d = Y.useMemo(() => Object.defineProperties({}, {
    invalid: {
      enumerable: !0,
      get: () => !!Se(c.errors, n)
    },
    isDirty: {
      enumerable: !0,
      get: () => !!Se(c.dirtyFields, n)
    },
    isTouched: {
      enumerable: !0,
      get: () => !!Se(c.touchedFields, n)
    },
    isValidating: {
      enumerable: !0,
      get: () => !!Se(c.validatingFields, n)
    },
    error: {
      enumerable: !0,
      get: () => Se(c.errors, n)
    }
  }), [c, n]), p = Y.useCallback((y) => f.current.onChange({
    target: {
      value: KS(y),
      name: n
    },
    type: _c.CHANGE
  }), [n]), h = Y.useCallback(() => f.current.onBlur({
    target: {
      value: Se(o._formValues, n),
      name: n
    },
    type: _c.BLUR
  }), [n, o._formValues]), g = Y.useCallback((y) => {
    const x = Se(o._fields, n);
    x && y && (x._f.ref = {
      focus: () => y.focus(),
      select: () => y.select(),
      setCustomValidity: (E) => y.setCustomValidity(E),
      reportValidity: () => y.reportValidity()
    });
  }, [o._fields, n]), m = Y.useMemo(() => ({
    name: n,
    value: l,
    ...An(r) || c.disabled ? { disabled: c.disabled || r } : {},
    onChange: p,
    onBlur: h,
    ref: g
  }), [n, r, c.disabled, p, h, g, l]);
  return Y.useEffect(() => {
    const y = o._options.shouldUnregister || i;
    o.register(n, {
      ...u.current.rules,
      ...An(u.current.disabled) ? { disabled: u.current.disabled } : {}
    });
    const x = (E, v) => {
      const w = Se(o._fields, E);
      w && w._f && (w._f.mount = v);
    };
    if (x(n, !0), y) {
      const E = _t(Se(o._options.defaultValues, n));
      et(o._defaultValues, n, E), wt(Se(o._formValues, n)) && et(o._formValues, n, E);
    }
    return !s && o.register(n), () => {
      (s ? y && !o._state.action : y) ? o.unregister(n) : x(n, !1);
    };
  }, [n, o, s, i]), Y.useEffect(() => {
    o._setDisabledField({
      disabled: r,
      name: n
    });
  }, [r, n, o]), Y.useMemo(() => ({
    field: m,
    formState: c,
    fieldState: d
  }), [m, c, d]);
}
const li = (e) => e.render(pL(e));
var e1 = (e, t, n, r, o) => t ? {
  ...n[e],
  types: {
    ...n[e] && n[e].types ? n[e].types : {},
    [r]: o || !0
  }
} : {}, kn = (e) => Array.isArray(e) ? e : [e], mb = () => {
  let e = [];
  return {
    get observers() {
      return e;
    },
    next: (o) => {
      for (const i of e)
        i.next && i.next(o);
    },
    subscribe: (o) => (e.push(o), {
      unsubscribe: () => {
        e = e.filter((i) => i !== o);
      }
    }),
    unsubscribe: () => {
      e = [];
    }
  };
}, rp = (e) => bn(e) || !YS(e);
function xo(e, t) {
  if (rp(e) || rp(t))
    return e === t;
  if (Yo(e) && Yo(t))
    return e.getTime() === t.getTime();
  const n = Object.keys(e), r = Object.keys(t);
  if (n.length !== r.length)
    return !1;
  for (const o of n) {
    const i = e[o];
    if (!r.includes(o))
      return !1;
    if (o !== "ref") {
      const s = t[o];
      if (Yo(i) && Yo(s) || Ht(i) && Ht(s) || Array.isArray(i) && Array.isArray(s) ? !xo(i, s) : i !== s)
        return !1;
    }
  }
  return !0;
}
var un = (e) => Ht(e) && !Object.keys(e).length, Qh = (e) => e.type === "file", cr = (e) => typeof e == "function", Mc = (e) => {
  if (!Xh)
    return !1;
  const t = e ? e.ownerDocument : 0;
  return e instanceof (t && t.defaultView ? t.defaultView.HTMLElement : HTMLElement);
}, t1 = (e) => e.type === "select-multiple", Jh = (e) => e.type === "radio", hL = (e) => Jh(e) || Ja(e), Wd = (e) => Mc(e) && e.isConnected;
function mL(e, t) {
  const n = t.slice(0, -1).length;
  let r = 0;
  for (; r < n; )
    e = wt(e) ? r++ : e[t[r++]];
  return e;
}
function gL(e) {
  for (const t in e)
    if (e.hasOwnProperty(t) && !wt(e[t]))
      return !1;
  return !0;
}
function Yt(e, t) {
  const n = Array.isArray(t) ? t : Zh(t) ? [t] : XS(t), r = n.length === 1 ? e : mL(e, n), o = n.length - 1, i = n[o];
  return r && delete r[i], o !== 0 && (Ht(r) && un(r) || Array.isArray(r) && gL(r)) && Yt(e, n.slice(0, -1)), e;
}
var n1 = (e) => {
  for (const t in e)
    if (cr(e[t]))
      return !0;
  return !1;
};
function Ac(e, t = {}) {
  const n = Array.isArray(e);
  if (Ht(e) || n)
    for (const r in e)
      Array.isArray(e[r]) || Ht(e[r]) && !n1(e[r]) ? (t[r] = Array.isArray(e[r]) ? [] : {}, Ac(e[r], t[r])) : bn(e[r]) || (t[r] = !0);
  return t;
}
function r1(e, t, n) {
  const r = Array.isArray(e);
  if (Ht(e) || r)
    for (const o in e)
      Array.isArray(e[o]) || Ht(e[o]) && !n1(e[o]) ? wt(t) || rp(n[o]) ? n[o] = Array.isArray(e[o]) ? Ac(e[o], []) : { ...Ac(e[o]) } : r1(e[o], bn(t) ? {} : t[o], n[o]) : n[o] = !xo(e[o], t[o]);
  return n;
}
var Ps = (e, t) => r1(e, t, Ac(t));
const gb = {
  value: !1,
  isValid: !1
}, yb = { value: !0, isValid: !0 };
var o1 = (e) => {
  if (Array.isArray(e)) {
    if (e.length > 1) {
      const t = e.filter((n) => n && n.checked && !n.disabled).map((n) => n.value);
      return { value: t, isValid: !!t.length };
    }
    return e[0].checked && !e[0].disabled ? (
      // @ts-expect-error expected to work in the browser
      e[0].attributes && !wt(e[0].attributes.value) ? wt(e[0].value) || e[0].value === "" ? yb : { value: e[0].value, isValid: !0 } : yb
    ) : gb;
  }
  return gb;
}, i1 = (e, { valueAsNumber: t, valueAsDate: n, setValueAs: r }) => wt(e) ? e : t ? e === "" ? NaN : e && +e : n && $r(e) ? new Date(e) : r ? r(e) : e;
const bb = {
  isValid: !1,
  value: null
};
var s1 = (e) => Array.isArray(e) ? e.reduce((t, n) => n && n.checked && !n.disabled ? {
  isValid: !0,
  value: n.value
} : t, bb) : bb;
function vb(e) {
  const t = e.ref;
  return Qh(t) ? t.files : Jh(t) ? s1(e.refs).value : t1(t) ? [...t.selectedOptions].map(({ value: n }) => n) : Ja(t) ? o1(e.refs).value : i1(wt(t.value) ? e.ref.value : t.value, e);
}
var yL = (e, t, n, r) => {
  const o = {};
  for (const i of e) {
    const s = Se(t, i);
    s && et(o, i, s._f);
  }
  return {
    criteriaMode: n,
    names: [...e],
    fields: o,
    shouldUseNativeValidation: r
  };
}, Dc = (e) => e instanceof RegExp, Is = (e) => wt(e) ? e : Dc(e) ? e.source : Ht(e) ? Dc(e.value) ? e.value.source : e.value : e, Ni = (e) => ({
  isOnSubmit: !e || e === Zn.onSubmit,
  isOnBlur: e === Zn.onBlur,
  isOnChange: e === Zn.onChange,
  isOnAll: e === Zn.all,
  isOnTouch: e === Zn.onTouched
});
const xb = "AsyncFunction";
var bL = (e) => !!e && !!e.validate && !!(cr(e.validate) && e.validate.constructor.name === xb || Ht(e.validate) && Object.values(e.validate).find((t) => t.constructor.name === xb)), vL = (e) => e.mount && (e.required || e.min || e.max || e.maxLength || e.minLength || e.pattern || e.validate), op = (e, t, n) => !n && (t.watchAll || t.watch.has(e) || [...t.watch].some((r) => e.startsWith(r) && /^\.\w+/.test(e.slice(r.length))));
const Di = (e, t, n, r) => {
  for (const o of n || Object.keys(e)) {
    const i = Se(e, o);
    if (i) {
      const { _f: s, ...l } = i;
      if (s) {
        if (s.refs && s.refs[0] && t(s.refs[0], o) && !r)
          return !0;
        if (s.ref && t(s.ref, s.name) && !r)
          return !0;
        if (Di(l, t))
          break;
      } else if (Ht(l) && Di(l, t))
        break;
    }
  }
};
function wb(e, t, n) {
  const r = Se(e, n);
  if (r || Zh(n))
    return {
      error: r,
      name: n
    };
  const o = n.split(".");
  for (; o.length; ) {
    const i = o.join("."), s = Se(t, i), l = Se(e, i);
    if (s && !Array.isArray(s) && n !== i)
      return { name: n };
    if (l && l.type)
      return {
        name: i,
        error: l
      };
    o.pop();
  }
  return {
    name: n
  };
}
var xL = (e, t, n, r) => {
  n(e);
  const { name: o, ...i } = e;
  return un(i) || Object.keys(i).length >= Object.keys(t).length || Object.keys(i).find((s) => t[s] === (!r || Zn.all));
}, wL = (e, t, n) => !e || !t || e === t || kn(e).some((r) => r && (n ? r === t : r.startsWith(t) || t.startsWith(r))), SL = (e, t, n, r, o) => o.isOnAll ? !1 : !n && o.isOnTouch ? !(t || e) : (n ? r.isOnBlur : o.isOnBlur) ? !e : (n ? r.isOnChange : o.isOnChange) ? e : !0, EL = (e, t) => !el(Se(e, t)).length && Yt(e, t), a1 = (e, t, n) => {
  const r = kn(Se(e, n));
  return et(r, "root", t[n]), et(e, n, r), e;
}, nc = (e) => $r(e);
function Sb(e, t, n = "validate") {
  if (nc(e) || Array.isArray(e) && e.every(nc) || An(e) && !e)
    return {
      type: n,
      message: nc(e) ? e : "",
      ref: t
    };
}
var Ei = (e) => Ht(e) && !Dc(e) ? e : {
  value: e,
  message: ""
}, ip = async (e, t, n, r, o, i) => {
  const { ref: s, refs: l, required: c, maxLength: u, minLength: f, min: d, max: p, pattern: h, validate: g, name: m, valueAsNumber: y, mount: x } = e._f, E = Se(n, m);
  if (!x || t.has(m))
    return {};
  const v = l ? l[0] : s, w = (P) => {
    o && v.reportValidity && (v.setCustomValidity(An(P) ? "" : P || ""), v.reportValidity());
  }, S = {}, T = Jh(s), C = Ja(s), R = T || C, I = (y || Qh(s)) && wt(s.value) && wt(E) || Mc(s) && s.value === "" || E === "" || Array.isArray(E) && !E.length, b = e1.bind(null, m, r, S), k = (P, A, O, _ = Gr.maxLength, $ = Gr.minLength) => {
    const D = P ? A : O;
    S[m] = {
      type: P ? _ : $,
      message: D,
      ref: s,
      ...b(P ? _ : $, D)
    };
  };
  if (i ? !Array.isArray(E) || !E.length : c && (!R && (I || bn(E)) || An(E) && !E || C && !o1(l).isValid || T && !s1(l).isValid)) {
    const { value: P, message: A } = nc(c) ? { value: !!c, message: c } : Ei(c);
    if (P && (S[m] = {
      type: Gr.required,
      message: A,
      ref: v,
      ...b(Gr.required, A)
    }, !r))
      return w(A), S;
  }
  if (!I && (!bn(d) || !bn(p))) {
    let P, A;
    const O = Ei(p), _ = Ei(d);
    if (!bn(E) && !isNaN(E)) {
      const $ = s.valueAsNumber || E && +E;
      bn(O.value) || (P = $ > O.value), bn(_.value) || (A = $ < _.value);
    } else {
      const $ = s.valueAsDate || new Date(E), D = (L) => /* @__PURE__ */ new Date((/* @__PURE__ */ new Date()).toDateString() + " " + L), z = s.type == "time", B = s.type == "week";
      $r(O.value) && E && (P = z ? D(E) > D(O.value) : B ? E > O.value : $ > new Date(O.value)), $r(_.value) && E && (A = z ? D(E) < D(_.value) : B ? E < _.value : $ < new Date(_.value));
    }
    if ((P || A) && (k(!!P, O.message, _.message, Gr.max, Gr.min), !r))
      return w(S[m].message), S;
  }
  if ((u || f) && !I && ($r(E) || i && Array.isArray(E))) {
    const P = Ei(u), A = Ei(f), O = !bn(P.value) && E.length > +P.value, _ = !bn(A.value) && E.length < +A.value;
    if ((O || _) && (k(O, P.message, A.message), !r))
      return w(S[m].message), S;
  }
  if (h && !I && $r(E)) {
    const { value: P, message: A } = Ei(h);
    if (Dc(P) && !E.match(P) && (S[m] = {
      type: Gr.pattern,
      message: A,
      ref: s,
      ...b(Gr.pattern, A)
    }, !r))
      return w(A), S;
  }
  if (g) {
    if (cr(g)) {
      const P = await g(E, n), A = Sb(P, v);
      if (A && (S[m] = {
        ...A,
        ...b(Gr.validate, A.message)
      }, !r))
        return w(A.message), S;
    } else if (Ht(g)) {
      let P = {};
      for (const A in g) {
        if (!un(P) && !r)
          break;
        const O = Sb(await g[A](E, n), v, A);
        O && (P = {
          ...O,
          ...b(A, O.message)
        }, w(O.message), r && (S[m] = P));
      }
      if (!un(P) && (S[m] = {
        ref: v,
        ...P
      }, !r))
        return S;
    }
  }
  return w(!0), S;
};
const TL = {
  mode: Zn.onSubmit,
  reValidateMode: Zn.onChange,
  shouldFocusError: !0
};
function CL(e = {}) {
  let t = {
    ...TL,
    ...e
  }, n = {
    submitCount: 0,
    isDirty: !1,
    isLoading: cr(t.defaultValues),
    isValidating: !1,
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    touchedFields: {},
    dirtyFields: {},
    validatingFields: {},
    errors: t.errors || {},
    disabled: t.disabled || !1
  };
  const r = {};
  let o = Ht(t.defaultValues) || Ht(t.values) ? _t(t.values || t.defaultValues) || {} : {}, i = t.shouldUnregister ? {} : _t(o), s = {
    action: !1,
    mount: !1,
    watch: !1
  }, l = {
    mount: /* @__PURE__ */ new Set(),
    disabled: /* @__PURE__ */ new Set(),
    unMount: /* @__PURE__ */ new Set(),
    array: /* @__PURE__ */ new Set(),
    watch: /* @__PURE__ */ new Set()
  }, c, u = 0;
  const f = {
    isDirty: !1,
    dirtyFields: !1,
    validatingFields: !1,
    touchedFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  };
  let d = {
    ...f
  };
  const p = {
    array: mb(),
    state: mb()
  }, h = Ni(t.mode), g = Ni(t.reValidateMode), m = t.criteriaMode === Zn.all, y = (V) => (J) => {
    clearTimeout(u), u = setTimeout(V, J);
  }, x = async (V) => {
    if (!t.disabled && (f.isValid || d.isValid || V)) {
      const J = t.resolver ? un((await I()).errors) : await k(r, !0);
      J !== n.isValid && p.state.next({
        isValid: J
      });
    }
  }, E = (V, J) => {
    !t.disabled && (f.isValidating || f.validatingFields || d.isValidating || d.validatingFields) && ((V || Array.from(l.mount)).forEach((ie) => {
      ie && (J ? et(n.validatingFields, ie, J) : Yt(n.validatingFields, ie));
    }), p.state.next({
      validatingFields: n.validatingFields,
      isValidating: !un(n.validatingFields)
    }));
  }, v = (V, J = [], ie, X, H = !0, K = !0) => {
    if (X && ie && !t.disabled) {
      if (s.action = !0, K && Array.isArray(Se(r, V))) {
        const re = ie(Se(r, V), X.argA, X.argB);
        H && et(r, V, re);
      }
      if (K && Array.isArray(Se(n.errors, V))) {
        const re = ie(Se(n.errors, V), X.argA, X.argB);
        H && et(n.errors, V, re), EL(n.errors, V);
      }
      if ((f.touchedFields || d.touchedFields) && K && Array.isArray(Se(n.touchedFields, V))) {
        const re = ie(Se(n.touchedFields, V), X.argA, X.argB);
        H && et(n.touchedFields, V, re);
      }
      (f.dirtyFields || d.dirtyFields) && (n.dirtyFields = Ps(o, i)), p.state.next({
        name: V,
        isDirty: A(V, J),
        dirtyFields: n.dirtyFields,
        errors: n.errors,
        isValid: n.isValid
      });
    } else
      et(i, V, J);
  }, w = (V, J) => {
    et(n.errors, V, J), p.state.next({
      errors: n.errors
    });
  }, S = (V) => {
    n.errors = V, p.state.next({
      errors: n.errors,
      isValid: !1
    });
  }, T = (V, J, ie, X) => {
    const H = Se(r, V);
    if (H) {
      const K = Se(i, V, wt(ie) ? Se(o, V) : ie);
      wt(K) || X && X.defaultChecked || J ? et(i, V, J ? K : vb(H._f)) : $(V, K), s.mount && x();
    }
  }, C = (V, J, ie, X, H) => {
    let K = !1, re = !1;
    const he = {
      name: V
    };
    if (!t.disabled) {
      if (!ie || X) {
        (f.isDirty || d.isDirty) && (re = n.isDirty, n.isDirty = he.isDirty = A(), K = re !== he.isDirty);
        const me = xo(Se(o, V), J);
        re = !!Se(n.dirtyFields, V), me ? Yt(n.dirtyFields, V) : et(n.dirtyFields, V, !0), he.dirtyFields = n.dirtyFields, K = K || (f.dirtyFields || d.dirtyFields) && re !== !me;
      }
      if (ie) {
        const me = Se(n.touchedFields, V);
        me || (et(n.touchedFields, V, ie), he.touchedFields = n.touchedFields, K = K || (f.touchedFields || d.touchedFields) && me !== ie);
      }
      K && H && p.state.next(he);
    }
    return K ? he : {};
  }, R = (V, J, ie, X) => {
    const H = Se(n.errors, V), K = (f.isValid || d.isValid) && An(J) && n.isValid !== J;
    if (t.delayError && ie ? (c = y(() => w(V, ie)), c(t.delayError)) : (clearTimeout(u), c = null, ie ? et(n.errors, V, ie) : Yt(n.errors, V)), (ie ? !xo(H, ie) : H) || !un(X) || K) {
      const re = {
        ...X,
        ...K && An(J) ? { isValid: J } : {},
        errors: n.errors,
        name: V
      };
      n = {
        ...n,
        ...re
      }, p.state.next(re);
    }
  }, I = async (V) => {
    E(V, !0);
    const J = await t.resolver(i, t.context, yL(V || l.mount, r, t.criteriaMode, t.shouldUseNativeValidation));
    return E(V), J;
  }, b = async (V) => {
    const { errors: J } = await I(V);
    if (V)
      for (const ie of V) {
        const X = Se(J, ie);
        X ? et(n.errors, ie, X) : Yt(n.errors, ie);
      }
    else
      n.errors = J;
    return J;
  }, k = async (V, J, ie = {
    valid: !0
  }) => {
    for (const X in V) {
      const H = V[X];
      if (H) {
        const { _f: K, ...re } = H;
        if (K) {
          const he = l.array.has(K.name), me = H._f && bL(H._f);
          me && f.validatingFields && E([X], !0);
          const le = await ip(H, l.disabled, i, m, t.shouldUseNativeValidation && !J, he);
          if (me && f.validatingFields && E([X]), le[K.name] && (ie.valid = !1, J))
            break;
          !J && (Se(le, K.name) ? he ? a1(n.errors, le, K.name) : et(n.errors, K.name, le[K.name]) : Yt(n.errors, K.name));
        }
        !un(re) && await k(re, J, ie);
      }
    }
    return ie.valid;
  }, P = () => {
    for (const V of l.unMount) {
      const J = Se(r, V);
      J && (J._f.refs ? J._f.refs.every((ie) => !Wd(ie)) : !Wd(J._f.ref)) && oe(V);
    }
    l.unMount = /* @__PURE__ */ new Set();
  }, A = (V, J) => !t.disabled && (V && J && et(i, V, J), !xo(W(), o)), O = (V, J, ie) => JS(V, l, {
    ...s.mount ? i : wt(J) ? o : $r(V) ? { [V]: J } : J
  }, ie, J), _ = (V) => el(Se(s.mount ? i : o, V, t.shouldUnregister ? Se(o, V, []) : [])), $ = (V, J, ie = {}) => {
    const X = Se(r, V);
    let H = J;
    if (X) {
      const K = X._f;
      K && (!K.disabled && et(i, V, i1(J, K)), H = Mc(K.ref) && bn(J) ? "" : J, t1(K.ref) ? [...K.ref.options].forEach((re) => re.selected = H.includes(re.value)) : K.refs ? Ja(K.ref) ? K.refs.length > 1 ? K.refs.forEach((re) => (!re.defaultChecked || !re.disabled) && (re.checked = Array.isArray(H) ? !!H.find((he) => he === re.value) : H === re.value)) : K.refs[0] && (K.refs[0].checked = !!H) : K.refs.forEach((re) => re.checked = re.value === H) : Qh(K.ref) ? K.ref.value = "" : (K.ref.value = H, K.ref.type || p.state.next({
        name: V,
        values: _t(i)
      })));
    }
    (ie.shouldDirty || ie.shouldTouch) && C(V, H, ie.shouldTouch, ie.shouldDirty, !0), ie.shouldValidate && F(V);
  }, D = (V, J, ie) => {
    for (const X in J) {
      const H = J[X], K = `${V}.${X}`, re = Se(r, K);
      (l.array.has(V) || Ht(H) || re && !re._f) && !Yo(H) ? D(K, H, ie) : $(K, H, ie);
    }
  }, z = (V, J, ie = {}) => {
    const X = Se(r, V), H = l.array.has(V), K = _t(J);
    et(i, V, K), H ? (p.array.next({
      name: V,
      values: _t(i)
    }), (f.isDirty || f.dirtyFields || d.isDirty || d.dirtyFields) && ie.shouldDirty && p.state.next({
      name: V,
      dirtyFields: Ps(o, i),
      isDirty: A(V, K)
    })) : X && !X._f && !bn(K) ? D(V, K, ie) : $(V, K, ie), op(V, l) && p.state.next({ ...n }), p.state.next({
      name: s.mount ? V : void 0,
      values: _t(i)
    });
  }, B = async (V) => {
    s.mount = !0;
    const J = V.target;
    let ie = J.name, X = !0;
    const H = Se(r, ie), K = (re) => {
      X = Number.isNaN(re) || Yo(re) && isNaN(re.getTime()) || xo(re, Se(i, ie, re));
    };
    if (H) {
      let re, he;
      const me = J.type ? vb(H._f) : KS(V), le = V.type === _c.BLUR || V.type === _c.FOCUS_OUT, se = !vL(H._f) && !t.resolver && !Se(n.errors, ie) && !H._f.deps || SL(le, Se(n.touchedFields, ie), n.isSubmitted, g, h), ae = op(ie, l, le);
      et(i, ie, me), le ? (H._f.onBlur && H._f.onBlur(V), c && c(0)) : H._f.onChange && H._f.onChange(V);
      const ge = C(ie, me, le), Ce = !un(ge) || ae;
      if (!le && p.state.next({
        name: ie,
        type: V.type,
        values: _t(i)
      }), se)
        return (f.isValid || d.isValid) && (t.mode === "onBlur" ? le && x() : le || x()), Ce && p.state.next({ name: ie, ...ae ? {} : ge });
      if (!le && ae && p.state.next({ ...n }), t.resolver) {
        const { errors: ue } = await I([ie]);
        if (K(me), X) {
          const Te = wb(n.errors, r, ie), Le = wb(ue, r, Te.name || ie);
          re = Le.error, ie = Le.name, he = un(ue);
        }
      } else
        E([ie], !0), re = (await ip(H, l.disabled, i, m, t.shouldUseNativeValidation))[ie], E([ie]), K(me), X && (re ? he = !1 : (f.isValid || d.isValid) && (he = await k(r, !0)));
      X && (H._f.deps && F(H._f.deps), R(ie, he, re, ge));
    }
  }, L = (V, J) => {
    if (Se(n.errors, J) && V.focus)
      return V.focus(), 1;
  }, F = async (V, J = {}) => {
    let ie, X;
    const H = kn(V);
    if (t.resolver) {
      const K = await b(wt(V) ? V : H);
      ie = un(K), X = V ? !H.some((re) => Se(K, re)) : ie;
    } else V ? (X = (await Promise.all(H.map(async (K) => {
      const re = Se(r, K);
      return await k(re && re._f ? { [K]: re } : re);
    }))).every(Boolean), !(!X && !n.isValid) && x()) : X = ie = await k(r);
    return p.state.next({
      ...!$r(V) || (f.isValid || d.isValid) && ie !== n.isValid ? {} : { name: V },
      ...t.resolver || !V ? { isValid: ie } : {},
      errors: n.errors
    }), J.shouldFocus && !X && Di(r, L, V ? H : l.mount), X;
  }, W = (V) => {
    const J = {
      ...s.mount ? i : o
    };
    return wt(V) ? J : $r(V) ? Se(J, V) : V.map((ie) => Se(J, ie));
  }, U = (V, J) => ({
    invalid: !!Se((J || n).errors, V),
    isDirty: !!Se((J || n).dirtyFields, V),
    error: Se((J || n).errors, V),
    isValidating: !!Se(n.validatingFields, V),
    isTouched: !!Se((J || n).touchedFields, V)
  }), Z = (V) => {
    V && kn(V).forEach((J) => Yt(n.errors, J)), p.state.next({
      errors: V ? n.errors : {}
    });
  }, Q = (V, J, ie) => {
    const X = (Se(r, V, { _f: {} })._f || {}).ref, H = Se(n.errors, V) || {}, { ref: K, message: re, type: he, ...me } = H;
    et(n.errors, V, {
      ...me,
      ...J,
      ref: X
    }), p.state.next({
      name: V,
      errors: n.errors,
      isValid: !1
    }), ie && ie.shouldFocus && X && X.focus && X.focus();
  }, ee = (V, J) => cr(V) ? p.state.subscribe({
    next: (ie) => V(O(void 0, J), ie)
  }) : O(V, J, !0), te = (V) => p.state.subscribe({
    next: (J) => {
      wL(V.name, J.name, V.exact) && xL(J, V.formState || f, Ne, V.reRenderRoot) && V.callback({
        values: { ...i },
        ...n,
        ...J
      });
    }
  }).unsubscribe, q = (V) => (s.mount = !0, d = {
    ...d,
    ...V.formState
  }, te({
    ...V,
    formState: d
  })), oe = (V, J = {}) => {
    for (const ie of V ? kn(V) : l.mount)
      l.mount.delete(ie), l.array.delete(ie), J.keepValue || (Yt(r, ie), Yt(i, ie)), !J.keepError && Yt(n.errors, ie), !J.keepDirty && Yt(n.dirtyFields, ie), !J.keepTouched && Yt(n.touchedFields, ie), !J.keepIsValidating && Yt(n.validatingFields, ie), !t.shouldUnregister && !J.keepDefaultValue && Yt(o, ie);
    p.state.next({
      values: _t(i)
    }), p.state.next({
      ...n,
      ...J.keepDirty ? { isDirty: A() } : {}
    }), !J.keepIsValid && x();
  }, G = ({ disabled: V, name: J }) => {
    (An(V) && s.mount || V || l.disabled.has(J)) && (V ? l.disabled.add(J) : l.disabled.delete(J));
  }, ne = (V, J = {}) => {
    let ie = Se(r, V);
    const X = An(J.disabled) || An(t.disabled);
    return et(r, V, {
      ...ie || {},
      _f: {
        ...ie && ie._f ? ie._f : { ref: { name: V } },
        name: V,
        mount: !0,
        ...J
      }
    }), l.mount.add(V), ie ? G({
      disabled: An(J.disabled) ? J.disabled : t.disabled,
      name: V
    }) : T(V, !0, J.value), {
      ...X ? { disabled: J.disabled || t.disabled } : {},
      ...t.progressive ? {
        required: !!J.required,
        min: Is(J.min),
        max: Is(J.max),
        minLength: Is(J.minLength),
        maxLength: Is(J.maxLength),
        pattern: Is(J.pattern)
      } : {},
      name: V,
      onChange: B,
      onBlur: B,
      ref: (H) => {
        if (H) {
          ne(V, J), ie = Se(r, V);
          const K = wt(H.value) && H.querySelectorAll && H.querySelectorAll("input,select,textarea")[0] || H, re = hL(K), he = ie._f.refs || [];
          if (re ? he.find((me) => me === K) : K === ie._f.ref)
            return;
          et(r, V, {
            _f: {
              ...ie._f,
              ...re ? {
                refs: [
                  ...he.filter(Wd),
                  K,
                  ...Array.isArray(Se(o, V)) ? [{}] : []
                ],
                ref: { type: K.type, name: V }
              } : { ref: K }
            }
          }), T(V, !1, void 0, K);
        } else
          ie = Se(r, V, {}), ie._f && (ie._f.mount = !1), (t.shouldUnregister || J.shouldUnregister) && !(GS(l.array, V) && s.action) && l.unMount.add(V);
      }
    };
  }, j = () => t.shouldFocusError && Di(r, L, l.mount), pe = (V) => {
    An(V) && (p.state.next({ disabled: V }), Di(r, (J, ie) => {
      const X = Se(r, ie);
      X && (J.disabled = X._f.disabled || V, Array.isArray(X._f.refs) && X._f.refs.forEach((H) => {
        H.disabled = X._f.disabled || V;
      }));
    }, 0, !1));
  }, ce = (V, J) => async (ie) => {
    let X;
    ie && (ie.preventDefault && ie.preventDefault(), ie.persist && ie.persist());
    let H = _t(i);
    if (p.state.next({
      isSubmitting: !0
    }), t.resolver) {
      const { errors: K, values: re } = await I();
      n.errors = K, H = re;
    } else
      await k(r);
    if (l.disabled.size)
      for (const K of l.disabled)
        et(H, K, void 0);
    if (Yt(n.errors, "root"), un(n.errors)) {
      p.state.next({
        errors: {}
      });
      try {
        await V(H, ie);
      } catch (K) {
        X = K;
      }
    } else
      J && await J({ ...n.errors }, ie), j(), setTimeout(j);
    if (p.state.next({
      isSubmitted: !0,
      isSubmitting: !1,
      isSubmitSuccessful: un(n.errors) && !X,
      submitCount: n.submitCount + 1,
      errors: n.errors
    }), X)
      throw X;
  }, be = (V, J = {}) => {
    Se(r, V) && (wt(J.defaultValue) ? z(V, _t(Se(o, V))) : (z(V, J.defaultValue), et(o, V, _t(J.defaultValue))), J.keepTouched || Yt(n.touchedFields, V), J.keepDirty || (Yt(n.dirtyFields, V), n.isDirty = J.defaultValue ? A(V, _t(Se(o, V))) : A()), J.keepError || (Yt(n.errors, V), f.isValid && x()), p.state.next({ ...n }));
  }, Pe = (V, J = {}) => {
    const ie = V ? _t(V) : o, X = _t(ie), H = un(V), K = H ? o : X;
    if (J.keepDefaultValues || (o = ie), !J.keepValues) {
      if (J.keepDirtyValues) {
        const re = /* @__PURE__ */ new Set([
          ...l.mount,
          ...Object.keys(Ps(o, i))
        ]);
        for (const he of Array.from(re))
          Se(n.dirtyFields, he) ? et(K, he, Se(i, he)) : z(he, Se(K, he));
      } else {
        if (Xh && wt(V))
          for (const re of l.mount) {
            const he = Se(r, re);
            if (he && he._f) {
              const me = Array.isArray(he._f.refs) ? he._f.refs[0] : he._f.ref;
              if (Mc(me)) {
                const le = me.closest("form");
                if (le) {
                  le.reset();
                  break;
                }
              }
            }
          }
        for (const re of l.mount)
          z(re, Se(K, re));
      }
      i = _t(K), p.array.next({
        values: { ...K }
      }), p.state.next({
        values: { ...K }
      });
    }
    l = {
      mount: J.keepDirtyValues ? l.mount : /* @__PURE__ */ new Set(),
      unMount: /* @__PURE__ */ new Set(),
      array: /* @__PURE__ */ new Set(),
      disabled: /* @__PURE__ */ new Set(),
      watch: /* @__PURE__ */ new Set(),
      watchAll: !1,
      focus: ""
    }, s.mount = !f.isValid || !!J.keepIsValid || !!J.keepDirtyValues, s.watch = !!t.shouldUnregister, p.state.next({
      submitCount: J.keepSubmitCount ? n.submitCount : 0,
      isDirty: H ? !1 : J.keepDirty ? n.isDirty : !!(J.keepDefaultValues && !xo(V, o)),
      isSubmitted: J.keepIsSubmitted ? n.isSubmitted : !1,
      dirtyFields: H ? {} : J.keepDirtyValues ? J.keepDefaultValues && i ? Ps(o, i) : n.dirtyFields : J.keepDefaultValues && V ? Ps(o, V) : J.keepDirty ? n.dirtyFields : {},
      touchedFields: J.keepTouched ? n.touchedFields : {},
      errors: J.keepErrors ? n.errors : {},
      isSubmitSuccessful: J.keepIsSubmitSuccessful ? n.isSubmitSuccessful : !1,
      isSubmitting: !1
    });
  }, Me = (V, J) => Pe(cr(V) ? V(i) : V, J), Ie = (V, J = {}) => {
    const ie = Se(r, V), X = ie && ie._f;
    if (X) {
      const H = X.refs ? X.refs[0] : X.ref;
      H.focus && (H.focus(), J.shouldSelect && cr(H.select) && H.select());
    }
  }, Ne = (V) => {
    n = {
      ...n,
      ...V
    };
  }, ke = {
    control: {
      register: ne,
      unregister: oe,
      getFieldState: U,
      handleSubmit: ce,
      setError: Q,
      _subscribe: te,
      _runSchema: I,
      _getWatch: O,
      _getDirty: A,
      _setValid: x,
      _setFieldArray: v,
      _setDisabledField: G,
      _setErrors: S,
      _getFieldArray: _,
      _reset: Pe,
      _resetDefaultValues: () => cr(t.defaultValues) && t.defaultValues().then((V) => {
        Me(V, t.resetOptions), p.state.next({
          isLoading: !1
        });
      }),
      _removeUnmounted: P,
      _disableForm: pe,
      _subjects: p,
      _proxyFormState: f,
      get _fields() {
        return r;
      },
      get _formValues() {
        return i;
      },
      get _state() {
        return s;
      },
      set _state(V) {
        s = V;
      },
      get _defaultValues() {
        return o;
      },
      get _names() {
        return l;
      },
      set _names(V) {
        l = V;
      },
      get _formState() {
        return n;
      },
      get _options() {
        return t;
      },
      set _options(V) {
        t = {
          ...t,
          ...V
        };
      }
    },
    subscribe: q,
    trigger: F,
    register: ne,
    handleSubmit: ce,
    watch: ee,
    setValue: z,
    getValues: W,
    reset: Me,
    resetField: be,
    clearErrors: Z,
    unregister: oe,
    setError: Q,
    setFocus: Ie,
    getFieldState: U
  };
  return {
    ...ke,
    formControl: ke
  };
}
var go = () => {
  const e = typeof performance > "u" ? Date.now() : performance.now() * 1e3;
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (t) => {
    const n = (Math.random() * 16 + e) % 16 | 0;
    return (t == "x" ? n : n & 3 | 8).toString(16);
  });
}, Ud = (e, t, n = {}) => n.shouldFocus || wt(n.shouldFocus) ? n.focusName || `${e}.${wt(n.focusIndex) ? t : n.focusIndex}.` : "", qd = (e, t) => [
  ...e,
  ...kn(t)
], Yd = (e) => Array.isArray(e) ? e.map(() => {
}) : void 0;
function Kd(e, t, n) {
  return [
    ...e.slice(0, t),
    ...kn(n),
    ...e.slice(t)
  ];
}
var Gd = (e, t, n) => Array.isArray(e) ? (wt(e[n]) && (e[n] = void 0), e.splice(n, 0, e.splice(t, 1)[0]), e) : [], Xd = (e, t) => [
  ...kn(t),
  ...kn(e)
];
function OL(e, t) {
  let n = 0;
  const r = [...e];
  for (const o of t)
    r.splice(o - n, 1), n++;
  return el(r).length ? r : [];
}
var Zd = (e, t) => wt(t) ? [] : OL(e, kn(t).sort((n, r) => n - r)), Qd = (e, t, n) => {
  [e[t], e[n]] = [e[n], e[t]];
}, Eb = (e, t, n) => (e[t] = n, e);
function VU(e) {
  const t = ar(), { control: n = t.control, name: r, keyName: o = "id", shouldUnregister: i, rules: s } = e, [l, c] = Y.useState(n._getFieldArray(r)), u = Y.useRef(n._getFieldArray(r).map(go)), f = Y.useRef(l), d = Y.useRef(r), p = Y.useRef(!1);
  d.current = r, f.current = l, n._names.array.add(r), s && n.register(r, s), Y.useEffect(() => n._subjects.array.subscribe({
    next: ({ values: T, name: C }) => {
      if (C === d.current || !C) {
        const R = Se(T, d.current);
        Array.isArray(R) && (c(R), u.current = R.map(go));
      }
    }
  }).unsubscribe, [n]);
  const h = Y.useCallback((T) => {
    p.current = !0, n._setFieldArray(r, T);
  }, [n, r]), g = (T, C) => {
    const R = kn(_t(T)), I = qd(n._getFieldArray(r), R);
    n._names.focus = Ud(r, I.length - 1, C), u.current = qd(u.current, R.map(go)), h(I), c(I), n._setFieldArray(r, I, qd, {
      argA: Yd(T)
    });
  }, m = (T, C) => {
    const R = kn(_t(T)), I = Xd(n._getFieldArray(r), R);
    n._names.focus = Ud(r, 0, C), u.current = Xd(u.current, R.map(go)), h(I), c(I), n._setFieldArray(r, I, Xd, {
      argA: Yd(T)
    });
  }, y = (T) => {
    const C = Zd(n._getFieldArray(r), T);
    u.current = Zd(u.current, T), h(C), c(C), !Array.isArray(Se(n._fields, r)) && et(n._fields, r, void 0), n._setFieldArray(r, C, Zd, {
      argA: T
    });
  }, x = (T, C, R) => {
    const I = kn(_t(C)), b = Kd(n._getFieldArray(r), T, I);
    n._names.focus = Ud(r, T, R), u.current = Kd(u.current, T, I.map(go)), h(b), c(b), n._setFieldArray(r, b, Kd, {
      argA: T,
      argB: Yd(C)
    });
  }, E = (T, C) => {
    const R = n._getFieldArray(r);
    Qd(R, T, C), Qd(u.current, T, C), h(R), c(R), n._setFieldArray(r, R, Qd, {
      argA: T,
      argB: C
    }, !1);
  }, v = (T, C) => {
    const R = n._getFieldArray(r);
    Gd(R, T, C), Gd(u.current, T, C), h(R), c(R), n._setFieldArray(r, R, Gd, {
      argA: T,
      argB: C
    }, !1);
  }, w = (T, C) => {
    const R = _t(C), I = Eb(n._getFieldArray(r), T, R);
    u.current = [...I].map((b, k) => !b || k === T ? go() : u.current[k]), h(I), c([...I]), n._setFieldArray(r, I, Eb, {
      argA: T,
      argB: R
    }, !0, !1);
  }, S = (T) => {
    const C = kn(_t(T));
    u.current = C.map(go), h([...C]), c([...C]), n._setFieldArray(r, [...C], (R) => R, {}, !0, !1);
  };
  return Y.useEffect(() => {
    if (n._state.action = !1, op(r, n._names) && n._subjects.state.next({
      ...n._formState
    }), p.current && (!Ni(n._options.mode).isOnSubmit || n._formState.isSubmitted) && !Ni(n._options.reValidateMode).isOnSubmit)
      if (n._options.resolver)
        n._runSchema([r]).then((T) => {
          const C = Se(T.errors, r), R = Se(n._formState.errors, r);
          (R ? !C && R.type || C && (R.type !== C.type || R.message !== C.message) : C && C.type) && (C ? et(n._formState.errors, r, C) : Yt(n._formState.errors, r), n._subjects.state.next({
            errors: n._formState.errors
          }));
        });
      else {
        const T = Se(n._fields, r);
        T && T._f && !(Ni(n._options.reValidateMode).isOnSubmit && Ni(n._options.mode).isOnSubmit) && ip(T, n._names.disabled, n._formValues, n._options.criteriaMode === Zn.all, n._options.shouldUseNativeValidation, !0).then((C) => !un(C) && n._subjects.state.next({
          errors: a1(n._formState.errors, C, r)
        }));
      }
    n._subjects.state.next({
      name: r,
      values: _t(n._formValues)
    }), n._names.focus && Di(n._fields, (T, C) => {
      if (n._names.focus && C.startsWith(n._names.focus) && T.focus)
        return T.focus(), 1;
    }), n._names.focus = "", n._setValid(), p.current = !1;
  }, [l, r, n]), Y.useEffect(() => (!Se(n._formValues, r) && n._setFieldArray(r), () => {
    const T = (C, R) => {
      const I = Se(n._fields, C);
      I && I._f && (I._f.mount = R);
    };
    n._options.shouldUnregister || i ? n.unregister(r) : T(r, !1);
  }), [r, n, o, i]), {
    swap: Y.useCallback(E, [h, r, n]),
    move: Y.useCallback(v, [h, r, n]),
    prepend: Y.useCallback(m, [h, r, n]),
    append: Y.useCallback(g, [h, r, n]),
    remove: Y.useCallback(y, [h, r, n]),
    insert: Y.useCallback(x, [h, r, n]),
    update: Y.useCallback(w, [h, r, n]),
    replace: Y.useCallback(S, [h, r, n]),
    fields: Y.useMemo(() => l.map((T, C) => ({
      ...T,
      [o]: u.current[C] || go()
    })), [l, o])
  };
}
function jU(e = {}) {
  const t = Y.useRef(void 0), n = Y.useRef(void 0), [r, o] = Y.useState({
    isDirty: !1,
    isValidating: !1,
    isLoading: cr(e.defaultValues),
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    submitCount: 0,
    dirtyFields: {},
    touchedFields: {},
    validatingFields: {},
    errors: e.errors || {},
    disabled: e.disabled || !1,
    defaultValues: cr(e.defaultValues) ? void 0 : e.defaultValues
  });
  t.current || (t.current = {
    ...e.formControl ? e.formControl : CL(e),
    formState: r
  }, e.formControl && e.defaultValues && !cr(e.defaultValues) && e.formControl.reset(e.defaultValues, e.resetOptions));
  const i = t.current.control;
  return i._options = e, Y.useLayoutEffect(() => i._subscribe({
    formState: i._proxyFormState,
    callback: () => o({ ...i._formState }),
    reRenderRoot: !0
  }), [i]), Y.useEffect(() => i._disableForm(e.disabled), [i, e.disabled]), Y.useEffect(() => {
    if (i._proxyFormState.isDirty) {
      const s = i._getDirty();
      s !== r.isDirty && i._subjects.state.next({
        isDirty: s
      });
    }
  }, [i, r.isDirty]), Y.useEffect(() => {
    e.values && !xo(e.values, n.current) ? (i._reset(e.values, i._options.resetOptions), n.current = e.values, o((s) => ({ ...s }))) : i._resetDefaultValues();
  }, [e.values, i]), Y.useEffect(() => {
    e.errors && !un(e.errors) && i._setErrors(e.errors);
  }, [e.errors, i]), Y.useEffect(() => {
    i._state.mount || (i._setValid(), i._state.mount = !0), i._state.watch && (i._state.watch = !1, i._subjects.state.next({ ...i._formState })), i._removeUnmounted();
  }), Y.useEffect(() => {
    e.shouldUnregister && i._subjects.state.next({
      values: i._getWatch()
    });
  }, [e.shouldUnregister, i]), t.current.formState = QS(r, i), t.current;
}
const Tb = (e, t, n) => {
  if (e && "reportValidity" in e) {
    const r = Se(n, t);
    e.setCustomValidity(r && r.message || ""), e.reportValidity();
  }
}, l1 = (e, t) => {
  for (const n in t.fields) {
    const r = t.fields[n];
    r && r.ref && "reportValidity" in r.ref ? Tb(r.ref, n, e) : r && r.refs && r.refs.forEach((o) => Tb(o, n, e));
  }
}, kL = (e, t) => {
  t.shouldUseNativeValidation && l1(e, t);
  const n = {};
  for (const r in e) {
    const o = Se(t.fields, r), i = Object.assign(e[r] || {}, { ref: o && o.ref });
    if (RL(t.names || Object.keys(e), r)) {
      const s = Object.assign({}, Se(n, r));
      et(s, "root", i), et(n, r, s);
    } else et(n, r, i);
  }
  return n;
}, RL = (e, t) => {
  const n = Cb(t);
  return e.some((r) => Cb(r).match(`^${n}\\.\\d+`));
};
function Cb(e) {
  return e.replace(/\]|\[/g, "");
}
function NL(e, t) {
  for (var n = {}; e.length; ) {
    var r = e[0], o = r.code, i = r.message, s = r.path.join(".");
    if (!n[s]) if ("unionErrors" in r) {
      var l = r.unionErrors[0].errors[0];
      n[s] = { message: l.message, type: l.code };
    } else n[s] = { message: i, type: o };
    if ("unionErrors" in r && r.unionErrors.forEach(function(f) {
      return f.errors.forEach(function(d) {
        return e.push(d);
      });
    }), t) {
      var c = n[s].types, u = c && c[r.code];
      n[s] = e1(s, t, n, o, u ? [].concat(u, r.message) : r.message);
    }
    e.shift();
  }
  return n;
}
function HU(e, t, n) {
  return n === void 0 && (n = {}), function(r, o, i) {
    try {
      return Promise.resolve(function(s, l) {
        try {
          var c = Promise.resolve(e[n.mode === "sync" ? "parse" : "parseAsync"](r, t)).then(function(u) {
            return i.shouldUseNativeValidation && l1({}, i), { errors: {}, values: n.raw ? Object.assign({}, r) : u };
          });
        } catch (u) {
          return l(u);
        }
        return c && c.then ? c.then(void 0, l) : c;
      }(0, function(s) {
        if (function(l) {
          return Array.isArray(l == null ? void 0 : l.errors);
        }(s)) return { values: {}, errors: kL(NL(s.errors, !i.shouldUseNativeValidation && i.criteriaMode === "all"), i) };
        throw s;
      }));
    } catch (s) {
      return Promise.reject(s);
    }
  };
}
function $L({
  children: e,
  formInstance: t,
  onSubmit: n
}) {
  const { handleSubmit: r, trigger: o } = t;
  return Xe(() => {
    o();
  }, [o]), t ? /* @__PURE__ */ N(uL, { ...t, children: /* @__PURE__ */ N(Br, { component: "form", autoComplete: "off", onSubmit: r(n), children: e }) }) : null;
}
const WU = ve($L), PL = ve(({ name: e, ...t }) => {
  const { control: n } = ar();
  return /* @__PURE__ */ N(
    li,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, value: o, ref: i }, fieldState: { error: s } }) => /* @__PURE__ */ N(
        Ow,
        {
          ...t,
          value: o,
          onChange: r,
          inputRef: i,
          isError: !!s
        }
      )
    }
  );
});
PL.displayName = "CheckboxUncontrolled";
function IL({
  isSubmitting: e,
  submitButtonText: t = "Submit",
  cancelButtonText: n = "Cancel"
}) {
  const r = ar();
  if (!r)
    return null;
  const { formState: o, reset: i, trigger: s } = r, { isValid: l, isSubmitting: c, defaultValues: u } = o;
  return /* @__PURE__ */ we(en, { row: !0, mt: "32px", children: [
    /* @__PURE__ */ N(
      an,
      {
        type: "reset",
        text: n,
        isOutlined: !0,
        disabled: e || c,
        onClick: () => {
          i(u), s();
        }
      }
    ),
    /* @__PURE__ */ N(
      an,
      {
        type: "submit",
        text: t,
        loading: e || c,
        disabled: !l
      }
    )
  ] });
}
IL.displayName = "FormUncontrolledAction";
const _L = ve(({ name: e, ...t }) => {
  const { control: n } = ar();
  return /* @__PURE__ */ N(
    li,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: i, ref: s }, fieldState: { error: l } }) => /* @__PURE__ */ N(
        Nu,
        {
          ...t,
          value: i,
          onChange: r,
          onBlur: o,
          inputRef: s,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
_L.displayName = "InputUncontrolled";
const ML = ve(({ name: e, ...t }) => {
  const { control: n } = ar();
  return /* @__PURE__ */ N(
    li,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: i, ref: s }, fieldState: { error: l } }) => /* @__PURE__ */ N(
        Dw,
        {
          ...t,
          value: i,
          onChange: r,
          onBlur: o,
          inputRef: s,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || "　"
        }
      )
    }
  );
});
ML.displayName = "NumberUncontrolled";
const AL = ve(({ name: e, ...t }) => {
  const { control: n } = ar();
  return /* @__PURE__ */ N(
    li,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: i, ref: s }, fieldState: { error: l } }) => /* @__PURE__ */ N(
        VS,
        {
          ...t,
          value: i,
          onChange: r,
          onBlur: o,
          inputRef: s,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
AL.displayName = "OtpInputUncontrolled";
const DL = ve(({ name: e, ...t }) => {
  const { control: n } = ar();
  return /* @__PURE__ */ N(
    li,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: i, ref: s }, fieldState: { error: l } }) => /* @__PURE__ */ N(
        jS,
        {
          ...t,
          value: i,
          onChange: r,
          onBlur: o,
          inputRef: s,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
DL.displayName = "PasswordUncontrolled";
const BL = [], LL = ve(
  ({ name: e, options: t = BL, ...n }) => {
    const { control: r } = ar();
    return /* @__PURE__ */ N(
      li,
      {
        control: r,
        name: e,
        render: ({ field: { onChange: o, value: i, ref: s }, fieldState: { error: l } }) => /* @__PURE__ */ N(
          US,
          {
            ...n,
            name: e,
            options: t,
            value: i,
            onChange: (c) => o(c.value),
            inputRef: s,
            isError: !!l
          }
        )
      }
    );
  }
);
LL.displayName = "RadiosUncontrolled";
const FL = ve(({ name: e, ...t }) => {
  const { control: n } = ar();
  return /* @__PURE__ */ N(
    li,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, value: o, ref: i } }) => /* @__PURE__ */ N(Gh, { ...t, value: o, onChange: r, inputRef: i })
    }
  );
});
FL.displayName = "SwitchUncontrolled";
const Oi = {
  xs: 1,
  // 1行1个
  sm: 1,
  // 1行1个
  md: 2,
  // 1行2个
  lg: 3,
  // 1行3个
  xl: 4
  // 1行4个
}, zL = [], Ob = (e) => {
  let t;
  const n = /* @__PURE__ */ new Set(), r = (u, f) => {
    const d = typeof u == "function" ? u(t) : u;
    if (!Object.is(d, t)) {
      const p = t;
      t = f ?? (typeof d != "object" || d === null) ? d : Object.assign({}, t, d), n.forEach((h) => h(t, p));
    }
  }, o = () => t, l = { setState: r, getState: o, getInitialState: () => c, subscribe: (u) => (n.add(u), () => n.delete(u)) }, c = t = e(r, o, l);
  return l;
}, c1 = (e) => e ? Ob(e) : Ob, VL = (e) => e;
function ao(e, t = VL) {
  const n = Y.useSyncExternalStore(
    e.subscribe,
    () => t(e.getState()),
    () => t(e.getInitialState())
  );
  return Y.useDebugValue(n), n;
}
const kb = (e) => {
  const t = c1(e), n = (r) => ao(t, r);
  return Object.assign(n, t), n;
}, Fo = (e) => e ? kb(e) : kb, Rb = { BASE_URL: "/", DEV: !1, MODE: "production", PROD: !0, SSR: !1 }, sp = /* @__PURE__ */ new Map(), Pl = (e) => {
  const t = sp.get(e);
  return t ? Object.fromEntries(
    Object.entries(t.stores).map(([n, r]) => [n, r.getState()])
  ) : {};
}, jL = (e, t, n) => {
  if (e === void 0)
    return {
      type: "untracked",
      connection: t.connect(n)
    };
  const r = sp.get(n.name);
  if (r)
    return { type: "tracked", store: e, ...r };
  const o = {
    connection: t.connect(n),
    stores: {}
  };
  return sp.set(n.name, o), { type: "tracked", store: e, ...o };
}, HL = (e, t = {}) => (n, r, o) => {
  const { enabled: i, anonymousActionType: s, store: l, ...c } = t;
  let u;
  try {
    u = (i ?? (Rb ? "production" : void 0) !== "production") && window.__REDUX_DEVTOOLS_EXTENSION__;
  } catch {
  }
  if (!u)
    return e(n, r, o);
  const { connection: f, ...d } = jL(l, u, c);
  let p = !0;
  o.setState = (m, y, x) => {
    const E = n(m, y);
    if (!p) return E;
    const v = x === void 0 ? { type: s || "anonymous" } : typeof x == "string" ? { type: x } : x;
    return l === void 0 ? (f == null || f.send(v, r()), E) : (f == null || f.send(
      {
        ...v,
        type: `${l}/${v.type}`
      },
      {
        ...Pl(c.name),
        [l]: o.getState()
      }
    ), E);
  };
  const h = (...m) => {
    const y = p;
    p = !1, n(...m), p = y;
  }, g = e(o.setState, r, o);
  if (d.type === "untracked" ? f == null || f.init(g) : (d.stores[d.store] = o, f == null || f.init(
    Object.fromEntries(
      Object.entries(d.stores).map(([m, y]) => [
        m,
        m === d.store ? g : y.getState()
      ])
    )
  )), o.dispatchFromDevtools && typeof o.dispatch == "function") {
    let m = !1;
    const y = o.dispatch;
    o.dispatch = (...x) => {
      (Rb ? "production" : void 0) !== "production" && x[0].type === "__setState" && !m && (console.warn(
        '[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'
      ), m = !0), y(...x);
    };
  }
  return f.subscribe((m) => {
    var y;
    switch (m.type) {
      case "ACTION":
        if (typeof m.payload != "string") {
          console.error(
            "[zustand devtools middleware] Unsupported action format"
          );
          return;
        }
        return Jd(
          m.payload,
          (x) => {
            if (x.type === "__setState") {
              if (l === void 0) {
                h(x.state);
                return;
              }
              Object.keys(x.state).length !== 1 && console.error(
                `
                    [zustand devtools middleware] Unsupported __setState action format.
                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),
                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }
                    `
              );
              const E = x.state[l];
              if (E == null)
                return;
              JSON.stringify(o.getState()) !== JSON.stringify(E) && h(E);
              return;
            }
            o.dispatchFromDevtools && typeof o.dispatch == "function" && o.dispatch(x);
          }
        );
      case "DISPATCH":
        switch (m.payload.type) {
          case "RESET":
            return h(g), l === void 0 ? f == null ? void 0 : f.init(o.getState()) : f == null ? void 0 : f.init(Pl(c.name));
          case "COMMIT":
            if (l === void 0) {
              f == null || f.init(o.getState());
              return;
            }
            return f == null ? void 0 : f.init(Pl(c.name));
          case "ROLLBACK":
            return Jd(m.state, (x) => {
              if (l === void 0) {
                h(x), f == null || f.init(o.getState());
                return;
              }
              h(x[l]), f == null || f.init(Pl(c.name));
            });
          case "JUMP_TO_STATE":
          case "JUMP_TO_ACTION":
            return Jd(m.state, (x) => {
              if (l === void 0) {
                h(x);
                return;
              }
              JSON.stringify(o.getState()) !== JSON.stringify(x[l]) && h(x[l]);
            });
          case "IMPORT_STATE": {
            const { nextLiftedState: x } = m.payload, E = (y = x.computedStates.slice(-1)[0]) == null ? void 0 : y.state;
            if (!E) return;
            h(l === void 0 ? E : E[l]), f == null || f.send(
              null,
              // FIXME no-any
              x
            );
            return;
          }
          case "PAUSE_RECORDING":
            return p = !p;
        }
        return;
    }
  }), g;
}, ci = HL, Jd = (e, t) => {
  let n;
  try {
    n = JSON.parse(e);
  } catch (r) {
    console.error(
      "[zustand devtools middleware] Could not parse the received json",
      r
    );
  }
  n !== void 0 && t(n);
};
function WL(e, t) {
  let n;
  try {
    n = e();
  } catch {
    return;
  }
  return {
    getItem: (o) => {
      var i;
      const s = (c) => c === null ? null : JSON.parse(c, void 0), l = (i = n.getItem(o)) != null ? i : null;
      return l instanceof Promise ? l.then(s) : s(l);
    },
    setItem: (o, i) => n.setItem(
      o,
      JSON.stringify(i, void 0)
    ),
    removeItem: (o) => n.removeItem(o)
  };
}
const ap = (e) => (t) => {
  try {
    const n = e(t);
    return n instanceof Promise ? n : {
      then(r) {
        return ap(r)(n);
      },
      catch(r) {
        return this;
      }
    };
  } catch (n) {
    return {
      then(r) {
        return this;
      },
      catch(r) {
        return ap(r)(n);
      }
    };
  }
}, UL = (e, t) => (n, r, o) => {
  let i = {
    storage: WL(() => localStorage),
    partialize: (m) => m,
    version: 0,
    merge: (m, y) => ({
      ...y,
      ...m
    }),
    ...t
  }, s = !1;
  const l = /* @__PURE__ */ new Set(), c = /* @__PURE__ */ new Set();
  let u = i.storage;
  if (!u)
    return e(
      (...m) => {
        console.warn(
          `[zustand persist middleware] Unable to update item '${i.name}', the given storage is currently unavailable.`
        ), n(...m);
      },
      r,
      o
    );
  const f = () => {
    const m = i.partialize({ ...r() });
    return u.setItem(i.name, {
      state: m,
      version: i.version
    });
  }, d = o.setState;
  o.setState = (m, y) => {
    d(m, y), f();
  };
  const p = e(
    (...m) => {
      n(...m), f();
    },
    r,
    o
  );
  o.getInitialState = () => p;
  let h;
  const g = () => {
    var m, y;
    if (!u) return;
    s = !1, l.forEach((E) => {
      var v;
      return E((v = r()) != null ? v : p);
    });
    const x = ((y = i.onRehydrateStorage) == null ? void 0 : y.call(i, (m = r()) != null ? m : p)) || void 0;
    return ap(u.getItem.bind(u))(i.name).then((E) => {
      if (E)
        if (typeof E.version == "number" && E.version !== i.version) {
          if (i.migrate) {
            const v = i.migrate(
              E.state,
              E.version
            );
            return v instanceof Promise ? v.then((w) => [!0, w]) : [!0, v];
          }
          console.error(
            "State loaded from storage couldn't be migrated since no migrate function was provided"
          );
        } else
          return [!1, E.state];
      return [!1, void 0];
    }).then((E) => {
      var v;
      const [w, S] = E;
      if (h = i.merge(
        S,
        (v = r()) != null ? v : p
      ), n(h, !0), w)
        return f();
    }).then(() => {
      x == null || x(h, void 0), h = r(), s = !0, c.forEach((E) => E(h));
    }).catch((E) => {
      x == null || x(void 0, E);
    });
  };
  return o.persist = {
    setOptions: (m) => {
      i = {
        ...i,
        ...m
      }, m.storage && (u = m.storage);
    },
    clearStorage: () => {
      u == null || u.removeItem(i.name);
    },
    getOptions: () => i,
    rehydrate: () => g(),
    hasHydrated: () => s,
    onHydrate: (m) => (l.add(m), () => {
      l.delete(m);
    }),
    onFinishHydration: (m) => (c.add(m), () => {
      c.delete(m);
    })
  }, i.skipHydration || g(), h || p;
}, u1 = UL;
function Nb() {
  return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
const qL = Fo()(
  ci(
    u1(
      (e) => ({
        themeMode: Nb(),
        setThemeMode: (t) => e({ themeMode: t }),
        toggleThemeMode: () => e((t) => ({ themeMode: t.themeMode === "dark" ? "light" : "dark" })),
        resetThemeMode: () => e({ themeMode: Nb() })
      }),
      {
        name: "VENOMOUS_UI__THEME_MODE"
      }
    )
  )
);
function Zu() {
  const e = ao(qL);
  return {
    ...e,
    isDarkMode: e.themeMode === "dark"
  };
}
function d1(e) {
  return {
    origin: e,
    light: fs(e, 0.5),
    dark: ds(e, 0.5),
    opacity: on(e, 0.2)
  };
}
var f1 = /* @__PURE__ */ ((e) => (e.Iron = "Iron", e.Cyan = "Cyan", e.Teal = "Teal", e.Coral = "Coral", e.Amber = "Amber", e.Ochre = "Ochre", e))(f1 || {});
const p1 = {
  Iron: "#90a4ae",
  Cyan: "#00bcd4",
  Teal: "#009688",
  Coral: "#FFA07A",
  Amber: "#ffb300",
  Ochre: "#E3D026"
};
function lp(e) {
  const t = p1[e], { light: n, dark: r, opacity: o } = d1(t);
  return {
    main: t,
    light: n,
    dark: r,
    opacity: o,
    contrastText: "#fff",
    error: "#f44336"
  };
}
const YL = Fo()(
  ci(
    u1(
      (e) => ({
        themePaletteName: "Cyan",
        themePalette: lp(
          "Cyan"
          /* Cyan */
        ),
        setThemePaletteName: (t) => e({ themePaletteName: t, themePalette: lp(t) })
      }),
      {
        name: "VENOMOUS_UI__THEME_PALETTE"
      }
    )
  )
);
function em() {
  return {
    ...YL(),
    allPaletteNames: Object.keys(f1),
    allPaletteMainColors: p1
  };
}
const _s = $v({
  themeId: fr
});
function KL() {
  const { breakpoints: e } = uo(), t = _s(e.down("sm")), n = _s(e.between("sm", "md")), r = _s(e.between("md", "lg")), o = _s(e.between("lg", "xl")), i = _s(e.up("xl")), s = Ye(() => {
    var l;
    return ((l = [
      ["xs", t],
      ["sm", n],
      ["md", r],
      ["lg", o],
      ["xl", i]
    ].find(([, c]) => c)) == null ? void 0 : l[0].toString()) || "xs";
  }, [t, n, r, o, i]);
  return {
    isXs: t,
    isSm: n,
    isMd: r,
    isLg: o,
    isXl: i,
    breakpoints: {
      current: s,
      unit: "px",
      values: {
        xs: 0,
        sm: 600,
        md: 900,
        lg: 1200,
        xl: 1536
      }
    }
  };
}
function UU() {
  return (e) => e;
}
function GL() {
  const e = rz(), [t, n] = Jt(!1), r = $e(() => {
    t ? document.exitFullscreen().then(() => {
      n(!1);
    }).catch(() => {
      e({
        type: "error",
        title: "Error",
        description: "Error attempting to disable full-screen mode"
      });
    }) : document.documentElement.requestFullscreen().then(() => {
      n(!0);
    }).catch(() => {
      e({
        type: "error",
        title: "Error",
        description: "Error attempting to enable full-screen mode"
      });
    });
  }, [t, e]);
  return Xe(() => {
    const o = () => {
      n(document.fullscreenElement !== null);
    };
    return document.addEventListener("fullscreenchange", o), () => {
      document.removeEventListener("fullscreenchange", o);
    };
  }, []), {
    isFullScreen: t,
    setIsFullScreen: n,
    toggleFullScreen: r
  };
}
function XL({
  gridStyle: e,
  cols: t
}) {
  const { isXs: n, isSm: r, isMd: o, isLg: i } = KL(), s = Ye(() => {
    let c;
    return n ? c = (t == null ? void 0 : t.xs) ?? Oi.xs : r ? c = (t == null ? void 0 : t.sm) ?? Oi.sm : o ? c = (t == null ? void 0 : t.md) ?? Oi.md : i ? c = (t == null ? void 0 : t.lg) ?? Oi.lg : c = (t == null ? void 0 : t.xl) ?? Oi.xl, `${100 / c}%`;
  }, [n, r, o, i, t]);
  return {
    gridComponents: Ye(
      () => ({
        List: ({ ref: c, style: u, children: f, ...d }) => /* @__PURE__ */ N(
          "div",
          {
            ref: c,
            ...d,
            style: { display: "flex", flexWrap: "wrap", ...u, ...e },
            children: f
          }
        ),
        Item: ({ children: c, ...u }) => /* @__PURE__ */ N(
          "div",
          {
            ...u,
            style: {
              width: s,
              display: "flex",
              boxSizing: "border-box",
              flex: "none",
              alignContent: "stretch"
            },
            children: c
          }
        )
      }),
      [s, e]
    )
  };
}
const ZL = ({
  height: e,
  width: t,
  items: n = zL,
  renderGridItem: r,
  gridStyle: o,
  cols: i = Oi
}) => {
  const { gridComponents: s } = XL({ gridStyle: o, cols: i });
  return /* @__PURE__ */ N(
    en,
    {
      className: "VenomousUI-Grid",
      sx: {
        height: e || "100%",
        width: t || "100%",
        "& > *": {
          flex: "unset",
          width: "100%"
        }
      },
      children: /* @__PURE__ */ N(
        iM,
        {
          style: { height: "100%" },
          totalCount: n.length,
          components: s,
          itemContent: (l) => r(n[l], l)
        }
      )
    }
  );
}, QL = ve(ZL);
var ef = { exports: {} }, $b;
function JL() {
  return $b || ($b = 1, (() => {
    var e = { 296: (o, i, s) => {
      var l = /^\s+|\s+$/g, c = /^[-+]0x[0-9a-f]+$/i, u = /^0b[01]+$/i, f = /^0o[0-7]+$/i, d = parseInt, p = typeof s.g == "object" && s.g && s.g.Object === Object && s.g, h = typeof self == "object" && self && self.Object === Object && self, g = p || h || Function("return this")(), m = Object.prototype.toString, y = Math.max, x = Math.min, E = function() {
        return g.Date.now();
      };
      function v(S) {
        var T = typeof S;
        return !!S && (T == "object" || T == "function");
      }
      function w(S) {
        if (typeof S == "number") return S;
        if (function(R) {
          return typeof R == "symbol" || /* @__PURE__ */ function(I) {
            return !!I && typeof I == "object";
          }(R) && m.call(R) == "[object Symbol]";
        }(S)) return NaN;
        if (v(S)) {
          var T = typeof S.valueOf == "function" ? S.valueOf() : S;
          S = v(T) ? T + "" : T;
        }
        if (typeof S != "string") return S === 0 ? S : +S;
        S = S.replace(l, "");
        var C = u.test(S);
        return C || f.test(S) ? d(S.slice(2), C ? 2 : 8) : c.test(S) ? NaN : +S;
      }
      o.exports = function(S, T, C) {
        var R, I, b, k, P, A, O = 0, _ = !1, $ = !1, D = !0;
        if (typeof S != "function") throw new TypeError("Expected a function");
        function z(U) {
          var Z = R, Q = I;
          return R = I = void 0, O = U, k = S.apply(Q, Z);
        }
        function B(U) {
          var Z = U - A;
          return A === void 0 || Z >= T || Z < 0 || $ && U - O >= b;
        }
        function L() {
          var U = E();
          if (B(U)) return F(U);
          P = setTimeout(L, function(Z) {
            var Q = T - (Z - A);
            return $ ? x(Q, b - (Z - O)) : Q;
          }(U));
        }
        function F(U) {
          return P = void 0, D && R ? z(U) : (R = I = void 0, k);
        }
        function W() {
          var U = E(), Z = B(U);
          if (R = arguments, I = this, A = U, Z) {
            if (P === void 0) return function(Q) {
              return O = Q, P = setTimeout(L, T), _ ? z(Q) : k;
            }(A);
            if ($) return P = setTimeout(L, T), z(A);
          }
          return P === void 0 && (P = setTimeout(L, T)), k;
        }
        return T = w(T) || 0, v(C) && (_ = !!C.leading, b = ($ = "maxWait" in C) ? y(w(C.maxWait) || 0, T) : b, D = "trailing" in C ? !!C.trailing : D), W.cancel = function() {
          P !== void 0 && clearTimeout(P), O = 0, R = A = I = P = void 0;
        }, W.flush = function() {
          return P === void 0 ? k : F(E());
        }, W;
      };
    }, 96: (o, i, s) => {
      var l = "Expected a function", c = NaN, u = "[object Symbol]", f = /^\s+|\s+$/g, d = /^[-+]0x[0-9a-f]+$/i, p = /^0b[01]+$/i, h = /^0o[0-7]+$/i, g = parseInt, m = typeof s.g == "object" && s.g && s.g.Object === Object && s.g, y = typeof self == "object" && self && self.Object === Object && self, x = m || y || Function("return this")(), E = Object.prototype.toString, v = Math.max, w = Math.min, S = function() {
        return x.Date.now();
      };
      function T(R) {
        var I = typeof R;
        return !!R && (I == "object" || I == "function");
      }
      function C(R) {
        if (typeof R == "number") return R;
        if (function(k) {
          return typeof k == "symbol" || /* @__PURE__ */ function(P) {
            return !!P && typeof P == "object";
          }(k) && E.call(k) == u;
        }(R)) return c;
        if (T(R)) {
          var I = typeof R.valueOf == "function" ? R.valueOf() : R;
          R = T(I) ? I + "" : I;
        }
        if (typeof R != "string") return R === 0 ? R : +R;
        R = R.replace(f, "");
        var b = p.test(R);
        return b || h.test(R) ? g(R.slice(2), b ? 2 : 8) : d.test(R) ? c : +R;
      }
      o.exports = function(R, I, b) {
        var k = !0, P = !0;
        if (typeof R != "function") throw new TypeError(l);
        return T(b) && (k = "leading" in b ? !!b.leading : k, P = "trailing" in b ? !!b.trailing : P), function(A, O, _) {
          var $, D, z, B, L, F, W = 0, U = !1, Z = !1, Q = !0;
          if (typeof A != "function") throw new TypeError(l);
          function ee(ne) {
            var j = $, pe = D;
            return $ = D = void 0, W = ne, B = A.apply(pe, j);
          }
          function te(ne) {
            var j = ne - F;
            return F === void 0 || j >= O || j < 0 || Z && ne - W >= z;
          }
          function q() {
            var ne = S();
            if (te(ne)) return oe(ne);
            L = setTimeout(q, function(j) {
              var pe = O - (j - F);
              return Z ? w(pe, z - (j - W)) : pe;
            }(ne));
          }
          function oe(ne) {
            return L = void 0, Q && $ ? ee(ne) : ($ = D = void 0, B);
          }
          function G() {
            var ne = S(), j = te(ne);
            if ($ = arguments, D = this, F = ne, j) {
              if (L === void 0) return function(pe) {
                return W = pe, L = setTimeout(q, O), U ? ee(pe) : B;
              }(F);
              if (Z) return L = setTimeout(q, O), ee(F);
            }
            return L === void 0 && (L = setTimeout(q, O)), B;
          }
          return O = C(O) || 0, T(_) && (U = !!_.leading, z = (Z = "maxWait" in _) ? v(C(_.maxWait) || 0, O) : z, Q = "trailing" in _ ? !!_.trailing : Q), G.cancel = function() {
            L !== void 0 && clearTimeout(L), W = 0, $ = F = D = L = void 0;
          }, G.flush = function() {
            return L === void 0 ? B : oe(S());
          }, G;
        }(R, I, { leading: k, maxWait: I, trailing: P });
      };
    }, 703: (o, i, s) => {
      var l = s(414);
      function c() {
      }
      function u() {
      }
      u.resetWarningCache = c, o.exports = function() {
        function f(h, g, m, y, x, E) {
          if (E !== l) {
            var v = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
            throw v.name = "Invariant Violation", v;
          }
        }
        function d() {
          return f;
        }
        f.isRequired = f;
        var p = { array: f, bigint: f, bool: f, func: f, number: f, object: f, string: f, symbol: f, any: f, arrayOf: d, element: f, elementType: f, instanceOf: d, node: f, objectOf: d, oneOf: d, oneOfType: d, shape: d, exact: d, checkPropTypes: u, resetWarningCache: c };
        return p.PropTypes = p, p;
      };
    }, 697: (o, i, s) => {
      o.exports = s(703)();
    }, 414: (o) => {
      o.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    } }, t = {};
    function n(o) {
      var i = t[o];
      if (i !== void 0) return i.exports;
      var s = t[o] = { exports: {} };
      return e[o](s, s.exports, n), s.exports;
    }
    n.n = (o) => {
      var i = o && o.__esModule ? () => o.default : () => o;
      return n.d(i, { a: i }), i;
    }, n.d = (o, i) => {
      for (var s in i) n.o(i, s) && !n.o(o, s) && Object.defineProperty(o, s, { enumerable: !0, get: i[s] });
    }, n.g = function() {
      if (typeof globalThis == "object") return globalThis;
      try {
        return this || new Function("return this")();
      } catch {
        if (typeof window == "object") return window;
      }
    }(), n.o = (o, i) => Object.prototype.hasOwnProperty.call(o, i), n.r = (o) => {
      typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(o, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(o, "__esModule", { value: !0 });
    };
    var r = {};
    (() => {
      n.r(r), n.d(r, { LazyLoadComponent: () => j, LazyLoadImage: () => ie, trackWindowScroll: () => B });
      const o = Y;
      var i = n.n(o), s = n(697);
      function l() {
        return typeof window < "u" && "IntersectionObserver" in window && "isIntersecting" in window.IntersectionObserverEntry.prototype;
      }
      function c(X) {
        return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, c(X);
      }
      function u(X, H) {
        var K = Object.keys(X);
        if (Object.getOwnPropertySymbols) {
          var re = Object.getOwnPropertySymbols(X);
          H && (re = re.filter(function(he) {
            return Object.getOwnPropertyDescriptor(X, he).enumerable;
          })), K.push.apply(K, re);
        }
        return K;
      }
      function f(X, H, K) {
        return (H = p(H)) in X ? Object.defineProperty(X, H, { value: K, enumerable: !0, configurable: !0, writable: !0 }) : X[H] = K, X;
      }
      function d(X, H) {
        for (var K = 0; K < H.length; K++) {
          var re = H[K];
          re.enumerable = re.enumerable || !1, re.configurable = !0, "value" in re && (re.writable = !0), Object.defineProperty(X, p(re.key), re);
        }
      }
      function p(X) {
        var H = function(K, re) {
          if (c(K) !== "object" || K === null) return K;
          var he = K[Symbol.toPrimitive];
          if (he !== void 0) {
            var me = he.call(K, "string");
            if (c(me) !== "object") return me;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(K);
        }(X);
        return c(H) === "symbol" ? H : String(H);
      }
      function h(X, H) {
        return h = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(K, re) {
          return K.__proto__ = re, K;
        }, h(X, H);
      }
      function g(X) {
        return g = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, g(X);
      }
      var m = function(X) {
        X.forEach(function(H) {
          H.isIntersecting && H.target.onVisible();
        });
      }, y = {}, x = function(X) {
        (function(se, ae) {
          if (typeof ae != "function" && ae !== null) throw new TypeError("Super expression must either be null or a function");
          se.prototype = Object.create(ae && ae.prototype, { constructor: { value: se, writable: !0, configurable: !0 } }), Object.defineProperty(se, "prototype", { writable: !1 }), ae && h(se, ae);
        })(le, X);
        var H, K, re, he, me = (re = le, he = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var se, ae = g(re);
          if (he) {
            var ge = g(this).constructor;
            se = Reflect.construct(ae, arguments, ge);
          } else se = ae.apply(this, arguments);
          return function(Ce, ue) {
            if (ue && (c(ue) === "object" || typeof ue == "function")) return ue;
            if (ue !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Te) {
              if (Te === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Te;
            }(Ce);
          }(this, se);
        });
        function le(se) {
          var ae;
          if (function(Ce, ue) {
            if (!(Ce instanceof ue)) throw new TypeError("Cannot call a class as a function");
          }(this, le), (ae = me.call(this, se)).supportsObserver = !se.scrollPosition && se.useIntersectionObserver && l(), ae.supportsObserver) {
            var ge = se.threshold;
            ae.observer = function(Ce) {
              return y[Ce] = y[Ce] || new IntersectionObserver(m, { rootMargin: Ce + "px" }), y[Ce];
            }(ge);
          }
          return ae;
        }
        return H = le, K = [{ key: "componentDidMount", value: function() {
          this.placeholder && this.observer && (this.placeholder.onVisible = this.props.onVisible, this.observer.observe(this.placeholder)), this.supportsObserver || this.updateVisibility();
        } }, { key: "componentWillUnmount", value: function() {
          this.observer && this.placeholder && this.observer.unobserve(this.placeholder);
        } }, { key: "componentDidUpdate", value: function() {
          this.supportsObserver || this.updateVisibility();
        } }, { key: "getPlaceholderBoundingBox", value: function() {
          var se = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props.scrollPosition, ae = this.placeholder.getBoundingClientRect(), ge = this.placeholder.style, Ce = parseInt(ge.getPropertyValue("margin-left"), 10) || 0, ue = parseInt(ge.getPropertyValue("margin-top"), 10) || 0;
          return { bottom: se.y + ae.bottom + ue, left: se.x + ae.left + Ce, right: se.x + ae.right + Ce, top: se.y + ae.top + ue };
        } }, { key: "isPlaceholderInViewport", value: function() {
          if (typeof window > "u" || !this.placeholder) return !1;
          var se = this.props, ae = se.scrollPosition, ge = se.threshold, Ce = this.getPlaceholderBoundingBox(ae), ue = ae.y + window.innerHeight, Te = ae.x, Le = ae.x + window.innerWidth, We = ae.y;
          return We - ge <= Ce.bottom && ue + ge >= Ce.top && Te - ge <= Ce.right && Le + ge >= Ce.left;
        } }, { key: "updateVisibility", value: function() {
          this.isPlaceholderInViewport() && this.props.onVisible();
        } }, { key: "render", value: function() {
          var se = this, ae = this.props, ge = ae.className, Ce = ae.height, ue = ae.placeholder, Te = ae.style, Le = ae.width;
          if (ue && typeof ue.type != "function") return i().cloneElement(ue, { ref: function(Qe) {
            return se.placeholder = Qe;
          } });
          var We = function(Qe) {
            for (var Pt = 1; Pt < arguments.length; Pt++) {
              var ht = arguments[Pt] != null ? arguments[Pt] : {};
              Pt % 2 ? u(Object(ht), !0).forEach(function(It) {
                f(Qe, It, ht[It]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(Qe, Object.getOwnPropertyDescriptors(ht)) : u(Object(ht)).forEach(function(It) {
                Object.defineProperty(Qe, It, Object.getOwnPropertyDescriptor(ht, It));
              });
            }
            return Qe;
          }({ display: "inline-block" }, Te);
          return Le !== void 0 && (We.width = Le), Ce !== void 0 && (We.height = Ce), i().createElement("span", { className: ge, ref: function(Qe) {
            return se.placeholder = Qe;
          }, style: We }, ue);
        } }], K && d(H.prototype, K), Object.defineProperty(H, "prototype", { writable: !1 }), le;
      }(i().Component);
      x.propTypes = { onVisible: s.PropTypes.func.isRequired, className: s.PropTypes.string, height: s.PropTypes.oneOfType([s.PropTypes.number, s.PropTypes.string]), placeholder: s.PropTypes.element, threshold: s.PropTypes.number, useIntersectionObserver: s.PropTypes.bool, scrollPosition: s.PropTypes.shape({ x: s.PropTypes.number.isRequired, y: s.PropTypes.number.isRequired }), width: s.PropTypes.oneOfType([s.PropTypes.number, s.PropTypes.string]) }, x.defaultProps = { className: "", placeholder: null, threshold: 100, useIntersectionObserver: !0 };
      const E = x;
      var v = n(296), w = n.n(v), S = n(96), T = n.n(S), C = function(X) {
        var H = getComputedStyle(X, null);
        return H.getPropertyValue("overflow") + H.getPropertyValue("overflow-y") + H.getPropertyValue("overflow-x");
      };
      const R = function(X) {
        if (!(X instanceof HTMLElement)) return window;
        for (var H = X; H && H instanceof HTMLElement; ) {
          if (/(scroll|auto)/.test(C(H))) return H;
          H = H.parentNode;
        }
        return window;
      };
      function I(X) {
        return I = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, I(X);
      }
      var b = ["delayMethod", "delayTime"];
      function k() {
        return k = Object.assign ? Object.assign.bind() : function(X) {
          for (var H = 1; H < arguments.length; H++) {
            var K = arguments[H];
            for (var re in K) Object.prototype.hasOwnProperty.call(K, re) && (X[re] = K[re]);
          }
          return X;
        }, k.apply(this, arguments);
      }
      function P(X, H) {
        for (var K = 0; K < H.length; K++) {
          var re = H[K];
          re.enumerable = re.enumerable || !1, re.configurable = !0, "value" in re && (re.writable = !0), Object.defineProperty(X, (he = function(me, le) {
            if (I(me) !== "object" || me === null) return me;
            var se = me[Symbol.toPrimitive];
            if (se !== void 0) {
              var ae = se.call(me, "string");
              if (I(ae) !== "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(me);
          }(re.key), I(he) === "symbol" ? he : String(he)), re);
        }
        var he;
      }
      function A(X, H) {
        return A = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(K, re) {
          return K.__proto__ = re, K;
        }, A(X, H);
      }
      function O(X, H) {
        if (H && (I(H) === "object" || typeof H == "function")) return H;
        if (H !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
        return _(X);
      }
      function _(X) {
        if (X === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return X;
      }
      function $(X) {
        return $ = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, $(X);
      }
      var D = function() {
        return typeof window > "u" ? 0 : window.scrollX || window.pageXOffset;
      }, z = function() {
        return typeof window > "u" ? 0 : window.scrollY || window.pageYOffset;
      };
      const B = function(X) {
        var H = function(K) {
          (function(ge, Ce) {
            if (typeof Ce != "function" && Ce !== null) throw new TypeError("Super expression must either be null or a function");
            ge.prototype = Object.create(Ce && Ce.prototype, { constructor: { value: ge, writable: !0, configurable: !0 } }), Object.defineProperty(ge, "prototype", { writable: !1 }), Ce && A(ge, Ce);
          })(ae, K);
          var re, he, me, le, se = (me = ae, le = function() {
            if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
            if (typeof Proxy == "function") return !0;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              })), !0;
            } catch {
              return !1;
            }
          }(), function() {
            var ge, Ce = $(me);
            if (le) {
              var ue = $(this).constructor;
              ge = Reflect.construct(Ce, arguments, ue);
            } else ge = Ce.apply(this, arguments);
            return O(this, ge);
          });
          function ae(ge) {
            var Ce;
            if (function(Te, Le) {
              if (!(Te instanceof Le)) throw new TypeError("Cannot call a class as a function");
            }(this, ae), (Ce = se.call(this, ge)).useIntersectionObserver = ge.useIntersectionObserver && l(), Ce.useIntersectionObserver) return O(Ce);
            var ue = Ce.onChangeScroll.bind(_(Ce));
            return ge.delayMethod === "debounce" ? Ce.delayedScroll = w()(ue, ge.delayTime) : ge.delayMethod === "throttle" && (Ce.delayedScroll = T()(ue, ge.delayTime)), Ce.state = { scrollPosition: { x: D(), y: z() } }, Ce.baseComponentRef = i().createRef(), Ce;
          }
          return re = ae, (he = [{ key: "componentDidMount", value: function() {
            this.addListeners();
          } }, { key: "componentWillUnmount", value: function() {
            this.removeListeners();
          } }, { key: "componentDidUpdate", value: function() {
            typeof window > "u" || this.useIntersectionObserver || R(this.baseComponentRef.current) !== this.scrollElement && (this.removeListeners(), this.addListeners());
          } }, { key: "addListeners", value: function() {
            typeof window > "u" || this.useIntersectionObserver || (this.scrollElement = R(this.baseComponentRef.current), this.scrollElement.addEventListener("scroll", this.delayedScroll, { passive: !0 }), window.addEventListener("resize", this.delayedScroll, { passive: !0 }), this.scrollElement !== window && window.addEventListener("scroll", this.delayedScroll, { passive: !0 }));
          } }, { key: "removeListeners", value: function() {
            typeof window > "u" || this.useIntersectionObserver || (this.scrollElement.removeEventListener("scroll", this.delayedScroll), window.removeEventListener("resize", this.delayedScroll), this.scrollElement !== window && window.removeEventListener("scroll", this.delayedScroll));
          } }, { key: "onChangeScroll", value: function() {
            this.useIntersectionObserver || this.setState({ scrollPosition: { x: D(), y: z() } });
          } }, { key: "render", value: function() {
            var ge = this.props, Ce = (ge.delayMethod, ge.delayTime, function(Te, Le) {
              if (Te == null) return {};
              var We, Qe, Pt = function(It, ze) {
                if (It == null) return {};
                var it, xt, _e = {}, jt = Object.keys(It);
                for (xt = 0; xt < jt.length; xt++) it = jt[xt], ze.indexOf(it) >= 0 || (_e[it] = It[it]);
                return _e;
              }(Te, Le);
              if (Object.getOwnPropertySymbols) {
                var ht = Object.getOwnPropertySymbols(Te);
                for (Qe = 0; Qe < ht.length; Qe++) We = ht[Qe], Le.indexOf(We) >= 0 || Object.prototype.propertyIsEnumerable.call(Te, We) && (Pt[We] = Te[We]);
              }
              return Pt;
            }(ge, b)), ue = this.useIntersectionObserver ? null : this.state.scrollPosition;
            return i().createElement(X, k({ forwardRef: this.baseComponentRef, scrollPosition: ue }, Ce));
          } }]) && P(re.prototype, he), Object.defineProperty(re, "prototype", { writable: !1 }), ae;
        }(i().Component);
        return H.propTypes = { delayMethod: s.PropTypes.oneOf(["debounce", "throttle"]), delayTime: s.PropTypes.number, useIntersectionObserver: s.PropTypes.bool }, H.defaultProps = { delayMethod: "throttle", delayTime: 300, useIntersectionObserver: !0 }, H;
      };
      function L(X) {
        return L = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, L(X);
      }
      function F(X, H) {
        for (var K = 0; K < H.length; K++) {
          var re = H[K];
          re.enumerable = re.enumerable || !1, re.configurable = !0, "value" in re && (re.writable = !0), Object.defineProperty(X, (he = function(me, le) {
            if (L(me) !== "object" || me === null) return me;
            var se = me[Symbol.toPrimitive];
            if (se !== void 0) {
              var ae = se.call(me, "string");
              if (L(ae) !== "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(me);
          }(re.key), L(he) === "symbol" ? he : String(he)), re);
        }
        var he;
      }
      function W(X, H) {
        return W = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(K, re) {
          return K.__proto__ = re, K;
        }, W(X, H);
      }
      function U(X) {
        return U = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, U(X);
      }
      var Z = function(X) {
        (function(se, ae) {
          if (typeof ae != "function" && ae !== null) throw new TypeError("Super expression must either be null or a function");
          se.prototype = Object.create(ae && ae.prototype, { constructor: { value: se, writable: !0, configurable: !0 } }), Object.defineProperty(se, "prototype", { writable: !1 }), ae && W(se, ae);
        })(le, X);
        var H, K, re, he, me = (re = le, he = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var se, ae = U(re);
          if (he) {
            var ge = U(this).constructor;
            se = Reflect.construct(ae, arguments, ge);
          } else se = ae.apply(this, arguments);
          return function(Ce, ue) {
            if (ue && (L(ue) === "object" || typeof ue == "function")) return ue;
            if (ue !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Te) {
              if (Te === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Te;
            }(Ce);
          }(this, se);
        });
        function le(se) {
          return function(ae, ge) {
            if (!(ae instanceof ge)) throw new TypeError("Cannot call a class as a function");
          }(this, le), me.call(this, se);
        }
        return H = le, (K = [{ key: "render", value: function() {
          return i().createElement(E, this.props);
        } }]) && F(H.prototype, K), Object.defineProperty(H, "prototype", { writable: !1 }), le;
      }(i().Component);
      const Q = B(Z);
      function ee(X) {
        return ee = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, ee(X);
      }
      function te(X, H) {
        for (var K = 0; K < H.length; K++) {
          var re = H[K];
          re.enumerable = re.enumerable || !1, re.configurable = !0, "value" in re && (re.writable = !0), Object.defineProperty(X, (he = function(me, le) {
            if (ee(me) !== "object" || me === null) return me;
            var se = me[Symbol.toPrimitive];
            if (se !== void 0) {
              var ae = se.call(me, "string");
              if (ee(ae) !== "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(me);
          }(re.key), ee(he) === "symbol" ? he : String(he)), re);
        }
        var he;
      }
      function q(X, H) {
        return q = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(K, re) {
          return K.__proto__ = re, K;
        }, q(X, H);
      }
      function oe(X) {
        if (X === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return X;
      }
      function G(X) {
        return G = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, G(X);
      }
      var ne = function(X) {
        (function(se, ae) {
          if (typeof ae != "function" && ae !== null) throw new TypeError("Super expression must either be null or a function");
          se.prototype = Object.create(ae && ae.prototype, { constructor: { value: se, writable: !0, configurable: !0 } }), Object.defineProperty(se, "prototype", { writable: !1 }), ae && q(se, ae);
        })(le, X);
        var H, K, re, he, me = (re = le, he = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var se, ae = G(re);
          if (he) {
            var ge = G(this).constructor;
            se = Reflect.construct(ae, arguments, ge);
          } else se = ae.apply(this, arguments);
          return function(Ce, ue) {
            if (ue && (ee(ue) === "object" || typeof ue == "function")) return ue;
            if (ue !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return oe(Ce);
          }(this, se);
        });
        function le(se) {
          var ae;
          (function(Le, We) {
            if (!(Le instanceof We)) throw new TypeError("Cannot call a class as a function");
          })(this, le), ae = me.call(this, se);
          var ge = se.afterLoad, Ce = se.beforeLoad, ue = se.scrollPosition, Te = se.visibleByDefault;
          return ae.state = { visible: Te }, Te && (Ce(), ge()), ae.onVisible = ae.onVisible.bind(oe(ae)), ae.isScrollTracked = !!(ue && Number.isFinite(ue.x) && ue.x >= 0 && Number.isFinite(ue.y) && ue.y >= 0), ae;
        }
        return H = le, (K = [{ key: "componentDidUpdate", value: function(se, ae) {
          ae.visible !== this.state.visible && this.props.afterLoad();
        } }, { key: "onVisible", value: function() {
          this.props.beforeLoad(), this.setState({ visible: !0 });
        } }, { key: "render", value: function() {
          if (this.state.visible) return this.props.children;
          var se = this.props, ae = se.className, ge = se.delayMethod, Ce = se.delayTime, ue = se.height, Te = se.placeholder, Le = se.scrollPosition, We = se.style, Qe = se.threshold, Pt = se.useIntersectionObserver, ht = se.width;
          return this.isScrollTracked || Pt && l() ? i().createElement(E, { className: ae, height: ue, onVisible: this.onVisible, placeholder: Te, scrollPosition: Le, style: We, threshold: Qe, useIntersectionObserver: Pt, width: ht }) : i().createElement(Q, { className: ae, delayMethod: ge, delayTime: Ce, height: ue, onVisible: this.onVisible, placeholder: Te, style: We, threshold: Qe, width: ht });
        } }]) && te(H.prototype, K), Object.defineProperty(H, "prototype", { writable: !1 }), le;
      }(i().Component);
      ne.propTypes = { afterLoad: s.PropTypes.func, beforeLoad: s.PropTypes.func, useIntersectionObserver: s.PropTypes.bool, visibleByDefault: s.PropTypes.bool }, ne.defaultProps = { afterLoad: function() {
        return {};
      }, beforeLoad: function() {
        return {};
      }, useIntersectionObserver: !0, visibleByDefault: !1 };
      const j = ne;
      function pe(X) {
        return pe = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, pe(X);
      }
      var ce = ["afterLoad", "beforeLoad", "delayMethod", "delayTime", "effect", "placeholder", "placeholderSrc", "scrollPosition", "threshold", "useIntersectionObserver", "visibleByDefault", "wrapperClassName", "wrapperProps"];
      function be(X, H) {
        var K = Object.keys(X);
        if (Object.getOwnPropertySymbols) {
          var re = Object.getOwnPropertySymbols(X);
          H && (re = re.filter(function(he) {
            return Object.getOwnPropertyDescriptor(X, he).enumerable;
          })), K.push.apply(K, re);
        }
        return K;
      }
      function Pe(X) {
        for (var H = 1; H < arguments.length; H++) {
          var K = arguments[H] != null ? arguments[H] : {};
          H % 2 ? be(Object(K), !0).forEach(function(re) {
            Me(X, re, K[re]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(X, Object.getOwnPropertyDescriptors(K)) : be(Object(K)).forEach(function(re) {
            Object.defineProperty(X, re, Object.getOwnPropertyDescriptor(K, re));
          });
        }
        return X;
      }
      function Me(X, H, K) {
        return (H = Fe(H)) in X ? Object.defineProperty(X, H, { value: K, enumerable: !0, configurable: !0, writable: !0 }) : X[H] = K, X;
      }
      function Ie() {
        return Ie = Object.assign ? Object.assign.bind() : function(X) {
          for (var H = 1; H < arguments.length; H++) {
            var K = arguments[H];
            for (var re in K) Object.prototype.hasOwnProperty.call(K, re) && (X[re] = K[re]);
          }
          return X;
        }, Ie.apply(this, arguments);
      }
      function Ne(X, H) {
        for (var K = 0; K < H.length; K++) {
          var re = H[K];
          re.enumerable = re.enumerable || !1, re.configurable = !0, "value" in re && (re.writable = !0), Object.defineProperty(X, Fe(re.key), re);
        }
      }
      function Fe(X) {
        var H = function(K, re) {
          if (pe(K) !== "object" || K === null) return K;
          var he = K[Symbol.toPrimitive];
          if (he !== void 0) {
            var me = he.call(K, "string");
            if (pe(me) !== "object") return me;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(K);
        }(X);
        return pe(H) === "symbol" ? H : String(H);
      }
      function ke(X, H) {
        return ke = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(K, re) {
          return K.__proto__ = re, K;
        }, ke(X, H);
      }
      function V(X) {
        return V = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, V(X);
      }
      var J = function(X) {
        (function(se, ae) {
          if (typeof ae != "function" && ae !== null) throw new TypeError("Super expression must either be null or a function");
          se.prototype = Object.create(ae && ae.prototype, { constructor: { value: se, writable: !0, configurable: !0 } }), Object.defineProperty(se, "prototype", { writable: !1 }), ae && ke(se, ae);
        })(le, X);
        var H, K, re, he, me = (re = le, he = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var se, ae = V(re);
          if (he) {
            var ge = V(this).constructor;
            se = Reflect.construct(ae, arguments, ge);
          } else se = ae.apply(this, arguments);
          return function(Ce, ue) {
            if (ue && (pe(ue) === "object" || typeof ue == "function")) return ue;
            if (ue !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Te) {
              if (Te === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Te;
            }(Ce);
          }(this, se);
        });
        function le(se) {
          var ae;
          return function(ge, Ce) {
            if (!(ge instanceof Ce)) throw new TypeError("Cannot call a class as a function");
          }(this, le), (ae = me.call(this, se)).state = { loaded: !1 }, ae;
        }
        return H = le, (K = [{ key: "onImageLoad", value: function() {
          var se = this;
          return this.state.loaded ? null : function(ae) {
            se.props.onLoad(ae), se.props.afterLoad(), se.setState({ loaded: !0 });
          };
        } }, { key: "getImg", value: function() {
          var se = this.props, ae = (se.afterLoad, se.beforeLoad, se.delayMethod, se.delayTime, se.effect, se.placeholder, se.placeholderSrc, se.scrollPosition, se.threshold, se.useIntersectionObserver, se.visibleByDefault, se.wrapperClassName, se.wrapperProps, function(ge, Ce) {
            if (ge == null) return {};
            var ue, Te, Le = function(Qe, Pt) {
              if (Qe == null) return {};
              var ht, It, ze = {}, it = Object.keys(Qe);
              for (It = 0; It < it.length; It++) ht = it[It], Pt.indexOf(ht) >= 0 || (ze[ht] = Qe[ht]);
              return ze;
            }(ge, Ce);
            if (Object.getOwnPropertySymbols) {
              var We = Object.getOwnPropertySymbols(ge);
              for (Te = 0; Te < We.length; Te++) ue = We[Te], Ce.indexOf(ue) >= 0 || Object.prototype.propertyIsEnumerable.call(ge, ue) && (Le[ue] = ge[ue]);
            }
            return Le;
          }(se, ce));
          return i().createElement("img", Ie({}, ae, { onLoad: this.onImageLoad() }));
        } }, { key: "getLazyLoadImage", value: function() {
          var se = this.props, ae = se.beforeLoad, ge = se.className, Ce = se.delayMethod, ue = se.delayTime, Te = se.height, Le = se.placeholder, We = se.scrollPosition, Qe = se.style, Pt = se.threshold, ht = se.useIntersectionObserver, It = se.visibleByDefault, ze = se.width;
          return i().createElement(j, { beforeLoad: ae, className: ge, delayMethod: Ce, delayTime: ue, height: Te, placeholder: Le, scrollPosition: We, style: Qe, threshold: Pt, useIntersectionObserver: ht, visibleByDefault: It, width: ze }, this.getImg());
        } }, { key: "getWrappedLazyLoadImage", value: function(se) {
          var ae = this.props, ge = ae.effect, Ce = ae.height, ue = ae.placeholderSrc, Te = ae.width, Le = ae.wrapperClassName, We = ae.wrapperProps, Qe = this.state.loaded, Pt = Qe ? " lazy-load-image-loaded" : "", ht = Qe || !ue ? {} : { backgroundImage: "url(".concat(ue, ")"), backgroundSize: "100% 100%" };
          return i().createElement("span", Ie({ className: Le + " lazy-load-image-background " + ge + Pt, style: Pe(Pe({}, ht), {}, { color: "transparent", display: "inline-block", height: Ce, width: Te }) }, We), se);
        } }, { key: "render", value: function() {
          var se = this.props, ae = se.effect, ge = se.placeholderSrc, Ce = se.visibleByDefault, ue = se.wrapperClassName, Te = se.wrapperProps, Le = this.getLazyLoadImage();
          return (ae || ge) && !Ce || ue || Te ? this.getWrappedLazyLoadImage(Le) : Le;
        } }]) && Ne(H.prototype, K), Object.defineProperty(H, "prototype", { writable: !1 }), le;
      }(i().Component);
      J.propTypes = { onLoad: s.PropTypes.func, afterLoad: s.PropTypes.func, beforeLoad: s.PropTypes.func, delayMethod: s.PropTypes.string, delayTime: s.PropTypes.number, effect: s.PropTypes.string, placeholderSrc: s.PropTypes.string, threshold: s.PropTypes.number, useIntersectionObserver: s.PropTypes.bool, visibleByDefault: s.PropTypes.bool, wrapperClassName: s.PropTypes.string, wrapperProps: s.PropTypes.object }, J.defaultProps = { onLoad: function() {
      }, afterLoad: function() {
        return {};
      }, beforeLoad: function() {
        return {};
      }, delayMethod: "throttle", delayTime: 300, effect: "", placeholderSrc: null, threshold: 100, useIntersectionObserver: !0, visibleByDefault: !1, wrapperClassName: "" };
      const ie = J;
    })(), ef.exports = r;
  })()), ef.exports;
}
var eF = JL();
const tF = ve(({ src: e, alt: t, ...n }) => /* @__PURE__ */ N(
  eF.LazyLoadImage,
  {
    src: e,
    alt: t,
    effect: "blur",
    wrapperProps: {
      // If you need to, you can tweak the effect transition using the wrapper style.
      style: { transitionDelay: "1s" }
    },
    draggable: !1,
    ...n
  }
));
tF.displayName = "LazyImage";
function nF(e) {
  return Et("MuiLinearProgress", e);
}
Rt("MuiLinearProgress", ["root", "colorPrimary", "colorSecondary", "determinate", "indeterminate", "buffer", "query", "dashed", "dashedColorPrimary", "dashedColorSecondary", "bar", "bar1", "bar2", "barColorPrimary", "barColorSecondary", "bar1Indeterminate", "bar1Determinate", "bar1Buffer", "bar2Indeterminate", "bar2Buffer"]);
const cp = 4, up = $o`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`, rF = typeof up != "string" ? us`
        animation: ${up} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
      ` : null, dp = $o`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`, oF = typeof dp != "string" ? us`
        animation: ${dp} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
      ` : null, fp = $o`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`, iF = typeof fp != "string" ? us`
        animation: ${fp} 3s infinite linear;
      ` : null, sF = (e) => {
  const {
    classes: t,
    variant: n,
    color: r
  } = e, o = {
    root: ["root", `color${Ee(r)}`, n],
    dashed: ["dashed", `dashedColor${Ee(r)}`],
    bar1: ["bar", "bar1", `barColor${Ee(r)}`, (n === "indeterminate" || n === "query") && "bar1Indeterminate", n === "determinate" && "bar1Determinate", n === "buffer" && "bar1Buffer"],
    bar2: ["bar", "bar2", n !== "buffer" && `barColor${Ee(r)}`, n === "buffer" && `color${Ee(r)}`, (n === "indeterminate" || n === "query") && "bar2Indeterminate", n === "buffer" && "bar2Buffer"]
  };
  return At(o, nF, t);
}, tm = (e, t) => e.vars ? e.vars.palette.LinearProgress[`${t}Bg`] : e.palette.mode === "light" ? fs(e.palette[t].main, 0.62) : ds(e.palette[t].main, 0.5), aF = Ae("span", {
  name: "MuiLinearProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`color${Ee(n.color)}`], t[n.variant]];
  }
})(tt(({
  theme: e
}) => ({
  position: "relative",
  overflow: "hidden",
  display: "block",
  height: 4,
  // Fix Safari's bug during composition of different paint.
  zIndex: 0,
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [...Object.entries(e.palette).filter(xn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: tm(e, t)
    }
  })), {
    props: ({
      ownerState: t
    }) => t.color === "inherit" && t.variant !== "buffer",
    style: {
      "&::before": {
        content: '""',
        position: "absolute",
        left: 0,
        top: 0,
        right: 0,
        bottom: 0,
        backgroundColor: "currentColor",
        opacity: 0.3
      }
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      backgroundColor: "transparent"
    }
  }, {
    props: {
      variant: "query"
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
}))), lF = Ae("span", {
  name: "MuiLinearProgress",
  slot: "Dashed",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.dashed, t[`dashedColor${Ee(n.color)}`]];
  }
})(tt(({
  theme: e
}) => ({
  position: "absolute",
  marginTop: 0,
  height: "100%",
  width: "100%",
  backgroundSize: "10px 10px",
  backgroundPosition: "0 -23px",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3,
      backgroundImage: "radial-gradient(currentColor 0%, currentColor 16%, transparent 42%)"
    }
  }, ...Object.entries(e.palette).filter(xn()).map(([t]) => {
    const n = tm(e, t);
    return {
      props: {
        color: t
      },
      style: {
        backgroundImage: `radial-gradient(${n} 0%, ${n} 16%, transparent 42%)`
      }
    };
  })]
})), iF || {
  // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
  animation: `${fp} 3s infinite linear`
}), cF = Ae("span", {
  name: "MuiLinearProgress",
  slot: "Bar1",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar1, t[`barColor${Ee(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar1Indeterminate, n.variant === "determinate" && t.bar1Determinate, n.variant === "buffer" && t.bar1Buffer];
  }
})(tt(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      backgroundColor: "currentColor"
    }
  }, ...Object.entries(e.palette).filter(xn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main
    }
  })), {
    props: {
      variant: "determinate"
    },
    style: {
      transition: `transform .${cp}s linear`
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      zIndex: 1,
      transition: `transform .${cp}s linear`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: rF || {
      animation: `${up} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`
    }
  }]
}))), uF = Ae("span", {
  name: "MuiLinearProgress",
  slot: "Bar2",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar2, t[`barColor${Ee(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar2Indeterminate, n.variant === "buffer" && t.bar2Buffer];
  }
})(tt(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [...Object.entries(e.palette).filter(xn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--LinearProgressBar2-barColor": (e.vars || e).palette[t].main
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color !== "inherit",
    style: {
      backgroundColor: "var(--LinearProgressBar2-barColor, currentColor)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color === "inherit",
    style: {
      backgroundColor: "currentColor"
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3
    }
  }, ...Object.entries(e.palette).filter(xn()).map(([t]) => ({
    props: {
      color: t,
      variant: "buffer"
    },
    style: {
      backgroundColor: tm(e, t),
      transition: `transform .${cp}s linear`
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: oF || {
      animation: `${dp} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`
    }
  }]
}))), h1 = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiLinearProgress"
  }), {
    className: o,
    color: i = "primary",
    value: s,
    valueBuffer: l,
    variant: c = "indeterminate",
    ...u
  } = r, f = {
    ...r,
    color: i,
    variant: c
  }, d = sF(f), p = du(), h = {}, g = {
    bar1: {},
    bar2: {}
  };
  if (c === "determinate" || c === "buffer")
    if (s !== void 0) {
      h["aria-valuenow"] = Math.round(s), h["aria-valuemin"] = 0, h["aria-valuemax"] = 100;
      let m = s - 100;
      p && (m = -m), g.bar1.transform = `translateX(${m}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
  if (c === "buffer")
    if (l !== void 0) {
      let m = (l || 0) - 100;
      p && (m = -m), g.bar2.transform = `translateX(${m}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
  return /* @__PURE__ */ we(aF, {
    className: Oe(d.root, o),
    ownerState: f,
    role: "progressbar",
    ...h,
    ref: n,
    ...u,
    children: [c === "buffer" ? /* @__PURE__ */ N(lF, {
      className: d.dashed,
      ownerState: f
    }) : null, /* @__PURE__ */ N(cF, {
      className: d.bar1,
      ownerState: f,
      style: g.bar1
    }), c === "determinate" ? null : /* @__PURE__ */ N(uF, {
      className: d.bar2,
      ownerState: f,
      style: g.bar2
    })]
  });
});
process.env.NODE_ENV !== "production" && (h1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["inherit", "primary", "secondary"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */
  value: a.number,
  /**
   * The value for the buffer variant.
   * Value between 0 and 100.
   */
  valueBuffer: a.number,
  /**
   * The variant to use.
   * Use indeterminate or query when there is no progress value.
   * @default 'indeterminate'
   */
  variant: a.oneOf(["buffer", "determinate", "indeterminate", "query"])
});
const dF = ve(({ disablePortal: e, isCircle: t = !1 }) => /* @__PURE__ */ N(Yi, { disablePortal: e, children: /* @__PURE__ */ we(
  Br,
  {
    sx: {
      width: 1,
      minHeight: 1,
      flexGrow: 1,
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      position: "fixed",
      // 基于 <body>
      top: 0,
      left: 0,
      right: 0
    },
    children: [
      t && /* @__PURE__ */ N(bh, { color: "primary", disableShrink: !0, size: 40 }),
      !t && /* @__PURE__ */ N(
        h1,
        {
          color: "primary",
          sx: { width: 1, maxWidth: 360, height: "4px", borderRadius: "8px" }
        }
      )
    ]
  }
) }));
dF.displayName = "Loading";
function fF(e) {
  return Et("MuiDialog", e);
}
const tf = Rt("MuiDialog", ["root", "scrollPaper", "scrollBody", "container", "paper", "paperScrollPaper", "paperScrollBody", "paperWidthFalse", "paperWidthXs", "paperWidthSm", "paperWidthMd", "paperWidthLg", "paperWidthXl", "paperFullWidth", "paperFullScreen"]), m1 = /* @__PURE__ */ M.createContext({});
process.env.NODE_ENV !== "production" && (m1.displayName = "DialogContext");
const pF = Ae(Ph, {
  name: "MuiDialog",
  slot: "Backdrop",
  overrides: (e, t) => t.backdrop
})({
  // Improve scrollable dialog support.
  zIndex: -1
}), hF = (e) => {
  const {
    classes: t,
    scroll: n,
    maxWidth: r,
    fullWidth: o,
    fullScreen: i
  } = e, s = {
    root: ["root"],
    container: ["container", `scroll${Ee(n)}`],
    paper: ["paper", `paperScroll${Ee(n)}`, `paperWidth${Ee(String(r))}`, o && "paperFullWidth", i && "paperFullScreen"]
  };
  return At(s, fF, t);
}, mF = Ae(Cu, {
  name: "MuiDialog",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  "@media print": {
    // Use !important to override the Modal inline-style.
    position: "absolute !important"
  }
}), gF = Ae("div", {
  name: "MuiDialog",
  slot: "Container",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.container, t[`scroll${Ee(n.scroll)}`]];
  }
})({
  height: "100%",
  "@media print": {
    height: "auto"
  },
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      justifyContent: "center",
      alignItems: "center"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      overflowY: "auto",
      overflowX: "hidden",
      textAlign: "center",
      "&::after": {
        content: '""',
        display: "inline-block",
        verticalAlign: "middle",
        height: "100%",
        width: "0"
      }
    }
  }]
}), yF = Ae(hs, {
  name: "MuiDialog",
  slot: "Paper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.paper, t[`scrollPaper${Ee(n.scroll)}`], t[`paperWidth${Ee(String(n.maxWidth))}`], n.fullWidth && t.paperFullWidth, n.fullScreen && t.paperFullScreen];
  }
})(tt(({
  theme: e
}) => ({
  margin: 32,
  position: "relative",
  overflowY: "auto",
  "@media print": {
    overflowY: "visible",
    boxShadow: "none"
  },
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      flexDirection: "column",
      maxHeight: "calc(100% - 64px)"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      display: "inline-block",
      verticalAlign: "middle",
      textAlign: "initial"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.maxWidth,
    style: {
      maxWidth: "calc(100% - 64px)"
    }
  }, {
    props: {
      maxWidth: "xs"
    },
    style: {
      maxWidth: e.breakpoints.unit === "px" ? Math.max(e.breakpoints.values.xs, 444) : `max(${e.breakpoints.values.xs}${e.breakpoints.unit}, 444px)`,
      [`&.${tf.paperScrollBody}`]: {
        [e.breakpoints.down(Math.max(e.breakpoints.values.xs, 444) + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  }, ...Object.keys(e.breakpoints.values).filter((t) => t !== "xs").map((t) => ({
    props: {
      maxWidth: t
    },
    style: {
      maxWidth: `${e.breakpoints.values[t]}${e.breakpoints.unit}`,
      [`&.${tf.paperScrollBody}`]: {
        [e.breakpoints.down(e.breakpoints.values[t] + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  })), {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "calc(100% - 64px)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullScreen,
    style: {
      margin: 0,
      width: "100%",
      maxWidth: "100%",
      height: "100%",
      maxHeight: "none",
      borderRadius: 0,
      [`&.${tf.paperScrollBody}`]: {
        margin: 0,
        maxWidth: "100%"
      }
    }
  }]
}))), g1 = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiDialog"
  }), o = uo(), i = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    "aria-describedby": s,
    "aria-labelledby": l,
    "aria-modal": c = !0,
    BackdropComponent: u,
    BackdropProps: f,
    children: d,
    className: p,
    disableEscapeKeyDown: h = !1,
    fullScreen: g = !1,
    fullWidth: m = !1,
    maxWidth: y = "sm",
    onClick: x,
    onClose: E,
    open: v,
    PaperComponent: w = hs,
    PaperProps: S = {},
    scroll: T = "paper",
    slots: C = {},
    slotProps: R = {},
    TransitionComponent: I = Jo,
    transitionDuration: b = i,
    TransitionProps: k,
    ...P
  } = r, A = {
    ...r,
    disableEscapeKeyDown: h,
    fullScreen: g,
    fullWidth: m,
    maxWidth: y,
    scroll: T
  }, O = hF(A), _ = M.useRef(), $ = (pe) => {
    _.current = pe.target === pe.currentTarget;
  }, D = (pe) => {
    x && x(pe), _.current && (_.current = null, E && E(pe, "backdropClick"));
  }, z = Up(l), B = M.useMemo(() => ({
    titleId: z
  }), [z]), L = {
    transition: I,
    ...C
  }, F = {
    transition: k,
    paper: S,
    backdrop: f,
    ...R
  }, W = {
    slots: L,
    slotProps: F
  }, [U, Z] = pt("root", {
    elementType: mF,
    shouldForwardComponentProp: !0,
    externalForwardedProps: W,
    ownerState: A,
    className: Oe(O.root, p),
    ref: n
  }), [Q, ee] = pt("backdrop", {
    elementType: pF,
    shouldForwardComponentProp: !0,
    externalForwardedProps: W,
    ownerState: A
  }), [te, q] = pt("paper", {
    elementType: yF,
    shouldForwardComponentProp: !0,
    externalForwardedProps: W,
    ownerState: A,
    className: Oe(O.paper, S.className)
  }), [oe, G] = pt("container", {
    elementType: gF,
    externalForwardedProps: W,
    ownerState: A,
    className: Oe(O.container)
  }), [ne, j] = pt("transition", {
    elementType: Jo,
    externalForwardedProps: W,
    ownerState: A,
    additionalProps: {
      appear: !0,
      in: v,
      timeout: b,
      role: "presentation"
    }
  });
  return /* @__PURE__ */ N(U, {
    closeAfterTransition: !0,
    slots: {
      backdrop: Q
    },
    slotProps: {
      backdrop: {
        transitionDuration: b,
        as: u,
        ...ee
      }
    },
    disableEscapeKeyDown: h,
    onClose: E,
    open: v,
    onClick: D,
    ...Z,
    ...P,
    children: /* @__PURE__ */ N(ne, {
      ...j,
      children: /* @__PURE__ */ N(oe, {
        onMouseDown: $,
        ...G,
        children: /* @__PURE__ */ N(te, {
          as: w,
          elevation: 24,
          role: "dialog",
          "aria-describedby": s,
          "aria-labelledby": z,
          "aria-modal": c,
          ...q,
          children: /* @__PURE__ */ N(m1.Provider, {
            value: B,
            children: d
          })
        })
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (g1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The id(s) of the element(s) that describe the dialog.
   */
  "aria-describedby": a.string,
  /**
   * The id(s) of the element(s) that label the dialog.
   */
  "aria-labelledby": a.string,
  /**
   * Informs assistive technologies that the element is modal.
   * It's added on the element with role="dialog".
   * @default true
   */
  "aria-modal": a.oneOfType([a.oneOf(["false", "true"]), a.bool]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * @ignore
   */
  BackdropProps: a.object,
  /**
   * Dialog children, usually the included sub-components.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: a.bool,
  /**
   * If `true`, the dialog is full-screen.
   * @default false
   */
  fullScreen: a.bool,
  /**
   * If `true`, the dialog stretches to `maxWidth`.
   *
   * Notice that the dialog width grow is limited by the default margin.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * Determine the max-width of the dialog.
   * The dialog width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'sm'
   */
  maxWidth: a.oneOfType([a.oneOf(["xs", "sm", "md", "lg", "xl", !1]), a.string]),
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The component used to render the body of the dialog.
   * @default Paper
   */
  PaperComponent: a.elementType,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @default {}
   * @deprecated Use `slotProps.paper` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PaperProps: a.object,
  /**
   * Determine the container for scrolling the dialog.
   * @default 'paper'
   */
  scroll: a.oneOf(["body", "paper"]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    container: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    container: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: a.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated Use `slotProps.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionProps: a.object
});
const y1 = ve(
  ({
    isOpen: e,
    closeModal: t,
    isPrevented: n = !0,
    children: r,
    maxWidth: o = "sm",
    fullWidth: i = !0,
    sx: s,
    ...l
  }) => {
    const { paperCommonStyles: c } = ms();
    return /* @__PURE__ */ N(
      g1,
      {
        className: "VenomousUI-Modal",
        open: e,
        onClose: n ? void 0 : t,
        scroll: "paper",
        keepMounted: !0,
        maxWidth: o,
        fullWidth: i,
        sx: { ...s },
        slotProps: {
          paper: {
            sx: {
              ...c
            }
          }
        },
        ...l,
        children: r
      }
    );
  }
);
y1.displayName = "Modal";
function qU() {
  const [e, t] = Jt(!1), n = $e(() => t(!0), []), r = $e(() => t(!1), []);
  return {
    isOpen: e,
    openModal: n,
    closeModal: r
  };
}
const bF = ve(
  ({
    onSubmit: e,
    onClose: t,
    isSubmitting: n = !1,
    title: r = "",
    contentMessage: o = "",
    cancelButtonText: i = "Cancel",
    confirmButtonText: s = "Confirm",
    confirmButtonIsDisabled: l = !1,
    cancelButtonIsDisabled: c = !1,
    ...u
  }) => {
    const f = Ue(u.isOpen);
    return Xe(() => {
      f.current && !u.isOpen && (t == null || t()), f.current = u.isOpen;
    }, [u.isOpen, t]), /* @__PURE__ */ we(y1, { isPrevented: !0, ...u, children: [
      /* @__PURE__ */ N(wn, { isTitle: !0, text: r, p: "8px" }),
      /* @__PURE__ */ N(wn, { text: o, p: "8px", pb: "24px" }),
      /* @__PURE__ */ we(en, { row: !0, justifyContent: "flex-end", children: [
        /* @__PURE__ */ N(
          an,
          {
            text: i,
            onClick: u.closeModal,
            disabled: c || n,
            isOutlined: !0
          }
        ),
        /* @__PURE__ */ N(
          an,
          {
            text: s,
            onClick: () => {
              (async () => (await (e == null ? void 0 : e()), u.closeModal()))();
            },
            disabled: l,
            loading: n,
            autoFocus: !0
          }
        )
      ] })
    ] });
  }
);
bF.displayName = "ConfirmModal";
function Pb(e) {
  return e.substring(2).toLowerCase();
}
function vF(e, t) {
  return t.documentElement.clientWidth < e.clientX || t.documentElement.clientHeight < e.clientY;
}
function Bc(e) {
  const {
    children: t,
    disableReactTree: n = !1,
    mouseEvent: r = "onClick",
    onClickAway: o,
    touchEvent: i = "onTouchEnd"
  } = e, s = M.useRef(!1), l = M.useRef(null), c = M.useRef(!1), u = M.useRef(!1);
  M.useEffect(() => (setTimeout(() => {
    c.current = !0;
  }, 0), () => {
    c.current = !1;
  }), []);
  const f = mn(ii(t), l), d = Ir((g) => {
    const m = u.current;
    u.current = !1;
    const y = Nn(l.current);
    if (!c.current || !l.current || "clientX" in g && vF(g, y))
      return;
    if (s.current) {
      s.current = !1;
      return;
    }
    let x;
    g.composedPath ? x = g.composedPath().includes(l.current) : x = !y.documentElement.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      g.target
    ) || l.current.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      g.target
    ), !x && (n || !m) && o(g);
  }), p = (g) => (m) => {
    u.current = !0;
    const y = t.props[g];
    y && y(m);
  }, h = {
    ref: f
  };
  return i !== !1 && (h[i] = p(i)), M.useEffect(() => {
    if (i !== !1) {
      const g = Pb(i), m = Nn(l.current), y = () => {
        s.current = !0;
      };
      return m.addEventListener(g, d), m.addEventListener("touchmove", y), () => {
        m.removeEventListener(g, d), m.removeEventListener("touchmove", y);
      };
    }
  }, [d, i]), r !== !1 && (h[r] = p(r)), M.useEffect(() => {
    if (r !== !1) {
      const g = Pb(r), m = Nn(l.current);
      return m.addEventListener(g, d), () => {
        m.removeEventListener(g, d);
      };
    }
  }, [d, r]), /* @__PURE__ */ M.cloneElement(t, h);
}
process.env.NODE_ENV !== "production" && (Bc.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The wrapped element.
   */
  children: Io.isRequired,
  /**
   * If `true`, the React tree is ignored and only the DOM tree is considered.
   * This prop changes how portaled elements are handled.
   * @default false
   */
  disableReactTree: a.bool,
  /**
   * The mouse event to listen to. You can disable the listener by providing `false`.
   * @default 'onClick'
   */
  mouseEvent: a.oneOf(["onClick", "onMouseDown", "onMouseUp", "onPointerDown", "onPointerUp", !1]),
  /**
   * Callback fired when a "click away" event is detected.
   */
  onClickAway: a.func.isRequired,
  /**
   * The touch event to listen to. You can disable the listener by providing `false`.
   * @default 'onTouchEnd'
   */
  touchEvent: a.oneOf(["onTouchEnd", "onTouchStart", !1])
});
process.env.NODE_ENV !== "production" && (Bc.propTypes = Va(Bc.propTypes));
const xF = Fo((e) => ({
  activeId: null,
  setActiveId: (t) => e({ activeId: t })
}));
function wF(e) {
  const { activeId: t, setActiveId: n } = xF(), [r, o] = Jt(null), i = !!r && (!e || t === e), s = $e(
    (c) => {
      const u = c.currentTarget;
      e ? (n(e), o(u)) : o(r ? null : u);
    },
    [e, n]
  ), l = $e(() => {
    var c;
    (c = window.getSelection()) != null && c.toString() || (e && n(null), o(null));
  }, [e, n]);
  return {
    anchorEl: r,
    isOpen: i,
    openPopper: s,
    closePopper: l
  };
}
const b1 = ve(
  ({ id: e, children: t, renderPopperHandler: n, position: r = "bottom", sx: o, contentSx: i }) => {
    const { anchorEl: s, isOpen: l, openPopper: c, closePopper: u } = wF(e);
    return /* @__PURE__ */ N(Bc, { onClickAway: u, children: /* @__PURE__ */ we(
      Br,
      {
        sx: { position: "relative", ...o },
        role: "presentation",
        className: "VenomousUI-Popper",
        children: [
          n({ anchorEl: s, isOpen: l, openPopper: c, closePopper: u }),
          /* @__PURE__ */ N(yu, { open: l, anchorEl: s, placement: r, transition: !0, keepMounted: !0, children: ({ TransitionProps: f }) => /* @__PURE__ */ N(Jo, { ...f, children: /* @__PURE__ */ N(ro, { isOutlined: !0, sx: { width: "100%", ...i }, children: t }) }) })
        ]
      }
    ) });
  }
);
b1.displayName = "Popper";
const pp = typeof Jp({}) == "function", SF = (e, t) => ({
  WebkitFontSmoothing: "antialiased",
  // Antialiasing.
  MozOsxFontSmoothing: "grayscale",
  // Antialiasing.
  // Change from `box-sizing: content-box` so that `width`
  // is not affected by `padding` or `border`.
  boxSizing: "border-box",
  // Fix font resize problem in iOS
  WebkitTextSizeAdjust: "100%",
  // When used under CssVarsProvider, colorScheme should not be applied dynamically because it will generate the stylesheet twice for server-rendered applications.
  ...t && !e.vars && {
    colorScheme: e.palette.mode
  }
}), EF = (e) => ({
  color: (e.vars || e).palette.text.primary,
  ...e.typography.body1,
  backgroundColor: (e.vars || e).palette.background.default,
  "@media print": {
    // Save printer ink.
    backgroundColor: (e.vars || e).palette.common.white
  }
}), v1 = (e, t = !1) => {
  var i, s;
  const n = {};
  t && e.colorSchemes && typeof e.getColorSchemeSelector == "function" && Object.entries(e.colorSchemes).forEach(([l, c]) => {
    var f, d;
    const u = e.getColorSchemeSelector(l);
    u.startsWith("@") ? n[u] = {
      ":root": {
        colorScheme: (f = c.palette) == null ? void 0 : f.mode
      }
    } : n[u.replace(/\s*&/, "")] = {
      colorScheme: (d = c.palette) == null ? void 0 : d.mode
    };
  });
  let r = {
    html: SF(e, t),
    "*, *::before, *::after": {
      boxSizing: "inherit"
    },
    "strong, b": {
      fontWeight: e.typography.fontWeightBold
    },
    body: {
      margin: 0,
      // Remove the margin in all browsers.
      ...EF(e),
      // Add support for document.body.requestFullScreen().
      // Other elements, if background transparent, are not supported.
      "&::backdrop": {
        backgroundColor: (e.vars || e).palette.background.default
      }
    },
    ...n
  };
  const o = (s = (i = e.components) == null ? void 0 : i.MuiCssBaseline) == null ? void 0 : s.styleOverrides;
  return o && (r = [r, o]), r;
}, rc = "mui-ecs", TF = (e) => {
  const t = v1(e, !1), n = Array.isArray(t) ? t[0] : t;
  return !e.vars && n && (n.html[`:root:has(${rc})`] = {
    colorScheme: e.palette.mode
  }), e.colorSchemes && Object.entries(e.colorSchemes).forEach(([r, o]) => {
    var s, l;
    const i = e.getColorSchemeSelector(r);
    i.startsWith("@") ? n[i] = {
      [`:root:not(:has(.${rc}))`]: {
        colorScheme: (s = o.palette) == null ? void 0 : s.mode
      }
    } : n[i.replace(/\s*&/, "")] = {
      [`&:not(:has(.${rc}))`]: {
        colorScheme: (l = o.palette) == null ? void 0 : l.mode
      }
    };
  }), t;
}, CF = Jp(pp ? ({
  theme: e,
  enableColorScheme: t
}) => v1(e, t) : ({
  theme: e
}) => TF(e));
function x1(e) {
  const t = Nt({
    props: e,
    name: "MuiCssBaseline"
  }), {
    children: n,
    enableColorScheme: r = !1
  } = t;
  return /* @__PURE__ */ we(M.Fragment, {
    children: [pp && /* @__PURE__ */ N(CF, {
      enableColorScheme: r
    }), !pp && !r && /* @__PURE__ */ N("span", {
      className: rc,
      style: {
        display: "none"
      }
    }), n]
  });
}
process.env.NODE_ENV !== "production" && (x1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * You can wrap a node.
   */
  children: a.node,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   * @default false
   */
  enableColorScheme: a.bool
});
function OF() {
  const { themeMode: e } = Zu(), { themePalette: t } = em(), n = Ye(() => fu({
    palette: {
      mode: e,
      primary: {
        main: t.main,
        dark: t.dark,
        light: t.light,
        contrastText: t.contrastText
      }
    }
  }), [e, t]);
  return kF(t), { theme: n };
}
function kF(e) {
  Xe(() => {
    const t = document.createElement("style");
    return t.innerHTML = `
          /* 设置选中文本的样式 */
          ::selection {
            background-color: ${e.light};                        /* 设置选中文本的背景色 */
            color: white;                                                   /* 设置选中文本的文字颜色 */
          }
    
          /* 设置滚动条的样式 */
          ::-webkit-scrollbar {
            width: 8px;                                                     /* 设置滚动条的宽度 */
            height: 8px;                                                    /* 设置滚动条的高度 */
          }
          ::-webkit-scrollbar-thumb {
            background-color: ${e.main};                         /* 设置滚动条的颜色 */
            border-radius: 4px;                                             /* 设置滚动条的圆角 */
          }
          ::-webkit-scrollbar-thumb:hover {
            background-color: ${e.dark};                         /* 悬停时加深颜色 */
          } 
          ::-webkit-scrollbar-track {
            background-color: rgba(0, 0, 0, 0.1);                         /* 滑轨颜色 */
            border-radius: 4px;                                             /* 圆角 */
            transition: opacity 0.5s ease-in-out;                           /* 滑轨过渡效果 */
          }
          /* Firefox 滚动条样式 */
          * {
            scrollbar-color: ${e.main} rgba(0, 0, 0, 0.1);     /* 滑块 和 滑轨颜色 */
            scrollbar-width: medium;                                        /* 滚动条宽度 */
          }
          /* Firefox 滚动条的过渡效果 */
          *::-webkit-scrollbar {
            transition: opacity 0.5s ease-in-out;
          }
        `, document.head.appendChild(t), () => {
      document.head.removeChild(t);
    };
  }, [e]);
}
const RF = ve(({ children: e }) => {
  const { theme: t } = OF();
  return /* @__PURE__ */ we(m$, { theme: t, disableTransitionOnChange: !0, children: [
    /* @__PURE__ */ N(x1, {}),
    e
  ] });
});
RF.displayName = "ThemeProvider";
function NF(e) {
  if (typeof document > "u") return;
  let t = document.head || document.getElementsByTagName("head")[0], n = document.createElement("style");
  n.type = "text/css", t.appendChild(n), n.styleSheet ? n.styleSheet.cssText = e : n.appendChild(document.createTextNode(e));
}
const $F = (e) => {
  switch (e) {
    case "success":
      return _F;
    case "info":
      return AF;
    case "warning":
      return MF;
    case "error":
      return DF;
    default:
      return null;
  }
}, PF = Array(12).fill(0), IF = ({ visible: e, className: t }) => /* @__PURE__ */ Y.createElement("div", {
  className: [
    "sonner-loading-wrapper",
    t
  ].filter(Boolean).join(" "),
  "data-visible": e
}, /* @__PURE__ */ Y.createElement("div", {
  className: "sonner-spinner"
}, PF.map((n, r) => /* @__PURE__ */ Y.createElement("div", {
  className: "sonner-loading-bar",
  key: `spinner-bar-${r}`
})))), _F = /* @__PURE__ */ Y.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ Y.createElement("path", {
  fillRule: "evenodd",
  d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
  clipRule: "evenodd"
})), MF = /* @__PURE__ */ Y.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ Y.createElement("path", {
  fillRule: "evenodd",
  d: "M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z",
  clipRule: "evenodd"
})), AF = /* @__PURE__ */ Y.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ Y.createElement("path", {
  fillRule: "evenodd",
  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z",
  clipRule: "evenodd"
})), DF = /* @__PURE__ */ Y.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ Y.createElement("path", {
  fillRule: "evenodd",
  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0110 5zm0 10a1 1 0 100-2 1 1 0 000 2z",
  clipRule: "evenodd"
})), BF = /* @__PURE__ */ Y.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "12",
  height: "12",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "1.5",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, /* @__PURE__ */ Y.createElement("line", {
  x1: "18",
  y1: "6",
  x2: "6",
  y2: "18"
}), /* @__PURE__ */ Y.createElement("line", {
  x1: "6",
  y1: "6",
  x2: "18",
  y2: "18"
})), LF = () => {
  const [e, t] = Y.useState(document.hidden);
  return Y.useEffect(() => {
    const n = () => {
      t(document.hidden);
    };
    return document.addEventListener("visibilitychange", n), () => window.removeEventListener("visibilitychange", n);
  }, []), e;
};
let hp = 1;
class FF {
  constructor() {
    this.subscribe = (t) => (this.subscribers.push(t), () => {
      const n = this.subscribers.indexOf(t);
      this.subscribers.splice(n, 1);
    }), this.publish = (t) => {
      this.subscribers.forEach((n) => n(t));
    }, this.addToast = (t) => {
      this.publish(t), this.toasts = [
        ...this.toasts,
        t
      ];
    }, this.create = (t) => {
      var n;
      const { message: r, ...o } = t, i = typeof (t == null ? void 0 : t.id) == "number" || ((n = t.id) == null ? void 0 : n.length) > 0 ? t.id : hp++, s = this.toasts.find((c) => c.id === i), l = t.dismissible === void 0 ? !0 : t.dismissible;
      return this.dismissedToasts.has(i) && this.dismissedToasts.delete(i), s ? this.toasts = this.toasts.map((c) => c.id === i ? (this.publish({
        ...c,
        ...t,
        id: i,
        title: r
      }), {
        ...c,
        ...t,
        id: i,
        dismissible: l,
        title: r
      }) : c) : this.addToast({
        title: r,
        ...o,
        dismissible: l,
        id: i
      }), i;
    }, this.dismiss = (t) => (t ? (this.dismissedToasts.add(t), requestAnimationFrame(() => this.subscribers.forEach((n) => n({
      id: t,
      dismiss: !0
    })))) : this.toasts.forEach((n) => {
      this.subscribers.forEach((r) => r({
        id: n.id,
        dismiss: !0
      }));
    }), t), this.message = (t, n) => this.create({
      ...n,
      message: t
    }), this.error = (t, n) => this.create({
      ...n,
      message: t,
      type: "error"
    }), this.success = (t, n) => this.create({
      ...n,
      type: "success",
      message: t
    }), this.info = (t, n) => this.create({
      ...n,
      type: "info",
      message: t
    }), this.warning = (t, n) => this.create({
      ...n,
      type: "warning",
      message: t
    }), this.loading = (t, n) => this.create({
      ...n,
      type: "loading",
      message: t
    }), this.promise = (t, n) => {
      if (!n)
        return;
      let r;
      n.loading !== void 0 && (r = this.create({
        ...n,
        promise: t,
        type: "loading",
        message: n.loading,
        description: typeof n.description != "function" ? n.description : void 0
      }));
      const o = Promise.resolve(t instanceof Function ? t() : t);
      let i = r !== void 0, s;
      const l = o.then(async (u) => {
        if (s = [
          "resolve",
          u
        ], Y.isValidElement(u))
          i = !1, this.create({
            id: r,
            type: "default",
            message: u
          });
        else if (VF(u) && !u.ok) {
          i = !1;
          const d = typeof n.error == "function" ? await n.error(`HTTP error! status: ${u.status}`) : n.error, p = typeof n.description == "function" ? await n.description(`HTTP error! status: ${u.status}`) : n.description, g = typeof d == "object" && !Y.isValidElement(d) ? d : {
            message: d
          };
          this.create({
            id: r,
            type: "error",
            description: p,
            ...g
          });
        } else if (u instanceof Error) {
          i = !1;
          const d = typeof n.error == "function" ? await n.error(u) : n.error, p = typeof n.description == "function" ? await n.description(u) : n.description, g = typeof d == "object" && !Y.isValidElement(d) ? d : {
            message: d
          };
          this.create({
            id: r,
            type: "error",
            description: p,
            ...g
          });
        } else if (n.success !== void 0) {
          i = !1;
          const d = typeof n.success == "function" ? await n.success(u) : n.success, p = typeof n.description == "function" ? await n.description(u) : n.description, g = typeof d == "object" && !Y.isValidElement(d) ? d : {
            message: d
          };
          this.create({
            id: r,
            type: "success",
            description: p,
            ...g
          });
        }
      }).catch(async (u) => {
        if (s = [
          "reject",
          u
        ], n.error !== void 0) {
          i = !1;
          const f = typeof n.error == "function" ? await n.error(u) : n.error, d = typeof n.description == "function" ? await n.description(u) : n.description, h = typeof f == "object" && !Y.isValidElement(f) ? f : {
            message: f
          };
          this.create({
            id: r,
            type: "error",
            description: d,
            ...h
          });
        }
      }).finally(() => {
        i && (this.dismiss(r), r = void 0), n.finally == null || n.finally.call(n);
      }), c = () => new Promise((u, f) => l.then(() => s[0] === "reject" ? f(s[1]) : u(s[1])).catch(f));
      return typeof r != "string" && typeof r != "number" ? {
        unwrap: c
      } : Object.assign(r, {
        unwrap: c
      });
    }, this.custom = (t, n) => {
      const r = (n == null ? void 0 : n.id) || hp++;
      return this.create({
        jsx: t(r),
        id: r,
        ...n
      }), r;
    }, this.getActiveToasts = () => this.toasts.filter((t) => !this.dismissedToasts.has(t.id)), this.subscribers = [], this.toasts = [], this.dismissedToasts = /* @__PURE__ */ new Set();
  }
}
const On = new FF(), zF = (e, t) => {
  const n = (t == null ? void 0 : t.id) || hp++;
  return On.addToast({
    title: e,
    ...t,
    id: n
  }), n;
}, VF = (e) => e && typeof e == "object" && "ok" in e && typeof e.ok == "boolean" && "status" in e && typeof e.status == "number", jF = zF, HF = () => On.toasts, WF = () => On.getActiveToasts(), nf = Object.assign(jF, {
  success: On.success,
  info: On.info,
  warning: On.warning,
  error: On.error,
  custom: On.custom,
  message: On.message,
  promise: On.promise,
  dismiss: On.dismiss,
  loading: On.loading
}, {
  getHistory: HF,
  getToasts: WF
});
NF("[data-sonner-toaster][dir=ltr],html[dir=ltr]{--toast-icon-margin-start:-3px;--toast-icon-margin-end:4px;--toast-svg-margin-start:-1px;--toast-svg-margin-end:0px;--toast-button-margin-start:auto;--toast-button-margin-end:0;--toast-close-button-start:0;--toast-close-button-end:unset;--toast-close-button-transform:translate(-35%, -35%)}[data-sonner-toaster][dir=rtl],html[dir=rtl]{--toast-icon-margin-start:4px;--toast-icon-margin-end:-3px;--toast-svg-margin-start:0px;--toast-svg-margin-end:-1px;--toast-button-margin-start:0;--toast-button-margin-end:auto;--toast-close-button-start:unset;--toast-close-button-end:0;--toast-close-button-transform:translate(35%, -35%)}[data-sonner-toaster]{position:fixed;width:var(--width);font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;--gray1:hsl(0, 0%, 99%);--gray2:hsl(0, 0%, 97.3%);--gray3:hsl(0, 0%, 95.1%);--gray4:hsl(0, 0%, 93%);--gray5:hsl(0, 0%, 90.9%);--gray6:hsl(0, 0%, 88.7%);--gray7:hsl(0, 0%, 85.8%);--gray8:hsl(0, 0%, 78%);--gray9:hsl(0, 0%, 56.1%);--gray10:hsl(0, 0%, 52.3%);--gray11:hsl(0, 0%, 43.5%);--gray12:hsl(0, 0%, 9%);--border-radius:8px;box-sizing:border-box;padding:0;margin:0;list-style:none;outline:0;z-index:999999999;transition:transform .4s ease}[data-sonner-toaster][data-lifted=true]{transform:translateY(-8px)}@media (hover:none) and (pointer:coarse){[data-sonner-toaster][data-lifted=true]{transform:none}}[data-sonner-toaster][data-x-position=right]{right:var(--offset-right)}[data-sonner-toaster][data-x-position=left]{left:var(--offset-left)}[data-sonner-toaster][data-x-position=center]{left:50%;transform:translateX(-50%)}[data-sonner-toaster][data-y-position=top]{top:var(--offset-top)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--offset-bottom)}[data-sonner-toast]{--y:translateY(100%);--lift-amount:calc(var(--lift) * var(--gap));z-index:var(--z-index);position:absolute;opacity:0;transform:var(--y);touch-action:none;transition:transform .4s,opacity .4s,height .4s,box-shadow .2s;box-sizing:border-box;outline:0;overflow-wrap:anywhere}[data-sonner-toast][data-styled=true]{padding:16px;background:var(--normal-bg);border:1px solid var(--normal-border);color:var(--normal-text);border-radius:var(--border-radius);box-shadow:0 4px 12px rgba(0,0,0,.1);width:var(--width);font-size:13px;display:flex;align-items:center;gap:6px}[data-sonner-toast]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-y-position=top]{top:0;--y:translateY(-100%);--lift:1;--lift-amount:calc(1 * var(--gap))}[data-sonner-toast][data-y-position=bottom]{bottom:0;--y:translateY(100%);--lift:-1;--lift-amount:calc(var(--lift) * var(--gap))}[data-sonner-toast][data-styled=true] [data-description]{font-weight:400;line-height:1.4;color:#3f3f3f}[data-rich-colors=true][data-sonner-toast][data-styled=true] [data-description]{color:inherit}[data-sonner-toaster][data-sonner-theme=dark] [data-description]{color:#e8e8e8}[data-sonner-toast][data-styled=true] [data-title]{font-weight:500;line-height:1.5;color:inherit}[data-sonner-toast][data-styled=true] [data-icon]{display:flex;height:16px;width:16px;position:relative;justify-content:flex-start;align-items:center;flex-shrink:0;margin-left:var(--toast-icon-margin-start);margin-right:var(--toast-icon-margin-end)}[data-sonner-toast][data-promise=true] [data-icon]>svg{opacity:0;transform:scale(.8);transform-origin:center;animation:sonner-fade-in .3s ease forwards}[data-sonner-toast][data-styled=true] [data-icon]>*{flex-shrink:0}[data-sonner-toast][data-styled=true] [data-icon] svg{margin-left:var(--toast-svg-margin-start);margin-right:var(--toast-svg-margin-end)}[data-sonner-toast][data-styled=true] [data-content]{display:flex;flex-direction:column;gap:2px}[data-sonner-toast][data-styled=true] [data-button]{border-radius:4px;padding-left:8px;padding-right:8px;height:24px;font-size:12px;color:var(--normal-bg);background:var(--normal-text);margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end);border:none;font-weight:500;cursor:pointer;outline:0;display:flex;align-items:center;flex-shrink:0;transition:opacity .4s,box-shadow .2s}[data-sonner-toast][data-styled=true] [data-button]:focus-visible{box-shadow:0 0 0 2px rgba(0,0,0,.4)}[data-sonner-toast][data-styled=true] [data-button]:first-of-type{margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end)}[data-sonner-toast][data-styled=true] [data-cancel]{color:var(--normal-text);background:rgba(0,0,0,.08)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-styled=true] [data-cancel]{background:rgba(255,255,255,.3)}[data-sonner-toast][data-styled=true] [data-close-button]{position:absolute;left:var(--toast-close-button-start);right:var(--toast-close-button-end);top:0;height:20px;width:20px;display:flex;justify-content:center;align-items:center;padding:0;color:var(--gray12);background:var(--normal-bg);border:1px solid var(--gray4);transform:var(--toast-close-button-transform);border-radius:50%;cursor:pointer;z-index:1;transition:opacity .1s,background .2s,border-color .2s}[data-sonner-toast][data-styled=true] [data-close-button]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-styled=true] [data-disabled=true]{cursor:not-allowed}[data-sonner-toast][data-styled=true]:hover [data-close-button]:hover{background:var(--gray2);border-color:var(--gray5)}[data-sonner-toast][data-swiping=true]::before{content:'';position:absolute;left:-100%;right:-100%;height:100%;z-index:-1}[data-sonner-toast][data-y-position=top][data-swiping=true]::before{bottom:50%;transform:scaleY(3) translateY(50%)}[data-sonner-toast][data-y-position=bottom][data-swiping=true]::before{top:50%;transform:scaleY(3) translateY(-50%)}[data-sonner-toast][data-swiping=false][data-removed=true]::before{content:'';position:absolute;inset:0;transform:scaleY(2)}[data-sonner-toast][data-expanded=true]::after{content:'';position:absolute;left:0;height:calc(var(--gap) + 1px);bottom:100%;width:100%}[data-sonner-toast][data-mounted=true]{--y:translateY(0);opacity:1}[data-sonner-toast][data-expanded=false][data-front=false]{--scale:var(--toasts-before) * 0.05 + 1;--y:translateY(calc(var(--lift-amount) * var(--toasts-before))) scale(calc(-1 * var(--scale)));height:var(--front-toast-height)}[data-sonner-toast]>*{transition:opacity .4s}[data-sonner-toast][data-x-position=right]{right:0}[data-sonner-toast][data-x-position=left]{left:0}[data-sonner-toast][data-expanded=false][data-front=false][data-styled=true]>*{opacity:0}[data-sonner-toast][data-visible=false]{opacity:0;pointer-events:none}[data-sonner-toast][data-mounted=true][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset)));height:var(--initial-height)}[data-sonner-toast][data-removed=true][data-front=true][data-swipe-out=false]{--y:translateY(calc(var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset) + var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=false]{--y:translateY(40%);opacity:0;transition:transform .5s,opacity .2s}[data-sonner-toast][data-removed=true][data-front=false]::before{height:calc(var(--initial-height) + 20%)}[data-sonner-toast][data-swiping=true]{transform:var(--y) translateY(var(--swipe-amount-y,0)) translateX(var(--swipe-amount-x,0));transition:none}[data-sonner-toast][data-swiped=true]{user-select:none}[data-sonner-toast][data-swipe-out=true][data-y-position=bottom],[data-sonner-toast][data-swipe-out=true][data-y-position=top]{animation-duration:.2s;animation-timing-function:ease-out;animation-fill-mode:forwards}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=left]{animation-name:swipe-out-left}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=right]{animation-name:swipe-out-right}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=up]{animation-name:swipe-out-up}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=down]{animation-name:swipe-out-down}@keyframes swipe-out-left{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) - 100%));opacity:0}}@keyframes swipe-out-right{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) + 100%));opacity:0}}@keyframes swipe-out-up{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) - 100%));opacity:0}}@keyframes swipe-out-down{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) + 100%));opacity:0}}@media (max-width:600px){[data-sonner-toaster]{position:fixed;right:var(--mobile-offset-right);left:var(--mobile-offset-left);width:100%}[data-sonner-toaster][dir=rtl]{left:calc(var(--mobile-offset-left) * -1)}[data-sonner-toaster] [data-sonner-toast]{left:0;right:0;width:calc(100% - var(--mobile-offset-left) * 2)}[data-sonner-toaster][data-x-position=left]{left:var(--mobile-offset-left)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--mobile-offset-bottom)}[data-sonner-toaster][data-y-position=top]{top:var(--mobile-offset-top)}[data-sonner-toaster][data-x-position=center]{left:var(--mobile-offset-left);right:var(--mobile-offset-right);transform:none}}[data-sonner-toaster][data-sonner-theme=light]{--normal-bg:#fff;--normal-border:var(--gray4);--normal-text:var(--gray12);--success-bg:hsl(143, 85%, 96%);--success-border:hsl(145, 92%, 87%);--success-text:hsl(140, 100%, 27%);--info-bg:hsl(208, 100%, 97%);--info-border:hsl(221, 91%, 93%);--info-text:hsl(210, 92%, 45%);--warning-bg:hsl(49, 100%, 97%);--warning-border:hsl(49, 91%, 84%);--warning-text:hsl(31, 92%, 45%);--error-bg:hsl(359, 100%, 97%);--error-border:hsl(359, 100%, 94%);--error-text:hsl(360, 100%, 45%)}[data-sonner-toaster][data-sonner-theme=light] [data-sonner-toast][data-invert=true]{--normal-bg:#000;--normal-border:hsl(0, 0%, 20%);--normal-text:var(--gray1)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-invert=true]{--normal-bg:#fff;--normal-border:var(--gray3);--normal-text:var(--gray12)}[data-sonner-toaster][data-sonner-theme=dark]{--normal-bg:#000;--normal-bg-hover:hsl(0, 0%, 12%);--normal-border:hsl(0, 0%, 20%);--normal-border-hover:hsl(0, 0%, 25%);--normal-text:var(--gray1);--success-bg:hsl(150, 100%, 6%);--success-border:hsl(147, 100%, 12%);--success-text:hsl(150, 86%, 65%);--info-bg:hsl(215, 100%, 6%);--info-border:hsl(223, 43%, 17%);--info-text:hsl(216, 87%, 65%);--warning-bg:hsl(64, 100%, 6%);--warning-border:hsl(60, 100%, 9%);--warning-text:hsl(46, 87%, 65%);--error-bg:hsl(358, 76%, 10%);--error-border:hsl(357, 89%, 16%);--error-text:hsl(358, 100%, 81%)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]{background:var(--normal-bg);border-color:var(--normal-border);color:var(--normal-text)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]:hover{background:var(--normal-bg-hover);border-color:var(--normal-border-hover)}[data-rich-colors=true][data-sonner-toast][data-type=success]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=success] [data-close-button]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=info]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=info] [data-close-button]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning] [data-close-button]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=error]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}[data-rich-colors=true][data-sonner-toast][data-type=error] [data-close-button]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}.sonner-loading-wrapper{--size:16px;height:var(--size);width:var(--size);position:absolute;inset:0;z-index:10}.sonner-loading-wrapper[data-visible=false]{transform-origin:center;animation:sonner-fade-out .2s ease forwards}.sonner-spinner{position:relative;top:50%;left:50%;height:var(--size);width:var(--size)}.sonner-loading-bar{animation:sonner-spin 1.2s linear infinite;background:var(--gray11);border-radius:6px;height:8%;left:-10%;position:absolute;top:-3.9%;width:24%}.sonner-loading-bar:first-child{animation-delay:-1.2s;transform:rotate(.0001deg) translate(146%)}.sonner-loading-bar:nth-child(2){animation-delay:-1.1s;transform:rotate(30deg) translate(146%)}.sonner-loading-bar:nth-child(3){animation-delay:-1s;transform:rotate(60deg) translate(146%)}.sonner-loading-bar:nth-child(4){animation-delay:-.9s;transform:rotate(90deg) translate(146%)}.sonner-loading-bar:nth-child(5){animation-delay:-.8s;transform:rotate(120deg) translate(146%)}.sonner-loading-bar:nth-child(6){animation-delay:-.7s;transform:rotate(150deg) translate(146%)}.sonner-loading-bar:nth-child(7){animation-delay:-.6s;transform:rotate(180deg) translate(146%)}.sonner-loading-bar:nth-child(8){animation-delay:-.5s;transform:rotate(210deg) translate(146%)}.sonner-loading-bar:nth-child(9){animation-delay:-.4s;transform:rotate(240deg) translate(146%)}.sonner-loading-bar:nth-child(10){animation-delay:-.3s;transform:rotate(270deg) translate(146%)}.sonner-loading-bar:nth-child(11){animation-delay:-.2s;transform:rotate(300deg) translate(146%)}.sonner-loading-bar:nth-child(12){animation-delay:-.1s;transform:rotate(330deg) translate(146%)}@keyframes sonner-fade-in{0%{opacity:0;transform:scale(.8)}100%{opacity:1;transform:scale(1)}}@keyframes sonner-fade-out{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(.8)}}@keyframes sonner-spin{0%{opacity:1}100%{opacity:.15}}@media (prefers-reduced-motion){.sonner-loading-bar,[data-sonner-toast],[data-sonner-toast]>*{transition:none!important;animation:none!important}}.sonner-loader{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);transform-origin:center;transition:opacity .2s,transform .2s}.sonner-loader[data-visible=false]{opacity:0;transform:scale(.8) translate(-50%,-50%)}");
function Il(e) {
  return e.label !== void 0;
}
const UF = 3, qF = "24px", YF = "16px", Ib = 4e3, KF = 356, GF = 14, XF = 45, ZF = 200;
function Er(...e) {
  return e.filter(Boolean).join(" ");
}
function QF(e) {
  const [t, n] = e.split("-"), r = [];
  return t && r.push(t), n && r.push(n), r;
}
const JF = (e) => {
  var t, n, r, o, i, s, l, c, u;
  const { invert: f, toast: d, unstyled: p, interacting: h, setHeights: g, visibleToasts: m, heights: y, index: x, toasts: E, expanded: v, removeToast: w, defaultRichColors: S, closeButton: T, style: C, cancelButtonStyle: R, actionButtonStyle: I, className: b = "", descriptionClassName: k = "", duration: P, position: A, gap: O, expandByDefault: _, classNames: $, icons: D, closeButtonAriaLabel: z = "Close toast" } = e, [B, L] = Y.useState(null), [F, W] = Y.useState(null), [U, Z] = Y.useState(!1), [Q, ee] = Y.useState(!1), [te, q] = Y.useState(!1), [oe, G] = Y.useState(!1), [ne, j] = Y.useState(!1), [pe, ce] = Y.useState(0), [be, Pe] = Y.useState(0), Me = Y.useRef(d.duration || P || Ib), Ie = Y.useRef(null), Ne = Y.useRef(null), Fe = x === 0, ke = x + 1 <= m, V = d.type, J = d.dismissible !== !1, ie = d.className || "", X = d.descriptionClassName || "", H = Y.useMemo(() => y.findIndex((ze) => ze.toastId === d.id) || 0, [
    y,
    d.id
  ]), K = Y.useMemo(() => {
    var ze;
    return (ze = d.closeButton) != null ? ze : T;
  }, [
    d.closeButton,
    T
  ]), re = Y.useMemo(() => d.duration || P || Ib, [
    d.duration,
    P
  ]), he = Y.useRef(0), me = Y.useRef(0), le = Y.useRef(0), se = Y.useRef(null), [ae, ge] = A.split("-"), Ce = Y.useMemo(() => y.reduce((ze, it, xt) => xt >= H ? ze : ze + it.height, 0), [
    y,
    H
  ]), ue = LF(), Te = d.invert || f, Le = V === "loading";
  me.current = Y.useMemo(() => H * O + Ce, [
    H,
    Ce
  ]), Y.useEffect(() => {
    Me.current = re;
  }, [
    re
  ]), Y.useEffect(() => {
    Z(!0);
  }, []), Y.useEffect(() => {
    const ze = Ne.current;
    if (ze) {
      const it = ze.getBoundingClientRect().height;
      return Pe(it), g((xt) => [
        {
          toastId: d.id,
          height: it,
          position: d.position
        },
        ...xt
      ]), () => g((xt) => xt.filter((_e) => _e.toastId !== d.id));
    }
  }, [
    g,
    d.id
  ]), Y.useLayoutEffect(() => {
    if (!U) return;
    const ze = Ne.current, it = ze.style.height;
    ze.style.height = "auto";
    const xt = ze.getBoundingClientRect().height;
    ze.style.height = it, Pe(xt), g((_e) => _e.find((Dt) => Dt.toastId === d.id) ? _e.map((Dt) => Dt.toastId === d.id ? {
      ...Dt,
      height: xt
    } : Dt) : [
      {
        toastId: d.id,
        height: xt,
        position: d.position
      },
      ..._e
    ]);
  }, [
    U,
    d.title,
    d.description,
    g,
    d.id
  ]);
  const We = Y.useCallback(() => {
    ee(!0), ce(me.current), g((ze) => ze.filter((it) => it.toastId !== d.id)), setTimeout(() => {
      w(d);
    }, ZF);
  }, [
    d,
    w,
    g,
    me
  ]);
  Y.useEffect(() => {
    if (d.promise && V === "loading" || d.duration === 1 / 0 || d.type === "loading") return;
    let ze;
    return v || h || ue ? (() => {
      if (le.current < he.current) {
        const _e = (/* @__PURE__ */ new Date()).getTime() - he.current;
        Me.current = Me.current - _e;
      }
      le.current = (/* @__PURE__ */ new Date()).getTime();
    })() : (() => {
      Me.current !== 1 / 0 && (he.current = (/* @__PURE__ */ new Date()).getTime(), ze = setTimeout(() => {
        d.onAutoClose == null || d.onAutoClose.call(d, d), We();
      }, Me.current));
    })(), () => clearTimeout(ze);
  }, [
    v,
    h,
    d,
    V,
    ue,
    We
  ]), Y.useEffect(() => {
    d.delete && We();
  }, [
    We,
    d.delete
  ]);
  function Qe() {
    var ze;
    if (D != null && D.loading) {
      var it;
      return /* @__PURE__ */ Y.createElement("div", {
        className: Er($ == null ? void 0 : $.loader, d == null || (it = d.classNames) == null ? void 0 : it.loader, "sonner-loader"),
        "data-visible": V === "loading"
      }, D.loading);
    }
    return /* @__PURE__ */ Y.createElement(IF, {
      className: Er($ == null ? void 0 : $.loader, d == null || (ze = d.classNames) == null ? void 0 : ze.loader),
      visible: V === "loading"
    });
  }
  const Pt = d.icon || (D == null ? void 0 : D[V]) || $F(V);
  var ht, It;
  return /* @__PURE__ */ Y.createElement("li", {
    tabIndex: 0,
    ref: Ne,
    className: Er(b, ie, $ == null ? void 0 : $.toast, d == null || (t = d.classNames) == null ? void 0 : t.toast, $ == null ? void 0 : $.default, $ == null ? void 0 : $[V], d == null || (n = d.classNames) == null ? void 0 : n[V]),
    "data-sonner-toast": "",
    "data-rich-colors": (ht = d.richColors) != null ? ht : S,
    "data-styled": !(d.jsx || d.unstyled || p),
    "data-mounted": U,
    "data-promise": !!d.promise,
    "data-swiped": ne,
    "data-removed": Q,
    "data-visible": ke,
    "data-y-position": ae,
    "data-x-position": ge,
    "data-index": x,
    "data-front": Fe,
    "data-swiping": te,
    "data-dismissible": J,
    "data-type": V,
    "data-invert": Te,
    "data-swipe-out": oe,
    "data-swipe-direction": F,
    "data-expanded": !!(v || _ && U),
    style: {
      "--index": x,
      "--toasts-before": x,
      "--z-index": E.length - x,
      "--offset": `${Q ? pe : me.current}px`,
      "--initial-height": _ ? "auto" : `${be}px`,
      ...C,
      ...d.style
    },
    onDragEnd: () => {
      q(!1), L(null), se.current = null;
    },
    onPointerDown: (ze) => {
      Le || !J || (Ie.current = /* @__PURE__ */ new Date(), ce(me.current), ze.target.setPointerCapture(ze.pointerId), ze.target.tagName !== "BUTTON" && (q(!0), se.current = {
        x: ze.clientX,
        y: ze.clientY
      }));
    },
    onPointerUp: () => {
      var ze, it, xt;
      if (oe || !J) return;
      se.current = null;
      const _e = Number(((ze = Ne.current) == null ? void 0 : ze.style.getPropertyValue("--swipe-amount-x").replace("px", "")) || 0), jt = Number(((it = Ne.current) == null ? void 0 : it.style.getPropertyValue("--swipe-amount-y").replace("px", "")) || 0), Dt = (/* @__PURE__ */ new Date()).getTime() - ((xt = Ie.current) == null ? void 0 : xt.getTime()), Cn = B === "x" ? _e : jt, di = Math.abs(Cn) / Dt;
      if (Math.abs(Cn) >= XF || di > 0.11) {
        ce(me.current), d.onDismiss == null || d.onDismiss.call(d, d), W(B === "x" ? _e > 0 ? "right" : "left" : jt > 0 ? "down" : "up"), We(), G(!0);
        return;
      } else {
        var _n, Mn;
        (_n = Ne.current) == null || _n.style.setProperty("--swipe-amount-x", "0px"), (Mn = Ne.current) == null || Mn.style.setProperty("--swipe-amount-y", "0px");
      }
      j(!1), q(!1), L(null);
    },
    onPointerMove: (ze) => {
      var it, xt, _e;
      if (!se.current || !J || ((it = window.getSelection()) == null ? void 0 : it.toString().length) > 0) return;
      const Dt = ze.clientY - se.current.y, Cn = ze.clientX - se.current.x;
      var di;
      const _n = (di = e.swipeDirections) != null ? di : QF(A);
      !B && (Math.abs(Cn) > 1 || Math.abs(Dt) > 1) && L(Math.abs(Cn) > Math.abs(Dt) ? "x" : "y");
      let Mn = {
        x: 0,
        y: 0
      };
      const cl = (Ur) => 1 / (1.5 + Math.abs(Ur) / 20);
      if (B === "y") {
        if (_n.includes("top") || _n.includes("bottom"))
          if (_n.includes("top") && Dt < 0 || _n.includes("bottom") && Dt > 0)
            Mn.y = Dt;
          else {
            const Ur = Dt * cl(Dt);
            Mn.y = Math.abs(Ur) < Math.abs(Dt) ? Ur : Dt;
          }
      } else if (B === "x" && (_n.includes("left") || _n.includes("right")))
        if (_n.includes("left") && Cn < 0 || _n.includes("right") && Cn > 0)
          Mn.x = Cn;
        else {
          const Ur = Cn * cl(Cn);
          Mn.x = Math.abs(Ur) < Math.abs(Cn) ? Ur : Cn;
        }
      (Math.abs(Mn.x) > 0 || Math.abs(Mn.y) > 0) && j(!0), (xt = Ne.current) == null || xt.style.setProperty("--swipe-amount-x", `${Mn.x}px`), (_e = Ne.current) == null || _e.style.setProperty("--swipe-amount-y", `${Mn.y}px`);
    }
  }, K && !d.jsx && V !== "loading" ? /* @__PURE__ */ Y.createElement("button", {
    "aria-label": z,
    "data-disabled": Le,
    "data-close-button": !0,
    onClick: Le || !J ? () => {
    } : () => {
      We(), d.onDismiss == null || d.onDismiss.call(d, d);
    },
    className: Er($ == null ? void 0 : $.closeButton, d == null || (r = d.classNames) == null ? void 0 : r.closeButton)
  }, (It = D == null ? void 0 : D.close) != null ? It : BF) : null, (V || d.icon || d.promise) && d.icon !== null && ((D == null ? void 0 : D[V]) !== null || d.icon) ? /* @__PURE__ */ Y.createElement("div", {
    "data-icon": "",
    className: Er($ == null ? void 0 : $.icon, d == null || (o = d.classNames) == null ? void 0 : o.icon)
  }, d.promise || d.type === "loading" && !d.icon ? d.icon || Qe() : null, d.type !== "loading" ? Pt : null) : null, /* @__PURE__ */ Y.createElement("div", {
    "data-content": "",
    className: Er($ == null ? void 0 : $.content, d == null || (i = d.classNames) == null ? void 0 : i.content)
  }, /* @__PURE__ */ Y.createElement("div", {
    "data-title": "",
    className: Er($ == null ? void 0 : $.title, d == null || (s = d.classNames) == null ? void 0 : s.title)
  }, d.jsx ? d.jsx : typeof d.title == "function" ? d.title() : d.title), d.description ? /* @__PURE__ */ Y.createElement("div", {
    "data-description": "",
    className: Er(k, X, $ == null ? void 0 : $.description, d == null || (l = d.classNames) == null ? void 0 : l.description)
  }, typeof d.description == "function" ? d.description() : d.description) : null), /* @__PURE__ */ Y.isValidElement(d.cancel) ? d.cancel : d.cancel && Il(d.cancel) ? /* @__PURE__ */ Y.createElement("button", {
    "data-button": !0,
    "data-cancel": !0,
    style: d.cancelButtonStyle || R,
    onClick: (ze) => {
      Il(d.cancel) && J && (d.cancel.onClick == null || d.cancel.onClick.call(d.cancel, ze), We());
    },
    className: Er($ == null ? void 0 : $.cancelButton, d == null || (c = d.classNames) == null ? void 0 : c.cancelButton)
  }, d.cancel.label) : null, /* @__PURE__ */ Y.isValidElement(d.action) ? d.action : d.action && Il(d.action) ? /* @__PURE__ */ Y.createElement("button", {
    "data-button": !0,
    "data-action": !0,
    style: d.actionButtonStyle || I,
    onClick: (ze) => {
      Il(d.action) && (d.action.onClick == null || d.action.onClick.call(d.action, ze), !ze.defaultPrevented && We());
    },
    className: Er($ == null ? void 0 : $.actionButton, d == null || (u = d.classNames) == null ? void 0 : u.actionButton)
  }, d.action.label) : null);
};
function _b() {
  if (typeof window > "u" || typeof document > "u") return "ltr";
  const e = document.documentElement.getAttribute("dir");
  return e === "auto" || !e ? window.getComputedStyle(document.documentElement).direction : e;
}
function ez(e, t) {
  const n = {};
  return [
    e,
    t
  ].forEach((r, o) => {
    const i = o === 1, s = i ? "--mobile-offset" : "--offset", l = i ? YF : qF;
    function c(u) {
      [
        "top",
        "right",
        "bottom",
        "left"
      ].forEach((f) => {
        n[`${s}-${f}`] = typeof u == "number" ? `${u}px` : u;
      });
    }
    typeof r == "number" || typeof r == "string" ? c(r) : typeof r == "object" ? [
      "top",
      "right",
      "bottom",
      "left"
    ].forEach((u) => {
      r[u] === void 0 ? n[`${s}-${u}`] = l : n[`${s}-${u}`] = typeof r[u] == "number" ? `${r[u]}px` : r[u];
    }) : c(l);
  }), n;
}
const tz = /* @__PURE__ */ Y.forwardRef(function(t, n) {
  const { invert: r, position: o = "bottom-right", hotkey: i = [
    "altKey",
    "KeyT"
  ], expand: s, closeButton: l, className: c, offset: u, mobileOffset: f, theme: d = "light", richColors: p, duration: h, style: g, visibleToasts: m = UF, toastOptions: y, dir: x = _b(), gap: E = GF, icons: v, containerAriaLabel: w = "Notifications" } = t, [S, T] = Y.useState([]), C = Y.useMemo(() => Array.from(new Set([
    o
  ].concat(S.filter((F) => F.position).map((F) => F.position)))), [
    S,
    o
  ]), [R, I] = Y.useState([]), [b, k] = Y.useState(!1), [P, A] = Y.useState(!1), [O, _] = Y.useState(d !== "system" ? d : typeof window < "u" && window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light"), $ = Y.useRef(null), D = i.join("+").replace(/Key/g, "").replace(/Digit/g, ""), z = Y.useRef(null), B = Y.useRef(!1), L = Y.useCallback((F) => {
    T((W) => {
      var U;
      return (U = W.find((Z) => Z.id === F.id)) != null && U.delete || On.dismiss(F.id), W.filter(({ id: Z }) => Z !== F.id);
    });
  }, []);
  return Y.useEffect(() => On.subscribe((F) => {
    if (F.dismiss) {
      requestAnimationFrame(() => {
        T((W) => W.map((U) => U.id === F.id ? {
          ...U,
          delete: !0
        } : U));
      });
      return;
    }
    setTimeout(() => {
      ki.flushSync(() => {
        T((W) => {
          const U = W.findIndex((Z) => Z.id === F.id);
          return U !== -1 ? [
            ...W.slice(0, U),
            {
              ...W[U],
              ...F
            },
            ...W.slice(U + 1)
          ] : [
            F,
            ...W
          ];
        });
      });
    });
  }), [
    S
  ]), Y.useEffect(() => {
    if (d !== "system") {
      _(d);
      return;
    }
    if (d === "system" && (window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? _("dark") : _("light")), typeof window > "u") return;
    const F = window.matchMedia("(prefers-color-scheme: dark)");
    try {
      F.addEventListener("change", ({ matches: W }) => {
        _(W ? "dark" : "light");
      });
    } catch {
      F.addListener(({ matches: U }) => {
        try {
          _(U ? "dark" : "light");
        } catch (Z) {
          console.error(Z);
        }
      });
    }
  }, [
    d
  ]), Y.useEffect(() => {
    S.length <= 1 && k(!1);
  }, [
    S
  ]), Y.useEffect(() => {
    const F = (W) => {
      var U;
      if (i.every((ee) => W[ee] || W.code === ee)) {
        var Q;
        k(!0), (Q = $.current) == null || Q.focus();
      }
      W.code === "Escape" && (document.activeElement === $.current || (U = $.current) != null && U.contains(document.activeElement)) && k(!1);
    };
    return document.addEventListener("keydown", F), () => document.removeEventListener("keydown", F);
  }, [
    i
  ]), Y.useEffect(() => {
    if ($.current)
      return () => {
        z.current && (z.current.focus({
          preventScroll: !0
        }), z.current = null, B.current = !1);
      };
  }, [
    $.current
  ]), // Remove item from normal navigation flow, only available via hotkey
  /* @__PURE__ */ Y.createElement("section", {
    ref: n,
    "aria-label": `${w} ${D}`,
    tabIndex: -1,
    "aria-live": "polite",
    "aria-relevant": "additions text",
    "aria-atomic": "false",
    suppressHydrationWarning: !0
  }, C.map((F, W) => {
    var U;
    const [Z, Q] = F.split("-");
    return S.length ? /* @__PURE__ */ Y.createElement("ol", {
      key: F,
      dir: x === "auto" ? _b() : x,
      tabIndex: -1,
      ref: $,
      className: c,
      "data-sonner-toaster": !0,
      "data-sonner-theme": O,
      "data-y-position": Z,
      "data-lifted": b && S.length > 1 && !s,
      "data-x-position": Q,
      style: {
        "--front-toast-height": `${((U = R[0]) == null ? void 0 : U.height) || 0}px`,
        "--width": `${KF}px`,
        "--gap": `${E}px`,
        ...g,
        ...ez(u, f)
      },
      onBlur: (ee) => {
        B.current && !ee.currentTarget.contains(ee.relatedTarget) && (B.current = !1, z.current && (z.current.focus({
          preventScroll: !0
        }), z.current = null));
      },
      onFocus: (ee) => {
        ee.target instanceof HTMLElement && ee.target.dataset.dismissible === "false" || B.current || (B.current = !0, z.current = ee.relatedTarget);
      },
      onMouseEnter: () => k(!0),
      onMouseMove: () => k(!0),
      onMouseLeave: () => {
        P || k(!1);
      },
      onDragEnd: () => k(!1),
      onPointerDown: (ee) => {
        ee.target instanceof HTMLElement && ee.target.dataset.dismissible === "false" || A(!0);
      },
      onPointerUp: () => A(!1)
    }, S.filter((ee) => !ee.position && W === 0 || ee.position === F).map((ee, te) => {
      var q, oe;
      return /* @__PURE__ */ Y.createElement(JF, {
        key: ee.id,
        icons: v,
        index: te,
        toast: ee,
        defaultRichColors: p,
        duration: (q = y == null ? void 0 : y.duration) != null ? q : h,
        className: y == null ? void 0 : y.className,
        descriptionClassName: y == null ? void 0 : y.descriptionClassName,
        invert: r,
        visibleToasts: m,
        closeButton: (oe = y == null ? void 0 : y.closeButton) != null ? oe : l,
        interacting: P,
        position: F,
        style: y == null ? void 0 : y.style,
        unstyled: y == null ? void 0 : y.unstyled,
        classNames: y == null ? void 0 : y.classNames,
        cancelButtonStyle: y == null ? void 0 : y.cancelButtonStyle,
        actionButtonStyle: y == null ? void 0 : y.actionButtonStyle,
        closeButtonAriaLabel: y == null ? void 0 : y.closeButtonAriaLabel,
        removeToast: L,
        toasts: S.filter((G) => G.position == ee.position),
        heights: R.filter((G) => G.position == ee.position),
        setHeights: I,
        expandByDefault: s,
        gap: E,
        expanded: b,
        swipeDirections: t.swipeDirections
      });
    })) : null;
  }));
}), nz = ve(({ position: e = "bottom-right" }) => {
  const { isDarkMode: t } = Zu();
  return /* @__PURE__ */ N(
    tz,
    {
      closeButton: !1,
      invert: t,
      visibleToasts: 3,
      position: e,
      gap: 6
    }
  );
});
nz.displayName = "Button";
function rz() {
  return $e(({ type: t, title: n, description: r }) => {
    const o = {
      description: r,
      icon: /* @__PURE__ */ N(hr, { icon: oz(t), color: iz(t) }),
      cancel: {
        label: /* @__PURE__ */ N(hr, { icon: "solar:close-circle-outline" }),
        onClick: () => {
        }
      },
      cancelButtonStyle: { background: "transparent" }
    };
    return t === "success" ? nf.success(n, o) : t === "error" ? nf.error(n, o) : nf.info(n, o);
  }, []);
}
function oz(e) {
  switch (e) {
    case "success":
      return "solar:check-circle-bold";
    case "error":
      return "solar:danger-triangle-bold";
    case "info":
    default:
      return "solar:danger-circle-bold";
  }
}
function iz(e) {
  switch (e) {
    case "success":
      return "success";
    case "error":
      return "error";
    case "info":
      return "auto";
    default:
      return "disabled";
  }
}
const sz = ve(() => {
  const { isFullScreen: e, toggleFullScreen: t } = GL();
  return /* @__PURE__ */ N(
    an,
    {
      isCircle: !0,
      isGhost: !0,
      color: "auto",
      icon: e ? "solar:quit-full-screen-square-line-duotone" : "solar:full-screen-square-line-duotone",
      iconWidth: 28,
      onClick: t
    }
  );
});
sz.displayName = "AdminFullScreen";
const az = ve(({ children: e, sx: t }) => /* @__PURE__ */ N(
  ro,
  {
    isOutlined: !0,
    sx: {
      width: "100%",
      position: "sticky",
      top: 0,
      left: 0,
      right: 0,
      ...t
    },
    children: /* @__PURE__ */ N(
      en,
      {
        className: "VenomousUI-AdminHeader",
        row: !0,
        component: "header",
        sx: {
          width: "100%",
          height: 50,
          alignItems: "center",
          justifyContent: "space-between"
        },
        children: e
      }
    )
  }
));
az.displayName = "AdminHeader";
const lz = ({
  items: e,
  isItemSelected: t,
  isItemDisabled: n,
  onItemClick: r,
  renderItem: o
}) => /* @__PURE__ */ N(
  QL,
  {
    cols: { xs: 3, sm: 3, md: 3, lg: 3, xl: 3 },
    height: 68 * Math.ceil(e.length / 3),
    items: e,
    renderGridItem: (i) => /* @__PURE__ */ N(
      vu,
      {
        isOutlined: !t(i),
        clickable: !0,
        disabled: n ? n(i) : !1,
        onClick: () => void (r == null ? void 0 : r(i)),
        sx: {
          width: "100%",
          height: "60px",
          m: "4px",
          p: "8px",
          border: 0,
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          transition: "outline-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out",
          outlineWidth: "1px",
          outlineStyle: "solid",
          outlineColor: ({ palette: s }) => t(i) ? s.primary.main : "divider",
          color: ({ palette: s }) => `${s.text.primary} !important`
        },
        children: o(i)
      }
    )
  }
), cz = ve(
  lz
), uz = ve(
  ({
    children: e,
    width: t = 300,
    title: n = "Settings",
    labelOfThemeMode: r = "ThemeMode",
    labelOfThemePalettes: o = "ThemePalettes",
    onChangeThemeMode: i,
    onChangeThemePalette: s
  }) => {
    const { isOpen: l, openDrawer: c, closeDrawer: u } = UM();
    return /* @__PURE__ */ we(rr, { children: [
      /* @__PURE__ */ N(
        an,
        {
          isCircle: !0,
          isGhost: !0,
          icon: "solar:settings-line-duotone",
          iconWidth: 28,
          onClick: c,
          color: "auto"
        }
      ),
      /* @__PURE__ */ we(Ew, { width: t, position: "right", isOpen: l, closeDrawer: u, children: [
        /* @__PURE__ */ N(Tw, { title: n, closeDrawer: u }),
        /* @__PURE__ */ N(wn, { text: r, isLabel: !0 }),
        /* @__PURE__ */ N(dz, { onChangeThemeMode: i }),
        /* @__PURE__ */ N("br", {}),
        /* @__PURE__ */ N(wn, { text: o, isLabel: !0 }),
        /* @__PURE__ */ N(fz, { onChangeThemePalette: s }),
        /* @__PURE__ */ N("br", {}),
        e
      ] })
    ] });
  }
);
uz.displayName = "AdminSettingsDrawer";
function dz({
  onChangeThemeMode: e
}) {
  const { themeMode: t, isDarkMode: n, toggleThemeMode: r } = Zu();
  return /* @__PURE__ */ we(
    vu,
    {
      isOutlined: !0,
      clickable: !0,
      onClick: () => {
        r(), setTimeout(() => void (e == null ? void 0 : e(t)), 200);
      },
      sx: {
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between",
        height: "60px",
        pl: "24px",
        mt: "2px"
      },
      children: [
        /* @__PURE__ */ N(
          hr,
          {
            icon: n ? "solar:moon-bold-duotone" : "solar:sun-2-bold-duotone",
            width: 24,
            color: "primary"
          }
        ),
        /* @__PURE__ */ N(Gh, { value: n, onChange: () => {
        } })
      ]
    }
  );
}
function fz({
  onChangeThemePalette: e
}) {
  const { allPaletteNames: t, themePaletteName: n, setThemePaletteName: r } = em();
  return /* @__PURE__ */ N(
    cz,
    {
      items: t.map((o) => o),
      isItemSelected: (o) => o === n,
      isItemDisabled: (o) => o === n,
      onItemClick: async (o) => {
        r(o), await new Promise((i) => setTimeout(i, 200)), e == null || e(o);
      },
      renderItem: (o) => /* @__PURE__ */ N(
        hr,
        {
          icon: "solar:siderbar-bold-duotone",
          width: 32,
          sx: { color: lp(o).main }
        }
      )
    }
  );
}
const pz = ve(
  ({ menuHeaderHeight: e = 50, menuWidth: t = 220, menuItems: n, currentPath: r, menuHeaderElement: o, sx: i }) => {
    const { checkIsParentItemActive: s, checkIsSubItemActive: l } = sM({
      currentPath: r
    });
    return /* @__PURE__ */ we(
      ro,
      {
        className: "VenomousUI-AdminSideNavMenu",
        isOutlined: !0,
        sx: { width: t, height: "100svh", ...i },
        children: [
          /* @__PURE__ */ N(en, { row: !0, gap: 0, height: e, px: "8px", mb: "8px", children: o }),
          /* @__PURE__ */ N(
            Ec,
            {
              width: "100%",
              height: `calc(100svh - ${e}px - 16px)`,
              items: n,
              renderItem: (c) => c.subItems ? /* @__PURE__ */ N(
                b1,
                {
                  id: c.label,
                  position: "right",
                  sx: { width: "100%" },
                  contentSx: { p: "8px" },
                  renderPopperHandler: ({ isOpen: u, openPopper: f }) => /* @__PURE__ */ N(
                    Js,
                    {
                      label: c.label,
                      isActive: s(c),
                      icon: c.icon,
                      clickable: !0,
                      ellipsis: !0,
                      onClick: f,
                      onMouseEnter: f,
                      sx: { backgroundColor: u ? "divider" : "transparent" }
                    }
                  ),
                  children: /* @__PURE__ */ N(
                    Ec,
                    {
                      width: t,
                      items: c.subItems,
                      renderItem: (u) => /* @__PURE__ */ N(
                        Js,
                        {
                          label: u.label,
                          isActive: l(u),
                          icon: u.icon,
                          clickable: !0,
                          ellipsis: !0,
                          onClick: u.onClick
                        },
                        u.label
                      )
                    }
                  )
                }
              ) : /* @__PURE__ */ N(
                Js,
                {
                  label: c.label,
                  isActive: s(c),
                  icon: c.icon,
                  clickable: !0,
                  ellipsis: !0,
                  onClick: c.onClick
                },
                c.label
              )
            }
          )
        ]
      }
    );
  }
);
pz.displayName = "AdminSideNavMenu";
function Xt(e) {
  if (typeof e == "string" || typeof e == "number") return "" + e;
  let t = "";
  if (Array.isArray(e))
    for (let n = 0, r; n < e.length; n++)
      (r = Xt(e[n])) !== "" && (t += (t && " ") + r);
  else
    for (let n in e)
      e[n] && (t += (t && " ") + n);
  return t;
}
var hz = { value: () => {
} };
function Qu() {
  for (var e = 0, t = arguments.length, n = {}, r; e < t; ++e) {
    if (!(r = arguments[e] + "") || r in n || /[\s.]/.test(r)) throw new Error("illegal type: " + r);
    n[r] = [];
  }
  return new oc(n);
}
function oc(e) {
  this._ = e;
}
function mz(e, t) {
  return e.trim().split(/^|\s+/).map(function(n) {
    var r = "", o = n.indexOf(".");
    if (o >= 0 && (r = n.slice(o + 1), n = n.slice(0, o)), n && !t.hasOwnProperty(n)) throw new Error("unknown type: " + n);
    return { type: n, name: r };
  });
}
oc.prototype = Qu.prototype = {
  constructor: oc,
  on: function(e, t) {
    var n = this._, r = mz(e + "", n), o, i = -1, s = r.length;
    if (arguments.length < 2) {
      for (; ++i < s; ) if ((o = (e = r[i]).type) && (o = gz(n[o], e.name))) return o;
      return;
    }
    if (t != null && typeof t != "function") throw new Error("invalid callback: " + t);
    for (; ++i < s; )
      if (o = (e = r[i]).type) n[o] = Mb(n[o], e.name, t);
      else if (t == null) for (o in n) n[o] = Mb(n[o], e.name, null);
    return this;
  },
  copy: function() {
    var e = {}, t = this._;
    for (var n in t) e[n] = t[n].slice();
    return new oc(e);
  },
  call: function(e, t) {
    if ((o = arguments.length - 2) > 0) for (var n = new Array(o), r = 0, o, i; r < o; ++r) n[r] = arguments[r + 2];
    if (!this._.hasOwnProperty(e)) throw new Error("unknown type: " + e);
    for (i = this._[e], r = 0, o = i.length; r < o; ++r) i[r].value.apply(t, n);
  },
  apply: function(e, t, n) {
    if (!this._.hasOwnProperty(e)) throw new Error("unknown type: " + e);
    for (var r = this._[e], o = 0, i = r.length; o < i; ++o) r[o].value.apply(t, n);
  }
};
function gz(e, t) {
  for (var n = 0, r = e.length, o; n < r; ++n)
    if ((o = e[n]).name === t)
      return o.value;
}
function Mb(e, t, n) {
  for (var r = 0, o = e.length; r < o; ++r)
    if (e[r].name === t) {
      e[r] = hz, e = e.slice(0, r).concat(e.slice(r + 1));
      break;
    }
  return n != null && e.push({ name: t, value: n }), e;
}
var mp = "http://www.w3.org/1999/xhtml";
const Ab = {
  svg: "http://www.w3.org/2000/svg",
  xhtml: mp,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};
function Ju(e) {
  var t = e += "", n = t.indexOf(":");
  return n >= 0 && (t = e.slice(0, n)) !== "xmlns" && (e = e.slice(n + 1)), Ab.hasOwnProperty(t) ? { space: Ab[t], local: e } : e;
}
function yz(e) {
  return function() {
    var t = this.ownerDocument, n = this.namespaceURI;
    return n === mp && t.documentElement.namespaceURI === mp ? t.createElement(e) : t.createElementNS(n, e);
  };
}
function bz(e) {
  return function() {
    return this.ownerDocument.createElementNS(e.space, e.local);
  };
}
function w1(e) {
  var t = Ju(e);
  return (t.local ? bz : yz)(t);
}
function vz() {
}
function nm(e) {
  return e == null ? vz : function() {
    return this.querySelector(e);
  };
}
function xz(e) {
  typeof e != "function" && (e = nm(e));
  for (var t = this._groups, n = t.length, r = new Array(n), o = 0; o < n; ++o)
    for (var i = t[o], s = i.length, l = r[o] = new Array(s), c, u, f = 0; f < s; ++f)
      (c = i[f]) && (u = e.call(c, c.__data__, f, i)) && ("__data__" in c && (u.__data__ = c.__data__), l[f] = u);
  return new qn(r, this._parents);
}
function wz(e) {
  return e == null ? [] : Array.isArray(e) ? e : Array.from(e);
}
function Sz() {
  return [];
}
function S1(e) {
  return e == null ? Sz : function() {
    return this.querySelectorAll(e);
  };
}
function Ez(e) {
  return function() {
    return wz(e.apply(this, arguments));
  };
}
function Tz(e) {
  typeof e == "function" ? e = Ez(e) : e = S1(e);
  for (var t = this._groups, n = t.length, r = [], o = [], i = 0; i < n; ++i)
    for (var s = t[i], l = s.length, c, u = 0; u < l; ++u)
      (c = s[u]) && (r.push(e.call(c, c.__data__, u, s)), o.push(c));
  return new qn(r, o);
}
function E1(e) {
  return function() {
    return this.matches(e);
  };
}
function T1(e) {
  return function(t) {
    return t.matches(e);
  };
}
var Cz = Array.prototype.find;
function Oz(e) {
  return function() {
    return Cz.call(this.children, e);
  };
}
function kz() {
  return this.firstElementChild;
}
function Rz(e) {
  return this.select(e == null ? kz : Oz(typeof e == "function" ? e : T1(e)));
}
var Nz = Array.prototype.filter;
function $z() {
  return Array.from(this.children);
}
function Pz(e) {
  return function() {
    return Nz.call(this.children, e);
  };
}
function Iz(e) {
  return this.selectAll(e == null ? $z : Pz(typeof e == "function" ? e : T1(e)));
}
function _z(e) {
  typeof e != "function" && (e = E1(e));
  for (var t = this._groups, n = t.length, r = new Array(n), o = 0; o < n; ++o)
    for (var i = t[o], s = i.length, l = r[o] = [], c, u = 0; u < s; ++u)
      (c = i[u]) && e.call(c, c.__data__, u, i) && l.push(c);
  return new qn(r, this._parents);
}
function C1(e) {
  return new Array(e.length);
}
function Mz() {
  return new qn(this._enter || this._groups.map(C1), this._parents);
}
function Lc(e, t) {
  this.ownerDocument = e.ownerDocument, this.namespaceURI = e.namespaceURI, this._next = null, this._parent = e, this.__data__ = t;
}
Lc.prototype = {
  constructor: Lc,
  appendChild: function(e) {
    return this._parent.insertBefore(e, this._next);
  },
  insertBefore: function(e, t) {
    return this._parent.insertBefore(e, t);
  },
  querySelector: function(e) {
    return this._parent.querySelector(e);
  },
  querySelectorAll: function(e) {
    return this._parent.querySelectorAll(e);
  }
};
function Az(e) {
  return function() {
    return e;
  };
}
function Dz(e, t, n, r, o, i) {
  for (var s = 0, l, c = t.length, u = i.length; s < u; ++s)
    (l = t[s]) ? (l.__data__ = i[s], r[s] = l) : n[s] = new Lc(e, i[s]);
  for (; s < c; ++s)
    (l = t[s]) && (o[s] = l);
}
function Bz(e, t, n, r, o, i, s) {
  var l, c, u = /* @__PURE__ */ new Map(), f = t.length, d = i.length, p = new Array(f), h;
  for (l = 0; l < f; ++l)
    (c = t[l]) && (p[l] = h = s.call(c, c.__data__, l, t) + "", u.has(h) ? o[l] = c : u.set(h, c));
  for (l = 0; l < d; ++l)
    h = s.call(e, i[l], l, i) + "", (c = u.get(h)) ? (r[l] = c, c.__data__ = i[l], u.delete(h)) : n[l] = new Lc(e, i[l]);
  for (l = 0; l < f; ++l)
    (c = t[l]) && u.get(p[l]) === c && (o[l] = c);
}
function Lz(e) {
  return e.__data__;
}
function Fz(e, t) {
  if (!arguments.length) return Array.from(this, Lz);
  var n = t ? Bz : Dz, r = this._parents, o = this._groups;
  typeof e != "function" && (e = Az(e));
  for (var i = o.length, s = new Array(i), l = new Array(i), c = new Array(i), u = 0; u < i; ++u) {
    var f = r[u], d = o[u], p = d.length, h = zz(e.call(f, f && f.__data__, u, r)), g = h.length, m = l[u] = new Array(g), y = s[u] = new Array(g), x = c[u] = new Array(p);
    n(f, d, m, y, x, h, t);
    for (var E = 0, v = 0, w, S; E < g; ++E)
      if (w = m[E]) {
        for (E >= v && (v = E + 1); !(S = y[v]) && ++v < g; ) ;
        w._next = S || null;
      }
  }
  return s = new qn(s, r), s._enter = l, s._exit = c, s;
}
function zz(e) {
  return typeof e == "object" && "length" in e ? e : Array.from(e);
}
function Vz() {
  return new qn(this._exit || this._groups.map(C1), this._parents);
}
function jz(e, t, n) {
  var r = this.enter(), o = this, i = this.exit();
  return typeof e == "function" ? (r = e(r), r && (r = r.selection())) : r = r.append(e + ""), t != null && (o = t(o), o && (o = o.selection())), n == null ? i.remove() : n(i), r && o ? r.merge(o).order() : o;
}
function Hz(e) {
  for (var t = e.selection ? e.selection() : e, n = this._groups, r = t._groups, o = n.length, i = r.length, s = Math.min(o, i), l = new Array(o), c = 0; c < s; ++c)
    for (var u = n[c], f = r[c], d = u.length, p = l[c] = new Array(d), h, g = 0; g < d; ++g)
      (h = u[g] || f[g]) && (p[g] = h);
  for (; c < o; ++c)
    l[c] = n[c];
  return new qn(l, this._parents);
}
function Wz() {
  for (var e = this._groups, t = -1, n = e.length; ++t < n; )
    for (var r = e[t], o = r.length - 1, i = r[o], s; --o >= 0; )
      (s = r[o]) && (i && s.compareDocumentPosition(i) ^ 4 && i.parentNode.insertBefore(s, i), i = s);
  return this;
}
function Uz(e) {
  e || (e = qz);
  function t(d, p) {
    return d && p ? e(d.__data__, p.__data__) : !d - !p;
  }
  for (var n = this._groups, r = n.length, o = new Array(r), i = 0; i < r; ++i) {
    for (var s = n[i], l = s.length, c = o[i] = new Array(l), u, f = 0; f < l; ++f)
      (u = s[f]) && (c[f] = u);
    c.sort(t);
  }
  return new qn(o, this._parents).order();
}
function qz(e, t) {
  return e < t ? -1 : e > t ? 1 : e >= t ? 0 : NaN;
}
function Yz() {
  var e = arguments[0];
  return arguments[0] = this, e.apply(null, arguments), this;
}
function Kz() {
  return Array.from(this);
}
function Gz() {
  for (var e = this._groups, t = 0, n = e.length; t < n; ++t)
    for (var r = e[t], o = 0, i = r.length; o < i; ++o) {
      var s = r[o];
      if (s) return s;
    }
  return null;
}
function Xz() {
  let e = 0;
  for (const t of this) ++e;
  return e;
}
function Zz() {
  return !this.node();
}
function Qz(e) {
  for (var t = this._groups, n = 0, r = t.length; n < r; ++n)
    for (var o = t[n], i = 0, s = o.length, l; i < s; ++i)
      (l = o[i]) && e.call(l, l.__data__, i, o);
  return this;
}
function Jz(e) {
  return function() {
    this.removeAttribute(e);
  };
}
function eV(e) {
  return function() {
    this.removeAttributeNS(e.space, e.local);
  };
}
function tV(e, t) {
  return function() {
    this.setAttribute(e, t);
  };
}
function nV(e, t) {
  return function() {
    this.setAttributeNS(e.space, e.local, t);
  };
}
function rV(e, t) {
  return function() {
    var n = t.apply(this, arguments);
    n == null ? this.removeAttribute(e) : this.setAttribute(e, n);
  };
}
function oV(e, t) {
  return function() {
    var n = t.apply(this, arguments);
    n == null ? this.removeAttributeNS(e.space, e.local) : this.setAttributeNS(e.space, e.local, n);
  };
}
function iV(e, t) {
  var n = Ju(e);
  if (arguments.length < 2) {
    var r = this.node();
    return n.local ? r.getAttributeNS(n.space, n.local) : r.getAttribute(n);
  }
  return this.each((t == null ? n.local ? eV : Jz : typeof t == "function" ? n.local ? oV : rV : n.local ? nV : tV)(n, t));
}
function O1(e) {
  return e.ownerDocument && e.ownerDocument.defaultView || e.document && e || e.defaultView;
}
function sV(e) {
  return function() {
    this.style.removeProperty(e);
  };
}
function aV(e, t, n) {
  return function() {
    this.style.setProperty(e, t, n);
  };
}
function lV(e, t, n) {
  return function() {
    var r = t.apply(this, arguments);
    r == null ? this.style.removeProperty(e) : this.style.setProperty(e, r, n);
  };
}
function cV(e, t, n) {
  return arguments.length > 1 ? this.each((t == null ? sV : typeof t == "function" ? lV : aV)(e, t, n ?? "")) : Qi(this.node(), e);
}
function Qi(e, t) {
  return e.style.getPropertyValue(t) || O1(e).getComputedStyle(e, null).getPropertyValue(t);
}
function uV(e) {
  return function() {
    delete this[e];
  };
}
function dV(e, t) {
  return function() {
    this[e] = t;
  };
}
function fV(e, t) {
  return function() {
    var n = t.apply(this, arguments);
    n == null ? delete this[e] : this[e] = n;
  };
}
function pV(e, t) {
  return arguments.length > 1 ? this.each((t == null ? uV : typeof t == "function" ? fV : dV)(e, t)) : this.node()[e];
}
function k1(e) {
  return e.trim().split(/^|\s+/);
}
function rm(e) {
  return e.classList || new R1(e);
}
function R1(e) {
  this._node = e, this._names = k1(e.getAttribute("class") || "");
}
R1.prototype = {
  add: function(e) {
    var t = this._names.indexOf(e);
    t < 0 && (this._names.push(e), this._node.setAttribute("class", this._names.join(" ")));
  },
  remove: function(e) {
    var t = this._names.indexOf(e);
    t >= 0 && (this._names.splice(t, 1), this._node.setAttribute("class", this._names.join(" ")));
  },
  contains: function(e) {
    return this._names.indexOf(e) >= 0;
  }
};
function N1(e, t) {
  for (var n = rm(e), r = -1, o = t.length; ++r < o; ) n.add(t[r]);
}
function $1(e, t) {
  for (var n = rm(e), r = -1, o = t.length; ++r < o; ) n.remove(t[r]);
}
function hV(e) {
  return function() {
    N1(this, e);
  };
}
function mV(e) {
  return function() {
    $1(this, e);
  };
}
function gV(e, t) {
  return function() {
    (t.apply(this, arguments) ? N1 : $1)(this, e);
  };
}
function yV(e, t) {
  var n = k1(e + "");
  if (arguments.length < 2) {
    for (var r = rm(this.node()), o = -1, i = n.length; ++o < i; ) if (!r.contains(n[o])) return !1;
    return !0;
  }
  return this.each((typeof t == "function" ? gV : t ? hV : mV)(n, t));
}
function bV() {
  this.textContent = "";
}
function vV(e) {
  return function() {
    this.textContent = e;
  };
}
function xV(e) {
  return function() {
    var t = e.apply(this, arguments);
    this.textContent = t ?? "";
  };
}
function wV(e) {
  return arguments.length ? this.each(e == null ? bV : (typeof e == "function" ? xV : vV)(e)) : this.node().textContent;
}
function SV() {
  this.innerHTML = "";
}
function EV(e) {
  return function() {
    this.innerHTML = e;
  };
}
function TV(e) {
  return function() {
    var t = e.apply(this, arguments);
    this.innerHTML = t ?? "";
  };
}
function CV(e) {
  return arguments.length ? this.each(e == null ? SV : (typeof e == "function" ? TV : EV)(e)) : this.node().innerHTML;
}
function OV() {
  this.nextSibling && this.parentNode.appendChild(this);
}
function kV() {
  return this.each(OV);
}
function RV() {
  this.previousSibling && this.parentNode.insertBefore(this, this.parentNode.firstChild);
}
function NV() {
  return this.each(RV);
}
function $V(e) {
  var t = typeof e == "function" ? e : w1(e);
  return this.select(function() {
    return this.appendChild(t.apply(this, arguments));
  });
}
function PV() {
  return null;
}
function IV(e, t) {
  var n = typeof e == "function" ? e : w1(e), r = t == null ? PV : typeof t == "function" ? t : nm(t);
  return this.select(function() {
    return this.insertBefore(n.apply(this, arguments), r.apply(this, arguments) || null);
  });
}
function _V() {
  var e = this.parentNode;
  e && e.removeChild(this);
}
function MV() {
  return this.each(_V);
}
function AV() {
  var e = this.cloneNode(!1), t = this.parentNode;
  return t ? t.insertBefore(e, this.nextSibling) : e;
}
function DV() {
  var e = this.cloneNode(!0), t = this.parentNode;
  return t ? t.insertBefore(e, this.nextSibling) : e;
}
function BV(e) {
  return this.select(e ? DV : AV);
}
function LV(e) {
  return arguments.length ? this.property("__data__", e) : this.node().__data__;
}
function FV(e) {
  return function(t) {
    e.call(this, t, this.__data__);
  };
}
function zV(e) {
  return e.trim().split(/^|\s+/).map(function(t) {
    var n = "", r = t.indexOf(".");
    return r >= 0 && (n = t.slice(r + 1), t = t.slice(0, r)), { type: t, name: n };
  });
}
function VV(e) {
  return function() {
    var t = this.__on;
    if (t) {
      for (var n = 0, r = -1, o = t.length, i; n < o; ++n)
        i = t[n], (!e.type || i.type === e.type) && i.name === e.name ? this.removeEventListener(i.type, i.listener, i.options) : t[++r] = i;
      ++r ? t.length = r : delete this.__on;
    }
  };
}
function jV(e, t, n) {
  return function() {
    var r = this.__on, o, i = FV(t);
    if (r) {
      for (var s = 0, l = r.length; s < l; ++s)
        if ((o = r[s]).type === e.type && o.name === e.name) {
          this.removeEventListener(o.type, o.listener, o.options), this.addEventListener(o.type, o.listener = i, o.options = n), o.value = t;
          return;
        }
    }
    this.addEventListener(e.type, i, n), o = { type: e.type, name: e.name, value: t, listener: i, options: n }, r ? r.push(o) : this.__on = [o];
  };
}
function HV(e, t, n) {
  var r = zV(e + ""), o, i = r.length, s;
  if (arguments.length < 2) {
    var l = this.node().__on;
    if (l) {
      for (var c = 0, u = l.length, f; c < u; ++c)
        for (o = 0, f = l[c]; o < i; ++o)
          if ((s = r[o]).type === f.type && s.name === f.name)
            return f.value;
    }
    return;
  }
  for (l = t ? jV : VV, o = 0; o < i; ++o) this.each(l(r[o], t, n));
  return this;
}
function P1(e, t, n) {
  var r = O1(e), o = r.CustomEvent;
  typeof o == "function" ? o = new o(t, n) : (o = r.document.createEvent("Event"), n ? (o.initEvent(t, n.bubbles, n.cancelable), o.detail = n.detail) : o.initEvent(t, !1, !1)), e.dispatchEvent(o);
}
function WV(e, t) {
  return function() {
    return P1(this, e, t);
  };
}
function UV(e, t) {
  return function() {
    return P1(this, e, t.apply(this, arguments));
  };
}
function qV(e, t) {
  return this.each((typeof t == "function" ? UV : WV)(e, t));
}
function* YV() {
  for (var e = this._groups, t = 0, n = e.length; t < n; ++t)
    for (var r = e[t], o = 0, i = r.length, s; o < i; ++o)
      (s = r[o]) && (yield s);
}
var I1 = [null];
function qn(e, t) {
  this._groups = e, this._parents = t;
}
function tl() {
  return new qn([[document.documentElement]], I1);
}
function KV() {
  return this;
}
qn.prototype = tl.prototype = {
  constructor: qn,
  select: xz,
  selectAll: Tz,
  selectChild: Rz,
  selectChildren: Iz,
  filter: _z,
  data: Fz,
  enter: Mz,
  exit: Vz,
  join: jz,
  merge: Hz,
  selection: KV,
  order: Wz,
  sort: Uz,
  call: Yz,
  nodes: Kz,
  node: Gz,
  size: Xz,
  empty: Zz,
  each: Qz,
  attr: iV,
  style: cV,
  property: pV,
  classed: yV,
  text: wV,
  html: CV,
  raise: kV,
  lower: NV,
  append: $V,
  insert: IV,
  remove: MV,
  clone: BV,
  datum: LV,
  on: HV,
  dispatch: qV,
  [Symbol.iterator]: YV
};
function Fn(e) {
  return typeof e == "string" ? new qn([[document.querySelector(e)]], [document.documentElement]) : new qn([[e]], I1);
}
function GV(e) {
  let t;
  for (; t = e.sourceEvent; ) e = t;
  return e;
}
function lr(e, t) {
  if (e = GV(e), t === void 0 && (t = e.currentTarget), t) {
    var n = t.ownerSVGElement || t;
    if (n.createSVGPoint) {
      var r = n.createSVGPoint();
      return r.x = e.clientX, r.y = e.clientY, r = r.matrixTransform(t.getScreenCTM().inverse()), [r.x, r.y];
    }
    if (t.getBoundingClientRect) {
      var o = t.getBoundingClientRect();
      return [e.clientX - o.left - t.clientLeft, e.clientY - o.top - t.clientTop];
    }
  }
  return [e.pageX, e.pageY];
}
const XV = { passive: !1 }, Ta = { capture: !0, passive: !1 };
function rf(e) {
  e.stopImmediatePropagation();
}
function Bi(e) {
  e.preventDefault(), e.stopImmediatePropagation();
}
function _1(e) {
  var t = e.document.documentElement, n = Fn(e).on("dragstart.drag", Bi, Ta);
  "onselectstart" in t ? n.on("selectstart.drag", Bi, Ta) : (t.__noselect = t.style.MozUserSelect, t.style.MozUserSelect = "none");
}
function M1(e, t) {
  var n = e.document.documentElement, r = Fn(e).on("dragstart.drag", null);
  t && (r.on("click.drag", Bi, Ta), setTimeout(function() {
    r.on("click.drag", null);
  }, 0)), "onselectstart" in n ? r.on("selectstart.drag", null) : (n.style.MozUserSelect = n.__noselect, delete n.__noselect);
}
const _l = (e) => () => e;
function gp(e, {
  sourceEvent: t,
  subject: n,
  target: r,
  identifier: o,
  active: i,
  x: s,
  y: l,
  dx: c,
  dy: u,
  dispatch: f
}) {
  Object.defineProperties(this, {
    type: { value: e, enumerable: !0, configurable: !0 },
    sourceEvent: { value: t, enumerable: !0, configurable: !0 },
    subject: { value: n, enumerable: !0, configurable: !0 },
    target: { value: r, enumerable: !0, configurable: !0 },
    identifier: { value: o, enumerable: !0, configurable: !0 },
    active: { value: i, enumerable: !0, configurable: !0 },
    x: { value: s, enumerable: !0, configurable: !0 },
    y: { value: l, enumerable: !0, configurable: !0 },
    dx: { value: c, enumerable: !0, configurable: !0 },
    dy: { value: u, enumerable: !0, configurable: !0 },
    _: { value: f }
  });
}
gp.prototype.on = function() {
  var e = this._.on.apply(this._, arguments);
  return e === this._ ? this : e;
};
function ZV(e) {
  return !e.ctrlKey && !e.button;
}
function QV() {
  return this.parentNode;
}
function JV(e, t) {
  return t ?? { x: e.x, y: e.y };
}
function ej() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}
function A1() {
  var e = ZV, t = QV, n = JV, r = ej, o = {}, i = Qu("start", "drag", "end"), s = 0, l, c, u, f, d = 0;
  function p(w) {
    w.on("mousedown.drag", h).filter(r).on("touchstart.drag", y).on("touchmove.drag", x, XV).on("touchend.drag touchcancel.drag", E).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }
  function h(w, S) {
    if (!(f || !e.call(this, w, S))) {
      var T = v(this, t.call(this, w, S), w, S, "mouse");
      T && (Fn(w.view).on("mousemove.drag", g, Ta).on("mouseup.drag", m, Ta), _1(w.view), rf(w), u = !1, l = w.clientX, c = w.clientY, T("start", w));
    }
  }
  function g(w) {
    if (Bi(w), !u) {
      var S = w.clientX - l, T = w.clientY - c;
      u = S * S + T * T > d;
    }
    o.mouse("drag", w);
  }
  function m(w) {
    Fn(w.view).on("mousemove.drag mouseup.drag", null), M1(w.view, u), Bi(w), o.mouse("end", w);
  }
  function y(w, S) {
    if (e.call(this, w, S)) {
      var T = w.changedTouches, C = t.call(this, w, S), R = T.length, I, b;
      for (I = 0; I < R; ++I)
        (b = v(this, C, w, S, T[I].identifier, T[I])) && (rf(w), b("start", w, T[I]));
    }
  }
  function x(w) {
    var S = w.changedTouches, T = S.length, C, R;
    for (C = 0; C < T; ++C)
      (R = o[S[C].identifier]) && (Bi(w), R("drag", w, S[C]));
  }
  function E(w) {
    var S = w.changedTouches, T = S.length, C, R;
    for (f && clearTimeout(f), f = setTimeout(function() {
      f = null;
    }, 500), C = 0; C < T; ++C)
      (R = o[S[C].identifier]) && (rf(w), R("end", w, S[C]));
  }
  function v(w, S, T, C, R, I) {
    var b = i.copy(), k = lr(I || T, S), P, A, O;
    if ((O = n.call(w, new gp("beforestart", {
      sourceEvent: T,
      target: p,
      identifier: R,
      active: s,
      x: k[0],
      y: k[1],
      dx: 0,
      dy: 0,
      dispatch: b
    }), C)) != null)
      return P = O.x - k[0] || 0, A = O.y - k[1] || 0, function _($, D, z) {
        var B = k, L;
        switch ($) {
          case "start":
            o[R] = _, L = s++;
            break;
          case "end":
            delete o[R], --s;
          // falls through
          case "drag":
            k = lr(z || D, S), L = s;
            break;
        }
        b.call(
          $,
          w,
          new gp($, {
            sourceEvent: D,
            subject: O,
            target: p,
            identifier: R,
            active: L,
            x: k[0] + P,
            y: k[1] + A,
            dx: k[0] - B[0],
            dy: k[1] - B[1],
            dispatch: b
          }),
          C
        );
      };
  }
  return p.filter = function(w) {
    return arguments.length ? (e = typeof w == "function" ? w : _l(!!w), p) : e;
  }, p.container = function(w) {
    return arguments.length ? (t = typeof w == "function" ? w : _l(w), p) : t;
  }, p.subject = function(w) {
    return arguments.length ? (n = typeof w == "function" ? w : _l(w), p) : n;
  }, p.touchable = function(w) {
    return arguments.length ? (r = typeof w == "function" ? w : _l(!!w), p) : r;
  }, p.on = function() {
    var w = i.on.apply(i, arguments);
    return w === i ? p : w;
  }, p.clickDistance = function(w) {
    return arguments.length ? (d = (w = +w) * w, p) : Math.sqrt(d);
  }, p;
}
function om(e, t, n) {
  e.prototype = t.prototype = n, n.constructor = e;
}
function D1(e, t) {
  var n = Object.create(e.prototype);
  for (var r in t) n[r] = t[r];
  return n;
}
function nl() {
}
var Ca = 0.7, Fc = 1 / Ca, Li = "\\s*([+-]?\\d+)\\s*", Oa = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*", Mr = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*", tj = /^#([0-9a-f]{3,8})$/, nj = new RegExp(`^rgb\\(${Li},${Li},${Li}\\)$`), rj = new RegExp(`^rgb\\(${Mr},${Mr},${Mr}\\)$`), oj = new RegExp(`^rgba\\(${Li},${Li},${Li},${Oa}\\)$`), ij = new RegExp(`^rgba\\(${Mr},${Mr},${Mr},${Oa}\\)$`), sj = new RegExp(`^hsl\\(${Oa},${Mr},${Mr}\\)$`), aj = new RegExp(`^hsla\\(${Oa},${Mr},${Mr},${Oa}\\)$`), Db = {
  aliceblue: 15792383,
  antiquewhite: 16444375,
  aqua: 65535,
  aquamarine: 8388564,
  azure: 15794175,
  beige: 16119260,
  bisque: 16770244,
  black: 0,
  blanchedalmond: 16772045,
  blue: 255,
  blueviolet: 9055202,
  brown: 10824234,
  burlywood: 14596231,
  cadetblue: 6266528,
  chartreuse: 8388352,
  chocolate: 13789470,
  coral: 16744272,
  cornflowerblue: 6591981,
  cornsilk: 16775388,
  crimson: 14423100,
  cyan: 65535,
  darkblue: 139,
  darkcyan: 35723,
  darkgoldenrod: 12092939,
  darkgray: 11119017,
  darkgreen: 25600,
  darkgrey: 11119017,
  darkkhaki: 12433259,
  darkmagenta: 9109643,
  darkolivegreen: 5597999,
  darkorange: 16747520,
  darkorchid: 10040012,
  darkred: 9109504,
  darksalmon: 15308410,
  darkseagreen: 9419919,
  darkslateblue: 4734347,
  darkslategray: 3100495,
  darkslategrey: 3100495,
  darkturquoise: 52945,
  darkviolet: 9699539,
  deeppink: 16716947,
  deepskyblue: 49151,
  dimgray: 6908265,
  dimgrey: 6908265,
  dodgerblue: 2003199,
  firebrick: 11674146,
  floralwhite: 16775920,
  forestgreen: 2263842,
  fuchsia: 16711935,
  gainsboro: 14474460,
  ghostwhite: 16316671,
  gold: 16766720,
  goldenrod: 14329120,
  gray: 8421504,
  green: 32768,
  greenyellow: 11403055,
  grey: 8421504,
  honeydew: 15794160,
  hotpink: 16738740,
  indianred: 13458524,
  indigo: 4915330,
  ivory: 16777200,
  khaki: 15787660,
  lavender: 15132410,
  lavenderblush: 16773365,
  lawngreen: 8190976,
  lemonchiffon: 16775885,
  lightblue: 11393254,
  lightcoral: 15761536,
  lightcyan: 14745599,
  lightgoldenrodyellow: 16448210,
  lightgray: 13882323,
  lightgreen: 9498256,
  lightgrey: 13882323,
  lightpink: 16758465,
  lightsalmon: 16752762,
  lightseagreen: 2142890,
  lightskyblue: 8900346,
  lightslategray: 7833753,
  lightslategrey: 7833753,
  lightsteelblue: 11584734,
  lightyellow: 16777184,
  lime: 65280,
  limegreen: 3329330,
  linen: 16445670,
  magenta: 16711935,
  maroon: 8388608,
  mediumaquamarine: 6737322,
  mediumblue: 205,
  mediumorchid: 12211667,
  mediumpurple: 9662683,
  mediumseagreen: 3978097,
  mediumslateblue: 8087790,
  mediumspringgreen: 64154,
  mediumturquoise: 4772300,
  mediumvioletred: 13047173,
  midnightblue: 1644912,
  mintcream: 16121850,
  mistyrose: 16770273,
  moccasin: 16770229,
  navajowhite: 16768685,
  navy: 128,
  oldlace: 16643558,
  olive: 8421376,
  olivedrab: 7048739,
  orange: 16753920,
  orangered: 16729344,
  orchid: 14315734,
  palegoldenrod: 15657130,
  palegreen: 10025880,
  paleturquoise: 11529966,
  palevioletred: 14381203,
  papayawhip: 16773077,
  peachpuff: 16767673,
  peru: 13468991,
  pink: 16761035,
  plum: 14524637,
  powderblue: 11591910,
  purple: 8388736,
  rebeccapurple: 6697881,
  red: 16711680,
  rosybrown: 12357519,
  royalblue: 4286945,
  saddlebrown: 9127187,
  salmon: 16416882,
  sandybrown: 16032864,
  seagreen: 3050327,
  seashell: 16774638,
  sienna: 10506797,
  silver: 12632256,
  skyblue: 8900331,
  slateblue: 6970061,
  slategray: 7372944,
  slategrey: 7372944,
  snow: 16775930,
  springgreen: 65407,
  steelblue: 4620980,
  tan: 13808780,
  teal: 32896,
  thistle: 14204888,
  tomato: 16737095,
  turquoise: 4251856,
  violet: 15631086,
  wheat: 16113331,
  white: 16777215,
  whitesmoke: 16119285,
  yellow: 16776960,
  yellowgreen: 10145074
};
om(nl, ka, {
  copy(e) {
    return Object.assign(new this.constructor(), this, e);
  },
  displayable() {
    return this.rgb().displayable();
  },
  hex: Bb,
  // Deprecated! Use color.formatHex.
  formatHex: Bb,
  formatHex8: lj,
  formatHsl: cj,
  formatRgb: Lb,
  toString: Lb
});
function Bb() {
  return this.rgb().formatHex();
}
function lj() {
  return this.rgb().formatHex8();
}
function cj() {
  return B1(this).formatHsl();
}
function Lb() {
  return this.rgb().formatRgb();
}
function ka(e) {
  var t, n;
  return e = (e + "").trim().toLowerCase(), (t = tj.exec(e)) ? (n = t[1].length, t = parseInt(t[1], 16), n === 6 ? Fb(t) : n === 3 ? new Rn(t >> 8 & 15 | t >> 4 & 240, t >> 4 & 15 | t & 240, (t & 15) << 4 | t & 15, 1) : n === 8 ? Ml(t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, (t & 255) / 255) : n === 4 ? Ml(t >> 12 & 15 | t >> 8 & 240, t >> 8 & 15 | t >> 4 & 240, t >> 4 & 15 | t & 240, ((t & 15) << 4 | t & 15) / 255) : null) : (t = nj.exec(e)) ? new Rn(t[1], t[2], t[3], 1) : (t = rj.exec(e)) ? new Rn(t[1] * 255 / 100, t[2] * 255 / 100, t[3] * 255 / 100, 1) : (t = oj.exec(e)) ? Ml(t[1], t[2], t[3], t[4]) : (t = ij.exec(e)) ? Ml(t[1] * 255 / 100, t[2] * 255 / 100, t[3] * 255 / 100, t[4]) : (t = sj.exec(e)) ? jb(t[1], t[2] / 100, t[3] / 100, 1) : (t = aj.exec(e)) ? jb(t[1], t[2] / 100, t[3] / 100, t[4]) : Db.hasOwnProperty(e) ? Fb(Db[e]) : e === "transparent" ? new Rn(NaN, NaN, NaN, 0) : null;
}
function Fb(e) {
  return new Rn(e >> 16 & 255, e >> 8 & 255, e & 255, 1);
}
function Ml(e, t, n, r) {
  return r <= 0 && (e = t = n = NaN), new Rn(e, t, n, r);
}
function uj(e) {
  return e instanceof nl || (e = ka(e)), e ? (e = e.rgb(), new Rn(e.r, e.g, e.b, e.opacity)) : new Rn();
}
function yp(e, t, n, r) {
  return arguments.length === 1 ? uj(e) : new Rn(e, t, n, r ?? 1);
}
function Rn(e, t, n, r) {
  this.r = +e, this.g = +t, this.b = +n, this.opacity = +r;
}
om(Rn, yp, D1(nl, {
  brighter(e) {
    return e = e == null ? Fc : Math.pow(Fc, e), new Rn(this.r * e, this.g * e, this.b * e, this.opacity);
  },
  darker(e) {
    return e = e == null ? Ca : Math.pow(Ca, e), new Rn(this.r * e, this.g * e, this.b * e, this.opacity);
  },
  rgb() {
    return this;
  },
  clamp() {
    return new Rn(Zo(this.r), Zo(this.g), Zo(this.b), zc(this.opacity));
  },
  displayable() {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: zb,
  // Deprecated! Use color.formatHex.
  formatHex: zb,
  formatHex8: dj,
  formatRgb: Vb,
  toString: Vb
}));
function zb() {
  return `#${Ko(this.r)}${Ko(this.g)}${Ko(this.b)}`;
}
function dj() {
  return `#${Ko(this.r)}${Ko(this.g)}${Ko(this.b)}${Ko((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
}
function Vb() {
  const e = zc(this.opacity);
  return `${e === 1 ? "rgb(" : "rgba("}${Zo(this.r)}, ${Zo(this.g)}, ${Zo(this.b)}${e === 1 ? ")" : `, ${e})`}`;
}
function zc(e) {
  return isNaN(e) ? 1 : Math.max(0, Math.min(1, e));
}
function Zo(e) {
  return Math.max(0, Math.min(255, Math.round(e) || 0));
}
function Ko(e) {
  return e = Zo(e), (e < 16 ? "0" : "") + e.toString(16);
}
function jb(e, t, n, r) {
  return r <= 0 ? e = t = n = NaN : n <= 0 || n >= 1 ? e = t = NaN : t <= 0 && (e = NaN), new ur(e, t, n, r);
}
function B1(e) {
  if (e instanceof ur) return new ur(e.h, e.s, e.l, e.opacity);
  if (e instanceof nl || (e = ka(e)), !e) return new ur();
  if (e instanceof ur) return e;
  e = e.rgb();
  var t = e.r / 255, n = e.g / 255, r = e.b / 255, o = Math.min(t, n, r), i = Math.max(t, n, r), s = NaN, l = i - o, c = (i + o) / 2;
  return l ? (t === i ? s = (n - r) / l + (n < r) * 6 : n === i ? s = (r - t) / l + 2 : s = (t - n) / l + 4, l /= c < 0.5 ? i + o : 2 - i - o, s *= 60) : l = c > 0 && c < 1 ? 0 : s, new ur(s, l, c, e.opacity);
}
function fj(e, t, n, r) {
  return arguments.length === 1 ? B1(e) : new ur(e, t, n, r ?? 1);
}
function ur(e, t, n, r) {
  this.h = +e, this.s = +t, this.l = +n, this.opacity = +r;
}
om(ur, fj, D1(nl, {
  brighter(e) {
    return e = e == null ? Fc : Math.pow(Fc, e), new ur(this.h, this.s, this.l * e, this.opacity);
  },
  darker(e) {
    return e = e == null ? Ca : Math.pow(Ca, e), new ur(this.h, this.s, this.l * e, this.opacity);
  },
  rgb() {
    var e = this.h % 360 + (this.h < 0) * 360, t = isNaN(e) || isNaN(this.s) ? 0 : this.s, n = this.l, r = n + (n < 0.5 ? n : 1 - n) * t, o = 2 * n - r;
    return new Rn(
      of(e >= 240 ? e - 240 : e + 120, o, r),
      of(e, o, r),
      of(e < 120 ? e + 240 : e - 120, o, r),
      this.opacity
    );
  },
  clamp() {
    return new ur(Hb(this.h), Al(this.s), Al(this.l), zc(this.opacity));
  },
  displayable() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  },
  formatHsl() {
    const e = zc(this.opacity);
    return `${e === 1 ? "hsl(" : "hsla("}${Hb(this.h)}, ${Al(this.s) * 100}%, ${Al(this.l) * 100}%${e === 1 ? ")" : `, ${e})`}`;
  }
}));
function Hb(e) {
  return e = (e || 0) % 360, e < 0 ? e + 360 : e;
}
function Al(e) {
  return Math.max(0, Math.min(1, e || 0));
}
function of(e, t, n) {
  return (e < 60 ? t + (n - t) * e / 60 : e < 180 ? n : e < 240 ? t + (n - t) * (240 - e) / 60 : t) * 255;
}
const L1 = (e) => () => e;
function pj(e, t) {
  return function(n) {
    return e + n * t;
  };
}
function hj(e, t, n) {
  return e = Math.pow(e, n), t = Math.pow(t, n) - e, n = 1 / n, function(r) {
    return Math.pow(e + r * t, n);
  };
}
function mj(e) {
  return (e = +e) == 1 ? F1 : function(t, n) {
    return n - t ? hj(t, n, e) : L1(isNaN(t) ? n : t);
  };
}
function F1(e, t) {
  var n = t - e;
  return n ? pj(e, n) : L1(isNaN(e) ? t : e);
}
const Wb = function e(t) {
  var n = mj(t);
  function r(o, i) {
    var s = n((o = yp(o)).r, (i = yp(i)).r), l = n(o.g, i.g), c = n(o.b, i.b), u = F1(o.opacity, i.opacity);
    return function(f) {
      return o.r = s(f), o.g = l(f), o.b = c(f), o.opacity = u(f), o + "";
    };
  }
  return r.gamma = e, r;
}(1);
function vo(e, t) {
  return e = +e, t = +t, function(n) {
    return e * (1 - n) + t * n;
  };
}
var bp = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, sf = new RegExp(bp.source, "g");
function gj(e) {
  return function() {
    return e;
  };
}
function yj(e) {
  return function(t) {
    return e(t) + "";
  };
}
function bj(e, t) {
  var n = bp.lastIndex = sf.lastIndex = 0, r, o, i, s = -1, l = [], c = [];
  for (e = e + "", t = t + ""; (r = bp.exec(e)) && (o = sf.exec(t)); )
    (i = o.index) > n && (i = t.slice(n, i), l[s] ? l[s] += i : l[++s] = i), (r = r[0]) === (o = o[0]) ? l[s] ? l[s] += o : l[++s] = o : (l[++s] = null, c.push({ i: s, x: vo(r, o) })), n = sf.lastIndex;
  return n < t.length && (i = t.slice(n), l[s] ? l[s] += i : l[++s] = i), l.length < 2 ? c[0] ? yj(c[0].x) : gj(t) : (t = c.length, function(u) {
    for (var f = 0, d; f < t; ++f) l[(d = c[f]).i] = d.x(u);
    return l.join("");
  });
}
var Ub = 180 / Math.PI, vp = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
function z1(e, t, n, r, o, i) {
  var s, l, c;
  return (s = Math.sqrt(e * e + t * t)) && (e /= s, t /= s), (c = e * n + t * r) && (n -= e * c, r -= t * c), (l = Math.sqrt(n * n + r * r)) && (n /= l, r /= l, c /= l), e * r < t * n && (e = -e, t = -t, c = -c, s = -s), {
    translateX: o,
    translateY: i,
    rotate: Math.atan2(t, e) * Ub,
    skewX: Math.atan(c) * Ub,
    scaleX: s,
    scaleY: l
  };
}
var Dl;
function vj(e) {
  const t = new (typeof DOMMatrix == "function" ? DOMMatrix : WebKitCSSMatrix)(e + "");
  return t.isIdentity ? vp : z1(t.a, t.b, t.c, t.d, t.e, t.f);
}
function xj(e) {
  return e == null || (Dl || (Dl = document.createElementNS("http://www.w3.org/2000/svg", "g")), Dl.setAttribute("transform", e), !(e = Dl.transform.baseVal.consolidate())) ? vp : (e = e.matrix, z1(e.a, e.b, e.c, e.d, e.e, e.f));
}
function V1(e, t, n, r) {
  function o(u) {
    return u.length ? u.pop() + " " : "";
  }
  function i(u, f, d, p, h, g) {
    if (u !== d || f !== p) {
      var m = h.push("translate(", null, t, null, n);
      g.push({ i: m - 4, x: vo(u, d) }, { i: m - 2, x: vo(f, p) });
    } else (d || p) && h.push("translate(" + d + t + p + n);
  }
  function s(u, f, d, p) {
    u !== f ? (u - f > 180 ? f += 360 : f - u > 180 && (u += 360), p.push({ i: d.push(o(d) + "rotate(", null, r) - 2, x: vo(u, f) })) : f && d.push(o(d) + "rotate(" + f + r);
  }
  function l(u, f, d, p) {
    u !== f ? p.push({ i: d.push(o(d) + "skewX(", null, r) - 2, x: vo(u, f) }) : f && d.push(o(d) + "skewX(" + f + r);
  }
  function c(u, f, d, p, h, g) {
    if (u !== d || f !== p) {
      var m = h.push(o(h) + "scale(", null, ",", null, ")");
      g.push({ i: m - 4, x: vo(u, d) }, { i: m - 2, x: vo(f, p) });
    } else (d !== 1 || p !== 1) && h.push(o(h) + "scale(" + d + "," + p + ")");
  }
  return function(u, f) {
    var d = [], p = [];
    return u = e(u), f = e(f), i(u.translateX, u.translateY, f.translateX, f.translateY, d, p), s(u.rotate, f.rotate, d, p), l(u.skewX, f.skewX, d, p), c(u.scaleX, u.scaleY, f.scaleX, f.scaleY, d, p), u = f = null, function(h) {
      for (var g = -1, m = p.length, y; ++g < m; ) d[(y = p[g]).i] = y.x(h);
      return d.join("");
    };
  };
}
var wj = V1(vj, "px, ", "px)", "deg)"), Sj = V1(xj, ", ", ")", ")"), Ej = 1e-12;
function qb(e) {
  return ((e = Math.exp(e)) + 1 / e) / 2;
}
function Tj(e) {
  return ((e = Math.exp(e)) - 1 / e) / 2;
}
function Cj(e) {
  return ((e = Math.exp(2 * e)) - 1) / (e + 1);
}
const Oj = function e(t, n, r) {
  function o(i, s) {
    var l = i[0], c = i[1], u = i[2], f = s[0], d = s[1], p = s[2], h = f - l, g = d - c, m = h * h + g * g, y, x;
    if (m < Ej)
      x = Math.log(p / u) / t, y = function(C) {
        return [
          l + C * h,
          c + C * g,
          u * Math.exp(t * C * x)
        ];
      };
    else {
      var E = Math.sqrt(m), v = (p * p - u * u + r * m) / (2 * u * n * E), w = (p * p - u * u - r * m) / (2 * p * n * E), S = Math.log(Math.sqrt(v * v + 1) - v), T = Math.log(Math.sqrt(w * w + 1) - w);
      x = (T - S) / t, y = function(C) {
        var R = C * x, I = qb(S), b = u / (n * E) * (I * Cj(t * R + S) - Tj(S));
        return [
          l + b * h,
          c + b * g,
          u * I / qb(t * R + S)
        ];
      };
    }
    return y.duration = x * 1e3 * t / Math.SQRT2, y;
  }
  return o.rho = function(i) {
    var s = Math.max(1e-3, +i), l = s * s, c = l * l;
    return e(s, l, c);
  }, o;
}(Math.SQRT2, 2, 4);
var Ji = 0, Ws = 0, Ms = 0, j1 = 1e3, Vc, Us, jc = 0, ri = 0, ed = 0, Ra = typeof performance == "object" && performance.now ? performance : Date, H1 = typeof window == "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(e) {
  setTimeout(e, 17);
};
function im() {
  return ri || (H1(kj), ri = Ra.now() + ed);
}
function kj() {
  ri = 0;
}
function Hc() {
  this._call = this._time = this._next = null;
}
Hc.prototype = W1.prototype = {
  constructor: Hc,
  restart: function(e, t, n) {
    if (typeof e != "function") throw new TypeError("callback is not a function");
    n = (n == null ? im() : +n) + (t == null ? 0 : +t), !this._next && Us !== this && (Us ? Us._next = this : Vc = this, Us = this), this._call = e, this._time = n, xp();
  },
  stop: function() {
    this._call && (this._call = null, this._time = 1 / 0, xp());
  }
};
function W1(e, t, n) {
  var r = new Hc();
  return r.restart(e, t, n), r;
}
function Rj() {
  im(), ++Ji;
  for (var e = Vc, t; e; )
    (t = ri - e._time) >= 0 && e._call.call(void 0, t), e = e._next;
  --Ji;
}
function Yb() {
  ri = (jc = Ra.now()) + ed, Ji = Ws = 0;
  try {
    Rj();
  } finally {
    Ji = 0, $j(), ri = 0;
  }
}
function Nj() {
  var e = Ra.now(), t = e - jc;
  t > j1 && (ed -= t, jc = e);
}
function $j() {
  for (var e, t = Vc, n, r = 1 / 0; t; )
    t._call ? (r > t._time && (r = t._time), e = t, t = t._next) : (n = t._next, t._next = null, t = e ? e._next = n : Vc = n);
  Us = e, xp(r);
}
function xp(e) {
  if (!Ji) {
    Ws && (Ws = clearTimeout(Ws));
    var t = e - ri;
    t > 24 ? (e < 1 / 0 && (Ws = setTimeout(Yb, e - Ra.now() - ed)), Ms && (Ms = clearInterval(Ms))) : (Ms || (jc = Ra.now(), Ms = setInterval(Nj, j1)), Ji = 1, H1(Yb));
  }
}
function Kb(e, t, n) {
  var r = new Hc();
  return t = t == null ? 0 : +t, r.restart((o) => {
    r.stop(), e(o + t);
  }, t, n), r;
}
var Pj = Qu("start", "end", "cancel", "interrupt"), Ij = [], U1 = 0, Gb = 1, wp = 2, ic = 3, Xb = 4, Sp = 5, sc = 6;
function td(e, t, n, r, o, i) {
  var s = e.__transition;
  if (!s) e.__transition = {};
  else if (n in s) return;
  _j(e, n, {
    name: t,
    index: r,
    // For context during callback.
    group: o,
    // For context during callback.
    on: Pj,
    tween: Ij,
    time: i.time,
    delay: i.delay,
    duration: i.duration,
    ease: i.ease,
    timer: null,
    state: U1
  });
}
function sm(e, t) {
  var n = yr(e, t);
  if (n.state > U1) throw new Error("too late; already scheduled");
  return n;
}
function Wr(e, t) {
  var n = yr(e, t);
  if (n.state > ic) throw new Error("too late; already running");
  return n;
}
function yr(e, t) {
  var n = e.__transition;
  if (!n || !(n = n[t])) throw new Error("transition not found");
  return n;
}
function _j(e, t, n) {
  var r = e.__transition, o;
  r[t] = n, n.timer = W1(i, 0, n.time);
  function i(u) {
    n.state = Gb, n.timer.restart(s, n.delay, n.time), n.delay <= u && s(u - n.delay);
  }
  function s(u) {
    var f, d, p, h;
    if (n.state !== Gb) return c();
    for (f in r)
      if (h = r[f], h.name === n.name) {
        if (h.state === ic) return Kb(s);
        h.state === Xb ? (h.state = sc, h.timer.stop(), h.on.call("interrupt", e, e.__data__, h.index, h.group), delete r[f]) : +f < t && (h.state = sc, h.timer.stop(), h.on.call("cancel", e, e.__data__, h.index, h.group), delete r[f]);
      }
    if (Kb(function() {
      n.state === ic && (n.state = Xb, n.timer.restart(l, n.delay, n.time), l(u));
    }), n.state = wp, n.on.call("start", e, e.__data__, n.index, n.group), n.state === wp) {
      for (n.state = ic, o = new Array(p = n.tween.length), f = 0, d = -1; f < p; ++f)
        (h = n.tween[f].value.call(e, e.__data__, n.index, n.group)) && (o[++d] = h);
      o.length = d + 1;
    }
  }
  function l(u) {
    for (var f = u < n.duration ? n.ease.call(null, u / n.duration) : (n.timer.restart(c), n.state = Sp, 1), d = -1, p = o.length; ++d < p; )
      o[d].call(e, f);
    n.state === Sp && (n.on.call("end", e, e.__data__, n.index, n.group), c());
  }
  function c() {
    n.state = sc, n.timer.stop(), delete r[t];
    for (var u in r) return;
    delete e.__transition;
  }
}
function ac(e, t) {
  var n = e.__transition, r, o, i = !0, s;
  if (n) {
    t = t == null ? null : t + "";
    for (s in n) {
      if ((r = n[s]).name !== t) {
        i = !1;
        continue;
      }
      o = r.state > wp && r.state < Sp, r.state = sc, r.timer.stop(), r.on.call(o ? "interrupt" : "cancel", e, e.__data__, r.index, r.group), delete n[s];
    }
    i && delete e.__transition;
  }
}
function Mj(e) {
  return this.each(function() {
    ac(this, e);
  });
}
function Aj(e, t) {
  var n, r;
  return function() {
    var o = Wr(this, e), i = o.tween;
    if (i !== n) {
      r = n = i;
      for (var s = 0, l = r.length; s < l; ++s)
        if (r[s].name === t) {
          r = r.slice(), r.splice(s, 1);
          break;
        }
    }
    o.tween = r;
  };
}
function Dj(e, t, n) {
  var r, o;
  if (typeof n != "function") throw new Error();
  return function() {
    var i = Wr(this, e), s = i.tween;
    if (s !== r) {
      o = (r = s).slice();
      for (var l = { name: t, value: n }, c = 0, u = o.length; c < u; ++c)
        if (o[c].name === t) {
          o[c] = l;
          break;
        }
      c === u && o.push(l);
    }
    i.tween = o;
  };
}
function Bj(e, t) {
  var n = this._id;
  if (e += "", arguments.length < 2) {
    for (var r = yr(this.node(), n).tween, o = 0, i = r.length, s; o < i; ++o)
      if ((s = r[o]).name === e)
        return s.value;
    return null;
  }
  return this.each((t == null ? Aj : Dj)(n, e, t));
}
function am(e, t, n) {
  var r = e._id;
  return e.each(function() {
    var o = Wr(this, r);
    (o.value || (o.value = {}))[t] = n.apply(this, arguments);
  }), function(o) {
    return yr(o, r).value[t];
  };
}
function q1(e, t) {
  var n;
  return (typeof t == "number" ? vo : t instanceof ka ? Wb : (n = ka(t)) ? (t = n, Wb) : bj)(e, t);
}
function Lj(e) {
  return function() {
    this.removeAttribute(e);
  };
}
function Fj(e) {
  return function() {
    this.removeAttributeNS(e.space, e.local);
  };
}
function zj(e, t, n) {
  var r, o = n + "", i;
  return function() {
    var s = this.getAttribute(e);
    return s === o ? null : s === r ? i : i = t(r = s, n);
  };
}
function Vj(e, t, n) {
  var r, o = n + "", i;
  return function() {
    var s = this.getAttributeNS(e.space, e.local);
    return s === o ? null : s === r ? i : i = t(r = s, n);
  };
}
function jj(e, t, n) {
  var r, o, i;
  return function() {
    var s, l = n(this), c;
    return l == null ? void this.removeAttribute(e) : (s = this.getAttribute(e), c = l + "", s === c ? null : s === r && c === o ? i : (o = c, i = t(r = s, l)));
  };
}
function Hj(e, t, n) {
  var r, o, i;
  return function() {
    var s, l = n(this), c;
    return l == null ? void this.removeAttributeNS(e.space, e.local) : (s = this.getAttributeNS(e.space, e.local), c = l + "", s === c ? null : s === r && c === o ? i : (o = c, i = t(r = s, l)));
  };
}
function Wj(e, t) {
  var n = Ju(e), r = n === "transform" ? Sj : q1;
  return this.attrTween(e, typeof t == "function" ? (n.local ? Hj : jj)(n, r, am(this, "attr." + e, t)) : t == null ? (n.local ? Fj : Lj)(n) : (n.local ? Vj : zj)(n, r, t));
}
function Uj(e, t) {
  return function(n) {
    this.setAttribute(e, t.call(this, n));
  };
}
function qj(e, t) {
  return function(n) {
    this.setAttributeNS(e.space, e.local, t.call(this, n));
  };
}
function Yj(e, t) {
  var n, r;
  function o() {
    var i = t.apply(this, arguments);
    return i !== r && (n = (r = i) && qj(e, i)), n;
  }
  return o._value = t, o;
}
function Kj(e, t) {
  var n, r;
  function o() {
    var i = t.apply(this, arguments);
    return i !== r && (n = (r = i) && Uj(e, i)), n;
  }
  return o._value = t, o;
}
function Gj(e, t) {
  var n = "attr." + e;
  if (arguments.length < 2) return (n = this.tween(n)) && n._value;
  if (t == null) return this.tween(n, null);
  if (typeof t != "function") throw new Error();
  var r = Ju(e);
  return this.tween(n, (r.local ? Yj : Kj)(r, t));
}
function Xj(e, t) {
  return function() {
    sm(this, e).delay = +t.apply(this, arguments);
  };
}
function Zj(e, t) {
  return t = +t, function() {
    sm(this, e).delay = t;
  };
}
function Qj(e) {
  var t = this._id;
  return arguments.length ? this.each((typeof e == "function" ? Xj : Zj)(t, e)) : yr(this.node(), t).delay;
}
function Jj(e, t) {
  return function() {
    Wr(this, e).duration = +t.apply(this, arguments);
  };
}
function e4(e, t) {
  return t = +t, function() {
    Wr(this, e).duration = t;
  };
}
function t4(e) {
  var t = this._id;
  return arguments.length ? this.each((typeof e == "function" ? Jj : e4)(t, e)) : yr(this.node(), t).duration;
}
function n4(e, t) {
  if (typeof t != "function") throw new Error();
  return function() {
    Wr(this, e).ease = t;
  };
}
function r4(e) {
  var t = this._id;
  return arguments.length ? this.each(n4(t, e)) : yr(this.node(), t).ease;
}
function o4(e, t) {
  return function() {
    var n = t.apply(this, arguments);
    if (typeof n != "function") throw new Error();
    Wr(this, e).ease = n;
  };
}
function i4(e) {
  if (typeof e != "function") throw new Error();
  return this.each(o4(this._id, e));
}
function s4(e) {
  typeof e != "function" && (e = E1(e));
  for (var t = this._groups, n = t.length, r = new Array(n), o = 0; o < n; ++o)
    for (var i = t[o], s = i.length, l = r[o] = [], c, u = 0; u < s; ++u)
      (c = i[u]) && e.call(c, c.__data__, u, i) && l.push(c);
  return new lo(r, this._parents, this._name, this._id);
}
function a4(e) {
  if (e._id !== this._id) throw new Error();
  for (var t = this._groups, n = e._groups, r = t.length, o = n.length, i = Math.min(r, o), s = new Array(r), l = 0; l < i; ++l)
    for (var c = t[l], u = n[l], f = c.length, d = s[l] = new Array(f), p, h = 0; h < f; ++h)
      (p = c[h] || u[h]) && (d[h] = p);
  for (; l < r; ++l)
    s[l] = t[l];
  return new lo(s, this._parents, this._name, this._id);
}
function l4(e) {
  return (e + "").trim().split(/^|\s+/).every(function(t) {
    var n = t.indexOf(".");
    return n >= 0 && (t = t.slice(0, n)), !t || t === "start";
  });
}
function c4(e, t, n) {
  var r, o, i = l4(t) ? sm : Wr;
  return function() {
    var s = i(this, e), l = s.on;
    l !== r && (o = (r = l).copy()).on(t, n), s.on = o;
  };
}
function u4(e, t) {
  var n = this._id;
  return arguments.length < 2 ? yr(this.node(), n).on.on(e) : this.each(c4(n, e, t));
}
function d4(e) {
  return function() {
    var t = this.parentNode;
    for (var n in this.__transition) if (+n !== e) return;
    t && t.removeChild(this);
  };
}
function f4() {
  return this.on("end.remove", d4(this._id));
}
function p4(e) {
  var t = this._name, n = this._id;
  typeof e != "function" && (e = nm(e));
  for (var r = this._groups, o = r.length, i = new Array(o), s = 0; s < o; ++s)
    for (var l = r[s], c = l.length, u = i[s] = new Array(c), f, d, p = 0; p < c; ++p)
      (f = l[p]) && (d = e.call(f, f.__data__, p, l)) && ("__data__" in f && (d.__data__ = f.__data__), u[p] = d, td(u[p], t, n, p, u, yr(f, n)));
  return new lo(i, this._parents, t, n);
}
function h4(e) {
  var t = this._name, n = this._id;
  typeof e != "function" && (e = S1(e));
  for (var r = this._groups, o = r.length, i = [], s = [], l = 0; l < o; ++l)
    for (var c = r[l], u = c.length, f, d = 0; d < u; ++d)
      if (f = c[d]) {
        for (var p = e.call(f, f.__data__, d, c), h, g = yr(f, n), m = 0, y = p.length; m < y; ++m)
          (h = p[m]) && td(h, t, n, m, p, g);
        i.push(p), s.push(f);
      }
  return new lo(i, s, t, n);
}
var m4 = tl.prototype.constructor;
function g4() {
  return new m4(this._groups, this._parents);
}
function y4(e, t) {
  var n, r, o;
  return function() {
    var i = Qi(this, e), s = (this.style.removeProperty(e), Qi(this, e));
    return i === s ? null : i === n && s === r ? o : o = t(n = i, r = s);
  };
}
function Y1(e) {
  return function() {
    this.style.removeProperty(e);
  };
}
function b4(e, t, n) {
  var r, o = n + "", i;
  return function() {
    var s = Qi(this, e);
    return s === o ? null : s === r ? i : i = t(r = s, n);
  };
}
function v4(e, t, n) {
  var r, o, i;
  return function() {
    var s = Qi(this, e), l = n(this), c = l + "";
    return l == null && (c = l = (this.style.removeProperty(e), Qi(this, e))), s === c ? null : s === r && c === o ? i : (o = c, i = t(r = s, l));
  };
}
function x4(e, t) {
  var n, r, o, i = "style." + t, s = "end." + i, l;
  return function() {
    var c = Wr(this, e), u = c.on, f = c.value[i] == null ? l || (l = Y1(t)) : void 0;
    (u !== n || o !== f) && (r = (n = u).copy()).on(s, o = f), c.on = r;
  };
}
function w4(e, t, n) {
  var r = (e += "") == "transform" ? wj : q1;
  return t == null ? this.styleTween(e, y4(e, r)).on("end.style." + e, Y1(e)) : typeof t == "function" ? this.styleTween(e, v4(e, r, am(this, "style." + e, t))).each(x4(this._id, e)) : this.styleTween(e, b4(e, r, t), n).on("end.style." + e, null);
}
function S4(e, t, n) {
  return function(r) {
    this.style.setProperty(e, t.call(this, r), n);
  };
}
function E4(e, t, n) {
  var r, o;
  function i() {
    var s = t.apply(this, arguments);
    return s !== o && (r = (o = s) && S4(e, s, n)), r;
  }
  return i._value = t, i;
}
function T4(e, t, n) {
  var r = "style." + (e += "");
  if (arguments.length < 2) return (r = this.tween(r)) && r._value;
  if (t == null) return this.tween(r, null);
  if (typeof t != "function") throw new Error();
  return this.tween(r, E4(e, t, n ?? ""));
}
function C4(e) {
  return function() {
    this.textContent = e;
  };
}
function O4(e) {
  return function() {
    var t = e(this);
    this.textContent = t ?? "";
  };
}
function k4(e) {
  return this.tween("text", typeof e == "function" ? O4(am(this, "text", e)) : C4(e == null ? "" : e + ""));
}
function R4(e) {
  return function(t) {
    this.textContent = e.call(this, t);
  };
}
function N4(e) {
  var t, n;
  function r() {
    var o = e.apply(this, arguments);
    return o !== n && (t = (n = o) && R4(o)), t;
  }
  return r._value = e, r;
}
function $4(e) {
  var t = "text";
  if (arguments.length < 1) return (t = this.tween(t)) && t._value;
  if (e == null) return this.tween(t, null);
  if (typeof e != "function") throw new Error();
  return this.tween(t, N4(e));
}
function P4() {
  for (var e = this._name, t = this._id, n = K1(), r = this._groups, o = r.length, i = 0; i < o; ++i)
    for (var s = r[i], l = s.length, c, u = 0; u < l; ++u)
      if (c = s[u]) {
        var f = yr(c, t);
        td(c, e, n, u, s, {
          time: f.time + f.delay + f.duration,
          delay: 0,
          duration: f.duration,
          ease: f.ease
        });
      }
  return new lo(r, this._parents, e, n);
}
function I4() {
  var e, t, n = this, r = n._id, o = n.size();
  return new Promise(function(i, s) {
    var l = { value: s }, c = { value: function() {
      --o === 0 && i();
    } };
    n.each(function() {
      var u = Wr(this, r), f = u.on;
      f !== e && (t = (e = f).copy(), t._.cancel.push(l), t._.interrupt.push(l), t._.end.push(c)), u.on = t;
    }), o === 0 && i();
  });
}
var _4 = 0;
function lo(e, t, n, r) {
  this._groups = e, this._parents = t, this._name = n, this._id = r;
}
function K1() {
  return ++_4;
}
var Xr = tl.prototype;
lo.prototype = {
  constructor: lo,
  select: p4,
  selectAll: h4,
  selectChild: Xr.selectChild,
  selectChildren: Xr.selectChildren,
  filter: s4,
  merge: a4,
  selection: g4,
  transition: P4,
  call: Xr.call,
  nodes: Xr.nodes,
  node: Xr.node,
  size: Xr.size,
  empty: Xr.empty,
  each: Xr.each,
  on: u4,
  attr: Wj,
  attrTween: Gj,
  style: w4,
  styleTween: T4,
  text: k4,
  textTween: $4,
  remove: f4,
  tween: Bj,
  delay: Qj,
  duration: t4,
  ease: r4,
  easeVarying: i4,
  end: I4,
  [Symbol.iterator]: Xr[Symbol.iterator]
};
function M4(e) {
  return ((e *= 2) <= 1 ? e * e * e : (e -= 2) * e * e + 2) / 2;
}
var A4 = {
  time: null,
  // Set on use.
  delay: 0,
  duration: 250,
  ease: M4
};
function D4(e, t) {
  for (var n; !(n = e.__transition) || !(n = n[t]); )
    if (!(e = e.parentNode))
      throw new Error(`transition ${t} not found`);
  return n;
}
function B4(e) {
  var t, n;
  e instanceof lo ? (t = e._id, e = e._name) : (t = K1(), (n = A4).time = im(), e = e == null ? null : e + "");
  for (var r = this._groups, o = r.length, i = 0; i < o; ++i)
    for (var s = r[i], l = s.length, c, u = 0; u < l; ++u)
      (c = s[u]) && td(c, e, t, u, s, n || D4(c, t));
  return new lo(r, this._parents, e, t);
}
tl.prototype.interrupt = Mj;
tl.prototype.transition = B4;
const Bl = (e) => () => e;
function L4(e, {
  sourceEvent: t,
  target: n,
  transform: r,
  dispatch: o
}) {
  Object.defineProperties(this, {
    type: { value: e, enumerable: !0, configurable: !0 },
    sourceEvent: { value: t, enumerable: !0, configurable: !0 },
    target: { value: n, enumerable: !0, configurable: !0 },
    transform: { value: r, enumerable: !0, configurable: !0 },
    _: { value: o }
  });
}
function Zr(e, t, n) {
  this.k = e, this.x = t, this.y = n;
}
Zr.prototype = {
  constructor: Zr,
  scale: function(e) {
    return e === 1 ? this : new Zr(this.k * e, this.x, this.y);
  },
  translate: function(e, t) {
    return e === 0 & t === 0 ? this : new Zr(this.k, this.x + this.k * e, this.y + this.k * t);
  },
  apply: function(e) {
    return [e[0] * this.k + this.x, e[1] * this.k + this.y];
  },
  applyX: function(e) {
    return e * this.k + this.x;
  },
  applyY: function(e) {
    return e * this.k + this.y;
  },
  invert: function(e) {
    return [(e[0] - this.x) / this.k, (e[1] - this.y) / this.k];
  },
  invertX: function(e) {
    return (e - this.x) / this.k;
  },
  invertY: function(e) {
    return (e - this.y) / this.k;
  },
  rescaleX: function(e) {
    return e.copy().domain(e.range().map(this.invertX, this).map(e.invert, e));
  },
  rescaleY: function(e) {
    return e.copy().domain(e.range().map(this.invertY, this).map(e.invert, e));
  },
  toString: function() {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};
var nd = new Zr(1, 0, 0);
G1.prototype = Zr.prototype;
function G1(e) {
  for (; !e.__zoom; ) if (!(e = e.parentNode)) return nd;
  return e.__zoom;
}
function af(e) {
  e.stopImmediatePropagation();
}
function As(e) {
  e.preventDefault(), e.stopImmediatePropagation();
}
function F4(e) {
  return (!e.ctrlKey || e.type === "wheel") && !e.button;
}
function z4() {
  var e = this;
  return e instanceof SVGElement ? (e = e.ownerSVGElement || e, e.hasAttribute("viewBox") ? (e = e.viewBox.baseVal, [[e.x, e.y], [e.x + e.width, e.y + e.height]]) : [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]]) : [[0, 0], [e.clientWidth, e.clientHeight]];
}
function Zb() {
  return this.__zoom || nd;
}
function V4(e) {
  return -e.deltaY * (e.deltaMode === 1 ? 0.05 : e.deltaMode ? 1 : 2e-3) * (e.ctrlKey ? 10 : 1);
}
function j4() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}
function H4(e, t, n) {
  var r = e.invertX(t[0][0]) - n[0][0], o = e.invertX(t[1][0]) - n[1][0], i = e.invertY(t[0][1]) - n[0][1], s = e.invertY(t[1][1]) - n[1][1];
  return e.translate(
    o > r ? (r + o) / 2 : Math.min(0, r) || Math.max(0, o),
    s > i ? (i + s) / 2 : Math.min(0, i) || Math.max(0, s)
  );
}
function X1() {
  var e = F4, t = z4, n = H4, r = V4, o = j4, i = [0, 1 / 0], s = [[-1 / 0, -1 / 0], [1 / 0, 1 / 0]], l = 250, c = Oj, u = Qu("start", "zoom", "end"), f, d, p, h = 500, g = 150, m = 0, y = 10;
  function x(O) {
    O.property("__zoom", Zb).on("wheel.zoom", R, { passive: !1 }).on("mousedown.zoom", I).on("dblclick.zoom", b).filter(o).on("touchstart.zoom", k).on("touchmove.zoom", P).on("touchend.zoom touchcancel.zoom", A).style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }
  x.transform = function(O, _, $, D) {
    var z = O.selection ? O.selection() : O;
    z.property("__zoom", Zb), O !== z ? S(O, _, $, D) : z.interrupt().each(function() {
      T(this, arguments).event(D).start().zoom(null, typeof _ == "function" ? _.apply(this, arguments) : _).end();
    });
  }, x.scaleBy = function(O, _, $, D) {
    x.scaleTo(O, function() {
      var z = this.__zoom.k, B = typeof _ == "function" ? _.apply(this, arguments) : _;
      return z * B;
    }, $, D);
  }, x.scaleTo = function(O, _, $, D) {
    x.transform(O, function() {
      var z = t.apply(this, arguments), B = this.__zoom, L = $ == null ? w(z) : typeof $ == "function" ? $.apply(this, arguments) : $, F = B.invert(L), W = typeof _ == "function" ? _.apply(this, arguments) : _;
      return n(v(E(B, W), L, F), z, s);
    }, $, D);
  }, x.translateBy = function(O, _, $, D) {
    x.transform(O, function() {
      return n(this.__zoom.translate(
        typeof _ == "function" ? _.apply(this, arguments) : _,
        typeof $ == "function" ? $.apply(this, arguments) : $
      ), t.apply(this, arguments), s);
    }, null, D);
  }, x.translateTo = function(O, _, $, D, z) {
    x.transform(O, function() {
      var B = t.apply(this, arguments), L = this.__zoom, F = D == null ? w(B) : typeof D == "function" ? D.apply(this, arguments) : D;
      return n(nd.translate(F[0], F[1]).scale(L.k).translate(
        typeof _ == "function" ? -_.apply(this, arguments) : -_,
        typeof $ == "function" ? -$.apply(this, arguments) : -$
      ), B, s);
    }, D, z);
  };
  function E(O, _) {
    return _ = Math.max(i[0], Math.min(i[1], _)), _ === O.k ? O : new Zr(_, O.x, O.y);
  }
  function v(O, _, $) {
    var D = _[0] - $[0] * O.k, z = _[1] - $[1] * O.k;
    return D === O.x && z === O.y ? O : new Zr(O.k, D, z);
  }
  function w(O) {
    return [(+O[0][0] + +O[1][0]) / 2, (+O[0][1] + +O[1][1]) / 2];
  }
  function S(O, _, $, D) {
    O.on("start.zoom", function() {
      T(this, arguments).event(D).start();
    }).on("interrupt.zoom end.zoom", function() {
      T(this, arguments).event(D).end();
    }).tween("zoom", function() {
      var z = this, B = arguments, L = T(z, B).event(D), F = t.apply(z, B), W = $ == null ? w(F) : typeof $ == "function" ? $.apply(z, B) : $, U = Math.max(F[1][0] - F[0][0], F[1][1] - F[0][1]), Z = z.__zoom, Q = typeof _ == "function" ? _.apply(z, B) : _, ee = c(Z.invert(W).concat(U / Z.k), Q.invert(W).concat(U / Q.k));
      return function(te) {
        if (te === 1) te = Q;
        else {
          var q = ee(te), oe = U / q[2];
          te = new Zr(oe, W[0] - q[0] * oe, W[1] - q[1] * oe);
        }
        L.zoom(null, te);
      };
    });
  }
  function T(O, _, $) {
    return !$ && O.__zooming || new C(O, _);
  }
  function C(O, _) {
    this.that = O, this.args = _, this.active = 0, this.sourceEvent = null, this.extent = t.apply(O, _), this.taps = 0;
  }
  C.prototype = {
    event: function(O) {
      return O && (this.sourceEvent = O), this;
    },
    start: function() {
      return ++this.active === 1 && (this.that.__zooming = this, this.emit("start")), this;
    },
    zoom: function(O, _) {
      return this.mouse && O !== "mouse" && (this.mouse[1] = _.invert(this.mouse[0])), this.touch0 && O !== "touch" && (this.touch0[1] = _.invert(this.touch0[0])), this.touch1 && O !== "touch" && (this.touch1[1] = _.invert(this.touch1[0])), this.that.__zoom = _, this.emit("zoom"), this;
    },
    end: function() {
      return --this.active === 0 && (delete this.that.__zooming, this.emit("end")), this;
    },
    emit: function(O) {
      var _ = Fn(this.that).datum();
      u.call(
        O,
        this.that,
        new L4(O, {
          sourceEvent: this.sourceEvent,
          target: x,
          transform: this.that.__zoom,
          dispatch: u
        }),
        _
      );
    }
  };
  function R(O, ..._) {
    if (!e.apply(this, arguments)) return;
    var $ = T(this, _).event(O), D = this.__zoom, z = Math.max(i[0], Math.min(i[1], D.k * Math.pow(2, r.apply(this, arguments)))), B = lr(O);
    if ($.wheel)
      ($.mouse[0][0] !== B[0] || $.mouse[0][1] !== B[1]) && ($.mouse[1] = D.invert($.mouse[0] = B)), clearTimeout($.wheel);
    else {
      if (D.k === z) return;
      $.mouse = [B, D.invert(B)], ac(this), $.start();
    }
    As(O), $.wheel = setTimeout(L, g), $.zoom("mouse", n(v(E(D, z), $.mouse[0], $.mouse[1]), $.extent, s));
    function L() {
      $.wheel = null, $.end();
    }
  }
  function I(O, ..._) {
    if (p || !e.apply(this, arguments)) return;
    var $ = O.currentTarget, D = T(this, _, !0).event(O), z = Fn(O.view).on("mousemove.zoom", W, !0).on("mouseup.zoom", U, !0), B = lr(O, $), L = O.clientX, F = O.clientY;
    _1(O.view), af(O), D.mouse = [B, this.__zoom.invert(B)], ac(this), D.start();
    function W(Z) {
      if (As(Z), !D.moved) {
        var Q = Z.clientX - L, ee = Z.clientY - F;
        D.moved = Q * Q + ee * ee > m;
      }
      D.event(Z).zoom("mouse", n(v(D.that.__zoom, D.mouse[0] = lr(Z, $), D.mouse[1]), D.extent, s));
    }
    function U(Z) {
      z.on("mousemove.zoom mouseup.zoom", null), M1(Z.view, D.moved), As(Z), D.event(Z).end();
    }
  }
  function b(O, ..._) {
    if (e.apply(this, arguments)) {
      var $ = this.__zoom, D = lr(O.changedTouches ? O.changedTouches[0] : O, this), z = $.invert(D), B = $.k * (O.shiftKey ? 0.5 : 2), L = n(v(E($, B), D, z), t.apply(this, _), s);
      As(O), l > 0 ? Fn(this).transition().duration(l).call(S, L, D, O) : Fn(this).call(x.transform, L, D, O);
    }
  }
  function k(O, ..._) {
    if (e.apply(this, arguments)) {
      var $ = O.touches, D = $.length, z = T(this, _, O.changedTouches.length === D).event(O), B, L, F, W;
      for (af(O), L = 0; L < D; ++L)
        F = $[L], W = lr(F, this), W = [W, this.__zoom.invert(W), F.identifier], z.touch0 ? !z.touch1 && z.touch0[2] !== W[2] && (z.touch1 = W, z.taps = 0) : (z.touch0 = W, B = !0, z.taps = 1 + !!f);
      f && (f = clearTimeout(f)), B && (z.taps < 2 && (d = W[0], f = setTimeout(function() {
        f = null;
      }, h)), ac(this), z.start());
    }
  }
  function P(O, ..._) {
    if (this.__zooming) {
      var $ = T(this, _).event(O), D = O.changedTouches, z = D.length, B, L, F, W;
      for (As(O), B = 0; B < z; ++B)
        L = D[B], F = lr(L, this), $.touch0 && $.touch0[2] === L.identifier ? $.touch0[0] = F : $.touch1 && $.touch1[2] === L.identifier && ($.touch1[0] = F);
      if (L = $.that.__zoom, $.touch1) {
        var U = $.touch0[0], Z = $.touch0[1], Q = $.touch1[0], ee = $.touch1[1], te = (te = Q[0] - U[0]) * te + (te = Q[1] - U[1]) * te, q = (q = ee[0] - Z[0]) * q + (q = ee[1] - Z[1]) * q;
        L = E(L, Math.sqrt(te / q)), F = [(U[0] + Q[0]) / 2, (U[1] + Q[1]) / 2], W = [(Z[0] + ee[0]) / 2, (Z[1] + ee[1]) / 2];
      } else if ($.touch0) F = $.touch0[0], W = $.touch0[1];
      else return;
      $.zoom("touch", n(v(L, F, W), $.extent, s));
    }
  }
  function A(O, ..._) {
    if (this.__zooming) {
      var $ = T(this, _).event(O), D = O.changedTouches, z = D.length, B, L;
      for (af(O), p && clearTimeout(p), p = setTimeout(function() {
        p = null;
      }, h), B = 0; B < z; ++B)
        L = D[B], $.touch0 && $.touch0[2] === L.identifier ? delete $.touch0 : $.touch1 && $.touch1[2] === L.identifier && delete $.touch1;
      if ($.touch1 && !$.touch0 && ($.touch0 = $.touch1, delete $.touch1), $.touch0) $.touch0[1] = this.__zoom.invert($.touch0[0]);
      else if ($.end(), $.taps === 2 && (L = lr(L, this), Math.hypot(d[0] - L[0], d[1] - L[1]) < y)) {
        var F = Fn(this).on("dblclick.zoom");
        F && F.apply(this, arguments);
      }
    }
  }
  return x.wheelDelta = function(O) {
    return arguments.length ? (r = typeof O == "function" ? O : Bl(+O), x) : r;
  }, x.filter = function(O) {
    return arguments.length ? (e = typeof O == "function" ? O : Bl(!!O), x) : e;
  }, x.touchable = function(O) {
    return arguments.length ? (o = typeof O == "function" ? O : Bl(!!O), x) : o;
  }, x.extent = function(O) {
    return arguments.length ? (t = typeof O == "function" ? O : Bl([[+O[0][0], +O[0][1]], [+O[1][0], +O[1][1]]]), x) : t;
  }, x.scaleExtent = function(O) {
    return arguments.length ? (i[0] = +O[0], i[1] = +O[1], x) : [i[0], i[1]];
  }, x.translateExtent = function(O) {
    return arguments.length ? (s[0][0] = +O[0][0], s[1][0] = +O[1][0], s[0][1] = +O[0][1], s[1][1] = +O[1][1], x) : [[s[0][0], s[0][1]], [s[1][0], s[1][1]]];
  }, x.constrain = function(O) {
    return arguments.length ? (n = O, x) : n;
  }, x.duration = function(O) {
    return arguments.length ? (l = +O, x) : l;
  }, x.interpolate = function(O) {
    return arguments.length ? (c = O, x) : c;
  }, x.on = function() {
    var O = u.on.apply(u, arguments);
    return O === u ? x : O;
  }, x.clickDistance = function(O) {
    return arguments.length ? (m = (O = +O) * O, x) : Math.sqrt(m);
  }, x.tapDistance = function(O) {
    return arguments.length ? (y = +O, x) : y;
  }, x;
}
const Sn = {
  error001: () => "[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001",
  error002: () => "It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.",
  error003: (e) => `Node type "${e}" not found. Using fallback type "default".`,
  error004: () => "The React Flow parent container needs a width and a height to render the graph.",
  error005: () => "Only child nodes can use a parent extent.",
  error006: () => "Can't create edge. An edge needs a source and a target.",
  error007: (e) => `The old edge with id=${e} does not exist.`,
  error009: (e) => `Marker type "${e}" doesn't exist.`,
  error008: (e, { id: t, sourceHandle: n, targetHandle: r }) => `Couldn't create edge for ${e} handle id: "${e === "source" ? n : r}", edge id: ${t}.`,
  error010: () => "Handle: No node id found. Make sure to only use a Handle inside a custom Node.",
  error011: (e) => `Edge type "${e}" not found. Using fallback type "default".`,
  error012: (e) => `Node with id "${e}" does not exist, it may have been removed. This can happen when a node is deleted before the "onNodeClick" handler is called.`,
  error013: (e = "react") => `It seems that you haven't loaded the styles. Please import '@xyflow/${e}/dist/style.css' or base.css to make sure everything is working properly.`,
  error014: () => "useNodeConnections: No node ID found. Call useNodeConnections inside a custom Node or provide a node ID.",
  error015: () => "It seems that you are trying to drag a node that is not initialized. Please use onNodesChange as explained in the docs."
}, Na = [
  [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],
  [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY]
], Z1 = ["Enter", " ", "Escape"];
var es;
(function(e) {
  e.Strict = "strict", e.Loose = "loose";
})(es || (es = {}));
var Qo;
(function(e) {
  e.Free = "free", e.Vertical = "vertical", e.Horizontal = "horizontal";
})(Qo || (Qo = {}));
var $a;
(function(e) {
  e.Partial = "partial", e.Full = "full";
})($a || ($a = {}));
const Q1 = {
  inProgress: !1,
  isValid: null,
  from: null,
  fromHandle: null,
  fromPosition: null,
  fromNode: null,
  to: null,
  toHandle: null,
  toPosition: null,
  toNode: null
};
var zn;
(function(e) {
  e.Bezier = "default", e.Straight = "straight", e.Step = "step", e.SmoothStep = "smoothstep", e.SimpleBezier = "simplebezier";
})(zn || (zn = {}));
var ts;
(function(e) {
  e.Arrow = "arrow", e.ArrowClosed = "arrowclosed";
})(ts || (ts = {}));
var De;
(function(e) {
  e.Left = "left", e.Top = "top", e.Right = "right", e.Bottom = "bottom";
})(De || (De = {}));
const Qb = {
  [De.Left]: De.Right,
  [De.Right]: De.Left,
  [De.Top]: De.Bottom,
  [De.Bottom]: De.Top
};
function J1(e) {
  return e === null ? null : e ? "valid" : "invalid";
}
const eE = (e) => "id" in e && "source" in e && "target" in e, W4 = (e) => "id" in e && "position" in e && !("source" in e) && !("target" in e), lm = (e) => "id" in e && "internals" in e && !("source" in e) && !("target" in e), U4 = (e, t, n) => {
  if (!e.id)
    return [];
  const r = /* @__PURE__ */ new Set();
  return n.forEach((o) => {
    o.source === e.id && r.add(o.target);
  }), t.filter((o) => r.has(o.id));
}, rl = (e, t = [0, 0]) => {
  const { width: n, height: r } = fo(e), o = e.origin ?? t, i = n * o[0], s = r * o[1];
  return {
    x: e.position.x - i,
    y: e.position.y - s
  };
}, q4 = (e, t = { nodeOrigin: [0, 0] }) => {
  if (process.env.NODE_ENV === "development" && !t.nodeLookup && console.warn("Please use `getNodesBounds` from `useReactFlow`/`useSvelteFlow` hook to ensure correct values for sub flows. If not possible, you have to provide a nodeLookup to support sub flows."), e.length === 0)
    return { x: 0, y: 0, width: 0, height: 0 };
  const n = e.reduce((r, o) => {
    const i = typeof o == "string";
    let s = !t.nodeLookup && !i ? o : void 0;
    t.nodeLookup && (s = i ? t.nodeLookup.get(o) : lm(o) ? o : t.nodeLookup.get(o.id));
    const l = s ? Wc(s, t.nodeOrigin) : { x: 0, y: 0, x2: 0, y2: 0 };
    return rd(r, l);
  }, { x: 1 / 0, y: 1 / 0, x2: -1 / 0, y2: -1 / 0 });
  return od(n);
}, ol = (e, t = {}) => {
  if (e.size === 0)
    return { x: 0, y: 0, width: 0, height: 0 };
  let n = { x: 1 / 0, y: 1 / 0, x2: -1 / 0, y2: -1 / 0 };
  return e.forEach((r) => {
    if (t.filter === void 0 || t.filter(r)) {
      const o = Wc(r);
      n = rd(n, o);
    }
  }), od(n);
}, tE = (e, t, [n, r, o] = [0, 0, 1], i = !1, s = !1) => {
  const l = {
    ...il(t, [n, r, o]),
    width: t.width / o,
    height: t.height / o
  }, c = [];
  for (const u of e.values()) {
    const { measured: f, selectable: d = !0, hidden: p = !1 } = u;
    if (s && !d || p)
      continue;
    const h = f.width ?? u.width ?? u.initialWidth ?? null, g = f.height ?? u.height ?? u.initialHeight ?? null, m = Pa(l, rs(u)), y = (h ?? 0) * (g ?? 0), x = i && m > 0;
    (!u.internals.handleBounds || x || m >= y || u.dragging) && c.push(u);
  }
  return c;
}, Y4 = (e, t) => {
  const n = /* @__PURE__ */ new Set();
  return e.forEach((r) => {
    n.add(r.id);
  }), t.filter((r) => n.has(r.source) || n.has(r.target));
};
function K4(e, t) {
  const n = /* @__PURE__ */ new Map(), r = t != null && t.nodes ? new Set(t.nodes.map((o) => o.id)) : null;
  return e.forEach((o) => {
    o.measured.width && o.measured.height && ((t == null ? void 0 : t.includeHiddenNodes) || !o.hidden) && (!r || r.has(o.id)) && n.set(o.id, o);
  }), n;
}
async function G4({ nodes: e, width: t, height: n, panZoom: r, minZoom: o, maxZoom: i }, s) {
  if (e.size === 0)
    return Promise.resolve(!0);
  const l = K4(e, s), c = ol(l), u = cm(c, t, n, (s == null ? void 0 : s.minZoom) ?? o, (s == null ? void 0 : s.maxZoom) ?? i, (s == null ? void 0 : s.padding) ?? 0.1);
  return await r.setViewport(u, { duration: s == null ? void 0 : s.duration }), Promise.resolve(!0);
}
function nE({ nodeId: e, nextPosition: t, nodeLookup: n, nodeOrigin: r = [0, 0], nodeExtent: o, onError: i }) {
  const s = n.get(e), l = s.parentId ? n.get(s.parentId) : void 0, { x: c, y: u } = l ? l.internals.positionAbsolute : { x: 0, y: 0 }, f = s.origin ?? r;
  let d = o;
  if (s.extent === "parent" && !s.expandParent)
    if (!l)
      i == null || i("005", Sn.error005());
    else {
      const h = l.measured.width, g = l.measured.height;
      h && g && (d = [
        [c, u],
        [c + h, u + g]
      ]);
    }
  else l && os(s.extent) && (d = [
    [s.extent[0][0] + c, s.extent[0][1] + u],
    [s.extent[1][0] + c, s.extent[1][1] + u]
  ]);
  const p = os(d) ? oi(t, d, s.measured) : t;
  return (s.measured.width === void 0 || s.measured.height === void 0) && (i == null || i("015", Sn.error015())), {
    position: {
      x: p.x - c + (s.measured.width ?? 0) * f[0],
      y: p.y - u + (s.measured.height ?? 0) * f[1]
    },
    positionAbsolute: p
  };
}
async function X4({ nodesToRemove: e = [], edgesToRemove: t = [], nodes: n, edges: r, onBeforeDelete: o }) {
  const i = new Set(e.map((p) => p.id)), s = [];
  for (const p of n) {
    if (p.deletable === !1)
      continue;
    const h = i.has(p.id), g = !h && p.parentId && s.find((m) => m.id === p.parentId);
    (h || g) && s.push(p);
  }
  const l = new Set(t.map((p) => p.id)), c = r.filter((p) => p.deletable !== !1), f = Y4(s, c);
  for (const p of c)
    l.has(p.id) && !f.find((g) => g.id === p.id) && f.push(p);
  if (!o)
    return {
      edges: f,
      nodes: s
    };
  const d = await o({
    nodes: s,
    edges: f
  });
  return typeof d == "boolean" ? d ? { edges: f, nodes: s } : { edges: [], nodes: [] } : d;
}
const ns = (e, t = 0, n = 1) => Math.min(Math.max(e, t), n), oi = (e = { x: 0, y: 0 }, t, n) => ({
  x: ns(e.x, t[0][0], t[1][0] - ((n == null ? void 0 : n.width) ?? 0)),
  y: ns(e.y, t[0][1], t[1][1] - ((n == null ? void 0 : n.height) ?? 0))
});
function rE(e, t, n) {
  const { width: r, height: o } = fo(n), { x: i, y: s } = n.internals.positionAbsolute;
  return oi(e, [
    [i, s],
    [i + r, s + o]
  ], t);
}
const Jb = (e, t, n) => e < t ? ns(Math.abs(e - t), 1, t) / t : e > n ? -ns(Math.abs(e - n), 1, t) / t : 0, oE = (e, t, n = 15, r = 40) => {
  const o = Jb(e.x, r, t.width - r) * n, i = Jb(e.y, r, t.height - r) * n;
  return [o, i];
}, rd = (e, t) => ({
  x: Math.min(e.x, t.x),
  y: Math.min(e.y, t.y),
  x2: Math.max(e.x2, t.x2),
  y2: Math.max(e.y2, t.y2)
}), Ep = ({ x: e, y: t, width: n, height: r }) => ({
  x: e,
  y: t,
  x2: e + n,
  y2: t + r
}), od = ({ x: e, y: t, x2: n, y2: r }) => ({
  x: e,
  y: t,
  width: n - e,
  height: r - t
}), rs = (e, t = [0, 0]) => {
  var o, i;
  const { x: n, y: r } = lm(e) ? e.internals.positionAbsolute : rl(e, t);
  return {
    x: n,
    y: r,
    width: ((o = e.measured) == null ? void 0 : o.width) ?? e.width ?? e.initialWidth ?? 0,
    height: ((i = e.measured) == null ? void 0 : i.height) ?? e.height ?? e.initialHeight ?? 0
  };
}, Wc = (e, t = [0, 0]) => {
  var o, i;
  const { x: n, y: r } = lm(e) ? e.internals.positionAbsolute : rl(e, t);
  return {
    x: n,
    y: r,
    x2: n + (((o = e.measured) == null ? void 0 : o.width) ?? e.width ?? e.initialWidth ?? 0),
    y2: r + (((i = e.measured) == null ? void 0 : i.height) ?? e.height ?? e.initialHeight ?? 0)
  };
}, iE = (e, t) => od(rd(Ep(e), Ep(t))), Pa = (e, t) => {
  const n = Math.max(0, Math.min(e.x + e.width, t.x + t.width) - Math.max(e.x, t.x)), r = Math.max(0, Math.min(e.y + e.height, t.y + t.height) - Math.max(e.y, t.y));
  return Math.ceil(n * r);
}, e0 = (e) => dr(e.width) && dr(e.height) && dr(e.x) && dr(e.y), dr = (e) => !isNaN(e) && isFinite(e), Uc = (e, t) => {
  process.env.NODE_ENV === "development" && console.warn(`[React Flow]: ${t} Help: https://reactflow.dev/error#${e}`);
}, id = (e, t = [1, 1]) => ({
  x: t[0] * Math.round(e.x / t[0]),
  y: t[1] * Math.round(e.y / t[1])
}), il = ({ x: e, y: t }, [n, r, o], i = !1, s = [1, 1]) => {
  const l = {
    x: (e - n) / o,
    y: (t - r) / o
  };
  return i ? id(l, s) : l;
}, qc = ({ x: e, y: t }, [n, r, o]) => ({
  x: e * o + n,
  y: t * o + r
});
function Ti(e, t) {
  if (typeof e == "number")
    return Math.floor((t - t / (1 + e)) * 0.5);
  if (typeof e == "string" && e.endsWith("px")) {
    const n = parseFloat(e);
    if (!Number.isNaN(n))
      return Math.floor(n);
  }
  if (typeof e == "string" && e.endsWith("%")) {
    const n = parseFloat(e);
    if (!Number.isNaN(n))
      return Math.floor(t * n * 0.01);
  }
  return console.error(`[React Flow] The padding value "${e}" is invalid. Please provide a number or a string with a valid unit (px or %).`), 0;
}
function Z4(e, t, n) {
  if (typeof e == "string" || typeof e == "number") {
    const r = Ti(e, n), o = Ti(e, t);
    return {
      top: r,
      right: o,
      bottom: r,
      left: o,
      x: o * 2,
      y: r * 2
    };
  }
  if (typeof e == "object") {
    const r = Ti(e.top ?? e.y ?? 0, n), o = Ti(e.bottom ?? e.y ?? 0, n), i = Ti(e.left ?? e.x ?? 0, t), s = Ti(e.right ?? e.x ?? 0, t);
    return { top: r, right: s, bottom: o, left: i, x: i + s, y: r + o };
  }
  return { top: 0, right: 0, bottom: 0, left: 0, x: 0, y: 0 };
}
function Q4(e, t, n, r, o, i) {
  const { x: s, y: l } = qc(e, [t, n, r]), { x: c, y: u } = qc({ x: e.x + e.width, y: e.y + e.height }, [t, n, r]), f = o - c, d = i - u;
  return {
    left: Math.floor(s),
    top: Math.floor(l),
    right: Math.floor(f),
    bottom: Math.floor(d)
  };
}
const cm = (e, t, n, r, o, i) => {
  const s = Z4(i, t, n), l = (t - s.x) / e.width, c = (n - s.y) / e.height, u = Math.min(l, c), f = ns(u, r, o), d = e.x + e.width / 2, p = e.y + e.height / 2, h = t / 2 - d * f, g = n / 2 - p * f, m = Q4(e, h, g, f, t, n), y = {
    left: Math.min(m.left - s.left, 0),
    top: Math.min(m.top - s.top, 0),
    right: Math.min(m.right - s.right, 0),
    bottom: Math.min(m.bottom - s.bottom, 0)
  };
  return {
    x: h - y.left + y.right,
    y: g - y.top + y.bottom,
    zoom: f
  };
}, Yc = () => {
  var e;
  return typeof navigator < "u" && ((e = navigator == null ? void 0 : navigator.userAgent) == null ? void 0 : e.indexOf("Mac")) >= 0;
};
function os(e) {
  return e !== void 0 && e !== "parent";
}
function fo(e) {
  var t, n;
  return {
    width: ((t = e.measured) == null ? void 0 : t.width) ?? e.width ?? e.initialWidth ?? 0,
    height: ((n = e.measured) == null ? void 0 : n.height) ?? e.height ?? e.initialHeight ?? 0
  };
}
function sE(e) {
  var t, n;
  return (((t = e.measured) == null ? void 0 : t.width) ?? e.width ?? e.initialWidth) !== void 0 && (((n = e.measured) == null ? void 0 : n.height) ?? e.height ?? e.initialHeight) !== void 0;
}
function aE(e, t = { width: 0, height: 0 }, n, r, o) {
  const i = { ...e }, s = r.get(n);
  if (s) {
    const l = s.origin || o;
    i.x += s.internals.positionAbsolute.x - (t.width ?? 0) * l[0], i.y += s.internals.positionAbsolute.y - (t.height ?? 0) * l[1];
  }
  return i;
}
function t0(e, t) {
  if (e.size !== t.size)
    return !1;
  for (const n of e)
    if (!t.has(n))
      return !1;
  return !0;
}
function J4() {
  let e, t;
  return { promise: new Promise((r, o) => {
    e = r, t = o;
  }), resolve: e, reject: t };
}
function oa(e, { snapGrid: t = [0, 0], snapToGrid: n = !1, transform: r, containerBounds: o }) {
  const { x: i, y: s } = Jr(e), l = il({ x: i - ((o == null ? void 0 : o.left) ?? 0), y: s - ((o == null ? void 0 : o.top) ?? 0) }, r), { x: c, y: u } = n ? id(l, t) : l;
  return {
    xSnapped: c,
    ySnapped: u,
    ...l
  };
}
const um = (e) => ({
  width: e.offsetWidth,
  height: e.offsetHeight
}), lE = (e) => {
  var t;
  return ((t = e == null ? void 0 : e.getRootNode) == null ? void 0 : t.call(e)) || (window == null ? void 0 : window.document);
}, e3 = ["INPUT", "SELECT", "TEXTAREA"];
function cE(e) {
  var r, o;
  const t = ((o = (r = e.composedPath) == null ? void 0 : r.call(e)) == null ? void 0 : o[0]) || e.target;
  return (t == null ? void 0 : t.nodeType) !== 1 ? !1 : e3.includes(t.nodeName) || t.hasAttribute("contenteditable") || !!t.closest(".nokey");
}
const uE = (e) => "clientX" in e, Jr = (e, t) => {
  var i, s;
  const n = uE(e), r = n ? e.clientX : (i = e.touches) == null ? void 0 : i[0].clientX, o = n ? e.clientY : (s = e.touches) == null ? void 0 : s[0].clientY;
  return {
    x: r - ((t == null ? void 0 : t.left) ?? 0),
    y: o - ((t == null ? void 0 : t.top) ?? 0)
  };
}, n0 = (e, t, n, r, o) => {
  const i = t.querySelectorAll(`.${e}`);
  return !i || !i.length ? null : Array.from(i).map((s) => {
    const l = s.getBoundingClientRect();
    return {
      id: s.getAttribute("data-handleid"),
      type: e,
      nodeId: o,
      position: s.getAttribute("data-handlepos"),
      x: (l.left - n.left) / r,
      y: (l.top - n.top) / r,
      ...um(s)
    };
  });
};
function dE({ sourceX: e, sourceY: t, targetX: n, targetY: r, sourceControlX: o, sourceControlY: i, targetControlX: s, targetControlY: l }) {
  const c = e * 0.125 + o * 0.375 + s * 0.375 + n * 0.125, u = t * 0.125 + i * 0.375 + l * 0.375 + r * 0.125, f = Math.abs(c - e), d = Math.abs(u - t);
  return [c, u, f, d];
}
function Ll(e, t) {
  return e >= 0 ? 0.5 * e : t * 25 * Math.sqrt(-e);
}
function r0({ pos: e, x1: t, y1: n, x2: r, y2: o, c: i }) {
  switch (e) {
    case De.Left:
      return [t - Ll(t - r, i), n];
    case De.Right:
      return [t + Ll(r - t, i), n];
    case De.Top:
      return [t, n - Ll(n - o, i)];
    case De.Bottom:
      return [t, n + Ll(o - n, i)];
  }
}
function dm({ sourceX: e, sourceY: t, sourcePosition: n = De.Bottom, targetX: r, targetY: o, targetPosition: i = De.Top, curvature: s = 0.25 }) {
  const [l, c] = r0({
    pos: n,
    x1: e,
    y1: t,
    x2: r,
    y2: o,
    c: s
  }), [u, f] = r0({
    pos: i,
    x1: r,
    y1: o,
    x2: e,
    y2: t,
    c: s
  }), [d, p, h, g] = dE({
    sourceX: e,
    sourceY: t,
    targetX: r,
    targetY: o,
    sourceControlX: l,
    sourceControlY: c,
    targetControlX: u,
    targetControlY: f
  });
  return [
    `M${e},${t} C${l},${c} ${u},${f} ${r},${o}`,
    d,
    p,
    h,
    g
  ];
}
function fE({ sourceX: e, sourceY: t, targetX: n, targetY: r }) {
  const o = Math.abs(n - e) / 2, i = n < e ? n + o : n - o, s = Math.abs(r - t) / 2, l = r < t ? r + s : r - s;
  return [i, l, o, s];
}
function t3({ sourceNode: e, targetNode: t, selected: n = !1, zIndex: r = 0, elevateOnSelect: o = !1 }) {
  if (!o)
    return r;
  const i = n || t.selected || e.selected, s = Math.max(e.internals.z || 0, t.internals.z || 0, 1e3);
  return r + (i ? s : 0);
}
function n3({ sourceNode: e, targetNode: t, width: n, height: r, transform: o }) {
  const i = rd(Wc(e), Wc(t));
  i.x === i.x2 && (i.x2 += 1), i.y === i.y2 && (i.y2 += 1);
  const s = {
    x: -o[0] / o[2],
    y: -o[1] / o[2],
    width: n / o[2],
    height: r / o[2]
  };
  return Pa(s, od(i)) > 0;
}
const pE = ({ source: e, sourceHandle: t, target: n, targetHandle: r }) => `xy-edge__${e}${t || ""}-${n}${r || ""}`, r3 = (e, t) => t.some((n) => n.source === e.source && n.target === e.target && (n.sourceHandle === e.sourceHandle || !n.sourceHandle && !e.sourceHandle) && (n.targetHandle === e.targetHandle || !n.targetHandle && !e.targetHandle)), hE = (e, t) => {
  if (!e.source || !e.target)
    return Uc("006", Sn.error006()), t;
  let n;
  return eE(e) ? n = { ...e } : n = {
    ...e,
    id: pE(e)
  }, r3(n, t) ? t : (n.sourceHandle === null && delete n.sourceHandle, n.targetHandle === null && delete n.targetHandle, t.concat(n));
}, o3 = (e, t, n, r = { shouldReplaceId: !0 }) => {
  const { id: o, ...i } = e;
  if (!t.source || !t.target)
    return Uc("006", Sn.error006()), n;
  if (!n.find((c) => c.id === e.id))
    return Uc("007", Sn.error007(o)), n;
  const l = {
    ...i,
    id: r.shouldReplaceId ? pE(t) : o,
    source: t.source,
    target: t.target,
    sourceHandle: t.sourceHandle,
    targetHandle: t.targetHandle
  };
  return n.filter((c) => c.id !== o).concat(l);
};
function mE({ sourceX: e, sourceY: t, targetX: n, targetY: r }) {
  const [o, i, s, l] = fE({
    sourceX: e,
    sourceY: t,
    targetX: n,
    targetY: r
  });
  return [`M ${e},${t}L ${n},${r}`, o, i, s, l];
}
const o0 = {
  [De.Left]: { x: -1, y: 0 },
  [De.Right]: { x: 1, y: 0 },
  [De.Top]: { x: 0, y: -1 },
  [De.Bottom]: { x: 0, y: 1 }
}, i3 = ({ source: e, sourcePosition: t = De.Bottom, target: n }) => t === De.Left || t === De.Right ? e.x < n.x ? { x: 1, y: 0 } : { x: -1, y: 0 } : e.y < n.y ? { x: 0, y: 1 } : { x: 0, y: -1 }, i0 = (e, t) => Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2));
function s3({ source: e, sourcePosition: t = De.Bottom, target: n, targetPosition: r = De.Top, center: o, offset: i }) {
  const s = o0[t], l = o0[r], c = { x: e.x + s.x * i, y: e.y + s.y * i }, u = { x: n.x + l.x * i, y: n.y + l.y * i }, f = i3({
    source: c,
    sourcePosition: t,
    target: u
  }), d = f.x !== 0 ? "x" : "y", p = f[d];
  let h = [], g, m;
  const y = { x: 0, y: 0 }, x = { x: 0, y: 0 }, [E, v, w, S] = fE({
    sourceX: e.x,
    sourceY: e.y,
    targetX: n.x,
    targetY: n.y
  });
  if (s[d] * l[d] === -1) {
    g = o.x ?? E, m = o.y ?? v;
    const C = [
      { x: g, y: c.y },
      { x: g, y: u.y }
    ], R = [
      { x: c.x, y: m },
      { x: u.x, y: m }
    ];
    s[d] === p ? h = d === "x" ? C : R : h = d === "x" ? R : C;
  } else {
    const C = [{ x: c.x, y: u.y }], R = [{ x: u.x, y: c.y }];
    if (d === "x" ? h = s.x === p ? R : C : h = s.y === p ? C : R, t === r) {
      const A = Math.abs(e[d] - n[d]);
      if (A <= i) {
        const O = Math.min(i - 1, i - A);
        s[d] === p ? y[d] = (c[d] > e[d] ? -1 : 1) * O : x[d] = (u[d] > n[d] ? -1 : 1) * O;
      }
    }
    if (t !== r) {
      const A = d === "x" ? "y" : "x", O = s[d] === l[A], _ = c[A] > u[A], $ = c[A] < u[A];
      (s[d] === 1 && (!O && _ || O && $) || s[d] !== 1 && (!O && $ || O && _)) && (h = d === "x" ? C : R);
    }
    const I = { x: c.x + y.x, y: c.y + y.y }, b = { x: u.x + x.x, y: u.y + x.y }, k = Math.max(Math.abs(I.x - h[0].x), Math.abs(b.x - h[0].x)), P = Math.max(Math.abs(I.y - h[0].y), Math.abs(b.y - h[0].y));
    k >= P ? (g = (I.x + b.x) / 2, m = h[0].y) : (g = h[0].x, m = (I.y + b.y) / 2);
  }
  return [[
    e,
    { x: c.x + y.x, y: c.y + y.y },
    ...h,
    { x: u.x + x.x, y: u.y + x.y },
    n
  ], g, m, w, S];
}
function a3(e, t, n, r) {
  const o = Math.min(i0(e, t) / 2, i0(t, n) / 2, r), { x: i, y: s } = t;
  if (e.x === i && i === n.x || e.y === s && s === n.y)
    return `L${i} ${s}`;
  if (e.y === s) {
    const u = e.x < n.x ? -1 : 1, f = e.y < n.y ? 1 : -1;
    return `L ${i + o * u},${s}Q ${i},${s} ${i},${s + o * f}`;
  }
  const l = e.x < n.x ? 1 : -1, c = e.y < n.y ? -1 : 1;
  return `L ${i},${s + o * c}Q ${i},${s} ${i + o * l},${s}`;
}
function Tp({ sourceX: e, sourceY: t, sourcePosition: n = De.Bottom, targetX: r, targetY: o, targetPosition: i = De.Top, borderRadius: s = 5, centerX: l, centerY: c, offset: u = 20 }) {
  const [f, d, p, h, g] = s3({
    source: { x: e, y: t },
    sourcePosition: n,
    target: { x: r, y: o },
    targetPosition: i,
    center: { x: l, y: c },
    offset: u
  });
  return [f.reduce((y, x, E) => {
    let v = "";
    return E > 0 && E < f.length - 1 ? v = a3(f[E - 1], x, f[E + 1], s) : v = `${E === 0 ? "M" : "L"}${x.x} ${x.y}`, y += v, y;
  }, ""), d, p, h, g];
}
function s0(e) {
  var t;
  return e && !!(e.internals.handleBounds || (t = e.handles) != null && t.length) && !!(e.measured.width || e.width || e.initialWidth);
}
function l3(e) {
  var d;
  const { sourceNode: t, targetNode: n } = e;
  if (!s0(t) || !s0(n))
    return null;
  const r = t.internals.handleBounds || a0(t.handles), o = n.internals.handleBounds || a0(n.handles), i = l0((r == null ? void 0 : r.source) ?? [], e.sourceHandle), s = l0(
    // when connection type is loose we can define all handles as sources and connect source -> source
    e.connectionMode === es.Strict ? (o == null ? void 0 : o.target) ?? [] : ((o == null ? void 0 : o.target) ?? []).concat((o == null ? void 0 : o.source) ?? []),
    e.targetHandle
  );
  if (!i || !s)
    return (d = e.onError) == null || d.call(e, "008", Sn.error008(i ? "target" : "source", {
      id: e.id,
      sourceHandle: e.sourceHandle,
      targetHandle: e.targetHandle
    })), null;
  const l = (i == null ? void 0 : i.position) || De.Bottom, c = (s == null ? void 0 : s.position) || De.Top, u = Ia(t, i, l), f = Ia(n, s, c);
  return {
    sourceX: u.x,
    sourceY: u.y,
    targetX: f.x,
    targetY: f.y,
    sourcePosition: l,
    targetPosition: c
  };
}
function a0(e) {
  if (!e)
    return null;
  const t = [], n = [];
  for (const r of e)
    r.width = r.width ?? 1, r.height = r.height ?? 1, r.type === "source" ? t.push(r) : r.type === "target" && n.push(r);
  return {
    source: t,
    target: n
  };
}
function Ia(e, t, n = De.Left, r = !1) {
  const o = ((t == null ? void 0 : t.x) ?? 0) + e.internals.positionAbsolute.x, i = ((t == null ? void 0 : t.y) ?? 0) + e.internals.positionAbsolute.y, { width: s, height: l } = t ?? fo(e);
  if (r)
    return { x: o + s / 2, y: i + l / 2 };
  switch ((t == null ? void 0 : t.position) ?? n) {
    case De.Top:
      return { x: o + s / 2, y: i };
    case De.Right:
      return { x: o + s, y: i + l / 2 };
    case De.Bottom:
      return { x: o + s / 2, y: i + l };
    case De.Left:
      return { x: o, y: i + l / 2 };
  }
}
function l0(e, t) {
  return e && (t ? e.find((n) => n.id === t) : e[0]) || null;
}
function Cp(e, t) {
  return e ? typeof e == "string" ? e : `${t ? `${t}__` : ""}${Object.keys(e).sort().map((r) => `${r}=${e[r]}`).join("&")}` : "";
}
function c3(e, { id: t, defaultColor: n, defaultMarkerStart: r, defaultMarkerEnd: o }) {
  const i = /* @__PURE__ */ new Set();
  return e.reduce((s, l) => ([l.markerStart || r, l.markerEnd || o].forEach((c) => {
    if (c && typeof c == "object") {
      const u = Cp(c, t);
      i.has(u) || (s.push({ id: u, color: c.color || n, ...c }), i.add(u));
    }
  }), s), []).sort((s, l) => s.id.localeCompare(l.id));
}
const fm = {
  nodeOrigin: [0, 0],
  nodeExtent: Na,
  elevateNodesOnSelect: !0,
  defaults: {}
}, u3 = {
  ...fm,
  checkEquality: !0
};
function pm(e, t) {
  const n = { ...e };
  for (const r in t)
    t[r] !== void 0 && (n[r] = t[r]);
  return n;
}
function d3(e, t, n) {
  const r = pm(fm, n);
  for (const o of e.values())
    if (o.parentId)
      hm(o, e, t, r);
    else {
      const i = rl(o, r.nodeOrigin), s = os(o.extent) ? o.extent : r.nodeExtent, l = oi(i, s, fo(o));
      o.internals.positionAbsolute = l;
    }
}
function Op(e, t, n, r) {
  var c, u;
  const o = pm(u3, r);
  let i = e.length > 0;
  const s = new Map(t), l = o != null && o.elevateNodesOnSelect ? 1e3 : 0;
  t.clear(), n.clear();
  for (const f of e) {
    let d = s.get(f.id);
    if (o.checkEquality && f === (d == null ? void 0 : d.internals.userNode))
      t.set(f.id, d);
    else {
      const p = rl(f, o.nodeOrigin), h = os(f.extent) ? f.extent : o.nodeExtent, g = oi(p, h, fo(f));
      d = {
        ...o.defaults,
        ...f,
        measured: {
          width: (c = f.measured) == null ? void 0 : c.width,
          height: (u = f.measured) == null ? void 0 : u.height
        },
        internals: {
          positionAbsolute: g,
          // if user re-initializes the node or removes `measured` for whatever reason, we reset the handleBounds so that the node gets re-measured
          handleBounds: f.measured ? d == null ? void 0 : d.internals.handleBounds : void 0,
          z: gE(f, l),
          userNode: f
        }
      }, t.set(f.id, d);
    }
    (d.measured === void 0 || d.measured.width === void 0 || d.measured.height === void 0) && !d.hidden && (i = !1), f.parentId && hm(d, t, n, r);
  }
  return i;
}
function f3(e, t) {
  if (!e.parentId)
    return;
  const n = t.get(e.parentId);
  n ? n.set(e.id, e) : t.set(e.parentId, /* @__PURE__ */ new Map([[e.id, e]]));
}
function hm(e, t, n, r) {
  const { elevateNodesOnSelect: o, nodeOrigin: i, nodeExtent: s } = pm(fm, r), l = e.parentId, c = t.get(l);
  if (!c) {
    console.warn(`Parent node ${l} not found. Please make sure that parent nodes are in front of their child nodes in the nodes array.`);
    return;
  }
  f3(e, n);
  const u = o ? 1e3 : 0, { x: f, y: d, z: p } = p3(e, c, i, s, u), { positionAbsolute: h } = e.internals, g = f !== h.x || d !== h.y;
  (g || p !== e.internals.z) && t.set(e.id, {
    ...e,
    internals: {
      ...e.internals,
      positionAbsolute: g ? { x: f, y: d } : h,
      z: p
    }
  });
}
function gE(e, t) {
  return (dr(e.zIndex) ? e.zIndex : 0) + (e.selected ? t : 0);
}
function p3(e, t, n, r, o) {
  const { x: i, y: s } = t.internals.positionAbsolute, l = fo(e), c = rl(e, n), u = os(e.extent) ? oi(c, e.extent, l) : c;
  let f = oi({ x: i + u.x, y: s + u.y }, r, l);
  e.extent === "parent" && (f = rE(f, l, t));
  const d = gE(e, o), p = t.internals.z ?? 0;
  return {
    x: f.x,
    y: f.y,
    z: p > d ? p : d
  };
}
function mm(e, t, n, r = [0, 0]) {
  var s;
  const o = [], i = /* @__PURE__ */ new Map();
  for (const l of e) {
    const c = t.get(l.parentId);
    if (!c)
      continue;
    const u = ((s = i.get(l.parentId)) == null ? void 0 : s.expandedRect) ?? rs(c), f = iE(u, l.rect);
    i.set(l.parentId, { expandedRect: f, parent: c });
  }
  return i.size > 0 && i.forEach(({ expandedRect: l, parent: c }, u) => {
    var v;
    const f = c.internals.positionAbsolute, d = fo(c), p = c.origin ?? r, h = l.x < f.x ? Math.round(Math.abs(f.x - l.x)) : 0, g = l.y < f.y ? Math.round(Math.abs(f.y - l.y)) : 0, m = Math.max(d.width, Math.round(l.width)), y = Math.max(d.height, Math.round(l.height)), x = (m - d.width) * p[0], E = (y - d.height) * p[1];
    (h > 0 || g > 0 || x || E) && (o.push({
      id: u,
      type: "position",
      position: {
        x: c.position.x - h + x,
        y: c.position.y - g + E
      }
    }), (v = n.get(u)) == null || v.forEach((w) => {
      e.some((S) => S.id === w.id) || o.push({
        id: w.id,
        type: "position",
        position: {
          x: w.position.x + h,
          y: w.position.y + g
        }
      });
    })), (d.width < l.width || d.height < l.height || h || g) && o.push({
      id: u,
      type: "dimensions",
      setAttributes: !0,
      dimensions: {
        width: m + (h ? p[0] * h - x : 0),
        height: y + (g ? p[1] * g - E : 0)
      }
    });
  }), o;
}
function h3(e, t, n, r, o, i) {
  const s = r == null ? void 0 : r.querySelector(".xyflow__viewport");
  let l = !1;
  if (!s)
    return { changes: [], updatedInternals: l };
  const c = [], u = window.getComputedStyle(s), { m22: f } = new window.DOMMatrixReadOnly(u.transform), d = [];
  for (const p of e.values()) {
    const h = t.get(p.id);
    if (!h)
      continue;
    if (h.hidden) {
      t.set(h.id, {
        ...h,
        internals: {
          ...h.internals,
          handleBounds: void 0
        }
      }), l = !0;
      continue;
    }
    const g = um(p.nodeElement), m = h.measured.width !== g.width || h.measured.height !== g.height;
    if (!!(g.width && g.height && (m || !h.internals.handleBounds || p.force))) {
      const x = p.nodeElement.getBoundingClientRect(), E = os(h.extent) ? h.extent : i;
      let { positionAbsolute: v } = h.internals;
      h.parentId && h.extent === "parent" ? v = rE(v, g, t.get(h.parentId)) : E && (v = oi(v, E, g));
      const w = {
        ...h,
        measured: g,
        internals: {
          ...h.internals,
          positionAbsolute: v,
          handleBounds: {
            source: n0("source", p.nodeElement, x, f, h.id),
            target: n0("target", p.nodeElement, x, f, h.id)
          }
        }
      };
      t.set(h.id, w), h.parentId && hm(w, t, n, { nodeOrigin: o }), l = !0, m && (c.push({
        id: h.id,
        type: "dimensions",
        dimensions: g
      }), h.expandParent && h.parentId && d.push({
        id: h.id,
        parentId: h.parentId,
        rect: rs(w, o)
      }));
    }
  }
  if (d.length > 0) {
    const p = mm(d, t, n, o);
    c.push(...p);
  }
  return { changes: c, updatedInternals: l };
}
async function m3({ delta: e, panZoom: t, transform: n, translateExtent: r, width: o, height: i }) {
  if (!t || !e.x && !e.y)
    return Promise.resolve(!1);
  const s = await t.setViewportConstrained({
    x: n[0] + e.x,
    y: n[1] + e.y,
    zoom: n[2]
  }, [
    [0, 0],
    [o, i]
  ], r), l = !!s && (s.x !== n[0] || s.y !== n[1] || s.k !== n[2]);
  return Promise.resolve(l);
}
function c0(e, t, n, r, o, i) {
  let s = o;
  const l = r.get(s) || /* @__PURE__ */ new Map();
  r.set(s, l.set(n, t)), s = `${o}-${e}`;
  const c = r.get(s) || /* @__PURE__ */ new Map();
  if (r.set(s, c.set(n, t)), i) {
    s = `${o}-${e}-${i}`;
    const u = r.get(s) || /* @__PURE__ */ new Map();
    r.set(s, u.set(n, t));
  }
}
function yE(e, t, n) {
  e.clear(), t.clear();
  for (const r of n) {
    const { source: o, target: i, sourceHandle: s = null, targetHandle: l = null } = r, c = { edgeId: r.id, source: o, target: i, sourceHandle: s, targetHandle: l }, u = `${o}-${s}--${i}-${l}`, f = `${i}-${l}--${o}-${s}`;
    c0("source", c, f, e, o, s), c0("target", c, u, e, i, l), t.set(r.id, r);
  }
}
function bE(e, t) {
  if (!e.parentId)
    return !1;
  const n = t.get(e.parentId);
  return n ? n.selected ? !0 : bE(n, t) : !1;
}
function u0(e, t, n) {
  var o;
  let r = e;
  do {
    if ((o = r == null ? void 0 : r.matches) != null && o.call(r, t))
      return !0;
    if (r === n)
      return !1;
    r = r == null ? void 0 : r.parentElement;
  } while (r);
  return !1;
}
function g3(e, t, n, r) {
  const o = /* @__PURE__ */ new Map();
  for (const [i, s] of e)
    if ((s.selected || s.id === r) && (!s.parentId || !bE(s, e)) && (s.draggable || t && typeof s.draggable > "u")) {
      const l = e.get(i);
      l && o.set(i, {
        id: i,
        position: l.position || { x: 0, y: 0 },
        distance: {
          x: n.x - l.internals.positionAbsolute.x,
          y: n.y - l.internals.positionAbsolute.y
        },
        extent: l.extent,
        parentId: l.parentId,
        origin: l.origin,
        expandParent: l.expandParent,
        internals: {
          positionAbsolute: l.internals.positionAbsolute || { x: 0, y: 0 }
        },
        measured: {
          width: l.measured.width ?? 0,
          height: l.measured.height ?? 0
        }
      });
    }
  return o;
}
function lf({ nodeId: e, dragItems: t, nodeLookup: n, dragging: r = !0 }) {
  var s, l, c;
  const o = [];
  for (const [u, f] of t) {
    const d = (s = n.get(u)) == null ? void 0 : s.internals.userNode;
    d && o.push({
      ...d,
      position: f.position,
      dragging: r
    });
  }
  if (!e)
    return [o[0], o];
  const i = (l = n.get(e)) == null ? void 0 : l.internals.userNode;
  return [
    i ? {
      ...i,
      position: ((c = t.get(e)) == null ? void 0 : c.position) || i.position,
      dragging: r
    } : o[0],
    o
  ];
}
function y3({ onNodeMouseDown: e, getStoreItems: t, onDragStart: n, onDrag: r, onDragStop: o }) {
  let i = { x: null, y: null }, s = 0, l = /* @__PURE__ */ new Map(), c = !1, u = { x: 0, y: 0 }, f = null, d = !1, p = null, h = !1;
  function g({ noDragClassName: y, handleSelector: x, domNode: E, isSelectable: v, nodeId: w, nodeClickDistance: S = 0 }) {
    p = Fn(E);
    function T({ x: b, y: k }, P) {
      const { nodeLookup: A, nodeExtent: O, snapGrid: _, snapToGrid: $, nodeOrigin: D, onNodeDrag: z, onSelectionDrag: B, onError: L, updateNodePositions: F } = t();
      i = { x: b, y: k };
      let W = !1, U = { x: 0, y: 0, x2: 0, y2: 0 };
      if (l.size > 1 && O) {
        const Z = ol(l);
        U = Ep(Z);
      }
      for (const [Z, Q] of l) {
        if (!A.has(Z))
          continue;
        let ee = { x: b - Q.distance.x, y: k - Q.distance.y };
        $ && (ee = id(ee, _));
        let te = [
          [O[0][0], O[0][1]],
          [O[1][0], O[1][1]]
        ];
        if (l.size > 1 && O && !Q.extent) {
          const { positionAbsolute: G } = Q.internals, ne = G.x - U.x + O[0][0], j = G.x + Q.measured.width - U.x2 + O[1][0], pe = G.y - U.y + O[0][1], ce = G.y + Q.measured.height - U.y2 + O[1][1];
          te = [
            [ne, pe],
            [j, ce]
          ];
        }
        const { position: q, positionAbsolute: oe } = nE({
          nodeId: Z,
          nextPosition: ee,
          nodeLookup: A,
          nodeExtent: te,
          nodeOrigin: D,
          onError: L
        });
        W = W || Q.position.x !== q.x || Q.position.y !== q.y, Q.position = q, Q.internals.positionAbsolute = oe;
      }
      if (W && (F(l, !0), P && (r || z || !w && B))) {
        const [Z, Q] = lf({
          nodeId: w,
          dragItems: l,
          nodeLookup: A
        });
        r == null || r(P, l, Z, Q), z == null || z(P, Z, Q), w || B == null || B(P, Q);
      }
    }
    async function C() {
      if (!f)
        return;
      const { transform: b, panBy: k, autoPanSpeed: P, autoPanOnNodeDrag: A } = t();
      if (!A) {
        c = !1, cancelAnimationFrame(s);
        return;
      }
      const [O, _] = oE(u, f, P);
      (O !== 0 || _ !== 0) && (i.x = (i.x ?? 0) - O / b[2], i.y = (i.y ?? 0) - _ / b[2], await k({ x: O, y: _ }) && T(i, null)), s = requestAnimationFrame(C);
    }
    function R(b) {
      var W;
      const { nodeLookup: k, multiSelectionActive: P, nodesDraggable: A, transform: O, snapGrid: _, snapToGrid: $, selectNodesOnDrag: D, onNodeDragStart: z, onSelectionDragStart: B, unselectNodesAndEdges: L } = t();
      d = !0, (!D || !v) && !P && w && ((W = k.get(w)) != null && W.selected || L()), v && D && w && (e == null || e(w));
      const F = oa(b.sourceEvent, { transform: O, snapGrid: _, snapToGrid: $, containerBounds: f });
      if (i = F, l = g3(k, A, F, w), l.size > 0 && (n || z || !w && B)) {
        const [U, Z] = lf({
          nodeId: w,
          dragItems: l,
          nodeLookup: k
        });
        n == null || n(b.sourceEvent, l, U, Z), z == null || z(b.sourceEvent, U, Z), w || B == null || B(b.sourceEvent, Z);
      }
    }
    const I = A1().clickDistance(S).on("start", (b) => {
      const { domNode: k, nodeDragThreshold: P, transform: A, snapGrid: O, snapToGrid: _ } = t();
      f = (k == null ? void 0 : k.getBoundingClientRect()) || null, h = !1, P === 0 && R(b), i = oa(b.sourceEvent, { transform: A, snapGrid: O, snapToGrid: _, containerBounds: f }), u = Jr(b.sourceEvent, f);
    }).on("drag", (b) => {
      const { autoPanOnNodeDrag: k, transform: P, snapGrid: A, snapToGrid: O, nodeDragThreshold: _, nodeLookup: $ } = t(), D = oa(b.sourceEvent, { transform: P, snapGrid: A, snapToGrid: O, containerBounds: f });
      if ((b.sourceEvent.type === "touchmove" && b.sourceEvent.touches.length > 1 || // if user deletes a node while dragging, we need to abort the drag to prevent errors
      w && !$.has(w)) && (h = !0), !h) {
        if (!c && k && d && (c = !0, C()), !d) {
          const z = D.xSnapped - (i.x ?? 0), B = D.ySnapped - (i.y ?? 0);
          Math.sqrt(z * z + B * B) > _ && R(b);
        }
        (i.x !== D.xSnapped || i.y !== D.ySnapped) && l && d && (u = Jr(b.sourceEvent, f), T(D, b.sourceEvent));
      }
    }).on("end", (b) => {
      if (!(!d || h) && (c = !1, d = !1, cancelAnimationFrame(s), l.size > 0)) {
        const { nodeLookup: k, updateNodePositions: P, onNodeDragStop: A, onSelectionDragStop: O } = t();
        if (P(l, !1), o || A || !w && O) {
          const [_, $] = lf({
            nodeId: w,
            dragItems: l,
            nodeLookup: k,
            dragging: !1
          });
          o == null || o(b.sourceEvent, l, _, $), A == null || A(b.sourceEvent, _, $), w || O == null || O(b.sourceEvent, $);
        }
      }
    }).filter((b) => {
      const k = b.target;
      return !b.button && (!y || !u0(k, `.${y}`, E)) && (!x || u0(k, x, E));
    });
    p.call(I);
  }
  function m() {
    p == null || p.on(".drag", null);
  }
  return {
    update: g,
    destroy: m
  };
}
function b3(e, t, n) {
  const r = [], o = {
    x: e.x - n,
    y: e.y - n,
    width: n * 2,
    height: n * 2
  };
  for (const i of t.values())
    Pa(o, rs(i)) > 0 && r.push(i);
  return r;
}
const v3 = 250;
function x3(e, t, n, r) {
  var l, c;
  let o = [], i = 1 / 0;
  const s = b3(e, n, t + v3);
  for (const u of s) {
    const f = [...((l = u.internals.handleBounds) == null ? void 0 : l.source) ?? [], ...((c = u.internals.handleBounds) == null ? void 0 : c.target) ?? []];
    for (const d of f) {
      if (r.nodeId === d.nodeId && r.type === d.type && r.id === d.id)
        continue;
      const { x: p, y: h } = Ia(u, d, d.position, !0), g = Math.sqrt(Math.pow(p - e.x, 2) + Math.pow(h - e.y, 2));
      g > t || (g < i ? (o = [{ ...d, x: p, y: h }], i = g) : g === i && o.push({ ...d, x: p, y: h }));
    }
  }
  if (!o.length)
    return null;
  if (o.length > 1) {
    const u = r.type === "source" ? "target" : "source";
    return o.find((f) => f.type === u) ?? o[0];
  }
  return o[0];
}
function vE(e, t, n, r, o, i = !1) {
  var u, f, d;
  const s = r.get(e);
  if (!s)
    return null;
  const l = o === "strict" ? (u = s.internals.handleBounds) == null ? void 0 : u[t] : [...((f = s.internals.handleBounds) == null ? void 0 : f.source) ?? [], ...((d = s.internals.handleBounds) == null ? void 0 : d.target) ?? []], c = (n ? l == null ? void 0 : l.find((p) => p.id === n) : l == null ? void 0 : l[0]) ?? null;
  return c && i ? { ...c, ...Ia(s, c, c.position, !0) } : c;
}
function xE(e, t) {
  return e || (t != null && t.classList.contains("target") ? "target" : t != null && t.classList.contains("source") ? "source" : null);
}
function w3(e, t) {
  let n = null;
  return t ? n = !0 : e && !t && (n = !1), n;
}
const wE = () => !0;
function S3(e, { connectionMode: t, connectionRadius: n, handleId: r, nodeId: o, edgeUpdaterType: i, isTarget: s, domNode: l, nodeLookup: c, lib: u, autoPanOnConnect: f, flowId: d, panBy: p, cancelConnection: h, onConnectStart: g, onConnect: m, onConnectEnd: y, isValidConnection: x = wE, onReconnectEnd: E, updateConnection: v, getTransform: w, getFromHandle: S, autoPanSpeed: T }) {
  const C = lE(e.target);
  let R = 0, I;
  const { x: b, y: k } = Jr(e), P = C == null ? void 0 : C.elementFromPoint(b, k), A = xE(i, P), O = l == null ? void 0 : l.getBoundingClientRect();
  if (!O || !A)
    return;
  const _ = vE(o, A, r, c, t);
  if (!_)
    return;
  let $ = Jr(e, O), D = !1, z = null, B = !1, L = null;
  function F() {
    if (!f || !O)
      return;
    const [oe, G] = oE($, O, T);
    p({ x: oe, y: G }), R = requestAnimationFrame(F);
  }
  const W = {
    ..._,
    nodeId: o,
    type: A,
    position: _.position
  }, U = c.get(o), Q = {
    inProgress: !0,
    isValid: null,
    from: Ia(U, W, De.Left, !0),
    fromHandle: W,
    fromPosition: W.position,
    fromNode: U,
    to: $,
    toHandle: null,
    toPosition: Qb[W.position],
    toNode: null
  };
  v(Q);
  let ee = Q;
  g == null || g(e, { nodeId: o, handleId: r, handleType: A });
  function te(oe) {
    if (!S() || !W) {
      q(oe);
      return;
    }
    const G = w();
    $ = Jr(oe, O), I = x3(il($, G, !1, [1, 1]), n, c, W), D || (F(), D = !0);
    const ne = SE(oe, {
      handle: I,
      connectionMode: t,
      fromNodeId: o,
      fromHandleId: r,
      fromType: s ? "target" : "source",
      isValidConnection: x,
      doc: C,
      lib: u,
      flowId: d,
      nodeLookup: c
    });
    L = ne.handleDomNode, z = ne.connection, B = w3(!!I, ne.isValid);
    const j = {
      // from stays the same
      ...ee,
      isValid: B,
      to: ne.toHandle && B ? qc({ x: ne.toHandle.x, y: ne.toHandle.y }, G) : $,
      toHandle: ne.toHandle,
      toPosition: B && ne.toHandle ? ne.toHandle.position : Qb[W.position],
      toNode: ne.toHandle ? c.get(ne.toHandle.nodeId) : null
    };
    B && I && ee.toHandle && j.toHandle && ee.toHandle.type === j.toHandle.type && ee.toHandle.nodeId === j.toHandle.nodeId && ee.toHandle.id === j.toHandle.id && ee.to.x === j.to.x && ee.to.y === j.to.y || (v(j), ee = j);
  }
  function q(oe) {
    (I || L) && z && B && (m == null || m(z));
    const { inProgress: G, ...ne } = ee, j = {
      ...ne,
      toPosition: ee.toHandle ? ee.toPosition : null
    };
    y == null || y(oe, j), i && (E == null || E(oe, j)), h(), cancelAnimationFrame(R), D = !1, B = !1, z = null, L = null, C.removeEventListener("mousemove", te), C.removeEventListener("mouseup", q), C.removeEventListener("touchmove", te), C.removeEventListener("touchend", q);
  }
  C.addEventListener("mousemove", te), C.addEventListener("mouseup", q), C.addEventListener("touchmove", te), C.addEventListener("touchend", q);
}
function SE(e, { handle: t, connectionMode: n, fromNodeId: r, fromHandleId: o, fromType: i, doc: s, lib: l, flowId: c, isValidConnection: u = wE, nodeLookup: f }) {
  const d = i === "target", p = t ? s.querySelector(`.${l}-flow__handle[data-id="${c}-${t == null ? void 0 : t.nodeId}-${t == null ? void 0 : t.id}-${t == null ? void 0 : t.type}"]`) : null, { x: h, y: g } = Jr(e), m = s.elementFromPoint(h, g), y = m != null && m.classList.contains(`${l}-flow__handle`) ? m : p, x = {
    handleDomNode: y,
    isValid: !1,
    connection: null,
    toHandle: null
  };
  if (y) {
    const E = xE(void 0, y), v = y.getAttribute("data-nodeid"), w = y.getAttribute("data-handleid"), S = y.classList.contains("connectable"), T = y.classList.contains("connectableend");
    if (!v || !E)
      return x;
    const C = {
      source: d ? v : r,
      sourceHandle: d ? w : o,
      target: d ? r : v,
      targetHandle: d ? o : w
    };
    x.connection = C;
    const I = S && T && (n === es.Strict ? d && E === "source" || !d && E === "target" : v !== r || w !== o);
    x.isValid = I && u(C), x.toHandle = vE(v, E, w, f, n, !0);
  }
  return x;
}
const kp = {
  onPointerDown: S3,
  isValid: SE
};
function E3({ domNode: e, panZoom: t, getTransform: n, getViewScale: r }) {
  const o = Fn(e);
  function i({ translateExtent: l, width: c, height: u, zoomStep: f = 10, pannable: d = !0, zoomable: p = !0, inversePan: h = !1 }) {
    const g = (v) => {
      const w = n();
      if (v.sourceEvent.type !== "wheel" || !t)
        return;
      const S = -v.sourceEvent.deltaY * (v.sourceEvent.deltaMode === 1 ? 0.05 : v.sourceEvent.deltaMode ? 1 : 2e-3) * f, T = w[2] * Math.pow(2, S);
      t.scaleTo(T);
    };
    let m = [0, 0];
    const y = (v) => {
      (v.sourceEvent.type === "mousedown" || v.sourceEvent.type === "touchstart") && (m = [
        v.sourceEvent.clientX ?? v.sourceEvent.touches[0].clientX,
        v.sourceEvent.clientY ?? v.sourceEvent.touches[0].clientY
      ]);
    }, x = (v) => {
      const w = n();
      if (v.sourceEvent.type !== "mousemove" && v.sourceEvent.type !== "touchmove" || !t)
        return;
      const S = [
        v.sourceEvent.clientX ?? v.sourceEvent.touches[0].clientX,
        v.sourceEvent.clientY ?? v.sourceEvent.touches[0].clientY
      ], T = [S[0] - m[0], S[1] - m[1]];
      m = S;
      const C = r() * Math.max(w[2], Math.log(w[2])) * (h ? -1 : 1), R = {
        x: w[0] - T[0] * C,
        y: w[1] - T[1] * C
      }, I = [
        [0, 0],
        [c, u]
      ];
      t.setViewportConstrained({
        x: R.x,
        y: R.y,
        zoom: w[2]
      }, I, l);
    }, E = X1().on("start", y).on("zoom", d ? x : null).on("zoom.wheel", p ? g : null);
    o.call(E, {});
  }
  function s() {
    o.on("zoom", null);
  }
  return {
    update: i,
    destroy: s,
    pointer: lr
  };
}
const T3 = (e, t) => e.x !== t.x || e.y !== t.y || e.zoom !== t.k, sd = (e) => ({
  x: e.x,
  y: e.y,
  zoom: e.k
}), cf = ({ x: e, y: t, zoom: n }) => nd.translate(e, t).scale(n), $i = (e, t) => e.target.closest(`.${t}`), EE = (e, t) => t === 2 && Array.isArray(e) && e.includes(2), uf = (e, t = 0, n = () => {
}) => {
  const r = typeof t == "number" && t > 0;
  return r || n(), r ? e.transition().duration(t).on("end", n) : e;
}, TE = (e) => {
  const t = e.ctrlKey && Yc() ? 10 : 1;
  return -e.deltaY * (e.deltaMode === 1 ? 0.05 : e.deltaMode ? 1 : 2e-3) * t;
};
function C3({ zoomPanValues: e, noWheelClassName: t, d3Selection: n, d3Zoom: r, panOnScrollMode: o, panOnScrollSpeed: i, zoomOnPinch: s, onPanZoomStart: l, onPanZoom: c, onPanZoomEnd: u }) {
  return (f) => {
    if ($i(f, t))
      return !1;
    f.preventDefault(), f.stopImmediatePropagation();
    const d = n.property("__zoom").k || 1;
    if (f.ctrlKey && s) {
      const y = lr(f), x = TE(f), E = d * Math.pow(2, x);
      r.scaleTo(n, E, y, f);
      return;
    }
    const p = f.deltaMode === 1 ? 20 : 1;
    let h = o === Qo.Vertical ? 0 : f.deltaX * p, g = o === Qo.Horizontal ? 0 : f.deltaY * p;
    !Yc() && f.shiftKey && o !== Qo.Vertical && (h = f.deltaY * p, g = 0), r.translateBy(
      n,
      -(h / d) * i,
      -(g / d) * i,
      // @ts-ignore
      { internal: !0 }
    );
    const m = sd(n.property("__zoom"));
    clearTimeout(e.panScrollTimeout), e.isPanScrolling || (e.isPanScrolling = !0, l == null || l(f, m)), e.isPanScrolling && (c == null || c(f, m), e.panScrollTimeout = setTimeout(() => {
      u == null || u(f, m), e.isPanScrolling = !1;
    }, 150));
  };
}
function O3({ noWheelClassName: e, preventScrolling: t, d3ZoomHandler: n }) {
  return function(r, o) {
    const i = r.type === "wheel", s = !t && i && !r.ctrlKey, l = $i(r, e);
    if (r.ctrlKey && i && l && r.preventDefault(), s || l)
      return null;
    r.preventDefault(), n.call(this, r, o);
  };
}
function k3({ zoomPanValues: e, onDraggingChange: t, onPanZoomStart: n }) {
  return (r) => {
    var i, s, l;
    if ((i = r.sourceEvent) != null && i.internal)
      return;
    const o = sd(r.transform);
    e.mouseButton = ((s = r.sourceEvent) == null ? void 0 : s.button) || 0, e.isZoomingOrPanning = !0, e.prevViewport = o, ((l = r.sourceEvent) == null ? void 0 : l.type) === "mousedown" && t(!0), n && (n == null || n(r.sourceEvent, o));
  };
}
function R3({ zoomPanValues: e, panOnDrag: t, onPaneContextMenu: n, onTransformChange: r, onPanZoom: o }) {
  return (i) => {
    var s, l;
    e.usedRightMouseButton = !!(n && EE(t, e.mouseButton ?? 0)), (s = i.sourceEvent) != null && s.sync || r([i.transform.x, i.transform.y, i.transform.k]), o && !((l = i.sourceEvent) != null && l.internal) && (o == null || o(i.sourceEvent, sd(i.transform)));
  };
}
function N3({ zoomPanValues: e, panOnDrag: t, panOnScroll: n, onDraggingChange: r, onPanZoomEnd: o, onPaneContextMenu: i }) {
  return (s) => {
    var l;
    if (!((l = s.sourceEvent) != null && l.internal) && (e.isZoomingOrPanning = !1, i && EE(t, e.mouseButton ?? 0) && !e.usedRightMouseButton && s.sourceEvent && i(s.sourceEvent), e.usedRightMouseButton = !1, r(!1), o && T3(e.prevViewport, s.transform))) {
      const c = sd(s.transform);
      e.prevViewport = c, clearTimeout(e.timerId), e.timerId = setTimeout(
        () => {
          o == null || o(s.sourceEvent, c);
        },
        // we need a setTimeout for panOnScroll to supress multiple end events fired during scroll
        n ? 150 : 0
      );
    }
  };
}
function $3({ zoomActivationKeyPressed: e, zoomOnScroll: t, zoomOnPinch: n, panOnDrag: r, panOnScroll: o, zoomOnDoubleClick: i, userSelectionActive: s, noWheelClassName: l, noPanClassName: c, lib: u }) {
  return (f) => {
    var g;
    const d = e || t, p = n && f.ctrlKey;
    if (f.button === 1 && f.type === "mousedown" && ($i(f, `${u}-flow__node`) || $i(f, `${u}-flow__edge`)))
      return !0;
    if (!r && !d && !o && !i && !n || s || $i(f, l) && f.type === "wheel" || $i(f, c) && (f.type !== "wheel" || o && f.type === "wheel" && !e) || !n && f.ctrlKey && f.type === "wheel")
      return !1;
    if (!n && f.type === "touchstart" && ((g = f.touches) == null ? void 0 : g.length) > 1)
      return f.preventDefault(), !1;
    if (!d && !o && !p && f.type === "wheel" || !r && (f.type === "mousedown" || f.type === "touchstart") || Array.isArray(r) && !r.includes(f.button) && f.type === "mousedown")
      return !1;
    const h = Array.isArray(r) && r.includes(f.button) || !f.button || f.button <= 1;
    return (!f.ctrlKey || f.type === "wheel") && h;
  };
}
function P3({ domNode: e, minZoom: t, maxZoom: n, paneClickDistance: r, translateExtent: o, viewport: i, onPanZoom: s, onPanZoomStart: l, onPanZoomEnd: c, onDraggingChange: u }) {
  const f = {
    isZoomingOrPanning: !1,
    usedRightMouseButton: !1,
    prevViewport: { x: 0, y: 0, zoom: 0 },
    mouseButton: 0,
    timerId: void 0,
    panScrollTimeout: void 0,
    isPanScrolling: !1
  }, d = e.getBoundingClientRect(), p = X1().clickDistance(!dr(r) || r < 0 ? 0 : r).scaleExtent([t, n]).translateExtent(o), h = Fn(e).call(p);
  v({
    x: i.x,
    y: i.y,
    zoom: ns(i.zoom, t, n)
  }, [
    [0, 0],
    [d.width, d.height]
  ], o);
  const g = h.on("wheel.zoom"), m = h.on("dblclick.zoom");
  p.wheelDelta(TE);
  function y(P, A) {
    return h ? new Promise((O) => {
      p == null || p.transform(uf(h, A == null ? void 0 : A.duration, () => O(!0)), P);
    }) : Promise.resolve(!1);
  }
  function x({ noWheelClassName: P, noPanClassName: A, onPaneContextMenu: O, userSelectionActive: _, panOnScroll: $, panOnDrag: D, panOnScrollMode: z, panOnScrollSpeed: B, preventScrolling: L, zoomOnPinch: F, zoomOnScroll: W, zoomOnDoubleClick: U, zoomActivationKeyPressed: Z, lib: Q, onTransformChange: ee }) {
    _ && !f.isZoomingOrPanning && E();
    const q = $ && !Z && !_ ? C3({
      zoomPanValues: f,
      noWheelClassName: P,
      d3Selection: h,
      d3Zoom: p,
      panOnScrollMode: z,
      panOnScrollSpeed: B,
      zoomOnPinch: F,
      onPanZoomStart: l,
      onPanZoom: s,
      onPanZoomEnd: c
    }) : O3({
      noWheelClassName: P,
      preventScrolling: L,
      d3ZoomHandler: g
    });
    if (h.on("wheel.zoom", q, { passive: !1 }), !_) {
      const G = k3({
        zoomPanValues: f,
        onDraggingChange: u,
        onPanZoomStart: l
      });
      p.on("start", G);
      const ne = R3({
        zoomPanValues: f,
        panOnDrag: D,
        onPaneContextMenu: !!O,
        onPanZoom: s,
        onTransformChange: ee
      });
      p.on("zoom", ne);
      const j = N3({
        zoomPanValues: f,
        panOnDrag: D,
        panOnScroll: $,
        onPaneContextMenu: O,
        onPanZoomEnd: c,
        onDraggingChange: u
      });
      p.on("end", j);
    }
    const oe = $3({
      zoomActivationKeyPressed: Z,
      panOnDrag: D,
      zoomOnScroll: W,
      panOnScroll: $,
      zoomOnDoubleClick: U,
      zoomOnPinch: F,
      userSelectionActive: _,
      noPanClassName: A,
      noWheelClassName: P,
      lib: Q
    });
    p.filter(oe), U ? h.on("dblclick.zoom", m) : h.on("dblclick.zoom", null);
  }
  function E() {
    p.on("zoom", null);
  }
  async function v(P, A, O) {
    const _ = cf(P), $ = p == null ? void 0 : p.constrain()(_, A, O);
    return $ && await y($), new Promise((D) => D($));
  }
  async function w(P, A) {
    const O = cf(P);
    return await y(O, A), new Promise((_) => _(O));
  }
  function S(P) {
    if (h) {
      const A = cf(P), O = h.property("__zoom");
      (O.k !== P.zoom || O.x !== P.x || O.y !== P.y) && (p == null || p.transform(h, A, null, { sync: !0 }));
    }
  }
  function T() {
    const P = h ? G1(h.node()) : { x: 0, y: 0, k: 1 };
    return { x: P.x, y: P.y, zoom: P.k };
  }
  function C(P, A) {
    return h ? new Promise((O) => {
      p == null || p.scaleTo(uf(h, A == null ? void 0 : A.duration, () => O(!0)), P);
    }) : Promise.resolve(!1);
  }
  function R(P, A) {
    return h ? new Promise((O) => {
      p == null || p.scaleBy(uf(h, A == null ? void 0 : A.duration, () => O(!0)), P);
    }) : Promise.resolve(!1);
  }
  function I(P) {
    p == null || p.scaleExtent(P);
  }
  function b(P) {
    p == null || p.translateExtent(P);
  }
  function k(P) {
    const A = !dr(P) || P < 0 ? 0 : P;
    p == null || p.clickDistance(A);
  }
  return {
    update: x,
    destroy: E,
    setViewport: w,
    setViewportConstrained: v,
    getViewport: T,
    scaleTo: C,
    scaleBy: R,
    setScaleExtent: I,
    setTranslateExtent: b,
    syncViewport: S,
    setClickDistance: k
  };
}
var ia;
(function(e) {
  e.Line = "line", e.Handle = "handle";
})(ia || (ia = {}));
function I3({ width: e, prevWidth: t, height: n, prevHeight: r, affectsX: o, affectsY: i }) {
  const s = e - t, l = n - r, c = [s > 0 ? 1 : s < 0 ? -1 : 0, l > 0 ? 1 : l < 0 ? -1 : 0];
  return s && o && (c[0] = c[0] * -1), l && i && (c[1] = c[1] * -1), c;
}
function _3(e) {
  const t = e.includes("right") || e.includes("left"), n = e.includes("bottom") || e.includes("top"), r = e.includes("left"), o = e.includes("top");
  return {
    isHorizontal: t,
    isVertical: n,
    affectsX: r,
    affectsY: o
  };
}
function yo(e, t) {
  return Math.max(0, t - e);
}
function bo(e, t) {
  return Math.max(0, e - t);
}
function Fl(e, t, n) {
  return Math.max(0, t - e, e - n);
}
function d0(e, t) {
  return e ? !t : t;
}
function M3(e, t, n, r, o, i, s, l) {
  let { affectsX: c, affectsY: u } = t;
  const { isHorizontal: f, isVertical: d } = t, p = f && d, { xSnapped: h, ySnapped: g } = n, { minWidth: m, maxWidth: y, minHeight: x, maxHeight: E } = r, { x: v, y: w, width: S, height: T, aspectRatio: C } = e;
  let R = Math.floor(f ? h - e.pointerX : 0), I = Math.floor(d ? g - e.pointerY : 0);
  const b = S + (c ? -R : R), k = T + (u ? -I : I), P = -i[0] * S, A = -i[1] * T;
  let O = Fl(b, m, y), _ = Fl(k, x, E);
  if (s) {
    let z = 0, B = 0;
    c && R < 0 ? z = yo(v + R + P, s[0][0]) : !c && R > 0 && (z = bo(v + b + P, s[1][0])), u && I < 0 ? B = yo(w + I + A, s[0][1]) : !u && I > 0 && (B = bo(w + k + A, s[1][1])), O = Math.max(O, z), _ = Math.max(_, B);
  }
  if (l) {
    let z = 0, B = 0;
    c && R > 0 ? z = bo(v + R, l[0][0]) : !c && R < 0 && (z = yo(v + b, l[1][0])), u && I > 0 ? B = bo(w + I, l[0][1]) : !u && I < 0 && (B = yo(w + k, l[1][1])), O = Math.max(O, z), _ = Math.max(_, B);
  }
  if (o) {
    if (f) {
      const z = Fl(b / C, x, E) * C;
      if (O = Math.max(O, z), s) {
        let B = 0;
        !c && !u || c && !u && p ? B = bo(w + A + b / C, s[1][1]) * C : B = yo(w + A + (c ? R : -R) / C, s[0][1]) * C, O = Math.max(O, B);
      }
      if (l) {
        let B = 0;
        !c && !u || c && !u && p ? B = yo(w + b / C, l[1][1]) * C : B = bo(w + (c ? R : -R) / C, l[0][1]) * C, O = Math.max(O, B);
      }
    }
    if (d) {
      const z = Fl(k * C, m, y) / C;
      if (_ = Math.max(_, z), s) {
        let B = 0;
        !c && !u || u && !c && p ? B = bo(v + k * C + P, s[1][0]) / C : B = yo(v + (u ? I : -I) * C + P, s[0][0]) / C, _ = Math.max(_, B);
      }
      if (l) {
        let B = 0;
        !c && !u || u && !c && p ? B = yo(v + k * C, l[1][0]) / C : B = bo(v + (u ? I : -I) * C, l[0][0]) / C, _ = Math.max(_, B);
      }
    }
  }
  I = I + (I < 0 ? _ : -_), R = R + (R < 0 ? O : -O), o && (p ? b > k * C ? I = (d0(c, u) ? -R : R) / C : R = (d0(c, u) ? -I : I) * C : f ? (I = R / C, u = c) : (R = I * C, c = u));
  const $ = c ? v + R : v, D = u ? w + I : w;
  return {
    width: S + (c ? -R : R),
    height: T + (u ? -I : I),
    x: i[0] * R * (c ? -1 : 1) + $,
    y: i[1] * I * (u ? -1 : 1) + D
  };
}
const CE = { width: 0, height: 0, x: 0, y: 0 }, A3 = {
  ...CE,
  pointerX: 0,
  pointerY: 0,
  aspectRatio: 1
};
function D3(e) {
  return [
    [0, 0],
    [e.measured.width, e.measured.height]
  ];
}
function B3(e, t, n) {
  const r = t.position.x + e.position.x, o = t.position.y + e.position.y, i = e.measured.width ?? 0, s = e.measured.height ?? 0, l = n[0] * i, c = n[1] * s;
  return [
    [r - l, o - c],
    [r + i - l, o + s - c]
  ];
}
function L3({ domNode: e, nodeId: t, getStoreItems: n, onChange: r, onEnd: o }) {
  const i = Fn(e);
  function s({ controlPosition: c, boundaries: u, keepAspectRatio: f, resizeDirection: d, onResizeStart: p, onResize: h, onResizeEnd: g, shouldResize: m }) {
    let y = { ...CE }, x = { ...A3 };
    const E = _3(c);
    let v, w = null, S = [], T, C, R;
    const I = A1().on("start", (b) => {
      const { nodeLookup: k, transform: P, snapGrid: A, snapToGrid: O, nodeOrigin: _, paneDomNode: $ } = n();
      if (v = k.get(t), !v)
        return;
      w = ($ == null ? void 0 : $.getBoundingClientRect()) ?? null;
      const { xSnapped: D, ySnapped: z } = oa(b.sourceEvent, {
        transform: P,
        snapGrid: A,
        snapToGrid: O,
        containerBounds: w
      });
      y = {
        width: v.measured.width ?? 0,
        height: v.measured.height ?? 0,
        x: v.position.x ?? 0,
        y: v.position.y ?? 0
      }, x = {
        ...y,
        pointerX: D,
        pointerY: z,
        aspectRatio: y.width / y.height
      }, T = void 0, v.parentId && (v.extent === "parent" || v.expandParent) && (T = k.get(v.parentId), C = T && v.extent === "parent" ? D3(T) : void 0), S = [], R = void 0;
      for (const [B, L] of k)
        if (L.parentId === t && (S.push({
          id: B,
          position: { ...L.position },
          extent: L.extent
        }), L.extent === "parent" || L.expandParent)) {
          const F = B3(L, v, L.origin ?? _);
          R ? R = [
            [Math.min(F[0][0], R[0][0]), Math.min(F[0][1], R[0][1])],
            [Math.max(F[1][0], R[1][0]), Math.max(F[1][1], R[1][1])]
          ] : R = F;
        }
      p == null || p(b, { ...y });
    }).on("drag", (b) => {
      const { transform: k, snapGrid: P, snapToGrid: A, nodeOrigin: O } = n(), _ = oa(b.sourceEvent, {
        transform: k,
        snapGrid: P,
        snapToGrid: A,
        containerBounds: w
      }), $ = [];
      if (!v)
        return;
      const { x: D, y: z, width: B, height: L } = y, F = {}, W = v.origin ?? O, { width: U, height: Z, x: Q, y: ee } = M3(x, E, _, u, f, W, C, R), te = U !== B, q = Z !== L, oe = Q !== D && te, G = ee !== z && q;
      if (!oe && !G && !te && !q)
        return;
      if ((oe || G || W[0] === 1 || W[1] === 1) && (F.x = oe ? Q : y.x, F.y = G ? ee : y.y, y.x = F.x, y.y = F.y, S.length > 0)) {
        const ce = Q - D, be = ee - z;
        for (const Pe of S)
          Pe.position = {
            x: Pe.position.x - ce + W[0] * (U - B),
            y: Pe.position.y - be + W[1] * (Z - L)
          }, $.push(Pe);
      }
      if ((te || q) && (F.width = te && (!d || d === "horizontal") ? U : y.width, F.height = q && (!d || d === "vertical") ? Z : y.height, y.width = F.width, y.height = F.height), T && v.expandParent) {
        const ce = W[0] * (F.width ?? 0);
        F.x && F.x < ce && (y.x = ce, x.x = x.x - (F.x - ce));
        const be = W[1] * (F.height ?? 0);
        F.y && F.y < be && (y.y = be, x.y = x.y - (F.y - be));
      }
      const ne = I3({
        width: y.width,
        prevWidth: B,
        height: y.height,
        prevHeight: L,
        affectsX: E.affectsX,
        affectsY: E.affectsY
      }), j = { ...y, direction: ne };
      (m == null ? void 0 : m(b, j)) !== !1 && (h == null || h(b, j), r(F, $));
    }).on("end", (b) => {
      g == null || g(b, { ...y }), o == null || o({ ...y });
    });
    i.call(I);
  }
  function l() {
    i.on(".drag", null);
  }
  return {
    update: s,
    destroy: l
  };
}
var zl = { exports: {} }, df = {}, Vl = { exports: {} }, ff = {};
/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f0;
function F3() {
  if (f0) return ff;
  f0 = 1;
  var e = Y;
  function t(d, p) {
    return d === p && (d !== 0 || 1 / d === 1 / p) || d !== d && p !== p;
  }
  var n = typeof Object.is == "function" ? Object.is : t, r = e.useState, o = e.useEffect, i = e.useLayoutEffect, s = e.useDebugValue;
  function l(d, p) {
    var h = p(), g = r({ inst: { value: h, getSnapshot: p } }), m = g[0].inst, y = g[1];
    return i(
      function() {
        m.value = h, m.getSnapshot = p, c(m) && y({ inst: m });
      },
      [d, h, p]
    ), o(
      function() {
        return c(m) && y({ inst: m }), d(function() {
          c(m) && y({ inst: m });
        });
      },
      [d]
    ), s(h), h;
  }
  function c(d) {
    var p = d.getSnapshot;
    d = d.value;
    try {
      var h = p();
      return !n(d, h);
    } catch {
      return !0;
    }
  }
  function u(d, p) {
    return p();
  }
  var f = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? u : l;
  return ff.useSyncExternalStore = e.useSyncExternalStore !== void 0 ? e.useSyncExternalStore : f, ff;
}
var pf = {};
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var p0;
function z3() {
  return p0 || (p0 = 1, process.env.NODE_ENV !== "production" && function() {
    function e(h, g) {
      return h === g && (h !== 0 || 1 / h === 1 / g) || h !== h && g !== g;
    }
    function t(h, g) {
      f || o.startTransition === void 0 || (f = !0, console.error(
        "You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."
      ));
      var m = g();
      if (!d) {
        var y = g();
        i(m, y) || (console.error(
          "The result of getSnapshot should be cached to avoid an infinite loop"
        ), d = !0);
      }
      y = s({
        inst: { value: m, getSnapshot: g }
      });
      var x = y[0].inst, E = y[1];
      return c(
        function() {
          x.value = m, x.getSnapshot = g, n(x) && E({ inst: x });
        },
        [h, m, g]
      ), l(
        function() {
          return n(x) && E({ inst: x }), h(function() {
            n(x) && E({ inst: x });
          });
        },
        [h]
      ), u(m), m;
    }
    function n(h) {
      var g = h.getSnapshot;
      h = h.value;
      try {
        var m = g();
        return !i(h, m);
      } catch {
        return !0;
      }
    }
    function r(h, g) {
      return g();
    }
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var o = Y, i = typeof Object.is == "function" ? Object.is : e, s = o.useState, l = o.useEffect, c = o.useLayoutEffect, u = o.useDebugValue, f = !1, d = !1, p = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? r : t;
    pf.useSyncExternalStore = o.useSyncExternalStore !== void 0 ? o.useSyncExternalStore : p, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
  }()), pf;
}
var h0;
function OE() {
  return h0 || (h0 = 1, process.env.NODE_ENV === "production" ? Vl.exports = F3() : Vl.exports = z3()), Vl.exports;
}
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var m0;
function V3() {
  if (m0) return df;
  m0 = 1;
  var e = Y, t = OE();
  function n(u, f) {
    return u === f && (u !== 0 || 1 / u === 1 / f) || u !== u && f !== f;
  }
  var r = typeof Object.is == "function" ? Object.is : n, o = t.useSyncExternalStore, i = e.useRef, s = e.useEffect, l = e.useMemo, c = e.useDebugValue;
  return df.useSyncExternalStoreWithSelector = function(u, f, d, p, h) {
    var g = i(null);
    if (g.current === null) {
      var m = { hasValue: !1, value: null };
      g.current = m;
    } else m = g.current;
    g = l(
      function() {
        function x(T) {
          if (!E) {
            if (E = !0, v = T, T = p(T), h !== void 0 && m.hasValue) {
              var C = m.value;
              if (h(C, T))
                return w = C;
            }
            return w = T;
          }
          if (C = w, r(v, T)) return C;
          var R = p(T);
          return h !== void 0 && h(C, R) ? (v = T, C) : (v = T, w = R);
        }
        var E = !1, v, w, S = d === void 0 ? null : d;
        return [
          function() {
            return x(f());
          },
          S === null ? void 0 : function() {
            return x(S());
          }
        ];
      },
      [f, d, p, h]
    );
    var y = o(u, g[0], g[1]);
    return s(
      function() {
        m.hasValue = !0, m.value = y;
      },
      [y]
    ), c(y), y;
  }, df;
}
var hf = {};
/**
 * @license React
 * use-sync-external-store-shim/with-selector.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var g0;
function j3() {
  return g0 || (g0 = 1, process.env.NODE_ENV !== "production" && function() {
    function e(u, f) {
      return u === f && (u !== 0 || 1 / u === 1 / f) || u !== u && f !== f;
    }
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var t = Y, n = OE(), r = typeof Object.is == "function" ? Object.is : e, o = n.useSyncExternalStore, i = t.useRef, s = t.useEffect, l = t.useMemo, c = t.useDebugValue;
    hf.useSyncExternalStoreWithSelector = function(u, f, d, p, h) {
      var g = i(null);
      if (g.current === null) {
        var m = { hasValue: !1, value: null };
        g.current = m;
      } else m = g.current;
      g = l(
        function() {
          function x(T) {
            if (!E) {
              if (E = !0, v = T, T = p(T), h !== void 0 && m.hasValue) {
                var C = m.value;
                if (h(C, T))
                  return w = C;
              }
              return w = T;
            }
            if (C = w, r(v, T))
              return C;
            var R = p(T);
            return h !== void 0 && h(C, R) ? (v = T, C) : (v = T, w = R);
          }
          var E = !1, v, w, S = d === void 0 ? null : d;
          return [
            function() {
              return x(f());
            },
            S === null ? void 0 : function() {
              return x(S());
            }
          ];
        },
        [f, d, p, h]
      );
      var y = o(u, g[0], g[1]);
      return s(
        function() {
          m.hasValue = !0, m.value = y;
        },
        [y]
      ), c(y), y;
    }, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
  }()), hf;
}
var y0;
function H3() {
  return y0 || (y0 = 1, process.env.NODE_ENV === "production" ? zl.exports = V3() : zl.exports = j3()), zl.exports;
}
var W3 = H3();
const U3 = /* @__PURE__ */ Q0(W3), q3 = {}, b0 = (e) => {
  let t;
  const n = /* @__PURE__ */ new Set(), r = (f, d) => {
    const p = typeof f == "function" ? f(t) : f;
    if (!Object.is(p, t)) {
      const h = t;
      t = d ?? (typeof p != "object" || p === null) ? p : Object.assign({}, t, p), n.forEach((g) => g(t, h));
    }
  }, o = () => t, c = { setState: r, getState: o, getInitialState: () => u, subscribe: (f) => (n.add(f), () => n.delete(f)), destroy: () => {
    (q3 ? "production" : void 0) !== "production" && console.warn(
      "[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."
    ), n.clear();
  } }, u = t = e(r, o, c);
  return c;
}, Y3 = (e) => e ? b0(e) : b0, { useDebugValue: K3 } = Y, { useSyncExternalStoreWithSelector: G3 } = U3, X3 = (e) => e;
function kE(e, t = X3, n) {
  const r = G3(
    e.subscribe,
    e.getState,
    e.getServerState || e.getInitialState,
    t,
    n
  );
  return K3(r), r;
}
const v0 = (e, t) => {
  const n = Y3(e), r = (o, i = t) => kE(n, o, i);
  return Object.assign(r, n), r;
}, Z3 = (e, t) => e ? v0(e, t) : v0;
function Mt(e, t) {
  if (Object.is(e, t))
    return !0;
  if (typeof e != "object" || e === null || typeof t != "object" || t === null)
    return !1;
  if (e instanceof Map && t instanceof Map) {
    if (e.size !== t.size) return !1;
    for (const [r, o] of e)
      if (!Object.is(o, t.get(r)))
        return !1;
    return !0;
  }
  if (e instanceof Set && t instanceof Set) {
    if (e.size !== t.size) return !1;
    for (const r of e)
      if (!t.has(r))
        return !1;
    return !0;
  }
  const n = Object.keys(e);
  if (n.length !== Object.keys(t).length)
    return !1;
  for (const r of n)
    if (!Object.prototype.hasOwnProperty.call(t, r) || !Object.is(e[r], t[r]))
      return !1;
  return !0;
}
const ad = Da(null), Q3 = ad.Provider, RE = Sn.error001();
function Ze(e, t) {
  const n = Ro(ad);
  if (n === null)
    throw new Error(RE);
  return kE(n, e, t);
}
function $t() {
  const e = Ro(ad);
  if (e === null)
    throw new Error(RE);
  return Ye(() => ({
    getState: e.getState,
    setState: e.setState,
    subscribe: e.subscribe
  }), [e]);
}
const x0 = { display: "none" }, J3 = {
  position: "absolute",
  width: 1,
  height: 1,
  margin: -1,
  border: 0,
  padding: 0,
  overflow: "hidden",
  clip: "rect(0px, 0px, 0px, 0px)",
  clipPath: "inset(100%)"
}, NE = "react-flow__node-desc", $E = "react-flow__edge-desc", eH = "react-flow__aria-live", tH = (e) => e.ariaLiveMessage;
function nH({ rfId: e }) {
  const t = Ze(tH);
  return N("div", { id: `${eH}-${e}`, "aria-live": "assertive", "aria-atomic": "true", style: J3, children: t });
}
function rH({ rfId: e, disableKeyboardA11y: t }) {
  return we(rr, { children: [we("div", { id: `${NE}-${e}`, style: x0, children: ["Press enter or space to select a node.", !t && "You can then use the arrow keys to move the node around.", " Press delete to remove it and escape to cancel.", " "] }), N("div", { id: `${$E}-${e}`, style: x0, children: "Press enter or space to select an edge. You can then press delete to remove it or escape to cancel." }), !t && N(nH, { rfId: e })] });
}
const oH = (e) => e.userSelectionActive ? "none" : "all", sl = Aa(({ position: e = "top-left", children: t, className: n, style: r, ...o }, i) => {
  const s = Ze(oH), l = `${e}`.split("-");
  return N("div", { className: Xt(["react-flow__panel", n, ...l]), style: { ...r, pointerEvents: s }, ref: i, ...o, children: t });
});
sl.displayName = "Panel";
function iH({ proOptions: e, position: t = "bottom-right" }) {
  return e != null && e.hideAttribution ? null : N(sl, { position: t, className: "react-flow__attribution", "data-message": "Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev", children: N("a", { href: "https://reactflow.dev", target: "_blank", rel: "noopener noreferrer", "aria-label": "React Flow attribution", children: "React Flow" }) });
}
const sH = (e) => {
  const t = [], n = [];
  for (const [, r] of e.nodeLookup)
    r.selected && t.push(r.internals.userNode);
  for (const [, r] of e.edgeLookup)
    r.selected && n.push(r);
  return { selectedNodes: t, selectedEdges: n };
}, jl = (e) => e.id;
function aH(e, t) {
  return Mt(e.selectedNodes.map(jl), t.selectedNodes.map(jl)) && Mt(e.selectedEdges.map(jl), t.selectedEdges.map(jl));
}
function lH({ onSelectionChange: e }) {
  const t = $t(), { selectedNodes: n, selectedEdges: r } = Ze(sH, aH);
  return Xe(() => {
    const o = { nodes: n, edges: r };
    e == null || e(o), t.getState().onSelectionChangeHandlers.forEach((i) => i(o));
  }, [n, r, e]), null;
}
const cH = (e) => !!e.onSelectionChangeHandlers;
function uH({ onSelectionChange: e }) {
  const t = Ze(cH);
  return e || t ? N(lH, { onSelectionChange: e }) : null;
}
const PE = [0, 0], dH = { x: 0, y: 0, zoom: 1 }, fH = [
  "nodes",
  "edges",
  "defaultNodes",
  "defaultEdges",
  "onConnect",
  "onConnectStart",
  "onConnectEnd",
  "onClickConnectStart",
  "onClickConnectEnd",
  "nodesDraggable",
  "nodesConnectable",
  "nodesFocusable",
  "edgesFocusable",
  "edgesReconnectable",
  "elevateNodesOnSelect",
  "elevateEdgesOnSelect",
  "minZoom",
  "maxZoom",
  "nodeExtent",
  "onNodesChange",
  "onEdgesChange",
  "elementsSelectable",
  "connectionMode",
  "snapGrid",
  "snapToGrid",
  "translateExtent",
  "connectOnClick",
  "defaultEdgeOptions",
  "fitView",
  "fitViewOptions",
  "onNodesDelete",
  "onEdgesDelete",
  "onDelete",
  "onNodeDrag",
  "onNodeDragStart",
  "onNodeDragStop",
  "onSelectionDrag",
  "onSelectionDragStart",
  "onSelectionDragStop",
  "onMoveStart",
  "onMove",
  "onMoveEnd",
  "noPanClassName",
  "nodeOrigin",
  "autoPanOnConnect",
  "autoPanOnNodeDrag",
  "onError",
  "connectionRadius",
  "isValidConnection",
  "selectNodesOnDrag",
  "nodeDragThreshold",
  "onBeforeDelete",
  "debug",
  "autoPanSpeed",
  "paneClickDistance"
], w0 = [...fH, "rfId"], pH = (e) => ({
  setNodes: e.setNodes,
  setEdges: e.setEdges,
  setMinZoom: e.setMinZoom,
  setMaxZoom: e.setMaxZoom,
  setTranslateExtent: e.setTranslateExtent,
  setNodeExtent: e.setNodeExtent,
  reset: e.reset,
  setDefaultNodesAndEdges: e.setDefaultNodesAndEdges,
  setPaneClickDistance: e.setPaneClickDistance
}), S0 = {
  /*
   * these are values that are also passed directly to other components
   * than the StoreUpdater. We can reduce the number of setStore calls
   * by setting the same values here as prev fields.
   */
  translateExtent: Na,
  nodeOrigin: PE,
  minZoom: 0.5,
  maxZoom: 2,
  elementsSelectable: !0,
  noPanClassName: "nopan",
  rfId: "1",
  paneClickDistance: 0
};
function hH(e) {
  const { setNodes: t, setEdges: n, setMinZoom: r, setMaxZoom: o, setTranslateExtent: i, setNodeExtent: s, reset: l, setDefaultNodesAndEdges: c, setPaneClickDistance: u } = Ze(pH, Mt), f = $t();
  Xe(() => (c(e.defaultNodes, e.defaultEdges), () => {
    d.current = S0, l();
  }), []);
  const d = Ue(S0);
  return Xe(
    () => {
      for (const p of w0) {
        const h = e[p], g = d.current[p];
        h !== g && (typeof e[p] > "u" || (p === "nodes" ? t(h) : p === "edges" ? n(h) : p === "minZoom" ? r(h) : p === "maxZoom" ? o(h) : p === "translateExtent" ? i(h) : p === "nodeExtent" ? s(h) : p === "paneClickDistance" ? u(h) : p === "fitView" ? f.setState({ fitViewQueued: h }) : p === "fitViewOptions" ? f.setState({ fitViewOptions: h }) : f.setState({ [p]: h })));
      }
      d.current = e;
    },
    // Only re-run the effect if one of the fields we track changes
    w0.map((p) => e[p])
  ), null;
}
function E0() {
  return typeof window > "u" || !window.matchMedia ? null : window.matchMedia("(prefers-color-scheme: dark)");
}
function mH(e) {
  var r;
  const [t, n] = Jt(e === "system" ? null : e);
  return Xe(() => {
    if (e !== "system") {
      n(e);
      return;
    }
    const o = E0(), i = () => n(o != null && o.matches ? "dark" : "light");
    return i(), o == null || o.addEventListener("change", i), () => {
      o == null || o.removeEventListener("change", i);
    };
  }, [e]), t !== null ? t : (r = E0()) != null && r.matches ? "dark" : "light";
}
const T0 = typeof document < "u" ? document : null;
function _a(e = null, t = { target: T0, actInsideInputWithModifier: !0 }) {
  const [n, r] = Jt(!1), o = Ue(!1), i = Ue(/* @__PURE__ */ new Set([])), [s, l] = Ye(() => {
    if (e !== null) {
      const u = (Array.isArray(e) ? e : [e]).filter((d) => typeof d == "string").map((d) => d.replace("+", `
`).replace(`

`, `
+`).split(`
`)), f = u.reduce((d, p) => d.concat(...p), []);
      return [u, f];
    }
    return [[], []];
  }, [e]);
  return Xe(() => {
    const c = (t == null ? void 0 : t.target) ?? T0, u = (t == null ? void 0 : t.actInsideInputWithModifier) ?? !0;
    if (e !== null) {
      const f = (h) => {
        var y, x;
        if (o.current = h.ctrlKey || h.metaKey || h.shiftKey || h.altKey, (!o.current || o.current && !u) && cE(h))
          return !1;
        const m = O0(h.code, l);
        if (i.current.add(h[m]), C0(s, i.current, !1)) {
          const E = ((x = (y = h.composedPath) == null ? void 0 : y.call(h)) == null ? void 0 : x[0]) || h.target, v = (E == null ? void 0 : E.nodeName) === "BUTTON" || (E == null ? void 0 : E.nodeName) === "A";
          t.preventDefault !== !1 && (o.current || !v) && h.preventDefault(), r(!0);
        }
      }, d = (h) => {
        const g = O0(h.code, l);
        C0(s, i.current, !0) ? (r(!1), i.current.clear()) : i.current.delete(h[g]), h.key === "Meta" && i.current.clear(), o.current = !1;
      }, p = () => {
        i.current.clear(), r(!1);
      };
      return c == null || c.addEventListener("keydown", f), c == null || c.addEventListener("keyup", d), window.addEventListener("blur", p), window.addEventListener("contextmenu", p), () => {
        c == null || c.removeEventListener("keydown", f), c == null || c.removeEventListener("keyup", d), window.removeEventListener("blur", p), window.removeEventListener("contextmenu", p);
      };
    }
  }, [e, r]), n;
}
function C0(e, t, n) {
  return e.filter((r) => n || r.length === t.size).some((r) => r.every((o) => t.has(o)));
}
function O0(e, t) {
  return t.includes(e) ? "code" : "key";
}
const gH = () => {
  const e = $t();
  return Ye(() => ({
    zoomIn: (t) => {
      const { panZoom: n } = e.getState();
      return n ? n.scaleBy(1.2, { duration: t == null ? void 0 : t.duration }) : Promise.resolve(!1);
    },
    zoomOut: (t) => {
      const { panZoom: n } = e.getState();
      return n ? n.scaleBy(1 / 1.2, { duration: t == null ? void 0 : t.duration }) : Promise.resolve(!1);
    },
    zoomTo: (t, n) => {
      const { panZoom: r } = e.getState();
      return r ? r.scaleTo(t, { duration: n == null ? void 0 : n.duration }) : Promise.resolve(!1);
    },
    getZoom: () => e.getState().transform[2],
    setViewport: async (t, n) => {
      const { transform: [r, o, i], panZoom: s } = e.getState();
      return s ? (await s.setViewport({
        x: t.x ?? r,
        y: t.y ?? o,
        zoom: t.zoom ?? i
      }, { duration: n == null ? void 0 : n.duration }), Promise.resolve(!0)) : Promise.resolve(!1);
    },
    getViewport: () => {
      const [t, n, r] = e.getState().transform;
      return { x: t, y: n, zoom: r };
    },
    setCenter: async (t, n, r) => {
      const { width: o, height: i, maxZoom: s, panZoom: l } = e.getState(), c = typeof (r == null ? void 0 : r.zoom) < "u" ? r.zoom : s, u = o / 2 - t * c, f = i / 2 - n * c;
      return l ? (await l.setViewport({
        x: u,
        y: f,
        zoom: c
      }, { duration: r == null ? void 0 : r.duration }), Promise.resolve(!0)) : Promise.resolve(!1);
    },
    fitBounds: async (t, n) => {
      const { width: r, height: o, minZoom: i, maxZoom: s, panZoom: l } = e.getState(), c = cm(t, r, o, i, s, (n == null ? void 0 : n.padding) ?? 0.1);
      return l ? (await l.setViewport(c, { duration: n == null ? void 0 : n.duration }), Promise.resolve(!0)) : Promise.resolve(!1);
    },
    screenToFlowPosition: (t, n = {}) => {
      const { transform: r, snapGrid: o, snapToGrid: i, domNode: s } = e.getState();
      if (!s)
        return t;
      const { x: l, y: c } = s.getBoundingClientRect(), u = {
        x: t.x - l,
        y: t.y - c
      }, f = n.snapGrid ?? o, d = n.snapToGrid ?? i;
      return il(u, r, d, f);
    },
    flowToScreenPosition: (t) => {
      const { transform: n, domNode: r } = e.getState();
      if (!r)
        return t;
      const { x: o, y: i } = r.getBoundingClientRect(), s = qc(t, n);
      return {
        x: s.x + o,
        y: s.y + i
      };
    }
  }), []);
};
function IE(e, t) {
  const n = [], r = /* @__PURE__ */ new Map(), o = [];
  for (const i of e)
    if (i.type === "add") {
      o.push(i);
      continue;
    } else if (i.type === "remove" || i.type === "replace")
      r.set(i.id, [i]);
    else {
      const s = r.get(i.id);
      s ? s.push(i) : r.set(i.id, [i]);
    }
  for (const i of t) {
    const s = r.get(i.id);
    if (!s) {
      n.push(i);
      continue;
    }
    if (s[0].type === "remove")
      continue;
    if (s[0].type === "replace") {
      n.push({ ...s[0].item });
      continue;
    }
    const l = { ...i };
    for (const c of s)
      yH(c, l);
    n.push(l);
  }
  return o.length && o.forEach((i) => {
    i.index !== void 0 ? n.splice(i.index, 0, { ...i.item }) : n.push({ ...i.item });
  }), n;
}
function yH(e, t) {
  switch (e.type) {
    case "select": {
      t.selected = e.selected;
      break;
    }
    case "position": {
      typeof e.position < "u" && (t.position = e.position), typeof e.dragging < "u" && (t.dragging = e.dragging);
      break;
    }
    case "dimensions": {
      typeof e.dimensions < "u" && (t.measured ?? (t.measured = {}), t.measured.width = e.dimensions.width, t.measured.height = e.dimensions.height, e.setAttributes && ((e.setAttributes === !0 || e.setAttributes === "width") && (t.width = e.dimensions.width), (e.setAttributes === !0 || e.setAttributes === "height") && (t.height = e.dimensions.height))), typeof e.resizing == "boolean" && (t.resizing = e.resizing);
      break;
    }
  }
}
function bH(e, t) {
  return IE(e, t);
}
function vH(e, t) {
  return IE(e, t);
}
function Wo(e, t) {
  return {
    id: e,
    type: "select",
    selected: t
  };
}
function Pi(e, t = /* @__PURE__ */ new Set(), n = !1) {
  const r = [];
  for (const [o, i] of e) {
    const s = t.has(o);
    !(i.selected === void 0 && !s) && i.selected !== s && (n && (i.selected = s), r.push(Wo(i.id, s)));
  }
  return r;
}
function k0({ items: e = [], lookup: t }) {
  var o;
  const n = [], r = new Map(e.map((i) => [i.id, i]));
  for (const [i, s] of e.entries()) {
    const l = t.get(s.id), c = ((o = l == null ? void 0 : l.internals) == null ? void 0 : o.userNode) ?? l;
    c !== void 0 && c !== s && n.push({ id: s.id, item: s, type: "replace" }), c === void 0 && n.push({ item: s, type: "add", index: i });
  }
  for (const [i] of t)
    r.get(i) === void 0 && n.push({ id: i, type: "remove" });
  return n;
}
function R0(e) {
  return {
    id: e.id,
    type: "remove"
  };
}
const N0 = (e) => W4(e), xH = (e) => eE(e);
function _E(e) {
  return Aa(e);
}
const wH = typeof window < "u" ? X0 : Xe;
function $0(e) {
  const [t, n] = Jt(BigInt(0)), [r] = Jt(() => SH(() => n((o) => o + BigInt(1))));
  return wH(() => {
    const o = r.get();
    o.length && (e(o), r.reset());
  }, [t]), r;
}
function SH(e) {
  let t = [];
  return {
    get: () => t,
    reset: () => {
      t = [];
    },
    push: (n) => {
      t.push(n), e();
    }
  };
}
const ME = Da(null);
function EH({ children: e }) {
  const t = $t(), n = $e((l) => {
    const { nodes: c = [], setNodes: u, hasDefaultNodes: f, onNodesChange: d, nodeLookup: p, fitViewQueued: h } = t.getState();
    let g = c;
    for (const y of l)
      g = typeof y == "function" ? y(g) : y;
    const m = k0({
      items: g,
      lookup: p
    });
    f && u(g), m.length > 0 ? d == null || d(m) : h && window.requestAnimationFrame(() => {
      const { fitViewQueued: y, nodes: x, setNodes: E } = t.getState();
      y && E(x);
    });
  }, []), r = $0(n), o = $e((l) => {
    const { edges: c = [], setEdges: u, hasDefaultEdges: f, onEdgesChange: d, edgeLookup: p } = t.getState();
    let h = c;
    for (const g of l)
      h = typeof g == "function" ? g(h) : g;
    f ? u(h) : d && d(k0({
      items: h,
      lookup: p
    }));
  }, []), i = $0(o), s = Ye(() => ({ nodeQueue: r, edgeQueue: i }), []);
  return N(ME.Provider, { value: s, children: e });
}
function TH() {
  const e = Ro(ME);
  if (!e)
    throw new Error("useBatchContext must be used within a BatchProvider");
  return e;
}
const CH = (e) => !!e.panZoom;
function ld() {
  const e = gH(), t = $t(), n = TH(), r = Ze(CH), o = Ye(() => {
    const i = (d) => t.getState().nodeLookup.get(d), s = (d) => {
      n.nodeQueue.push(d);
    }, l = (d) => {
      n.edgeQueue.push(d);
    }, c = (d) => {
      var x, E;
      const { nodeLookup: p, nodeOrigin: h } = t.getState(), g = N0(d) ? d : p.get(d.id), m = g.parentId ? aE(g.position, g.measured, g.parentId, p, h) : g.position, y = {
        ...g,
        position: m,
        width: ((x = g.measured) == null ? void 0 : x.width) ?? g.width,
        height: ((E = g.measured) == null ? void 0 : E.height) ?? g.height
      };
      return rs(y);
    }, u = (d, p, h = { replace: !1 }) => {
      s((g) => g.map((m) => {
        if (m.id === d) {
          const y = typeof p == "function" ? p(m) : p;
          return h.replace && N0(y) ? y : { ...m, ...y };
        }
        return m;
      }));
    }, f = (d, p, h = { replace: !1 }) => {
      l((g) => g.map((m) => {
        if (m.id === d) {
          const y = typeof p == "function" ? p(m) : p;
          return h.replace && xH(y) ? y : { ...m, ...y };
        }
        return m;
      }));
    };
    return {
      getNodes: () => t.getState().nodes.map((d) => ({ ...d })),
      getNode: (d) => {
        var p;
        return (p = i(d)) == null ? void 0 : p.internals.userNode;
      },
      getInternalNode: i,
      getEdges: () => {
        const { edges: d = [] } = t.getState();
        return d.map((p) => ({ ...p }));
      },
      getEdge: (d) => t.getState().edgeLookup.get(d),
      setNodes: s,
      setEdges: l,
      addNodes: (d) => {
        const p = Array.isArray(d) ? d : [d];
        n.nodeQueue.push((h) => [...h, ...p]);
      },
      addEdges: (d) => {
        const p = Array.isArray(d) ? d : [d];
        n.edgeQueue.push((h) => [...h, ...p]);
      },
      toObject: () => {
        const { nodes: d = [], edges: p = [], transform: h } = t.getState(), [g, m, y] = h;
        return {
          nodes: d.map((x) => ({ ...x })),
          edges: p.map((x) => ({ ...x })),
          viewport: {
            x: g,
            y: m,
            zoom: y
          }
        };
      },
      deleteElements: async ({ nodes: d = [], edges: p = [] }) => {
        const { nodes: h, edges: g, onNodesDelete: m, onEdgesDelete: y, triggerNodeChanges: x, triggerEdgeChanges: E, onDelete: v, onBeforeDelete: w } = t.getState(), { nodes: S, edges: T } = await X4({
          nodesToRemove: d,
          edgesToRemove: p,
          nodes: h,
          edges: g,
          onBeforeDelete: w
        }), C = T.length > 0, R = S.length > 0;
        if (C) {
          const I = T.map(R0);
          y == null || y(T), E(I);
        }
        if (R) {
          const I = S.map(R0);
          m == null || m(S), x(I);
        }
        return (R || C) && (v == null || v({ nodes: S, edges: T })), { deletedNodes: S, deletedEdges: T };
      },
      getIntersectingNodes: (d, p = !0, h) => {
        const g = e0(d), m = g ? d : c(d), y = h !== void 0;
        return m ? (h || t.getState().nodes).filter((x) => {
          const E = t.getState().nodeLookup.get(x.id);
          if (E && !g && (x.id === d.id || !E.internals.positionAbsolute))
            return !1;
          const v = rs(y ? x : E), w = Pa(v, m);
          return p && w > 0 || w >= m.width * m.height;
        }) : [];
      },
      isNodeIntersecting: (d, p, h = !0) => {
        const m = e0(d) ? d : c(d);
        if (!m)
          return !1;
        const y = Pa(m, p);
        return h && y > 0 || y >= m.width * m.height;
      },
      updateNode: u,
      updateNodeData: (d, p, h = { replace: !1 }) => {
        u(d, (g) => {
          const m = typeof p == "function" ? p(g) : p;
          return h.replace ? { ...g, data: m } : { ...g, data: { ...g.data, ...m } };
        }, h);
      },
      updateEdge: f,
      updateEdgeData: (d, p, h = { replace: !1 }) => {
        f(d, (g) => {
          const m = typeof p == "function" ? p(g) : p;
          return h.replace ? { ...g, data: m } : { ...g, data: { ...g.data, ...m } };
        }, h);
      },
      getNodesBounds: (d) => {
        const { nodeLookup: p, nodeOrigin: h } = t.getState();
        return q4(d, { nodeLookup: p, nodeOrigin: h });
      },
      getHandleConnections: ({ type: d, id: p, nodeId: h }) => {
        var g;
        return Array.from(((g = t.getState().connectionLookup.get(`${h}-${d}${p ? `-${p}` : ""}`)) == null ? void 0 : g.values()) ?? []);
      },
      getNodeConnections: ({ type: d, handleId: p, nodeId: h }) => {
        var g;
        return Array.from(((g = t.getState().connectionLookup.get(`${h}${d ? p ? `-${d}-${p}` : `-${d}` : ""}`)) == null ? void 0 : g.values()) ?? []);
      },
      fitView: async (d) => {
        const p = t.getState().fitViewResolver ?? J4();
        return t.setState({ fitViewQueued: !0, fitViewOptions: d, fitViewResolver: p }), n.nodeQueue.push((h) => [...h]), p.promise;
      }
    };
  }, []);
  return Ye(() => ({
    ...o,
    ...e,
    viewportInitialized: r
  }), [r]);
}
const P0 = (e) => e.selected, OH = typeof window < "u" ? window : void 0;
function kH({ deleteKeyCode: e, multiSelectionKeyCode: t }) {
  const n = $t(), { deleteElements: r } = ld(), o = _a(e, { actInsideInputWithModifier: !1 }), i = _a(t, { target: OH });
  Xe(() => {
    if (o) {
      const { edges: s, nodes: l } = n.getState();
      r({ nodes: l.filter(P0), edges: s.filter(P0) }), n.setState({ nodesSelectionActive: !1 });
    }
  }, [o]), Xe(() => {
    n.setState({ multiSelectionActive: i });
  }, [i]);
}
function RH(e) {
  const t = $t();
  Xe(() => {
    const n = () => {
      var o, i;
      if (!e.current)
        return !1;
      const r = um(e.current);
      (r.height === 0 || r.width === 0) && ((i = (o = t.getState()).onError) == null || i.call(o, "004", Sn.error004())), t.setState({ width: r.width || 500, height: r.height || 500 });
    };
    if (e.current) {
      n(), window.addEventListener("resize", n);
      const r = new ResizeObserver(() => n());
      return r.observe(e.current), () => {
        window.removeEventListener("resize", n), r && e.current && r.unobserve(e.current);
      };
    }
  }, []);
}
const cd = {
  position: "absolute",
  width: "100%",
  height: "100%",
  top: 0,
  left: 0
}, NH = (e) => ({
  userSelectionActive: e.userSelectionActive,
  lib: e.lib
});
function $H({ onPaneContextMenu: e, zoomOnScroll: t = !0, zoomOnPinch: n = !0, panOnScroll: r = !1, panOnScrollSpeed: o = 0.5, panOnScrollMode: i = Qo.Free, zoomOnDoubleClick: s = !0, panOnDrag: l = !0, defaultViewport: c, translateExtent: u, minZoom: f, maxZoom: d, zoomActivationKeyCode: p, preventScrolling: h = !0, children: g, noWheelClassName: m, noPanClassName: y, onViewportChange: x, isControlledViewport: E, paneClickDistance: v }) {
  const w = $t(), S = Ue(null), { userSelectionActive: T, lib: C } = Ze(NH, Mt), R = _a(p), I = Ue();
  RH(S);
  const b = $e((k) => {
    x == null || x({ x: k[0], y: k[1], zoom: k[2] }), E || w.setState({ transform: k });
  }, [x, E]);
  return Xe(() => {
    if (S.current) {
      I.current = P3({
        domNode: S.current,
        minZoom: f,
        maxZoom: d,
        translateExtent: u,
        viewport: c,
        paneClickDistance: v,
        onDraggingChange: (O) => w.setState({ paneDragging: O }),
        onPanZoomStart: (O, _) => {
          const { onViewportChangeStart: $, onMoveStart: D } = w.getState();
          D == null || D(O, _), $ == null || $(_);
        },
        onPanZoom: (O, _) => {
          const { onViewportChange: $, onMove: D } = w.getState();
          D == null || D(O, _), $ == null || $(_);
        },
        onPanZoomEnd: (O, _) => {
          const { onViewportChangeEnd: $, onMoveEnd: D } = w.getState();
          D == null || D(O, _), $ == null || $(_);
        }
      });
      const { x: k, y: P, zoom: A } = I.current.getViewport();
      return w.setState({
        panZoom: I.current,
        transform: [k, P, A],
        domNode: S.current.closest(".react-flow")
      }), () => {
        var O;
        (O = I.current) == null || O.destroy();
      };
    }
  }, []), Xe(() => {
    var k;
    (k = I.current) == null || k.update({
      onPaneContextMenu: e,
      zoomOnScroll: t,
      zoomOnPinch: n,
      panOnScroll: r,
      panOnScrollSpeed: o,
      panOnScrollMode: i,
      zoomOnDoubleClick: s,
      panOnDrag: l,
      zoomActivationKeyPressed: R,
      preventScrolling: h,
      noPanClassName: y,
      userSelectionActive: T,
      noWheelClassName: m,
      lib: C,
      onTransformChange: b
    });
  }, [
    e,
    t,
    n,
    r,
    o,
    i,
    s,
    l,
    R,
    h,
    y,
    T,
    m,
    C,
    b
  ]), N("div", { className: "react-flow__renderer", ref: S, style: cd, children: g });
}
const PH = (e) => ({
  userSelectionActive: e.userSelectionActive,
  userSelectionRect: e.userSelectionRect
});
function IH() {
  const { userSelectionActive: e, userSelectionRect: t } = Ze(PH, Mt);
  return e && t ? N("div", { className: "react-flow__selection react-flow__container", style: {
    width: t.width,
    height: t.height,
    transform: `translate(${t.x}px, ${t.y}px)`
  } }) : null;
}
const mf = (e, t) => (n) => {
  n.target === t.current && (e == null || e(n));
}, _H = (e) => ({
  userSelectionActive: e.userSelectionActive,
  elementsSelectable: e.elementsSelectable,
  connectionInProgress: e.connection.inProgress,
  dragging: e.paneDragging
});
function MH({ isSelecting: e, selectionKeyPressed: t, selectionMode: n = $a.Full, panOnDrag: r, selectionOnDrag: o, onSelectionStart: i, onSelectionEnd: s, onPaneClick: l, onPaneContextMenu: c, onPaneScroll: u, onPaneMouseEnter: f, onPaneMouseMove: d, onPaneMouseLeave: p, children: h }) {
  const g = $t(), { userSelectionActive: m, elementsSelectable: y, dragging: x, connectionInProgress: E } = Ze(_H, Mt), v = y && (e || m), w = Ue(null), S = Ue(), T = Ue(/* @__PURE__ */ new Set()), C = Ue(/* @__PURE__ */ new Set()), R = Ue(!1), I = Ue(!1), b = (D) => {
    if (R.current || E) {
      R.current = !1;
      return;
    }
    l == null || l(D), g.getState().resetSelectedElements(), g.setState({ nodesSelectionActive: !1 });
  }, k = (D) => {
    if (Array.isArray(r) && (r != null && r.includes(2))) {
      D.preventDefault();
      return;
    }
    c == null || c(D);
  }, P = u ? (D) => u(D) : void 0, A = (D) => {
    var W, U;
    const { resetSelectedElements: z, domNode: B } = g.getState();
    if (S.current = B == null ? void 0 : B.getBoundingClientRect(), !y || !e || D.button !== 0 || D.target !== w.current || !S.current)
      return;
    (U = (W = D.target) == null ? void 0 : W.setPointerCapture) == null || U.call(W, D.pointerId), I.current = !0, R.current = !1;
    const { x: L, y: F } = Jr(D.nativeEvent, S.current);
    z(), g.setState({
      userSelectionRect: {
        width: 0,
        height: 0,
        startX: L,
        startY: F,
        x: L,
        y: F
      }
    }), i == null || i(D);
  }, O = (D) => {
    const { userSelectionRect: z, transform: B, nodeLookup: L, edgeLookup: F, connectionLookup: W, triggerNodeChanges: U, triggerEdgeChanges: Z, defaultEdgeOptions: Q } = g.getState();
    if (!S.current || !z)
      return;
    R.current = !0;
    const { x: ee, y: te } = Jr(D.nativeEvent, S.current), { startX: q, startY: oe } = z, G = {
      startX: q,
      startY: oe,
      x: ee < q ? ee : q,
      y: te < oe ? te : oe,
      width: Math.abs(ee - q),
      height: Math.abs(te - oe)
    }, ne = T.current, j = C.current;
    T.current = new Set(tE(L, G, B, n === $a.Partial, !0).map((ce) => ce.id)), C.current = /* @__PURE__ */ new Set();
    const pe = (Q == null ? void 0 : Q.selectable) ?? !0;
    for (const ce of T.current) {
      const be = W.get(ce);
      if (be)
        for (const { edgeId: Pe } of be.values()) {
          const Me = F.get(Pe);
          Me && (Me.selectable ?? pe) && C.current.add(Pe);
        }
    }
    if (!t0(ne, T.current)) {
      const ce = Pi(L, T.current, !0);
      U(ce);
    }
    if (!t0(j, C.current)) {
      const ce = Pi(F, C.current);
      Z(ce);
    }
    g.setState({
      userSelectionRect: G,
      userSelectionActive: !0,
      nodesSelectionActive: !1
    });
  }, _ = (D) => {
    var B, L;
    if (D.button !== 0 || !I.current)
      return;
    (L = (B = D.target) == null ? void 0 : B.releasePointerCapture) == null || L.call(B, D.pointerId);
    const { userSelectionRect: z } = g.getState();
    !m && z && D.target === w.current && (b == null || b(D)), g.setState({
      userSelectionActive: !1,
      userSelectionRect: null,
      nodesSelectionActive: T.current.size > 0
    }), s == null || s(D), (t || o) && (R.current = !1), I.current = !1;
  }, $ = r === !0 || Array.isArray(r) && r.includes(0);
  return we("div", { className: Xt(["react-flow__pane", { draggable: $, dragging: x, selection: e }]), onClick: v ? void 0 : mf(b, w), onContextMenu: mf(k, w), onWheel: mf(P, w), onPointerEnter: v ? void 0 : f, onPointerDown: v ? A : d, onPointerMove: v ? O : d, onPointerUp: v ? _ : void 0, onPointerLeave: p, ref: w, style: cd, children: [h, N(IH, {})] });
}
function Rp({ id: e, store: t, unselect: n = !1, nodeRef: r }) {
  const { addSelectedNodes: o, unselectNodesAndEdges: i, multiSelectionActive: s, nodeLookup: l, onError: c } = t.getState(), u = l.get(e);
  if (!u) {
    c == null || c("012", Sn.error012(e));
    return;
  }
  t.setState({ nodesSelectionActive: !1 }), u.selected ? (n || u.selected && s) && (i({ nodes: [u], edges: [] }), requestAnimationFrame(() => {
    var f;
    return (f = r == null ? void 0 : r.current) == null ? void 0 : f.blur();
  })) : o([e]);
}
function AE({ nodeRef: e, disabled: t = !1, noDragClassName: n, handleSelector: r, nodeId: o, isSelectable: i, nodeClickDistance: s }) {
  const l = $t(), [c, u] = Jt(!1), f = Ue();
  return Xe(() => {
    f.current = y3({
      getStoreItems: () => l.getState(),
      onNodeMouseDown: (d) => {
        Rp({
          id: d,
          store: l,
          nodeRef: e
        });
      },
      onDragStart: () => {
        u(!0);
      },
      onDragStop: () => {
        u(!1);
      }
    });
  }, []), Xe(() => {
    var d, p;
    if (t)
      (d = f.current) == null || d.destroy();
    else if (e.current)
      return (p = f.current) == null || p.update({
        noDragClassName: n,
        handleSelector: r,
        domNode: e.current,
        isSelectable: i,
        nodeId: o,
        nodeClickDistance: s
      }), () => {
        var h;
        (h = f.current) == null || h.destroy();
      };
  }, [n, r, t, i, e, o]), c;
}
const AH = (e) => (t) => t.selected && (t.draggable || e && typeof t.draggable > "u");
function DE() {
  const e = $t();
  return $e((n) => {
    const { nodeExtent: r, snapToGrid: o, snapGrid: i, nodesDraggable: s, onError: l, updateNodePositions: c, nodeLookup: u, nodeOrigin: f } = e.getState(), d = /* @__PURE__ */ new Map(), p = AH(s), h = o ? i[0] : 5, g = o ? i[1] : 5, m = n.direction.x * h * n.factor, y = n.direction.y * g * n.factor;
    for (const [, x] of u) {
      if (!p(x))
        continue;
      let E = {
        x: x.internals.positionAbsolute.x + m,
        y: x.internals.positionAbsolute.y + y
      };
      o && (E = id(E, i));
      const { position: v, positionAbsolute: w } = nE({
        nodeId: x.id,
        nextPosition: E,
        nodeLookup: u,
        nodeExtent: r,
        nodeOrigin: f,
        onError: l
      });
      x.position = v, x.internals.positionAbsolute = w, d.set(x.id, x);
    }
    c(d);
  }, []);
}
const gm = Da(null), DH = gm.Provider;
gm.Consumer;
const BE = () => Ro(gm), BH = (e) => ({
  connectOnClick: e.connectOnClick,
  noPanClassName: e.noPanClassName,
  rfId: e.rfId
}), LH = (e, t, n) => (r) => {
  const { connectionClickStartHandle: o, connectionMode: i, connection: s } = r, { fromHandle: l, toHandle: c, isValid: u } = s, f = (c == null ? void 0 : c.nodeId) === e && (c == null ? void 0 : c.id) === t && (c == null ? void 0 : c.type) === n;
  return {
    connectingFrom: (l == null ? void 0 : l.nodeId) === e && (l == null ? void 0 : l.id) === t && (l == null ? void 0 : l.type) === n,
    connectingTo: f,
    clickConnecting: (o == null ? void 0 : o.nodeId) === e && (o == null ? void 0 : o.id) === t && (o == null ? void 0 : o.type) === n,
    isPossibleEndHandle: i === es.Strict ? (l == null ? void 0 : l.type) !== n : e !== (l == null ? void 0 : l.nodeId) || t !== (l == null ? void 0 : l.id),
    connectionInProcess: !!l,
    clickConnectionInProcess: !!o,
    valid: f && u
  };
};
function FH({ type: e = "source", position: t = De.Top, isValidConnection: n, isConnectable: r = !0, isConnectableStart: o = !0, isConnectableEnd: i = !0, id: s, onConnect: l, children: c, className: u, onMouseDown: f, onTouchStart: d, ...p }, h) {
  var _, $;
  const g = s || null, m = e === "target", y = $t(), x = BE(), { connectOnClick: E, noPanClassName: v, rfId: w } = Ze(BH, Mt), { connectingFrom: S, connectingTo: T, clickConnecting: C, isPossibleEndHandle: R, connectionInProcess: I, clickConnectionInProcess: b, valid: k } = Ze(LH(x, g, e), Mt);
  x || ($ = (_ = y.getState()).onError) == null || $.call(_, "010", Sn.error010());
  const P = (D) => {
    const { defaultEdgeOptions: z, onConnect: B, hasDefaultEdges: L } = y.getState(), F = {
      ...z,
      ...D
    };
    if (L) {
      const { edges: W, setEdges: U } = y.getState();
      U(hE(F, W));
    }
    B == null || B(F), l == null || l(F);
  }, A = (D) => {
    if (!x)
      return;
    const z = uE(D.nativeEvent);
    if (o && (z && D.button === 0 || !z)) {
      const B = y.getState();
      kp.onPointerDown(D.nativeEvent, {
        autoPanOnConnect: B.autoPanOnConnect,
        connectionMode: B.connectionMode,
        connectionRadius: B.connectionRadius,
        domNode: B.domNode,
        nodeLookup: B.nodeLookup,
        lib: B.lib,
        isTarget: m,
        handleId: g,
        nodeId: x,
        flowId: B.rfId,
        panBy: B.panBy,
        cancelConnection: B.cancelConnection,
        onConnectStart: B.onConnectStart,
        onConnectEnd: B.onConnectEnd,
        updateConnection: B.updateConnection,
        onConnect: P,
        isValidConnection: n || B.isValidConnection,
        getTransform: () => y.getState().transform,
        getFromHandle: () => y.getState().connection.fromHandle,
        autoPanSpeed: B.autoPanSpeed
      });
    }
    z ? f == null || f(D) : d == null || d(D);
  }, O = (D) => {
    const { onClickConnectStart: z, onClickConnectEnd: B, connectionClickStartHandle: L, connectionMode: F, isValidConnection: W, lib: U, rfId: Z, nodeLookup: Q, connection: ee } = y.getState();
    if (!x || !L && !o)
      return;
    if (!L) {
      z == null || z(D.nativeEvent, { nodeId: x, handleId: g, handleType: e }), y.setState({ connectionClickStartHandle: { nodeId: x, type: e, id: g } });
      return;
    }
    const te = lE(D.target), q = n || W, { connection: oe, isValid: G } = kp.isValid(D.nativeEvent, {
      handle: {
        nodeId: x,
        id: g,
        type: e
      },
      connectionMode: F,
      fromNodeId: L.nodeId,
      fromHandleId: L.id || null,
      fromType: L.type,
      isValidConnection: q,
      flowId: Z,
      doc: te,
      lib: U,
      nodeLookup: Q
    });
    G && oe && P(oe);
    const ne = structuredClone(ee);
    delete ne.inProgress, ne.toPosition = ne.toHandle ? ne.toHandle.position : null, B == null || B(D, ne), y.setState({ connectionClickStartHandle: null });
  };
  return N("div", { "data-handleid": g, "data-nodeid": x, "data-handlepos": t, "data-id": `${w}-${x}-${g}-${e}`, className: Xt([
    "react-flow__handle",
    `react-flow__handle-${t}`,
    "nodrag",
    v,
    u,
    {
      source: !m,
      target: m,
      connectable: r,
      connectablestart: o,
      connectableend: i,
      clickconnecting: C,
      connectingfrom: S,
      connectingto: T,
      valid: k,
      /*
       * shows where you can start a connection from
       * and where you can end it while connecting
       */
      connectionindicator: r && (!I || R) && (I || b ? i : o)
    }
  ]), onMouseDown: A, onTouchStart: A, onClick: E ? O : void 0, ref: h, ...p, children: c });
}
const Ma = ve(_E(FH));
function zH({ data: e, isConnectable: t, sourcePosition: n = De.Bottom }) {
  return we(rr, { children: [e == null ? void 0 : e.label, N(Ma, { type: "source", position: n, isConnectable: t })] });
}
function VH({ data: e, isConnectable: t, targetPosition: n = De.Top, sourcePosition: r = De.Bottom }) {
  return we(rr, { children: [N(Ma, { type: "target", position: n, isConnectable: t }), e == null ? void 0 : e.label, N(Ma, { type: "source", position: r, isConnectable: t })] });
}
function jH() {
  return null;
}
function HH({ data: e, isConnectable: t, targetPosition: n = De.Top }) {
  return we(rr, { children: [N(Ma, { type: "target", position: n, isConnectable: t }), e == null ? void 0 : e.label] });
}
const Kc = {
  ArrowUp: { x: 0, y: -1 },
  ArrowDown: { x: 0, y: 1 },
  ArrowLeft: { x: -1, y: 0 },
  ArrowRight: { x: 1, y: 0 }
}, I0 = {
  input: zH,
  default: VH,
  output: HH,
  group: jH
};
function WH(e) {
  var t, n, r, o;
  return e.internals.handleBounds === void 0 ? {
    width: e.width ?? e.initialWidth ?? ((t = e.style) == null ? void 0 : t.width),
    height: e.height ?? e.initialHeight ?? ((n = e.style) == null ? void 0 : n.height)
  } : {
    width: e.width ?? ((r = e.style) == null ? void 0 : r.width),
    height: e.height ?? ((o = e.style) == null ? void 0 : o.height)
  };
}
const UH = (e) => {
  const { width: t, height: n, x: r, y: o } = ol(e.nodeLookup, {
    filter: (i) => !!i.selected
  });
  return {
    width: dr(t) ? t : null,
    height: dr(n) ? n : null,
    userSelectionActive: e.userSelectionActive,
    transformString: `translate(${e.transform[0]}px,${e.transform[1]}px) scale(${e.transform[2]}) translate(${r}px,${o}px)`
  };
};
function qH({ onSelectionContextMenu: e, noPanClassName: t, disableKeyboardA11y: n }) {
  const r = $t(), { width: o, height: i, transformString: s, userSelectionActive: l } = Ze(UH, Mt), c = DE(), u = Ue(null);
  if (Xe(() => {
    var p;
    n || (p = u.current) == null || p.focus({
      preventScroll: !0
    });
  }, [n]), AE({
    nodeRef: u
  }), l || !o || !i)
    return null;
  const f = e ? (p) => {
    const h = r.getState().nodes.filter((g) => g.selected);
    e(p, h);
  } : void 0, d = (p) => {
    Object.prototype.hasOwnProperty.call(Kc, p.key) && (p.preventDefault(), c({
      direction: Kc[p.key],
      factor: p.shiftKey ? 4 : 1
    }));
  };
  return N("div", { className: Xt(["react-flow__nodesselection", "react-flow__container", t]), style: {
    transform: s
  }, children: N("div", { ref: u, className: "react-flow__nodesselection-rect", onContextMenu: f, tabIndex: n ? void 0 : -1, onKeyDown: n ? void 0 : d, style: {
    width: o,
    height: i
  } }) });
}
const _0 = typeof window < "u" ? window : void 0, YH = (e) => ({ nodesSelectionActive: e.nodesSelectionActive, userSelectionActive: e.userSelectionActive });
function LE({ children: e, onPaneClick: t, onPaneMouseEnter: n, onPaneMouseMove: r, onPaneMouseLeave: o, onPaneContextMenu: i, onPaneScroll: s, paneClickDistance: l, deleteKeyCode: c, selectionKeyCode: u, selectionOnDrag: f, selectionMode: d, onSelectionStart: p, onSelectionEnd: h, multiSelectionKeyCode: g, panActivationKeyCode: m, zoomActivationKeyCode: y, elementsSelectable: x, zoomOnScroll: E, zoomOnPinch: v, panOnScroll: w, panOnScrollSpeed: S, panOnScrollMode: T, zoomOnDoubleClick: C, panOnDrag: R, defaultViewport: I, translateExtent: b, minZoom: k, maxZoom: P, preventScrolling: A, onSelectionContextMenu: O, noWheelClassName: _, noPanClassName: $, disableKeyboardA11y: D, onViewportChange: z, isControlledViewport: B }) {
  const { nodesSelectionActive: L, userSelectionActive: F } = Ze(YH), W = _a(u, { target: _0 }), U = _a(m, { target: _0 }), Z = U || R, Q = U || w, ee = f && Z !== !0, te = W || F || ee;
  return kH({ deleteKeyCode: c, multiSelectionKeyCode: g }), N($H, { onPaneContextMenu: i, elementsSelectable: x, zoomOnScroll: E, zoomOnPinch: v, panOnScroll: Q, panOnScrollSpeed: S, panOnScrollMode: T, zoomOnDoubleClick: C, panOnDrag: !W && Z, defaultViewport: I, translateExtent: b, minZoom: k, maxZoom: P, zoomActivationKeyCode: y, preventScrolling: A, noWheelClassName: _, noPanClassName: $, onViewportChange: z, isControlledViewport: B, paneClickDistance: l, children: we(MH, { onSelectionStart: p, onSelectionEnd: h, onPaneClick: t, onPaneMouseEnter: n, onPaneMouseMove: r, onPaneMouseLeave: o, onPaneContextMenu: i, onPaneScroll: s, panOnDrag: Z, isSelecting: !!te, selectionMode: d, selectionKeyPressed: W, selectionOnDrag: ee, children: [e, L && N(qH, { onSelectionContextMenu: O, noPanClassName: $, disableKeyboardA11y: D })] }) });
}
LE.displayName = "FlowRenderer";
const KH = ve(LE), GH = (e) => (t) => e ? tE(t.nodeLookup, { x: 0, y: 0, width: t.width, height: t.height }, t.transform, !0).map((n) => n.id) : Array.from(t.nodeLookup.keys());
function XH(e) {
  return Ze($e(GH(e), [e]), Mt);
}
const ZH = (e) => e.updateNodeInternals;
function QH() {
  const e = Ze(ZH), [t] = Jt(() => typeof ResizeObserver > "u" ? null : new ResizeObserver((n) => {
    const r = /* @__PURE__ */ new Map();
    n.forEach((o) => {
      const i = o.target.getAttribute("data-id");
      r.set(i, {
        id: i,
        nodeElement: o.target,
        force: !0
      });
    }), e(r);
  }));
  return Xe(() => () => {
    t == null || t.disconnect();
  }, [t]), t;
}
function JH({ node: e, nodeType: t, hasDimensions: n, resizeObserver: r }) {
  const o = $t(), i = Ue(null), s = Ue(null), l = Ue(e.sourcePosition), c = Ue(e.targetPosition), u = Ue(t), f = n && !!e.internals.handleBounds;
  return Xe(() => {
    i.current && !e.hidden && (!f || s.current !== i.current) && (s.current && (r == null || r.unobserve(s.current)), r == null || r.observe(i.current), s.current = i.current);
  }, [f, e.hidden]), Xe(() => () => {
    s.current && (r == null || r.unobserve(s.current), s.current = null);
  }, []), Xe(() => {
    if (i.current) {
      const d = u.current !== t, p = l.current !== e.sourcePosition, h = c.current !== e.targetPosition;
      (d || p || h) && (u.current = t, l.current = e.sourcePosition, c.current = e.targetPosition, o.getState().updateNodeInternals(/* @__PURE__ */ new Map([[e.id, { id: e.id, nodeElement: i.current, force: !0 }]])));
    }
  }, [e.id, t, e.sourcePosition, e.targetPosition]), i;
}
function eW({ id: e, onClick: t, onMouseEnter: n, onMouseMove: r, onMouseLeave: o, onContextMenu: i, onDoubleClick: s, nodesDraggable: l, elementsSelectable: c, nodesConnectable: u, nodesFocusable: f, resizeObserver: d, noDragClassName: p, noPanClassName: h, disableKeyboardA11y: g, rfId: m, nodeTypes: y, nodeClickDistance: x, onError: E }) {
  const { node: v, internals: w, isParent: S } = Ze((te) => {
    const q = te.nodeLookup.get(e), oe = te.parentLookup.has(e);
    return {
      node: q,
      internals: q.internals,
      isParent: oe
    };
  }, Mt);
  let T = v.type || "default", C = (y == null ? void 0 : y[T]) || I0[T];
  C === void 0 && (E == null || E("003", Sn.error003(T)), T = "default", C = I0.default);
  const R = !!(v.draggable || l && typeof v.draggable > "u"), I = !!(v.selectable || c && typeof v.selectable > "u"), b = !!(v.connectable || u && typeof v.connectable > "u"), k = !!(v.focusable || f && typeof v.focusable > "u"), P = $t(), A = sE(v), O = JH({ node: v, nodeType: T, hasDimensions: A, resizeObserver: d }), _ = AE({
    nodeRef: O,
    disabled: v.hidden || !R,
    noDragClassName: p,
    handleSelector: v.dragHandle,
    nodeId: e,
    isSelectable: I,
    nodeClickDistance: x
  }), $ = DE();
  if (v.hidden)
    return null;
  const D = fo(v), z = WH(v), B = I || R || t || n || r || o, L = n ? (te) => n(te, { ...w.userNode }) : void 0, F = r ? (te) => r(te, { ...w.userNode }) : void 0, W = o ? (te) => o(te, { ...w.userNode }) : void 0, U = i ? (te) => i(te, { ...w.userNode }) : void 0, Z = s ? (te) => s(te, { ...w.userNode }) : void 0, Q = (te) => {
    const { selectNodesOnDrag: q, nodeDragThreshold: oe } = P.getState();
    I && (!q || !R || oe > 0) && Rp({
      id: e,
      store: P,
      nodeRef: O
    }), t && t(te, { ...w.userNode });
  }, ee = (te) => {
    if (!(cE(te.nativeEvent) || g))
      if (Z1.includes(te.key) && I) {
        const q = te.key === "Escape";
        Rp({
          id: e,
          store: P,
          unselect: q,
          nodeRef: O
        });
      } else R && v.selected && Object.prototype.hasOwnProperty.call(Kc, te.key) && (te.preventDefault(), P.setState({
        ariaLiveMessage: `Moved selected node ${te.key.replace("Arrow", "").toLowerCase()}. New position, x: ${~~w.positionAbsolute.x}, y: ${~~w.positionAbsolute.y}`
      }), $({
        direction: Kc[te.key],
        factor: te.shiftKey ? 4 : 1
      }));
  };
  return N("div", { className: Xt([
    "react-flow__node",
    `react-flow__node-${T}`,
    {
      // this is overwritable by passing `nopan` as a class name
      [h]: R
    },
    v.className,
    {
      selected: v.selected,
      selectable: I,
      parent: S,
      draggable: R,
      dragging: _
    }
  ]), ref: O, style: {
    zIndex: w.z,
    transform: `translate(${w.positionAbsolute.x}px,${w.positionAbsolute.y}px)`,
    pointerEvents: B ? "all" : "none",
    visibility: A ? "visible" : "hidden",
    ...v.style,
    ...z
  }, "data-id": e, "data-testid": `rf__node-${e}`, onMouseEnter: L, onMouseMove: F, onMouseLeave: W, onContextMenu: U, onClick: Q, onDoubleClick: Z, onKeyDown: k ? ee : void 0, tabIndex: k ? 0 : void 0, role: k ? "button" : void 0, "aria-describedby": g ? void 0 : `${NE}-${m}`, "aria-label": v.ariaLabel, children: N(DH, { value: e, children: N(C, { id: e, data: v.data, type: T, positionAbsoluteX: w.positionAbsolute.x, positionAbsoluteY: w.positionAbsolute.y, selected: v.selected ?? !1, selectable: I, draggable: R, deletable: v.deletable ?? !0, isConnectable: b, sourcePosition: v.sourcePosition, targetPosition: v.targetPosition, dragging: _, dragHandle: v.dragHandle, zIndex: w.z, parentId: v.parentId, ...D }) }) });
}
const tW = (e) => ({
  nodesDraggable: e.nodesDraggable,
  nodesConnectable: e.nodesConnectable,
  nodesFocusable: e.nodesFocusable,
  elementsSelectable: e.elementsSelectable,
  onError: e.onError
});
function FE(e) {
  const { nodesDraggable: t, nodesConnectable: n, nodesFocusable: r, elementsSelectable: o, onError: i } = Ze(tW, Mt), s = XH(e.onlyRenderVisibleElements), l = QH();
  return N("div", { className: "react-flow__nodes", style: cd, children: s.map((c) => (
    /*
     * The split of responsibilities between NodeRenderer and
     * NodeComponentWrapper may appear weird. However, it’s designed to
     * minimize the cost of updates when individual nodes change.
     *
     * For example, when you’re dragging a single node, that node gets
     * updated multiple times per second. If `NodeRenderer` were to update
     * every time, it would have to re-run the `nodes.map()` loop every
     * time. This gets pricey with hundreds of nodes, especially if every
     * loop cycle does more than just rendering a JSX element!
     *
     * As a result of this choice, we took the following implementation
     * decisions:
     * - NodeRenderer subscribes *only* to node IDs – and therefore
     *   rerender *only* when visible nodes are added or removed.
     * - NodeRenderer performs all operations the result of which can be
     *   shared between nodes (such as creating the `ResizeObserver`
     *   instance, or subscribing to `selector`). This means extra prop
     *   drilling into `NodeComponentWrapper`, but it means we need to run
     *   these operations only once – instead of once per node.
     * - Any operations that you’d normally write inside `nodes.map` are
     *   moved into `NodeComponentWrapper`. This ensures they are
     *   memorized – so if `NodeRenderer` *has* to rerender, it only
     *   needs to regenerate the list of nodes, nothing else.
     */
    N(eW, { id: c, nodeTypes: e.nodeTypes, nodeExtent: e.nodeExtent, onClick: e.onNodeClick, onMouseEnter: e.onNodeMouseEnter, onMouseMove: e.onNodeMouseMove, onMouseLeave: e.onNodeMouseLeave, onContextMenu: e.onNodeContextMenu, onDoubleClick: e.onNodeDoubleClick, noDragClassName: e.noDragClassName, noPanClassName: e.noPanClassName, rfId: e.rfId, disableKeyboardA11y: e.disableKeyboardA11y, resizeObserver: l, nodesDraggable: t, nodesConnectable: n, nodesFocusable: r, elementsSelectable: o, nodeClickDistance: e.nodeClickDistance, onError: i }, c)
  )) });
}
FE.displayName = "NodeRenderer";
const nW = ve(FE);
function rW(e) {
  return Ze($e((n) => {
    if (!e)
      return n.edges.map((o) => o.id);
    const r = [];
    if (n.width && n.height)
      for (const o of n.edges) {
        const i = n.nodeLookup.get(o.source), s = n.nodeLookup.get(o.target);
        i && s && n3({
          sourceNode: i,
          targetNode: s,
          width: n.width,
          height: n.height,
          transform: n.transform
        }) && r.push(o.id);
      }
    return r;
  }, [e]), Mt);
}
const oW = ({ color: e = "none", strokeWidth: t = 1 }) => N("polyline", { style: {
  stroke: e,
  strokeWidth: t
}, strokeLinecap: "round", strokeLinejoin: "round", fill: "none", points: "-5,-4 0,0 -5,4" }), iW = ({ color: e = "none", strokeWidth: t = 1 }) => N("polyline", { style: {
  stroke: e,
  fill: e,
  strokeWidth: t
}, strokeLinecap: "round", strokeLinejoin: "round", points: "-5,-4 0,0 -5,4 -5,-4" }), M0 = {
  [ts.Arrow]: oW,
  [ts.ArrowClosed]: iW
};
function sW(e) {
  const t = $t();
  return Ye(() => {
    var o, i;
    return Object.prototype.hasOwnProperty.call(M0, e) ? M0[e] : ((i = (o = t.getState()).onError) == null || i.call(o, "009", Sn.error009(e)), null);
  }, [e]);
}
const aW = ({ id: e, type: t, color: n, width: r = 12.5, height: o = 12.5, markerUnits: i = "strokeWidth", strokeWidth: s, orient: l = "auto-start-reverse" }) => {
  const c = sW(t);
  return c ? N("marker", { className: "react-flow__arrowhead", id: e, markerWidth: `${r}`, markerHeight: `${o}`, viewBox: "-10 -10 20 20", markerUnits: i, orient: l, refX: "0", refY: "0", children: N(c, { color: n, strokeWidth: s }) }) : null;
}, zE = ({ defaultColor: e, rfId: t }) => {
  const n = Ze((i) => i.edges), r = Ze((i) => i.defaultEdgeOptions), o = Ye(() => c3(n, {
    id: t,
    defaultColor: e,
    defaultMarkerStart: r == null ? void 0 : r.markerStart,
    defaultMarkerEnd: r == null ? void 0 : r.markerEnd
  }), [n, r, t, e]);
  return o.length ? N("svg", { className: "react-flow__marker", "aria-hidden": "true", children: N("defs", { children: o.map((i) => N(aW, { id: i.id, type: i.type, color: i.color, width: i.width, height: i.height, markerUnits: i.markerUnits, strokeWidth: i.strokeWidth, orient: i.orient }, i.id)) }) }) : null;
};
zE.displayName = "MarkerDefinitions";
var lW = ve(zE);
function VE({ x: e, y: t, label: n, labelStyle: r, labelShowBg: o = !0, labelBgStyle: i, labelBgPadding: s = [2, 4], labelBgBorderRadius: l = 2, children: c, className: u, ...f }) {
  const [d, p] = Jt({ x: 1, y: 0, width: 0, height: 0 }), h = Xt(["react-flow__edge-textwrapper", u]), g = Ue(null);
  return Xe(() => {
    if (g.current) {
      const m = g.current.getBBox();
      p({
        x: m.x,
        y: m.y,
        width: m.width,
        height: m.height
      });
    }
  }, [n]), n ? we("g", { transform: `translate(${e - d.width / 2} ${t - d.height / 2})`, className: h, visibility: d.width ? "visible" : "hidden", ...f, children: [o && N("rect", { width: d.width + 2 * s[0], x: -s[0], y: -s[1], height: d.height + 2 * s[1], className: "react-flow__edge-textbg", style: i, rx: l, ry: l }), N("text", { className: "react-flow__edge-text", y: d.height / 2, dy: "0.3em", ref: g, style: r, children: n }), c] }) : null;
}
VE.displayName = "EdgeText";
const cW = ve(VE);
function al({ path: e, labelX: t, labelY: n, label: r, labelStyle: o, labelShowBg: i, labelBgStyle: s, labelBgPadding: l, labelBgBorderRadius: c, interactionWidth: u = 20, ...f }) {
  return we(rr, { children: [N("path", { ...f, d: e, fill: "none", className: Xt(["react-flow__edge-path", f.className]) }), u && N("path", { d: e, fill: "none", strokeOpacity: 0, strokeWidth: u, className: "react-flow__edge-interaction" }), r && dr(t) && dr(n) ? N(cW, { x: t, y: n, label: r, labelStyle: o, labelShowBg: i, labelBgStyle: s, labelBgPadding: l, labelBgBorderRadius: c }) : null] });
}
function A0({ pos: e, x1: t, y1: n, x2: r, y2: o }) {
  return e === De.Left || e === De.Right ? [0.5 * (t + r), n] : [t, 0.5 * (n + o)];
}
function jE({ sourceX: e, sourceY: t, sourcePosition: n = De.Bottom, targetX: r, targetY: o, targetPosition: i = De.Top }) {
  const [s, l] = A0({
    pos: n,
    x1: e,
    y1: t,
    x2: r,
    y2: o
  }), [c, u] = A0({
    pos: i,
    x1: r,
    y1: o,
    x2: e,
    y2: t
  }), [f, d, p, h] = dE({
    sourceX: e,
    sourceY: t,
    targetX: r,
    targetY: o,
    sourceControlX: s,
    sourceControlY: l,
    targetControlX: c,
    targetControlY: u
  });
  return [
    `M${e},${t} C${s},${l} ${c},${u} ${r},${o}`,
    f,
    d,
    p,
    h
  ];
}
function HE(e) {
  return ve(({ id: t, sourceX: n, sourceY: r, targetX: o, targetY: i, sourcePosition: s, targetPosition: l, label: c, labelStyle: u, labelShowBg: f, labelBgStyle: d, labelBgPadding: p, labelBgBorderRadius: h, style: g, markerEnd: m, markerStart: y, interactionWidth: x }) => {
    const [E, v, w] = jE({
      sourceX: n,
      sourceY: r,
      sourcePosition: s,
      targetX: o,
      targetY: i,
      targetPosition: l
    }), S = e.isInternal ? void 0 : t;
    return N(al, { id: S, path: E, labelX: v, labelY: w, label: c, labelStyle: u, labelShowBg: f, labelBgStyle: d, labelBgPadding: p, labelBgBorderRadius: h, style: g, markerEnd: m, markerStart: y, interactionWidth: x });
  });
}
const uW = HE({ isInternal: !1 }), WE = HE({ isInternal: !0 });
uW.displayName = "SimpleBezierEdge";
WE.displayName = "SimpleBezierEdgeInternal";
function UE(e) {
  return ve(({ id: t, sourceX: n, sourceY: r, targetX: o, targetY: i, label: s, labelStyle: l, labelShowBg: c, labelBgStyle: u, labelBgPadding: f, labelBgBorderRadius: d, style: p, sourcePosition: h = De.Bottom, targetPosition: g = De.Top, markerEnd: m, markerStart: y, pathOptions: x, interactionWidth: E }) => {
    const [v, w, S] = Tp({
      sourceX: n,
      sourceY: r,
      sourcePosition: h,
      targetX: o,
      targetY: i,
      targetPosition: g,
      borderRadius: x == null ? void 0 : x.borderRadius,
      offset: x == null ? void 0 : x.offset
    }), T = e.isInternal ? void 0 : t;
    return N(al, { id: T, path: v, labelX: w, labelY: S, label: s, labelStyle: l, labelShowBg: c, labelBgStyle: u, labelBgPadding: f, labelBgBorderRadius: d, style: p, markerEnd: m, markerStart: y, interactionWidth: E });
  });
}
const qE = UE({ isInternal: !1 }), YE = UE({ isInternal: !0 });
qE.displayName = "SmoothStepEdge";
YE.displayName = "SmoothStepEdgeInternal";
function KE(e) {
  return ve(({ id: t, ...n }) => {
    var o;
    const r = e.isInternal ? void 0 : t;
    return N(qE, { ...n, id: r, pathOptions: Ye(() => {
      var i;
      return { borderRadius: 0, offset: (i = n.pathOptions) == null ? void 0 : i.offset };
    }, [(o = n.pathOptions) == null ? void 0 : o.offset]) });
  });
}
const dW = KE({ isInternal: !1 }), GE = KE({ isInternal: !0 });
dW.displayName = "StepEdge";
GE.displayName = "StepEdgeInternal";
function XE(e) {
  return ve(({ id: t, sourceX: n, sourceY: r, targetX: o, targetY: i, label: s, labelStyle: l, labelShowBg: c, labelBgStyle: u, labelBgPadding: f, labelBgBorderRadius: d, style: p, markerEnd: h, markerStart: g, interactionWidth: m }) => {
    const [y, x, E] = mE({ sourceX: n, sourceY: r, targetX: o, targetY: i }), v = e.isInternal ? void 0 : t;
    return N(al, { id: v, path: y, labelX: x, labelY: E, label: s, labelStyle: l, labelShowBg: c, labelBgStyle: u, labelBgPadding: f, labelBgBorderRadius: d, style: p, markerEnd: h, markerStart: g, interactionWidth: m });
  });
}
const fW = XE({ isInternal: !1 }), ZE = XE({ isInternal: !0 });
fW.displayName = "StraightEdge";
ZE.displayName = "StraightEdgeInternal";
function QE(e) {
  return ve(({ id: t, sourceX: n, sourceY: r, targetX: o, targetY: i, sourcePosition: s = De.Bottom, targetPosition: l = De.Top, label: c, labelStyle: u, labelShowBg: f, labelBgStyle: d, labelBgPadding: p, labelBgBorderRadius: h, style: g, markerEnd: m, markerStart: y, pathOptions: x, interactionWidth: E }) => {
    const [v, w, S] = dm({
      sourceX: n,
      sourceY: r,
      sourcePosition: s,
      targetX: o,
      targetY: i,
      targetPosition: l,
      curvature: x == null ? void 0 : x.curvature
    }), T = e.isInternal ? void 0 : t;
    return N(al, { id: T, path: v, labelX: w, labelY: S, label: c, labelStyle: u, labelShowBg: f, labelBgStyle: d, labelBgPadding: p, labelBgBorderRadius: h, style: g, markerEnd: m, markerStart: y, interactionWidth: E });
  });
}
const pW = QE({ isInternal: !1 }), JE = QE({ isInternal: !0 });
pW.displayName = "BezierEdge";
JE.displayName = "BezierEdgeInternal";
const D0 = {
  default: JE,
  straight: ZE,
  step: GE,
  smoothstep: YE,
  simplebezier: WE
}, B0 = {
  sourceX: null,
  sourceY: null,
  targetX: null,
  targetY: null,
  sourcePosition: null,
  targetPosition: null
}, hW = (e, t, n) => n === De.Left ? e - t : n === De.Right ? e + t : e, mW = (e, t, n) => n === De.Top ? e - t : n === De.Bottom ? e + t : e, L0 = "react-flow__edgeupdater";
function F0({ position: e, centerX: t, centerY: n, radius: r = 10, onMouseDown: o, onMouseEnter: i, onMouseOut: s, type: l }) {
  return N("circle", { onMouseDown: o, onMouseEnter: i, onMouseOut: s, className: Xt([L0, `${L0}-${l}`]), cx: hW(t, r, e), cy: mW(n, r, e), r, stroke: "transparent", fill: "transparent" });
}
function gW({ isReconnectable: e, reconnectRadius: t, edge: n, sourceX: r, sourceY: o, targetX: i, targetY: s, sourcePosition: l, targetPosition: c, onReconnect: u, onReconnectStart: f, onReconnectEnd: d, setReconnecting: p, setUpdateHover: h }) {
  const g = $t(), m = (w, S) => {
    if (w.button !== 0)
      return;
    const { autoPanOnConnect: T, domNode: C, isValidConnection: R, connectionMode: I, connectionRadius: b, lib: k, onConnectStart: P, onConnectEnd: A, cancelConnection: O, nodeLookup: _, rfId: $, panBy: D, updateConnection: z } = g.getState(), B = S.type === "target";
    p(!0), f == null || f(w, n, S.type);
    const L = (W, U) => {
      p(!1), d == null || d(W, n, S.type, U);
    }, F = (W) => u == null ? void 0 : u(n, W);
    kp.onPointerDown(w.nativeEvent, {
      autoPanOnConnect: T,
      connectionMode: I,
      connectionRadius: b,
      domNode: C,
      handleId: S.id,
      nodeId: S.nodeId,
      nodeLookup: _,
      isTarget: B,
      edgeUpdaterType: S.type,
      lib: k,
      flowId: $,
      cancelConnection: O,
      panBy: D,
      isValidConnection: R,
      onConnect: F,
      onConnectStart: P,
      onConnectEnd: A,
      onReconnectEnd: L,
      updateConnection: z,
      getTransform: () => g.getState().transform,
      getFromHandle: () => g.getState().connection.fromHandle
    });
  }, y = (w) => m(w, { nodeId: n.target, id: n.targetHandle ?? null, type: "target" }), x = (w) => m(w, { nodeId: n.source, id: n.sourceHandle ?? null, type: "source" }), E = () => h(!0), v = () => h(!1);
  return we(rr, { children: [(e === !0 || e === "source") && N(F0, { position: l, centerX: r, centerY: o, radius: t, onMouseDown: y, onMouseEnter: E, onMouseOut: v, type: "source" }), (e === !0 || e === "target") && N(F0, { position: c, centerX: i, centerY: s, radius: t, onMouseDown: x, onMouseEnter: E, onMouseOut: v, type: "target" })] });
}
function yW({ id: e, edgesFocusable: t, edgesReconnectable: n, elementsSelectable: r, onClick: o, onDoubleClick: i, onContextMenu: s, onMouseEnter: l, onMouseMove: c, onMouseLeave: u, reconnectRadius: f, onReconnect: d, onReconnectStart: p, onReconnectEnd: h, rfId: g, edgeTypes: m, noPanClassName: y, onError: x, disableKeyboardA11y: E }) {
  let v = Ze((j) => j.edgeLookup.get(e));
  const w = Ze((j) => j.defaultEdgeOptions);
  v = w ? { ...w, ...v } : v;
  let S = v.type || "default", T = (m == null ? void 0 : m[S]) || D0[S];
  T === void 0 && (x == null || x("011", Sn.error011(S)), S = "default", T = D0.default);
  const C = !!(v.focusable || t && typeof v.focusable > "u"), R = typeof d < "u" && (v.reconnectable || n && typeof v.reconnectable > "u"), I = !!(v.selectable || r && typeof v.selectable > "u"), b = Ue(null), [k, P] = Jt(!1), [A, O] = Jt(!1), _ = $t(), { zIndex: $, sourceX: D, sourceY: z, targetX: B, targetY: L, sourcePosition: F, targetPosition: W } = Ze($e((j) => {
    const pe = j.nodeLookup.get(v.source), ce = j.nodeLookup.get(v.target);
    if (!pe || !ce)
      return {
        zIndex: v.zIndex,
        ...B0
      };
    const be = l3({
      id: e,
      sourceNode: pe,
      targetNode: ce,
      sourceHandle: v.sourceHandle || null,
      targetHandle: v.targetHandle || null,
      connectionMode: j.connectionMode,
      onError: x
    });
    return {
      zIndex: t3({
        selected: v.selected,
        zIndex: v.zIndex,
        sourceNode: pe,
        targetNode: ce,
        elevateOnSelect: j.elevateEdgesOnSelect
      }),
      ...be || B0
    };
  }, [v.source, v.target, v.sourceHandle, v.targetHandle, v.selected, v.zIndex]), Mt), U = Ye(() => v.markerStart ? `url('#${Cp(v.markerStart, g)}')` : void 0, [v.markerStart, g]), Z = Ye(() => v.markerEnd ? `url('#${Cp(v.markerEnd, g)}')` : void 0, [v.markerEnd, g]);
  if (v.hidden || D === null || z === null || B === null || L === null)
    return null;
  const Q = (j) => {
    var Pe;
    const { addSelectedEdges: pe, unselectNodesAndEdges: ce, multiSelectionActive: be } = _.getState();
    I && (_.setState({ nodesSelectionActive: !1 }), v.selected && be ? (ce({ nodes: [], edges: [v] }), (Pe = b.current) == null || Pe.blur()) : pe([e])), o && o(j, v);
  }, ee = i ? (j) => {
    i(j, { ...v });
  } : void 0, te = s ? (j) => {
    s(j, { ...v });
  } : void 0, q = l ? (j) => {
    l(j, { ...v });
  } : void 0, oe = c ? (j) => {
    c(j, { ...v });
  } : void 0, G = u ? (j) => {
    u(j, { ...v });
  } : void 0, ne = (j) => {
    var pe;
    if (!E && Z1.includes(j.key) && I) {
      const { unselectNodesAndEdges: ce, addSelectedEdges: be } = _.getState();
      j.key === "Escape" ? ((pe = b.current) == null || pe.blur(), ce({ edges: [v] })) : be([e]);
    }
  };
  return N("svg", { style: { zIndex: $ }, children: we("g", { className: Xt([
    "react-flow__edge",
    `react-flow__edge-${S}`,
    v.className,
    y,
    {
      selected: v.selected,
      animated: v.animated,
      inactive: !I && !o,
      updating: k,
      selectable: I
    }
  ]), onClick: Q, onDoubleClick: ee, onContextMenu: te, onMouseEnter: q, onMouseMove: oe, onMouseLeave: G, onKeyDown: C ? ne : void 0, tabIndex: C ? 0 : void 0, role: C ? "button" : "img", "data-id": e, "data-testid": `rf__edge-${e}`, "aria-label": v.ariaLabel === null ? void 0 : v.ariaLabel || `Edge from ${v.source} to ${v.target}`, "aria-describedby": C ? `${$E}-${g}` : void 0, ref: b, children: [!A && N(T, { id: e, source: v.source, target: v.target, type: v.type, selected: v.selected, animated: v.animated, selectable: I, deletable: v.deletable ?? !0, label: v.label, labelStyle: v.labelStyle, labelShowBg: v.labelShowBg, labelBgStyle: v.labelBgStyle, labelBgPadding: v.labelBgPadding, labelBgBorderRadius: v.labelBgBorderRadius, sourceX: D, sourceY: z, targetX: B, targetY: L, sourcePosition: F, targetPosition: W, data: v.data, style: v.style, sourceHandleId: v.sourceHandle, targetHandleId: v.targetHandle, markerStart: U, markerEnd: Z, pathOptions: "pathOptions" in v ? v.pathOptions : void 0, interactionWidth: v.interactionWidth }), R && N(gW, { edge: v, isReconnectable: R, reconnectRadius: f, onReconnect: d, onReconnectStart: p, onReconnectEnd: h, sourceX: D, sourceY: z, targetX: B, targetY: L, sourcePosition: F, targetPosition: W, setUpdateHover: P, setReconnecting: O })] }) });
}
const bW = (e) => ({
  edgesFocusable: e.edgesFocusable,
  edgesReconnectable: e.edgesReconnectable,
  elementsSelectable: e.elementsSelectable,
  connectionMode: e.connectionMode,
  onError: e.onError
});
function eT({ defaultMarkerColor: e, onlyRenderVisibleElements: t, rfId: n, edgeTypes: r, noPanClassName: o, onReconnect: i, onEdgeContextMenu: s, onEdgeMouseEnter: l, onEdgeMouseMove: c, onEdgeMouseLeave: u, onEdgeClick: f, reconnectRadius: d, onEdgeDoubleClick: p, onReconnectStart: h, onReconnectEnd: g, disableKeyboardA11y: m }) {
  const { edgesFocusable: y, edgesReconnectable: x, elementsSelectable: E, onError: v } = Ze(bW, Mt), w = rW(t);
  return we("div", { className: "react-flow__edges", children: [N(lW, { defaultColor: e, rfId: n }), w.map((S) => N(yW, { id: S, edgesFocusable: y, edgesReconnectable: x, elementsSelectable: E, noPanClassName: o, onReconnect: i, onContextMenu: s, onMouseEnter: l, onMouseMove: c, onMouseLeave: u, onClick: f, reconnectRadius: d, onDoubleClick: p, onReconnectStart: h, onReconnectEnd: g, rfId: n, onError: v, edgeTypes: r, disableKeyboardA11y: m }, S))] });
}
eT.displayName = "EdgeRenderer";
const vW = ve(eT), xW = (e) => `translate(${e.transform[0]}px,${e.transform[1]}px) scale(${e.transform[2]})`;
function wW({ children: e }) {
  const t = Ze(xW);
  return N("div", { className: "react-flow__viewport xyflow__viewport react-flow__container", style: { transform: t }, children: e });
}
function SW(e) {
  const t = ld(), n = Ue(!1);
  Xe(() => {
    !n.current && t.viewportInitialized && e && (setTimeout(() => e(t), 1), n.current = !0);
  }, [e, t.viewportInitialized]);
}
const EW = (e) => {
  var t;
  return (t = e.panZoom) == null ? void 0 : t.syncViewport;
};
function TW(e) {
  const t = Ze(EW), n = $t();
  return Xe(() => {
    e && (t == null || t(e), n.setState({ transform: [e.x, e.y, e.zoom] }));
  }, [e, t]), null;
}
function CW(e) {
  return e.connection.inProgress ? { ...e.connection, to: il(e.connection.to, e.transform) } : { ...e.connection };
}
function OW(e) {
  return CW;
}
function kW(e) {
  const t = OW();
  return Ze(t, Mt);
}
const RW = (e) => ({
  nodesConnectable: e.nodesConnectable,
  isValid: e.connection.isValid,
  inProgress: e.connection.inProgress,
  width: e.width,
  height: e.height
});
function NW({ containerStyle: e, style: t, type: n, component: r }) {
  const { nodesConnectable: o, width: i, height: s, isValid: l, inProgress: c } = Ze(RW, Mt);
  return !(i && o && c) ? null : N("svg", { style: e, width: i, height: s, className: "react-flow__connectionline react-flow__container", children: N("g", { className: Xt(["react-flow__connection", J1(l)]), children: N(tT, { style: t, type: n, CustomComponent: r, isValid: l }) }) });
}
const tT = ({ style: e, type: t = zn.Bezier, CustomComponent: n, isValid: r }) => {
  const { inProgress: o, from: i, fromNode: s, fromHandle: l, fromPosition: c, to: u, toNode: f, toHandle: d, toPosition: p } = kW();
  if (!o)
    return;
  if (n)
    return N(n, { connectionLineType: t, connectionLineStyle: e, fromNode: s, fromHandle: l, fromX: i.x, fromY: i.y, toX: u.x, toY: u.y, fromPosition: c, toPosition: p, connectionStatus: J1(r), toNode: f, toHandle: d });
  let h = "";
  const g = {
    sourceX: i.x,
    sourceY: i.y,
    sourcePosition: c,
    targetX: u.x,
    targetY: u.y,
    targetPosition: p
  };
  switch (t) {
    case zn.Bezier:
      [h] = dm(g);
      break;
    case zn.SimpleBezier:
      [h] = jE(g);
      break;
    case zn.Step:
      [h] = Tp({
        ...g,
        borderRadius: 0
      });
      break;
    case zn.SmoothStep:
      [h] = Tp(g);
      break;
    default:
      [h] = mE(g);
  }
  return N("path", { d: h, fill: "none", className: "react-flow__connection-path", style: e });
};
tT.displayName = "ConnectionLine";
const $W = {};
function z0(e = $W) {
  const t = Ue(e), n = $t();
  Xe(() => {
    var r, o;
    if (process.env.NODE_ENV === "development") {
      const i = /* @__PURE__ */ new Set([...Object.keys(t.current), ...Object.keys(e)]);
      for (const s of i)
        if (t.current[s] !== e[s]) {
          (o = (r = n.getState()).onError) == null || o.call(r, "002", Sn.error002());
          break;
        }
      t.current = e;
    }
  }, [e]);
}
function PW() {
  const e = $t(), t = Ue(!1);
  Xe(() => {
    var n, r;
    if (process.env.NODE_ENV === "development" && !t.current) {
      const o = document.querySelector(".react-flow__pane");
      o && window.getComputedStyle(o).zIndex !== "1" && ((r = (n = e.getState()).onError) == null || r.call(n, "013", Sn.error013("react"))), t.current = !0;
    }
  }, []);
}
function nT({ nodeTypes: e, edgeTypes: t, onInit: n, onNodeClick: r, onEdgeClick: o, onNodeDoubleClick: i, onEdgeDoubleClick: s, onNodeMouseEnter: l, onNodeMouseMove: c, onNodeMouseLeave: u, onNodeContextMenu: f, onSelectionContextMenu: d, onSelectionStart: p, onSelectionEnd: h, connectionLineType: g, connectionLineStyle: m, connectionLineComponent: y, connectionLineContainerStyle: x, selectionKeyCode: E, selectionOnDrag: v, selectionMode: w, multiSelectionKeyCode: S, panActivationKeyCode: T, zoomActivationKeyCode: C, deleteKeyCode: R, onlyRenderVisibleElements: I, elementsSelectable: b, defaultViewport: k, translateExtent: P, minZoom: A, maxZoom: O, preventScrolling: _, defaultMarkerColor: $, zoomOnScroll: D, zoomOnPinch: z, panOnScroll: B, panOnScrollSpeed: L, panOnScrollMode: F, zoomOnDoubleClick: W, panOnDrag: U, onPaneClick: Z, onPaneMouseEnter: Q, onPaneMouseMove: ee, onPaneMouseLeave: te, onPaneScroll: q, onPaneContextMenu: oe, paneClickDistance: G, nodeClickDistance: ne, onEdgeContextMenu: j, onEdgeMouseEnter: pe, onEdgeMouseMove: ce, onEdgeMouseLeave: be, reconnectRadius: Pe, onReconnect: Me, onReconnectStart: Ie, onReconnectEnd: Ne, noDragClassName: Fe, noWheelClassName: ke, noPanClassName: V, disableKeyboardA11y: J, nodeExtent: ie, rfId: X, viewport: H, onViewportChange: K }) {
  return z0(e), z0(t), PW(), SW(n), TW(H), N(KH, { onPaneClick: Z, onPaneMouseEnter: Q, onPaneMouseMove: ee, onPaneMouseLeave: te, onPaneContextMenu: oe, onPaneScroll: q, paneClickDistance: G, deleteKeyCode: R, selectionKeyCode: E, selectionOnDrag: v, selectionMode: w, onSelectionStart: p, onSelectionEnd: h, multiSelectionKeyCode: S, panActivationKeyCode: T, zoomActivationKeyCode: C, elementsSelectable: b, zoomOnScroll: D, zoomOnPinch: z, zoomOnDoubleClick: W, panOnScroll: B, panOnScrollSpeed: L, panOnScrollMode: F, panOnDrag: U, defaultViewport: k, translateExtent: P, minZoom: A, maxZoom: O, onSelectionContextMenu: d, preventScrolling: _, noDragClassName: Fe, noWheelClassName: ke, noPanClassName: V, disableKeyboardA11y: J, onViewportChange: K, isControlledViewport: !!H, children: we(wW, { children: [N(vW, { edgeTypes: t, onEdgeClick: o, onEdgeDoubleClick: s, onReconnect: Me, onReconnectStart: Ie, onReconnectEnd: Ne, onlyRenderVisibleElements: I, onEdgeContextMenu: j, onEdgeMouseEnter: pe, onEdgeMouseMove: ce, onEdgeMouseLeave: be, reconnectRadius: Pe, defaultMarkerColor: $, noPanClassName: V, disableKeyboardA11y: J, rfId: X }), N(NW, { style: m, type: g, component: y, containerStyle: x }), N("div", { className: "react-flow__edgelabel-renderer" }), N(nW, { nodeTypes: e, onNodeClick: r, onNodeDoubleClick: i, onNodeMouseEnter: l, onNodeMouseMove: c, onNodeMouseLeave: u, onNodeContextMenu: f, nodeClickDistance: ne, onlyRenderVisibleElements: I, noPanClassName: V, noDragClassName: Fe, disableKeyboardA11y: J, nodeExtent: ie, rfId: X }), N("div", { className: "react-flow__viewport-portal" })] }) });
}
nT.displayName = "GraphView";
const IW = ve(nT), V0 = ({ nodes: e, edges: t, defaultNodes: n, defaultEdges: r, width: o, height: i, fitView: s, fitViewOptions: l, minZoom: c = 0.5, maxZoom: u = 2, nodeOrigin: f, nodeExtent: d } = {}) => {
  const p = /* @__PURE__ */ new Map(), h = /* @__PURE__ */ new Map(), g = /* @__PURE__ */ new Map(), m = /* @__PURE__ */ new Map(), y = r ?? t ?? [], x = n ?? e ?? [], E = f ?? [0, 0], v = d ?? Na;
  yE(g, m, y);
  const w = Op(x, p, h, {
    nodeOrigin: E,
    nodeExtent: v,
    elevateNodesOnSelect: !1
  });
  let S = [0, 0, 1];
  if (s && o && i) {
    const T = ol(p, {
      filter: (b) => !!((b.width || b.initialWidth) && (b.height || b.initialHeight))
    }), { x: C, y: R, zoom: I } = cm(T, o, i, c, u, (l == null ? void 0 : l.padding) ?? 0.1);
    S = [C, R, I];
  }
  return {
    rfId: "1",
    width: 0,
    height: 0,
    transform: S,
    nodes: x,
    nodesInitialized: w,
    nodeLookup: p,
    parentLookup: h,
    edges: y,
    edgeLookup: m,
    connectionLookup: g,
    onNodesChange: null,
    onEdgesChange: null,
    hasDefaultNodes: n !== void 0,
    hasDefaultEdges: r !== void 0,
    panZoom: null,
    minZoom: c,
    maxZoom: u,
    translateExtent: Na,
    nodeExtent: v,
    nodesSelectionActive: !1,
    userSelectionActive: !1,
    userSelectionRect: null,
    connectionMode: es.Strict,
    domNode: null,
    paneDragging: !1,
    noPanClassName: "nopan",
    nodeOrigin: E,
    nodeDragThreshold: 1,
    snapGrid: [15, 15],
    snapToGrid: !1,
    nodesDraggable: !0,
    nodesConnectable: !0,
    nodesFocusable: !0,
    edgesFocusable: !0,
    edgesReconnectable: !0,
    elementsSelectable: !0,
    elevateNodesOnSelect: !0,
    elevateEdgesOnSelect: !1,
    selectNodesOnDrag: !0,
    multiSelectionActive: !1,
    fitViewQueued: s ?? !1,
    fitViewOptions: l,
    fitViewResolver: null,
    connection: { ...Q1 },
    connectionClickStartHandle: null,
    connectOnClick: !0,
    ariaLiveMessage: "",
    autoPanOnConnect: !0,
    autoPanOnNodeDrag: !0,
    autoPanSpeed: 15,
    connectionRadius: 20,
    onError: Uc,
    isValidConnection: void 0,
    onSelectionChangeHandlers: [],
    lib: "react",
    debug: !1
  };
}, _W = ({ nodes: e, edges: t, defaultNodes: n, defaultEdges: r, width: o, height: i, fitView: s, fitViewOptions: l, minZoom: c, maxZoom: u, nodeOrigin: f, nodeExtent: d }) => Z3((p, h) => {
  async function g() {
    const { nodeLookup: m, panZoom: y, fitViewOptions: x, fitViewResolver: E, width: v, height: w, minZoom: S, maxZoom: T } = h();
    y && (await G4({
      nodes: m,
      width: v,
      height: w,
      panZoom: y,
      minZoom: S,
      maxZoom: T
    }, x), E == null || E.resolve(!0), p({ fitViewResolver: null }));
  }
  return {
    ...V0({
      nodes: e,
      edges: t,
      width: o,
      height: i,
      fitView: s,
      fitViewOptions: l,
      minZoom: c,
      maxZoom: u,
      nodeOrigin: f,
      nodeExtent: d,
      defaultNodes: n,
      defaultEdges: r
    }),
    setNodes: (m) => {
      const { nodeLookup: y, parentLookup: x, nodeOrigin: E, elevateNodesOnSelect: v, fitViewQueued: w } = h(), S = Op(m, y, x, {
        nodeOrigin: E,
        nodeExtent: d,
        elevateNodesOnSelect: v,
        checkEquality: !0
      });
      w && S ? (g(), p({ nodes: m, nodesInitialized: S, fitViewQueued: !1, fitViewOptions: void 0 })) : p({ nodes: m, nodesInitialized: S });
    },
    setEdges: (m) => {
      const { connectionLookup: y, edgeLookup: x } = h();
      yE(y, x, m), p({ edges: m });
    },
    setDefaultNodesAndEdges: (m, y) => {
      if (m) {
        const { setNodes: x } = h();
        x(m), p({ hasDefaultNodes: !0 });
      }
      if (y) {
        const { setEdges: x } = h();
        x(y), p({ hasDefaultEdges: !0 });
      }
    },
    /*
     * Every node gets registerd at a ResizeObserver. Whenever a node
     * changes its dimensions, this function is called to measure the
     * new dimensions and update the nodes.
     */
    updateNodeInternals: (m) => {
      const { triggerNodeChanges: y, nodeLookup: x, parentLookup: E, domNode: v, nodeOrigin: w, nodeExtent: S, debug: T, fitViewQueued: C } = h(), { changes: R, updatedInternals: I } = h3(m, x, E, v, w, S);
      I && (d3(x, E, { nodeOrigin: w, nodeExtent: S }), C ? (g(), p({ fitViewQueued: !1, fitViewOptions: void 0 })) : p({}), (R == null ? void 0 : R.length) > 0 && (T && console.log("React Flow: trigger node changes", R), y == null || y(R)));
    },
    updateNodePositions: (m, y = !1) => {
      const x = [], E = [], { nodeLookup: v, triggerNodeChanges: w } = h();
      for (const [S, T] of m) {
        const C = v.get(S), R = !!(C != null && C.expandParent && (C != null && C.parentId) && (T != null && T.position)), I = {
          id: S,
          type: "position",
          position: R ? {
            x: Math.max(0, T.position.x),
            y: Math.max(0, T.position.y)
          } : T.position,
          dragging: y
        };
        R && C.parentId && x.push({
          id: S,
          parentId: C.parentId,
          rect: {
            ...T.internals.positionAbsolute,
            width: T.measured.width ?? 0,
            height: T.measured.height ?? 0
          }
        }), E.push(I);
      }
      if (x.length > 0) {
        const { parentLookup: S, nodeOrigin: T } = h(), C = mm(x, v, S, T);
        E.push(...C);
      }
      w(E);
    },
    triggerNodeChanges: (m) => {
      const { onNodesChange: y, setNodes: x, nodes: E, hasDefaultNodes: v, debug: w } = h();
      if (m != null && m.length) {
        if (v) {
          const S = bH(m, E);
          x(S);
        }
        w && console.log("React Flow: trigger node changes", m), y == null || y(m);
      }
    },
    triggerEdgeChanges: (m) => {
      const { onEdgesChange: y, setEdges: x, edges: E, hasDefaultEdges: v, debug: w } = h();
      if (m != null && m.length) {
        if (v) {
          const S = vH(m, E);
          x(S);
        }
        w && console.log("React Flow: trigger edge changes", m), y == null || y(m);
      }
    },
    addSelectedNodes: (m) => {
      const { multiSelectionActive: y, edgeLookup: x, nodeLookup: E, triggerNodeChanges: v, triggerEdgeChanges: w } = h();
      if (y) {
        const S = m.map((T) => Wo(T, !0));
        v(S);
        return;
      }
      v(Pi(E, /* @__PURE__ */ new Set([...m]), !0)), w(Pi(x));
    },
    addSelectedEdges: (m) => {
      const { multiSelectionActive: y, edgeLookup: x, nodeLookup: E, triggerNodeChanges: v, triggerEdgeChanges: w } = h();
      if (y) {
        const S = m.map((T) => Wo(T, !0));
        w(S);
        return;
      }
      w(Pi(x, /* @__PURE__ */ new Set([...m]))), v(Pi(E, /* @__PURE__ */ new Set(), !0));
    },
    unselectNodesAndEdges: ({ nodes: m, edges: y } = {}) => {
      const { edges: x, nodes: E, nodeLookup: v, triggerNodeChanges: w, triggerEdgeChanges: S } = h(), T = m || E, C = y || x, R = T.map((b) => {
        const k = v.get(b.id);
        return k && (k.selected = !1), Wo(b.id, !1);
      }), I = C.map((b) => Wo(b.id, !1));
      w(R), S(I);
    },
    setMinZoom: (m) => {
      const { panZoom: y, maxZoom: x } = h();
      y == null || y.setScaleExtent([m, x]), p({ minZoom: m });
    },
    setMaxZoom: (m) => {
      const { panZoom: y, minZoom: x } = h();
      y == null || y.setScaleExtent([x, m]), p({ maxZoom: m });
    },
    setTranslateExtent: (m) => {
      var y;
      (y = h().panZoom) == null || y.setTranslateExtent(m), p({ translateExtent: m });
    },
    setPaneClickDistance: (m) => {
      var y;
      (y = h().panZoom) == null || y.setClickDistance(m);
    },
    resetSelectedElements: () => {
      const { edges: m, nodes: y, triggerNodeChanges: x, triggerEdgeChanges: E, elementsSelectable: v } = h();
      if (!v)
        return;
      const w = y.reduce((T, C) => C.selected ? [...T, Wo(C.id, !1)] : T, []), S = m.reduce((T, C) => C.selected ? [...T, Wo(C.id, !1)] : T, []);
      x(w), E(S);
    },
    setNodeExtent: (m) => {
      const { nodes: y, nodeLookup: x, parentLookup: E, nodeOrigin: v, elevateNodesOnSelect: w, nodeExtent: S } = h();
      m[0][0] === S[0][0] && m[0][1] === S[0][1] && m[1][0] === S[1][0] && m[1][1] === S[1][1] || (Op(y, x, E, {
        nodeOrigin: v,
        nodeExtent: m,
        elevateNodesOnSelect: w,
        checkEquality: !1
      }), p({ nodeExtent: m }));
    },
    panBy: (m) => {
      const { transform: y, width: x, height: E, panZoom: v, translateExtent: w } = h();
      return m3({ delta: m, panZoom: v, transform: y, translateExtent: w, width: x, height: E });
    },
    cancelConnection: () => {
      p({
        connection: { ...Q1 }
      });
    },
    updateConnection: (m) => {
      p({ connection: m });
    },
    reset: () => p({ ...V0() })
  };
}, Object.is);
function rT({ initialNodes: e, initialEdges: t, defaultNodes: n, defaultEdges: r, initialWidth: o, initialHeight: i, initialMinZoom: s, initialMaxZoom: l, initialFitViewOptions: c, fitView: u, nodeOrigin: f, nodeExtent: d, children: p }) {
  const [h] = Jt(() => _W({
    nodes: e,
    edges: t,
    defaultNodes: n,
    defaultEdges: r,
    width: o,
    height: i,
    fitView: u,
    minZoom: s,
    maxZoom: l,
    fitViewOptions: c,
    nodeOrigin: f,
    nodeExtent: d
  }));
  return N(Q3, { value: h, children: N(EH, { children: p }) });
}
function MW({ children: e, nodes: t, edges: n, defaultNodes: r, defaultEdges: o, width: i, height: s, fitView: l, fitViewOptions: c, minZoom: u, maxZoom: f, nodeOrigin: d, nodeExtent: p }) {
  return Ro(ad) ? N(rr, { children: e }) : N(rT, { initialNodes: t, initialEdges: n, defaultNodes: r, defaultEdges: o, initialWidth: i, initialHeight: s, fitView: l, initialFitViewOptions: c, initialMinZoom: u, initialMaxZoom: f, nodeOrigin: d, nodeExtent: p, children: e });
}
const AW = {
  width: "100%",
  height: "100%",
  overflow: "hidden",
  position: "relative",
  zIndex: 0
};
function DW({ nodes: e, edges: t, defaultNodes: n, defaultEdges: r, className: o, nodeTypes: i, edgeTypes: s, onNodeClick: l, onEdgeClick: c, onInit: u, onMove: f, onMoveStart: d, onMoveEnd: p, onConnect: h, onConnectStart: g, onConnectEnd: m, onClickConnectStart: y, onClickConnectEnd: x, onNodeMouseEnter: E, onNodeMouseMove: v, onNodeMouseLeave: w, onNodeContextMenu: S, onNodeDoubleClick: T, onNodeDragStart: C, onNodeDrag: R, onNodeDragStop: I, onNodesDelete: b, onEdgesDelete: k, onDelete: P, onSelectionChange: A, onSelectionDragStart: O, onSelectionDrag: _, onSelectionDragStop: $, onSelectionContextMenu: D, onSelectionStart: z, onSelectionEnd: B, onBeforeDelete: L, connectionMode: F, connectionLineType: W = zn.Bezier, connectionLineStyle: U, connectionLineComponent: Z, connectionLineContainerStyle: Q, deleteKeyCode: ee = "Backspace", selectionKeyCode: te = "Shift", selectionOnDrag: q = !1, selectionMode: oe = $a.Full, panActivationKeyCode: G = "Space", multiSelectionKeyCode: ne = Yc() ? "Meta" : "Control", zoomActivationKeyCode: j = Yc() ? "Meta" : "Control", snapToGrid: pe, snapGrid: ce, onlyRenderVisibleElements: be = !1, selectNodesOnDrag: Pe, nodesDraggable: Me, nodesConnectable: Ie, nodesFocusable: Ne, nodeOrigin: Fe = PE, edgesFocusable: ke, edgesReconnectable: V, elementsSelectable: J = !0, defaultViewport: ie = dH, minZoom: X = 0.5, maxZoom: H = 2, translateExtent: K = Na, preventScrolling: re = !0, nodeExtent: he, defaultMarkerColor: me = "#b1b1b7", zoomOnScroll: le = !0, zoomOnPinch: se = !0, panOnScroll: ae = !1, panOnScrollSpeed: ge = 0.5, panOnScrollMode: Ce = Qo.Free, zoomOnDoubleClick: ue = !0, panOnDrag: Te = !0, onPaneClick: Le, onPaneMouseEnter: We, onPaneMouseMove: Qe, onPaneMouseLeave: Pt, onPaneScroll: ht, onPaneContextMenu: It, paneClickDistance: ze = 0, nodeClickDistance: it = 0, children: xt, onReconnect: _e, onReconnectStart: jt, onReconnectEnd: Dt, onEdgeContextMenu: Cn, onEdgeDoubleClick: di, onEdgeMouseEnter: _n, onEdgeMouseMove: Mn, onEdgeMouseLeave: cl, reconnectRadius: Ur = 10, onNodesChange: Em, onEdgesChange: OT, noDragClassName: kT = "nodrag", noWheelClassName: RT = "nowheel", noPanClassName: Tm = "nopan", fitView: Cm, fitViewOptions: Om, connectOnClick: NT, attributionPosition: $T, proOptions: PT, defaultEdgeOptions: IT, elevateNodesOnSelect: _T, elevateEdgesOnSelect: MT, disableKeyboardA11y: km = !1, autoPanOnConnect: AT, autoPanOnNodeDrag: DT, autoPanSpeed: BT, connectionRadius: LT, isValidConnection: FT, onError: zT, style: VT, id: Rm, nodeDragThreshold: jT, viewport: HT, onViewportChange: WT, width: UT, height: qT, colorMode: YT = "light", debug: KT, onScroll: ul, ...GT }, XT) {
  const dd = Rm || "1", ZT = mH(YT), QT = $e((Nm) => {
    Nm.currentTarget.scrollTo({ top: 0, left: 0, behavior: "instant" }), ul == null || ul(Nm);
  }, [ul]);
  return N("div", { "data-testid": "rf__wrapper", ...GT, onScroll: QT, style: { ...VT, ...AW }, ref: XT, className: Xt(["react-flow", o, ZT]), id: Rm, children: we(MW, { nodes: e, edges: t, width: UT, height: qT, fitView: Cm, fitViewOptions: Om, minZoom: X, maxZoom: H, nodeOrigin: Fe, nodeExtent: he, children: [N(IW, { onInit: u, onNodeClick: l, onEdgeClick: c, onNodeMouseEnter: E, onNodeMouseMove: v, onNodeMouseLeave: w, onNodeContextMenu: S, onNodeDoubleClick: T, nodeTypes: i, edgeTypes: s, connectionLineType: W, connectionLineStyle: U, connectionLineComponent: Z, connectionLineContainerStyle: Q, selectionKeyCode: te, selectionOnDrag: q, selectionMode: oe, deleteKeyCode: ee, multiSelectionKeyCode: ne, panActivationKeyCode: G, zoomActivationKeyCode: j, onlyRenderVisibleElements: be, defaultViewport: ie, translateExtent: K, minZoom: X, maxZoom: H, preventScrolling: re, zoomOnScroll: le, zoomOnPinch: se, zoomOnDoubleClick: ue, panOnScroll: ae, panOnScrollSpeed: ge, panOnScrollMode: Ce, panOnDrag: Te, onPaneClick: Le, onPaneMouseEnter: We, onPaneMouseMove: Qe, onPaneMouseLeave: Pt, onPaneScroll: ht, onPaneContextMenu: It, paneClickDistance: ze, nodeClickDistance: it, onSelectionContextMenu: D, onSelectionStart: z, onSelectionEnd: B, onReconnect: _e, onReconnectStart: jt, onReconnectEnd: Dt, onEdgeContextMenu: Cn, onEdgeDoubleClick: di, onEdgeMouseEnter: _n, onEdgeMouseMove: Mn, onEdgeMouseLeave: cl, reconnectRadius: Ur, defaultMarkerColor: me, noDragClassName: kT, noWheelClassName: RT, noPanClassName: Tm, rfId: dd, disableKeyboardA11y: km, nodeExtent: he, viewport: HT, onViewportChange: WT }), N(hH, { nodes: e, edges: t, defaultNodes: n, defaultEdges: r, onConnect: h, onConnectStart: g, onConnectEnd: m, onClickConnectStart: y, onClickConnectEnd: x, nodesDraggable: Me, nodesConnectable: Ie, nodesFocusable: Ne, edgesFocusable: ke, edgesReconnectable: V, elementsSelectable: J, elevateNodesOnSelect: _T, elevateEdgesOnSelect: MT, minZoom: X, maxZoom: H, nodeExtent: he, onNodesChange: Em, onEdgesChange: OT, snapToGrid: pe, snapGrid: ce, connectionMode: F, translateExtent: K, connectOnClick: NT, defaultEdgeOptions: IT, fitView: Cm, fitViewOptions: Om, onNodesDelete: b, onEdgesDelete: k, onDelete: P, onNodeDragStart: C, onNodeDrag: R, onNodeDragStop: I, onSelectionDrag: _, onSelectionDragStart: O, onSelectionDragStop: $, onMove: f, onMoveStart: d, onMoveEnd: p, noPanClassName: Tm, nodeOrigin: Fe, rfId: dd, autoPanOnConnect: AT, autoPanOnNodeDrag: DT, autoPanSpeed: BT, onError: zT, connectionRadius: LT, isValidConnection: FT, selectNodesOnDrag: Pe, nodeDragThreshold: jT, onBeforeDelete: L, paneClickDistance: ze, debug: KT }), N(uH, { onSelectionChange: A }), xt, N(iH, { proOptions: PT, position: $T }), N(rH, { rfId: dd, disableKeyboardA11y: km })] }) });
}
var BW = _E(DW);
const LW = (e) => {
  var t;
  return (t = e.domNode) == null ? void 0 : t.querySelector(".react-flow__edgelabel-renderer");
};
function FW({ children: e }) {
  const t = Ze(LW);
  return t ? oC(e, t) : null;
}
const zW = (e) => ({
  x: e.transform[0],
  y: e.transform[1],
  zoom: e.transform[2]
});
function VW() {
  return Ze(zW, Mt);
}
function jW({ dimensions: e, lineWidth: t, variant: n, className: r }) {
  return N("path", { strokeWidth: t, d: `M${e[0] / 2} 0 V${e[1]} M0 ${e[1] / 2} H${e[0]}`, className: Xt(["react-flow__background-pattern", n, r]) });
}
function HW({ radius: e, className: t }) {
  return N("circle", { cx: e, cy: e, r: e, className: Xt(["react-flow__background-pattern", "dots", t]) });
}
var So;
(function(e) {
  e.Lines = "lines", e.Dots = "dots", e.Cross = "cross";
})(So || (So = {}));
const WW = {
  [So.Dots]: 1,
  [So.Lines]: 1,
  [So.Cross]: 6
}, UW = (e) => ({ transform: e.transform, patternId: `pattern-${e.rfId}` });
function oT({
  id: e,
  variant: t = So.Dots,
  // only used for dots and cross
  gap: n = 20,
  // only used for lines and cross
  size: r,
  lineWidth: o = 1,
  offset: i = 0,
  color: s,
  bgColor: l,
  style: c,
  className: u,
  patternClassName: f
}) {
  const d = Ue(null), { transform: p, patternId: h } = Ze(UW, Mt), g = r || WW[t], m = t === So.Dots, y = t === So.Cross, x = Array.isArray(n) ? n : [n, n], E = [x[0] * p[2] || 1, x[1] * p[2] || 1], v = g * p[2], w = Array.isArray(i) ? i : [i, i], S = y ? [v, v] : E, T = [
    w[0] * p[2] || 1 + S[0] / 2,
    w[1] * p[2] || 1 + S[1] / 2
  ], C = `${h}${e || ""}`;
  return we("svg", { className: Xt(["react-flow__background", u]), style: {
    ...c,
    ...cd,
    "--xy-background-color-props": l,
    "--xy-background-pattern-color-props": s
  }, ref: d, "data-testid": "rf__background", children: [N("pattern", { id: C, x: p[0] % E[0], y: p[1] % E[1], width: E[0], height: E[1], patternUnits: "userSpaceOnUse", patternTransform: `translate(-${T[0]},-${T[1]})`, children: m ? N(HW, { radius: v / 2, className: f }) : N(jW, { dimensions: S, lineWidth: o, variant: t, className: f }) }), N("rect", { x: "0", y: "0", width: "100%", height: "100%", fill: `url(#${C})` })] });
}
oT.displayName = "Background";
ve(oT);
function qW() {
  return N("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 32 32", children: N("path", { d: "M32 18.133H18.133V32h-4.266V18.133H0v-4.266h13.867V0h4.266v13.867H32z" }) });
}
function YW() {
  return N("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 32 5", children: N("path", { d: "M0 0h32v4.2H0z" }) });
}
function KW() {
  return N("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 32 30", children: N("path", { d: "M3.692 4.63c0-.53.4-.938.939-.938h5.215V0H4.708C2.13 0 0 2.054 0 4.63v5.216h3.692V4.631zM27.354 0h-5.2v3.692h5.17c.53 0 .984.4.984.939v5.215H32V4.631A4.624 4.624 0 0027.354 0zm.954 24.83c0 .532-.4.94-.939.94h-5.215v3.768h5.215c2.577 0 4.631-2.13 4.631-4.707v-5.139h-3.692v5.139zm-23.677.94c-.531 0-.939-.4-.939-.94v-5.138H0v5.139c0 2.577 2.13 4.707 4.708 4.707h5.138V25.77H4.631z" }) });
}
function GW() {
  return N("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 25 32", children: N("path", { d: "M21.333 10.667H19.81V7.619C19.81 3.429 16.38 0 12.19 0 8 0 4.571 3.429 4.571 7.619v3.048H3.048A3.056 3.056 0 000 13.714v15.238A3.056 3.056 0 003.048 32h18.285a3.056 3.056 0 003.048-3.048V13.714a3.056 3.056 0 00-3.048-3.047zM12.19 24.533a3.056 3.056 0 01-3.047-3.047 3.056 3.056 0 013.047-3.048 3.056 3.056 0 013.048 3.048 3.056 3.056 0 01-3.048 3.047zm4.724-13.866H7.467V7.619c0-2.59 2.133-4.724 4.723-4.724 2.591 0 4.724 2.133 4.724 4.724v3.048z" }) });
}
function XW() {
  return N("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 25 32", children: N("path", { d: "M21.333 10.667H19.81V7.619C19.81 3.429 16.38 0 12.19 0c-4.114 1.828-1.37 2.133.305 2.438 1.676.305 4.42 2.59 4.42 5.181v3.048H3.047A3.056 3.056 0 000 13.714v15.238A3.056 3.056 0 003.048 32h18.285a3.056 3.056 0 003.048-3.048V13.714a3.056 3.056 0 00-3.048-3.047zM12.19 24.533a3.056 3.056 0 01-3.047-3.047 3.056 3.056 0 013.047-3.048 3.056 3.056 0 013.048 3.048 3.056 3.056 0 01-3.048 3.047z" }) });
}
function Hl({ children: e, className: t, ...n }) {
  return N("button", { type: "button", className: Xt(["react-flow__controls-button", t]), ...n, children: e });
}
const ZW = (e) => ({
  isInteractive: e.nodesDraggable || e.nodesConnectable || e.elementsSelectable,
  minZoomReached: e.transform[2] <= e.minZoom,
  maxZoomReached: e.transform[2] >= e.maxZoom
});
function iT({ style: e, showZoom: t = !0, showFitView: n = !0, showInteractive: r = !0, fitViewOptions: o, onZoomIn: i, onZoomOut: s, onFitView: l, onInteractiveChange: c, className: u, children: f, position: d = "bottom-left", orientation: p = "vertical", "aria-label": h = "React Flow controls" }) {
  const g = $t(), { isInteractive: m, minZoomReached: y, maxZoomReached: x } = Ze(ZW, Mt), { zoomIn: E, zoomOut: v, fitView: w } = ld(), S = () => {
    E(), i == null || i();
  }, T = () => {
    v(), s == null || s();
  }, C = () => {
    w(o), l == null || l();
  }, R = () => {
    g.setState({
      nodesDraggable: !m,
      nodesConnectable: !m,
      elementsSelectable: !m
    }), c == null || c(!m);
  };
  return we(sl, { className: Xt(["react-flow__controls", p === "horizontal" ? "horizontal" : "vertical", u]), position: d, style: e, "data-testid": "rf__controls", "aria-label": h, children: [t && we(rr, { children: [N(Hl, { onClick: S, className: "react-flow__controls-zoomin", title: "zoom in", "aria-label": "zoom in", disabled: x, children: N(qW, {}) }), N(Hl, { onClick: T, className: "react-flow__controls-zoomout", title: "zoom out", "aria-label": "zoom out", disabled: y, children: N(YW, {}) })] }), n && N(Hl, { className: "react-flow__controls-fitview", onClick: C, title: "fit view", "aria-label": "fit view", children: N(KW, {}) }), r && N(Hl, { className: "react-flow__controls-interactive", onClick: R, title: "toggle interactivity", "aria-label": "toggle interactivity", children: m ? N(XW, {}) : N(GW, {}) }), f] });
}
iT.displayName = "Controls";
ve(iT);
function QW({ id: e, x: t, y: n, width: r, height: o, style: i, color: s, strokeColor: l, strokeWidth: c, className: u, borderRadius: f, shapeRendering: d, selected: p, onClick: h }) {
  const { background: g, backgroundColor: m } = i || {}, y = s || g || m;
  return N("rect", { className: Xt(["react-flow__minimap-node", { selected: p }, u]), x: t, y: n, rx: f, ry: f, width: r, height: o, style: {
    fill: y,
    stroke: l,
    strokeWidth: c
  }, shapeRendering: d, onClick: h ? (x) => h(x, e) : void 0 });
}
const JW = ve(QW), e6 = (e) => e.nodes.map((t) => t.id), gf = (e) => e instanceof Function ? e : () => e;
function t6({
  nodeStrokeColor: e,
  nodeColor: t,
  nodeClassName: n = "",
  nodeBorderRadius: r = 5,
  nodeStrokeWidth: o,
  /*
   * We need to rename the prop to be `CapitalCase` so that JSX will render it as
   * a component properly.
   */
  nodeComponent: i = JW,
  onClick: s
}) {
  const l = Ze(e6, Mt), c = gf(t), u = gf(e), f = gf(n), d = typeof window > "u" || window.chrome ? "crispEdges" : "geometricPrecision";
  return N(rr, { children: l.map((p) => (
    /*
     * The split of responsibilities between MiniMapNodes and
     * NodeComponentWrapper may appear weird. However, it’s designed to
     * minimize the cost of updates when individual nodes change.
     *
     * For more details, see a similar commit in `NodeRenderer/index.tsx`.
     */
    N(r6, { id: p, nodeColorFunc: c, nodeStrokeColorFunc: u, nodeClassNameFunc: f, nodeBorderRadius: r, nodeStrokeWidth: o, NodeComponent: i, onClick: s, shapeRendering: d }, p)
  )) });
}
function n6({ id: e, nodeColorFunc: t, nodeStrokeColorFunc: n, nodeClassNameFunc: r, nodeBorderRadius: o, nodeStrokeWidth: i, shapeRendering: s, NodeComponent: l, onClick: c }) {
  const { node: u, x: f, y: d, width: p, height: h } = Ze((g) => {
    const { internals: m } = g.nodeLookup.get(e), y = m.userNode, { x, y: E } = m.positionAbsolute, { width: v, height: w } = fo(y);
    return {
      node: y,
      x,
      y: E,
      width: v,
      height: w
    };
  }, Mt);
  return !u || u.hidden || !sE(u) ? null : N(l, { x: f, y: d, width: p, height: h, style: u.style, selected: !!u.selected, className: r(u), color: t(u), borderRadius: o, strokeColor: n(u), strokeWidth: i, shapeRendering: s, onClick: c, id: u.id });
}
const r6 = ve(n6);
var o6 = ve(t6);
const i6 = 200, s6 = 150, a6 = (e) => !e.hidden, l6 = (e) => {
  const t = {
    x: -e.transform[0] / e.transform[2],
    y: -e.transform[1] / e.transform[2],
    width: e.width / e.transform[2],
    height: e.height / e.transform[2]
  };
  return {
    viewBB: t,
    boundingRect: e.nodeLookup.size > 0 ? iE(ol(e.nodeLookup, { filter: a6 }), t) : t,
    rfId: e.rfId,
    panZoom: e.panZoom,
    translateExtent: e.translateExtent,
    flowWidth: e.width,
    flowHeight: e.height
  };
}, c6 = "react-flow__minimap-desc";
function sT({
  style: e,
  className: t,
  nodeStrokeColor: n,
  nodeColor: r,
  nodeClassName: o = "",
  nodeBorderRadius: i = 5,
  nodeStrokeWidth: s,
  /*
   * We need to rename the prop to be `CapitalCase` so that JSX will render it as
   * a component properly.
   */
  nodeComponent: l,
  bgColor: c,
  maskColor: u,
  maskStrokeColor: f,
  maskStrokeWidth: d,
  position: p = "bottom-right",
  onClick: h,
  onNodeClick: g,
  pannable: m = !1,
  zoomable: y = !1,
  ariaLabel: x = "React Flow mini map",
  inversePan: E,
  zoomStep: v = 10,
  offsetScale: w = 5
}) {
  const S = $t(), T = Ue(null), { boundingRect: C, viewBB: R, rfId: I, panZoom: b, translateExtent: k, flowWidth: P, flowHeight: A } = Ze(l6, Mt), O = (e == null ? void 0 : e.width) ?? i6, _ = (e == null ? void 0 : e.height) ?? s6, $ = C.width / O, D = C.height / _, z = Math.max($, D), B = z * O, L = z * _, F = w * z, W = C.x - (B - C.width) / 2 - F, U = C.y - (L - C.height) / 2 - F, Z = B + F * 2, Q = L + F * 2, ee = `${c6}-${I}`, te = Ue(0), q = Ue();
  te.current = z, Xe(() => {
    if (T.current && b)
      return q.current = E3({
        domNode: T.current,
        panZoom: b,
        getTransform: () => S.getState().transform,
        getViewScale: () => te.current
      }), () => {
        var ne;
        (ne = q.current) == null || ne.destroy();
      };
  }, [b]), Xe(() => {
    var ne;
    (ne = q.current) == null || ne.update({
      translateExtent: k,
      width: P,
      height: A,
      inversePan: E,
      pannable: m,
      zoomStep: v,
      zoomable: y
    });
  }, [m, y, E, v, k, P, A]);
  const oe = h ? (ne) => {
    var ce;
    const [j, pe] = ((ce = q.current) == null ? void 0 : ce.pointer(ne)) || [0, 0];
    h(ne, { x: j, y: pe });
  } : void 0, G = g ? $e((ne, j) => {
    const pe = S.getState().nodeLookup.get(j).internals.userNode;
    g(ne, pe);
  }, []) : void 0;
  return N(sl, { position: p, style: {
    ...e,
    "--xy-minimap-background-color-props": typeof c == "string" ? c : void 0,
    "--xy-minimap-mask-background-color-props": typeof u == "string" ? u : void 0,
    "--xy-minimap-mask-stroke-color-props": typeof f == "string" ? f : void 0,
    "--xy-minimap-mask-stroke-width-props": typeof d == "number" ? d * z : void 0,
    "--xy-minimap-node-background-color-props": typeof r == "string" ? r : void 0,
    "--xy-minimap-node-stroke-color-props": typeof n == "string" ? n : void 0,
    "--xy-minimap-node-stroke-width-props": typeof s == "number" ? s : void 0
  }, className: Xt(["react-flow__minimap", t]), "data-testid": "rf__minimap", children: we("svg", { width: O, height: _, viewBox: `${W} ${U} ${Z} ${Q}`, className: "react-flow__minimap-svg", role: "img", "aria-labelledby": ee, ref: T, onClick: oe, children: [x && N("title", { id: ee, children: x }), N(o6, { onClick: G, nodeColor: r, nodeStrokeColor: n, nodeBorderRadius: i, nodeClassName: o, nodeStrokeWidth: s, nodeComponent: l }), N("path", { className: "react-flow__minimap-mask", d: `M${W - F},${U - F}h${Z + F * 2}v${Q + F * 2}h${-Z - F * 2}z
        M${R.x},${R.y}h${R.width}v${R.height}h${-R.width}z`, fillRule: "evenodd", pointerEvents: "none" })] }) });
}
sT.displayName = "MiniMap";
const u6 = ve(sT);
function d6({ nodeId: e, position: t, variant: n = ia.Handle, className: r, style: o = {}, children: i, color: s, minWidth: l = 10, minHeight: c = 10, maxWidth: u = Number.MAX_VALUE, maxHeight: f = Number.MAX_VALUE, keepAspectRatio: d = !1, resizeDirection: p, shouldResize: h, onResizeStart: g, onResize: m, onResizeEnd: y }) {
  const x = BE(), E = typeof e == "string" ? e : x, v = $t(), w = Ue(null), S = n === ia.Line ? "right" : "bottom-right", T = t ?? S, C = Ue(null);
  Xe(() => {
    if (!(!w.current || !E))
      return C.current || (C.current = L3({
        domNode: w.current,
        nodeId: E,
        getStoreItems: () => {
          const { nodeLookup: k, transform: P, snapGrid: A, snapToGrid: O, nodeOrigin: _, domNode: $ } = v.getState();
          return {
            nodeLookup: k,
            transform: P,
            snapGrid: A,
            snapToGrid: O,
            nodeOrigin: _,
            paneDomNode: $
          };
        },
        onChange: (k, P) => {
          const { triggerNodeChanges: A, nodeLookup: O, parentLookup: _, nodeOrigin: $ } = v.getState(), D = [], z = { x: k.x, y: k.y }, B = O.get(E);
          if (B && B.expandParent && B.parentId) {
            const L = B.origin ?? $, F = k.width ?? B.measured.width ?? 0, W = k.height ?? B.measured.height ?? 0, U = {
              id: B.id,
              parentId: B.parentId,
              rect: {
                width: F,
                height: W,
                ...aE({
                  x: k.x ?? B.position.x,
                  y: k.y ?? B.position.y
                }, { width: F, height: W }, B.parentId, O, L)
              }
            }, Z = mm([U], O, _, $);
            D.push(...Z), z.x = k.x ? Math.max(L[0] * F, k.x) : void 0, z.y = k.y ? Math.max(L[1] * W, k.y) : void 0;
          }
          if (z.x !== void 0 && z.y !== void 0) {
            const L = {
              id: E,
              type: "position",
              position: { ...z }
            };
            D.push(L);
          }
          if (k.width !== void 0 && k.height !== void 0) {
            const F = {
              id: E,
              type: "dimensions",
              resizing: !0,
              setAttributes: p ? p === "horizontal" ? "width" : "height" : !0,
              dimensions: {
                width: k.width,
                height: k.height
              }
            };
            D.push(F);
          }
          for (const L of P) {
            const F = {
              ...L,
              type: "position"
            };
            D.push(F);
          }
          A(D);
        },
        onEnd: ({ width: k, height: P }) => {
          const A = {
            id: E,
            type: "dimensions",
            resizing: !1,
            dimensions: {
              width: k,
              height: P
            }
          };
          v.getState().triggerNodeChanges([A]);
        }
      })), C.current.update({
        controlPosition: T,
        boundaries: {
          minWidth: l,
          minHeight: c,
          maxWidth: u,
          maxHeight: f
        },
        keepAspectRatio: d,
        resizeDirection: p,
        onResizeStart: g,
        onResize: m,
        onResizeEnd: y,
        shouldResize: h
      }), () => {
        var k;
        (k = C.current) == null || k.destroy();
      };
  }, [
    T,
    l,
    c,
    u,
    f,
    d,
    g,
    m,
    y,
    h
  ]);
  const R = T.split("-"), I = n === ia.Line ? "borderColor" : "backgroundColor", b = s ? { ...o, [I]: s } : o;
  return N("div", { className: Xt(["react-flow__resize-control", "nodrag", ...R, n, r]), ref: w, style: b, children: i });
}
const f6 = ve(d6);
var is = /* @__PURE__ */ ((e) => (e.Base = "Base", e.Group = "Group", e))(is || {}), Gc = /* @__PURE__ */ ((e) => (e.Base = "Base", e.DeleteLabel = "DeleteLabel", e))(Gc || {}), aT = ((e) => (e[e.Arrow = ts.Arrow] = "Arrow", e[e.ArrowClosed = ts.ArrowClosed] = "ArrowClosed", e))(aT || {}), lT = ((e) => (e[e.Bezier = zn.Bezier] = "Bezier", e[e.SimpleBezier = zn.SimpleBezier] = "SimpleBezier", e[e.Step = zn.Step] = "Step", e[e.SmoothStep = zn.SmoothStep] = "SmoothStep", e[e.Straight = zn.Straight] = "Straight", e))(lT || {});
const cT = Fo()(
  ci(
    (e) => ({
      logger: (t, n) => console.log(`${t}: ${n}`),
      hotkeys: {
        enabled: !1,
        keys: {
          copy: "mod+c",
          paste: "mod+v",
          delete: "delete",
          cut: "mod+x",
          undo: "mod+z",
          redo: "mod+shift+z"
        }
      },
      canvas: {
        isGridLayout: !1,
        gridLayoutGap: [20, 20],
        minZoom: 0.5,
        // 50%
        maxZoom: 2,
        // 200%
        zoomDuration: 200,
        zoomStep: 1
      },
      styles: {
        nodeWidth: 250,
        nodeMinHeight: 100,
        nodeMaxHeight: "auto",
        edgeWidth: 2,
        edgeType: Gc.DeleteLabel,
        edgeEndMarkerType: aT.ArrowClosed,
        connectionLineType: lT.Bezier,
        connectionPosition: {
          source: "right",
          target: "left"
        }
      },
      minimap: {
        enabled: !0,
        position: "bottom-left",
        width: 160
      },
      undoRedo: {
        enabled: !0,
        position: "bottom-left",
        tooltips: { undo: "Undo", redo: "Redo", history: "Undo/Redo History" },
        maxHistoryLength: 10
      },
      setHotkeys: (t) => e((n) => ({ hotkeys: { ...n.hotkeys, ...t } })),
      setCanvas: (t) => e((n) => ({ canvas: { ...n.canvas, ...t } })),
      setStyles: (t) => e((n) => ({ styles: { ...n.styles, ...t } })),
      setMinimap: (t) => e((n) => ({ minimap: { ...n.minimap, ...t } })),
      setUndoRedo: (t) => e((n) => ({ undoRedo: { ...n.undoRedo, ...t } }))
    }),
    {
      name: "VENOMOUS_UI__WORKFLOW_CONFIGS",
      store: "VENOMOUS_UI__WORKFLOW_CONFIGS"
    }
  )
);
function p6() {
  return cT.getState();
}
function Tn() {
  return ao(cT);
}
function br() {
  return ld();
}
function uT() {
  const e = Tn(), { zoomIn: t, zoomOut: n, zoomTo: r, getZoom: o, fitView: i, setCenter: s, setNodes: l, setEdges: c, updateNode: u } = br(), f = VW(), d = Ye(() => f, [f]), p = $e(async () => {
    await t({ duration: e.canvas.zoomDuration });
  }, [t, e.canvas.zoomDuration]), h = $e(async () => {
    await n({ duration: e.canvas.zoomDuration });
  }, [n, e.canvas.zoomDuration]), g = $e(
    async (x, E = !0) => {
      await r(x, {
        duration: E ? 0 : e.canvas.zoomDuration
      });
    },
    [r, e.canvas.zoomDuration]
  ), m = $e(
    async (x = !0) => {
      await i({ duration: x ? 0 : e.canvas.zoomDuration });
    },
    [i, e.canvas.zoomDuration]
  ), y = $e(
    async (x, { x: E, y: v }) => {
      const w = o();
      await s(E + e.styles.nodeWidth / 2, v + e.styles.nodeMinHeight / 2, {
        duration: e.canvas.zoomDuration,
        zoom: w
      }), l((S) => S.map((T) => ({ ...T, selected: !1 }))), c((S) => S.map((T) => ({ ...T, selected: !1 }))), u(x, { selected: !0 });
    },
    [
      o,
      s,
      l,
      c,
      u,
      e.canvas.zoomDuration,
      e.styles.nodeWidth,
      e.styles.nodeMinHeight
    ]
  );
  return {
    currentViewport: d,
    increaseZoom: p,
    decreaseZoom: h,
    setZoom: g,
    moveToSpecificNode: y,
    autoView: m
  };
}
function h6(e, t, { signal: n, edges: r } = {}) {
  let o, i = null;
  const s = r != null && r.includes("leading"), l = r == null || r.includes("trailing"), c = () => {
    i !== null && (e.apply(o, i), o = void 0, i = null);
  }, u = () => {
    l && c(), h();
  };
  let f = null;
  const d = () => {
    f != null && clearTimeout(f), f = setTimeout(() => {
      f = null, u();
    }, t);
  }, p = () => {
    f !== null && (clearTimeout(f), f = null);
  }, h = () => {
    p(), o = void 0, i = null;
  }, g = () => {
    p(), c();
  }, m = function(...y) {
    if (n != null && n.aborted)
      return;
    o = this, i = y;
    const x = f == null;
    d(), s && x && c();
  };
  return m.schedule = d, m.cancel = h, m.flush = g, n == null || n.addEventListener("abort", h, { once: !0 }), m;
}
function m6() {
}
function j0(e) {
  return Object.getOwnPropertySymbols(e).filter((t) => Object.prototype.propertyIsEnumerable.call(e, t));
}
function H0(e) {
  return e == null ? e === void 0 ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(e);
}
const g6 = "[object RegExp]", y6 = "[object String]", b6 = "[object Number]", v6 = "[object Boolean]", W0 = "[object Arguments]", x6 = "[object Symbol]", w6 = "[object Date]", S6 = "[object Map]", E6 = "[object Set]", T6 = "[object Array]", C6 = "[object Function]", O6 = "[object ArrayBuffer]", yf = "[object Object]", k6 = "[object Error]", R6 = "[object DataView]", N6 = "[object Uint8Array]", $6 = "[object Uint8ClampedArray]", P6 = "[object Uint16Array]", I6 = "[object Uint32Array]", _6 = "[object BigUint64Array]", M6 = "[object Int8Array]", A6 = "[object Int16Array]", D6 = "[object Int32Array]", B6 = "[object BigInt64Array]", L6 = "[object Float32Array]", F6 = "[object Float64Array]";
function U0(e) {
  if (!e || typeof e != "object")
    return !1;
  const t = Object.getPrototypeOf(e);
  return t === null || t === Object.prototype || Object.getPrototypeOf(t) === null ? Object.prototype.toString.call(e) === "[object Object]" : !1;
}
function z6(e, t) {
  return e === t || Number.isNaN(e) && Number.isNaN(t);
}
function V6(e, t, n) {
  return qs(e, t, void 0, void 0, void 0, void 0, n);
}
function qs(e, t, n, r, o, i, s) {
  const l = s(e, t, n, r, o, i);
  if (l !== void 0)
    return l;
  if (typeof e == typeof t)
    switch (typeof e) {
      case "bigint":
      case "string":
      case "boolean":
      case "symbol":
      case "undefined":
        return e === t;
      case "number":
        return e === t || Object.is(e, t);
      case "function":
        return e === t;
      case "object":
        return sa(e, t, i, s);
    }
  return sa(e, t, i, s);
}
function sa(e, t, n, r) {
  if (Object.is(e, t))
    return !0;
  let o = H0(e), i = H0(t);
  if (o === W0 && (o = yf), i === W0 && (i = yf), o !== i)
    return !1;
  switch (o) {
    case y6:
      return e.toString() === t.toString();
    case b6: {
      const c = e.valueOf(), u = t.valueOf();
      return z6(c, u);
    }
    case v6:
    case w6:
    case x6:
      return Object.is(e.valueOf(), t.valueOf());
    case g6:
      return e.source === t.source && e.flags === t.flags;
    case C6:
      return e === t;
  }
  n = n ?? /* @__PURE__ */ new Map();
  const s = n.get(e), l = n.get(t);
  if (s != null && l != null)
    return s === t;
  n.set(e, t), n.set(t, e);
  try {
    switch (o) {
      case S6: {
        if (e.size !== t.size)
          return !1;
        for (const [c, u] of e.entries())
          if (!t.has(c) || !qs(u, t.get(c), c, e, t, n, r))
            return !1;
        return !0;
      }
      case E6: {
        if (e.size !== t.size)
          return !1;
        const c = Array.from(e.values()), u = Array.from(t.values());
        for (let f = 0; f < c.length; f++) {
          const d = c[f], p = u.findIndex((h) => qs(d, h, void 0, e, t, n, r));
          if (p === -1)
            return !1;
          u.splice(p, 1);
        }
        return !0;
      }
      case T6:
      case N6:
      case $6:
      case P6:
      case I6:
      case _6:
      case M6:
      case A6:
      case D6:
      case B6:
      case L6:
      case F6: {
        if (typeof Buffer < "u" && Buffer.isBuffer(e) !== Buffer.isBuffer(t) || e.length !== t.length)
          return !1;
        for (let c = 0; c < e.length; c++)
          if (!qs(e[c], t[c], c, e, t, n, r))
            return !1;
        return !0;
      }
      case O6:
        return e.byteLength !== t.byteLength ? !1 : sa(new Uint8Array(e), new Uint8Array(t), n, r);
      case R6:
        return e.byteLength !== t.byteLength || e.byteOffset !== t.byteOffset ? !1 : sa(new Uint8Array(e), new Uint8Array(t), n, r);
      case k6:
        return e.name === t.name && e.message === t.message;
      case yf: {
        if (!(sa(e.constructor, t.constructor, n, r) || U0(e) && U0(t)))
          return !1;
        const u = [...Object.keys(e), ...j0(e)], f = [...Object.keys(t), ...j0(t)];
        if (u.length !== f.length)
          return !1;
        for (let d = 0; d < u.length; d++) {
          const p = u[d], h = e[p];
          if (!Object.hasOwn(t, p))
            return !1;
          const g = t[p];
          if (!qs(h, g, p, e, t, n, r))
            return !1;
        }
        return !0;
      }
      default:
        return !1;
    }
  } finally {
    n.delete(e), n.delete(t);
  }
}
function ym(e, t) {
  return V6(e, t, m6);
}
var q0 = (e, t, n) => (o, i) => ({
  pastStates: (n == null ? void 0 : n.pastStates) || [],
  futureStates: (n == null ? void 0 : n.futureStates) || [],
  undo: (s = 1) => {
    var l, c;
    if (i().pastStates.length) {
      const u = ((l = n == null ? void 0 : n.partialize) == null ? void 0 : l.call(n, t())) || t(), f = i().pastStates.splice(-s, s), d = f.shift();
      e(d), o({
        pastStates: i().pastStates,
        futureStates: i().futureStates.concat(
          ((c = n == null ? void 0 : n.diff) == null ? void 0 : c.call(n, u, d)) || u,
          f.reverse()
        )
      });
    }
  },
  redo: (s = 1) => {
    var l, c;
    if (i().futureStates.length) {
      const u = ((l = n == null ? void 0 : n.partialize) == null ? void 0 : l.call(n, t())) || t(), f = i().futureStates.splice(-s, s), d = f.shift();
      e(d), o({
        pastStates: i().pastStates.concat(
          ((c = n == null ? void 0 : n.diff) == null ? void 0 : c.call(n, u, d)) || u,
          f.reverse()
        ),
        futureStates: i().futureStates
      });
    }
  },
  clear: () => o({ pastStates: [], futureStates: [] }),
  isTracking: !0,
  pause: () => o({ isTracking: !1 }),
  resume: () => o({ isTracking: !0 }),
  setOnSave: (s) => o({ _onSave: s }),
  // Internal properties
  _onSave: n == null ? void 0 : n.onSave,
  _handleSet: (s, l, c, u) => {
    var f, d;
    n != null && n.limit && i().pastStates.length >= (n == null ? void 0 : n.limit) && i().pastStates.shift(), (d = (f = i())._onSave) == null || d.call(f, s, c), o({
      pastStates: i().pastStates.concat(u || s),
      futureStates: []
    });
  }
}), j6 = (e, t) => (r, o, i) => {
  var u, f;
  i.temporal = c1(
    ((u = t == null ? void 0 : t.wrapTemporal) == null ? void 0 : u.call(t, q0(r, o, t))) || q0(r, o, t)
  );
  const s = ((f = t == null ? void 0 : t.handleSet) == null ? void 0 : f.call(
    t,
    i.temporal.getState()._handleSet
  )) || i.temporal.getState()._handleSet, l = (d) => {
    var g, m, y;
    if (!i.temporal.getState().isTracking) return;
    const p = ((g = t == null ? void 0 : t.partialize) == null ? void 0 : g.call(t, o())) || o(), h = (m = t == null ? void 0 : t.diff) == null ? void 0 : m.call(t, d, p);
    // If the user has provided a diff function but nothing has been changed, deltaState will be null
    h === null || // If the user has provided an equality function, use it
    (y = t == null ? void 0 : t.equality) != null && y.call(t, d, p) || s(
      d,
      void 0,
      p,
      h
    );
  }, c = i.setState;
  return i.setState = (...d) => {
    var h;
    const p = ((h = t == null ? void 0 : t.partialize) == null ? void 0 : h.call(t, o())) || o();
    c(...d), l(p);
  }, e(
    // Modify the set function to call the userlandSet function
    (...d) => {
      var h;
      const p = ((h = t == null ? void 0 : t.partialize) == null ? void 0 : h.call(t, o())) || o();
      r(...d), l(p);
    },
    o,
    i
  );
}, dn = /* @__PURE__ */ ((e) => (e.Init = "Init", e.Reset = "Reset", e.CanvasBlankClicked = "CanvasBlankClicked", e.SaveVersionChanged = "SaveVersionChanged", e.ElementsFileUploaded = "ElementsFileUploaded", e.ElementsFileDownloaded = "ElementsFileDownloaded", e.ElementsSelected = "ElementsSelected", e.ElementsDeleted = "ElementsDeleted", e.ElementsCopied = "ElementsCopied", e.ElementsPasted = "ElementsPasted", e.ElementsCut = "ElementsCut", e.NodeCreated = "NodeCreated", e.NodeDeleted = "NodeDeleted", e.NodesDeleted = "NodesDeleted", e.NodeMoved = "NodeMoved", e.NodeResized = "NodeResized", e.EdgeDeleted = "EdgeDeleted", e.EdgesDeleted = "EdgesDeleted", e.Connected = "Connected", e.ReConnected = "ReConnected", e))(dn || {});
const Y0 = {
  action: null,
  timestamp: Date.now(),
  elements: { nodes: [], edges: [] }
}, ss = Fo()(
  j6(
    ci(
      (e) => ({
        actionsHistory: Y0,
        updateActionsHistory: (t) => e({ actionsHistory: t }),
        clearActionsHistory: () => e({ actionsHistory: Y0 })
      }),
      {
        name: "VENOMOUS_UI__WORKFLOW_ACTIONS_HISTORY",
        store: "VENOMOUS_UI__WORKFLOW_ACTIONS_HISTORY"
      }
    ),
    {
      limit: p6().undoRedo.maxHistoryLength,
      pastStates: [],
      futureStates: [],
      equality: (e, t) => ym(e, t)
    }
  )
);
function H6() {
  return Xe(() => () => {
    ss.getState().clearActionsHistory();
  }, []), null;
}
function W6() {
  const e = ss(), t = ao(ss.temporal), n = Ye(() => e.actionsHistory, [e.actionsHistory]), r = Ye(
    () => t.pastStates.map(({ actionsHistory: i }) => ({ ...i })),
    [t.pastStates]
  ), o = Ye(
    () => t.futureStates.map(({ actionsHistory: i }) => ({ ...i })),
    [t.pastStates]
  );
  return {
    currentStates: n,
    pastStates: r,
    futureStates: o
  };
}
function dT() {
  const e = ao(ss), t = ao(ss.temporal), n = $e(() => t.undo(), [t.undo]), r = $e(() => t.redo(), [t.redo]), o = t.pastStates.length > 0 && e.actionsHistory.action !== "Init", i = t.futureStates.length > 0;
  return {
    undo: n,
    redo: r,
    canUndo: o,
    canRedo: i
  };
}
function ui() {
  const { getNodes: e, getEdges: t } = br(), n = ao(ss), r = Ue(
    h6((i) => {
      n.updateActionsHistory({
        action: i.action,
        timestamp: Date.now(),
        elements: {
          nodes: e().map((s) => ({
            ...s,
            selected: i.forceUnselected ? !1 : s.selected
          })),
          edges: t().map((s) => ({
            ...s,
            selected: i.forceUnselected ? !1 : s.selected
          }))
        }
      });
    }, 200)
  );
  return {
    updateActionsHistory: $e((i) => {
      switch (i) {
        case "Init":
        case "Reset":
        case "CanvasBlankClicked":
        case "SaveVersionChanged":
        case "ElementsFileUploaded":
        case "ElementsFileDownloaded":
        case "ElementsSelected":
        case "ElementsDeleted":
        case "ElementsCopied":
        case "ElementsPasted":
        case "ElementsCut":
        case "NodeCreated":
        case "NodeDeleted":
        case "NodeResized":
        case "EdgeDeleted":
        case "Connected":
        case "ReConnected":
          r.current({ action: i, forceUnselected: !0 });
          break;
        case "NodeMoved":
          r.current({ action: i, forceUnselected: !1 });
          break;
      }
    }, [])
  };
}
function U6() {
  const { getNodes: e, getEdges: t, setEdges: n } = br(), { updateActionsHistory: r } = ui(), o = Ue(null), i = $e(
    (c) => {
      const u = o.current;
      if (u && ym(u.connection, c))
        return u.result;
      const f = e(), d = t(), p = q6(c, { nodes: f, edges: d });
      return o.current = {
        connection: c,
        result: p
      }, p;
    },
    [e, t]
  ), s = $e(
    (c) => {
      const u = t().filter(({ source: f, target: d, sourceHandle: p }) => {
        const h = d !== c.target, m = f === c.source && h;
        if (!c.sourceHandle)
          return m;
        const y = p === c.sourceHandle;
        return m && y;
      });
      if (!u.length) {
        n((f) => hE(c, f)), r(dn.Connected);
        return;
      }
      if (!c.sourceHandle) {
        n(
          (f) => f.filter(
            (d) => d.source !== u[0].source || d.target !== u[0].target
          )
        ), r(dn.ReConnected);
        return;
      }
      if (c.sourceHandle) {
        n((f) => (u.reduce((d, p) => (f = f.filter((h) => h.id !== p.id), f), f), f)), r(dn.ReConnected);
        return;
      }
    },
    [n, r]
  ), l = $e((c, u) => {
    u.isValid && o.current && (o.current = {
      ...o.current,
      result: !0
    });
  }, []);
  return {
    isValidConnection: i,
    onConnect: s,
    onConnectEnd: l
  };
}
function q6(e, { nodes: t, edges: n }) {
  function r(i, s = /* @__PURE__ */ new Set()) {
    if (!i || s.has(i.id)) return !1;
    s.add(i == null ? void 0 : i.id);
    for (const l of U4(i, t, n))
      if (l.id === e.source || r(l, s)) return !0;
  }
  const o = t.find((i) => i.id === e.target);
  return (o == null ? void 0 : o.id) === e.source ? !1 : !r(o);
}
function Y6() {
  const { setEdges: e } = br(), { updateActionsHistory: t } = ui(), n = Ue(!0), r = $e(() => {
    n.current = !1;
  }, []), o = $e((s, l) => {
    n.current = !0, e((c) => o3(s, l, c));
  }, []), i = $e(
    (s, l) => {
      n.current || (e((c) => c.filter((u) => u.id !== l.id)), t(dn.ReConnected)), n.current = !0;
    },
    [t]
  );
  return {
    onReconnect: o,
    onReconnectStart: r,
    onReconnectEnd: i
  };
}
const K6 = Fo()(
  ci(
    (e) => ({
      nodes: [],
      edges: [],
      setNodes: (t) => e({ nodes: t }),
      setEdges: (t) => e({ edges: t }),
      clear: () => e({ nodes: [], edges: [] })
    }),
    {
      name: "VENOMOUS_UI__WORKFLOW_COPIED_ELEMENTS",
      store: "VENOMOUS_UI__WORKFLOW_COPIED_ELEMENTS"
    }
  )
);
function G6() {
  return ao(K6);
}
const X6 = Fo()(
  ci(
    (e) => ({
      nodes: [],
      edges: [],
      setNodes: (t) => e({ nodes: t }),
      setEdges: (t) => e({ edges: t }),
      clear: () => e({ nodes: [], edges: [] })
    }),
    {
      name: "VENOMOUS_UI__WORKFLOW_SELECTED_ELEMENTS",
      store: "VENOMOUS_UI__WORKFLOW_SELECTED_ELEMENTS"
    }
  )
);
function bm() {
  return ao(X6);
}
function YU({
  id: e = `${Date.now()}`,
  type: t,
  data: n,
  ...r
}) {
  yU({
    id: e,
    type: t,
    data: {
      isMultipleSourceHandler: (n == null ? void 0 : n.isMultipleSourceHandler) || !1,
      isMultipleTargetHandler: (n == null ? void 0 : n.isMultipleSourceHandler) || !1,
      isProtected: !1,
      isInValid: !1,
      isFocus: !1,
      formValue: (n == null ? void 0 : n.formValue) || null,
      ...n
    },
    ...r
  });
}
function KU(e, t) {
  return e.filter(
    (n) => n.source === t.source || n.target === t.target || n.sourceHandle === t.sourceHandle || n.targetHandle === t.targetHandle
  );
}
function Z6(e, t) {
  return e.filter((n) => n.source === t.id || n.target === t.id);
}
function fT() {
  const e = Tn(), { getNodes: t, getEdges: n, setNodes: r, setEdges: o } = br(), { updateActionsHistory: i } = ui(), s = $e(
    (d) => {
      o((p) => p.filter((h) => h.id !== d)), i(dn.EdgeDeleted), e.logger("error", dn.EdgeDeleted);
    },
    [o, i, e.logger]
  ), l = $e(() => {
    r((d) => d.filter((p) => !p.selected));
  }, [r]), c = $e(() => {
    o((d) => d.filter((p) => !p.selected));
  }, [o]), u = $e(() => {
    const d = t().filter((h) => h.selected), p = [];
    d.forEach((h) => {
      const g = Z6(n(), h);
      p.push(...g);
    }), o((h) => h.filter((g) => !p.find((m) => m.id === g.id)));
  }, [n, t, o]), f = $e(() => {
    const d = t().filter((m) => m.selected), p = n().filter((m) => m.selected), h = d.length > 0, g = p.length > 0;
    if (!(!h && !g)) {
      if (h && (l(), u()), g && c(), h && !g) {
        i(
          d.length === 1 ? dn.NodeDeleted : dn.NodesDeleted
        );
        return;
      }
      if (g && !h) {
        i(
          p.length === 1 ? dn.EdgeDeleted : dn.EdgesDeleted
        );
        return;
      }
      if (h && g) {
        i(dn.ElementsDeleted);
        return;
      }
    }
  }, [
    t,
    n,
    l,
    c,
    u,
    i
  ]);
  return {
    deleteEdge: s,
    deleteSelectedElements: f
  };
}
function Q6() {
  const e = Tn(), { getNodes: t, getEdges: n, setNodes: r, setEdges: o } = br(), { updateActionsHistory: i } = ui(), { deleteSelectedElements: s } = fT(), l = G6(), c = bm(), u = Ue(0), f = $e(() => {
    u.current = 0, l.clear();
    const h = c.nodes, g = c.edges;
    h.length && l.setNodes(h), g.length && l.setEdges(g);
  }, [t, n, r, o, l, c]), d = $e(() => {
    const h = l.nodes, g = l.edges;
    if (h.length) {
      r((y) => y.map((x) => ({ ...x, selected: !1 })));
      const m = h.map((y) => ({
        ...y,
        id: `${y.id}-copied-${u.current + 1}`,
        position: {
          x: y.position.x + e.styles.nodeWidth / 2 * (u.current + 1),
          y: y.position.y - e.styles.nodeMinHeight / 2 * (u.current + 1)
        },
        selected: !0,
        dragging: !1,
        data: { ...y.data }
      }));
      r((y) => [...y, ...m]);
    }
    if (g.length) {
      o((y) => y.map((x) => ({ ...x, selected: !1 })));
      const m = g.map((y) => ({
        ...y,
        id: `${y.id}-copied-${u.current + 1}`,
        selected: !0,
        source: `${y.source}-copied-${u.current + 1}`,
        target: `${y.target}-copied-${u.current + 1}`,
        zIndex: 1
      }));
      o((y) => y.concat(m));
    }
    (h.length || g.length) && (u.current += 1, i(dn.ElementsPasted));
  }, [
    t,
    n,
    r,
    o,
    l,
    c,
    e,
    i
  ]), p = $e(() => {
    f(), s();
  }, [f, s]);
  return {
    copySelectedElements: f,
    pastCopiedElement: d,
    cutSelectedElements: p
  };
}
function J6() {
  const { setNodes: e, setEdges: t } = bm();
  return {
    onSelectionChange: $e(
      ({ nodes: r, edges: o }) => {
        e(r), t(o);
      },
      [e, t]
    )
  };
}
const pT = ["shift", "alt", "meta", "mod", "ctrl", "control"], eU = {
  esc: "escape",
  return: "enter",
  left: "arrowleft",
  right: "arrowright",
  up: "arrowup",
  down: "arrowdown",
  ShiftLeft: "shift",
  ShiftRight: "shift",
  AltLeft: "alt",
  AltRight: "alt",
  MetaLeft: "meta",
  MetaRight: "meta",
  OSLeft: "meta",
  OSRight: "meta",
  ControlLeft: "ctrl",
  ControlRight: "ctrl"
};
function Eo(e) {
  return (eU[e.trim()] || e.trim()).toLowerCase().replace(/key|digit|numpad/, "");
}
function hT(e) {
  return pT.includes(e);
}
function bf(e, t = ",") {
  return e.toLowerCase().split(t);
}
function vf(e, t = "+", n = ">", r = !1, o) {
  let i = [], s = !1;
  e.includes(n) ? (s = !0, i = e.toLocaleLowerCase().split(n).map((u) => Eo(u))) : i = e.toLocaleLowerCase().split(t).map((u) => Eo(u));
  const l = {
    alt: i.includes("alt"),
    ctrl: i.includes("ctrl") || i.includes("control"),
    shift: i.includes("shift"),
    meta: i.includes("meta"),
    mod: i.includes("mod"),
    useKey: r
  }, c = i.filter((u) => !pT.includes(u));
  return {
    ...l,
    keys: c,
    description: o,
    isSequence: s
  };
}
typeof document < "u" && (document.addEventListener("keydown", (e) => {
  e.code !== void 0 && mT([Eo(e.code)]);
}), document.addEventListener("keyup", (e) => {
  e.code !== void 0 && gT([Eo(e.code)]);
})), typeof window < "u" && (window.addEventListener("blur", () => {
  Qr.clear();
}), window.addEventListener("contextmenu", () => {
  setTimeout(() => {
    Qr.clear();
  }, 0);
}));
const Qr = /* @__PURE__ */ new Set();
function vm(e) {
  return Array.isArray(e);
}
function tU(e, t = ",") {
  return (vm(e) ? e : e.split(t)).every((n) => Qr.has(n.trim().toLowerCase()));
}
function mT(e) {
  const t = Array.isArray(e) ? e : [e];
  Qr.has("meta") && Qr.forEach((n) => !hT(n) && Qr.delete(n.toLowerCase())), t.forEach((n) => Qr.add(n.toLowerCase()));
}
function gT(e) {
  const t = Array.isArray(e) ? e : [e];
  e === "meta" ? Qr.clear() : t.forEach((n) => Qr.delete(n.toLowerCase()));
}
function nU(e, t, n) {
  (typeof n == "function" && n(e, t) || n === !0) && e.preventDefault();
}
function rU(e, t, n) {
  return typeof n == "function" ? n(e, t) : n === !0 || n === void 0;
}
function oU(e) {
  return yT(e, ["input", "textarea", "select"]);
}
function yT(e, t = !1) {
  const { target: n, composed: r } = e;
  let o;
  return iU(n) && r ? o = e.composedPath()[0] && e.composedPath()[0].tagName : o = n && n.tagName, vm(t) ? !!(o && t && t.some((i) => i.toLowerCase() === o.toLowerCase())) : !!(o && t && t);
}
function iU(e) {
  return !!e.tagName && !e.tagName.startsWith("-") && e.tagName.includes("-");
}
function sU(e, t) {
  return e.length === 0 && t ? (console.warn(
    'A hotkey has the "scopes" option set, however no active scopes were found. If you want to use the global scopes feature, you need to wrap your app in a <HotkeysProvider>'
  ), !0) : t ? e.some((n) => t.includes(n)) || e.includes("*") : !0;
}
const aU = (e, t, n = !1) => {
  const { alt: r, meta: o, mod: i, shift: s, ctrl: l, keys: c, useKey: u } = t, { code: f, key: d, ctrlKey: p, metaKey: h, shiftKey: g, altKey: m } = e, y = Eo(f);
  if (u && (c == null ? void 0 : c.length) === 1 && c.includes(d))
    return !0;
  if (!(c != null && c.includes(y)) && !["ctrl", "control", "unknown", "meta", "alt", "shift", "os"].includes(y))
    return !1;
  if (!n) {
    if (r !== m && y !== "alt" || s !== g && y !== "shift")
      return !1;
    if (i) {
      if (!h && !p)
        return !1;
    } else if (o !== h && y !== "meta" && y !== "os" || l !== p && y !== "ctrl" && y !== "control")
      return !1;
  }
  return c && c.length === 1 && c.includes(y) ? !0 : c ? tU(c) : !c;
}, lU = Da(void 0), cU = () => Ro(lU);
function bT(e, t) {
  return e && t && typeof e == "object" && typeof t == "object" ? Object.keys(e).length === Object.keys(t).length && // @ts-expect-error TS7053
  Object.keys(e).reduce((n, r) => n && bT(e[r], t[r]), !0) : e === t;
}
const uU = Da({
  hotkeys: [],
  activeScopes: [],
  // This array has to be empty instead of containing '*' as default, to check if the provider is set or not
  toggleScope: () => {
  },
  enableScope: () => {
  },
  disableScope: () => {
  }
}), dU = () => Ro(uU);
function fU(e) {
  const t = Ue(void 0);
  return bT(t.current, e) || (t.current = e), t.current;
}
const K0 = (e) => {
  e.stopPropagation(), e.preventDefault(), e.stopImmediatePropagation();
}, pU = typeof window < "u" ? X0 : Xe;
function Ds(e, t, n, r) {
  const o = Ue(null), i = Ue(!1), s = n instanceof Array ? r instanceof Array ? void 0 : r : n, l = vm(e) ? e.join(s == null ? void 0 : s.delimiter) : e, c = n instanceof Array ? n : r instanceof Array ? r : void 0, u = $e(t, c ?? []), f = Ue(u);
  c ? f.current = u : f.current = t;
  const d = fU(s), { activeScopes: p } = dU(), h = cU();
  return pU(() => {
    if ((d == null ? void 0 : d.enabled) === !1 || !sU(p, d == null ? void 0 : d.scopes))
      return;
    let g = [], m;
    const y = (w, S = !1) => {
      var T;
      if (!(oU(w) && !yT(w, d == null ? void 0 : d.enableOnFormTags))) {
        if (o.current !== null) {
          const C = o.current.getRootNode();
          if ((C instanceof Document || C instanceof ShadowRoot) && C.activeElement !== o.current && !o.current.contains(C.activeElement)) {
            K0(w);
            return;
          }
        }
        (T = w.target) != null && T.isContentEditable && !(d != null && d.enableOnContentEditable) || bf(l, d == null ? void 0 : d.delimiter).forEach((C) => {
          var R, I, b, k;
          if (C.includes((d == null ? void 0 : d.splitKey) ?? "+") && C.includes((d == null ? void 0 : d.sequenceSplitKey) ?? ">")) {
            console.warn(`Hotkey ${C} contains both ${(d == null ? void 0 : d.splitKey) ?? "+"} and ${(d == null ? void 0 : d.sequenceSplitKey) ?? ">"} which is not supported.`);
            return;
          }
          const P = vf(C, d == null ? void 0 : d.splitKey, d == null ? void 0 : d.sequenceSplitKey, d == null ? void 0 : d.useKey, d == null ? void 0 : d.description);
          if (P.isSequence) {
            m = setTimeout(() => {
              g = [];
            }, (d == null ? void 0 : d.sequenceTimeoutMs) ?? 1e3);
            const A = P.useKey ? w.key : Eo(w.code);
            if (hT(A.toLowerCase()))
              return;
            g.push(A);
            const O = (R = P.keys) == null ? void 0 : R[g.length - 1];
            if (A !== O) {
              g = [], m && clearTimeout(m);
              return;
            }
            g.length === ((I = P.keys) == null ? void 0 : I.length) && (f.current(w, P), m && clearTimeout(m), g = []);
          } else if (aU(w, P, d == null ? void 0 : d.ignoreModifiers) || (b = P.keys) != null && b.includes("*")) {
            if ((k = d == null ? void 0 : d.ignoreEventWhen) != null && k.call(d, w) || S && i.current)
              return;
            if (nU(w, P, d == null ? void 0 : d.preventDefault), !rU(w, P, d == null ? void 0 : d.enabled)) {
              K0(w);
              return;
            }
            f.current(w, P), S || (i.current = !0);
          }
        });
      }
    }, x = (w) => {
      w.code !== void 0 && (mT(Eo(w.code)), ((d == null ? void 0 : d.keydown) === void 0 && (d == null ? void 0 : d.keyup) !== !0 || d != null && d.keydown) && y(w));
    }, E = (w) => {
      w.code !== void 0 && (gT(Eo(w.code)), i.current = !1, d != null && d.keyup && y(w, !0));
    }, v = o.current || (s == null ? void 0 : s.document) || document;
    return v.addEventListener("keyup", E, s == null ? void 0 : s.eventListenerOptions), v.addEventListener("keydown", x, s == null ? void 0 : s.eventListenerOptions), h && bf(l, d == null ? void 0 : d.delimiter).forEach(
      (w) => h.addHotkey(
        vf(w, d == null ? void 0 : d.splitKey, d == null ? void 0 : d.sequenceSplitKey, d == null ? void 0 : d.useKey, d == null ? void 0 : d.description)
      )
    ), () => {
      v.removeEventListener("keyup", E, s == null ? void 0 : s.eventListenerOptions), v.removeEventListener("keydown", x, s == null ? void 0 : s.eventListenerOptions), h && bf(l, d == null ? void 0 : d.delimiter).forEach(
        (w) => h.removeHotkey(
          vf(w, d == null ? void 0 : d.splitKey, d == null ? void 0 : d.sequenceSplitKey, d == null ? void 0 : d.useKey, d == null ? void 0 : d.description)
        )
      ), g = [], m && clearTimeout(m);
    };
  }, [l, d, p]), o;
}
function hU() {
  const e = Tn(), { undo: t, redo: n, canUndo: r, canRedo: o } = dT(), { copySelectedElements: i, pastCopiedElement: s, cutSelectedElements: l } = Q6();
  Ds(
    e.hotkeys.keys.copy,
    () => i(),
    { enabled: !0, preventDefault: !0 },
    [i]
  ), Ds(
    e.hotkeys.keys.paste,
    () => s(),
    { enabled: !0, preventDefault: !0 },
    [s]
  ), Ds(
    e.hotkeys.keys.cut,
    () => l(),
    { enabled: !0, preventDefault: !0 },
    [l]
  ), Ds(
    e.hotkeys.keys.undo,
    () => {
      r && t();
    },
    { enabled: r, preventDefault: !0 },
    [t, r]
  ), Ds(
    e.hotkeys.keys.redo,
    () => {
      o && n();
    },
    { enabled: !0, preventDefault: !0 },
    [n, o]
  );
}
function mU({
  configs: e
}) {
  const { setHotkeys: t, setCanvas: n, setStyles: r, setMinimap: o, setUndoRedo: i } = Tn(), { updateActionsHistory: s } = ui();
  H6();
  const l = $e(() => {
    s(dn.Init);
  }, [s]), c = Ue(null);
  return Xe(() => {
    if (!e || ym(e, c.current)) return;
    const { hotkeys: u, canvas: f, styles: d, minimap: p, undoRedo: h } = e;
    u && t(u), f && n(f), d && r(d), p && o(p), h && i(h), c.current = e;
  }, [e, t, n, r, o, i]), {
    onFinishedInit: l
  };
}
const xm = Fo()(
  ci(
    (e) => ({
      node: null,
      setNode: (t) => e({ node: t })
    }),
    {
      name: "VENOMOUS_UI__WORKFLOW_CREATED_NODE",
      store: "VENOMOUS_UI__WORKFLOW_CREATED_NODE"
    }
  )
);
function gU() {
  return xm.getState().node;
}
function yU(e) {
  xm.setState({ node: e });
}
function bU() {
  xm.setState({ node: null });
}
function vU() {
  const e = Tn(), { getNodes: t, setNodes: n, screenToFlowPosition: r } = br(), { updateActionsHistory: o } = ui(), i = $e((l) => {
    l.preventDefault(), l.dataTransfer.dropEffect = "move";
  }, []), s = $e(
    (l) => {
      const c = gU();
      if (bU(), !c)
        return;
      const u = {
        ...c,
        id: `${Date.now()}`,
        selected: !0,
        position: r(
          { x: l.clientX, y: l.clientY },
          { snapToGrid: e.canvas.isGridLayout }
        )
      };
      u.type === is.Group ? n((f) => [u, ...f]) : n((f) => f.concat(u)), o(dn.NodeCreated);
    },
    [t, n, r, e, o]
  );
  return {
    onDragOver: i,
    onDrop: s
  };
}
function xU() {
  const { updateNode: e, updateNodeData: t, setNodes: n, getNodes: r, getInternalNode: o } = br(), i = $e(
    (u, f) => {
      e(u, f, {
        replace: !1
      });
    },
    [e]
  ), s = $e(
    (u, f) => {
      t(u, f, {
        replace: !1
      });
    },
    [t]
  ), l = $e(
    (u, f) => {
      s(u, { formValue: f });
    },
    [s]
  ), c = $e(
    (u) => {
      if (u.type === is.Group)
        return n(
          (h) => h.map(
            (g) => g.id === u.id ? { ...g, parentId: void 0, position: u.position } : g
          )
        );
      const f = o(u.id);
      if (!f)
        return;
      const d = f.internals.positionAbsolute, p = r().find(
        (h) => {
          var g, m;
          return h.type === is.Group && d.x >= h.position.x && d.x <= h.position.x + (((g = h.measured) == null ? void 0 : g.width) ?? 0) && d.y >= h.position.y && d.y <= h.position.y + (((m = h.measured) == null ? void 0 : m.height) ?? 0);
        }
      );
      if (p) {
        const h = {
          x: d.x - p.position.x,
          y: d.y - p.position.y
        };
        return n(
          (g) => g.map(
            (m) => m.id === u.id ? { ...m, parentId: p.id, position: h } : m
          )
        );
      }
      n(
        (h) => h.map((g) => g.id === u.id ? { ...g, parentId: void 0, position: d } : g)
      );
    },
    [o, r, n]
  );
  return {
    updateSpecificNode: i,
    updateSpecificNodeData: s,
    updateSpecificNodeFormValue: l,
    updateNodeMovingAroundGroupNode: c
  };
}
function wU() {
  const { setNodes: e } = br(), { updateActionsHistory: t } = ui(), { updateNodeMovingAroundGroupNode: n } = xU(), r = Ue({ x: 0, y: 0 }), o = $e((l, c) => {
    r.current = {
      x: c.position.x,
      y: c.position.y
    };
  }, []), i = $e(
    (l, c) => {
      e((u) => u.map((f) => f.id === c.id ? { ...f, position: c.position } : f));
    },
    [e]
  ), s = $e(
    (l, c) => {
      n(c);
      const { x: u, y: f } = r.current;
      u === c.position.x && f === c.position.y || t(dn.NodeMoved);
    },
    [t, n]
  );
  return {
    onNodeMoveStart: o,
    onNodeMoveStop: s,
    onNodeMoving: i
  };
}
const wm = ve(({ renderChildren: e, ...t }) => {
  const n = Tn(), {
    id: r,
    data: o,
    sourceX: i,
    sourceY: s,
    targetX: l,
    targetY: c,
    sourcePosition: u,
    targetPosition: f,
    markerEnd: d,
    style: p
  } = t, [h, g, m, y, x] = dm({
    sourceX: i,
    sourceY: s,
    sourcePosition: u,
    targetX: l,
    targetY: c,
    targetPosition: f
  });
  return /* @__PURE__ */ we(rr, { children: [
    /* @__PURE__ */ N(
      al,
      {
        id: r,
        path: h,
        className: "VenomousUI-WorkflowBaseEdge",
        style: {
          ...p,
          strokeWidth: n.styles.edgeWidth
        },
        markerEnd: d
      }
    ),
    (o == null ? void 0 : o.animated) && /* @__PURE__ */ N("circle", { r: n.styles.edgeWidth * 2, fill: "#ff0073", children: /* @__PURE__ */ N("animateMotion", { dur: "2s", repeatCount: "indefinite", path: h }) }),
    e == null ? void 0 : e({
      ...t,
      edgePath: h,
      edgePathLabelX: g,
      edgePathLabelY: m,
      edgePathOffsetX: y,
      edgePathOffsetY: x
    })
  ] });
});
wm.displayName = "WorkflowBaseEdge";
const vT = ve((e) => {
  const { id: t, selected: n } = e, { deleteEdge: r } = fT(), o = $e(() => r(t), [t, r]);
  return /* @__PURE__ */ N(
    wm,
    {
      ...e,
      renderChildren: ({ edgePathLabelX: i, edgePathLabelY: s }) => /* @__PURE__ */ N(FW, { children: /* @__PURE__ */ N(
        "div",
        {
          style: {
            position: "absolute",
            pointerEvents: "all",
            transformOrigin: "center",
            transform: `translate(-50%, -50%) translate(${i}px,${s}px)`,
            display: n ? "flex" : "none"
          },
          children: /* @__PURE__ */ N(
            an,
            {
              isCircle: !0,
              isGhost: !0,
              icon: "solar:close-circle-linear",
              color: "error",
              onClick: o,
              sx: {
                "& svg": {
                  borderRadius: "50%",
                  backgroundColor: ({ palette: l }) => l.background.paper
                }
              }
            }
          )
        }
      ) })
    }
  );
});
vT.displayName = "WorkflowDeleteLabelEdge";
const SU = {
  [Gc.Base]: wm,
  [Gc.DeleteLabel]: vT
}, EU = {
  borderWidth: "6px",
  borderRadius: "50%",
  borderColor: "#BDBDBD",
  cursor: "cell",
  zIndex: 2
}, ud = ve(
  ({ id: e, handlerType: t = "source", handlerPosition: n, style: r, onConnect: o }) => {
    const i = Tn(), s = $e(() => {
      const l = i.styles.connectionPosition[t];
      switch (n ?? l) {
        case "left":
          return De.Left;
        case "right":
          return De.Right;
        case "top":
          return De.Top;
        case "bottom":
          return De.Bottom;
        default:
          return De.Left;
      }
    }, [n, i.styles.connectionPosition]);
    return /* @__PURE__ */ N(
      Ma,
      {
        type: t,
        id: e,
        position: s(),
        className: "VenomousUI-WorkflowBaseNodeHandler",
        style: { ...EU, ...r },
        onConnect: o
      }
    );
  }
);
ud.displayName = "WorkflowBaseNodeHandler";
const TU = ve(
  ({ children: e, style: t, handlerStyle: n, id: r, handlerType: o, ...i }) => {
    var l;
    const s = Tn();
    return /* @__PURE__ */ we(
      "div",
      {
        className: "VenomousUI-WorkflowBaseNodeHandlerItem",
        style: {
          position: "relative",
          width: (l = s.styles) == null ? void 0 : l.nodeWidth,
          ...t
        },
        children: [
          /* @__PURE__ */ N(Br, { sx: { typography: "body2", padding: "4px 16px" }, children: e }),
          /* @__PURE__ */ N(
            ud,
            {
              id: r,
              handlerType: o,
              style: n,
              ...i
            }
          )
        ]
      }
    );
  }
);
TU.displayName = "WorkflowBaseNodeHandlerItem";
const xT = ve((e) => /* @__PURE__ */ N(ud, { ...e, handlerType: "source" }));
xT.displayName = "WorkflowSourceNodeHandler";
const wT = ve((e) => /* @__PURE__ */ N(ud, { ...e, handlerType: "target" }));
wT.displayName = "WorkflowTargetNodeHandler";
const Sm = ve(
  ({ children: e, sx: t, hideSourceHandler: n = !1, hideTargetHandler: r = !1, ...o }) => {
    const { selected: i, data: s } = o, l = Tn();
    return /* @__PURE__ */ we(
      ro,
      {
        className: "VenomousUI-WorkflowBaseNode",
        isOutlined: !0,
        sx: {
          p: "16px",
          width: l.styles.nodeWidth,
          minWidth: l.styles.nodeWidth,
          maxHeight: l.styles.nodeMaxHeight,
          minHeight: l.styles.nodeMinHeight,
          maxWidth: l.styles.nodeMaxHeight,
          position: "relative",
          outline: ({ palette: c }) => i ? `${l.styles.edgeWidth}px solid ${c.primary.main}` : "none",
          outlineOffset: `-${l.styles.edgeWidth}px`,
          boxShadow: (c) => i ? c.shadows[4] : c.shadows[1],
          "&:hover": { boxShadow: (c) => c.shadows[4] },
          ...t
        },
        children: [
          e,
          !r && !(s != null && s.isMultipleTargetHandler) && /* @__PURE__ */ N(wT, { id: null }),
          !n && !(s != null && s.isMultipleSourceHandler) && /* @__PURE__ */ N(xT, { id: null })
        ]
      }
    );
  }
);
Sm.displayName = "WorkflowBaseNode";
const ST = ve(({ children: e, sx: t, ...n }) => {
  const { selected: r, data: o } = n, i = Tn(), s = Ye(() => i.styles.nodeWidth * 1.5, [i.styles.nodeWidth]), l = Ye(() => i.styles.nodeMinHeight * 3, [i.styles.nodeMinHeight]);
  return /* @__PURE__ */ we(
    Sm,
    {
      hideSourceHandler: !0,
      hideTargetHandler: !0,
      sx: {
        position: "static",
        height: "100%",
        width: "auto !important",
        minWidth: s,
        minHeight: l,
        backgroundColor: ({ palette: c }) => o.isIntersecting ? d1(c.primary.main).opacity : c.mode === "dark" ? "rgba(250,250,250,0.05)" : "rgba(0,0,0,0.05)",
        ...t
      },
      ...n,
      children: [
        e,
        /* @__PURE__ */ N(
          f6,
          {
            className: "VenomousUI-WorkflowGroupNode-ResizeControl",
            style: { display: r ? "flex" : "none" },
            minWidth: s,
            minHeight: l,
            children: /* @__PURE__ */ N(
              hr,
              {
                icon: "fa:expand",
                width: 24,
                color: "primary",
                sx: { transform: "translate(-32px, -32px) rotate(90deg)" }
              }
            )
          }
        )
      ]
    }
  );
});
ST.displayName = "WorkflowGroupNode";
const CU = {
  [is.Base]: Sm,
  [is.Group]: ST
}, OU = Np(() => Promise.resolve().then(() => IU)), kU = Np(() => Promise.resolve().then(() => AU)), RU = Np(() => Promise.resolve().then(() => MU)), NU = ve(
  ({ children: e, sx: t, originalElements: n, configs: r, ...o }) => {
    var w, S, T;
    const { themeMode: i } = Zu(), s = Tn(), { onFinishedInit: l } = mU({ configs: r });
    hU();
    const { onDrop: c, onDragOver: u } = vU(), { onNodeMoveStart: f, onNodeMoveStop: d, onNodeMoving: p } = wU(), { isValidConnection: h, onConnect: g, onConnectEnd: m } = U6(), { onReconnect: y, onReconnectStart: x, onReconnectEnd: E } = Y6(), { onSelectionChange: v } = J6();
    return /* @__PURE__ */ N(ro, { isOutlined: !0, sx: { overflow: "hidden", p: 0, ...t }, children: /* @__PURE__ */ we(
      BW,
      {
        className: "VenomousUI-WorkflowPlayground",
        style: { width: "100%", height: "100%" },
        proOptions: { hideAttribution: !0 },
        colorMode: i,
        onlyRenderVisibleElements: !0,
        connectionLineType: s.styles.connectionLineType,
        connectionLineStyle: { strokeWidth: s.styles.edgeWidth },
        defaultEdgeOptions: {
          type: s.styles.edgeType,
          /** Edge 的种类 */
          markerEnd: { type: s.styles.edgeEndMarkerType }
          /** Edge 结束的标记 */
          // eslint-disable-line @typescript-eslint/no-explicit-any 
        },
        defaultNodes: n.nodes,
        defaultEdges: n.edges,
        nodeTypes: { ...CU, ...o.nodeTypes },
        edgeTypes: { ...SU, ...o.edgeTypes },
        elementsSelectable: !0,
        selectNodesOnDrag: !1,
        nodesConnectable: !0,
        nodesDraggable: !0,
        panOnDrag: !0,
        panOnScroll: !1,
        zoomOnScroll: !0,
        zoomOnPinch: !0,
        nodesFocusable: !1,
        edgesFocusable: !1,
        nodeDragThreshold: 5,
        connectionRadius: ((w = s == null ? void 0 : s.styles) == null ? void 0 : w.nodeWidth) / 4,
        snapToGrid: (S = s == null ? void 0 : s.canvas) == null ? void 0 : S.isGridLayout,
        snapGrid: (T = s == null ? void 0 : s.canvas) == null ? void 0 : T.gridLayoutGap,
        onInit: l,
        isValidConnection: h,
        onConnect: g,
        onConnectEnd: m,
        onReconnectStart: x,
        onReconnect: y,
        onReconnectEnd: E,
        onDragOver: u,
        onDrop: c,
        onNodeDragStart: f,
        onNodeDrag: p,
        onNodeDragStop: d,
        onSelectionChange: v,
        deleteKeyCode: null,
        ...o,
        children: [
          e,
          /* @__PURE__ */ we(rC, { children: [
            s.minimap.enabled && /* @__PURE__ */ N(OU, {}),
            s.minimap.enabled && /* @__PURE__ */ N(kU, {}),
            s.undoRedo.enabled && /* @__PURE__ */ N(RU, {})
          ] })
        ]
      }
    ) });
  }
);
NU.displayName = "WorkflowPlayground";
const $U = ve(({ children: e }) => /* @__PURE__ */ N(rT, { children: e }));
$U.displayName = "WorkflowWrapper";
const ll = ve(
  ({ children: e, position: t, style: n, isPaper: r = !0, isOutlinedPaper: o = !0 }) => {
    const i = Ye(() => {
      switch (t) {
        case "top-left":
          return { transform: "translate(-8px, -8px)" };
        case "top-right":
          return { transform: "translate(8px, -8px)" };
        case "bottom-left":
          return { transform: "translate(-8px, 8px)" };
        case "bottom-right":
          return { transform: "translate(8px, 8px)" };
        default:
          return {};
      }
    }, [t]);
    return /* @__PURE__ */ we(
      sl,
      {
        position: t,
        style: {
          ...i,
          ...n
        },
        children: [
          r && /* @__PURE__ */ N(ro, { isOutlined: o, sx: { height: "100%" }, children: e }),
          !r && e
        ]
      }
    );
  }
);
ll.displayName = "WorkflowToolbar";
const PU = ve(({ position: e, style: t }) => {
  const { getNodes: n, getEdges: r } = br();
  return /* @__PURE__ */ N(ll, { position: e, style: t, isPaper: !1, children: /* @__PURE__ */ N(
    an,
    {
      icon: "hugeicons:tools",
      iconWidth: 24,
      isSquare: !0,
      onClick: () => {
        console.log({
          nodes: n(),
          edges: r()
        });
      }
    }
  ) });
});
PU.displayName = "WorkflowDevtool";
const ET = ve(() => {
  var s, l, c, u, f;
  const { themePalette: e } = em(), { moveToSpecificNode: t } = uT(), n = Tn(), r = Ye(() => {
    var d, p;
    if (!((d = n.minimap) != null && d.position)) return {};
    switch ((p = n.minimap) == null ? void 0 : p.position) {
      case "top-left":
        return { transform: "translate(-8px, 56px)" };
      case "top-right":
        return { transform: "translate(8px, 56px)" };
      case "bottom-left":
        return { transform: "translate(-8px, -56px)" };
      case "bottom-right":
        return { transform: "translate(8px, -56px)" };
      default:
        return {};
    }
  }, [(s = n.minimap) == null ? void 0 : s.position]), o = $e(
    (d) => {
      var y, x;
      const { type: p, selected: h, data: g } = d, m = ((x = (y = n.styles) == null ? void 0 : y.nodeColors) == null ? void 0 : x[p]) || e.main;
      return h || g != null && g.isFocus ? m : "transparent";
    },
    [e, (l = n.styles) == null ? void 0 : l.nodeColors]
  ), i = $e(
    (d) => {
      const { data: p } = d;
      return p != null && p.isInValid ? e.error : "#e2e2e2";
    },
    [e]
  );
  return /* @__PURE__ */ N(
    u6,
    {
      className: "VenomousUI-WorkflowMiniMap",
      position: (c = n.minimap) == null ? void 0 : c.position,
      nodeStrokeWidth: 16,
      nodeStrokeColor: o,
      nodeColor: i,
      nodeBorderRadius: 16,
      onNodeClick: (d, p) => {
        d.stopPropagation(), t(p.id, p.position);
      },
      pannable: !0,
      zoomable: !0,
      zoomStep: (u = n.canvas) == null ? void 0 : u.zoomStep,
      style: {
        ...r,
        width: (f = n.minimap) == null ? void 0 : f.width,
        borderRadius: 8,
        overflow: "hidden"
      }
    }
  );
});
ET.displayName = "WorkflowMiniMap";
const IU = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ET
}, Symbol.toStringTag, { value: "Module" })), _U = ve(
  ({ position: e = "bottom-right", style: t, renderContent: n }) => {
    var i;
    const r = bm(), o = Ye(() => r.nodes.length === 1 ? r.nodes[0] : null, [r.nodes]);
    return (i = o == null ? void 0 : o.data) != null && i.formValue ? /* @__PURE__ */ N(
      ll,
      {
        isPaper: !0,
        isOutlinedPaper: !1,
        position: e,
        style: {
          height: "calc(100% - 16px)",
          width: 300,
          ...t
        },
        children: n == null ? void 0 : n(o)
      }
    ) : null;
  }
);
_U.displayName = "NodeDataFormValuePanel";
const TT = ve(() => {
  var u, f, d, p, h, g;
  const { setNodes: e, setEdges: t } = br(), { undo: n, redo: r, canUndo: o, canRedo: i } = dT(), { currentStates: s } = W6(), l = Tn();
  Xe(() => {
    s.action !== null && (e(s.elements.nodes), t(s.elements.edges));
  }, [e, t, s]);
  const c = Ye(() => {
    var E, v, w;
    const m = (E = l.undoRedo) == null ? void 0 : E.position, y = (v = l.minimap) == null ? void 0 : v.enabled, x = (w = l.minimap) == null ? void 0 : w.width;
    if (!m) return {};
    switch (m) {
      case "top-left":
        return { transform: `translate(${y ? x : -8}px, -8px)` };
      case "top-right":
        return { transform: `translate(${y ? -x : 8}px, -8px)` };
      case "bottom-left":
        return { transform: `translate(${y ? x : -8}px, 8px)` };
      case "bottom-right":
        return { transform: `translate(${y ? -x : 8}px, 8px)` };
      default:
        return {};
    }
  }, [(u = l.undoRedo) == null ? void 0 : u.position, l.minimap]);
  return /* @__PURE__ */ N(ll, { position: (f = l.undoRedo) == null ? void 0 : f.position, style: c, children: /* @__PURE__ */ we(en, { row: !0, gap: 0.5, children: [
    /* @__PURE__ */ N(Ki, { tooltip: (p = (d = l.undoRedo) == null ? void 0 : d.tooltips) == null ? void 0 : p.undo, children: /* @__PURE__ */ N("span", { children: /* @__PURE__ */ N(
      an,
      {
        icon: "solar:multiple-forward-left-bold-duotone",
        isSquare: !0,
        disabled: !o,
        onClick: n
      }
    ) }) }),
    /* @__PURE__ */ N(Ki, { tooltip: (g = (h = l.undoRedo) == null ? void 0 : h.tooltips) == null ? void 0 : g.redo, children: /* @__PURE__ */ N("span", { children: /* @__PURE__ */ N(
      an,
      {
        icon: "solar:multiple-forward-right-bold-duotone",
        isSquare: !0,
        disabled: !i,
        onClick: r
      }
    ) }) })
  ] }) });
});
TT.displayName = "WorkflowUndoRedo";
const MU = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: TT
}, Symbol.toStringTag, { value: "Module" })), CT = ve(() => {
  var c, u;
  const { currentViewport: e, increaseZoom: t, decreaseZoom: n } = uT(), r = Tn(), { zoom: o } = e, i = Ye(() => `${(o * 100).toFixed(0)}%`, [o]), s = Ye(
    () => o >= r.canvas.maxZoom,
    [o, r.canvas.maxZoom]
  ), l = Ye(
    () => o <= r.canvas.minZoom,
    [o, r.canvas.minZoom]
  );
  return /* @__PURE__ */ N(ll, { position: (c = r.minimap) == null ? void 0 : c.position, isPaper: !0, children: /* @__PURE__ */ we(en, { row: !0, gap: 0, width: ((u = r.minimap) == null ? void 0 : u.width) - 16, justifyContent: "space-between", children: [
    /* @__PURE__ */ N(
      an,
      {
        icon: "solar:magnifer-zoom-out-linear",
        isSquare: !0,
        disabled: l,
        onClick: n
      }
    ),
    /* @__PURE__ */ N(wn, { bold: !0, text: i, sx: { width: 100, textAlign: "right", px: 1 } }),
    /* @__PURE__ */ N(
      an,
      {
        icon: "solar:magnifer-zoom-in-linear",
        isSquare: !0,
        disabled: s,
        onClick: t
      }
    )
  ] }) });
});
CT.displayName = "WorkflowZoom";
const AU = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: CT
}, Symbol.toStringTag, { value: "Module" }));
export {
  sz as AdminFullScreen,
  az as AdminHeader,
  uz as AdminSettingsDrawer,
  cz as AdminSettingsDrawerBlock,
  pz as AdminSideNavMenu,
  rI as Avatar,
  oI as Blank,
  an as Button,
  vu as Card,
  Ow as Checkbox,
  PL as CheckboxUncontrolled,
  bF as ConfirmModal,
  AM as Container,
  rx as DotBadge,
  Ew as Drawer,
  Tw as DrawerHeader,
  II as ExhibitCard,
  MM as ExhibitCardActionButton,
  en as Flex,
  WU as FormUncontrolled,
  IL as FormUncontrolledAction,
  QL as Grid,
  hr as Icon,
  $x as IconBadge,
  Nu as Input,
  _L as InputUncontrolled,
  Xi as Label,
  Ru as Labels,
  tF as LazyImage,
  dF as Loading,
  Ec as Menu,
  Js as MenuItem,
  y1 as Modal,
  Dw as Number,
  nI as NumberTextBadge,
  ML as NumberUncontrolled,
  VS as OtpInput,
  AL as OtpInputUncontrolled,
  ro as Paper,
  jS as Password,
  DL as PasswordUncontrolled,
  gw as Popover,
  b1 as Popper,
  US as Radios,
  LL as RadiosUncontrolled,
  Gh as Switch,
  FL as SwitchUncontrolled,
  wn as Text,
  f1 as ThemePaletteName,
  RF as ThemeProvider,
  nz as Toast,
  Ki as Tooltip,
  dn as WorkflowAction,
  wm as WorkflowBaseEdge,
  Sm as WorkflowBaseNode,
  ud as WorkflowBaseNodeHandler,
  TU as WorkflowBaseNodeHandlerItem,
  PU as WorkflowDevtool,
  lT as WorkflowEdgeConnectionLineType,
  aT as WorkflowEdgeEndMarkerType,
  Gc as WorkflowEdgeTypeDefault,
  ST as WorkflowGroupNode,
  ET as WorkflowMiniMap,
  _U as WorkflowNodeDataFormValuePanel,
  is as WorkflowNodeTypeDefault,
  NU as WorkflowPlayground,
  xT as WorkflowSourceNodeHandler,
  wT as WorkflowTargetNodeHandler,
  ll as WorkflowToolbarPanel,
  TT as WorkflowUndoRedo,
  $U as WorkflowWrapper,
  CT as WorkflowZoom,
  CL as createFormControl,
  UU as createZodSchema,
  YU as generateNewNodeToStore,
  d1 as getColors,
  KU as getRelevantEdgesByEdge,
  Z6 as getRelevantEdgesByNode,
  sM as useCheckNavMenuActive,
  pL as useController,
  UM as useDrawer,
  VU as useFieldArray,
  jU as useForm,
  ar as useFormContext,
  dL as useFormState,
  GL as useFullScreen,
  qU as useModal,
  ms as usePaper,
  bu as useText,
  KL as useThemeBreakpoint,
  Zu as useThemeMode,
  em as useThemePalette,
  rz as useToast,
  fL as useWatch,
  W6 as useWorkflowActionsHistoryStates,
  H6 as useWorkflowActionsHistoryStoreCleanup,
  dT as useWorkflowActionsHistoryUndoRedo,
  ui as useWorkflowActionsHistoryUpdate,
  uT as useWorkflowCanvasViewport,
  Tn as useWorkflowConfigs,
  G6 as useWorkflowCopiedElements,
  Q6 as useWorkflowElementsCopyPasteCut,
  br as useWorkflowInstance,
  vU as useWorkflowNodeCreate,
  xU as useWorkflowNodeUpdate,
  bm as useWorkflowSelectedElements,
  HU as zodResolver
};
