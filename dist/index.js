var kT = Object.defineProperty;
var NT = (e, t, n) => t in e ? kT(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;
var lo = (e, t, n) => NT(e, typeof t != "symbol" ? t + "" : t, n);
import { jsx as N, jsxs as Se, Fragment as qn } from "react/jsx-runtime";
import * as M from "react";
import Y, { forwardRef as Na, useContext as Qi, useMemo as ct, memo as we, useState as Jt, useEffect as Ze, createElement as Uo, isValidElement as Bl, cloneElement as Fl, Children as IT, Fragment as $T, useCallback as Fe, useId as B0, useRef as Ge, createContext as wp, useLayoutEffect as F0, Suspense as bm, lazy as L0 } from "react";
import * as z0 from "react-dom";
import wi, { createPortal as PT } from "react-dom";
function V0(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var ol = { exports: {} }, il = { exports: {} }, it = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var vm;
function _T() {
  if (vm) return it;
  vm = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, i = e ? Symbol.for("react.profiler") : 60114, s = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, h = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, b = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
  function v(S) {
    if (typeof S == "object" && S !== null) {
      var T = S.$$typeof;
      switch (T) {
        case t:
          switch (S = S.type, S) {
            case c:
            case u:
            case r:
            case i:
            case o:
            case f:
              return S;
            default:
              switch (S = S && S.$$typeof, S) {
                case l:
                case d:
                case g:
                case h:
                case s:
                  return S;
                default:
                  return T;
              }
          }
        case n:
          return T;
      }
    }
  }
  function w(S) {
    return v(S) === u;
  }
  return it.AsyncMode = c, it.ConcurrentMode = u, it.ContextConsumer = l, it.ContextProvider = s, it.Element = t, it.ForwardRef = d, it.Fragment = r, it.Lazy = g, it.Memo = h, it.Portal = n, it.Profiler = i, it.StrictMode = o, it.Suspense = f, it.isAsyncMode = function(S) {
    return w(S) || v(S) === c;
  }, it.isConcurrentMode = w, it.isContextConsumer = function(S) {
    return v(S) === l;
  }, it.isContextProvider = function(S) {
    return v(S) === s;
  }, it.isElement = function(S) {
    return typeof S == "object" && S !== null && S.$$typeof === t;
  }, it.isForwardRef = function(S) {
    return v(S) === d;
  }, it.isFragment = function(S) {
    return v(S) === r;
  }, it.isLazy = function(S) {
    return v(S) === g;
  }, it.isMemo = function(S) {
    return v(S) === h;
  }, it.isPortal = function(S) {
    return v(S) === n;
  }, it.isProfiler = function(S) {
    return v(S) === i;
  }, it.isStrictMode = function(S) {
    return v(S) === o;
  }, it.isSuspense = function(S) {
    return v(S) === f;
  }, it.isValidElementType = function(S) {
    return typeof S == "string" || typeof S == "function" || S === r || S === u || S === i || S === o || S === f || S === p || typeof S == "object" && S !== null && (S.$$typeof === g || S.$$typeof === h || S.$$typeof === s || S.$$typeof === l || S.$$typeof === d || S.$$typeof === b || S.$$typeof === x || S.$$typeof === E || S.$$typeof === m);
  }, it.typeOf = v, it;
}
var st = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var xm;
function MT() {
  return xm || (xm = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, i = e ? Symbol.for("react.profiler") : 60114, s = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, h = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, b = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
    function v(j) {
      return typeof j == "string" || typeof j == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      j === r || j === u || j === i || j === o || j === f || j === p || typeof j == "object" && j !== null && (j.$$typeof === g || j.$$typeof === h || j.$$typeof === s || j.$$typeof === l || j.$$typeof === d || j.$$typeof === b || j.$$typeof === x || j.$$typeof === E || j.$$typeof === m);
    }
    function w(j) {
      if (typeof j == "object" && j !== null) {
        var pe = j.$$typeof;
        switch (pe) {
          case t:
            var ce = j.type;
            switch (ce) {
              case c:
              case u:
              case r:
              case i:
              case o:
              case f:
                return ce;
              default:
                var be = ce && ce.$$typeof;
                switch (be) {
                  case l:
                  case d:
                  case g:
                  case h:
                  case s:
                    return be;
                  default:
                    return pe;
                }
            }
          case n:
            return pe;
        }
      }
    }
    var S = c, T = u, C = l, k = s, P = t, y = d, R = r, $ = g, A = h, O = n, _ = i, I = o, D = f, z = !1;
    function B(j) {
      return z || (z = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), F(j) || w(j) === c;
    }
    function F(j) {
      return w(j) === u;
    }
    function L(j) {
      return w(j) === l;
    }
    function W(j) {
      return w(j) === s;
    }
    function U(j) {
      return typeof j == "object" && j !== null && j.$$typeof === t;
    }
    function Z(j) {
      return w(j) === d;
    }
    function Q(j) {
      return w(j) === r;
    }
    function ee(j) {
      return w(j) === g;
    }
    function te(j) {
      return w(j) === h;
    }
    function q(j) {
      return w(j) === n;
    }
    function oe(j) {
      return w(j) === i;
    }
    function K(j) {
      return w(j) === o;
    }
    function ne(j) {
      return w(j) === f;
    }
    st.AsyncMode = S, st.ConcurrentMode = T, st.ContextConsumer = C, st.ContextProvider = k, st.Element = P, st.ForwardRef = y, st.Fragment = R, st.Lazy = $, st.Memo = A, st.Portal = O, st.Profiler = _, st.StrictMode = I, st.Suspense = D, st.isAsyncMode = B, st.isConcurrentMode = F, st.isContextConsumer = L, st.isContextProvider = W, st.isElement = U, st.isForwardRef = Z, st.isFragment = Q, st.isLazy = ee, st.isMemo = te, st.isPortal = q, st.isProfiler = oe, st.isStrictMode = K, st.isSuspense = ne, st.isValidElementType = v, st.typeOf = w;
  }()), st;
}
var wm;
function j0() {
  return wm || (wm = 1, process.env.NODE_ENV === "production" ? il.exports = _T() : il.exports = MT()), il.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var sd, Sm;
function AT() {
  if (Sm) return sd;
  Sm = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
  function r(i) {
    if (i == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(i);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var i = new String("abc");
      if (i[5] = "de", Object.getOwnPropertyNames(i)[0] === "5")
        return !1;
      for (var s = {}, l = 0; l < 10; l++)
        s["_" + String.fromCharCode(l)] = l;
      var c = Object.getOwnPropertyNames(s).map(function(d) {
        return s[d];
      });
      if (c.join("") !== "0123456789")
        return !1;
      var u = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(d) {
        u[d] = d;
      }), Object.keys(Object.assign({}, u)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return sd = o() ? Object.assign : function(i, s) {
    for (var l, c = r(i), u, d = 1; d < arguments.length; d++) {
      l = Object(arguments[d]);
      for (var f in l)
        t.call(l, f) && (c[f] = l[f]);
      if (e) {
        u = e(l);
        for (var p = 0; p < u.length; p++)
          n.call(l, u[p]) && (c[u[p]] = l[u[p]]);
      }
    }
    return c;
  }, sd;
}
var ad, Em;
function Sp() {
  if (Em) return ad;
  Em = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return ad = e, ad;
}
var ld, Tm;
function H0() {
  return Tm || (Tm = 1, ld = Function.call.bind(Object.prototype.hasOwnProperty)), ld;
}
var cd, Cm;
function DT() {
  if (Cm) return cd;
  Cm = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ Sp(), n = {}, r = /* @__PURE__ */ H0();
    e = function(i) {
      var s = "Warning: " + i;
      typeof console < "u" && console.error(s);
      try {
        throw new Error(s);
      } catch {
      }
    };
  }
  function o(i, s, l, c, u) {
    if (process.env.NODE_ENV !== "production") {
      for (var d in i)
        if (r(i, d)) {
          var f;
          try {
            if (typeof i[d] != "function") {
              var p = Error(
                (c || "React class") + ": " + l + " type `" + d + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof i[d] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw p.name = "Invariant Violation", p;
            }
            f = i[d](s, d, c, l, null, t);
          } catch (g) {
            f = g;
          }
          if (f && !(f instanceof Error) && e(
            (c || "React class") + ": type specification of " + l + " `" + d + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof f + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), f instanceof Error && !(f.message in n)) {
            n[f.message] = !0;
            var h = u ? u() : "";
            e(
              "Failed " + l + " type: " + f.message + (h ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (n = {});
  }, cd = o, cd;
}
var ud, Om;
function BT() {
  if (Om) return ud;
  Om = 1;
  var e = j0(), t = AT(), n = /* @__PURE__ */ Sp(), r = /* @__PURE__ */ H0(), o = /* @__PURE__ */ DT(), i = function() {
  };
  process.env.NODE_ENV !== "production" && (i = function(l) {
    var c = "Warning: " + l;
    typeof console < "u" && console.error(c);
    try {
      throw new Error(c);
    } catch {
    }
  });
  function s() {
    return null;
  }
  return ud = function(l, c) {
    var u = typeof Symbol == "function" && Symbol.iterator, d = "@@iterator";
    function f(F) {
      var L = F && (u && F[u] || F[d]);
      if (typeof L == "function")
        return L;
    }
    var p = "<<anonymous>>", h = {
      array: x("array"),
      bigint: x("bigint"),
      bool: x("boolean"),
      func: x("function"),
      number: x("number"),
      object: x("object"),
      string: x("string"),
      symbol: x("symbol"),
      any: E(),
      arrayOf: v,
      element: w(),
      elementType: S(),
      instanceOf: T,
      node: y(),
      objectOf: k,
      oneOf: C,
      oneOfType: P,
      shape: $,
      exact: A
    };
    function g(F, L) {
      return F === L ? F !== 0 || 1 / F === 1 / L : F !== F && L !== L;
    }
    function m(F, L) {
      this.message = F, this.data = L && typeof L == "object" ? L : {}, this.stack = "";
    }
    m.prototype = Error.prototype;
    function b(F) {
      if (process.env.NODE_ENV !== "production")
        var L = {}, W = 0;
      function U(Q, ee, te, q, oe, K, ne) {
        if (q = q || p, K = K || te, ne !== n) {
          if (c) {
            var j = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw j.name = "Invariant Violation", j;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var pe = q + ":" + te;
            !L[pe] && // Avoid spamming the console because they are often not actionable except for lib authors
            W < 3 && (i(
              "You are manually calling a React.PropTypes validation function for the `" + K + "` prop on `" + q + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), L[pe] = !0, W++);
          }
        }
        return ee[te] == null ? Q ? ee[te] === null ? new m("The " + oe + " `" + K + "` is marked as required " + ("in `" + q + "`, but its value is `null`.")) : new m("The " + oe + " `" + K + "` is marked as required in " + ("`" + q + "`, but its value is `undefined`.")) : null : F(ee, te, q, oe, K);
      }
      var Z = U.bind(null, !1);
      return Z.isRequired = U.bind(null, !0), Z;
    }
    function x(F) {
      function L(W, U, Z, Q, ee, te) {
        var q = W[U], oe = I(q);
        if (oe !== F) {
          var K = D(q);
          return new m(
            "Invalid " + Q + " `" + ee + "` of type " + ("`" + K + "` supplied to `" + Z + "`, expected ") + ("`" + F + "`."),
            { expectedType: F }
          );
        }
        return null;
      }
      return b(L);
    }
    function E() {
      return b(s);
    }
    function v(F) {
      function L(W, U, Z, Q, ee) {
        if (typeof F != "function")
          return new m("Property `" + ee + "` of component `" + Z + "` has invalid PropType notation inside arrayOf.");
        var te = W[U];
        if (!Array.isArray(te)) {
          var q = I(te);
          return new m("Invalid " + Q + " `" + ee + "` of type " + ("`" + q + "` supplied to `" + Z + "`, expected an array."));
        }
        for (var oe = 0; oe < te.length; oe++) {
          var K = F(te, oe, Z, Q, ee + "[" + oe + "]", n);
          if (K instanceof Error)
            return K;
        }
        return null;
      }
      return b(L);
    }
    function w() {
      function F(L, W, U, Z, Q) {
        var ee = L[W];
        if (!l(ee)) {
          var te = I(ee);
          return new m("Invalid " + Z + " `" + Q + "` of type " + ("`" + te + "` supplied to `" + U + "`, expected a single ReactElement."));
        }
        return null;
      }
      return b(F);
    }
    function S() {
      function F(L, W, U, Z, Q) {
        var ee = L[W];
        if (!e.isValidElementType(ee)) {
          var te = I(ee);
          return new m("Invalid " + Z + " `" + Q + "` of type " + ("`" + te + "` supplied to `" + U + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return b(F);
    }
    function T(F) {
      function L(W, U, Z, Q, ee) {
        if (!(W[U] instanceof F)) {
          var te = F.name || p, q = B(W[U]);
          return new m("Invalid " + Q + " `" + ee + "` of type " + ("`" + q + "` supplied to `" + Z + "`, expected ") + ("instance of `" + te + "`."));
        }
        return null;
      }
      return b(L);
    }
    function C(F) {
      if (!Array.isArray(F))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? i(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : i("Invalid argument supplied to oneOf, expected an array.")), s;
      function L(W, U, Z, Q, ee) {
        for (var te = W[U], q = 0; q < F.length; q++)
          if (g(te, F[q]))
            return null;
        var oe = JSON.stringify(F, function(ne, j) {
          var pe = D(j);
          return pe === "symbol" ? String(j) : j;
        });
        return new m("Invalid " + Q + " `" + ee + "` of value `" + String(te) + "` " + ("supplied to `" + Z + "`, expected one of " + oe + "."));
      }
      return b(L);
    }
    function k(F) {
      function L(W, U, Z, Q, ee) {
        if (typeof F != "function")
          return new m("Property `" + ee + "` of component `" + Z + "` has invalid PropType notation inside objectOf.");
        var te = W[U], q = I(te);
        if (q !== "object")
          return new m("Invalid " + Q + " `" + ee + "` of type " + ("`" + q + "` supplied to `" + Z + "`, expected an object."));
        for (var oe in te)
          if (r(te, oe)) {
            var K = F(te, oe, Z, Q, ee + "." + oe, n);
            if (K instanceof Error)
              return K;
          }
        return null;
      }
      return b(L);
    }
    function P(F) {
      if (!Array.isArray(F))
        return process.env.NODE_ENV !== "production" && i("Invalid argument supplied to oneOfType, expected an instance of array."), s;
      for (var L = 0; L < F.length; L++) {
        var W = F[L];
        if (typeof W != "function")
          return i(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + z(W) + " at index " + L + "."
          ), s;
      }
      function U(Z, Q, ee, te, q) {
        for (var oe = [], K = 0; K < F.length; K++) {
          var ne = F[K], j = ne(Z, Q, ee, te, q, n);
          if (j == null)
            return null;
          j.data && r(j.data, "expectedType") && oe.push(j.data.expectedType);
        }
        var pe = oe.length > 0 ? ", expected one of type [" + oe.join(", ") + "]" : "";
        return new m("Invalid " + te + " `" + q + "` supplied to " + ("`" + ee + "`" + pe + "."));
      }
      return b(U);
    }
    function y() {
      function F(L, W, U, Z, Q) {
        return O(L[W]) ? null : new m("Invalid " + Z + " `" + Q + "` supplied to " + ("`" + U + "`, expected a ReactNode."));
      }
      return b(F);
    }
    function R(F, L, W, U, Z) {
      return new m(
        (F || "React class") + ": " + L + " type `" + W + "." + U + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + Z + "`."
      );
    }
    function $(F) {
      function L(W, U, Z, Q, ee) {
        var te = W[U], q = I(te);
        if (q !== "object")
          return new m("Invalid " + Q + " `" + ee + "` of type `" + q + "` " + ("supplied to `" + Z + "`, expected `object`."));
        for (var oe in F) {
          var K = F[oe];
          if (typeof K != "function")
            return R(Z, Q, ee, oe, D(K));
          var ne = K(te, oe, Z, Q, ee + "." + oe, n);
          if (ne)
            return ne;
        }
        return null;
      }
      return b(L);
    }
    function A(F) {
      function L(W, U, Z, Q, ee) {
        var te = W[U], q = I(te);
        if (q !== "object")
          return new m("Invalid " + Q + " `" + ee + "` of type `" + q + "` " + ("supplied to `" + Z + "`, expected `object`."));
        var oe = t({}, W[U], F);
        for (var K in oe) {
          var ne = F[K];
          if (r(F, K) && typeof ne != "function")
            return R(Z, Q, ee, K, D(ne));
          if (!ne)
            return new m(
              "Invalid " + Q + " `" + ee + "` key `" + K + "` supplied to `" + Z + "`.\nBad object: " + JSON.stringify(W[U], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(F), null, "  ")
            );
          var j = ne(te, K, Z, Q, ee + "." + K, n);
          if (j)
            return j;
        }
        return null;
      }
      return b(L);
    }
    function O(F) {
      switch (typeof F) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !F;
        case "object":
          if (Array.isArray(F))
            return F.every(O);
          if (F === null || l(F))
            return !0;
          var L = f(F);
          if (L) {
            var W = L.call(F), U;
            if (L !== F.entries) {
              for (; !(U = W.next()).done; )
                if (!O(U.value))
                  return !1;
            } else
              for (; !(U = W.next()).done; ) {
                var Z = U.value;
                if (Z && !O(Z[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function _(F, L) {
      return F === "symbol" ? !0 : L ? L["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && L instanceof Symbol : !1;
    }
    function I(F) {
      var L = typeof F;
      return Array.isArray(F) ? "array" : F instanceof RegExp ? "object" : _(L, F) ? "symbol" : L;
    }
    function D(F) {
      if (typeof F > "u" || F === null)
        return "" + F;
      var L = I(F);
      if (L === "object") {
        if (F instanceof Date)
          return "date";
        if (F instanceof RegExp)
          return "regexp";
      }
      return L;
    }
    function z(F) {
      var L = D(F);
      switch (L) {
        case "array":
        case "object":
          return "an " + L;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + L;
        default:
          return L;
      }
    }
    function B(F) {
      return !F.constructor || !F.constructor.name ? p : F.constructor.name;
    }
    return h.checkPropTypes = o, h.resetWarningCache = o.resetWarningCache, h.PropTypes = h, h;
  }, ud;
}
var dd, Rm;
function FT() {
  if (Rm) return dd;
  Rm = 1;
  var e = /* @__PURE__ */ Sp();
  function t() {
  }
  function n() {
  }
  return n.resetWarningCache = t, dd = function() {
    function r(s, l, c, u, d, f) {
      if (f !== e) {
        var p = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw p.name = "Invariant Violation", p;
      }
    }
    r.isRequired = r;
    function o() {
      return r;
    }
    var i = {
      array: r,
      bigint: r,
      bool: r,
      func: r,
      number: r,
      object: r,
      string: r,
      symbol: r,
      any: r,
      arrayOf: o,
      element: r,
      elementType: r,
      instanceOf: o,
      node: r,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: n,
      resetWarningCache: t
    };
    return i.PropTypes = i, i;
  }, dd;
}
var km;
function LT() {
  if (km) return ol.exports;
  if (km = 1, process.env.NODE_ENV !== "production") {
    var e = j0(), t = !0;
    ol.exports = /* @__PURE__ */ BT()(e.isElement, t);
  } else
    ol.exports = /* @__PURE__ */ FT()();
  return ol.exports;
}
var zT = /* @__PURE__ */ LT();
const a = /* @__PURE__ */ V0(zT);
function W0(e) {
  var t, n, r = "";
  if (typeof e == "string" || typeof e == "number") r += e;
  else if (typeof e == "object") if (Array.isArray(e)) {
    var o = e.length;
    for (t = 0; t < o; t++) e[t] && (n = W0(e[t])) && (r && (r += " "), r += n);
  } else for (n in e) e[n] && (r && (r += " "), r += n);
  return r;
}
function Oe() {
  for (var e, t, n = 0, r = "", o = arguments.length; n < o; n++) (e = arguments[n]) && (t = W0(e)) && (r && (r += " "), r += t);
  return r;
}
function Mt(e, t, n = void 0) {
  const r = {};
  for (const o in e) {
    const i = e[o];
    let s = "", l = !0;
    for (let c = 0; c < i.length; c += 1) {
      const u = i[c];
      u && (s += (l === !0 ? "" : " ") + t(u), l = !1, n && n[u] && (s += " " + n[u]));
    }
    r[o] = s;
  }
  return r;
}
function Xr(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((r) => n.searchParams.append("args[]", r)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
function Ee(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : Xr(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
var sl = { exports: {} }, dt = {};
/**
 * @license React
 * react-is.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Nm;
function VT() {
  if (Nm) return dt;
  Nm = 1;
  var e = Symbol.for("react.transitional.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), o = Symbol.for("react.profiler"), i = Symbol.for("react.consumer"), s = Symbol.for("react.context"), l = Symbol.for("react.forward_ref"), c = Symbol.for("react.suspense"), u = Symbol.for("react.suspense_list"), d = Symbol.for("react.memo"), f = Symbol.for("react.lazy"), p = Symbol.for("react.view_transition"), h = Symbol.for("react.client.reference");
  function g(m) {
    if (typeof m == "object" && m !== null) {
      var b = m.$$typeof;
      switch (b) {
        case e:
          switch (m = m.type, m) {
            case n:
            case o:
            case r:
            case c:
            case u:
            case p:
              return m;
            default:
              switch (m = m && m.$$typeof, m) {
                case s:
                case l:
                case f:
                case d:
                  return m;
                case i:
                  return m;
                default:
                  return b;
              }
          }
        case t:
          return b;
      }
    }
  }
  return dt.ContextConsumer = i, dt.ContextProvider = s, dt.Element = e, dt.ForwardRef = l, dt.Fragment = n, dt.Lazy = f, dt.Memo = d, dt.Portal = t, dt.Profiler = o, dt.StrictMode = r, dt.Suspense = c, dt.SuspenseList = u, dt.isContextConsumer = function(m) {
    return g(m) === i;
  }, dt.isContextProvider = function(m) {
    return g(m) === s;
  }, dt.isElement = function(m) {
    return typeof m == "object" && m !== null && m.$$typeof === e;
  }, dt.isForwardRef = function(m) {
    return g(m) === l;
  }, dt.isFragment = function(m) {
    return g(m) === n;
  }, dt.isLazy = function(m) {
    return g(m) === f;
  }, dt.isMemo = function(m) {
    return g(m) === d;
  }, dt.isPortal = function(m) {
    return g(m) === t;
  }, dt.isProfiler = function(m) {
    return g(m) === o;
  }, dt.isStrictMode = function(m) {
    return g(m) === r;
  }, dt.isSuspense = function(m) {
    return g(m) === c;
  }, dt.isSuspenseList = function(m) {
    return g(m) === u;
  }, dt.isValidElementType = function(m) {
    return typeof m == "string" || typeof m == "function" || m === n || m === o || m === r || m === c || m === u || typeof m == "object" && m !== null && (m.$$typeof === f || m.$$typeof === d || m.$$typeof === s || m.$$typeof === i || m.$$typeof === l || m.$$typeof === h || m.getModuleId !== void 0);
  }, dt.typeOf = g, dt;
}
var ft = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Im;
function jT() {
  return Im || (Im = 1, process.env.NODE_ENV !== "production" && function() {
    function e(m) {
      if (typeof m == "object" && m !== null) {
        var b = m.$$typeof;
        switch (b) {
          case t:
            switch (m = m.type, m) {
              case r:
              case i:
              case o:
              case u:
              case d:
              case h:
                return m;
              default:
                switch (m = m && m.$$typeof, m) {
                  case l:
                  case c:
                  case p:
                  case f:
                    return m;
                  case s:
                    return m;
                  default:
                    return b;
                }
            }
          case n:
            return b;
        }
      }
    }
    var t = Symbol.for("react.transitional.element"), n = Symbol.for("react.portal"), r = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), i = Symbol.for("react.profiler"), s = Symbol.for("react.consumer"), l = Symbol.for("react.context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), d = Symbol.for("react.suspense_list"), f = Symbol.for("react.memo"), p = Symbol.for("react.lazy"), h = Symbol.for("react.view_transition"), g = Symbol.for("react.client.reference");
    ft.ContextConsumer = s, ft.ContextProvider = l, ft.Element = t, ft.ForwardRef = c, ft.Fragment = r, ft.Lazy = p, ft.Memo = f, ft.Portal = n, ft.Profiler = i, ft.StrictMode = o, ft.Suspense = u, ft.SuspenseList = d, ft.isContextConsumer = function(m) {
      return e(m) === s;
    }, ft.isContextProvider = function(m) {
      return e(m) === l;
    }, ft.isElement = function(m) {
      return typeof m == "object" && m !== null && m.$$typeof === t;
    }, ft.isForwardRef = function(m) {
      return e(m) === c;
    }, ft.isFragment = function(m) {
      return e(m) === r;
    }, ft.isLazy = function(m) {
      return e(m) === p;
    }, ft.isMemo = function(m) {
      return e(m) === f;
    }, ft.isPortal = function(m) {
      return e(m) === n;
    }, ft.isProfiler = function(m) {
      return e(m) === i;
    }, ft.isStrictMode = function(m) {
      return e(m) === o;
    }, ft.isSuspense = function(m) {
      return e(m) === u;
    }, ft.isSuspenseList = function(m) {
      return e(m) === d;
    }, ft.isValidElementType = function(m) {
      return typeof m == "string" || typeof m == "function" || m === r || m === i || m === o || m === u || m === d || typeof m == "object" && m !== null && (m.$$typeof === p || m.$$typeof === f || m.$$typeof === l || m.$$typeof === s || m.$$typeof === c || m.$$typeof === g || m.getModuleId !== void 0);
    }, ft.typeOf = e;
  }()), ft;
}
var $m;
function HT() {
  return $m || ($m = 1, process.env.NODE_ENV === "production" ? sl.exports = /* @__PURE__ */ VT() : sl.exports = /* @__PURE__ */ jT()), sl.exports;
}
var fr = /* @__PURE__ */ HT();
function Tr(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function U0(e) {
  if (/* @__PURE__ */ M.isValidElement(e) || fr.isValidElementType(e) || !Tr(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = U0(e[n]);
  }), t;
}
function zn(e, t, n = {
  clone: !0
}) {
  const r = n.clone ? {
    ...e
  } : e;
  return Tr(e) && Tr(t) && Object.keys(t).forEach((o) => {
    /* @__PURE__ */ M.isValidElement(t[o]) || fr.isValidElementType(t[o]) ? r[o] = t[o] : Tr(t[o]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, o) && Tr(e[o]) ? r[o] = zn(e[o], t[o], n) : n.clone ? r[o] = Tr(t[o]) ? U0(t[o]) : t[o] : r[o] = t[o];
  }), r;
}
function zs(e, t) {
  return t ? zn(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const Co = process.env.NODE_ENV !== "production" ? a.oneOfType([a.number, a.string, a.object, a.array]) : {};
function WT(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((r) => r.startsWith("@container")).sort((r, o) => {
    var s, l;
    const i = /min-width:\s*([0-9.]+)/;
    return +(((s = r.match(i)) == null ? void 0 : s[1]) || 0) - +(((l = o.match(i)) == null ? void 0 : l[1]) || 0);
  });
  return n.length ? n.reduce((r, o) => {
    const i = t[o];
    return delete r[o], r[o] = i, r;
  }, {
    ...t
  }) : t;
}
function UT(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function qT(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : Xr(18, `(${t})`));
    return null;
  }
  const [, r, o] = n, i = Number.isNaN(+r) ? r || 0 : +r;
  return e.containerQueries(o).up(i);
}
function YT(e) {
  const t = (i, s) => i.replace("@media", s ? `@container ${s}` : "@container");
  function n(i, s) {
    i.up = (...l) => t(e.breakpoints.up(...l), s), i.down = (...l) => t(e.breakpoints.down(...l), s), i.between = (...l) => t(e.breakpoints.between(...l), s), i.only = (...l) => t(e.breakpoints.only(...l), s), i.not = (...l) => {
      const c = t(e.breakpoints.not(...l), s);
      return c.includes("not all and") ? c.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : c;
    };
  }
  const r = {}, o = (i) => (n(r, i), r);
  return n(o), {
    ...e,
    containerQueries: o
  };
}
const Hc = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, Pm = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${Hc[e]}px)`
}, GT = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : Hc[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function Zr(e, t, n) {
  const r = e.theme || {};
  if (Array.isArray(t)) {
    const i = r.breakpoints || Pm;
    return t.reduce((s, l, c) => (s[i.up(i.keys[c])] = n(t[c]), s), {});
  }
  if (typeof t == "object") {
    const i = r.breakpoints || Pm;
    return Object.keys(t).reduce((s, l) => {
      if (UT(i.keys, l)) {
        const c = qT(r.containerQueries ? r : GT, l);
        c && (s[c] = n(t[l], l));
      } else if (Object.keys(i.values || Hc).includes(l)) {
        const c = i.up(l);
        s[c] = n(t[l], l);
      } else {
        const c = l;
        s[c] = t[c];
      }
      return s;
    }, {});
  }
  return n(t);
}
function KT(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((r, o) => {
    const i = e.up(o);
    return r[i] = {}, r;
  }, {})) || {};
}
function XT(e, t) {
  return e.reduce((n, r) => {
    const o = n[r];
    return (!o || Object.keys(o).length === 0) && delete n[r], n;
  }, t);
}
function Wc(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const r = `vars.${t}`.split(".").reduce((o, i) => o && o[i] ? o[i] : null, e);
    if (r != null)
      return r;
  }
  return t.split(".").reduce((r, o) => r && r[o] != null ? r[o] : null, e);
}
function tc(e, t, n, r = n) {
  let o;
  return typeof e == "function" ? o = e(n) : Array.isArray(e) ? o = e[n] || r : o = Wc(e, n) || r, t && (o = t(o, r, e)), o;
}
function Ut(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: r,
    transform: o
  } = e, i = (s) => {
    if (s[t] == null)
      return null;
    const l = s[t], c = s.theme, u = Wc(c, r) || {};
    return Zr(s, l, (f) => {
      let p = tc(u, o, f);
      return f === p && typeof f == "string" && (p = tc(u, o, `${t}${f === "default" ? "" : Ee(f)}`, f)), n === !1 ? p : {
        [n]: p
      };
    });
  };
  return i.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: Co
  } : {}, i.filterProps = [t], i;
}
function ZT(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const QT = {
  m: "margin",
  p: "padding"
}, JT = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, _m = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, eC = ZT((e) => {
  if (e.length > 2)
    if (_m[e])
      e = _m[e];
    else
      return [e];
  const [t, n] = e.split(""), r = QT[t], o = JT[n] || "";
  return Array.isArray(o) ? o.map((i) => r + i) : [r + o];
}), Uc = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], qc = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], tC = [...Uc, ...qc];
function Ia(e, t, n, r) {
  const o = Wc(e, t, !0) ?? n;
  return typeof o == "number" || typeof o == "string" ? (i) => typeof i == "string" ? i : (process.env.NODE_ENV !== "production" && typeof i != "number" && console.error(`MUI: Expected ${r} argument to be a number or a string, got ${i}.`), typeof o == "string" ? o.startsWith("var(") && i === 0 ? 0 : o.startsWith("var(") && i === 1 ? o : `calc(${i} * ${o})` : o * i) : Array.isArray(o) ? (i) => {
    if (typeof i == "string")
      return i;
    const s = Math.abs(i);
    process.env.NODE_ENV !== "production" && (Number.isInteger(s) ? s > o.length - 1 && console.error([`MUI: The value provided (${s}) overflows.`, `The supported values are: ${JSON.stringify(o)}.`, `${s} > ${o.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const l = o[s];
    return i >= 0 ? l : typeof l == "number" ? -l : typeof l == "string" && l.startsWith("var(") ? `calc(-1 * ${l})` : `-${l}`;
  } : typeof o == "function" ? o : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${o}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function Ep(e) {
  return Ia(e, "spacing", 8, "spacing");
}
function $a(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function nC(e, t) {
  return (n) => e.reduce((r, o) => (r[o] = $a(t, n), r), {});
}
function rC(e, t, n, r) {
  if (!t.includes(n))
    return null;
  const o = eC(n), i = nC(o, r), s = e[n];
  return Zr(e, s, i);
}
function q0(e, t) {
  const n = Ep(e.theme);
  return Object.keys(e).map((r) => rC(e, t, r, n)).reduce(zs, {});
}
function Dt(e) {
  return q0(e, Uc);
}
Dt.propTypes = process.env.NODE_ENV !== "production" ? Uc.reduce((e, t) => (e[t] = Co, e), {}) : {};
Dt.filterProps = Uc;
function Bt(e) {
  return q0(e, qc);
}
Bt.propTypes = process.env.NODE_ENV !== "production" ? qc.reduce((e, t) => (e[t] = Co, e), {}) : {};
Bt.filterProps = qc;
process.env.NODE_ENV !== "production" && tC.reduce((e, t) => (e[t] = Co, e), {});
function Yc(...e) {
  const t = e.reduce((r, o) => (o.filterProps.forEach((i) => {
    r[i] = o;
  }), r), {}), n = (r) => Object.keys(r).reduce((o, i) => t[i] ? zs(o, t[i](r)) : o, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((r, o) => Object.assign(r, o.propTypes), {}) : {}, n.filterProps = e.reduce((r, o) => r.concat(o.filterProps), []), n;
}
function Kn(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function rr(e, t) {
  return Ut({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const oC = rr("border", Kn), iC = rr("borderTop", Kn), sC = rr("borderRight", Kn), aC = rr("borderBottom", Kn), lC = rr("borderLeft", Kn), cC = rr("borderColor"), uC = rr("borderTopColor"), dC = rr("borderRightColor"), fC = rr("borderBottomColor"), pC = rr("borderLeftColor"), hC = rr("outline", Kn), mC = rr("outlineColor"), Gc = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = Ia(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (r) => ({
      borderRadius: $a(t, r)
    });
    return Zr(e, e.borderRadius, n);
  }
  return null;
};
Gc.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: Co
} : {};
Gc.filterProps = ["borderRadius"];
Yc(oC, iC, sC, aC, lC, cC, uC, dC, fC, pC, Gc, hC, mC);
const Kc = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = Ia(e.theme, "spacing", 8, "gap"), n = (r) => ({
      gap: $a(t, r)
    });
    return Zr(e, e.gap, n);
  }
  return null;
};
Kc.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: Co
} : {};
Kc.filterProps = ["gap"];
const Xc = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = Ia(e.theme, "spacing", 8, "columnGap"), n = (r) => ({
      columnGap: $a(t, r)
    });
    return Zr(e, e.columnGap, n);
  }
  return null;
};
Xc.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: Co
} : {};
Xc.filterProps = ["columnGap"];
const Zc = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = Ia(e.theme, "spacing", 8, "rowGap"), n = (r) => ({
      rowGap: $a(t, r)
    });
    return Zr(e, e.rowGap, n);
  }
  return null;
};
Zc.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: Co
} : {};
Zc.filterProps = ["rowGap"];
const gC = Ut({
  prop: "gridColumn"
}), yC = Ut({
  prop: "gridRow"
}), bC = Ut({
  prop: "gridAutoFlow"
}), vC = Ut({
  prop: "gridAutoColumns"
}), xC = Ut({
  prop: "gridAutoRows"
}), wC = Ut({
  prop: "gridTemplateColumns"
}), SC = Ut({
  prop: "gridTemplateRows"
}), EC = Ut({
  prop: "gridTemplateAreas"
}), TC = Ut({
  prop: "gridArea"
});
Yc(Kc, Xc, Zc, gC, yC, bC, vC, xC, wC, SC, EC, TC);
function Oi(e, t) {
  return t === "grey" ? t : e;
}
const CC = Ut({
  prop: "color",
  themeKey: "palette",
  transform: Oi
}), OC = Ut({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: Oi
}), RC = Ut({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: Oi
});
Yc(CC, OC, RC);
function An(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const kC = Ut({
  prop: "width",
  transform: An
}), Tp = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var o, i, s, l, c;
      const r = ((s = (i = (o = e.theme) == null ? void 0 : o.breakpoints) == null ? void 0 : i.values) == null ? void 0 : s[n]) || Hc[n];
      return r ? ((c = (l = e.theme) == null ? void 0 : l.breakpoints) == null ? void 0 : c.unit) !== "px" ? {
        maxWidth: `${r}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: r
      } : {
        maxWidth: An(n)
      };
    };
    return Zr(e, e.maxWidth, t);
  }
  return null;
};
Tp.filterProps = ["maxWidth"];
const NC = Ut({
  prop: "minWidth",
  transform: An
}), IC = Ut({
  prop: "height",
  transform: An
}), $C = Ut({
  prop: "maxHeight",
  transform: An
}), PC = Ut({
  prop: "minHeight",
  transform: An
});
Ut({
  prop: "size",
  cssProperty: "width",
  transform: An
});
Ut({
  prop: "size",
  cssProperty: "height",
  transform: An
});
const _C = Ut({
  prop: "boxSizing"
});
Yc(kC, Tp, NC, IC, $C, PC, _C);
const Pa = {
  // borders
  border: {
    themeKey: "borders",
    transform: Kn
  },
  borderTop: {
    themeKey: "borders",
    transform: Kn
  },
  borderRight: {
    themeKey: "borders",
    transform: Kn
  },
  borderBottom: {
    themeKey: "borders",
    transform: Kn
  },
  borderLeft: {
    themeKey: "borders",
    transform: Kn
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: Kn
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: Gc
  },
  // palette
  color: {
    themeKey: "palette",
    transform: Oi
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: Oi
  },
  backgroundColor: {
    themeKey: "palette",
    transform: Oi
  },
  // spacing
  p: {
    style: Bt
  },
  pt: {
    style: Bt
  },
  pr: {
    style: Bt
  },
  pb: {
    style: Bt
  },
  pl: {
    style: Bt
  },
  px: {
    style: Bt
  },
  py: {
    style: Bt
  },
  padding: {
    style: Bt
  },
  paddingTop: {
    style: Bt
  },
  paddingRight: {
    style: Bt
  },
  paddingBottom: {
    style: Bt
  },
  paddingLeft: {
    style: Bt
  },
  paddingX: {
    style: Bt
  },
  paddingY: {
    style: Bt
  },
  paddingInline: {
    style: Bt
  },
  paddingInlineStart: {
    style: Bt
  },
  paddingInlineEnd: {
    style: Bt
  },
  paddingBlock: {
    style: Bt
  },
  paddingBlockStart: {
    style: Bt
  },
  paddingBlockEnd: {
    style: Bt
  },
  m: {
    style: Dt
  },
  mt: {
    style: Dt
  },
  mr: {
    style: Dt
  },
  mb: {
    style: Dt
  },
  ml: {
    style: Dt
  },
  mx: {
    style: Dt
  },
  my: {
    style: Dt
  },
  margin: {
    style: Dt
  },
  marginTop: {
    style: Dt
  },
  marginRight: {
    style: Dt
  },
  marginBottom: {
    style: Dt
  },
  marginLeft: {
    style: Dt
  },
  marginX: {
    style: Dt
  },
  marginY: {
    style: Dt
  },
  marginInline: {
    style: Dt
  },
  marginInlineStart: {
    style: Dt
  },
  marginInlineEnd: {
    style: Dt
  },
  marginBlock: {
    style: Dt
  },
  marginBlockStart: {
    style: Dt
  },
  marginBlockEnd: {
    style: Dt
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: Kc
  },
  rowGap: {
    style: Zc
  },
  columnGap: {
    style: Xc
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: An
  },
  maxWidth: {
    style: Tp
  },
  minWidth: {
    transform: An
  },
  height: {
    transform: An
  },
  maxHeight: {
    transform: An
  },
  minHeight: {
    transform: An
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function MC(...e) {
  const t = e.reduce((r, o) => r.concat(Object.keys(o)), []), n = new Set(t);
  return e.every((r) => n.size === Object.keys(r).length);
}
function AC(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function DC() {
  function e(n, r, o, i) {
    const s = {
      [n]: r,
      theme: o
    }, l = i[n];
    if (!l)
      return {
        [n]: r
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: d,
      style: f
    } = l;
    if (r == null)
      return null;
    if (u === "typography" && r === "inherit")
      return {
        [n]: r
      };
    const p = Wc(o, u) || {};
    return f ? f(s) : Zr(s, r, (g) => {
      let m = tc(p, d, g);
      return g === m && typeof g == "string" && (m = tc(p, d, `${n}${g === "default" ? "" : Ee(g)}`, g)), c === !1 ? m : {
        [c]: m
      };
    });
  }
  function t(n) {
    const {
      sx: r,
      theme: o = {}
    } = n || {};
    if (!r)
      return null;
    const i = o.unstable_sxConfig ?? Pa;
    function s(l) {
      let c = l;
      if (typeof l == "function")
        c = l(o);
      else if (typeof l != "object")
        return l;
      if (!c)
        return null;
      const u = KT(o.breakpoints), d = Object.keys(u);
      let f = u;
      return Object.keys(c).forEach((p) => {
        const h = AC(c[p], o);
        if (h != null)
          if (typeof h == "object")
            if (i[p])
              f = zs(f, e(p, h, o, i));
            else {
              const g = Zr({
                theme: o
              }, h, (m) => ({
                [p]: m
              }));
              MC(g, h) ? f[p] = t({
                sx: h,
                theme: o
              }) : f = zs(f, g);
            }
          else
            f = zs(f, e(p, h, o, i));
      }), WT(o, XT(d, f));
    }
    return Array.isArray(r) ? r.map(s) : s(r);
  }
  return t;
}
const vo = DC();
vo.filterProps = ["sx"];
const BC = (e) => {
  var r;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((r = e == null ? void 0 : e.theme) == null ? void 0 : r.unstable_sxConfig) ?? Pa;
  return Object.keys(e).forEach((o) => {
    n[o] ? t.systemProps[o] = e[o] : t.otherProps[o] = e[o];
  }), t;
};
function Y0(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: r,
    otherProps: o
  } = BC(n);
  let i;
  return Array.isArray(t) ? i = [r, ...t] : typeof t == "function" ? i = (...s) => {
    const l = t(...s);
    return Tr(l) ? {
      ...r,
      ...l
    } : r;
  } : i = {
    ...r,
    ...t
  }, {
    ...o,
    sx: i
  };
}
function nc() {
  return nc = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var r in n) ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
    }
    return e;
  }, nc.apply(null, arguments);
}
function FC(e) {
  if (e.sheet)
    return e.sheet;
  for (var t = 0; t < document.styleSheets.length; t++)
    if (document.styleSheets[t].ownerNode === e)
      return document.styleSheets[t];
}
function LC(e) {
  var t = document.createElement("style");
  return t.setAttribute("data-emotion", e.key), e.nonce !== void 0 && t.setAttribute("nonce", e.nonce), t.appendChild(document.createTextNode("")), t.setAttribute("data-s", ""), t;
}
var zC = /* @__PURE__ */ function() {
  function e(n) {
    var r = this;
    this._insertTag = function(o) {
      var i;
      r.tags.length === 0 ? r.insertionPoint ? i = r.insertionPoint.nextSibling : r.prepend ? i = r.container.firstChild : i = r.before : i = r.tags[r.tags.length - 1].nextSibling, r.container.insertBefore(o, i), r.tags.push(o);
    }, this.isSpeedy = n.speedy === void 0 ? !0 : n.speedy, this.tags = [], this.ctr = 0, this.nonce = n.nonce, this.key = n.key, this.container = n.container, this.prepend = n.prepend, this.insertionPoint = n.insertionPoint, this.before = null;
  }
  var t = e.prototype;
  return t.hydrate = function(r) {
    r.forEach(this._insertTag);
  }, t.insert = function(r) {
    this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(LC(this));
    var o = this.tags[this.tags.length - 1];
    if (this.isSpeedy) {
      var i = FC(o);
      try {
        i.insertRule(r, i.cssRules.length);
      } catch {
      }
    } else
      o.appendChild(document.createTextNode(r));
    this.ctr++;
  }, t.flush = function() {
    this.tags.forEach(function(r) {
      var o;
      return (o = r.parentNode) == null ? void 0 : o.removeChild(r);
    }), this.tags = [], this.ctr = 0;
  }, e;
}(), ln = "-ms-", rc = "-moz-", tt = "-webkit-", G0 = "comm", Cp = "rule", Op = "decl", VC = "@import", K0 = "@keyframes", jC = "@layer", HC = Math.abs, Qc = String.fromCharCode, WC = Object.assign;
function UC(e, t) {
  return nn(e, 0) ^ 45 ? (((t << 2 ^ nn(e, 0)) << 2 ^ nn(e, 1)) << 2 ^ nn(e, 2)) << 2 ^ nn(e, 3) : 0;
}
function X0(e) {
  return e.trim();
}
function qC(e, t) {
  return (e = t.exec(e)) ? e[0] : e;
}
function nt(e, t, n) {
  return e.replace(t, n);
}
function ff(e, t) {
  return e.indexOf(t);
}
function nn(e, t) {
  return e.charCodeAt(t) | 0;
}
function ea(e, t, n) {
  return e.slice(t, n);
}
function wr(e) {
  return e.length;
}
function Rp(e) {
  return e.length;
}
function al(e, t) {
  return t.push(e), e;
}
function YC(e, t) {
  return e.map(t).join("");
}
var Jc = 1, _i = 1, Z0 = 0, Nn = 0, Gt = 0, Ji = "";
function eu(e, t, n, r, o, i, s) {
  return { value: e, root: t, parent: n, type: r, props: o, children: i, line: Jc, column: _i, length: s, return: "" };
}
function hs(e, t) {
  return WC(eu("", null, null, "", null, null, 0), e, { length: -e.length }, t);
}
function GC() {
  return Gt;
}
function KC() {
  return Gt = Nn > 0 ? nn(Ji, --Nn) : 0, _i--, Gt === 10 && (_i = 1, Jc--), Gt;
}
function Vn() {
  return Gt = Nn < Z0 ? nn(Ji, Nn++) : 0, _i++, Gt === 10 && (_i = 1, Jc++), Gt;
}
function kr() {
  return nn(Ji, Nn);
}
function Ll() {
  return Nn;
}
function _a(e, t) {
  return ea(Ji, e, t);
}
function ta(e) {
  switch (e) {
    // \0 \t \n \r \s whitespace token
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    // ! + , / > @ ~ isolate token
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    // ; { } breakpoint token
    case 59:
    case 123:
    case 125:
      return 4;
    // : accompanied token
    case 58:
      return 3;
    // " ' ( [ opening delimit token
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    // ) ] closing delimit token
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function Q0(e) {
  return Jc = _i = 1, Z0 = wr(Ji = e), Nn = 0, [];
}
function J0(e) {
  return Ji = "", e;
}
function zl(e) {
  return X0(_a(Nn - 1, pf(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function XC(e) {
  for (; (Gt = kr()) && Gt < 33; )
    Vn();
  return ta(e) > 2 || ta(Gt) > 3 ? "" : " ";
}
function ZC(e, t) {
  for (; --t && Vn() && !(Gt < 48 || Gt > 102 || Gt > 57 && Gt < 65 || Gt > 70 && Gt < 97); )
    ;
  return _a(e, Ll() + (t < 6 && kr() == 32 && Vn() == 32));
}
function pf(e) {
  for (; Vn(); )
    switch (Gt) {
      // ] ) " '
      case e:
        return Nn;
      // " '
      case 34:
      case 39:
        e !== 34 && e !== 39 && pf(Gt);
        break;
      // (
      case 40:
        e === 41 && pf(e);
        break;
      // \
      case 92:
        Vn();
        break;
    }
  return Nn;
}
function QC(e, t) {
  for (; Vn() && e + Gt !== 57; )
    if (e + Gt === 84 && kr() === 47)
      break;
  return "/*" + _a(t, Nn - 1) + "*" + Qc(e === 47 ? e : Vn());
}
function JC(e) {
  for (; !ta(kr()); )
    Vn();
  return _a(e, Nn);
}
function eO(e) {
  return J0(Vl("", null, null, null, [""], e = Q0(e), 0, [0], e));
}
function Vl(e, t, n, r, o, i, s, l, c) {
  for (var u = 0, d = 0, f = s, p = 0, h = 0, g = 0, m = 1, b = 1, x = 1, E = 0, v = "", w = o, S = i, T = r, C = v; b; )
    switch (g = E, E = Vn()) {
      // (
      case 40:
        if (g != 108 && nn(C, f - 1) == 58) {
          ff(C += nt(zl(E), "&", "&\f"), "&\f") != -1 && (x = -1);
          break;
        }
      // " ' [
      case 34:
      case 39:
      case 91:
        C += zl(E);
        break;
      // \t \n \r \s
      case 9:
      case 10:
      case 13:
      case 32:
        C += XC(g);
        break;
      // \
      case 92:
        C += ZC(Ll() - 1, 7);
        continue;
      // /
      case 47:
        switch (kr()) {
          case 42:
          case 47:
            al(tO(QC(Vn(), Ll()), t, n), c);
            break;
          default:
            C += "/";
        }
        break;
      // {
      case 123 * m:
        l[u++] = wr(C) * x;
      // } ; \0
      case 125 * m:
      case 59:
      case 0:
        switch (E) {
          // \0 }
          case 0:
          case 125:
            b = 0;
          // ;
          case 59 + d:
            x == -1 && (C = nt(C, /\f/g, "")), h > 0 && wr(C) - f && al(h > 32 ? Am(C + ";", r, n, f - 1) : Am(nt(C, " ", "") + ";", r, n, f - 2), c);
            break;
          // @ ;
          case 59:
            C += ";";
          // { rule/at-rule
          default:
            if (al(T = Mm(C, t, n, u, d, o, l, v, w = [], S = [], f), i), E === 123)
              if (d === 0)
                Vl(C, t, T, T, w, i, f, l, S);
              else
                switch (p === 99 && nn(C, 3) === 110 ? 100 : p) {
                  // d l m s
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    Vl(e, T, T, r && al(Mm(e, T, T, 0, 0, o, l, v, o, w = [], f), S), o, S, f, l, r ? w : S);
                    break;
                  default:
                    Vl(C, T, T, T, [""], S, 0, l, S);
                }
        }
        u = d = h = 0, m = x = 1, v = C = "", f = s;
        break;
      // :
      case 58:
        f = 1 + wr(C), h = g;
      default:
        if (m < 1) {
          if (E == 123)
            --m;
          else if (E == 125 && m++ == 0 && KC() == 125)
            continue;
        }
        switch (C += Qc(E), E * m) {
          // &
          case 38:
            x = d > 0 ? 1 : (C += "\f", -1);
            break;
          // ,
          case 44:
            l[u++] = (wr(C) - 1) * x, x = 1;
            break;
          // @
          case 64:
            kr() === 45 && (C += zl(Vn())), p = kr(), d = f = wr(v = C += JC(Ll())), E++;
            break;
          // -
          case 45:
            g === 45 && wr(C) == 2 && (m = 0);
        }
    }
  return i;
}
function Mm(e, t, n, r, o, i, s, l, c, u, d) {
  for (var f = o - 1, p = o === 0 ? i : [""], h = Rp(p), g = 0, m = 0, b = 0; g < r; ++g)
    for (var x = 0, E = ea(e, f + 1, f = HC(m = s[g])), v = e; x < h; ++x)
      (v = X0(m > 0 ? p[x] + " " + E : nt(E, /&\f/g, p[x]))) && (c[b++] = v);
  return eu(e, t, n, o === 0 ? Cp : l, c, u, d);
}
function tO(e, t, n) {
  return eu(e, t, n, G0, Qc(GC()), ea(e, 2, -2), 0);
}
function Am(e, t, n, r) {
  return eu(e, t, n, Op, ea(e, 0, r), ea(e, r + 1, -1), r);
}
function Ri(e, t) {
  for (var n = "", r = Rp(e), o = 0; o < r; o++)
    n += t(e[o], o, e, t) || "";
  return n;
}
function nO(e, t, n, r) {
  switch (e.type) {
    case jC:
      if (e.children.length) break;
    case VC:
    case Op:
      return e.return = e.return || e.value;
    case G0:
      return "";
    case K0:
      return e.return = e.value + "{" + Ri(e.children, r) + "}";
    case Cp:
      e.value = e.props.join(",");
  }
  return wr(n = Ri(e.children, r)) ? e.return = e.value + "{" + n + "}" : "";
}
function rO(e) {
  var t = Rp(e);
  return function(n, r, o, i) {
    for (var s = "", l = 0; l < t; l++)
      s += e[l](n, r, o, i) || "";
    return s;
  };
}
function oO(e) {
  return function(t) {
    t.root || (t = t.return) && e(t);
  };
}
function ev(e) {
  var t = /* @__PURE__ */ Object.create(null);
  return function(n) {
    return t[n] === void 0 && (t[n] = e(n)), t[n];
  };
}
var iO = function(t, n, r) {
  for (var o = 0, i = 0; o = i, i = kr(), o === 38 && i === 12 && (n[r] = 1), !ta(i); )
    Vn();
  return _a(t, Nn);
}, sO = function(t, n) {
  var r = -1, o = 44;
  do
    switch (ta(o)) {
      case 0:
        o === 38 && kr() === 12 && (n[r] = 1), t[r] += iO(Nn - 1, n, r);
        break;
      case 2:
        t[r] += zl(o);
        break;
      case 4:
        if (o === 44) {
          t[++r] = kr() === 58 ? "&\f" : "", n[r] = t[r].length;
          break;
        }
      // fallthrough
      default:
        t[r] += Qc(o);
    }
  while (o = Vn());
  return t;
}, aO = function(t, n) {
  return J0(sO(Q0(t), n));
}, Dm = /* @__PURE__ */ new WeakMap(), lO = function(t) {
  if (!(t.type !== "rule" || !t.parent || // positive .length indicates that this rule contains pseudo
  // negative .length indicates that this rule has been already prefixed
  t.length < 1)) {
    for (var n = t.value, r = t.parent, o = t.column === r.column && t.line === r.line; r.type !== "rule"; )
      if (r = r.parent, !r) return;
    if (!(t.props.length === 1 && n.charCodeAt(0) !== 58 && !Dm.get(r)) && !o) {
      Dm.set(t, !0);
      for (var i = [], s = aO(n, i), l = r.props, c = 0, u = 0; c < s.length; c++)
        for (var d = 0; d < l.length; d++, u++)
          t.props[u] = i[c] ? s[c].replace(/&\f/g, l[d]) : l[d] + " " + s[c];
    }
  }
}, cO = function(t) {
  if (t.type === "decl") {
    var n = t.value;
    // charcode for l
    n.charCodeAt(0) === 108 && // charcode for b
    n.charCodeAt(2) === 98 && (t.return = "", t.value = "");
  }
};
function tv(e, t) {
  switch (UC(e, t)) {
    // color-adjust
    case 5103:
      return tt + "print-" + e + e;
    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return tt + e + e;
    // appearance, user-select, transform, hyphens, text-size-adjust
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return tt + e + rc + e + ln + e + e;
    // flex, flex-direction
    case 6828:
    case 4268:
      return tt + e + ln + e + e;
    // order
    case 6165:
      return tt + e + ln + "flex-" + e + e;
    // align-items
    case 5187:
      return tt + e + nt(e, /(\w+).+(:[^]+)/, tt + "box-$1$2" + ln + "flex-$1$2") + e;
    // align-self
    case 5443:
      return tt + e + ln + "flex-item-" + nt(e, /flex-|-self/, "") + e;
    // align-content
    case 4675:
      return tt + e + ln + "flex-line-pack" + nt(e, /align-content|flex-|-self/, "") + e;
    // flex-shrink
    case 5548:
      return tt + e + ln + nt(e, "shrink", "negative") + e;
    // flex-basis
    case 5292:
      return tt + e + ln + nt(e, "basis", "preferred-size") + e;
    // flex-grow
    case 6060:
      return tt + "box-" + nt(e, "-grow", "") + tt + e + ln + nt(e, "grow", "positive") + e;
    // transition
    case 4554:
      return tt + nt(e, /([^-])(transform)/g, "$1" + tt + "$2") + e;
    // cursor
    case 6187:
      return nt(nt(nt(e, /(zoom-|grab)/, tt + "$1"), /(image-set)/, tt + "$1"), e, "") + e;
    // background, background-image
    case 5495:
    case 3959:
      return nt(e, /(image-set\([^]*)/, tt + "$1$`$1");
    // justify-content
    case 4968:
      return nt(nt(e, /(.+:)(flex-)?(.*)/, tt + "box-pack:$3" + ln + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + tt + e + e;
    // (margin|padding)-inline-(start|end)
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return nt(e, /(.+)-inline(.+)/, tt + "$1$2") + e;
    // (min|max)?(width|height|inline-size|block-size)
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (wr(e) - 1 - t > 6) switch (nn(e, t + 1)) {
        // (m)ax-content, (m)in-content
        case 109:
          if (nn(e, t + 4) !== 45) break;
        // (f)ill-available, (f)it-content
        case 102:
          return nt(e, /(.+:)(.+)-([^]+)/, "$1" + tt + "$2-$3$1" + rc + (nn(e, t + 3) == 108 ? "$3" : "$2-$3")) + e;
        // (s)tretch
        case 115:
          return ~ff(e, "stretch") ? tv(nt(e, "stretch", "fill-available"), t) + e : e;
      }
      break;
    // position: sticky
    case 4949:
      if (nn(e, t + 1) !== 115) break;
    // display: (flex|inline-flex)
    case 6444:
      switch (nn(e, wr(e) - 3 - (~ff(e, "!important") && 10))) {
        // stic(k)y
        case 107:
          return nt(e, ":", ":" + tt) + e;
        // (inline-)?fl(e)x
        case 101:
          return nt(e, /(.+:)([^;!]+)(;|!.+)?/, "$1" + tt + (nn(e, 14) === 45 ? "inline-" : "") + "box$3$1" + tt + "$2$3$1" + ln + "$2box$3") + e;
      }
      break;
    // writing-mode
    case 5936:
      switch (nn(e, t + 11)) {
        // vertical-l(r)
        case 114:
          return tt + e + ln + nt(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
        // vertical-r(l)
        case 108:
          return tt + e + ln + nt(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
        // horizontal(-)tb
        case 45:
          return tt + e + ln + nt(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
      }
      return tt + e + ln + e + e;
  }
  return e;
}
var uO = function(t, n, r, o) {
  if (t.length > -1 && !t.return) switch (t.type) {
    case Op:
      t.return = tv(t.value, t.length);
      break;
    case K0:
      return Ri([hs(t, {
        value: nt(t.value, "@", "@" + tt)
      })], o);
    case Cp:
      if (t.length) return YC(t.props, function(i) {
        switch (qC(i, /(::plac\w+|:read-\w+)/)) {
          // :read-(only|write)
          case ":read-only":
          case ":read-write":
            return Ri([hs(t, {
              props: [nt(i, /:(read-\w+)/, ":" + rc + "$1")]
            })], o);
          // :placeholder
          case "::placeholder":
            return Ri([hs(t, {
              props: [nt(i, /:(plac\w+)/, ":" + tt + "input-$1")]
            }), hs(t, {
              props: [nt(i, /:(plac\w+)/, ":" + rc + "$1")]
            }), hs(t, {
              props: [nt(i, /:(plac\w+)/, ln + "input-$1")]
            })], o);
        }
        return "";
      });
  }
}, dO = [uO], fO = function(t) {
  var n = t.key;
  if (n === "css") {
    var r = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(r, function(m) {
      var b = m.getAttribute("data-emotion");
      b.indexOf(" ") !== -1 && (document.head.appendChild(m), m.setAttribute("data-s", ""));
    });
  }
  var o = t.stylisPlugins || dO, i = {}, s, l = [];
  s = t.container || document.head, Array.prototype.forEach.call(
    // this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll('style[data-emotion^="' + n + ' "]'),
    function(m) {
      for (var b = m.getAttribute("data-emotion").split(" "), x = 1; x < b.length; x++)
        i[b[x]] = !0;
      l.push(m);
    }
  );
  var c, u = [lO, cO];
  {
    var d, f = [nO, oO(function(m) {
      d.insert(m);
    })], p = rO(u.concat(o, f)), h = function(b) {
      return Ri(eO(b), p);
    };
    c = function(b, x, E, v) {
      d = E, h(b ? b + "{" + x.styles + "}" : x.styles), v && (g.inserted[x.name] = !0);
    };
  }
  var g = {
    key: n,
    sheet: new zC({
      key: n,
      container: s,
      nonce: t.nonce,
      speedy: t.speedy,
      prepend: t.prepend,
      insertionPoint: t.insertionPoint
    }),
    nonce: t.nonce,
    inserted: i,
    registered: {},
    insert: c
  };
  return g.sheet.hydrate(l), g;
}, ll = { exports: {} }, at = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Bm;
function pO() {
  if (Bm) return at;
  Bm = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, i = e ? Symbol.for("react.profiler") : 60114, s = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, h = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, b = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
  function v(S) {
    if (typeof S == "object" && S !== null) {
      var T = S.$$typeof;
      switch (T) {
        case t:
          switch (S = S.type, S) {
            case c:
            case u:
            case r:
            case i:
            case o:
            case f:
              return S;
            default:
              switch (S = S && S.$$typeof, S) {
                case l:
                case d:
                case g:
                case h:
                case s:
                  return S;
                default:
                  return T;
              }
          }
        case n:
          return T;
      }
    }
  }
  function w(S) {
    return v(S) === u;
  }
  return at.AsyncMode = c, at.ConcurrentMode = u, at.ContextConsumer = l, at.ContextProvider = s, at.Element = t, at.ForwardRef = d, at.Fragment = r, at.Lazy = g, at.Memo = h, at.Portal = n, at.Profiler = i, at.StrictMode = o, at.Suspense = f, at.isAsyncMode = function(S) {
    return w(S) || v(S) === c;
  }, at.isConcurrentMode = w, at.isContextConsumer = function(S) {
    return v(S) === l;
  }, at.isContextProvider = function(S) {
    return v(S) === s;
  }, at.isElement = function(S) {
    return typeof S == "object" && S !== null && S.$$typeof === t;
  }, at.isForwardRef = function(S) {
    return v(S) === d;
  }, at.isFragment = function(S) {
    return v(S) === r;
  }, at.isLazy = function(S) {
    return v(S) === g;
  }, at.isMemo = function(S) {
    return v(S) === h;
  }, at.isPortal = function(S) {
    return v(S) === n;
  }, at.isProfiler = function(S) {
    return v(S) === i;
  }, at.isStrictMode = function(S) {
    return v(S) === o;
  }, at.isSuspense = function(S) {
    return v(S) === f;
  }, at.isValidElementType = function(S) {
    return typeof S == "string" || typeof S == "function" || S === r || S === u || S === i || S === o || S === f || S === p || typeof S == "object" && S !== null && (S.$$typeof === g || S.$$typeof === h || S.$$typeof === s || S.$$typeof === l || S.$$typeof === d || S.$$typeof === b || S.$$typeof === x || S.$$typeof === E || S.$$typeof === m);
  }, at.typeOf = v, at;
}
var lt = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Fm;
function hO() {
  return Fm || (Fm = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, i = e ? Symbol.for("react.profiler") : 60114, s = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, f = e ? Symbol.for("react.suspense") : 60113, p = e ? Symbol.for("react.suspense_list") : 60120, h = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, b = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
    function v(j) {
      return typeof j == "string" || typeof j == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      j === r || j === u || j === i || j === o || j === f || j === p || typeof j == "object" && j !== null && (j.$$typeof === g || j.$$typeof === h || j.$$typeof === s || j.$$typeof === l || j.$$typeof === d || j.$$typeof === b || j.$$typeof === x || j.$$typeof === E || j.$$typeof === m);
    }
    function w(j) {
      if (typeof j == "object" && j !== null) {
        var pe = j.$$typeof;
        switch (pe) {
          case t:
            var ce = j.type;
            switch (ce) {
              case c:
              case u:
              case r:
              case i:
              case o:
              case f:
                return ce;
              default:
                var be = ce && ce.$$typeof;
                switch (be) {
                  case l:
                  case d:
                  case g:
                  case h:
                  case s:
                    return be;
                  default:
                    return pe;
                }
            }
          case n:
            return pe;
        }
      }
    }
    var S = c, T = u, C = l, k = s, P = t, y = d, R = r, $ = g, A = h, O = n, _ = i, I = o, D = f, z = !1;
    function B(j) {
      return z || (z = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), F(j) || w(j) === c;
    }
    function F(j) {
      return w(j) === u;
    }
    function L(j) {
      return w(j) === l;
    }
    function W(j) {
      return w(j) === s;
    }
    function U(j) {
      return typeof j == "object" && j !== null && j.$$typeof === t;
    }
    function Z(j) {
      return w(j) === d;
    }
    function Q(j) {
      return w(j) === r;
    }
    function ee(j) {
      return w(j) === g;
    }
    function te(j) {
      return w(j) === h;
    }
    function q(j) {
      return w(j) === n;
    }
    function oe(j) {
      return w(j) === i;
    }
    function K(j) {
      return w(j) === o;
    }
    function ne(j) {
      return w(j) === f;
    }
    lt.AsyncMode = S, lt.ConcurrentMode = T, lt.ContextConsumer = C, lt.ContextProvider = k, lt.Element = P, lt.ForwardRef = y, lt.Fragment = R, lt.Lazy = $, lt.Memo = A, lt.Portal = O, lt.Profiler = _, lt.StrictMode = I, lt.Suspense = D, lt.isAsyncMode = B, lt.isConcurrentMode = F, lt.isContextConsumer = L, lt.isContextProvider = W, lt.isElement = U, lt.isForwardRef = Z, lt.isFragment = Q, lt.isLazy = ee, lt.isMemo = te, lt.isPortal = q, lt.isProfiler = oe, lt.isStrictMode = K, lt.isSuspense = ne, lt.isValidElementType = v, lt.typeOf = w;
  }()), lt;
}
var Lm;
function mO() {
  return Lm || (Lm = 1, process.env.NODE_ENV === "production" ? ll.exports = pO() : ll.exports = hO()), ll.exports;
}
var fd, zm;
function gO() {
  if (zm) return fd;
  zm = 1;
  var e = mO(), t = {
    childContextTypes: !0,
    contextType: !0,
    contextTypes: !0,
    defaultProps: !0,
    displayName: !0,
    getDefaultProps: !0,
    getDerivedStateFromError: !0,
    getDerivedStateFromProps: !0,
    mixins: !0,
    propTypes: !0,
    type: !0
  }, n = {
    name: !0,
    length: !0,
    prototype: !0,
    caller: !0,
    callee: !0,
    arguments: !0,
    arity: !0
  }, r = {
    $$typeof: !0,
    render: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0
  }, o = {
    $$typeof: !0,
    compare: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0,
    type: !0
  }, i = {};
  i[e.ForwardRef] = r, i[e.Memo] = o;
  function s(g) {
    return e.isMemo(g) ? o : i[g.$$typeof] || t;
  }
  var l = Object.defineProperty, c = Object.getOwnPropertyNames, u = Object.getOwnPropertySymbols, d = Object.getOwnPropertyDescriptor, f = Object.getPrototypeOf, p = Object.prototype;
  function h(g, m, b) {
    if (typeof m != "string") {
      if (p) {
        var x = f(m);
        x && x !== p && h(g, x, b);
      }
      var E = c(m);
      u && (E = E.concat(u(m)));
      for (var v = s(g), w = s(m), S = 0; S < E.length; ++S) {
        var T = E[S];
        if (!n[T] && !(b && b[T]) && !(w && w[T]) && !(v && v[T])) {
          var C = d(m, T);
          try {
            l(g, T, C);
          } catch {
          }
        }
      }
    }
    return g;
  }
  return fd = h, fd;
}
gO();
var yO = !0;
function nv(e, t, n) {
  var r = "";
  return n.split(" ").forEach(function(o) {
    e[o] !== void 0 ? t.push(e[o] + ";") : o && (r += o + " ");
  }), r;
}
var kp = function(t, n, r) {
  var o = t.key + "-" + n.name;
  // we only need to add the styles to the registered cache if the
  // class name could be used further down
  // the tree but if it's a string tag, we know it won't
  // so we don't have to add it to registered cache.
  // this improves memory usage since we can avoid storing the whole style string
  (r === !1 || // we need to always store it if we're in compat mode and
  // in node since emotion-server relies on whether a style is in
  // the registered cache to know whether a style is global or not
  // also, note that this check will be dead code eliminated in the browser
  yO === !1) && t.registered[o] === void 0 && (t.registered[o] = n.styles);
}, Np = function(t, n, r) {
  kp(t, n, r);
  var o = t.key + "-" + n.name;
  if (t.inserted[n.name] === void 0) {
    var i = n;
    do
      t.insert(n === i ? "." + o : "", i, t.sheet, !0), i = i.next;
    while (i !== void 0);
  }
};
function bO(e) {
  for (var t = 0, n, r = 0, o = e.length; o >= 4; ++r, o -= 4)
    n = e.charCodeAt(r) & 255 | (e.charCodeAt(++r) & 255) << 8 | (e.charCodeAt(++r) & 255) << 16 | (e.charCodeAt(++r) & 255) << 24, n = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16), n ^= /* k >>> r: */
    n >>> 24, t = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  switch (o) {
    case 3:
      t ^= (e.charCodeAt(r + 2) & 255) << 16;
    case 2:
      t ^= (e.charCodeAt(r + 1) & 255) << 8;
    case 1:
      t ^= e.charCodeAt(r) & 255, t = /* Math.imul(h, m): */
      (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  }
  return t ^= t >>> 13, t = /* Math.imul(h, m): */
  (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16), ((t ^ t >>> 15) >>> 0).toString(36);
}
var vO = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  scale: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, xO = /[A-Z]|^ms/g, wO = /_EMO_([^_]+?)_([^]*?)_EMO_/g, rv = function(t) {
  return t.charCodeAt(1) === 45;
}, Vm = function(t) {
  return t != null && typeof t != "boolean";
}, pd = /* @__PURE__ */ ev(function(e) {
  return rv(e) ? e : e.replace(xO, "-$&").toLowerCase();
}), jm = function(t, n) {
  switch (t) {
    case "animation":
    case "animationName":
      if (typeof n == "string")
        return n.replace(wO, function(r, o, i) {
          return Sr = {
            name: o,
            styles: i,
            next: Sr
          }, o;
        });
  }
  return vO[t] !== 1 && !rv(t) && typeof n == "number" && n !== 0 ? n + "px" : n;
};
function na(e, t, n) {
  if (n == null)
    return "";
  var r = n;
  if (r.__emotion_styles !== void 0)
    return r;
  switch (typeof n) {
    case "boolean":
      return "";
    case "object": {
      var o = n;
      if (o.anim === 1)
        return Sr = {
          name: o.name,
          styles: o.styles,
          next: Sr
        }, o.name;
      var i = n;
      if (i.styles !== void 0) {
        var s = i.next;
        if (s !== void 0)
          for (; s !== void 0; )
            Sr = {
              name: s.name,
              styles: s.styles,
              next: Sr
            }, s = s.next;
        var l = i.styles + ";";
        return l;
      }
      return SO(e, t, n);
    }
    case "function": {
      if (e !== void 0) {
        var c = Sr, u = n(e);
        return Sr = c, na(e, t, u);
      }
      break;
    }
  }
  var d = n;
  if (t == null)
    return d;
  var f = t[d];
  return f !== void 0 ? f : d;
}
function SO(e, t, n) {
  var r = "";
  if (Array.isArray(n))
    for (var o = 0; o < n.length; o++)
      r += na(e, t, n[o]) + ";";
  else
    for (var i in n) {
      var s = n[i];
      if (typeof s != "object") {
        var l = s;
        t != null && t[l] !== void 0 ? r += i + "{" + t[l] + "}" : Vm(l) && (r += pd(i) + ":" + jm(i, l) + ";");
      } else if (Array.isArray(s) && typeof s[0] == "string" && (t == null || t[s[0]] === void 0))
        for (var c = 0; c < s.length; c++)
          Vm(s[c]) && (r += pd(i) + ":" + jm(i, s[c]) + ";");
      else {
        var u = na(e, t, s);
        switch (i) {
          case "animation":
          case "animationName": {
            r += pd(i) + ":" + u + ";";
            break;
          }
          default:
            r += i + "{" + u + "}";
        }
      }
    }
  return r;
}
var Hm = /label:\s*([^\s;{]+)\s*(;|$)/g, Sr;
function es(e, t, n) {
  if (e.length === 1 && typeof e[0] == "object" && e[0] !== null && e[0].styles !== void 0)
    return e[0];
  var r = !0, o = "";
  Sr = void 0;
  var i = e[0];
  if (i == null || i.raw === void 0)
    r = !1, o += na(n, t, i);
  else {
    var s = i;
    o += s[0];
  }
  for (var l = 1; l < e.length; l++)
    if (o += na(n, t, e[l]), r) {
      var c = i;
      o += c[l];
    }
  Hm.lastIndex = 0;
  for (var u = "", d; (d = Hm.exec(o)) !== null; )
    u += "-" + d[1];
  var f = bO(o) + u;
  return {
    name: f,
    styles: o,
    next: Sr
  };
}
var EO = function(t) {
  return t();
}, ov = M.useInsertionEffect ? M.useInsertionEffect : !1, iv = ov || EO, Wm = ov || M.useLayoutEffect, sv = /* @__PURE__ */ M.createContext(
  // we're doing this to avoid preconstruct's dead code elimination in this one case
  // because this module is primarily intended for the browser and node
  // but it's also required in react native and similar environments sometimes
  // and we could have a special build just for that
  // but this is much easier and the native packages
  // might use a different theme context in the future anyway
  typeof HTMLElement < "u" ? /* @__PURE__ */ fO({
    key: "css"
  }) : null
);
sv.Provider;
var Ip = function(t) {
  return /* @__PURE__ */ Na(function(n, r) {
    var o = Qi(sv);
    return t(n, o, r);
  });
}, ts = /* @__PURE__ */ M.createContext({}), $p = {}.hasOwnProperty, hf = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__", TO = function(t, n) {
  var r = {};
  for (var o in n)
    $p.call(n, o) && (r[o] = n[o]);
  return r[hf] = t, r;
}, CO = function(t) {
  var n = t.cache, r = t.serialized, o = t.isStringTag;
  return kp(n, r, o), iv(function() {
    return Np(n, r, o);
  }), null;
}, OO = /* @__PURE__ */ Ip(function(e, t, n) {
  var r = e.css;
  typeof r == "string" && t.registered[r] !== void 0 && (r = t.registered[r]);
  var o = e[hf], i = [r], s = "";
  typeof e.className == "string" ? s = nv(t.registered, i, e.className) : e.className != null && (s = e.className + " ");
  var l = es(i, void 0, M.useContext(ts));
  s += t.key + "-" + l.name;
  var c = {};
  for (var u in e)
    $p.call(e, u) && u !== "css" && u !== hf && (c[u] = e[u]);
  return c.className = s, n && (c.ref = n), /* @__PURE__ */ M.createElement(M.Fragment, null, /* @__PURE__ */ M.createElement(CO, {
    cache: t,
    serialized: l,
    isStringTag: typeof o == "string"
  }), /* @__PURE__ */ M.createElement(o, c));
}), RO = OO, Um = function(t, n) {
  var r = arguments;
  if (n == null || !$p.call(n, "css"))
    return M.createElement.apply(void 0, r);
  var o = r.length, i = new Array(o);
  i[0] = RO, i[1] = TO(t, n);
  for (var s = 2; s < o; s++)
    i[s] = r[s];
  return M.createElement.apply(null, i);
};
(function(e) {
  var t;
  t || (t = e.JSX || (e.JSX = {}));
})(Um || (Um = {}));
var av = /* @__PURE__ */ Ip(function(e, t) {
  var n = e.styles, r = es([n], void 0, M.useContext(ts)), o = M.useRef();
  return Wm(function() {
    var i = t.key + "-global", s = new t.sheet.constructor({
      key: i,
      nonce: t.sheet.nonce,
      container: t.sheet.container,
      speedy: t.sheet.isSpeedy
    }), l = !1, c = document.querySelector('style[data-emotion="' + i + " " + r.name + '"]');
    return t.sheet.tags.length && (s.before = t.sheet.tags[0]), c !== null && (l = !0, c.setAttribute("data-emotion", i), s.hydrate([c])), o.current = [s, l], function() {
      s.flush();
    };
  }, [t]), Wm(function() {
    var i = o.current, s = i[0], l = i[1];
    if (l) {
      i[1] = !1;
      return;
    }
    if (r.next !== void 0 && Np(t, r.next, !0), s.tags.length) {
      var c = s.tags[s.tags.length - 1].nextElementSibling;
      s.before = c, s.flush();
    }
    t.insert("", r, s, !1);
  }, [t, r.name]), null;
});
function ns() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return es(t);
}
function Oo() {
  var e = ns.apply(void 0, arguments), t = "animation-" + e.name;
  return {
    name: t,
    styles: "@keyframes " + t + "{" + e.styles + "}",
    anim: 1,
    toString: function() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
}
var kO = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, NO = /* @__PURE__ */ ev(
  function(e) {
    return kO.test(e) || e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && e.charCodeAt(2) < 91;
  }
  /* Z+1 */
), IO = NO, $O = function(t) {
  return t !== "theme";
}, qm = function(t) {
  return typeof t == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  t.charCodeAt(0) > 96 ? IO : $O;
}, Ym = function(t, n, r) {
  var o;
  if (n) {
    var i = n.shouldForwardProp;
    o = t.__emotion_forwardProp && i ? function(s) {
      return t.__emotion_forwardProp(s) && i(s);
    } : i;
  }
  return typeof o != "function" && r && (o = t.__emotion_forwardProp), o;
}, PO = function(t) {
  var n = t.cache, r = t.serialized, o = t.isStringTag;
  return kp(n, r, o), iv(function() {
    return Np(n, r, o);
  }), null;
}, _O = function e(t, n) {
  var r = t.__emotion_real === t, o = r && t.__emotion_base || t, i, s;
  n !== void 0 && (i = n.label, s = n.target);
  var l = Ym(t, n, r), c = l || qm(o), u = !c("as");
  return function() {
    var d = arguments, f = r && t.__emotion_styles !== void 0 ? t.__emotion_styles.slice(0) : [];
    if (i !== void 0 && f.push("label:" + i + ";"), d[0] == null || d[0].raw === void 0)
      f.push.apply(f, d);
    else {
      var p = d[0];
      f.push(p[0]);
      for (var h = d.length, g = 1; g < h; g++)
        f.push(d[g], p[g]);
    }
    var m = Ip(function(b, x, E) {
      var v = u && b.as || o, w = "", S = [], T = b;
      if (b.theme == null) {
        T = {};
        for (var C in b)
          T[C] = b[C];
        T.theme = M.useContext(ts);
      }
      typeof b.className == "string" ? w = nv(x.registered, S, b.className) : b.className != null && (w = b.className + " ");
      var k = es(f.concat(S), x.registered, T);
      w += x.key + "-" + k.name, s !== void 0 && (w += " " + s);
      var P = u && l === void 0 ? qm(v) : c, y = {};
      for (var R in b)
        u && R === "as" || P(R) && (y[R] = b[R]);
      return y.className = w, E && (y.ref = E), /* @__PURE__ */ M.createElement(M.Fragment, null, /* @__PURE__ */ M.createElement(PO, {
        cache: x,
        serialized: k,
        isStringTag: typeof v == "string"
      }), /* @__PURE__ */ M.createElement(v, y));
    });
    return m.displayName = i !== void 0 ? i : "Styled(" + (typeof o == "string" ? o : o.displayName || o.name || "Component") + ")", m.defaultProps = t.defaultProps, m.__emotion_real = m, m.__emotion_base = o, m.__emotion_styles = f, m.__emotion_forwardProp = l, Object.defineProperty(m, "toString", {
      value: function() {
        return "." + s;
      }
    }), m.withComponent = function(b, x) {
      var E = e(b, nc({}, n, x, {
        shouldForwardProp: Ym(m, x, !0)
      }));
      return E.apply(void 0, f);
    }, m;
  };
}, MO = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], oc = _O.bind(null);
MO.forEach(function(e) {
  oc[e] = oc(e);
});
function AO(e) {
  return e == null || Object.keys(e).length === 0;
}
function Pp(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e;
  return /* @__PURE__ */ N(av, {
    styles: typeof t == "function" ? (o) => t(AO(o) ? n : o) : t
  });
}
process.env.NODE_ENV !== "production" && (Pp.propTypes = {
  defaultTheme: a.object,
  styles: a.oneOfType([a.array, a.string, a.object, a.func])
});
/**
 * @mui/styled-engine v7.0.1
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function lv(e, t) {
  const n = oc(e, t);
  return process.env.NODE_ENV !== "production" ? (...r) => {
    const o = typeof e == "string" ? `"${e}"` : "component";
    return r.length === 0 ? console.error([`MUI: Seems like you called \`styled(${o})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : r.some((i) => i === void 0) && console.error(`MUI: the styled(${o})(...args) API requires all its args to be defined.`), n(...r);
  } : n;
}
function DO(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const Gm = [];
function Km(e) {
  return Gm[0] = e, es(Gm);
}
const BO = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, r) => n.val - r.val), t.reduce((n, r) => ({
    ...n,
    [r.key]: r.val
  }), {});
};
function FO(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: r = 5,
    ...o
  } = e, i = BO(t), s = Object.keys(i);
  function l(p) {
    return `@media (min-width:${typeof t[p] == "number" ? t[p] : p}${n})`;
  }
  function c(p) {
    return `@media (max-width:${(typeof t[p] == "number" ? t[p] : p) - r / 100}${n})`;
  }
  function u(p, h) {
    const g = s.indexOf(h);
    return `@media (min-width:${typeof t[p] == "number" ? t[p] : p}${n}) and (max-width:${(g !== -1 && typeof t[s[g]] == "number" ? t[s[g]] : h) - r / 100}${n})`;
  }
  function d(p) {
    return s.indexOf(p) + 1 < s.length ? u(p, s[s.indexOf(p) + 1]) : l(p);
  }
  function f(p) {
    const h = s.indexOf(p);
    return h === 0 ? l(s[1]) : h === s.length - 1 ? c(s[h]) : u(p, s[s.indexOf(p) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: s,
    values: i,
    up: l,
    down: c,
    between: u,
    only: d,
    not: f,
    unit: n,
    ...o
  };
}
const LO = {
  borderRadius: 4
};
function cv(e = 8, t = Ep({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...r) => (process.env.NODE_ENV !== "production" && (r.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${r.length}`)), (r.length === 0 ? [1] : r).map((i) => {
    const s = t(i);
    return typeof s == "number" ? `${s}px` : s;
  }).join(" "));
  return n.mui = !0, n;
}
function zO(e, t) {
  var r;
  const n = this;
  if (n.vars) {
    if (!((r = n.colorSchemes) != null && r[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let o = n.getColorSchemeSelector(e);
    return o === "&" ? t : ((o.includes("data-") || o.includes(".")) && (o = `*:where(${o.replace(/\s*&$/, "")}) &`), {
      [o]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function tu(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: r = {},
    spacing: o,
    shape: i = {},
    ...s
  } = e, l = FO(n), c = cv(o);
  let u = zn({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...r
    },
    spacing: c,
    shape: {
      ...LO,
      ...i
    }
  }, s);
  return u = YT(u), u.applyStyles = zO, u = t.reduce((d, f) => zn(d, f), u), u.unstable_sxConfig = {
    ...Pa,
    ...s == null ? void 0 : s.unstable_sxConfig
  }, u.unstable_sx = function(f) {
    return vo({
      sx: f,
      theme: this
    });
  }, u;
}
function VO(e) {
  return Object.keys(e).length === 0;
}
function _p(e = null) {
  const t = M.useContext(ts);
  return !t || VO(t) ? e : t;
}
const jO = tu();
function nu(e = jO) {
  return _p(e);
}
function uv({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const r = nu(n), o = typeof e == "function" ? e(t && r[t] || r) : e;
  return /* @__PURE__ */ N(Pp, {
    styles: o
  });
}
process.env.NODE_ENV !== "production" && (uv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: a.object,
  /**
   * @ignore
   */
  styles: a.oneOfType([a.array, a.func, a.number, a.object, a.string, a.bool]),
  /**
   * @ignore
   */
  themeId: a.string
});
const Xm = (e) => e, HO = () => {
  let e = Xm;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = Xm;
    }
  };
}, dv = HO();
function WO(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: r = "MuiBox-root",
    generateClassName: o
  } = e, i = lv("div", {
    shouldForwardProp: (l) => l !== "theme" && l !== "sx" && l !== "as"
  })(vo);
  return /* @__PURE__ */ M.forwardRef(function(c, u) {
    const d = nu(n), {
      className: f,
      component: p = "div",
      ...h
    } = Y0(c);
    return /* @__PURE__ */ N(i, {
      as: p,
      ref: u,
      className: Oe(f, o ? o(r) : r),
      theme: t && d[t] || d,
      ...h
    });
  });
}
const UO = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function Et(e, t, n = "Mui") {
  const r = UO[t];
  return r ? `${n}-${r}` : `${dv.generate(e)}-${t}`;
}
function kt(e, t, n = "Mui") {
  const r = {};
  return t.forEach((o) => {
    r[o] = Et(e, o, n);
  }), r;
}
function fv(e, t = "") {
  return e.displayName || e.name || t;
}
function Zm(e, t, n) {
  const r = fv(t);
  return e.displayName || (r !== "" ? `${n}(${r})` : n);
}
function qO(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return fv(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case fr.ForwardRef:
          return Zm(e, e.render, "ForwardRef");
        case fr.Memo:
          return Zm(e, e.type, "memo");
        default:
          return;
      }
  }
}
function pv(e) {
  const {
    variants: t,
    ...n
  } = e, r = {
    variants: t,
    style: Km(n),
    isProcessed: !0
  };
  return r.style === n || t && t.forEach((o) => {
    typeof o.style != "function" && (o.style = Km(o.style));
  }), r;
}
const YO = tu();
function hd(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function GO(e) {
  return e ? (t, n) => n[e] : null;
}
function KO(e, t, n) {
  e.theme = QO(e.theme) ? n : e.theme[t] || e.theme;
}
function jl(e, t) {
  const n = typeof t == "function" ? t(e) : t;
  if (Array.isArray(n))
    return n.flatMap((r) => jl(e, r));
  if (Array.isArray(n == null ? void 0 : n.variants)) {
    let r;
    if (n.isProcessed)
      r = n.style;
    else {
      const {
        variants: o,
        ...i
      } = n;
      r = i;
    }
    return hv(e, n.variants, [r]);
  }
  return n != null && n.isProcessed ? n.style : n;
}
function hv(e, t, n = []) {
  var o;
  let r;
  e: for (let i = 0; i < t.length; i += 1) {
    const s = t[i];
    if (typeof s.props == "function") {
      if (r ?? (r = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !s.props(r))
        continue;
    } else
      for (const l in s.props)
        if (e[l] !== s.props[l] && ((o = e.ownerState) == null ? void 0 : o[l]) !== s.props[l])
          continue e;
    typeof s.style == "function" ? (r ?? (r = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(s.style(r))) : n.push(s.style);
  }
  return n;
}
function mv(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = YO,
    rootShouldForwardProp: r = hd,
    slotShouldForwardProp: o = hd
  } = e;
  function i(l) {
    KO(l, t, n);
  }
  return (l, c = {}) => {
    DO(l, (S) => S.filter((T) => T !== vo));
    const {
      name: u,
      slot: d,
      skipVariantsResolver: f,
      skipSx: p,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: h = GO(gv(d)),
      ...g
    } = c, m = f !== void 0 ? f : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      d && d !== "Root" && d !== "root" || !1
    ), b = p || !1;
    let x = hd;
    d === "Root" || d === "root" ? x = r : d ? x = o : JO(l) && (x = void 0);
    const E = lv(l, {
      shouldForwardProp: x,
      label: ZO(u, d),
      ...g
    }), v = (S) => {
      if (typeof S == "function" && S.__emotion_real !== S)
        return function(C) {
          return jl(C, S);
        };
      if (Tr(S)) {
        const T = pv(S);
        return T.variants ? function(k) {
          return jl(k, T);
        } : T.style;
      }
      return S;
    }, w = (...S) => {
      const T = [], C = S.map(v), k = [];
      if (T.push(i), u && h && k.push(function($) {
        var I, D;
        const O = (D = (I = $.theme.components) == null ? void 0 : I[u]) == null ? void 0 : D.styleOverrides;
        if (!O)
          return null;
        const _ = {};
        for (const z in O)
          _[z] = jl($, O[z]);
        return h($, _);
      }), u && !m && k.push(function($) {
        var _, I;
        const A = $.theme, O = (I = (_ = A == null ? void 0 : A.components) == null ? void 0 : _[u]) == null ? void 0 : I.variants;
        return O ? hv($, O) : null;
      }), b || k.push(vo), Array.isArray(C[0])) {
        const R = C.shift(), $ = new Array(T.length).fill(""), A = new Array(k.length).fill("");
        let O;
        O = [...$, ...R, ...A], O.raw = [...$, ...R.raw, ...A], T.unshift(O);
      }
      const P = [...T, ...C, ...k], y = E(...P);
      return l.muiName && (y.muiName = l.muiName), process.env.NODE_ENV !== "production" && (y.displayName = XO(u, d, l)), y;
    };
    return E.withConfig && (w.withConfig = E.withConfig), w;
  };
}
function XO(e, t, n) {
  return e ? `${e}${Ee(t || "")}` : `Styled(${qO(n)})`;
}
function ZO(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${gv(t || "Root")}`), n;
}
function QO(e) {
  for (const t in e)
    return !1;
  return !0;
}
function JO(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function gv(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
const eR = mv();
function ra(e, t) {
  const n = {
    ...t
  };
  for (const r in e)
    if (Object.prototype.hasOwnProperty.call(e, r)) {
      const o = r;
      if (o === "components" || o === "slots")
        n[o] = {
          ...e[o],
          ...n[o]
        };
      else if (o === "componentsProps" || o === "slotProps") {
        const i = e[o], s = t[o];
        if (!s)
          n[o] = i || {};
        else if (!i)
          n[o] = s;
        else {
          n[o] = {
            ...s
          };
          for (const l in i)
            if (Object.prototype.hasOwnProperty.call(i, l)) {
              const c = l;
              n[o][c] = ra(i[c], s[c]);
            }
        }
      } else n[o] === void 0 && (n[o] = e[o]);
    }
  return n;
}
function yv(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  return !t || !t.components || !t.components[n] || !t.components[n].defaultProps ? r : ra(t.components[n].defaultProps, r);
}
function tR({
  props: e,
  name: t,
  defaultTheme: n,
  themeId: r
}) {
  let o = nu(n);
  return r && (o = o[r] || o), yv({
    theme: o,
    name: t,
    props: e
  });
}
const Pr = typeof window < "u" ? M.useLayoutEffect : M.useEffect;
function nR(e, t, n, r, o) {
  const [i, s] = M.useState(() => o && n ? n(e).matches : r ? r(e).matches : t);
  return Pr(() => {
    if (!n)
      return;
    const l = n(e), c = () => {
      s(l.matches);
    };
    return c(), l.addEventListener("change", c), () => {
      l.removeEventListener("change", c);
    };
  }, [e, n]), i;
}
const rR = {
  ...M
}, bv = rR.useSyncExternalStore;
function oR(e, t, n, r, o) {
  const i = M.useCallback(() => t, [t]), s = M.useMemo(() => {
    if (o && n)
      return () => n(e).matches;
    if (r !== null) {
      const {
        matches: d
      } = r(e);
      return () => d;
    }
    return i;
  }, [i, e, r, o, n]), [l, c] = M.useMemo(() => {
    if (n === null)
      return [i, () => () => {
      }];
    const d = n(e);
    return [() => d.matches, (f) => (d.addEventListener("change", f), () => {
      d.removeEventListener("change", f);
    })];
  }, [i, n, e]);
  return bv(c, l, s);
}
function vv(e = {}) {
  const {
    themeId: t
  } = e;
  return function(r, o = {}) {
    let i = _p();
    i && t && (i = i[t] || i);
    const s = typeof window < "u" && typeof window.matchMedia < "u", {
      defaultMatches: l = !1,
      matchMedia: c = s ? window.matchMedia : null,
      ssrMatchMedia: u = null,
      noSsr: d = !1
    } = yv({
      name: "MuiUseMediaQuery",
      props: o,
      theme: i
    });
    process.env.NODE_ENV !== "production" && typeof r == "function" && i === null && console.error(["MUI: The `query` argument provided is invalid.", "You are providing a function without a theme in the context.", "One of the parent elements needs to use a ThemeProvider."].join(`
`));
    let f = typeof r == "function" ? r(i) : r;
    f = f.replace(/^@media( ?)/m, "");
    const h = (bv !== void 0 ? oR : nR)(f, l, c, u, d);
    return process.env.NODE_ENV !== "production" && M.useDebugValue({
      query: f,
      match: h
    }), h;
  };
}
vv();
function iR(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function Mp(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), iR(e, t, n);
}
function sR(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((r) => r + r)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((r, o) => o < 3 ? parseInt(r, 16) : Math.round(parseInt(r, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function xo(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return xo(sR(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : Xr(9, e));
  let r = e.substring(t + 1, e.length - 1), o;
  if (n === "color") {
    if (r = r.split(" "), o = r.shift(), r.length === 4 && r[3].charAt(0) === "/" && (r[3] = r[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(o))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${o}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : Xr(10, o));
  } else
    r = r.split(",");
  return r = r.map((i) => parseFloat(i)), {
    type: n,
    values: r,
    colorSpace: o
  };
}
const aR = (e) => {
  const t = xo(e);
  return t.values.slice(0, 3).map((n, r) => t.type.includes("hsl") && r !== 0 ? `${n}%` : n).join(" ");
}, Is = (e, t) => {
  try {
    return aR(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function ru(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: r
  } = e;
  return t.includes("rgb") ? r = r.map((o, i) => i < 3 ? parseInt(o, 10) : o) : t.includes("hsl") && (r[1] = `${r[1]}%`, r[2] = `${r[2]}%`), t.includes("color") ? r = `${n} ${r.join(" ")}` : r = `${r.join(", ")}`, `${t}(${r})`;
}
function xv(e) {
  e = xo(e);
  const {
    values: t
  } = e, n = t[0], r = t[1] / 100, o = t[2] / 100, i = r * Math.min(o, 1 - o), s = (u, d = (u + n / 30) % 12) => o - i * Math.max(Math.min(d - 3, 9 - d, 1), -1);
  let l = "rgb";
  const c = [Math.round(s(0) * 255), Math.round(s(8) * 255), Math.round(s(4) * 255)];
  return e.type === "hsla" && (l += "a", c.push(t[3])), ru({
    type: l,
    values: c
  });
}
function mf(e) {
  e = xo(e);
  let t = e.type === "hsl" || e.type === "hsla" ? xo(xv(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function Qm(e, t) {
  const n = mf(e), r = mf(t);
  return (Math.max(n, r) + 0.05) / (Math.min(n, r) + 0.05);
}
function rn(e, t) {
  return e = xo(e), t = Mp(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, ru(e);
}
function cl(e, t, n) {
  try {
    return rn(e, t);
  } catch {
    return e;
  }
}
function rs(e, t) {
  if (e = xo(e), t = Mp(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return ru(e);
}
function mt(e, t, n) {
  try {
    return rs(e, t);
  } catch {
    return e;
  }
}
function os(e, t) {
  if (e = xo(e), t = Mp(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return ru(e);
}
function gt(e, t, n) {
  try {
    return os(e, t);
  } catch {
    return e;
  }
}
function lR(e, t = 0.15) {
  return mf(e) > 0.5 ? rs(e, t) : os(e, t);
}
function ul(e, t, n) {
  try {
    return lR(e, t);
  } catch {
    return e;
  }
}
function Ro(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...r) {
    return e(...r) || t(...r);
  };
}
function cR(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function wv(e, t, n, r, o) {
  const i = e[t], s = o || t;
  if (i == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  const c = i.type;
  return typeof c == "function" && !cR(c) && (l = "Did you accidentally use a plain function component for an element instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${s}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const ko = Ro(a.element, wv);
ko.isRequired = Ro(a.element.isRequired, wv);
function uR(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function dR(e, t, n, r, o) {
  const i = e[t], s = o || t;
  if (i == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  return typeof i == "function" && !uR(i) && (l = "Did you accidentally provide a plain function component instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${s}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Ap = Ro(a.elementType, dR), fR = "exact-prop: ​";
function Ma(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [fR]: (t) => {
      const n = Object.keys(t).filter((r) => !e.hasOwnProperty(r));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((r) => `\`${r}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
function Qr(e, t, n, r, o) {
  if (process.env.NODE_ENV === "production")
    return null;
  const i = e[t], s = o || t;
  return i == null ? null : i && i.nodeType !== 1 ? new Error(`Invalid ${r} \`${s}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
const oo = a.oneOfType([a.func, a.object]);
function gf(...e) {
  return e.reduce((t, n) => n == null ? t : function(...o) {
    t.apply(this, o), n.apply(this, o);
  }, () => {
  });
}
function Dp(e, t = 166) {
  let n;
  function r(...o) {
    const i = () => {
      e.apply(this, o);
    };
    clearTimeout(n), n = setTimeout(i, t);
  }
  return r.clear = () => {
    clearTimeout(n);
  }, r;
}
function On(e) {
  return e && e.ownerDocument || document;
}
function _r(e) {
  return On(e).defaultView || window;
}
function yf(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
let Jm = 0;
function pR(e) {
  const [t, n] = M.useState(e), r = e || t;
  return M.useEffect(() => {
    t == null && (Jm += 1, n(`mui-${Jm}`));
  }, [t]), r;
}
const hR = {
  ...M
}, eg = hR.useId;
function Bp(e) {
  if (eg !== void 0) {
    const t = eg();
    return e ?? t;
  }
  return pR(e);
}
function Sv({
  controlled: e,
  default: t,
  name: n,
  state: r = "value"
}) {
  const {
    current: o
  } = M.useRef(e !== void 0), [i, s] = M.useState(t), l = o ? e : i;
  if (process.env.NODE_ENV !== "production") {
    M.useEffect(() => {
      o !== (e !== void 0) && console.error([`MUI: A component is changing the ${o ? "" : "un"}controlled ${r} state of ${n} to be ${o ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [r, n, e]);
    const {
      current: u
    } = M.useRef(t);
    M.useEffect(() => {
      !o && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${r} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = M.useCallback((u) => {
    o || s(u);
  }, []);
  return [l, c];
}
function Nr(e) {
  const t = M.useRef(e);
  return Pr(() => {
    t.current = e;
  }), M.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function pn(...e) {
  return M.useMemo(() => e.every((t) => t == null) ? null : (t) => {
    e.forEach((n) => {
      yf(n, t);
    });
  }, e);
}
const tg = {};
function Ev(e, t) {
  const n = M.useRef(tg);
  return n.current === tg && (n.current = e(t)), n;
}
const mR = [];
function gR(e) {
  M.useEffect(e, mR);
}
let Tv = class Cv {
  constructor() {
    lo(this, "currentId", null);
    lo(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    lo(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new Cv();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
};
function Si() {
  const e = Ev(Tv.create).current;
  return gR(e.disposeEffect), e;
}
function ic(e) {
  try {
    return e.matches(":focus-visible");
  } catch {
    process.env.NODE_ENV !== "production" && !/jsdom/.test(window.navigator.userAgent) && console.warn(["MUI: The `:focus-visible` pseudo class is not supported in this browser.", "Some components rely on this feature to work properly."].join(`
`));
  }
  return !1;
}
function yR(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
const Ov = (e) => {
  const t = M.useRef({});
  return M.useEffect(() => {
    t.current = e;
  }), t.current;
};
function bR(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function Rv(e, t, n, r) {
  const o = e[t];
  if (o == null || !Number.isInteger(o)) {
    const i = bR(o);
    return new RangeError(`Invalid ${r} \`${t}\` of type \`${i}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function kv(e, t, ...n) {
  return e[t] === void 0 ? null : Rv(e, t, ...n);
}
function bf() {
  return null;
}
kv.isRequired = Rv;
bf.isRequired = bf;
const Fp = process.env.NODE_ENV === "production" ? bf : kv;
function vR(e) {
  return typeof e == "string";
}
function Nv(e, t, n) {
  return e === void 0 || vR(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function Iv(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((r) => r.match(/^on[A-Z]/) && typeof e[r] == "function" && !t.includes(r)).forEach((r) => {
    n[r] = e[r];
  }), n;
}
function ng(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function $v(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: r,
    externalForwardedProps: o,
    className: i
  } = e;
  if (!t) {
    const h = Oe(n == null ? void 0 : n.className, i, o == null ? void 0 : o.className, r == null ? void 0 : r.className), g = {
      ...n == null ? void 0 : n.style,
      ...o == null ? void 0 : o.style,
      ...r == null ? void 0 : r.style
    }, m = {
      ...n,
      ...o,
      ...r
    };
    return h.length > 0 && (m.className = h), Object.keys(g).length > 0 && (m.style = g), {
      props: m,
      internalRef: void 0
    };
  }
  const s = Iv({
    ...o,
    ...r
  }), l = ng(r), c = ng(o), u = t(s), d = Oe(u == null ? void 0 : u.className, n == null ? void 0 : n.className, i, o == null ? void 0 : o.className, r == null ? void 0 : r.className), f = {
    ...u == null ? void 0 : u.style,
    ...n == null ? void 0 : n.style,
    ...o == null ? void 0 : o.style,
    ...r == null ? void 0 : r.style
  }, p = {
    ...u,
    ...n,
    ...c,
    ...l
  };
  return d.length > 0 && (p.className = d), Object.keys(f).length > 0 && (p.style = f), {
    props: p,
    internalRef: u.ref
  };
}
function Pv(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function vf(e) {
  var f;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: r,
    skipResolvingSlotProps: o = !1,
    ...i
  } = e, s = o ? {} : Pv(n, r), {
    props: l,
    internalRef: c
  } = $v({
    ...i,
    externalSlotProps: s
  }), u = pn(c, s == null ? void 0 : s.ref, (f = e.additionalProps) == null ? void 0 : f.ref);
  return Nv(t, {
    ...l,
    ref: u
  }, r);
}
function ti(e) {
  var t;
  return parseInt(M.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
const Lp = /* @__PURE__ */ M.createContext(null);
process.env.NODE_ENV !== "production" && (Lp.displayName = "ThemeContext");
function zp() {
  const e = M.useContext(Lp);
  return process.env.NODE_ENV !== "production" && M.useDebugValue(e), e;
}
const xR = typeof Symbol == "function" && Symbol.for, wR = xR ? Symbol.for("mui.nested") : "__THEME_NESTED__";
function SR(e, t) {
  if (typeof t == "function") {
    const n = t(e);
    return process.env.NODE_ENV !== "production" && (n || console.error(["MUI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join(`
`))), n;
  }
  return {
    ...e,
    ...t
  };
}
function sc(e) {
  const {
    children: t,
    theme: n
  } = e, r = zp();
  process.env.NODE_ENV !== "production" && r === null && typeof n == "function" && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const o = M.useMemo(() => {
    const i = r === null ? {
      ...n
    } : SR(r, n);
    return i != null && (i[wR] = r !== null), i;
  }, [n, r]);
  return /* @__PURE__ */ N(Lp.Provider, {
    value: o,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (sc.propTypes = {
  /**
   * Your component tree.
   */
  children: a.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: a.oneOfType([a.object, a.func]).isRequired
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (sc.propTypes = Ma(sc.propTypes));
const _v = /* @__PURE__ */ M.createContext();
function Mv({
  value: e,
  ...t
}) {
  return /* @__PURE__ */ N(_v.Provider, {
    value: e ?? !0,
    ...t
  });
}
process.env.NODE_ENV !== "production" && (Mv.propTypes = {
  children: a.node,
  value: a.bool
});
const ou = () => M.useContext(_v) ?? !1, Av = /* @__PURE__ */ M.createContext(void 0);
function Dv({
  value: e,
  children: t
}) {
  return /* @__PURE__ */ N(Av.Provider, {
    value: e,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (Dv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: a.node,
  /**
   * @ignore
   */
  value: a.object
});
function ER(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  if (!t || !t.components || !t.components[n])
    return r;
  const o = t.components[n];
  return o.defaultProps ? ra(o.defaultProps, r) : !o.styleOverrides && !o.variants ? ra(o, r) : r;
}
function TR({
  props: e,
  name: t
}) {
  const n = M.useContext(Av);
  return ER({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
const rg = {};
function og(e, t, n, r = !1) {
  return M.useMemo(() => {
    const o = e && t[e] || t;
    if (typeof n == "function") {
      const i = n(o), s = e ? {
        ...t,
        [e]: i
      } : i;
      return r ? () => s : s;
    }
    return e ? {
      ...t,
      [e]: n
    } : {
      ...t,
      ...n
    };
  }, [e, t, n, r]);
}
function oa(e) {
  const {
    children: t,
    theme: n,
    themeId: r
  } = e, o = _p(rg), i = zp() || rg;
  process.env.NODE_ENV !== "production" && (o === null && typeof n == "function" || r && o && !o[r] && typeof n == "function") && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const s = og(r, o, n), l = og(r, i, n, !0), c = (r ? s[r] : s).direction === "rtl";
  return /* @__PURE__ */ N(sc, {
    theme: l,
    children: /* @__PURE__ */ N(ts.Provider, {
      value: s,
      children: /* @__PURE__ */ N(Mv, {
        value: c,
        children: /* @__PURE__ */ N(Dv, {
          value: r ? s[r].components : s.components,
          children: t
        })
      })
    })
  });
}
process.env.NODE_ENV !== "production" && (oa.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Your component tree.
   */
  children: a.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: a.oneOfType([a.func, a.object]).isRequired,
  /**
   * The design system's unique id for getting the corresponded theme when there are multiple design systems.
   */
  themeId: a.string
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (oa.propTypes = Ma(oa.propTypes));
const ig = {
  theme: void 0
};
function CR(e) {
  let t, n;
  return function(o) {
    let i = t;
    return (i === void 0 || o.theme !== n) && (ig.theme = o.theme, i = pv(e(ig)), t = i, n = o.theme), i;
  };
}
const Vp = "mode", jp = "color-scheme", OR = "data-color-scheme";
function RR(e) {
  const {
    defaultMode: t = "system",
    defaultLightColorScheme: n = "light",
    defaultDarkColorScheme: r = "dark",
    modeStorageKey: o = Vp,
    colorSchemeStorageKey: i = jp,
    attribute: s = OR,
    colorSchemeNode: l = "document.documentElement",
    nonce: c
  } = e || {};
  let u = "", d = s;
  if (s === "class" && (d = ".%s"), s === "data" && (d = "[data-%s]"), d.startsWith(".")) {
    const p = d.substring(1);
    u += `${l}.classList.remove('${p}'.replace('%s', light), '${p}'.replace('%s', dark));
      ${l}.classList.add('${p}'.replace('%s', colorScheme));`;
  }
  const f = d.match(/\[([^\]]+)\]/);
  if (f) {
    const [p, h] = f[1].split("=");
    h || (u += `${l}.removeAttribute('${p}'.replace('%s', light));
      ${l}.removeAttribute('${p}'.replace('%s', dark));`), u += `
      ${l}.setAttribute('${p}'.replace('%s', colorScheme), ${h ? `${h}.replace('%s', colorScheme)` : '""'});`;
  } else
    u += `${l}.setAttribute('${d}', colorScheme);`;
  return /* @__PURE__ */ N("script", {
    suppressHydrationWarning: !0,
    nonce: typeof window > "u" ? c : "",
    dangerouslySetInnerHTML: {
      __html: `(function() {
try {
  let colorScheme = '';
  const mode = localStorage.getItem('${o}') || '${t}';
  const dark = localStorage.getItem('${i}-dark') || '${r}';
  const light = localStorage.getItem('${i}-light') || '${n}';
  if (mode === 'system') {
    // handle system mode
    const mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = dark
    } else {
      colorScheme = light
    }
  }
  if (mode === 'light') {
    colorScheme = light;
  }
  if (mode === 'dark') {
    colorScheme = dark;
  }
  if (colorScheme) {
    ${u}
  }
} catch(e){}})();`
    }
  }, "mui-color-scheme-init");
}
function kR() {
}
const NR = ({
  key: e,
  storageWindow: t
}) => (!t && typeof window < "u" && (t = window), {
  get(n) {
    if (typeof window > "u")
      return;
    if (!t)
      return n;
    let r;
    try {
      r = t.localStorage.getItem(e);
    } catch {
    }
    return r || n;
  },
  set: (n) => {
    if (t)
      try {
        t.localStorage.setItem(e, n);
      } catch {
      }
  },
  subscribe: (n) => {
    if (!t)
      return kR;
    const r = (o) => {
      const i = o.newValue;
      o.key === e && n(i);
    };
    return t.addEventListener("storage", r), () => {
      t.removeEventListener("storage", r);
    };
  }
});
function md() {
}
function sg(e) {
  if (typeof window < "u" && typeof window.matchMedia == "function" && e === "system")
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
function Bv(e, t) {
  if (e.mode === "light" || e.mode === "system" && e.systemMode === "light")
    return t("light");
  if (e.mode === "dark" || e.mode === "system" && e.systemMode === "dark")
    return t("dark");
}
function IR(e) {
  return Bv(e, (t) => {
    if (t === "light")
      return e.lightColorScheme;
    if (t === "dark")
      return e.darkColorScheme;
  });
}
function $R(e) {
  const {
    defaultMode: t = "light",
    defaultLightColorScheme: n,
    defaultDarkColorScheme: r,
    supportedColorSchemes: o = [],
    modeStorageKey: i = Vp,
    colorSchemeStorageKey: s = jp,
    storageWindow: l = typeof window > "u" ? void 0 : window,
    storageManager: c = NR,
    noSsr: u = !1
  } = e, d = o.join(","), f = o.length > 1, p = M.useMemo(() => c == null ? void 0 : c({
    key: i,
    storageWindow: l
  }), [c, i, l]), h = M.useMemo(() => c == null ? void 0 : c({
    key: `${s}-light`,
    storageWindow: l
  }), [c, s, l]), g = M.useMemo(() => c == null ? void 0 : c({
    key: `${s}-dark`,
    storageWindow: l
  }), [c, s, l]), [m, b] = M.useState(() => {
    const k = (p == null ? void 0 : p.get(t)) || t, P = (h == null ? void 0 : h.get(n)) || n, y = (g == null ? void 0 : g.get(r)) || r;
    return {
      mode: k,
      systemMode: sg(k),
      lightColorScheme: P,
      darkColorScheme: y
    };
  }), [x, E] = M.useState(u || !f);
  M.useEffect(() => {
    E(!0);
  }, []);
  const v = IR(m), w = M.useCallback((k) => {
    b((P) => {
      if (k === P.mode)
        return P;
      const y = k ?? t;
      return p == null || p.set(y), {
        ...P,
        mode: y,
        systemMode: sg(y)
      };
    });
  }, [p, t]), S = M.useCallback((k) => {
    k ? typeof k == "string" ? k && !d.includes(k) ? console.error(`\`${k}\` does not exist in \`theme.colorSchemes\`.`) : b((P) => {
      const y = {
        ...P
      };
      return Bv(P, (R) => {
        R === "light" && (h == null || h.set(k), y.lightColorScheme = k), R === "dark" && (g == null || g.set(k), y.darkColorScheme = k);
      }), y;
    }) : b((P) => {
      const y = {
        ...P
      }, R = k.light === null ? n : k.light, $ = k.dark === null ? r : k.dark;
      return R && (d.includes(R) ? (y.lightColorScheme = R, h == null || h.set(R)) : console.error(`\`${R}\` does not exist in \`theme.colorSchemes\`.`)), $ && (d.includes($) ? (y.darkColorScheme = $, g == null || g.set($)) : console.error(`\`${$}\` does not exist in \`theme.colorSchemes\`.`)), y;
    }) : b((P) => (h == null || h.set(n), g == null || g.set(r), {
      ...P,
      lightColorScheme: n,
      darkColorScheme: r
    }));
  }, [d, h, g, n, r]), T = M.useCallback((k) => {
    m.mode === "system" && b((P) => {
      const y = k != null && k.matches ? "dark" : "light";
      return P.systemMode === y ? P : {
        ...P,
        systemMode: y
      };
    });
  }, [m.mode]), C = M.useRef(T);
  return C.current = T, M.useEffect(() => {
    if (typeof window.matchMedia != "function" || !f)
      return;
    const k = (...y) => C.current(...y), P = window.matchMedia("(prefers-color-scheme: dark)");
    return P.addListener(k), k(P), () => {
      P.removeListener(k);
    };
  }, [f]), M.useEffect(() => {
    if (f) {
      const k = (p == null ? void 0 : p.subscribe((R) => {
        (!R || ["light", "dark", "system"].includes(R)) && w(R || t);
      })) || md, P = (h == null ? void 0 : h.subscribe((R) => {
        (!R || d.match(R)) && S({
          light: R
        });
      })) || md, y = (g == null ? void 0 : g.subscribe((R) => {
        (!R || d.match(R)) && S({
          dark: R
        });
      })) || md;
      return () => {
        k(), P(), y();
      };
    }
  }, [S, w, d, t, l, f, p, h, g]), {
    ...m,
    mode: x ? m.mode : void 0,
    systemMode: x ? m.systemMode : void 0,
    colorScheme: x ? v : void 0,
    setMode: w,
    setColorScheme: S
  };
}
const PR = "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
function _R(e) {
  const {
    themeId: t,
    /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */
    theme: n = {},
    modeStorageKey: r = Vp,
    colorSchemeStorageKey: o = jp,
    disableTransitionOnChange: i = !1,
    defaultColorScheme: s,
    resolveTheme: l
  } = e, c = {
    allColorSchemes: [],
    colorScheme: void 0,
    darkColorScheme: void 0,
    lightColorScheme: void 0,
    mode: void 0,
    setColorScheme: () => {
    },
    setMode: () => {
    },
    systemMode: void 0
  }, u = /* @__PURE__ */ M.createContext(void 0);
  process.env.NODE_ENV !== "production" && (u.displayName = "ColorSchemeContext");
  const d = () => M.useContext(u) || c, f = {}, p = {};
  function h(x) {
    var H, G, re, he;
    const {
      children: E,
      theme: v,
      modeStorageKey: w = r,
      colorSchemeStorageKey: S = o,
      disableTransitionOnChange: T = i,
      storageManager: C,
      storageWindow: k = typeof window > "u" ? void 0 : window,
      documentNode: P = typeof document > "u" ? void 0 : document,
      colorSchemeNode: y = typeof document > "u" ? void 0 : document.documentElement,
      disableNestedContext: R = !1,
      disableStyleSheetGeneration: $ = !1,
      defaultMode: A = "system",
      forceThemeRerender: O = !1,
      noSsr: _
    } = x, I = M.useRef(!1), D = zp(), z = M.useContext(u), B = !!z && !R, F = M.useMemo(() => v || (typeof n == "function" ? n() : n), [v]), L = F[t], W = L || F, {
      colorSchemes: U = f,
      components: Z = p,
      cssVarPrefix: Q
    } = W, ee = Object.keys(U).filter((me) => !!U[me]).join(","), te = M.useMemo(() => ee.split(","), [ee]), q = typeof s == "string" ? s : s.light, oe = typeof s == "string" ? s : s.dark, K = U[q] && U[oe] ? A : ((G = (H = U[W.defaultColorScheme]) == null ? void 0 : H.palette) == null ? void 0 : G.mode) || ((re = W.palette) == null ? void 0 : re.mode), {
      mode: ne,
      setMode: j,
      systemMode: pe,
      lightColorScheme: ce,
      darkColorScheme: be,
      colorScheme: Ie,
      setColorScheme: _e
    } = $R({
      supportedColorSchemes: te,
      defaultLightColorScheme: q,
      defaultDarkColorScheme: oe,
      modeStorageKey: w,
      colorSchemeStorageKey: S,
      defaultMode: K,
      storageManager: C,
      storageWindow: k,
      noSsr: _
    });
    let $e = ne, Ne = Ie;
    B && ($e = z.mode, Ne = z.colorScheme), process.env.NODE_ENV !== "production" && O && !W.vars && console.warn(["MUI: The `forceThemeRerender` prop should only be used with CSS theme variables.", "Note that it will slow down the app when changing between modes, so only do this when you cannot find a better solution."].join(`
`));
    let Le = Ne || W.defaultColorScheme;
    W.vars && !O && (Le = W.defaultColorScheme);
    const Re = M.useMemo(() => {
      var se;
      const me = ((se = W.generateThemeVars) == null ? void 0 : se.call(W)) || W.vars, le = {
        ...W,
        components: Z,
        colorSchemes: U,
        cssVarPrefix: Q,
        vars: me
      };
      if (typeof le.generateSpacing == "function" && (le.spacing = le.generateSpacing()), Le) {
        const ae = U[Le];
        ae && typeof ae == "object" && Object.keys(ae).forEach((ge) => {
          ae[ge] && typeof ae[ge] == "object" ? le[ge] = {
            ...le[ge],
            ...ae[ge]
          } : le[ge] = ae[ge];
        });
      }
      return l ? l(le) : le;
    }, [W, Le, Z, U, Q]), V = W.colorSchemeSelector;
    Pr(() => {
      if (Ne && y && V && V !== "media") {
        const me = V;
        let le = V;
        if (me === "class" && (le = ".%s"), me === "data" && (le = "[data-%s]"), me != null && me.startsWith("data-") && !me.includes("%s") && (le = `[${me}="%s"]`), le.startsWith("."))
          y.classList.remove(...te.map((se) => le.substring(1).replace("%s", se))), y.classList.add(le.substring(1).replace("%s", Ne));
        else {
          const se = le.replace("%s", Ne).match(/\[([^\]]+)\]/);
          if (se) {
            const [ae, ge] = se[1].split("=");
            ge || te.forEach((Ce) => {
              y.removeAttribute(ae.replace(Ne, Ce));
            }), y.setAttribute(ae, ge ? ge.replace(/"|'/g, "") : "");
          } else
            y.setAttribute(le, Ne);
        }
      }
    }, [Ne, V, y, te]), M.useEffect(() => {
      let me;
      if (T && I.current && P) {
        const le = P.createElement("style");
        le.appendChild(P.createTextNode(PR)), P.head.appendChild(le), window.getComputedStyle(P.body), me = setTimeout(() => {
          P.head.removeChild(le);
        }, 1);
      }
      return () => {
        clearTimeout(me);
      };
    }, [Ne, T, P]), M.useEffect(() => (I.current = !0, () => {
      I.current = !1;
    }), []);
    const J = M.useMemo(() => ({
      allColorSchemes: te,
      colorScheme: Ne,
      darkColorScheme: be,
      lightColorScheme: ce,
      mode: $e,
      setColorScheme: _e,
      setMode: process.env.NODE_ENV === "production" ? j : (me) => {
        Re.colorSchemeSelector === "media" && console.error(["MUI: The `setMode` function has no effect if `colorSchemeSelector` is `media` (`media` is the default value).", "To toggle the mode manually, please configure `colorSchemeSelector` to use a class or data attribute.", "To learn more, visit https://mui.com/material-ui/customization/css-theme-variables/configuration/#toggling-dark-mode-manually"].join(`
`)), j(me);
      },
      systemMode: pe
    }), [te, Ne, be, ce, $e, _e, j, pe, Re.colorSchemeSelector]);
    let ie = !0;
    ($ || W.cssVariables === !1 || B && (D == null ? void 0 : D.cssVarPrefix) === Q) && (ie = !1);
    const X = /* @__PURE__ */ Se(M.Fragment, {
      children: [/* @__PURE__ */ N(oa, {
        themeId: L ? t : void 0,
        theme: Re,
        children: E
      }), ie && /* @__PURE__ */ N(Pp, {
        styles: ((he = Re.generateStyleSheets) == null ? void 0 : he.call(Re)) || []
      })]
    });
    return B ? X : /* @__PURE__ */ N(u.Provider, {
      value: J,
      children: X
    });
  }
  process.env.NODE_ENV !== "production" && (h.propTypes = {
    /**
     * The component tree.
     */
    children: a.node,
    /**
     * The node used to attach the color-scheme attribute
     */
    colorSchemeNode: a.any,
    /**
     * localStorage key used to store `colorScheme`
     */
    colorSchemeStorageKey: a.string,
    /**
     * The default mode when the storage is empty,
     * require the theme to have `colorSchemes` with light and dark.
     */
    defaultMode: a.string,
    /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */
    disableNestedContext: a.bool,
    /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */
    disableStyleSheetGeneration: a.bool,
    /**
     * Disable CSS transitions when switching between modes or color schemes.
     */
    disableTransitionOnChange: a.bool,
    /**
     * The document to attach the attribute to.
     */
    documentNode: a.any,
    /**
     * If `true`, theme values are recalculated when the mode changes.
     */
    forceThemeRerender: a.bool,
    /**
     * The key in the local storage used to store current color scheme.
     */
    modeStorageKey: a.string,
    /**
     * If `true`, the mode will be the same value as the storage without an extra rerendering after the hydration.
     * You should use this option in conjuction with `InitColorSchemeScript` component.
     */
    noSsr: a.bool,
    /**
     * The storage manager to be used for storing the mode and color scheme
     * @default using `window.localStorage`
     */
    storageManager: a.func,
    /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */
    storageWindow: a.any,
    /**
     * The calculated theme object that will be passed through context.
     */
    theme: a.object
  });
  const g = typeof s == "string" ? s : s.light, m = typeof s == "string" ? s : s.dark;
  return {
    CssVarsProvider: h,
    useColorScheme: d,
    getInitColorSchemeScript: (x) => RR({
      colorSchemeStorageKey: o,
      defaultLightColorScheme: g,
      defaultDarkColorScheme: m,
      modeStorageKey: r,
      ...x
    })
  };
}
function MR(e = "") {
  function t(...r) {
    if (!r.length)
      return "";
    const o = r[0];
    return typeof o == "string" && !o.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${o}${t(...r.slice(1))})` : `, ${o}`;
  }
  return (r, ...o) => `var(--${e ? `${e}-` : ""}${r}${t(...o)})`;
}
const ag = (e, t, n, r = []) => {
  let o = e;
  t.forEach((i, s) => {
    s === t.length - 1 ? Array.isArray(o) ? o[Number(i)] = n : o && typeof o == "object" && (o[i] = n) : o && typeof o == "object" && (o[i] || (o[i] = r.includes(i) ? [] : {}), o = o[i]);
  });
}, AR = (e, t, n) => {
  function r(o, i = [], s = []) {
    Object.entries(o).forEach(([l, c]) => {
      (!n || n && !n([...i, l])) && c != null && (typeof c == "object" && Object.keys(c).length > 0 ? r(c, [...i, l], Array.isArray(c) ? [...s, l] : s) : t([...i, l], c, s));
    });
  }
  r(e);
}, DR = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((r) => e.includes(r)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function gd(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: r
  } = t || {}, o = {}, i = {}, s = {};
  return AR(
    e,
    (l, c, u) => {
      if ((typeof c == "string" || typeof c == "number") && (!r || !r(l, c))) {
        const d = `--${n ? `${n}-` : ""}${l.join("-")}`, f = DR(l, c);
        Object.assign(o, {
          [d]: f
        }), ag(i, l, `var(${d})`, u), ag(s, l, `var(${d}, ${f})`, u);
      }
    },
    (l) => l[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: o,
    vars: i,
    varsWithDefaults: s
  };
}
function BR(e, t = {}) {
  const {
    getSelector: n = b,
    disableCssColorScheme: r,
    colorSchemeSelector: o
  } = t, {
    colorSchemes: i = {},
    components: s,
    defaultColorScheme: l = "light",
    ...c
  } = e, {
    vars: u,
    css: d,
    varsWithDefaults: f
  } = gd(c, t);
  let p = f;
  const h = {}, {
    [l]: g,
    ...m
  } = i;
  if (Object.entries(m || {}).forEach(([v, w]) => {
    const {
      vars: S,
      css: T,
      varsWithDefaults: C
    } = gd(w, t);
    p = zn(p, C), h[v] = {
      css: T,
      vars: S
    };
  }), g) {
    const {
      css: v,
      vars: w,
      varsWithDefaults: S
    } = gd(g, t);
    p = zn(p, S), h[l] = {
      css: v,
      vars: w
    };
  }
  function b(v, w) {
    var T, C;
    let S = o;
    if (o === "class" && (S = ".%s"), o === "data" && (S = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (S = `[${o}="%s"]`), v) {
      if (S === "media")
        return e.defaultColorScheme === v ? ":root" : {
          [`@media (prefers-color-scheme: ${((C = (T = i[v]) == null ? void 0 : T.palette) == null ? void 0 : C.mode) || v})`]: {
            ":root": w
          }
        };
      if (S)
        return e.defaultColorScheme === v ? `:root, ${S.replace("%s", String(v))}` : S.replace("%s", String(v));
    }
    return ":root";
  }
  return {
    vars: p,
    generateThemeVars: () => {
      let v = {
        ...u
      };
      return Object.entries(h).forEach(([, {
        vars: w
      }]) => {
        v = zn(v, w);
      }), v;
    },
    generateStyleSheets: () => {
      var k, P;
      const v = [], w = e.defaultColorScheme || "light";
      function S(y, R) {
        Object.keys(R).length && v.push(typeof y == "string" ? {
          [y]: {
            ...R
          }
        } : y);
      }
      S(n(void 0, {
        ...d
      }), d);
      const {
        [w]: T,
        ...C
      } = h;
      if (T) {
        const {
          css: y
        } = T, R = (P = (k = i[w]) == null ? void 0 : k.palette) == null ? void 0 : P.mode, $ = !r && R ? {
          colorScheme: R,
          ...y
        } : {
          ...y
        };
        S(n(w, {
          ...$
        }), $);
      }
      return Object.entries(C).forEach(([y, {
        css: R
      }]) => {
        var O, _;
        const $ = (_ = (O = i[y]) == null ? void 0 : O.palette) == null ? void 0 : _.mode, A = !r && $ ? {
          colorScheme: $,
          ...R
        } : {
          ...R
        };
        S(n(y, {
          ...A
        }), A);
      }), v;
    }
  };
}
function FR(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
const LR = tu(), zR = eR("div", {
  name: "MuiContainer",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`maxWidth${Ee(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
  }
}), VR = (e) => tR({
  props: e,
  name: "MuiContainer",
  defaultTheme: LR
}), jR = (e, t) => {
  const n = (c) => Et(t, c), {
    classes: r,
    fixed: o,
    disableGutters: i,
    maxWidth: s
  } = e, l = {
    root: ["root", s && `maxWidth${Ee(String(s))}`, o && "fixed", i && "disableGutters"]
  };
  return Mt(l, n, r);
};
function HR(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: t = zR,
    useThemeProps: n = VR,
    componentName: r = "MuiContainer"
  } = e, o = t(({
    theme: s,
    ownerState: l
  }) => ({
    width: "100%",
    marginLeft: "auto",
    boxSizing: "border-box",
    marginRight: "auto",
    ...!l.disableGutters && {
      paddingLeft: s.spacing(2),
      paddingRight: s.spacing(2),
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [s.breakpoints.up("sm")]: {
        paddingLeft: s.spacing(3),
        paddingRight: s.spacing(3)
      }
    }
  }), ({
    theme: s,
    ownerState: l
  }) => l.fixed && Object.keys(s.breakpoints.values).reduce((c, u) => {
    const d = u, f = s.breakpoints.values[d];
    return f !== 0 && (c[s.breakpoints.up(d)] = {
      maxWidth: `${f}${s.breakpoints.unit}`
    }), c;
  }, {}), ({
    theme: s,
    ownerState: l
  }) => ({
    // @ts-ignore module augmentation fails if custom breakpoints are used
    ...l.maxWidth === "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [s.breakpoints.up("xs")]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: Math.max(s.breakpoints.values.xs, 444)
      }
    },
    ...l.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used
    l.maxWidth !== "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [s.breakpoints.up(l.maxWidth)]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: `${s.breakpoints.values[l.maxWidth]}${s.breakpoints.unit}`
      }
    }
  })), i = /* @__PURE__ */ M.forwardRef(function(l, c) {
    const u = n(l), {
      className: d,
      component: f = "div",
      disableGutters: p = !1,
      fixed: h = !1,
      maxWidth: g = "lg",
      classes: m,
      ...b
    } = u, x = {
      ...u,
      component: f,
      disableGutters: p,
      fixed: h,
      maxWidth: g
    }, E = jR(x, r);
    return (
      // @ts-ignore theme is injected by the styled util
      /* @__PURE__ */ N(o, {
        as: f,
        ownerState: x,
        className: Oe(E.root, d),
        ref: c,
        ...b
      })
    );
  });
  return process.env.NODE_ENV !== "production" && (i.propTypes = {
    children: a.node,
    classes: a.object,
    className: a.string,
    component: a.elementType,
    disableGutters: a.bool,
    fixed: a.bool,
    maxWidth: a.oneOfType([a.oneOf(["xs", "sm", "md", "lg", "xl", !1]), a.string]),
    sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
  }), i;
}
const ia = {
  black: "#000",
  white: "#fff"
}, WR = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, si = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, ai = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, ms = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, li = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, ci = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, ui = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
};
function Fv() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: ia.white,
      default: ia.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const UR = Fv();
function Lv() {
  return {
    text: {
      primary: ia.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: ia.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const lg = Lv();
function cg(e, t, n, r) {
  const o = r.light || r, i = r.dark || r * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = os(e.main, o) : t === "dark" && (e.dark = rs(e.main, i)));
}
function qR(e = "light") {
  return e === "dark" ? {
    main: li[200],
    light: li[50],
    dark: li[400]
  } : {
    main: li[700],
    light: li[400],
    dark: li[800]
  };
}
function YR(e = "light") {
  return e === "dark" ? {
    main: si[200],
    light: si[50],
    dark: si[400]
  } : {
    main: si[500],
    light: si[300],
    dark: si[700]
  };
}
function GR(e = "light") {
  return e === "dark" ? {
    main: ai[500],
    light: ai[300],
    dark: ai[700]
  } : {
    main: ai[700],
    light: ai[400],
    dark: ai[800]
  };
}
function KR(e = "light") {
  return e === "dark" ? {
    main: ci[400],
    light: ci[300],
    dark: ci[700]
  } : {
    main: ci[700],
    light: ci[500],
    dark: ci[900]
  };
}
function XR(e = "light") {
  return e === "dark" ? {
    main: ui[400],
    light: ui[300],
    dark: ui[700]
  } : {
    main: ui[800],
    light: ui[500],
    dark: ui[900]
  };
}
function ZR(e = "light") {
  return e === "dark" ? {
    main: ms[400],
    light: ms[300],
    dark: ms[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: ms[500],
    dark: ms[900]
  };
}
function Hp(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: r = 0.2,
    ...o
  } = e, i = e.primary || qR(t), s = e.secondary || YR(t), l = e.error || GR(t), c = e.info || KR(t), u = e.success || XR(t), d = e.warning || ZR(t);
  function f(m) {
    const b = Qm(m, lg.text.primary) >= n ? lg.text.primary : UR.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const x = Qm(m, b);
      x < 3 && console.error([`MUI: The contrast ratio of ${x}:1 for ${b} on ${m}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return b;
  }
  const p = ({
    color: m,
    name: b,
    mainShade: x = 500,
    lightShade: E = 300,
    darkShade: v = 700
  }) => {
    if (m = {
      ...m
    }, !m.main && m[x] && (m.main = m[x]), !m.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${b ? ` (${b})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${x}\` property.` : Xr(11, b ? ` (${b})` : "", x));
    if (typeof m.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${b ? ` (${b})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(m.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : Xr(12, b ? ` (${b})` : "", JSON.stringify(m.main)));
    return cg(m, "light", E, r), cg(m, "dark", v, r), m.contrastText || (m.contrastText = f(m.main)), m;
  };
  let h;
  return t === "light" ? h = Fv() : t === "dark" && (h = Lv()), process.env.NODE_ENV !== "production" && (h || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), zn({
    // A collection of common colors.
    common: {
      ...ia
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: p({
      color: i,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: p({
      color: s,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: p({
      color: l,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: p({
      color: d,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: p({
      color: c,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: p({
      color: u,
      name: "success"
    }),
    // The grey colors.
    grey: WR,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: f,
    // Generate a rich color object.
    augmentColor: p,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: r,
    // The light and dark mode object.
    ...h
  }, o);
}
function QR(e) {
  const t = {};
  return Object.entries(e).forEach((r) => {
    const [o, i] = r;
    typeof i == "object" && (t[o] = `${i.fontStyle ? `${i.fontStyle} ` : ""}${i.fontVariant ? `${i.fontVariant} ` : ""}${i.fontWeight ? `${i.fontWeight} ` : ""}${i.fontStretch ? `${i.fontStretch} ` : ""}${i.fontSize || ""}${i.lineHeight ? `/${i.lineHeight} ` : ""}${i.fontFamily || ""}`);
  }), t;
}
function JR(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function ek(e) {
  return Math.round(e * 1e5) / 1e5;
}
const ug = {
  textTransform: "uppercase"
}, dg = '"Roboto", "Helvetica", "Arial", sans-serif';
function zv(e, t) {
  const {
    fontFamily: n = dg,
    // The default font size of the Material Specification.
    fontSize: r = 14,
    // px
    fontWeightLight: o = 300,
    fontWeightRegular: i = 400,
    fontWeightMedium: s = 500,
    fontWeightBold: l = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: c = 16,
    // Apply the CSS properties to all the variants.
    allVariants: u,
    pxToRem: d,
    ...f
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof r != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof c != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const p = r / 14, h = d || ((b) => `${b / c * p}rem`), g = (b, x, E, v, w) => ({
    fontFamily: n,
    fontWeight: b,
    fontSize: h(x),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: E,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === dg ? {
      letterSpacing: `${ek(v / x)}em`
    } : {},
    ...w,
    ...u
  }), m = {
    h1: g(o, 96, 1.167, -1.5),
    h2: g(o, 60, 1.2, -0.5),
    h3: g(i, 48, 1.167, 0),
    h4: g(i, 34, 1.235, 0.25),
    h5: g(i, 24, 1.334, 0),
    h6: g(s, 20, 1.6, 0.15),
    subtitle1: g(i, 16, 1.75, 0.15),
    subtitle2: g(s, 14, 1.57, 0.1),
    body1: g(i, 16, 1.5, 0.15),
    body2: g(i, 14, 1.43, 0.15),
    button: g(s, 14, 1.75, 0.4, ug),
    caption: g(i, 12, 1.66, 0.4),
    overline: g(i, 12, 2.66, 1, ug),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return zn({
    htmlFontSize: c,
    pxToRem: h,
    fontFamily: n,
    fontSize: r,
    fontWeightLight: o,
    fontWeightRegular: i,
    fontWeightMedium: s,
    fontWeightBold: l,
    ...m
  }, f, {
    clone: !1
    // No need to clone deep
  });
}
const tk = 0.2, nk = 0.14, rk = 0.12;
function Ct(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${tk})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${nk})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${rk})`].join(",");
}
const ok = ["none", Ct(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), Ct(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), Ct(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), Ct(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), Ct(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), Ct(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), Ct(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), Ct(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), Ct(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), Ct(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), Ct(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), Ct(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), Ct(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), Ct(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), Ct(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), Ct(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), Ct(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), Ct(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), Ct(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), Ct(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), Ct(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), Ct(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), Ct(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), Ct(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], ik = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, sk = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function fg(e) {
  return `${Math.round(e)}ms`;
}
function ak(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function lk(e) {
  const t = {
    ...ik,
    ...e.easing
  }, n = {
    ...sk,
    ...e.duration
  };
  return {
    getAutoHeightDuration: ak,
    create: (o = ["all"], i = {}) => {
      const {
        duration: s = n.standard,
        easing: l = t.easeInOut,
        delay: c = 0,
        ...u
      } = i;
      if (process.env.NODE_ENV !== "production") {
        const d = (p) => typeof p == "string", f = (p) => !Number.isNaN(parseFloat(p));
        !d(o) && !Array.isArray(o) && console.error('MUI: Argument "props" must be a string or Array.'), !f(s) && !d(s) && console.error(`MUI: Argument "duration" must be a number or a string but found ${s}.`), d(l) || console.error('MUI: Argument "easing" must be a string.'), !f(c) && !d(c) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof i != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(u).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(u).join(",")}].`);
      }
      return (Array.isArray(o) ? o : [o]).map((d) => `${d} ${typeof s == "string" ? s : fg(s)} ${l} ${typeof c == "string" ? c : fg(c)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const ck = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function uk(e) {
  return Tr(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function Vv(e = {}) {
  const t = {
    ...e
  };
  function n(r) {
    const o = Object.entries(r);
    for (let i = 0; i < o.length; i++) {
      const [s, l] = o[i];
      !uk(l) || s.startsWith("unstable_") ? delete r[s] : Tr(l) && (r[s] = {
        ...l
      }, n(r[s]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function xf(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: r = {},
    spacing: o,
    palette: i = {},
    transitions: s = {},
    typography: l = {},
    shape: c,
    ...u
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : Xr(20));
  const d = Hp(i), f = tu(e);
  let p = zn(f, {
    mixins: JR(f.breakpoints, r),
    palette: d,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: ok.slice(),
    typography: zv(d, l),
    transitions: lk(s),
    zIndex: {
      ...ck
    }
  });
  if (p = zn(p, u), p = t.reduce((h, g) => zn(h, g), p), process.env.NODE_ENV !== "production") {
    const h = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], g = (m, b) => {
      let x;
      for (x in m) {
        const E = m[x];
        if (h.includes(x) && Object.keys(E).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const v = Et("", x);
            console.error([`MUI: The \`${b}\` component increases the CSS specificity of the \`${x}\` internal state.`, "You can not override it like this: ", JSON.stringify(m, null, 2), "", `Instead, you need to use the '&.${v}' syntax:`, JSON.stringify({
              root: {
                [`&.${v}`]: E
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          m[x] = {};
        }
      }
    };
    Object.keys(p.components).forEach((m) => {
      const b = p.components[m].styleOverrides;
      b && m.startsWith("Mui") && g(b, m);
    });
  }
  return p.unstable_sxConfig = {
    ...Pa,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, p.unstable_sx = function(g) {
    return vo({
      sx: g,
      theme: this
    });
  }, p.toRuntimeSource = Vv, p;
}
function wf(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const dk = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = wf(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function jv(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function Hv(e) {
  return e === "dark" ? dk : [];
}
function fk(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: r,
    ...o
  } = e, i = Hp(t);
  return {
    palette: i,
    opacity: {
      ...jv(i.mode),
      ...n
    },
    overlays: r || Hv(i.mode),
    ...o
  };
}
function pk(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const hk = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], mk = (e) => (t, n) => {
  const r = e.rootSelector || ":root", o = e.colorSchemeSelector;
  let i = o;
  if (o === "class" && (i = ".%s"), o === "data" && (i = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (i = `[${o}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const s = {};
      return hk(e.cssVarPrefix).forEach((l) => {
        s[l] = n[l], delete n[l];
      }), i === "media" ? {
        [r]: n,
        "@media (prefers-color-scheme: dark)": {
          [r]: s
        }
      } : i ? {
        [i.replace("%s", t)]: s,
        [`${r}, ${i.replace("%s", t)}`]: n
      } : {
        [r]: {
          ...n,
          ...s
        }
      };
    }
    if (i && i !== "media")
      return `${r}, ${i.replace("%s", String(t))}`;
  } else if (t) {
    if (i === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [r]: n
        }
      };
    if (i)
      return i.replace("%s", String(t));
  }
  return r;
};
function gk(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function de(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function $s(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : xv(e);
}
function Hr(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = Is($s(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function yk(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const gr = (e) => {
  try {
    return e();
  } catch {
  }
}, bk = (e = "mui") => MR(e);
function yd(e, t, n, r) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const o = r === "dark" ? "dark" : "light";
  if (!n) {
    e[r] = fk({
      ...t,
      palette: {
        mode: o,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: i,
    ...s
  } = xf({
    ...n,
    palette: {
      mode: o,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[r] = {
    ...t,
    palette: i,
    opacity: {
      ...jv(o),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || Hv(o)
  }, s;
}
function vk(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: r,
    disableCssColorScheme: o = !1,
    cssVarPrefix: i = "mui",
    shouldSkipGeneratingVar: s = pk,
    colorSchemeSelector: l = n.light && n.dark ? "media" : void 0,
    rootSelector: c = ":root",
    ...u
  } = e, d = Object.keys(n)[0], f = r || (n.light && d !== "light" ? "light" : d), p = bk(i), {
    [f]: h,
    light: g,
    dark: m,
    ...b
  } = n, x = {
    ...b
  };
  let E = h;
  if ((f === "dark" && !("dark" in n) || f === "light" && !("light" in n)) && (E = !0), !E)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${f}\` option is either missing or invalid.` : Xr(21, f));
  const v = yd(x, E, u, f);
  g && !x.light && yd(x, g, void 0, "light"), m && !x.dark && yd(x, m, void 0, "dark");
  let w = {
    defaultColorScheme: f,
    ...v,
    cssVarPrefix: i,
    colorSchemeSelector: l,
    rootSelector: c,
    getCssVar: p,
    colorSchemes: x,
    font: {
      ...QR(v.typography),
      ...v.font
    },
    spacing: yk(u.spacing)
  };
  Object.keys(w.colorSchemes).forEach((P) => {
    const y = w.colorSchemes[P].palette, R = ($) => {
      const A = $.split("-"), O = A[1], _ = A[2];
      return p($, y[O][_]);
    };
    if (y.mode === "light" && (de(y.common, "background", "#fff"), de(y.common, "onBackground", "#000")), y.mode === "dark" && (de(y.common, "background", "#000"), de(y.common, "onBackground", "#fff")), gk(y, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), y.mode === "light") {
      de(y.Alert, "errorColor", mt(y.error.light, 0.6)), de(y.Alert, "infoColor", mt(y.info.light, 0.6)), de(y.Alert, "successColor", mt(y.success.light, 0.6)), de(y.Alert, "warningColor", mt(y.warning.light, 0.6)), de(y.Alert, "errorFilledBg", R("palette-error-main")), de(y.Alert, "infoFilledBg", R("palette-info-main")), de(y.Alert, "successFilledBg", R("palette-success-main")), de(y.Alert, "warningFilledBg", R("palette-warning-main")), de(y.Alert, "errorFilledColor", gr(() => y.getContrastText(y.error.main))), de(y.Alert, "infoFilledColor", gr(() => y.getContrastText(y.info.main))), de(y.Alert, "successFilledColor", gr(() => y.getContrastText(y.success.main))), de(y.Alert, "warningFilledColor", gr(() => y.getContrastText(y.warning.main))), de(y.Alert, "errorStandardBg", gt(y.error.light, 0.9)), de(y.Alert, "infoStandardBg", gt(y.info.light, 0.9)), de(y.Alert, "successStandardBg", gt(y.success.light, 0.9)), de(y.Alert, "warningStandardBg", gt(y.warning.light, 0.9)), de(y.Alert, "errorIconColor", R("palette-error-main")), de(y.Alert, "infoIconColor", R("palette-info-main")), de(y.Alert, "successIconColor", R("palette-success-main")), de(y.Alert, "warningIconColor", R("palette-warning-main")), de(y.AppBar, "defaultBg", R("palette-grey-100")), de(y.Avatar, "defaultBg", R("palette-grey-400")), de(y.Button, "inheritContainedBg", R("palette-grey-300")), de(y.Button, "inheritContainedHoverBg", R("palette-grey-A100")), de(y.Chip, "defaultBorder", R("palette-grey-400")), de(y.Chip, "defaultAvatarColor", R("palette-grey-700")), de(y.Chip, "defaultIconColor", R("palette-grey-700")), de(y.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), de(y.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), de(y.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), de(y.LinearProgress, "primaryBg", gt(y.primary.main, 0.62)), de(y.LinearProgress, "secondaryBg", gt(y.secondary.main, 0.62)), de(y.LinearProgress, "errorBg", gt(y.error.main, 0.62)), de(y.LinearProgress, "infoBg", gt(y.info.main, 0.62)), de(y.LinearProgress, "successBg", gt(y.success.main, 0.62)), de(y.LinearProgress, "warningBg", gt(y.warning.main, 0.62)), de(y.Skeleton, "bg", `rgba(${R("palette-text-primaryChannel")} / 0.11)`), de(y.Slider, "primaryTrack", gt(y.primary.main, 0.62)), de(y.Slider, "secondaryTrack", gt(y.secondary.main, 0.62)), de(y.Slider, "errorTrack", gt(y.error.main, 0.62)), de(y.Slider, "infoTrack", gt(y.info.main, 0.62)), de(y.Slider, "successTrack", gt(y.success.main, 0.62)), de(y.Slider, "warningTrack", gt(y.warning.main, 0.62));
      const $ = ul(y.background.default, 0.8);
      de(y.SnackbarContent, "bg", $), de(y.SnackbarContent, "color", gr(() => y.getContrastText($))), de(y.SpeedDialAction, "fabHoverBg", ul(y.background.paper, 0.15)), de(y.StepConnector, "border", R("palette-grey-400")), de(y.StepContent, "border", R("palette-grey-400")), de(y.Switch, "defaultColor", R("palette-common-white")), de(y.Switch, "defaultDisabledColor", R("palette-grey-100")), de(y.Switch, "primaryDisabledColor", gt(y.primary.main, 0.62)), de(y.Switch, "secondaryDisabledColor", gt(y.secondary.main, 0.62)), de(y.Switch, "errorDisabledColor", gt(y.error.main, 0.62)), de(y.Switch, "infoDisabledColor", gt(y.info.main, 0.62)), de(y.Switch, "successDisabledColor", gt(y.success.main, 0.62)), de(y.Switch, "warningDisabledColor", gt(y.warning.main, 0.62)), de(y.TableCell, "border", gt(cl(y.divider, 1), 0.88)), de(y.Tooltip, "bg", cl(y.grey[700], 0.92));
    }
    if (y.mode === "dark") {
      de(y.Alert, "errorColor", gt(y.error.light, 0.6)), de(y.Alert, "infoColor", gt(y.info.light, 0.6)), de(y.Alert, "successColor", gt(y.success.light, 0.6)), de(y.Alert, "warningColor", gt(y.warning.light, 0.6)), de(y.Alert, "errorFilledBg", R("palette-error-dark")), de(y.Alert, "infoFilledBg", R("palette-info-dark")), de(y.Alert, "successFilledBg", R("palette-success-dark")), de(y.Alert, "warningFilledBg", R("palette-warning-dark")), de(y.Alert, "errorFilledColor", gr(() => y.getContrastText(y.error.dark))), de(y.Alert, "infoFilledColor", gr(() => y.getContrastText(y.info.dark))), de(y.Alert, "successFilledColor", gr(() => y.getContrastText(y.success.dark))), de(y.Alert, "warningFilledColor", gr(() => y.getContrastText(y.warning.dark))), de(y.Alert, "errorStandardBg", mt(y.error.light, 0.9)), de(y.Alert, "infoStandardBg", mt(y.info.light, 0.9)), de(y.Alert, "successStandardBg", mt(y.success.light, 0.9)), de(y.Alert, "warningStandardBg", mt(y.warning.light, 0.9)), de(y.Alert, "errorIconColor", R("palette-error-main")), de(y.Alert, "infoIconColor", R("palette-info-main")), de(y.Alert, "successIconColor", R("palette-success-main")), de(y.Alert, "warningIconColor", R("palette-warning-main")), de(y.AppBar, "defaultBg", R("palette-grey-900")), de(y.AppBar, "darkBg", R("palette-background-paper")), de(y.AppBar, "darkColor", R("palette-text-primary")), de(y.Avatar, "defaultBg", R("palette-grey-600")), de(y.Button, "inheritContainedBg", R("palette-grey-800")), de(y.Button, "inheritContainedHoverBg", R("palette-grey-700")), de(y.Chip, "defaultBorder", R("palette-grey-700")), de(y.Chip, "defaultAvatarColor", R("palette-grey-300")), de(y.Chip, "defaultIconColor", R("palette-grey-300")), de(y.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), de(y.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), de(y.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), de(y.LinearProgress, "primaryBg", mt(y.primary.main, 0.5)), de(y.LinearProgress, "secondaryBg", mt(y.secondary.main, 0.5)), de(y.LinearProgress, "errorBg", mt(y.error.main, 0.5)), de(y.LinearProgress, "infoBg", mt(y.info.main, 0.5)), de(y.LinearProgress, "successBg", mt(y.success.main, 0.5)), de(y.LinearProgress, "warningBg", mt(y.warning.main, 0.5)), de(y.Skeleton, "bg", `rgba(${R("palette-text-primaryChannel")} / 0.13)`), de(y.Slider, "primaryTrack", mt(y.primary.main, 0.5)), de(y.Slider, "secondaryTrack", mt(y.secondary.main, 0.5)), de(y.Slider, "errorTrack", mt(y.error.main, 0.5)), de(y.Slider, "infoTrack", mt(y.info.main, 0.5)), de(y.Slider, "successTrack", mt(y.success.main, 0.5)), de(y.Slider, "warningTrack", mt(y.warning.main, 0.5));
      const $ = ul(y.background.default, 0.98);
      de(y.SnackbarContent, "bg", $), de(y.SnackbarContent, "color", gr(() => y.getContrastText($))), de(y.SpeedDialAction, "fabHoverBg", ul(y.background.paper, 0.15)), de(y.StepConnector, "border", R("palette-grey-600")), de(y.StepContent, "border", R("palette-grey-600")), de(y.Switch, "defaultColor", R("palette-grey-300")), de(y.Switch, "defaultDisabledColor", R("palette-grey-600")), de(y.Switch, "primaryDisabledColor", mt(y.primary.main, 0.55)), de(y.Switch, "secondaryDisabledColor", mt(y.secondary.main, 0.55)), de(y.Switch, "errorDisabledColor", mt(y.error.main, 0.55)), de(y.Switch, "infoDisabledColor", mt(y.info.main, 0.55)), de(y.Switch, "successDisabledColor", mt(y.success.main, 0.55)), de(y.Switch, "warningDisabledColor", mt(y.warning.main, 0.55)), de(y.TableCell, "border", mt(cl(y.divider, 1), 0.68)), de(y.Tooltip, "bg", cl(y.grey[700], 0.92));
    }
    Hr(y.background, "default"), Hr(y.background, "paper"), Hr(y.common, "background"), Hr(y.common, "onBackground"), Hr(y, "divider"), Object.keys(y).forEach(($) => {
      const A = y[$];
      $ !== "tonalOffset" && A && typeof A == "object" && (A.main && de(y[$], "mainChannel", Is($s(A.main))), A.light && de(y[$], "lightChannel", Is($s(A.light))), A.dark && de(y[$], "darkChannel", Is($s(A.dark))), A.contrastText && de(y[$], "contrastTextChannel", Is($s(A.contrastText))), $ === "text" && (Hr(y[$], "primary"), Hr(y[$], "secondary")), $ === "action" && (A.active && Hr(y[$], "active"), A.selected && Hr(y[$], "selected")));
    });
  }), w = t.reduce((P, y) => zn(P, y), w);
  const S = {
    prefix: i,
    disableCssColorScheme: o,
    shouldSkipGeneratingVar: s,
    getSelector: mk(w)
  }, {
    vars: T,
    generateThemeVars: C,
    generateStyleSheets: k
  } = BR(w, S);
  return w.vars = T, Object.entries(w.colorSchemes[w.defaultColorScheme]).forEach(([P, y]) => {
    w[P] = y;
  }), w.generateThemeVars = C, w.generateStyleSheets = k, w.generateSpacing = function() {
    return cv(u.spacing, Ep(this));
  }, w.getColorSchemeSelector = FR(l), w.spacing = w.generateSpacing(), w.shouldSkipGeneratingVar = s, w.unstable_sxConfig = {
    ...Pa,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, w.unstable_sx = function(y) {
    return vo({
      sx: y,
      theme: this
    });
  }, w.toRuntimeSource = Vv, w;
}
function pg(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: Hp({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function iu(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: r = !1,
    colorSchemes: o = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: i = n == null ? void 0 : n.mode,
    ...s
  } = e, l = i || "light", c = o == null ? void 0 : o[l], u = {
    ...o,
    ...n ? {
      [l]: {
        ...typeof c != "boolean" && c,
        palette: n
      }
    } : void 0
  };
  if (r === !1) {
    if (!("colorSchemes" in e))
      return xf(e, ...t);
    let d = n;
    "palette" in e || u[l] && (u[l] !== !0 ? d = u[l].palette : l === "dark" && (d = {
      mode: "dark"
    }));
    const f = xf({
      ...e,
      palette: d
    }, ...t);
    return f.defaultColorScheme = l, f.colorSchemes = u, f.palette.mode === "light" && (f.colorSchemes.light = {
      ...u.light !== !0 && u.light,
      palette: f.palette
    }, pg(f, "dark", u.dark)), f.palette.mode === "dark" && (f.colorSchemes.dark = {
      ...u.dark !== !0 && u.dark,
      palette: f.palette
    }, pg(f, "light", u.light)), f;
  }
  return !n && !("light" in u) && l === "light" && (u.light = !0), vk({
    ...s,
    colorSchemes: u,
    defaultColorScheme: l,
    ...typeof r != "boolean" && r
  }, ...t);
}
const Wp = iu(), dr = "$$material";
function io() {
  const e = nu(Wp);
  return process.env.NODE_ENV !== "production" && M.useDebugValue(e), e[dr] || e;
}
function Wv(e) {
  return /* @__PURE__ */ N(uv, {
    ...e,
    defaultTheme: Wp,
    themeId: dr
  });
}
process.env.NODE_ENV !== "production" && (Wv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: a.oneOfType([a.array, a.func, a.number, a.object, a.string, a.bool])
});
function xk(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const Fr = (e) => xk(e) && e !== "classes", Me = mv({
  themeId: dr,
  defaultTheme: Wp,
  rootShouldForwardProp: Fr
});
function Up(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ N(Wv, {
        styles: typeof e == "function" ? (r) => e({
          theme: r,
          ...n
        }) : e
      })
    );
  };
}
function wk() {
  return Y0;
}
const et = CR;
process.env.NODE_ENV !== "production" && (a.node, a.object.isRequired);
function Nt(e) {
  return TR(e);
}
function Sk(e) {
  return Et("MuiSvgIcon", e);
}
kt("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const Ek = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: r
  } = e, o = {
    root: ["root", t !== "inherit" && `color${Ee(t)}`, `fontSize${Ee(n)}`]
  };
  return Mt(o, Sk, r);
}, Tk = Me("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${Ee(n.color)}`], t[`fontSize${Ee(n.fontSize)}`]];
  }
})(et(({
  theme: e
}) => {
  var t, n, r, o, i, s, l, c, u, d, f, p, h, g;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (o = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : o.call(t, "fill", {
      duration: (r = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : r.shorter
    }),
    variants: [
      {
        props: (m) => !m.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((s = (i = e.typography) == null ? void 0 : i.pxToRem) == null ? void 0 : s.call(i, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((c = (l = e.typography) == null ? void 0 : l.pxToRem) == null ? void 0 : c.call(l, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((d = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : d.call(u, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, m]) => m && m.main).map(([m]) => {
        var b, x;
        return {
          props: {
            color: m
          },
          style: {
            color: (x = (b = (e.vars ?? e).palette) == null ? void 0 : b[m]) == null ? void 0 : x.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (p = (f = (e.vars ?? e).palette) == null ? void 0 : f.action) == null ? void 0 : p.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (g = (h = (e.vars ?? e).palette) == null ? void 0 : h.action) == null ? void 0 : g.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), Mi = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: o,
    className: i,
    color: s = "inherit",
    component: l = "svg",
    fontSize: c = "medium",
    htmlColor: u,
    inheritViewBox: d = !1,
    titleAccess: f,
    viewBox: p = "0 0 24 24",
    ...h
  } = r, g = /* @__PURE__ */ M.isValidElement(o) && o.type === "svg", m = {
    ...r,
    color: s,
    component: l,
    fontSize: c,
    instanceFontSize: t.fontSize,
    inheritViewBox: d,
    viewBox: p,
    hasSvgAsChild: g
  }, b = {};
  d || (b.viewBox = p);
  const x = Ek(m);
  return /* @__PURE__ */ Se(Tk, {
    as: l,
    className: Oe(x.root, i),
    focusable: "false",
    color: u,
    "aria-hidden": f ? void 0 : !0,
    role: f ? "img" : void 0,
    ref: n,
    ...b,
    ...h,
    ...g && o.props,
    ownerState: m,
    children: [g ? o.props.children : o, f ? /* @__PURE__ */ N("title", {
      children: f
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (Mi.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: a.oneOfType([a.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: a.oneOfType([a.oneOf(["inherit", "large", "medium", "small"]), a.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: a.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: a.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: a.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: a.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: a.string
});
Mi.muiName = "SvgIcon";
function is(e, t) {
  function n(r, o) {
    return /* @__PURE__ */ N(Mi, {
      "data-testid": process.env.NODE_ENV !== "production" ? `${t}Icon` : void 0,
      ref: o,
      ...r,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = Mi.muiName, /* @__PURE__ */ M.memo(/* @__PURE__ */ M.forwardRef(n));
}
const Ck = is(/* @__PURE__ */ N("path", {
  d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
}), "Person");
function Ok(e) {
  return Et("MuiAvatar", e);
}
kt("MuiAvatar", ["root", "colorDefault", "circular", "rounded", "square", "img", "fallback"]);
function pt(e, t) {
  const {
    className: n,
    elementType: r,
    ownerState: o,
    externalForwardedProps: i,
    internalForwardedProps: s,
    shouldForwardComponentProp: l = !1,
    ...c
  } = t, {
    component: u,
    slots: d = {
      [e]: void 0
    },
    slotProps: f = {
      [e]: void 0
    },
    ...p
  } = i, h = d[e] || r, g = Pv(f[e], o), {
    props: {
      component: m,
      ...b
    },
    internalRef: x
  } = $v({
    className: n,
    ...c,
    externalForwardedProps: e === "root" ? p : void 0,
    externalSlotProps: g
  }), E = pn(x, g == null ? void 0 : g.ref, t.ref), v = e === "root" ? m || u : m, w = Nv(h, {
    ...e === "root" && !u && !d[e] && s,
    ...e !== "root" && !d[e] && s,
    ...b,
    ...v && !l && {
      as: v
    },
    ...v && l && {
      component: v
    },
    ref: E
  }, o);
  return [h, w];
}
const Rk = (e) => {
  const {
    classes: t,
    variant: n,
    colorDefault: r
  } = e;
  return Mt({
    root: ["root", n, r && "colorDefault"],
    img: ["img"],
    fallback: ["fallback"]
  }, Ok, t);
}, kk = Me("div", {
  name: "MuiAvatar",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], n.colorDefault && t.colorDefault];
  }
})(et(({
  theme: e
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  flexShrink: 0,
  width: 40,
  height: 40,
  fontFamily: e.typography.fontFamily,
  fontSize: e.typography.pxToRem(20),
  lineHeight: 1,
  borderRadius: "50%",
  overflow: "hidden",
  userSelect: "none",
  variants: [{
    props: {
      variant: "rounded"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius
    }
  }, {
    props: {
      variant: "square"
    },
    style: {
      borderRadius: 0
    }
  }, {
    props: {
      colorDefault: !0
    },
    style: {
      color: (e.vars || e).palette.background.default,
      ...e.vars ? {
        backgroundColor: e.vars.palette.Avatar.defaultBg
      } : {
        backgroundColor: e.palette.grey[400],
        ...e.applyStyles("dark", {
          backgroundColor: e.palette.grey[600]
        })
      }
    }
  }]
}))), Nk = Me("img", {
  name: "MuiAvatar",
  slot: "Img",
  overridesResolver: (e, t) => t.img
})({
  width: "100%",
  height: "100%",
  textAlign: "center",
  // Handle non-square image.
  objectFit: "cover",
  // Hide alt text.
  color: "transparent",
  // Hide the image broken icon, only works on Chrome.
  textIndent: 1e4
}), Ik = Me(Ck, {
  name: "MuiAvatar",
  slot: "Fallback",
  overridesResolver: (e, t) => t.fallback
})({
  width: "75%",
  height: "75%"
});
function $k({
  crossOrigin: e,
  referrerPolicy: t,
  src: n,
  srcSet: r
}) {
  const [o, i] = M.useState(!1);
  return M.useEffect(() => {
    if (!n && !r)
      return;
    i(!1);
    let s = !0;
    const l = new Image();
    return l.onload = () => {
      s && i("loaded");
    }, l.onerror = () => {
      s && i("error");
    }, l.crossOrigin = e, l.referrerPolicy = t, l.src = n, r && (l.srcset = r), () => {
      s = !1;
    };
  }, [e, t, n, r]), o;
}
const Uv = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiAvatar"
  }), {
    alt: o,
    children: i,
    className: s,
    component: l = "div",
    slots: c = {},
    slotProps: u = {},
    imgProps: d,
    sizes: f,
    src: p,
    srcSet: h,
    variant: g = "circular",
    ...m
  } = r;
  let b = null;
  const x = {
    ...r,
    component: l,
    variant: g
  }, E = $k({
    ...d,
    ...typeof u.img == "function" ? u.img(x) : u.img,
    src: p,
    srcSet: h
  }), v = p || h, w = v && E !== "error";
  x.colorDefault = !w, delete x.ownerState;
  const S = Rk(x), [T, C] = pt("img", {
    className: S.img,
    elementType: Nk,
    externalForwardedProps: {
      slots: c,
      slotProps: {
        img: {
          ...d,
          ...u.img
        }
      }
    },
    additionalProps: {
      alt: o,
      src: p,
      srcSet: h,
      sizes: f
    },
    ownerState: x
  });
  return w ? b = /* @__PURE__ */ N(T, {
    ...C
  }) : i || i === 0 ? b = i : v && o ? b = o[0] : b = /* @__PURE__ */ N(Ik, {
    ownerState: x,
    className: S.fallback
  }), /* @__PURE__ */ N(kk, {
    as: l,
    className: Oe(S.root, s),
    ref: n,
    ...m,
    ownerState: x,
    children: b
  });
});
process.env.NODE_ENV !== "production" && (Uv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Used in combination with `src` or `srcSet` to
   * provide an alt attribute for the rendered `img` element.
   */
  alt: a.string,
  /**
   * Used to render icon or text elements inside the Avatar if `src` is not set.
   * This can be an element, or just a string.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.
   * It can be used to listen for the loading error event.
   * @deprecated Use `slotProps.img` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  imgProps: a.object,
  /**
   * The `sizes` attribute for the `img` element.
   */
  sizes: a.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    img: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    img: a.elementType
  }),
  /**
   * The `src` attribute for the `img` element.
   */
  src: a.string,
  /**
   * The `srcSet` attribute for the `img` element.
   * Use this attribute for responsive image display.
   */
  srcSet: a.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The shape of the avatar.
   * @default 'circular'
   */
  variant: a.oneOfType([a.oneOf(["circular", "rounded", "square"]), a.string])
});
function Pk(e) {
  const {
    badgeContent: t,
    invisible: n = !1,
    max: r = 99,
    showZero: o = !1
  } = e, i = Ov({
    badgeContent: t,
    max: r
  });
  let s = n;
  n === !1 && t === 0 && !o && (s = !0);
  const {
    badgeContent: l,
    max: c = r
  } = s ? i : e, u = l && Number(l) > c ? `${c}+` : l;
  return {
    badgeContent: l,
    invisible: s,
    max: c,
    displayValue: u
  };
}
function _k(e) {
  return typeof e.main == "string";
}
function Mk(e, t = []) {
  if (!_k(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function bn(e = []) {
  return ([, t]) => t && Mk(t, e);
}
function Ak(e) {
  return Et("MuiBadge", e);
}
const co = kt("MuiBadge", [
  "root",
  "badge",
  "dot",
  "standard",
  "anchorOriginTopRight",
  "anchorOriginBottomRight",
  "anchorOriginTopLeft",
  "anchorOriginBottomLeft",
  "invisible",
  "colorError",
  "colorInfo",
  "colorPrimary",
  "colorSecondary",
  "colorSuccess",
  "colorWarning",
  "overlapRectangular",
  "overlapCircular",
  // TODO: v6 remove the overlap value from these class keys
  "anchorOriginTopLeftCircular",
  "anchorOriginTopLeftRectangular",
  "anchorOriginTopRightCircular",
  "anchorOriginTopRightRectangular",
  "anchorOriginBottomLeftCircular",
  "anchorOriginBottomLeftRectangular",
  "anchorOriginBottomRightCircular",
  "anchorOriginBottomRightRectangular"
]), bd = 10, vd = 4, Dk = (e) => {
  const {
    color: t,
    anchorOrigin: n,
    invisible: r,
    overlap: o,
    variant: i,
    classes: s = {}
  } = e, l = {
    root: ["root"],
    badge: ["badge", i, r && "invisible", `anchorOrigin${Ee(n.vertical)}${Ee(n.horizontal)}`, `anchorOrigin${Ee(n.vertical)}${Ee(n.horizontal)}${Ee(o)}`, `overlap${Ee(o)}`, t !== "default" && `color${Ee(t)}`]
  };
  return Mt(l, Ak, s);
}, Bk = Me("span", {
  name: "MuiBadge",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  position: "relative",
  display: "inline-flex",
  // For correct alignment with the text.
  verticalAlign: "middle",
  flexShrink: 0
}), Fk = Me("span", {
  name: "MuiBadge",
  slot: "Badge",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.badge, t[n.variant], t[`anchorOrigin${Ee(n.anchorOrigin.vertical)}${Ee(n.anchorOrigin.horizontal)}${Ee(n.overlap)}`], n.color !== "default" && t[`color${Ee(n.color)}`], n.invisible && t.invisible];
  }
})(et(({
  theme: e
}) => ({
  display: "flex",
  flexDirection: "row",
  flexWrap: "wrap",
  justifyContent: "center",
  alignContent: "center",
  alignItems: "center",
  position: "absolute",
  boxSizing: "border-box",
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(12),
  minWidth: bd * 2,
  lineHeight: 1,
  padding: "0 6px",
  height: bd * 2,
  borderRadius: bd,
  zIndex: 1,
  // Render the badge on top of potential ripples.
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeInOut,
    duration: e.transitions.duration.enteringScreen
  }),
  variants: [...Object.entries(e.palette).filter(bn(["contrastText"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main,
      color: (e.vars || e).palette[t].contrastText
    }
  })), {
    props: {
      variant: "dot"
    },
    style: {
      borderRadius: vd,
      height: vd * 2,
      minWidth: vd * 2,
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      top: 0,
      right: 0,
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${co.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      right: 0,
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${co.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      top: 0,
      left: 0,
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${co.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      left: 0,
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${co.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      top: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${co.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      bottom: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${co.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      top: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${co.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      bottom: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${co.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: {
      invisible: !0
    },
    style: {
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeInOut,
        duration: e.transitions.duration.leavingScreen
      })
    }
  }]
})));
function hg(e) {
  return {
    vertical: (e == null ? void 0 : e.vertical) ?? "top",
    horizontal: (e == null ? void 0 : e.horizontal) ?? "right"
  };
}
const su = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiBadge"
  }), {
    anchorOrigin: o,
    className: i,
    classes: s,
    component: l,
    components: c = {},
    componentsProps: u = {},
    children: d,
    overlap: f = "rectangular",
    color: p = "default",
    invisible: h = !1,
    max: g = 99,
    badgeContent: m,
    slots: b,
    slotProps: x,
    showZero: E = !1,
    variant: v = "standard",
    ...w
  } = r, {
    badgeContent: S,
    invisible: T,
    max: C,
    displayValue: k
  } = Pk({
    max: g,
    invisible: h,
    badgeContent: m,
    showZero: E
  }), P = Ov({
    anchorOrigin: hg(o),
    color: p,
    overlap: f,
    variant: v,
    badgeContent: m
  }), y = T || S == null && v !== "dot", {
    color: R = p,
    overlap: $ = f,
    anchorOrigin: A,
    variant: O = v
  } = y ? P : r, _ = hg(A), I = O !== "dot" ? k : void 0, D = {
    ...r,
    badgeContent: S,
    invisible: y,
    max: C,
    displayValue: I,
    showZero: E,
    anchorOrigin: _,
    color: R,
    overlap: $,
    variant: O
  }, z = Dk(D), B = (b == null ? void 0 : b.root) ?? c.Root ?? Bk, F = (b == null ? void 0 : b.badge) ?? c.Badge ?? Fk, L = (x == null ? void 0 : x.root) ?? u.root, W = (x == null ? void 0 : x.badge) ?? u.badge, U = vf({
    elementType: B,
    externalSlotProps: L,
    externalForwardedProps: w,
    additionalProps: {
      ref: n,
      as: l
    },
    ownerState: D,
    className: Oe(L == null ? void 0 : L.className, z.root, i)
  }), Z = vf({
    elementType: F,
    externalSlotProps: W,
    ownerState: D,
    className: Oe(z.badge, W == null ? void 0 : W.className)
  });
  return /* @__PURE__ */ Se(B, {
    ...U,
    children: [d, /* @__PURE__ */ N(F, {
      ...Z,
      children: I
    })]
  });
});
process.env.NODE_ENV !== "production" && (su.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The anchor of the badge.
   * @default {
   *   vertical: 'top',
   *   horizontal: 'right',
   * }
   */
  anchorOrigin: a.shape({
    horizontal: a.oneOf(["left", "right"]),
    vertical: a.oneOf(["bottom", "top"])
  }),
  /**
   * The content rendered within the badge.
   */
  badgeContent: a.node,
  /**
   * The badge will be added relative to this node.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Badge: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    badge: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * If `true`, the badge is invisible.
   * @default false
   */
  invisible: a.bool,
  /**
   * Max count to show.
   * @default 99
   */
  max: a.number,
  /**
   * Wrapped shape the badge should overlap.
   * @default 'rectangular'
   */
  overlap: a.oneOf(["circular", "rectangular"]),
  /**
   * Controls whether the badge is hidden when `badgeContent` is zero.
   * @default false
   */
  showZero: a.bool,
  /**
   * The props used for each slot inside the Badge.
   * @default {}
   */
  slotProps: a.shape({
    badge: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Badge.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    badge: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: a.oneOfType([a.oneOf(["dot", "standard"]), a.string])
});
function qp({ position: e, color: t }) {
  const n = ct(() => {
    switch (e) {
      case "top-left":
        return {
          vertical: "top",
          horizontal: "left",
          transform: "translate(-2px, -2px)"
        };
      case "bottom-left":
        return {
          vertical: "bottom",
          horizontal: "left",
          transform: "translate(-2px, 2px)"
        };
      case "bottom-right":
        return {
          vertical: "bottom",
          horizontal: "right",
          transform: "translate(2px, 2px)"
        };
      case "top-right":
      default:
        return {
          vertical: "top",
          horizontal: "right",
          transform: "translate(2px, -2px)"
        };
    }
  }, [e]), r = ct(() => {
    switch (t) {
      case "auto":
        return "inherit";
      case "success":
        return "success.main";
      case "primary":
        return "primary.main";
      case "error":
      default:
        return "error.main";
    }
  }, [t]);
  return {
    badgePlacementAttributes: n,
    badgeColor: r
  };
}
const qv = we(
  ({ children: e, isVisible: t, position: n = "top-right", color: r = "error" }) => {
    const { badgePlacementAttributes: o, badgeColor: i } = qp({ position: n, color: r }), { vertical: s, horizontal: l, transform: c } = o;
    return /* @__PURE__ */ N(
      su,
      {
        className: "VenomousUI-DotBadge",
        variant: "dot",
        invisible: !t,
        anchorOrigin: { vertical: s, horizontal: l },
        sx: {
          ".MuiBadge-badge": {
            ...t ? {
              transform: c,
              color: i,
              backgroundColor: i,
              boxShadow: "0 0 0 2px transparent",
              "&::after": {
                position: "absolute",
                top: 0,
                left: 0,
                width: "100%",
                height: "100%",
                borderRadius: "50%",
                animation: "ripple 1.2s infinite ease-in-out",
                border: "2px solid currentColor",
                content: '""'
              },
              "@keyframes ripple": {
                "0%": { transform: "scale(.8)", opacity: 1 },
                "100%": { transform: "scale(2.4)", opacity: 0 }
              }
            } : {}
          }
        },
        children: e
      }
    );
  }
);
qv.displayName = "DotBadge";
const Yv = Object.freeze(
  {
    left: 0,
    top: 0,
    width: 16,
    height: 16
  }
), ac = Object.freeze({
  rotate: 0,
  vFlip: !1,
  hFlip: !1
}), Yp = Object.freeze({
  ...Yv,
  ...ac
}), Sf = Object.freeze({
  ...Yp,
  body: "",
  hidden: !1
});
function Lk(e, t) {
  const n = {};
  !e.hFlip != !t.hFlip && (n.hFlip = !0), !e.vFlip != !t.vFlip && (n.vFlip = !0);
  const r = ((e.rotate || 0) + (t.rotate || 0)) % 4;
  return r && (n.rotate = r), n;
}
function mg(e, t) {
  const n = Lk(e, t);
  for (const r in Sf)
    r in ac ? r in e && !(r in n) && (n[r] = ac[r]) : r in t ? n[r] = t[r] : r in e && (n[r] = e[r]);
  return n;
}
function zk(e, t) {
  const n = e.icons, r = e.aliases || /* @__PURE__ */ Object.create(null), o = /* @__PURE__ */ Object.create(null);
  function i(s) {
    if (n[s])
      return o[s] = [];
    if (!(s in o)) {
      o[s] = null;
      const l = r[s] && r[s].parent, c = l && i(l);
      c && (o[s] = [l].concat(c));
    }
    return o[s];
  }
  return Object.keys(n).concat(Object.keys(r)).forEach(i), o;
}
function Vk(e, t, n) {
  const r = e.icons, o = e.aliases || /* @__PURE__ */ Object.create(null);
  let i = {};
  function s(l) {
    i = mg(
      r[l] || o[l],
      i
    );
  }
  return s(t), n.forEach(s), mg(e, i);
}
function Gv(e, t) {
  const n = [];
  if (typeof e != "object" || typeof e.icons != "object")
    return n;
  e.not_found instanceof Array && e.not_found.forEach((o) => {
    t(o, null), n.push(o);
  });
  const r = zk(e);
  for (const o in r) {
    const i = r[o];
    i && (t(o, Vk(e, o, i)), n.push(o));
  }
  return n;
}
const jk = {
  provider: "",
  aliases: {},
  not_found: {},
  ...Yv
};
function xd(e, t) {
  for (const n in t)
    if (n in e && typeof e[n] != typeof t[n])
      return !1;
  return !0;
}
function Kv(e) {
  if (typeof e != "object" || e === null)
    return null;
  const t = e;
  if (typeof t.prefix != "string" || !e.icons || typeof e.icons != "object" || !xd(e, jk))
    return null;
  const n = t.icons;
  for (const o in n) {
    const i = n[o];
    if (
      // Name cannot be empty
      !o || // Must have body
      typeof i.body != "string" || // Check other props
      !xd(
        i,
        Sf
      )
    )
      return null;
  }
  const r = t.aliases || /* @__PURE__ */ Object.create(null);
  for (const o in r) {
    const i = r[o], s = i.parent;
    if (
      // Name cannot be empty
      !o || // Parent must be set and point to existing icon
      typeof s != "string" || !n[s] && !r[s] || // Check other props
      !xd(
        i,
        Sf
      )
    )
      return null;
  }
  return t;
}
const Xv = /^[a-z0-9]+(-[a-z0-9]+)*$/, au = (e, t, n, r = "") => {
  const o = e.split(":");
  if (e.slice(0, 1) === "@") {
    if (o.length < 2 || o.length > 3)
      return null;
    r = o.shift().slice(1);
  }
  if (o.length > 3 || !o.length)
    return null;
  if (o.length > 1) {
    const l = o.pop(), c = o.pop(), u = {
      // Allow provider without '@': "provider:prefix:name"
      provider: o.length > 0 ? o[0] : r,
      prefix: c,
      name: l
    };
    return t && !Hl(u) ? null : u;
  }
  const i = o[0], s = i.split("-");
  if (s.length > 1) {
    const l = {
      provider: r,
      prefix: s.shift(),
      name: s.join("-")
    };
    return t && !Hl(l) ? null : l;
  }
  if (n && r === "") {
    const l = {
      provider: r,
      prefix: "",
      name: i
    };
    return t && !Hl(l, n) ? null : l;
  }
  return null;
}, Hl = (e, t) => e ? !!// Check prefix: cannot be empty, unless allowSimpleName is enabled
// Check name: cannot be empty
((t && e.prefix === "" || e.prefix) && e.name) : !1, gg = /* @__PURE__ */ Object.create(null);
function Hk(e, t) {
  return {
    provider: e,
    prefix: t,
    icons: /* @__PURE__ */ Object.create(null),
    missing: /* @__PURE__ */ new Set()
  };
}
function Ai(e, t) {
  const n = gg[e] || (gg[e] = /* @__PURE__ */ Object.create(null));
  return n[t] || (n[t] = Hk(e, t));
}
function Zv(e, t) {
  return Kv(t) ? Gv(t, (n, r) => {
    r ? e.icons[n] = r : e.missing.add(n);
  }) : [];
}
function Wk(e, t, n) {
  try {
    if (typeof n.body == "string")
      return e.icons[t] = { ...n }, !0;
  } catch {
  }
  return !1;
}
let sa = !1;
function Qv(e) {
  return typeof e == "boolean" && (sa = e), sa;
}
function yg(e) {
  const t = typeof e == "string" ? au(e, !0, sa) : e;
  if (t) {
    const n = Ai(t.provider, t.prefix), r = t.name;
    return n.icons[r] || (n.missing.has(r) ? null : void 0);
  }
}
function Uk(e, t) {
  const n = au(e, !0, sa);
  if (!n)
    return !1;
  const r = Ai(n.provider, n.prefix);
  return t ? Wk(r, n.name, t) : (r.missing.add(n.name), !0);
}
function qk(e, t) {
  if (typeof e != "object")
    return !1;
  if (typeof t != "string" && (t = e.provider || ""), sa && !t && !e.prefix) {
    let o = !1;
    return Kv(e) && (e.prefix = "", Gv(e, (i, s) => {
      Uk(i, s) && (o = !0);
    })), o;
  }
  const n = e.prefix;
  if (!Hl({
    prefix: n,
    name: "a"
  }))
    return !1;
  const r = Ai(t, n);
  return !!Zv(r, e);
}
const Jv = Object.freeze({
  width: null,
  height: null
}), ex = Object.freeze({
  // Dimensions
  ...Jv,
  // Transformations
  ...ac
}), Yk = /(-?[0-9.]*[0-9]+[0-9.]*)/g, Gk = /^-?[0-9.]*[0-9]+[0-9.]*$/g;
function bg(e, t, n) {
  if (t === 1)
    return e;
  if (n = n || 100, typeof e == "number")
    return Math.ceil(e * t * n) / n;
  if (typeof e != "string")
    return e;
  const r = e.split(Yk);
  if (r === null || !r.length)
    return e;
  const o = [];
  let i = r.shift(), s = Gk.test(i);
  for (; ; ) {
    if (s) {
      const l = parseFloat(i);
      isNaN(l) ? o.push(i) : o.push(Math.ceil(l * t * n) / n);
    } else
      o.push(i);
    if (i = r.shift(), i === void 0)
      return o.join("");
    s = !s;
  }
}
function Kk(e, t = "defs") {
  let n = "";
  const r = e.indexOf("<" + t);
  for (; r >= 0; ) {
    const o = e.indexOf(">", r), i = e.indexOf("</" + t);
    if (o === -1 || i === -1)
      break;
    const s = e.indexOf(">", i);
    if (s === -1)
      break;
    n += e.slice(o + 1, i).trim(), e = e.slice(0, r).trim() + e.slice(s + 1);
  }
  return {
    defs: n,
    content: e
  };
}
function Xk(e, t) {
  return e ? "<defs>" + e + "</defs>" + t : t;
}
function Zk(e, t, n) {
  const r = Kk(e);
  return Xk(r.defs, t + r.content + n);
}
const Qk = (e) => e === "unset" || e === "undefined" || e === "none";
function Jk(e, t) {
  const n = {
    ...Yp,
    ...e
  }, r = {
    ...ex,
    ...t
  }, o = {
    left: n.left,
    top: n.top,
    width: n.width,
    height: n.height
  };
  let i = n.body;
  [n, r].forEach((m) => {
    const b = [], x = m.hFlip, E = m.vFlip;
    let v = m.rotate;
    x ? E ? v += 2 : (b.push(
      "translate(" + (o.width + o.left).toString() + " " + (0 - o.top).toString() + ")"
    ), b.push("scale(-1 1)"), o.top = o.left = 0) : E && (b.push(
      "translate(" + (0 - o.left).toString() + " " + (o.height + o.top).toString() + ")"
    ), b.push("scale(1 -1)"), o.top = o.left = 0);
    let w;
    switch (v < 0 && (v -= Math.floor(v / 4) * 4), v = v % 4, v) {
      case 1:
        w = o.height / 2 + o.top, b.unshift(
          "rotate(90 " + w.toString() + " " + w.toString() + ")"
        );
        break;
      case 2:
        b.unshift(
          "rotate(180 " + (o.width / 2 + o.left).toString() + " " + (o.height / 2 + o.top).toString() + ")"
        );
        break;
      case 3:
        w = o.width / 2 + o.left, b.unshift(
          "rotate(-90 " + w.toString() + " " + w.toString() + ")"
        );
        break;
    }
    v % 2 === 1 && (o.left !== o.top && (w = o.left, o.left = o.top, o.top = w), o.width !== o.height && (w = o.width, o.width = o.height, o.height = w)), b.length && (i = Zk(
      i,
      '<g transform="' + b.join(" ") + '">',
      "</g>"
    ));
  });
  const s = r.width, l = r.height, c = o.width, u = o.height;
  let d, f;
  s === null ? (f = l === null ? "1em" : l === "auto" ? u : l, d = bg(f, c / u)) : (d = s === "auto" ? c : s, f = l === null ? bg(d, u / c) : l === "auto" ? u : l);
  const p = {}, h = (m, b) => {
    Qk(b) || (p[m] = b.toString());
  };
  h("width", d), h("height", f);
  const g = [o.left, o.top, c, u];
  return p.viewBox = g.join(" "), {
    attributes: p,
    viewBox: g,
    body: i
  };
}
const eN = /\sid="(\S+)"/g, tN = "IconifyId" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);
let nN = 0;
function rN(e, t = tN) {
  const n = [];
  let r;
  for (; r = eN.exec(e); )
    n.push(r[1]);
  if (!n.length)
    return e;
  const o = "suffix" + (Math.random() * 16777216 | Date.now()).toString(16);
  return n.forEach((i) => {
    const s = typeof t == "function" ? t(i) : t + (nN++).toString(), l = i.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    e = e.replace(
      // Allowed characters before id: [#;"]
      // Allowed characters after id: [)"], .[a-z]
      new RegExp('([#;"])(' + l + ')([")]|\\.[a-z])', "g"),
      "$1" + s + o + "$3"
    );
  }), e = e.replace(new RegExp(o, "g"), ""), e;
}
const Ef = /* @__PURE__ */ Object.create(null);
function oN(e, t) {
  Ef[e] = t;
}
function Tf(e) {
  return Ef[e] || Ef[""];
}
function Gp(e) {
  let t;
  if (typeof e.resources == "string")
    t = [e.resources];
  else if (t = e.resources, !(t instanceof Array) || !t.length)
    return null;
  return {
    // API hosts
    resources: t,
    // Root path
    path: e.path || "/",
    // URL length limit
    maxURL: e.maxURL || 500,
    // Timeout before next host is used.
    rotate: e.rotate || 750,
    // Timeout before failing query.
    timeout: e.timeout || 5e3,
    // Randomise default API end point.
    random: e.random === !0,
    // Start index
    index: e.index || 0,
    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).
    dataAfterTimeout: e.dataAfterTimeout !== !1
  };
}
const Kp = /* @__PURE__ */ Object.create(null), gs = [
  "https://api.simplesvg.com",
  "https://api.unisvg.com"
], Wl = [];
for (; gs.length > 0; )
  gs.length === 1 || Math.random() > 0.5 ? Wl.push(gs.shift()) : Wl.push(gs.pop());
Kp[""] = Gp({
  resources: ["https://api.iconify.design"].concat(Wl)
});
function iN(e, t) {
  const n = Gp(t);
  return n === null ? !1 : (Kp[e] = n, !0);
}
function Xp(e) {
  return Kp[e];
}
const sN = () => {
  let e;
  try {
    if (e = fetch, typeof e == "function")
      return e;
  } catch {
  }
};
let vg = sN();
function aN(e, t) {
  const n = Xp(e);
  if (!n)
    return 0;
  let r;
  if (!n.maxURL)
    r = 0;
  else {
    let o = 0;
    n.resources.forEach((s) => {
      o = Math.max(o, s.length);
    });
    const i = t + ".json?icons=";
    r = n.maxURL - o - n.path.length - i.length;
  }
  return r;
}
function lN(e) {
  return e === 404;
}
const cN = (e, t, n) => {
  const r = [], o = aN(e, t), i = "icons";
  let s = {
    type: i,
    provider: e,
    prefix: t,
    icons: []
  }, l = 0;
  return n.forEach((c, u) => {
    l += c.length + 1, l >= o && u > 0 && (r.push(s), s = {
      type: i,
      provider: e,
      prefix: t,
      icons: []
    }, l = c.length), s.icons.push(c);
  }), r.push(s), r;
};
function uN(e) {
  if (typeof e == "string") {
    const t = Xp(e);
    if (t)
      return t.path;
  }
  return "/";
}
const dN = (e, t, n) => {
  if (!vg) {
    n("abort", 424);
    return;
  }
  let r = uN(t.provider);
  switch (t.type) {
    case "icons": {
      const i = t.prefix, l = t.icons.join(","), c = new URLSearchParams({
        icons: l
      });
      r += i + ".json?" + c.toString();
      break;
    }
    case "custom": {
      const i = t.uri;
      r += i.slice(0, 1) === "/" ? i.slice(1) : i;
      break;
    }
    default:
      n("abort", 400);
      return;
  }
  let o = 503;
  vg(e + r).then((i) => {
    const s = i.status;
    if (s !== 200) {
      setTimeout(() => {
        n(lN(s) ? "abort" : "next", s);
      });
      return;
    }
    return o = 501, i.json();
  }).then((i) => {
    if (typeof i != "object" || i === null) {
      setTimeout(() => {
        i === 404 ? n("abort", i) : n("next", o);
      });
      return;
    }
    setTimeout(() => {
      n("success", i);
    });
  }).catch(() => {
    n("next", o);
  });
}, fN = {
  prepare: cN,
  send: dN
};
function pN(e) {
  const t = {
    loaded: [],
    missing: [],
    pending: []
  }, n = /* @__PURE__ */ Object.create(null);
  e.sort((o, i) => o.provider !== i.provider ? o.provider.localeCompare(i.provider) : o.prefix !== i.prefix ? o.prefix.localeCompare(i.prefix) : o.name.localeCompare(i.name));
  let r = {
    provider: "",
    prefix: "",
    name: ""
  };
  return e.forEach((o) => {
    if (r.name === o.name && r.prefix === o.prefix && r.provider === o.provider)
      return;
    r = o;
    const i = o.provider, s = o.prefix, l = o.name, c = n[i] || (n[i] = /* @__PURE__ */ Object.create(null)), u = c[s] || (c[s] = Ai(i, s));
    let d;
    l in u.icons ? d = t.loaded : s === "" || u.missing.has(l) ? d = t.missing : d = t.pending;
    const f = {
      provider: i,
      prefix: s,
      name: l
    };
    d.push(f);
  }), t;
}
function tx(e, t) {
  e.forEach((n) => {
    const r = n.loaderCallbacks;
    r && (n.loaderCallbacks = r.filter((o) => o.id !== t));
  });
}
function hN(e) {
  e.pendingCallbacksFlag || (e.pendingCallbacksFlag = !0, setTimeout(() => {
    e.pendingCallbacksFlag = !1;
    const t = e.loaderCallbacks ? e.loaderCallbacks.slice(0) : [];
    if (!t.length)
      return;
    let n = !1;
    const r = e.provider, o = e.prefix;
    t.forEach((i) => {
      const s = i.icons, l = s.pending.length;
      s.pending = s.pending.filter((c) => {
        if (c.prefix !== o)
          return !0;
        const u = c.name;
        if (e.icons[u])
          s.loaded.push({
            provider: r,
            prefix: o,
            name: u
          });
        else if (e.missing.has(u))
          s.missing.push({
            provider: r,
            prefix: o,
            name: u
          });
        else
          return n = !0, !0;
        return !1;
      }), s.pending.length !== l && (n || tx([e], i.id), i.callback(
        s.loaded.slice(0),
        s.missing.slice(0),
        s.pending.slice(0),
        i.abort
      ));
    });
  }));
}
let mN = 0;
function gN(e, t, n) {
  const r = mN++, o = tx.bind(null, n, r);
  if (!t.pending.length)
    return o;
  const i = {
    id: r,
    icons: t,
    callback: e,
    abort: o
  };
  return n.forEach((s) => {
    (s.loaderCallbacks || (s.loaderCallbacks = [])).push(i);
  }), o;
}
function yN(e, t = !0, n = !1) {
  const r = [];
  return e.forEach((o) => {
    const i = typeof o == "string" ? au(o, t, n) : o;
    i && r.push(i);
  }), r;
}
var bN = {
  resources: [],
  index: 0,
  timeout: 2e3,
  rotate: 750,
  random: !1,
  dataAfterTimeout: !1
};
function vN(e, t, n, r) {
  const o = e.resources.length, i = e.random ? Math.floor(Math.random() * o) : e.index;
  let s;
  if (e.random) {
    let T = e.resources.slice(0);
    for (s = []; T.length > 1; ) {
      const C = Math.floor(Math.random() * T.length);
      s.push(T[C]), T = T.slice(0, C).concat(T.slice(C + 1));
    }
    s = s.concat(T);
  } else
    s = e.resources.slice(i).concat(e.resources.slice(0, i));
  const l = Date.now();
  let c = "pending", u = 0, d, f = null, p = [], h = [];
  typeof r == "function" && h.push(r);
  function g() {
    f && (clearTimeout(f), f = null);
  }
  function m() {
    c === "pending" && (c = "aborted"), g(), p.forEach((T) => {
      T.status === "pending" && (T.status = "aborted");
    }), p = [];
  }
  function b(T, C) {
    C && (h = []), typeof T == "function" && h.push(T);
  }
  function x() {
    return {
      startTime: l,
      payload: t,
      status: c,
      queriesSent: u,
      queriesPending: p.length,
      subscribe: b,
      abort: m
    };
  }
  function E() {
    c = "failed", h.forEach((T) => {
      T(void 0, d);
    });
  }
  function v() {
    p.forEach((T) => {
      T.status === "pending" && (T.status = "aborted");
    }), p = [];
  }
  function w(T, C, k) {
    const P = C !== "success";
    switch (p = p.filter((y) => y !== T), c) {
      case "pending":
        break;
      case "failed":
        if (P || !e.dataAfterTimeout)
          return;
        break;
      default:
        return;
    }
    if (C === "abort") {
      d = k, E();
      return;
    }
    if (P) {
      d = k, p.length || (s.length ? S() : E());
      return;
    }
    if (g(), v(), !e.random) {
      const y = e.resources.indexOf(T.resource);
      y !== -1 && y !== e.index && (e.index = y);
    }
    c = "completed", h.forEach((y) => {
      y(k);
    });
  }
  function S() {
    if (c !== "pending")
      return;
    g();
    const T = s.shift();
    if (T === void 0) {
      if (p.length) {
        f = setTimeout(() => {
          g(), c === "pending" && (v(), E());
        }, e.timeout);
        return;
      }
      E();
      return;
    }
    const C = {
      status: "pending",
      resource: T,
      callback: (k, P) => {
        w(C, k, P);
      }
    };
    p.push(C), u++, f = setTimeout(S, e.rotate), n(T, t, C.callback);
  }
  return setTimeout(S), x;
}
function nx(e) {
  const t = {
    ...bN,
    ...e
  };
  let n = [];
  function r() {
    n = n.filter((l) => l().status === "pending");
  }
  function o(l, c, u) {
    const d = vN(
      t,
      l,
      c,
      (f, p) => {
        r(), u && u(f, p);
      }
    );
    return n.push(d), d;
  }
  function i(l) {
    return n.find((c) => l(c)) || null;
  }
  return {
    query: o,
    find: i,
    setIndex: (l) => {
      t.index = l;
    },
    getIndex: () => t.index,
    cleanup: r
  };
}
function xg() {
}
const wd = /* @__PURE__ */ Object.create(null);
function xN(e) {
  if (!wd[e]) {
    const t = Xp(e);
    if (!t)
      return;
    const n = nx(t), r = {
      config: t,
      redundancy: n
    };
    wd[e] = r;
  }
  return wd[e];
}
function wN(e, t, n) {
  let r, o;
  if (typeof e == "string") {
    const i = Tf(e);
    if (!i)
      return n(void 0, 424), xg;
    o = i.send;
    const s = xN(e);
    s && (r = s.redundancy);
  } else {
    const i = Gp(e);
    if (i) {
      r = nx(i);
      const s = e.resources ? e.resources[0] : "", l = Tf(s);
      l && (o = l.send);
    }
  }
  return !r || !o ? (n(void 0, 424), xg) : r.query(t, o, n)().abort;
}
function wg() {
}
function SN(e) {
  e.iconsLoaderFlag || (e.iconsLoaderFlag = !0, setTimeout(() => {
    e.iconsLoaderFlag = !1, hN(e);
  }));
}
function EN(e) {
  const t = [], n = [];
  return e.forEach((r) => {
    (r.match(Xv) ? t : n).push(r);
  }), {
    valid: t,
    invalid: n
  };
}
function ys(e, t, n) {
  function r() {
    const o = e.pendingIcons;
    t.forEach((i) => {
      o && o.delete(i), e.icons[i] || e.missing.add(i);
    });
  }
  if (n && typeof n == "object")
    try {
      if (!Zv(e, n).length) {
        r();
        return;
      }
    } catch (o) {
      console.error(o);
    }
  r(), SN(e);
}
function Sg(e, t) {
  e instanceof Promise ? e.then((n) => {
    t(n);
  }).catch(() => {
    t(null);
  }) : t(e);
}
function TN(e, t) {
  e.iconsToLoad ? e.iconsToLoad = e.iconsToLoad.concat(t).sort() : e.iconsToLoad = t, e.iconsQueueFlag || (e.iconsQueueFlag = !0, setTimeout(() => {
    e.iconsQueueFlag = !1;
    const { provider: n, prefix: r } = e, o = e.iconsToLoad;
    if (delete e.iconsToLoad, !o || !o.length)
      return;
    const i = e.loadIcon;
    if (e.loadIcons && (o.length > 1 || !i)) {
      Sg(
        e.loadIcons(o, r, n),
        (d) => {
          ys(e, o, d);
        }
      );
      return;
    }
    if (i) {
      o.forEach((d) => {
        const f = i(d, r, n);
        Sg(f, (p) => {
          const h = p ? {
            prefix: r,
            icons: {
              [d]: p
            }
          } : null;
          ys(e, [d], h);
        });
      });
      return;
    }
    const { valid: s, invalid: l } = EN(o);
    if (l.length && ys(e, l, null), !s.length)
      return;
    const c = r.match(Xv) ? Tf(n) : null;
    if (!c) {
      ys(e, s, null);
      return;
    }
    c.prepare(n, r, s).forEach((d) => {
      wN(n, d, (f) => {
        ys(e, d.icons, f);
      });
    });
  }));
}
const CN = (e, t) => {
  const n = yN(e, !0, Qv()), r = pN(n);
  if (!r.pending.length) {
    let c = !0;
    return t && setTimeout(() => {
      c && t(
        r.loaded,
        r.missing,
        r.pending,
        wg
      );
    }), () => {
      c = !1;
    };
  }
  const o = /* @__PURE__ */ Object.create(null), i = [];
  let s, l;
  return r.pending.forEach((c) => {
    const { provider: u, prefix: d } = c;
    if (d === l && u === s)
      return;
    s = u, l = d, i.push(Ai(u, d));
    const f = o[u] || (o[u] = /* @__PURE__ */ Object.create(null));
    f[d] || (f[d] = []);
  }), r.pending.forEach((c) => {
    const { provider: u, prefix: d, name: f } = c, p = Ai(u, d), h = p.pendingIcons || (p.pendingIcons = /* @__PURE__ */ new Set());
    h.has(f) || (h.add(f), o[u][d].push(f));
  }), i.forEach((c) => {
    const u = o[c.provider][c.prefix];
    u.length && TN(c, u);
  }), t ? gN(t, r, i) : wg;
};
function ON(e, t) {
  const n = {
    ...e
  };
  for (const r in t) {
    const o = t[r], i = typeof o;
    r in Jv ? (o === null || o && (i === "string" || i === "number")) && (n[r] = o) : i === typeof n[r] && (n[r] = r === "rotate" ? o % 4 : o);
  }
  return n;
}
const RN = /[\s,]+/;
function kN(e, t) {
  t.split(RN).forEach((n) => {
    switch (n.trim()) {
      case "horizontal":
        e.hFlip = !0;
        break;
      case "vertical":
        e.vFlip = !0;
        break;
    }
  });
}
function NN(e, t = 0) {
  const n = e.replace(/^-?[0-9.]*/, "");
  function r(o) {
    for (; o < 0; )
      o += 4;
    return o % 4;
  }
  if (n === "") {
    const o = parseInt(e);
    return isNaN(o) ? 0 : r(o);
  } else if (n !== e) {
    let o = 0;
    switch (n) {
      case "%":
        o = 25;
        break;
      case "deg":
        o = 90;
    }
    if (o) {
      let i = parseFloat(e.slice(0, e.length - n.length));
      return isNaN(i) ? 0 : (i = i / o, i % 1 === 0 ? r(i) : 0);
    }
  }
  return t;
}
function IN(e, t) {
  let n = e.indexOf("xlink:") === -1 ? "" : ' xmlns:xlink="http://www.w3.org/1999/xlink"';
  for (const r in t)
    n += " " + r + '="' + t[r] + '"';
  return '<svg xmlns="http://www.w3.org/2000/svg"' + n + ">" + e + "</svg>";
}
function $N(e) {
  return e.replace(/"/g, "'").replace(/%/g, "%25").replace(/#/g, "%23").replace(/</g, "%3C").replace(/>/g, "%3E").replace(/\s+/g, " ");
}
function PN(e) {
  return "data:image/svg+xml," + $N(e);
}
function _N(e) {
  return 'url("' + PN(e) + '")';
}
let Vs;
function MN() {
  try {
    Vs = window.trustedTypes.createPolicy("iconify", {
      // eslint-disable-next-line @typescript-eslint/no-unsafe-return
      createHTML: (e) => e
    });
  } catch {
    Vs = null;
  }
}
function AN(e) {
  return Vs === void 0 && MN(), Vs ? Vs.createHTML(e) : e;
}
const rx = {
  ...ex,
  inline: !1
}, DN = {
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink",
  "aria-hidden": !0,
  role: "img"
}, BN = {
  display: "inline-block"
}, Cf = {
  backgroundColor: "currentColor"
}, ox = {
  backgroundColor: "transparent"
}, Eg = {
  Image: "var(--svg)",
  Repeat: "no-repeat",
  Size: "100% 100%"
}, Tg = {
  WebkitMask: Cf,
  mask: Cf,
  background: ox
};
for (const e in Tg) {
  const t = Tg[e];
  for (const n in Eg)
    t[e + n] = Eg[n];
}
const FN = {
  ...rx,
  inline: !0
};
function Cg(e) {
  return e + (e.match(/^[-0-9.]+$/) ? "px" : "");
}
const LN = (e, t, n) => {
  const r = t.inline ? FN : rx, o = ON(r, t), i = t.mode || "svg", s = {}, l = t.style || {}, c = {
    ...i === "svg" ? DN : {}
  };
  if (n) {
    const b = au(n, !1, !0);
    if (b) {
      const x = ["iconify"], E = [
        "provider",
        "prefix"
      ];
      for (const v of E)
        b[v] && x.push("iconify--" + b[v]);
      c.className = x.join(" ");
    }
  }
  for (let b in t) {
    const x = t[b];
    if (x !== void 0)
      switch (b) {
        // Properties to ignore
        case "icon":
        case "style":
        case "children":
        case "onLoad":
        case "mode":
        case "ssr":
          break;
        // Forward ref
        case "_ref":
          c.ref = x;
          break;
        // Merge class names
        case "className":
          c[b] = (c[b] ? c[b] + " " : "") + x;
          break;
        // Boolean attributes
        case "inline":
        case "hFlip":
        case "vFlip":
          o[b] = x === !0 || x === "true" || x === 1;
          break;
        // Flip as string: 'horizontal,vertical'
        case "flip":
          typeof x == "string" && kN(o, x);
          break;
        // Color: copy to style
        case "color":
          s.color = x;
          break;
        // Rotation as string
        case "rotate":
          typeof x == "string" ? o[b] = NN(x) : typeof x == "number" && (o[b] = x);
          break;
        // Remove aria-hidden
        case "ariaHidden":
        case "aria-hidden":
          x !== !0 && x !== "true" && delete c["aria-hidden"];
          break;
        // Copy missing property if it does not exist in customisations
        default:
          r[b] === void 0 && (c[b] = x);
      }
  }
  const u = Jk(e, o), d = u.attributes;
  if (o.inline && (s.verticalAlign = "-0.125em"), i === "svg") {
    c.style = {
      ...s,
      ...l
    }, Object.assign(c, d);
    let b = 0, x = t.id;
    return typeof x == "string" && (x = x.replace(/-/g, "_")), c.dangerouslySetInnerHTML = {
      __html: AN(rN(u.body, x ? () => x + "ID" + b++ : "iconifyReact"))
    }, Uo("svg", c);
  }
  const { body: f, width: p, height: h } = e, g = i === "mask" || (i === "bg" ? !1 : f.indexOf("currentColor") !== -1), m = IN(f, {
    ...d,
    width: p + "",
    height: h + ""
  });
  return c.style = {
    ...s,
    "--svg": _N(m),
    width: Cg(d.width),
    height: Cg(d.height),
    ...BN,
    ...g ? Cf : ox,
    ...l
  }, Uo("span", c);
};
Qv(!0);
oN("", fN);
if (typeof document < "u" && typeof window < "u") {
  const e = window;
  if (e.IconifyPreload !== void 0) {
    const t = e.IconifyPreload, n = "Invalid IconifyPreload syntax.";
    typeof t == "object" && t !== null && (t instanceof Array ? t : [t]).forEach((r) => {
      try {
        // Check if item is an object and not null/array
        (typeof r != "object" || r === null || r instanceof Array || // Check for 'icons' and 'prefix'
        typeof r.icons != "object" || typeof r.prefix != "string" || // Add icon set
        !qk(r)) && console.error(n);
      } catch {
        console.error(n);
      }
    });
  }
  if (e.IconifyProviders !== void 0) {
    const t = e.IconifyProviders;
    if (typeof t == "object" && t !== null)
      for (let n in t) {
        const r = "IconifyProviders[" + n + "] is invalid.";
        try {
          const o = t[n];
          if (typeof o != "object" || !o || o.resources === void 0)
            continue;
          iN(n, o) || console.error(r);
        } catch {
          console.error(r);
        }
      }
  }
}
function ix(e) {
  const [t, n] = Jt(!!e.ssr), [r, o] = Jt({});
  function i(h) {
    if (h) {
      const g = e.icon;
      if (typeof g == "object")
        return {
          name: "",
          data: g
        };
      const m = yg(g);
      if (m)
        return {
          name: g,
          data: m
        };
    }
    return {
      name: ""
    };
  }
  const [s, l] = Jt(i(!!e.ssr));
  function c() {
    const h = r.callback;
    h && (h(), o({}));
  }
  function u(h) {
    if (JSON.stringify(s) !== JSON.stringify(h))
      return c(), l(h), !0;
  }
  function d() {
    var h;
    const g = e.icon;
    if (typeof g == "object") {
      u({
        name: "",
        data: g
      });
      return;
    }
    const m = yg(g);
    if (u({
      name: g,
      data: m
    }))
      if (m === void 0) {
        const b = CN([g], d);
        o({
          callback: b
        });
      } else m && ((h = e.onLoad) === null || h === void 0 || h.call(e, g));
  }
  Ze(() => (n(!0), c), []), Ze(() => {
    t && d();
  }, [e.icon, t]);
  const { name: f, data: p } = s;
  return p ? LN({
    ...Yp,
    ...p
  }, e, f) : e.children ? e.children : e.fallback ? e.fallback : Uo("span", {});
}
const zN = Na((e, t) => ix({
  ...e,
  _ref: t
}));
Na((e, t) => ix({
  inline: !0,
  ...e,
  _ref: t
}));
function Sd({
  theme: e,
  ...t
}) {
  const n = dr in e ? e[dr] : void 0;
  return /* @__PURE__ */ N(oa, {
    ...t,
    themeId: n ? dr : void 0,
    theme: n || e
  });
}
const dl = {
  colorSchemeStorageKey: "mui-color-scheme",
  defaultLightColorScheme: "light",
  defaultDarkColorScheme: "dark",
  modeStorageKey: "mui-mode"
}, {
  CssVarsProvider: VN
} = _R({
  themeId: dr,
  // @ts-ignore ignore module augmentation tests
  theme: () => iu({
    cssVariables: !0
  }),
  colorSchemeStorageKey: dl.colorSchemeStorageKey,
  modeStorageKey: dl.modeStorageKey,
  defaultColorScheme: {
    light: dl.defaultLightColorScheme,
    dark: dl.defaultDarkColorScheme
  },
  resolveTheme: (e) => {
    const t = {
      ...e,
      typography: zv(e.palette, e.typography)
    };
    return t.unstable_sx = function(r) {
      return vo({
        sx: r,
        theme: this
      });
    }, t;
  }
}), jN = VN;
function HN({
  theme: e,
  ...t
}) {
  if (typeof e == "function")
    return /* @__PURE__ */ N(Sd, {
      theme: e,
      ...t
    });
  const n = dr in e ? e[dr] : e;
  return "colorSchemes" in n ? /* @__PURE__ */ N(jN, {
    theme: e,
    ...t
  }) : "vars" in n ? /* @__PURE__ */ N(Sd, {
    theme: e,
    ...t
  }) : /* @__PURE__ */ N(Sd, {
    theme: {
      ...e,
      vars: null
    },
    ...t
  });
}
const WN = kt("MuiBox", ["root"]), UN = iu(), Jr = WO({
  themeId: dr,
  defaultTheme: UN,
  defaultClassName: WN.root,
  generateClassName: dv.generate
});
process.env.NODE_ENV !== "production" && (Jr.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: a.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const Mr = we(({ ref: e, icon: t, width: n = 20, color: r = "auto", sx: o, ...i }) => /* @__PURE__ */ N(
  Jr,
  {
    className: "VenomousUI-Icon",
    ssr: !0,
    ref: e,
    component: zN,
    icon: t,
    sx: {
      width: n,
      height: n,
      flexShrink: 0,
      display: "inline-flex",
      color: (s) => r === "error" ? s.palette.error.main : r === "primary" ? s.palette.primary.main : r === "success" ? s.palette.success.main : r === "disabled" ? s.palette.action.disabled : "inherit",
      ...o
    },
    ...i
  }
));
Mr.displayName = "Icon";
function qN(e) {
  return Et("MuiPaper", e);
}
kt("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const YN = (e) => {
  const {
    square: t,
    elevation: n,
    variant: r,
    classes: o
  } = e, i = {
    root: ["root", r, !t && "rounded", r === "elevation" && `elevation${n}`]
  };
  return Mt(i, qN, o);
}, GN = Me("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(et(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), ss = /* @__PURE__ */ M.forwardRef(function(t, n) {
  var h;
  const r = Nt({
    props: t,
    name: "MuiPaper"
  }), o = io(), {
    className: i,
    component: s = "div",
    elevation: l = 1,
    square: c = !1,
    variant: u = "elevation",
    ...d
  } = r, f = {
    ...r,
    component: s,
    elevation: l,
    square: c,
    variant: u
  }, p = YN(f);
  return process.env.NODE_ENV !== "production" && o.shadows[l] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${l}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${l}]\` is defined.`].join(`
`)), /* @__PURE__ */ N(GN, {
    as: s,
    ownerState: f,
    className: Oe(p.root, i),
    ref: n,
    ...d,
    style: {
      ...u === "elevation" && {
        "--Paper-shadow": (o.vars || o).shadows[l],
        ...o.vars && {
          "--Paper-overlay": (h = o.vars.overlays) == null ? void 0 : h[l]
        },
        ...!o.vars && o.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${rn("#fff", wf(l))}, ${rn("#fff", wf(l))})`
        }
      },
      ...d.style
    }
  });
});
process.env.NODE_ENV !== "production" && (ss.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: Ro(Fp, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: a.bool,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: a.oneOfType([a.oneOf(["elevation", "outlined"]), a.string])
});
function as() {
  return {
    paperCommonStyles: ct(
      () => ({
        p: "8px",
        borderRadius: "8px !important",
        backgroundColor: ({ palette: t }) => t.background.paper,
        backgroundImage: "linear-gradient(rgba(255, 255, 255, 0.119), rgba(255, 255, 255, 0.119));"
      }),
      []
    )
  };
}
const wo = we(({ isOutlined: e, children: t, sx: n, ...r }) => {
  const { paperCommonStyles: o } = as();
  return /* @__PURE__ */ N(
    ss,
    {
      className: "VenomousUI-Paper",
      variant: e ? "outlined" : "elevation",
      elevation: e ? 0 : 3,
      square: !0,
      sx: {
        ...o,
        ...n
      },
      ...r,
      children: t
    }
  );
});
wo.displayName = "Paper";
function sx(e, t) {
  if (e == null) return {};
  var n = {};
  for (var r in e) if ({}.hasOwnProperty.call(e, r)) {
    if (t.indexOf(r) !== -1) continue;
    n[r] = e[r];
  }
  return n;
}
function Of(e, t) {
  return Of = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, r) {
    return n.__proto__ = r, n;
  }, Of(e, t);
}
function ax(e, t) {
  e.prototype = Object.create(t.prototype), e.prototype.constructor = e, Of(e, t);
}
const Og = {
  disabled: !1
};
var KN = process.env.NODE_ENV !== "production" ? a.oneOfType([a.number, a.shape({
  enter: a.number,
  exit: a.number,
  appear: a.number
}).isRequired]) : null;
process.env.NODE_ENV !== "production" && a.oneOfType([a.string, a.shape({
  enter: a.string,
  exit: a.string,
  active: a.string
}), a.shape({
  enter: a.string,
  enterDone: a.string,
  enterActive: a.string,
  exit: a.string,
  exitDone: a.string,
  exitActive: a.string
})]);
const lc = Y.createContext(null);
var XN = function(t) {
  return t.scrollTop;
}, Ps = "unmounted", Fo = "exited", Lo = "entering", vi = "entered", Rf = "exiting", Yn = /* @__PURE__ */ function(e) {
  ax(t, e);
  function t(r, o) {
    var i;
    i = e.call(this, r, o) || this;
    var s = o, l = s && !s.isMounting ? r.enter : r.appear, c;
    return i.appearStatus = null, r.in ? l ? (c = Fo, i.appearStatus = Lo) : c = vi : r.unmountOnExit || r.mountOnEnter ? c = Ps : c = Fo, i.state = {
      status: c
    }, i.nextCallback = null, i;
  }
  t.getDerivedStateFromProps = function(o, i) {
    var s = o.in;
    return s && i.status === Ps ? {
      status: Fo
    } : null;
  };
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.updateStatus(!0, this.appearStatus);
  }, n.componentDidUpdate = function(o) {
    var i = null;
    if (o !== this.props) {
      var s = this.state.status;
      this.props.in ? s !== Lo && s !== vi && (i = Lo) : (s === Lo || s === vi) && (i = Rf);
    }
    this.updateStatus(!1, i);
  }, n.componentWillUnmount = function() {
    this.cancelNextCallback();
  }, n.getTimeouts = function() {
    var o = this.props.timeout, i, s, l;
    return i = s = l = o, o != null && typeof o != "number" && (i = o.exit, s = o.enter, l = o.appear !== void 0 ? o.appear : s), {
      exit: i,
      enter: s,
      appear: l
    };
  }, n.updateStatus = function(o, i) {
    if (o === void 0 && (o = !1), i !== null)
      if (this.cancelNextCallback(), i === Lo) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var s = this.props.nodeRef ? this.props.nodeRef.current : wi.findDOMNode(this);
          s && XN(s);
        }
        this.performEnter(o);
      } else
        this.performExit();
    else this.props.unmountOnExit && this.state.status === Fo && this.setState({
      status: Ps
    });
  }, n.performEnter = function(o) {
    var i = this, s = this.props.enter, l = this.context ? this.context.isMounting : o, c = this.props.nodeRef ? [l] : [wi.findDOMNode(this), l], u = c[0], d = c[1], f = this.getTimeouts(), p = l ? f.appear : f.enter;
    if (!o && !s || Og.disabled) {
      this.safeSetState({
        status: vi
      }, function() {
        i.props.onEntered(u);
      });
      return;
    }
    this.props.onEnter(u, d), this.safeSetState({
      status: Lo
    }, function() {
      i.props.onEntering(u, d), i.onTransitionEnd(p, function() {
        i.safeSetState({
          status: vi
        }, function() {
          i.props.onEntered(u, d);
        });
      });
    });
  }, n.performExit = function() {
    var o = this, i = this.props.exit, s = this.getTimeouts(), l = this.props.nodeRef ? void 0 : wi.findDOMNode(this);
    if (!i || Og.disabled) {
      this.safeSetState({
        status: Fo
      }, function() {
        o.props.onExited(l);
      });
      return;
    }
    this.props.onExit(l), this.safeSetState({
      status: Rf
    }, function() {
      o.props.onExiting(l), o.onTransitionEnd(s.exit, function() {
        o.safeSetState({
          status: Fo
        }, function() {
          o.props.onExited(l);
        });
      });
    });
  }, n.cancelNextCallback = function() {
    this.nextCallback !== null && (this.nextCallback.cancel(), this.nextCallback = null);
  }, n.safeSetState = function(o, i) {
    i = this.setNextCallback(i), this.setState(o, i);
  }, n.setNextCallback = function(o) {
    var i = this, s = !0;
    return this.nextCallback = function(l) {
      s && (s = !1, i.nextCallback = null, o(l));
    }, this.nextCallback.cancel = function() {
      s = !1;
    }, this.nextCallback;
  }, n.onTransitionEnd = function(o, i) {
    this.setNextCallback(i);
    var s = this.props.nodeRef ? this.props.nodeRef.current : wi.findDOMNode(this), l = o == null && !this.props.addEndListener;
    if (!s || l) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var c = this.props.nodeRef ? [this.nextCallback] : [s, this.nextCallback], u = c[0], d = c[1];
      this.props.addEndListener(u, d);
    }
    o != null && setTimeout(this.nextCallback, o);
  }, n.render = function() {
    var o = this.state.status;
    if (o === Ps)
      return null;
    var i = this.props, s = i.children;
    i.in, i.mountOnEnter, i.unmountOnExit, i.appear, i.enter, i.exit, i.timeout, i.addEndListener, i.onEnter, i.onEntering, i.onEntered, i.onExit, i.onExiting, i.onExited, i.nodeRef;
    var l = sx(i, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      /* @__PURE__ */ Y.createElement(lc.Provider, {
        value: null
      }, typeof s == "function" ? s(o, l) : Y.cloneElement(Y.Children.only(s), l))
    );
  }, t;
}(Y.Component);
Yn.contextType = lc;
Yn.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: a.shape({
    current: typeof Element > "u" ? a.any : function(e, t, n, r, o, i) {
      var s = e[t];
      return a.instanceOf(s && "ownerDocument" in s ? s.ownerDocument.defaultView.Element : Element)(e, t, n, r, o, i);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: a.oneOfType([a.func.isRequired, a.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: a.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: a.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: a.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: a.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: a.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: a.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function(t) {
    var n = KN;
    t.addEndListener || (n = n.isRequired);
    for (var r = arguments.length, o = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++)
      o[i - 1] = arguments[i];
    return n.apply(void 0, [t].concat(o));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: a.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: a.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: a.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: a.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: a.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: a.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: a.func
} : {};
function di() {
}
Yn.defaultProps = {
  in: !1,
  mountOnEnter: !1,
  unmountOnExit: !1,
  appear: !1,
  enter: !0,
  exit: !0,
  onEnter: di,
  onEntering: di,
  onEntered: di,
  onExit: di,
  onExiting: di,
  onExited: di
};
Yn.UNMOUNTED = Ps;
Yn.EXITED = Fo;
Yn.ENTERING = Lo;
Yn.ENTERED = vi;
Yn.EXITING = Rf;
function ZN(e) {
  if (e === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function Zp(e, t) {
  var n = function(i) {
    return t && Bl(i) ? t(i) : i;
  }, r = /* @__PURE__ */ Object.create(null);
  return e && IT.map(e, function(o) {
    return o;
  }).forEach(function(o) {
    r[o.key] = n(o);
  }), r;
}
function QN(e, t) {
  e = e || {}, t = t || {};
  function n(d) {
    return d in t ? t[d] : e[d];
  }
  var r = /* @__PURE__ */ Object.create(null), o = [];
  for (var i in e)
    i in t ? o.length && (r[i] = o, o = []) : o.push(i);
  var s, l = {};
  for (var c in t) {
    if (r[c])
      for (s = 0; s < r[c].length; s++) {
        var u = r[c][s];
        l[r[c][s]] = n(u);
      }
    l[c] = n(c);
  }
  for (s = 0; s < o.length; s++)
    l[o[s]] = n(o[s]);
  return l;
}
function Vo(e, t, n) {
  return n[t] != null ? n[t] : e.props[t];
}
function JN(e, t) {
  return Zp(e.children, function(n) {
    return Fl(n, {
      onExited: t.bind(null, n),
      in: !0,
      appear: Vo(n, "appear", e),
      enter: Vo(n, "enter", e),
      exit: Vo(n, "exit", e)
    });
  });
}
function eI(e, t, n) {
  var r = Zp(e.children), o = QN(t, r);
  return Object.keys(o).forEach(function(i) {
    var s = o[i];
    if (Bl(s)) {
      var l = i in t, c = i in r, u = t[i], d = Bl(u) && !u.props.in;
      c && (!l || d) ? o[i] = Fl(s, {
        onExited: n.bind(null, s),
        in: !0,
        exit: Vo(s, "exit", e),
        enter: Vo(s, "enter", e)
      }) : !c && l && !d ? o[i] = Fl(s, {
        in: !1
      }) : c && l && Bl(u) && (o[i] = Fl(s, {
        onExited: n.bind(null, s),
        in: u.props.in,
        exit: Vo(s, "exit", e),
        enter: Vo(s, "enter", e)
      }));
    }
  }), o;
}
var tI = Object.values || function(e) {
  return Object.keys(e).map(function(t) {
    return e[t];
  });
}, nI = {
  component: "div",
  childFactory: function(t) {
    return t;
  }
}, Qp = /* @__PURE__ */ function(e) {
  ax(t, e);
  function t(r, o) {
    var i;
    i = e.call(this, r, o) || this;
    var s = i.handleExited.bind(ZN(i));
    return i.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: s,
      firstRender: !0
    }, i;
  }
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, n.componentWillUnmount = function() {
    this.mounted = !1;
  }, t.getDerivedStateFromProps = function(o, i) {
    var s = i.children, l = i.handleExited, c = i.firstRender;
    return {
      children: c ? JN(o, l) : eI(o, s, l),
      firstRender: !1
    };
  }, n.handleExited = function(o, i) {
    var s = Zp(this.props.children);
    o.key in s || (o.props.onExited && o.props.onExited(i), this.mounted && this.setState(function(l) {
      var c = nc({}, l.children);
      return delete c[o.key], {
        children: c
      };
    }));
  }, n.render = function() {
    var o = this.props, i = o.component, s = o.childFactory, l = sx(o, ["component", "childFactory"]), c = this.state.contextValue, u = tI(this.state.children).map(s);
    return delete l.appear, delete l.enter, delete l.exit, i === null ? /* @__PURE__ */ Y.createElement(lc.Provider, {
      value: c
    }, u) : /* @__PURE__ */ Y.createElement(lc.Provider, {
      value: c
    }, /* @__PURE__ */ Y.createElement(i, l, u));
  }, t;
}(Y.Component);
Qp.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: a.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: a.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: a.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: a.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: a.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: a.func
} : {};
Qp.defaultProps = nI;
const Jp = (e) => e.scrollTop;
function Di(e, t) {
  const {
    timeout: n,
    easing: r,
    style: o = {}
  } = e;
  return {
    duration: o.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: o.transitionTimingFunction ?? (typeof r == "object" ? r[t.mode] : r),
    delay: o.transitionDelay
  };
}
const rI = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, Ko = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = io(), o = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: i,
    appear: s = !0,
    children: l,
    easing: c,
    in: u,
    onEnter: d,
    onEntered: f,
    onEntering: p,
    onExit: h,
    onExited: g,
    onExiting: m,
    style: b,
    timeout: x = o,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: E = Yn,
    ...v
  } = t, w = M.useRef(null), S = pn(w, ti(l), n), T = (O) => (_) => {
    if (O) {
      const I = w.current;
      _ === void 0 ? O(I) : O(I, _);
    }
  }, C = T(p), k = T((O, _) => {
    Jp(O);
    const I = Di({
      style: b,
      timeout: x,
      easing: c
    }, {
      mode: "enter"
    });
    O.style.webkitTransition = r.transitions.create("opacity", I), O.style.transition = r.transitions.create("opacity", I), d && d(O, _);
  }), P = T(f), y = T(m), R = T((O) => {
    const _ = Di({
      style: b,
      timeout: x,
      easing: c
    }, {
      mode: "exit"
    });
    O.style.webkitTransition = r.transitions.create("opacity", _), O.style.transition = r.transitions.create("opacity", _), h && h(O);
  }), $ = T(g);
  return /* @__PURE__ */ N(E, {
    appear: s,
    in: u,
    nodeRef: w,
    onEnter: k,
    onEntered: P,
    onEntering: C,
    onExit: R,
    onExited: $,
    onExiting: y,
    addEndListener: (O) => {
      i && i(w.current, O);
    },
    timeout: x,
    ...v,
    children: (O, {
      ownerState: _,
      ...I
    }) => /* @__PURE__ */ M.cloneElement(l, {
      style: {
        opacity: 0,
        visibility: O === "exited" && !u ? "hidden" : void 0,
        ...rI[O],
        ...b,
        ...l.props.style
      },
      ref: S,
      ...I
    })
  });
});
process.env.NODE_ENV !== "production" && (Ko.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: ko.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function kf(e) {
  return `scale(${e}, ${e ** 2})`;
}
const oI = {
  entering: {
    opacity: 1,
    transform: kf(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, Ed = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), aa = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    addEndListener: r,
    appear: o = !0,
    children: i,
    easing: s,
    in: l,
    onEnter: c,
    onEntered: u,
    onEntering: d,
    onExit: f,
    onExited: p,
    onExiting: h,
    style: g,
    timeout: m = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: b = Yn,
    ...x
  } = t, E = Si(), v = M.useRef(), w = io(), S = M.useRef(null), T = pn(S, ti(i), n), C = (_) => (I) => {
    if (_) {
      const D = S.current;
      I === void 0 ? _(D) : _(D, I);
    }
  }, k = C(d), P = C((_, I) => {
    Jp(_);
    const {
      duration: D,
      delay: z,
      easing: B
    } = Di({
      style: g,
      timeout: m,
      easing: s
    }, {
      mode: "enter"
    });
    let F;
    m === "auto" ? (F = w.transitions.getAutoHeightDuration(_.clientHeight), v.current = F) : F = D, _.style.transition = [w.transitions.create("opacity", {
      duration: F,
      delay: z
    }), w.transitions.create("transform", {
      duration: Ed ? F : F * 0.666,
      delay: z,
      easing: B
    })].join(","), c && c(_, I);
  }), y = C(u), R = C(h), $ = C((_) => {
    const {
      duration: I,
      delay: D,
      easing: z
    } = Di({
      style: g,
      timeout: m,
      easing: s
    }, {
      mode: "exit"
    });
    let B;
    m === "auto" ? (B = w.transitions.getAutoHeightDuration(_.clientHeight), v.current = B) : B = I, _.style.transition = [w.transitions.create("opacity", {
      duration: B,
      delay: D
    }), w.transitions.create("transform", {
      duration: Ed ? B : B * 0.666,
      delay: Ed ? D : D || B * 0.333,
      easing: z
    })].join(","), _.style.opacity = 0, _.style.transform = kf(0.75), f && f(_);
  }), A = C(p);
  return /* @__PURE__ */ N(b, {
    appear: o,
    in: l,
    nodeRef: S,
    onEnter: P,
    onEntered: y,
    onEntering: k,
    onExit: $,
    onExited: A,
    onExiting: R,
    addEndListener: (_) => {
      m === "auto" && E.start(v.current || 0, _), r && r(S.current, _);
    },
    timeout: m === "auto" ? null : m,
    ...x,
    children: (_, {
      ownerState: I,
      ...D
    }) => /* @__PURE__ */ M.cloneElement(i, {
      style: {
        opacity: 0,
        transform: kf(0.75),
        visibility: _ === "exited" && !l ? "hidden" : void 0,
        ...oI[_],
        ...g,
        ...i.props.style
      },
      ref: T,
      ...D
    })
  });
});
process.env.NODE_ENV !== "production" && (aa.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: ko.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
aa && (aa.muiSupportAuto = !0);
var Rn = "top", tr = "bottom", nr = "right", kn = "left", eh = "auto", Aa = [Rn, tr, nr, kn], Bi = "start", la = "end", iI = "clippingParents", lx = "viewport", bs = "popper", sI = "reference", Rg = /* @__PURE__ */ Aa.reduce(function(e, t) {
  return e.concat([t + "-" + Bi, t + "-" + la]);
}, []), cx = /* @__PURE__ */ [].concat(Aa, [eh]).reduce(function(e, t) {
  return e.concat([t, t + "-" + Bi, t + "-" + la]);
}, []), aI = "beforeRead", lI = "read", cI = "afterRead", uI = "beforeMain", dI = "main", fI = "afterMain", pI = "beforeWrite", hI = "write", mI = "afterWrite", gI = [aI, lI, cI, uI, dI, fI, pI, hI, mI];
function Ar(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function Wn(e) {
  if (e == null)
    return window;
  if (e.toString() !== "[object Window]") {
    var t = e.ownerDocument;
    return t && t.defaultView || window;
  }
  return e;
}
function Xo(e) {
  var t = Wn(e).Element;
  return e instanceof t || e instanceof Element;
}
function er(e) {
  var t = Wn(e).HTMLElement;
  return e instanceof t || e instanceof HTMLElement;
}
function th(e) {
  if (typeof ShadowRoot > "u")
    return !1;
  var t = Wn(e).ShadowRoot;
  return e instanceof t || e instanceof ShadowRoot;
}
function yI(e) {
  var t = e.state;
  Object.keys(t.elements).forEach(function(n) {
    var r = t.styles[n] || {}, o = t.attributes[n] || {}, i = t.elements[n];
    !er(i) || !Ar(i) || (Object.assign(i.style, r), Object.keys(o).forEach(function(s) {
      var l = o[s];
      l === !1 ? i.removeAttribute(s) : i.setAttribute(s, l === !0 ? "" : l);
    }));
  });
}
function bI(e) {
  var t = e.state, n = {
    popper: {
      position: t.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(t.elements.popper.style, n.popper), t.styles = n, t.elements.arrow && Object.assign(t.elements.arrow.style, n.arrow), function() {
    Object.keys(t.elements).forEach(function(r) {
      var o = t.elements[r], i = t.attributes[r] || {}, s = Object.keys(t.styles.hasOwnProperty(r) ? t.styles[r] : n[r]), l = s.reduce(function(c, u) {
        return c[u] = "", c;
      }, {});
      !er(o) || !Ar(o) || (Object.assign(o.style, l), Object.keys(i).forEach(function(c) {
        o.removeAttribute(c);
      }));
    });
  };
}
const vI = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: yI,
  effect: bI,
  requires: ["computeStyles"]
};
function Ir(e) {
  return e.split("-")[0];
}
var qo = Math.max, cc = Math.min, Fi = Math.round;
function Nf() {
  var e = navigator.userAgentData;
  return e != null && e.brands && Array.isArray(e.brands) ? e.brands.map(function(t) {
    return t.brand + "/" + t.version;
  }).join(" ") : navigator.userAgent;
}
function ux() {
  return !/^((?!chrome|android).)*safari/i.test(Nf());
}
function Li(e, t, n) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  var r = e.getBoundingClientRect(), o = 1, i = 1;
  t && er(e) && (o = e.offsetWidth > 0 && Fi(r.width) / e.offsetWidth || 1, i = e.offsetHeight > 0 && Fi(r.height) / e.offsetHeight || 1);
  var s = Xo(e) ? Wn(e) : window, l = s.visualViewport, c = !ux() && n, u = (r.left + (c && l ? l.offsetLeft : 0)) / o, d = (r.top + (c && l ? l.offsetTop : 0)) / i, f = r.width / o, p = r.height / i;
  return {
    width: f,
    height: p,
    top: d,
    right: u + f,
    bottom: d + p,
    left: u,
    x: u,
    y: d
  };
}
function nh(e) {
  var t = Li(e), n = e.offsetWidth, r = e.offsetHeight;
  return Math.abs(t.width - n) <= 1 && (n = t.width), Math.abs(t.height - r) <= 1 && (r = t.height), {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: n,
    height: r
  };
}
function dx(e, t) {
  var n = t.getRootNode && t.getRootNode();
  if (e.contains(t))
    return !0;
  if (n && th(n)) {
    var r = t;
    do {
      if (r && e.isSameNode(r))
        return !0;
      r = r.parentNode || r.host;
    } while (r);
  }
  return !1;
}
function eo(e) {
  return Wn(e).getComputedStyle(e);
}
function xI(e) {
  return ["table", "td", "th"].indexOf(Ar(e)) >= 0;
}
function No(e) {
  return ((Xo(e) ? e.ownerDocument : (
    // $FlowFixMe[prop-missing]
    e.document
  )) || window.document).documentElement;
}
function lu(e) {
  return Ar(e) === "html" ? e : (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    e.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e.parentNode || // DOM Element detected
    (th(e) ? e.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    No(e)
  );
}
function kg(e) {
  return !er(e) || // https://github.com/popperjs/popper-core/issues/837
  eo(e).position === "fixed" ? null : e.offsetParent;
}
function wI(e) {
  var t = /firefox/i.test(Nf()), n = /Trident/i.test(Nf());
  if (n && er(e)) {
    var r = eo(e);
    if (r.position === "fixed")
      return null;
  }
  var o = lu(e);
  for (th(o) && (o = o.host); er(o) && ["html", "body"].indexOf(Ar(o)) < 0; ) {
    var i = eo(o);
    if (i.transform !== "none" || i.perspective !== "none" || i.contain === "paint" || ["transform", "perspective"].indexOf(i.willChange) !== -1 || t && i.willChange === "filter" || t && i.filter && i.filter !== "none")
      return o;
    o = o.parentNode;
  }
  return null;
}
function Da(e) {
  for (var t = Wn(e), n = kg(e); n && xI(n) && eo(n).position === "static"; )
    n = kg(n);
  return n && (Ar(n) === "html" || Ar(n) === "body" && eo(n).position === "static") ? t : n || wI(e) || t;
}
function rh(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function js(e, t, n) {
  return qo(e, cc(t, n));
}
function SI(e, t, n) {
  var r = js(e, t, n);
  return r > n ? n : r;
}
function fx() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function px(e) {
  return Object.assign({}, fx(), e);
}
function hx(e, t) {
  return t.reduce(function(n, r) {
    return n[r] = e, n;
  }, {});
}
var EI = function(t, n) {
  return t = typeof t == "function" ? t(Object.assign({}, n.rects, {
    placement: n.placement
  })) : t, px(typeof t != "number" ? t : hx(t, Aa));
};
function TI(e) {
  var t, n = e.state, r = e.name, o = e.options, i = n.elements.arrow, s = n.modifiersData.popperOffsets, l = Ir(n.placement), c = rh(l), u = [kn, nr].indexOf(l) >= 0, d = u ? "height" : "width";
  if (!(!i || !s)) {
    var f = EI(o.padding, n), p = nh(i), h = c === "y" ? Rn : kn, g = c === "y" ? tr : nr, m = n.rects.reference[d] + n.rects.reference[c] - s[c] - n.rects.popper[d], b = s[c] - n.rects.reference[c], x = Da(i), E = x ? c === "y" ? x.clientHeight || 0 : x.clientWidth || 0 : 0, v = m / 2 - b / 2, w = f[h], S = E - p[d] - f[g], T = E / 2 - p[d] / 2 + v, C = js(w, T, S), k = c;
    n.modifiersData[r] = (t = {}, t[k] = C, t.centerOffset = C - T, t);
  }
}
function CI(e) {
  var t = e.state, n = e.options, r = n.element, o = r === void 0 ? "[data-popper-arrow]" : r;
  o != null && (typeof o == "string" && (o = t.elements.popper.querySelector(o), !o) || dx(t.elements.popper, o) && (t.elements.arrow = o));
}
const OI = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: TI,
  effect: CI,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function zi(e) {
  return e.split("-")[1];
}
var RI = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function kI(e, t) {
  var n = e.x, r = e.y, o = t.devicePixelRatio || 1;
  return {
    x: Fi(n * o) / o || 0,
    y: Fi(r * o) / o || 0
  };
}
function Ng(e) {
  var t, n = e.popper, r = e.popperRect, o = e.placement, i = e.variation, s = e.offsets, l = e.position, c = e.gpuAcceleration, u = e.adaptive, d = e.roundOffsets, f = e.isFixed, p = s.x, h = p === void 0 ? 0 : p, g = s.y, m = g === void 0 ? 0 : g, b = typeof d == "function" ? d({
    x: h,
    y: m
  }) : {
    x: h,
    y: m
  };
  h = b.x, m = b.y;
  var x = s.hasOwnProperty("x"), E = s.hasOwnProperty("y"), v = kn, w = Rn, S = window;
  if (u) {
    var T = Da(n), C = "clientHeight", k = "clientWidth";
    if (T === Wn(n) && (T = No(n), eo(T).position !== "static" && l === "absolute" && (C = "scrollHeight", k = "scrollWidth")), T = T, o === Rn || (o === kn || o === nr) && i === la) {
      w = tr;
      var P = f && T === S && S.visualViewport ? S.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        T[C]
      );
      m -= P - r.height, m *= c ? 1 : -1;
    }
    if (o === kn || (o === Rn || o === tr) && i === la) {
      v = nr;
      var y = f && T === S && S.visualViewport ? S.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        T[k]
      );
      h -= y - r.width, h *= c ? 1 : -1;
    }
  }
  var R = Object.assign({
    position: l
  }, u && RI), $ = d === !0 ? kI({
    x: h,
    y: m
  }, Wn(n)) : {
    x: h,
    y: m
  };
  if (h = $.x, m = $.y, c) {
    var A;
    return Object.assign({}, R, (A = {}, A[w] = E ? "0" : "", A[v] = x ? "0" : "", A.transform = (S.devicePixelRatio || 1) <= 1 ? "translate(" + h + "px, " + m + "px)" : "translate3d(" + h + "px, " + m + "px, 0)", A));
  }
  return Object.assign({}, R, (t = {}, t[w] = E ? m + "px" : "", t[v] = x ? h + "px" : "", t.transform = "", t));
}
function NI(e) {
  var t = e.state, n = e.options, r = n.gpuAcceleration, o = r === void 0 ? !0 : r, i = n.adaptive, s = i === void 0 ? !0 : i, l = n.roundOffsets, c = l === void 0 ? !0 : l, u = {
    placement: Ir(t.placement),
    variation: zi(t.placement),
    popper: t.elements.popper,
    popperRect: t.rects.popper,
    gpuAcceleration: o,
    isFixed: t.options.strategy === "fixed"
  };
  t.modifiersData.popperOffsets != null && (t.styles.popper = Object.assign({}, t.styles.popper, Ng(Object.assign({}, u, {
    offsets: t.modifiersData.popperOffsets,
    position: t.options.strategy,
    adaptive: s,
    roundOffsets: c
  })))), t.modifiersData.arrow != null && (t.styles.arrow = Object.assign({}, t.styles.arrow, Ng(Object.assign({}, u, {
    offsets: t.modifiersData.arrow,
    position: "absolute",
    adaptive: !1,
    roundOffsets: c
  })))), t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-placement": t.placement
  });
}
const II = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: NI,
  data: {}
};
var fl = {
  passive: !0
};
function $I(e) {
  var t = e.state, n = e.instance, r = e.options, o = r.scroll, i = o === void 0 ? !0 : o, s = r.resize, l = s === void 0 ? !0 : s, c = Wn(t.elements.popper), u = [].concat(t.scrollParents.reference, t.scrollParents.popper);
  return i && u.forEach(function(d) {
    d.addEventListener("scroll", n.update, fl);
  }), l && c.addEventListener("resize", n.update, fl), function() {
    i && u.forEach(function(d) {
      d.removeEventListener("scroll", n.update, fl);
    }), l && c.removeEventListener("resize", n.update, fl);
  };
}
const PI = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: function() {
  },
  effect: $I,
  data: {}
};
var _I = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function Ul(e) {
  return e.replace(/left|right|bottom|top/g, function(t) {
    return _I[t];
  });
}
var MI = {
  start: "end",
  end: "start"
};
function Ig(e) {
  return e.replace(/start|end/g, function(t) {
    return MI[t];
  });
}
function oh(e) {
  var t = Wn(e), n = t.pageXOffset, r = t.pageYOffset;
  return {
    scrollLeft: n,
    scrollTop: r
  };
}
function ih(e) {
  return Li(No(e)).left + oh(e).scrollLeft;
}
function AI(e, t) {
  var n = Wn(e), r = No(e), o = n.visualViewport, i = r.clientWidth, s = r.clientHeight, l = 0, c = 0;
  if (o) {
    i = o.width, s = o.height;
    var u = ux();
    (u || !u && t === "fixed") && (l = o.offsetLeft, c = o.offsetTop);
  }
  return {
    width: i,
    height: s,
    x: l + ih(e),
    y: c
  };
}
function DI(e) {
  var t, n = No(e), r = oh(e), o = (t = e.ownerDocument) == null ? void 0 : t.body, i = qo(n.scrollWidth, n.clientWidth, o ? o.scrollWidth : 0, o ? o.clientWidth : 0), s = qo(n.scrollHeight, n.clientHeight, o ? o.scrollHeight : 0, o ? o.clientHeight : 0), l = -r.scrollLeft + ih(e), c = -r.scrollTop;
  return eo(o || n).direction === "rtl" && (l += qo(n.clientWidth, o ? o.clientWidth : 0) - i), {
    width: i,
    height: s,
    x: l,
    y: c
  };
}
function sh(e) {
  var t = eo(e), n = t.overflow, r = t.overflowX, o = t.overflowY;
  return /auto|scroll|overlay|hidden/.test(n + o + r);
}
function mx(e) {
  return ["html", "body", "#document"].indexOf(Ar(e)) >= 0 ? e.ownerDocument.body : er(e) && sh(e) ? e : mx(lu(e));
}
function Hs(e, t) {
  var n;
  t === void 0 && (t = []);
  var r = mx(e), o = r === ((n = e.ownerDocument) == null ? void 0 : n.body), i = Wn(r), s = o ? [i].concat(i.visualViewport || [], sh(r) ? r : []) : r, l = t.concat(s);
  return o ? l : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    l.concat(Hs(lu(s)))
  );
}
function If(e) {
  return Object.assign({}, e, {
    left: e.x,
    top: e.y,
    right: e.x + e.width,
    bottom: e.y + e.height
  });
}
function BI(e, t) {
  var n = Li(e, !1, t === "fixed");
  return n.top = n.top + e.clientTop, n.left = n.left + e.clientLeft, n.bottom = n.top + e.clientHeight, n.right = n.left + e.clientWidth, n.width = e.clientWidth, n.height = e.clientHeight, n.x = n.left, n.y = n.top, n;
}
function $g(e, t, n) {
  return t === lx ? If(AI(e, n)) : Xo(t) ? BI(t, n) : If(DI(No(e)));
}
function FI(e) {
  var t = Hs(lu(e)), n = ["absolute", "fixed"].indexOf(eo(e).position) >= 0, r = n && er(e) ? Da(e) : e;
  return Xo(r) ? t.filter(function(o) {
    return Xo(o) && dx(o, r) && Ar(o) !== "body";
  }) : [];
}
function LI(e, t, n, r) {
  var o = t === "clippingParents" ? FI(e) : [].concat(t), i = [].concat(o, [n]), s = i[0], l = i.reduce(function(c, u) {
    var d = $g(e, u, r);
    return c.top = qo(d.top, c.top), c.right = cc(d.right, c.right), c.bottom = cc(d.bottom, c.bottom), c.left = qo(d.left, c.left), c;
  }, $g(e, s, r));
  return l.width = l.right - l.left, l.height = l.bottom - l.top, l.x = l.left, l.y = l.top, l;
}
function gx(e) {
  var t = e.reference, n = e.element, r = e.placement, o = r ? Ir(r) : null, i = r ? zi(r) : null, s = t.x + t.width / 2 - n.width / 2, l = t.y + t.height / 2 - n.height / 2, c;
  switch (o) {
    case Rn:
      c = {
        x: s,
        y: t.y - n.height
      };
      break;
    case tr:
      c = {
        x: s,
        y: t.y + t.height
      };
      break;
    case nr:
      c = {
        x: t.x + t.width,
        y: l
      };
      break;
    case kn:
      c = {
        x: t.x - n.width,
        y: l
      };
      break;
    default:
      c = {
        x: t.x,
        y: t.y
      };
  }
  var u = o ? rh(o) : null;
  if (u != null) {
    var d = u === "y" ? "height" : "width";
    switch (i) {
      case Bi:
        c[u] = c[u] - (t[d] / 2 - n[d] / 2);
        break;
      case la:
        c[u] = c[u] + (t[d] / 2 - n[d] / 2);
        break;
    }
  }
  return c;
}
function ca(e, t) {
  t === void 0 && (t = {});
  var n = t, r = n.placement, o = r === void 0 ? e.placement : r, i = n.strategy, s = i === void 0 ? e.strategy : i, l = n.boundary, c = l === void 0 ? iI : l, u = n.rootBoundary, d = u === void 0 ? lx : u, f = n.elementContext, p = f === void 0 ? bs : f, h = n.altBoundary, g = h === void 0 ? !1 : h, m = n.padding, b = m === void 0 ? 0 : m, x = px(typeof b != "number" ? b : hx(b, Aa)), E = p === bs ? sI : bs, v = e.rects.popper, w = e.elements[g ? E : p], S = LI(Xo(w) ? w : w.contextElement || No(e.elements.popper), c, d, s), T = Li(e.elements.reference), C = gx({
    reference: T,
    element: v,
    placement: o
  }), k = If(Object.assign({}, v, C)), P = p === bs ? k : T, y = {
    top: S.top - P.top + x.top,
    bottom: P.bottom - S.bottom + x.bottom,
    left: S.left - P.left + x.left,
    right: P.right - S.right + x.right
  }, R = e.modifiersData.offset;
  if (p === bs && R) {
    var $ = R[o];
    Object.keys(y).forEach(function(A) {
      var O = [nr, tr].indexOf(A) >= 0 ? 1 : -1, _ = [Rn, tr].indexOf(A) >= 0 ? "y" : "x";
      y[A] += $[_] * O;
    });
  }
  return y;
}
function zI(e, t) {
  t === void 0 && (t = {});
  var n = t, r = n.placement, o = n.boundary, i = n.rootBoundary, s = n.padding, l = n.flipVariations, c = n.allowedAutoPlacements, u = c === void 0 ? cx : c, d = zi(r), f = d ? l ? Rg : Rg.filter(function(g) {
    return zi(g) === d;
  }) : Aa, p = f.filter(function(g) {
    return u.indexOf(g) >= 0;
  });
  p.length === 0 && (p = f);
  var h = p.reduce(function(g, m) {
    return g[m] = ca(e, {
      placement: m,
      boundary: o,
      rootBoundary: i,
      padding: s
    })[Ir(m)], g;
  }, {});
  return Object.keys(h).sort(function(g, m) {
    return h[g] - h[m];
  });
}
function VI(e) {
  if (Ir(e) === eh)
    return [];
  var t = Ul(e);
  return [Ig(e), t, Ig(t)];
}
function jI(e) {
  var t = e.state, n = e.options, r = e.name;
  if (!t.modifiersData[r]._skip) {
    for (var o = n.mainAxis, i = o === void 0 ? !0 : o, s = n.altAxis, l = s === void 0 ? !0 : s, c = n.fallbackPlacements, u = n.padding, d = n.boundary, f = n.rootBoundary, p = n.altBoundary, h = n.flipVariations, g = h === void 0 ? !0 : h, m = n.allowedAutoPlacements, b = t.options.placement, x = Ir(b), E = x === b, v = c || (E || !g ? [Ul(b)] : VI(b)), w = [b].concat(v).reduce(function(Z, Q) {
      return Z.concat(Ir(Q) === eh ? zI(t, {
        placement: Q,
        boundary: d,
        rootBoundary: f,
        padding: u,
        flipVariations: g,
        allowedAutoPlacements: m
      }) : Q);
    }, []), S = t.rects.reference, T = t.rects.popper, C = /* @__PURE__ */ new Map(), k = !0, P = w[0], y = 0; y < w.length; y++) {
      var R = w[y], $ = Ir(R), A = zi(R) === Bi, O = [Rn, tr].indexOf($) >= 0, _ = O ? "width" : "height", I = ca(t, {
        placement: R,
        boundary: d,
        rootBoundary: f,
        altBoundary: p,
        padding: u
      }), D = O ? A ? nr : kn : A ? tr : Rn;
      S[_] > T[_] && (D = Ul(D));
      var z = Ul(D), B = [];
      if (i && B.push(I[$] <= 0), l && B.push(I[D] <= 0, I[z] <= 0), B.every(function(Z) {
        return Z;
      })) {
        P = R, k = !1;
        break;
      }
      C.set(R, B);
    }
    if (k)
      for (var F = g ? 3 : 1, L = function(Q) {
        var ee = w.find(function(te) {
          var q = C.get(te);
          if (q)
            return q.slice(0, Q).every(function(oe) {
              return oe;
            });
        });
        if (ee)
          return P = ee, "break";
      }, W = F; W > 0; W--) {
        var U = L(W);
        if (U === "break") break;
      }
    t.placement !== P && (t.modifiersData[r]._skip = !0, t.placement = P, t.reset = !0);
  }
}
const HI = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: jI,
  requiresIfExists: ["offset"],
  data: {
    _skip: !1
  }
};
function Pg(e, t, n) {
  return n === void 0 && (n = {
    x: 0,
    y: 0
  }), {
    top: e.top - t.height - n.y,
    right: e.right - t.width + n.x,
    bottom: e.bottom - t.height + n.y,
    left: e.left - t.width - n.x
  };
}
function _g(e) {
  return [Rn, nr, tr, kn].some(function(t) {
    return e[t] >= 0;
  });
}
function WI(e) {
  var t = e.state, n = e.name, r = t.rects.reference, o = t.rects.popper, i = t.modifiersData.preventOverflow, s = ca(t, {
    elementContext: "reference"
  }), l = ca(t, {
    altBoundary: !0
  }), c = Pg(s, r), u = Pg(l, o, i), d = _g(c), f = _g(u);
  t.modifiersData[n] = {
    referenceClippingOffsets: c,
    popperEscapeOffsets: u,
    isReferenceHidden: d,
    hasPopperEscaped: f
  }, t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-reference-hidden": d,
    "data-popper-escaped": f
  });
}
const UI = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: WI
};
function qI(e, t, n) {
  var r = Ir(e), o = [kn, Rn].indexOf(r) >= 0 ? -1 : 1, i = typeof n == "function" ? n(Object.assign({}, t, {
    placement: e
  })) : n, s = i[0], l = i[1];
  return s = s || 0, l = (l || 0) * o, [kn, nr].indexOf(r) >= 0 ? {
    x: l,
    y: s
  } : {
    x: s,
    y: l
  };
}
function YI(e) {
  var t = e.state, n = e.options, r = e.name, o = n.offset, i = o === void 0 ? [0, 0] : o, s = cx.reduce(function(d, f) {
    return d[f] = qI(f, t.rects, i), d;
  }, {}), l = s[t.placement], c = l.x, u = l.y;
  t.modifiersData.popperOffsets != null && (t.modifiersData.popperOffsets.x += c, t.modifiersData.popperOffsets.y += u), t.modifiersData[r] = s;
}
const GI = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: YI
};
function KI(e) {
  var t = e.state, n = e.name;
  t.modifiersData[n] = gx({
    reference: t.rects.reference,
    element: t.rects.popper,
    placement: t.placement
  });
}
const XI = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: KI,
  data: {}
};
function ZI(e) {
  return e === "x" ? "y" : "x";
}
function QI(e) {
  var t = e.state, n = e.options, r = e.name, o = n.mainAxis, i = o === void 0 ? !0 : o, s = n.altAxis, l = s === void 0 ? !1 : s, c = n.boundary, u = n.rootBoundary, d = n.altBoundary, f = n.padding, p = n.tether, h = p === void 0 ? !0 : p, g = n.tetherOffset, m = g === void 0 ? 0 : g, b = ca(t, {
    boundary: c,
    rootBoundary: u,
    padding: f,
    altBoundary: d
  }), x = Ir(t.placement), E = zi(t.placement), v = !E, w = rh(x), S = ZI(w), T = t.modifiersData.popperOffsets, C = t.rects.reference, k = t.rects.popper, P = typeof m == "function" ? m(Object.assign({}, t.rects, {
    placement: t.placement
  })) : m, y = typeof P == "number" ? {
    mainAxis: P,
    altAxis: P
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, P), R = t.modifiersData.offset ? t.modifiersData.offset[t.placement] : null, $ = {
    x: 0,
    y: 0
  };
  if (T) {
    if (i) {
      var A, O = w === "y" ? Rn : kn, _ = w === "y" ? tr : nr, I = w === "y" ? "height" : "width", D = T[w], z = D + b[O], B = D - b[_], F = h ? -k[I] / 2 : 0, L = E === Bi ? C[I] : k[I], W = E === Bi ? -k[I] : -C[I], U = t.elements.arrow, Z = h && U ? nh(U) : {
        width: 0,
        height: 0
      }, Q = t.modifiersData["arrow#persistent"] ? t.modifiersData["arrow#persistent"].padding : fx(), ee = Q[O], te = Q[_], q = js(0, C[I], Z[I]), oe = v ? C[I] / 2 - F - q - ee - y.mainAxis : L - q - ee - y.mainAxis, K = v ? -C[I] / 2 + F + q + te + y.mainAxis : W + q + te + y.mainAxis, ne = t.elements.arrow && Da(t.elements.arrow), j = ne ? w === "y" ? ne.clientTop || 0 : ne.clientLeft || 0 : 0, pe = (A = R == null ? void 0 : R[w]) != null ? A : 0, ce = D + oe - pe - j, be = D + K - pe, Ie = js(h ? cc(z, ce) : z, D, h ? qo(B, be) : B);
      T[w] = Ie, $[w] = Ie - D;
    }
    if (l) {
      var _e, $e = w === "x" ? Rn : kn, Ne = w === "x" ? tr : nr, Le = T[S], Re = S === "y" ? "height" : "width", V = Le + b[$e], J = Le - b[Ne], ie = [Rn, kn].indexOf(x) !== -1, X = (_e = R == null ? void 0 : R[S]) != null ? _e : 0, H = ie ? V : Le - C[Re] - k[Re] - X + y.altAxis, G = ie ? Le + C[Re] + k[Re] - X - y.altAxis : J, re = h && ie ? SI(H, Le, G) : js(h ? H : V, Le, h ? G : J);
      T[S] = re, $[S] = re - Le;
    }
    t.modifiersData[r] = $;
  }
}
const JI = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: QI,
  requiresIfExists: ["offset"]
};
function e$(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function t$(e) {
  return e === Wn(e) || !er(e) ? oh(e) : e$(e);
}
function n$(e) {
  var t = e.getBoundingClientRect(), n = Fi(t.width) / e.offsetWidth || 1, r = Fi(t.height) / e.offsetHeight || 1;
  return n !== 1 || r !== 1;
}
function r$(e, t, n) {
  n === void 0 && (n = !1);
  var r = er(t), o = er(t) && n$(t), i = No(t), s = Li(e, o, n), l = {
    scrollLeft: 0,
    scrollTop: 0
  }, c = {
    x: 0,
    y: 0
  };
  return (r || !r && !n) && ((Ar(t) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  sh(i)) && (l = t$(t)), er(t) ? (c = Li(t, !0), c.x += t.clientLeft, c.y += t.clientTop) : i && (c.x = ih(i))), {
    x: s.left + l.scrollLeft - c.x,
    y: s.top + l.scrollTop - c.y,
    width: s.width,
    height: s.height
  };
}
function o$(e) {
  var t = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), r = [];
  e.forEach(function(i) {
    t.set(i.name, i);
  });
  function o(i) {
    n.add(i.name);
    var s = [].concat(i.requires || [], i.requiresIfExists || []);
    s.forEach(function(l) {
      if (!n.has(l)) {
        var c = t.get(l);
        c && o(c);
      }
    }), r.push(i);
  }
  return e.forEach(function(i) {
    n.has(i.name) || o(i);
  }), r;
}
function i$(e) {
  var t = o$(e);
  return gI.reduce(function(n, r) {
    return n.concat(t.filter(function(o) {
      return o.phase === r;
    }));
  }, []);
}
function s$(e) {
  var t;
  return function() {
    return t || (t = new Promise(function(n) {
      Promise.resolve().then(function() {
        t = void 0, n(e());
      });
    })), t;
  };
}
function a$(e) {
  var t = e.reduce(function(n, r) {
    var o = n[r.name];
    return n[r.name] = o ? Object.assign({}, o, r, {
      options: Object.assign({}, o.options, r.options),
      data: Object.assign({}, o.data, r.data)
    }) : r, n;
  }, {});
  return Object.keys(t).map(function(n) {
    return t[n];
  });
}
var Mg = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function Ag() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return !t.some(function(r) {
    return !(r && typeof r.getBoundingClientRect == "function");
  });
}
function l$(e) {
  e === void 0 && (e = {});
  var t = e, n = t.defaultModifiers, r = n === void 0 ? [] : n, o = t.defaultOptions, i = o === void 0 ? Mg : o;
  return function(l, c, u) {
    u === void 0 && (u = i);
    var d = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, Mg, i),
      modifiersData: {},
      elements: {
        reference: l,
        popper: c
      },
      attributes: {},
      styles: {}
    }, f = [], p = !1, h = {
      state: d,
      setOptions: function(x) {
        var E = typeof x == "function" ? x(d.options) : x;
        m(), d.options = Object.assign({}, i, d.options, E), d.scrollParents = {
          reference: Xo(l) ? Hs(l) : l.contextElement ? Hs(l.contextElement) : [],
          popper: Hs(c)
        };
        var v = i$(a$([].concat(r, d.options.modifiers)));
        return d.orderedModifiers = v.filter(function(w) {
          return w.enabled;
        }), g(), h.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function() {
        if (!p) {
          var x = d.elements, E = x.reference, v = x.popper;
          if (Ag(E, v)) {
            d.rects = {
              reference: r$(E, Da(v), d.options.strategy === "fixed"),
              popper: nh(v)
            }, d.reset = !1, d.placement = d.options.placement, d.orderedModifiers.forEach(function(y) {
              return d.modifiersData[y.name] = Object.assign({}, y.data);
            });
            for (var w = 0; w < d.orderedModifiers.length; w++) {
              if (d.reset === !0) {
                d.reset = !1, w = -1;
                continue;
              }
              var S = d.orderedModifiers[w], T = S.fn, C = S.options, k = C === void 0 ? {} : C, P = S.name;
              typeof T == "function" && (d = T({
                state: d,
                options: k,
                name: P,
                instance: h
              }) || d);
            }
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: s$(function() {
        return new Promise(function(b) {
          h.forceUpdate(), b(d);
        });
      }),
      destroy: function() {
        m(), p = !0;
      }
    };
    if (!Ag(l, c))
      return h;
    h.setOptions(u).then(function(b) {
      !p && u.onFirstUpdate && u.onFirstUpdate(b);
    });
    function g() {
      d.orderedModifiers.forEach(function(b) {
        var x = b.name, E = b.options, v = E === void 0 ? {} : E, w = b.effect;
        if (typeof w == "function") {
          var S = w({
            state: d,
            name: x,
            instance: h,
            options: v
          }), T = function() {
          };
          f.push(S || T);
        }
      });
    }
    function m() {
      f.forEach(function(b) {
        return b();
      }), f = [];
    }
    return h;
  };
}
var c$ = [PI, XI, II, vI, GI, HI, JI, OI, UI], u$ = /* @__PURE__ */ l$({
  defaultModifiers: c$
});
function d$(e) {
  return typeof e == "function" ? e() : e;
}
const Vi = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    children: r,
    container: o,
    disablePortal: i = !1
  } = t, [s, l] = M.useState(null), c = pn(/* @__PURE__ */ M.isValidElement(r) ? ti(r) : null, n);
  if (Pr(() => {
    i || l(d$(o) || document.body);
  }, [o, i]), Pr(() => {
    if (s && !i)
      return yf(n, s), () => {
        yf(n, null);
      };
  }, [n, s, i]), i) {
    if (/* @__PURE__ */ M.isValidElement(r)) {
      const u = {
        ref: c
      };
      return /* @__PURE__ */ M.cloneElement(r, u);
    }
    return r;
  }
  return s && /* @__PURE__ */ z0.createPortal(r, s);
});
process.env.NODE_ENV !== "production" && (Vi.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: a.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Qr, a.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool
});
process.env.NODE_ENV !== "production" && (Vi.propTypes = Ma(Vi.propTypes));
function f$(e) {
  return Et("MuiPopper", e);
}
kt("MuiPopper", ["root"]);
function p$(e, t) {
  if (t === "ltr")
    return e;
  switch (e) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return e;
  }
}
function uc(e) {
  return typeof e == "function" ? e() : e;
}
function cu(e) {
  return e.nodeType !== void 0;
}
function h$(e) {
  return !cu(e);
}
const m$ = (e) => {
  const {
    classes: t
  } = e;
  return Mt({
    root: ["root"]
  }, f$, t);
}, g$ = {}, y$ = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    anchorEl: r,
    children: o,
    direction: i,
    disablePortal: s,
    modifiers: l,
    open: c,
    placement: u,
    popperOptions: d,
    popperRef: f,
    slotProps: p = {},
    slots: h = {},
    TransitionProps: g,
    // @ts-ignore internal logic
    ownerState: m,
    // prevent from spreading to DOM, it can come from the parent component e.g. Select.
    ...b
  } = t, x = M.useRef(null), E = pn(x, n), v = M.useRef(null), w = pn(v, f), S = M.useRef(w);
  Pr(() => {
    S.current = w;
  }, [w]), M.useImperativeHandle(f, () => v.current, []);
  const T = p$(u, i), [C, k] = M.useState(T), [P, y] = M.useState(uc(r));
  M.useEffect(() => {
    v.current && v.current.forceUpdate();
  }), M.useEffect(() => {
    r && y(uc(r));
  }, [r]), Pr(() => {
    if (!P || !c)
      return;
    const _ = (z) => {
      k(z.placement);
    };
    if (process.env.NODE_ENV !== "production" && P && cu(P) && P.nodeType === 1) {
      const z = P.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && z.top === 0 && z.left === 0 && z.right === 0 && z.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    let I = [{
      name: "preventOverflow",
      options: {
        altBoundary: s
      }
    }, {
      name: "flip",
      options: {
        altBoundary: s
      }
    }, {
      name: "onUpdate",
      enabled: !0,
      phase: "afterWrite",
      fn: ({
        state: z
      }) => {
        _(z);
      }
    }];
    l != null && (I = I.concat(l)), d && d.modifiers != null && (I = I.concat(d.modifiers));
    const D = u$(P, x.current, {
      placement: T,
      ...d,
      modifiers: I
    });
    return S.current(D), () => {
      D.destroy(), S.current(null);
    };
  }, [P, s, l, c, d, T]);
  const R = {
    placement: C
  };
  g !== null && (R.TransitionProps = g);
  const $ = m$(t), A = h.root ?? "div", O = vf({
    elementType: A,
    externalSlotProps: p.root,
    externalForwardedProps: b,
    additionalProps: {
      role: "tooltip",
      ref: E
    },
    ownerState: t,
    className: $.root
  });
  return /* @__PURE__ */ N(A, {
    ...O,
    children: typeof o == "function" ? o(R) : o
  });
}), yx = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    anchorEl: r,
    children: o,
    container: i,
    direction: s = "ltr",
    disablePortal: l = !1,
    keepMounted: c = !1,
    modifiers: u,
    open: d,
    placement: f = "bottom",
    popperOptions: p = g$,
    popperRef: h,
    style: g,
    transition: m = !1,
    slotProps: b = {},
    slots: x = {},
    ...E
  } = t, [v, w] = M.useState(!0), S = () => {
    w(!1);
  }, T = () => {
    w(!0);
  };
  if (!c && !d && (!m || v))
    return null;
  let C;
  if (i)
    C = i;
  else if (r) {
    const y = uc(r);
    C = y && cu(y) ? On(y).body : On(null).body;
  }
  const k = !d && c && (!m || v) ? "none" : void 0, P = m ? {
    in: d,
    onEnter: S,
    onExited: T
  } : void 0;
  return /* @__PURE__ */ N(Vi, {
    disablePortal: l,
    container: C,
    children: /* @__PURE__ */ N(y$, {
      anchorEl: r,
      direction: s,
      disablePortal: l,
      modifiers: u,
      ref: n,
      open: m ? !v : d,
      placement: f,
      popperOptions: p,
      popperRef: h,
      slotProps: b,
      slots: x,
      ...E,
      style: {
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: "fixed",
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display: k,
        ...g
      },
      TransitionProps: P,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (yx.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: Ro(a.oneOfType([Qr, a.object, a.func]), (e) => {
    if (e.open) {
      const t = uc(e.anchorEl);
      if (t && cu(t) && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || h$(t) && t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join(`
`));
    }
    return null;
  }),
  /**
   * Popper render function or node.
   */
  children: a.oneOfType([a.node, a.func]),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Qr, a.func]),
  /**
   * Direction of the text.
   * @default 'ltr'
   */
  direction: a.oneOf(["ltr", "rtl"]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: a.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: a.arrayOf(a.shape({
    data: a.object,
    effect: a.func,
    enabled: a.bool,
    fn: a.func,
    name: a.any,
    options: a.object,
    phase: a.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: a.arrayOf(a.string),
    requiresIfExists: a.arrayOf(a.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: a.shape({
    modifiers: a.array,
    onFirstUpdate: a.func,
    placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: a.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: oo,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: a.shape({
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    root: a.elementType
  }),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: a.bool
});
const b$ = Me(yx, {
  name: "MuiPopper",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), uu = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = ou(), o = Nt({
    props: t,
    name: "MuiPopper"
  }), {
    anchorEl: i,
    component: s,
    components: l,
    componentsProps: c,
    container: u,
    disablePortal: d,
    keepMounted: f,
    modifiers: p,
    open: h,
    placement: g,
    popperOptions: m,
    popperRef: b,
    transition: x,
    slots: E,
    slotProps: v,
    ...w
  } = o, S = (E == null ? void 0 : E.root) ?? (l == null ? void 0 : l.Root), T = {
    anchorEl: i,
    container: u,
    disablePortal: d,
    keepMounted: f,
    modifiers: p,
    open: h,
    placement: g,
    popperOptions: m,
    popperRef: b,
    transition: x,
    ...w
  };
  return /* @__PURE__ */ N(b$, {
    as: s,
    direction: r ? "rtl" : "ltr",
    slots: {
      root: S
    },
    slotProps: v ?? c,
    ...T,
    ref: n
  });
});
process.env.NODE_ENV !== "production" && (uu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: a.oneOfType([Qr, a.object, a.func]),
  /**
   * Popper render function or node.
   */
  children: a.oneOfType([a.node, a.func]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  components: a.shape({
    Root: a.elementType
  }),
  /**
   * The props used for each slot inside the Popper.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  componentsProps: a.shape({
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Qr, a.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: a.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: a.arrayOf(a.shape({
    data: a.object,
    effect: a.func,
    enabled: a.bool,
    fn: a.func,
    name: a.any,
    options: a.object,
    phase: a.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: a.arrayOf(a.string),
    requiresIfExists: a.arrayOf(a.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: a.shape({
    modifiers: a.array,
    onFirstUpdate: a.func,
    placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: a.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: oo,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: a.shape({
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: a.bool
});
function v$(e) {
  return Et("MuiTooltip", e);
}
const zt = kt("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]);
function x$(e) {
  return Math.round(e * 1e5) / 1e5;
}
const w$ = (e) => {
  const {
    classes: t,
    disableInteractive: n,
    arrow: r,
    touch: o,
    placement: i
  } = e, s = {
    popper: ["popper", !n && "popperInteractive", r && "popperArrow"],
    tooltip: ["tooltip", r && "tooltipArrow", o && "touch", `tooltipPlacement${Ee(i.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return Mt(s, v$, t);
}, S$ = Me(uu, {
  name: "MuiTooltip",
  slot: "Popper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.popper, !n.disableInteractive && t.popperInteractive, n.arrow && t.popperArrow, !n.open && t.popperClose];
  }
})(et(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.tooltip,
  pointerEvents: "none",
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableInteractive,
    style: {
      pointerEvents: "auto"
    }
  }, {
    props: ({
      open: t
    }) => !t,
    style: {
      pointerEvents: "none"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      [`&[data-popper-placement*="bottom"] .${zt.arrow}`]: {
        top: 0,
        marginTop: "-0.71em",
        "&::before": {
          transformOrigin: "0 100%"
        }
      },
      [`&[data-popper-placement*="top"] .${zt.arrow}`]: {
        bottom: 0,
        marginBottom: "-0.71em",
        "&::before": {
          transformOrigin: "100% 0"
        }
      },
      [`&[data-popper-placement*="right"] .${zt.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "100% 100%"
        }
      },
      [`&[data-popper-placement*="left"] .${zt.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "0 0"
        }
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${zt.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${zt.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${zt.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${zt.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }]
}))), E$ = Me("div", {
  name: "MuiTooltip",
  slot: "Tooltip",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.tooltip, n.touch && t.touch, n.arrow && t.tooltipArrow, t[`tooltipPlacement${Ee(n.placement.split("-")[0])}`]];
  }
})(et(({
  theme: e
}) => ({
  backgroundColor: e.vars ? e.vars.palette.Tooltip.bg : rn(e.palette.grey[700], 0.92),
  borderRadius: (e.vars || e).shape.borderRadius,
  color: (e.vars || e).palette.common.white,
  fontFamily: e.typography.fontFamily,
  padding: "4px 8px",
  fontSize: e.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: "break-word",
  fontWeight: e.typography.fontWeightMedium,
  [`.${zt.popper}[data-popper-placement*="left"] &`]: {
    transformOrigin: "right center"
  },
  [`.${zt.popper}[data-popper-placement*="right"] &`]: {
    transformOrigin: "left center"
  },
  [`.${zt.popper}[data-popper-placement*="top"] &`]: {
    transformOrigin: "center bottom",
    marginBottom: "14px"
  },
  [`.${zt.popper}[data-popper-placement*="bottom"] &`]: {
    transformOrigin: "center top",
    marginTop: "14px"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      position: "relative",
      margin: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      padding: "8px 16px",
      fontSize: e.typography.pxToRem(14),
      lineHeight: `${x$(16 / 14)}em`,
      fontWeight: e.typography.fontWeightRegular
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl,
    style: {
      [`.${zt.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "14px"
      },
      [`.${zt.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl && t.touch,
    style: {
      [`.${zt.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "24px"
      },
      [`.${zt.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl,
    style: {
      [`.${zt.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "14px"
      },
      [`.${zt.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl && t.touch,
    style: {
      [`.${zt.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "24px"
      },
      [`.${zt.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${zt.popper}[data-popper-placement*="top"] &`]: {
        marginBottom: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${zt.popper}[data-popper-placement*="bottom"] &`]: {
        marginTop: "24px"
      }
    }
  }]
}))), T$ = Me("span", {
  name: "MuiTooltip",
  slot: "Arrow",
  overridesResolver: (e, t) => t.arrow
})(et(({
  theme: e
}) => ({
  overflow: "hidden",
  position: "absolute",
  width: "1em",
  height: "0.71em",
  boxSizing: "border-box",
  color: e.vars ? e.vars.palette.Tooltip.bg : rn(e.palette.grey[700], 0.9),
  "&::before": {
    content: '""',
    margin: "auto",
    display: "block",
    width: "100%",
    height: "100%",
    backgroundColor: "currentColor",
    transform: "rotate(45deg)"
  }
})));
let pl = !1;
const Dg = new Tv();
let vs = {
  x: 0,
  y: 0
};
function hl(e, t) {
  return (n, ...r) => {
    t && t(n, ...r), e(n, ...r);
  };
}
const ah = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiTooltip"
  }), {
    arrow: o = !1,
    children: i,
    classes: s,
    components: l = {},
    componentsProps: c = {},
    describeChild: u = !1,
    disableFocusListener: d = !1,
    disableHoverListener: f = !1,
    disableInteractive: p = !1,
    disableTouchListener: h = !1,
    enterDelay: g = 100,
    enterNextDelay: m = 0,
    enterTouchDelay: b = 700,
    followCursor: x = !1,
    id: E,
    leaveDelay: v = 0,
    leaveTouchDelay: w = 1500,
    onClose: S,
    onOpen: T,
    open: C,
    placement: k = "bottom",
    PopperComponent: P,
    PopperProps: y = {},
    slotProps: R = {},
    slots: $ = {},
    title: A,
    TransitionComponent: O,
    TransitionProps: _,
    ...I
  } = r, D = /* @__PURE__ */ M.isValidElement(i) ? i : /* @__PURE__ */ N("span", {
    children: i
  }), z = io(), B = ou(), [F, L] = M.useState(), [W, U] = M.useState(null), Z = M.useRef(!1), Q = p || x, ee = Si(), te = Si(), q = Si(), oe = Si(), [K, ne] = Sv({
    controlled: C,
    default: !1,
    name: "Tooltip",
    state: "open"
  });
  let j = K;
  if (process.env.NODE_ENV !== "production") {
    const {
      current: Pe
    } = M.useRef(C !== void 0);
    M.useEffect(() => {
      F && F.disabled && !Pe && A !== "" && F.tagName.toLowerCase() === "button" && console.warn(["MUI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join(`
`));
    }, [A, F, Pe]);
  }
  const pe = Bp(E), ce = M.useRef(), be = Nr(() => {
    ce.current !== void 0 && (document.body.style.WebkitUserSelect = ce.current, ce.current = void 0), oe.clear();
  });
  M.useEffect(() => be, [be]);
  const Ie = (Pe) => {
    Dg.clear(), pl = !0, ne(!0), T && !j && T(Pe);
  }, _e = Nr(
    /**
     * @param {React.SyntheticEvent | Event} event
     */
    (Pe) => {
      Dg.start(800 + v, () => {
        pl = !1;
      }), ne(!1), S && j && S(Pe), ee.start(z.transitions.duration.shortest, () => {
        Z.current = !1;
      });
    }
  ), $e = (Pe) => {
    Z.current && Pe.type !== "touchstart" || (F && F.removeAttribute("title"), te.clear(), q.clear(), g || pl && m ? te.start(pl ? m : g, () => {
      Ie(Pe);
    }) : Ie(Pe));
  }, Ne = (Pe) => {
    te.clear(), q.start(v, () => {
      _e(Pe);
    });
  }, [, Le] = M.useState(!1), Re = (Pe) => {
    ic(Pe.target) || (Le(!1), Ne(Pe));
  }, V = (Pe) => {
    F || L(Pe.currentTarget), ic(Pe.target) && (Le(!0), $e(Pe));
  }, J = (Pe) => {
    Z.current = !0;
    const jt = D.props;
    jt.onTouchStart && jt.onTouchStart(Pe);
  }, ie = (Pe) => {
    J(Pe), q.clear(), ee.clear(), be(), ce.current = document.body.style.WebkitUserSelect, document.body.style.WebkitUserSelect = "none", oe.start(b, () => {
      document.body.style.WebkitUserSelect = ce.current, $e(Pe);
    });
  }, X = (Pe) => {
    D.props.onTouchEnd && D.props.onTouchEnd(Pe), be(), q.start(w, () => {
      _e(Pe);
    });
  };
  M.useEffect(() => {
    if (!j)
      return;
    function Pe(jt) {
      jt.key === "Escape" && _e(jt);
    }
    return document.addEventListener("keydown", Pe), () => {
      document.removeEventListener("keydown", Pe);
    };
  }, [_e, j]);
  const H = pn(ti(D), L, n);
  !A && A !== 0 && (j = !1);
  const G = M.useRef(), re = (Pe) => {
    const jt = D.props;
    jt.onMouseMove && jt.onMouseMove(Pe), vs = {
      x: Pe.clientX,
      y: Pe.clientY
    }, G.current && G.current.update();
  }, he = {}, me = typeof A == "string";
  u ? (he.title = !j && me && !f ? A : null, he["aria-describedby"] = j ? pe : null) : (he["aria-label"] = me ? A : null, he["aria-labelledby"] = j && !me ? pe : null);
  const le = {
    ...he,
    ...I,
    ...D.props,
    className: Oe(I.className, D.props.className),
    onTouchStart: J,
    ref: H,
    ...x ? {
      onMouseMove: re
    } : {}
  };
  process.env.NODE_ENV !== "production" && (le["data-mui-internal-clone-element"] = !0, M.useEffect(() => {
    F && !F.getAttribute("data-mui-internal-clone-element") && console.error(["MUI: The `children` component of the Tooltip is not forwarding its props correctly.", "Please make sure that props are spread on the same element that the ref is applied to."].join(`
`));
  }, [F]));
  const se = {};
  h || (le.onTouchStart = ie, le.onTouchEnd = X), f || (le.onMouseOver = hl($e, le.onMouseOver), le.onMouseLeave = hl(Ne, le.onMouseLeave), Q || (se.onMouseOver = $e, se.onMouseLeave = Ne)), d || (le.onFocus = hl(V, le.onFocus), le.onBlur = hl(Re, le.onBlur), Q || (se.onFocus = V, se.onBlur = Re)), process.env.NODE_ENV !== "production" && D.props.title && console.error(["MUI: You have provided a `title` prop to the child of <Tooltip />.", `Remove this title prop \`${D.props.title}\` or the Tooltip component.`].join(`
`));
  const ae = {
    ...r,
    isRtl: B,
    arrow: o,
    disableInteractive: Q,
    placement: k,
    PopperComponentProp: P,
    touch: Z.current
  }, ge = typeof R.popper == "function" ? R.popper(ae) : R.popper, Ce = M.useMemo(() => {
    var jt, At;
    let Pe = [{
      name: "arrow",
      enabled: !!W,
      options: {
        element: W,
        padding: 4
      }
    }];
    return (jt = y.popperOptions) != null && jt.modifiers && (Pe = Pe.concat(y.popperOptions.modifiers)), (At = ge == null ? void 0 : ge.popperOptions) != null && At.modifiers && (Pe = Pe.concat(ge.popperOptions.modifiers)), {
      ...y.popperOptions,
      ...ge == null ? void 0 : ge.popperOptions,
      modifiers: Pe
    };
  }, [W, y.popperOptions, ge == null ? void 0 : ge.popperOptions]), ue = w$(ae), Te = typeof R.transition == "function" ? R.transition(ae) : R.transition, Be = {
    slots: {
      popper: l.Popper,
      transition: l.Transition ?? O,
      tooltip: l.Tooltip,
      arrow: l.Arrow,
      ...$
    },
    slotProps: {
      arrow: R.arrow ?? c.arrow,
      popper: {
        ...y,
        ...ge ?? c.popper
      },
      // resolvedPopperProps can be spread because it's already an object
      tooltip: R.tooltip ?? c.tooltip,
      transition: {
        ..._,
        ...Te ?? c.transition
      }
    }
  }, [We, Ke] = pt("popper", {
    elementType: S$,
    externalForwardedProps: Be,
    ownerState: ae,
    className: Oe(ue.popper, y == null ? void 0 : y.className)
  }), [$t, ht] = pt("transition", {
    elementType: aa,
    externalForwardedProps: Be,
    ownerState: ae
  }), [Pt, ze] = pt("tooltip", {
    elementType: E$,
    className: ue.tooltip,
    externalForwardedProps: Be,
    ownerState: ae
  }), [ot, xt] = pt("arrow", {
    elementType: T$,
    className: ue.arrow,
    externalForwardedProps: Be,
    ownerState: ae,
    ref: U
  });
  return /* @__PURE__ */ Se(M.Fragment, {
    children: [/* @__PURE__ */ M.cloneElement(D, le), /* @__PURE__ */ N(We, {
      as: P ?? uu,
      placement: k,
      anchorEl: x ? {
        getBoundingClientRect: () => ({
          top: vs.y,
          left: vs.x,
          right: vs.x,
          bottom: vs.y,
          width: 0,
          height: 0
        })
      } : F,
      popperRef: G,
      open: F ? j : !1,
      id: pe,
      transition: !0,
      ...se,
      ...Ke,
      popperOptions: Ce,
      children: ({
        TransitionProps: Pe
      }) => /* @__PURE__ */ N($t, {
        timeout: z.transitions.duration.shorter,
        ...Pe,
        ...ht,
        children: /* @__PURE__ */ Se(Pt, {
          ...ze,
          children: [A, o ? /* @__PURE__ */ N(ot, {
            ...xt
          }) : null]
        })
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (ah.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: a.bool,
  /**
   * Tooltip reference element.
   */
  children: ko.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Arrow: a.elementType,
    Popper: a.elementType,
    Tooltip: a.elementType,
    Transition: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    arrow: a.object,
    popper: a.object,
    tooltip: a.object,
    transition: a.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: a.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: a.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: a.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: a.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: a.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: a.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: a.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: a.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: a.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: a.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: a.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: a.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: a.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The component used for the popper.
   * @deprecated use the `slots.popper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PopperComponent: a.elementType,
  /**
   * Props applied to the [`Popper`](https://mui.com/material-ui/api/popper/) element.
   * @deprecated use the `slotProps.popper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PopperProps: a.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    arrow: a.oneOfType([a.func, a.object]),
    popper: a.oneOfType([a.func, a.object]),
    tooltip: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    arrow: a.elementType,
    popper: a.elementType,
    tooltip: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: a.node,
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: a.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object
});
function C$(e) {
  return Et("MuiTypography", e);
}
kt("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]);
const O$ = {
  primary: !0,
  secondary: !0,
  error: !0,
  info: !0,
  success: !0,
  warning: !0,
  textPrimary: !0,
  textSecondary: !0,
  textDisabled: !0
}, R$ = wk(), k$ = (e) => {
  const {
    align: t,
    gutterBottom: n,
    noWrap: r,
    paragraph: o,
    variant: i,
    classes: s
  } = e, l = {
    root: ["root", i, e.align !== "inherit" && `align${Ee(t)}`, n && "gutterBottom", r && "noWrap", o && "paragraph"]
  };
  return Mt(l, C$, s);
}, N$ = Me("span", {
  name: "MuiTypography",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.variant && t[n.variant], n.align !== "inherit" && t[`align${Ee(n.align)}`], n.noWrap && t.noWrap, n.gutterBottom && t.gutterBottom, n.paragraph && t.paragraph];
  }
})(et(({
  theme: e
}) => {
  var t;
  return {
    margin: 0,
    variants: [{
      props: {
        variant: "inherit"
      },
      style: {
        // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
        font: "inherit",
        lineHeight: "inherit",
        letterSpacing: "inherit"
      }
    }, ...Object.entries(e.typography).filter(([n, r]) => n !== "inherit" && r && typeof r == "object").map(([n, r]) => ({
      props: {
        variant: n
      },
      style: r
    })), ...Object.entries(e.palette).filter(bn()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        color: (e.vars || e).palette[n].main
      }
    })), ...Object.entries(((t = e.palette) == null ? void 0 : t.text) || {}).filter(([, n]) => typeof n == "string").map(([n]) => ({
      props: {
        color: `text${Ee(n)}`
      },
      style: {
        color: (e.vars || e).palette.text[n]
      }
    })), {
      props: ({
        ownerState: n
      }) => n.align !== "inherit",
      style: {
        textAlign: "var(--Typography-textAlign)"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.noWrap,
      style: {
        overflow: "hidden",
        textOverflow: "ellipsis",
        whiteSpace: "nowrap"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.gutterBottom,
      style: {
        marginBottom: "0.35em"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.paragraph,
      style: {
        marginBottom: 16
      }
    }]
  };
})), Bg = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  inherit: "p"
}, bx = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    color: r,
    ...o
  } = Nt({
    props: t,
    name: "MuiTypography"
  }), i = !O$[r], s = R$({
    ...o,
    ...i && {
      color: r
    }
  }), {
    align: l = "inherit",
    className: c,
    component: u,
    gutterBottom: d = !1,
    noWrap: f = !1,
    paragraph: p = !1,
    variant: h = "body1",
    variantMapping: g = Bg,
    ...m
  } = s, b = {
    ...s,
    align: l,
    color: r,
    className: c,
    component: u,
    gutterBottom: d,
    noWrap: f,
    paragraph: p,
    variant: h,
    variantMapping: g
  }, x = u || (p ? "p" : g[h] || Bg[h]) || "span", E = k$(b);
  return /* @__PURE__ */ N(N$, {
    as: x,
    ref: n,
    className: Oe(E.root, c),
    ...m,
    ownerState: b,
    style: {
      ...l !== "inherit" && {
        "--Typography-textAlign": l
      },
      ...m.style
    }
  });
});
process.env.NODE_ENV !== "production" && (bx.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the component.
   * @default 'inherit'
   */
  align: a.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "success", "error", "info", "warning", "textPrimary", "textSecondary", "textDisabled"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */
  gutterBottom: a.bool,
  /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */
  noWrap: a.bool,
  /**
   * If `true`, the element will be a paragraph element.
   * @default false
   * @deprecated Use the `component` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  paragraph: a.bool,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Applies the theme typography styles.
   * @default 'body1'
   */
  variant: a.oneOfType([a.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), a.string]),
  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */
  variantMapping: a.object
});
function du({
  isTitle: e = !1,
  isLabel: t = !1,
  titleLevel: n = "h6",
  textColor: r = "auto",
  bold: o = !1,
  ellipsis: i = !1
}) {
  return {
    textCommonStyles: ct(
      () => ({
        typography: e ? n : t ? "caption" : "body1",
        fontWeight: e || t || o ? "bold" : "normal",
        color: (l) => r === "error" ? l.palette.error.main : r === "primary" ? l.palette.primary.main : r === "success" ? l.palette.success.main : r === "disabled" ? l.palette.action.disabled : "inherit",
        ...i ? {
          width: "100%",
          whiteSpace: "nowrap",
          overflow: "hidden",
          textOverflow: "ellipsis"
        } : {}
      }),
      [e, t, r, o, i]
    )
  };
}
const In = we(
  ({
    text: e,
    isLabel: t,
    isTitle: n = !1,
    titleLevel: r = "h6",
    ellipsis: o = !1,
    textColor: i = "auto",
    bold: s,
    sx: l,
    ...c
  }) => {
    const { textCommonStyles: u } = du({
      isTitle: n,
      isLabel: t,
      titleLevel: r,
      textColor: i,
      bold: s,
      ellipsis: o
    }), d = ct(
      () => /* @__PURE__ */ N(
        bx,
        {
          className: "VenomousUI-Text",
          component: "div",
          variant: n ? r : t ? "caption" : "body1",
          noWrap: o,
          sx: {
            ...u,
            ...l
          },
          ...c,
          children: e
        }
      ),
      [e, n, r, o, l, c, u]
    );
    return o ? /* @__PURE__ */ N(fu, { tooltip: e, hide: !o, children: d }) : d;
  }
);
In.displayName = "Text";
const fu = we(({ children: e, tooltip: t, hide: n }) => /* @__PURE__ */ N(
  ah,
  {
    className: "VenomousUI-Tooltip",
    arrow: !0,
    title: /* @__PURE__ */ N(In, { isLabel: !0, bold: !0, text: t, textColor: "auto" }),
    disableHoverListener: n,
    children: e,
    slots: {
      transition: Ko
    },
    slotProps: {
      transition: { timeout: 400 }
    }
  }
));
fu.displayName = "Tooltip";
const vx = we(
  ({
    children: e,
    position: t = "bottom-right",
    color: n = "error",
    icon: r,
    iconWidth: o = 16,
    iconTooltip: i = ""
  }) => {
    const { paperCommonStyles: s } = as(), { badgePlacementAttributes: l, badgeColor: c } = qp({ position: t, color: n }), { vertical: u, horizontal: d, transform: f } = l;
    return /* @__PURE__ */ N(
      su,
      {
        className: "VenomousUI-IconBadge",
        variant: "standard",
        invisible: !r,
        anchorOrigin: { vertical: u, horizontal: d },
        badgeContent: /* @__PURE__ */ N(fu, { tooltip: i, hide: !i, children: /* @__PURE__ */ N(Mr, { icon: r, width: o, color: "auto" }) }),
        sx: {
          ".MuiBadge-badge": {
            color: c,
            fontWeight: "bold",
            ...s,
            transform: f,
            p: 0,
            minHeight: Number(o) + 4,
            minWidth: Number(o) + 4,
            height: Number(o) + 4,
            width: Number(o) + 4,
            borderRadius: "50%",
            border: 1,
            borderColor: c
          }
        },
        children: e
      }
    );
  }
);
vx.displayName = "IconBadge";
const I$ = we(
  ({ children: e, position: t = "top-right", color: n = "primary", value: r = 0, max: o = 99, min: i = 0 }) => {
    const { badgePlacementAttributes: s, badgeColor: l } = qp({ position: t, color: n }), { vertical: c, horizontal: u } = s, d = ct(() => r > o ? `${o}+` : String(r), [r, o]), f = ct(() => r > i, [r, i]);
    return /* @__PURE__ */ N(
      su,
      {
        className: "VenomousUI-NumberTextBadge",
        variant: "standard",
        invisible: !f,
        anchorOrigin: { vertical: c, horizontal: u },
        badgeContent: /* @__PURE__ */ N(fu, { tooltip: String(r), hide: r <= o, children: /* @__PURE__ */ N("span", { children: d }) }),
        sx: {
          ".MuiBadge-badge": {
            color: "#fff !important",
            backgroundColor: l,
            fontWeight: "bold"
          }
        },
        children: e
      }
    );
  }
);
I$.displayName = "NumberTextBadge";
const $$ = we(
  ({
    width: e = 28,
    src: t,
    alt: n,
    onClick: r,
    sx: o,
    badgeColor: i = "primary",
    badgePosition: s = "bottom-right",
    withDotBadge: l = !1,
    dotBadgeIsVisible: c = !0,
    withIconBadge: u = !1,
    iconBadgeIcon: d = ""
  }) => {
    const f = ct(
      () => /* @__PURE__ */ N(
        Uv,
        {
          className: "VenomousUI-Avatar",
          src: t,
          alt: n,
          sx: {
            width: e,
            height: e,
            border: 1,
            borderColor: "divider",
            cursor: r ? "pointer" : "default",
            ...o
          },
          onClick: r
        }
      ),
      [e, t, n, r, o]
    );
    return l ? /* @__PURE__ */ N(qv, { isVisible: c, position: s, color: i, children: f }) : u ? /* @__PURE__ */ N(vx, { icon: d, position: s, color: i, children: f }) : f;
  }
);
$$.displayName = "Avatar";
const P$ = we(({ width: e = 100, text: t = "", sx: n }) => /* @__PURE__ */ Se(Jr, { className: "VenomousUI-Blank", sx: { width: e, ...n }, children: [
  /* @__PURE__ */ N(Mr, { width: e, icon: "solar:box-linear", color: "disabled" }),
  /* @__PURE__ */ N(In, { text: t, isTitle: !0, titleLevel: "h6", textColor: "disabled", textAlign: "center" })
] }));
P$.displayName = "Blank";
function _$(e, t) {
  const n = e.charCodeAt(2);
  return e[0] === "o" && e[1] === "n" && n >= 65 && n <= 90 && typeof t == "function";
}
function lh(e, t) {
  if (!e)
    return t;
  function n(s, l) {
    const c = {};
    return Object.keys(l).forEach((u) => {
      _$(u, l[u]) && typeof s[u] == "function" && (c[u] = (...d) => {
        s[u](...d), l[u](...d);
      });
    }), c;
  }
  if (typeof e == "function" || typeof t == "function")
    return (s) => {
      const l = typeof t == "function" ? t(s) : t, c = typeof e == "function" ? e({
        ...s,
        ...l
      }) : e, u = Oe(s == null ? void 0 : s.className, l == null ? void 0 : l.className, c == null ? void 0 : c.className), d = n(c, l);
      return {
        ...l,
        ...c,
        ...d,
        ...!!u && {
          className: u
        },
        ...(l == null ? void 0 : l.style) && (c == null ? void 0 : c.style) && {
          style: {
            ...l.style,
            ...c.style
          }
        },
        ...(l == null ? void 0 : l.sx) && (c == null ? void 0 : c.sx) && {
          sx: [...Array.isArray(l.sx) ? l.sx : [l.sx], ...Array.isArray(c.sx) ? c.sx : [c.sx]]
        }
      };
    };
  const r = t, o = n(e, r), i = Oe(r == null ? void 0 : r.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...o,
    ...!!i && {
      className: i
    },
    ...(r == null ? void 0 : r.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...r.style,
        ...e.style
      }
    },
    ...(r == null ? void 0 : r.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(r.sx) ? r.sx : [r.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
class dc {
  constructor() {
    lo(this, "mountEffect", () => {
      this.shouldMount && !this.didMount && this.ref.current !== null && (this.didMount = !0, this.mounted.resolve());
    });
    this.ref = {
      current: null
    }, this.mounted = null, this.didMount = !1, this.shouldMount = !1, this.setShouldMount = null;
  }
  /** React ref to the ripple instance */
  /** If the ripple component should be mounted */
  /** Promise that resolves when the ripple component is mounted */
  /** If the ripple component has been mounted */
  /** React state hook setter */
  static create() {
    return new dc();
  }
  static use() {
    const t = Ev(dc.create).current, [n, r] = M.useState(!1);
    return t.shouldMount = n, t.setShouldMount = r, M.useEffect(t.mountEffect, [n]), t;
  }
  mount() {
    return this.mounted || (this.mounted = A$(), this.shouldMount = !0, this.setShouldMount(this.shouldMount)), this.mounted;
  }
  /* Ripple API */
  start(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.start(...t);
    });
  }
  stop(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.stop(...t);
    });
  }
  pulsate(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.pulsate(...t);
    });
  }
}
function M$() {
  return dc.use();
}
function A$() {
  let e, t;
  const n = new Promise((r, o) => {
    e = r, t = o;
  });
  return n.resolve = e, n.reject = t, n;
}
function xx(e) {
  const {
    className: t,
    classes: n,
    pulsate: r = !1,
    rippleX: o,
    rippleY: i,
    rippleSize: s,
    in: l,
    onExited: c,
    timeout: u
  } = e, [d, f] = M.useState(!1), p = Oe(t, n.ripple, n.rippleVisible, r && n.ripplePulsate), h = {
    width: s,
    height: s,
    top: -(s / 2) + i,
    left: -(s / 2) + o
  }, g = Oe(n.child, d && n.childLeaving, r && n.childPulsate);
  return !l && !d && f(!0), M.useEffect(() => {
    if (!l && c != null) {
      const m = setTimeout(c, u);
      return () => {
        clearTimeout(m);
      };
    }
  }, [c, l, u]), /* @__PURE__ */ N("span", {
    className: p,
    style: h,
    children: /* @__PURE__ */ N("span", {
      className: g
    })
  });
}
process.env.NODE_ENV !== "production" && (xx.propTypes = {
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object.isRequired,
  className: a.string,
  /**
   * @ignore - injected from TransitionGroup
   */
  in: a.bool,
  /**
   * @ignore - injected from TransitionGroup
   */
  onExited: a.func,
  /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */
  pulsate: a.bool,
  /**
   * Diameter of the ripple.
   */
  rippleSize: a.number,
  /**
   * Horizontal position of the ripple center.
   */
  rippleX: a.number,
  /**
   * Vertical position of the ripple center.
   */
  rippleY: a.number,
  /**
   * exit delay
   */
  timeout: a.number.isRequired
});
const Gn = kt("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), $f = 550, D$ = 80, B$ = Oo`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`, F$ = Oo`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`, L$ = Oo`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`, z$ = Me("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), V$ = Me(xx, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})`
  opacity: 0;
  position: absolute;

  &.${Gn.rippleVisible} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${B$};
    animation-duration: ${$f}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  &.${Gn.ripplePulsate} {
    animation-duration: ${({
  theme: e
}) => e.transitions.duration.shorter}ms;
  }

  & .${Gn.child} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${Gn.childLeaving} {
    opacity: 0;
    animation-name: ${F$};
    animation-duration: ${$f}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  & .${Gn.childPulsate} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${L$};
    animation-duration: 2500ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`, wx = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiTouchRipple"
  }), {
    center: o = !1,
    classes: i = {},
    className: s,
    ...l
  } = r, [c, u] = M.useState([]), d = M.useRef(0), f = M.useRef(null);
  M.useEffect(() => {
    f.current && (f.current(), f.current = null);
  }, [c]);
  const p = M.useRef(!1), h = Si(), g = M.useRef(null), m = M.useRef(null), b = M.useCallback((w) => {
    const {
      pulsate: S,
      rippleX: T,
      rippleY: C,
      rippleSize: k,
      cb: P
    } = w;
    u((y) => [...y, /* @__PURE__ */ N(V$, {
      classes: {
        ripple: Oe(i.ripple, Gn.ripple),
        rippleVisible: Oe(i.rippleVisible, Gn.rippleVisible),
        ripplePulsate: Oe(i.ripplePulsate, Gn.ripplePulsate),
        child: Oe(i.child, Gn.child),
        childLeaving: Oe(i.childLeaving, Gn.childLeaving),
        childPulsate: Oe(i.childPulsate, Gn.childPulsate)
      },
      timeout: $f,
      pulsate: S,
      rippleX: T,
      rippleY: C,
      rippleSize: k
    }, d.current)]), d.current += 1, f.current = P;
  }, [i]), x = M.useCallback((w = {}, S = {}, T = () => {
  }) => {
    const {
      pulsate: C = !1,
      center: k = o || S.pulsate,
      fakeElement: P = !1
      // For test purposes
    } = S;
    if ((w == null ? void 0 : w.type) === "mousedown" && p.current) {
      p.current = !1;
      return;
    }
    (w == null ? void 0 : w.type) === "touchstart" && (p.current = !0);
    const y = P ? null : m.current, R = y ? y.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let $, A, O;
    if (k || w === void 0 || w.clientX === 0 && w.clientY === 0 || !w.clientX && !w.touches)
      $ = Math.round(R.width / 2), A = Math.round(R.height / 2);
    else {
      const {
        clientX: _,
        clientY: I
      } = w.touches && w.touches.length > 0 ? w.touches[0] : w;
      $ = Math.round(_ - R.left), A = Math.round(I - R.top);
    }
    if (k)
      O = Math.sqrt((2 * R.width ** 2 + R.height ** 2) / 3), O % 2 === 0 && (O += 1);
    else {
      const _ = Math.max(Math.abs((y ? y.clientWidth : 0) - $), $) * 2 + 2, I = Math.max(Math.abs((y ? y.clientHeight : 0) - A), A) * 2 + 2;
      O = Math.sqrt(_ ** 2 + I ** 2);
    }
    w != null && w.touches ? g.current === null && (g.current = () => {
      b({
        pulsate: C,
        rippleX: $,
        rippleY: A,
        rippleSize: O,
        cb: T
      });
    }, h.start(D$, () => {
      g.current && (g.current(), g.current = null);
    })) : b({
      pulsate: C,
      rippleX: $,
      rippleY: A,
      rippleSize: O,
      cb: T
    });
  }, [o, b, h]), E = M.useCallback(() => {
    x({}, {
      pulsate: !0
    });
  }, [x]), v = M.useCallback((w, S) => {
    if (h.clear(), (w == null ? void 0 : w.type) === "touchend" && g.current) {
      g.current(), g.current = null, h.start(0, () => {
        v(w, S);
      });
      return;
    }
    g.current = null, u((T) => T.length > 0 ? T.slice(1) : T), f.current = S;
  }, [h]);
  return M.useImperativeHandle(n, () => ({
    pulsate: E,
    start: x,
    stop: v
  }), [E, x, v]), /* @__PURE__ */ N(z$, {
    className: Oe(Gn.root, i.root, s),
    ref: m,
    ...l,
    children: /* @__PURE__ */ N(Qp, {
      component: null,
      exit: !0,
      children: c
    })
  });
});
process.env.NODE_ENV !== "production" && (wx.propTypes = {
  /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */
  center: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string
});
function j$(e) {
  return Et("MuiButtonBase", e);
}
const H$ = kt("MuiButtonBase", ["root", "disabled", "focusVisible"]), W$ = (e) => {
  const {
    disabled: t,
    focusVisible: n,
    focusVisibleClassName: r,
    classes: o
  } = e, s = Mt({
    root: ["root", t && "disabled", n && "focusVisible"]
  }, j$, o);
  return n && r && (s.root += ` ${r}`), s;
}, U$ = Me("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  textDecoration: "none",
  // So we take precedent over the style of a native <a /> element.
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${H$.disabled}`]: {
    pointerEvents: "none",
    // Disable link interactions
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), ch = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiButtonBase"
  }), {
    action: o,
    centerRipple: i = !1,
    children: s,
    className: l,
    component: c = "button",
    disabled: u = !1,
    disableRipple: d = !1,
    disableTouchRipple: f = !1,
    focusRipple: p = !1,
    focusVisibleClassName: h,
    LinkComponent: g = "a",
    onBlur: m,
    onClick: b,
    onContextMenu: x,
    onDragLeave: E,
    onFocus: v,
    onFocusVisible: w,
    onKeyDown: S,
    onKeyUp: T,
    onMouseDown: C,
    onMouseLeave: k,
    onMouseUp: P,
    onTouchEnd: y,
    onTouchMove: R,
    onTouchStart: $,
    tabIndex: A = 0,
    TouchRippleProps: O,
    touchRippleRef: _,
    type: I,
    ...D
  } = r, z = M.useRef(null), B = M$(), F = pn(B.ref, _), [L, W] = M.useState(!1);
  u && L && W(!1), M.useImperativeHandle(o, () => ({
    focusVisible: () => {
      W(!0), z.current.focus();
    }
  }), []);
  const U = B.shouldMount && !d && !u;
  M.useEffect(() => {
    L && p && !d && B.pulsate();
  }, [d, p, L, B]);
  const Z = Wr(B, "start", C, f), Q = Wr(B, "stop", x, f), ee = Wr(B, "stop", E, f), te = Wr(B, "stop", P, f), q = Wr(B, "stop", (V) => {
    L && V.preventDefault(), k && k(V);
  }, f), oe = Wr(B, "start", $, f), K = Wr(B, "stop", y, f), ne = Wr(B, "stop", R, f), j = Wr(B, "stop", (V) => {
    ic(V.target) || W(!1), m && m(V);
  }, !1), pe = Nr((V) => {
    z.current || (z.current = V.currentTarget), ic(V.target) && (W(!0), w && w(V)), v && v(V);
  }), ce = () => {
    const V = z.current;
    return c && c !== "button" && !(V.tagName === "A" && V.href);
  }, be = Nr((V) => {
    p && !V.repeat && L && V.key === " " && B.stop(V, () => {
      B.start(V);
    }), V.target === V.currentTarget && ce() && V.key === " " && V.preventDefault(), S && S(V), V.target === V.currentTarget && ce() && V.key === "Enter" && !u && (V.preventDefault(), b && b(V));
  }), Ie = Nr((V) => {
    p && V.key === " " && L && !V.defaultPrevented && B.stop(V, () => {
      B.pulsate(V);
    }), T && T(V), b && V.target === V.currentTarget && ce() && V.key === " " && !V.defaultPrevented && b(V);
  });
  let _e = c;
  _e === "button" && (D.href || D.to) && (_e = g);
  const $e = {};
  _e === "button" ? ($e.type = I === void 0 ? "button" : I, $e.disabled = u) : (!D.href && !D.to && ($e.role = "button"), u && ($e["aria-disabled"] = u));
  const Ne = pn(n, z), Le = {
    ...r,
    centerRipple: i,
    component: c,
    disabled: u,
    disableRipple: d,
    disableTouchRipple: f,
    focusRipple: p,
    tabIndex: A,
    focusVisible: L
  }, Re = W$(Le);
  return /* @__PURE__ */ Se(U$, {
    as: _e,
    className: Oe(Re.root, l),
    ownerState: Le,
    onBlur: j,
    onClick: b,
    onContextMenu: Q,
    onFocus: pe,
    onKeyDown: be,
    onKeyUp: Ie,
    onMouseDown: Z,
    onMouseLeave: q,
    onMouseUp: te,
    onDragLeave: ee,
    onTouchEnd: K,
    onTouchMove: ne,
    onTouchStart: oe,
    ref: Ne,
    tabIndex: u ? -1 : A,
    type: I,
    ...$e,
    ...D,
    children: [s, U ? /* @__PURE__ */ N(wx, {
      ref: F,
      center: i,
      ...O
    }) : null]
  });
});
function Wr(e, t, n, r = !1) {
  return Nr((o) => (n && n(o), r || e[t](o), !0));
}
process.env.NODE_ENV !== "production" && (ch.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: oo,
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: a.bool,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: Ap,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: a.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: a.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: a.string,
  /**
   * @ignore
   */
  href: a.any,
  /**
   * The component used to render a link when the `href` prop is provided.
   * @default 'a'
   */
  LinkComponent: a.elementType,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * @ignore
   */
  onContextMenu: a.func,
  /**
   * @ignore
   */
  onDragLeave: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * @ignore
   */
  onKeyUp: a.func,
  /**
   * @ignore
   */
  onMouseDown: a.func,
  /**
   * @ignore
   */
  onMouseLeave: a.func,
  /**
   * @ignore
   */
  onMouseUp: a.func,
  /**
   * @ignore
   */
  onTouchEnd: a.func,
  /**
   * @ignore
   */
  onTouchMove: a.func,
  /**
   * @ignore
   */
  onTouchStart: a.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * @default 0
   */
  tabIndex: a.number,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: a.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: a.oneOfType([a.func, a.shape({
    current: a.shape({
      pulsate: a.func.isRequired,
      start: a.func.isRequired,
      stop: a.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  type: a.oneOfType([a.oneOf(["button", "reset", "submit"]), a.string])
});
function q$(e) {
  return Et("MuiCircularProgress", e);
}
kt("MuiCircularProgress", ["root", "determinate", "indeterminate", "colorPrimary", "colorSecondary", "svg", "circle", "circleDeterminate", "circleIndeterminate", "circleDisableShrink"]);
const uo = 44, Pf = Oo`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`, _f = Oo`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: -126px;
  }
`, Y$ = typeof Pf != "string" ? ns`
        animation: ${Pf} 1.4s linear infinite;
      ` : null, G$ = typeof _f != "string" ? ns`
        animation: ${_f} 1.4s ease-in-out infinite;
      ` : null, K$ = (e) => {
  const {
    classes: t,
    variant: n,
    color: r,
    disableShrink: o
  } = e, i = {
    root: ["root", n, `color${Ee(r)}`],
    svg: ["svg"],
    circle: ["circle", `circle${Ee(n)}`, o && "circleDisableShrink"]
  };
  return Mt(i, q$, t);
}, X$ = Me("span", {
  name: "MuiCircularProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`color${Ee(n.color)}`]];
  }
})(et(({
  theme: e
}) => ({
  display: "inline-block",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("transform")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: Y$ || {
      animation: `${Pf} 1.4s linear infinite`
    }
  }, ...Object.entries(e.palette).filter(bn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  }))]
}))), Z$ = Me("svg", {
  name: "MuiCircularProgress",
  slot: "Svg",
  overridesResolver: (e, t) => t.svg
})({
  display: "block"
  // Keeps the progress centered
}), Q$ = Me("circle", {
  name: "MuiCircularProgress",
  slot: "Circle",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.circle, t[`circle${Ee(n.variant)}`], n.disableShrink && t.circleDisableShrink];
  }
})(et(({
  theme: e
}) => ({
  stroke: "currentColor",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("stroke-dashoffset")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: {
      // Some default value that looks fine waiting for the animation to kicks in.
      strokeDasharray: "80px, 200px",
      strokeDashoffset: 0
      // Add the unit to fix a Edge 16 and below bug.
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" && !t.disableShrink,
    style: G$ || {
      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
      animation: `${_f} 1.4s ease-in-out infinite`
    }
  }]
}))), uh = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiCircularProgress"
  }), {
    className: o,
    color: i = "primary",
    disableShrink: s = !1,
    size: l = 40,
    style: c,
    thickness: u = 3.6,
    value: d = 0,
    variant: f = "indeterminate",
    ...p
  } = r, h = {
    ...r,
    color: i,
    disableShrink: s,
    size: l,
    thickness: u,
    value: d,
    variant: f
  }, g = K$(h), m = {}, b = {}, x = {};
  if (f === "determinate") {
    const E = 2 * Math.PI * ((uo - u) / 2);
    m.strokeDasharray = E.toFixed(3), x["aria-valuenow"] = Math.round(d), m.strokeDashoffset = `${((100 - d) / 100 * E).toFixed(3)}px`, b.transform = "rotate(-90deg)";
  }
  return /* @__PURE__ */ N(X$, {
    className: Oe(g.root, o),
    style: {
      width: l,
      height: l,
      ...b,
      ...c
    },
    ownerState: h,
    ref: n,
    role: "progressbar",
    ...x,
    ...p,
    children: /* @__PURE__ */ N(Z$, {
      className: g.svg,
      ownerState: h,
      viewBox: `${uo / 2} ${uo / 2} ${uo} ${uo}`,
      children: /* @__PURE__ */ N(Q$, {
        className: g.circle,
        style: m,
        ownerState: h,
        cx: uo,
        cy: uo,
        r: (uo - u) / 2,
        fill: "none",
        strokeWidth: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (uh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   * @default false
   */
  disableShrink: Ro(a.bool, (e) => e.disableShrink && e.variant && e.variant !== "indeterminate" ? new Error("MUI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.") : null),
  /**
   * The size of the component.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, for example '3rem'.
   * @default 40
   */
  size: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The thickness of the circle.
   * @default 3.6
   */
  thickness: a.number,
  /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   * @default 0
   */
  value: a.number,
  /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   * @default 'indeterminate'
   */
  variant: a.oneOf(["determinate", "indeterminate"])
});
function J$(e) {
  return Et("MuiButton", e);
}
const Do = kt("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorSuccess", "colorError", "colorInfo", "colorWarning", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "icon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge", "loading", "loadingWrapper", "loadingIconPlaceholder", "loadingIndicator", "loadingPositionCenter", "loadingPositionStart", "loadingPositionEnd"]), Sx = /* @__PURE__ */ M.createContext({});
process.env.NODE_ENV !== "production" && (Sx.displayName = "ButtonGroupContext");
const Ex = /* @__PURE__ */ M.createContext(void 0);
process.env.NODE_ENV !== "production" && (Ex.displayName = "ButtonGroupButtonContext");
const eP = (e) => {
  const {
    color: t,
    disableElevation: n,
    fullWidth: r,
    size: o,
    variant: i,
    loading: s,
    loadingPosition: l,
    classes: c
  } = e, u = {
    root: ["root", s && "loading", i, `${i}${Ee(t)}`, `size${Ee(o)}`, `${i}Size${Ee(o)}`, `color${Ee(t)}`, n && "disableElevation", r && "fullWidth", s && `loadingPosition${Ee(l)}`],
    startIcon: ["icon", "startIcon", `iconSize${Ee(o)}`],
    endIcon: ["icon", "endIcon", `iconSize${Ee(o)}`],
    loadingIndicator: ["loadingIndicator"],
    loadingWrapper: ["loadingWrapper"]
  }, d = Mt(u, J$, c);
  return {
    ...c,
    // forward the focused, disabled, etc. classes to the ButtonBase
    ...d
  };
}, Tx = [{
  props: {
    size: "small"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 18
    }
  }
}, {
  props: {
    size: "medium"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 20
    }
  }
}, {
  props: {
    size: "large"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 22
    }
  }
}], tP = Me(ch, {
  shouldForwardProp: (e) => Fr(e) || e === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`${n.variant}${Ee(n.color)}`], t[`size${Ee(n.size)}`], t[`${n.variant}Size${Ee(n.size)}`], n.color === "inherit" && t.colorInherit, n.disableElevation && t.disableElevation, n.fullWidth && t.fullWidth, n.loading && t.loading];
  }
})(et(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? e.palette.grey[300] : e.palette.grey[800], n = e.palette.mode === "light" ? e.palette.grey.A100 : e.palette.grey[700];
  return {
    ...e.typography.button,
    minWidth: 64,
    padding: "6px 16px",
    border: 0,
    borderRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: e.transitions.duration.short
    }),
    "&:hover": {
      textDecoration: "none"
    },
    [`&.${Do.disabled}`]: {
      color: (e.vars || e).palette.action.disabled
    },
    variants: [{
      props: {
        variant: "contained"
      },
      style: {
        color: "var(--variant-containedColor)",
        backgroundColor: "var(--variant-containedBg)",
        boxShadow: (e.vars || e).shadows[2],
        "&:hover": {
          boxShadow: (e.vars || e).shadows[4],
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            boxShadow: (e.vars || e).shadows[2]
          }
        },
        "&:active": {
          boxShadow: (e.vars || e).shadows[8]
        },
        [`&.${Do.focusVisible}`]: {
          boxShadow: (e.vars || e).shadows[6]
        },
        [`&.${Do.disabled}`]: {
          color: (e.vars || e).palette.action.disabled,
          boxShadow: (e.vars || e).shadows[0],
          backgroundColor: (e.vars || e).palette.action.disabledBackground
        }
      }
    }, {
      props: {
        variant: "outlined"
      },
      style: {
        padding: "5px 15px",
        border: "1px solid currentColor",
        borderColor: "var(--variant-outlinedBorder, currentColor)",
        backgroundColor: "var(--variant-outlinedBg)",
        color: "var(--variant-outlinedColor)",
        [`&.${Do.disabled}`]: {
          border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
        }
      }
    }, {
      props: {
        variant: "text"
      },
      style: {
        padding: "6px 8px",
        color: "var(--variant-textColor)",
        backgroundColor: "var(--variant-textBg)"
      }
    }, ...Object.entries(e.palette).filter(bn()).map(([r]) => ({
      props: {
        color: r
      },
      style: {
        "--variant-textColor": (e.vars || e).palette[r].main,
        "--variant-outlinedColor": (e.vars || e).palette[r].main,
        "--variant-outlinedBorder": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / 0.5)` : rn(e.palette[r].main, 0.5),
        "--variant-containedColor": (e.vars || e).palette[r].contrastText,
        "--variant-containedBg": (e.vars || e).palette[r].main,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": (e.vars || e).palette[r].dark,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : rn(e.palette[r].main, e.palette.action.hoverOpacity),
            "--variant-outlinedBorder": (e.vars || e).palette[r].main,
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : rn(e.palette[r].main, e.palette.action.hoverOpacity)
          }
        }
      }
    })), {
      props: {
        color: "inherit"
      },
      style: {
        color: "inherit",
        borderColor: "currentColor",
        "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedBg : t,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedHoverBg : n,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : rn(e.palette.text.primary, e.palette.action.hoverOpacity),
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : rn(e.palette.text.primary, e.palette.action.hoverOpacity)
          }
        }
      }
    }, {
      props: {
        size: "small",
        variant: "text"
      },
      style: {
        padding: "4px 5px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "text"
      },
      style: {
        padding: "8px 11px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "outlined"
      },
      style: {
        padding: "3px 9px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "outlined"
      },
      style: {
        padding: "7px 21px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "contained"
      },
      style: {
        padding: "4px 10px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "contained"
      },
      style: {
        padding: "8px 22px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        disableElevation: !0
      },
      style: {
        boxShadow: "none",
        "&:hover": {
          boxShadow: "none"
        },
        [`&.${Do.focusVisible}`]: {
          boxShadow: "none"
        },
        "&:active": {
          boxShadow: "none"
        },
        [`&.${Do.disabled}`]: {
          boxShadow: "none"
        }
      }
    }, {
      props: {
        fullWidth: !0
      },
      style: {
        width: "100%"
      }
    }, {
      props: {
        loadingPosition: "center"
      },
      style: {
        transition: e.transitions.create(["background-color", "box-shadow", "border-color"], {
          duration: e.transitions.duration.short
        }),
        [`&.${Do.loading}`]: {
          color: "transparent"
        }
      }
    }]
  };
})), nP = Me("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.startIcon, n.loading && t.startIconLoadingStart, t[`iconSize${Ee(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginLeft: -2
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginRight: -8
    }
  }, ...Tx]
})), rP = Me("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.endIcon, n.loading && t.endIconLoadingEnd, t[`iconSize${Ee(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginRight: -2
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginLeft: -8
    }
  }, ...Tx]
})), oP = Me("span", {
  name: "MuiButton",
  slot: "LoadingIndicator",
  overridesResolver: (e, t) => t.loadingIndicator
})(({
  theme: e
}) => ({
  display: "none",
  position: "absolute",
  visibility: "visible",
  variants: [{
    props: {
      loading: !0
    },
    style: {
      display: "flex"
    }
  }, {
    props: {
      loadingPosition: "start"
    },
    style: {
      left: 14
    }
  }, {
    props: {
      loadingPosition: "start",
      size: "small"
    },
    style: {
      left: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "start"
    },
    style: {
      left: 6
    }
  }, {
    props: {
      loadingPosition: "center"
    },
    style: {
      left: "50%",
      transform: "translate(-50%)",
      color: (e.vars || e).palette.action.disabled
    }
  }, {
    props: {
      loadingPosition: "end"
    },
    style: {
      right: 14
    }
  }, {
    props: {
      loadingPosition: "end",
      size: "small"
    },
    style: {
      right: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "end"
    },
    style: {
      right: 6
    }
  }, {
    props: {
      loadingPosition: "start",
      fullWidth: !0
    },
    style: {
      position: "relative",
      left: -10
    }
  }, {
    props: {
      loadingPosition: "end",
      fullWidth: !0
    },
    style: {
      position: "relative",
      right: -10
    }
  }]
})), Fg = Me("span", {
  name: "MuiButton",
  slot: "LoadingIconPlaceholder",
  overridesResolver: (e, t) => t.loadingIconPlaceholder
})({
  display: "inline-block",
  width: "1em",
  height: "1em"
}), dh = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = M.useContext(Sx), o = M.useContext(Ex), i = ra(r, t), s = Nt({
    props: i,
    name: "MuiButton"
  }), {
    children: l,
    color: c = "primary",
    component: u = "button",
    className: d,
    disabled: f = !1,
    disableElevation: p = !1,
    disableFocusRipple: h = !1,
    endIcon: g,
    focusVisibleClassName: m,
    fullWidth: b = !1,
    id: x,
    loading: E = null,
    loadingIndicator: v,
    loadingPosition: w = "center",
    size: S = "medium",
    startIcon: T,
    type: C,
    variant: k = "text",
    ...P
  } = s, y = Bp(x), R = v ?? /* @__PURE__ */ N(uh, {
    "aria-labelledby": y,
    color: "inherit",
    size: 16
  }), $ = {
    ...s,
    color: c,
    component: u,
    disabled: f,
    disableElevation: p,
    disableFocusRipple: h,
    fullWidth: b,
    loading: E,
    loadingIndicator: R,
    loadingPosition: w,
    size: S,
    type: C,
    variant: k
  }, A = eP($), O = (T || E && w === "start") && /* @__PURE__ */ N(nP, {
    className: A.startIcon,
    ownerState: $,
    children: T || /* @__PURE__ */ N(Fg, {
      className: A.loadingIconPlaceholder,
      ownerState: $
    })
  }), _ = (g || E && w === "end") && /* @__PURE__ */ N(rP, {
    className: A.endIcon,
    ownerState: $,
    children: g || /* @__PURE__ */ N(Fg, {
      className: A.loadingIconPlaceholder,
      ownerState: $
    })
  }), I = o || "", D = typeof E == "boolean" ? (
    // use plain HTML span to minimize the runtime overhead
    /* @__PURE__ */ N("span", {
      className: A.loadingWrapper,
      style: {
        display: "contents"
      },
      children: E && /* @__PURE__ */ N(oP, {
        className: A.loadingIndicator,
        ownerState: $,
        children: R
      })
    })
  ) : null;
  return /* @__PURE__ */ Se(tP, {
    ownerState: $,
    className: Oe(r.className, A.root, d, I),
    component: u,
    disabled: f || E,
    focusRipple: !h,
    focusVisibleClassName: Oe(A.focusVisible, m),
    ref: n,
    type: C,
    id: E ? y : x,
    ...P,
    classes: A,
    children: [O, w !== "end" && D, l, w === "end" && D, _]
  });
});
process.env.NODE_ENV !== "production" && (dh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: a.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * Element placed after the children.
   */
  endIcon: a.node,
  /**
   * @ignore
   */
  focusVisibleClassName: a.string,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: a.string,
  /**
   * @ignore
   */
  id: a.string,
  /**
   * If `true`, the loading indicator is visible and the button is disabled.
   * If `true | false`, the loading wrapper is always rendered before the children to prevent [Google Translation Crash](https://github.com/mui/material-ui/issues/27853).
   * @default null
   */
  loading: a.bool,
  /**
   * Element placed before the children if the button is in loading state.
   * The node should contain an element with `role="progressbar"` with an accessible name.
   * By default, it renders a `CircularProgress` that is labeled by the button itself.
   * @default <CircularProgress color="inherit" size={16} />
   */
  loadingIndicator: a.node,
  /**
   * The loading indicator can be positioned on the start, end, or the center of the button.
   * @default 'center'
   */
  loadingPosition: a.oneOf(["center", "end", "start"]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["small", "medium", "large"]), a.string]),
  /**
   * Element placed before the children.
   */
  startIcon: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * @ignore
   */
  type: a.oneOfType([a.oneOf(["button", "reset", "submit"]), a.string]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: a.oneOfType([a.oneOf(["contained", "outlined", "text"]), a.string])
});
const $n = we(
  ({
    text: e,
    loading: t,
    disabled: n,
    isOutlined: r,
    isGhost: o,
    isCircle: i,
    icon: s,
    iconWidth: l = 20,
    iconPosition: c = void 0,
    color: u = "primary",
    onClick: d,
    sx: f,
    ...p
  }) => {
    const { buttonColors: h } = iP({ color: u, isGhost: o, isOutlined: r }), g = ct(() => s ? /* @__PURE__ */ N(Mr, { icon: s, width: l }) : null, [s, l]);
    return /* @__PURE__ */ Se(
      dh,
      {
        variant: o ? "text" : r ? "outlined" : "contained",
        loading: t,
        disabled: n,
        startIcon: c === "start" && g,
        endIcon: c === "end" && g,
        sx: {
          minWidth: "40px",
          minHeight: "40px",
          width: i ? "40px" : "unset",
          height: i ? "40px" : "unset",
          textTransform: "none",
          fontWeight: "bold",
          borderRadius: i ? "50%" : "8px",
          p: i ? "6px" : "auto",
          px: i ? "0" : "16px !important",
          cursor: t ? "wait !important" : n ? "not-allowed !important" : "pointer",
          pointerEvents: "auto !important",
          transition: "background-color 0s, background-image 0s",
          "& .MuiButton-startIcon": { svg: { color: "inherit", mr: "8px" } },
          "& .MuiButton-endIcon": { svg: { color: "inherit", ml: "8px" } },
          ...h,
          ...f
        },
        onClick: (m) => {
          m.stopPropagation(), d == null || d(m);
        },
        ...p,
        children: [
          !c && g,
          !i && e
        ]
      }
    );
  }
);
$n.displayName = "Button";
function iP({ color: e = "primary", isGhost: t, isOutlined: n }) {
  const r = io();
  return { buttonColors: ct(() => {
    const i = r.palette.mode === "dark", s = {
      auto: r.palette.text.primary,
      disabled: r.palette.action.disabled,
      primary: r.palette.primary.main,
      success: r.palette.success.main,
      error: r.palette.error.main
    }, l = e in s ? s[e] : "inherit", c = i && ["auto", "disabled"].includes(e) ? "black" : r.palette.primary.contrastText;
    return {
      backgroundColor: t || n ? "transparent" : l,
      color: t || n ? l : c,
      borderColor: n ? l : "transparent"
    };
  }, [r, e, t, n]) };
}
const pu = we(
  ({ isOutlined: e, clickable: t, onClick: n, disabled: r, children: o, sx: i }) => t ? /* @__PURE__ */ N(
    dh,
    {
      className: "VenomousUI-Card",
      component: wo,
      isOutlined: e,
      disabled: r,
      onClick: r ? void 0 : n,
      sx: {
        display: "block",
        color: "inherit",
        textTransform: "none",
        borderRadius: "8px",
        cursor: r ? "not-allowed !important" : "pointer",
        pointerEvents: "auto !important",
        p: "16px",
        ...e ? {
          border: 1,
          borderColor: "divider"
        } : {},
        ...i
      },
      children: o
    }
  ) : /* @__PURE__ */ N(wo, { className: "VenomousUI-Card", isOutlined: e, sx: { p: "16px", ...i }, children: o })
);
pu.displayName = "Card";
const sn = we(
  ({ children: e, row: t, alignItems: n, justifyContent: r, gap: o = 1, sx: i, ...s }) => /* @__PURE__ */ N(
    Jr,
    {
      className: "VenomousUI-Flex",
      component: "div",
      sx: {
        display: "flex",
        flexDirection: t ? "row" : "column",
        alignItems: n || (t ? "center" : "start"),
        justifyContent: r || "start",
        ...Array.isArray(o) ? { rowGap: o[0], columnGap: o[1] } : { gap: o },
        ...i
      },
      ...s,
      children: e
    }
  )
);
sn.displayName = "Flex";
const sP = we(
  ({ title: e, subtitle: t, headerStartExtra: n, headerEndExtra: r, children: o, ...i }) => /* @__PURE__ */ Se(pu, { ...i, children: [
    /* @__PURE__ */ Se(sn, { row: !0, mb: "8px", justifyContent: "space-between", alignItems: "center", children: [
      n && /* @__PURE__ */ N("div", { style: { marginRight: t ? "8px" : 0 }, children: n }),
      /* @__PURE__ */ Se(sn, { gap: 0, children: [
        e && /* @__PURE__ */ N(In, { text: e, isTitle: !0, titleLevel: "h6", lineHeight: "1.25rem", ellipsis: !0 }),
        t && /* @__PURE__ */ N(In, { text: t, isLabel: !0, ellipsis: !0 })
      ] }),
      r && /* @__PURE__ */ N(
        "div",
        {
          style: {
            marginRight: t ? "-8px" : 0,
            marginTop: t ? "-8px" : 0,
            marginLeft: "8px"
          },
          children: r
        }
      )
    ] }),
    o
  ] })
);
sP.displayName = "ExhibitCard";
const hu = 0, Io = 1, ls = 2, Cx = 4;
function Lg(e) {
  return () => e;
}
function aP(e) {
  e();
}
function Ox(e, t) {
  return (n) => e(t(n));
}
function zg(e, t) {
  return () => e(t);
}
function Rx(e, t) {
  return (n) => e(t, n);
}
function fh(e) {
  return e !== void 0;
}
function lP(...e) {
  return () => {
    e.map(aP);
  };
}
function cs() {
}
function mu(e, t) {
  return t(e), e;
}
function cP(e, t) {
  return t(e);
}
function Tt(...e) {
  return e;
}
function ut(e, t) {
  return e(Io, t);
}
function Ue(e, t) {
  e(hu, t);
}
function ph(e) {
  e(ls);
}
function un(e) {
  return e(Cx);
}
function De(e, t) {
  return ut(e, Rx(t, hu));
}
function Dr(e, t) {
  const n = e(Io, (r) => {
    n(), t(r);
  });
  return n;
}
function Vg(e) {
  let t, n;
  return (r) => (o) => {
    t = o, n && clearTimeout(n), n = setTimeout(() => {
      r(t);
    }, e);
  };
}
function kx(e, t) {
  return e === t;
}
function St(e = kx) {
  let t;
  return (n) => (r) => {
    e(t, r) || (t = r, n(r));
  };
}
function Ve(e) {
  return (t) => (n) => {
    e(n) && t(n);
  };
}
function ke(e) {
  return (t) => Ox(t, e);
}
function Er(e) {
  return (t) => () => {
    t(e);
  };
}
function ye(e, ...t) {
  const n = uP(...t);
  return (r, o) => {
    switch (r) {
      case ls:
        ph(e);
        return;
      case Io:
        return ut(e, n(o));
    }
  };
}
function Or(e, t) {
  return (n) => (r) => {
    n(t = e(t, r));
  };
}
function ji(e) {
  return (t) => (n) => {
    e > 0 ? e-- : t(n);
  };
}
function yo(e) {
  let t = null, n;
  return (r) => (o) => {
    t = o, !n && (n = setTimeout(() => {
      n = void 0, r(t);
    }, e));
  };
}
function Ye(...e) {
  const t = new Array(e.length);
  let n = 0, r = null;
  const o = Math.pow(2, e.length) - 1;
  return e.forEach((i, s) => {
    const l = Math.pow(2, s);
    ut(i, (c) => {
      const u = n;
      n = n | l, t[s] = c, u !== o && n === o && r && (r(), r = null);
    });
  }), (i) => (s) => {
    const l = () => {
      i([s].concat(t));
    };
    n === o ? l() : r = l;
  };
}
function uP(...e) {
  return (t) => e.reduceRight(cP, t);
}
function dP(e) {
  let t, n;
  const r = () => t == null ? void 0 : t();
  return function(o, i) {
    switch (o) {
      case Io:
        return i ? n === i ? void 0 : (r(), n = i, t = ut(e, i), t) : (r(), cs);
      case ls:
        r(), n = null;
        return;
    }
  };
}
function ve(e) {
  let t = e;
  const n = Xe();
  return (r, o) => {
    switch (r) {
      case hu:
        t = o;
        break;
      case Io: {
        o(t);
        break;
      }
      case Cx:
        return t;
    }
    return n(r, o);
  };
}
function dn(e, t) {
  return mu(ve(t), (n) => De(e, n));
}
function Xe() {
  const e = [];
  return (t, n) => {
    switch (t) {
      case hu:
        e.slice().forEach((r) => {
          r(n);
        });
        return;
      case ls:
        e.splice(0, e.length);
        return;
      case Io:
        return e.push(n), () => {
          const r = e.indexOf(n);
          r > -1 && e.splice(r, 1);
        };
    }
  };
}
function jn(e) {
  return mu(Xe(), (t) => De(e, t));
}
function rt(e, t = [], { singleton: n } = { singleton: !0 }) {
  return {
    constructor: e,
    dependencies: t,
    id: fP(),
    singleton: n
  };
}
const fP = () => Symbol();
function pP(e) {
  const t = /* @__PURE__ */ new Map(), n = ({ constructor: r, dependencies: o, id: i, singleton: s }) => {
    if (s && t.has(i))
      return t.get(i);
    const l = r(o.map((c) => n(c)));
    return s && t.set(i, l), l;
  };
  return n(e);
}
function Qt(...e) {
  const t = Xe(), n = new Array(e.length);
  let r = 0;
  const o = Math.pow(2, e.length) - 1;
  return e.forEach((i, s) => {
    const l = Math.pow(2, s);
    ut(i, (c) => {
      n[s] = c, r = r | l, r === o && Ue(t, n);
    });
  }), function(i, s) {
    switch (i) {
      case ls: {
        ph(t);
        return;
      }
      case Io:
        return r === o && s(n), ut(t, s);
    }
  };
}
function je(e, t = kx) {
  return ye(e, St(t));
}
function jg(...e) {
  return function(t, n) {
    switch (t) {
      case ls:
        return;
      case Io:
        return lP(...e.map((r) => ut(r, n)));
    }
  };
}
var Hn = /* @__PURE__ */ ((e) => (e[e.DEBUG = 0] = "DEBUG", e[e.INFO = 1] = "INFO", e[e.WARN = 2] = "WARN", e[e.ERROR = 3] = "ERROR", e))(Hn || {});
const hP = {
  0: "debug",
  3: "error",
  1: "log",
  2: "warn"
}, mP = () => typeof globalThis > "u" ? window : globalThis, $o = rt(
  () => {
    const e = ve(
      3
      /* ERROR */
    );
    return {
      log: ve((t, n, r = 1) => {
        var o;
        const i = (o = mP().VIRTUOSO_LOG_LEVEL) != null ? o : un(e);
        r >= i && console[hP[r]](
          "%creact-virtuoso: %c%s %o",
          "color: #0253b3; font-weight: bold",
          "color: initial",
          t,
          n
        );
      }),
      logLevel: e
    };
  },
  [],
  { singleton: !0 }
);
function ni(e, t, n) {
  return hh(e, t, n).callbackRef;
}
function hh(e, t, n) {
  const r = Y.useRef(null);
  let o = (i) => {
  };
  if (typeof ResizeObserver < "u") {
    const i = Y.useMemo(() => new ResizeObserver((s) => {
      const l = () => {
        const c = s[0].target;
        c.offsetParent !== null && e(c);
      };
      n ? l() : requestAnimationFrame(l);
    }), [e]);
    o = (s) => {
      s && t ? (i.observe(s), r.current = s) : (r.current && i.unobserve(r.current), r.current = null);
    };
  }
  return { callbackRef: o, ref: r };
}
function gP(e, t, n, r, o, i, s, l, c) {
  const u = Y.useCallback(
    (d) => {
      const f = yP(d.children, t, l ? "offsetWidth" : "offsetHeight", o);
      let p = d.parentElement;
      for (; !p.dataset.virtuosoScroller; )
        p = p.parentElement;
      const h = p.lastElementChild.dataset.viewportType === "window";
      let g;
      h && (g = p.ownerDocument.defaultView);
      const m = s ? l ? s.scrollLeft : s.scrollTop : h ? l ? g.scrollX || g.document.documentElement.scrollLeft : g.scrollY || g.document.documentElement.scrollTop : l ? p.scrollLeft : p.scrollTop, b = s ? l ? s.scrollWidth : s.scrollHeight : h ? l ? g.document.documentElement.scrollWidth : g.document.documentElement.scrollHeight : l ? p.scrollWidth : p.scrollHeight, x = s ? l ? s.offsetWidth : s.offsetHeight : h ? l ? g.innerWidth : g.innerHeight : l ? p.offsetWidth : p.offsetHeight;
      r({
        scrollHeight: b,
        scrollTop: Math.max(m, 0),
        viewportHeight: x
      }), i == null || i(
        l ? Hg("column-gap", getComputedStyle(d).columnGap, o) : Hg("row-gap", getComputedStyle(d).rowGap, o)
      ), f !== null && e(f);
    },
    [e, t, o, i, s, r]
  );
  return hh(u, n, c);
}
function yP(e, t, n, r) {
  const o = e.length;
  if (o === 0)
    return null;
  const i = [];
  for (let s = 0; s < o; s++) {
    const l = e.item(s);
    if (l.dataset.index === void 0)
      continue;
    const c = parseInt(l.dataset.index), u = parseFloat(l.dataset.knownSize), d = t(l, n);
    if (d === 0 && r("Zero-sized element, this should not happen", { child: l }, Hn.ERROR), d === u)
      continue;
    const f = i[i.length - 1];
    i.length === 0 || f.size !== d || f.endIndex !== c - 1 ? i.push({ endIndex: c, size: d, startIndex: c }) : i[i.length - 1].endIndex++;
  }
  return i;
}
function Hg(e, t, n) {
  return t !== "normal" && !(t != null && t.endsWith("px")) && n(`${e} was not resolved to pixel value correctly`, t, Hn.WARN), t === "normal" ? 0 : parseInt(t ?? "0", 10);
}
function Nx(e, t, n) {
  const r = Y.useRef(null), o = Y.useCallback(
    (c) => {
      if (!(c != null && c.offsetParent))
        return;
      const u = c.getBoundingClientRect(), d = u.width;
      let f, p;
      if (t) {
        const h = t.getBoundingClientRect(), g = u.top - h.top;
        p = h.height - Math.max(0, g), f = g + t.scrollTop;
      } else {
        const h = s.current.ownerDocument.defaultView;
        p = h.innerHeight - Math.max(0, u.top), f = u.top + h.scrollY;
      }
      r.current = {
        offsetTop: f,
        visibleHeight: p,
        visibleWidth: d
      }, e(r.current);
    },
    [e, t]
  ), { callbackRef: i, ref: s } = hh(o, !0, n), l = Y.useCallback(() => {
    o(s.current);
  }, [o, s]);
  return Y.useEffect(() => {
    var c;
    if (t) {
      t.addEventListener("scroll", l);
      const u = new ResizeObserver(() => {
        requestAnimationFrame(l);
      });
      return u.observe(t), () => {
        t.removeEventListener("scroll", l), u.unobserve(t);
      };
    } else {
      const u = (c = s.current) == null ? void 0 : c.ownerDocument.defaultView;
      return u == null || u.addEventListener("scroll", l), u == null || u.addEventListener("resize", l), () => {
        u == null || u.removeEventListener("scroll", l), u == null || u.removeEventListener("resize", l);
      };
    }
  }, [l, t]), i;
}
const xn = rt(
  () => {
    const e = Xe(), t = Xe(), n = ve(0), r = Xe(), o = ve(0), i = Xe(), s = Xe(), l = ve(0), c = ve(0), u = ve(0), d = ve(0), f = Xe(), p = Xe(), h = ve(!1), g = ve(!1), m = ve(!1);
    return De(
      ye(
        e,
        ke(({ scrollTop: b }) => b)
      ),
      t
    ), De(
      ye(
        e,
        ke(({ scrollHeight: b }) => b)
      ),
      s
    ), De(t, o), {
      deviation: n,
      fixedFooterHeight: u,
      fixedHeaderHeight: c,
      footerHeight: d,
      headerHeight: l,
      horizontalDirection: g,
      scrollBy: p,
      // input
      scrollContainerState: e,
      scrollHeight: s,
      scrollingInProgress: h,
      // signals
      scrollTo: f,
      scrollTop: t,
      skipAnimationFrameInResizeObserver: m,
      smoothScrollTargetReached: r,
      // state
      statefulScrollTop: o,
      viewportHeight: i
    };
  },
  [],
  { singleton: !0 }
), ua = { lvl: 0 };
function Ix(e, t) {
  const n = e.length;
  if (n === 0)
    return [];
  let { index: r, value: o } = t(e[0]);
  const i = [];
  for (let s = 1; s < n; s++) {
    const { index: l, value: c } = t(e[s]);
    i.push({ end: l - 1, start: r, value: o }), r = l, o = c;
  }
  return i.push({ end: 1 / 0, start: r, value: o }), i;
}
function vt(e) {
  return e === ua;
}
function da(e, t) {
  if (!vt(e))
    return t === e.k ? e.v : t < e.k ? da(e.l, t) : da(e.r, t);
}
function pr(e, t, n = "k") {
  if (vt(e))
    return [-1 / 0, void 0];
  if (Number(e[n]) === t)
    return [e.k, e.v];
  if (Number(e[n]) < t) {
    const r = pr(e.r, t, n);
    return r[0] === -1 / 0 ? [e.k, e.v] : r;
  }
  return pr(e.l, t, n);
}
function Dn(e, t, n) {
  return vt(e) ? _x(t, n, 1) : t === e.k ? Zt(e, { k: t, v: n }) : t < e.k ? Wg(Zt(e, { l: Dn(e.l, t, n) })) : Wg(Zt(e, { r: Dn(e.r, t, n) }));
}
function ki() {
  return ua;
}
function gu(e, t, n) {
  if (vt(e))
    return [];
  const r = pr(e, t)[0];
  return bP(Af(e, r, n));
}
function Mf(e, t) {
  if (vt(e)) return ua;
  const { k: n, l: r, r: o } = e;
  if (t === n) {
    if (vt(r))
      return o;
    if (vt(o))
      return r;
    {
      const [i, s] = Px(r);
      return ql(Zt(e, { k: i, l: $x(r), v: s }));
    }
  } else return t < n ? ql(Zt(e, { l: Mf(r, t) })) : ql(Zt(e, { r: Mf(o, t) }));
}
function jo(e) {
  return vt(e) ? [] : [...jo(e.l), { k: e.k, v: e.v }, ...jo(e.r)];
}
function Af(e, t, n) {
  if (vt(e))
    return [];
  const { k: r, l: o, r: i, v: s } = e;
  let l = [];
  return r > t && (l = l.concat(Af(o, t, n))), r >= t && r <= n && l.push({ k: r, v: s }), r <= n && (l = l.concat(Af(i, t, n))), l;
}
function ql(e) {
  const { l: t, lvl: n, r } = e;
  if (r.lvl >= n - 1 && t.lvl >= n - 1)
    return e;
  if (n > r.lvl + 1) {
    if (Td(t))
      return Mx(Zt(e, { lvl: n - 1 }));
    if (!vt(t) && !vt(t.r))
      return Zt(t.r, {
        l: Zt(t, { r: t.r.l }),
        lvl: n,
        r: Zt(e, {
          l: t.r.r,
          lvl: n - 1
        })
      });
    throw new Error("Unexpected empty nodes");
  } else {
    if (Td(e))
      return Df(Zt(e, { lvl: n - 1 }));
    if (!vt(r) && !vt(r.l)) {
      const o = r.l, i = Td(o) ? r.lvl - 1 : r.lvl;
      return Zt(o, {
        l: Zt(e, {
          lvl: n - 1,
          r: o.l
        }),
        lvl: o.lvl + 1,
        r: Df(Zt(r, { l: o.r, lvl: i }))
      });
    } else
      throw new Error("Unexpected empty nodes");
  }
}
function Zt(e, t) {
  return _x(
    t.k !== void 0 ? t.k : e.k,
    t.v !== void 0 ? t.v : e.v,
    t.lvl !== void 0 ? t.lvl : e.lvl,
    t.l !== void 0 ? t.l : e.l,
    t.r !== void 0 ? t.r : e.r
  );
}
function $x(e) {
  return vt(e.r) ? e.l : ql(Zt(e, { r: $x(e.r) }));
}
function Td(e) {
  return vt(e) || e.lvl > e.r.lvl;
}
function Px(e) {
  return vt(e.r) ? [e.k, e.v] : Px(e.r);
}
function _x(e, t, n, r = ua, o = ua) {
  return { k: e, l: r, lvl: n, r: o, v: t };
}
function Wg(e) {
  return Df(Mx(e));
}
function Mx(e) {
  const { l: t } = e;
  return !vt(t) && t.lvl === e.lvl ? Zt(t, { r: Zt(e, { l: t.r }) }) : e;
}
function Df(e) {
  const { lvl: t, r: n } = e;
  return !vt(n) && !vt(n.r) && n.lvl === t && n.r.lvl === t ? Zt(n, { l: Zt(e, { r: n.l }), lvl: t + 1 }) : e;
}
function bP(e) {
  return Ix(e, ({ k: t, v: n }) => ({ index: t, value: n }));
}
function Ax(e, t) {
  return !!(e && e.startIndex === t.startIndex && e.endIndex === t.endIndex);
}
function fa(e, t) {
  return !!(e && e[0] === t[0] && e[1] === t[1]);
}
const mh = rt(
  () => ({ recalcInProgress: ve(!1) }),
  [],
  { singleton: !0 }
);
function Dx(e, t, n) {
  return e[fc(e, t, n)];
}
function fc(e, t, n, r = 0) {
  let o = e.length - 1;
  for (; r <= o; ) {
    const i = Math.floor((r + o) / 2), s = e[i], l = n(s, t);
    if (l === 0)
      return i;
    if (l === -1) {
      if (o - r < 2)
        return i - 1;
      o = i - 1;
    } else {
      if (o === r)
        return i;
      r = i + 1;
    }
  }
  throw new Error(`Failed binary finding record in array - ${e.join(",")}, searched for ${t}`);
}
function vP(e, t, n, r) {
  const o = fc(e, t, r), i = fc(e, n, r, o);
  return e.slice(o, i + 1);
}
function So(e, t) {
  return Math.round(e.getBoundingClientRect()[t]);
}
function yu(e) {
  return !vt(e.groupOffsetTree);
}
function gh({ index: e }, t) {
  return t === e ? 0 : t < e ? -1 : 1;
}
function xP() {
  return {
    groupIndices: [],
    groupOffsetTree: ki(),
    lastIndex: 0,
    lastOffset: 0,
    lastSize: 0,
    offsetTree: [],
    sizeTree: ki()
  };
}
function wP(e, t) {
  let n = vt(e) ? 0 : 1 / 0;
  for (const r of t) {
    const { endIndex: o, size: i, startIndex: s } = r;
    if (n = Math.min(n, s), vt(e)) {
      e = Dn(e, 0, i);
      continue;
    }
    const l = gu(e, s - 1, o + 1);
    if (l.some(kP(r)))
      continue;
    let c = !1, u = !1;
    for (const { end: d, start: f, value: p } of l)
      c ? (o >= f || i === p) && (e = Mf(e, f)) : (u = p !== i, c = !0), d > o && o >= f && p !== i && (e = Dn(e, o + 1, p));
    u && (e = Dn(e, s, i));
  }
  return [e, n];
}
function SP(e) {
  return typeof e.groupIndex < "u";
}
function EP({ offset: e }, t) {
  return t === e ? 0 : t < e ? -1 : 1;
}
function pa(e, t, n) {
  if (t.length === 0)
    return 0;
  const { index: r, offset: o, size: i } = Dx(t, e, gh), s = e - r, l = i * s + (s - 1) * n + o;
  return l > 0 ? l + n : l;
}
function Bx(e, t) {
  if (!yu(t))
    return e;
  let n = 0;
  for (; t.groupIndices[n] <= e + n; )
    n++;
  return e + n;
}
function Fx(e, t, n) {
  if (SP(e))
    return t.groupIndices[e.groupIndex] + 1;
  {
    const r = e.index === "LAST" ? n : e.index;
    let o = Bx(r, t);
    return o = Math.max(0, o, Math.min(n, o)), o;
  }
}
function TP(e, t, n, r = 0) {
  return r > 0 && (t = Math.max(t, Dx(e, r, gh).offset)), Ix(vP(e, t, n, EP), RP);
}
function CP(e, [t, n, r, o]) {
  t.length > 0 && r("received item sizes", t, Hn.DEBUG);
  const i = e.sizeTree;
  let s = i, l = 0;
  if (n.length > 0 && vt(i) && t.length === 2) {
    const p = t[0].size, h = t[1].size;
    s = n.reduce((g, m) => Dn(Dn(g, m, p), m + 1, h), s);
  } else
    [s, l] = wP(s, t);
  if (s === i)
    return e;
  const { lastIndex: c, lastOffset: u, lastSize: d, offsetTree: f } = Bf(e.offsetTree, l, s, o);
  return {
    groupIndices: n,
    groupOffsetTree: n.reduce((p, h) => Dn(p, h, pa(h, f, o)), ki()),
    lastIndex: c,
    lastOffset: u,
    lastSize: d,
    offsetTree: f,
    sizeTree: s
  };
}
function OP(e) {
  return jo(e).map(({ k: t, v: n }, r, o) => {
    const i = o[r + 1];
    return { endIndex: i ? i.k - 1 : 1 / 0, size: n, startIndex: t };
  });
}
function Ug(e, t) {
  let n = 0, r = 0;
  for (; n < e; )
    n += t[r + 1] - t[r] - 1, r++;
  return r - (n === e ? 0 : 1);
}
function Bf(e, t, n, r) {
  let o = e, i = 0, s = 0, l = 0, c = 0;
  if (t !== 0) {
    c = fc(o, t - 1, gh), l = o[c].offset;
    const u = pr(n, t - 1);
    i = u[0], s = u[1], o.length && o[c].size === pr(n, t)[1] && (c -= 1), o = o.slice(0, c + 1);
  } else
    o = [];
  for (const { start: u, value: d } of gu(n, t, 1 / 0)) {
    const f = u - i, p = f * s + l + f * r;
    o.push({
      index: u,
      offset: p,
      size: d
    }), i = u, l = p, s = d;
  }
  return {
    lastIndex: i,
    lastOffset: l,
    lastSize: s,
    offsetTree: o
  };
}
function RP(e) {
  return { index: e.index, value: e };
}
function kP(e) {
  const { endIndex: t, size: n, startIndex: r } = e;
  return (o) => o.start === r && (o.end === t || o.end === 1 / 0) && o.value === n;
}
const NP = {
  offsetHeight: "height",
  offsetWidth: "width"
}, Lr = rt(
  ([{ log: e }, { recalcInProgress: t }]) => {
    const n = Xe(), r = Xe(), o = dn(r, 0), i = Xe(), s = Xe(), l = ve(0), c = ve([]), u = ve(void 0), d = ve(void 0), f = ve((S, T) => So(S, NP[T])), p = ve(void 0), h = ve(0), g = xP(), m = dn(
      ye(n, Ye(c, e, h), Or(CP, g), St()),
      g
    ), b = dn(
      ye(
        c,
        St(),
        Or((S, T) => ({ current: T, prev: S.current }), {
          current: [],
          prev: []
        }),
        ke(({ prev: S }) => S)
      ),
      []
    );
    De(
      ye(
        c,
        Ve((S) => S.length > 0),
        Ye(m, h),
        ke(([S, T, C]) => {
          const k = S.reduce((P, y, R) => Dn(P, y, pa(y, T.offsetTree, C) || R), ki());
          return {
            ...T,
            groupIndices: S,
            groupOffsetTree: k
          };
        })
      ),
      m
    ), De(
      ye(
        r,
        Ye(m),
        Ve(([S, { lastIndex: T }]) => S < T),
        ke(([S, { lastIndex: T, lastSize: C }]) => [
          {
            endIndex: T,
            size: C,
            startIndex: S
          }
        ])
      ),
      n
    ), De(u, d);
    const x = dn(
      ye(
        u,
        ke((S) => S === void 0)
      ),
      !0
    );
    De(
      ye(
        d,
        Ve((S) => S !== void 0 && vt(un(m).sizeTree)),
        ke((S) => [{ endIndex: 0, size: S, startIndex: 0 }])
      ),
      n
    );
    const E = jn(
      ye(
        n,
        Ye(m),
        Or(
          ({ sizes: S }, [T, C]) => ({
            changed: C !== S,
            sizes: C
          }),
          { changed: !1, sizes: g }
        ),
        ke((S) => S.changed)
      )
    );
    ut(
      ye(
        l,
        Or(
          (S, T) => ({ diff: S.prev - T, prev: T }),
          { diff: 0, prev: 0 }
        ),
        ke((S) => S.diff)
      ),
      (S) => {
        const { groupIndices: T } = un(m);
        if (S > 0)
          Ue(t, !0), Ue(i, S + Ug(S, T));
        else if (S < 0) {
          const C = un(b);
          C.length > 0 && (S -= Ug(-S, C)), Ue(s, S);
        }
      }
    ), ut(ye(l, Ye(e)), ([S, T]) => {
      S < 0 && T(
        "`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value",
        { firstItemIndex: l },
        Hn.ERROR
      );
    });
    const v = jn(i);
    De(
      ye(
        i,
        Ye(m),
        ke(([S, T]) => {
          const C = T.groupIndices.length > 0, k = [], P = T.lastSize;
          if (C) {
            const y = da(T.sizeTree, 0);
            let R = 0, $ = 0;
            for (; R < S; ) {
              const O = T.groupIndices[$], _ = T.groupIndices.length === $ + 1 ? 1 / 0 : T.groupIndices[$ + 1] - O - 1;
              k.push({
                endIndex: O,
                size: y,
                startIndex: O
              }), k.push({
                endIndex: O + 1 + _ - 1,
                size: P,
                startIndex: O + 1
              }), $++, R += _ + 1;
            }
            const A = jo(T.sizeTree);
            return R !== S && A.shift(), A.reduce(
              (O, { k: _, v: I }) => {
                let D = O.ranges;
                return O.prevSize !== 0 && (D = [
                  ...O.ranges,
                  {
                    endIndex: _ + S - 1,
                    size: O.prevSize,
                    startIndex: O.prevIndex
                  }
                ]), {
                  prevIndex: _ + S,
                  prevSize: I,
                  ranges: D
                };
              },
              {
                prevIndex: S,
                prevSize: 0,
                ranges: k
              }
            ).ranges;
          }
          return jo(T.sizeTree).reduce(
            (y, { k: R, v: $ }) => ({
              prevIndex: R + S,
              prevSize: $,
              ranges: [...y.ranges, { endIndex: R + S - 1, size: y.prevSize, startIndex: y.prevIndex }]
            }),
            {
              prevIndex: 0,
              prevSize: P,
              ranges: []
            }
          ).ranges;
        })
      ),
      n
    );
    const w = jn(
      ye(
        s,
        Ye(m, h),
        ke(([S, { offsetTree: T }, C]) => {
          const k = -S;
          return pa(k, T, C);
        })
      )
    );
    return De(
      ye(
        s,
        Ye(m, h),
        ke(([S, T, C]) => {
          if (T.groupIndices.length > 0) {
            if (vt(T.sizeTree))
              return T;
            let k = ki();
            const P = un(b);
            let y = 0, R = 0, $ = 0;
            for (; y < -S; ) {
              $ = P[R];
              const A = P[R + 1] - $ - 1;
              R++, y += A + 1;
            }
            if (k = jo(T.sizeTree).reduce((A, { k: O, v: _ }) => Dn(A, Math.max(0, O + S), _), k), y !== -S) {
              const A = da(T.sizeTree, $);
              k = Dn(k, 0, A);
              const O = pr(T.sizeTree, -S + 1)[1];
              k = Dn(k, 1, O);
            }
            return {
              ...T,
              sizeTree: k,
              ...Bf(T.offsetTree, 0, k, C)
            };
          } else {
            const k = jo(T.sizeTree).reduce((P, { k: y, v: R }) => Dn(P, Math.max(0, y + S), R), ki());
            return {
              ...T,
              sizeTree: k,
              ...Bf(T.offsetTree, 0, k, C)
            };
          }
        })
      ),
      m
    ), {
      beforeUnshiftWith: v,
      // input
      data: p,
      defaultItemSize: d,
      firstItemIndex: l,
      fixedItemSize: u,
      gap: h,
      groupIndices: c,
      itemSize: f,
      listRefresh: E,
      shiftWith: s,
      shiftWithOffset: w,
      sizeRanges: n,
      // output
      sizes: m,
      statefulTotalCount: o,
      totalCount: r,
      trackItemSizes: x,
      unshiftWith: i
    };
  },
  Tt($o, mh),
  { singleton: !0 }
);
function IP(e) {
  return e.reduce(
    (t, n) => (t.groupIndices.push(t.totalCount), t.totalCount += n + 1, t),
    {
      groupIndices: [],
      totalCount: 0
    }
  );
}
const Lx = rt(
  ([{ groupIndices: e, sizes: t, totalCount: n }, { headerHeight: r, scrollTop: o }]) => {
    const i = Xe(), s = Xe(), l = jn(ye(i, ke(IP)));
    return De(
      ye(
        l,
        ke((c) => c.totalCount)
      ),
      n
    ), De(
      ye(
        l,
        ke((c) => c.groupIndices)
      ),
      e
    ), De(
      ye(
        Qt(o, t, r),
        Ve(([c, u]) => yu(u)),
        ke(([c, u, d]) => pr(u.groupOffsetTree, Math.max(c - d, 0), "v")[0]),
        St(),
        ke((c) => [c])
      ),
      s
    ), { groupCounts: i, topItemsIndexes: s };
  },
  Tt(Lr, xn)
), Po = rt(
  ([{ log: e }]) => {
    const t = ve(!1), n = jn(
      ye(
        t,
        Ve((r) => r),
        St()
      )
    );
    return ut(t, (r) => {
      r && un(e)("props updated", {}, Hn.DEBUG);
    }), { didMount: n, propsReady: t };
  },
  Tt($o),
  { singleton: !0 }
), $P = typeof document < "u" && "scrollBehavior" in document.documentElement.style;
function zx(e) {
  const t = typeof e == "number" ? { index: e } : e;
  return t.align || (t.align = "start"), (!t.behavior || !$P) && (t.behavior = "auto"), t.offset || (t.offset = 0), t;
}
const Ba = rt(
  ([
    { gap: e, listRefresh: t, sizes: n, totalCount: r },
    {
      fixedFooterHeight: o,
      fixedHeaderHeight: i,
      footerHeight: s,
      headerHeight: l,
      scrollingInProgress: c,
      scrollTo: u,
      smoothScrollTargetReached: d,
      viewportHeight: f
    },
    { log: p }
  ]) => {
    const h = Xe(), g = Xe(), m = ve(0);
    let b = null, x = null, E = null;
    function v() {
      b && (b(), b = null), E && (E(), E = null), x && (clearTimeout(x), x = null), Ue(c, !1);
    }
    return De(
      ye(
        h,
        Ye(n, f, r, m, l, s, p),
        Ye(e, i, o),
        ke(
          ([
            [w, S, T, C, k, P, y, R],
            $,
            A,
            O
          ]) => {
            const _ = zx(w), { align: I, behavior: D, offset: z } = _, B = C - 1, F = Fx(_, S, B);
            let L = pa(F, S.offsetTree, $) + P;
            I === "end" ? (L += A + pr(S.sizeTree, F)[1] - T + O, F === B && (L += y)) : I === "center" ? L += (A + pr(S.sizeTree, F)[1] - T + O) / 2 : L -= k, z && (L += z);
            const W = (U) => {
              v(), U ? (R("retrying to scroll to", { location: w }, Hn.DEBUG), Ue(h, w)) : (Ue(g, !0), R("list did not change, scroll successful", {}, Hn.DEBUG));
            };
            if (v(), D === "smooth") {
              let U = !1;
              E = ut(t, (Z) => {
                U = U || Z;
              }), b = Dr(d, () => {
                W(U);
              });
            } else
              b = Dr(ye(t, PP(150)), W);
            return x = setTimeout(() => {
              v();
            }, 1200), Ue(c, !0), R("scrolling from index to", { behavior: D, index: F, top: L }, Hn.DEBUG), { behavior: D, top: L };
          }
        )
      ),
      u
    ), {
      scrollTargetReached: g,
      scrollToIndex: h,
      topListHeight: m
    };
  },
  Tt(Lr, xn, $o),
  { singleton: !0 }
);
function PP(e) {
  return (t) => {
    const n = setTimeout(() => {
      t(!1);
    }, e);
    return (r) => {
      r && (t(!0), clearTimeout(n));
    };
  };
}
function yh(e, t) {
  e == 0 ? t() : requestAnimationFrame(() => {
    yh(e - 1, t);
  });
}
function bh(e, t) {
  const n = t - 1;
  return typeof e == "number" ? e : e.index === "LAST" ? n : e.index;
}
const Fa = rt(
  ([{ defaultItemSize: e, listRefresh: t, sizes: n }, { scrollTop: r }, { scrollTargetReached: o, scrollToIndex: i }, { didMount: s }]) => {
    const l = ve(!0), c = ve(0), u = ve(!0);
    return De(
      ye(
        s,
        Ye(c),
        Ve(([d, f]) => !!f),
        Er(!1)
      ),
      l
    ), De(
      ye(
        s,
        Ye(c),
        Ve(([d, f]) => !!f),
        Er(!1)
      ),
      u
    ), ut(
      ye(
        Qt(t, s),
        Ye(l, n, e, u),
        Ve(([[, d], f, { sizeTree: p }, h, g]) => d && (!vt(p) || fh(h)) && !f && !g),
        Ye(c)
      ),
      ([, d]) => {
        Dr(o, () => {
          Ue(u, !0);
        }), yh(4, () => {
          Dr(r, () => {
            Ue(l, !0);
          }), Ue(i, d);
        });
      }
    ), {
      initialItemFinalLocationReached: u,
      initialTopMostItemIndex: c,
      scrolledToInitialItem: l
    };
  },
  Tt(Lr, xn, Ba, Po),
  { singleton: !0 }
);
function Vx(e, t) {
  return Math.abs(e - t) < 1.01;
}
const ha = "up", Ws = "down", _P = "none", MP = {
  atBottom: !1,
  notAtBottomBecause: "NOT_SHOWING_LAST_ITEM",
  state: {
    offsetBottom: 0,
    scrollHeight: 0,
    scrollTop: 0,
    viewportHeight: 0
  }
}, AP = 0, La = rt(([{ footerHeight: e, headerHeight: t, scrollBy: n, scrollContainerState: r, scrollTop: o, viewportHeight: i }]) => {
  const s = ve(!1), l = ve(!0), c = Xe(), u = Xe(), d = ve(4), f = ve(AP), p = dn(
    ye(
      jg(ye(je(o), ji(1), Er(!0)), ye(je(o), ji(1), Er(!1), Vg(100))),
      St()
    ),
    !1
  ), h = dn(
    ye(jg(ye(n, Er(!0)), ye(n, Er(!1), Vg(200))), St()),
    !1
  );
  De(
    ye(
      Qt(je(o), je(f)),
      ke(([E, v]) => E <= v),
      St()
    ),
    l
  ), De(ye(l, yo(50)), u);
  const g = jn(
    ye(
      Qt(r, je(i), je(t), je(e), je(d)),
      Or((E, [{ scrollHeight: v, scrollTop: w }, S, T, C, k]) => {
        const P = w + S - v > -k, y = {
          scrollHeight: v,
          scrollTop: w,
          viewportHeight: S
        };
        if (P) {
          let $, A;
          return w > E.state.scrollTop ? ($ = "SCROLLED_DOWN", A = E.state.scrollTop - w) : ($ = "SIZE_DECREASED", A = E.state.scrollTop - w || E.scrollTopDelta), {
            atBottom: !0,
            atBottomBecause: $,
            scrollTopDelta: A,
            state: y
          };
        }
        let R;
        return y.scrollHeight > E.state.scrollHeight ? R = "SIZE_INCREASED" : S < E.state.viewportHeight ? R = "VIEWPORT_HEIGHT_DECREASING" : w < E.state.scrollTop ? R = "SCROLLING_UPWARDS" : R = "NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM", {
          atBottom: !1,
          notAtBottomBecause: R,
          state: y
        };
      }, MP),
      St((E, v) => E && E.atBottom === v.atBottom)
    )
  ), m = dn(
    ye(
      r,
      Or(
        (E, { scrollHeight: v, scrollTop: w, viewportHeight: S }) => {
          if (Vx(E.scrollHeight, v))
            return {
              changed: !1,
              jump: 0,
              scrollHeight: v,
              scrollTop: w
            };
          {
            const T = v - (w + S) < 1;
            return E.scrollTop !== w && T ? {
              changed: !0,
              jump: E.scrollTop - w,
              scrollHeight: v,
              scrollTop: w
            } : {
              changed: !0,
              jump: 0,
              scrollHeight: v,
              scrollTop: w
            };
          }
        },
        { changed: !1, jump: 0, scrollHeight: 0, scrollTop: 0 }
      ),
      Ve((E) => E.changed),
      ke((E) => E.jump)
    ),
    0
  );
  De(
    ye(
      g,
      ke((E) => E.atBottom)
    ),
    s
  ), De(ye(s, yo(50)), c);
  const b = ve(Ws);
  De(
    ye(
      r,
      ke(({ scrollTop: E }) => E),
      St(),
      Or(
        (E, v) => un(h) ? { direction: E.direction, prevScrollTop: v } : { direction: v < E.prevScrollTop ? ha : Ws, prevScrollTop: v },
        { direction: Ws, prevScrollTop: 0 }
      ),
      ke((E) => E.direction)
    ),
    b
  ), De(ye(r, yo(50), Er(_P)), b);
  const x = ve(0);
  return De(
    ye(
      p,
      Ve((E) => !E),
      Er(0)
    ),
    x
  ), De(
    ye(
      o,
      yo(100),
      Ye(p),
      Ve(([E, v]) => !!v),
      Or(([E, v], [w]) => [v, w], [0, 0]),
      ke(([E, v]) => v - E)
    ),
    x
  ), {
    atBottomState: g,
    atBottomStateChange: c,
    atBottomThreshold: d,
    atTopStateChange: u,
    atTopThreshold: f,
    isAtBottom: s,
    isAtTop: l,
    isScrolling: p,
    lastJumpDueToItemResize: m,
    scrollDirection: b,
    scrollVelocity: x
  };
}, Tt(xn)), pc = "top", hc = "bottom", qg = "none";
function Yg(e, t, n) {
  return typeof e == "number" ? n === ha && t === pc || n === Ws && t === hc ? e : 0 : n === ha ? t === pc ? e.main : e.reverse : t === hc ? e.main : e.reverse;
}
function Gg(e, t) {
  var n;
  return typeof e == "number" ? e : (n = e[t]) != null ? n : 0;
}
const vh = rt(
  ([{ deviation: e, fixedHeaderHeight: t, headerHeight: n, scrollTop: r, viewportHeight: o }]) => {
    const i = Xe(), s = ve(0), l = ve(0), c = ve(0), u = dn(
      ye(
        Qt(
          je(r),
          je(o),
          je(n),
          je(i, fa),
          je(c),
          je(s),
          je(t),
          je(e),
          je(l)
        ),
        ke(
          ([
            d,
            f,
            p,
            [h, g],
            m,
            b,
            x,
            E,
            v
          ]) => {
            const w = d - E, S = b + x, T = Math.max(p - w, 0);
            let C = qg;
            const k = Gg(v, pc), P = Gg(v, hc);
            return h -= E, h += p + x, g += p + x, g -= E, h > d + S - k && (C = ha), g < d - T + f + P && (C = Ws), C !== qg ? [
              Math.max(w - p - Yg(m, pc, C) - k, 0),
              w - T - x + f + Yg(m, hc, C) + P
            ] : null;
          }
        ),
        Ve((d) => d != null),
        St(fa)
      ),
      [0, 0]
    );
    return {
      increaseViewportBy: l,
      // input
      listBoundary: i,
      overscan: c,
      topListHeight: s,
      // output
      visibleRange: u
    };
  },
  Tt(xn),
  { singleton: !0 }
);
function DP(e, t, n) {
  if (yu(t)) {
    const r = Bx(e, t);
    return [
      { index: pr(t.groupOffsetTree, r)[0], offset: 0, size: 0 },
      { data: n == null ? void 0 : n[0], index: r, offset: 0, size: 0 }
    ];
  }
  return [{ data: n == null ? void 0 : n[0], index: e, offset: 0, size: 0 }];
}
const Cd = {
  bottom: 0,
  firstItemIndex: 0,
  items: [],
  offsetBottom: 0,
  offsetTop: 0,
  top: 0,
  topItems: [],
  topListHeight: 0,
  totalCount: 0
};
function Yl(e, t, n, r, o, i) {
  const { lastIndex: s, lastOffset: l, lastSize: c } = o;
  let u = 0, d = 0;
  if (e.length > 0) {
    u = e[0].offset;
    const m = e[e.length - 1];
    d = m.offset + m.size;
  }
  const f = n - s, p = l + f * c + (f - 1) * r, h = u, g = p - d;
  return {
    bottom: d,
    firstItemIndex: i,
    items: Kg(e, o, i),
    offsetBottom: g,
    offsetTop: u,
    top: h,
    topItems: Kg(t, o, i),
    topListHeight: t.reduce((m, b) => b.size + m, 0),
    totalCount: n
  };
}
function jx(e, t, n, r, o, i) {
  let s = 0;
  if (n.groupIndices.length > 0)
    for (const d of n.groupIndices) {
      if (d - s >= e)
        break;
      s++;
    }
  const l = e + s, c = bh(t, l), u = Array.from({ length: l }).map((d, f) => ({
    data: i[f + c],
    index: f + c,
    offset: 0,
    size: 0
  }));
  return Yl(u, [], l, o, n, r);
}
function Kg(e, t, n) {
  if (e.length === 0)
    return [];
  if (!yu(t))
    return e.map((u) => ({ ...u, index: u.index + n, originalIndex: u.index }));
  const r = e[0].index, o = e[e.length - 1].index, i = [], s = gu(t.groupOffsetTree, r, o);
  let l, c = 0;
  for (const u of e) {
    (!l || l.end < u.index) && (l = s.shift(), c = t.groupIndices.indexOf(l.start));
    let d;
    u.index === l.start ? d = {
      index: c,
      type: "group"
    } : d = {
      groupIndex: c,
      index: u.index - (c + 1) + n
    }, i.push({
      ...d,
      data: u.data,
      offset: u.offset,
      originalIndex: u.index,
      size: u.size
    });
  }
  return i;
}
const ri = rt(
  ([
    { data: e, firstItemIndex: t, gap: n, sizes: r, totalCount: o },
    i,
    { listBoundary: s, topListHeight: l, visibleRange: c },
    { initialTopMostItemIndex: u, scrolledToInitialItem: d },
    { topListHeight: f },
    p,
    { didMount: h },
    { recalcInProgress: g }
  ]) => {
    const m = ve([]), b = ve(0), x = Xe();
    De(i.topItemsIndexes, m);
    const E = dn(
      ye(
        Qt(
          h,
          g,
          je(c, fa),
          je(o),
          je(r),
          je(u),
          d,
          je(m),
          je(t),
          je(n),
          e
        ),
        Ve(([T, C, , k, , , , , , , P]) => {
          const y = P && P.length !== k;
          return T && !C && !y;
        }),
        ke(
          ([
            ,
            ,
            [T, C],
            k,
            P,
            y,
            R,
            $,
            A,
            O,
            _
          ]) => {
            const I = P, { offsetTree: D, sizeTree: z } = I, B = un(b);
            if (k === 0)
              return { ...Cd, totalCount: k };
            if (T === 0 && C === 0)
              return B === 0 ? { ...Cd, totalCount: k } : jx(B, y, P, A, O, _ || []);
            if (vt(z))
              return B > 0 ? null : Yl(
                DP(bh(y, k), I, _),
                [],
                k,
                O,
                I,
                A
              );
            const F = [];
            if ($.length > 0) {
              const Q = $[0], ee = $[$.length - 1];
              let te = 0;
              for (const q of gu(z, Q, ee)) {
                const oe = q.value, K = Math.max(q.start, Q), ne = Math.min(q.end, ee);
                for (let j = K; j <= ne; j++)
                  F.push({ data: _ == null ? void 0 : _[j], index: j, offset: te, size: oe }), te += oe;
              }
            }
            if (!R)
              return Yl([], F, k, O, I, A);
            const L = $.length > 0 ? $[$.length - 1] + 1 : 0, W = TP(D, T, C, L);
            if (W.length === 0)
              return null;
            const U = k - 1, Z = mu([], (Q) => {
              for (const ee of W) {
                const te = ee.value;
                let q = te.offset, oe = ee.start;
                const K = te.size;
                if (te.offset < T) {
                  oe += Math.floor((T - te.offset + O) / (K + O));
                  const j = oe - ee.start;
                  q += j * K + j * O;
                }
                oe < L && (q += (L - oe) * K, oe = L);
                const ne = Math.min(ee.end, U);
                for (let j = oe; j <= ne && !(q >= C); j++)
                  Q.push({ data: _ == null ? void 0 : _[j], index: j, offset: q, size: K }), q += K + O;
              }
            });
            return Yl(Z, F, k, O, I, A);
          }
        ),
        //@ts-expect-error filter needs to be fixed
        Ve((T) => T !== null),
        St()
      ),
      Cd
    );
    De(
      ye(
        e,
        Ve(fh),
        ke((T) => T == null ? void 0 : T.length)
      ),
      o
    ), De(
      ye(
        E,
        ke((T) => T.topListHeight)
      ),
      f
    ), De(f, l), De(
      ye(
        E,
        ke((T) => [T.top, T.bottom])
      ),
      s
    ), De(
      ye(
        E,
        ke((T) => T.items)
      ),
      x
    );
    const v = jn(
      ye(
        E,
        Ve(({ items: T }) => T.length > 0),
        Ye(o, e),
        Ve(([{ items: T }, C]) => T[T.length - 1].originalIndex === C - 1),
        ke(([, T, C]) => [T - 1, C]),
        St(fa),
        ke(([T]) => T)
      )
    ), w = jn(
      ye(
        E,
        yo(200),
        Ve(({ items: T, topItems: C }) => T.length > 0 && T[0].originalIndex === C.length),
        ke(({ items: T }) => T[0].index),
        St()
      )
    ), S = jn(
      ye(
        E,
        Ve(({ items: T }) => T.length > 0),
        ke(({ items: T }) => {
          let C = 0, k = T.length - 1;
          for (; T[C].type === "group" && C < k; )
            C++;
          for (; T[k].type === "group" && k > C; )
            k--;
          return {
            endIndex: T[k].index,
            startIndex: T[C].index
          };
        }),
        St(Ax)
      )
    );
    return { endReached: v, initialItemCount: b, itemsRendered: x, listState: E, rangeChanged: S, startReached: w, topItemsIndexes: m, ...p };
  },
  Tt(
    Lr,
    Lx,
    vh,
    Fa,
    Ba,
    La,
    Po,
    mh
  ),
  { singleton: !0 }
), Hx = rt(
  ([{ fixedFooterHeight: e, fixedHeaderHeight: t, footerHeight: n, headerHeight: r }, { listState: o }]) => {
    const i = Xe(), s = dn(
      ye(
        Qt(n, e, r, t, o),
        ke(([l, c, u, d, f]) => l + c + u + d + f.offsetBottom + f.bottom)
      ),
      0
    );
    return De(je(s), i), { totalListHeight: s, totalListHeightChanged: i };
  },
  Tt(xn, ri),
  { singleton: !0 }
), BP = rt(
  ([{ viewportHeight: e }, { totalListHeight: t }]) => {
    const n = ve(!1), r = dn(
      ye(
        Qt(n, e, t),
        Ve(([o]) => o),
        ke(([, o, i]) => Math.max(0, o - i)),
        yo(0),
        St()
      ),
      0
    );
    return { alignToBottom: n, paddingTopAddition: r };
  },
  Tt(xn, Hx),
  { singleton: !0 }
);
function Xg(e) {
  return e ? e === "smooth" ? "smooth" : "auto" : !1;
}
const FP = (e, t) => typeof e == "function" ? Xg(e(t)) : t && Xg(e), LP = rt(
  ([
    { listRefresh: e, totalCount: t },
    { atBottomState: n, isAtBottom: r },
    { scrollToIndex: o },
    { scrolledToInitialItem: i },
    { didMount: s, propsReady: l },
    { log: c },
    { scrollingInProgress: u }
  ]) => {
    const d = ve(!1), f = Xe();
    let p = null;
    function h(m) {
      Ue(o, {
        align: "end",
        behavior: m,
        index: "LAST"
      });
    }
    ut(
      ye(
        Qt(ye(je(t), ji(1)), s),
        Ye(je(d), r, i, u),
        ke(([[m, b], x, E, v, w]) => {
          let S = b && v, T = "auto";
          return S && (T = FP(x, E || w), S = S && !!T), { followOutputBehavior: T, shouldFollow: S, totalCount: m };
        }),
        Ve(({ shouldFollow: m }) => m)
      ),
      ({ followOutputBehavior: m, totalCount: b }) => {
        p && (p(), p = null), p = Dr(e, () => {
          un(c)("following output to ", { totalCount: b }, Hn.DEBUG), h(m), p = null;
        });
      }
    );
    function g(m) {
      const b = Dr(n, (x) => {
        m && !x.atBottom && x.notAtBottomBecause === "SIZE_INCREASED" && !p && (un(c)("scrolling to bottom due to increased size", {}, Hn.DEBUG), h("auto"));
      });
      setTimeout(b, 100);
    }
    return ut(
      ye(
        Qt(je(d), t, l),
        Ve(([m, , b]) => m && b),
        Or(
          ({ value: m }, [, b]) => ({ refreshed: m === b, value: b }),
          { refreshed: !1, value: 0 }
        ),
        Ve(({ refreshed: m }) => m),
        Ye(d, t)
      ),
      ([, m]) => {
        un(i) && g(m !== !1);
      }
    ), ut(f, () => {
      g(un(d) !== !1);
    }), ut(Qt(je(d), n), ([m, b]) => {
      m && !b.atBottom && b.notAtBottomBecause === "VIEWPORT_HEIGHT_DECREASING" && h("auto");
    }), { autoscrollToBottom: f, followOutput: d };
  },
  Tt(Lr, La, Ba, Fa, Po, $o, xn)
), zP = rt(
  ([{ data: e, firstItemIndex: t, gap: n, sizes: r }, { initialTopMostItemIndex: o }, { initialItemCount: i, listState: s }, { didMount: l }]) => (De(
    ye(
      l,
      Ye(i),
      Ve(([, c]) => c !== 0),
      Ye(o, r, t, n, e),
      ke(([[, c], u, d, f, p, h = []]) => jx(c, u, d, f, p, h))
    ),
    s
  ), {}),
  Tt(Lr, Fa, ri, Po),
  { singleton: !0 }
), VP = rt(
  ([{ didMount: e }, { scrollTo: t }, { listState: n }]) => {
    const r = ve(0);
    return ut(
      ye(
        e,
        Ye(r),
        Ve(([, o]) => o !== 0),
        ke(([, o]) => ({ top: o }))
      ),
      (o) => {
        Dr(
          ye(
            n,
            ji(1),
            Ve((i) => i.items.length > 1)
          ),
          () => {
            requestAnimationFrame(() => {
              Ue(t, o);
            });
          }
        );
      }
    ), {
      initialScrollTop: r
    };
  },
  Tt(Po, xn, ri),
  { singleton: !0 }
), jP = ({
  itemBottom: e,
  itemTop: t,
  locationParams: { align: n, behavior: r, ...o },
  viewportBottom: i,
  viewportTop: s
}) => t < s ? { ...o, align: n ?? "start", behavior: r } : e > i ? { ...o, align: n ?? "end", behavior: r } : null, HP = rt(
  ([
    { gap: e, sizes: t, totalCount: n },
    { fixedFooterHeight: r, fixedHeaderHeight: o, headerHeight: i, scrollingInProgress: s, scrollTop: l, viewportHeight: c },
    { scrollToIndex: u }
  ]) => {
    const d = Xe();
    return De(
      ye(
        d,
        Ye(t, c, n, i, o, r, l),
        Ye(e),
        ke(([[f, p, h, g, m, b, x, E], v]) => {
          const { align: w, behavior: S, calculateViewLocation: T = jP, done: C, ...k } = f, P = Fx(f, p, g - 1), y = pa(P, p.offsetTree, v) + m + b, R = y + pr(p.sizeTree, P)[1], $ = E + b, A = E + h - x, O = T({
            itemBottom: R,
            itemTop: y,
            locationParams: { align: w, behavior: S, ...k },
            viewportBottom: A,
            viewportTop: $
          });
          return O ? C && Dr(
            ye(
              s,
              Ve((_) => !_),
              // skips the initial publish of false, and the cleanup call.
              // but if scrollingInProgress is true, we skip the initial publish.
              ji(un(s) ? 1 : 2)
            ),
            C
          ) : C && C(), O;
        }),
        Ve((f) => f !== null)
      ),
      u
    ), {
      scrollIntoView: d
    };
  },
  Tt(Lr, xn, Ba, ri, $o),
  { singleton: !0 }
), Wx = rt(
  ([{ scrollVelocity: e }]) => {
    const t = ve(!1), n = Xe(), r = ve(!1);
    return De(
      ye(
        e,
        Ye(r, t, n),
        Ve(([o, i]) => !!i),
        ke(([o, i, s, l]) => {
          const { enter: c, exit: u } = i;
          if (s) {
            if (u(o, l))
              return !1;
          } else if (c(o, l))
            return !0;
          return s;
        }),
        St()
      ),
      t
    ), ut(
      ye(Qt(t, e, n), Ye(r)),
      ([[o, i, s], l]) => {
        o && l && l.change && l.change(i, s);
      }
    ), { isSeeking: t, scrollSeekConfiguration: r, scrollSeekRangeChanged: n, scrollVelocity: e };
  },
  Tt(La),
  { singleton: !0 }
), xh = rt(([{ scrollContainerState: e, scrollTo: t }]) => {
  const n = Xe(), r = Xe(), o = Xe(), i = ve(!1), s = ve(void 0);
  return De(
    ye(
      Qt(n, r),
      ke(([{ scrollHeight: l, scrollTop: c, viewportHeight: u }, { offsetTop: d }]) => ({
        scrollHeight: l,
        scrollTop: Math.max(0, c - d),
        viewportHeight: u
      }))
    ),
    e
  ), De(
    ye(
      t,
      Ye(r),
      ke(([l, { offsetTop: c }]) => ({
        ...l,
        top: l.top + c
      }))
    ),
    o
  ), {
    customScrollParent: s,
    // config
    useWindowScroll: i,
    // input
    windowScrollContainerState: n,
    // signals
    windowScrollTo: o,
    windowViewportRect: r
  };
}, Tt(xn)), WP = rt(
  ([
    { sizeRanges: e, sizes: t },
    { headerHeight: n, scrollTop: r },
    { initialTopMostItemIndex: o },
    { didMount: i },
    { useWindowScroll: s, windowScrollContainerState: l, windowViewportRect: c }
  ]) => {
    const u = Xe(), d = ve(void 0), f = ve(null), p = ve(null);
    return De(l, f), De(c, p), ut(
      ye(
        u,
        Ye(t, r, s, f, p, n)
      ),
      ([h, g, m, b, x, E, v]) => {
        const w = OP(g.sizeTree);
        b && x !== null && E !== null && (m = x.scrollTop - E.offsetTop), m -= v, h({ ranges: w, scrollTop: m });
      }
    ), De(ye(d, Ve(fh), ke(UP)), o), De(
      ye(
        i,
        Ye(d),
        Ve(([, h]) => h !== void 0),
        St(),
        ke(([, h]) => h.ranges)
      ),
      e
    ), {
      getState: u,
      restoreStateFrom: d
    };
  },
  Tt(Lr, xn, Fa, Po, xh)
);
function UP(e) {
  return { align: "start", index: 0, offset: e.scrollTop };
}
const qP = rt(([{ topItemsIndexes: e }]) => {
  const t = ve(0);
  return De(
    ye(
      t,
      Ve((n) => n >= 0),
      ke((n) => Array.from({ length: n }).map((r, o) => o))
    ),
    e
  ), { topItemCount: t };
}, Tt(ri));
function Ux(e) {
  let t = !1, n;
  return () => (t || (t = !0, n = e()), n);
}
const YP = Ux(() => /iP(ad|od|hone)/i.test(navigator.userAgent) && /WebKit/i.test(navigator.userAgent)), GP = rt(
  ([
    { deviation: e, scrollBy: t, scrollingInProgress: n, scrollTop: r },
    { isAtBottom: o, isScrolling: i, lastJumpDueToItemResize: s, scrollDirection: l },
    { listState: c },
    { beforeUnshiftWith: u, gap: d, shiftWithOffset: f, sizes: p },
    { log: h },
    { recalcInProgress: g }
  ]) => {
    const m = jn(
      ye(
        c,
        Ye(s),
        Or(
          ([, x, E, v], [{ bottom: w, items: S, offsetBottom: T, totalCount: C }, k]) => {
            const P = w + T;
            let y = 0;
            return E === C && x.length > 0 && S.length > 0 && (S[0].originalIndex === 0 && x[0].originalIndex === 0 || (y = P - v, y !== 0 && (y += k))), [y, S, C, P];
          },
          [0, [], 0, 0]
        ),
        Ve(([x]) => x !== 0),
        Ye(r, l, n, o, h, g),
        Ve(([, x, E, v, , , w]) => !w && !v && x !== 0 && E === ha),
        ke(([[x], , , , , E]) => (E("Upward scrolling compensation", { amount: x }, Hn.DEBUG), x))
      )
    );
    function b(x) {
      x > 0 ? (Ue(t, { behavior: "auto", top: -x }), Ue(e, 0)) : (Ue(e, 0), Ue(t, { behavior: "auto", top: -x }));
    }
    return ut(ye(m, Ye(e, i)), ([x, E, v]) => {
      v && YP() ? Ue(e, E - x) : b(-x);
    }), ut(
      ye(
        Qt(dn(i, !1), e, g),
        Ve(([x, E, v]) => !x && !v && E !== 0),
        ke(([x, E]) => E),
        yo(1)
      ),
      b
    ), De(
      ye(
        f,
        ke((x) => ({ top: -x }))
      ),
      t
    ), ut(
      ye(
        u,
        Ye(p, d),
        ke(([x, { groupIndices: E, lastSize: v, sizeTree: w }, S]) => {
          function T(C) {
            return C * (v + S);
          }
          if (E.length === 0)
            return T(x);
          {
            let C = 0;
            const k = da(w, 0);
            let P = 0, y = 0;
            for (; P < x; ) {
              P++, C += k;
              let R = E.length === y + 1 ? 1 / 0 : E[y + 1] - E[y] - 1;
              P + R > x && (C -= k, R = x - P + 1), P += R, C += T(R), y++;
            }
            return C;
          }
        })
      ),
      (x) => {
        Ue(e, x), requestAnimationFrame(() => {
          Ue(t, { top: x }), requestAnimationFrame(() => {
            Ue(e, 0), Ue(g, !1);
          });
        });
      }
    ), { deviation: e };
  },
  Tt(xn, La, ri, Lr, $o, mh)
), KP = rt(
  ([
    e,
    t,
    n,
    r,
    o,
    i,
    s,
    l,
    c,
    u
  ]) => ({
    ...e,
    ...t,
    ...n,
    ...r,
    ...o,
    ...i,
    ...s,
    ...l,
    ...c,
    ...u
  }),
  Tt(
    vh,
    zP,
    Po,
    Wx,
    Hx,
    VP,
    BP,
    xh,
    HP,
    $o
  )
), qx = rt(
  ([
    {
      data: e,
      defaultItemSize: t,
      firstItemIndex: n,
      fixedItemSize: r,
      gap: o,
      groupIndices: i,
      itemSize: s,
      sizeRanges: l,
      sizes: c,
      statefulTotalCount: u,
      totalCount: d,
      trackItemSizes: f
    },
    { initialItemFinalLocationReached: p, initialTopMostItemIndex: h, scrolledToInitialItem: g },
    m,
    b,
    x,
    { listState: E, topItemsIndexes: v, ...w },
    { scrollToIndex: S },
    T,
    { topItemCount: C },
    { groupCounts: k },
    P
  ]) => (De(w.rangeChanged, P.scrollSeekRangeChanged), De(
    ye(
      P.windowViewportRect,
      ke((y) => y.visibleHeight)
    ),
    m.viewportHeight
  ), {
    data: e,
    defaultItemHeight: t,
    firstItemIndex: n,
    fixedItemHeight: r,
    gap: o,
    groupCounts: k,
    initialItemFinalLocationReached: p,
    initialTopMostItemIndex: h,
    scrolledToInitialItem: g,
    sizeRanges: l,
    topItemCount: C,
    topItemsIndexes: v,
    // input
    totalCount: d,
    ...x,
    groupIndices: i,
    itemSize: s,
    listState: E,
    scrollToIndex: S,
    // output
    statefulTotalCount: u,
    trackItemSizes: f,
    // exported from stateFlagsSystem
    ...w,
    // the bag of IO from featureGroup1System
    ...P,
    ...m,
    sizes: c,
    ...b
  }),
  Tt(
    Lr,
    Fa,
    xn,
    WP,
    LP,
    ri,
    Ba,
    GP,
    qP,
    Lx,
    KP
  )
);
function XP(e, t) {
  const n = {}, r = {};
  let o = 0;
  const i = e.length;
  for (; o < i; )
    r[e[o]] = 1, o += 1;
  for (const s in t)
    Object.hasOwn(r, s) || (n[s] = t[s]);
  return n;
}
const ml = typeof document < "u" ? Y.useLayoutEffect : Y.useEffect;
function Yx(e, t, n) {
  const r = Object.keys(t.required || {}), o = Object.keys(t.optional || {}), i = Object.keys(t.methods || {}), s = Object.keys(t.events || {}), l = Y.createContext({});
  function c(b, x) {
    b.propsReady && Ue(b.propsReady, !1);
    for (const E of r) {
      const v = b[t.required[E]];
      Ue(v, x[E]);
    }
    for (const E of o)
      if (E in x) {
        const v = b[t.optional[E]];
        Ue(v, x[E]);
      }
    b.propsReady && Ue(b.propsReady, !0);
  }
  function u(b) {
    return i.reduce((x, E) => (x[E] = (v) => {
      const w = b[t.methods[E]];
      Ue(w, v);
    }, x), {});
  }
  function d(b) {
    return s.reduce((x, E) => (x[E] = dP(b[t.events[E]]), x), {});
  }
  const f = Y.forwardRef((b, x) => {
    const { children: E, ...v } = b, [w] = Y.useState(() => mu(pP(e), (C) => {
      c(C, v);
    })), [S] = Y.useState(zg(d, w));
    ml(() => {
      for (const C of s)
        C in v && ut(S[C], v[C]);
      return () => {
        Object.values(S).map(ph);
      };
    }, [v, S, w]), ml(() => {
      c(w, v);
    }), Y.useImperativeHandle(x, Lg(u(w)));
    const T = n;
    return /* @__PURE__ */ N(l.Provider, { value: w, children: n ? /* @__PURE__ */ N(T, { ...XP([...r, ...o, ...s], v), children: E }) : E });
  }), p = (b) => Y.useCallback(Rx(Ue, Y.useContext(l)[b]), [b]), h = (b) => {
    const x = Y.useContext(l)[b], E = Y.useCallback(
      (v) => ut(x, v),
      [x]
    );
    return Y.useSyncExternalStore(
      E,
      () => un(x),
      () => un(x)
    );
  }, g = (b) => {
    const x = Y.useContext(l)[b], [E, v] = Y.useState(zg(un, x));
    return ml(
      () => ut(x, (w) => {
        w !== E && v(Lg(w));
      }),
      [x, E]
    ), E;
  }, m = Y.version.startsWith("18") ? h : g;
  return {
    Component: f,
    useEmitter: (b, x) => {
      const E = Y.useContext(l)[b];
      ml(() => ut(E, x), [x, E]);
    },
    useEmitterValue: m,
    usePublisher: p
  };
}
const Gx = Y.createContext(void 0), Kx = Y.createContext(void 0), Xx = typeof document < "u" ? Y.useLayoutEffect : Y.useEffect;
function Od(e) {
  return "self" in e;
}
function ZP(e) {
  return "body" in e;
}
function Zx(e, t, n, r = cs, o, i) {
  const s = Y.useRef(null), l = Y.useRef(null), c = Y.useRef(null), u = Y.useCallback(
    (p) => {
      let h, g, m;
      const b = p.target;
      if (ZP(b) || Od(b)) {
        const E = Od(b) ? b : b.defaultView;
        m = i ? E.scrollX : E.scrollY, h = i ? E.document.documentElement.scrollWidth : E.document.documentElement.scrollHeight, g = i ? E.innerWidth : E.innerHeight;
      } else
        m = i ? b.scrollLeft : b.scrollTop, h = i ? b.scrollWidth : b.scrollHeight, g = i ? b.offsetWidth : b.offsetHeight;
      const x = () => {
        e({
          scrollHeight: h,
          scrollTop: Math.max(m, 0),
          viewportHeight: g
        });
      };
      p.suppressFlushSync ? x() : wi.flushSync(x), l.current !== null && (m === l.current || m <= 0 || m === h - g) && (l.current = null, t(!0), c.current && (clearTimeout(c.current), c.current = null));
    },
    [e, t]
  );
  Y.useEffect(() => {
    const p = o || s.current;
    return r(o || s.current), u({ suppressFlushSync: !0, target: p }), p.addEventListener("scroll", u, { passive: !0 }), () => {
      r(null), p.removeEventListener("scroll", u);
    };
  }, [s, u, n, r, o]);
  function d(p) {
    const h = s.current;
    if (!h || (i ? "offsetWidth" in h && h.offsetWidth === 0 : "offsetHeight" in h && h.offsetHeight === 0))
      return;
    const g = p.behavior === "smooth";
    let m, b, x;
    Od(h) ? (b = Math.max(
      So(h.document.documentElement, i ? "width" : "height"),
      i ? h.document.documentElement.scrollWidth : h.document.documentElement.scrollHeight
    ), m = i ? h.innerWidth : h.innerHeight, x = i ? window.scrollX : window.scrollY) : (b = h[i ? "scrollWidth" : "scrollHeight"], m = So(h, i ? "width" : "height"), x = h[i ? "scrollLeft" : "scrollTop"]);
    const E = b - m;
    if (p.top = Math.ceil(Math.max(Math.min(E, p.top), 0)), Vx(m, b) || p.top === x) {
      e({ scrollHeight: b, scrollTop: x, viewportHeight: m }), g && t(!0);
      return;
    }
    g ? (l.current = p.top, c.current && clearTimeout(c.current), c.current = setTimeout(() => {
      c.current = null, l.current = null, t(!0);
    }, 1e3)) : l.current = null, i && (p = { behavior: p.behavior, left: p.top }), h.scrollTo(p);
  }
  function f(p) {
    i && (p = { behavior: p.behavior, left: p.top }), s.current.scrollBy(p);
  }
  return { scrollByCallback: f, scrollerRef: s, scrollToCallback: d };
}
const Rd = "-webkit-sticky", Zg = "sticky", Qx = Ux(() => {
  if (typeof document > "u")
    return Zg;
  const e = document.createElement("div");
  return e.style.position = Rd, e.style.position === Rd ? Rd : Zg;
});
function wh(e) {
  return e;
}
const QP = /* @__PURE__ */ rt(() => {
  const e = ve((c) => `Item ${c}`), t = ve(null), n = ve((c) => `Group ${c}`), r = ve({}), o = ve(wh), i = ve("div"), s = ve(cs), l = (c, u = null) => dn(
    ye(
      r,
      ke((d) => d[c]),
      St()
    ),
    u
  );
  return {
    components: r,
    computeItemKey: o,
    context: t,
    EmptyPlaceholder: l("EmptyPlaceholder"),
    FooterComponent: l("Footer"),
    GroupComponent: l("Group", "div"),
    groupContent: n,
    HeaderComponent: l("Header"),
    HeaderFooterTag: i,
    ItemComponent: l("Item", "div"),
    itemContent: e,
    ListComponent: l("List", "div"),
    ScrollerComponent: l("Scroller", "div"),
    scrollerRef: s,
    ScrollSeekPlaceholder: l("ScrollSeekPlaceholder"),
    TopItemListComponent: l("TopItemList")
  };
}), JP = /* @__PURE__ */ rt(
  ([e, t]) => ({ ...e, ...t }),
  Tt(qx, QP)
), e_ = ({ height: e }) => /* @__PURE__ */ N("div", { style: { height: e } }), t_ = { overflowAnchor: "none", position: Qx(), zIndex: 1 }, Jx = { overflowAnchor: "none" }, n_ = { ...Jx, display: "inline-block", height: "100%" }, Qg = /* @__PURE__ */ Y.memo(function({ showTopList: e = !1 }) {
  const t = He("listState"), n = Qn("sizeRanges"), r = He("useWindowScroll"), o = He("customScrollParent"), i = Qn("windowScrollContainerState"), s = Qn("scrollContainerState"), l = o || r ? i : s, c = He("itemContent"), u = He("context"), d = He("groupContent"), f = He("trackItemSizes"), p = He("itemSize"), h = He("log"), g = Qn("gap"), m = He("horizontalDirection"), { callbackRef: b } = gP(
    n,
    p,
    f,
    e ? cs : l,
    h,
    g,
    o,
    m,
    He("skipAnimationFrameInResizeObserver")
  ), [x, E] = Y.useState(0);
  Sh("deviation", (O) => {
    x !== O && E(O);
  });
  const v = He("EmptyPlaceholder"), w = He("ScrollSeekPlaceholder") || e_, S = He("ListComponent"), T = He("ItemComponent"), C = He("GroupComponent"), k = He("computeItemKey"), P = He("isSeeking"), y = He("groupIndices").length > 0, R = He("alignToBottom"), $ = He("initialItemFinalLocationReached"), A = e ? {} : {
    boxSizing: "border-box",
    ...m ? {
      display: "inline-block",
      height: "100%",
      marginLeft: x !== 0 ? x : R ? "auto" : 0,
      paddingLeft: t.offsetTop,
      paddingRight: t.offsetBottom,
      whiteSpace: "nowrap"
    } : {
      marginTop: x !== 0 ? x : R ? "auto" : 0,
      paddingBottom: t.offsetBottom,
      paddingTop: t.offsetTop
    },
    ...$ ? {} : { visibility: "hidden" }
  };
  return !e && t.totalCount === 0 && v ? /* @__PURE__ */ N(v, { ...on(v, u) }) : /* @__PURE__ */ N(
    S,
    {
      ...on(S, u),
      "data-testid": e ? "virtuoso-top-item-list" : "virtuoso-item-list",
      ref: b,
      style: A,
      children: (e ? t.topItems : t.items).map((O) => {
        const _ = O.originalIndex, I = k(_ + t.firstItemIndex, O.data, u);
        return P ? /* @__PURE__ */ Uo(
          w,
          {
            ...on(w, u),
            height: O.size,
            index: O.index,
            key: I,
            type: O.type || "item",
            ...O.type === "group" ? {} : { groupIndex: O.groupIndex }
          }
        ) : O.type === "group" ? /* @__PURE__ */ Uo(
          C,
          {
            ...on(C, u),
            "data-index": _,
            "data-item-index": O.index,
            "data-known-size": O.size,
            key: I,
            style: t_
          },
          d(O.index, u)
        ) : /* @__PURE__ */ Uo(
          T,
          {
            ...on(T, u),
            ...s_(T, O.data),
            "data-index": _,
            "data-item-group-index": O.groupIndex,
            "data-item-index": O.index,
            "data-known-size": O.size,
            key: I,
            style: m ? n_ : Jx
          },
          y ? c(O.index, O.groupIndex, O.data, u) : c(O.index, O.data, u)
        );
      })
    }
  );
}), r_ = {
  height: "100%",
  outline: "none",
  overflowY: "auto",
  position: "relative",
  WebkitOverflowScrolling: "touch"
}, o_ = {
  outline: "none",
  overflowX: "auto",
  position: "relative"
}, bu = (e) => ({
  height: "100%",
  position: "absolute",
  top: 0,
  width: "100%",
  ...e ? { display: "flex", flexDirection: "column" } : {}
}), i_ = {
  position: Qx(),
  top: 0,
  width: "100%",
  zIndex: 1
};
function on(e, t) {
  if (typeof e != "string")
    return { context: t };
}
function s_(e, t) {
  return { item: typeof e == "string" ? void 0 : t };
}
const a_ = /* @__PURE__ */ Y.memo(function() {
  const e = He("HeaderComponent"), t = Qn("headerHeight"), n = He("HeaderFooterTag"), r = ni(
    Y.useMemo(
      () => (i) => {
        t(So(i, "height"));
      },
      [t]
    ),
    !0,
    He("skipAnimationFrameInResizeObserver")
  ), o = He("context");
  return e ? /* @__PURE__ */ N(n, { ref: r, children: /* @__PURE__ */ N(e, { ...on(e, o) }) }) : null;
}), l_ = /* @__PURE__ */ Y.memo(function() {
  const e = He("FooterComponent"), t = Qn("footerHeight"), n = He("HeaderFooterTag"), r = ni(
    Y.useMemo(
      () => (i) => {
        t(So(i, "height"));
      },
      [t]
    ),
    !0,
    He("skipAnimationFrameInResizeObserver")
  ), o = He("context");
  return e ? /* @__PURE__ */ N(n, { ref: r, children: /* @__PURE__ */ N(e, { ...on(e, o) }) }) : null;
});
function ew({ useEmitter: e, useEmitterValue: t, usePublisher: n }) {
  return Y.memo(function({ children: r, style: o, ...i }) {
    const s = n("scrollContainerState"), l = t("ScrollerComponent"), c = n("smoothScrollTargetReached"), u = t("scrollerRef"), d = t("context"), f = t("horizontalDirection") || !1, { scrollByCallback: p, scrollerRef: h, scrollToCallback: g } = Zx(
      s,
      c,
      l,
      u,
      void 0,
      f
    );
    return e("scrollTo", g), e("scrollBy", p), /* @__PURE__ */ N(
      l,
      {
        "data-testid": "virtuoso-scroller",
        "data-virtuoso-scroller": !0,
        ref: h,
        style: { ...f ? o_ : r_, ...o },
        tabIndex: 0,
        ...i,
        ...on(l, d),
        children: r
      }
    );
  });
}
function tw({ useEmitter: e, useEmitterValue: t, usePublisher: n }) {
  return Y.memo(function({ children: r, style: o, ...i }) {
    const s = n("windowScrollContainerState"), l = t("ScrollerComponent"), c = n("smoothScrollTargetReached"), u = t("totalListHeight"), d = t("deviation"), f = t("customScrollParent"), p = t("context"), h = Y.useRef(null), g = t("scrollerRef"), { scrollByCallback: m, scrollerRef: b, scrollToCallback: x } = Zx(
      s,
      c,
      l,
      g,
      f
    );
    return Xx(() => {
      var E;
      return b.current = f || ((E = h.current) == null ? void 0 : E.ownerDocument.defaultView), () => {
        b.current = null;
      };
    }, [b, f]), e("windowScrollTo", x), e("scrollBy", m), /* @__PURE__ */ N(
      l,
      {
        ref: h,
        "data-virtuoso-scroller": !0,
        style: { position: "relative", ...o, ...u !== 0 ? { height: u + d } : {} },
        ...i,
        ...on(l, p),
        children: r
      }
    );
  });
}
const c_ = ({ children: e }) => {
  const t = Y.useContext(Gx), n = Qn("viewportHeight"), r = Qn("fixedItemHeight"), o = He("alignToBottom"), i = He("horizontalDirection"), s = Y.useMemo(
    () => Ox(n, (c) => So(c, i ? "width" : "height")),
    [n, i]
  ), l = ni(s, !0, He("skipAnimationFrameInResizeObserver"));
  return Y.useEffect(() => {
    t && (n(t.viewportHeight), r(t.itemHeight));
  }, [t, n, r]), /* @__PURE__ */ N("div", { "data-viewport-type": "element", ref: l, style: bu(o), children: e });
}, u_ = ({ children: e }) => {
  const t = Y.useContext(Gx), n = Qn("windowViewportRect"), r = Qn("fixedItemHeight"), o = He("customScrollParent"), i = Nx(
    n,
    o,
    He("skipAnimationFrameInResizeObserver")
  ), s = He("alignToBottom");
  return Y.useEffect(() => {
    t && (r(t.itemHeight), n({ offsetTop: 0, visibleHeight: t.viewportHeight, visibleWidth: 100 }));
  }, [t, n, r]), /* @__PURE__ */ N("div", { "data-viewport-type": "window", ref: i, style: bu(s), children: e });
}, d_ = ({ children: e }) => {
  const t = He("TopItemListComponent") || "div", n = He("headerHeight"), r = { ...i_, marginTop: `${n}px` }, o = He("context");
  return /* @__PURE__ */ N(t, { style: r, ...on(t, o), children: e });
}, f_ = /* @__PURE__ */ Y.memo(function(e) {
  const t = He("useWindowScroll"), n = He("topItemsIndexes").length > 0, r = He("customScrollParent"), o = He("context"), i = r || t ? m_ : h_, s = r || t ? u_ : c_;
  return /* @__PURE__ */ Se(i, { ...e, ...on(i, o), children: [
    n && /* @__PURE__ */ N(d_, { children: /* @__PURE__ */ N(Qg, { showTopList: !0 }) }),
    /* @__PURE__ */ Se(s, { children: [
      /* @__PURE__ */ N(a_, {}),
      /* @__PURE__ */ N(Qg, {}),
      /* @__PURE__ */ N(l_, {})
    ] })
  ] });
}), {
  Component: p_,
  useEmitter: Sh,
  useEmitterValue: He,
  usePublisher: Qn
} = /* @__PURE__ */ Yx(
  JP,
  {
    events: {
      atBottomStateChange: "atBottomStateChange",
      atTopStateChange: "atTopStateChange",
      endReached: "endReached",
      groupIndices: "groupIndices",
      isScrolling: "isScrolling",
      itemsRendered: "itemsRendered",
      rangeChanged: "rangeChanged",
      startReached: "startReached",
      totalListHeightChanged: "totalListHeightChanged"
    },
    methods: {
      autoscrollToBottom: "autoscrollToBottom",
      getState: "getState",
      scrollBy: "scrollBy",
      scrollIntoView: "scrollIntoView",
      scrollTo: "scrollTo",
      scrollToIndex: "scrollToIndex"
    },
    optional: {
      alignToBottom: "alignToBottom",
      atBottomThreshold: "atBottomThreshold",
      atTopThreshold: "atTopThreshold",
      components: "components",
      computeItemKey: "computeItemKey",
      context: "context",
      customScrollParent: "customScrollParent",
      data: "data",
      defaultItemHeight: "defaultItemHeight",
      firstItemIndex: "firstItemIndex",
      fixedItemHeight: "fixedItemHeight",
      followOutput: "followOutput",
      groupContent: "groupContent",
      groupCounts: "groupCounts",
      headerFooterTag: "HeaderFooterTag",
      horizontalDirection: "horizontalDirection",
      increaseViewportBy: "increaseViewportBy",
      initialItemCount: "initialItemCount",
      initialScrollTop: "initialScrollTop",
      initialTopMostItemIndex: "initialTopMostItemIndex",
      itemContent: "itemContent",
      itemSize: "itemSize",
      logLevel: "logLevel",
      overscan: "overscan",
      restoreStateFrom: "restoreStateFrom",
      scrollerRef: "scrollerRef",
      scrollSeekConfiguration: "scrollSeekConfiguration",
      skipAnimationFrameInResizeObserver: "skipAnimationFrameInResizeObserver",
      topItemCount: "topItemCount",
      totalCount: "totalCount",
      useWindowScroll: "useWindowScroll"
    },
    required: {}
  },
  f_
), h_ = /* @__PURE__ */ ew({ useEmitter: Sh, useEmitterValue: He, usePublisher: Qn }), m_ = /* @__PURE__ */ tw({ useEmitter: Sh, useEmitterValue: He, usePublisher: Qn }), g_ = p_, y_ = /* @__PURE__ */ rt(() => {
  const e = ve((c) => /* @__PURE__ */ Se("td", { children: [
    "Item $",
    c
  ] })), t = ve(null), n = ve(null), r = ve(null), o = ve({}), i = ve(wh), s = ve(cs), l = (c, u = null) => dn(
    ye(
      o,
      ke((d) => d[c]),
      St()
    ),
    u
  );
  return {
    components: o,
    computeItemKey: i,
    context: t,
    EmptyPlaceholder: l("EmptyPlaceholder"),
    FillerRow: l("FillerRow"),
    fixedFooterContent: r,
    fixedHeaderContent: n,
    itemContent: e,
    ScrollerComponent: l("Scroller", "div"),
    scrollerRef: s,
    ScrollSeekPlaceholder: l("ScrollSeekPlaceholder"),
    TableBodyComponent: l("TableBody", "tbody"),
    TableComponent: l("Table", "table"),
    TableFooterComponent: l("TableFoot", "tfoot"),
    TableHeadComponent: l("TableHead", "thead"),
    TableRowComponent: l("TableRow", "tr")
  };
});
Tt(qx, y_);
const Jg = {
  bottom: 0,
  itemHeight: 0,
  items: [],
  itemWidth: 0,
  offsetBottom: 0,
  offsetTop: 0,
  top: 0
}, b_ = {
  bottom: 0,
  itemHeight: 0,
  items: [{ index: 0 }],
  itemWidth: 0,
  offsetBottom: 0,
  offsetTop: 0,
  top: 0
}, { ceil: ey, floor: mc, max: Us, min: kd, round: ty } = Math;
function ny(e, t, n) {
  return Array.from({ length: t - e + 1 }).map((r, o) => ({ data: n === null ? null : n[o + e], index: o + e }));
}
function v_(e) {
  return {
    ...b_,
    items: e
  };
}
function gl(e, t) {
  return e && e.width === t.width && e.height === t.height;
}
function x_(e, t) {
  return e && e.column === t.column && e.row === t.row;
}
const w_ = /* @__PURE__ */ rt(
  ([
    { increaseViewportBy: e, listBoundary: t, overscan: n, visibleRange: r },
    { footerHeight: o, headerHeight: i, scrollBy: s, scrollContainerState: l, scrollTo: c, scrollTop: u, smoothScrollTargetReached: d, viewportHeight: f },
    p,
    h,
    { didMount: g, propsReady: m },
    { customScrollParent: b, useWindowScroll: x, windowScrollContainerState: E, windowScrollTo: v, windowViewportRect: w },
    S
  ]) => {
    const T = ve(0), C = ve(0), k = ve(Jg), P = ve({ height: 0, width: 0 }), y = ve({ height: 0, width: 0 }), R = Xe(), $ = Xe(), A = ve(0), O = ve(null), _ = ve({ column: 0, row: 0 }), I = Xe(), D = Xe(), z = ve(!1), B = ve(0), F = ve(!0), L = ve(!1), W = ve(!1);
    ut(
      ye(
        g,
        Ye(B),
        Ve(([q, oe]) => !!oe)
      ),
      () => {
        Ue(F, !1);
      }
    ), ut(
      ye(
        Qt(g, F, y, P, B, L),
        Ve(([q, oe, K, ne, , j]) => q && !oe && K.height !== 0 && ne.height !== 0 && !j)
      ),
      ([, , , , q]) => {
        Ue(L, !0), yh(1, () => {
          Ue(R, q);
        }), Dr(ye(u), () => {
          Ue(t, [0, 0]), Ue(F, !0);
        });
      }
    ), De(
      ye(
        D,
        Ve((q) => q != null && q.scrollTop > 0),
        Er(0)
      ),
      C
    ), ut(
      ye(
        g,
        Ye(D),
        Ve(([, q]) => q != null)
      ),
      ([, q]) => {
        q && (Ue(P, q.viewport), Ue(y, q.item), Ue(_, q.gap), q.scrollTop > 0 && (Ue(z, !0), Dr(ye(u, ji(1)), (oe) => {
          Ue(z, !1);
        }), Ue(c, { top: q.scrollTop })));
      }
    ), De(
      ye(
        P,
        ke(({ height: q }) => q)
      ),
      f
    ), De(
      ye(
        Qt(
          je(P, gl),
          je(y, gl),
          je(_, (q, oe) => q && q.column === oe.column && q.row === oe.row),
          je(u)
        ),
        ke(([q, oe, K, ne]) => ({
          gap: K,
          item: oe,
          scrollTop: ne,
          viewport: q
        }))
      ),
      I
    ), De(
      ye(
        Qt(
          je(T),
          r,
          je(_, x_),
          je(y, gl),
          je(P, gl),
          je(O),
          je(C),
          je(z),
          je(F),
          je(B)
        ),
        Ve(([, , , , , , , q]) => !q),
        ke(
          ([
            q,
            [oe, K],
            ne,
            j,
            pe,
            ce,
            be,
            ,
            Ie,
            _e
          ]) => {
            const { column: $e, row: Ne } = ne, { height: Le, width: Re } = j, { width: V } = pe;
            if (be === 0 && (q === 0 || V === 0))
              return Jg;
            if (Re === 0) {
              const le = bh(_e, q), se = le + Math.max(be - 1, 0);
              return v_(ny(le, se, ce));
            }
            const J = nw(V, Re, $e);
            let ie, X;
            Ie ? oe === 0 && K === 0 && be > 0 ? (ie = 0, X = be - 1) : (ie = J * mc((oe + Ne) / (Le + Ne)), X = J * ey((K + Ne) / (Le + Ne)) - 1, X = kd(q - 1, Us(X, J - 1)), ie = kd(X, Us(0, ie))) : (ie = 0, X = -1);
            const H = ny(ie, X, ce), { bottom: G, top: re } = ry(pe, ne, j, H), he = ey(q / J), me = he * Le + (he - 1) * Ne - G;
            return { bottom: G, itemHeight: Le, items: H, itemWidth: Re, offsetBottom: me, offsetTop: re, top: re };
          }
        )
      ),
      k
    ), De(
      ye(
        O,
        Ve((q) => q !== null),
        ke((q) => q.length)
      ),
      T
    ), De(
      ye(
        Qt(P, y, k, _),
        Ve(([q, oe, { items: K }]) => K.length > 0 && oe.height !== 0 && q.height !== 0),
        ke(([q, oe, { items: K }, ne]) => {
          const { bottom: j, top: pe } = ry(q, ne, oe, K);
          return [pe, j];
        }),
        St(fa)
      ),
      t
    );
    const U = ve(!1);
    De(
      ye(
        u,
        Ye(U),
        ke(([q, oe]) => oe || q !== 0)
      ),
      U
    );
    const Z = jn(
      ye(
        Qt(k, T),
        Ve(([{ items: q }]) => q.length > 0),
        Ye(U),
        Ve(([[q, oe], K]) => {
          const ne = q.items[q.items.length - 1].index === oe - 1;
          return (K || q.bottom > 0 && q.itemHeight > 0 && q.offsetBottom === 0 && q.items.length === oe) && ne;
        }),
        ke(([[, q]]) => q - 1),
        St()
      )
    ), Q = jn(
      ye(
        je(k),
        Ve(({ items: q }) => q.length > 0 && q[0].index === 0),
        Er(0),
        St()
      )
    ), ee = jn(
      ye(
        je(k),
        Ye(z),
        Ve(([{ items: q }, oe]) => q.length > 0 && !oe),
        ke(([{ items: q }]) => ({
          endIndex: q[q.length - 1].index,
          startIndex: q[0].index
        })),
        St(Ax),
        yo(0)
      )
    );
    De(ee, h.scrollSeekRangeChanged), De(
      ye(
        R,
        Ye(P, y, T, _),
        ke(([q, oe, K, ne, j]) => {
          const pe = zx(q), { align: ce, behavior: be, offset: Ie } = pe;
          let _e = pe.index;
          _e === "LAST" && (_e = ne - 1), _e = Us(0, _e, kd(ne - 1, _e));
          let $e = Ff(oe, j, K, _e);
          return ce === "end" ? $e = ty($e - oe.height + K.height) : ce === "center" && ($e = ty($e - oe.height / 2 + K.height / 2)), Ie && ($e += Ie), { behavior: be, top: $e };
        })
      ),
      c
    );
    const te = dn(
      ye(
        k,
        ke((q) => q.offsetBottom + q.bottom)
      ),
      0
    );
    return De(
      ye(
        w,
        ke((q) => ({ height: q.visibleHeight, width: q.visibleWidth }))
      ),
      P
    ), {
      customScrollParent: b,
      // input
      data: O,
      deviation: A,
      footerHeight: o,
      gap: _,
      headerHeight: i,
      increaseViewportBy: e,
      initialItemCount: C,
      itemDimensions: y,
      overscan: n,
      restoreStateFrom: D,
      scrollBy: s,
      scrollContainerState: l,
      scrollHeight: $,
      scrollTo: c,
      scrollToIndex: R,
      scrollTop: u,
      smoothScrollTargetReached: d,
      totalCount: T,
      useWindowScroll: x,
      viewportDimensions: P,
      windowScrollContainerState: E,
      windowScrollTo: v,
      windowViewportRect: w,
      ...h,
      // output
      gridState: k,
      horizontalDirection: W,
      initialTopMostItemIndex: B,
      totalListHeight: te,
      ...p,
      endReached: Z,
      propsReady: m,
      rangeChanged: ee,
      startReached: Q,
      stateChanged: I,
      stateRestoreInProgress: z,
      ...S
    };
  },
  Tt(vh, xn, La, Wx, Po, xh, $o)
);
function nw(e, t, n) {
  return Us(1, mc((e + n) / (mc(t) + n)));
}
function ry(e, t, n, r) {
  const { height: o } = n;
  if (o === void 0 || r.length === 0)
    return { bottom: 0, top: 0 };
  const i = Ff(e, t, n, r[0].index);
  return { bottom: Ff(e, t, n, r[r.length - 1].index) + o, top: i };
}
function Ff(e, t, n, r) {
  const o = nw(e.width, n.width, t.column), i = mc(r / o), s = i * n.height + Us(0, i - 1) * t.row;
  return s > 0 ? s + t.row : s;
}
const S_ = /* @__PURE__ */ rt(() => {
  const e = ve((f) => `Item ${f}`), t = ve({}), n = ve(null), r = ve("virtuoso-grid-item"), o = ve("virtuoso-grid-list"), i = ve(wh), s = ve("div"), l = ve(cs), c = (f, p = null) => dn(
    ye(
      t,
      ke((h) => h[f]),
      St()
    ),
    p
  ), u = ve(!1), d = ve(!1);
  return De(je(d), u), {
    components: t,
    computeItemKey: i,
    context: n,
    FooterComponent: c("Footer"),
    HeaderComponent: c("Header"),
    headerFooterTag: s,
    itemClassName: r,
    ItemComponent: c("Item", "div"),
    itemContent: e,
    listClassName: o,
    ListComponent: c("List", "div"),
    readyStateChanged: u,
    reportReadyState: d,
    ScrollerComponent: c("Scroller", "div"),
    scrollerRef: l,
    ScrollSeekPlaceholder: c("ScrollSeekPlaceholder", "div")
  };
}), E_ = /* @__PURE__ */ rt(
  ([e, t]) => ({ ...e, ...t }),
  Tt(w_, S_)
), T_ = /* @__PURE__ */ Y.memo(function() {
  const e = Rt("gridState"), t = Rt("listClassName"), n = Rt("itemClassName"), r = Rt("itemContent"), o = Rt("computeItemKey"), i = Rt("isSeeking"), s = Jn("scrollHeight"), l = Rt("ItemComponent"), c = Rt("ListComponent"), u = Rt("ScrollSeekPlaceholder"), d = Rt("context"), f = Jn("itemDimensions"), p = Jn("gap"), h = Rt("log"), g = Rt("stateRestoreInProgress"), m = Jn("reportReadyState"), b = ni(
    Y.useMemo(
      () => (x) => {
        const E = x.parentElement.parentElement.scrollHeight;
        s(E);
        const v = x.firstChild;
        if (v) {
          const { height: w, width: S } = v.getBoundingClientRect();
          f({ height: w, width: S });
        }
        p({
          column: oy("column-gap", getComputedStyle(x).columnGap, h),
          row: oy("row-gap", getComputedStyle(x).rowGap, h)
        });
      },
      [s, f, p, h]
    ),
    !0,
    !1
  );
  return Xx(() => {
    e.itemHeight > 0 && e.itemWidth > 0 && m(!0);
  }, [e]), g ? null : /* @__PURE__ */ N(
    c,
    {
      className: t,
      ref: b,
      ...on(c, d),
      "data-testid": "virtuoso-item-list",
      style: { paddingBottom: e.offsetBottom, paddingTop: e.offsetTop },
      children: e.items.map((x) => {
        const E = o(x.index, x.data, d);
        return i ? /* @__PURE__ */ N(
          u,
          {
            ...on(u, d),
            height: e.itemHeight,
            index: x.index,
            width: e.itemWidth
          },
          E
        ) : /* @__PURE__ */ Uo(
          l,
          {
            ...on(l, d),
            className: n,
            "data-index": x.index,
            key: E
          },
          r(x.index, x.data, d)
        );
      })
    }
  );
}), C_ = Y.memo(function() {
  const e = Rt("HeaderComponent"), t = Jn("headerHeight"), n = Rt("headerFooterTag"), r = ni(
    Y.useMemo(
      () => (i) => {
        t(So(i, "height"));
      },
      [t]
    ),
    !0,
    !1
  ), o = Rt("context");
  return e ? /* @__PURE__ */ N(n, { ref: r, children: /* @__PURE__ */ N(e, { ...on(e, o) }) }) : null;
}), O_ = Y.memo(function() {
  const e = Rt("FooterComponent"), t = Jn("footerHeight"), n = Rt("headerFooterTag"), r = ni(
    Y.useMemo(
      () => (i) => {
        t(So(i, "height"));
      },
      [t]
    ),
    !0,
    !1
  ), o = Rt("context");
  return e ? /* @__PURE__ */ N(n, { ref: r, children: /* @__PURE__ */ N(e, { ...on(e, o) }) }) : null;
}), R_ = ({ children: e }) => {
  const t = Y.useContext(Kx), n = Jn("itemDimensions"), r = Jn("viewportDimensions"), o = ni(
    Y.useMemo(
      () => (i) => {
        r(i.getBoundingClientRect());
      },
      [r]
    ),
    !0,
    !1
  );
  return Y.useEffect(() => {
    t && (r({ height: t.viewportHeight, width: t.viewportWidth }), n({ height: t.itemHeight, width: t.itemWidth }));
  }, [t, r, n]), /* @__PURE__ */ N("div", { ref: o, style: bu(!1), children: e });
}, k_ = ({ children: e }) => {
  const t = Y.useContext(Kx), n = Jn("windowViewportRect"), r = Jn("itemDimensions"), o = Rt("customScrollParent"), i = Nx(n, o, !1);
  return Y.useEffect(() => {
    t && (r({ height: t.itemHeight, width: t.itemWidth }), n({ offsetTop: 0, visibleHeight: t.viewportHeight, visibleWidth: t.viewportWidth }));
  }, [t, n, r]), /* @__PURE__ */ N("div", { ref: i, style: bu(!1), children: e });
}, N_ = /* @__PURE__ */ Y.memo(function({ ...e }) {
  const t = Rt("useWindowScroll"), n = Rt("customScrollParent"), r = n || t ? P_ : $_, o = n || t ? k_ : R_, i = Rt("context");
  return /* @__PURE__ */ N(r, { ...e, ...on(r, i), children: /* @__PURE__ */ Se(o, { children: [
    /* @__PURE__ */ N(C_, {}),
    /* @__PURE__ */ N(T_, {}),
    /* @__PURE__ */ N(O_, {})
  ] }) });
}), {
  Component: I_,
  useEmitter: rw,
  useEmitterValue: Rt,
  usePublisher: Jn
} = /* @__PURE__ */ Yx(
  E_,
  {
    events: {
      atBottomStateChange: "atBottomStateChange",
      atTopStateChange: "atTopStateChange",
      endReached: "endReached",
      isScrolling: "isScrolling",
      rangeChanged: "rangeChanged",
      readyStateChanged: "readyStateChanged",
      startReached: "startReached",
      stateChanged: "stateChanged"
    },
    methods: {
      scrollBy: "scrollBy",
      scrollTo: "scrollTo",
      scrollToIndex: "scrollToIndex"
    },
    optional: {
      components: "components",
      computeItemKey: "computeItemKey",
      context: "context",
      customScrollParent: "customScrollParent",
      data: "data",
      headerFooterTag: "headerFooterTag",
      increaseViewportBy: "increaseViewportBy",
      initialItemCount: "initialItemCount",
      initialTopMostItemIndex: "initialTopMostItemIndex",
      itemClassName: "itemClassName",
      itemContent: "itemContent",
      listClassName: "listClassName",
      logLevel: "logLevel",
      overscan: "overscan",
      restoreStateFrom: "restoreStateFrom",
      scrollerRef: "scrollerRef",
      scrollSeekConfiguration: "scrollSeekConfiguration",
      totalCount: "totalCount",
      useWindowScroll: "useWindowScroll"
    }
  },
  N_
), $_ = /* @__PURE__ */ ew({ useEmitter: rw, useEmitterValue: Rt, usePublisher: Jn }), P_ = /* @__PURE__ */ tw({ useEmitter: rw, useEmitterValue: Rt, usePublisher: Jn });
function oy(e, t, n) {
  return t !== "normal" && !(t != null && t.endsWith("px")) && n(`${e} was not resolved to pixel value correctly`, t, Hn.WARN), t === "normal" ? 0 : parseInt(t ?? "0", 10);
}
const __ = I_, gc = we(({ height: e, width: t, isVirtualized: n, items: r, renderItem: o, sx: i }) => n ? /* @__PURE__ */ N(
  sn,
  {
    className: "VenomousUI-Menu",
    sx: { height: e || "100%", width: t || "100%", ...i },
    children: /* @__PURE__ */ N(
      g_,
      {
        style: { height: "100%", width: "100%" },
        totalCount: r == null ? void 0 : r.length,
        data: r,
        itemContent: (s, l) => o ? o(l, s) : l.label
      }
    )
  }
) : /* @__PURE__ */ N(
  sn,
  {
    className: "VenomousUI-Menu",
    gap: 1,
    sx: {
      height: e || "100%",
      width: t || "100%",
      overflowY: "scroll",
      overflowX: "hidden",
      ...i,
      "& > .VenomousUI-MenuItem": {
        width: "100% !important"
      }
      // '& .VenomousUI-MenuItem': { mb: '4px' },
      // '& .VenomousUI-MenuItem:last-child': { mb: 0 },
    },
    children: r == null ? void 0 : r.map((s, l) => /* @__PURE__ */ N($T, { children: o ? o(s, l) : s.label }, s.label))
  }
));
gc.displayName = "Menu";
const qs = we(
  ({
    icon: e = "",
    label: t,
    value: n,
    clickable: r,
    disabled: o,
    onClick: i,
    onMouseEnter: s,
    onMouseLeave: l,
    isActive: c,
    sx: u,
    ellipsis: d = !1
  }) => r ? /* @__PURE__ */ N(
    $n,
    {
      className: "VenomousUI-MenuItem",
      value: n,
      isGhost: !0,
      text: /* @__PURE__ */ N(In, { text: t, ellipsis: d, sx: { textAlign: "left" } }),
      icon: e,
      iconWidth: 28,
      iconPosition: "start",
      onClick: i,
      onMouseEnter: s,
      onMouseLeave: l,
      disabled: o,
      color: c ? "primary" : "auto",
      sx: {
        py: "8px",
        px: "16px",
        width: "100%",
        justifyContent: "flex-start",
        transition: "background-color 0.2s ease; color 0.2s ease",
        backgroundColor: c ? "divider" : "transparent",
        "&:hover": { backgroundColor: "divider" },
        ...u
      }
    }
  ) : /* @__PURE__ */ Se(sn, { row: !0, py: "8px", px: "16px", sx: { width: "100%", ...u }, className: "VenomousUI-MenuItem", children: [
    /* @__PURE__ */ N(Mr, { icon: e, width: 28, color: c ? "primary" : "auto" }),
    /* @__PURE__ */ N(
      In,
      {
        text: t,
        ellipsis: d,
        flex: 1,
        textColor: c ? "primary" : "auto",
        sx: { cursor: "default" }
      }
    )
  ] })
);
qs.displayName = "MenuItem";
function M_({ currentPath: e }) {
  const t = Fe(
    (r) => {
      let o = r.url;
      if (!o && r.subItems && r.subItems.length > 0) {
        const s = r.subItems.map((l) => l.url).filter(Boolean);
        o = A_(s);
      }
      return !!(o && (e == null ? void 0 : e.startsWith(o)) || r.subItems && r.subItems.some(
        (s) => s.url && (e == null ? void 0 : e.startsWith(s.url))
      ));
    },
    [e]
  ), n = Fe(
    (r) => !!(r.url && (e != null && e.startsWith(r.url))),
    [e]
  );
  return {
    checkIsParentItemActive: t,
    checkIsSubItemActive: n
  };
}
function A_(e) {
  if (e.length === 0) return "";
  let t = e[0];
  for (let n = 1; n < e.length; n++)
    for (; e[n].indexOf(t) !== 0; )
      if (t = t.slice(0, -1), !t) return "";
  if (!t.endsWith("/")) {
    const n = t.lastIndexOf("/");
    t = t.slice(0, n + 1);
  }
  return t;
}
function Lf(e) {
  return typeof e == "string";
}
function D_(e) {
  const t = On(e);
  return t.body === e ? _r(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function Ys(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function iy(e) {
  return parseInt(_r(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function B_(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), r = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || r;
}
function sy(e, t, n, r, o) {
  const i = [t, n, ...r];
  [].forEach.call(e.children, (s) => {
    const l = !i.includes(s), c = !B_(s);
    l && c && Ys(s, o);
  });
}
function Nd(e, t) {
  let n = -1;
  return e.some((r, o) => t(r) ? (n = o, !0) : !1), n;
}
function F_(e, t) {
  const n = [], r = e.container;
  if (!t.disableScrollLock) {
    if (D_(r)) {
      const s = yR(_r(r));
      n.push({
        value: r.style.paddingRight,
        property: "padding-right",
        el: r
      }), r.style.paddingRight = `${iy(r) + s}px`;
      const l = On(r).querySelectorAll(".mui-fixed");
      [].forEach.call(l, (c) => {
        n.push({
          value: c.style.paddingRight,
          property: "padding-right",
          el: c
        }), c.style.paddingRight = `${iy(c) + s}px`;
      });
    }
    let i;
    if (r.parentNode instanceof DocumentFragment)
      i = On(r).body;
    else {
      const s = r.parentElement, l = _r(r);
      i = (s == null ? void 0 : s.nodeName) === "HTML" && l.getComputedStyle(s).overflowY === "scroll" ? s : r;
    }
    n.push({
      value: i.style.overflow,
      property: "overflow",
      el: i
    }, {
      value: i.style.overflowX,
      property: "overflow-x",
      el: i
    }, {
      value: i.style.overflowY,
      property: "overflow-y",
      el: i
    }), i.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: i,
      el: s,
      property: l
    }) => {
      i ? s.style.setProperty(l, i) : s.style.removeProperty(l);
    });
  };
}
function L_(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
let z_ = class {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let r = this.modals.indexOf(t);
    if (r !== -1)
      return r;
    r = this.modals.length, this.modals.push(t), t.modalRef && Ys(t.modalRef, !1);
    const o = L_(n);
    sy(n, t.mount, t.modalRef, o, !0);
    const i = Nd(this.containers, (s) => s.container === n);
    return i !== -1 ? (this.containers[i].modals.push(t), r) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: o
    }), r);
  }
  mount(t, n) {
    const r = Nd(this.containers, (i) => i.modals.includes(t)), o = this.containers[r];
    o.restore || (o.restore = F_(o, n));
  }
  remove(t, n = !0) {
    const r = this.modals.indexOf(t);
    if (r === -1)
      return r;
    const o = Nd(this.containers, (s) => s.modals.includes(t)), i = this.containers[o];
    if (i.modals.splice(i.modals.indexOf(t), 1), this.modals.splice(r, 1), i.modals.length === 0)
      i.restore && i.restore(), t.modalRef && Ys(t.modalRef, n), sy(i.container, t.mount, t.modalRef, i.hiddenSiblings, !1), this.containers.splice(o, 1);
    else {
      const s = i.modals[i.modals.length - 1];
      s.modalRef && Ys(s.modalRef, !1);
    }
    return r;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
};
const V_ = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function j_(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function H_(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (r) => e.ownerDocument.querySelector(`input[type="radio"]${r}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function W_(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || H_(e));
}
function U_(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(V_)).forEach((r, o) => {
    const i = j_(r);
    i === -1 || !W_(r) || (i === 0 ? t.push(r) : n.push({
      documentOrder: o,
      tabIndex: i,
      node: r
    }));
  }), n.sort((r, o) => r.tabIndex === o.tabIndex ? r.documentOrder - o.documentOrder : r.tabIndex - o.tabIndex).map((r) => r.node).concat(t);
}
function q_() {
  return !0;
}
function yc(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: r = !1,
    disableRestoreFocus: o = !1,
    getTabbable: i = U_,
    isEnabled: s = q_,
    open: l
  } = e, c = M.useRef(!1), u = M.useRef(null), d = M.useRef(null), f = M.useRef(null), p = M.useRef(null), h = M.useRef(!1), g = M.useRef(null), m = pn(ti(t), g), b = M.useRef(null);
  M.useEffect(() => {
    !l || !g.current || (h.current = !n);
  }, [n, l]), M.useEffect(() => {
    if (!l || !g.current)
      return;
    const v = On(g.current);
    return g.current.contains(v.activeElement) || (g.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), g.current.setAttribute("tabIndex", "-1")), h.current && g.current.focus()), () => {
      o || (f.current && f.current.focus && (c.current = !0, f.current.focus()), f.current = null);
    };
  }, [l]), M.useEffect(() => {
    if (!l || !g.current)
      return;
    const v = On(g.current), w = (C) => {
      b.current = C, !(r || !s() || C.key !== "Tab") && v.activeElement === g.current && C.shiftKey && (c.current = !0, d.current && d.current.focus());
    }, S = () => {
      var P, y;
      const C = g.current;
      if (C === null)
        return;
      if (!v.hasFocus() || !s() || c.current) {
        c.current = !1;
        return;
      }
      if (C.contains(v.activeElement) || r && v.activeElement !== u.current && v.activeElement !== d.current)
        return;
      if (v.activeElement !== p.current)
        p.current = null;
      else if (p.current !== null)
        return;
      if (!h.current)
        return;
      let k = [];
      if ((v.activeElement === u.current || v.activeElement === d.current) && (k = i(g.current)), k.length > 0) {
        const R = !!((P = b.current) != null && P.shiftKey && ((y = b.current) == null ? void 0 : y.key) === "Tab"), $ = k[0], A = k[k.length - 1];
        typeof $ != "string" && typeof A != "string" && (R ? A.focus() : $.focus());
      } else
        C.focus();
    };
    v.addEventListener("focusin", S), v.addEventListener("keydown", w, !0);
    const T = setInterval(() => {
      v.activeElement && v.activeElement.tagName === "BODY" && S();
    }, 50);
    return () => {
      clearInterval(T), v.removeEventListener("focusin", S), v.removeEventListener("keydown", w, !0);
    };
  }, [n, r, o, s, l, i]);
  const x = (v) => {
    f.current === null && (f.current = v.relatedTarget), h.current = !0, p.current = v.target;
    const w = t.props.onFocus;
    w && w(v);
  }, E = (v) => {
    f.current === null && (f.current = v.relatedTarget), h.current = !0;
  };
  return /* @__PURE__ */ Se(M.Fragment, {
    children: [/* @__PURE__ */ N("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: u,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ M.cloneElement(t, {
      ref: m,
      onFocus: x
    }), /* @__PURE__ */ N("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: d,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (yc.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: ko,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: a.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: a.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: a.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: a.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: a.func,
  /**
   * If `true`, focus is locked.
   */
  open: a.bool.isRequired
});
process.env.NODE_ENV !== "production" && (yc.propTypes = Ma(yc.propTypes));
function Y_(e) {
  return Et("MuiBackdrop", e);
}
kt("MuiBackdrop", ["root", "invisible"]);
const G_ = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return Mt({
    root: ["root", n && "invisible"]
  }, Y_, t);
}, K_ = Me("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), Eh = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: o,
    className: i,
    component: s = "div",
    invisible: l = !1,
    open: c,
    components: u = {},
    componentsProps: d = {},
    slotProps: f = {},
    slots: p = {},
    TransitionComponent: h,
    transitionDuration: g,
    ...m
  } = r, b = {
    ...r,
    component: s,
    invisible: l
  }, x = G_(b), E = {
    transition: h,
    root: u.Root,
    ...p
  }, v = {
    ...d,
    ...f
  }, w = {
    slots: E,
    slotProps: v
  }, [S, T] = pt("root", {
    elementType: K_,
    externalForwardedProps: w,
    className: Oe(x.root, i),
    ownerState: b
  }), [C, k] = pt("transition", {
    elementType: Ko,
    externalForwardedProps: w,
    ownerState: b
  });
  return /* @__PURE__ */ N(C, {
    in: c,
    timeout: g,
    ...m,
    ...k,
    children: /* @__PURE__ */ N(S, {
      "aria-hidden": !0,
      ...T,
      classes: x,
      ref: n,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (Eh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    root: a.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: a.bool,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: a.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function X_(e) {
  return typeof e == "function" ? e() : e;
}
function Z_(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const ay = () => {
}, yl = new z_();
function Q_(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: r = !1,
    closeAfterTransition: o = !1,
    onTransitionEnter: i,
    onTransitionExited: s,
    children: l,
    onClose: c,
    open: u,
    rootRef: d
  } = e, f = M.useRef({}), p = M.useRef(null), h = M.useRef(null), g = pn(h, d), [m, b] = M.useState(!u), x = Z_(l);
  let E = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (E = !1);
  const v = () => On(p.current), w = () => (f.current.modalRef = h.current, f.current.mount = p.current, f.current), S = () => {
    yl.mount(w(), {
      disableScrollLock: r
    }), h.current && (h.current.scrollTop = 0);
  }, T = Nr(() => {
    const _ = X_(t) || v().body;
    yl.add(w(), _), h.current && S();
  }), C = () => yl.isTopModal(w()), k = Nr((_) => {
    p.current = _, _ && (u && C() ? S() : h.current && Ys(h.current, E));
  }), P = M.useCallback(() => {
    yl.remove(w(), E);
  }, [E]);
  M.useEffect(() => () => {
    P();
  }, [P]), M.useEffect(() => {
    u ? T() : (!x || !o) && P();
  }, [u, P, x, o, T]);
  const y = (_) => (I) => {
    var D;
    (D = _.onKeyDown) == null || D.call(_, I), !(I.key !== "Escape" || I.which === 229 || // Wait until IME is settled.
    !C()) && (n || (I.stopPropagation(), c && c(I, "escapeKeyDown")));
  }, R = (_) => (I) => {
    var D;
    (D = _.onClick) == null || D.call(_, I), I.target === I.currentTarget && c && c(I, "backdropClick");
  };
  return {
    getRootProps: (_ = {}) => {
      const I = Iv(e);
      delete I.onTransitionEnter, delete I.onTransitionExited;
      const D = {
        ...I,
        ..._
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...D,
        onKeyDown: y(D),
        ref: g
      };
    },
    getBackdropProps: (_ = {}) => {
      const I = _;
      return {
        "aria-hidden": !0,
        ...I,
        onClick: R(I),
        open: u
      };
    },
    getTransitionProps: () => {
      const _ = () => {
        b(!1), i && i();
      }, I = () => {
        b(!0), s && s(), o && P();
      };
      return {
        onEnter: gf(_, (l == null ? void 0 : l.props.onEnter) ?? ay),
        onExited: gf(I, (l == null ? void 0 : l.props.onExited) ?? ay)
      };
    },
    rootRef: g,
    portalRef: k,
    isTopModal: C,
    exited: m,
    hasTransition: x
  };
}
function J_(e) {
  return Et("MuiModal", e);
}
kt("MuiModal", ["root", "hidden", "backdrop"]);
const eM = (e) => {
  const {
    open: t,
    exited: n,
    classes: r
  } = e;
  return Mt({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, J_, r);
}, tM = Me("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(et(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), nM = Me(Eh, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), vu = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: o = nM,
    BackdropProps: i,
    classes: s,
    className: l,
    closeAfterTransition: c = !1,
    children: u,
    container: d,
    component: f,
    components: p = {},
    componentsProps: h = {},
    disableAutoFocus: g = !1,
    disableEnforceFocus: m = !1,
    disableEscapeKeyDown: b = !1,
    disablePortal: x = !1,
    disableRestoreFocus: E = !1,
    disableScrollLock: v = !1,
    hideBackdrop: w = !1,
    keepMounted: S = !1,
    onClose: T,
    onTransitionEnter: C,
    onTransitionExited: k,
    open: P,
    slotProps: y = {},
    slots: R = {},
    // eslint-disable-next-line react/prop-types
    theme: $,
    ...A
  } = r, O = {
    ...r,
    closeAfterTransition: c,
    disableAutoFocus: g,
    disableEnforceFocus: m,
    disableEscapeKeyDown: b,
    disablePortal: x,
    disableRestoreFocus: E,
    disableScrollLock: v,
    hideBackdrop: w,
    keepMounted: S
  }, {
    getRootProps: _,
    getBackdropProps: I,
    getTransitionProps: D,
    portalRef: z,
    isTopModal: B,
    exited: F,
    hasTransition: L
  } = Q_({
    ...O,
    rootRef: n
  }), W = {
    ...O,
    exited: F
  }, U = eM(W), Z = {};
  if (u.props.tabIndex === void 0 && (Z.tabIndex = "-1"), L) {
    const {
      onEnter: K,
      onExited: ne
    } = D();
    Z.onEnter = K, Z.onExited = ne;
  }
  const Q = {
    slots: {
      root: p.Root,
      backdrop: p.Backdrop,
      ...R
    },
    slotProps: {
      ...h,
      ...y
    }
  }, [ee, te] = pt("root", {
    ref: n,
    elementType: tM,
    externalForwardedProps: {
      ...Q,
      ...A,
      component: f
    },
    getSlotProps: _,
    ownerState: W,
    className: Oe(l, U == null ? void 0 : U.root, !W.open && W.exited && (U == null ? void 0 : U.hidden))
  }), [q, oe] = pt("backdrop", {
    ref: i == null ? void 0 : i.ref,
    elementType: o,
    externalForwardedProps: Q,
    shouldForwardComponentProp: !0,
    additionalProps: i,
    getSlotProps: (K) => I({
      ...K,
      onClick: (ne) => {
        K != null && K.onClick && K.onClick(ne);
      }
    }),
    className: Oe(i == null ? void 0 : i.className, U == null ? void 0 : U.backdrop),
    ownerState: W
  });
  return !S && !P && (!L || F) ? null : /* @__PURE__ */ N(Vi, {
    ref: z,
    container: d,
    disablePortal: x,
    children: /* @__PURE__ */ Se(ee, {
      ...te,
      children: [!w && o ? /* @__PURE__ */ N(q, {
        ...oe
      }) : null, /* @__PURE__ */ N(yc, {
        disableEnforceFocus: m,
        disableAutoFocus: g,
        disableRestoreFocus: E,
        isEnabled: B,
        open: P,
        children: /* @__PURE__ */ M.cloneElement(u, Z)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (vu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: a.object,
  /**
   * A single child content element.
   */
  children: ko.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: a.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Backdrop: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Qr, a.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: a.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: a.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: a.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: a.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: a.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: a.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: a.bool,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: a.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: a.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function rM(e) {
  return Et("MuiPopover", e);
}
kt("MuiPopover", ["root", "paper"]);
function ly(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function cy(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function uy(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function _s(e) {
  return typeof e == "function" ? e() : e;
}
const oM = (e) => {
  const {
    classes: t
  } = e;
  return Mt({
    root: ["root"],
    paper: ["paper"]
  }, rM, t);
}, iM = Me(vu, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), sM = Me(ss, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), ow = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiPopover"
  }), {
    action: o,
    anchorEl: i,
    anchorOrigin: s = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: l,
    anchorReference: c = "anchorEl",
    children: u,
    className: d,
    container: f,
    elevation: p = 8,
    marginThreshold: h = 16,
    open: g,
    PaperProps: m = {},
    // TODO: remove in v7
    slots: b = {},
    slotProps: x = {},
    transformOrigin: E = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: v,
    // TODO: remove in v7
    transitionDuration: w = "auto",
    TransitionProps: S = {},
    // TODO: remove in v7
    disableScrollLock: T = !1,
    ...C
  } = r, k = M.useRef(), P = {
    ...r,
    anchorOrigin: s,
    anchorReference: c,
    elevation: p,
    marginThreshold: h,
    transformOrigin: E,
    TransitionComponent: v,
    transitionDuration: w,
    TransitionProps: S
  }, y = oM(P), R = M.useCallback(() => {
    if (c === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (l || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), l;
    const K = _s(i), ne = K && K.nodeType === 1 ? K : On(k.current).body, j = ne.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const pe = ne.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && pe.top === 0 && pe.left === 0 && pe.right === 0 && pe.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: j.top + ly(j, s.vertical),
      left: j.left + cy(j, s.horizontal)
    };
  }, [i, s.horizontal, s.vertical, l, c]), $ = M.useCallback((K) => ({
    vertical: ly(K, E.vertical),
    horizontal: cy(K, E.horizontal)
  }), [E.horizontal, E.vertical]), A = M.useCallback((K) => {
    const ne = {
      width: K.offsetWidth,
      height: K.offsetHeight
    }, j = $(ne);
    if (c === "none")
      return {
        top: null,
        left: null,
        transformOrigin: uy(j)
      };
    const pe = R();
    let ce = pe.top - j.vertical, be = pe.left - j.horizontal;
    const Ie = ce + ne.height, _e = be + ne.width, $e = _r(_s(i)), Ne = $e.innerHeight - h, Le = $e.innerWidth - h;
    if (h !== null && ce < h) {
      const Re = ce - h;
      ce -= Re, j.vertical += Re;
    } else if (h !== null && Ie > Ne) {
      const Re = Ie - Ne;
      ce -= Re, j.vertical += Re;
    }
    if (process.env.NODE_ENV !== "production" && ne.height > Ne && ne.height && Ne && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${ne.height - Ne}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), h !== null && be < h) {
      const Re = be - h;
      be -= Re, j.horizontal += Re;
    } else if (_e > Le) {
      const Re = _e - Le;
      be -= Re, j.horizontal += Re;
    }
    return {
      top: `${Math.round(ce)}px`,
      left: `${Math.round(be)}px`,
      transformOrigin: uy(j)
    };
  }, [i, c, R, $, h]), [O, _] = M.useState(g), I = M.useCallback(() => {
    const K = k.current;
    if (!K)
      return;
    const ne = A(K);
    ne.top !== null && K.style.setProperty("top", ne.top), ne.left !== null && (K.style.left = ne.left), K.style.transformOrigin = ne.transformOrigin, _(!0);
  }, [A]);
  M.useEffect(() => (T && window.addEventListener("scroll", I), () => window.removeEventListener("scroll", I)), [i, T, I]);
  const D = () => {
    I();
  }, z = () => {
    _(!1);
  };
  M.useEffect(() => {
    g && I();
  }), M.useImperativeHandle(o, () => g ? {
    updatePosition: () => {
      I();
    }
  } : null, [g, I]), M.useEffect(() => {
    if (!g)
      return;
    const K = Dp(() => {
      I();
    }), ne = _r(_s(i));
    return ne.addEventListener("resize", K), () => {
      K.clear(), ne.removeEventListener("resize", K);
    };
  }, [i, g, I]);
  let B = w;
  const F = {
    slots: {
      transition: v,
      ...b
    },
    slotProps: {
      transition: S,
      paper: m,
      ...x
    }
  }, [L, W] = pt("transition", {
    elementType: aa,
    externalForwardedProps: F,
    ownerState: P,
    getSlotProps: (K) => ({
      ...K,
      onEntering: (ne, j) => {
        var pe;
        (pe = K.onEntering) == null || pe.call(K, ne, j), D();
      },
      onExited: (ne) => {
        var j;
        (j = K.onExited) == null || j.call(K, ne), z();
      }
    }),
    additionalProps: {
      appear: !0,
      in: g
    }
  });
  w === "auto" && !L.muiSupportAuto && (B = void 0);
  const U = f || (i ? On(_s(i)).body : void 0), [Z, {
    slots: Q,
    slotProps: ee,
    ...te
  }] = pt("root", {
    ref: n,
    elementType: iM,
    externalForwardedProps: {
      ...F,
      ...C
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: b.backdrop
      },
      slotProps: {
        backdrop: lh(typeof x.backdrop == "function" ? x.backdrop(P) : x.backdrop, {
          invisible: !0
        })
      },
      container: U,
      open: g
    },
    ownerState: P,
    className: Oe(y.root, d)
  }), [q, oe] = pt("paper", {
    ref: k,
    className: y.paper,
    elementType: sM,
    externalForwardedProps: F,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: p,
      style: O ? void 0 : {
        opacity: 0
      }
    },
    ownerState: P
  });
  return /* @__PURE__ */ N(Z, {
    ...te,
    ...!Lf(Z) && {
      slots: Q,
      slotProps: ee,
      disableScrollLock: T
    },
    children: /* @__PURE__ */ N(L, {
      ...W,
      timeout: B,
      children: /* @__PURE__ */ N(q, {
        ...oe,
        children: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (ow.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: oo,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: Ro(a.oneOfType([Qr, a.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = _s(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: a.shape({
    horizontal: a.oneOfType([a.oneOf(["center", "left", "right"]), a.number]).isRequired,
    vertical: a.oneOfType([a.oneOf(["bottom", "center", "top"]), a.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: a.shape({
    left: a.number.isRequired,
    top: a.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: a.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: a.object,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([Qr, a.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: a.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: Fp,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: a.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: a.shape({
    component: Ap
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: a.shape({
    horizontal: a.oneOfType([a.oneOf(["center", "left", "right"]), a.number]).isRequired,
    vertical: a.oneOfType([a.oneOf(["bottom", "center", "top"]), a.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: a.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object
});
function aM() {
  const [e, t] = Jt(null), n = !!e, r = Fe((i) => {
    const s = i.currentTarget;
    t(s);
  }, []), o = Fe(() => {
    var i;
    (i = window.getSelection()) != null && i.toString() || t(null);
  }, []);
  return {
    anchorEl: e,
    isOpen: n,
    openPopover: r,
    closePopover: o
  };
}
const iw = we(({ children: e, renderPopoverHandler: t, sx: n }) => {
  const { paperCommonStyles: r } = as(), { anchorEl: o, isOpen: i, openPopover: s, closePopover: l } = aM();
  return /* @__PURE__ */ Se(qn, { children: [
    t({ anchorEl: o, isOpen: i, openPopover: s, closePopover: l }),
    /* @__PURE__ */ N(
      ow,
      {
        open: i,
        anchorEl: o,
        onClose: l,
        anchorOrigin: { vertical: "bottom", horizontal: "center" },
        transformOrigin: { vertical: "top", horizontal: "center" },
        slotProps: {
          paper: {
            elevation: 3,
            square: !0,
            sx: {
              ...r,
              border: 1,
              borderColor: "divider",
              ...n
            }
          }
        },
        children: /* @__PURE__ */ N(Ko, { in: i, children: /* @__PURE__ */ N("div", { children: e }) })
      }
    )
  ] });
});
iw.displayName = "Popover";
const lM = we(
  ({ icon: e = "solar:menu-dots-line-duotone", menuItems: t }) => /* @__PURE__ */ N(
    iw,
    {
      renderPopoverHandler: ({ isOpen: n, openPopover: r }) => /* @__PURE__ */ N(
        $n,
        {
          isCircle: !0,
          isGhost: !0,
          color: "auto",
          icon: e,
          iconWidth: 20,
          disabled: n,
          onClick: r
        }
      ),
      children: /* @__PURE__ */ N(gc, { items: t, renderItem: (n) => /* @__PURE__ */ N(qs, { ...n, clickable: !0 }) })
    }
  )
);
lM.displayName = "ExhibitCardActionButton";
const sw = HR({
  createStyledComponent: Me("div", {
    name: "MuiContainer",
    slot: "Root",
    overridesResolver: (e, t) => {
      const {
        ownerState: n
      } = e;
      return [t.root, t[`maxWidth${Ee(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
    }
  }),
  useThemeProps: (e) => Nt({
    props: e,
    name: "MuiContainer"
  })
});
process.env.NODE_ENV !== "production" && (sw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: a.bool,
  /**
   * Set the max-width to match the min-width of the current breakpoint.
   * This is useful if you'd prefer to design for a fixed set of sizes
   * instead of trying to accommodate a fully fluid viewport.
   * It's fluid by default.
   * @default false
   */
  fixed: a.bool,
  /**
   * Determine the max-width of the container.
   * The container width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'lg'
   */
  maxWidth: a.oneOfType([a.oneOf(["xs", "sm", "md", "lg", "xl", !1]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const cM = we(({ children: e, maxWidth: t = "lg", ...n }) => /* @__PURE__ */ N(
  sw,
  {
    className: "VenomousUI-Container",
    disableGutters: !0,
    maxWidth: t === "fullwidth" ? !1 : t,
    ...n,
    children: e
  }
));
cM.displayName = "Container";
function uM(e, t, n) {
  const r = t.getBoundingClientRect(), o = n && n.getBoundingClientRect(), i = _r(t);
  let s;
  if (t.fakeTransform)
    s = t.fakeTransform;
  else {
    const u = i.getComputedStyle(t);
    s = u.getPropertyValue("-webkit-transform") || u.getPropertyValue("transform");
  }
  let l = 0, c = 0;
  if (s && s !== "none" && typeof s == "string") {
    const u = s.split("(")[1].split(")")[0].split(",");
    l = parseInt(u[4], 10), c = parseInt(u[5], 10);
  }
  return e === "left" ? o ? `translateX(${o.right + l - r.left}px)` : `translateX(${i.innerWidth + l - r.left}px)` : e === "right" ? o ? `translateX(-${r.right - o.left - l}px)` : `translateX(-${r.left + r.width - l}px)` : e === "up" ? o ? `translateY(${o.bottom + c - r.top}px)` : `translateY(${i.innerHeight + c - r.top}px)` : o ? `translateY(-${r.top - o.top + r.height - c}px)` : `translateY(-${r.top + r.height - c}px)`;
}
function aw(e) {
  return typeof e == "function" ? e() : e;
}
function bl(e, t, n) {
  const r = aw(n), o = uM(e, t, r);
  o && (t.style.webkitTransform = o, t.style.transform = o);
}
const lw = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = io(), o = {
    enter: r.transitions.easing.easeOut,
    exit: r.transitions.easing.sharp
  }, i = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: s,
    appear: l = !0,
    children: c,
    container: u,
    direction: d = "down",
    easing: f = o,
    in: p,
    onEnter: h,
    onEntered: g,
    onEntering: m,
    onExit: b,
    onExited: x,
    onExiting: E,
    style: v,
    timeout: w = i,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: S = Yn,
    ...T
  } = t, C = M.useRef(null), k = pn(ti(c), C, n), P = (z) => (B) => {
    z && (B === void 0 ? z(C.current) : z(C.current, B));
  }, y = P((z, B) => {
    bl(d, z, u), Jp(z), h && h(z, B);
  }), R = P((z, B) => {
    const F = Di({
      timeout: w,
      style: v,
      easing: f
    }, {
      mode: "enter"
    });
    z.style.webkitTransition = r.transitions.create("-webkit-transform", {
      ...F
    }), z.style.transition = r.transitions.create("transform", {
      ...F
    }), z.style.webkitTransform = "none", z.style.transform = "none", m && m(z, B);
  }), $ = P(g), A = P(E), O = P((z) => {
    const B = Di({
      timeout: w,
      style: v,
      easing: f
    }, {
      mode: "exit"
    });
    z.style.webkitTransition = r.transitions.create("-webkit-transform", B), z.style.transition = r.transitions.create("transform", B), bl(d, z, u), b && b(z);
  }), _ = P((z) => {
    z.style.webkitTransition = "", z.style.transition = "", x && x(z);
  }), I = (z) => {
    s && s(C.current, z);
  }, D = M.useCallback(() => {
    C.current && bl(d, C.current, u);
  }, [d, u]);
  return M.useEffect(() => {
    if (p || d === "down" || d === "right")
      return;
    const z = Dp(() => {
      C.current && bl(d, C.current, u);
    }), B = _r(C.current);
    return B.addEventListener("resize", z), () => {
      z.clear(), B.removeEventListener("resize", z);
    };
  }, [d, p, u]), M.useEffect(() => {
    p || D();
  }, [p, D]), /* @__PURE__ */ N(S, {
    nodeRef: C,
    onEnter: y,
    onEntered: $,
    onEntering: R,
    onExit: O,
    onExited: _,
    onExiting: A,
    addEndListener: I,
    appear: l,
    in: p,
    timeout: w,
    ...T,
    children: (z, {
      ownerState: B,
      ...F
    }) => /* @__PURE__ */ M.cloneElement(c, {
      ref: k,
      style: {
        visibility: z === "exited" && !p ? "hidden" : void 0,
        ...v,
        ...c.props.style
      },
      ...F
    })
  });
});
process.env.NODE_ENV !== "production" && (lw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: ko.isRequired,
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the container the Slide is transitioning from.
   */
  container: Ro(a.oneOfType([Qr, a.func]), (e) => {
    if (e.open) {
      const t = aw(e.container);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `container` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `container` prop provided to the component is invalid.", "It should be an HTML element instance."].join(`
`));
    }
    return null;
  }),
  /**
   * Direction the child node will enter from.
   * @default 'down'
   */
  direction: a.oneOf(["down", "left", "right", "up"]),
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   * @default {
   *   enter: theme.transitions.easing.easeOut,
   *   exit: theme.transitions.easing.sharp,
   * }
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function dM(e) {
  return Et("MuiDrawer", e);
}
kt("MuiDrawer", ["root", "docked", "paper", "anchorLeft", "anchorRight", "anchorTop", "anchorBottom", "paperAnchorLeft", "paperAnchorRight", "paperAnchorTop", "paperAnchorBottom", "paperAnchorDockedLeft", "paperAnchorDockedRight", "paperAnchorDockedTop", "paperAnchorDockedBottom", "modal"]);
const cw = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, (n.variant === "permanent" || n.variant === "persistent") && t.docked, t.modal];
}, fM = (e) => {
  const {
    classes: t,
    anchor: n,
    variant: r
  } = e, o = {
    root: ["root", `anchor${Ee(n)}`],
    docked: [(r === "permanent" || r === "persistent") && "docked"],
    modal: ["modal"],
    paper: ["paper", `paperAnchor${Ee(n)}`, r !== "temporary" && `paperAnchorDocked${Ee(n)}`]
  };
  return Mt(o, dM, t);
}, pM = Me(vu, {
  name: "MuiDrawer",
  slot: "Root",
  overridesResolver: cw
})(et(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.drawer
}))), hM = Me("div", {
  shouldForwardProp: Fr,
  name: "MuiDrawer",
  slot: "Docked",
  skipVariantsResolver: !1,
  overridesResolver: cw
})({
  flex: "0 0 auto"
}), mM = Me(ss, {
  name: "MuiDrawer",
  slot: "Paper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.paper, t[`paperAnchor${Ee(n.anchor)}`], n.variant !== "temporary" && t[`paperAnchorDocked${Ee(n.anchor)}`]];
  }
})(et(({
  theme: e
}) => ({
  overflowY: "auto",
  display: "flex",
  flexDirection: "column",
  height: "100%",
  flex: "1 0 auto",
  zIndex: (e.vars || e).zIndex.drawer,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  // temporary style
  position: "fixed",
  top: 0,
  // We disable the focus ring for mouse, touch and keyboard users.
  // At some point, it would be better to keep it for keyboard users.
  // :focus-ring CSS pseudo-class will help.
  outline: 0,
  variants: [{
    props: {
      anchor: "left"
    },
    style: {
      left: 0
    }
  }, {
    props: {
      anchor: "top"
    },
    style: {
      top: 0,
      left: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    }
  }, {
    props: {
      anchor: "right"
    },
    style: {
      right: 0
    }
  }, {
    props: {
      anchor: "bottom"
    },
    style: {
      top: "auto",
      left: 0,
      bottom: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "left" && t.variant !== "temporary",
    style: {
      borderRight: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "top" && t.variant !== "temporary",
    style: {
      borderBottom: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "right" && t.variant !== "temporary",
    style: {
      borderLeft: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "bottom" && t.variant !== "temporary",
    style: {
      borderTop: `1px solid ${(e.vars || e).palette.divider}`
    }
  }]
}))), uw = {
  left: "right",
  right: "left",
  top: "down",
  bottom: "up"
};
function gM(e) {
  return ["left", "right"].includes(e);
}
function yM({
  direction: e
}, t) {
  return e === "rtl" && gM(t) ? uw[t] : t;
}
const dw = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiDrawer"
  }), o = io(), i = ou(), s = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    anchor: l = "left",
    BackdropProps: c,
    children: u,
    className: d,
    elevation: f = 16,
    hideBackdrop: p = !1,
    ModalProps: {
      BackdropProps: h,
      ...g
    } = {},
    onClose: m,
    open: b = !1,
    PaperProps: x = {},
    SlideProps: E,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: v,
    transitionDuration: w = s,
    variant: S = "temporary",
    slots: T = {},
    slotProps: C = {},
    ...k
  } = r, P = M.useRef(!1);
  M.useEffect(() => {
    P.current = !0;
  }, []);
  const y = yM({
    direction: i ? "rtl" : "ltr"
  }, l), $ = {
    ...r,
    anchor: l,
    elevation: f,
    open: b,
    variant: S,
    ...k
  }, A = fM($), O = {
    slots: {
      transition: v,
      ...T
    },
    slotProps: {
      paper: x,
      transition: E,
      ...C,
      backdrop: lh(C.backdrop || {
        ...c,
        ...h
      }, {
        transitionDuration: w
      })
    }
  }, [_, I] = pt("root", {
    ref: n,
    elementType: pM,
    className: Oe(A.root, A.modal, d),
    shouldForwardComponentProp: !0,
    ownerState: $,
    externalForwardedProps: {
      ...O,
      ...k,
      ...g
    },
    additionalProps: {
      open: b,
      onClose: m,
      hideBackdrop: p,
      slots: {
        backdrop: O.slots.backdrop
      },
      slotProps: {
        backdrop: O.slotProps.backdrop
      }
    }
  }), [D, z] = pt("paper", {
    elementType: mM,
    shouldForwardComponentProp: !0,
    className: Oe(A.paper, x.className),
    ownerState: $,
    externalForwardedProps: O,
    additionalProps: {
      elevation: S === "temporary" ? f : 0,
      square: !0
    }
  }), [B, F] = pt("docked", {
    elementType: hM,
    ref: n,
    className: Oe(A.root, A.docked, d),
    ownerState: $,
    externalForwardedProps: O,
    additionalProps: k
    // pass `other` here because `DockedSlot` is also a root slot for some variants
  }), [L, W] = pt("transition", {
    elementType: lw,
    ownerState: $,
    externalForwardedProps: O,
    additionalProps: {
      in: b,
      direction: uw[y],
      timeout: w,
      appear: P.current
    }
  }), U = /* @__PURE__ */ N(D, {
    ...z,
    children: u
  });
  if (S === "permanent")
    return /* @__PURE__ */ N(B, {
      ...F,
      children: U
    });
  const Z = /* @__PURE__ */ N(L, {
    ...W,
    children: U
  });
  return S === "persistent" ? /* @__PURE__ */ N(B, {
    ...F,
    children: Z
  }) : /* @__PURE__ */ N(_, {
    ...I,
    children: Z
  });
});
process.env.NODE_ENV !== "production" && (dw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Side from which the drawer will appear.
   * @default 'left'
   */
  anchor: a.oneOf(["bottom", "left", "right", "top"]),
  /**
   * @ignore
   */
  BackdropProps: a.object,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The elevation of the drawer.
   * @default 16
   */
  elevation: Fp,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: a.bool,
  /**
   * Props applied to the [`Modal`](https://mui.com/material-ui/api/modal/) element.
   * @default {}
   */
  ModalProps: a.object,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: a.bool,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @deprecated use the `slotProps.paper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PaperProps: a.object,
  /**
   * Props applied to the [`Slide`](https://mui.com/material-ui/api/slide/) element.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SlideProps: a.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    docked: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    docked: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * The variant to use.
   * @default 'temporary'
   */
  variant: a.oneOf(["permanent", "persistent", "temporary"])
});
const fw = we(
  ({ children: e, isOpen: t, closeDrawer: n, width: r, position: o = "right", sx: i }) => {
    const { paperCommonStyles: s } = as();
    return /* @__PURE__ */ N(
      dw,
      {
        className: "VenomousUI-Drawer",
        open: t,
        onClose: n,
        anchor: o,
        keepMounted: !0,
        slotProps: {
          paper: {
            sx: {
              ...s,
              ...bM(o),
              width: r,
              p: "16px",
              ...i
            }
          }
        },
        children: /* @__PURE__ */ N("div", { style: { width: "100%" }, children: e })
      }
    );
  }
);
fw.displayName = "Drawer";
function bM(e) {
  switch (e) {
    case "right":
      return { borderTopRightRadius: "0px !important", borderBottomRightRadius: "0px !important" };
    case "top":
      return { borderTopLeftRadius: "0px !important", borderTopRightRadius: "0px !important" };
    case "bottom":
      return {
        borderBottomLeftRadius: "0px !important",
        borderBottomRightRadius: "0px !important"
      };
    case "left":
    default:
      return { borderTopLeftRadius: "0px !important", borderBottomLeftRadius: "0px !important" };
  }
}
function vM() {
  const [e, t] = Jt(!1), n = Fe(() => {
    t(!0);
  }, []), r = Fe(() => {
    t(!1);
  }, []), o = Fe(() => {
    t((i) => !i);
  }, []);
  return {
    isOpen: e,
    setIsOpen: t,
    openDrawer: n,
    closeDrawer: r,
    toggleDrawer: o
  };
}
const pw = we(({ height: e = 50, title: t, closeDrawer: n }) => {
  const { paperCommonStyles: r } = as();
  return /* @__PURE__ */ Se(
    sn,
    {
      className: "VenomousUI-DrawerHeader",
      row: !0,
      sx: {
        ...r,
        borderRadius: 0,
        height: e,
        width: "100%",
        position: "sticky",
        top: 0,
        left: 0,
        justifyContent: "space-between",
        transform: "translateY(-8px)"
      },
      children: [
        n && /* @__PURE__ */ N(
          $n,
          {
            isCircle: !0,
            isGhost: !0,
            icon: "solar:close-circle-line-duotone",
            iconWidth: 24,
            color: "auto",
            onClick: n,
            sx: { width: 24, mr: "8px", ml: "-8px" }
          }
        ),
        /* @__PURE__ */ N(In, { text: t, isTitle: !0 })
      ]
    }
  );
});
pw.displayName = "DrawerHeader";
const Th = /* @__PURE__ */ M.createContext(void 0);
process.env.NODE_ENV !== "production" && (Th.displayName = "FormControlContext");
function xu() {
  return M.useContext(Th);
}
function xM(e) {
  return Et("PrivateSwitchBase", e);
}
kt("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);
const wM = (e) => {
  const {
    classes: t,
    checked: n,
    disabled: r,
    edge: o
  } = e, i = {
    root: ["root", n && "checked", r && "disabled", o && `edge${Ee(o)}`],
    input: ["input"]
  };
  return Mt(i, xM, t);
}, SM = Me(ch)({
  padding: 9,
  borderRadius: "50%",
  variants: [{
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "start" && t.size !== "small",
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "end" && t.size !== "small",
    style: {
      marginRight: -12
    }
  }]
}), EM = Me("input", {
  shouldForwardProp: Fr
})({
  cursor: "inherit",
  position: "absolute",
  opacity: 0,
  width: "100%",
  height: "100%",
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
}), wu = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    autoFocus: r,
    checked: o,
    checkedIcon: i,
    defaultChecked: s,
    disabled: l,
    disableFocusRipple: c = !1,
    edge: u = !1,
    icon: d,
    id: f,
    inputProps: p,
    inputRef: h,
    name: g,
    onBlur: m,
    onChange: b,
    onFocus: x,
    readOnly: E,
    required: v = !1,
    tabIndex: w,
    type: S,
    value: T,
    slots: C = {},
    slotProps: k = {},
    ...P
  } = t, [y, R] = Sv({
    controlled: o,
    default: !!s,
    name: "SwitchBase",
    state: "checked"
  }), $ = xu(), A = (Q) => {
    x && x(Q), $ && $.onFocus && $.onFocus(Q);
  }, O = (Q) => {
    m && m(Q), $ && $.onBlur && $.onBlur(Q);
  }, _ = (Q) => {
    if (Q.nativeEvent.defaultPrevented)
      return;
    const ee = Q.target.checked;
    R(ee), b && b(Q, ee);
  };
  let I = l;
  $ && typeof I > "u" && (I = $.disabled);
  const D = S === "checkbox" || S === "radio", z = {
    ...t,
    checked: y,
    disabled: I,
    disableFocusRipple: c,
    edge: u
  }, B = wM(z), F = {
    slots: C,
    slotProps: {
      input: p,
      ...k
    }
  }, [L, W] = pt("root", {
    ref: n,
    elementType: SM,
    className: B.root,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...F,
      component: "span",
      ...P
    },
    getSlotProps: (Q) => ({
      ...Q,
      onFocus: (ee) => {
        var te;
        (te = Q.onFocus) == null || te.call(Q, ee), A(ee);
      },
      onBlur: (ee) => {
        var te;
        (te = Q.onBlur) == null || te.call(Q, ee), O(ee);
      }
    }),
    ownerState: z,
    additionalProps: {
      centerRipple: !0,
      focusRipple: !c,
      disabled: I,
      role: void 0,
      tabIndex: null
    }
  }), [U, Z] = pt("input", {
    ref: h,
    elementType: EM,
    className: B.input,
    externalForwardedProps: F,
    getSlotProps: (Q) => ({
      ...Q,
      onChange: (ee) => {
        var te;
        (te = Q.onChange) == null || te.call(Q, ee), _(ee);
      }
    }),
    ownerState: z,
    additionalProps: {
      autoFocus: r,
      checked: o,
      defaultChecked: s,
      disabled: I,
      id: D ? f : void 0,
      name: g,
      readOnly: E,
      required: v,
      tabIndex: w,
      type: S,
      ...S === "checkbox" && T === void 0 ? {} : {
        value: T
      }
    }
  });
  return /* @__PURE__ */ Se(L, {
    ...W,
    children: [/* @__PURE__ */ N(U, {
      ...Z
    }), y ? i : d]
  });
});
process.env.NODE_ENV !== "production" && (wu.propTypes = {
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: a.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * @ignore
   */
  defaultChecked: a.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: a.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: a.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: a.node.isRequired,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: oo,
  /*
   * @ignore
   */
  name: a.string,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: a.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    input: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.object,
  /**
   * @ignore
   */
  tabIndex: a.oneOfType([a.number, a.string]),
  /**
   * The input component prop `type`.
   */
  type: a.string.isRequired,
  /**
   * The value of the component.
   */
  value: a.any
});
const TM = is(/* @__PURE__ */ N("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank"), CM = is(/* @__PURE__ */ N("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox"), OM = is(/* @__PURE__ */ N("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");
function RM(e) {
  return Et("MuiCheckbox", e);
}
const Id = kt("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium"]), kM = (e) => {
  const {
    classes: t,
    indeterminate: n,
    color: r,
    size: o
  } = e, i = {
    root: ["root", n && "indeterminate", `color${Ee(r)}`, `size${Ee(o)}`]
  }, s = Mt(i, RM, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...s
  };
}, NM = Me(wu, {
  shouldForwardProp: (e) => Fr(e) || e === "classes",
  name: "MuiCheckbox",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.indeterminate && t.indeterminate, t[`size${Ee(n.size)}`], n.color !== "default" && t[`color${Ee(n.color)}`]];
  }
})(et(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  variants: [{
    props: {
      color: "default",
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : rn(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(bn()).map(([t]) => ({
    props: {
      color: t,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : rn(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(bn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${Id.checked}, &.${Id.indeterminate}`]: {
        color: (e.vars || e).palette[t].main
      },
      [`&.${Id.disabled}`]: {
        color: (e.vars || e).palette.action.disabled
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
}))), IM = /* @__PURE__ */ N(CM, {}), $M = /* @__PURE__ */ N(TM, {}), PM = /* @__PURE__ */ N(OM, {}), hw = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiCheckbox"
  }), {
    checkedIcon: o = IM,
    color: i = "primary",
    icon: s = $M,
    indeterminate: l = !1,
    indeterminateIcon: c = PM,
    inputProps: u,
    size: d = "medium",
    disableRipple: f = !1,
    className: p,
    slots: h = {},
    slotProps: g = {},
    ...m
  } = r, b = l ? c : s, x = l ? c : o, E = {
    ...r,
    disableRipple: f,
    color: i,
    indeterminate: l,
    size: d
  }, v = kM(E), w = g.input ?? u, [S, T] = pt("root", {
    ref: n,
    elementType: NM,
    className: Oe(v.root, p),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: h,
      slotProps: g,
      ...m
    },
    ownerState: E,
    additionalProps: {
      type: "checkbox",
      icon: /* @__PURE__ */ M.cloneElement(b, {
        fontSize: b.props.fontSize ?? d
      }),
      checkedIcon: /* @__PURE__ */ M.cloneElement(x, {
        fontSize: x.props.fontSize ?? d
      }),
      disableRipple: f,
      slots: h,
      slotProps: {
        input: lh(typeof w == "function" ? w(E) : w, {
          "data-indeterminate": l
        })
      }
    }
  });
  return /* @__PURE__ */ N(S, {
    ...T,
    classes: v
  });
});
process.env.NODE_ENV !== "production" && (hw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * The icon to display when the component is checked.
   * @default <CheckBoxIcon />
   */
  checkedIcon: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: a.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <CheckBoxOutlineBlankIcon />
   */
  icon: a.node,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the `input`.
   * @default false
   */
  indeterminate: a.bool,
  /**
   * The icon to display when the component is indeterminate.
   * @default <IndeterminateCheckBoxIcon />
   */
  indeterminateIcon: a.node,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: a.object,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: a.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: a.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense checkbox styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    input: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: a.any
});
const Hi = we(
  ({ label: e, elementId: t, tooltip: n, isDisabled: r, isError: o, isRequired: i }) => {
    const { textCommonStyles: s } = du({
      isTitle: !1,
      isLabel: !0,
      textColor: r ? "disabled" : o ? "error" : "auto"
    });
    return /* @__PURE__ */ Se(
      Jr,
      {
        className: "VenomousUI-Label",
        component: "label",
        htmlFor: t,
        sx: {
          ...s,
          cursor: r ? "not-allowed" : "pointer",
          display: "flex",
          alignItems: "center"
        },
        children: [
          /* @__PURE__ */ N(
            Jr,
            {
              component: "i",
              sx: {
                width: "14px",
                marginLeft: "-14px",
                fontSize: "1.5rem",
                transform: "translateY(0.25rem)",
                opacity: i ? 1 : 0,
                color: "error.main"
              },
              children: "*"
            }
          ),
          e,
          n && /* @__PURE__ */ N(ah, { title: n, arrow: !0, placement: "top", children: /* @__PURE__ */ N(
            Mr,
            {
              icon: "solar:info-circle-bold",
              width: 16,
              color: o ? "error" : "primary",
              ml: "4px"
            }
          ) })
        ]
      }
    );
  }
);
Hi.displayName = "Label";
const Su = we(
  ({ startLabel: e, endLabel: t, labelsDirection: n = "row", renderElement: r, isDisabled: o, isError: i }) => {
    const s = B0();
    return /* @__PURE__ */ Se(sn, { className: "VenomousUI-Labels", gap: 0, row: n === "row", children: [
      e && /* @__PURE__ */ N(Hi, { label: e, elementId: s, isDisabled: o, isError: i }),
      r(s),
      t && /* @__PURE__ */ N(Hi, { label: t, elementId: s, isDisabled: o, isError: i })
    ] });
  }
);
Su.displayName = "Labels";
const mw = we(
  ({ value: e, onChange: t, isDisabled: n, isError: r, label: o, labelDirection: i = "end" }) => {
    const s = Fe(
      (l) => /* @__PURE__ */ N(
        hw,
        {
          id: l,
          checked: e,
          onChange: (c) => t(c.target.checked),
          disabled: n,
          icon: /* @__PURE__ */ N(_M, { isDisabled: n, isError: r }),
          checkedIcon: /* @__PURE__ */ N(MM, { isDisabled: n, isError: r }),
          sx: {
            "& .MuiSwitch-track": { transition: "background-color 0s" },
            "& svg.MuiSvgIcon-root": { transform: "translate(-1px, 0px)" }
          }
        }
      ),
      [e, t, n, r]
    );
    return o ? /* @__PURE__ */ N(
      Su,
      {
        labelsDirection: "row",
        startLabel: i === "start" ? o : "",
        endLabel: i === "end" ? o : "",
        isDisabled: n,
        isError: r,
        renderElement: s
      }
    ) : s();
  }
);
mw.displayName = "Checkbox";
const _M = we(
  ({ isDisabled: e, isError: t }) => /* @__PURE__ */ N(
    Mi,
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "32",
      height: "32",
      viewBox: "0 0 20 20",
      sx: {
        color: (n) => t ? n.palette.error.main : e ? n.palette.action.disabled : "auto"
      },
      children: /* @__PURE__ */ N(
        "path",
        {
          fill: "currentColor",
          d: "M3 6a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3zm3-2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"
        }
      )
    }
  )
), MM = we(
  ({ isDisabled: e, isError: t }) => /* @__PURE__ */ N(
    Mi,
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "32",
      height: "32",
      viewBox: "0 0 24 24",
      sx: {
        color: (n) => t ? n.palette.error.main : e ? n.palette.action.disabled : "auto"
      },
      children: /* @__PURE__ */ N(
        "path",
        {
          fill: "currentColor",
          d: "M6.25 3A3.25 3.25 0 0 0 3 6.25v11.5A3.25 3.25 0 0 0 6.25 21h11.5A3.25 3.25 0 0 0 21 17.75V6.25A3.25 3.25 0 0 0 17.75 3zm11.03 6.28l-6.754 6.747a.75.75 0 0 1-1.06 0L6.72 13.28a.75.75 0 0 1 1.06-1.06l2.217 2.216l6.223-6.217a.75.75 0 1 1 1.06 1.062"
        }
      )
    }
  )
);
var dy;
const AM = Me("fieldset", {
  shouldForwardProp: Fr
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), DM = Me("legend", {
  shouldForwardProp: Fr
})(et(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function gw(e) {
  const {
    children: t,
    classes: n,
    className: r,
    label: o,
    notched: i,
    ...s
  } = e, l = o != null && o !== "", c = {
    ...e,
    notched: i,
    withLabel: l
  };
  return /* @__PURE__ */ N(AM, {
    "aria-hidden": !0,
    className: r,
    ownerState: c,
    ...s,
    children: /* @__PURE__ */ N(DM, {
      ownerState: c,
      children: l ? /* @__PURE__ */ N("span", {
        children: o
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        dy || (dy = /* @__PURE__ */ N("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (gw.propTypes = {
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The label.
   */
  label: a.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: a.bool.isRequired,
  /**
   * @ignore
   */
  style: a.object
});
function yw({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((r, o) => (r[o] = e[o], n && typeof e[o] > "u" && (r[o] = n[o]), r), {});
}
function vl(e) {
  return parseInt(e, 10) || 0;
}
const BM = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function FM(e) {
  for (const t in e)
    return !1;
  return !0;
}
function fy(e) {
  return FM(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const bw = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    onChange: r,
    maxRows: o,
    minRows: i = 1,
    style: s,
    value: l,
    ...c
  } = t, {
    current: u
  } = M.useRef(l != null), d = M.useRef(null), f = pn(n, d), p = M.useRef(null), h = M.useRef(null), g = M.useCallback(() => {
    const v = d.current, w = h.current;
    if (!v || !w)
      return;
    const T = _r(v).getComputedStyle(v);
    if (T.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    w.style.width = T.width, w.value = v.value || t.placeholder || "x", w.value.slice(-1) === `
` && (w.value += " ");
    const C = T.boxSizing, k = vl(T.paddingBottom) + vl(T.paddingTop), P = vl(T.borderBottomWidth) + vl(T.borderTopWidth), y = w.scrollHeight;
    w.value = "x";
    const R = w.scrollHeight;
    let $ = y;
    i && ($ = Math.max(Number(i) * R, $)), o && ($ = Math.min(Number(o) * R, $)), $ = Math.max($, R);
    const A = $ + (C === "border-box" ? k + P : 0), O = Math.abs($ - y) <= 1;
    return {
      outerHeightStyle: A,
      overflowing: O
    };
  }, [o, i, t.placeholder]), m = Nr(() => {
    const v = d.current, w = g();
    if (!v || !w || fy(w))
      return !1;
    const S = w.outerHeightStyle;
    return p.current != null && p.current !== S;
  }), b = M.useCallback(() => {
    const v = d.current, w = g();
    if (!v || !w || fy(w))
      return;
    const S = w.outerHeightStyle;
    p.current !== S && (p.current = S, v.style.height = `${S}px`), v.style.overflow = w.overflowing ? "hidden" : "";
  }, [g]), x = M.useRef(-1);
  Pr(() => {
    const v = Dp(b), w = d == null ? void 0 : d.current;
    if (!w)
      return;
    const S = _r(w);
    S.addEventListener("resize", v);
    let T;
    return typeof ResizeObserver < "u" && (T = new ResizeObserver(() => {
      m() && (T.unobserve(w), cancelAnimationFrame(x.current), b(), x.current = requestAnimationFrame(() => {
        T.observe(w);
      }));
    }), T.observe(w)), () => {
      v.clear(), cancelAnimationFrame(x.current), S.removeEventListener("resize", v), T && T.disconnect();
    };
  }, [g, b, m]), Pr(() => {
    b();
  });
  const E = (v) => {
    u || b(), r && r(v);
  };
  return /* @__PURE__ */ Se(M.Fragment, {
    children: [/* @__PURE__ */ N("textarea", {
      value: l,
      onChange: E,
      ref: f,
      rows: i,
      style: s,
      ...c
    }), /* @__PURE__ */ N("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: h,
      tabIndex: -1,
      style: {
        ...BM.shadow,
        ...s,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (bw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: a.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  onChange: a.func,
  /**
   * @ignore
   */
  placeholder: a.string,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * @ignore
   */
  value: a.oneOfType([a.arrayOf(a.string), a.number, a.string])
});
function py(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function LM(e, t = !1) {
  return e && (py(e.value) && e.value !== "" || t && py(e.defaultValue) && e.defaultValue !== "");
}
function zM(e) {
  return Et("MuiInputBase", e);
}
const bc = kt("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var hy;
const vw = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${Ee(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, xw = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, VM = (e) => {
  const {
    classes: t,
    color: n,
    disabled: r,
    error: o,
    endAdornment: i,
    focused: s,
    formControl: l,
    fullWidth: c,
    hiddenLabel: u,
    multiline: d,
    readOnly: f,
    size: p,
    startAdornment: h,
    type: g
  } = e, m = {
    root: ["root", `color${Ee(n)}`, r && "disabled", o && "error", c && "fullWidth", s && "focused", l && "formControl", p && p !== "medium" && `size${Ee(p)}`, d && "multiline", h && "adornedStart", i && "adornedEnd", u && "hiddenLabel", f && "readOnly"],
    input: ["input", r && "disabled", g === "search" && "inputTypeSearch", d && "inputMultiline", p === "small" && "inputSizeSmall", u && "inputHiddenLabel", h && "inputAdornedStart", i && "inputAdornedEnd", f && "readOnly"]
  };
  return Mt(m, zM, t);
}, ww = Me("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: vw
})(et(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${bc.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), Sw = Me("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: xw
})(et(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, r = {
    opacity: "0 !important"
  }, o = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${bc.formControl} &`]: {
      "&::-webkit-input-placeholder": r,
      "&::-moz-placeholder": r,
      // Firefox 19+
      "&::-ms-input-placeholder": r,
      // Edge
      "&:focus::-webkit-input-placeholder": o,
      "&:focus::-moz-placeholder": o,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": o
      // Edge
    },
    [`&.${bc.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: i
      }) => !i.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: i
      }) => i.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), my = Up({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), Ew = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": o,
    autoComplete: i,
    autoFocus: s,
    className: l,
    color: c,
    components: u = {},
    componentsProps: d = {},
    defaultValue: f,
    disabled: p,
    disableInjectingGlobalStyles: h,
    endAdornment: g,
    error: m,
    fullWidth: b = !1,
    id: x,
    inputComponent: E = "input",
    inputProps: v = {},
    inputRef: w,
    margin: S,
    maxRows: T,
    minRows: C,
    multiline: k = !1,
    name: P,
    onBlur: y,
    onChange: R,
    onClick: $,
    onFocus: A,
    onKeyDown: O,
    onKeyUp: _,
    placeholder: I,
    readOnly: D,
    renderSuffix: z,
    rows: B,
    size: F,
    slotProps: L = {},
    slots: W = {},
    startAdornment: U,
    type: Z = "text",
    value: Q,
    ...ee
  } = r, te = v.value != null ? v.value : Q, {
    current: q
  } = M.useRef(te != null), oe = M.useRef(), K = M.useCallback((le) => {
    process.env.NODE_ENV !== "production" && le && le.nodeName !== "INPUT" && !le.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), ne = pn(oe, w, v.ref, K), [j, pe] = M.useState(!1), ce = xu();
  process.env.NODE_ENV !== "production" && M.useEffect(() => {
    if (ce)
      return ce.registerEffect();
  }, [ce]);
  const be = yw({
    props: r,
    muiFormControl: ce,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  be.focused = ce ? ce.focused : j, M.useEffect(() => {
    !ce && p && j && (pe(!1), y && y());
  }, [ce, p, j, y]);
  const Ie = ce && ce.onFilled, _e = ce && ce.onEmpty, $e = M.useCallback((le) => {
    LM(le) ? Ie && Ie() : _e && _e();
  }, [Ie, _e]);
  Pr(() => {
    q && $e({
      value: te
    });
  }, [te, $e, q]);
  const Ne = (le) => {
    A && A(le), v.onFocus && v.onFocus(le), ce && ce.onFocus ? ce.onFocus(le) : pe(!0);
  }, Le = (le) => {
    y && y(le), v.onBlur && v.onBlur(le), ce && ce.onBlur ? ce.onBlur(le) : pe(!1);
  }, Re = (le, ...se) => {
    if (!q) {
      const ae = le.target || oe.current;
      if (ae == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : Xr(1));
      $e({
        value: ae.value
      });
    }
    v.onChange && v.onChange(le, ...se), R && R(le, ...se);
  };
  M.useEffect(() => {
    $e(oe.current);
  }, []);
  const V = (le) => {
    oe.current && le.currentTarget === le.target && oe.current.focus(), $ && $(le);
  };
  let J = E, ie = v;
  k && J === "input" && (B ? (process.env.NODE_ENV !== "production" && (C || T) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), ie = {
    type: void 0,
    minRows: B,
    maxRows: B,
    ...ie
  }) : ie = {
    type: void 0,
    maxRows: T,
    minRows: C,
    ...ie
  }, J = bw);
  const X = (le) => {
    $e(le.animationName === "mui-auto-fill-cancel" ? oe.current : {
      value: "x"
    });
  };
  M.useEffect(() => {
    ce && ce.setAdornedStart(!!U);
  }, [ce, U]);
  const H = {
    ...r,
    color: be.color || "primary",
    disabled: be.disabled,
    endAdornment: g,
    error: be.error,
    focused: be.focused,
    formControl: ce,
    fullWidth: b,
    hiddenLabel: be.hiddenLabel,
    multiline: k,
    size: be.size,
    startAdornment: U,
    type: Z
  }, G = VM(H), re = W.root || u.Root || ww, he = L.root || d.root || {}, me = W.input || u.Input || Sw;
  return ie = {
    ...ie,
    ...L.input ?? d.input
  }, /* @__PURE__ */ Se(M.Fragment, {
    children: [!h && typeof my == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (hy || (hy = /* @__PURE__ */ N(my, {}))), /* @__PURE__ */ Se(re, {
      ...he,
      ref: n,
      onClick: V,
      ...ee,
      ...!Lf(re) && {
        ownerState: {
          ...H,
          ...he.ownerState
        }
      },
      className: Oe(G.root, he.className, l, D && "MuiInputBase-readOnly"),
      children: [U, /* @__PURE__ */ N(Th.Provider, {
        value: null,
        children: /* @__PURE__ */ N(me, {
          "aria-invalid": be.error,
          "aria-describedby": o,
          autoComplete: i,
          autoFocus: s,
          defaultValue: f,
          disabled: be.disabled,
          id: x,
          onAnimationStart: X,
          name: P,
          placeholder: I,
          readOnly: D,
          required: be.required,
          rows: B,
          value: te,
          onKeyDown: O,
          onKeyUp: _,
          type: Z,
          ...ie,
          ...!Lf(me) && {
            as: J,
            ownerState: {
              ...H,
              ...ie.ownerState
            }
          },
          ref: ne,
          className: Oe(G.input, ie.className, D && "MuiInputBase-readOnly"),
          onBlur: Le,
          onChange: Re,
          onFocus: Ne
        })
      }), g, z ? z({
        ...be,
        startAdornment: U
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (Ew.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": a.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: Ap,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: oo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: a.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * @ignore
   */
  onKeyUp: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * @ignore
   */
  renderSuffix: a.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The size of the component.
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
function jM(e) {
  return Et("MuiOutlinedInput", e);
}
const yr = {
  ...bc,
  ...kt("MuiOutlinedInput", ["root", "notchedOutline", "input"])
}, HM = (e) => {
  const {
    classes: t
  } = e, r = Mt({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, jM, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...r
  };
}, WM = Me(ww, {
  shouldForwardProp: (e) => Fr(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: vw
})(et(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${yr.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${yr.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${yr.focused} .${yr.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(bn()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${yr.focused} .${yr.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${yr.error} .${yr.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${yr.disabled} .${yr.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: r
      }) => n.multiline && r === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), UM = Me(gw, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(et(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), qM = Me(Sw, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: xw
})(et(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), Ch = /* @__PURE__ */ M.forwardRef(function(t, n) {
  var r;
  const o = Nt({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: i = {},
    fullWidth: s = !1,
    inputComponent: l = "input",
    label: c,
    multiline: u = !1,
    notched: d,
    slots: f = {},
    type: p = "text",
    ...h
  } = o, g = HM(o), m = xu(), b = yw({
    props: o,
    muiFormControl: m,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), x = {
    ...o,
    color: b.color || "primary",
    disabled: b.disabled,
    error: b.error,
    focused: b.focused,
    formControl: m,
    fullWidth: s,
    hiddenLabel: b.hiddenLabel,
    multiline: u,
    size: b.size,
    type: p
  }, E = f.root ?? i.Root ?? WM, v = f.input ?? i.Input ?? qM;
  return /* @__PURE__ */ N(Ew, {
    slots: {
      root: E,
      input: v
    },
    renderSuffix: (w) => /* @__PURE__ */ N(UM, {
      ownerState: x,
      className: g.notchedOutline,
      label: c != null && c !== "" && b.required ? r || (r = /* @__PURE__ */ Se(M.Fragment, {
        children: [c, " ", "*"]
      })) : c,
      notched: typeof d < "u" ? d : !!(w.startAdornment || w.filled || w.focused)
    }),
    fullWidth: s,
    inputComponent: l,
    multiline: u,
    ref: n,
    type: p,
    ...h,
    classes: {
      ...g,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (Ch.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: oo,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: a.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: a.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
Ch.muiName = "Input";
function Tw({
  isDisabled: e,
  isError: t
}) {
  return {
    inputCommonStyle: ct(
      () => ({
        borderRadius: "8px",
        minWidth: "200px",
        "& input": {
          cursor: e ? "not-allowed" : "text",
          color: (r) => e ? "disabled" : t ? r.palette.error.main : "inherit"
        }
      }),
      [e, t]
    )
  };
}
const Eu = we(
  ({
    label: e = "",
    tooltip: t,
    fullWidth: n = !1,
    value: r,
    onChange: o,
    isRequired: i,
    isDisabled: s,
    isError: l,
    errorMessage: c = "",
    sx: u,
    ...d
  }) => {
    const f = B0(), { inputCommonStyle: p } = Tw({
      isDisabled: s,
      isError: l
    }), { textCommonStyles: h } = du({
      isTitle: !1,
      isLabel: !0,
      textColor: s ? "disabled" : l ? "error" : "auto"
    });
    return /* @__PURE__ */ Se(sn, { gap: 0, width: n ? "100%" : "auto", children: [
      e && /* @__PURE__ */ N(
        Hi,
        {
          label: e,
          elementId: f,
          tooltip: t,
          isRequired: i,
          isDisabled: s,
          isError: l
        }
      ),
      /* @__PURE__ */ N(
        Ch,
        {
          id: f,
          autoComplete: "off",
          fullWidth: n,
          size: "small",
          error: l,
          disabled: s,
          value: r,
          onChange: (g) => o(g.target.value),
          sx: { ...p, ...u },
          ...d
        }
      ),
      l && /* @__PURE__ */ N(
        In,
        {
          text: l ? c : "",
          isLabel: !0,
          sx: { ...h, minHeight: "24px" }
        }
      )
    ] });
  }
);
Eu.displayName = "Input";
const Cw = we(
  ({ isError: e, fullWidth: t, value: n = 0, onChange: r, sx: o, min: i = 0, max: s = 1e3, step: l = 1, ...c }) => {
    const u = Fe(
      (d) => {
        if (!d || isNaN(parseInt(d, 10))) {
          r(i);
          return;
        }
        const f = Math.abs(parseInt(d, 10));
        r(f);
      },
      [i, r]
    );
    return /* @__PURE__ */ N(
      Eu,
      {
        type: "number",
        fullWidth: t,
        isError: e,
        value: Math.abs(n).toString(),
        onChange: u,
        sx: {
          ...o
        },
        slotProps: {
          input: {
            type: "number",
            min: i,
            max: s,
            step: l
          }
        },
        ...c
      }
    );
  }
);
Cw.displayName = "Number";
function Br(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((r) => n.searchParams.append("args[]", r)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
const Tu = "$$material";
function YM(e) {
  return e == null || Object.keys(e).length === 0;
}
function Ow(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e;
  return /* @__PURE__ */ N(av, {
    styles: typeof t == "function" ? (o) => t(YM(o) ? n : o) : t
  });
}
process.env.NODE_ENV !== "production" && (Ow.propTypes = {
  defaultTheme: a.object,
  styles: a.oneOfType([a.array, a.string, a.object, a.func])
});
/**
 * @mui/styled-engine v7.0.2
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function Rw(e, t) {
  const n = oc(e, t);
  return process.env.NODE_ENV !== "production" ? (...r) => {
    const o = typeof e == "string" ? `"${e}"` : "component";
    return r.length === 0 ? console.error([`MUI: Seems like you called \`styled(${o})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : r.some((i) => i === void 0) && console.error(`MUI: the styled(${o})(...args) API requires all its args to be defined.`), n(...r);
  } : n;
}
function GM(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const gy = [];
function yy(e) {
  return gy[0] = e, es(gy);
}
function Cr(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function kw(e) {
  if (/* @__PURE__ */ M.isValidElement(e) || fr.isValidElementType(e) || !Cr(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = kw(e[n]);
  }), t;
}
function fn(e, t, n = {
  clone: !0
}) {
  const r = n.clone ? {
    ...e
  } : e;
  return Cr(e) && Cr(t) && Object.keys(t).forEach((o) => {
    /* @__PURE__ */ M.isValidElement(t[o]) || fr.isValidElementType(t[o]) ? r[o] = t[o] : Cr(t[o]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, o) && Cr(e[o]) ? r[o] = fn(e[o], t[o], n) : n.clone ? r[o] = Cr(t[o]) ? kw(t[o]) : t[o] : r[o] = t[o];
  }), r;
}
const KM = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, r) => n.val - r.val), t.reduce((n, r) => ({
    ...n,
    [r.key]: r.val
  }), {});
};
function XM(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: r = 5,
    ...o
  } = e, i = KM(t), s = Object.keys(i);
  function l(p) {
    return `@media (min-width:${typeof t[p] == "number" ? t[p] : p}${n})`;
  }
  function c(p) {
    return `@media (max-width:${(typeof t[p] == "number" ? t[p] : p) - r / 100}${n})`;
  }
  function u(p, h) {
    const g = s.indexOf(h);
    return `@media (min-width:${typeof t[p] == "number" ? t[p] : p}${n}) and (max-width:${(g !== -1 && typeof t[s[g]] == "number" ? t[s[g]] : h) - r / 100}${n})`;
  }
  function d(p) {
    return s.indexOf(p) + 1 < s.length ? u(p, s[s.indexOf(p) + 1]) : l(p);
  }
  function f(p) {
    const h = s.indexOf(p);
    return h === 0 ? l(s[1]) : h === s.length - 1 ? c(s[h]) : u(p, s[s.indexOf(p) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: s,
    values: i,
    up: l,
    down: c,
    between: u,
    only: d,
    not: f,
    unit: n,
    ...o
  };
}
function ZM(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((r) => r.startsWith("@container")).sort((r, o) => {
    var s, l;
    const i = /min-width:\s*([0-9.]+)/;
    return +(((s = r.match(i)) == null ? void 0 : s[1]) || 0) - +(((l = o.match(i)) == null ? void 0 : l[1]) || 0);
  });
  return n.length ? n.reduce((r, o) => {
    const i = t[o];
    return delete r[o], r[o] = i, r;
  }, {
    ...t
  }) : t;
}
function QM(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function JM(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : Br(18, `(${t})`));
    return null;
  }
  const [, r, o] = n, i = Number.isNaN(+r) ? r || 0 : +r;
  return e.containerQueries(o).up(i);
}
function eA(e) {
  const t = (i, s) => i.replace("@media", s ? `@container ${s}` : "@container");
  function n(i, s) {
    i.up = (...l) => t(e.breakpoints.up(...l), s), i.down = (...l) => t(e.breakpoints.down(...l), s), i.between = (...l) => t(e.breakpoints.between(...l), s), i.only = (...l) => t(e.breakpoints.only(...l), s), i.not = (...l) => {
      const c = t(e.breakpoints.not(...l), s);
      return c.includes("not all and") ? c.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : c;
    };
  }
  const r = {}, o = (i) => (n(r, i), r);
  return n(o), {
    ...e,
    containerQueries: o
  };
}
const tA = {
  borderRadius: 4
}, _o = process.env.NODE_ENV !== "production" ? a.oneOfType([a.number, a.string, a.object, a.array]) : {};
function Gs(e, t) {
  return t ? fn(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const Cu = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, by = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${Cu[e]}px)`
}, nA = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : Cu[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function to(e, t, n) {
  const r = e.theme || {};
  if (Array.isArray(t)) {
    const i = r.breakpoints || by;
    return t.reduce((s, l, c) => (s[i.up(i.keys[c])] = n(t[c]), s), {});
  }
  if (typeof t == "object") {
    const i = r.breakpoints || by;
    return Object.keys(t).reduce((s, l) => {
      if (QM(i.keys, l)) {
        const c = JM(r.containerQueries ? r : nA, l);
        c && (s[c] = n(t[l], l));
      } else if (Object.keys(i.values || Cu).includes(l)) {
        const c = i.up(l);
        s[c] = n(t[l], l);
      } else {
        const c = l;
        s[c] = t[c];
      }
      return s;
    }, {});
  }
  return n(t);
}
function rA(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((r, o) => {
    const i = e.up(o);
    return r[i] = {}, r;
  }, {})) || {};
}
function oA(e, t) {
  return e.reduce((n, r) => {
    const o = n[r];
    return (!o || Object.keys(o).length === 0) && delete n[r], n;
  }, t);
}
function Wt(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : Br(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function Ou(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const r = `vars.${t}`.split(".").reduce((o, i) => o && o[i] ? o[i] : null, e);
    if (r != null)
      return r;
  }
  return t.split(".").reduce((r, o) => r && r[o] != null ? r[o] : null, e);
}
function vc(e, t, n, r = n) {
  let o;
  return typeof e == "function" ? o = e(n) : Array.isArray(e) ? o = e[n] || r : o = Ou(e, n) || r, t && (o = t(o, r, e)), o;
}
function qt(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: r,
    transform: o
  } = e, i = (s) => {
    if (s[t] == null)
      return null;
    const l = s[t], c = s.theme, u = Ou(c, r) || {};
    return to(s, l, (f) => {
      let p = vc(u, o, f);
      return f === p && typeof f == "string" && (p = vc(u, o, `${t}${f === "default" ? "" : Wt(f)}`, f)), n === !1 ? p : {
        [n]: p
      };
    });
  };
  return i.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: _o
  } : {}, i.filterProps = [t], i;
}
function iA(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const sA = {
  m: "margin",
  p: "padding"
}, aA = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, vy = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, lA = iA((e) => {
  if (e.length > 2)
    if (vy[e])
      e = vy[e];
    else
      return [e];
  const [t, n] = e.split(""), r = sA[t], o = aA[n] || "";
  return Array.isArray(o) ? o.map((i) => r + i) : [r + o];
}), Ru = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], ku = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], cA = [...Ru, ...ku];
function za(e, t, n, r) {
  const o = Ou(e, t, !0) ?? n;
  return typeof o == "number" || typeof o == "string" ? (i) => typeof i == "string" ? i : (process.env.NODE_ENV !== "production" && typeof i != "number" && console.error(`MUI: Expected ${r} argument to be a number or a string, got ${i}.`), typeof o == "string" ? o.startsWith("var(") && i === 0 ? 0 : o.startsWith("var(") && i === 1 ? o : `calc(${i} * ${o})` : o * i) : Array.isArray(o) ? (i) => {
    if (typeof i == "string")
      return i;
    const s = Math.abs(i);
    process.env.NODE_ENV !== "production" && (Number.isInteger(s) ? s > o.length - 1 && console.error([`MUI: The value provided (${s}) overflows.`, `The supported values are: ${JSON.stringify(o)}.`, `${s} > ${o.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const l = o[s];
    return i >= 0 ? l : typeof l == "number" ? -l : typeof l == "string" && l.startsWith("var(") ? `calc(-1 * ${l})` : `-${l}`;
  } : typeof o == "function" ? o : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${o}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function Oh(e) {
  return za(e, "spacing", 8, "spacing");
}
function Va(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function uA(e, t) {
  return (n) => e.reduce((r, o) => (r[o] = Va(t, n), r), {});
}
function dA(e, t, n, r) {
  if (!t.includes(n))
    return null;
  const o = lA(n), i = uA(o, r), s = e[n];
  return to(e, s, i);
}
function Nw(e, t) {
  const n = Oh(e.theme);
  return Object.keys(e).map((r) => dA(e, t, r, n)).reduce(Gs, {});
}
function Ft(e) {
  return Nw(e, Ru);
}
Ft.propTypes = process.env.NODE_ENV !== "production" ? Ru.reduce((e, t) => (e[t] = _o, e), {}) : {};
Ft.filterProps = Ru;
function Lt(e) {
  return Nw(e, ku);
}
Lt.propTypes = process.env.NODE_ENV !== "production" ? ku.reduce((e, t) => (e[t] = _o, e), {}) : {};
Lt.filterProps = ku;
process.env.NODE_ENV !== "production" && cA.reduce((e, t) => (e[t] = _o, e), {});
function Iw(e = 8, t = Oh({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...r) => (process.env.NODE_ENV !== "production" && (r.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${r.length}`)), (r.length === 0 ? [1] : r).map((i) => {
    const s = t(i);
    return typeof s == "number" ? `${s}px` : s;
  }).join(" "));
  return n.mui = !0, n;
}
function Nu(...e) {
  const t = e.reduce((r, o) => (o.filterProps.forEach((i) => {
    r[i] = o;
  }), r), {}), n = (r) => Object.keys(r).reduce((o, i) => t[i] ? Gs(o, t[i](r)) : o, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((r, o) => Object.assign(r, o.propTypes), {}) : {}, n.filterProps = e.reduce((r, o) => r.concat(o.filterProps), []), n;
}
function Xn(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function or(e, t) {
  return qt({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const fA = or("border", Xn), pA = or("borderTop", Xn), hA = or("borderRight", Xn), mA = or("borderBottom", Xn), gA = or("borderLeft", Xn), yA = or("borderColor"), bA = or("borderTopColor"), vA = or("borderRightColor"), xA = or("borderBottomColor"), wA = or("borderLeftColor"), SA = or("outline", Xn), EA = or("outlineColor"), Iu = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = za(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (r) => ({
      borderRadius: Va(t, r)
    });
    return to(e, e.borderRadius, n);
  }
  return null;
};
Iu.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: _o
} : {};
Iu.filterProps = ["borderRadius"];
Nu(fA, pA, hA, mA, gA, yA, bA, vA, xA, wA, Iu, SA, EA);
const $u = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = za(e.theme, "spacing", 8, "gap"), n = (r) => ({
      gap: Va(t, r)
    });
    return to(e, e.gap, n);
  }
  return null;
};
$u.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: _o
} : {};
$u.filterProps = ["gap"];
const Pu = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = za(e.theme, "spacing", 8, "columnGap"), n = (r) => ({
      columnGap: Va(t, r)
    });
    return to(e, e.columnGap, n);
  }
  return null;
};
Pu.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: _o
} : {};
Pu.filterProps = ["columnGap"];
const _u = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = za(e.theme, "spacing", 8, "rowGap"), n = (r) => ({
      rowGap: Va(t, r)
    });
    return to(e, e.rowGap, n);
  }
  return null;
};
_u.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: _o
} : {};
_u.filterProps = ["rowGap"];
const TA = qt({
  prop: "gridColumn"
}), CA = qt({
  prop: "gridRow"
}), OA = qt({
  prop: "gridAutoFlow"
}), RA = qt({
  prop: "gridAutoColumns"
}), kA = qt({
  prop: "gridAutoRows"
}), NA = qt({
  prop: "gridTemplateColumns"
}), IA = qt({
  prop: "gridTemplateRows"
}), $A = qt({
  prop: "gridTemplateAreas"
}), PA = qt({
  prop: "gridArea"
});
Nu($u, Pu, _u, TA, CA, OA, RA, kA, NA, IA, $A, PA);
function Ni(e, t) {
  return t === "grey" ? t : e;
}
const _A = qt({
  prop: "color",
  themeKey: "palette",
  transform: Ni
}), MA = qt({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: Ni
}), AA = qt({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: Ni
});
Nu(_A, MA, AA);
function Bn(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const DA = qt({
  prop: "width",
  transform: Bn
}), Rh = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var o, i, s, l, c;
      const r = ((s = (i = (o = e.theme) == null ? void 0 : o.breakpoints) == null ? void 0 : i.values) == null ? void 0 : s[n]) || Cu[n];
      return r ? ((c = (l = e.theme) == null ? void 0 : l.breakpoints) == null ? void 0 : c.unit) !== "px" ? {
        maxWidth: `${r}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: r
      } : {
        maxWidth: Bn(n)
      };
    };
    return to(e, e.maxWidth, t);
  }
  return null;
};
Rh.filterProps = ["maxWidth"];
const BA = qt({
  prop: "minWidth",
  transform: Bn
}), FA = qt({
  prop: "height",
  transform: Bn
}), LA = qt({
  prop: "maxHeight",
  transform: Bn
}), zA = qt({
  prop: "minHeight",
  transform: Bn
});
qt({
  prop: "size",
  cssProperty: "width",
  transform: Bn
});
qt({
  prop: "size",
  cssProperty: "height",
  transform: Bn
});
const VA = qt({
  prop: "boxSizing"
});
Nu(DA, Rh, BA, FA, LA, zA, VA);
const ja = {
  // borders
  border: {
    themeKey: "borders",
    transform: Xn
  },
  borderTop: {
    themeKey: "borders",
    transform: Xn
  },
  borderRight: {
    themeKey: "borders",
    transform: Xn
  },
  borderBottom: {
    themeKey: "borders",
    transform: Xn
  },
  borderLeft: {
    themeKey: "borders",
    transform: Xn
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: Xn
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: Iu
  },
  // palette
  color: {
    themeKey: "palette",
    transform: Ni
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: Ni
  },
  backgroundColor: {
    themeKey: "palette",
    transform: Ni
  },
  // spacing
  p: {
    style: Lt
  },
  pt: {
    style: Lt
  },
  pr: {
    style: Lt
  },
  pb: {
    style: Lt
  },
  pl: {
    style: Lt
  },
  px: {
    style: Lt
  },
  py: {
    style: Lt
  },
  padding: {
    style: Lt
  },
  paddingTop: {
    style: Lt
  },
  paddingRight: {
    style: Lt
  },
  paddingBottom: {
    style: Lt
  },
  paddingLeft: {
    style: Lt
  },
  paddingX: {
    style: Lt
  },
  paddingY: {
    style: Lt
  },
  paddingInline: {
    style: Lt
  },
  paddingInlineStart: {
    style: Lt
  },
  paddingInlineEnd: {
    style: Lt
  },
  paddingBlock: {
    style: Lt
  },
  paddingBlockStart: {
    style: Lt
  },
  paddingBlockEnd: {
    style: Lt
  },
  m: {
    style: Ft
  },
  mt: {
    style: Ft
  },
  mr: {
    style: Ft
  },
  mb: {
    style: Ft
  },
  ml: {
    style: Ft
  },
  mx: {
    style: Ft
  },
  my: {
    style: Ft
  },
  margin: {
    style: Ft
  },
  marginTop: {
    style: Ft
  },
  marginRight: {
    style: Ft
  },
  marginBottom: {
    style: Ft
  },
  marginLeft: {
    style: Ft
  },
  marginX: {
    style: Ft
  },
  marginY: {
    style: Ft
  },
  marginInline: {
    style: Ft
  },
  marginInlineStart: {
    style: Ft
  },
  marginInlineEnd: {
    style: Ft
  },
  marginBlock: {
    style: Ft
  },
  marginBlockStart: {
    style: Ft
  },
  marginBlockEnd: {
    style: Ft
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: $u
  },
  rowGap: {
    style: _u
  },
  columnGap: {
    style: Pu
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: Bn
  },
  maxWidth: {
    style: Rh
  },
  minWidth: {
    transform: Bn
  },
  height: {
    transform: Bn
  },
  maxHeight: {
    transform: Bn
  },
  minHeight: {
    transform: Bn
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function jA(...e) {
  const t = e.reduce((r, o) => r.concat(Object.keys(o)), []), n = new Set(t);
  return e.every((r) => n.size === Object.keys(r).length);
}
function HA(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function WA() {
  function e(n, r, o, i) {
    const s = {
      [n]: r,
      theme: o
    }, l = i[n];
    if (!l)
      return {
        [n]: r
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: d,
      style: f
    } = l;
    if (r == null)
      return null;
    if (u === "typography" && r === "inherit")
      return {
        [n]: r
      };
    const p = Ou(o, u) || {};
    return f ? f(s) : to(s, r, (g) => {
      let m = vc(p, d, g);
      return g === m && typeof g == "string" && (m = vc(p, d, `${n}${g === "default" ? "" : Wt(g)}`, g)), c === !1 ? m : {
        [c]: m
      };
    });
  }
  function t(n) {
    const {
      sx: r,
      theme: o = {}
    } = n || {};
    if (!r)
      return null;
    const i = o.unstable_sxConfig ?? ja;
    function s(l) {
      let c = l;
      if (typeof l == "function")
        c = l(o);
      else if (typeof l != "object")
        return l;
      if (!c)
        return null;
      const u = rA(o.breakpoints), d = Object.keys(u);
      let f = u;
      return Object.keys(c).forEach((p) => {
        const h = HA(c[p], o);
        if (h != null)
          if (typeof h == "object")
            if (i[p])
              f = Gs(f, e(p, h, o, i));
            else {
              const g = to({
                theme: o
              }, h, (m) => ({
                [p]: m
              }));
              jA(g, h) ? f[p] = t({
                sx: h,
                theme: o
              }) : f = Gs(f, g);
            }
          else
            f = Gs(f, e(p, h, o, i));
      }), ZM(o, oA(d, f));
    }
    return Array.isArray(r) ? r.map(s) : s(r);
  }
  return t;
}
const Zo = WA();
Zo.filterProps = ["sx"];
function UA(e, t) {
  var r;
  const n = this;
  if (n.vars) {
    if (!((r = n.colorSchemes) != null && r[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let o = n.getColorSchemeSelector(e);
    return o === "&" ? t : ((o.includes("data-") || o.includes(".")) && (o = `*:where(${o.replace(/\s*&$/, "")}) &`), {
      [o]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function kh(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: r = {},
    spacing: o,
    shape: i = {},
    ...s
  } = e, l = XM(n), c = Iw(o);
  let u = fn({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...r
    },
    spacing: c,
    shape: {
      ...tA,
      ...i
    }
  }, s);
  return u = eA(u), u.applyStyles = UA, u = t.reduce((d, f) => fn(d, f), u), u.unstable_sxConfig = {
    ...ja,
    ...s == null ? void 0 : s.unstable_sxConfig
  }, u.unstable_sx = function(f) {
    return Zo({
      sx: f,
      theme: this
    });
  }, u;
}
function qA(e) {
  return Object.keys(e).length === 0;
}
function YA(e = null) {
  const t = M.useContext(ts);
  return !t || qA(t) ? e : t;
}
const GA = kh();
function Nh(e = GA) {
  return YA(e);
}
function $w({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const r = Nh(n), o = typeof e == "function" ? e(t && r[t] || r) : e;
  return /* @__PURE__ */ N(Ow, {
    styles: o
  });
}
process.env.NODE_ENV !== "production" && ($w.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: a.object,
  /**
   * @ignore
   */
  styles: a.oneOfType([a.array, a.func, a.number, a.object, a.string, a.bool]),
  /**
   * @ignore
   */
  themeId: a.string
});
const KA = (e) => {
  var r;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((r = e == null ? void 0 : e.theme) == null ? void 0 : r.unstable_sxConfig) ?? ja;
  return Object.keys(e).forEach((o) => {
    n[o] ? t.systemProps[o] = e[o] : t.otherProps[o] = e[o];
  }), t;
};
function XA(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: r,
    otherProps: o
  } = KA(n);
  let i;
  return Array.isArray(t) ? i = [r, ...t] : typeof t == "function" ? i = (...s) => {
    const l = t(...s);
    return Cr(l) ? {
      ...r,
      ...l
    } : r;
  } : i = {
    ...r,
    ...t
  }, {
    ...o,
    sx: i
  };
}
const xy = (e) => e, ZA = () => {
  let e = xy;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = xy;
    }
  };
}, Pw = ZA();
function QA(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: r = "MuiBox-root",
    generateClassName: o
  } = e, i = Rw("div", {
    shouldForwardProp: (l) => l !== "theme" && l !== "sx" && l !== "as"
  })(Zo);
  return /* @__PURE__ */ M.forwardRef(function(c, u) {
    const d = Nh(n), {
      className: f,
      component: p = "div",
      ...h
    } = XA(c);
    return /* @__PURE__ */ N(i, {
      as: p,
      ref: u,
      className: Oe(f, o ? o(r) : r),
      theme: t && d[t] || d,
      ...h
    });
  });
}
const JA = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function Kt(e, t, n = "Mui") {
  const r = JA[t];
  return r ? `${n}-${r}` : `${Pw.generate(e)}-${t}`;
}
function en(e, t, n = "Mui") {
  const r = {};
  return t.forEach((o) => {
    r[o] = Kt(e, o, n);
  }), r;
}
function _w(e, t = "") {
  return e.displayName || e.name || t;
}
function wy(e, t, n) {
  const r = _w(t);
  return e.displayName || (r !== "" ? `${n}(${r})` : n);
}
function e2(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return _w(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case fr.ForwardRef:
          return wy(e, e.render, "ForwardRef");
        case fr.Memo:
          return wy(e, e.type, "memo");
        default:
          return;
      }
  }
}
function Mw(e) {
  const {
    variants: t,
    ...n
  } = e, r = {
    variants: t,
    style: yy(n),
    isProcessed: !0
  };
  return r.style === n || t && t.forEach((o) => {
    typeof o.style != "function" && (o.style = yy(o.style));
  }), r;
}
const t2 = kh();
function $d(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function n2(e) {
  return e ? (t, n) => n[e] : null;
}
function r2(e, t, n) {
  e.theme = a2(e.theme) ? n : e.theme[t] || e.theme;
}
function Gl(e, t) {
  const n = typeof t == "function" ? t(e) : t;
  if (Array.isArray(n))
    return n.flatMap((r) => Gl(e, r));
  if (Array.isArray(n == null ? void 0 : n.variants)) {
    let r;
    if (n.isProcessed)
      r = n.style;
    else {
      const {
        variants: o,
        ...i
      } = n;
      r = i;
    }
    return Aw(e, n.variants, [r]);
  }
  return n != null && n.isProcessed ? n.style : n;
}
function Aw(e, t, n = []) {
  var o;
  let r;
  e: for (let i = 0; i < t.length; i += 1) {
    const s = t[i];
    if (typeof s.props == "function") {
      if (r ?? (r = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !s.props(r))
        continue;
    } else
      for (const l in s.props)
        if (e[l] !== s.props[l] && ((o = e.ownerState) == null ? void 0 : o[l]) !== s.props[l])
          continue e;
    typeof s.style == "function" ? (r ?? (r = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(s.style(r))) : n.push(s.style);
  }
  return n;
}
function o2(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = t2,
    rootShouldForwardProp: r = $d,
    slotShouldForwardProp: o = $d
  } = e;
  function i(l) {
    r2(l, t, n);
  }
  return (l, c = {}) => {
    GM(l, (S) => S.filter((T) => T !== Zo));
    const {
      name: u,
      slot: d,
      skipVariantsResolver: f,
      skipSx: p,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: h = n2(Dw(d)),
      ...g
    } = c, m = f !== void 0 ? f : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      d && d !== "Root" && d !== "root" || !1
    ), b = p || !1;
    let x = $d;
    d === "Root" || d === "root" ? x = r : d ? x = o : l2(l) && (x = void 0);
    const E = Rw(l, {
      shouldForwardProp: x,
      label: s2(u, d),
      ...g
    }), v = (S) => {
      if (typeof S == "function" && S.__emotion_real !== S)
        return function(C) {
          return Gl(C, S);
        };
      if (Cr(S)) {
        const T = Mw(S);
        return T.variants ? function(k) {
          return Gl(k, T);
        } : T.style;
      }
      return S;
    }, w = (...S) => {
      const T = [], C = S.map(v), k = [];
      if (T.push(i), u && h && k.push(function($) {
        var I, D;
        const O = (D = (I = $.theme.components) == null ? void 0 : I[u]) == null ? void 0 : D.styleOverrides;
        if (!O)
          return null;
        const _ = {};
        for (const z in O)
          _[z] = Gl($, O[z]);
        return h($, _);
      }), u && !m && k.push(function($) {
        var _, I;
        const A = $.theme, O = (I = (_ = A == null ? void 0 : A.components) == null ? void 0 : _[u]) == null ? void 0 : I.variants;
        return O ? Aw($, O) : null;
      }), b || k.push(Zo), Array.isArray(C[0])) {
        const R = C.shift(), $ = new Array(T.length).fill(""), A = new Array(k.length).fill("");
        let O;
        O = [...$, ...R, ...A], O.raw = [...$, ...R.raw, ...A], T.unshift(O);
      }
      const P = [...T, ...C, ...k], y = E(...P);
      return l.muiName && (y.muiName = l.muiName), process.env.NODE_ENV !== "production" && (y.displayName = i2(u, d, l)), y;
    };
    return E.withConfig && (w.withConfig = E.withConfig), w;
  };
}
function i2(e, t, n) {
  return e ? `${e}${Wt(t || "")}` : `Styled(${e2(n)})`;
}
function s2(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${Dw(t || "Root")}`), n;
}
function a2(e) {
  for (const t in e)
    return !1;
  return !0;
}
function l2(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function Dw(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
function zf(e, t) {
  const n = {
    ...t
  };
  for (const r in e)
    if (Object.prototype.hasOwnProperty.call(e, r)) {
      const o = r;
      if (o === "components" || o === "slots")
        n[o] = {
          ...e[o],
          ...n[o]
        };
      else if (o === "componentsProps" || o === "slotProps") {
        const i = e[o], s = t[o];
        if (!s)
          n[o] = i || {};
        else if (!i)
          n[o] = s;
        else {
          n[o] = {
            ...s
          };
          for (const l in i)
            if (Object.prototype.hasOwnProperty.call(i, l)) {
              const c = l;
              n[o][c] = zf(i[c], s[c]);
            }
        }
      } else n[o] === void 0 && (n[o] = e[o]);
    }
  return n;
}
const Qo = typeof window < "u" ? M.useLayoutEffect : M.useEffect;
function c2(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function Ih(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), c2(e, t, n);
}
function u2(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((r) => r + r)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((r, o) => o < 3 ? parseInt(r, 16) : Math.round(parseInt(r, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function Eo(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return Eo(u2(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : Br(9, e));
  let r = e.substring(t + 1, e.length - 1), o;
  if (n === "color") {
    if (r = r.split(" "), o = r.shift(), r.length === 4 && r[3].charAt(0) === "/" && (r[3] = r[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(o))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${o}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : Br(10, o));
  } else
    r = r.split(",");
  return r = r.map((i) => parseFloat(i)), {
    type: n,
    values: r,
    colorSpace: o
  };
}
const d2 = (e) => {
  const t = Eo(e);
  return t.values.slice(0, 3).map((n, r) => t.type.includes("hsl") && r !== 0 ? `${n}%` : n).join(" ");
}, Ms = (e, t) => {
  try {
    return d2(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function Mu(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: r
  } = e;
  return t.includes("rgb") ? r = r.map((o, i) => i < 3 ? parseInt(o, 10) : o) : t.includes("hsl") && (r[1] = `${r[1]}%`, r[2] = `${r[2]}%`), t.includes("color") ? r = `${n} ${r.join(" ")}` : r = `${r.join(", ")}`, `${t}(${r})`;
}
function Bw(e) {
  e = Eo(e);
  const {
    values: t
  } = e, n = t[0], r = t[1] / 100, o = t[2] / 100, i = r * Math.min(o, 1 - o), s = (u, d = (u + n / 30) % 12) => o - i * Math.max(Math.min(d - 3, 9 - d, 1), -1);
  let l = "rgb";
  const c = [Math.round(s(0) * 255), Math.round(s(8) * 255), Math.round(s(4) * 255)];
  return e.type === "hsla" && (l += "a", c.push(t[3])), Mu({
    type: l,
    values: c
  });
}
function Vf(e) {
  e = Eo(e);
  let t = e.type === "hsl" || e.type === "hsla" ? Eo(Bw(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function Sy(e, t) {
  const n = Vf(e), r = Vf(t);
  return (Math.max(n, r) + 0.05) / (Math.min(n, r) + 0.05);
}
function jf(e, t) {
  return e = Eo(e), t = Ih(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, Mu(e);
}
function xl(e, t, n) {
  try {
    return jf(e, t);
  } catch {
    return e;
  }
}
function $h(e, t) {
  if (e = Eo(e), t = Ih(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return Mu(e);
}
function yt(e, t, n) {
  try {
    return $h(e, t);
  } catch {
    return e;
  }
}
function Ph(e, t) {
  if (e = Eo(e), t = Ih(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return Mu(e);
}
function bt(e, t, n) {
  try {
    return Ph(e, t);
  } catch {
    return e;
  }
}
function f2(e, t = 0.15) {
  return Vf(e) > 0.5 ? $h(e, t) : Ph(e, t);
}
function wl(e, t, n) {
  try {
    return f2(e, t);
  } catch {
    return e;
  }
}
const p2 = "exact-prop: ​";
function Fw(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [p2]: (t) => {
      const n = Object.keys(t).filter((r) => !e.hasOwnProperty(r));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((r) => `\`${r}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
const h2 = /* @__PURE__ */ M.createContext();
process.env.NODE_ENV !== "production" && (a.node, a.bool);
const m2 = () => M.useContext(h2) ?? !1, g2 = /* @__PURE__ */ M.createContext(void 0);
process.env.NODE_ENV !== "production" && (a.node, a.object);
function y2(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  if (!t || !t.components || !t.components[n])
    return r;
  const o = t.components[n];
  return o.defaultProps ? zf(o.defaultProps, r) : !o.styleOverrides && !o.variants ? zf(o, r) : r;
}
function b2({
  props: e,
  name: t
}) {
  const n = M.useContext(g2);
  return y2({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
const Ey = {
  theme: void 0
};
function v2(e) {
  let t, n;
  return function(o) {
    let i = t;
    return (i === void 0 || o.theme !== n) && (Ey.theme = o.theme, i = Mw(e(Ey)), t = i, n = o.theme), i;
  };
}
function x2(e = "") {
  function t(...r) {
    if (!r.length)
      return "";
    const o = r[0];
    return typeof o == "string" && !o.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${o}${t(...r.slice(1))})` : `, ${o}`;
  }
  return (r, ...o) => `var(--${e ? `${e}-` : ""}${r}${t(...o)})`;
}
const Ty = (e, t, n, r = []) => {
  let o = e;
  t.forEach((i, s) => {
    s === t.length - 1 ? Array.isArray(o) ? o[Number(i)] = n : o && typeof o == "object" && (o[i] = n) : o && typeof o == "object" && (o[i] || (o[i] = r.includes(i) ? [] : {}), o = o[i]);
  });
}, w2 = (e, t, n) => {
  function r(o, i = [], s = []) {
    Object.entries(o).forEach(([l, c]) => {
      (!n || n && !n([...i, l])) && c != null && (typeof c == "object" && Object.keys(c).length > 0 ? r(c, [...i, l], Array.isArray(c) ? [...s, l] : s) : t([...i, l], c, s));
    });
  }
  r(e);
}, S2 = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((r) => e.includes(r)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function Pd(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: r
  } = t || {}, o = {}, i = {}, s = {};
  return w2(
    e,
    (l, c, u) => {
      if ((typeof c == "string" || typeof c == "number") && (!r || !r(l, c))) {
        const d = `--${n ? `${n}-` : ""}${l.join("-")}`, f = S2(l, c);
        Object.assign(o, {
          [d]: f
        }), Ty(i, l, `var(${d})`, u), Ty(s, l, `var(${d}, ${f})`, u);
      }
    },
    (l) => l[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: o,
    vars: i,
    varsWithDefaults: s
  };
}
function E2(e, t = {}) {
  const {
    getSelector: n = b,
    disableCssColorScheme: r,
    colorSchemeSelector: o
  } = t, {
    colorSchemes: i = {},
    components: s,
    defaultColorScheme: l = "light",
    ...c
  } = e, {
    vars: u,
    css: d,
    varsWithDefaults: f
  } = Pd(c, t);
  let p = f;
  const h = {}, {
    [l]: g,
    ...m
  } = i;
  if (Object.entries(m || {}).forEach(([v, w]) => {
    const {
      vars: S,
      css: T,
      varsWithDefaults: C
    } = Pd(w, t);
    p = fn(p, C), h[v] = {
      css: T,
      vars: S
    };
  }), g) {
    const {
      css: v,
      vars: w,
      varsWithDefaults: S
    } = Pd(g, t);
    p = fn(p, S), h[l] = {
      css: v,
      vars: w
    };
  }
  function b(v, w) {
    var T, C;
    let S = o;
    if (o === "class" && (S = ".%s"), o === "data" && (S = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (S = `[${o}="%s"]`), v) {
      if (S === "media")
        return e.defaultColorScheme === v ? ":root" : {
          [`@media (prefers-color-scheme: ${((C = (T = i[v]) == null ? void 0 : T.palette) == null ? void 0 : C.mode) || v})`]: {
            ":root": w
          }
        };
      if (S)
        return e.defaultColorScheme === v ? `:root, ${S.replace("%s", String(v))}` : S.replace("%s", String(v));
    }
    return ":root";
  }
  return {
    vars: p,
    generateThemeVars: () => {
      let v = {
        ...u
      };
      return Object.entries(h).forEach(([, {
        vars: w
      }]) => {
        v = fn(v, w);
      }), v;
    },
    generateStyleSheets: () => {
      var k, P;
      const v = [], w = e.defaultColorScheme || "light";
      function S(y, R) {
        Object.keys(R).length && v.push(typeof y == "string" ? {
          [y]: {
            ...R
          }
        } : y);
      }
      S(n(void 0, {
        ...d
      }), d);
      const {
        [w]: T,
        ...C
      } = h;
      if (T) {
        const {
          css: y
        } = T, R = (P = (k = i[w]) == null ? void 0 : k.palette) == null ? void 0 : P.mode, $ = !r && R ? {
          colorScheme: R,
          ...y
        } : {
          ...y
        };
        S(n(w, {
          ...$
        }), $);
      }
      return Object.entries(C).forEach(([y, {
        css: R
      }]) => {
        var O, _;
        const $ = (_ = (O = i[y]) == null ? void 0 : O.palette) == null ? void 0 : _.mode, A = !r && $ ? {
          colorScheme: $,
          ...R
        } : {
          ...R
        };
        S(n(y, {
          ...A
        }), A);
      }), v;
    }
  };
}
function T2(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
function tn(e, t, n = void 0) {
  const r = {};
  for (const o in e) {
    const i = e[o];
    let s = "", l = !0;
    for (let c = 0; c < i.length; c += 1) {
      const u = i[c];
      u && (s += (l === !0 ? "" : " ") + t(u), l = !1, n && n[u] && (s += " " + n[u]));
    }
    r[o] = s;
  }
  return r;
}
function _d(e, t) {
  var n, r, o;
  return /* @__PURE__ */ M.isValidElement(e) && t.indexOf(
    // For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    e.type.muiName ?? ((o = (r = (n = e.type) == null ? void 0 : n._payload) == null ? void 0 : r.value) == null ? void 0 : o.muiName)
  ) !== -1;
}
const ma = {
  black: "#000",
  white: "#fff"
}, C2 = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, fi = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, pi = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, xs = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, hi = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, mi = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, gi = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
};
function Lw() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: ma.white,
      default: ma.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const O2 = Lw();
function zw() {
  return {
    text: {
      primary: ma.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: ma.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const Cy = zw();
function Oy(e, t, n, r) {
  const o = r.light || r, i = r.dark || r * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = Ph(e.main, o) : t === "dark" && (e.dark = $h(e.main, i)));
}
function R2(e = "light") {
  return e === "dark" ? {
    main: hi[200],
    light: hi[50],
    dark: hi[400]
  } : {
    main: hi[700],
    light: hi[400],
    dark: hi[800]
  };
}
function k2(e = "light") {
  return e === "dark" ? {
    main: fi[200],
    light: fi[50],
    dark: fi[400]
  } : {
    main: fi[500],
    light: fi[300],
    dark: fi[700]
  };
}
function N2(e = "light") {
  return e === "dark" ? {
    main: pi[500],
    light: pi[300],
    dark: pi[700]
  } : {
    main: pi[700],
    light: pi[400],
    dark: pi[800]
  };
}
function I2(e = "light") {
  return e === "dark" ? {
    main: mi[400],
    light: mi[300],
    dark: mi[700]
  } : {
    main: mi[700],
    light: mi[500],
    dark: mi[900]
  };
}
function $2(e = "light") {
  return e === "dark" ? {
    main: gi[400],
    light: gi[300],
    dark: gi[700]
  } : {
    main: gi[800],
    light: gi[500],
    dark: gi[900]
  };
}
function P2(e = "light") {
  return e === "dark" ? {
    main: xs[400],
    light: xs[300],
    dark: xs[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: xs[500],
    dark: xs[900]
  };
}
function _h(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: r = 0.2,
    ...o
  } = e, i = e.primary || R2(t), s = e.secondary || k2(t), l = e.error || N2(t), c = e.info || I2(t), u = e.success || $2(t), d = e.warning || P2(t);
  function f(m) {
    const b = Sy(m, Cy.text.primary) >= n ? Cy.text.primary : O2.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const x = Sy(m, b);
      x < 3 && console.error([`MUI: The contrast ratio of ${x}:1 for ${b} on ${m}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return b;
  }
  const p = ({
    color: m,
    name: b,
    mainShade: x = 500,
    lightShade: E = 300,
    darkShade: v = 700
  }) => {
    if (m = {
      ...m
    }, !m.main && m[x] && (m.main = m[x]), !m.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${b ? ` (${b})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${x}\` property.` : Br(11, b ? ` (${b})` : "", x));
    if (typeof m.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${b ? ` (${b})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(m.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : Br(12, b ? ` (${b})` : "", JSON.stringify(m.main)));
    return Oy(m, "light", E, r), Oy(m, "dark", v, r), m.contrastText || (m.contrastText = f(m.main)), m;
  };
  let h;
  return t === "light" ? h = Lw() : t === "dark" && (h = zw()), process.env.NODE_ENV !== "production" && (h || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), fn({
    // A collection of common colors.
    common: {
      ...ma
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: p({
      color: i,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: p({
      color: s,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: p({
      color: l,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: p({
      color: d,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: p({
      color: c,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: p({
      color: u,
      name: "success"
    }),
    // The grey colors.
    grey: C2,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: f,
    // Generate a rich color object.
    augmentColor: p,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: r,
    // The light and dark mode object.
    ...h
  }, o);
}
function _2(e) {
  const t = {};
  return Object.entries(e).forEach((r) => {
    const [o, i] = r;
    typeof i == "object" && (t[o] = `${i.fontStyle ? `${i.fontStyle} ` : ""}${i.fontVariant ? `${i.fontVariant} ` : ""}${i.fontWeight ? `${i.fontWeight} ` : ""}${i.fontStretch ? `${i.fontStretch} ` : ""}${i.fontSize || ""}${i.lineHeight ? `/${i.lineHeight} ` : ""}${i.fontFamily || ""}`);
  }), t;
}
function M2(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function A2(e) {
  return Math.round(e * 1e5) / 1e5;
}
const Ry = {
  textTransform: "uppercase"
}, ky = '"Roboto", "Helvetica", "Arial", sans-serif';
function D2(e, t) {
  const {
    fontFamily: n = ky,
    // The default font size of the Material Specification.
    fontSize: r = 14,
    // px
    fontWeightLight: o = 300,
    fontWeightRegular: i = 400,
    fontWeightMedium: s = 500,
    fontWeightBold: l = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: c = 16,
    // Apply the CSS properties to all the variants.
    allVariants: u,
    pxToRem: d,
    ...f
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof r != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof c != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const p = r / 14, h = d || ((b) => `${b / c * p}rem`), g = (b, x, E, v, w) => ({
    fontFamily: n,
    fontWeight: b,
    fontSize: h(x),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: E,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === ky ? {
      letterSpacing: `${A2(v / x)}em`
    } : {},
    ...w,
    ...u
  }), m = {
    h1: g(o, 96, 1.167, -1.5),
    h2: g(o, 60, 1.2, -0.5),
    h3: g(i, 48, 1.167, 0),
    h4: g(i, 34, 1.235, 0.25),
    h5: g(i, 24, 1.334, 0),
    h6: g(s, 20, 1.6, 0.15),
    subtitle1: g(i, 16, 1.75, 0.15),
    subtitle2: g(s, 14, 1.57, 0.1),
    body1: g(i, 16, 1.5, 0.15),
    body2: g(i, 14, 1.43, 0.15),
    button: g(s, 14, 1.75, 0.4, Ry),
    caption: g(i, 12, 1.66, 0.4),
    overline: g(i, 12, 2.66, 1, Ry),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return fn({
    htmlFontSize: c,
    pxToRem: h,
    fontFamily: n,
    fontSize: r,
    fontWeightLight: o,
    fontWeightRegular: i,
    fontWeightMedium: s,
    fontWeightBold: l,
    ...m
  }, f, {
    clone: !1
    // No need to clone deep
  });
}
const B2 = 0.2, F2 = 0.14, L2 = 0.12;
function Ot(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${B2})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${F2})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${L2})`].join(",");
}
const z2 = ["none", Ot(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), Ot(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), Ot(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), Ot(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), Ot(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), Ot(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), Ot(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), Ot(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), Ot(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), Ot(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), Ot(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), Ot(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), Ot(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), Ot(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), Ot(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), Ot(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), Ot(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), Ot(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), Ot(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), Ot(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), Ot(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), Ot(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), Ot(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), Ot(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], V2 = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, j2 = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function Ny(e) {
  return `${Math.round(e)}ms`;
}
function H2(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function W2(e) {
  const t = {
    ...V2,
    ...e.easing
  }, n = {
    ...j2,
    ...e.duration
  };
  return {
    getAutoHeightDuration: H2,
    create: (o = ["all"], i = {}) => {
      const {
        duration: s = n.standard,
        easing: l = t.easeInOut,
        delay: c = 0,
        ...u
      } = i;
      if (process.env.NODE_ENV !== "production") {
        const d = (p) => typeof p == "string", f = (p) => !Number.isNaN(parseFloat(p));
        !d(o) && !Array.isArray(o) && console.error('MUI: Argument "props" must be a string or Array.'), !f(s) && !d(s) && console.error(`MUI: Argument "duration" must be a number or a string but found ${s}.`), d(l) || console.error('MUI: Argument "easing" must be a string.'), !f(c) && !d(c) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof i != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(u).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(u).join(",")}].`);
      }
      return (Array.isArray(o) ? o : [o]).map((d) => `${d} ${typeof s == "string" ? s : Ny(s)} ${l} ${typeof c == "string" ? c : Ny(c)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const U2 = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function q2(e) {
  return Cr(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function Vw(e = {}) {
  const t = {
    ...e
  };
  function n(r) {
    const o = Object.entries(r);
    for (let i = 0; i < o.length; i++) {
      const [s, l] = o[i];
      !q2(l) || s.startsWith("unstable_") ? delete r[s] : Cr(l) && (r[s] = {
        ...l
      }, n(r[s]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function Hf(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: r = {},
    spacing: o,
    palette: i = {},
    transitions: s = {},
    typography: l = {},
    shape: c,
    ...u
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : Br(20));
  const d = _h(i), f = kh(e);
  let p = fn(f, {
    mixins: M2(f.breakpoints, r),
    palette: d,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: z2.slice(),
    typography: D2(d, l),
    transitions: W2(s),
    zIndex: {
      ...U2
    }
  });
  if (p = fn(p, u), p = t.reduce((h, g) => fn(h, g), p), process.env.NODE_ENV !== "production") {
    const h = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], g = (m, b) => {
      let x;
      for (x in m) {
        const E = m[x];
        if (h.includes(x) && Object.keys(E).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const v = Kt("", x);
            console.error([`MUI: The \`${b}\` component increases the CSS specificity of the \`${x}\` internal state.`, "You can not override it like this: ", JSON.stringify(m, null, 2), "", `Instead, you need to use the '&.${v}' syntax:`, JSON.stringify({
              root: {
                [`&.${v}`]: E
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          m[x] = {};
        }
      }
    };
    Object.keys(p.components).forEach((m) => {
      const b = p.components[m].styleOverrides;
      b && m.startsWith("Mui") && g(b, m);
    });
  }
  return p.unstable_sxConfig = {
    ...ja,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, p.unstable_sx = function(g) {
    return Zo({
      sx: g,
      theme: this
    });
  }, p.toRuntimeSource = Vw, p;
}
function Wf(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const Y2 = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = Wf(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function jw(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function Hw(e) {
  return e === "dark" ? Y2 : [];
}
function G2(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: r,
    ...o
  } = e, i = _h(t);
  return {
    palette: i,
    opacity: {
      ...jw(i.mode),
      ...n
    },
    overlays: r || Hw(i.mode),
    ...o
  };
}
function K2(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const X2 = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], Z2 = (e) => (t, n) => {
  const r = e.rootSelector || ":root", o = e.colorSchemeSelector;
  let i = o;
  if (o === "class" && (i = ".%s"), o === "data" && (i = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (i = `[${o}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const s = {};
      return X2(e.cssVarPrefix).forEach((l) => {
        s[l] = n[l], delete n[l];
      }), i === "media" ? {
        [r]: n,
        "@media (prefers-color-scheme: dark)": {
          [r]: s
        }
      } : i ? {
        [i.replace("%s", t)]: s,
        [`${r}, ${i.replace("%s", t)}`]: n
      } : {
        [r]: {
          ...n,
          ...s
        }
      };
    }
    if (i && i !== "media")
      return `${r}, ${i.replace("%s", String(t))}`;
  } else if (t) {
    if (i === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [r]: n
        }
      };
    if (i)
      return i.replace("%s", String(t));
  }
  return r;
};
function Q2(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function fe(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function As(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : Bw(e);
}
function Ur(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = Ms(As(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function J2(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const br = (e) => {
  try {
    return e();
  } catch {
  }
}, eD = (e = "mui") => x2(e);
function Md(e, t, n, r) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const o = r === "dark" ? "dark" : "light";
  if (!n) {
    e[r] = G2({
      ...t,
      palette: {
        mode: o,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: i,
    ...s
  } = Hf({
    ...n,
    palette: {
      mode: o,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[r] = {
    ...t,
    palette: i,
    opacity: {
      ...jw(o),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || Hw(o)
  }, s;
}
function tD(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: r,
    disableCssColorScheme: o = !1,
    cssVarPrefix: i = "mui",
    shouldSkipGeneratingVar: s = K2,
    colorSchemeSelector: l = n.light && n.dark ? "media" : void 0,
    rootSelector: c = ":root",
    ...u
  } = e, d = Object.keys(n)[0], f = r || (n.light && d !== "light" ? "light" : d), p = eD(i), {
    [f]: h,
    light: g,
    dark: m,
    ...b
  } = n, x = {
    ...b
  };
  let E = h;
  if ((f === "dark" && !("dark" in n) || f === "light" && !("light" in n)) && (E = !0), !E)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${f}\` option is either missing or invalid.` : Br(21, f));
  const v = Md(x, E, u, f);
  g && !x.light && Md(x, g, void 0, "light"), m && !x.dark && Md(x, m, void 0, "dark");
  let w = {
    defaultColorScheme: f,
    ...v,
    cssVarPrefix: i,
    colorSchemeSelector: l,
    rootSelector: c,
    getCssVar: p,
    colorSchemes: x,
    font: {
      ..._2(v.typography),
      ...v.font
    },
    spacing: J2(u.spacing)
  };
  Object.keys(w.colorSchemes).forEach((P) => {
    const y = w.colorSchemes[P].palette, R = ($) => {
      const A = $.split("-"), O = A[1], _ = A[2];
      return p($, y[O][_]);
    };
    if (y.mode === "light" && (fe(y.common, "background", "#fff"), fe(y.common, "onBackground", "#000")), y.mode === "dark" && (fe(y.common, "background", "#000"), fe(y.common, "onBackground", "#fff")), Q2(y, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), y.mode === "light") {
      fe(y.Alert, "errorColor", yt(y.error.light, 0.6)), fe(y.Alert, "infoColor", yt(y.info.light, 0.6)), fe(y.Alert, "successColor", yt(y.success.light, 0.6)), fe(y.Alert, "warningColor", yt(y.warning.light, 0.6)), fe(y.Alert, "errorFilledBg", R("palette-error-main")), fe(y.Alert, "infoFilledBg", R("palette-info-main")), fe(y.Alert, "successFilledBg", R("palette-success-main")), fe(y.Alert, "warningFilledBg", R("palette-warning-main")), fe(y.Alert, "errorFilledColor", br(() => y.getContrastText(y.error.main))), fe(y.Alert, "infoFilledColor", br(() => y.getContrastText(y.info.main))), fe(y.Alert, "successFilledColor", br(() => y.getContrastText(y.success.main))), fe(y.Alert, "warningFilledColor", br(() => y.getContrastText(y.warning.main))), fe(y.Alert, "errorStandardBg", bt(y.error.light, 0.9)), fe(y.Alert, "infoStandardBg", bt(y.info.light, 0.9)), fe(y.Alert, "successStandardBg", bt(y.success.light, 0.9)), fe(y.Alert, "warningStandardBg", bt(y.warning.light, 0.9)), fe(y.Alert, "errorIconColor", R("palette-error-main")), fe(y.Alert, "infoIconColor", R("palette-info-main")), fe(y.Alert, "successIconColor", R("palette-success-main")), fe(y.Alert, "warningIconColor", R("palette-warning-main")), fe(y.AppBar, "defaultBg", R("palette-grey-100")), fe(y.Avatar, "defaultBg", R("palette-grey-400")), fe(y.Button, "inheritContainedBg", R("palette-grey-300")), fe(y.Button, "inheritContainedHoverBg", R("palette-grey-A100")), fe(y.Chip, "defaultBorder", R("palette-grey-400")), fe(y.Chip, "defaultAvatarColor", R("palette-grey-700")), fe(y.Chip, "defaultIconColor", R("palette-grey-700")), fe(y.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), fe(y.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), fe(y.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), fe(y.LinearProgress, "primaryBg", bt(y.primary.main, 0.62)), fe(y.LinearProgress, "secondaryBg", bt(y.secondary.main, 0.62)), fe(y.LinearProgress, "errorBg", bt(y.error.main, 0.62)), fe(y.LinearProgress, "infoBg", bt(y.info.main, 0.62)), fe(y.LinearProgress, "successBg", bt(y.success.main, 0.62)), fe(y.LinearProgress, "warningBg", bt(y.warning.main, 0.62)), fe(y.Skeleton, "bg", `rgba(${R("palette-text-primaryChannel")} / 0.11)`), fe(y.Slider, "primaryTrack", bt(y.primary.main, 0.62)), fe(y.Slider, "secondaryTrack", bt(y.secondary.main, 0.62)), fe(y.Slider, "errorTrack", bt(y.error.main, 0.62)), fe(y.Slider, "infoTrack", bt(y.info.main, 0.62)), fe(y.Slider, "successTrack", bt(y.success.main, 0.62)), fe(y.Slider, "warningTrack", bt(y.warning.main, 0.62));
      const $ = wl(y.background.default, 0.8);
      fe(y.SnackbarContent, "bg", $), fe(y.SnackbarContent, "color", br(() => y.getContrastText($))), fe(y.SpeedDialAction, "fabHoverBg", wl(y.background.paper, 0.15)), fe(y.StepConnector, "border", R("palette-grey-400")), fe(y.StepContent, "border", R("palette-grey-400")), fe(y.Switch, "defaultColor", R("palette-common-white")), fe(y.Switch, "defaultDisabledColor", R("palette-grey-100")), fe(y.Switch, "primaryDisabledColor", bt(y.primary.main, 0.62)), fe(y.Switch, "secondaryDisabledColor", bt(y.secondary.main, 0.62)), fe(y.Switch, "errorDisabledColor", bt(y.error.main, 0.62)), fe(y.Switch, "infoDisabledColor", bt(y.info.main, 0.62)), fe(y.Switch, "successDisabledColor", bt(y.success.main, 0.62)), fe(y.Switch, "warningDisabledColor", bt(y.warning.main, 0.62)), fe(y.TableCell, "border", bt(xl(y.divider, 1), 0.88)), fe(y.Tooltip, "bg", xl(y.grey[700], 0.92));
    }
    if (y.mode === "dark") {
      fe(y.Alert, "errorColor", bt(y.error.light, 0.6)), fe(y.Alert, "infoColor", bt(y.info.light, 0.6)), fe(y.Alert, "successColor", bt(y.success.light, 0.6)), fe(y.Alert, "warningColor", bt(y.warning.light, 0.6)), fe(y.Alert, "errorFilledBg", R("palette-error-dark")), fe(y.Alert, "infoFilledBg", R("palette-info-dark")), fe(y.Alert, "successFilledBg", R("palette-success-dark")), fe(y.Alert, "warningFilledBg", R("palette-warning-dark")), fe(y.Alert, "errorFilledColor", br(() => y.getContrastText(y.error.dark))), fe(y.Alert, "infoFilledColor", br(() => y.getContrastText(y.info.dark))), fe(y.Alert, "successFilledColor", br(() => y.getContrastText(y.success.dark))), fe(y.Alert, "warningFilledColor", br(() => y.getContrastText(y.warning.dark))), fe(y.Alert, "errorStandardBg", yt(y.error.light, 0.9)), fe(y.Alert, "infoStandardBg", yt(y.info.light, 0.9)), fe(y.Alert, "successStandardBg", yt(y.success.light, 0.9)), fe(y.Alert, "warningStandardBg", yt(y.warning.light, 0.9)), fe(y.Alert, "errorIconColor", R("palette-error-main")), fe(y.Alert, "infoIconColor", R("palette-info-main")), fe(y.Alert, "successIconColor", R("palette-success-main")), fe(y.Alert, "warningIconColor", R("palette-warning-main")), fe(y.AppBar, "defaultBg", R("palette-grey-900")), fe(y.AppBar, "darkBg", R("palette-background-paper")), fe(y.AppBar, "darkColor", R("palette-text-primary")), fe(y.Avatar, "defaultBg", R("palette-grey-600")), fe(y.Button, "inheritContainedBg", R("palette-grey-800")), fe(y.Button, "inheritContainedHoverBg", R("palette-grey-700")), fe(y.Chip, "defaultBorder", R("palette-grey-700")), fe(y.Chip, "defaultAvatarColor", R("palette-grey-300")), fe(y.Chip, "defaultIconColor", R("palette-grey-300")), fe(y.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), fe(y.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), fe(y.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), fe(y.LinearProgress, "primaryBg", yt(y.primary.main, 0.5)), fe(y.LinearProgress, "secondaryBg", yt(y.secondary.main, 0.5)), fe(y.LinearProgress, "errorBg", yt(y.error.main, 0.5)), fe(y.LinearProgress, "infoBg", yt(y.info.main, 0.5)), fe(y.LinearProgress, "successBg", yt(y.success.main, 0.5)), fe(y.LinearProgress, "warningBg", yt(y.warning.main, 0.5)), fe(y.Skeleton, "bg", `rgba(${R("palette-text-primaryChannel")} / 0.13)`), fe(y.Slider, "primaryTrack", yt(y.primary.main, 0.5)), fe(y.Slider, "secondaryTrack", yt(y.secondary.main, 0.5)), fe(y.Slider, "errorTrack", yt(y.error.main, 0.5)), fe(y.Slider, "infoTrack", yt(y.info.main, 0.5)), fe(y.Slider, "successTrack", yt(y.success.main, 0.5)), fe(y.Slider, "warningTrack", yt(y.warning.main, 0.5));
      const $ = wl(y.background.default, 0.98);
      fe(y.SnackbarContent, "bg", $), fe(y.SnackbarContent, "color", br(() => y.getContrastText($))), fe(y.SpeedDialAction, "fabHoverBg", wl(y.background.paper, 0.15)), fe(y.StepConnector, "border", R("palette-grey-600")), fe(y.StepContent, "border", R("palette-grey-600")), fe(y.Switch, "defaultColor", R("palette-grey-300")), fe(y.Switch, "defaultDisabledColor", R("palette-grey-600")), fe(y.Switch, "primaryDisabledColor", yt(y.primary.main, 0.55)), fe(y.Switch, "secondaryDisabledColor", yt(y.secondary.main, 0.55)), fe(y.Switch, "errorDisabledColor", yt(y.error.main, 0.55)), fe(y.Switch, "infoDisabledColor", yt(y.info.main, 0.55)), fe(y.Switch, "successDisabledColor", yt(y.success.main, 0.55)), fe(y.Switch, "warningDisabledColor", yt(y.warning.main, 0.55)), fe(y.TableCell, "border", yt(xl(y.divider, 1), 0.68)), fe(y.Tooltip, "bg", xl(y.grey[700], 0.92));
    }
    Ur(y.background, "default"), Ur(y.background, "paper"), Ur(y.common, "background"), Ur(y.common, "onBackground"), Ur(y, "divider"), Object.keys(y).forEach(($) => {
      const A = y[$];
      $ !== "tonalOffset" && A && typeof A == "object" && (A.main && fe(y[$], "mainChannel", Ms(As(A.main))), A.light && fe(y[$], "lightChannel", Ms(As(A.light))), A.dark && fe(y[$], "darkChannel", Ms(As(A.dark))), A.contrastText && fe(y[$], "contrastTextChannel", Ms(As(A.contrastText))), $ === "text" && (Ur(y[$], "primary"), Ur(y[$], "secondary")), $ === "action" && (A.active && Ur(y[$], "active"), A.selected && Ur(y[$], "selected")));
    });
  }), w = t.reduce((P, y) => fn(P, y), w);
  const S = {
    prefix: i,
    disableCssColorScheme: o,
    shouldSkipGeneratingVar: s,
    getSelector: Z2(w)
  }, {
    vars: T,
    generateThemeVars: C,
    generateStyleSheets: k
  } = E2(w, S);
  return w.vars = T, Object.entries(w.colorSchemes[w.defaultColorScheme]).forEach(([P, y]) => {
    w[P] = y;
  }), w.generateThemeVars = C, w.generateStyleSheets = k, w.generateSpacing = function() {
    return Iw(u.spacing, Oh(this));
  }, w.getColorSchemeSelector = T2(l), w.spacing = w.generateSpacing(), w.shouldSkipGeneratingVar = s, w.unstable_sxConfig = {
    ...ja,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, w.unstable_sx = function(y) {
    return Zo({
      sx: y,
      theme: this
    });
  }, w.toRuntimeSource = Vw, w;
}
function Iy(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: _h({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function Ww(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: r = !1,
    colorSchemes: o = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: i = n == null ? void 0 : n.mode,
    ...s
  } = e, l = i || "light", c = o == null ? void 0 : o[l], u = {
    ...o,
    ...n ? {
      [l]: {
        ...typeof c != "boolean" && c,
        palette: n
      }
    } : void 0
  };
  if (r === !1) {
    if (!("colorSchemes" in e))
      return Hf(e, ...t);
    let d = n;
    "palette" in e || u[l] && (u[l] !== !0 ? d = u[l].palette : l === "dark" && (d = {
      mode: "dark"
    }));
    const f = Hf({
      ...e,
      palette: d
    }, ...t);
    return f.defaultColorScheme = l, f.colorSchemes = u, f.palette.mode === "light" && (f.colorSchemes.light = {
      ...u.light !== !0 && u.light,
      palette: f.palette
    }, Iy(f, "dark", u.dark)), f.palette.mode === "dark" && (f.colorSchemes.dark = {
      ...u.dark !== !0 && u.dark,
      palette: f.palette
    }, Iy(f, "light", u.light)), f;
  }
  return !n && !("light" in u) && l === "light" && (u.light = !0), tD({
    ...s,
    colorSchemes: u,
    defaultColorScheme: l,
    ...typeof r != "boolean" && r
  }, ...t);
}
const Mh = Ww();
function Ah() {
  const e = Nh(Mh);
  return process.env.NODE_ENV !== "production" && M.useDebugValue(e), e[Tu] || e;
}
function Uw(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const zr = (e) => Uw(e) && e !== "classes", qe = o2({
  themeId: Tu,
  defaultTheme: Mh,
  rootShouldForwardProp: zr
});
let $y = 0;
function nD(e) {
  const [t, n] = M.useState(e), r = e || t;
  return M.useEffect(() => {
    t == null && ($y += 1, n(`mui-${$y}`));
  }, [t]), r;
}
const rD = {
  ...M
}, Py = rD.useId;
function qw(e) {
  if (Py !== void 0) {
    const t = Py();
    return e ?? t;
  }
  return nD(e);
}
const Mo = a.oneOfType([a.func, a.object]);
function Yw(e) {
  return /* @__PURE__ */ N($w, {
    ...e,
    defaultTheme: Mh,
    themeId: Tu
  });
}
process.env.NODE_ENV !== "production" && (Yw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: a.oneOfType([a.array, a.func, a.number, a.object, a.string, a.bool])
});
function oD(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ N(Yw, {
        styles: typeof e == "function" ? (r) => e({
          theme: r,
          ...n
        }) : e
      })
    );
  };
}
process.env.NODE_ENV !== "production" && (a.node, a.object.isRequired);
function an(e) {
  return b2(e);
}
function Ha(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...r) {
    return e(...r) || t(...r);
  };
}
function iD(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function sD(e, t, n, r, o) {
  const i = e[t], s = o || t;
  if (i == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  return typeof i == "function" && !iD(i) && (l = "Did you accidentally provide a plain function component instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${s}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Gw = Ha(a.elementType, sD);
function aD(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function Kw(e, t, n, r, o) {
  const i = e[t], s = o || t;
  if (i == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  const c = i.type;
  return typeof c == "function" && !aD(c) && (l = "Did you accidentally use a plain function component for an element instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${s}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Wa = Ha(a.element, Kw);
Wa.isRequired = Ha(a.element.isRequired, Kw);
function ga(e, t, n, r, o) {
  if (process.env.NODE_ENV === "production")
    return null;
  const i = e[t], s = o || t;
  return i == null ? null : i && i.nodeType !== 1 ? new Error(`Invalid ${r} \`${s}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
function _y(...e) {
  return e.reduce((t, n) => n == null ? t : function(...o) {
    t.apply(this, o), n.apply(this, o);
  }, () => {
  });
}
function Xw(e, t = 166) {
  let n;
  function r(...o) {
    const i = () => {
      e.apply(this, o);
    };
    clearTimeout(n), n = setTimeout(i, t);
  }
  return r.clear = () => {
    clearTimeout(n);
  }, r;
}
function hr(e) {
  return e && e.ownerDocument || document;
}
function no(e) {
  return hr(e).defaultView || window;
}
function My(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
function Ay({
  controlled: e,
  default: t,
  name: n,
  state: r = "value"
}) {
  const {
    current: o
  } = M.useRef(e !== void 0), [i, s] = M.useState(t), l = o ? e : i;
  if (process.env.NODE_ENV !== "production") {
    M.useEffect(() => {
      o !== (e !== void 0) && console.error([`MUI: A component is changing the ${o ? "" : "un"}controlled ${r} state of ${n} to be ${o ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [r, n, e]);
    const {
      current: u
    } = M.useRef(t);
    M.useEffect(() => {
      !o && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${r} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = M.useCallback((u) => {
    o || s(u);
  }, []);
  return [l, c];
}
function Uf(e) {
  const t = M.useRef(e);
  return Qo(() => {
    t.current = e;
  }), M.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function ir(...e) {
  const t = M.useRef(void 0), n = M.useCallback((r) => {
    const o = e.map((i) => {
      if (i == null)
        return null;
      if (typeof i == "function") {
        const s = i, l = s(r);
        return typeof l == "function" ? l : () => {
          s(null);
        };
      }
      return i.current = r, () => {
        i.current = null;
      };
    });
    return () => {
      o.forEach((i) => i == null ? void 0 : i());
    };
  }, e);
  return M.useMemo(() => e.every((r) => r == null) ? null : (r) => {
    t.current && (t.current(), t.current = void 0), r != null && (t.current = n(r));
  }, e);
}
const Dy = {};
function lD(e, t) {
  const n = M.useRef(Dy);
  return n.current === Dy && (n.current = e(t)), n;
}
const cD = [];
function uD(e) {
  M.useEffect(e, cD);
}
class Dh {
  constructor() {
    lo(this, "currentId", null);
    lo(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    lo(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new Dh();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
}
function dD() {
  const e = lD(Dh.create).current;
  return uD(e.disposeEffect), e;
}
function Zw(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
function fD(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function Qw(e, t, n, r) {
  const o = e[t];
  if (o == null || !Number.isInteger(o)) {
    const i = fD(o);
    return new RangeError(`Invalid ${r} \`${t}\` of type \`${i}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function Jw(e, t, ...n) {
  return e[t] === void 0 ? null : Qw(e, t, ...n);
}
function qf() {
  return null;
}
Jw.isRequired = Qw;
qf.isRequired = qf;
const eS = process.env.NODE_ENV === "production" ? qf : Jw;
function pD(e) {
  return typeof e == "string";
}
function tS(e, t, n) {
  return e === void 0 || pD(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function nS(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((r) => r.match(/^on[A-Z]/) && typeof e[r] == "function" && !t.includes(r)).forEach((r) => {
    n[r] = e[r];
  }), n;
}
function By(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function rS(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: r,
    externalForwardedProps: o,
    className: i
  } = e;
  if (!t) {
    const h = Oe(n == null ? void 0 : n.className, i, o == null ? void 0 : o.className, r == null ? void 0 : r.className), g = {
      ...n == null ? void 0 : n.style,
      ...o == null ? void 0 : o.style,
      ...r == null ? void 0 : r.style
    }, m = {
      ...n,
      ...o,
      ...r
    };
    return h.length > 0 && (m.className = h), Object.keys(g).length > 0 && (m.style = g), {
      props: m,
      internalRef: void 0
    };
  }
  const s = nS({
    ...o,
    ...r
  }), l = By(r), c = By(o), u = t(s), d = Oe(u == null ? void 0 : u.className, n == null ? void 0 : n.className, i, o == null ? void 0 : o.className, r == null ? void 0 : r.className), f = {
    ...u == null ? void 0 : u.style,
    ...n == null ? void 0 : n.style,
    ...o == null ? void 0 : o.style,
    ...r == null ? void 0 : r.style
  }, p = {
    ...u,
    ...n,
    ...c,
    ...l
  };
  return d.length > 0 && (p.className = d), Object.keys(f).length > 0 && (p.style = f), {
    props: p,
    internalRef: u.ref
  };
}
function oS(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function hD(e) {
  var f;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: r,
    skipResolvingSlotProps: o = !1,
    ...i
  } = e, s = o ? {} : oS(n, r), {
    props: l,
    internalRef: c
  } = rS({
    ...i,
    externalSlotProps: s
  }), u = ir(c, s == null ? void 0 : s.ref, (f = e.additionalProps) == null ? void 0 : f.ref);
  return tS(t, {
    ...l,
    ref: u
  }, r);
}
function Ua(e) {
  var t;
  return parseInt(M.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
function Sl(e) {
  return parseInt(e, 10) || 0;
}
const mD = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function gD(e) {
  for (const t in e)
    return !1;
  return !0;
}
function Fy(e) {
  return gD(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const iS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    onChange: r,
    maxRows: o,
    minRows: i = 1,
    style: s,
    value: l,
    ...c
  } = t, {
    current: u
  } = M.useRef(l != null), d = M.useRef(null), f = ir(n, d), p = M.useRef(null), h = M.useRef(null), g = M.useCallback(() => {
    const v = d.current, w = h.current;
    if (!v || !w)
      return;
    const T = no(v).getComputedStyle(v);
    if (T.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    w.style.width = T.width, w.value = v.value || t.placeholder || "x", w.value.slice(-1) === `
` && (w.value += " ");
    const C = T.boxSizing, k = Sl(T.paddingBottom) + Sl(T.paddingTop), P = Sl(T.borderBottomWidth) + Sl(T.borderTopWidth), y = w.scrollHeight;
    w.value = "x";
    const R = w.scrollHeight;
    let $ = y;
    i && ($ = Math.max(Number(i) * R, $)), o && ($ = Math.min(Number(o) * R, $)), $ = Math.max($, R);
    const A = $ + (C === "border-box" ? k + P : 0), O = Math.abs($ - y) <= 1;
    return {
      outerHeightStyle: A,
      overflowing: O
    };
  }, [o, i, t.placeholder]), m = Uf(() => {
    const v = d.current, w = g();
    if (!v || !w || Fy(w))
      return !1;
    const S = w.outerHeightStyle;
    return p.current != null && p.current !== S;
  }), b = M.useCallback(() => {
    const v = d.current, w = g();
    if (!v || !w || Fy(w))
      return;
    const S = w.outerHeightStyle;
    p.current !== S && (p.current = S, v.style.height = `${S}px`), v.style.overflow = w.overflowing ? "hidden" : "";
  }, [g]), x = M.useRef(-1);
  Qo(() => {
    const v = Xw(b), w = d == null ? void 0 : d.current;
    if (!w)
      return;
    const S = no(w);
    S.addEventListener("resize", v);
    let T;
    return typeof ResizeObserver < "u" && (T = new ResizeObserver(() => {
      m() && (T.unobserve(w), cancelAnimationFrame(x.current), b(), x.current = requestAnimationFrame(() => {
        T.observe(w);
      }));
    }), T.observe(w)), () => {
      v.clear(), cancelAnimationFrame(x.current), S.removeEventListener("resize", v), T && T.disconnect();
    };
  }, [g, b, m]), Qo(() => {
    b();
  });
  const E = (v) => {
    u || b(), r && r(v);
  };
  return /* @__PURE__ */ Se(M.Fragment, {
    children: [/* @__PURE__ */ N("textarea", {
      value: l,
      onChange: E,
      ref: f,
      rows: i,
      style: s,
      ...c
    }), /* @__PURE__ */ N("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: h,
      tabIndex: -1,
      style: {
        ...mD.shadow,
        ...s,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (iS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: a.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  onChange: a.func,
  /**
   * @ignore
   */
  placeholder: a.string,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * @ignore
   */
  value: a.oneOfType([a.arrayOf(a.string), a.number, a.string])
});
function Yf(e) {
  return typeof e == "string";
}
function us({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((r, o) => (r[o] = e[o], n && typeof e[o] > "u" && (r[o] = n[o]), r), {});
}
const Au = /* @__PURE__ */ M.createContext(void 0);
process.env.NODE_ENV !== "production" && (Au.displayName = "FormControlContext");
function ds() {
  return M.useContext(Au);
}
const hn = v2;
function Ly(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function xc(e, t = !1) {
  return e && (Ly(e.value) && e.value !== "" || t && Ly(e.defaultValue) && e.defaultValue !== "");
}
function yD(e) {
  return e.startAdornment;
}
function bD(e) {
  return Kt("MuiInputBase", e);
}
const Wi = en("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var zy;
const Du = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${Wt(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, Bu = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, vD = (e) => {
  const {
    classes: t,
    color: n,
    disabled: r,
    error: o,
    endAdornment: i,
    focused: s,
    formControl: l,
    fullWidth: c,
    hiddenLabel: u,
    multiline: d,
    readOnly: f,
    size: p,
    startAdornment: h,
    type: g
  } = e, m = {
    root: ["root", `color${Wt(n)}`, r && "disabled", o && "error", c && "fullWidth", s && "focused", l && "formControl", p && p !== "medium" && `size${Wt(p)}`, d && "multiline", h && "adornedStart", i && "adornedEnd", u && "hiddenLabel", f && "readOnly"],
    input: ["input", r && "disabled", g === "search" && "inputTypeSearch", d && "inputMultiline", p === "small" && "inputSizeSmall", u && "inputHiddenLabel", h && "inputAdornedStart", i && "inputAdornedEnd", f && "readOnly"]
  };
  return tn(m, bD, t);
}, Fu = qe("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: Du
})(hn(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${Wi.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), Lu = qe("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: Bu
})(hn(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, r = {
    opacity: "0 !important"
  }, o = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${Wi.formControl} &`]: {
      "&::-webkit-input-placeholder": r,
      "&::-moz-placeholder": r,
      // Firefox 19+
      "&::-ms-input-placeholder": r,
      // Edge
      "&:focus::-webkit-input-placeholder": o,
      "&:focus::-moz-placeholder": o,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": o
      // Edge
    },
    [`&.${Wi.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: i
      }) => !i.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: i
      }) => i.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), Vy = oD({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), zu = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = an({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": o,
    autoComplete: i,
    autoFocus: s,
    className: l,
    color: c,
    components: u = {},
    componentsProps: d = {},
    defaultValue: f,
    disabled: p,
    disableInjectingGlobalStyles: h,
    endAdornment: g,
    error: m,
    fullWidth: b = !1,
    id: x,
    inputComponent: E = "input",
    inputProps: v = {},
    inputRef: w,
    margin: S,
    maxRows: T,
    minRows: C,
    multiline: k = !1,
    name: P,
    onBlur: y,
    onChange: R,
    onClick: $,
    onFocus: A,
    onKeyDown: O,
    onKeyUp: _,
    placeholder: I,
    readOnly: D,
    renderSuffix: z,
    rows: B,
    size: F,
    slotProps: L = {},
    slots: W = {},
    startAdornment: U,
    type: Z = "text",
    value: Q,
    ...ee
  } = r, te = v.value != null ? v.value : Q, {
    current: q
  } = M.useRef(te != null), oe = M.useRef(), K = M.useCallback((le) => {
    process.env.NODE_ENV !== "production" && le && le.nodeName !== "INPUT" && !le.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), ne = ir(oe, w, v.ref, K), [j, pe] = M.useState(!1), ce = ds();
  process.env.NODE_ENV !== "production" && M.useEffect(() => {
    if (ce)
      return ce.registerEffect();
  }, [ce]);
  const be = us({
    props: r,
    muiFormControl: ce,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  be.focused = ce ? ce.focused : j, M.useEffect(() => {
    !ce && p && j && (pe(!1), y && y());
  }, [ce, p, j, y]);
  const Ie = ce && ce.onFilled, _e = ce && ce.onEmpty, $e = M.useCallback((le) => {
    xc(le) ? Ie && Ie() : _e && _e();
  }, [Ie, _e]);
  Qo(() => {
    q && $e({
      value: te
    });
  }, [te, $e, q]);
  const Ne = (le) => {
    A && A(le), v.onFocus && v.onFocus(le), ce && ce.onFocus ? ce.onFocus(le) : pe(!0);
  }, Le = (le) => {
    y && y(le), v.onBlur && v.onBlur(le), ce && ce.onBlur ? ce.onBlur(le) : pe(!1);
  }, Re = (le, ...se) => {
    if (!q) {
      const ae = le.target || oe.current;
      if (ae == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : Br(1));
      $e({
        value: ae.value
      });
    }
    v.onChange && v.onChange(le, ...se), R && R(le, ...se);
  };
  M.useEffect(() => {
    $e(oe.current);
  }, []);
  const V = (le) => {
    oe.current && le.currentTarget === le.target && oe.current.focus(), $ && $(le);
  };
  let J = E, ie = v;
  k && J === "input" && (B ? (process.env.NODE_ENV !== "production" && (C || T) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), ie = {
    type: void 0,
    minRows: B,
    maxRows: B,
    ...ie
  }) : ie = {
    type: void 0,
    maxRows: T,
    minRows: C,
    ...ie
  }, J = iS);
  const X = (le) => {
    $e(le.animationName === "mui-auto-fill-cancel" ? oe.current : {
      value: "x"
    });
  };
  M.useEffect(() => {
    ce && ce.setAdornedStart(!!U);
  }, [ce, U]);
  const H = {
    ...r,
    color: be.color || "primary",
    disabled: be.disabled,
    endAdornment: g,
    error: be.error,
    focused: be.focused,
    formControl: ce,
    fullWidth: b,
    hiddenLabel: be.hiddenLabel,
    multiline: k,
    size: be.size,
    startAdornment: U,
    type: Z
  }, G = vD(H), re = W.root || u.Root || Fu, he = L.root || d.root || {}, me = W.input || u.Input || Lu;
  return ie = {
    ...ie,
    ...L.input ?? d.input
  }, /* @__PURE__ */ Se(M.Fragment, {
    children: [!h && typeof Vy == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (zy || (zy = /* @__PURE__ */ N(Vy, {}))), /* @__PURE__ */ Se(re, {
      ...he,
      ref: n,
      onClick: V,
      ...ee,
      ...!Yf(re) && {
        ownerState: {
          ...H,
          ...he.ownerState
        }
      },
      className: Oe(G.root, he.className, l, D && "MuiInputBase-readOnly"),
      children: [U, /* @__PURE__ */ N(Au.Provider, {
        value: null,
        children: /* @__PURE__ */ N(me, {
          "aria-invalid": be.error,
          "aria-describedby": o,
          autoComplete: i,
          autoFocus: s,
          defaultValue: f,
          disabled: be.disabled,
          id: x,
          onAnimationStart: X,
          name: P,
          placeholder: I,
          readOnly: D,
          required: be.required,
          rows: B,
          value: te,
          onKeyDown: O,
          onKeyUp: _,
          type: Z,
          ...ie,
          ...!Yf(me) && {
            as: J,
            ownerState: {
              ...H,
              ...ie.ownerState
            }
          },
          ref: ne,
          className: Oe(G.input, ie.className, D && "MuiInputBase-readOnly"),
          onBlur: Le,
          onChange: Re,
          onFocus: Ne
        })
      }), g, z ? z({
        ...be,
        startAdornment: U
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (zu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": a.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: Gw,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Mo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: a.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: a.func,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * @ignore
   */
  onKeyUp: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * @ignore
   */
  renderSuffix: a.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The size of the component.
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
function xD(e) {
  return typeof e.main == "string";
}
function wD(e, t = []) {
  if (!xD(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function Vu(e = []) {
  return ([, t]) => t && wD(t, e);
}
function SD(e) {
  return Kt("MuiInput", e);
}
const ws = {
  ...Wi,
  ...en("MuiInput", ["root", "underline", "input"])
}, ED = (e) => {
  const {
    classes: t,
    disableUnderline: n
  } = e, o = tn({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, SD, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...o
  };
}, TD = qe(Fu, {
  shouldForwardProp: (e) => zr(e) || e === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...Du(e, t), !n.disableUnderline && t.underline];
  }
})(hn(({
  theme: e
}) => {
  let n = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e.vars && (n = `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`), {
    position: "relative",
    variants: [{
      props: ({
        ownerState: r
      }) => r.formControl,
      style: {
        "label + &": {
          marginTop: 16
        }
      }
    }, {
      props: ({
        ownerState: r
      }) => !r.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${ws.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${ws.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${ws.disabled}, .${ws.error}):before`]: {
          borderBottom: `2px solid ${(e.vars || e).palette.text.primary}`,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            borderBottom: `1px solid ${n}`
          }
        },
        [`&.${ws.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(Vu()).map(([r]) => ({
      props: {
        color: r,
        disableUnderline: !1
      },
      style: {
        "&::after": {
          borderBottom: `2px solid ${(e.vars || e).palette[r].main}`
        }
      }
    }))]
  };
})), CD = qe(Lu, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: Bu
})({}), ju = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = an({
    props: t,
    name: "MuiInput"
  }), {
    disableUnderline: o = !1,
    components: i = {},
    componentsProps: s,
    fullWidth: l = !1,
    inputComponent: c = "input",
    multiline: u = !1,
    slotProps: d,
    slots: f = {},
    type: p = "text",
    ...h
  } = r, g = ED(r), b = {
    root: {
      ownerState: {
        disableUnderline: o
      }
    }
  }, x = d ?? s ? fn(d ?? s, b) : b, E = f.root ?? i.Root ?? TD, v = f.input ?? i.Input ?? CD;
  return /* @__PURE__ */ N(zu, {
    slots: {
      root: E,
      input: v
    },
    slotProps: x,
    fullWidth: l,
    inputComponent: c,
    multiline: u,
    ref: n,
    type: p,
    ...h,
    classes: g
  });
});
process.env.NODE_ENV !== "production" && (ju.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, the `input` will not have an underline.
   * @default false
   */
  disableUnderline: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Mo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
ju.muiName = "Input";
function OD(e) {
  return Kt("MuiFilledInput", e);
}
const Bo = {
  ...Wi,
  ...en("MuiFilledInput", ["root", "underline", "input", "adornedStart", "adornedEnd", "sizeSmall", "multiline", "hiddenLabel"])
};
function RD(e) {
  return Kt("MuiSvgIcon", e);
}
en("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const kD = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: r
  } = e, o = {
    root: ["root", t !== "inherit" && `color${Wt(t)}`, `fontSize${Wt(n)}`]
  };
  return tn(o, RD, r);
}, ND = qe("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${Wt(n.color)}`], t[`fontSize${Wt(n.fontSize)}`]];
  }
})(hn(({
  theme: e
}) => {
  var t, n, r, o, i, s, l, c, u, d, f, p, h, g;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (o = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : o.call(t, "fill", {
      duration: (r = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : r.shorter
    }),
    variants: [
      {
        props: (m) => !m.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((s = (i = e.typography) == null ? void 0 : i.pxToRem) == null ? void 0 : s.call(i, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((c = (l = e.typography) == null ? void 0 : l.pxToRem) == null ? void 0 : c.call(l, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((d = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : d.call(u, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, m]) => m && m.main).map(([m]) => {
        var b, x;
        return {
          props: {
            color: m
          },
          style: {
            color: (x = (b = (e.vars ?? e).palette) == null ? void 0 : b[m]) == null ? void 0 : x.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (p = (f = (e.vars ?? e).palette) == null ? void 0 : f.action) == null ? void 0 : p.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (g = (h = (e.vars ?? e).palette) == null ? void 0 : h.action) == null ? void 0 : g.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), wc = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = an({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: o,
    className: i,
    color: s = "inherit",
    component: l = "svg",
    fontSize: c = "medium",
    htmlColor: u,
    inheritViewBox: d = !1,
    titleAccess: f,
    viewBox: p = "0 0 24 24",
    ...h
  } = r, g = /* @__PURE__ */ M.isValidElement(o) && o.type === "svg", m = {
    ...r,
    color: s,
    component: l,
    fontSize: c,
    instanceFontSize: t.fontSize,
    inheritViewBox: d,
    viewBox: p,
    hasSvgAsChild: g
  }, b = {};
  d || (b.viewBox = p);
  const x = kD(m);
  return /* @__PURE__ */ Se(ND, {
    as: l,
    className: Oe(x.root, i),
    focusable: "false",
    color: u,
    "aria-hidden": f ? void 0 : !0,
    role: f ? "img" : void 0,
    ref: n,
    ...b,
    ...h,
    ...g && o.props,
    ownerState: m,
    children: [g ? o.props.children : o, f ? /* @__PURE__ */ N("title", {
      children: f
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (wc.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: a.oneOfType([a.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: a.oneOfType([a.oneOf(["inherit", "large", "medium", "small"]), a.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: a.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: a.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Reference/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: a.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: a.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: a.string
});
wc.muiName = "SvgIcon";
function ID(e, t) {
  function n(r, o) {
    return /* @__PURE__ */ N(wc, {
      "data-testid": process.env.NODE_ENV !== "production" ? `${t}Icon` : void 0,
      ref: o,
      ...r,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = wc.muiName, /* @__PURE__ */ M.memo(/* @__PURE__ */ M.forwardRef(n));
}
function $D(e, t) {
  const n = e.charCodeAt(2);
  return e[0] === "o" && e[1] === "n" && n >= 65 && n <= 90 && typeof t == "function";
}
function PD(e, t) {
  if (!e)
    return t;
  function n(s, l) {
    const c = {};
    return Object.keys(l).forEach((u) => {
      $D(u, l[u]) && typeof s[u] == "function" && (c[u] = (...d) => {
        s[u](...d), l[u](...d);
      });
    }), c;
  }
  if (typeof e == "function" || typeof t == "function")
    return (s) => {
      const l = typeof t == "function" ? t(s) : t, c = typeof e == "function" ? e({
        ...s,
        ...l
      }) : e, u = Oe(s == null ? void 0 : s.className, l == null ? void 0 : l.className, c == null ? void 0 : c.className), d = n(c, l);
      return {
        ...l,
        ...c,
        ...d,
        ...!!u && {
          className: u
        },
        ...(l == null ? void 0 : l.style) && (c == null ? void 0 : c.style) && {
          style: {
            ...l.style,
            ...c.style
          }
        },
        ...(l == null ? void 0 : l.sx) && (c == null ? void 0 : c.sx) && {
          sx: [...Array.isArray(l.sx) ? l.sx : [l.sx], ...Array.isArray(c.sx) ? c.sx : [c.sx]]
        }
      };
    };
  const r = t, o = n(e, r), i = Oe(r == null ? void 0 : r.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...o,
    ...!!i && {
      className: i
    },
    ...(r == null ? void 0 : r.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...r.style,
        ...e.style
      }
    },
    ...(r == null ? void 0 : r.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(r.sx) ? r.sx : [r.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
const _D = (e) => {
  const {
    classes: t,
    disableUnderline: n,
    startAdornment: r,
    endAdornment: o,
    size: i,
    hiddenLabel: s,
    multiline: l
  } = e, c = {
    root: ["root", !n && "underline", r && "adornedStart", o && "adornedEnd", i === "small" && `size${Wt(i)}`, s && "hiddenLabel", l && "multiline"],
    input: ["input"]
  }, u = tn(c, OD, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...u
  };
}, MD = qe(Fu, {
  shouldForwardProp: (e) => zr(e) || e === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...Du(e, t), !n.disableUnderline && t.underline];
  }
})(hn(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = t ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", r = t ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", o = t ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", i = t ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return {
    position: "relative",
    backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r,
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create("background-color", {
      duration: e.transitions.duration.shorter,
      easing: e.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.hoverBg : o,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r
      }
    },
    [`&.${Bo.focused}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r
    },
    [`&.${Bo.disabled}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.disabledBg : i
    },
    variants: [{
      props: ({
        ownerState: s
      }) => !s.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${Bo.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${Bo.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})` : n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${Bo.disabled}, .${Bo.error}):before`]: {
          borderBottom: `1px solid ${(e.vars || e).palette.text.primary}`
        },
        [`&.${Bo.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(Vu()).map(([s]) => {
      var l;
      return {
        props: {
          disableUnderline: !1,
          color: s
        },
        style: {
          "&::after": {
            borderBottom: `2px solid ${(l = (e.vars || e).palette[s]) == null ? void 0 : l.main}`
          }
        }
      };
    }), {
      props: ({
        ownerState: s
      }) => s.startAdornment,
      style: {
        paddingLeft: 12
      }
    }, {
      props: ({
        ownerState: s
      }) => s.endAdornment,
      style: {
        paddingRight: 12
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline,
      style: {
        padding: "25px 12px 8px"
      }
    }, {
      props: ({
        ownerState: s,
        size: l
      }) => s.multiline && l === "small",
      style: {
        paddingTop: 21,
        paddingBottom: 4
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline && s.hiddenLabel,
      style: {
        paddingTop: 16,
        paddingBottom: 17
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline && s.hiddenLabel && s.size === "small",
      style: {
        paddingTop: 8,
        paddingBottom: 9
      }
    }]
  };
})), AD = qe(Lu, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: Bu
})(hn(({
  theme: e
}) => ({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12,
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      paddingTop: 21,
      paddingBottom: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel,
    style: {
      paddingTop: 16,
      paddingBottom: 17
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel && t.size === "small",
    style: {
      paddingTop: 8,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      paddingTop: 0,
      paddingBottom: 0,
      paddingLeft: 0,
      paddingRight: 0
    }
  }]
}))), Hu = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = an({
    props: t,
    name: "MuiFilledInput"
  }), {
    disableUnderline: o = !1,
    components: i = {},
    componentsProps: s,
    fullWidth: l = !1,
    hiddenLabel: c,
    // declare here to prevent spreading to DOM
    inputComponent: u = "input",
    multiline: d = !1,
    slotProps: f,
    slots: p = {},
    type: h = "text",
    ...g
  } = r, m = {
    ...r,
    disableUnderline: o,
    fullWidth: l,
    inputComponent: u,
    multiline: d,
    type: h
  }, b = _D(r), x = {
    root: {
      ownerState: m
    },
    input: {
      ownerState: m
    }
  }, E = f ?? s ? fn(x, f ?? s) : x, v = p.root ?? i.Root ?? MD, w = p.input ?? i.Input ?? AD;
  return /* @__PURE__ */ N(zu, {
    slots: {
      root: v,
      input: w
    },
    slotProps: E,
    fullWidth: l,
    inputComponent: u,
    multiline: d,
    ref: n,
    type: h,
    ...g,
    classes: b
  });
});
process.env.NODE_ENV !== "production" && (Hu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * If `true`, the input will not have an underline.
   * @default false
   */
  disableUnderline: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Mo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: a.shape({
    input: a.object,
    root: a.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
Hu.muiName = "Input";
var jy;
const DD = qe("fieldset", {
  shouldForwardProp: zr
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), BD = qe("legend", {
  shouldForwardProp: zr
})(hn(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function sS(e) {
  const {
    children: t,
    classes: n,
    className: r,
    label: o,
    notched: i,
    ...s
  } = e, l = o != null && o !== "", c = {
    ...e,
    notched: i,
    withLabel: l
  };
  return /* @__PURE__ */ N(DD, {
    "aria-hidden": !0,
    className: r,
    ownerState: c,
    ...s,
    children: /* @__PURE__ */ N(BD, {
      ownerState: c,
      children: l ? /* @__PURE__ */ N("span", {
        children: o
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        jy || (jy = /* @__PURE__ */ N("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (sS.propTypes = {
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The label.
   */
  label: a.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: a.bool.isRequired,
  /**
   * @ignore
   */
  style: a.object
});
function FD(e) {
  return Kt("MuiOutlinedInput", e);
}
const vr = {
  ...Wi,
  ...en("MuiOutlinedInput", ["root", "notchedOutline", "input"])
}, LD = (e) => {
  const {
    classes: t
  } = e, r = tn({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, FD, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...r
  };
}, zD = qe(Fu, {
  shouldForwardProp: (e) => zr(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: Du
})(hn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${vr.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${vr.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${vr.focused} .${vr.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(Vu()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${vr.focused} .${vr.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${vr.error} .${vr.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${vr.disabled} .${vr.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: r
      }) => n.multiline && r === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), VD = qe(sS, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(hn(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), jD = qe(Lu, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: Bu
})(hn(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), Wu = /* @__PURE__ */ M.forwardRef(function(t, n) {
  var r;
  const o = an({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: i = {},
    fullWidth: s = !1,
    inputComponent: l = "input",
    label: c,
    multiline: u = !1,
    notched: d,
    slots: f = {},
    type: p = "text",
    ...h
  } = o, g = LD(o), m = ds(), b = us({
    props: o,
    muiFormControl: m,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), x = {
    ...o,
    color: b.color || "primary",
    disabled: b.disabled,
    error: b.error,
    focused: b.focused,
    formControl: m,
    fullWidth: s,
    hiddenLabel: b.hiddenLabel,
    multiline: u,
    size: b.size,
    type: p
  }, E = f.root ?? i.Root ?? zD, v = f.input ?? i.Input ?? jD;
  return /* @__PURE__ */ N(zu, {
    slots: {
      root: E,
      input: v
    },
    renderSuffix: (w) => /* @__PURE__ */ N(VD, {
      ownerState: x,
      className: g.notchedOutline,
      label: c != null && c !== "" && b.required ? r || (r = /* @__PURE__ */ Se(M.Fragment, {
        children: [c, " ", "*"]
      })) : c,
      notched: typeof d < "u" ? d : !!(w.startAdornment || w.filled || w.focused)
    }),
    fullWidth: s,
    inputComponent: l,
    multiline: u,
    ref: n,
    type: p,
    ...h,
    classes: {
      ...g,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (Wu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary"]), a.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Input: a.elementType,
    Root: a.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: a.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: a.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: a.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: a.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Mo,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: a.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: a.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: a.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: a.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any
});
Wu.muiName = "Input";
function HD(e) {
  return Kt("MuiFormLabel", e);
}
const Ks = en("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]), WD = (e) => {
  const {
    classes: t,
    color: n,
    focused: r,
    disabled: o,
    error: i,
    filled: s,
    required: l
  } = e, c = {
    root: ["root", `color${Wt(n)}`, o && "disabled", i && "error", s && "filled", r && "focused", l && "required"],
    asterisk: ["asterisk", i && "error"]
  };
  return tn(c, HD, t);
}, UD = qe("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color === "secondary" && t.colorSecondary, n.filled && t.filled];
  }
})(hn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.body1,
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  variants: [...Object.entries(e.palette).filter(Vu()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${Ks.focused}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    props: {},
    style: {
      [`&.${Ks.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      },
      [`&.${Ks.error}`]: {
        color: (e.vars || e).palette.error.main
      }
    }
  }]
}))), qD = qe("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (e, t) => t.asterisk
})(hn(({
  theme: e
}) => ({
  [`&.${Ks.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}))), aS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = an({
    props: t,
    name: "MuiFormLabel"
  }), {
    children: o,
    className: i,
    color: s,
    component: l = "label",
    disabled: c,
    error: u,
    filled: d,
    focused: f,
    required: p,
    ...h
  } = r, g = ds(), m = us({
    props: r,
    muiFormControl: g,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  }), b = {
    ...r,
    color: m.color || "primary",
    component: l,
    disabled: m.disabled,
    error: m.error,
    filled: m.filled,
    focused: m.focused,
    required: m.required
  }, x = WD(b);
  return /* @__PURE__ */ Se(UD, {
    as: l,
    ownerState: b,
    className: Oe(x.root, i),
    ref: n,
    ...h,
    children: [o, m.required && /* @__PURE__ */ Se(qD, {
      ownerState: b,
      "aria-hidden": !0,
      className: x.asterisk,
      children: [" ", "*"]
    })]
  });
});
process.env.NODE_ENV !== "production" && (aS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: a.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: a.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: a.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function YD(e) {
  return Kt("MuiInputLabel", e);
}
en("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]);
const GD = (e) => {
  const {
    classes: t,
    formControl: n,
    size: r,
    shrink: o,
    disableAnimation: i,
    variant: s,
    required: l
  } = e, c = {
    root: ["root", n && "formControl", !i && "animated", o && "shrink", r && r !== "medium" && `size${Wt(r)}`, s],
    asterisk: [l && "asterisk"]
  }, u = tn(c, YD, t);
  return {
    ...t,
    // forward the focused, disabled, etc. classes to the FormLabel
    ...u
  };
}, KD = qe(aS, {
  shouldForwardProp: (e) => zr(e) || e === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${Ks.asterisk}`]: t.asterisk
    }, t.root, n.formControl && t.formControl, n.size === "small" && t.sizeSmall, n.shrink && t.shrink, !n.disableAnimation && t.animated, n.focused && t.focused, t[n.variant]];
  }
})(hn(({
  theme: e
}) => ({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%",
  variants: [{
    props: ({
      ownerState: t
    }) => t.formControl,
    style: {
      position: "absolute",
      left: 0,
      top: 0,
      // slight alteration to spec spacing to match visual spec result
      transform: "translate(0, 20px) scale(1)"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      // Compensation for the `Input.inputSizeSmall` style.
      transform: "translate(0, 17px) scale(1)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.shrink,
    style: {
      transform: "translate(0, -1.5px) scale(0.75)",
      transformOrigin: "top left",
      maxWidth: "133%"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableAnimation,
    style: {
      transition: e.transitions.create(["color", "transform", "max-width"], {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      // Chrome's autofill feature gives the input field a yellow background.
      // Since the input field is behind the label in the HTML tree,
      // the input field is drawn last and hides the label with an opaque background color.
      // zIndex: 1 will raise the label above opaque background-colors of input.
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(12px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "filled",
      size: "small"
    },
    style: {
      transform: "translate(12px, 13px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "filled" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      transform: "translate(12px, 7px) scale(0.75)",
      maxWidth: "calc(133% - 24px)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n,
      size: r
    }) => t === "filled" && n.shrink && r === "small",
    style: {
      transform: "translate(12px, 4px) scale(0.75)"
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      // see comment above on filled.zIndex
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(14px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "outlined",
      size: "small"
    },
    style: {
      transform: "translate(14px, 9px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "outlined" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      // Theoretically, we should have (8+5)*2/0.75 = 34px
      // but it feels a better when it bleeds a bit on the left, so 32px.
      maxWidth: "calc(133% - 32px)",
      transform: "translate(14px, -9px) scale(0.75)"
    }
  }]
}))), lS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = an({
    name: "MuiInputLabel",
    props: t
  }), {
    disableAnimation: o = !1,
    margin: i,
    shrink: s,
    variant: l,
    className: c,
    ...u
  } = r, d = ds();
  let f = s;
  typeof f > "u" && d && (f = d.filled || d.focused || d.adornedStart);
  const p = us({
    props: r,
    muiFormControl: d,
    states: ["size", "variant", "required", "focused"]
  }), h = {
    ...r,
    disableAnimation: o,
    formControl: d,
    shrink: f,
    size: p.size,
    variant: p.variant,
    required: p.required,
    focused: p.focused
  }, g = GD(h);
  return /* @__PURE__ */ N(KD, {
    "data-shrink": f,
    ref: n,
    className: Oe(g.root, c),
    ...u,
    ownerState: h,
    classes: g
  });
});
process.env.NODE_ENV !== "production" && (lS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: a.oneOfType([a.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), a.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: a.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: a.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: a.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: a.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: a.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: a.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
function XD(e) {
  return Kt("MuiFormControl", e);
}
en("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]);
const ZD = (e) => {
  const {
    classes: t,
    margin: n,
    fullWidth: r
  } = e, o = {
    root: ["root", n !== "none" && `margin${Wt(n)}`, r && "fullWidth"]
  };
  return tn(o, XD, t);
}, QD = qe("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`margin${Wt(n.margin)}`], n.fullWidth && t.fullWidth];
  }
})({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top",
  // Fix alignment issue on Safari.
  variants: [{
    props: {
      margin: "normal"
    },
    style: {
      marginTop: 16,
      marginBottom: 8
    }
  }, {
    props: {
      margin: "dense"
    },
    style: {
      marginTop: 8,
      marginBottom: 4
    }
  }, {
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }]
}), cS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = an({
    props: t,
    name: "MuiFormControl"
  }), {
    children: o,
    className: i,
    color: s = "primary",
    component: l = "div",
    disabled: c = !1,
    error: u = !1,
    focused: d,
    fullWidth: f = !1,
    hiddenLabel: p = !1,
    margin: h = "none",
    required: g = !1,
    size: m = "medium",
    variant: b = "outlined",
    ...x
  } = r, E = {
    ...r,
    color: s,
    component: l,
    disabled: c,
    error: u,
    fullWidth: f,
    hiddenLabel: p,
    margin: h,
    required: g,
    size: m,
    variant: b
  }, v = ZD(E), [w, S] = M.useState(() => {
    let I = !1;
    return o && M.Children.forEach(o, (D) => {
      if (!_d(D, ["Input", "Select"]))
        return;
      const z = _d(D, ["Select"]) ? D.props.input : D;
      z && yD(z.props) && (I = !0);
    }), I;
  }), [T, C] = M.useState(() => {
    let I = !1;
    return o && M.Children.forEach(o, (D) => {
      _d(D, ["Input", "Select"]) && (xc(D.props, !0) || xc(D.props.inputProps, !0)) && (I = !0);
    }), I;
  }), [k, P] = M.useState(!1);
  c && k && P(!1);
  const y = d !== void 0 && !c ? d : k;
  let R;
  const $ = M.useRef(!1);
  process.env.NODE_ENV !== "production" && (R = () => ($.current && console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join(`
`)), $.current = !0, () => {
    $.current = !1;
  }));
  const A = M.useCallback(() => {
    C(!0);
  }, []), O = M.useCallback(() => {
    C(!1);
  }, []), _ = M.useMemo(() => ({
    adornedStart: w,
    setAdornedStart: S,
    color: s,
    disabled: c,
    error: u,
    filled: T,
    focused: y,
    fullWidth: f,
    hiddenLabel: p,
    size: m,
    onBlur: () => {
      P(!1);
    },
    onFocus: () => {
      P(!0);
    },
    onEmpty: O,
    onFilled: A,
    registerEffect: R,
    required: g,
    variant: b
  }), [w, s, c, u, T, y, f, p, R, O, A, g, m, b]);
  return /* @__PURE__ */ N(Au.Provider, {
    value: _,
    children: /* @__PURE__ */ N(QD, {
      as: l,
      ownerState: E,
      className: Oe(v.root, i),
      ref: n,
      ...x,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (cS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: a.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: a.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: a.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: a.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: a.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
function JD(e) {
  return Kt("MuiFormHelperText", e);
}
const Hy = en("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]);
var Wy;
const e5 = (e) => {
  const {
    classes: t,
    contained: n,
    size: r,
    disabled: o,
    error: i,
    filled: s,
    focused: l,
    required: c
  } = e, u = {
    root: ["root", o && "disabled", i && "error", r && `size${Wt(r)}`, n && "contained", l && "focused", s && "filled", c && "required"]
  };
  return tn(u, JD, t);
}, t5 = qe("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size && t[`size${Wt(n.size)}`], n.contained && t.contained, n.filled && t.filled];
  }
})(hn(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.caption,
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${Hy.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${Hy.error}`]: {
    color: (e.vars || e).palette.error.main
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginTop: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.contained,
    style: {
      marginLeft: 14,
      marginRight: 14
    }
  }]
}))), uS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = an({
    props: t,
    name: "MuiFormHelperText"
  }), {
    children: o,
    className: i,
    component: s = "p",
    disabled: l,
    error: c,
    filled: u,
    focused: d,
    margin: f,
    required: p,
    variant: h,
    ...g
  } = r, m = ds(), b = us({
    props: r,
    muiFormControl: m,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  }), x = {
    ...r,
    component: s,
    contained: b.variant === "filled" || b.variant === "outlined",
    variant: b.variant,
    size: b.size,
    disabled: b.disabled,
    error: b.error,
    filled: b.filled,
    focused: b.focused,
    required: b.required
  };
  delete x.ownerState;
  const E = e5(x);
  return /* @__PURE__ */ N(t5, {
    as: s,
    className: Oe(E.root, i),
    ref: n,
    ...g,
    ownerState: x,
    children: o === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      Wy || (Wy = /* @__PURE__ */ N("span", {
        className: "notranslate",
        "aria-hidden": !0,
        children: "​"
      }))
    ) : o
  });
});
process.env.NODE_ENV !== "production" && (uS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: a.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: a.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: a.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: a.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: a.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: a.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   */
  variant: a.oneOfType([a.oneOf(["filled", "outlined", "standard"]), a.string])
});
const dS = /* @__PURE__ */ M.createContext({});
process.env.NODE_ENV !== "production" && (dS.displayName = "ListContext");
function n5(e) {
  return Kt("MuiList", e);
}
en("MuiList", ["root", "padding", "dense", "subheader"]);
const r5 = (e) => {
  const {
    classes: t,
    disablePadding: n,
    dense: r,
    subheader: o
  } = e;
  return tn({
    root: ["root", !n && "padding", r && "dense", o && "subheader"]
  }, n5, t);
}, o5 = qe("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.disablePadding && t.padding, n.dense && t.dense, n.subheader && t.subheader];
  }
})({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative",
  variants: [{
    props: ({
      ownerState: e
    }) => !e.disablePadding,
    style: {
      paddingTop: 8,
      paddingBottom: 8
    }
  }, {
    props: ({
      ownerState: e
    }) => e.subheader,
    style: {
      paddingTop: 0
    }
  }]
}), fS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = an({
    props: t,
    name: "MuiList"
  }), {
    children: o,
    className: i,
    component: s = "ul",
    dense: l = !1,
    disablePadding: c = !1,
    subheader: u,
    ...d
  } = r, f = M.useMemo(() => ({
    dense: l
  }), [l]), p = {
    ...r,
    component: s,
    dense: l,
    disablePadding: c
  }, h = r5(p);
  return /* @__PURE__ */ N(dS.Provider, {
    value: f,
    children: /* @__PURE__ */ Se(o5, {
      as: s,
      className: Oe(h.root, i),
      ref: n,
      ownerState: p,
      ...d,
      children: [u, o]
    })
  });
});
process.env.NODE_ENV !== "production" && (fS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: a.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: a.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: a.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function Ad(e, t, n) {
  return e === t ? e.firstChild : t && t.nextElementSibling ? t.nextElementSibling : n ? null : e.firstChild;
}
function Uy(e, t, n) {
  return e === t ? n ? e.firstChild : e.lastChild : t && t.previousElementSibling ? t.previousElementSibling : n ? null : e.lastChild;
}
function pS(e, t) {
  if (t === void 0)
    return !0;
  let n = e.innerText;
  return n === void 0 && (n = e.textContent), n = n.trim().toLowerCase(), n.length === 0 ? !1 : t.repeating ? n[0] === t.keys[0] : n.startsWith(t.keys.join(""));
}
function Ss(e, t, n, r, o, i) {
  let s = !1, l = o(e, t, t ? n : !1);
  for (; l; ) {
    if (l === e.firstChild) {
      if (s)
        return !1;
      s = !0;
    }
    const c = r ? !1 : l.disabled || l.getAttribute("aria-disabled") === "true";
    if (!l.hasAttribute("tabindex") || !pS(l, i) || c)
      l = o(e, l, n);
    else
      return l.focus(), !0;
  }
  return !1;
}
const hS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: r,
    autoFocus: o = !1,
    autoFocusItem: i = !1,
    children: s,
    className: l,
    disabledItemsFocusable: c = !1,
    disableListWrap: u = !1,
    onKeyDown: d,
    variant: f = "selectedMenu",
    ...p
  } = t, h = M.useRef(null), g = M.useRef({
    keys: [],
    repeating: !0,
    previousKeyMatched: !0,
    lastTime: null
  });
  Qo(() => {
    o && h.current.focus();
  }, [o]), M.useImperativeHandle(r, () => ({
    adjustStyleForScrollbar: (v, {
      direction: w
    }) => {
      const S = !h.current.style.width;
      if (v.clientHeight < h.current.clientHeight && S) {
        const T = `${Zw(no(v))}px`;
        h.current.style[w === "rtl" ? "paddingLeft" : "paddingRight"] = T, h.current.style.width = `calc(100% + ${T})`;
      }
      return h.current;
    }
  }), []);
  const m = (v) => {
    const w = h.current, S = v.key;
    if (v.ctrlKey || v.metaKey || v.altKey) {
      d && d(v);
      return;
    }
    const C = hr(w).activeElement;
    if (S === "ArrowDown")
      v.preventDefault(), Ss(w, C, u, c, Ad);
    else if (S === "ArrowUp")
      v.preventDefault(), Ss(w, C, u, c, Uy);
    else if (S === "Home")
      v.preventDefault(), Ss(w, null, u, c, Ad);
    else if (S === "End")
      v.preventDefault(), Ss(w, null, u, c, Uy);
    else if (S.length === 1) {
      const k = g.current, P = S.toLowerCase(), y = performance.now();
      k.keys.length > 0 && (y - k.lastTime > 500 ? (k.keys = [], k.repeating = !0, k.previousKeyMatched = !0) : k.repeating && P !== k.keys[0] && (k.repeating = !1)), k.lastTime = y, k.keys.push(P);
      const R = C && !k.repeating && pS(C, k);
      k.previousKeyMatched && (R || Ss(w, C, !1, c, Ad, k)) ? v.preventDefault() : k.previousKeyMatched = !1;
    }
    d && d(v);
  }, b = ir(h, n);
  let x = -1;
  M.Children.forEach(s, (v, w) => {
    if (!/* @__PURE__ */ M.isValidElement(v)) {
      x === w && (x += 1, x >= s.length && (x = -1));
      return;
    }
    process.env.NODE_ENV !== "production" && fr.isFragment(v) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), v.props.disabled || (f === "selectedMenu" && v.props.selected || x === -1) && (x = w), x === w && (v.props.disabled || v.props.muiSkipListHighlight || v.type.muiSkipListHighlight) && (x += 1, x >= s.length && (x = -1));
  });
  const E = M.Children.map(s, (v, w) => {
    if (w === x) {
      const S = {};
      return i && (S.autoFocus = !0), v.props.tabIndex === void 0 && f === "selectedMenu" && (S.tabIndex = 0), /* @__PURE__ */ M.cloneElement(v, S);
    }
    return v;
  });
  return /* @__PURE__ */ N(fS, {
    role: "menu",
    ref: b,
    className: l,
    onKeyDown: m,
    tabIndex: o ? 0 : -1,
    ...p,
    children: E
  });
});
process.env.NODE_ENV !== "production" && (hS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: a.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: a.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: a.node,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: a.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: a.bool,
  /**
   * @ignore
   */
  onKeyDown: a.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: a.oneOf(["menu", "selectedMenu"])
});
const mS = (e) => e.scrollTop;
function Sc(e, t) {
  const {
    timeout: n,
    easing: r,
    style: o = {}
  } = e;
  return {
    duration: o.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: o.transitionTimingFunction ?? (typeof r == "object" ? r[t.mode] : r),
    delay: o.transitionDelay
  };
}
function Gf(e) {
  return `scale(${e}, ${e ** 2})`;
}
const i5 = {
  entering: {
    opacity: 1,
    transform: Gf(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, Dd = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), Ec = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    addEndListener: r,
    appear: o = !0,
    children: i,
    easing: s,
    in: l,
    onEnter: c,
    onEntered: u,
    onEntering: d,
    onExit: f,
    onExited: p,
    onExiting: h,
    style: g,
    timeout: m = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: b = Yn,
    ...x
  } = t, E = dD(), v = M.useRef(), w = Ah(), S = M.useRef(null), T = ir(S, Ua(i), n), C = (_) => (I) => {
    if (_) {
      const D = S.current;
      I === void 0 ? _(D) : _(D, I);
    }
  }, k = C(d), P = C((_, I) => {
    mS(_);
    const {
      duration: D,
      delay: z,
      easing: B
    } = Sc({
      style: g,
      timeout: m,
      easing: s
    }, {
      mode: "enter"
    });
    let F;
    m === "auto" ? (F = w.transitions.getAutoHeightDuration(_.clientHeight), v.current = F) : F = D, _.style.transition = [w.transitions.create("opacity", {
      duration: F,
      delay: z
    }), w.transitions.create("transform", {
      duration: Dd ? F : F * 0.666,
      delay: z,
      easing: B
    })].join(","), c && c(_, I);
  }), y = C(u), R = C(h), $ = C((_) => {
    const {
      duration: I,
      delay: D,
      easing: z
    } = Sc({
      style: g,
      timeout: m,
      easing: s
    }, {
      mode: "exit"
    });
    let B;
    m === "auto" ? (B = w.transitions.getAutoHeightDuration(_.clientHeight), v.current = B) : B = I, _.style.transition = [w.transitions.create("opacity", {
      duration: B,
      delay: D
    }), w.transitions.create("transform", {
      duration: Dd ? B : B * 0.666,
      delay: Dd ? D : D || B * 0.333,
      easing: z
    })].join(","), _.style.opacity = 0, _.style.transform = Gf(0.75), f && f(_);
  }), A = C(p);
  return /* @__PURE__ */ N(b, {
    appear: o,
    in: l,
    nodeRef: S,
    onEnter: P,
    onEntered: y,
    onEntering: k,
    onExit: $,
    onExited: A,
    onExiting: R,
    addEndListener: (_) => {
      m === "auto" && E.start(v.current || 0, _), r && r(S.current, _);
    },
    timeout: m === "auto" ? null : m,
    ...x,
    children: (_, {
      ownerState: I,
      ...D
    }) => /* @__PURE__ */ M.cloneElement(i, {
      style: {
        opacity: 0,
        transform: Gf(0.75),
        visibility: _ === "exited" && !l ? "hidden" : void 0,
        ...i5[_],
        ...g,
        ...i.props.style
      },
      ref: T,
      ...D
    })
  });
});
process.env.NODE_ENV !== "production" && (Ec.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: Wa.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
Ec && (Ec.muiSupportAuto = !0);
function s5(e) {
  const t = hr(e);
  return t.body === e ? no(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function Xs(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function qy(e) {
  return parseInt(no(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function a5(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), r = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || r;
}
function Yy(e, t, n, r, o) {
  const i = [t, n, ...r];
  [].forEach.call(e.children, (s) => {
    const l = !i.includes(s), c = !a5(s);
    l && c && Xs(s, o);
  });
}
function Bd(e, t) {
  let n = -1;
  return e.some((r, o) => t(r) ? (n = o, !0) : !1), n;
}
function l5(e, t) {
  const n = [], r = e.container;
  if (!t.disableScrollLock) {
    if (s5(r)) {
      const s = Zw(no(r));
      n.push({
        value: r.style.paddingRight,
        property: "padding-right",
        el: r
      }), r.style.paddingRight = `${qy(r) + s}px`;
      const l = hr(r).querySelectorAll(".mui-fixed");
      [].forEach.call(l, (c) => {
        n.push({
          value: c.style.paddingRight,
          property: "padding-right",
          el: c
        }), c.style.paddingRight = `${qy(c) + s}px`;
      });
    }
    let i;
    if (r.parentNode instanceof DocumentFragment)
      i = hr(r).body;
    else {
      const s = r.parentElement, l = no(r);
      i = (s == null ? void 0 : s.nodeName) === "HTML" && l.getComputedStyle(s).overflowY === "scroll" ? s : r;
    }
    n.push({
      value: i.style.overflow,
      property: "overflow",
      el: i
    }, {
      value: i.style.overflowX,
      property: "overflow-x",
      el: i
    }, {
      value: i.style.overflowY,
      property: "overflow-y",
      el: i
    }), i.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: i,
      el: s,
      property: l
    }) => {
      i ? s.style.setProperty(l, i) : s.style.removeProperty(l);
    });
  };
}
function c5(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
class u5 {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let r = this.modals.indexOf(t);
    if (r !== -1)
      return r;
    r = this.modals.length, this.modals.push(t), t.modalRef && Xs(t.modalRef, !1);
    const o = c5(n);
    Yy(n, t.mount, t.modalRef, o, !0);
    const i = Bd(this.containers, (s) => s.container === n);
    return i !== -1 ? (this.containers[i].modals.push(t), r) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: o
    }), r);
  }
  mount(t, n) {
    const r = Bd(this.containers, (i) => i.modals.includes(t)), o = this.containers[r];
    o.restore || (o.restore = l5(o, n));
  }
  remove(t, n = !0) {
    const r = this.modals.indexOf(t);
    if (r === -1)
      return r;
    const o = Bd(this.containers, (s) => s.modals.includes(t)), i = this.containers[o];
    if (i.modals.splice(i.modals.indexOf(t), 1), this.modals.splice(r, 1), i.modals.length === 0)
      i.restore && i.restore(), t.modalRef && Xs(t.modalRef, n), Yy(i.container, t.mount, t.modalRef, i.hiddenSiblings, !1), this.containers.splice(o, 1);
    else {
      const s = i.modals[i.modals.length - 1];
      s.modalRef && Xs(s.modalRef, !1);
    }
    return r;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
}
const d5 = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function f5(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function p5(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (r) => e.ownerDocument.querySelector(`input[type="radio"]${r}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function h5(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || p5(e));
}
function m5(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(d5)).forEach((r, o) => {
    const i = f5(r);
    i === -1 || !h5(r) || (i === 0 ? t.push(r) : n.push({
      documentOrder: o,
      tabIndex: i,
      node: r
    }));
  }), n.sort((r, o) => r.tabIndex === o.tabIndex ? r.documentOrder - o.documentOrder : r.tabIndex - o.tabIndex).map((r) => r.node).concat(t);
}
function g5() {
  return !0;
}
function Tc(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: r = !1,
    disableRestoreFocus: o = !1,
    getTabbable: i = m5,
    isEnabled: s = g5,
    open: l
  } = e, c = M.useRef(!1), u = M.useRef(null), d = M.useRef(null), f = M.useRef(null), p = M.useRef(null), h = M.useRef(!1), g = M.useRef(null), m = ir(Ua(t), g), b = M.useRef(null);
  M.useEffect(() => {
    !l || !g.current || (h.current = !n);
  }, [n, l]), M.useEffect(() => {
    if (!l || !g.current)
      return;
    const v = hr(g.current);
    return g.current.contains(v.activeElement) || (g.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), g.current.setAttribute("tabIndex", "-1")), h.current && g.current.focus()), () => {
      o || (f.current && f.current.focus && (c.current = !0, f.current.focus()), f.current = null);
    };
  }, [l]), M.useEffect(() => {
    if (!l || !g.current)
      return;
    const v = hr(g.current), w = (C) => {
      b.current = C, !(r || !s() || C.key !== "Tab") && v.activeElement === g.current && C.shiftKey && (c.current = !0, d.current && d.current.focus());
    }, S = () => {
      var P, y;
      const C = g.current;
      if (C === null)
        return;
      if (!v.hasFocus() || !s() || c.current) {
        c.current = !1;
        return;
      }
      if (C.contains(v.activeElement) || r && v.activeElement !== u.current && v.activeElement !== d.current)
        return;
      if (v.activeElement !== p.current)
        p.current = null;
      else if (p.current !== null)
        return;
      if (!h.current)
        return;
      let k = [];
      if ((v.activeElement === u.current || v.activeElement === d.current) && (k = i(g.current)), k.length > 0) {
        const R = !!((P = b.current) != null && P.shiftKey && ((y = b.current) == null ? void 0 : y.key) === "Tab"), $ = k[0], A = k[k.length - 1];
        typeof $ != "string" && typeof A != "string" && (R ? A.focus() : $.focus());
      } else
        C.focus();
    };
    v.addEventListener("focusin", S), v.addEventListener("keydown", w, !0);
    const T = setInterval(() => {
      v.activeElement && v.activeElement.tagName === "BODY" && S();
    }, 50);
    return () => {
      clearInterval(T), v.removeEventListener("focusin", S), v.removeEventListener("keydown", w, !0);
    };
  }, [n, r, o, s, l, i]);
  const x = (v) => {
    f.current === null && (f.current = v.relatedTarget), h.current = !0, p.current = v.target;
    const w = t.props.onFocus;
    w && w(v);
  }, E = (v) => {
    f.current === null && (f.current = v.relatedTarget), h.current = !0;
  };
  return /* @__PURE__ */ Se(M.Fragment, {
    children: [/* @__PURE__ */ N("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: u,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ M.cloneElement(t, {
      ref: m,
      onFocus: x
    }), /* @__PURE__ */ N("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: d,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (Tc.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: Wa,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: a.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: a.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: a.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: a.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: a.func,
  /**
   * If `true`, focus is locked.
   */
  open: a.bool.isRequired
});
process.env.NODE_ENV !== "production" && (Tc.propTypes = Fw(Tc.propTypes));
function y5(e) {
  return typeof e == "function" ? e() : e;
}
const Cc = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    children: r,
    container: o,
    disablePortal: i = !1
  } = t, [s, l] = M.useState(null), c = ir(/* @__PURE__ */ M.isValidElement(r) ? Ua(r) : null, n);
  if (Qo(() => {
    i || l(y5(o) || document.body);
  }, [o, i]), Qo(() => {
    if (s && !i)
      return My(n, s), () => {
        My(n, null);
      };
  }, [n, s, i]), i) {
    if (/* @__PURE__ */ M.isValidElement(r)) {
      const u = {
        ref: c
      };
      return /* @__PURE__ */ M.cloneElement(r, u);
    }
    return r;
  }
  return s && /* @__PURE__ */ z0.createPortal(r, s);
});
process.env.NODE_ENV !== "production" && (Cc.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: a.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([ga, a.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool
});
process.env.NODE_ENV !== "production" && (Cc.propTypes = Fw(Cc.propTypes));
function yn(e, t) {
  const {
    className: n,
    elementType: r,
    ownerState: o,
    externalForwardedProps: i,
    internalForwardedProps: s,
    shouldForwardComponentProp: l = !1,
    ...c
  } = t, {
    component: u,
    slots: d = {
      [e]: void 0
    },
    slotProps: f = {
      [e]: void 0
    },
    ...p
  } = i, h = d[e] || r, g = oS(f[e], o), {
    props: {
      component: m,
      ...b
    },
    internalRef: x
  } = rS({
    className: n,
    ...c,
    externalForwardedProps: e === "root" ? p : void 0,
    externalSlotProps: g
  }), E = ir(x, g == null ? void 0 : g.ref, t.ref), v = e === "root" ? m || u : m, w = tS(h, {
    ...e === "root" && !u && !d[e] && s,
    ...e !== "root" && !d[e] && s,
    ...b,
    ...v && !l && {
      as: v
    },
    ...v && l && {
      component: v
    },
    ref: E
  }, o);
  return [h, w];
}
const b5 = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, gS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Ah(), o = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: i,
    appear: s = !0,
    children: l,
    easing: c,
    in: u,
    onEnter: d,
    onEntered: f,
    onEntering: p,
    onExit: h,
    onExited: g,
    onExiting: m,
    style: b,
    timeout: x = o,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: E = Yn,
    ...v
  } = t, w = M.useRef(null), S = ir(w, Ua(l), n), T = (O) => (_) => {
    if (O) {
      const I = w.current;
      _ === void 0 ? O(I) : O(I, _);
    }
  }, C = T(p), k = T((O, _) => {
    mS(O);
    const I = Sc({
      style: b,
      timeout: x,
      easing: c
    }, {
      mode: "enter"
    });
    O.style.webkitTransition = r.transitions.create("opacity", I), O.style.transition = r.transitions.create("opacity", I), d && d(O, _);
  }), P = T(f), y = T(m), R = T((O) => {
    const _ = Sc({
      style: b,
      timeout: x,
      easing: c
    }, {
      mode: "exit"
    });
    O.style.webkitTransition = r.transitions.create("opacity", _), O.style.transition = r.transitions.create("opacity", _), h && h(O);
  }), $ = T(g);
  return /* @__PURE__ */ N(E, {
    appear: s,
    in: u,
    nodeRef: w,
    onEnter: k,
    onEntered: P,
    onEntering: C,
    onExit: R,
    onExited: $,
    onExiting: y,
    addEndListener: (O) => {
      i && i(w.current, O);
    },
    timeout: x,
    ...v,
    children: (O, {
      ownerState: _,
      ...I
    }) => /* @__PURE__ */ M.cloneElement(l, {
      style: {
        opacity: 0,
        visibility: O === "exited" && !u ? "hidden" : void 0,
        ...b5[O],
        ...b,
        ...l.props.style
      },
      ref: S,
      ...I
    })
  });
});
process.env.NODE_ENV !== "production" && (gS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: a.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: a.bool,
  /**
   * A single child content element.
   */
  children: Wa.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: a.oneOfType([a.shape({
    enter: a.string,
    exit: a.string
  }), a.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: a.bool,
  /**
   * @ignore
   */
  onEnter: a.func,
  /**
   * @ignore
   */
  onEntered: a.func,
  /**
   * @ignore
   */
  onEntering: a.func,
  /**
   * @ignore
   */
  onExit: a.func,
  /**
   * @ignore
   */
  onExited: a.func,
  /**
   * @ignore
   */
  onExiting: a.func,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function v5(e) {
  return Kt("MuiBackdrop", e);
}
en("MuiBackdrop", ["root", "invisible"]);
const x5 = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return tn({
    root: ["root", n && "invisible"]
  }, v5, t);
}, w5 = qe("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), yS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = an({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: o,
    className: i,
    component: s = "div",
    invisible: l = !1,
    open: c,
    components: u = {},
    componentsProps: d = {},
    slotProps: f = {},
    slots: p = {},
    TransitionComponent: h,
    transitionDuration: g,
    ...m
  } = r, b = {
    ...r,
    component: s,
    invisible: l
  }, x = x5(b), E = {
    transition: h,
    root: u.Root,
    ...p
  }, v = {
    ...d,
    ...f
  }, w = {
    slots: E,
    slotProps: v
  }, [S, T] = yn("root", {
    elementType: w5,
    externalForwardedProps: w,
    className: Oe(x.root, i),
    ownerState: b
  }), [C, k] = yn("transition", {
    elementType: gS,
    externalForwardedProps: w,
    ownerState: b
  });
  return /* @__PURE__ */ N(C, {
    in: c,
    timeout: g,
    ...m,
    ...k,
    children: /* @__PURE__ */ N(S, {
      "aria-hidden": !0,
      ...T,
      classes: x,
      ref: n,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (yS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    root: a.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: a.bool,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: a.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })])
});
function S5(e) {
  return typeof e == "function" ? e() : e;
}
function E5(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const Gy = () => {
}, El = new u5();
function T5(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: r = !1,
    closeAfterTransition: o = !1,
    onTransitionEnter: i,
    onTransitionExited: s,
    children: l,
    onClose: c,
    open: u,
    rootRef: d
  } = e, f = M.useRef({}), p = M.useRef(null), h = M.useRef(null), g = ir(h, d), [m, b] = M.useState(!u), x = E5(l);
  let E = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (E = !1);
  const v = () => hr(p.current), w = () => (f.current.modalRef = h.current, f.current.mount = p.current, f.current), S = () => {
    El.mount(w(), {
      disableScrollLock: r
    }), h.current && (h.current.scrollTop = 0);
  }, T = Uf(() => {
    const _ = S5(t) || v().body;
    El.add(w(), _), h.current && S();
  }), C = () => El.isTopModal(w()), k = Uf((_) => {
    p.current = _, _ && (u && C() ? S() : h.current && Xs(h.current, E));
  }), P = M.useCallback(() => {
    El.remove(w(), E);
  }, [E]);
  M.useEffect(() => () => {
    P();
  }, [P]), M.useEffect(() => {
    u ? T() : (!x || !o) && P();
  }, [u, P, x, o, T]);
  const y = (_) => (I) => {
    var D;
    (D = _.onKeyDown) == null || D.call(_, I), !(I.key !== "Escape" || I.which === 229 || // Wait until IME is settled.
    !C()) && (n || (I.stopPropagation(), c && c(I, "escapeKeyDown")));
  }, R = (_) => (I) => {
    var D;
    (D = _.onClick) == null || D.call(_, I), I.target === I.currentTarget && c && c(I, "backdropClick");
  };
  return {
    getRootProps: (_ = {}) => {
      const I = nS(e);
      delete I.onTransitionEnter, delete I.onTransitionExited;
      const D = {
        ...I,
        ..._
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...D,
        onKeyDown: y(D),
        ref: g
      };
    },
    getBackdropProps: (_ = {}) => {
      const I = _;
      return {
        "aria-hidden": !0,
        ...I,
        onClick: R(I),
        open: u
      };
    },
    getTransitionProps: () => {
      const _ = () => {
        b(!1), i && i();
      }, I = () => {
        b(!0), s && s(), o && P();
      };
      return {
        onEnter: _y(_, (l == null ? void 0 : l.props.onEnter) ?? Gy),
        onExited: _y(I, (l == null ? void 0 : l.props.onExited) ?? Gy)
      };
    },
    rootRef: g,
    portalRef: k,
    isTopModal: C,
    exited: m,
    hasTransition: x
  };
}
function C5(e) {
  return Kt("MuiModal", e);
}
en("MuiModal", ["root", "hidden", "backdrop"]);
const O5 = (e) => {
  const {
    open: t,
    exited: n,
    classes: r
  } = e;
  return tn({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, C5, r);
}, R5 = qe("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(hn(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), k5 = qe(yS, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), bS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = an({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: o = k5,
    BackdropProps: i,
    classes: s,
    className: l,
    closeAfterTransition: c = !1,
    children: u,
    container: d,
    component: f,
    components: p = {},
    componentsProps: h = {},
    disableAutoFocus: g = !1,
    disableEnforceFocus: m = !1,
    disableEscapeKeyDown: b = !1,
    disablePortal: x = !1,
    disableRestoreFocus: E = !1,
    disableScrollLock: v = !1,
    hideBackdrop: w = !1,
    keepMounted: S = !1,
    onClose: T,
    onTransitionEnter: C,
    onTransitionExited: k,
    open: P,
    slotProps: y = {},
    slots: R = {},
    // eslint-disable-next-line react/prop-types
    theme: $,
    ...A
  } = r, O = {
    ...r,
    closeAfterTransition: c,
    disableAutoFocus: g,
    disableEnforceFocus: m,
    disableEscapeKeyDown: b,
    disablePortal: x,
    disableRestoreFocus: E,
    disableScrollLock: v,
    hideBackdrop: w,
    keepMounted: S
  }, {
    getRootProps: _,
    getBackdropProps: I,
    getTransitionProps: D,
    portalRef: z,
    isTopModal: B,
    exited: F,
    hasTransition: L
  } = T5({
    ...O,
    rootRef: n
  }), W = {
    ...O,
    exited: F
  }, U = O5(W), Z = {};
  if (u.props.tabIndex === void 0 && (Z.tabIndex = "-1"), L) {
    const {
      onEnter: K,
      onExited: ne
    } = D();
    Z.onEnter = K, Z.onExited = ne;
  }
  const Q = {
    slots: {
      root: p.Root,
      backdrop: p.Backdrop,
      ...R
    },
    slotProps: {
      ...h,
      ...y
    }
  }, [ee, te] = yn("root", {
    ref: n,
    elementType: R5,
    externalForwardedProps: {
      ...Q,
      ...A,
      component: f
    },
    getSlotProps: _,
    ownerState: W,
    className: Oe(l, U == null ? void 0 : U.root, !W.open && W.exited && (U == null ? void 0 : U.hidden))
  }), [q, oe] = yn("backdrop", {
    ref: i == null ? void 0 : i.ref,
    elementType: o,
    externalForwardedProps: Q,
    shouldForwardComponentProp: !0,
    additionalProps: i,
    getSlotProps: (K) => I({
      ...K,
      onClick: (ne) => {
        K != null && K.onClick && K.onClick(ne);
      }
    }),
    className: Oe(i == null ? void 0 : i.className, U == null ? void 0 : U.backdrop),
    ownerState: W
  });
  return !S && !P && (!L || F) ? null : /* @__PURE__ */ N(Cc, {
    ref: z,
    container: d,
    disablePortal: x,
    children: /* @__PURE__ */ Se(ee, {
      ...te,
      children: [!w && o ? /* @__PURE__ */ N(q, {
        ...oe
      }) : null, /* @__PURE__ */ N(Tc, {
        disableEnforceFocus: m,
        disableAutoFocus: g,
        disableRestoreFocus: E,
        isEnabled: B,
        open: P,
        children: /* @__PURE__ */ M.cloneElement(u, Z)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (bS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: a.object,
  /**
   * A single child content element.
   */
  children: Wa.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: a.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: a.shape({
    Backdrop: a.elementType,
    Root: a.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([ga, a.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: a.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: a.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: a.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: a.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: a.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: a.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: a.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: a.bool,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: a.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: a.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
function N5(e) {
  return Kt("MuiPaper", e);
}
en("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const I5 = (e) => {
  const {
    square: t,
    elevation: n,
    variant: r,
    classes: o
  } = e, i = {
    root: ["root", r, !t && "rounded", r === "elevation" && `elevation${n}`]
  };
  return tn(i, N5, o);
}, $5 = qe("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(hn(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), vS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  var h;
  const r = an({
    props: t,
    name: "MuiPaper"
  }), o = Ah(), {
    className: i,
    component: s = "div",
    elevation: l = 1,
    square: c = !1,
    variant: u = "elevation",
    ...d
  } = r, f = {
    ...r,
    component: s,
    elevation: l,
    square: c,
    variant: u
  }, p = I5(f);
  return process.env.NODE_ENV !== "production" && o.shadows[l] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${l}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${l}]\` is defined.`].join(`
`)), /* @__PURE__ */ N($5, {
    as: s,
    ownerState: f,
    className: Oe(p.root, i),
    ref: n,
    ...d,
    style: {
      ...u === "elevation" && {
        "--Paper-shadow": (o.vars || o).shadows[l],
        ...o.vars && {
          "--Paper-overlay": (h = o.vars.overlays) == null ? void 0 : h[l]
        },
        ...!o.vars && o.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${jf("#fff", Wf(l))}, ${jf("#fff", Wf(l))})`
        }
      },
      ...d.style
    }
  });
});
process.env.NODE_ENV !== "production" && (vS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: Ha(eS, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: a.bool,
  /**
   * @ignore
   */
  style: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: a.oneOfType([a.oneOf(["elevation", "outlined"]), a.string])
});
function P5(e) {
  return Kt("MuiPopover", e);
}
en("MuiPopover", ["root", "paper"]);
function Ky(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function Xy(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function Zy(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function Ds(e) {
  return typeof e == "function" ? e() : e;
}
const _5 = (e) => {
  const {
    classes: t
  } = e;
  return tn({
    root: ["root"],
    paper: ["paper"]
  }, P5, t);
}, M5 = qe(bS, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), xS = qe(vS, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), wS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = an({
    props: t,
    name: "MuiPopover"
  }), {
    action: o,
    anchorEl: i,
    anchorOrigin: s = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: l,
    anchorReference: c = "anchorEl",
    children: u,
    className: d,
    container: f,
    elevation: p = 8,
    marginThreshold: h = 16,
    open: g,
    PaperProps: m = {},
    // TODO: remove in v7
    slots: b = {},
    slotProps: x = {},
    transformOrigin: E = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: v,
    // TODO: remove in v7
    transitionDuration: w = "auto",
    TransitionProps: S = {},
    // TODO: remove in v7
    disableScrollLock: T = !1,
    ...C
  } = r, k = M.useRef(), P = {
    ...r,
    anchorOrigin: s,
    anchorReference: c,
    elevation: p,
    marginThreshold: h,
    transformOrigin: E,
    TransitionComponent: v,
    transitionDuration: w,
    TransitionProps: S
  }, y = _5(P), R = M.useCallback(() => {
    if (c === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (l || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), l;
    const K = Ds(i), ne = K && K.nodeType === 1 ? K : hr(k.current).body, j = ne.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const pe = ne.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && pe.top === 0 && pe.left === 0 && pe.right === 0 && pe.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: j.top + Ky(j, s.vertical),
      left: j.left + Xy(j, s.horizontal)
    };
  }, [i, s.horizontal, s.vertical, l, c]), $ = M.useCallback((K) => ({
    vertical: Ky(K, E.vertical),
    horizontal: Xy(K, E.horizontal)
  }), [E.horizontal, E.vertical]), A = M.useCallback((K) => {
    const ne = {
      width: K.offsetWidth,
      height: K.offsetHeight
    }, j = $(ne);
    if (c === "none")
      return {
        top: null,
        left: null,
        transformOrigin: Zy(j)
      };
    const pe = R();
    let ce = pe.top - j.vertical, be = pe.left - j.horizontal;
    const Ie = ce + ne.height, _e = be + ne.width, $e = no(Ds(i)), Ne = $e.innerHeight - h, Le = $e.innerWidth - h;
    if (h !== null && ce < h) {
      const Re = ce - h;
      ce -= Re, j.vertical += Re;
    } else if (h !== null && Ie > Ne) {
      const Re = Ie - Ne;
      ce -= Re, j.vertical += Re;
    }
    if (process.env.NODE_ENV !== "production" && ne.height > Ne && ne.height && Ne && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${ne.height - Ne}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), h !== null && be < h) {
      const Re = be - h;
      be -= Re, j.horizontal += Re;
    } else if (_e > Le) {
      const Re = _e - Le;
      be -= Re, j.horizontal += Re;
    }
    return {
      top: `${Math.round(ce)}px`,
      left: `${Math.round(be)}px`,
      transformOrigin: Zy(j)
    };
  }, [i, c, R, $, h]), [O, _] = M.useState(g), I = M.useCallback(() => {
    const K = k.current;
    if (!K)
      return;
    const ne = A(K);
    ne.top !== null && K.style.setProperty("top", ne.top), ne.left !== null && (K.style.left = ne.left), K.style.transformOrigin = ne.transformOrigin, _(!0);
  }, [A]);
  M.useEffect(() => (T && window.addEventListener("scroll", I), () => window.removeEventListener("scroll", I)), [i, T, I]);
  const D = () => {
    I();
  }, z = () => {
    _(!1);
  };
  M.useEffect(() => {
    g && I();
  }), M.useImperativeHandle(o, () => g ? {
    updatePosition: () => {
      I();
    }
  } : null, [g, I]), M.useEffect(() => {
    if (!g)
      return;
    const K = Xw(() => {
      I();
    }), ne = no(Ds(i));
    return ne.addEventListener("resize", K), () => {
      K.clear(), ne.removeEventListener("resize", K);
    };
  }, [i, g, I]);
  let B = w;
  const F = {
    slots: {
      transition: v,
      ...b
    },
    slotProps: {
      transition: S,
      paper: m,
      ...x
    }
  }, [L, W] = yn("transition", {
    elementType: Ec,
    externalForwardedProps: F,
    ownerState: P,
    getSlotProps: (K) => ({
      ...K,
      onEntering: (ne, j) => {
        var pe;
        (pe = K.onEntering) == null || pe.call(K, ne, j), D();
      },
      onExited: (ne) => {
        var j;
        (j = K.onExited) == null || j.call(K, ne), z();
      }
    }),
    additionalProps: {
      appear: !0,
      in: g
    }
  });
  w === "auto" && !L.muiSupportAuto && (B = void 0);
  const U = f || (i ? hr(Ds(i)).body : void 0), [Z, {
    slots: Q,
    slotProps: ee,
    ...te
  }] = yn("root", {
    ref: n,
    elementType: M5,
    externalForwardedProps: {
      ...F,
      ...C
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: b.backdrop
      },
      slotProps: {
        backdrop: PD(typeof x.backdrop == "function" ? x.backdrop(P) : x.backdrop, {
          invisible: !0
        })
      },
      container: U,
      open: g
    },
    ownerState: P,
    className: Oe(y.root, d)
  }), [q, oe] = yn("paper", {
    ref: k,
    className: y.paper,
    elementType: xS,
    externalForwardedProps: F,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: p,
      style: O ? void 0 : {
        opacity: 0
      }
    },
    ownerState: P
  });
  return /* @__PURE__ */ N(Z, {
    ...te,
    ...!Yf(Z) && {
      slots: Q,
      slotProps: ee,
      disableScrollLock: T
    },
    children: /* @__PURE__ */ N(L, {
      ...W,
      timeout: B,
      children: /* @__PURE__ */ N(q, {
        ...oe,
        children: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (wS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: Mo,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: Ha(a.oneOfType([ga, a.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = Ds(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: a.shape({
    horizontal: a.oneOfType([a.oneOf(["center", "left", "right"]), a.number]).isRequired,
    vertical: a.oneOfType([a.oneOf(["bottom", "center", "top"]), a.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: a.shape({
    left: a.number.isRequired,
    top: a.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: a.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: a.object,
  /**
   * The content of the component.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: a.oneOfType([ga, a.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: a.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: eS,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: a.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: a.shape({
    component: Gw
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: a.shape({
    horizontal: a.oneOfType([a.oneOf(["center", "left", "right"]), a.number]).isRequired,
    vertical: a.oneOfType([a.oneOf(["bottom", "center", "top"]), a.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: a.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object
});
function A5(e) {
  return Kt("MuiMenu", e);
}
en("MuiMenu", ["root", "paper", "list"]);
const D5 = {
  vertical: "top",
  horizontal: "right"
}, B5 = {
  vertical: "top",
  horizontal: "left"
}, F5 = (e) => {
  const {
    classes: t
  } = e;
  return tn({
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  }, A5, t);
}, L5 = qe(wS, {
  shouldForwardProp: (e) => zr(e) || e === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), z5 = qe(xS, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}), V5 = qe(hS, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (e, t) => t.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), SS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = an({
    props: t,
    name: "MuiMenu"
  }), {
    autoFocus: o = !0,
    children: i,
    className: s,
    disableAutoFocusItem: l = !1,
    MenuListProps: c = {},
    onClose: u,
    open: d,
    PaperProps: f = {},
    PopoverClasses: p,
    transitionDuration: h = "auto",
    TransitionProps: {
      onEntering: g,
      ...m
    } = {},
    variant: b = "selectedMenu",
    slots: x = {},
    slotProps: E = {},
    ...v
  } = r, w = m2(), S = {
    ...r,
    autoFocus: o,
    disableAutoFocusItem: l,
    MenuListProps: c,
    onEntering: g,
    PaperProps: f,
    transitionDuration: h,
    TransitionProps: m,
    variant: b
  }, T = F5(S), C = o && !l && d, k = M.useRef(null), P = (B, F) => {
    k.current && k.current.adjustStyleForScrollbar(B, {
      direction: w ? "rtl" : "ltr"
    }), g && g(B, F);
  }, y = (B) => {
    B.key === "Tab" && (B.preventDefault(), u && u(B, "tabKeyDown"));
  };
  let R = -1;
  M.Children.map(i, (B, F) => {
    /* @__PURE__ */ M.isValidElement(B) && (process.env.NODE_ENV !== "production" && fr.isFragment(B) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), B.props.disabled || (b === "selectedMenu" && B.props.selected || R === -1) && (R = F));
  });
  const $ = {
    slots: x,
    slotProps: {
      list: c,
      transition: m,
      paper: f,
      ...E
    }
  }, A = hD({
    elementType: x.root,
    externalSlotProps: E.root,
    ownerState: S,
    className: [T.root, s]
  }), [O, _] = yn("paper", {
    className: T.paper,
    elementType: z5,
    externalForwardedProps: $,
    shouldForwardComponentProp: !0,
    ownerState: S
  }), [I, D] = yn("list", {
    className: Oe(T.list, c.className),
    elementType: V5,
    shouldForwardComponentProp: !0,
    externalForwardedProps: $,
    getSlotProps: (B) => ({
      ...B,
      onKeyDown: (F) => {
        var L;
        y(F), (L = B.onKeyDown) == null || L.call(B, F);
      }
    }),
    ownerState: S
  }), z = typeof $.slotProps.transition == "function" ? $.slotProps.transition(S) : $.slotProps.transition;
  return /* @__PURE__ */ N(L5, {
    onClose: u,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: w ? "right" : "left"
    },
    transformOrigin: w ? D5 : B5,
    slots: {
      root: x.root,
      paper: O,
      backdrop: x.backdrop,
      ...x.transition && {
        // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover
        transition: x.transition
      }
    },
    slotProps: {
      root: A,
      paper: _,
      backdrop: typeof E.backdrop == "function" ? E.backdrop(S) : E.backdrop,
      transition: {
        ...z,
        onEntering: (...B) => {
          var F;
          P(...B), (F = z == null ? void 0 : z.onEntering) == null || F.call(z, ...B);
        }
      }
    },
    open: d,
    ref: n,
    transitionDuration: h,
    ownerState: S,
    ...v,
    classes: p,
    children: /* @__PURE__ */ N(I, {
      actions: k,
      autoFocus: o && (R === -1 || l),
      autoFocusItem: C,
      variant: b,
      ...D,
      children: i
    })
  });
});
process.env.NODE_ENV !== "production" && (SS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: a.oneOfType([ga, a.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: a.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: a.bool,
  /**
   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.
   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  MenuListProps: a.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: a.object,
  /**
   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.
   */
  PopoverClasses: a.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    list: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    list: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: a.oneOfType([a.oneOf(["auto"]), a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: a.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: a.oneOf(["menu", "selectedMenu"])
});
function j5(e) {
  return Kt("MuiNativeSelect", e);
}
const Bh = en("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), H5 = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: r,
    multiple: o,
    open: i,
    error: s
  } = e, l = {
    select: ["select", n, r && "disabled", o && "multiple", s && "error"],
    icon: ["icon", `icon${Wt(n)}`, i && "iconOpen", r && "disabled"]
  };
  return tn(l, j5, t);
}, ES = qe("select")(({
  theme: e
}) => ({
  // Reset
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  // Reset
  borderRadius: 0,
  cursor: "pointer",
  "&:focus": {
    // Reset Chrome style
    borderRadius: 0
  },
  [`&.${Bh.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (e.vars || e).palette.background.paper
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.variant !== "filled" && t.variant !== "outlined",
    style: {
      // Bump specificity to allow extending custom inputs
      "&&&": {
        paddingRight: 24,
        minWidth: 16
        // So it doesn't collapse.
      }
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      "&&&": {
        paddingRight: 32
      }
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius,
      "&:focus": {
        borderRadius: (e.vars || e).shape.borderRadius
        // Reset the reset for Chrome style
      },
      "&&&": {
        paddingRight: 32
      }
    }
  }]
})), W5 = qe(ES, {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: zr,
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.select, t[n.variant], n.error && t.error, {
      [`&.${Bh.multiple}`]: t.multiple
    }];
  }
})({}), TS = qe("svg")(({
  theme: e
}) => ({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  // Center vertically, height is 1em
  top: "calc(50% - .5em)",
  // Don't block pointer events on the select under the icon.
  pointerEvents: "none",
  color: (e.vars || e).palette.action.active,
  [`&.${Bh.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.open,
    style: {
      transform: "rotate(180deg)"
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      right: 7
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      right: 7
    }
  }]
})), U5 = qe(TS, {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${Wt(n.variant)}`], n.open && t.iconOpen];
  }
})({}), CS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const {
    className: r,
    disabled: o,
    error: i,
    IconComponent: s,
    inputRef: l,
    variant: c = "standard",
    ...u
  } = t, d = {
    ...t,
    disabled: o,
    variant: c,
    error: i
  }, f = H5(d);
  return /* @__PURE__ */ Se(M.Fragment, {
    children: [/* @__PURE__ */ N(W5, {
      ownerState: d,
      className: Oe(f.select, r),
      disabled: o,
      ref: l || n,
      ...u
    }), t.multiple ? null : /* @__PURE__ */ N(U5, {
      as: s,
      ownerState: d,
      className: f.icon
    })]
  });
});
process.env.NODE_ENV !== "production" && (CS.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The CSS class name of the select element.
   */
  className: a.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: a.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: a.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: Mo,
  /**
   * @ignore
   */
  multiple: a.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: a.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * The input value.
   */
  value: a.any,
  /**
   * The variant to use.
   */
  variant: a.oneOf(["standard", "outlined", "filled"])
});
function OS(e) {
  return Kt("MuiSelect", e);
}
const Es = en("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]);
var Qy;
const q5 = qe(ES, {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [
      // Win specificity over the input base
      {
        [`&.${Es.select}`]: t.select
      },
      {
        [`&.${Es.select}`]: t[n.variant]
      },
      {
        [`&.${Es.error}`]: t.error
      },
      {
        [`&.${Es.multiple}`]: t.multiple
      }
    ];
  }
})({
  // Win specificity over the input base
  [`&.${Es.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
}), Y5 = qe(TS, {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${Wt(n.variant)}`], n.open && t.iconOpen];
  }
})({}), G5 = qe("input", {
  shouldForwardProp: (e) => Uw(e) && e !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (e, t) => t.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function Jy(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
function K5(e) {
  return e == null || typeof e == "string" && !e.trim();
}
const X5 = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: r,
    multiple: o,
    open: i,
    error: s
  } = e, l = {
    select: ["select", n, r && "disabled", o && "multiple", s && "error"],
    icon: ["icon", `icon${Wt(n)}`, i && "iconOpen", r && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return tn(l, OS, t);
}, RS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  var Ce;
  const {
    "aria-describedby": r,
    "aria-label": o,
    autoFocus: i,
    autoWidth: s,
    children: l,
    className: c,
    defaultOpen: u,
    defaultValue: d,
    disabled: f,
    displayEmpty: p,
    error: h = !1,
    IconComponent: g,
    inputRef: m,
    labelId: b,
    MenuProps: x = {},
    multiple: E,
    name: v,
    onBlur: w,
    onChange: S,
    onClose: T,
    onFocus: C,
    onOpen: k,
    open: P,
    readOnly: y,
    renderValue: R,
    required: $,
    SelectDisplayProps: A = {},
    tabIndex: O,
    // catching `type` from Input which makes no sense for SelectInput
    type: _,
    value: I,
    variant: D = "standard",
    ...z
  } = t, [B, F] = Ay({
    controlled: I,
    default: d,
    name: "Select"
  }), [L, W] = Ay({
    controlled: P,
    default: u,
    name: "Select"
  }), U = M.useRef(null), Z = M.useRef(null), [Q, ee] = M.useState(null), {
    current: te
  } = M.useRef(P != null), [q, oe] = M.useState(), K = ir(n, m), ne = M.useCallback((ue) => {
    Z.current = ue, ue && ee(ue);
  }, []), j = Q == null ? void 0 : Q.parentNode;
  M.useImperativeHandle(K, () => ({
    focus: () => {
      Z.current.focus();
    },
    node: U.current,
    value: B
  }), [B]), M.useEffect(() => {
    u && L && Q && !te && (oe(s ? null : j.clientWidth), Z.current.focus());
  }, [Q, s]), M.useEffect(() => {
    i && Z.current.focus();
  }, [i]), M.useEffect(() => {
    if (!b)
      return;
    const ue = hr(Z.current).getElementById(b);
    if (ue) {
      const Te = () => {
        getSelection().isCollapsed && Z.current.focus();
      };
      return ue.addEventListener("click", Te), () => {
        ue.removeEventListener("click", Te);
      };
    }
  }, [b]);
  const pe = (ue, Te) => {
    ue ? k && k(Te) : T && T(Te), te || (oe(s ? null : j.clientWidth), W(ue));
  }, ce = (ue) => {
    ue.button === 0 && (ue.preventDefault(), Z.current.focus(), pe(!0, ue));
  }, be = (ue) => {
    pe(!1, ue);
  }, Ie = M.Children.toArray(l), _e = (ue) => {
    const Te = Ie.find((Be) => Be.props.value === ue.target.value);
    Te !== void 0 && (F(Te.props.value), S && S(ue, Te));
  }, $e = (ue) => (Te) => {
    let Be;
    if (Te.currentTarget.hasAttribute("tabindex")) {
      if (E) {
        Be = Array.isArray(B) ? B.slice() : [];
        const We = B.indexOf(ue.props.value);
        We === -1 ? Be.push(ue.props.value) : Be.splice(We, 1);
      } else
        Be = ue.props.value;
      if (ue.props.onClick && ue.props.onClick(Te), B !== Be && (F(Be), S)) {
        const We = Te.nativeEvent || Te, Ke = new We.constructor(We.type, We);
        Object.defineProperty(Ke, "target", {
          writable: !0,
          value: {
            value: Be,
            name: v
          }
        }), S(Ke, ue);
      }
      E || pe(!1, Te);
    }
  }, Ne = (ue) => {
    y || [
      " ",
      "ArrowUp",
      "ArrowDown",
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
      "Enter"
    ].includes(ue.key) && (ue.preventDefault(), pe(!0, ue));
  }, Le = Q !== null && L, Re = (ue) => {
    !Le && w && (Object.defineProperty(ue, "target", {
      writable: !0,
      value: {
        value: B,
        name: v
      }
    }), w(ue));
  };
  delete z["aria-invalid"];
  let V, J;
  const ie = [];
  let X = !1, H = !1;
  (xc({
    value: B
  }) || p) && (R ? V = R(B) : X = !0);
  const G = Ie.map((ue) => {
    if (!/* @__PURE__ */ M.isValidElement(ue))
      return null;
    process.env.NODE_ENV !== "production" && fr.isFragment(ue) && console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    let Te;
    if (E) {
      if (!Array.isArray(B))
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `value` prop must be an array when using the `Select` component with `multiple`." : Br(2));
      Te = B.some((Be) => Jy(Be, ue.props.value)), Te && X && ie.push(ue.props.children);
    } else
      Te = Jy(B, ue.props.value), Te && X && (J = ue.props.children);
    return Te && (H = !0), /* @__PURE__ */ M.cloneElement(ue, {
      "aria-selected": Te ? "true" : "false",
      onClick: $e(ue),
      onKeyUp: (Be) => {
        Be.key === " " && Be.preventDefault(), ue.props.onKeyUp && ue.props.onKeyUp(Be);
      },
      role: "option",
      selected: Te,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": ue.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  process.env.NODE_ENV !== "production" && M.useEffect(() => {
    if (!H && !E && B !== "") {
      const ue = Ie.map((Te) => Te.props.value);
      console.warn([`MUI: You have provided an out-of-range value \`${B}\` for the select ${v ? `(name="${v}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${ue.filter((Te) => Te != null).map((Te) => `\`${Te}\``).join(", ") || '""'}.`].join(`
`));
    }
  }, [H, Ie, E, v, B]), X && (E ? ie.length === 0 ? V = null : V = ie.reduce((ue, Te, Be) => (ue.push(Te), Be < ie.length - 1 && ue.push(", "), ue), []) : V = J);
  let re = q;
  !s && te && Q && (re = j.clientWidth);
  let he;
  typeof O < "u" ? he = O : he = f ? null : 0;
  const me = A.id || (v ? `mui-component-select-${v}` : void 0), le = {
    ...t,
    variant: D,
    value: B,
    open: Le,
    error: h
  }, se = X5(le), ae = {
    ...x.PaperProps,
    ...(Ce = x.slotProps) == null ? void 0 : Ce.paper
  }, ge = qw();
  return /* @__PURE__ */ Se(M.Fragment, {
    children: [/* @__PURE__ */ N(q5, {
      as: "div",
      ref: ne,
      tabIndex: he,
      role: "combobox",
      "aria-controls": Le ? ge : void 0,
      "aria-disabled": f ? "true" : void 0,
      "aria-expanded": Le ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": o,
      "aria-labelledby": [b, me].filter(Boolean).join(" ") || void 0,
      "aria-describedby": r,
      "aria-required": $ ? "true" : void 0,
      "aria-invalid": h ? "true" : void 0,
      onKeyDown: Ne,
      onMouseDown: f || y ? null : ce,
      onBlur: Re,
      onFocus: C,
      ...A,
      ownerState: le,
      className: Oe(A.className, se.select, c),
      id: me,
      children: K5(V) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        Qy || (Qy = /* @__PURE__ */ N("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      ) : V
    }), /* @__PURE__ */ N(G5, {
      "aria-invalid": h,
      value: Array.isArray(B) ? B.join(",") : B,
      name: v,
      ref: U,
      "aria-hidden": !0,
      onChange: _e,
      tabIndex: -1,
      disabled: f,
      className: se.nativeInput,
      autoFocus: i,
      required: $,
      ...z,
      ownerState: le
    }), /* @__PURE__ */ N(Y5, {
      as: g,
      className: se.icon,
      ownerState: le
    }), /* @__PURE__ */ N(SS, {
      id: `menu-${v || ""}`,
      anchorEl: j,
      open: Le,
      onClose: be,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      },
      ...x,
      slotProps: {
        ...x.slotProps,
        list: {
          "aria-labelledby": b,
          role: "listbox",
          "aria-multiselectable": E ? "true" : void 0,
          disableListWrap: !0,
          id: ge,
          ...x.MenuListProps
        },
        paper: {
          ...ae,
          style: {
            minWidth: re,
            ...ae != null ? ae.style : null
          }
        }
      },
      children: G
    })]
  });
});
process.env.NODE_ENV !== "production" && (RS.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": a.string,
  /**
   * @ignore
   */
  "aria-label": a.string,
  /**
   * @ignore
   */
  autoFocus: a.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: a.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The CSS class name of the select element.
   */
  className: a.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: a.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: a.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: a.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: a.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: Mo,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: a.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: a.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: a.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: a.string,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: a.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool,
  /**
   * @ignore
   */
  readOnly: a.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: a.func,
  /**
   * If `true`, the component is required.
   */
  required: a.bool,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: a.object,
  /**
   * @ignore
   */
  tabIndex: a.oneOfType([a.number, a.string]),
  /**
   * @ignore
   */
  type: a.any,
  /**
   * The input value.
   */
  value: a.any,
  /**
   * The variant to use.
   */
  variant: a.oneOf(["standard", "outlined", "filled"])
});
const Z5 = ID(/* @__PURE__ */ N("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown"), Q5 = (e) => {
  const {
    classes: t
  } = e, r = tn({
    root: ["root"]
  }, OS, t);
  return {
    ...t,
    ...r
  };
}, Fh = {
  name: "MuiSelect",
  overridesResolver: (e, t) => t.root,
  shouldForwardProp: (e) => zr(e) && e !== "variant",
  slot: "Root"
}, J5 = qe(ju, Fh)(""), eB = qe(Wu, Fh)(""), tB = qe(Hu, Fh)(""), Lh = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = an({
    name: "MuiSelect",
    props: t
  }), {
    autoWidth: o = !1,
    children: i,
    classes: s = {},
    className: l,
    defaultOpen: c = !1,
    displayEmpty: u = !1,
    IconComponent: d = Z5,
    id: f,
    input: p,
    inputProps: h,
    label: g,
    labelId: m,
    MenuProps: b,
    multiple: x = !1,
    native: E = !1,
    onClose: v,
    onOpen: w,
    open: S,
    renderValue: T,
    SelectDisplayProps: C,
    variant: k = "outlined",
    ...P
  } = r, y = E ? CS : RS, R = ds(), $ = us({
    props: r,
    muiFormControl: R,
    states: ["variant", "error"]
  }), A = $.variant || k, O = {
    ...r,
    variant: A,
    classes: s
  }, _ = Q5(O), {
    root: I,
    ...D
  } = _, z = p || {
    standard: /* @__PURE__ */ N(J5, {
      ownerState: O
    }),
    outlined: /* @__PURE__ */ N(eB, {
      label: g,
      ownerState: O
    }),
    filled: /* @__PURE__ */ N(tB, {
      ownerState: O
    })
  }[A], B = ir(n, Ua(z));
  return /* @__PURE__ */ N(M.Fragment, {
    children: /* @__PURE__ */ M.cloneElement(z, {
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: y,
      inputProps: {
        children: i,
        error: $.error,
        IconComponent: d,
        variant: A,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: x,
        ...E ? {
          id: f
        } : {
          autoWidth: o,
          defaultOpen: c,
          displayEmpty: u,
          labelId: m,
          MenuProps: b,
          onClose: v,
          onOpen: w,
          open: S,
          renderValue: T,
          SelectDisplayProps: {
            id: f,
            ...C
          }
        },
        ...h,
        classes: h ? fn(D, h.classes) : D,
        ...p ? p.props.inputProps : {}
      },
      ...(x && E || u) && A === "outlined" ? {
        notched: !0
      } : {},
      ref: B,
      className: Oe(z.props.className, l, _.root),
      // If a custom input is provided via 'input' prop, do not allow 'variant' to be propagated to it's root element. See https://github.com/mui/material-ui/issues/33894.
      ...!p && {
        variant: A
      },
      ...P
    })
  });
});
process.env.NODE_ENV !== "production" && (Lh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: a.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: a.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: a.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: a.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: a.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: a.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: a.object,
  /**
   * See [OutlinedInput#label](https://mui.com/material-ui/api/outlined-input/#props)
   */
  label: a.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: a.string,
  /**
   * Props applied to the [`Menu`](https://mui.com/material-ui/api/menu/) element.
   */
  MenuProps: a.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: a.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: a.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: a.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: a.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: a.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: a.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: a.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: a.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: a.oneOfType([a.oneOf([""]), a.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
Lh.muiName = "Select";
function nB(e) {
  return Kt("MuiTextField", e);
}
en("MuiTextField", ["root"]);
const rB = {
  standard: ju,
  filled: Hu,
  outlined: Wu
}, oB = (e) => {
  const {
    classes: t
  } = e;
  return tn({
    root: ["root"]
  }, nB, t);
}, iB = qe(cS, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), kS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = an({
    props: t,
    name: "MuiTextField"
  }), {
    autoComplete: o,
    autoFocus: i = !1,
    children: s,
    className: l,
    color: c = "primary",
    defaultValue: u,
    disabled: d = !1,
    error: f = !1,
    FormHelperTextProps: p,
    fullWidth: h = !1,
    helperText: g,
    id: m,
    InputLabelProps: b,
    inputProps: x,
    InputProps: E,
    inputRef: v,
    label: w,
    maxRows: S,
    minRows: T,
    multiline: C = !1,
    name: k,
    onBlur: P,
    onChange: y,
    onFocus: R,
    placeholder: $,
    required: A = !1,
    rows: O,
    select: _ = !1,
    SelectProps: I,
    slots: D = {},
    slotProps: z = {},
    type: B,
    value: F,
    variant: L = "outlined",
    ...W
  } = r, U = {
    ...r,
    autoFocus: i,
    color: c,
    disabled: d,
    error: f,
    fullWidth: h,
    multiline: C,
    required: A,
    select: _,
    variant: L
  }, Z = oB(U);
  process.env.NODE_ENV !== "production" && _ && !s && console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
  const Q = qw(m), ee = g && Q ? `${Q}-helper-text` : void 0, te = w && Q ? `${Q}-label` : void 0, q = rB[L], oe = {
    slots: D,
    slotProps: {
      input: E,
      inputLabel: b,
      htmlInput: x,
      formHelperText: p,
      select: I,
      ...z
    }
  }, K = {}, ne = oe.slotProps.inputLabel;
  L === "outlined" && (ne && typeof ne.shrink < "u" && (K.notched = ne.shrink), K.label = w), _ && ((!I || !I.native) && (K.id = void 0), K["aria-describedby"] = void 0);
  const [j, pe] = yn("root", {
    elementType: iB,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...oe,
      ...W
    },
    ownerState: U,
    className: Oe(Z.root, l),
    ref: n,
    additionalProps: {
      disabled: d,
      error: f,
      fullWidth: h,
      required: A,
      color: c,
      variant: L
    }
  }), [ce, be] = yn("input", {
    elementType: q,
    externalForwardedProps: oe,
    additionalProps: K,
    ownerState: U
  }), [Ie, _e] = yn("inputLabel", {
    elementType: lS,
    externalForwardedProps: oe,
    ownerState: U
  }), [$e, Ne] = yn("htmlInput", {
    elementType: "input",
    externalForwardedProps: oe,
    ownerState: U
  }), [Le, Re] = yn("formHelperText", {
    elementType: uS,
    externalForwardedProps: oe,
    ownerState: U
  }), [V, J] = yn("select", {
    elementType: Lh,
    externalForwardedProps: oe,
    ownerState: U
  }), ie = /* @__PURE__ */ N(ce, {
    "aria-describedby": ee,
    autoComplete: o,
    autoFocus: i,
    defaultValue: u,
    fullWidth: h,
    multiline: C,
    name: k,
    rows: O,
    maxRows: S,
    minRows: T,
    type: B,
    value: F,
    id: Q,
    inputRef: v,
    onBlur: P,
    onChange: y,
    onFocus: R,
    placeholder: $,
    inputProps: Ne,
    slots: {
      input: D.htmlInput ? $e : void 0
    },
    ...be
  });
  return /* @__PURE__ */ Se(j, {
    ...pe,
    children: [w != null && w !== "" && /* @__PURE__ */ N(Ie, {
      htmlFor: Q,
      id: te,
      ..._e,
      children: w
    }), _ ? /* @__PURE__ */ N(V, {
      "aria-describedby": ee,
      id: Q,
      labelId: te,
      value: F,
      input: ie,
      ...J,
      children: s
    }) : ie, g && /* @__PURE__ */ N(Le, {
      id: ee,
      ...Re,
      children: g
    })]
  });
});
process.env.NODE_ENV !== "production" && (kS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: a.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: a.bool,
  /**
   * @ignore
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: a.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: a.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: a.bool,
  /**
   * Props applied to the [`FormHelperText`](https://mui.com/material-ui/api/form-helper-text/) element.
   * @deprecated Use `slotProps.formHelperText` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  FormHelperTextProps: a.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * The helper text content.
   */
  helperText: a.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: a.string,
  /**
   * Props applied to the [`InputLabel`](https://mui.com/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   * @deprecated Use `slotProps.inputLabel` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputLabelProps: a.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.htmlInput` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: a.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](https://mui.com/material-ui/api/filled-input/),
   * [`OutlinedInput`](https://mui.com/material-ui/api/outlined-input/) or [`Input`](https://mui.com/material-ui/api/input/)
   * component depending on the `variant` prop value.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Mo,
  /**
   * The label content.
   */
  label: a.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: a.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: a.oneOfType([a.number, a.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: a.oneOfType([a.number, a.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: a.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * @ignore
   */
  onBlur: a.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: a.func,
  /**
   * @ignore
   */
  onFocus: a.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: a.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: a.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: a.oneOfType([a.number, a.string]),
  /**
   * Render a [`Select`](https://mui.com/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: a.bool,
  /**
   * Props applied to the [`Select`](https://mui.com/material-ui/api/select/) element.
   * @deprecated Use `slotProps.select` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SelectProps: a.object,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    formHelperText: a.oneOfType([a.func, a.object]),
    htmlInput: a.oneOfType([a.func, a.object]),
    input: a.oneOfType([a.func, a.object]),
    inputLabel: a.oneOfType([a.func, a.object]),
    select: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    formHelperText: a.elementType,
    htmlInput: a.elementType,
    input: a.elementType,
    inputLabel: a.elementType,
    root: a.elementType,
    select: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: a.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: a.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: a.oneOf(["filled", "outlined", "standard"])
});
const sB = en("MuiBox", ["root"]), aB = Ww(), NS = QA({
  themeId: Tu,
  defaultTheme: aB,
  defaultClassName: sB.root,
  generateClassName: Pw.generate
});
process.env.NODE_ENV !== "production" && (NS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: a.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: a.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object])
});
const lB = qe(kS)`
  input {
    text-align: center;
  }
`, cB = {
  TextFieldStyled: lB
}, uB = (e) => /* @__PURE__ */ N(cB.TextFieldStyled, { ...e }), Ts = {
  left: "ArrowLeft",
  right: "ArrowRight",
  backspace: "Backspace",
  home: "Home",
  end: "End"
};
function dB(e, t) {
  return e <= 0 ? [] : Array.from({ length: e }, t);
}
function fB(e, t, n) {
  return e.map((r, o) => t === o ? n : r);
}
function eb(e) {
  return e.join("");
}
function tb(e, t) {
  return [...e, t];
}
function pB(e, t, n) {
  return e.reduce(
    (r, o, i) => {
      const { characters: s, restArrayMerged: l } = r;
      if (i < n)
        return {
          restArrayMerged: l,
          characters: tb(s, o)
        };
      const [c, ...u] = l;
      return {
        restArrayMerged: u,
        characters: tb(s, c || "")
      };
    },
    {
      restArrayMerged: t,
      characters: []
    }
  ).characters;
}
function hB(e) {
  return (t) => {
    e.forEach((n) => {
      typeof n == "function" ? n(t) : n != null && (n.current = t);
    });
  };
}
function mB(e) {
  return e.split("");
}
function nb(e) {
  const t = Y.useRef(() => {
    throw new Error("Cannot call an event handler while rendering.");
  });
  return Y.useInsertionEffect(() => {
    t.current = e;
  }), Y.useCallback((...n) => {
    var r;
    return (r = t.current) == null ? void 0 : r.call(t, ...n);
  }, []);
}
const gB = () => !0, yB = Y.forwardRef(
  (e, t) => {
    const {
      value: n = "",
      length: r = 4,
      autoFocus: o = !1,
      onChange: i,
      TextFieldsProps: s,
      onComplete: l,
      validateChar: c = gB,
      className: u,
      onBlur: d,
      ...f
    } = e, p = Y.useRef(n), h = nb(l), g = nb((R) => {
      const $ = R.slice(0, r);
      return {
        isCompleted: $.length === r,
        finalValue: $
      };
    });
    Y.useEffect(() => {
      const { isCompleted: R, finalValue: $ } = g(
        p.current
      );
      R && h($);
    }, [r, h, g]);
    const m = dB(
      r,
      (R, $) => ({
        character: n[$] || "",
        inputRef: Y.createRef()
      })
    ), b = (R) => m.findIndex(({ inputRef: $ }) => $.current === R), x = () => m.map(({ character: R }) => R), E = (R, $) => {
      const A = fB(
        x(),
        R,
        $
      );
      return eb(A);
    }, v = (R) => {
      var $, A;
      (A = ($ = m[R]) == null ? void 0 : $.inputRef.current) == null || A.focus();
    }, w = (R) => {
      var $, A;
      (A = ($ = m[R]) == null ? void 0 : $.inputRef.current) == null || A.select();
    }, S = (R) => {
      R + 1 !== r && (m[R + 1].character ? w(R + 1) : v(R + 1));
    }, T = (R, $) => typeof c != "function" ? !0 : c(R, $), C = (R) => {
      const $ = b(R.target);
      if ($ === 0 && R.target.value.length > 1) {
        const { finalValue: z, isCompleted: B } = g(
          R.target.value
        );
        i == null || i(z), B && (l == null || l(z)), w(z.length - 1);
        return;
      }
      const A = R.target.value[0] || "";
      let O = A;
      O && !T(O, $) && (O = "");
      const _ = E($, O);
      i == null || i(_);
      const { isCompleted: I, finalValue: D } = g(_);
      I && (l == null || l(D)), O !== "" ? _.length - 1 < $ ? w(_.length) : S($) : A === "" && _.length <= $ && w($ - 1);
    }, k = (R) => {
      const $ = R.target, A = $.selectionStart, O = $.selectionEnd, _ = b($), I = A === 0 && O === 0;
      if ($.value === R.key)
        R.preventDefault(), S(_);
      else if (Ts.backspace === R.key) {
        if (!$.value)
          R.preventDefault(), w(_ - 1);
        else if (I) {
          R.preventDefault();
          const D = E(_, "");
          i == null || i(D), D.length <= _ && w(_ - 1);
        }
      } else Ts.left === R.key ? (R.preventDefault(), w(_ - 1)) : Ts.right === R.key ? (R.preventDefault(), w(_ + 1)) : Ts.home === R.key ? (R.preventDefault(), w(0)) : Ts.end === R.key && (R.preventDefault(), w(m.length - 1));
    }, P = (R) => {
      const $ = R.clipboardData.getData("text/plain"), A = R.target, O = m.findIndex(
        ({ character: F, inputRef: L }) => F === "" || L.current === A
      ), _ = x(), I = pB(
        _,
        mB($),
        O
      ).map((F, L) => T(F, L) ? F : ""), D = eb(I);
      i == null || i(D);
      const { isCompleted: z, finalValue: B } = g(D);
      z ? (l == null || l(B), w(r - 1)) : w(D.length);
    }, y = (R) => {
      if (!m.some(({ inputRef: $ }) => $.current === R.relatedTarget)) {
        const { isCompleted: $, finalValue: A } = g(n);
        d == null || d(A, $);
      }
    };
    return /* @__PURE__ */ N(
      NS,
      {
        display: "flex",
        gap: "20px",
        alignItems: "center",
        ref: t,
        className: `MuiOtpInput-Box ${u || ""}`,
        ...f,
        children: m.map(({ character: R, inputRef: $ }, A) => {
          const {
            onPaste: O,
            onFocus: _,
            onKeyDown: I,
            className: D,
            onBlur: z,
            inputRef: B,
            ...F
          } = typeof s == "function" ? s(A) || {} : s || {};
          return /* @__PURE__ */ N(
            uB,
            {
              autoFocus: o ? A === 0 : !1,
              autoComplete: "one-time-code",
              value: R,
              inputRef: hB([$, B]),
              className: `MuiOtpInput-TextField MuiOtpInput-TextField-${A + 1} ${D || ""}`,
              onPaste: (L) => {
                L.preventDefault(), P(L), O == null || O(L);
              },
              onFocus: (L) => {
                L.preventDefault(), L.target.select(), _ == null || _(L);
              },
              onChange: C,
              onKeyDown: (L) => {
                k(L), I == null || I(L);
              },
              onBlur: (L) => {
                z == null || z(L), y(L);
              },
              ...F
            },
            A
          );
        })
      }
    );
  }
), IS = we(
  ({
    label: e = "",
    tooltip: t,
    value: n,
    onChange: r,
    isRequired: o,
    isDisabled: i,
    isError: s,
    errorMessage: l = ""
  }) => {
    const { textCommonStyles: c } = du({
      isTitle: !1,
      isLabel: !0,
      textColor: i ? "disabled" : s ? "error" : "auto"
    });
    return /* @__PURE__ */ Se(sn, { gap: 0, children: [
      /* @__PURE__ */ N(
        Hi,
        {
          label: e,
          elementId: void 0,
          tooltip: t,
          isRequired: o,
          isDisabled: i,
          isError: s
        }
      ),
      /* @__PURE__ */ N(
        yB,
        {
          value: n,
          onChange: r,
          length: 6,
          TextFieldsProps: {
            disabled: i,
            error: s
          },
          sx: {
            "& .MuiInputBase-root": {
              borderRadius: "8px"
            },
            "& input": {
              width: "8px",
              height: "8px",
              p: "16px",
              borderRadius: "8px"
            }
          }
        }
      ),
      /* @__PURE__ */ N(
        In,
        {
          text: s ? l : "",
          isLabel: !0,
          sx: { ...c, minHeight: "24px" }
        }
      )
    ] });
  }
);
IS.displayName = "OtpInput";
const $S = we(({ isError: e, isDisabled: t, fullWidth: n, sx: r, ...o }) => {
  const { inputCommonStyle: i } = Tw({
    isDisabled: t,
    isError: e
  }), [s, l] = Jt(!1);
  return /* @__PURE__ */ N(
    Eu,
    {
      type: s ? "text" : "password",
      fullWidth: n,
      isError: e,
      endAdornment: /* @__PURE__ */ N(
        $n,
        {
          isCircle: !0,
          isGhost: !0,
          icon: s ? "solar:eye-closed-bold-duotone" : "solar:eye-bold-duotone",
          color: e ? "error" : "primary",
          sx: { mr: -2 },
          onClick: () => l((c) => !c)
        }
      ),
      sx: {
        width: n ? "100%" : `calc(${i.minWidth} - 40px) !important`,
        ...r
      },
      ...o
    }
  );
});
$S.displayName = "Password";
const bB = is(/* @__PURE__ */ N("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "RadioButtonUnchecked"), vB = is(/* @__PURE__ */ N("path", {
  d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
}), "RadioButtonChecked"), xB = Me("span", {
  shouldForwardProp: Fr
})({
  position: "relative",
  display: "flex"
}), wB = Me(bB)({
  // Scale applied to prevent dot misalignment in Safari
  transform: "scale(1)"
}), SB = Me(vB)(et(({
  theme: e
}) => ({
  left: 0,
  position: "absolute",
  transform: "scale(0)",
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeIn,
    duration: e.transitions.duration.shortest
  }),
  variants: [{
    props: {
      checked: !0
    },
    style: {
      transform: "scale(1)",
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeOut,
        duration: e.transitions.duration.shortest
      })
    }
  }]
})));
function zh(e) {
  const {
    checked: t = !1,
    classes: n = {},
    fontSize: r
  } = e, o = {
    ...e,
    checked: t
  };
  return /* @__PURE__ */ Se(xB, {
    className: n.root,
    ownerState: o,
    children: [/* @__PURE__ */ N(wB, {
      fontSize: r,
      className: n.background,
      ownerState: o
    }), /* @__PURE__ */ N(SB, {
      fontSize: r,
      className: n.dot,
      ownerState: o
    })]
  });
}
process.env.NODE_ENV !== "production" && (zh.propTypes = {
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   */
  fontSize: a.oneOf(["small", "medium"])
});
const PS = /* @__PURE__ */ M.createContext(void 0);
process.env.NODE_ENV !== "production" && (PS.displayName = "RadioGroupContext");
function EB() {
  return M.useContext(PS);
}
function TB(e) {
  return Et("MuiRadio", e);
}
const rb = kt("MuiRadio", ["root", "checked", "disabled", "colorPrimary", "colorSecondary", "sizeSmall"]), CB = (e) => {
  const {
    classes: t,
    color: n,
    size: r
  } = e, o = {
    root: ["root", `color${Ee(n)}`, r !== "medium" && `size${Ee(r)}`]
  };
  return {
    ...t,
    ...Mt(o, TB, t)
  };
}, OB = Me(wu, {
  shouldForwardProp: (e) => Fr(e) || e === "classes",
  name: "MuiRadio",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size !== "medium" && t[`size${Ee(n.size)}`], t[`color${Ee(n.color)}`]];
  }
})(et(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  [`&.${rb.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: {
      color: "default",
      disabled: !1,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : rn(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(bn()).map(([t]) => ({
    props: {
      color: t,
      disabled: !1,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : rn(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(bn()).map(([t]) => ({
    props: {
      color: t,
      disabled: !1
    },
    style: {
      [`&.${rb.checked}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
})));
function RB(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
const kB = /* @__PURE__ */ N(zh, {
  checked: !0
}), NB = /* @__PURE__ */ N(zh, {}), _S = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiRadio"
  }), {
    checked: o,
    checkedIcon: i = kB,
    color: s = "primary",
    icon: l = NB,
    name: c,
    onChange: u,
    size: d = "medium",
    className: f,
    disabled: p,
    disableRipple: h = !1,
    slots: g = {},
    slotProps: m = {},
    inputProps: b,
    ...x
  } = r, E = xu();
  let v = p;
  E && typeof v > "u" && (v = E.disabled), v ?? (v = !1);
  const w = {
    ...r,
    disabled: v,
    disableRipple: h,
    color: s,
    size: d
  }, S = CB(w), T = EB();
  let C = o;
  const k = gf(u, T && T.onChange);
  let P = c;
  T && (typeof C > "u" && (C = RB(T.value, r.value)), typeof P > "u" && (P = T.name));
  const y = m.input ?? b, [R, $] = pt("root", {
    ref: n,
    elementType: OB,
    className: Oe(S.root, f),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: g,
      slotProps: m,
      ...x
    },
    getSlotProps: (A) => ({
      ...A,
      onChange: (O, ..._) => {
        var I;
        (I = A.onChange) == null || I.call(A, O, ..._), k(O, ..._);
      }
    }),
    ownerState: w,
    additionalProps: {
      type: "radio",
      icon: /* @__PURE__ */ M.cloneElement(l, {
        fontSize: l.props.fontSize ?? d
      }),
      checkedIcon: /* @__PURE__ */ M.cloneElement(i, {
        fontSize: i.props.fontSize ?? d
      }),
      disabled: v,
      name: P,
      checked: C,
      slots: g,
      slotProps: {
        // Do not forward `slotProps.root` again because it's already handled by the `RootSlot` in this file.
        input: typeof y == "function" ? y(w) : y
      }
    }
  });
  return /* @__PURE__ */ N(R, {
    ...$,
    classes: S
  });
});
process.env.NODE_ENV !== "production" && (_S.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * The icon to display when the component is checked.
   * @default <RadioButtonIcon checked />
   */
  checkedIcon: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * If `true`, the component is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <RadioButtonIcon />
   */
  icon: a.node,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   * @deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputRef: oo,
  /**
   * Name attribute of the `input` element.
   */
  name: a.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: a.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: a.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    input: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   */
  value: a.any
});
const MS = we(
  ({ label: e = "", tooltip: t, name: n, options: r, optionLabelDirection: o = "end", value: i, onChange: s }) => /* @__PURE__ */ Se(sn, { gap: 0, children: [
    /* @__PURE__ */ N(Hi, { label: e, elementId: void 0, tooltip: t }),
    /* @__PURE__ */ N(sn, { gap: 0, children: r.map((l) => /* @__PURE__ */ N(
      Su,
      {
        labelsDirection: "row",
        startLabel: o === "start" ? l.label : "",
        endLabel: o === "end" ? l.label : "",
        isDisabled: l.isDisabled,
        renderElement: (c) => /* @__PURE__ */ N(
          _S,
          {
            id: c,
            name: n,
            value: l.value,
            checked: i === l.value,
            disabled: l.isDisabled,
            onChange: (u) => s(r.find(({ value: d }) => d === u.target.value)),
            sx: {
              py: "6px",
              px: 0,
              mr: o === "start" ? "2px" : "8px",
              ml: o === "end" ? "2px" : "8px"
            }
          }
        )
      },
      l.value
    )) })
  ] })
);
MS.displayName = "Radios";
function IB(e) {
  return Et("MuiSwitch", e);
}
const mn = kt("MuiSwitch", ["root", "edgeStart", "edgeEnd", "switchBase", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium", "checked", "disabled", "input", "thumb", "track"]), $B = (e) => {
  const {
    classes: t,
    edge: n,
    size: r,
    color: o,
    checked: i,
    disabled: s
  } = e, l = {
    root: ["root", n && `edge${Ee(n)}`, `size${Ee(r)}`],
    switchBase: ["switchBase", `color${Ee(o)}`, i && "checked", s && "disabled"],
    thumb: ["thumb"],
    track: ["track"],
    input: ["input"]
  }, c = Mt(l, IB, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...c
  };
}, PB = Me("span", {
  name: "MuiSwitch",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.edge && t[`edge${Ee(n.edge)}`], t[`size${Ee(n.size)}`]];
  }
})({
  display: "inline-flex",
  width: 34 + 12 * 2,
  height: 14 + 12 * 2,
  overflow: "hidden",
  padding: 12,
  boxSizing: "border-box",
  position: "relative",
  flexShrink: 0,
  zIndex: 0,
  // Reset the stacking context.
  verticalAlign: "middle",
  // For correct alignment with the text.
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [{
    props: {
      edge: "start"
    },
    style: {
      marginLeft: -8
    }
  }, {
    props: {
      edge: "end"
    },
    style: {
      marginRight: -8
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      width: 40,
      height: 24,
      padding: 7,
      [`& .${mn.thumb}`]: {
        width: 16,
        height: 16
      },
      [`& .${mn.switchBase}`]: {
        padding: 4,
        [`&.${mn.checked}`]: {
          transform: "translateX(16px)"
        }
      }
    }
  }]
}), _B = Me(wu, {
  name: "MuiSwitch",
  slot: "SwitchBase",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.switchBase, {
      [`& .${mn.input}`]: t.input
    }, n.color !== "default" && t[`color${Ee(n.color)}`]];
  }
})(et(({
  theme: e
}) => ({
  position: "absolute",
  top: 0,
  left: 0,
  zIndex: 1,
  // Render above the focus ripple.
  color: e.vars ? e.vars.palette.Switch.defaultColor : `${e.palette.mode === "light" ? e.palette.common.white : e.palette.grey[300]}`,
  transition: e.transitions.create(["left", "transform"], {
    duration: e.transitions.duration.shortest
  }),
  [`&.${mn.checked}`]: {
    transform: "translateX(20px)"
  },
  [`&.${mn.disabled}`]: {
    color: e.vars ? e.vars.palette.Switch.defaultDisabledColor : `${e.palette.mode === "light" ? e.palette.grey[100] : e.palette.grey[600]}`
  },
  [`&.${mn.checked} + .${mn.track}`]: {
    opacity: 0.5
  },
  [`&.${mn.disabled} + .${mn.track}`]: {
    opacity: e.vars ? e.vars.opacity.switchTrackDisabled : `${e.palette.mode === "light" ? 0.12 : 0.2}`
  },
  [`& .${mn.input}`]: {
    left: "-100%",
    width: "300%"
  }
})), et(({
  theme: e
}) => ({
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : rn(e.palette.action.active, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  variants: [...Object.entries(e.palette).filter(bn(["light"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${mn.checked}`]: {
        color: (e.vars || e).palette[t].main,
        "&:hover": {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : rn(e.palette[t].main, e.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        },
        [`&.${mn.disabled}`]: {
          color: e.vars ? e.vars.palette.Switch[`${t}DisabledColor`] : `${e.palette.mode === "light" ? os(e.palette[t].main, 0.62) : rs(e.palette[t].main, 0.55)}`
        }
      },
      [`&.${mn.checked} + .${mn.track}`]: {
        backgroundColor: (e.vars || e).palette[t].main
      }
    }
  }))]
}))), MB = Me("span", {
  name: "MuiSwitch",
  slot: "Track",
  overridesResolver: (e, t) => t.track
})(et(({
  theme: e
}) => ({
  height: "100%",
  width: "100%",
  borderRadius: 14 / 2,
  zIndex: -1,
  transition: e.transitions.create(["opacity", "background-color"], {
    duration: e.transitions.duration.shortest
  }),
  backgroundColor: e.vars ? e.vars.palette.common.onBackground : `${e.palette.mode === "light" ? e.palette.common.black : e.palette.common.white}`,
  opacity: e.vars ? e.vars.opacity.switchTrack : `${e.palette.mode === "light" ? 0.38 : 0.3}`
}))), AB = Me("span", {
  name: "MuiSwitch",
  slot: "Thumb",
  overridesResolver: (e, t) => t.thumb
})(et(({
  theme: e
}) => ({
  boxShadow: (e.vars || e).shadows[1],
  backgroundColor: "currentColor",
  width: 20,
  height: 20,
  borderRadius: "50%"
}))), AS = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiSwitch"
  }), {
    className: o,
    color: i = "primary",
    edge: s = !1,
    size: l = "medium",
    sx: c,
    slots: u = {},
    slotProps: d = {},
    ...f
  } = r, p = {
    ...r,
    color: i,
    edge: s,
    size: l
  }, h = $B(p), g = {
    slots: u,
    slotProps: d
  }, [m, b] = pt("root", {
    className: Oe(h.root, o),
    elementType: PB,
    externalForwardedProps: g,
    ownerState: p,
    additionalProps: {
      sx: c
    }
  }), [x, E] = pt("thumb", {
    className: h.thumb,
    elementType: AB,
    externalForwardedProps: g,
    ownerState: p
  }), v = /* @__PURE__ */ N(x, {
    ...E
  }), [w, S] = pt("track", {
    className: h.track,
    elementType: MB,
    externalForwardedProps: g,
    ownerState: p
  });
  return /* @__PURE__ */ Se(m, {
    ...b,
    children: [/* @__PURE__ */ N(_B, {
      type: "checkbox",
      icon: v,
      checkedIcon: v,
      ref: n,
      ownerState: p,
      ...f,
      classes: {
        ...h,
        root: h.switchBase
      },
      slots: {
        ...u.switchBase && {
          root: u.switchBase
        },
        ...u.input && {
          input: u.input
        }
      },
      slotProps: {
        ...d.switchBase && {
          root: typeof d.switchBase == "function" ? d.switchBase(p) : d.switchBase
        },
        ...d.input && {
          input: typeof d.input == "function" ? d.input(p) : d.input
        }
      }
    }), /* @__PURE__ */ N(w, {
      ...S
    })]
  });
});
process.env.NODE_ENV !== "production" && (AS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: a.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), a.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: a.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: a.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: a.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: a.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: a.node,
  /**
   * The id of the `input` element.
   */
  id: a.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: a.object,
  /**
   * Pass a ref to the `input` element.
   * @deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputRef: oo,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: a.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: a.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense switch styling.
   * @default 'medium'
   */
  size: a.oneOfType([a.oneOf(["medium", "small"]), a.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    input: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    switchBase: a.oneOfType([a.func, a.object]),
    thumb: a.oneOfType([a.func, a.object]),
    track: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    input: a.elementType,
    root: a.elementType,
    switchBase: a.elementType,
    thumb: a.elementType,
    track: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: a.any
});
const Vh = we(
  ({ value: e, onChange: t, startLabel: n, endLabel: r, labelsDirection: o = "row", isDisabled: i }) => {
    const s = Fe(
      (l) => /* @__PURE__ */ N(
        AS,
        {
          id: l,
          color: "primary",
          checked: e,
          disabled: i,
          onChange: (c) => t(c.target.checked),
          sx: {
            "& .MuiSwitch-track": {
              transition: "background-color 0s"
            }
          }
        }
      ),
      [e, t]
    );
    return n || r ? /* @__PURE__ */ N(
      Su,
      {
        labelsDirection: o,
        startLabel: n,
        endLabel: r,
        isDisabled: i,
        renderElement: s
      }
    ) : s();
  }
);
Vh.displayName = "Switch";
var qa = (e) => e.type === "checkbox", Ho = (e) => e instanceof Date, gn = (e) => e == null;
const DS = (e) => typeof e == "object";
var Ht = (e) => !gn(e) && !Array.isArray(e) && DS(e) && !Ho(e), BS = (e) => Ht(e) && e.target ? qa(e.target) ? e.target.checked : e.target.value : e, DB = (e) => e.substring(0, e.search(/\.\d+(\.|$)/)) || e, FS = (e, t) => e.has(DB(t)), BB = (e) => {
  const t = e.constructor && e.constructor.prototype;
  return Ht(t) && t.hasOwnProperty("isPrototypeOf");
}, jh = typeof window < "u" && typeof window.HTMLElement < "u" && typeof document < "u";
function _t(e) {
  let t;
  const n = Array.isArray(e), r = typeof FileList < "u" ? e instanceof FileList : !1;
  if (e instanceof Date)
    t = new Date(e);
  else if (e instanceof Set)
    t = new Set(e);
  else if (!(jh && (e instanceof Blob || r)) && (n || Ht(e)))
    if (t = n ? [] : {}, !n && !BB(e))
      t = e;
    else
      for (const o in e)
        e.hasOwnProperty(o) && (t[o] = _t(e[o]));
  else
    return e;
  return t;
}
var Ya = (e) => Array.isArray(e) ? e.filter(Boolean) : [], wt = (e) => e === void 0, xe = (e, t, n) => {
  if (!t || !Ht(e))
    return n;
  const r = Ya(t.split(/[,[\].]+?/)).reduce((o, i) => gn(o) ? o : o[i], e);
  return wt(r) || r === e ? wt(e[t]) ? n : e[t] : r;
}, Mn = (e) => typeof e == "boolean", Hh = (e) => /^\w*$/.test(e), LS = (e) => Ya(e.replace(/["|']|\]/g, "").split(/\.|\[/)), Je = (e, t, n) => {
  let r = -1;
  const o = Hh(t) ? [t] : LS(t), i = o.length, s = i - 1;
  for (; ++r < i; ) {
    const l = o[r];
    let c = n;
    if (r !== s) {
      const u = e[l];
      c = Ht(u) || Array.isArray(u) ? u : isNaN(+o[r + 1]) ? {} : [];
    }
    if (l === "__proto__" || l === "constructor" || l === "prototype")
      return;
    e[l] = c, e = e[l];
  }
};
const Oc = {
  BLUR: "blur",
  FOCUS_OUT: "focusout",
  CHANGE: "change"
}, Zn = {
  onBlur: "onBlur",
  onChange: "onChange",
  onSubmit: "onSubmit",
  onTouched: "onTouched",
  all: "all"
}, qr = {
  max: "max",
  min: "min",
  maxLength: "maxLength",
  minLength: "minLength",
  pattern: "pattern",
  required: "required",
  validate: "validate"
}, zS = Y.createContext(null), sr = () => Y.useContext(zS), FB = (e) => {
  const { children: t, ...n } = e;
  return Y.createElement(zS.Provider, { value: n }, t);
};
var VS = (e, t, n, r = !0) => {
  const o = {
    defaultValues: t._defaultValues
  };
  for (const i in e)
    Object.defineProperty(o, i, {
      get: () => {
        const s = i;
        return t._proxyFormState[s] !== Zn.all && (t._proxyFormState[s] = !r || Zn.all), n && (n[s] = !0), e[s];
      }
    });
  return o;
};
function LB(e) {
  const t = sr(), { control: n = t.control, disabled: r, name: o, exact: i } = e || {}, [s, l] = Y.useState(n._formState), c = Y.useRef({
    isDirty: !1,
    isLoading: !1,
    dirtyFields: !1,
    touchedFields: !1,
    validatingFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  }), u = Y.useRef(o);
  return u.current = o, Y.useEffect(() => n._subscribe({
    name: u.current,
    formState: c.current,
    exact: i,
    callback: (d) => {
      !r && l({
        ...n._formState,
        ...d
      });
    }
  }), [n, r, i]), Y.useEffect(() => {
    c.current.isValid && n._setValid(!0);
  }, [n]), Y.useMemo(() => VS(s, n, c.current, !1), [s, n]);
}
var Rr = (e) => typeof e == "string", jS = (e, t, n, r, o) => Rr(e) ? (r && t.watch.add(e), xe(n, e, o)) : Array.isArray(e) ? e.map((i) => (r && t.watch.add(i), xe(n, i))) : (r && (t.watchAll = !0), n);
function zB(e) {
  const t = sr(), { control: n = t.control, name: r, defaultValue: o, disabled: i, exact: s } = e || {}, l = Y.useRef(r), c = Y.useRef(o);
  l.current = r, Y.useEffect(() => n._subscribe({
    name: l.current,
    formState: {
      values: !0
    },
    exact: s,
    callback: (f) => !i && d(jS(l.current, n._names, f.values || n._formValues, !1, c.current))
  }), [n, i, s]);
  const [u, d] = Y.useState(n._getWatch(r, o));
  return Y.useEffect(() => n._removeUnmounted()), u;
}
function VB(e) {
  const t = sr(), { name: n, disabled: r, control: o = t.control, shouldUnregister: i } = e, s = FS(o._names.array, n), l = zB({
    control: o,
    name: n,
    defaultValue: xe(o._formValues, n, xe(o._defaultValues, n, e.defaultValue)),
    exact: !0
  }), c = LB({
    control: o,
    name: n,
    exact: !0
  }), u = Y.useRef(e), d = Y.useRef(o.register(n, {
    ...e.rules,
    value: l,
    ...Mn(e.disabled) ? { disabled: e.disabled } : {}
  })), f = Y.useMemo(() => Object.defineProperties({}, {
    invalid: {
      enumerable: !0,
      get: () => !!xe(c.errors, n)
    },
    isDirty: {
      enumerable: !0,
      get: () => !!xe(c.dirtyFields, n)
    },
    isTouched: {
      enumerable: !0,
      get: () => !!xe(c.touchedFields, n)
    },
    isValidating: {
      enumerable: !0,
      get: () => !!xe(c.validatingFields, n)
    },
    error: {
      enumerable: !0,
      get: () => xe(c.errors, n)
    }
  }), [c, n]), p = Y.useCallback((b) => d.current.onChange({
    target: {
      value: BS(b),
      name: n
    },
    type: Oc.CHANGE
  }), [n]), h = Y.useCallback(() => d.current.onBlur({
    target: {
      value: xe(o._formValues, n),
      name: n
    },
    type: Oc.BLUR
  }), [n, o._formValues]), g = Y.useCallback((b) => {
    const x = xe(o._fields, n);
    x && b && (x._f.ref = {
      focus: () => b.focus(),
      select: () => b.select(),
      setCustomValidity: (E) => b.setCustomValidity(E),
      reportValidity: () => b.reportValidity()
    });
  }, [o._fields, n]), m = Y.useMemo(() => ({
    name: n,
    value: l,
    ...Mn(r) || c.disabled ? { disabled: c.disabled || r } : {},
    onChange: p,
    onBlur: h,
    ref: g
  }), [n, r, c.disabled, p, h, g, l]);
  return Y.useEffect(() => {
    const b = o._options.shouldUnregister || i;
    o.register(n, {
      ...u.current.rules,
      ...Mn(u.current.disabled) ? { disabled: u.current.disabled } : {}
    });
    const x = (E, v) => {
      const w = xe(o._fields, E);
      w && w._f && (w._f.mount = v);
    };
    if (x(n, !0), b) {
      const E = _t(xe(o._options.defaultValues, n));
      Je(o._defaultValues, n, E), wt(xe(o._formValues, n)) && Je(o._formValues, n, E);
    }
    return !s && o.register(n), () => {
      (s ? b && !o._state.action : b) ? o.unregister(n) : x(n, !1);
    };
  }, [n, o, s, i]), Y.useEffect(() => {
    o._setDisabledField({
      disabled: r,
      name: n
    });
  }, [r, n, o]), Y.useMemo(() => ({
    field: m,
    formState: c,
    fieldState: f
  }), [m, c, f]);
}
const oi = (e) => e.render(VB(e));
var HS = (e, t, n, r, o) => t ? {
  ...n[e],
  types: {
    ...n[e] && n[e].types ? n[e].types : {},
    [r]: o || !0
  }
} : {}, Tn = (e) => Array.isArray(e) ? e : [e], ob = () => {
  let e = [];
  return {
    get observers() {
      return e;
    },
    next: (o) => {
      for (const i of e)
        i.next && i.next(o);
    },
    subscribe: (o) => (e.push(o), {
      unsubscribe: () => {
        e = e.filter((i) => i !== o);
      }
    }),
    unsubscribe: () => {
      e = [];
    }
  };
}, Kf = (e) => gn(e) || !DS(e);
function go(e, t) {
  if (Kf(e) || Kf(t))
    return e === t;
  if (Ho(e) && Ho(t))
    return e.getTime() === t.getTime();
  const n = Object.keys(e), r = Object.keys(t);
  if (n.length !== r.length)
    return !1;
  for (const o of n) {
    const i = e[o];
    if (!r.includes(o))
      return !1;
    if (o !== "ref") {
      const s = t[o];
      if (Ho(i) && Ho(s) || Ht(i) && Ht(s) || Array.isArray(i) && Array.isArray(s) ? !go(i, s) : i !== s)
        return !1;
    }
  }
  return !0;
}
var cn = (e) => Ht(e) && !Object.keys(e).length, Wh = (e) => e.type === "file", lr = (e) => typeof e == "function", Rc = (e) => {
  if (!jh)
    return !1;
  const t = e ? e.ownerDocument : 0;
  return e instanceof (t && t.defaultView ? t.defaultView.HTMLElement : HTMLElement);
}, WS = (e) => e.type === "select-multiple", Uh = (e) => e.type === "radio", jB = (e) => Uh(e) || qa(e), Fd = (e) => Rc(e) && e.isConnected;
function HB(e, t) {
  const n = t.slice(0, -1).length;
  let r = 0;
  for (; r < n; )
    e = wt(e) ? r++ : e[t[r++]];
  return e;
}
function WB(e) {
  for (const t in e)
    if (e.hasOwnProperty(t) && !wt(e[t]))
      return !1;
  return !0;
}
function Yt(e, t) {
  const n = Array.isArray(t) ? t : Hh(t) ? [t] : LS(t), r = n.length === 1 ? e : HB(e, n), o = n.length - 1, i = n[o];
  return r && delete r[i], o !== 0 && (Ht(r) && cn(r) || Array.isArray(r) && WB(r)) && Yt(e, n.slice(0, -1)), e;
}
var US = (e) => {
  for (const t in e)
    if (lr(e[t]))
      return !0;
  return !1;
};
function kc(e, t = {}) {
  const n = Array.isArray(e);
  if (Ht(e) || n)
    for (const r in e)
      Array.isArray(e[r]) || Ht(e[r]) && !US(e[r]) ? (t[r] = Array.isArray(e[r]) ? [] : {}, kc(e[r], t[r])) : gn(e[r]) || (t[r] = !0);
  return t;
}
function qS(e, t, n) {
  const r = Array.isArray(e);
  if (Ht(e) || r)
    for (const o in e)
      Array.isArray(e[o]) || Ht(e[o]) && !US(e[o]) ? wt(t) || Kf(n[o]) ? n[o] = Array.isArray(e[o]) ? kc(e[o], []) : { ...kc(e[o]) } : qS(e[o], gn(t) ? {} : t[o], n[o]) : n[o] = !go(e[o], t[o]);
  return n;
}
var Cs = (e, t) => qS(e, t, kc(t));
const ib = {
  value: !1,
  isValid: !1
}, sb = { value: !0, isValid: !0 };
var YS = (e) => {
  if (Array.isArray(e)) {
    if (e.length > 1) {
      const t = e.filter((n) => n && n.checked && !n.disabled).map((n) => n.value);
      return { value: t, isValid: !!t.length };
    }
    return e[0].checked && !e[0].disabled ? (
      // @ts-expect-error expected to work in the browser
      e[0].attributes && !wt(e[0].attributes.value) ? wt(e[0].value) || e[0].value === "" ? sb : { value: e[0].value, isValid: !0 } : sb
    ) : ib;
  }
  return ib;
}, GS = (e, { valueAsNumber: t, valueAsDate: n, setValueAs: r }) => wt(e) ? e : t ? e === "" ? NaN : e && +e : n && Rr(e) ? new Date(e) : r ? r(e) : e;
const ab = {
  isValid: !1,
  value: null
};
var KS = (e) => Array.isArray(e) ? e.reduce((t, n) => n && n.checked && !n.disabled ? {
  isValid: !0,
  value: n.value
} : t, ab) : ab;
function lb(e) {
  const t = e.ref;
  return Wh(t) ? t.files : Uh(t) ? KS(e.refs).value : WS(t) ? [...t.selectedOptions].map(({ value: n }) => n) : qa(t) ? YS(e.refs).value : GS(wt(t.value) ? e.ref.value : t.value, e);
}
var UB = (e, t, n, r) => {
  const o = {};
  for (const i of e) {
    const s = xe(t, i);
    s && Je(o, i, s._f);
  }
  return {
    criteriaMode: n,
    names: [...e],
    fields: o,
    shouldUseNativeValidation: r
  };
}, Nc = (e) => e instanceof RegExp, Os = (e) => wt(e) ? e : Nc(e) ? e.source : Ht(e) ? Nc(e.value) ? e.value.source : e.value : e, Ei = (e) => ({
  isOnSubmit: !e || e === Zn.onSubmit,
  isOnBlur: e === Zn.onBlur,
  isOnChange: e === Zn.onChange,
  isOnAll: e === Zn.all,
  isOnTouch: e === Zn.onTouched
});
const cb = "AsyncFunction";
var qB = (e) => !!e && !!e.validate && !!(lr(e.validate) && e.validate.constructor.name === cb || Ht(e.validate) && Object.values(e.validate).find((t) => t.constructor.name === cb)), YB = (e) => e.mount && (e.required || e.min || e.max || e.maxLength || e.minLength || e.pattern || e.validate), Xf = (e, t, n) => !n && (t.watchAll || t.watch.has(e) || [...t.watch].some((r) => e.startsWith(r) && /^\.\w+/.test(e.slice(r.length))));
const Ii = (e, t, n, r) => {
  for (const o of n || Object.keys(e)) {
    const i = xe(e, o);
    if (i) {
      const { _f: s, ...l } = i;
      if (s) {
        if (s.refs && s.refs[0] && t(s.refs[0], o) && !r)
          return !0;
        if (s.ref && t(s.ref, s.name) && !r)
          return !0;
        if (Ii(l, t))
          break;
      } else if (Ht(l) && Ii(l, t))
        break;
    }
  }
};
function ub(e, t, n) {
  const r = xe(e, n);
  if (r || Hh(n))
    return {
      error: r,
      name: n
    };
  const o = n.split(".");
  for (; o.length; ) {
    const i = o.join("."), s = xe(t, i), l = xe(e, i);
    if (s && !Array.isArray(s) && n !== i)
      return { name: n };
    if (l && l.type)
      return {
        name: i,
        error: l
      };
    o.pop();
  }
  return {
    name: n
  };
}
var GB = (e, t, n, r) => {
  n(e);
  const { name: o, ...i } = e;
  return cn(i) || Object.keys(i).length >= Object.keys(t).length || Object.keys(i).find((s) => t[s] === (!r || Zn.all));
}, KB = (e, t, n) => !e || !t || e === t || Tn(e).some((r) => r && (n ? r === t : r.startsWith(t) || t.startsWith(r))), XB = (e, t, n, r, o) => o.isOnAll ? !1 : !n && o.isOnTouch ? !(t || e) : (n ? r.isOnBlur : o.isOnBlur) ? !e : (n ? r.isOnChange : o.isOnChange) ? e : !0, ZB = (e, t) => !Ya(xe(e, t)).length && Yt(e, t), XS = (e, t, n) => {
  const r = Tn(xe(e, n));
  return Je(r, "root", t[n]), Je(e, n, r), e;
}, Kl = (e) => Rr(e);
function db(e, t, n = "validate") {
  if (Kl(e) || Array.isArray(e) && e.every(Kl) || Mn(e) && !e)
    return {
      type: n,
      message: Kl(e) ? e : "",
      ref: t
    };
}
var yi = (e) => Ht(e) && !Nc(e) ? e : {
  value: e,
  message: ""
}, Zf = async (e, t, n, r, o, i) => {
  const { ref: s, refs: l, required: c, maxLength: u, minLength: d, min: f, max: p, pattern: h, validate: g, name: m, valueAsNumber: b, mount: x } = e._f, E = xe(n, m);
  if (!x || t.has(m))
    return {};
  const v = l ? l[0] : s, w = ($) => {
    o && v.reportValidity && (v.setCustomValidity(Mn($) ? "" : $ || ""), v.reportValidity());
  }, S = {}, T = Uh(s), C = qa(s), k = T || C, P = (b || Wh(s)) && wt(s.value) && wt(E) || Rc(s) && s.value === "" || E === "" || Array.isArray(E) && !E.length, y = HS.bind(null, m, r, S), R = ($, A, O, _ = qr.maxLength, I = qr.minLength) => {
    const D = $ ? A : O;
    S[m] = {
      type: $ ? _ : I,
      message: D,
      ref: s,
      ...y($ ? _ : I, D)
    };
  };
  if (i ? !Array.isArray(E) || !E.length : c && (!k && (P || gn(E)) || Mn(E) && !E || C && !YS(l).isValid || T && !KS(l).isValid)) {
    const { value: $, message: A } = Kl(c) ? { value: !!c, message: c } : yi(c);
    if ($ && (S[m] = {
      type: qr.required,
      message: A,
      ref: v,
      ...y(qr.required, A)
    }, !r))
      return w(A), S;
  }
  if (!P && (!gn(f) || !gn(p))) {
    let $, A;
    const O = yi(p), _ = yi(f);
    if (!gn(E) && !isNaN(E)) {
      const I = s.valueAsNumber || E && +E;
      gn(O.value) || ($ = I > O.value), gn(_.value) || (A = I < _.value);
    } else {
      const I = s.valueAsDate || new Date(E), D = (F) => /* @__PURE__ */ new Date((/* @__PURE__ */ new Date()).toDateString() + " " + F), z = s.type == "time", B = s.type == "week";
      Rr(O.value) && E && ($ = z ? D(E) > D(O.value) : B ? E > O.value : I > new Date(O.value)), Rr(_.value) && E && (A = z ? D(E) < D(_.value) : B ? E < _.value : I < new Date(_.value));
    }
    if (($ || A) && (R(!!$, O.message, _.message, qr.max, qr.min), !r))
      return w(S[m].message), S;
  }
  if ((u || d) && !P && (Rr(E) || i && Array.isArray(E))) {
    const $ = yi(u), A = yi(d), O = !gn($.value) && E.length > +$.value, _ = !gn(A.value) && E.length < +A.value;
    if ((O || _) && (R(O, $.message, A.message), !r))
      return w(S[m].message), S;
  }
  if (h && !P && Rr(E)) {
    const { value: $, message: A } = yi(h);
    if (Nc($) && !E.match($) && (S[m] = {
      type: qr.pattern,
      message: A,
      ref: s,
      ...y(qr.pattern, A)
    }, !r))
      return w(A), S;
  }
  if (g) {
    if (lr(g)) {
      const $ = await g(E, n), A = db($, v);
      if (A && (S[m] = {
        ...A,
        ...y(qr.validate, A.message)
      }, !r))
        return w(A.message), S;
    } else if (Ht(g)) {
      let $ = {};
      for (const A in g) {
        if (!cn($) && !r)
          break;
        const O = db(await g[A](E, n), v, A);
        O && ($ = {
          ...O,
          ...y(A, O.message)
        }, w(O.message), r && (S[m] = $));
      }
      if (!cn($) && (S[m] = {
        ref: v,
        ...$
      }, !r))
        return S;
    }
  }
  return w(!0), S;
};
const QB = {
  mode: Zn.onSubmit,
  reValidateMode: Zn.onChange,
  shouldFocusError: !0
};
function JB(e = {}) {
  let t = {
    ...QB,
    ...e
  }, n = {
    submitCount: 0,
    isDirty: !1,
    isLoading: lr(t.defaultValues),
    isValidating: !1,
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    touchedFields: {},
    dirtyFields: {},
    validatingFields: {},
    errors: t.errors || {},
    disabled: t.disabled || !1
  };
  const r = {};
  let o = Ht(t.defaultValues) || Ht(t.values) ? _t(t.values || t.defaultValues) || {} : {}, i = t.shouldUnregister ? {} : _t(o), s = {
    action: !1,
    mount: !1,
    watch: !1
  }, l = {
    mount: /* @__PURE__ */ new Set(),
    disabled: /* @__PURE__ */ new Set(),
    unMount: /* @__PURE__ */ new Set(),
    array: /* @__PURE__ */ new Set(),
    watch: /* @__PURE__ */ new Set()
  }, c, u = 0;
  const d = {
    isDirty: !1,
    dirtyFields: !1,
    validatingFields: !1,
    touchedFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  };
  let f = {
    ...d
  };
  const p = {
    array: ob(),
    state: ob()
  }, h = Ei(t.mode), g = Ei(t.reValidateMode), m = t.criteriaMode === Zn.all, b = (V) => (J) => {
    clearTimeout(u), u = setTimeout(V, J);
  }, x = async (V) => {
    if (!t.disabled && (d.isValid || f.isValid || V)) {
      const J = t.resolver ? cn((await P()).errors) : await R(r, !0);
      J !== n.isValid && p.state.next({
        isValid: J
      });
    }
  }, E = (V, J) => {
    !t.disabled && (d.isValidating || d.validatingFields || f.isValidating || f.validatingFields) && ((V || Array.from(l.mount)).forEach((ie) => {
      ie && (J ? Je(n.validatingFields, ie, J) : Yt(n.validatingFields, ie));
    }), p.state.next({
      validatingFields: n.validatingFields,
      isValidating: !cn(n.validatingFields)
    }));
  }, v = (V, J = [], ie, X, H = !0, G = !0) => {
    if (X && ie && !t.disabled) {
      if (s.action = !0, G && Array.isArray(xe(r, V))) {
        const re = ie(xe(r, V), X.argA, X.argB);
        H && Je(r, V, re);
      }
      if (G && Array.isArray(xe(n.errors, V))) {
        const re = ie(xe(n.errors, V), X.argA, X.argB);
        H && Je(n.errors, V, re), ZB(n.errors, V);
      }
      if ((d.touchedFields || f.touchedFields) && G && Array.isArray(xe(n.touchedFields, V))) {
        const re = ie(xe(n.touchedFields, V), X.argA, X.argB);
        H && Je(n.touchedFields, V, re);
      }
      (d.dirtyFields || f.dirtyFields) && (n.dirtyFields = Cs(o, i)), p.state.next({
        name: V,
        isDirty: A(V, J),
        dirtyFields: n.dirtyFields,
        errors: n.errors,
        isValid: n.isValid
      });
    } else
      Je(i, V, J);
  }, w = (V, J) => {
    Je(n.errors, V, J), p.state.next({
      errors: n.errors
    });
  }, S = (V) => {
    n.errors = V, p.state.next({
      errors: n.errors,
      isValid: !1
    });
  }, T = (V, J, ie, X) => {
    const H = xe(r, V);
    if (H) {
      const G = xe(i, V, wt(ie) ? xe(o, V) : ie);
      wt(G) || X && X.defaultChecked || J ? Je(i, V, J ? G : lb(H._f)) : I(V, G), s.mount && x();
    }
  }, C = (V, J, ie, X, H) => {
    let G = !1, re = !1;
    const he = {
      name: V
    };
    if (!t.disabled) {
      if (!ie || X) {
        (d.isDirty || f.isDirty) && (re = n.isDirty, n.isDirty = he.isDirty = A(), G = re !== he.isDirty);
        const me = go(xe(o, V), J);
        re = !!xe(n.dirtyFields, V), me ? Yt(n.dirtyFields, V) : Je(n.dirtyFields, V, !0), he.dirtyFields = n.dirtyFields, G = G || (d.dirtyFields || f.dirtyFields) && re !== !me;
      }
      if (ie) {
        const me = xe(n.touchedFields, V);
        me || (Je(n.touchedFields, V, ie), he.touchedFields = n.touchedFields, G = G || (d.touchedFields || f.touchedFields) && me !== ie);
      }
      G && H && p.state.next(he);
    }
    return G ? he : {};
  }, k = (V, J, ie, X) => {
    const H = xe(n.errors, V), G = (d.isValid || f.isValid) && Mn(J) && n.isValid !== J;
    if (t.delayError && ie ? (c = b(() => w(V, ie)), c(t.delayError)) : (clearTimeout(u), c = null, ie ? Je(n.errors, V, ie) : Yt(n.errors, V)), (ie ? !go(H, ie) : H) || !cn(X) || G) {
      const re = {
        ...X,
        ...G && Mn(J) ? { isValid: J } : {},
        errors: n.errors,
        name: V
      };
      n = {
        ...n,
        ...re
      }, p.state.next(re);
    }
  }, P = async (V) => {
    E(V, !0);
    const J = await t.resolver(i, t.context, UB(V || l.mount, r, t.criteriaMode, t.shouldUseNativeValidation));
    return E(V), J;
  }, y = async (V) => {
    const { errors: J } = await P(V);
    if (V)
      for (const ie of V) {
        const X = xe(J, ie);
        X ? Je(n.errors, ie, X) : Yt(n.errors, ie);
      }
    else
      n.errors = J;
    return J;
  }, R = async (V, J, ie = {
    valid: !0
  }) => {
    for (const X in V) {
      const H = V[X];
      if (H) {
        const { _f: G, ...re } = H;
        if (G) {
          const he = l.array.has(G.name), me = H._f && qB(H._f);
          me && d.validatingFields && E([X], !0);
          const le = await Zf(H, l.disabled, i, m, t.shouldUseNativeValidation && !J, he);
          if (me && d.validatingFields && E([X]), le[G.name] && (ie.valid = !1, J))
            break;
          !J && (xe(le, G.name) ? he ? XS(n.errors, le, G.name) : Je(n.errors, G.name, le[G.name]) : Yt(n.errors, G.name));
        }
        !cn(re) && await R(re, J, ie);
      }
    }
    return ie.valid;
  }, $ = () => {
    for (const V of l.unMount) {
      const J = xe(r, V);
      J && (J._f.refs ? J._f.refs.every((ie) => !Fd(ie)) : !Fd(J._f.ref)) && oe(V);
    }
    l.unMount = /* @__PURE__ */ new Set();
  }, A = (V, J) => !t.disabled && (V && J && Je(i, V, J), !go(W(), o)), O = (V, J, ie) => jS(V, l, {
    ...s.mount ? i : wt(J) ? o : Rr(V) ? { [V]: J } : J
  }, ie, J), _ = (V) => Ya(xe(s.mount ? i : o, V, t.shouldUnregister ? xe(o, V, []) : [])), I = (V, J, ie = {}) => {
    const X = xe(r, V);
    let H = J;
    if (X) {
      const G = X._f;
      G && (!G.disabled && Je(i, V, GS(J, G)), H = Rc(G.ref) && gn(J) ? "" : J, WS(G.ref) ? [...G.ref.options].forEach((re) => re.selected = H.includes(re.value)) : G.refs ? qa(G.ref) ? G.refs.length > 1 ? G.refs.forEach((re) => (!re.defaultChecked || !re.disabled) && (re.checked = Array.isArray(H) ? !!H.find((he) => he === re.value) : H === re.value)) : G.refs[0] && (G.refs[0].checked = !!H) : G.refs.forEach((re) => re.checked = re.value === H) : Wh(G.ref) ? G.ref.value = "" : (G.ref.value = H, G.ref.type || p.state.next({
        name: V,
        values: _t(i)
      })));
    }
    (ie.shouldDirty || ie.shouldTouch) && C(V, H, ie.shouldTouch, ie.shouldDirty, !0), ie.shouldValidate && L(V);
  }, D = (V, J, ie) => {
    for (const X in J) {
      const H = J[X], G = `${V}.${X}`, re = xe(r, G);
      (l.array.has(V) || Ht(H) || re && !re._f) && !Ho(H) ? D(G, H, ie) : I(G, H, ie);
    }
  }, z = (V, J, ie = {}) => {
    const X = xe(r, V), H = l.array.has(V), G = _t(J);
    Je(i, V, G), H ? (p.array.next({
      name: V,
      values: _t(i)
    }), (d.isDirty || d.dirtyFields || f.isDirty || f.dirtyFields) && ie.shouldDirty && p.state.next({
      name: V,
      dirtyFields: Cs(o, i),
      isDirty: A(V, G)
    })) : X && !X._f && !gn(G) ? D(V, G, ie) : I(V, G, ie), Xf(V, l) && p.state.next({ ...n }), p.state.next({
      name: s.mount ? V : void 0,
      values: _t(i)
    });
  }, B = async (V) => {
    s.mount = !0;
    const J = V.target;
    let ie = J.name, X = !0;
    const H = xe(r, ie), G = (re) => {
      X = Number.isNaN(re) || Ho(re) && isNaN(re.getTime()) || go(re, xe(i, ie, re));
    };
    if (H) {
      let re, he;
      const me = J.type ? lb(H._f) : BS(V), le = V.type === Oc.BLUR || V.type === Oc.FOCUS_OUT, se = !YB(H._f) && !t.resolver && !xe(n.errors, ie) && !H._f.deps || XB(le, xe(n.touchedFields, ie), n.isSubmitted, g, h), ae = Xf(ie, l, le);
      Je(i, ie, me), le ? (H._f.onBlur && H._f.onBlur(V), c && c(0)) : H._f.onChange && H._f.onChange(V);
      const ge = C(ie, me, le), Ce = !cn(ge) || ae;
      if (!le && p.state.next({
        name: ie,
        type: V.type,
        values: _t(i)
      }), se)
        return (d.isValid || f.isValid) && (t.mode === "onBlur" ? le && x() : le || x()), Ce && p.state.next({ name: ie, ...ae ? {} : ge });
      if (!le && ae && p.state.next({ ...n }), t.resolver) {
        const { errors: ue } = await P([ie]);
        if (G(me), X) {
          const Te = ub(n.errors, r, ie), Be = ub(ue, r, Te.name || ie);
          re = Be.error, ie = Be.name, he = cn(ue);
        }
      } else
        E([ie], !0), re = (await Zf(H, l.disabled, i, m, t.shouldUseNativeValidation))[ie], E([ie]), G(me), X && (re ? he = !1 : (d.isValid || f.isValid) && (he = await R(r, !0)));
      X && (H._f.deps && L(H._f.deps), k(ie, he, re, ge));
    }
  }, F = (V, J) => {
    if (xe(n.errors, J) && V.focus)
      return V.focus(), 1;
  }, L = async (V, J = {}) => {
    let ie, X;
    const H = Tn(V);
    if (t.resolver) {
      const G = await y(wt(V) ? V : H);
      ie = cn(G), X = V ? !H.some((re) => xe(G, re)) : ie;
    } else V ? (X = (await Promise.all(H.map(async (G) => {
      const re = xe(r, G);
      return await R(re && re._f ? { [G]: re } : re);
    }))).every(Boolean), !(!X && !n.isValid) && x()) : X = ie = await R(r);
    return p.state.next({
      ...!Rr(V) || (d.isValid || f.isValid) && ie !== n.isValid ? {} : { name: V },
      ...t.resolver || !V ? { isValid: ie } : {},
      errors: n.errors
    }), J.shouldFocus && !X && Ii(r, F, V ? H : l.mount), X;
  }, W = (V) => {
    const J = {
      ...s.mount ? i : o
    };
    return wt(V) ? J : Rr(V) ? xe(J, V) : V.map((ie) => xe(J, ie));
  }, U = (V, J) => ({
    invalid: !!xe((J || n).errors, V),
    isDirty: !!xe((J || n).dirtyFields, V),
    error: xe((J || n).errors, V),
    isValidating: !!xe(n.validatingFields, V),
    isTouched: !!xe((J || n).touchedFields, V)
  }), Z = (V) => {
    V && Tn(V).forEach((J) => Yt(n.errors, J)), p.state.next({
      errors: V ? n.errors : {}
    });
  }, Q = (V, J, ie) => {
    const X = (xe(r, V, { _f: {} })._f || {}).ref, H = xe(n.errors, V) || {}, { ref: G, message: re, type: he, ...me } = H;
    Je(n.errors, V, {
      ...me,
      ...J,
      ref: X
    }), p.state.next({
      name: V,
      errors: n.errors,
      isValid: !1
    }), ie && ie.shouldFocus && X && X.focus && X.focus();
  }, ee = (V, J) => lr(V) ? p.state.subscribe({
    next: (ie) => V(O(void 0, J), ie)
  }) : O(V, J, !0), te = (V) => p.state.subscribe({
    next: (J) => {
      KB(V.name, J.name, V.exact) && GB(J, V.formState || d, Ne, V.reRenderRoot) && V.callback({
        values: { ...i },
        ...n,
        ...J
      });
    }
  }).unsubscribe, q = (V) => (s.mount = !0, f = {
    ...f,
    ...V.formState
  }, te({
    ...V,
    formState: f
  })), oe = (V, J = {}) => {
    for (const ie of V ? Tn(V) : l.mount)
      l.mount.delete(ie), l.array.delete(ie), J.keepValue || (Yt(r, ie), Yt(i, ie)), !J.keepError && Yt(n.errors, ie), !J.keepDirty && Yt(n.dirtyFields, ie), !J.keepTouched && Yt(n.touchedFields, ie), !J.keepIsValidating && Yt(n.validatingFields, ie), !t.shouldUnregister && !J.keepDefaultValue && Yt(o, ie);
    p.state.next({
      values: _t(i)
    }), p.state.next({
      ...n,
      ...J.keepDirty ? { isDirty: A() } : {}
    }), !J.keepIsValid && x();
  }, K = ({ disabled: V, name: J }) => {
    (Mn(V) && s.mount || V || l.disabled.has(J)) && (V ? l.disabled.add(J) : l.disabled.delete(J));
  }, ne = (V, J = {}) => {
    let ie = xe(r, V);
    const X = Mn(J.disabled) || Mn(t.disabled);
    return Je(r, V, {
      ...ie || {},
      _f: {
        ...ie && ie._f ? ie._f : { ref: { name: V } },
        name: V,
        mount: !0,
        ...J
      }
    }), l.mount.add(V), ie ? K({
      disabled: Mn(J.disabled) ? J.disabled : t.disabled,
      name: V
    }) : T(V, !0, J.value), {
      ...X ? { disabled: J.disabled || t.disabled } : {},
      ...t.progressive ? {
        required: !!J.required,
        min: Os(J.min),
        max: Os(J.max),
        minLength: Os(J.minLength),
        maxLength: Os(J.maxLength),
        pattern: Os(J.pattern)
      } : {},
      name: V,
      onChange: B,
      onBlur: B,
      ref: (H) => {
        if (H) {
          ne(V, J), ie = xe(r, V);
          const G = wt(H.value) && H.querySelectorAll && H.querySelectorAll("input,select,textarea")[0] || H, re = jB(G), he = ie._f.refs || [];
          if (re ? he.find((me) => me === G) : G === ie._f.ref)
            return;
          Je(r, V, {
            _f: {
              ...ie._f,
              ...re ? {
                refs: [
                  ...he.filter(Fd),
                  G,
                  ...Array.isArray(xe(o, V)) ? [{}] : []
                ],
                ref: { type: G.type, name: V }
              } : { ref: G }
            }
          }), T(V, !1, void 0, G);
        } else
          ie = xe(r, V, {}), ie._f && (ie._f.mount = !1), (t.shouldUnregister || J.shouldUnregister) && !(FS(l.array, V) && s.action) && l.unMount.add(V);
      }
    };
  }, j = () => t.shouldFocusError && Ii(r, F, l.mount), pe = (V) => {
    Mn(V) && (p.state.next({ disabled: V }), Ii(r, (J, ie) => {
      const X = xe(r, ie);
      X && (J.disabled = X._f.disabled || V, Array.isArray(X._f.refs) && X._f.refs.forEach((H) => {
        H.disabled = X._f.disabled || V;
      }));
    }, 0, !1));
  }, ce = (V, J) => async (ie) => {
    let X;
    ie && (ie.preventDefault && ie.preventDefault(), ie.persist && ie.persist());
    let H = _t(i);
    if (p.state.next({
      isSubmitting: !0
    }), t.resolver) {
      const { errors: G, values: re } = await P();
      n.errors = G, H = re;
    } else
      await R(r);
    if (l.disabled.size)
      for (const G of l.disabled)
        Je(H, G, void 0);
    if (Yt(n.errors, "root"), cn(n.errors)) {
      p.state.next({
        errors: {}
      });
      try {
        await V(H, ie);
      } catch (G) {
        X = G;
      }
    } else
      J && await J({ ...n.errors }, ie), j(), setTimeout(j);
    if (p.state.next({
      isSubmitted: !0,
      isSubmitting: !1,
      isSubmitSuccessful: cn(n.errors) && !X,
      submitCount: n.submitCount + 1,
      errors: n.errors
    }), X)
      throw X;
  }, be = (V, J = {}) => {
    xe(r, V) && (wt(J.defaultValue) ? z(V, _t(xe(o, V))) : (z(V, J.defaultValue), Je(o, V, _t(J.defaultValue))), J.keepTouched || Yt(n.touchedFields, V), J.keepDirty || (Yt(n.dirtyFields, V), n.isDirty = J.defaultValue ? A(V, _t(xe(o, V))) : A()), J.keepError || (Yt(n.errors, V), d.isValid && x()), p.state.next({ ...n }));
  }, Ie = (V, J = {}) => {
    const ie = V ? _t(V) : o, X = _t(ie), H = cn(V), G = H ? o : X;
    if (J.keepDefaultValues || (o = ie), !J.keepValues) {
      if (J.keepDirtyValues) {
        const re = /* @__PURE__ */ new Set([
          ...l.mount,
          ...Object.keys(Cs(o, i))
        ]);
        for (const he of Array.from(re))
          xe(n.dirtyFields, he) ? Je(G, he, xe(i, he)) : z(he, xe(G, he));
      } else {
        if (jh && wt(V))
          for (const re of l.mount) {
            const he = xe(r, re);
            if (he && he._f) {
              const me = Array.isArray(he._f.refs) ? he._f.refs[0] : he._f.ref;
              if (Rc(me)) {
                const le = me.closest("form");
                if (le) {
                  le.reset();
                  break;
                }
              }
            }
          }
        for (const re of l.mount)
          z(re, xe(G, re));
      }
      i = _t(G), p.array.next({
        values: { ...G }
      }), p.state.next({
        values: { ...G }
      });
    }
    l = {
      mount: J.keepDirtyValues ? l.mount : /* @__PURE__ */ new Set(),
      unMount: /* @__PURE__ */ new Set(),
      array: /* @__PURE__ */ new Set(),
      disabled: /* @__PURE__ */ new Set(),
      watch: /* @__PURE__ */ new Set(),
      watchAll: !1,
      focus: ""
    }, s.mount = !d.isValid || !!J.keepIsValid || !!J.keepDirtyValues, s.watch = !!t.shouldUnregister, p.state.next({
      submitCount: J.keepSubmitCount ? n.submitCount : 0,
      isDirty: H ? !1 : J.keepDirty ? n.isDirty : !!(J.keepDefaultValues && !go(V, o)),
      isSubmitted: J.keepIsSubmitted ? n.isSubmitted : !1,
      dirtyFields: H ? {} : J.keepDirtyValues ? J.keepDefaultValues && i ? Cs(o, i) : n.dirtyFields : J.keepDefaultValues && V ? Cs(o, V) : J.keepDirty ? n.dirtyFields : {},
      touchedFields: J.keepTouched ? n.touchedFields : {},
      errors: J.keepErrors ? n.errors : {},
      isSubmitSuccessful: J.keepIsSubmitSuccessful ? n.isSubmitSuccessful : !1,
      isSubmitting: !1
    });
  }, _e = (V, J) => Ie(lr(V) ? V(i) : V, J), $e = (V, J = {}) => {
    const ie = xe(r, V), X = ie && ie._f;
    if (X) {
      const H = X.refs ? X.refs[0] : X.ref;
      H.focus && (H.focus(), J.shouldSelect && lr(H.select) && H.select());
    }
  }, Ne = (V) => {
    n = {
      ...n,
      ...V
    };
  }, Re = {
    control: {
      register: ne,
      unregister: oe,
      getFieldState: U,
      handleSubmit: ce,
      setError: Q,
      _subscribe: te,
      _runSchema: P,
      _getWatch: O,
      _getDirty: A,
      _setValid: x,
      _setFieldArray: v,
      _setDisabledField: K,
      _setErrors: S,
      _getFieldArray: _,
      _reset: Ie,
      _resetDefaultValues: () => lr(t.defaultValues) && t.defaultValues().then((V) => {
        _e(V, t.resetOptions), p.state.next({
          isLoading: !1
        });
      }),
      _removeUnmounted: $,
      _disableForm: pe,
      _subjects: p,
      _proxyFormState: d,
      get _fields() {
        return r;
      },
      get _formValues() {
        return i;
      },
      get _state() {
        return s;
      },
      set _state(V) {
        s = V;
      },
      get _defaultValues() {
        return o;
      },
      get _names() {
        return l;
      },
      set _names(V) {
        l = V;
      },
      get _formState() {
        return n;
      },
      get _options() {
        return t;
      },
      set _options(V) {
        t = {
          ...t,
          ...V
        };
      }
    },
    subscribe: q,
    trigger: L,
    register: ne,
    handleSubmit: ce,
    watch: ee,
    setValue: z,
    getValues: W,
    reset: _e,
    resetField: be,
    clearErrors: Z,
    unregister: oe,
    setError: Q,
    setFocus: $e,
    getFieldState: U
  };
  return {
    ...Re,
    formControl: Re
  };
}
var fo = () => {
  const e = typeof performance > "u" ? Date.now() : performance.now() * 1e3;
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (t) => {
    const n = (Math.random() * 16 + e) % 16 | 0;
    return (t == "x" ? n : n & 3 | 8).toString(16);
  });
}, Ld = (e, t, n = {}) => n.shouldFocus || wt(n.shouldFocus) ? n.focusName || `${e}.${wt(n.focusIndex) ? t : n.focusIndex}.` : "", zd = (e, t) => [
  ...e,
  ...Tn(t)
], Vd = (e) => Array.isArray(e) ? e.map(() => {
}) : void 0;
function jd(e, t, n) {
  return [
    ...e.slice(0, t),
    ...Tn(n),
    ...e.slice(t)
  ];
}
var Hd = (e, t, n) => Array.isArray(e) ? (wt(e[n]) && (e[n] = void 0), e.splice(n, 0, e.splice(t, 1)[0]), e) : [], Wd = (e, t) => [
  ...Tn(t),
  ...Tn(e)
];
function eF(e, t) {
  let n = 0;
  const r = [...e];
  for (const o of t)
    r.splice(o - n, 1), n++;
  return Ya(r).length ? r : [];
}
var Ud = (e, t) => wt(t) ? [] : eF(e, Tn(t).sort((n, r) => n - r)), qd = (e, t, n) => {
  [e[t], e[n]] = [e[n], e[t]];
}, fb = (e, t, n) => (e[t] = n, e);
function YW(e) {
  const t = sr(), { control: n = t.control, name: r, keyName: o = "id", shouldUnregister: i, rules: s } = e, [l, c] = Y.useState(n._getFieldArray(r)), u = Y.useRef(n._getFieldArray(r).map(fo)), d = Y.useRef(l), f = Y.useRef(r), p = Y.useRef(!1);
  f.current = r, d.current = l, n._names.array.add(r), s && n.register(r, s), Y.useEffect(() => n._subjects.array.subscribe({
    next: ({ values: T, name: C }) => {
      if (C === f.current || !C) {
        const k = xe(T, f.current);
        Array.isArray(k) && (c(k), u.current = k.map(fo));
      }
    }
  }).unsubscribe, [n]);
  const h = Y.useCallback((T) => {
    p.current = !0, n._setFieldArray(r, T);
  }, [n, r]), g = (T, C) => {
    const k = Tn(_t(T)), P = zd(n._getFieldArray(r), k);
    n._names.focus = Ld(r, P.length - 1, C), u.current = zd(u.current, k.map(fo)), h(P), c(P), n._setFieldArray(r, P, zd, {
      argA: Vd(T)
    });
  }, m = (T, C) => {
    const k = Tn(_t(T)), P = Wd(n._getFieldArray(r), k);
    n._names.focus = Ld(r, 0, C), u.current = Wd(u.current, k.map(fo)), h(P), c(P), n._setFieldArray(r, P, Wd, {
      argA: Vd(T)
    });
  }, b = (T) => {
    const C = Ud(n._getFieldArray(r), T);
    u.current = Ud(u.current, T), h(C), c(C), !Array.isArray(xe(n._fields, r)) && Je(n._fields, r, void 0), n._setFieldArray(r, C, Ud, {
      argA: T
    });
  }, x = (T, C, k) => {
    const P = Tn(_t(C)), y = jd(n._getFieldArray(r), T, P);
    n._names.focus = Ld(r, T, k), u.current = jd(u.current, T, P.map(fo)), h(y), c(y), n._setFieldArray(r, y, jd, {
      argA: T,
      argB: Vd(C)
    });
  }, E = (T, C) => {
    const k = n._getFieldArray(r);
    qd(k, T, C), qd(u.current, T, C), h(k), c(k), n._setFieldArray(r, k, qd, {
      argA: T,
      argB: C
    }, !1);
  }, v = (T, C) => {
    const k = n._getFieldArray(r);
    Hd(k, T, C), Hd(u.current, T, C), h(k), c(k), n._setFieldArray(r, k, Hd, {
      argA: T,
      argB: C
    }, !1);
  }, w = (T, C) => {
    const k = _t(C), P = fb(n._getFieldArray(r), T, k);
    u.current = [...P].map((y, R) => !y || R === T ? fo() : u.current[R]), h(P), c([...P]), n._setFieldArray(r, P, fb, {
      argA: T,
      argB: k
    }, !0, !1);
  }, S = (T) => {
    const C = Tn(_t(T));
    u.current = C.map(fo), h([...C]), c([...C]), n._setFieldArray(r, [...C], (k) => k, {}, !0, !1);
  };
  return Y.useEffect(() => {
    if (n._state.action = !1, Xf(r, n._names) && n._subjects.state.next({
      ...n._formState
    }), p.current && (!Ei(n._options.mode).isOnSubmit || n._formState.isSubmitted) && !Ei(n._options.reValidateMode).isOnSubmit)
      if (n._options.resolver)
        n._runSchema([r]).then((T) => {
          const C = xe(T.errors, r), k = xe(n._formState.errors, r);
          (k ? !C && k.type || C && (k.type !== C.type || k.message !== C.message) : C && C.type) && (C ? Je(n._formState.errors, r, C) : Yt(n._formState.errors, r), n._subjects.state.next({
            errors: n._formState.errors
          }));
        });
      else {
        const T = xe(n._fields, r);
        T && T._f && !(Ei(n._options.reValidateMode).isOnSubmit && Ei(n._options.mode).isOnSubmit) && Zf(T, n._names.disabled, n._formValues, n._options.criteriaMode === Zn.all, n._options.shouldUseNativeValidation, !0).then((C) => !cn(C) && n._subjects.state.next({
          errors: XS(n._formState.errors, C, r)
        }));
      }
    n._subjects.state.next({
      name: r,
      values: _t(n._formValues)
    }), n._names.focus && Ii(n._fields, (T, C) => {
      if (n._names.focus && C.startsWith(n._names.focus) && T.focus)
        return T.focus(), 1;
    }), n._names.focus = "", n._setValid(), p.current = !1;
  }, [l, r, n]), Y.useEffect(() => (!xe(n._formValues, r) && n._setFieldArray(r), () => {
    const T = (C, k) => {
      const P = xe(n._fields, C);
      P && P._f && (P._f.mount = k);
    };
    n._options.shouldUnregister || i ? n.unregister(r) : T(r, !1);
  }), [r, n, o, i]), {
    swap: Y.useCallback(E, [h, r, n]),
    move: Y.useCallback(v, [h, r, n]),
    prepend: Y.useCallback(m, [h, r, n]),
    append: Y.useCallback(g, [h, r, n]),
    remove: Y.useCallback(b, [h, r, n]),
    insert: Y.useCallback(x, [h, r, n]),
    update: Y.useCallback(w, [h, r, n]),
    replace: Y.useCallback(S, [h, r, n]),
    fields: Y.useMemo(() => l.map((T, C) => ({
      ...T,
      [o]: u.current[C] || fo()
    })), [l, o])
  };
}
function GW(e = {}) {
  const t = Y.useRef(void 0), n = Y.useRef(void 0), [r, o] = Y.useState({
    isDirty: !1,
    isValidating: !1,
    isLoading: lr(e.defaultValues),
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    submitCount: 0,
    dirtyFields: {},
    touchedFields: {},
    validatingFields: {},
    errors: e.errors || {},
    disabled: e.disabled || !1,
    defaultValues: lr(e.defaultValues) ? void 0 : e.defaultValues
  });
  t.current || (t.current = {
    ...e.formControl ? e.formControl : JB(e),
    formState: r
  }, e.formControl && e.defaultValues && !lr(e.defaultValues) && e.formControl.reset(e.defaultValues, e.resetOptions));
  const i = t.current.control;
  return i._options = e, Y.useLayoutEffect(() => i._subscribe({
    formState: i._proxyFormState,
    callback: () => o({ ...i._formState }),
    reRenderRoot: !0
  }), [i]), Y.useEffect(() => i._disableForm(e.disabled), [i, e.disabled]), Y.useEffect(() => {
    if (i._proxyFormState.isDirty) {
      const s = i._getDirty();
      s !== r.isDirty && i._subjects.state.next({
        isDirty: s
      });
    }
  }, [i, r.isDirty]), Y.useEffect(() => {
    e.values && !go(e.values, n.current) ? (i._reset(e.values, i._options.resetOptions), n.current = e.values, o((s) => ({ ...s }))) : i._resetDefaultValues();
  }, [e.values, i]), Y.useEffect(() => {
    e.errors && !cn(e.errors) && i._setErrors(e.errors);
  }, [e.errors, i]), Y.useEffect(() => {
    i._state.mount || (i._setValid(), i._state.mount = !0), i._state.watch && (i._state.watch = !1, i._subjects.state.next({ ...i._formState })), i._removeUnmounted();
  }), Y.useEffect(() => {
    e.shouldUnregister && i._subjects.state.next({
      values: i._getWatch()
    });
  }, [e.shouldUnregister, i]), t.current.formState = VS(r, i), t.current;
}
const pb = (e, t, n) => {
  if (e && "reportValidity" in e) {
    const r = xe(n, t);
    e.setCustomValidity(r && r.message || ""), e.reportValidity();
  }
}, ZS = (e, t) => {
  for (const n in t.fields) {
    const r = t.fields[n];
    r && r.ref && "reportValidity" in r.ref ? pb(r.ref, n, e) : r && r.refs && r.refs.forEach((o) => pb(o, n, e));
  }
}, tF = (e, t) => {
  t.shouldUseNativeValidation && ZS(e, t);
  const n = {};
  for (const r in e) {
    const o = xe(t.fields, r), i = Object.assign(e[r] || {}, { ref: o && o.ref });
    if (nF(t.names || Object.keys(e), r)) {
      const s = Object.assign({}, xe(n, r));
      Je(s, "root", i), Je(n, r, s);
    } else Je(n, r, i);
  }
  return n;
}, nF = (e, t) => {
  const n = hb(t);
  return e.some((r) => hb(r).match(`^${n}\\.\\d+`));
};
function hb(e) {
  return e.replace(/\]|\[/g, "");
}
function rF(e, t) {
  for (var n = {}; e.length; ) {
    var r = e[0], o = r.code, i = r.message, s = r.path.join(".");
    if (!n[s]) if ("unionErrors" in r) {
      var l = r.unionErrors[0].errors[0];
      n[s] = { message: l.message, type: l.code };
    } else n[s] = { message: i, type: o };
    if ("unionErrors" in r && r.unionErrors.forEach(function(d) {
      return d.errors.forEach(function(f) {
        return e.push(f);
      });
    }), t) {
      var c = n[s].types, u = c && c[r.code];
      n[s] = HS(s, t, n, o, u ? [].concat(u, r.message) : r.message);
    }
    e.shift();
  }
  return n;
}
function KW(e, t, n) {
  return n === void 0 && (n = {}), function(r, o, i) {
    try {
      return Promise.resolve(function(s, l) {
        try {
          var c = Promise.resolve(e[n.mode === "sync" ? "parse" : "parseAsync"](r, t)).then(function(u) {
            return i.shouldUseNativeValidation && ZS({}, i), { errors: {}, values: n.raw ? Object.assign({}, r) : u };
          });
        } catch (u) {
          return l(u);
        }
        return c && c.then ? c.then(void 0, l) : c;
      }(0, function(s) {
        if (function(l) {
          return Array.isArray(l == null ? void 0 : l.errors);
        }(s)) return { values: {}, errors: tF(rF(s.errors, !i.shouldUseNativeValidation && i.criteriaMode === "all"), i) };
        throw s;
      }));
    } catch (s) {
      return Promise.reject(s);
    }
  };
}
function oF({
  children: e,
  formInstance: t,
  onSubmit: n
}) {
  const { handleSubmit: r, trigger: o } = t;
  return Ze(() => {
    o();
  }, [o]), t ? /* @__PURE__ */ N(FB, { ...t, children: /* @__PURE__ */ N(Jr, { component: "form", autoComplete: "off", onSubmit: r(n), children: e }) }) : null;
}
const XW = we(oF), iF = we(({ name: e, ...t }) => {
  const { control: n } = sr();
  return /* @__PURE__ */ N(
    oi,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, value: o, ref: i }, fieldState: { error: s } }) => /* @__PURE__ */ N(
        mw,
        {
          ...t,
          value: o,
          onChange: r,
          inputRef: i,
          isError: !!s
        }
      )
    }
  );
});
iF.displayName = "CheckboxUncontrolled";
function sF({
  isSubmitting: e,
  submitButtonText: t = "Submit",
  cancelButtonText: n = "Cancel"
}) {
  const r = sr();
  if (!r)
    return null;
  const { formState: o, reset: i, trigger: s } = r, { isValid: l, isSubmitting: c, defaultValues: u } = o;
  return /* @__PURE__ */ Se(sn, { row: !0, mt: "32px", children: [
    /* @__PURE__ */ N(
      $n,
      {
        type: "reset",
        text: n,
        isOutlined: !0,
        disabled: e || c,
        onClick: () => {
          i(u), s();
        }
      }
    ),
    /* @__PURE__ */ N(
      $n,
      {
        type: "submit",
        text: t,
        loading: e || c,
        disabled: !l
      }
    )
  ] });
}
sF.displayName = "FormUncontrolledAction";
const aF = we(({ name: e, ...t }) => {
  const { control: n } = sr();
  return /* @__PURE__ */ N(
    oi,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: i, ref: s }, fieldState: { error: l } }) => /* @__PURE__ */ N(
        Eu,
        {
          ...t,
          value: i,
          onChange: r,
          onBlur: o,
          inputRef: s,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
aF.displayName = "InputUncontrolled";
const lF = we(({ name: e, ...t }) => {
  const { control: n } = sr();
  return /* @__PURE__ */ N(
    oi,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: i, ref: s }, fieldState: { error: l } }) => /* @__PURE__ */ N(
        Cw,
        {
          ...t,
          value: i,
          onChange: r,
          onBlur: o,
          inputRef: s,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || "　"
        }
      )
    }
  );
});
lF.displayName = "NumberUncontrolled";
const cF = we(({ name: e, ...t }) => {
  const { control: n } = sr();
  return /* @__PURE__ */ N(
    oi,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: i, ref: s }, fieldState: { error: l } }) => /* @__PURE__ */ N(
        IS,
        {
          ...t,
          value: i,
          onChange: r,
          onBlur: o,
          inputRef: s,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
cF.displayName = "OtpInputUncontrolled";
const uF = we(({ name: e, ...t }) => {
  const { control: n } = sr();
  return /* @__PURE__ */ N(
    oi,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: i, ref: s }, fieldState: { error: l } }) => /* @__PURE__ */ N(
        $S,
        {
          ...t,
          value: i,
          onChange: r,
          onBlur: o,
          inputRef: s,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
uF.displayName = "PasswordUncontrolled";
const dF = [], fF = we(
  ({ name: e, options: t = dF, ...n }) => {
    const { control: r } = sr();
    return /* @__PURE__ */ N(
      oi,
      {
        control: r,
        name: e,
        render: ({ field: { onChange: o, value: i, ref: s }, fieldState: { error: l } }) => /* @__PURE__ */ N(
          MS,
          {
            ...n,
            name: e,
            options: t,
            value: i,
            onChange: (c) => o(c.value),
            inputRef: s,
            isError: !!l
          }
        )
      }
    );
  }
);
fF.displayName = "RadiosUncontrolled";
const pF = we(({ name: e, ...t }) => {
  const { control: n } = sr();
  return /* @__PURE__ */ N(
    oi,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, value: o, ref: i } }) => /* @__PURE__ */ N(Vh, { ...t, value: o, onChange: r, inputRef: i })
    }
  );
});
pF.displayName = "SwitchUncontrolled";
const xi = {
  xs: 1,
  // 1行1个
  sm: 1,
  // 1行1个
  md: 2,
  // 1行2个
  lg: 3,
  // 1行3个
  xl: 4
  // 1行4个
}, hF = [], mb = (e) => {
  let t;
  const n = /* @__PURE__ */ new Set(), r = (u, d) => {
    const f = typeof u == "function" ? u(t) : u;
    if (!Object.is(f, t)) {
      const p = t;
      t = d ?? (typeof f != "object" || f === null) ? f : Object.assign({}, t, f), n.forEach((h) => h(t, p));
    }
  }, o = () => t, l = { setState: r, getState: o, getInitialState: () => c, subscribe: (u) => (n.add(u), () => n.delete(u)) }, c = t = e(r, o, l);
  return l;
}, QS = (e) => e ? mb(e) : mb, mF = (e) => e;
function To(e, t = mF) {
  const n = Y.useSyncExternalStore(
    e.subscribe,
    () => t(e.getState()),
    () => t(e.getInitialState())
  );
  return Y.useDebugValue(n), n;
}
const gb = (e) => {
  const t = QS(e), n = (r) => To(t, r);
  return Object.assign(n, t), n;
}, fs = (e) => e ? gb(e) : gb, yb = { BASE_URL: "/", DEV: !1, MODE: "production", PROD: !0, SSR: !1 }, Qf = /* @__PURE__ */ new Map(), Tl = (e) => {
  const t = Qf.get(e);
  return t ? Object.fromEntries(
    Object.entries(t.stores).map(([n, r]) => [n, r.getState()])
  ) : {};
}, gF = (e, t, n) => {
  if (e === void 0)
    return {
      type: "untracked",
      connection: t.connect(n)
    };
  const r = Qf.get(n.name);
  if (r)
    return { type: "tracked", store: e, ...r };
  const o = {
    connection: t.connect(n),
    stores: {}
  };
  return Qf.set(n.name, o), { type: "tracked", store: e, ...o };
}, yF = (e, t = {}) => (n, r, o) => {
  const { enabled: i, anonymousActionType: s, store: l, ...c } = t;
  let u;
  try {
    u = (i ?? (yb ? "production" : void 0) !== "production") && window.__REDUX_DEVTOOLS_EXTENSION__;
  } catch {
  }
  if (!u)
    return e(n, r, o);
  const { connection: d, ...f } = gF(l, u, c);
  let p = !0;
  o.setState = (m, b, x) => {
    const E = n(m, b);
    if (!p) return E;
    const v = x === void 0 ? { type: s || "anonymous" } : typeof x == "string" ? { type: x } : x;
    return l === void 0 ? (d == null || d.send(v, r()), E) : (d == null || d.send(
      {
        ...v,
        type: `${l}/${v.type}`
      },
      {
        ...Tl(c.name),
        [l]: o.getState()
      }
    ), E);
  };
  const h = (...m) => {
    const b = p;
    p = !1, n(...m), p = b;
  }, g = e(o.setState, r, o);
  if (f.type === "untracked" ? d == null || d.init(g) : (f.stores[f.store] = o, d == null || d.init(
    Object.fromEntries(
      Object.entries(f.stores).map(([m, b]) => [
        m,
        m === f.store ? g : b.getState()
      ])
    )
  )), o.dispatchFromDevtools && typeof o.dispatch == "function") {
    let m = !1;
    const b = o.dispatch;
    o.dispatch = (...x) => {
      (yb ? "production" : void 0) !== "production" && x[0].type === "__setState" && !m && (console.warn(
        '[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'
      ), m = !0), b(...x);
    };
  }
  return d.subscribe((m) => {
    var b;
    switch (m.type) {
      case "ACTION":
        if (typeof m.payload != "string") {
          console.error(
            "[zustand devtools middleware] Unsupported action format"
          );
          return;
        }
        return Yd(
          m.payload,
          (x) => {
            if (x.type === "__setState") {
              if (l === void 0) {
                h(x.state);
                return;
              }
              Object.keys(x.state).length !== 1 && console.error(
                `
                    [zustand devtools middleware] Unsupported __setState action format.
                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),
                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }
                    `
              );
              const E = x.state[l];
              if (E == null)
                return;
              JSON.stringify(o.getState()) !== JSON.stringify(E) && h(E);
              return;
            }
            o.dispatchFromDevtools && typeof o.dispatch == "function" && o.dispatch(x);
          }
        );
      case "DISPATCH":
        switch (m.payload.type) {
          case "RESET":
            return h(g), l === void 0 ? d == null ? void 0 : d.init(o.getState()) : d == null ? void 0 : d.init(Tl(c.name));
          case "COMMIT":
            if (l === void 0) {
              d == null || d.init(o.getState());
              return;
            }
            return d == null ? void 0 : d.init(Tl(c.name));
          case "ROLLBACK":
            return Yd(m.state, (x) => {
              if (l === void 0) {
                h(x), d == null || d.init(o.getState());
                return;
              }
              h(x[l]), d == null || d.init(Tl(c.name));
            });
          case "JUMP_TO_STATE":
          case "JUMP_TO_ACTION":
            return Yd(m.state, (x) => {
              if (l === void 0) {
                h(x);
                return;
              }
              JSON.stringify(o.getState()) !== JSON.stringify(x[l]) && h(x[l]);
            });
          case "IMPORT_STATE": {
            const { nextLiftedState: x } = m.payload, E = (b = x.computedStates.slice(-1)[0]) == null ? void 0 : b.state;
            if (!E) return;
            h(l === void 0 ? E : E[l]), d == null || d.send(
              null,
              // FIXME no-any
              x
            );
            return;
          }
          case "PAUSE_RECORDING":
            return p = !p;
        }
        return;
    }
  }), g;
}, Ga = yF, Yd = (e, t) => {
  let n;
  try {
    n = JSON.parse(e);
  } catch (r) {
    console.error(
      "[zustand devtools middleware] Could not parse the received json",
      r
    );
  }
  n !== void 0 && t(n);
};
function bF(e, t) {
  let n;
  try {
    n = e();
  } catch {
    return;
  }
  return {
    getItem: (o) => {
      var i;
      const s = (c) => c === null ? null : JSON.parse(c, void 0), l = (i = n.getItem(o)) != null ? i : null;
      return l instanceof Promise ? l.then(s) : s(l);
    },
    setItem: (o, i) => n.setItem(
      o,
      JSON.stringify(i, void 0)
    ),
    removeItem: (o) => n.removeItem(o)
  };
}
const Jf = (e) => (t) => {
  try {
    const n = e(t);
    return n instanceof Promise ? n : {
      then(r) {
        return Jf(r)(n);
      },
      catch(r) {
        return this;
      }
    };
  } catch (n) {
    return {
      then(r) {
        return this;
      },
      catch(r) {
        return Jf(r)(n);
      }
    };
  }
}, vF = (e, t) => (n, r, o) => {
  let i = {
    storage: bF(() => localStorage),
    partialize: (m) => m,
    version: 0,
    merge: (m, b) => ({
      ...b,
      ...m
    }),
    ...t
  }, s = !1;
  const l = /* @__PURE__ */ new Set(), c = /* @__PURE__ */ new Set();
  let u = i.storage;
  if (!u)
    return e(
      (...m) => {
        console.warn(
          `[zustand persist middleware] Unable to update item '${i.name}', the given storage is currently unavailable.`
        ), n(...m);
      },
      r,
      o
    );
  const d = () => {
    const m = i.partialize({ ...r() });
    return u.setItem(i.name, {
      state: m,
      version: i.version
    });
  }, f = o.setState;
  o.setState = (m, b) => {
    f(m, b), d();
  };
  const p = e(
    (...m) => {
      n(...m), d();
    },
    r,
    o
  );
  o.getInitialState = () => p;
  let h;
  const g = () => {
    var m, b;
    if (!u) return;
    s = !1, l.forEach((E) => {
      var v;
      return E((v = r()) != null ? v : p);
    });
    const x = ((b = i.onRehydrateStorage) == null ? void 0 : b.call(i, (m = r()) != null ? m : p)) || void 0;
    return Jf(u.getItem.bind(u))(i.name).then((E) => {
      if (E)
        if (typeof E.version == "number" && E.version !== i.version) {
          if (i.migrate) {
            const v = i.migrate(
              E.state,
              E.version
            );
            return v instanceof Promise ? v.then((w) => [!0, w]) : [!0, v];
          }
          console.error(
            "State loaded from storage couldn't be migrated since no migrate function was provided"
          );
        } else
          return [!1, E.state];
      return [!1, void 0];
    }).then((E) => {
      var v;
      const [w, S] = E;
      if (h = i.merge(
        S,
        (v = r()) != null ? v : p
      ), n(h, !0), w)
        return d();
    }).then(() => {
      x == null || x(h, void 0), h = r(), s = !0, c.forEach((E) => E(h));
    }).catch((E) => {
      x == null || x(void 0, E);
    });
  };
  return o.persist = {
    setOptions: (m) => {
      i = {
        ...i,
        ...m
      }, m.storage && (u = m.storage);
    },
    clearStorage: () => {
      u == null || u.removeItem(i.name);
    },
    getOptions: () => i,
    rehydrate: () => g(),
    hasHydrated: () => s,
    onHydrate: (m) => (l.add(m), () => {
      l.delete(m);
    }),
    onFinishHydration: (m) => (c.add(m), () => {
      c.delete(m);
    })
  }, i.skipHydration || g(), h || p;
}, JS = vF;
function bb() {
  return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
const xF = fs()(
  Ga(
    JS(
      (e) => ({
        themeMode: bb(),
        setThemeMode: (t) => e({ themeMode: t }),
        toggleThemeMode: () => e((t) => ({ themeMode: t.themeMode === "dark" ? "light" : "dark" })),
        resetThemeMode: () => e({ themeMode: bb() })
      }),
      {
        name: "VENOMOUS_UI__THEME_MODE"
      }
    )
  )
);
function Uu() {
  const e = To(xF);
  return {
    ...e,
    isDarkMode: e.themeMode === "dark"
  };
}
function wF(e) {
  return {
    origin: e,
    light: os(e, 0.5),
    dark: rs(e, 0.5),
    opacity: rn(e, 0.2)
  };
}
var e1 = /* @__PURE__ */ ((e) => (e.Iron = "Iron", e.Cyan = "Cyan", e.Teal = "Teal", e.Coral = "Coral", e.Amber = "Amber", e.Ochre = "Ochre", e))(e1 || {});
const t1 = {
  Iron: "#90a4ae",
  Cyan: "#00bcd4",
  Teal: "#009688",
  Coral: "#FFA07A",
  Amber: "#ffb300",
  Ochre: "#E3D026"
};
function ep(e) {
  const t = t1[e], { light: n, dark: r, opacity: o } = wF(t);
  return {
    main: t,
    light: n,
    dark: r,
    opacity: o,
    contrastText: "#fff",
    error: "#f44336"
  };
}
const SF = fs()(
  Ga(
    JS(
      (e) => ({
        themePaletteName: "Cyan",
        themePalette: ep(
          "Cyan"
          /* Cyan */
        ),
        setThemePaletteName: (t) => e({ themePaletteName: t, themePalette: ep(t) })
      }),
      {
        name: "VENOMOUS_UI__THEME_PALETTE"
      }
    )
  )
);
function qh() {
  return {
    ...SF(),
    allPaletteNames: Object.keys(e1),
    allPaletteMainColors: t1
  };
}
const Rs = vv({
  themeId: dr
});
function EF() {
  const { breakpoints: e } = io(), t = Rs(e.down("sm")), n = Rs(e.between("sm", "md")), r = Rs(e.between("md", "lg")), o = Rs(e.between("lg", "xl")), i = Rs(e.up("xl")), s = ct(() => {
    var l;
    return ((l = [
      ["xs", t],
      ["sm", n],
      ["md", r],
      ["lg", o],
      ["xl", i]
    ].find(([, c]) => c)) == null ? void 0 : l[0].toString()) || "xs";
  }, [t, n, r, o, i]);
  return {
    isXs: t,
    isSm: n,
    isMd: r,
    isLg: o,
    isXl: i,
    breakpoints: {
      current: s,
      unit: "px",
      values: {
        xs: 0,
        sm: 600,
        md: 900,
        lg: 1200,
        xl: 1536
      }
    }
  };
}
function ZW() {
  return (e) => e;
}
function TF() {
  const e = PL(), [t, n] = Jt(!1), r = Fe(() => {
    t ? document.exitFullscreen().then(() => {
      n(!1);
    }).catch(() => {
      e({
        type: "error",
        title: "Error",
        description: "Error attempting to disable full-screen mode"
      });
    }) : document.documentElement.requestFullscreen().then(() => {
      n(!0);
    }).catch(() => {
      e({
        type: "error",
        title: "Error",
        description: "Error attempting to enable full-screen mode"
      });
    });
  }, [t, e]);
  return Ze(() => {
    const o = () => {
      n(document.fullscreenElement !== null);
    };
    return document.addEventListener("fullscreenchange", o), () => {
      document.removeEventListener("fullscreenchange", o);
    };
  }, []), {
    isFullScreen: t,
    setIsFullScreen: n,
    toggleFullScreen: r
  };
}
function CF({
  gridStyle: e,
  cols: t
}) {
  const { isXs: n, isSm: r, isMd: o, isLg: i } = EF(), s = ct(() => {
    let c;
    return n ? c = (t == null ? void 0 : t.xs) ?? xi.xs : r ? c = (t == null ? void 0 : t.sm) ?? xi.sm : o ? c = (t == null ? void 0 : t.md) ?? xi.md : i ? c = (t == null ? void 0 : t.lg) ?? xi.lg : c = (t == null ? void 0 : t.xl) ?? xi.xl, `${100 / c}%`;
  }, [n, r, o, i, t]);
  return {
    gridComponents: ct(
      () => ({
        List: ({ ref: c, style: u, children: d, ...f }) => /* @__PURE__ */ N(
          "div",
          {
            ref: c,
            ...f,
            style: { display: "flex", flexWrap: "wrap", ...u, ...e },
            children: d
          }
        ),
        Item: ({ children: c, ...u }) => /* @__PURE__ */ N(
          "div",
          {
            ...u,
            style: {
              width: s,
              display: "flex",
              boxSizing: "border-box",
              flex: "none",
              alignContent: "stretch"
            },
            children: c
          }
        )
      }),
      [s, e]
    )
  };
}
const OF = ({
  height: e,
  width: t,
  items: n = hF,
  renderGridItem: r,
  gridStyle: o,
  cols: i = xi
}) => {
  const { gridComponents: s } = CF({ gridStyle: o, cols: i });
  return /* @__PURE__ */ N(
    sn,
    {
      className: "VenomousUI-Grid",
      sx: {
        height: e || "100%",
        width: t || "100%",
        "& > *": {
          flex: "unset",
          width: "100%"
        }
      },
      children: /* @__PURE__ */ N(
        __,
        {
          style: { height: "100%" },
          totalCount: n.length,
          components: s,
          itemContent: (l) => r(n[l], l)
        }
      )
    }
  );
}, RF = we(OF);
var Gd = { exports: {} }, vb;
function kF() {
  return vb || (vb = 1, (() => {
    var e = { 296: (o, i, s) => {
      var l = /^\s+|\s+$/g, c = /^[-+]0x[0-9a-f]+$/i, u = /^0b[01]+$/i, d = /^0o[0-7]+$/i, f = parseInt, p = typeof s.g == "object" && s.g && s.g.Object === Object && s.g, h = typeof self == "object" && self && self.Object === Object && self, g = p || h || Function("return this")(), m = Object.prototype.toString, b = Math.max, x = Math.min, E = function() {
        return g.Date.now();
      };
      function v(S) {
        var T = typeof S;
        return !!S && (T == "object" || T == "function");
      }
      function w(S) {
        if (typeof S == "number") return S;
        if (function(k) {
          return typeof k == "symbol" || /* @__PURE__ */ function(P) {
            return !!P && typeof P == "object";
          }(k) && m.call(k) == "[object Symbol]";
        }(S)) return NaN;
        if (v(S)) {
          var T = typeof S.valueOf == "function" ? S.valueOf() : S;
          S = v(T) ? T + "" : T;
        }
        if (typeof S != "string") return S === 0 ? S : +S;
        S = S.replace(l, "");
        var C = u.test(S);
        return C || d.test(S) ? f(S.slice(2), C ? 2 : 8) : c.test(S) ? NaN : +S;
      }
      o.exports = function(S, T, C) {
        var k, P, y, R, $, A, O = 0, _ = !1, I = !1, D = !0;
        if (typeof S != "function") throw new TypeError("Expected a function");
        function z(U) {
          var Z = k, Q = P;
          return k = P = void 0, O = U, R = S.apply(Q, Z);
        }
        function B(U) {
          var Z = U - A;
          return A === void 0 || Z >= T || Z < 0 || I && U - O >= y;
        }
        function F() {
          var U = E();
          if (B(U)) return L(U);
          $ = setTimeout(F, function(Z) {
            var Q = T - (Z - A);
            return I ? x(Q, y - (Z - O)) : Q;
          }(U));
        }
        function L(U) {
          return $ = void 0, D && k ? z(U) : (k = P = void 0, R);
        }
        function W() {
          var U = E(), Z = B(U);
          if (k = arguments, P = this, A = U, Z) {
            if ($ === void 0) return function(Q) {
              return O = Q, $ = setTimeout(F, T), _ ? z(Q) : R;
            }(A);
            if (I) return $ = setTimeout(F, T), z(A);
          }
          return $ === void 0 && ($ = setTimeout(F, T)), R;
        }
        return T = w(T) || 0, v(C) && (_ = !!C.leading, y = (I = "maxWait" in C) ? b(w(C.maxWait) || 0, T) : y, D = "trailing" in C ? !!C.trailing : D), W.cancel = function() {
          $ !== void 0 && clearTimeout($), O = 0, k = A = P = $ = void 0;
        }, W.flush = function() {
          return $ === void 0 ? R : L(E());
        }, W;
      };
    }, 96: (o, i, s) => {
      var l = "Expected a function", c = NaN, u = "[object Symbol]", d = /^\s+|\s+$/g, f = /^[-+]0x[0-9a-f]+$/i, p = /^0b[01]+$/i, h = /^0o[0-7]+$/i, g = parseInt, m = typeof s.g == "object" && s.g && s.g.Object === Object && s.g, b = typeof self == "object" && self && self.Object === Object && self, x = m || b || Function("return this")(), E = Object.prototype.toString, v = Math.max, w = Math.min, S = function() {
        return x.Date.now();
      };
      function T(k) {
        var P = typeof k;
        return !!k && (P == "object" || P == "function");
      }
      function C(k) {
        if (typeof k == "number") return k;
        if (function(R) {
          return typeof R == "symbol" || /* @__PURE__ */ function($) {
            return !!$ && typeof $ == "object";
          }(R) && E.call(R) == u;
        }(k)) return c;
        if (T(k)) {
          var P = typeof k.valueOf == "function" ? k.valueOf() : k;
          k = T(P) ? P + "" : P;
        }
        if (typeof k != "string") return k === 0 ? k : +k;
        k = k.replace(d, "");
        var y = p.test(k);
        return y || h.test(k) ? g(k.slice(2), y ? 2 : 8) : f.test(k) ? c : +k;
      }
      o.exports = function(k, P, y) {
        var R = !0, $ = !0;
        if (typeof k != "function") throw new TypeError(l);
        return T(y) && (R = "leading" in y ? !!y.leading : R, $ = "trailing" in y ? !!y.trailing : $), function(A, O, _) {
          var I, D, z, B, F, L, W = 0, U = !1, Z = !1, Q = !0;
          if (typeof A != "function") throw new TypeError(l);
          function ee(ne) {
            var j = I, pe = D;
            return I = D = void 0, W = ne, B = A.apply(pe, j);
          }
          function te(ne) {
            var j = ne - L;
            return L === void 0 || j >= O || j < 0 || Z && ne - W >= z;
          }
          function q() {
            var ne = S();
            if (te(ne)) return oe(ne);
            F = setTimeout(q, function(j) {
              var pe = O - (j - L);
              return Z ? w(pe, z - (j - W)) : pe;
            }(ne));
          }
          function oe(ne) {
            return F = void 0, Q && I ? ee(ne) : (I = D = void 0, B);
          }
          function K() {
            var ne = S(), j = te(ne);
            if (I = arguments, D = this, L = ne, j) {
              if (F === void 0) return function(pe) {
                return W = pe, F = setTimeout(q, O), U ? ee(pe) : B;
              }(L);
              if (Z) return F = setTimeout(q, O), ee(L);
            }
            return F === void 0 && (F = setTimeout(q, O)), B;
          }
          return O = C(O) || 0, T(_) && (U = !!_.leading, z = (Z = "maxWait" in _) ? v(C(_.maxWait) || 0, O) : z, Q = "trailing" in _ ? !!_.trailing : Q), K.cancel = function() {
            F !== void 0 && clearTimeout(F), W = 0, I = L = D = F = void 0;
          }, K.flush = function() {
            return F === void 0 ? B : oe(S());
          }, K;
        }(k, P, { leading: R, maxWait: P, trailing: $ });
      };
    }, 703: (o, i, s) => {
      var l = s(414);
      function c() {
      }
      function u() {
      }
      u.resetWarningCache = c, o.exports = function() {
        function d(h, g, m, b, x, E) {
          if (E !== l) {
            var v = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
            throw v.name = "Invariant Violation", v;
          }
        }
        function f() {
          return d;
        }
        d.isRequired = d;
        var p = { array: d, bigint: d, bool: d, func: d, number: d, object: d, string: d, symbol: d, any: d, arrayOf: f, element: d, elementType: d, instanceOf: f, node: d, objectOf: f, oneOf: f, oneOfType: f, shape: f, exact: f, checkPropTypes: u, resetWarningCache: c };
        return p.PropTypes = p, p;
      };
    }, 697: (o, i, s) => {
      o.exports = s(703)();
    }, 414: (o) => {
      o.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    } }, t = {};
    function n(o) {
      var i = t[o];
      if (i !== void 0) return i.exports;
      var s = t[o] = { exports: {} };
      return e[o](s, s.exports, n), s.exports;
    }
    n.n = (o) => {
      var i = o && o.__esModule ? () => o.default : () => o;
      return n.d(i, { a: i }), i;
    }, n.d = (o, i) => {
      for (var s in i) n.o(i, s) && !n.o(o, s) && Object.defineProperty(o, s, { enumerable: !0, get: i[s] });
    }, n.g = function() {
      if (typeof globalThis == "object") return globalThis;
      try {
        return this || new Function("return this")();
      } catch {
        if (typeof window == "object") return window;
      }
    }(), n.o = (o, i) => Object.prototype.hasOwnProperty.call(o, i), n.r = (o) => {
      typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(o, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(o, "__esModule", { value: !0 });
    };
    var r = {};
    (() => {
      n.r(r), n.d(r, { LazyLoadComponent: () => j, LazyLoadImage: () => ie, trackWindowScroll: () => B });
      const o = Y;
      var i = n.n(o), s = n(697);
      function l() {
        return typeof window < "u" && "IntersectionObserver" in window && "isIntersecting" in window.IntersectionObserverEntry.prototype;
      }
      function c(X) {
        return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, c(X);
      }
      function u(X, H) {
        var G = Object.keys(X);
        if (Object.getOwnPropertySymbols) {
          var re = Object.getOwnPropertySymbols(X);
          H && (re = re.filter(function(he) {
            return Object.getOwnPropertyDescriptor(X, he).enumerable;
          })), G.push.apply(G, re);
        }
        return G;
      }
      function d(X, H, G) {
        return (H = p(H)) in X ? Object.defineProperty(X, H, { value: G, enumerable: !0, configurable: !0, writable: !0 }) : X[H] = G, X;
      }
      function f(X, H) {
        for (var G = 0; G < H.length; G++) {
          var re = H[G];
          re.enumerable = re.enumerable || !1, re.configurable = !0, "value" in re && (re.writable = !0), Object.defineProperty(X, p(re.key), re);
        }
      }
      function p(X) {
        var H = function(G, re) {
          if (c(G) !== "object" || G === null) return G;
          var he = G[Symbol.toPrimitive];
          if (he !== void 0) {
            var me = he.call(G, "string");
            if (c(me) !== "object") return me;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(G);
        }(X);
        return c(H) === "symbol" ? H : String(H);
      }
      function h(X, H) {
        return h = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(G, re) {
          return G.__proto__ = re, G;
        }, h(X, H);
      }
      function g(X) {
        return g = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, g(X);
      }
      var m = function(X) {
        X.forEach(function(H) {
          H.isIntersecting && H.target.onVisible();
        });
      }, b = {}, x = function(X) {
        (function(se, ae) {
          if (typeof ae != "function" && ae !== null) throw new TypeError("Super expression must either be null or a function");
          se.prototype = Object.create(ae && ae.prototype, { constructor: { value: se, writable: !0, configurable: !0 } }), Object.defineProperty(se, "prototype", { writable: !1 }), ae && h(se, ae);
        })(le, X);
        var H, G, re, he, me = (re = le, he = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var se, ae = g(re);
          if (he) {
            var ge = g(this).constructor;
            se = Reflect.construct(ae, arguments, ge);
          } else se = ae.apply(this, arguments);
          return function(Ce, ue) {
            if (ue && (c(ue) === "object" || typeof ue == "function")) return ue;
            if (ue !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Te) {
              if (Te === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Te;
            }(Ce);
          }(this, se);
        });
        function le(se) {
          var ae;
          if (function(Ce, ue) {
            if (!(Ce instanceof ue)) throw new TypeError("Cannot call a class as a function");
          }(this, le), (ae = me.call(this, se)).supportsObserver = !se.scrollPosition && se.useIntersectionObserver && l(), ae.supportsObserver) {
            var ge = se.threshold;
            ae.observer = function(Ce) {
              return b[Ce] = b[Ce] || new IntersectionObserver(m, { rootMargin: Ce + "px" }), b[Ce];
            }(ge);
          }
          return ae;
        }
        return H = le, G = [{ key: "componentDidMount", value: function() {
          this.placeholder && this.observer && (this.placeholder.onVisible = this.props.onVisible, this.observer.observe(this.placeholder)), this.supportsObserver || this.updateVisibility();
        } }, { key: "componentWillUnmount", value: function() {
          this.observer && this.placeholder && this.observer.unobserve(this.placeholder);
        } }, { key: "componentDidUpdate", value: function() {
          this.supportsObserver || this.updateVisibility();
        } }, { key: "getPlaceholderBoundingBox", value: function() {
          var se = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props.scrollPosition, ae = this.placeholder.getBoundingClientRect(), ge = this.placeholder.style, Ce = parseInt(ge.getPropertyValue("margin-left"), 10) || 0, ue = parseInt(ge.getPropertyValue("margin-top"), 10) || 0;
          return { bottom: se.y + ae.bottom + ue, left: se.x + ae.left + Ce, right: se.x + ae.right + Ce, top: se.y + ae.top + ue };
        } }, { key: "isPlaceholderInViewport", value: function() {
          if (typeof window > "u" || !this.placeholder) return !1;
          var se = this.props, ae = se.scrollPosition, ge = se.threshold, Ce = this.getPlaceholderBoundingBox(ae), ue = ae.y + window.innerHeight, Te = ae.x, Be = ae.x + window.innerWidth, We = ae.y;
          return We - ge <= Ce.bottom && ue + ge >= Ce.top && Te - ge <= Ce.right && Be + ge >= Ce.left;
        } }, { key: "updateVisibility", value: function() {
          this.isPlaceholderInViewport() && this.props.onVisible();
        } }, { key: "render", value: function() {
          var se = this, ae = this.props, ge = ae.className, Ce = ae.height, ue = ae.placeholder, Te = ae.style, Be = ae.width;
          if (ue && typeof ue.type != "function") return i().cloneElement(ue, { ref: function(Ke) {
            return se.placeholder = Ke;
          } });
          var We = function(Ke) {
            for (var $t = 1; $t < arguments.length; $t++) {
              var ht = arguments[$t] != null ? arguments[$t] : {};
              $t % 2 ? u(Object(ht), !0).forEach(function(Pt) {
                d(Ke, Pt, ht[Pt]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(Ke, Object.getOwnPropertyDescriptors(ht)) : u(Object(ht)).forEach(function(Pt) {
                Object.defineProperty(Ke, Pt, Object.getOwnPropertyDescriptor(ht, Pt));
              });
            }
            return Ke;
          }({ display: "inline-block" }, Te);
          return Be !== void 0 && (We.width = Be), Ce !== void 0 && (We.height = Ce), i().createElement("span", { className: ge, ref: function(Ke) {
            return se.placeholder = Ke;
          }, style: We }, ue);
        } }], G && f(H.prototype, G), Object.defineProperty(H, "prototype", { writable: !1 }), le;
      }(i().Component);
      x.propTypes = { onVisible: s.PropTypes.func.isRequired, className: s.PropTypes.string, height: s.PropTypes.oneOfType([s.PropTypes.number, s.PropTypes.string]), placeholder: s.PropTypes.element, threshold: s.PropTypes.number, useIntersectionObserver: s.PropTypes.bool, scrollPosition: s.PropTypes.shape({ x: s.PropTypes.number.isRequired, y: s.PropTypes.number.isRequired }), width: s.PropTypes.oneOfType([s.PropTypes.number, s.PropTypes.string]) }, x.defaultProps = { className: "", placeholder: null, threshold: 100, useIntersectionObserver: !0 };
      const E = x;
      var v = n(296), w = n.n(v), S = n(96), T = n.n(S), C = function(X) {
        var H = getComputedStyle(X, null);
        return H.getPropertyValue("overflow") + H.getPropertyValue("overflow-y") + H.getPropertyValue("overflow-x");
      };
      const k = function(X) {
        if (!(X instanceof HTMLElement)) return window;
        for (var H = X; H && H instanceof HTMLElement; ) {
          if (/(scroll|auto)/.test(C(H))) return H;
          H = H.parentNode;
        }
        return window;
      };
      function P(X) {
        return P = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, P(X);
      }
      var y = ["delayMethod", "delayTime"];
      function R() {
        return R = Object.assign ? Object.assign.bind() : function(X) {
          for (var H = 1; H < arguments.length; H++) {
            var G = arguments[H];
            for (var re in G) Object.prototype.hasOwnProperty.call(G, re) && (X[re] = G[re]);
          }
          return X;
        }, R.apply(this, arguments);
      }
      function $(X, H) {
        for (var G = 0; G < H.length; G++) {
          var re = H[G];
          re.enumerable = re.enumerable || !1, re.configurable = !0, "value" in re && (re.writable = !0), Object.defineProperty(X, (he = function(me, le) {
            if (P(me) !== "object" || me === null) return me;
            var se = me[Symbol.toPrimitive];
            if (se !== void 0) {
              var ae = se.call(me, "string");
              if (P(ae) !== "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(me);
          }(re.key), P(he) === "symbol" ? he : String(he)), re);
        }
        var he;
      }
      function A(X, H) {
        return A = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(G, re) {
          return G.__proto__ = re, G;
        }, A(X, H);
      }
      function O(X, H) {
        if (H && (P(H) === "object" || typeof H == "function")) return H;
        if (H !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
        return _(X);
      }
      function _(X) {
        if (X === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return X;
      }
      function I(X) {
        return I = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, I(X);
      }
      var D = function() {
        return typeof window > "u" ? 0 : window.scrollX || window.pageXOffset;
      }, z = function() {
        return typeof window > "u" ? 0 : window.scrollY || window.pageYOffset;
      };
      const B = function(X) {
        var H = function(G) {
          (function(ge, Ce) {
            if (typeof Ce != "function" && Ce !== null) throw new TypeError("Super expression must either be null or a function");
            ge.prototype = Object.create(Ce && Ce.prototype, { constructor: { value: ge, writable: !0, configurable: !0 } }), Object.defineProperty(ge, "prototype", { writable: !1 }), Ce && A(ge, Ce);
          })(ae, G);
          var re, he, me, le, se = (me = ae, le = function() {
            if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
            if (typeof Proxy == "function") return !0;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              })), !0;
            } catch {
              return !1;
            }
          }(), function() {
            var ge, Ce = I(me);
            if (le) {
              var ue = I(this).constructor;
              ge = Reflect.construct(Ce, arguments, ue);
            } else ge = Ce.apply(this, arguments);
            return O(this, ge);
          });
          function ae(ge) {
            var Ce;
            if (function(Te, Be) {
              if (!(Te instanceof Be)) throw new TypeError("Cannot call a class as a function");
            }(this, ae), (Ce = se.call(this, ge)).useIntersectionObserver = ge.useIntersectionObserver && l(), Ce.useIntersectionObserver) return O(Ce);
            var ue = Ce.onChangeScroll.bind(_(Ce));
            return ge.delayMethod === "debounce" ? Ce.delayedScroll = w()(ue, ge.delayTime) : ge.delayMethod === "throttle" && (Ce.delayedScroll = T()(ue, ge.delayTime)), Ce.state = { scrollPosition: { x: D(), y: z() } }, Ce.baseComponentRef = i().createRef(), Ce;
          }
          return re = ae, (he = [{ key: "componentDidMount", value: function() {
            this.addListeners();
          } }, { key: "componentWillUnmount", value: function() {
            this.removeListeners();
          } }, { key: "componentDidUpdate", value: function() {
            typeof window > "u" || this.useIntersectionObserver || k(this.baseComponentRef.current) !== this.scrollElement && (this.removeListeners(), this.addListeners());
          } }, { key: "addListeners", value: function() {
            typeof window > "u" || this.useIntersectionObserver || (this.scrollElement = k(this.baseComponentRef.current), this.scrollElement.addEventListener("scroll", this.delayedScroll, { passive: !0 }), window.addEventListener("resize", this.delayedScroll, { passive: !0 }), this.scrollElement !== window && window.addEventListener("scroll", this.delayedScroll, { passive: !0 }));
          } }, { key: "removeListeners", value: function() {
            typeof window > "u" || this.useIntersectionObserver || (this.scrollElement.removeEventListener("scroll", this.delayedScroll), window.removeEventListener("resize", this.delayedScroll), this.scrollElement !== window && window.removeEventListener("scroll", this.delayedScroll));
          } }, { key: "onChangeScroll", value: function() {
            this.useIntersectionObserver || this.setState({ scrollPosition: { x: D(), y: z() } });
          } }, { key: "render", value: function() {
            var ge = this.props, Ce = (ge.delayMethod, ge.delayTime, function(Te, Be) {
              if (Te == null) return {};
              var We, Ke, $t = function(Pt, ze) {
                if (Pt == null) return {};
                var ot, xt, Pe = {}, jt = Object.keys(Pt);
                for (xt = 0; xt < jt.length; xt++) ot = jt[xt], ze.indexOf(ot) >= 0 || (Pe[ot] = Pt[ot]);
                return Pe;
              }(Te, Be);
              if (Object.getOwnPropertySymbols) {
                var ht = Object.getOwnPropertySymbols(Te);
                for (Ke = 0; Ke < ht.length; Ke++) We = ht[Ke], Be.indexOf(We) >= 0 || Object.prototype.propertyIsEnumerable.call(Te, We) && ($t[We] = Te[We]);
              }
              return $t;
            }(ge, y)), ue = this.useIntersectionObserver ? null : this.state.scrollPosition;
            return i().createElement(X, R({ forwardRef: this.baseComponentRef, scrollPosition: ue }, Ce));
          } }]) && $(re.prototype, he), Object.defineProperty(re, "prototype", { writable: !1 }), ae;
        }(i().Component);
        return H.propTypes = { delayMethod: s.PropTypes.oneOf(["debounce", "throttle"]), delayTime: s.PropTypes.number, useIntersectionObserver: s.PropTypes.bool }, H.defaultProps = { delayMethod: "throttle", delayTime: 300, useIntersectionObserver: !0 }, H;
      };
      function F(X) {
        return F = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, F(X);
      }
      function L(X, H) {
        for (var G = 0; G < H.length; G++) {
          var re = H[G];
          re.enumerable = re.enumerable || !1, re.configurable = !0, "value" in re && (re.writable = !0), Object.defineProperty(X, (he = function(me, le) {
            if (F(me) !== "object" || me === null) return me;
            var se = me[Symbol.toPrimitive];
            if (se !== void 0) {
              var ae = se.call(me, "string");
              if (F(ae) !== "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(me);
          }(re.key), F(he) === "symbol" ? he : String(he)), re);
        }
        var he;
      }
      function W(X, H) {
        return W = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(G, re) {
          return G.__proto__ = re, G;
        }, W(X, H);
      }
      function U(X) {
        return U = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, U(X);
      }
      var Z = function(X) {
        (function(se, ae) {
          if (typeof ae != "function" && ae !== null) throw new TypeError("Super expression must either be null or a function");
          se.prototype = Object.create(ae && ae.prototype, { constructor: { value: se, writable: !0, configurable: !0 } }), Object.defineProperty(se, "prototype", { writable: !1 }), ae && W(se, ae);
        })(le, X);
        var H, G, re, he, me = (re = le, he = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var se, ae = U(re);
          if (he) {
            var ge = U(this).constructor;
            se = Reflect.construct(ae, arguments, ge);
          } else se = ae.apply(this, arguments);
          return function(Ce, ue) {
            if (ue && (F(ue) === "object" || typeof ue == "function")) return ue;
            if (ue !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Te) {
              if (Te === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Te;
            }(Ce);
          }(this, se);
        });
        function le(se) {
          return function(ae, ge) {
            if (!(ae instanceof ge)) throw new TypeError("Cannot call a class as a function");
          }(this, le), me.call(this, se);
        }
        return H = le, (G = [{ key: "render", value: function() {
          return i().createElement(E, this.props);
        } }]) && L(H.prototype, G), Object.defineProperty(H, "prototype", { writable: !1 }), le;
      }(i().Component);
      const Q = B(Z);
      function ee(X) {
        return ee = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, ee(X);
      }
      function te(X, H) {
        for (var G = 0; G < H.length; G++) {
          var re = H[G];
          re.enumerable = re.enumerable || !1, re.configurable = !0, "value" in re && (re.writable = !0), Object.defineProperty(X, (he = function(me, le) {
            if (ee(me) !== "object" || me === null) return me;
            var se = me[Symbol.toPrimitive];
            if (se !== void 0) {
              var ae = se.call(me, "string");
              if (ee(ae) !== "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(me);
          }(re.key), ee(he) === "symbol" ? he : String(he)), re);
        }
        var he;
      }
      function q(X, H) {
        return q = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(G, re) {
          return G.__proto__ = re, G;
        }, q(X, H);
      }
      function oe(X) {
        if (X === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return X;
      }
      function K(X) {
        return K = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, K(X);
      }
      var ne = function(X) {
        (function(se, ae) {
          if (typeof ae != "function" && ae !== null) throw new TypeError("Super expression must either be null or a function");
          se.prototype = Object.create(ae && ae.prototype, { constructor: { value: se, writable: !0, configurable: !0 } }), Object.defineProperty(se, "prototype", { writable: !1 }), ae && q(se, ae);
        })(le, X);
        var H, G, re, he, me = (re = le, he = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var se, ae = K(re);
          if (he) {
            var ge = K(this).constructor;
            se = Reflect.construct(ae, arguments, ge);
          } else se = ae.apply(this, arguments);
          return function(Ce, ue) {
            if (ue && (ee(ue) === "object" || typeof ue == "function")) return ue;
            if (ue !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return oe(Ce);
          }(this, se);
        });
        function le(se) {
          var ae;
          (function(Be, We) {
            if (!(Be instanceof We)) throw new TypeError("Cannot call a class as a function");
          })(this, le), ae = me.call(this, se);
          var ge = se.afterLoad, Ce = se.beforeLoad, ue = se.scrollPosition, Te = se.visibleByDefault;
          return ae.state = { visible: Te }, Te && (Ce(), ge()), ae.onVisible = ae.onVisible.bind(oe(ae)), ae.isScrollTracked = !!(ue && Number.isFinite(ue.x) && ue.x >= 0 && Number.isFinite(ue.y) && ue.y >= 0), ae;
        }
        return H = le, (G = [{ key: "componentDidUpdate", value: function(se, ae) {
          ae.visible !== this.state.visible && this.props.afterLoad();
        } }, { key: "onVisible", value: function() {
          this.props.beforeLoad(), this.setState({ visible: !0 });
        } }, { key: "render", value: function() {
          if (this.state.visible) return this.props.children;
          var se = this.props, ae = se.className, ge = se.delayMethod, Ce = se.delayTime, ue = se.height, Te = se.placeholder, Be = se.scrollPosition, We = se.style, Ke = se.threshold, $t = se.useIntersectionObserver, ht = se.width;
          return this.isScrollTracked || $t && l() ? i().createElement(E, { className: ae, height: ue, onVisible: this.onVisible, placeholder: Te, scrollPosition: Be, style: We, threshold: Ke, useIntersectionObserver: $t, width: ht }) : i().createElement(Q, { className: ae, delayMethod: ge, delayTime: Ce, height: ue, onVisible: this.onVisible, placeholder: Te, style: We, threshold: Ke, width: ht });
        } }]) && te(H.prototype, G), Object.defineProperty(H, "prototype", { writable: !1 }), le;
      }(i().Component);
      ne.propTypes = { afterLoad: s.PropTypes.func, beforeLoad: s.PropTypes.func, useIntersectionObserver: s.PropTypes.bool, visibleByDefault: s.PropTypes.bool }, ne.defaultProps = { afterLoad: function() {
        return {};
      }, beforeLoad: function() {
        return {};
      }, useIntersectionObserver: !0, visibleByDefault: !1 };
      const j = ne;
      function pe(X) {
        return pe = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
          return typeof H;
        } : function(H) {
          return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
        }, pe(X);
      }
      var ce = ["afterLoad", "beforeLoad", "delayMethod", "delayTime", "effect", "placeholder", "placeholderSrc", "scrollPosition", "threshold", "useIntersectionObserver", "visibleByDefault", "wrapperClassName", "wrapperProps"];
      function be(X, H) {
        var G = Object.keys(X);
        if (Object.getOwnPropertySymbols) {
          var re = Object.getOwnPropertySymbols(X);
          H && (re = re.filter(function(he) {
            return Object.getOwnPropertyDescriptor(X, he).enumerable;
          })), G.push.apply(G, re);
        }
        return G;
      }
      function Ie(X) {
        for (var H = 1; H < arguments.length; H++) {
          var G = arguments[H] != null ? arguments[H] : {};
          H % 2 ? be(Object(G), !0).forEach(function(re) {
            _e(X, re, G[re]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(X, Object.getOwnPropertyDescriptors(G)) : be(Object(G)).forEach(function(re) {
            Object.defineProperty(X, re, Object.getOwnPropertyDescriptor(G, re));
          });
        }
        return X;
      }
      function _e(X, H, G) {
        return (H = Le(H)) in X ? Object.defineProperty(X, H, { value: G, enumerable: !0, configurable: !0, writable: !0 }) : X[H] = G, X;
      }
      function $e() {
        return $e = Object.assign ? Object.assign.bind() : function(X) {
          for (var H = 1; H < arguments.length; H++) {
            var G = arguments[H];
            for (var re in G) Object.prototype.hasOwnProperty.call(G, re) && (X[re] = G[re]);
          }
          return X;
        }, $e.apply(this, arguments);
      }
      function Ne(X, H) {
        for (var G = 0; G < H.length; G++) {
          var re = H[G];
          re.enumerable = re.enumerable || !1, re.configurable = !0, "value" in re && (re.writable = !0), Object.defineProperty(X, Le(re.key), re);
        }
      }
      function Le(X) {
        var H = function(G, re) {
          if (pe(G) !== "object" || G === null) return G;
          var he = G[Symbol.toPrimitive];
          if (he !== void 0) {
            var me = he.call(G, "string");
            if (pe(me) !== "object") return me;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(G);
        }(X);
        return pe(H) === "symbol" ? H : String(H);
      }
      function Re(X, H) {
        return Re = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(G, re) {
          return G.__proto__ = re, G;
        }, Re(X, H);
      }
      function V(X) {
        return V = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(H) {
          return H.__proto__ || Object.getPrototypeOf(H);
        }, V(X);
      }
      var J = function(X) {
        (function(se, ae) {
          if (typeof ae != "function" && ae !== null) throw new TypeError("Super expression must either be null or a function");
          se.prototype = Object.create(ae && ae.prototype, { constructor: { value: se, writable: !0, configurable: !0 } }), Object.defineProperty(se, "prototype", { writable: !1 }), ae && Re(se, ae);
        })(le, X);
        var H, G, re, he, me = (re = le, he = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }(), function() {
          var se, ae = V(re);
          if (he) {
            var ge = V(this).constructor;
            se = Reflect.construct(ae, arguments, ge);
          } else se = ae.apply(this, arguments);
          return function(Ce, ue) {
            if (ue && (pe(ue) === "object" || typeof ue == "function")) return ue;
            if (ue !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Te) {
              if (Te === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Te;
            }(Ce);
          }(this, se);
        });
        function le(se) {
          var ae;
          return function(ge, Ce) {
            if (!(ge instanceof Ce)) throw new TypeError("Cannot call a class as a function");
          }(this, le), (ae = me.call(this, se)).state = { loaded: !1 }, ae;
        }
        return H = le, (G = [{ key: "onImageLoad", value: function() {
          var se = this;
          return this.state.loaded ? null : function(ae) {
            se.props.onLoad(ae), se.props.afterLoad(), se.setState({ loaded: !0 });
          };
        } }, { key: "getImg", value: function() {
          var se = this.props, ae = (se.afterLoad, se.beforeLoad, se.delayMethod, se.delayTime, se.effect, se.placeholder, se.placeholderSrc, se.scrollPosition, se.threshold, se.useIntersectionObserver, se.visibleByDefault, se.wrapperClassName, se.wrapperProps, function(ge, Ce) {
            if (ge == null) return {};
            var ue, Te, Be = function(Ke, $t) {
              if (Ke == null) return {};
              var ht, Pt, ze = {}, ot = Object.keys(Ke);
              for (Pt = 0; Pt < ot.length; Pt++) ht = ot[Pt], $t.indexOf(ht) >= 0 || (ze[ht] = Ke[ht]);
              return ze;
            }(ge, Ce);
            if (Object.getOwnPropertySymbols) {
              var We = Object.getOwnPropertySymbols(ge);
              for (Te = 0; Te < We.length; Te++) ue = We[Te], Ce.indexOf(ue) >= 0 || Object.prototype.propertyIsEnumerable.call(ge, ue) && (Be[ue] = ge[ue]);
            }
            return Be;
          }(se, ce));
          return i().createElement("img", $e({}, ae, { onLoad: this.onImageLoad() }));
        } }, { key: "getLazyLoadImage", value: function() {
          var se = this.props, ae = se.beforeLoad, ge = se.className, Ce = se.delayMethod, ue = se.delayTime, Te = se.height, Be = se.placeholder, We = se.scrollPosition, Ke = se.style, $t = se.threshold, ht = se.useIntersectionObserver, Pt = se.visibleByDefault, ze = se.width;
          return i().createElement(j, { beforeLoad: ae, className: ge, delayMethod: Ce, delayTime: ue, height: Te, placeholder: Be, scrollPosition: We, style: Ke, threshold: $t, useIntersectionObserver: ht, visibleByDefault: Pt, width: ze }, this.getImg());
        } }, { key: "getWrappedLazyLoadImage", value: function(se) {
          var ae = this.props, ge = ae.effect, Ce = ae.height, ue = ae.placeholderSrc, Te = ae.width, Be = ae.wrapperClassName, We = ae.wrapperProps, Ke = this.state.loaded, $t = Ke ? " lazy-load-image-loaded" : "", ht = Ke || !ue ? {} : { backgroundImage: "url(".concat(ue, ")"), backgroundSize: "100% 100%" };
          return i().createElement("span", $e({ className: Be + " lazy-load-image-background " + ge + $t, style: Ie(Ie({}, ht), {}, { color: "transparent", display: "inline-block", height: Ce, width: Te }) }, We), se);
        } }, { key: "render", value: function() {
          var se = this.props, ae = se.effect, ge = se.placeholderSrc, Ce = se.visibleByDefault, ue = se.wrapperClassName, Te = se.wrapperProps, Be = this.getLazyLoadImage();
          return (ae || ge) && !Ce || ue || Te ? this.getWrappedLazyLoadImage(Be) : Be;
        } }]) && Ne(H.prototype, G), Object.defineProperty(H, "prototype", { writable: !1 }), le;
      }(i().Component);
      J.propTypes = { onLoad: s.PropTypes.func, afterLoad: s.PropTypes.func, beforeLoad: s.PropTypes.func, delayMethod: s.PropTypes.string, delayTime: s.PropTypes.number, effect: s.PropTypes.string, placeholderSrc: s.PropTypes.string, threshold: s.PropTypes.number, useIntersectionObserver: s.PropTypes.bool, visibleByDefault: s.PropTypes.bool, wrapperClassName: s.PropTypes.string, wrapperProps: s.PropTypes.object }, J.defaultProps = { onLoad: function() {
      }, afterLoad: function() {
        return {};
      }, beforeLoad: function() {
        return {};
      }, delayMethod: "throttle", delayTime: 300, effect: "", placeholderSrc: null, threshold: 100, useIntersectionObserver: !0, visibleByDefault: !1, wrapperClassName: "" };
      const ie = J;
    })(), Gd.exports = r;
  })()), Gd.exports;
}
var NF = kF();
const IF = we(({ src: e, alt: t, ...n }) => /* @__PURE__ */ N(
  NF.LazyLoadImage,
  {
    src: e,
    alt: t,
    effect: "blur",
    wrapperProps: {
      // If you need to, you can tweak the effect transition using the wrapper style.
      style: { transitionDelay: "1s" }
    },
    draggable: !1,
    ...n
  }
));
IF.displayName = "LazyImage";
function $F(e) {
  return Et("MuiLinearProgress", e);
}
kt("MuiLinearProgress", ["root", "colorPrimary", "colorSecondary", "determinate", "indeterminate", "buffer", "query", "dashed", "dashedColorPrimary", "dashedColorSecondary", "bar", "bar1", "bar2", "barColorPrimary", "barColorSecondary", "bar1Indeterminate", "bar1Determinate", "bar1Buffer", "bar2Indeterminate", "bar2Buffer"]);
const tp = 4, np = Oo`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`, PF = typeof np != "string" ? ns`
        animation: ${np} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
      ` : null, rp = Oo`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`, _F = typeof rp != "string" ? ns`
        animation: ${rp} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
      ` : null, op = Oo`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`, MF = typeof op != "string" ? ns`
        animation: ${op} 3s infinite linear;
      ` : null, AF = (e) => {
  const {
    classes: t,
    variant: n,
    color: r
  } = e, o = {
    root: ["root", `color${Ee(r)}`, n],
    dashed: ["dashed", `dashedColor${Ee(r)}`],
    bar1: ["bar", "bar1", `barColor${Ee(r)}`, (n === "indeterminate" || n === "query") && "bar1Indeterminate", n === "determinate" && "bar1Determinate", n === "buffer" && "bar1Buffer"],
    bar2: ["bar", "bar2", n !== "buffer" && `barColor${Ee(r)}`, n === "buffer" && `color${Ee(r)}`, (n === "indeterminate" || n === "query") && "bar2Indeterminate", n === "buffer" && "bar2Buffer"]
  };
  return Mt(o, $F, t);
}, Yh = (e, t) => e.vars ? e.vars.palette.LinearProgress[`${t}Bg`] : e.palette.mode === "light" ? os(e.palette[t].main, 0.62) : rs(e.palette[t].main, 0.5), DF = Me("span", {
  name: "MuiLinearProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`color${Ee(n.color)}`], t[n.variant]];
  }
})(et(({
  theme: e
}) => ({
  position: "relative",
  overflow: "hidden",
  display: "block",
  height: 4,
  // Fix Safari's bug during composition of different paint.
  zIndex: 0,
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [...Object.entries(e.palette).filter(bn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: Yh(e, t)
    }
  })), {
    props: ({
      ownerState: t
    }) => t.color === "inherit" && t.variant !== "buffer",
    style: {
      "&::before": {
        content: '""',
        position: "absolute",
        left: 0,
        top: 0,
        right: 0,
        bottom: 0,
        backgroundColor: "currentColor",
        opacity: 0.3
      }
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      backgroundColor: "transparent"
    }
  }, {
    props: {
      variant: "query"
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
}))), BF = Me("span", {
  name: "MuiLinearProgress",
  slot: "Dashed",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.dashed, t[`dashedColor${Ee(n.color)}`]];
  }
})(et(({
  theme: e
}) => ({
  position: "absolute",
  marginTop: 0,
  height: "100%",
  width: "100%",
  backgroundSize: "10px 10px",
  backgroundPosition: "0 -23px",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3,
      backgroundImage: "radial-gradient(currentColor 0%, currentColor 16%, transparent 42%)"
    }
  }, ...Object.entries(e.palette).filter(bn()).map(([t]) => {
    const n = Yh(e, t);
    return {
      props: {
        color: t
      },
      style: {
        backgroundImage: `radial-gradient(${n} 0%, ${n} 16%, transparent 42%)`
      }
    };
  })]
})), MF || {
  // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
  animation: `${op} 3s infinite linear`
}), FF = Me("span", {
  name: "MuiLinearProgress",
  slot: "Bar1",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar1, t[`barColor${Ee(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar1Indeterminate, n.variant === "determinate" && t.bar1Determinate, n.variant === "buffer" && t.bar1Buffer];
  }
})(et(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      backgroundColor: "currentColor"
    }
  }, ...Object.entries(e.palette).filter(bn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main
    }
  })), {
    props: {
      variant: "determinate"
    },
    style: {
      transition: `transform .${tp}s linear`
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      zIndex: 1,
      transition: `transform .${tp}s linear`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: PF || {
      animation: `${np} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`
    }
  }]
}))), LF = Me("span", {
  name: "MuiLinearProgress",
  slot: "Bar2",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar2, t[`barColor${Ee(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar2Indeterminate, n.variant === "buffer" && t.bar2Buffer];
  }
})(et(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [...Object.entries(e.palette).filter(bn()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--LinearProgressBar2-barColor": (e.vars || e).palette[t].main
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color !== "inherit",
    style: {
      backgroundColor: "var(--LinearProgressBar2-barColor, currentColor)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color === "inherit",
    style: {
      backgroundColor: "currentColor"
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3
    }
  }, ...Object.entries(e.palette).filter(bn()).map(([t]) => ({
    props: {
      color: t,
      variant: "buffer"
    },
    style: {
      backgroundColor: Yh(e, t),
      transition: `transform .${tp}s linear`
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: _F || {
      animation: `${rp} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`
    }
  }]
}))), n1 = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiLinearProgress"
  }), {
    className: o,
    color: i = "primary",
    value: s,
    valueBuffer: l,
    variant: c = "indeterminate",
    ...u
  } = r, d = {
    ...r,
    color: i,
    variant: c
  }, f = AF(d), p = ou(), h = {}, g = {
    bar1: {},
    bar2: {}
  };
  if (c === "determinate" || c === "buffer")
    if (s !== void 0) {
      h["aria-valuenow"] = Math.round(s), h["aria-valuemin"] = 0, h["aria-valuemax"] = 100;
      let m = s - 100;
      p && (m = -m), g.bar1.transform = `translateX(${m}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
  if (c === "buffer")
    if (l !== void 0) {
      let m = (l || 0) - 100;
      p && (m = -m), g.bar2.transform = `translateX(${m}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
  return /* @__PURE__ */ Se(DF, {
    className: Oe(f.root, o),
    ownerState: d,
    role: "progressbar",
    ...h,
    ref: n,
    ...u,
    children: [c === "buffer" ? /* @__PURE__ */ N(BF, {
      className: f.dashed,
      ownerState: d
    }) : null, /* @__PURE__ */ N(FF, {
      className: f.bar1,
      ownerState: d,
      style: g.bar1
    }), c === "determinate" ? null : /* @__PURE__ */ N(LF, {
      className: f.bar2,
      ownerState: d,
      style: g.bar2
    })]
  });
});
process.env.NODE_ENV !== "production" && (n1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: a.oneOfType([a.oneOf(["inherit", "primary", "secondary"]), a.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */
  value: a.number,
  /**
   * The value for the buffer variant.
   * Value between 0 and 100.
   */
  valueBuffer: a.number,
  /**
   * The variant to use.
   * Use indeterminate or query when there is no progress value.
   * @default 'indeterminate'
   */
  variant: a.oneOf(["buffer", "determinate", "indeterminate", "query"])
});
const zF = we(({ disablePortal: e, isCircle: t = !1 }) => /* @__PURE__ */ N(Vi, { disablePortal: e, children: /* @__PURE__ */ Se(
  Jr,
  {
    sx: {
      width: 1,
      minHeight: 1,
      flexGrow: 1,
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      position: "fixed",
      // 基于 <body>
      top: 0,
      left: 0,
      right: 0
    },
    children: [
      t && /* @__PURE__ */ N(uh, { color: "primary", disableShrink: !0, size: 40 }),
      !t && /* @__PURE__ */ N(
        n1,
        {
          color: "primary",
          sx: { width: 1, maxWidth: 360, height: "4px", borderRadius: "8px" }
        }
      )
    ]
  }
) }));
zF.displayName = "Loading";
function VF(e) {
  return Et("MuiDialog", e);
}
const Kd = kt("MuiDialog", ["root", "scrollPaper", "scrollBody", "container", "paper", "paperScrollPaper", "paperScrollBody", "paperWidthFalse", "paperWidthXs", "paperWidthSm", "paperWidthMd", "paperWidthLg", "paperWidthXl", "paperFullWidth", "paperFullScreen"]), r1 = /* @__PURE__ */ M.createContext({});
process.env.NODE_ENV !== "production" && (r1.displayName = "DialogContext");
const jF = Me(Eh, {
  name: "MuiDialog",
  slot: "Backdrop",
  overrides: (e, t) => t.backdrop
})({
  // Improve scrollable dialog support.
  zIndex: -1
}), HF = (e) => {
  const {
    classes: t,
    scroll: n,
    maxWidth: r,
    fullWidth: o,
    fullScreen: i
  } = e, s = {
    root: ["root"],
    container: ["container", `scroll${Ee(n)}`],
    paper: ["paper", `paperScroll${Ee(n)}`, `paperWidth${Ee(String(r))}`, o && "paperFullWidth", i && "paperFullScreen"]
  };
  return Mt(s, VF, t);
}, WF = Me(vu, {
  name: "MuiDialog",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  "@media print": {
    // Use !important to override the Modal inline-style.
    position: "absolute !important"
  }
}), UF = Me("div", {
  name: "MuiDialog",
  slot: "Container",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.container, t[`scroll${Ee(n.scroll)}`]];
  }
})({
  height: "100%",
  "@media print": {
    height: "auto"
  },
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      justifyContent: "center",
      alignItems: "center"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      overflowY: "auto",
      overflowX: "hidden",
      textAlign: "center",
      "&::after": {
        content: '""',
        display: "inline-block",
        verticalAlign: "middle",
        height: "100%",
        width: "0"
      }
    }
  }]
}), qF = Me(ss, {
  name: "MuiDialog",
  slot: "Paper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.paper, t[`scrollPaper${Ee(n.scroll)}`], t[`paperWidth${Ee(String(n.maxWidth))}`], n.fullWidth && t.paperFullWidth, n.fullScreen && t.paperFullScreen];
  }
})(et(({
  theme: e
}) => ({
  margin: 32,
  position: "relative",
  overflowY: "auto",
  "@media print": {
    overflowY: "visible",
    boxShadow: "none"
  },
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      flexDirection: "column",
      maxHeight: "calc(100% - 64px)"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      display: "inline-block",
      verticalAlign: "middle",
      textAlign: "initial"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.maxWidth,
    style: {
      maxWidth: "calc(100% - 64px)"
    }
  }, {
    props: {
      maxWidth: "xs"
    },
    style: {
      maxWidth: e.breakpoints.unit === "px" ? Math.max(e.breakpoints.values.xs, 444) : `max(${e.breakpoints.values.xs}${e.breakpoints.unit}, 444px)`,
      [`&.${Kd.paperScrollBody}`]: {
        [e.breakpoints.down(Math.max(e.breakpoints.values.xs, 444) + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  }, ...Object.keys(e.breakpoints.values).filter((t) => t !== "xs").map((t) => ({
    props: {
      maxWidth: t
    },
    style: {
      maxWidth: `${e.breakpoints.values[t]}${e.breakpoints.unit}`,
      [`&.${Kd.paperScrollBody}`]: {
        [e.breakpoints.down(e.breakpoints.values[t] + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  })), {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "calc(100% - 64px)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullScreen,
    style: {
      margin: 0,
      width: "100%",
      maxWidth: "100%",
      height: "100%",
      maxHeight: "none",
      borderRadius: 0,
      [`&.${Kd.paperScrollBody}`]: {
        margin: 0,
        maxWidth: "100%"
      }
    }
  }]
}))), o1 = /* @__PURE__ */ M.forwardRef(function(t, n) {
  const r = Nt({
    props: t,
    name: "MuiDialog"
  }), o = io(), i = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    "aria-describedby": s,
    "aria-labelledby": l,
    "aria-modal": c = !0,
    BackdropComponent: u,
    BackdropProps: d,
    children: f,
    className: p,
    disableEscapeKeyDown: h = !1,
    fullScreen: g = !1,
    fullWidth: m = !1,
    maxWidth: b = "sm",
    onClick: x,
    onClose: E,
    open: v,
    PaperComponent: w = ss,
    PaperProps: S = {},
    scroll: T = "paper",
    slots: C = {},
    slotProps: k = {},
    TransitionComponent: P = Ko,
    transitionDuration: y = i,
    TransitionProps: R,
    ...$
  } = r, A = {
    ...r,
    disableEscapeKeyDown: h,
    fullScreen: g,
    fullWidth: m,
    maxWidth: b,
    scroll: T
  }, O = HF(A), _ = M.useRef(), I = (pe) => {
    _.current = pe.target === pe.currentTarget;
  }, D = (pe) => {
    x && x(pe), _.current && (_.current = null, E && E(pe, "backdropClick"));
  }, z = Bp(l), B = M.useMemo(() => ({
    titleId: z
  }), [z]), F = {
    transition: P,
    ...C
  }, L = {
    transition: R,
    paper: S,
    backdrop: d,
    ...k
  }, W = {
    slots: F,
    slotProps: L
  }, [U, Z] = pt("root", {
    elementType: WF,
    shouldForwardComponentProp: !0,
    externalForwardedProps: W,
    ownerState: A,
    className: Oe(O.root, p),
    ref: n
  }), [Q, ee] = pt("backdrop", {
    elementType: jF,
    shouldForwardComponentProp: !0,
    externalForwardedProps: W,
    ownerState: A
  }), [te, q] = pt("paper", {
    elementType: qF,
    shouldForwardComponentProp: !0,
    externalForwardedProps: W,
    ownerState: A,
    className: Oe(O.paper, S.className)
  }), [oe, K] = pt("container", {
    elementType: UF,
    externalForwardedProps: W,
    ownerState: A,
    className: Oe(O.container)
  }), [ne, j] = pt("transition", {
    elementType: Ko,
    externalForwardedProps: W,
    ownerState: A,
    additionalProps: {
      appear: !0,
      in: v,
      timeout: y,
      role: "presentation"
    }
  });
  return /* @__PURE__ */ N(U, {
    closeAfterTransition: !0,
    slots: {
      backdrop: Q
    },
    slotProps: {
      backdrop: {
        transitionDuration: y,
        as: u,
        ...ee
      }
    },
    disableEscapeKeyDown: h,
    onClose: E,
    open: v,
    onClick: D,
    ...Z,
    ...$,
    children: /* @__PURE__ */ N(ne, {
      ...j,
      children: /* @__PURE__ */ N(oe, {
        onMouseDown: I,
        ...K,
        children: /* @__PURE__ */ N(te, {
          as: w,
          elevation: 24,
          role: "dialog",
          "aria-describedby": s,
          "aria-labelledby": z,
          "aria-modal": c,
          ...q,
          children: /* @__PURE__ */ N(r1.Provider, {
            value: B,
            children: f
          })
        })
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (o1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The id(s) of the element(s) that describe the dialog.
   */
  "aria-describedby": a.string,
  /**
   * The id(s) of the element(s) that label the dialog.
   */
  "aria-labelledby": a.string,
  /**
   * Informs assistive technologies that the element is modal.
   * It's added on the element with role="dialog".
   * @default true
   */
  "aria-modal": a.oneOfType([a.oneOf(["false", "true"]), a.bool]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: a.elementType,
  /**
   * @ignore
   */
  BackdropProps: a.object,
  /**
   * Dialog children, usually the included sub-components.
   */
  children: a.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: a.object,
  /**
   * @ignore
   */
  className: a.string,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: a.bool,
  /**
   * If `true`, the dialog is full-screen.
   * @default false
   */
  fullScreen: a.bool,
  /**
   * If `true`, the dialog stretches to `maxWidth`.
   *
   * Notice that the dialog width grow is limited by the default margin.
   * @default false
   */
  fullWidth: a.bool,
  /**
   * Determine the max-width of the dialog.
   * The dialog width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'sm'
   */
  maxWidth: a.oneOfType([a.oneOf(["xs", "sm", "md", "lg", "xl", !1]), a.string]),
  /**
   * @ignore
   */
  onClick: a.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: a.func,
  /**
   * If `true`, the component is shown.
   */
  open: a.bool.isRequired,
  /**
   * The component used to render the body of the dialog.
   * @default Paper
   */
  PaperComponent: a.elementType,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @default {}
   * @deprecated Use `slotProps.paper` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PaperProps: a.object,
  /**
   * Determine the container for scrolling the dialog.
   * @default 'paper'
   */
  scroll: a.oneOf(["body", "paper"]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: a.shape({
    backdrop: a.oneOfType([a.func, a.object]),
    container: a.oneOfType([a.func, a.object]),
    paper: a.oneOfType([a.func, a.object]),
    root: a.oneOfType([a.func, a.object]),
    transition: a.oneOfType([a.func, a.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: a.shape({
    backdrop: a.elementType,
    container: a.elementType,
    paper: a.elementType,
    root: a.elementType,
    transition: a.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: a.oneOfType([a.arrayOf(a.oneOfType([a.func, a.object, a.bool])), a.func, a.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: a.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: a.oneOfType([a.number, a.shape({
    appear: a.number,
    enter: a.number,
    exit: a.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated Use `slotProps.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionProps: a.object
});
const i1 = we(
  ({
    isOpen: e,
    closeModal: t,
    isPrevented: n = !0,
    children: r,
    maxWidth: o = "sm",
    fullWidth: i = !0,
    sx: s,
    ...l
  }) => {
    const { paperCommonStyles: c } = as();
    return /* @__PURE__ */ N(
      o1,
      {
        className: "VenomousUI-Modal",
        open: e,
        onClose: n ? void 0 : t,
        scroll: "paper",
        keepMounted: !0,
        maxWidth: o,
        fullWidth: i,
        sx: { ...s },
        slotProps: {
          paper: {
            sx: {
              ...c
            }
          }
        },
        ...l,
        children: r
      }
    );
  }
);
i1.displayName = "Modal";
function QW() {
  const [e, t] = Jt(!1), n = Fe(() => t(!0), []), r = Fe(() => t(!1), []);
  return {
    isOpen: e,
    openModal: n,
    closeModal: r
  };
}
const YF = we(
  ({
    onSubmit: e,
    onClose: t,
    isSubmitting: n = !1,
    title: r = "",
    contentMessage: o = "",
    cancelButtonText: i = "Cancel",
    confirmButtonText: s = "Confirm",
    confirmButtonIsDisabled: l = !1,
    cancelButtonIsDisabled: c = !1,
    ...u
  }) => {
    const d = Ge(u.isOpen);
    return Ze(() => {
      d.current && !u.isOpen && (t == null || t()), d.current = u.isOpen;
    }, [u.isOpen, t]), /* @__PURE__ */ Se(i1, { isPrevented: !0, ...u, children: [
      /* @__PURE__ */ N(In, { isTitle: !0, text: r, p: "8px" }),
      /* @__PURE__ */ N(In, { text: o, p: "8px", pb: "24px" }),
      /* @__PURE__ */ Se(sn, { row: !0, justifyContent: "flex-end", children: [
        /* @__PURE__ */ N(
          $n,
          {
            text: i,
            onClick: u.closeModal,
            disabled: c || n,
            isOutlined: !0
          }
        ),
        /* @__PURE__ */ N(
          $n,
          {
            text: s,
            onClick: () => {
              (async () => (await (e == null ? void 0 : e()), u.closeModal()))();
            },
            disabled: l,
            loading: n,
            autoFocus: !0
          }
        )
      ] })
    ] });
  }
);
YF.displayName = "ConfirmModal";
function xb(e) {
  return e.substring(2).toLowerCase();
}
function GF(e, t) {
  return t.documentElement.clientWidth < e.clientX || t.documentElement.clientHeight < e.clientY;
}
function Ic(e) {
  const {
    children: t,
    disableReactTree: n = !1,
    mouseEvent: r = "onClick",
    onClickAway: o,
    touchEvent: i = "onTouchEnd"
  } = e, s = M.useRef(!1), l = M.useRef(null), c = M.useRef(!1), u = M.useRef(!1);
  M.useEffect(() => (setTimeout(() => {
    c.current = !0;
  }, 0), () => {
    c.current = !1;
  }), []);
  const d = pn(ti(t), l), f = Nr((g) => {
    const m = u.current;
    u.current = !1;
    const b = On(l.current);
    if (!c.current || !l.current || "clientX" in g && GF(g, b))
      return;
    if (s.current) {
      s.current = !1;
      return;
    }
    let x;
    g.composedPath ? x = g.composedPath().includes(l.current) : x = !b.documentElement.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      g.target
    ) || l.current.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      g.target
    ), !x && (n || !m) && o(g);
  }), p = (g) => (m) => {
    u.current = !0;
    const b = t.props[g];
    b && b(m);
  }, h = {
    ref: d
  };
  return i !== !1 && (h[i] = p(i)), M.useEffect(() => {
    if (i !== !1) {
      const g = xb(i), m = On(l.current), b = () => {
        s.current = !0;
      };
      return m.addEventListener(g, f), m.addEventListener("touchmove", b), () => {
        m.removeEventListener(g, f), m.removeEventListener("touchmove", b);
      };
    }
  }, [f, i]), r !== !1 && (h[r] = p(r)), M.useEffect(() => {
    if (r !== !1) {
      const g = xb(r), m = On(l.current);
      return m.addEventListener(g, f), () => {
        m.removeEventListener(g, f);
      };
    }
  }, [f, r]), /* @__PURE__ */ M.cloneElement(t, h);
}
process.env.NODE_ENV !== "production" && (Ic.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The wrapped element.
   */
  children: ko.isRequired,
  /**
   * If `true`, the React tree is ignored and only the DOM tree is considered.
   * This prop changes how portaled elements are handled.
   * @default false
   */
  disableReactTree: a.bool,
  /**
   * The mouse event to listen to. You can disable the listener by providing `false`.
   * @default 'onClick'
   */
  mouseEvent: a.oneOf(["onClick", "onMouseDown", "onMouseUp", "onPointerDown", "onPointerUp", !1]),
  /**
   * Callback fired when a "click away" event is detected.
   */
  onClickAway: a.func.isRequired,
  /**
   * The touch event to listen to. You can disable the listener by providing `false`.
   * @default 'onTouchEnd'
   */
  touchEvent: a.oneOf(["onTouchEnd", "onTouchStart", !1])
});
process.env.NODE_ENV !== "production" && (Ic.propTypes = Ma(Ic.propTypes));
const KF = fs((e) => ({
  activeId: null,
  setActiveId: (t) => e({ activeId: t })
}));
function XF(e) {
  const { activeId: t, setActiveId: n } = KF(), [r, o] = Jt(null), i = !!r && (!e || t === e), s = Fe(
    (c) => {
      const u = c.currentTarget;
      e ? (n(e), o(u)) : o(r ? null : u);
    },
    [e, n]
  ), l = Fe(() => {
    var c;
    (c = window.getSelection()) != null && c.toString() || (e && n(null), o(null));
  }, [e, n]);
  return {
    anchorEl: r,
    isOpen: i,
    openPopper: s,
    closePopper: l
  };
}
const s1 = we(
  ({ id: e, children: t, renderPopperHandler: n, position: r = "bottom", sx: o, contentSx: i }) => {
    const { anchorEl: s, isOpen: l, openPopper: c, closePopper: u } = XF(e);
    return /* @__PURE__ */ N(Ic, { onClickAway: u, children: /* @__PURE__ */ Se(
      Jr,
      {
        sx: { position: "relative", ...o },
        role: "presentation",
        className: "VenomousUI-Popper",
        children: [
          n({ anchorEl: s, isOpen: l, openPopper: c, closePopper: u }),
          /* @__PURE__ */ N(uu, { open: l, anchorEl: s, placement: r, transition: !0, keepMounted: !0, children: ({ TransitionProps: d }) => /* @__PURE__ */ N(Ko, { ...d, children: /* @__PURE__ */ N(wo, { isOutlined: !0, sx: { width: "100%", ...i }, children: t }) }) })
        ]
      }
    ) });
  }
);
s1.displayName = "Popper";
const ip = typeof Up({}) == "function", ZF = (e, t) => ({
  WebkitFontSmoothing: "antialiased",
  // Antialiasing.
  MozOsxFontSmoothing: "grayscale",
  // Antialiasing.
  // Change from `box-sizing: content-box` so that `width`
  // is not affected by `padding` or `border`.
  boxSizing: "border-box",
  // Fix font resize problem in iOS
  WebkitTextSizeAdjust: "100%",
  // When used under CssVarsProvider, colorScheme should not be applied dynamically because it will generate the stylesheet twice for server-rendered applications.
  ...t && !e.vars && {
    colorScheme: e.palette.mode
  }
}), QF = (e) => ({
  color: (e.vars || e).palette.text.primary,
  ...e.typography.body1,
  backgroundColor: (e.vars || e).palette.background.default,
  "@media print": {
    // Save printer ink.
    backgroundColor: (e.vars || e).palette.common.white
  }
}), a1 = (e, t = !1) => {
  var i, s;
  const n = {};
  t && e.colorSchemes && typeof e.getColorSchemeSelector == "function" && Object.entries(e.colorSchemes).forEach(([l, c]) => {
    var d, f;
    const u = e.getColorSchemeSelector(l);
    u.startsWith("@") ? n[u] = {
      ":root": {
        colorScheme: (d = c.palette) == null ? void 0 : d.mode
      }
    } : n[u.replace(/\s*&/, "")] = {
      colorScheme: (f = c.palette) == null ? void 0 : f.mode
    };
  });
  let r = {
    html: ZF(e, t),
    "*, *::before, *::after": {
      boxSizing: "inherit"
    },
    "strong, b": {
      fontWeight: e.typography.fontWeightBold
    },
    body: {
      margin: 0,
      // Remove the margin in all browsers.
      ...QF(e),
      // Add support for document.body.requestFullScreen().
      // Other elements, if background transparent, are not supported.
      "&::backdrop": {
        backgroundColor: (e.vars || e).palette.background.default
      }
    },
    ...n
  };
  const o = (s = (i = e.components) == null ? void 0 : i.MuiCssBaseline) == null ? void 0 : s.styleOverrides;
  return o && (r = [r, o]), r;
}, Xl = "mui-ecs", JF = (e) => {
  const t = a1(e, !1), n = Array.isArray(t) ? t[0] : t;
  return !e.vars && n && (n.html[`:root:has(${Xl})`] = {
    colorScheme: e.palette.mode
  }), e.colorSchemes && Object.entries(e.colorSchemes).forEach(([r, o]) => {
    var s, l;
    const i = e.getColorSchemeSelector(r);
    i.startsWith("@") ? n[i] = {
      [`:root:not(:has(.${Xl}))`]: {
        colorScheme: (s = o.palette) == null ? void 0 : s.mode
      }
    } : n[i.replace(/\s*&/, "")] = {
      [`&:not(:has(.${Xl}))`]: {
        colorScheme: (l = o.palette) == null ? void 0 : l.mode
      }
    };
  }), t;
}, eL = Up(ip ? ({
  theme: e,
  enableColorScheme: t
}) => a1(e, t) : ({
  theme: e
}) => JF(e));
function l1(e) {
  const t = Nt({
    props: e,
    name: "MuiCssBaseline"
  }), {
    children: n,
    enableColorScheme: r = !1
  } = t;
  return /* @__PURE__ */ Se(M.Fragment, {
    children: [ip && /* @__PURE__ */ N(eL, {
      enableColorScheme: r
    }), !ip && !r && /* @__PURE__ */ N("span", {
      className: Xl,
      style: {
        display: "none"
      }
    }), n]
  });
}
process.env.NODE_ENV !== "production" && (l1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * You can wrap a node.
   */
  children: a.node,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   * @default false
   */
  enableColorScheme: a.bool
});
function tL() {
  const { themeMode: e } = Uu(), { themePalette: t } = qh(), n = ct(() => iu({
    palette: {
      mode: e,
      primary: {
        main: t.main,
        dark: t.dark,
        light: t.light,
        contrastText: t.contrastText
      }
    }
  }), [e, t]);
  return nL(t), { theme: n };
}
function nL(e) {
  Ze(() => {
    const t = document.createElement("style");
    return t.innerHTML = `
          /* 设置选中文本的样式 */
          ::selection {
            background-color: ${e.light};                        /* 设置选中文本的背景色 */
            color: white;                                                   /* 设置选中文本的文字颜色 */
          }
    
          /* 设置滚动条的样式 */
          ::-webkit-scrollbar {
            width: 8px;                                                     /* 设置滚动条的宽度 */
            height: 8px;                                                    /* 设置滚动条的高度 */
          }
          ::-webkit-scrollbar-thumb {
            background-color: ${e.main};                         /* 设置滚动条的颜色 */
            border-radius: 4px;                                             /* 设置滚动条的圆角 */
          }
          ::-webkit-scrollbar-thumb:hover {
            background-color: ${e.dark};                         /* 悬停时加深颜色 */
          } 
          ::-webkit-scrollbar-track {
            background-color: rgba(0, 0, 0, 0.1);                         /* 滑轨颜色 */
            border-radius: 4px;                                             /* 圆角 */
            transition: opacity 0.5s ease-in-out;                           /* 滑轨过渡效果 */
          }
          /* Firefox 滚动条样式 */
          * {
            scrollbar-color: ${e.main} rgba(0, 0, 0, 0.1);     /* 滑块 和 滑轨颜色 */
            scrollbar-width: medium;                                        /* 滚动条宽度 */
          }
          /* Firefox 滚动条的过渡效果 */
          *::-webkit-scrollbar {
            transition: opacity 0.5s ease-in-out;
          }
        `, document.head.appendChild(t), () => {
      document.head.removeChild(t);
    };
  }, [e]);
}
const rL = we(({ children: e }) => {
  const { theme: t } = tL();
  return /* @__PURE__ */ Se(HN, { theme: t, disableTransitionOnChange: !0, children: [
    /* @__PURE__ */ N(l1, {}),
    e
  ] });
});
rL.displayName = "ThemeProvider";
function oL(e) {
  if (typeof document > "u") return;
  let t = document.head || document.getElementsByTagName("head")[0], n = document.createElement("style");
  n.type = "text/css", t.appendChild(n), n.styleSheet ? n.styleSheet.cssText = e : n.appendChild(document.createTextNode(e));
}
const iL = (e) => {
  switch (e) {
    case "success":
      return lL;
    case "info":
      return uL;
    case "warning":
      return cL;
    case "error":
      return dL;
    default:
      return null;
  }
}, sL = Array(12).fill(0), aL = ({ visible: e, className: t }) => /* @__PURE__ */ Y.createElement("div", {
  className: [
    "sonner-loading-wrapper",
    t
  ].filter(Boolean).join(" "),
  "data-visible": e
}, /* @__PURE__ */ Y.createElement("div", {
  className: "sonner-spinner"
}, sL.map((n, r) => /* @__PURE__ */ Y.createElement("div", {
  className: "sonner-loading-bar",
  key: `spinner-bar-${r}`
})))), lL = /* @__PURE__ */ Y.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ Y.createElement("path", {
  fillRule: "evenodd",
  d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
  clipRule: "evenodd"
})), cL = /* @__PURE__ */ Y.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ Y.createElement("path", {
  fillRule: "evenodd",
  d: "M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z",
  clipRule: "evenodd"
})), uL = /* @__PURE__ */ Y.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ Y.createElement("path", {
  fillRule: "evenodd",
  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z",
  clipRule: "evenodd"
})), dL = /* @__PURE__ */ Y.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ Y.createElement("path", {
  fillRule: "evenodd",
  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0110 5zm0 10a1 1 0 100-2 1 1 0 000 2z",
  clipRule: "evenodd"
})), fL = /* @__PURE__ */ Y.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "12",
  height: "12",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "1.5",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, /* @__PURE__ */ Y.createElement("line", {
  x1: "18",
  y1: "6",
  x2: "6",
  y2: "18"
}), /* @__PURE__ */ Y.createElement("line", {
  x1: "6",
  y1: "6",
  x2: "18",
  y2: "18"
})), pL = () => {
  const [e, t] = Y.useState(document.hidden);
  return Y.useEffect(() => {
    const n = () => {
      t(document.hidden);
    };
    return document.addEventListener("visibilitychange", n), () => window.removeEventListener("visibilitychange", n);
  }, []), e;
};
let sp = 1;
class hL {
  constructor() {
    this.subscribe = (t) => (this.subscribers.push(t), () => {
      const n = this.subscribers.indexOf(t);
      this.subscribers.splice(n, 1);
    }), this.publish = (t) => {
      this.subscribers.forEach((n) => n(t));
    }, this.addToast = (t) => {
      this.publish(t), this.toasts = [
        ...this.toasts,
        t
      ];
    }, this.create = (t) => {
      var n;
      const { message: r, ...o } = t, i = typeof (t == null ? void 0 : t.id) == "number" || ((n = t.id) == null ? void 0 : n.length) > 0 ? t.id : sp++, s = this.toasts.find((c) => c.id === i), l = t.dismissible === void 0 ? !0 : t.dismissible;
      return this.dismissedToasts.has(i) && this.dismissedToasts.delete(i), s ? this.toasts = this.toasts.map((c) => c.id === i ? (this.publish({
        ...c,
        ...t,
        id: i,
        title: r
      }), {
        ...c,
        ...t,
        id: i,
        dismissible: l,
        title: r
      }) : c) : this.addToast({
        title: r,
        ...o,
        dismissible: l,
        id: i
      }), i;
    }, this.dismiss = (t) => (t ? (this.dismissedToasts.add(t), requestAnimationFrame(() => this.subscribers.forEach((n) => n({
      id: t,
      dismiss: !0
    })))) : this.toasts.forEach((n) => {
      this.subscribers.forEach((r) => r({
        id: n.id,
        dismiss: !0
      }));
    }), t), this.message = (t, n) => this.create({
      ...n,
      message: t
    }), this.error = (t, n) => this.create({
      ...n,
      message: t,
      type: "error"
    }), this.success = (t, n) => this.create({
      ...n,
      type: "success",
      message: t
    }), this.info = (t, n) => this.create({
      ...n,
      type: "info",
      message: t
    }), this.warning = (t, n) => this.create({
      ...n,
      type: "warning",
      message: t
    }), this.loading = (t, n) => this.create({
      ...n,
      type: "loading",
      message: t
    }), this.promise = (t, n) => {
      if (!n)
        return;
      let r;
      n.loading !== void 0 && (r = this.create({
        ...n,
        promise: t,
        type: "loading",
        message: n.loading,
        description: typeof n.description != "function" ? n.description : void 0
      }));
      const o = Promise.resolve(t instanceof Function ? t() : t);
      let i = r !== void 0, s;
      const l = o.then(async (u) => {
        if (s = [
          "resolve",
          u
        ], Y.isValidElement(u))
          i = !1, this.create({
            id: r,
            type: "default",
            message: u
          });
        else if (gL(u) && !u.ok) {
          i = !1;
          const f = typeof n.error == "function" ? await n.error(`HTTP error! status: ${u.status}`) : n.error, p = typeof n.description == "function" ? await n.description(`HTTP error! status: ${u.status}`) : n.description, g = typeof f == "object" && !Y.isValidElement(f) ? f : {
            message: f
          };
          this.create({
            id: r,
            type: "error",
            description: p,
            ...g
          });
        } else if (u instanceof Error) {
          i = !1;
          const f = typeof n.error == "function" ? await n.error(u) : n.error, p = typeof n.description == "function" ? await n.description(u) : n.description, g = typeof f == "object" && !Y.isValidElement(f) ? f : {
            message: f
          };
          this.create({
            id: r,
            type: "error",
            description: p,
            ...g
          });
        } else if (n.success !== void 0) {
          i = !1;
          const f = typeof n.success == "function" ? await n.success(u) : n.success, p = typeof n.description == "function" ? await n.description(u) : n.description, g = typeof f == "object" && !Y.isValidElement(f) ? f : {
            message: f
          };
          this.create({
            id: r,
            type: "success",
            description: p,
            ...g
          });
        }
      }).catch(async (u) => {
        if (s = [
          "reject",
          u
        ], n.error !== void 0) {
          i = !1;
          const d = typeof n.error == "function" ? await n.error(u) : n.error, f = typeof n.description == "function" ? await n.description(u) : n.description, h = typeof d == "object" && !Y.isValidElement(d) ? d : {
            message: d
          };
          this.create({
            id: r,
            type: "error",
            description: f,
            ...h
          });
        }
      }).finally(() => {
        i && (this.dismiss(r), r = void 0), n.finally == null || n.finally.call(n);
      }), c = () => new Promise((u, d) => l.then(() => s[0] === "reject" ? d(s[1]) : u(s[1])).catch(d));
      return typeof r != "string" && typeof r != "number" ? {
        unwrap: c
      } : Object.assign(r, {
        unwrap: c
      });
    }, this.custom = (t, n) => {
      const r = (n == null ? void 0 : n.id) || sp++;
      return this.create({
        jsx: t(r),
        id: r,
        ...n
      }), r;
    }, this.getActiveToasts = () => this.toasts.filter((t) => !this.dismissedToasts.has(t.id)), this.subscribers = [], this.toasts = [], this.dismissedToasts = /* @__PURE__ */ new Set();
  }
}
const Sn = new hL(), mL = (e, t) => {
  const n = (t == null ? void 0 : t.id) || sp++;
  return Sn.addToast({
    title: e,
    ...t,
    id: n
  }), n;
}, gL = (e) => e && typeof e == "object" && "ok" in e && typeof e.ok == "boolean" && "status" in e && typeof e.status == "number", yL = mL, bL = () => Sn.toasts, vL = () => Sn.getActiveToasts(), Xd = Object.assign(yL, {
  success: Sn.success,
  info: Sn.info,
  warning: Sn.warning,
  error: Sn.error,
  custom: Sn.custom,
  message: Sn.message,
  promise: Sn.promise,
  dismiss: Sn.dismiss,
  loading: Sn.loading
}, {
  getHistory: bL,
  getToasts: vL
});
oL("[data-sonner-toaster][dir=ltr],html[dir=ltr]{--toast-icon-margin-start:-3px;--toast-icon-margin-end:4px;--toast-svg-margin-start:-1px;--toast-svg-margin-end:0px;--toast-button-margin-start:auto;--toast-button-margin-end:0;--toast-close-button-start:0;--toast-close-button-end:unset;--toast-close-button-transform:translate(-35%, -35%)}[data-sonner-toaster][dir=rtl],html[dir=rtl]{--toast-icon-margin-start:4px;--toast-icon-margin-end:-3px;--toast-svg-margin-start:0px;--toast-svg-margin-end:-1px;--toast-button-margin-start:0;--toast-button-margin-end:auto;--toast-close-button-start:unset;--toast-close-button-end:0;--toast-close-button-transform:translate(35%, -35%)}[data-sonner-toaster]{position:fixed;width:var(--width);font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;--gray1:hsl(0, 0%, 99%);--gray2:hsl(0, 0%, 97.3%);--gray3:hsl(0, 0%, 95.1%);--gray4:hsl(0, 0%, 93%);--gray5:hsl(0, 0%, 90.9%);--gray6:hsl(0, 0%, 88.7%);--gray7:hsl(0, 0%, 85.8%);--gray8:hsl(0, 0%, 78%);--gray9:hsl(0, 0%, 56.1%);--gray10:hsl(0, 0%, 52.3%);--gray11:hsl(0, 0%, 43.5%);--gray12:hsl(0, 0%, 9%);--border-radius:8px;box-sizing:border-box;padding:0;margin:0;list-style:none;outline:0;z-index:999999999;transition:transform .4s ease}[data-sonner-toaster][data-lifted=true]{transform:translateY(-8px)}@media (hover:none) and (pointer:coarse){[data-sonner-toaster][data-lifted=true]{transform:none}}[data-sonner-toaster][data-x-position=right]{right:var(--offset-right)}[data-sonner-toaster][data-x-position=left]{left:var(--offset-left)}[data-sonner-toaster][data-x-position=center]{left:50%;transform:translateX(-50%)}[data-sonner-toaster][data-y-position=top]{top:var(--offset-top)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--offset-bottom)}[data-sonner-toast]{--y:translateY(100%);--lift-amount:calc(var(--lift) * var(--gap));z-index:var(--z-index);position:absolute;opacity:0;transform:var(--y);touch-action:none;transition:transform .4s,opacity .4s,height .4s,box-shadow .2s;box-sizing:border-box;outline:0;overflow-wrap:anywhere}[data-sonner-toast][data-styled=true]{padding:16px;background:var(--normal-bg);border:1px solid var(--normal-border);color:var(--normal-text);border-radius:var(--border-radius);box-shadow:0 4px 12px rgba(0,0,0,.1);width:var(--width);font-size:13px;display:flex;align-items:center;gap:6px}[data-sonner-toast]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-y-position=top]{top:0;--y:translateY(-100%);--lift:1;--lift-amount:calc(1 * var(--gap))}[data-sonner-toast][data-y-position=bottom]{bottom:0;--y:translateY(100%);--lift:-1;--lift-amount:calc(var(--lift) * var(--gap))}[data-sonner-toast][data-styled=true] [data-description]{font-weight:400;line-height:1.4;color:#3f3f3f}[data-rich-colors=true][data-sonner-toast][data-styled=true] [data-description]{color:inherit}[data-sonner-toaster][data-sonner-theme=dark] [data-description]{color:#e8e8e8}[data-sonner-toast][data-styled=true] [data-title]{font-weight:500;line-height:1.5;color:inherit}[data-sonner-toast][data-styled=true] [data-icon]{display:flex;height:16px;width:16px;position:relative;justify-content:flex-start;align-items:center;flex-shrink:0;margin-left:var(--toast-icon-margin-start);margin-right:var(--toast-icon-margin-end)}[data-sonner-toast][data-promise=true] [data-icon]>svg{opacity:0;transform:scale(.8);transform-origin:center;animation:sonner-fade-in .3s ease forwards}[data-sonner-toast][data-styled=true] [data-icon]>*{flex-shrink:0}[data-sonner-toast][data-styled=true] [data-icon] svg{margin-left:var(--toast-svg-margin-start);margin-right:var(--toast-svg-margin-end)}[data-sonner-toast][data-styled=true] [data-content]{display:flex;flex-direction:column;gap:2px}[data-sonner-toast][data-styled=true] [data-button]{border-radius:4px;padding-left:8px;padding-right:8px;height:24px;font-size:12px;color:var(--normal-bg);background:var(--normal-text);margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end);border:none;font-weight:500;cursor:pointer;outline:0;display:flex;align-items:center;flex-shrink:0;transition:opacity .4s,box-shadow .2s}[data-sonner-toast][data-styled=true] [data-button]:focus-visible{box-shadow:0 0 0 2px rgba(0,0,0,.4)}[data-sonner-toast][data-styled=true] [data-button]:first-of-type{margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end)}[data-sonner-toast][data-styled=true] [data-cancel]{color:var(--normal-text);background:rgba(0,0,0,.08)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-styled=true] [data-cancel]{background:rgba(255,255,255,.3)}[data-sonner-toast][data-styled=true] [data-close-button]{position:absolute;left:var(--toast-close-button-start);right:var(--toast-close-button-end);top:0;height:20px;width:20px;display:flex;justify-content:center;align-items:center;padding:0;color:var(--gray12);background:var(--normal-bg);border:1px solid var(--gray4);transform:var(--toast-close-button-transform);border-radius:50%;cursor:pointer;z-index:1;transition:opacity .1s,background .2s,border-color .2s}[data-sonner-toast][data-styled=true] [data-close-button]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-styled=true] [data-disabled=true]{cursor:not-allowed}[data-sonner-toast][data-styled=true]:hover [data-close-button]:hover{background:var(--gray2);border-color:var(--gray5)}[data-sonner-toast][data-swiping=true]::before{content:'';position:absolute;left:-100%;right:-100%;height:100%;z-index:-1}[data-sonner-toast][data-y-position=top][data-swiping=true]::before{bottom:50%;transform:scaleY(3) translateY(50%)}[data-sonner-toast][data-y-position=bottom][data-swiping=true]::before{top:50%;transform:scaleY(3) translateY(-50%)}[data-sonner-toast][data-swiping=false][data-removed=true]::before{content:'';position:absolute;inset:0;transform:scaleY(2)}[data-sonner-toast][data-expanded=true]::after{content:'';position:absolute;left:0;height:calc(var(--gap) + 1px);bottom:100%;width:100%}[data-sonner-toast][data-mounted=true]{--y:translateY(0);opacity:1}[data-sonner-toast][data-expanded=false][data-front=false]{--scale:var(--toasts-before) * 0.05 + 1;--y:translateY(calc(var(--lift-amount) * var(--toasts-before))) scale(calc(-1 * var(--scale)));height:var(--front-toast-height)}[data-sonner-toast]>*{transition:opacity .4s}[data-sonner-toast][data-x-position=right]{right:0}[data-sonner-toast][data-x-position=left]{left:0}[data-sonner-toast][data-expanded=false][data-front=false][data-styled=true]>*{opacity:0}[data-sonner-toast][data-visible=false]{opacity:0;pointer-events:none}[data-sonner-toast][data-mounted=true][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset)));height:var(--initial-height)}[data-sonner-toast][data-removed=true][data-front=true][data-swipe-out=false]{--y:translateY(calc(var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset) + var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=false]{--y:translateY(40%);opacity:0;transition:transform .5s,opacity .2s}[data-sonner-toast][data-removed=true][data-front=false]::before{height:calc(var(--initial-height) + 20%)}[data-sonner-toast][data-swiping=true]{transform:var(--y) translateY(var(--swipe-amount-y,0)) translateX(var(--swipe-amount-x,0));transition:none}[data-sonner-toast][data-swiped=true]{user-select:none}[data-sonner-toast][data-swipe-out=true][data-y-position=bottom],[data-sonner-toast][data-swipe-out=true][data-y-position=top]{animation-duration:.2s;animation-timing-function:ease-out;animation-fill-mode:forwards}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=left]{animation-name:swipe-out-left}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=right]{animation-name:swipe-out-right}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=up]{animation-name:swipe-out-up}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=down]{animation-name:swipe-out-down}@keyframes swipe-out-left{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) - 100%));opacity:0}}@keyframes swipe-out-right{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) + 100%));opacity:0}}@keyframes swipe-out-up{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) - 100%));opacity:0}}@keyframes swipe-out-down{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) + 100%));opacity:0}}@media (max-width:600px){[data-sonner-toaster]{position:fixed;right:var(--mobile-offset-right);left:var(--mobile-offset-left);width:100%}[data-sonner-toaster][dir=rtl]{left:calc(var(--mobile-offset-left) * -1)}[data-sonner-toaster] [data-sonner-toast]{left:0;right:0;width:calc(100% - var(--mobile-offset-left) * 2)}[data-sonner-toaster][data-x-position=left]{left:var(--mobile-offset-left)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--mobile-offset-bottom)}[data-sonner-toaster][data-y-position=top]{top:var(--mobile-offset-top)}[data-sonner-toaster][data-x-position=center]{left:var(--mobile-offset-left);right:var(--mobile-offset-right);transform:none}}[data-sonner-toaster][data-sonner-theme=light]{--normal-bg:#fff;--normal-border:var(--gray4);--normal-text:var(--gray12);--success-bg:hsl(143, 85%, 96%);--success-border:hsl(145, 92%, 87%);--success-text:hsl(140, 100%, 27%);--info-bg:hsl(208, 100%, 97%);--info-border:hsl(221, 91%, 93%);--info-text:hsl(210, 92%, 45%);--warning-bg:hsl(49, 100%, 97%);--warning-border:hsl(49, 91%, 84%);--warning-text:hsl(31, 92%, 45%);--error-bg:hsl(359, 100%, 97%);--error-border:hsl(359, 100%, 94%);--error-text:hsl(360, 100%, 45%)}[data-sonner-toaster][data-sonner-theme=light] [data-sonner-toast][data-invert=true]{--normal-bg:#000;--normal-border:hsl(0, 0%, 20%);--normal-text:var(--gray1)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-invert=true]{--normal-bg:#fff;--normal-border:var(--gray3);--normal-text:var(--gray12)}[data-sonner-toaster][data-sonner-theme=dark]{--normal-bg:#000;--normal-bg-hover:hsl(0, 0%, 12%);--normal-border:hsl(0, 0%, 20%);--normal-border-hover:hsl(0, 0%, 25%);--normal-text:var(--gray1);--success-bg:hsl(150, 100%, 6%);--success-border:hsl(147, 100%, 12%);--success-text:hsl(150, 86%, 65%);--info-bg:hsl(215, 100%, 6%);--info-border:hsl(223, 43%, 17%);--info-text:hsl(216, 87%, 65%);--warning-bg:hsl(64, 100%, 6%);--warning-border:hsl(60, 100%, 9%);--warning-text:hsl(46, 87%, 65%);--error-bg:hsl(358, 76%, 10%);--error-border:hsl(357, 89%, 16%);--error-text:hsl(358, 100%, 81%)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]{background:var(--normal-bg);border-color:var(--normal-border);color:var(--normal-text)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]:hover{background:var(--normal-bg-hover);border-color:var(--normal-border-hover)}[data-rich-colors=true][data-sonner-toast][data-type=success]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=success] [data-close-button]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=info]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=info] [data-close-button]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning] [data-close-button]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=error]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}[data-rich-colors=true][data-sonner-toast][data-type=error] [data-close-button]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}.sonner-loading-wrapper{--size:16px;height:var(--size);width:var(--size);position:absolute;inset:0;z-index:10}.sonner-loading-wrapper[data-visible=false]{transform-origin:center;animation:sonner-fade-out .2s ease forwards}.sonner-spinner{position:relative;top:50%;left:50%;height:var(--size);width:var(--size)}.sonner-loading-bar{animation:sonner-spin 1.2s linear infinite;background:var(--gray11);border-radius:6px;height:8%;left:-10%;position:absolute;top:-3.9%;width:24%}.sonner-loading-bar:first-child{animation-delay:-1.2s;transform:rotate(.0001deg) translate(146%)}.sonner-loading-bar:nth-child(2){animation-delay:-1.1s;transform:rotate(30deg) translate(146%)}.sonner-loading-bar:nth-child(3){animation-delay:-1s;transform:rotate(60deg) translate(146%)}.sonner-loading-bar:nth-child(4){animation-delay:-.9s;transform:rotate(90deg) translate(146%)}.sonner-loading-bar:nth-child(5){animation-delay:-.8s;transform:rotate(120deg) translate(146%)}.sonner-loading-bar:nth-child(6){animation-delay:-.7s;transform:rotate(150deg) translate(146%)}.sonner-loading-bar:nth-child(7){animation-delay:-.6s;transform:rotate(180deg) translate(146%)}.sonner-loading-bar:nth-child(8){animation-delay:-.5s;transform:rotate(210deg) translate(146%)}.sonner-loading-bar:nth-child(9){animation-delay:-.4s;transform:rotate(240deg) translate(146%)}.sonner-loading-bar:nth-child(10){animation-delay:-.3s;transform:rotate(270deg) translate(146%)}.sonner-loading-bar:nth-child(11){animation-delay:-.2s;transform:rotate(300deg) translate(146%)}.sonner-loading-bar:nth-child(12){animation-delay:-.1s;transform:rotate(330deg) translate(146%)}@keyframes sonner-fade-in{0%{opacity:0;transform:scale(.8)}100%{opacity:1;transform:scale(1)}}@keyframes sonner-fade-out{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(.8)}}@keyframes sonner-spin{0%{opacity:1}100%{opacity:.15}}@media (prefers-reduced-motion){.sonner-loading-bar,[data-sonner-toast],[data-sonner-toast]>*{transition:none!important;animation:none!important}}.sonner-loader{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);transform-origin:center;transition:opacity .2s,transform .2s}.sonner-loader[data-visible=false]{opacity:0;transform:scale(.8) translate(-50%,-50%)}");
function Cl(e) {
  return e.label !== void 0;
}
const xL = 3, wL = "24px", SL = "16px", wb = 4e3, EL = 356, TL = 14, CL = 45, OL = 200;
function xr(...e) {
  return e.filter(Boolean).join(" ");
}
function RL(e) {
  const [t, n] = e.split("-"), r = [];
  return t && r.push(t), n && r.push(n), r;
}
const kL = (e) => {
  var t, n, r, o, i, s, l, c, u;
  const { invert: d, toast: f, unstyled: p, interacting: h, setHeights: g, visibleToasts: m, heights: b, index: x, toasts: E, expanded: v, removeToast: w, defaultRichColors: S, closeButton: T, style: C, cancelButtonStyle: k, actionButtonStyle: P, className: y = "", descriptionClassName: R = "", duration: $, position: A, gap: O, expandByDefault: _, classNames: I, icons: D, closeButtonAriaLabel: z = "Close toast" } = e, [B, F] = Y.useState(null), [L, W] = Y.useState(null), [U, Z] = Y.useState(!1), [Q, ee] = Y.useState(!1), [te, q] = Y.useState(!1), [oe, K] = Y.useState(!1), [ne, j] = Y.useState(!1), [pe, ce] = Y.useState(0), [be, Ie] = Y.useState(0), _e = Y.useRef(f.duration || $ || wb), $e = Y.useRef(null), Ne = Y.useRef(null), Le = x === 0, Re = x + 1 <= m, V = f.type, J = f.dismissible !== !1, ie = f.className || "", X = f.descriptionClassName || "", H = Y.useMemo(() => b.findIndex((ze) => ze.toastId === f.id) || 0, [
    b,
    f.id
  ]), G = Y.useMemo(() => {
    var ze;
    return (ze = f.closeButton) != null ? ze : T;
  }, [
    f.closeButton,
    T
  ]), re = Y.useMemo(() => f.duration || $ || wb, [
    f.duration,
    $
  ]), he = Y.useRef(0), me = Y.useRef(0), le = Y.useRef(0), se = Y.useRef(null), [ae, ge] = A.split("-"), Ce = Y.useMemo(() => b.reduce((ze, ot, xt) => xt >= H ? ze : ze + ot.height, 0), [
    b,
    H
  ]), ue = pL(), Te = f.invert || d, Be = V === "loading";
  me.current = Y.useMemo(() => H * O + Ce, [
    H,
    Ce
  ]), Y.useEffect(() => {
    _e.current = re;
  }, [
    re
  ]), Y.useEffect(() => {
    Z(!0);
  }, []), Y.useEffect(() => {
    const ze = Ne.current;
    if (ze) {
      const ot = ze.getBoundingClientRect().height;
      return Ie(ot), g((xt) => [
        {
          toastId: f.id,
          height: ot,
          position: f.position
        },
        ...xt
      ]), () => g((xt) => xt.filter((Pe) => Pe.toastId !== f.id));
    }
  }, [
    g,
    f.id
  ]), Y.useLayoutEffect(() => {
    if (!U) return;
    const ze = Ne.current, ot = ze.style.height;
    ze.style.height = "auto";
    const xt = ze.getBoundingClientRect().height;
    ze.style.height = ot, Ie(xt), g((Pe) => Pe.find((At) => At.toastId === f.id) ? Pe.map((At) => At.toastId === f.id ? {
      ...At,
      height: xt
    } : At) : [
      {
        toastId: f.id,
        height: xt,
        position: f.position
      },
      ...Pe
    ]);
  }, [
    U,
    f.title,
    f.description,
    g,
    f.id
  ]);
  const We = Y.useCallback(() => {
    ee(!0), ce(me.current), g((ze) => ze.filter((ot) => ot.toastId !== f.id)), setTimeout(() => {
      w(f);
    }, OL);
  }, [
    f,
    w,
    g,
    me
  ]);
  Y.useEffect(() => {
    if (f.promise && V === "loading" || f.duration === 1 / 0 || f.type === "loading") return;
    let ze;
    return v || h || ue ? (() => {
      if (le.current < he.current) {
        const Pe = (/* @__PURE__ */ new Date()).getTime() - he.current;
        _e.current = _e.current - Pe;
      }
      le.current = (/* @__PURE__ */ new Date()).getTime();
    })() : (() => {
      _e.current !== 1 / 0 && (he.current = (/* @__PURE__ */ new Date()).getTime(), ze = setTimeout(() => {
        f.onAutoClose == null || f.onAutoClose.call(f, f), We();
      }, _e.current));
    })(), () => clearTimeout(ze);
  }, [
    v,
    h,
    f,
    V,
    ue,
    We
  ]), Y.useEffect(() => {
    f.delete && We();
  }, [
    We,
    f.delete
  ]);
  function Ke() {
    var ze;
    if (D != null && D.loading) {
      var ot;
      return /* @__PURE__ */ Y.createElement("div", {
        className: xr(I == null ? void 0 : I.loader, f == null || (ot = f.classNames) == null ? void 0 : ot.loader, "sonner-loader"),
        "data-visible": V === "loading"
      }, D.loading);
    }
    return /* @__PURE__ */ Y.createElement(aL, {
      className: xr(I == null ? void 0 : I.loader, f == null || (ze = f.classNames) == null ? void 0 : ze.loader),
      visible: V === "loading"
    });
  }
  const $t = f.icon || (D == null ? void 0 : D[V]) || iL(V);
  var ht, Pt;
  return /* @__PURE__ */ Y.createElement("li", {
    tabIndex: 0,
    ref: Ne,
    className: xr(y, ie, I == null ? void 0 : I.toast, f == null || (t = f.classNames) == null ? void 0 : t.toast, I == null ? void 0 : I.default, I == null ? void 0 : I[V], f == null || (n = f.classNames) == null ? void 0 : n[V]),
    "data-sonner-toast": "",
    "data-rich-colors": (ht = f.richColors) != null ? ht : S,
    "data-styled": !(f.jsx || f.unstyled || p),
    "data-mounted": U,
    "data-promise": !!f.promise,
    "data-swiped": ne,
    "data-removed": Q,
    "data-visible": Re,
    "data-y-position": ae,
    "data-x-position": ge,
    "data-index": x,
    "data-front": Le,
    "data-swiping": te,
    "data-dismissible": J,
    "data-type": V,
    "data-invert": Te,
    "data-swipe-out": oe,
    "data-swipe-direction": L,
    "data-expanded": !!(v || _ && U),
    style: {
      "--index": x,
      "--toasts-before": x,
      "--z-index": E.length - x,
      "--offset": `${Q ? pe : me.current}px`,
      "--initial-height": _ ? "auto" : `${be}px`,
      ...C,
      ...f.style
    },
    onDragEnd: () => {
      q(!1), F(null), se.current = null;
    },
    onPointerDown: (ze) => {
      Be || !J || ($e.current = /* @__PURE__ */ new Date(), ce(me.current), ze.target.setPointerCapture(ze.pointerId), ze.target.tagName !== "BUTTON" && (q(!0), se.current = {
        x: ze.clientX,
        y: ze.clientY
      }));
    },
    onPointerUp: () => {
      var ze, ot, xt;
      if (oe || !J) return;
      se.current = null;
      const Pe = Number(((ze = Ne.current) == null ? void 0 : ze.style.getPropertyValue("--swipe-amount-x").replace("px", "")) || 0), jt = Number(((ot = Ne.current) == null ? void 0 : ot.style.getPropertyValue("--swipe-amount-y").replace("px", "")) || 0), At = (/* @__PURE__ */ new Date()).getTime() - ((xt = $e.current) == null ? void 0 : xt.getTime()), wn = B === "x" ? Pe : jt, ii = Math.abs(wn) / At;
      if (Math.abs(wn) >= CL || ii > 0.11) {
        ce(me.current), f.onDismiss == null || f.onDismiss.call(f, f), W(B === "x" ? Pe > 0 ? "right" : "left" : jt > 0 ? "down" : "up"), We(), K(!0);
        return;
      } else {
        var Pn, _n;
        (Pn = Ne.current) == null || Pn.style.setProperty("--swipe-amount-x", "0px"), (_n = Ne.current) == null || _n.style.setProperty("--swipe-amount-y", "0px");
      }
      j(!1), q(!1), F(null);
    },
    onPointerMove: (ze) => {
      var ot, xt, Pe;
      if (!se.current || !J || ((ot = window.getSelection()) == null ? void 0 : ot.toString().length) > 0) return;
      const At = ze.clientY - se.current.y, wn = ze.clientX - se.current.x;
      var ii;
      const Pn = (ii = e.swipeDirections) != null ? ii : RL(A);
      !B && (Math.abs(wn) > 1 || Math.abs(At) > 1) && F(Math.abs(wn) > Math.abs(At) ? "x" : "y");
      let _n = {
        x: 0,
        y: 0
      };
      const nl = (jr) => 1 / (1.5 + Math.abs(jr) / 20);
      if (B === "y") {
        if (Pn.includes("top") || Pn.includes("bottom"))
          if (Pn.includes("top") && At < 0 || Pn.includes("bottom") && At > 0)
            _n.y = At;
          else {
            const jr = At * nl(At);
            _n.y = Math.abs(jr) < Math.abs(At) ? jr : At;
          }
      } else if (B === "x" && (Pn.includes("left") || Pn.includes("right")))
        if (Pn.includes("left") && wn < 0 || Pn.includes("right") && wn > 0)
          _n.x = wn;
        else {
          const jr = wn * nl(wn);
          _n.x = Math.abs(jr) < Math.abs(wn) ? jr : wn;
        }
      (Math.abs(_n.x) > 0 || Math.abs(_n.y) > 0) && j(!0), (xt = Ne.current) == null || xt.style.setProperty("--swipe-amount-x", `${_n.x}px`), (Pe = Ne.current) == null || Pe.style.setProperty("--swipe-amount-y", `${_n.y}px`);
    }
  }, G && !f.jsx && V !== "loading" ? /* @__PURE__ */ Y.createElement("button", {
    "aria-label": z,
    "data-disabled": Be,
    "data-close-button": !0,
    onClick: Be || !J ? () => {
    } : () => {
      We(), f.onDismiss == null || f.onDismiss.call(f, f);
    },
    className: xr(I == null ? void 0 : I.closeButton, f == null || (r = f.classNames) == null ? void 0 : r.closeButton)
  }, (Pt = D == null ? void 0 : D.close) != null ? Pt : fL) : null, (V || f.icon || f.promise) && f.icon !== null && ((D == null ? void 0 : D[V]) !== null || f.icon) ? /* @__PURE__ */ Y.createElement("div", {
    "data-icon": "",
    className: xr(I == null ? void 0 : I.icon, f == null || (o = f.classNames) == null ? void 0 : o.icon)
  }, f.promise || f.type === "loading" && !f.icon ? f.icon || Ke() : null, f.type !== "loading" ? $t : null) : null, /* @__PURE__ */ Y.createElement("div", {
    "data-content": "",
    className: xr(I == null ? void 0 : I.content, f == null || (i = f.classNames) == null ? void 0 : i.content)
  }, /* @__PURE__ */ Y.createElement("div", {
    "data-title": "",
    className: xr(I == null ? void 0 : I.title, f == null || (s = f.classNames) == null ? void 0 : s.title)
  }, f.jsx ? f.jsx : typeof f.title == "function" ? f.title() : f.title), f.description ? /* @__PURE__ */ Y.createElement("div", {
    "data-description": "",
    className: xr(R, X, I == null ? void 0 : I.description, f == null || (l = f.classNames) == null ? void 0 : l.description)
  }, typeof f.description == "function" ? f.description() : f.description) : null), /* @__PURE__ */ Y.isValidElement(f.cancel) ? f.cancel : f.cancel && Cl(f.cancel) ? /* @__PURE__ */ Y.createElement("button", {
    "data-button": !0,
    "data-cancel": !0,
    style: f.cancelButtonStyle || k,
    onClick: (ze) => {
      Cl(f.cancel) && J && (f.cancel.onClick == null || f.cancel.onClick.call(f.cancel, ze), We());
    },
    className: xr(I == null ? void 0 : I.cancelButton, f == null || (c = f.classNames) == null ? void 0 : c.cancelButton)
  }, f.cancel.label) : null, /* @__PURE__ */ Y.isValidElement(f.action) ? f.action : f.action && Cl(f.action) ? /* @__PURE__ */ Y.createElement("button", {
    "data-button": !0,
    "data-action": !0,
    style: f.actionButtonStyle || P,
    onClick: (ze) => {
      Cl(f.action) && (f.action.onClick == null || f.action.onClick.call(f.action, ze), !ze.defaultPrevented && We());
    },
    className: xr(I == null ? void 0 : I.actionButton, f == null || (u = f.classNames) == null ? void 0 : u.actionButton)
  }, f.action.label) : null);
};
function Sb() {
  if (typeof window > "u" || typeof document > "u") return "ltr";
  const e = document.documentElement.getAttribute("dir");
  return e === "auto" || !e ? window.getComputedStyle(document.documentElement).direction : e;
}
function NL(e, t) {
  const n = {};
  return [
    e,
    t
  ].forEach((r, o) => {
    const i = o === 1, s = i ? "--mobile-offset" : "--offset", l = i ? SL : wL;
    function c(u) {
      [
        "top",
        "right",
        "bottom",
        "left"
      ].forEach((d) => {
        n[`${s}-${d}`] = typeof u == "number" ? `${u}px` : u;
      });
    }
    typeof r == "number" || typeof r == "string" ? c(r) : typeof r == "object" ? [
      "top",
      "right",
      "bottom",
      "left"
    ].forEach((u) => {
      r[u] === void 0 ? n[`${s}-${u}`] = l : n[`${s}-${u}`] = typeof r[u] == "number" ? `${r[u]}px` : r[u];
    }) : c(l);
  }), n;
}
const IL = /* @__PURE__ */ Y.forwardRef(function(t, n) {
  const { invert: r, position: o = "bottom-right", hotkey: i = [
    "altKey",
    "KeyT"
  ], expand: s, closeButton: l, className: c, offset: u, mobileOffset: d, theme: f = "light", richColors: p, duration: h, style: g, visibleToasts: m = xL, toastOptions: b, dir: x = Sb(), gap: E = TL, icons: v, containerAriaLabel: w = "Notifications" } = t, [S, T] = Y.useState([]), C = Y.useMemo(() => Array.from(new Set([
    o
  ].concat(S.filter((L) => L.position).map((L) => L.position)))), [
    S,
    o
  ]), [k, P] = Y.useState([]), [y, R] = Y.useState(!1), [$, A] = Y.useState(!1), [O, _] = Y.useState(f !== "system" ? f : typeof window < "u" && window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light"), I = Y.useRef(null), D = i.join("+").replace(/Key/g, "").replace(/Digit/g, ""), z = Y.useRef(null), B = Y.useRef(!1), F = Y.useCallback((L) => {
    T((W) => {
      var U;
      return (U = W.find((Z) => Z.id === L.id)) != null && U.delete || Sn.dismiss(L.id), W.filter(({ id: Z }) => Z !== L.id);
    });
  }, []);
  return Y.useEffect(() => Sn.subscribe((L) => {
    if (L.dismiss) {
      requestAnimationFrame(() => {
        T((W) => W.map((U) => U.id === L.id ? {
          ...U,
          delete: !0
        } : U));
      });
      return;
    }
    setTimeout(() => {
      wi.flushSync(() => {
        T((W) => {
          const U = W.findIndex((Z) => Z.id === L.id);
          return U !== -1 ? [
            ...W.slice(0, U),
            {
              ...W[U],
              ...L
            },
            ...W.slice(U + 1)
          ] : [
            L,
            ...W
          ];
        });
      });
    });
  }), [
    S
  ]), Y.useEffect(() => {
    if (f !== "system") {
      _(f);
      return;
    }
    if (f === "system" && (window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? _("dark") : _("light")), typeof window > "u") return;
    const L = window.matchMedia("(prefers-color-scheme: dark)");
    try {
      L.addEventListener("change", ({ matches: W }) => {
        _(W ? "dark" : "light");
      });
    } catch {
      L.addListener(({ matches: U }) => {
        try {
          _(U ? "dark" : "light");
        } catch (Z) {
          console.error(Z);
        }
      });
    }
  }, [
    f
  ]), Y.useEffect(() => {
    S.length <= 1 && R(!1);
  }, [
    S
  ]), Y.useEffect(() => {
    const L = (W) => {
      var U;
      if (i.every((ee) => W[ee] || W.code === ee)) {
        var Q;
        R(!0), (Q = I.current) == null || Q.focus();
      }
      W.code === "Escape" && (document.activeElement === I.current || (U = I.current) != null && U.contains(document.activeElement)) && R(!1);
    };
    return document.addEventListener("keydown", L), () => document.removeEventListener("keydown", L);
  }, [
    i
  ]), Y.useEffect(() => {
    if (I.current)
      return () => {
        z.current && (z.current.focus({
          preventScroll: !0
        }), z.current = null, B.current = !1);
      };
  }, [
    I.current
  ]), // Remove item from normal navigation flow, only available via hotkey
  /* @__PURE__ */ Y.createElement("section", {
    ref: n,
    "aria-label": `${w} ${D}`,
    tabIndex: -1,
    "aria-live": "polite",
    "aria-relevant": "additions text",
    "aria-atomic": "false",
    suppressHydrationWarning: !0
  }, C.map((L, W) => {
    var U;
    const [Z, Q] = L.split("-");
    return S.length ? /* @__PURE__ */ Y.createElement("ol", {
      key: L,
      dir: x === "auto" ? Sb() : x,
      tabIndex: -1,
      ref: I,
      className: c,
      "data-sonner-toaster": !0,
      "data-sonner-theme": O,
      "data-y-position": Z,
      "data-lifted": y && S.length > 1 && !s,
      "data-x-position": Q,
      style: {
        "--front-toast-height": `${((U = k[0]) == null ? void 0 : U.height) || 0}px`,
        "--width": `${EL}px`,
        "--gap": `${E}px`,
        ...g,
        ...NL(u, d)
      },
      onBlur: (ee) => {
        B.current && !ee.currentTarget.contains(ee.relatedTarget) && (B.current = !1, z.current && (z.current.focus({
          preventScroll: !0
        }), z.current = null));
      },
      onFocus: (ee) => {
        ee.target instanceof HTMLElement && ee.target.dataset.dismissible === "false" || B.current || (B.current = !0, z.current = ee.relatedTarget);
      },
      onMouseEnter: () => R(!0),
      onMouseMove: () => R(!0),
      onMouseLeave: () => {
        $ || R(!1);
      },
      onDragEnd: () => R(!1),
      onPointerDown: (ee) => {
        ee.target instanceof HTMLElement && ee.target.dataset.dismissible === "false" || A(!0);
      },
      onPointerUp: () => A(!1)
    }, S.filter((ee) => !ee.position && W === 0 || ee.position === L).map((ee, te) => {
      var q, oe;
      return /* @__PURE__ */ Y.createElement(kL, {
        key: ee.id,
        icons: v,
        index: te,
        toast: ee,
        defaultRichColors: p,
        duration: (q = b == null ? void 0 : b.duration) != null ? q : h,
        className: b == null ? void 0 : b.className,
        descriptionClassName: b == null ? void 0 : b.descriptionClassName,
        invert: r,
        visibleToasts: m,
        closeButton: (oe = b == null ? void 0 : b.closeButton) != null ? oe : l,
        interacting: $,
        position: L,
        style: b == null ? void 0 : b.style,
        unstyled: b == null ? void 0 : b.unstyled,
        classNames: b == null ? void 0 : b.classNames,
        cancelButtonStyle: b == null ? void 0 : b.cancelButtonStyle,
        actionButtonStyle: b == null ? void 0 : b.actionButtonStyle,
        closeButtonAriaLabel: b == null ? void 0 : b.closeButtonAriaLabel,
        removeToast: F,
        toasts: S.filter((K) => K.position == ee.position),
        heights: k.filter((K) => K.position == ee.position),
        setHeights: P,
        expandByDefault: s,
        gap: E,
        expanded: y,
        swipeDirections: t.swipeDirections
      });
    })) : null;
  }));
}), $L = we(({ position: e = "bottom-right" }) => {
  const { isDarkMode: t } = Uu();
  return /* @__PURE__ */ N(
    IL,
    {
      closeButton: !1,
      invert: t,
      visibleToasts: 3,
      position: e,
      gap: 6
    }
  );
});
$L.displayName = "Button";
function PL() {
  return Fe(({ type: t, title: n, description: r }) => {
    const o = {
      description: r,
      icon: /* @__PURE__ */ N(Mr, { icon: _L(t), color: ML(t) }),
      cancel: {
        label: /* @__PURE__ */ N(Mr, { icon: "solar:close-circle-outline" }),
        onClick: () => {
        }
      },
      cancelButtonStyle: { background: "transparent" }
    };
    return t === "success" ? Xd.success(n, o) : t === "error" ? Xd.error(n, o) : Xd.info(n, o);
  }, []);
}
function _L(e) {
  switch (e) {
    case "success":
      return "solar:check-circle-bold";
    case "error":
      return "solar:danger-triangle-bold";
    case "info":
    default:
      return "solar:danger-circle-bold";
  }
}
function ML(e) {
  switch (e) {
    case "success":
      return "success";
    case "error":
      return "error";
    case "info":
      return "auto";
    default:
      return "disabled";
  }
}
const AL = we(() => {
  const { isFullScreen: e, toggleFullScreen: t } = TF();
  return /* @__PURE__ */ N(
    $n,
    {
      isCircle: !0,
      isGhost: !0,
      color: "auto",
      icon: e ? "solar:quit-full-screen-square-line-duotone" : "solar:full-screen-square-line-duotone",
      iconWidth: 28,
      onClick: t
    }
  );
});
AL.displayName = "AdminFullScreen";
const DL = we(({ children: e, sx: t }) => /* @__PURE__ */ N(
  wo,
  {
    isOutlined: !0,
    sx: {
      width: "100%",
      position: "sticky",
      top: 0,
      left: 0,
      right: 0,
      ...t
    },
    children: /* @__PURE__ */ N(
      sn,
      {
        className: "VenomousUI-AdminHeader",
        row: !0,
        component: "header",
        sx: {
          width: "100%",
          height: 50,
          alignItems: "center",
          justifyContent: "space-between"
        },
        children: e
      }
    )
  }
));
DL.displayName = "AdminHeader";
const BL = ({
  items: e,
  isItemSelected: t,
  isItemDisabled: n,
  onItemClick: r,
  renderItem: o
}) => /* @__PURE__ */ N(
  RF,
  {
    cols: { xs: 3, sm: 3, md: 3, lg: 3, xl: 3 },
    height: 68 * Math.ceil(e.length / 3),
    items: e,
    renderGridItem: (i) => /* @__PURE__ */ N(
      pu,
      {
        isOutlined: !t(i),
        clickable: !0,
        disabled: n ? n(i) : !1,
        onClick: () => void (r == null ? void 0 : r(i)),
        sx: {
          width: "100%",
          height: "60px",
          m: "4px",
          p: "8px",
          border: 0,
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          transition: "outline-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out",
          outlineWidth: "1px",
          outlineStyle: "solid",
          outlineColor: ({ palette: s }) => t(i) ? s.primary.main : "divider",
          color: ({ palette: s }) => `${s.text.primary} !important`
        },
        children: o(i)
      }
    )
  }
), FL = we(
  BL
), LL = we(
  ({
    children: e,
    width: t = 300,
    title: n = "Settings",
    labelOfThemeMode: r = "ThemeMode",
    labelOfThemePalettes: o = "ThemePalettes",
    onChangeThemeMode: i,
    onChangeThemePalette: s
  }) => {
    const { isOpen: l, openDrawer: c, closeDrawer: u } = vM();
    return /* @__PURE__ */ Se(qn, { children: [
      /* @__PURE__ */ N(
        $n,
        {
          isCircle: !0,
          isGhost: !0,
          icon: "solar:settings-line-duotone",
          iconWidth: 28,
          onClick: c,
          color: "auto"
        }
      ),
      /* @__PURE__ */ Se(fw, { width: t, position: "right", isOpen: l, closeDrawer: u, children: [
        /* @__PURE__ */ N(pw, { title: n, closeDrawer: u }),
        /* @__PURE__ */ N(In, { text: r, isLabel: !0 }),
        /* @__PURE__ */ N(zL, { onChangeThemeMode: i }),
        /* @__PURE__ */ N("br", {}),
        /* @__PURE__ */ N(In, { text: o, isLabel: !0 }),
        /* @__PURE__ */ N(VL, { onChangeThemePalette: s }),
        /* @__PURE__ */ N("br", {}),
        e
      ] })
    ] });
  }
);
LL.displayName = "AdminSettingsDrawer";
function zL({
  onChangeThemeMode: e
}) {
  const { themeMode: t, isDarkMode: n, toggleThemeMode: r } = Uu();
  return /* @__PURE__ */ Se(
    pu,
    {
      isOutlined: !0,
      clickable: !0,
      onClick: () => {
        r(), setTimeout(() => void (e == null ? void 0 : e(t)), 200);
      },
      sx: {
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between",
        height: "60px",
        pl: "24px",
        mt: "2px"
      },
      children: [
        /* @__PURE__ */ N(
          Mr,
          {
            icon: n ? "solar:moon-bold-duotone" : "solar:sun-2-bold-duotone",
            width: 24,
            color: "primary"
          }
        ),
        /* @__PURE__ */ N(Vh, { value: n, onChange: () => {
        } })
      ]
    }
  );
}
function VL({
  onChangeThemePalette: e
}) {
  const { allPaletteNames: t, themePaletteName: n, setThemePaletteName: r } = qh();
  return /* @__PURE__ */ N(
    FL,
    {
      items: t.map((o) => o),
      isItemSelected: (o) => o === n,
      isItemDisabled: (o) => o === n,
      onItemClick: async (o) => {
        r(o), await new Promise((i) => setTimeout(i, 200)), e == null || e(o);
      },
      renderItem: (o) => /* @__PURE__ */ N(
        Mr,
        {
          icon: "solar:siderbar-bold-duotone",
          width: 32,
          sx: { color: ep(o).main }
        }
      )
    }
  );
}
const jL = we(
  ({ menuHeaderHeight: e = 50, menuWidth: t = 220, menuItems: n, currentPath: r, menuHeaderElement: o, sx: i }) => {
    const { checkIsParentItemActive: s, checkIsSubItemActive: l } = M_({
      currentPath: r
    });
    return /* @__PURE__ */ Se(
      wo,
      {
        className: "VenomousUI-AdminSideNavMenu",
        isOutlined: !0,
        sx: { width: t, height: "100svh", ...i },
        children: [
          /* @__PURE__ */ N(sn, { row: !0, gap: 0, height: e, px: "8px", mb: "8px", children: o }),
          /* @__PURE__ */ N(
            gc,
            {
              width: "100%",
              height: `calc(100svh - ${e}px - 16px)`,
              items: n,
              renderItem: (c) => c.subItems ? /* @__PURE__ */ N(
                s1,
                {
                  id: c.label,
                  position: "right",
                  sx: { width: "100%" },
                  contentSx: { p: "8px" },
                  renderPopperHandler: ({ isOpen: u, openPopper: d }) => /* @__PURE__ */ N(
                    qs,
                    {
                      label: c.label,
                      isActive: s(c),
                      icon: c.icon,
                      clickable: !0,
                      ellipsis: !0,
                      onClick: d,
                      onMouseEnter: d,
                      sx: { backgroundColor: u ? "divider" : "transparent" }
                    }
                  ),
                  children: /* @__PURE__ */ N(
                    gc,
                    {
                      width: t,
                      items: c.subItems,
                      renderItem: (u) => /* @__PURE__ */ N(
                        qs,
                        {
                          label: u.label,
                          isActive: l(u),
                          icon: u.icon,
                          clickable: !0,
                          ellipsis: !0,
                          onClick: u.onClick
                        },
                        u.label
                      )
                    }
                  )
                }
              ) : /* @__PURE__ */ N(
                qs,
                {
                  label: c.label,
                  isActive: s(c),
                  icon: c.icon,
                  clickable: !0,
                  ellipsis: !0,
                  onClick: c.onClick
                },
                c.label
              )
            }
          )
        ]
      }
    );
  }
);
jL.displayName = "AdminSideNavMenu";
function Xt(e) {
  if (typeof e == "string" || typeof e == "number") return "" + e;
  let t = "";
  if (Array.isArray(e))
    for (let n = 0, r; n < e.length; n++)
      (r = Xt(e[n])) !== "" && (t += (t && " ") + r);
  else
    for (let n in e)
      e[n] && (t += (t && " ") + n);
  return t;
}
var HL = { value: () => {
} };
function qu() {
  for (var e = 0, t = arguments.length, n = {}, r; e < t; ++e) {
    if (!(r = arguments[e] + "") || r in n || /[\s.]/.test(r)) throw new Error("illegal type: " + r);
    n[r] = [];
  }
  return new Zl(n);
}
function Zl(e) {
  this._ = e;
}
function WL(e, t) {
  return e.trim().split(/^|\s+/).map(function(n) {
    var r = "", o = n.indexOf(".");
    if (o >= 0 && (r = n.slice(o + 1), n = n.slice(0, o)), n && !t.hasOwnProperty(n)) throw new Error("unknown type: " + n);
    return { type: n, name: r };
  });
}
Zl.prototype = qu.prototype = {
  constructor: Zl,
  on: function(e, t) {
    var n = this._, r = WL(e + "", n), o, i = -1, s = r.length;
    if (arguments.length < 2) {
      for (; ++i < s; ) if ((o = (e = r[i]).type) && (o = UL(n[o], e.name))) return o;
      return;
    }
    if (t != null && typeof t != "function") throw new Error("invalid callback: " + t);
    for (; ++i < s; )
      if (o = (e = r[i]).type) n[o] = Eb(n[o], e.name, t);
      else if (t == null) for (o in n) n[o] = Eb(n[o], e.name, null);
    return this;
  },
  copy: function() {
    var e = {}, t = this._;
    for (var n in t) e[n] = t[n].slice();
    return new Zl(e);
  },
  call: function(e, t) {
    if ((o = arguments.length - 2) > 0) for (var n = new Array(o), r = 0, o, i; r < o; ++r) n[r] = arguments[r + 2];
    if (!this._.hasOwnProperty(e)) throw new Error("unknown type: " + e);
    for (i = this._[e], r = 0, o = i.length; r < o; ++r) i[r].value.apply(t, n);
  },
  apply: function(e, t, n) {
    if (!this._.hasOwnProperty(e)) throw new Error("unknown type: " + e);
    for (var r = this._[e], o = 0, i = r.length; o < i; ++o) r[o].value.apply(t, n);
  }
};
function UL(e, t) {
  for (var n = 0, r = e.length, o; n < r; ++n)
    if ((o = e[n]).name === t)
      return o.value;
}
function Eb(e, t, n) {
  for (var r = 0, o = e.length; r < o; ++r)
    if (e[r].name === t) {
      e[r] = HL, e = e.slice(0, r).concat(e.slice(r + 1));
      break;
    }
  return n != null && e.push({ name: t, value: n }), e;
}
var ap = "http://www.w3.org/1999/xhtml";
const Tb = {
  svg: "http://www.w3.org/2000/svg",
  xhtml: ap,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};
function Yu(e) {
  var t = e += "", n = t.indexOf(":");
  return n >= 0 && (t = e.slice(0, n)) !== "xmlns" && (e = e.slice(n + 1)), Tb.hasOwnProperty(t) ? { space: Tb[t], local: e } : e;
}
function qL(e) {
  return function() {
    var t = this.ownerDocument, n = this.namespaceURI;
    return n === ap && t.documentElement.namespaceURI === ap ? t.createElement(e) : t.createElementNS(n, e);
  };
}
function YL(e) {
  return function() {
    return this.ownerDocument.createElementNS(e.space, e.local);
  };
}
function c1(e) {
  var t = Yu(e);
  return (t.local ? YL : qL)(t);
}
function GL() {
}
function Gh(e) {
  return e == null ? GL : function() {
    return this.querySelector(e);
  };
}
function KL(e) {
  typeof e != "function" && (e = Gh(e));
  for (var t = this._groups, n = t.length, r = new Array(n), o = 0; o < n; ++o)
    for (var i = t[o], s = i.length, l = r[o] = new Array(s), c, u, d = 0; d < s; ++d)
      (c = i[d]) && (u = e.call(c, c.__data__, d, i)) && ("__data__" in c && (u.__data__ = c.__data__), l[d] = u);
  return new Un(r, this._parents);
}
function XL(e) {
  return e == null ? [] : Array.isArray(e) ? e : Array.from(e);
}
function ZL() {
  return [];
}
function u1(e) {
  return e == null ? ZL : function() {
    return this.querySelectorAll(e);
  };
}
function QL(e) {
  return function() {
    return XL(e.apply(this, arguments));
  };
}
function JL(e) {
  typeof e == "function" ? e = QL(e) : e = u1(e);
  for (var t = this._groups, n = t.length, r = [], o = [], i = 0; i < n; ++i)
    for (var s = t[i], l = s.length, c, u = 0; u < l; ++u)
      (c = s[u]) && (r.push(e.call(c, c.__data__, u, s)), o.push(c));
  return new Un(r, o);
}
function d1(e) {
  return function() {
    return this.matches(e);
  };
}
function f1(e) {
  return function(t) {
    return t.matches(e);
  };
}
var ez = Array.prototype.find;
function tz(e) {
  return function() {
    return ez.call(this.children, e);
  };
}
function nz() {
  return this.firstElementChild;
}
function rz(e) {
  return this.select(e == null ? nz : tz(typeof e == "function" ? e : f1(e)));
}
var oz = Array.prototype.filter;
function iz() {
  return Array.from(this.children);
}
function sz(e) {
  return function() {
    return oz.call(this.children, e);
  };
}
function az(e) {
  return this.selectAll(e == null ? iz : sz(typeof e == "function" ? e : f1(e)));
}
function lz(e) {
  typeof e != "function" && (e = d1(e));
  for (var t = this._groups, n = t.length, r = new Array(n), o = 0; o < n; ++o)
    for (var i = t[o], s = i.length, l = r[o] = [], c, u = 0; u < s; ++u)
      (c = i[u]) && e.call(c, c.__data__, u, i) && l.push(c);
  return new Un(r, this._parents);
}
function p1(e) {
  return new Array(e.length);
}
function cz() {
  return new Un(this._enter || this._groups.map(p1), this._parents);
}
function $c(e, t) {
  this.ownerDocument = e.ownerDocument, this.namespaceURI = e.namespaceURI, this._next = null, this._parent = e, this.__data__ = t;
}
$c.prototype = {
  constructor: $c,
  appendChild: function(e) {
    return this._parent.insertBefore(e, this._next);
  },
  insertBefore: function(e, t) {
    return this._parent.insertBefore(e, t);
  },
  querySelector: function(e) {
    return this._parent.querySelector(e);
  },
  querySelectorAll: function(e) {
    return this._parent.querySelectorAll(e);
  }
};
function uz(e) {
  return function() {
    return e;
  };
}
function dz(e, t, n, r, o, i) {
  for (var s = 0, l, c = t.length, u = i.length; s < u; ++s)
    (l = t[s]) ? (l.__data__ = i[s], r[s] = l) : n[s] = new $c(e, i[s]);
  for (; s < c; ++s)
    (l = t[s]) && (o[s] = l);
}
function fz(e, t, n, r, o, i, s) {
  var l, c, u = /* @__PURE__ */ new Map(), d = t.length, f = i.length, p = new Array(d), h;
  for (l = 0; l < d; ++l)
    (c = t[l]) && (p[l] = h = s.call(c, c.__data__, l, t) + "", u.has(h) ? o[l] = c : u.set(h, c));
  for (l = 0; l < f; ++l)
    h = s.call(e, i[l], l, i) + "", (c = u.get(h)) ? (r[l] = c, c.__data__ = i[l], u.delete(h)) : n[l] = new $c(e, i[l]);
  for (l = 0; l < d; ++l)
    (c = t[l]) && u.get(p[l]) === c && (o[l] = c);
}
function pz(e) {
  return e.__data__;
}
function hz(e, t) {
  if (!arguments.length) return Array.from(this, pz);
  var n = t ? fz : dz, r = this._parents, o = this._groups;
  typeof e != "function" && (e = uz(e));
  for (var i = o.length, s = new Array(i), l = new Array(i), c = new Array(i), u = 0; u < i; ++u) {
    var d = r[u], f = o[u], p = f.length, h = mz(e.call(d, d && d.__data__, u, r)), g = h.length, m = l[u] = new Array(g), b = s[u] = new Array(g), x = c[u] = new Array(p);
    n(d, f, m, b, x, h, t);
    for (var E = 0, v = 0, w, S; E < g; ++E)
      if (w = m[E]) {
        for (E >= v && (v = E + 1); !(S = b[v]) && ++v < g; ) ;
        w._next = S || null;
      }
  }
  return s = new Un(s, r), s._enter = l, s._exit = c, s;
}
function mz(e) {
  return typeof e == "object" && "length" in e ? e : Array.from(e);
}
function gz() {
  return new Un(this._exit || this._groups.map(p1), this._parents);
}
function yz(e, t, n) {
  var r = this.enter(), o = this, i = this.exit();
  return typeof e == "function" ? (r = e(r), r && (r = r.selection())) : r = r.append(e + ""), t != null && (o = t(o), o && (o = o.selection())), n == null ? i.remove() : n(i), r && o ? r.merge(o).order() : o;
}
function bz(e) {
  for (var t = e.selection ? e.selection() : e, n = this._groups, r = t._groups, o = n.length, i = r.length, s = Math.min(o, i), l = new Array(o), c = 0; c < s; ++c)
    for (var u = n[c], d = r[c], f = u.length, p = l[c] = new Array(f), h, g = 0; g < f; ++g)
      (h = u[g] || d[g]) && (p[g] = h);
  for (; c < o; ++c)
    l[c] = n[c];
  return new Un(l, this._parents);
}
function vz() {
  for (var e = this._groups, t = -1, n = e.length; ++t < n; )
    for (var r = e[t], o = r.length - 1, i = r[o], s; --o >= 0; )
      (s = r[o]) && (i && s.compareDocumentPosition(i) ^ 4 && i.parentNode.insertBefore(s, i), i = s);
  return this;
}
function xz(e) {
  e || (e = wz);
  function t(f, p) {
    return f && p ? e(f.__data__, p.__data__) : !f - !p;
  }
  for (var n = this._groups, r = n.length, o = new Array(r), i = 0; i < r; ++i) {
    for (var s = n[i], l = s.length, c = o[i] = new Array(l), u, d = 0; d < l; ++d)
      (u = s[d]) && (c[d] = u);
    c.sort(t);
  }
  return new Un(o, this._parents).order();
}
function wz(e, t) {
  return e < t ? -1 : e > t ? 1 : e >= t ? 0 : NaN;
}
function Sz() {
  var e = arguments[0];
  return arguments[0] = this, e.apply(null, arguments), this;
}
function Ez() {
  return Array.from(this);
}
function Tz() {
  for (var e = this._groups, t = 0, n = e.length; t < n; ++t)
    for (var r = e[t], o = 0, i = r.length; o < i; ++o) {
      var s = r[o];
      if (s) return s;
    }
  return null;
}
function Cz() {
  let e = 0;
  for (const t of this) ++e;
  return e;
}
function Oz() {
  return !this.node();
}
function Rz(e) {
  for (var t = this._groups, n = 0, r = t.length; n < r; ++n)
    for (var o = t[n], i = 0, s = o.length, l; i < s; ++i)
      (l = o[i]) && e.call(l, l.__data__, i, o);
  return this;
}
function kz(e) {
  return function() {
    this.removeAttribute(e);
  };
}
function Nz(e) {
  return function() {
    this.removeAttributeNS(e.space, e.local);
  };
}
function Iz(e, t) {
  return function() {
    this.setAttribute(e, t);
  };
}
function $z(e, t) {
  return function() {
    this.setAttributeNS(e.space, e.local, t);
  };
}
function Pz(e, t) {
  return function() {
    var n = t.apply(this, arguments);
    n == null ? this.removeAttribute(e) : this.setAttribute(e, n);
  };
}
function _z(e, t) {
  return function() {
    var n = t.apply(this, arguments);
    n == null ? this.removeAttributeNS(e.space, e.local) : this.setAttributeNS(e.space, e.local, n);
  };
}
function Mz(e, t) {
  var n = Yu(e);
  if (arguments.length < 2) {
    var r = this.node();
    return n.local ? r.getAttributeNS(n.space, n.local) : r.getAttribute(n);
  }
  return this.each((t == null ? n.local ? Nz : kz : typeof t == "function" ? n.local ? _z : Pz : n.local ? $z : Iz)(n, t));
}
function h1(e) {
  return e.ownerDocument && e.ownerDocument.defaultView || e.document && e || e.defaultView;
}
function Az(e) {
  return function() {
    this.style.removeProperty(e);
  };
}
function Dz(e, t, n) {
  return function() {
    this.style.setProperty(e, t, n);
  };
}
function Bz(e, t, n) {
  return function() {
    var r = t.apply(this, arguments);
    r == null ? this.style.removeProperty(e) : this.style.setProperty(e, r, n);
  };
}
function Fz(e, t, n) {
  return arguments.length > 1 ? this.each((t == null ? Az : typeof t == "function" ? Bz : Dz)(e, t, n ?? "")) : Ui(this.node(), e);
}
function Ui(e, t) {
  return e.style.getPropertyValue(t) || h1(e).getComputedStyle(e, null).getPropertyValue(t);
}
function Lz(e) {
  return function() {
    delete this[e];
  };
}
function zz(e, t) {
  return function() {
    this[e] = t;
  };
}
function Vz(e, t) {
  return function() {
    var n = t.apply(this, arguments);
    n == null ? delete this[e] : this[e] = n;
  };
}
function jz(e, t) {
  return arguments.length > 1 ? this.each((t == null ? Lz : typeof t == "function" ? Vz : zz)(e, t)) : this.node()[e];
}
function m1(e) {
  return e.trim().split(/^|\s+/);
}
function Kh(e) {
  return e.classList || new g1(e);
}
function g1(e) {
  this._node = e, this._names = m1(e.getAttribute("class") || "");
}
g1.prototype = {
  add: function(e) {
    var t = this._names.indexOf(e);
    t < 0 && (this._names.push(e), this._node.setAttribute("class", this._names.join(" ")));
  },
  remove: function(e) {
    var t = this._names.indexOf(e);
    t >= 0 && (this._names.splice(t, 1), this._node.setAttribute("class", this._names.join(" ")));
  },
  contains: function(e) {
    return this._names.indexOf(e) >= 0;
  }
};
function y1(e, t) {
  for (var n = Kh(e), r = -1, o = t.length; ++r < o; ) n.add(t[r]);
}
function b1(e, t) {
  for (var n = Kh(e), r = -1, o = t.length; ++r < o; ) n.remove(t[r]);
}
function Hz(e) {
  return function() {
    y1(this, e);
  };
}
function Wz(e) {
  return function() {
    b1(this, e);
  };
}
function Uz(e, t) {
  return function() {
    (t.apply(this, arguments) ? y1 : b1)(this, e);
  };
}
function qz(e, t) {
  var n = m1(e + "");
  if (arguments.length < 2) {
    for (var r = Kh(this.node()), o = -1, i = n.length; ++o < i; ) if (!r.contains(n[o])) return !1;
    return !0;
  }
  return this.each((typeof t == "function" ? Uz : t ? Hz : Wz)(n, t));
}
function Yz() {
  this.textContent = "";
}
function Gz(e) {
  return function() {
    this.textContent = e;
  };
}
function Kz(e) {
  return function() {
    var t = e.apply(this, arguments);
    this.textContent = t ?? "";
  };
}
function Xz(e) {
  return arguments.length ? this.each(e == null ? Yz : (typeof e == "function" ? Kz : Gz)(e)) : this.node().textContent;
}
function Zz() {
  this.innerHTML = "";
}
function Qz(e) {
  return function() {
    this.innerHTML = e;
  };
}
function Jz(e) {
  return function() {
    var t = e.apply(this, arguments);
    this.innerHTML = t ?? "";
  };
}
function eV(e) {
  return arguments.length ? this.each(e == null ? Zz : (typeof e == "function" ? Jz : Qz)(e)) : this.node().innerHTML;
}
function tV() {
  this.nextSibling && this.parentNode.appendChild(this);
}
function nV() {
  return this.each(tV);
}
function rV() {
  this.previousSibling && this.parentNode.insertBefore(this, this.parentNode.firstChild);
}
function oV() {
  return this.each(rV);
}
function iV(e) {
  var t = typeof e == "function" ? e : c1(e);
  return this.select(function() {
    return this.appendChild(t.apply(this, arguments));
  });
}
function sV() {
  return null;
}
function aV(e, t) {
  var n = typeof e == "function" ? e : c1(e), r = t == null ? sV : typeof t == "function" ? t : Gh(t);
  return this.select(function() {
    return this.insertBefore(n.apply(this, arguments), r.apply(this, arguments) || null);
  });
}
function lV() {
  var e = this.parentNode;
  e && e.removeChild(this);
}
function cV() {
  return this.each(lV);
}
function uV() {
  var e = this.cloneNode(!1), t = this.parentNode;
  return t ? t.insertBefore(e, this.nextSibling) : e;
}
function dV() {
  var e = this.cloneNode(!0), t = this.parentNode;
  return t ? t.insertBefore(e, this.nextSibling) : e;
}
function fV(e) {
  return this.select(e ? dV : uV);
}
function pV(e) {
  return arguments.length ? this.property("__data__", e) : this.node().__data__;
}
function hV(e) {
  return function(t) {
    e.call(this, t, this.__data__);
  };
}
function mV(e) {
  return e.trim().split(/^|\s+/).map(function(t) {
    var n = "", r = t.indexOf(".");
    return r >= 0 && (n = t.slice(r + 1), t = t.slice(0, r)), { type: t, name: n };
  });
}
function gV(e) {
  return function() {
    var t = this.__on;
    if (t) {
      for (var n = 0, r = -1, o = t.length, i; n < o; ++n)
        i = t[n], (!e.type || i.type === e.type) && i.name === e.name ? this.removeEventListener(i.type, i.listener, i.options) : t[++r] = i;
      ++r ? t.length = r : delete this.__on;
    }
  };
}
function yV(e, t, n) {
  return function() {
    var r = this.__on, o, i = hV(t);
    if (r) {
      for (var s = 0, l = r.length; s < l; ++s)
        if ((o = r[s]).type === e.type && o.name === e.name) {
          this.removeEventListener(o.type, o.listener, o.options), this.addEventListener(o.type, o.listener = i, o.options = n), o.value = t;
          return;
        }
    }
    this.addEventListener(e.type, i, n), o = { type: e.type, name: e.name, value: t, listener: i, options: n }, r ? r.push(o) : this.__on = [o];
  };
}
function bV(e, t, n) {
  var r = mV(e + ""), o, i = r.length, s;
  if (arguments.length < 2) {
    var l = this.node().__on;
    if (l) {
      for (var c = 0, u = l.length, d; c < u; ++c)
        for (o = 0, d = l[c]; o < i; ++o)
          if ((s = r[o]).type === d.type && s.name === d.name)
            return d.value;
    }
    return;
  }
  for (l = t ? yV : gV, o = 0; o < i; ++o) this.each(l(r[o], t, n));
  return this;
}
function v1(e, t, n) {
  var r = h1(e), o = r.CustomEvent;
  typeof o == "function" ? o = new o(t, n) : (o = r.document.createEvent("Event"), n ? (o.initEvent(t, n.bubbles, n.cancelable), o.detail = n.detail) : o.initEvent(t, !1, !1)), e.dispatchEvent(o);
}
function vV(e, t) {
  return function() {
    return v1(this, e, t);
  };
}
function xV(e, t) {
  return function() {
    return v1(this, e, t.apply(this, arguments));
  };
}
function wV(e, t) {
  return this.each((typeof t == "function" ? xV : vV)(e, t));
}
function* SV() {
  for (var e = this._groups, t = 0, n = e.length; t < n; ++t)
    for (var r = e[t], o = 0, i = r.length, s; o < i; ++o)
      (s = r[o]) && (yield s);
}
var x1 = [null];
function Un(e, t) {
  this._groups = e, this._parents = t;
}
function Ka() {
  return new Un([[document.documentElement]], x1);
}
function EV() {
  return this;
}
Un.prototype = Ka.prototype = {
  constructor: Un,
  select: KL,
  selectAll: JL,
  selectChild: rz,
  selectChildren: az,
  filter: lz,
  data: hz,
  enter: cz,
  exit: gz,
  join: yz,
  merge: bz,
  selection: EV,
  order: vz,
  sort: xz,
  call: Sz,
  nodes: Ez,
  node: Tz,
  size: Cz,
  empty: Oz,
  each: Rz,
  attr: Mz,
  style: Fz,
  property: jz,
  classed: qz,
  text: Xz,
  html: eV,
  raise: nV,
  lower: oV,
  append: iV,
  insert: aV,
  remove: cV,
  clone: fV,
  datum: pV,
  on: bV,
  dispatch: wV,
  [Symbol.iterator]: SV
};
function Fn(e) {
  return typeof e == "string" ? new Un([[document.querySelector(e)]], [document.documentElement]) : new Un([[e]], x1);
}
function TV(e) {
  let t;
  for (; t = e.sourceEvent; ) e = t;
  return e;
}
function ar(e, t) {
  if (e = TV(e), t === void 0 && (t = e.currentTarget), t) {
    var n = t.ownerSVGElement || t;
    if (n.createSVGPoint) {
      var r = n.createSVGPoint();
      return r.x = e.clientX, r.y = e.clientY, r = r.matrixTransform(t.getScreenCTM().inverse()), [r.x, r.y];
    }
    if (t.getBoundingClientRect) {
      var o = t.getBoundingClientRect();
      return [e.clientX - o.left - t.clientLeft, e.clientY - o.top - t.clientTop];
    }
  }
  return [e.pageX, e.pageY];
}
const CV = { passive: !1 }, ya = { capture: !0, passive: !1 };
function Zd(e) {
  e.stopImmediatePropagation();
}
function $i(e) {
  e.preventDefault(), e.stopImmediatePropagation();
}
function w1(e) {
  var t = e.document.documentElement, n = Fn(e).on("dragstart.drag", $i, ya);
  "onselectstart" in t ? n.on("selectstart.drag", $i, ya) : (t.__noselect = t.style.MozUserSelect, t.style.MozUserSelect = "none");
}
function S1(e, t) {
  var n = e.document.documentElement, r = Fn(e).on("dragstart.drag", null);
  t && (r.on("click.drag", $i, ya), setTimeout(function() {
    r.on("click.drag", null);
  }, 0)), "onselectstart" in n ? r.on("selectstart.drag", null) : (n.style.MozUserSelect = n.__noselect, delete n.__noselect);
}
const Ol = (e) => () => e;
function lp(e, {
  sourceEvent: t,
  subject: n,
  target: r,
  identifier: o,
  active: i,
  x: s,
  y: l,
  dx: c,
  dy: u,
  dispatch: d
}) {
  Object.defineProperties(this, {
    type: { value: e, enumerable: !0, configurable: !0 },
    sourceEvent: { value: t, enumerable: !0, configurable: !0 },
    subject: { value: n, enumerable: !0, configurable: !0 },
    target: { value: r, enumerable: !0, configurable: !0 },
    identifier: { value: o, enumerable: !0, configurable: !0 },
    active: { value: i, enumerable: !0, configurable: !0 },
    x: { value: s, enumerable: !0, configurable: !0 },
    y: { value: l, enumerable: !0, configurable: !0 },
    dx: { value: c, enumerable: !0, configurable: !0 },
    dy: { value: u, enumerable: !0, configurable: !0 },
    _: { value: d }
  });
}
lp.prototype.on = function() {
  var e = this._.on.apply(this._, arguments);
  return e === this._ ? this : e;
};
function OV(e) {
  return !e.ctrlKey && !e.button;
}
function RV() {
  return this.parentNode;
}
function kV(e, t) {
  return t ?? { x: e.x, y: e.y };
}
function NV() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}
function E1() {
  var e = OV, t = RV, n = kV, r = NV, o = {}, i = qu("start", "drag", "end"), s = 0, l, c, u, d, f = 0;
  function p(w) {
    w.on("mousedown.drag", h).filter(r).on("touchstart.drag", b).on("touchmove.drag", x, CV).on("touchend.drag touchcancel.drag", E).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }
  function h(w, S) {
    if (!(d || !e.call(this, w, S))) {
      var T = v(this, t.call(this, w, S), w, S, "mouse");
      T && (Fn(w.view).on("mousemove.drag", g, ya).on("mouseup.drag", m, ya), w1(w.view), Zd(w), u = !1, l = w.clientX, c = w.clientY, T("start", w));
    }
  }
  function g(w) {
    if ($i(w), !u) {
      var S = w.clientX - l, T = w.clientY - c;
      u = S * S + T * T > f;
    }
    o.mouse("drag", w);
  }
  function m(w) {
    Fn(w.view).on("mousemove.drag mouseup.drag", null), S1(w.view, u), $i(w), o.mouse("end", w);
  }
  function b(w, S) {
    if (e.call(this, w, S)) {
      var T = w.changedTouches, C = t.call(this, w, S), k = T.length, P, y;
      for (P = 0; P < k; ++P)
        (y = v(this, C, w, S, T[P].identifier, T[P])) && (Zd(w), y("start", w, T[P]));
    }
  }
  function x(w) {
    var S = w.changedTouches, T = S.length, C, k;
    for (C = 0; C < T; ++C)
      (k = o[S[C].identifier]) && ($i(w), k("drag", w, S[C]));
  }
  function E(w) {
    var S = w.changedTouches, T = S.length, C, k;
    for (d && clearTimeout(d), d = setTimeout(function() {
      d = null;
    }, 500), C = 0; C < T; ++C)
      (k = o[S[C].identifier]) && (Zd(w), k("end", w, S[C]));
  }
  function v(w, S, T, C, k, P) {
    var y = i.copy(), R = ar(P || T, S), $, A, O;
    if ((O = n.call(w, new lp("beforestart", {
      sourceEvent: T,
      target: p,
      identifier: k,
      active: s,
      x: R[0],
      y: R[1],
      dx: 0,
      dy: 0,
      dispatch: y
    }), C)) != null)
      return $ = O.x - R[0] || 0, A = O.y - R[1] || 0, function _(I, D, z) {
        var B = R, F;
        switch (I) {
          case "start":
            o[k] = _, F = s++;
            break;
          case "end":
            delete o[k], --s;
          // falls through
          case "drag":
            R = ar(z || D, S), F = s;
            break;
        }
        y.call(
          I,
          w,
          new lp(I, {
            sourceEvent: D,
            subject: O,
            target: p,
            identifier: k,
            active: F,
            x: R[0] + $,
            y: R[1] + A,
            dx: R[0] - B[0],
            dy: R[1] - B[1],
            dispatch: y
          }),
          C
        );
      };
  }
  return p.filter = function(w) {
    return arguments.length ? (e = typeof w == "function" ? w : Ol(!!w), p) : e;
  }, p.container = function(w) {
    return arguments.length ? (t = typeof w == "function" ? w : Ol(w), p) : t;
  }, p.subject = function(w) {
    return arguments.length ? (n = typeof w == "function" ? w : Ol(w), p) : n;
  }, p.touchable = function(w) {
    return arguments.length ? (r = typeof w == "function" ? w : Ol(!!w), p) : r;
  }, p.on = function() {
    var w = i.on.apply(i, arguments);
    return w === i ? p : w;
  }, p.clickDistance = function(w) {
    return arguments.length ? (f = (w = +w) * w, p) : Math.sqrt(f);
  }, p;
}
function Xh(e, t, n) {
  e.prototype = t.prototype = n, n.constructor = e;
}
function T1(e, t) {
  var n = Object.create(e.prototype);
  for (var r in t) n[r] = t[r];
  return n;
}
function Xa() {
}
var ba = 0.7, Pc = 1 / ba, Pi = "\\s*([+-]?\\d+)\\s*", va = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*", $r = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*", IV = /^#([0-9a-f]{3,8})$/, $V = new RegExp(`^rgb\\(${Pi},${Pi},${Pi}\\)$`), PV = new RegExp(`^rgb\\(${$r},${$r},${$r}\\)$`), _V = new RegExp(`^rgba\\(${Pi},${Pi},${Pi},${va}\\)$`), MV = new RegExp(`^rgba\\(${$r},${$r},${$r},${va}\\)$`), AV = new RegExp(`^hsl\\(${va},${$r},${$r}\\)$`), DV = new RegExp(`^hsla\\(${va},${$r},${$r},${va}\\)$`), Cb = {
  aliceblue: 15792383,
  antiquewhite: 16444375,
  aqua: 65535,
  aquamarine: 8388564,
  azure: 15794175,
  beige: 16119260,
  bisque: 16770244,
  black: 0,
  blanchedalmond: 16772045,
  blue: 255,
  blueviolet: 9055202,
  brown: 10824234,
  burlywood: 14596231,
  cadetblue: 6266528,
  chartreuse: 8388352,
  chocolate: 13789470,
  coral: 16744272,
  cornflowerblue: 6591981,
  cornsilk: 16775388,
  crimson: 14423100,
  cyan: 65535,
  darkblue: 139,
  darkcyan: 35723,
  darkgoldenrod: 12092939,
  darkgray: 11119017,
  darkgreen: 25600,
  darkgrey: 11119017,
  darkkhaki: 12433259,
  darkmagenta: 9109643,
  darkolivegreen: 5597999,
  darkorange: 16747520,
  darkorchid: 10040012,
  darkred: 9109504,
  darksalmon: 15308410,
  darkseagreen: 9419919,
  darkslateblue: 4734347,
  darkslategray: 3100495,
  darkslategrey: 3100495,
  darkturquoise: 52945,
  darkviolet: 9699539,
  deeppink: 16716947,
  deepskyblue: 49151,
  dimgray: 6908265,
  dimgrey: 6908265,
  dodgerblue: 2003199,
  firebrick: 11674146,
  floralwhite: 16775920,
  forestgreen: 2263842,
  fuchsia: 16711935,
  gainsboro: 14474460,
  ghostwhite: 16316671,
  gold: 16766720,
  goldenrod: 14329120,
  gray: 8421504,
  green: 32768,
  greenyellow: 11403055,
  grey: 8421504,
  honeydew: 15794160,
  hotpink: 16738740,
  indianred: 13458524,
  indigo: 4915330,
  ivory: 16777200,
  khaki: 15787660,
  lavender: 15132410,
  lavenderblush: 16773365,
  lawngreen: 8190976,
  lemonchiffon: 16775885,
  lightblue: 11393254,
  lightcoral: 15761536,
  lightcyan: 14745599,
  lightgoldenrodyellow: 16448210,
  lightgray: 13882323,
  lightgreen: 9498256,
  lightgrey: 13882323,
  lightpink: 16758465,
  lightsalmon: 16752762,
  lightseagreen: 2142890,
  lightskyblue: 8900346,
  lightslategray: 7833753,
  lightslategrey: 7833753,
  lightsteelblue: 11584734,
  lightyellow: 16777184,
  lime: 65280,
  limegreen: 3329330,
  linen: 16445670,
  magenta: 16711935,
  maroon: 8388608,
  mediumaquamarine: 6737322,
  mediumblue: 205,
  mediumorchid: 12211667,
  mediumpurple: 9662683,
  mediumseagreen: 3978097,
  mediumslateblue: 8087790,
  mediumspringgreen: 64154,
  mediumturquoise: 4772300,
  mediumvioletred: 13047173,
  midnightblue: 1644912,
  mintcream: 16121850,
  mistyrose: 16770273,
  moccasin: 16770229,
  navajowhite: 16768685,
  navy: 128,
  oldlace: 16643558,
  olive: 8421376,
  olivedrab: 7048739,
  orange: 16753920,
  orangered: 16729344,
  orchid: 14315734,
  palegoldenrod: 15657130,
  palegreen: 10025880,
  paleturquoise: 11529966,
  palevioletred: 14381203,
  papayawhip: 16773077,
  peachpuff: 16767673,
  peru: 13468991,
  pink: 16761035,
  plum: 14524637,
  powderblue: 11591910,
  purple: 8388736,
  rebeccapurple: 6697881,
  red: 16711680,
  rosybrown: 12357519,
  royalblue: 4286945,
  saddlebrown: 9127187,
  salmon: 16416882,
  sandybrown: 16032864,
  seagreen: 3050327,
  seashell: 16774638,
  sienna: 10506797,
  silver: 12632256,
  skyblue: 8900331,
  slateblue: 6970061,
  slategray: 7372944,
  slategrey: 7372944,
  snow: 16775930,
  springgreen: 65407,
  steelblue: 4620980,
  tan: 13808780,
  teal: 32896,
  thistle: 14204888,
  tomato: 16737095,
  turquoise: 4251856,
  violet: 15631086,
  wheat: 16113331,
  white: 16777215,
  whitesmoke: 16119285,
  yellow: 16776960,
  yellowgreen: 10145074
};
Xh(Xa, xa, {
  copy(e) {
    return Object.assign(new this.constructor(), this, e);
  },
  displayable() {
    return this.rgb().displayable();
  },
  hex: Ob,
  // Deprecated! Use color.formatHex.
  formatHex: Ob,
  formatHex8: BV,
  formatHsl: FV,
  formatRgb: Rb,
  toString: Rb
});
function Ob() {
  return this.rgb().formatHex();
}
function BV() {
  return this.rgb().formatHex8();
}
function FV() {
  return C1(this).formatHsl();
}
function Rb() {
  return this.rgb().formatRgb();
}
function xa(e) {
  var t, n;
  return e = (e + "").trim().toLowerCase(), (t = IV.exec(e)) ? (n = t[1].length, t = parseInt(t[1], 16), n === 6 ? kb(t) : n === 3 ? new Cn(t >> 8 & 15 | t >> 4 & 240, t >> 4 & 15 | t & 240, (t & 15) << 4 | t & 15, 1) : n === 8 ? Rl(t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, (t & 255) / 255) : n === 4 ? Rl(t >> 12 & 15 | t >> 8 & 240, t >> 8 & 15 | t >> 4 & 240, t >> 4 & 15 | t & 240, ((t & 15) << 4 | t & 15) / 255) : null) : (t = $V.exec(e)) ? new Cn(t[1], t[2], t[3], 1) : (t = PV.exec(e)) ? new Cn(t[1] * 255 / 100, t[2] * 255 / 100, t[3] * 255 / 100, 1) : (t = _V.exec(e)) ? Rl(t[1], t[2], t[3], t[4]) : (t = MV.exec(e)) ? Rl(t[1] * 255 / 100, t[2] * 255 / 100, t[3] * 255 / 100, t[4]) : (t = AV.exec(e)) ? $b(t[1], t[2] / 100, t[3] / 100, 1) : (t = DV.exec(e)) ? $b(t[1], t[2] / 100, t[3] / 100, t[4]) : Cb.hasOwnProperty(e) ? kb(Cb[e]) : e === "transparent" ? new Cn(NaN, NaN, NaN, 0) : null;
}
function kb(e) {
  return new Cn(e >> 16 & 255, e >> 8 & 255, e & 255, 1);
}
function Rl(e, t, n, r) {
  return r <= 0 && (e = t = n = NaN), new Cn(e, t, n, r);
}
function LV(e) {
  return e instanceof Xa || (e = xa(e)), e ? (e = e.rgb(), new Cn(e.r, e.g, e.b, e.opacity)) : new Cn();
}
function cp(e, t, n, r) {
  return arguments.length === 1 ? LV(e) : new Cn(e, t, n, r ?? 1);
}
function Cn(e, t, n, r) {
  this.r = +e, this.g = +t, this.b = +n, this.opacity = +r;
}
Xh(Cn, cp, T1(Xa, {
  brighter(e) {
    return e = e == null ? Pc : Math.pow(Pc, e), new Cn(this.r * e, this.g * e, this.b * e, this.opacity);
  },
  darker(e) {
    return e = e == null ? ba : Math.pow(ba, e), new Cn(this.r * e, this.g * e, this.b * e, this.opacity);
  },
  rgb() {
    return this;
  },
  clamp() {
    return new Cn(Yo(this.r), Yo(this.g), Yo(this.b), _c(this.opacity));
  },
  displayable() {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: Nb,
  // Deprecated! Use color.formatHex.
  formatHex: Nb,
  formatHex8: zV,
  formatRgb: Ib,
  toString: Ib
}));
function Nb() {
  return `#${Wo(this.r)}${Wo(this.g)}${Wo(this.b)}`;
}
function zV() {
  return `#${Wo(this.r)}${Wo(this.g)}${Wo(this.b)}${Wo((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
}
function Ib() {
  const e = _c(this.opacity);
  return `${e === 1 ? "rgb(" : "rgba("}${Yo(this.r)}, ${Yo(this.g)}, ${Yo(this.b)}${e === 1 ? ")" : `, ${e})`}`;
}
function _c(e) {
  return isNaN(e) ? 1 : Math.max(0, Math.min(1, e));
}
function Yo(e) {
  return Math.max(0, Math.min(255, Math.round(e) || 0));
}
function Wo(e) {
  return e = Yo(e), (e < 16 ? "0" : "") + e.toString(16);
}
function $b(e, t, n, r) {
  return r <= 0 ? e = t = n = NaN : n <= 0 || n >= 1 ? e = t = NaN : t <= 0 && (e = NaN), new cr(e, t, n, r);
}
function C1(e) {
  if (e instanceof cr) return new cr(e.h, e.s, e.l, e.opacity);
  if (e instanceof Xa || (e = xa(e)), !e) return new cr();
  if (e instanceof cr) return e;
  e = e.rgb();
  var t = e.r / 255, n = e.g / 255, r = e.b / 255, o = Math.min(t, n, r), i = Math.max(t, n, r), s = NaN, l = i - o, c = (i + o) / 2;
  return l ? (t === i ? s = (n - r) / l + (n < r) * 6 : n === i ? s = (r - t) / l + 2 : s = (t - n) / l + 4, l /= c < 0.5 ? i + o : 2 - i - o, s *= 60) : l = c > 0 && c < 1 ? 0 : s, new cr(s, l, c, e.opacity);
}
function VV(e, t, n, r) {
  return arguments.length === 1 ? C1(e) : new cr(e, t, n, r ?? 1);
}
function cr(e, t, n, r) {
  this.h = +e, this.s = +t, this.l = +n, this.opacity = +r;
}
Xh(cr, VV, T1(Xa, {
  brighter(e) {
    return e = e == null ? Pc : Math.pow(Pc, e), new cr(this.h, this.s, this.l * e, this.opacity);
  },
  darker(e) {
    return e = e == null ? ba : Math.pow(ba, e), new cr(this.h, this.s, this.l * e, this.opacity);
  },
  rgb() {
    var e = this.h % 360 + (this.h < 0) * 360, t = isNaN(e) || isNaN(this.s) ? 0 : this.s, n = this.l, r = n + (n < 0.5 ? n : 1 - n) * t, o = 2 * n - r;
    return new Cn(
      Qd(e >= 240 ? e - 240 : e + 120, o, r),
      Qd(e, o, r),
      Qd(e < 120 ? e + 240 : e - 120, o, r),
      this.opacity
    );
  },
  clamp() {
    return new cr(Pb(this.h), kl(this.s), kl(this.l), _c(this.opacity));
  },
  displayable() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  },
  formatHsl() {
    const e = _c(this.opacity);
    return `${e === 1 ? "hsl(" : "hsla("}${Pb(this.h)}, ${kl(this.s) * 100}%, ${kl(this.l) * 100}%${e === 1 ? ")" : `, ${e})`}`;
  }
}));
function Pb(e) {
  return e = (e || 0) % 360, e < 0 ? e + 360 : e;
}
function kl(e) {
  return Math.max(0, Math.min(1, e || 0));
}
function Qd(e, t, n) {
  return (e < 60 ? t + (n - t) * e / 60 : e < 180 ? n : e < 240 ? t + (n - t) * (240 - e) / 60 : t) * 255;
}
const O1 = (e) => () => e;
function jV(e, t) {
  return function(n) {
    return e + n * t;
  };
}
function HV(e, t, n) {
  return e = Math.pow(e, n), t = Math.pow(t, n) - e, n = 1 / n, function(r) {
    return Math.pow(e + r * t, n);
  };
}
function WV(e) {
  return (e = +e) == 1 ? R1 : function(t, n) {
    return n - t ? HV(t, n, e) : O1(isNaN(t) ? n : t);
  };
}
function R1(e, t) {
  var n = t - e;
  return n ? jV(e, n) : O1(isNaN(e) ? t : e);
}
const _b = function e(t) {
  var n = WV(t);
  function r(o, i) {
    var s = n((o = cp(o)).r, (i = cp(i)).r), l = n(o.g, i.g), c = n(o.b, i.b), u = R1(o.opacity, i.opacity);
    return function(d) {
      return o.r = s(d), o.g = l(d), o.b = c(d), o.opacity = u(d), o + "";
    };
  }
  return r.gamma = e, r;
}(1);
function mo(e, t) {
  return e = +e, t = +t, function(n) {
    return e * (1 - n) + t * n;
  };
}
var up = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, Jd = new RegExp(up.source, "g");
function UV(e) {
  return function() {
    return e;
  };
}
function qV(e) {
  return function(t) {
    return e(t) + "";
  };
}
function YV(e, t) {
  var n = up.lastIndex = Jd.lastIndex = 0, r, o, i, s = -1, l = [], c = [];
  for (e = e + "", t = t + ""; (r = up.exec(e)) && (o = Jd.exec(t)); )
    (i = o.index) > n && (i = t.slice(n, i), l[s] ? l[s] += i : l[++s] = i), (r = r[0]) === (o = o[0]) ? l[s] ? l[s] += o : l[++s] = o : (l[++s] = null, c.push({ i: s, x: mo(r, o) })), n = Jd.lastIndex;
  return n < t.length && (i = t.slice(n), l[s] ? l[s] += i : l[++s] = i), l.length < 2 ? c[0] ? qV(c[0].x) : UV(t) : (t = c.length, function(u) {
    for (var d = 0, f; d < t; ++d) l[(f = c[d]).i] = f.x(u);
    return l.join("");
  });
}
var Mb = 180 / Math.PI, dp = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
function k1(e, t, n, r, o, i) {
  var s, l, c;
  return (s = Math.sqrt(e * e + t * t)) && (e /= s, t /= s), (c = e * n + t * r) && (n -= e * c, r -= t * c), (l = Math.sqrt(n * n + r * r)) && (n /= l, r /= l, c /= l), e * r < t * n && (e = -e, t = -t, c = -c, s = -s), {
    translateX: o,
    translateY: i,
    rotate: Math.atan2(t, e) * Mb,
    skewX: Math.atan(c) * Mb,
    scaleX: s,
    scaleY: l
  };
}
var Nl;
function GV(e) {
  const t = new (typeof DOMMatrix == "function" ? DOMMatrix : WebKitCSSMatrix)(e + "");
  return t.isIdentity ? dp : k1(t.a, t.b, t.c, t.d, t.e, t.f);
}
function KV(e) {
  return e == null || (Nl || (Nl = document.createElementNS("http://www.w3.org/2000/svg", "g")), Nl.setAttribute("transform", e), !(e = Nl.transform.baseVal.consolidate())) ? dp : (e = e.matrix, k1(e.a, e.b, e.c, e.d, e.e, e.f));
}
function N1(e, t, n, r) {
  function o(u) {
    return u.length ? u.pop() + " " : "";
  }
  function i(u, d, f, p, h, g) {
    if (u !== f || d !== p) {
      var m = h.push("translate(", null, t, null, n);
      g.push({ i: m - 4, x: mo(u, f) }, { i: m - 2, x: mo(d, p) });
    } else (f || p) && h.push("translate(" + f + t + p + n);
  }
  function s(u, d, f, p) {
    u !== d ? (u - d > 180 ? d += 360 : d - u > 180 && (u += 360), p.push({ i: f.push(o(f) + "rotate(", null, r) - 2, x: mo(u, d) })) : d && f.push(o(f) + "rotate(" + d + r);
  }
  function l(u, d, f, p) {
    u !== d ? p.push({ i: f.push(o(f) + "skewX(", null, r) - 2, x: mo(u, d) }) : d && f.push(o(f) + "skewX(" + d + r);
  }
  function c(u, d, f, p, h, g) {
    if (u !== f || d !== p) {
      var m = h.push(o(h) + "scale(", null, ",", null, ")");
      g.push({ i: m - 4, x: mo(u, f) }, { i: m - 2, x: mo(d, p) });
    } else (f !== 1 || p !== 1) && h.push(o(h) + "scale(" + f + "," + p + ")");
  }
  return function(u, d) {
    var f = [], p = [];
    return u = e(u), d = e(d), i(u.translateX, u.translateY, d.translateX, d.translateY, f, p), s(u.rotate, d.rotate, f, p), l(u.skewX, d.skewX, f, p), c(u.scaleX, u.scaleY, d.scaleX, d.scaleY, f, p), u = d = null, function(h) {
      for (var g = -1, m = p.length, b; ++g < m; ) f[(b = p[g]).i] = b.x(h);
      return f.join("");
    };
  };
}
var XV = N1(GV, "px, ", "px)", "deg)"), ZV = N1(KV, ", ", ")", ")"), QV = 1e-12;
function Ab(e) {
  return ((e = Math.exp(e)) + 1 / e) / 2;
}
function JV(e) {
  return ((e = Math.exp(e)) - 1 / e) / 2;
}
function ej(e) {
  return ((e = Math.exp(2 * e)) - 1) / (e + 1);
}
const tj = function e(t, n, r) {
  function o(i, s) {
    var l = i[0], c = i[1], u = i[2], d = s[0], f = s[1], p = s[2], h = d - l, g = f - c, m = h * h + g * g, b, x;
    if (m < QV)
      x = Math.log(p / u) / t, b = function(C) {
        return [
          l + C * h,
          c + C * g,
          u * Math.exp(t * C * x)
        ];
      };
    else {
      var E = Math.sqrt(m), v = (p * p - u * u + r * m) / (2 * u * n * E), w = (p * p - u * u - r * m) / (2 * p * n * E), S = Math.log(Math.sqrt(v * v + 1) - v), T = Math.log(Math.sqrt(w * w + 1) - w);
      x = (T - S) / t, b = function(C) {
        var k = C * x, P = Ab(S), y = u / (n * E) * (P * ej(t * k + S) - JV(S));
        return [
          l + y * h,
          c + y * g,
          u * P / Ab(t * k + S)
        ];
      };
    }
    return b.duration = x * 1e3 * t / Math.SQRT2, b;
  }
  return o.rho = function(i) {
    var s = Math.max(1e-3, +i), l = s * s, c = l * l;
    return e(s, l, c);
  }, o;
}(Math.SQRT2, 2, 4);
var qi = 0, Bs = 0, ks = 0, I1 = 1e3, Mc, Fs, Ac = 0, Jo = 0, Gu = 0, wa = typeof performance == "object" && performance.now ? performance : Date, $1 = typeof window == "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(e) {
  setTimeout(e, 17);
};
function Zh() {
  return Jo || ($1(nj), Jo = wa.now() + Gu);
}
function nj() {
  Jo = 0;
}
function Dc() {
  this._call = this._time = this._next = null;
}
Dc.prototype = P1.prototype = {
  constructor: Dc,
  restart: function(e, t, n) {
    if (typeof e != "function") throw new TypeError("callback is not a function");
    n = (n == null ? Zh() : +n) + (t == null ? 0 : +t), !this._next && Fs !== this && (Fs ? Fs._next = this : Mc = this, Fs = this), this._call = e, this._time = n, fp();
  },
  stop: function() {
    this._call && (this._call = null, this._time = 1 / 0, fp());
  }
};
function P1(e, t, n) {
  var r = new Dc();
  return r.restart(e, t, n), r;
}
function rj() {
  Zh(), ++qi;
  for (var e = Mc, t; e; )
    (t = Jo - e._time) >= 0 && e._call.call(void 0, t), e = e._next;
  --qi;
}
function Db() {
  Jo = (Ac = wa.now()) + Gu, qi = Bs = 0;
  try {
    rj();
  } finally {
    qi = 0, ij(), Jo = 0;
  }
}
function oj() {
  var e = wa.now(), t = e - Ac;
  t > I1 && (Gu -= t, Ac = e);
}
function ij() {
  for (var e, t = Mc, n, r = 1 / 0; t; )
    t._call ? (r > t._time && (r = t._time), e = t, t = t._next) : (n = t._next, t._next = null, t = e ? e._next = n : Mc = n);
  Fs = e, fp(r);
}
function fp(e) {
  if (!qi) {
    Bs && (Bs = clearTimeout(Bs));
    var t = e - Jo;
    t > 24 ? (e < 1 / 0 && (Bs = setTimeout(Db, e - wa.now() - Gu)), ks && (ks = clearInterval(ks))) : (ks || (Ac = wa.now(), ks = setInterval(oj, I1)), qi = 1, $1(Db));
  }
}
function Bb(e, t, n) {
  var r = new Dc();
  return t = t == null ? 0 : +t, r.restart((o) => {
    r.stop(), e(o + t);
  }, t, n), r;
}
var sj = qu("start", "end", "cancel", "interrupt"), aj = [], _1 = 0, Fb = 1, pp = 2, Ql = 3, Lb = 4, hp = 5, Jl = 6;
function Ku(e, t, n, r, o, i) {
  var s = e.__transition;
  if (!s) e.__transition = {};
  else if (n in s) return;
  lj(e, n, {
    name: t,
    index: r,
    // For context during callback.
    group: o,
    // For context during callback.
    on: sj,
    tween: aj,
    time: i.time,
    delay: i.delay,
    duration: i.duration,
    ease: i.ease,
    timer: null,
    state: _1
  });
}
function Qh(e, t) {
  var n = mr(e, t);
  if (n.state > _1) throw new Error("too late; already scheduled");
  return n;
}
function Vr(e, t) {
  var n = mr(e, t);
  if (n.state > Ql) throw new Error("too late; already running");
  return n;
}
function mr(e, t) {
  var n = e.__transition;
  if (!n || !(n = n[t])) throw new Error("transition not found");
  return n;
}
function lj(e, t, n) {
  var r = e.__transition, o;
  r[t] = n, n.timer = P1(i, 0, n.time);
  function i(u) {
    n.state = Fb, n.timer.restart(s, n.delay, n.time), n.delay <= u && s(u - n.delay);
  }
  function s(u) {
    var d, f, p, h;
    if (n.state !== Fb) return c();
    for (d in r)
      if (h = r[d], h.name === n.name) {
        if (h.state === Ql) return Bb(s);
        h.state === Lb ? (h.state = Jl, h.timer.stop(), h.on.call("interrupt", e, e.__data__, h.index, h.group), delete r[d]) : +d < t && (h.state = Jl, h.timer.stop(), h.on.call("cancel", e, e.__data__, h.index, h.group), delete r[d]);
      }
    if (Bb(function() {
      n.state === Ql && (n.state = Lb, n.timer.restart(l, n.delay, n.time), l(u));
    }), n.state = pp, n.on.call("start", e, e.__data__, n.index, n.group), n.state === pp) {
      for (n.state = Ql, o = new Array(p = n.tween.length), d = 0, f = -1; d < p; ++d)
        (h = n.tween[d].value.call(e, e.__data__, n.index, n.group)) && (o[++f] = h);
      o.length = f + 1;
    }
  }
  function l(u) {
    for (var d = u < n.duration ? n.ease.call(null, u / n.duration) : (n.timer.restart(c), n.state = hp, 1), f = -1, p = o.length; ++f < p; )
      o[f].call(e, d);
    n.state === hp && (n.on.call("end", e, e.__data__, n.index, n.group), c());
  }
  function c() {
    n.state = Jl, n.timer.stop(), delete r[t];
    for (var u in r) return;
    delete e.__transition;
  }
}
function ec(e, t) {
  var n = e.__transition, r, o, i = !0, s;
  if (n) {
    t = t == null ? null : t + "";
    for (s in n) {
      if ((r = n[s]).name !== t) {
        i = !1;
        continue;
      }
      o = r.state > pp && r.state < hp, r.state = Jl, r.timer.stop(), r.on.call(o ? "interrupt" : "cancel", e, e.__data__, r.index, r.group), delete n[s];
    }
    i && delete e.__transition;
  }
}
function cj(e) {
  return this.each(function() {
    ec(this, e);
  });
}
function uj(e, t) {
  var n, r;
  return function() {
    var o = Vr(this, e), i = o.tween;
    if (i !== n) {
      r = n = i;
      for (var s = 0, l = r.length; s < l; ++s)
        if (r[s].name === t) {
          r = r.slice(), r.splice(s, 1);
          break;
        }
    }
    o.tween = r;
  };
}
function dj(e, t, n) {
  var r, o;
  if (typeof n != "function") throw new Error();
  return function() {
    var i = Vr(this, e), s = i.tween;
    if (s !== r) {
      o = (r = s).slice();
      for (var l = { name: t, value: n }, c = 0, u = o.length; c < u; ++c)
        if (o[c].name === t) {
          o[c] = l;
          break;
        }
      c === u && o.push(l);
    }
    i.tween = o;
  };
}
function fj(e, t) {
  var n = this._id;
  if (e += "", arguments.length < 2) {
    for (var r = mr(this.node(), n).tween, o = 0, i = r.length, s; o < i; ++o)
      if ((s = r[o]).name === e)
        return s.value;
    return null;
  }
  return this.each((t == null ? uj : dj)(n, e, t));
}
function Jh(e, t, n) {
  var r = e._id;
  return e.each(function() {
    var o = Vr(this, r);
    (o.value || (o.value = {}))[t] = n.apply(this, arguments);
  }), function(o) {
    return mr(o, r).value[t];
  };
}
function M1(e, t) {
  var n;
  return (typeof t == "number" ? mo : t instanceof xa ? _b : (n = xa(t)) ? (t = n, _b) : YV)(e, t);
}
function pj(e) {
  return function() {
    this.removeAttribute(e);
  };
}
function hj(e) {
  return function() {
    this.removeAttributeNS(e.space, e.local);
  };
}
function mj(e, t, n) {
  var r, o = n + "", i;
  return function() {
    var s = this.getAttribute(e);
    return s === o ? null : s === r ? i : i = t(r = s, n);
  };
}
function gj(e, t, n) {
  var r, o = n + "", i;
  return function() {
    var s = this.getAttributeNS(e.space, e.local);
    return s === o ? null : s === r ? i : i = t(r = s, n);
  };
}
function yj(e, t, n) {
  var r, o, i;
  return function() {
    var s, l = n(this), c;
    return l == null ? void this.removeAttribute(e) : (s = this.getAttribute(e), c = l + "", s === c ? null : s === r && c === o ? i : (o = c, i = t(r = s, l)));
  };
}
function bj(e, t, n) {
  var r, o, i;
  return function() {
    var s, l = n(this), c;
    return l == null ? void this.removeAttributeNS(e.space, e.local) : (s = this.getAttributeNS(e.space, e.local), c = l + "", s === c ? null : s === r && c === o ? i : (o = c, i = t(r = s, l)));
  };
}
function vj(e, t) {
  var n = Yu(e), r = n === "transform" ? ZV : M1;
  return this.attrTween(e, typeof t == "function" ? (n.local ? bj : yj)(n, r, Jh(this, "attr." + e, t)) : t == null ? (n.local ? hj : pj)(n) : (n.local ? gj : mj)(n, r, t));
}
function xj(e, t) {
  return function(n) {
    this.setAttribute(e, t.call(this, n));
  };
}
function wj(e, t) {
  return function(n) {
    this.setAttributeNS(e.space, e.local, t.call(this, n));
  };
}
function Sj(e, t) {
  var n, r;
  function o() {
    var i = t.apply(this, arguments);
    return i !== r && (n = (r = i) && wj(e, i)), n;
  }
  return o._value = t, o;
}
function Ej(e, t) {
  var n, r;
  function o() {
    var i = t.apply(this, arguments);
    return i !== r && (n = (r = i) && xj(e, i)), n;
  }
  return o._value = t, o;
}
function Tj(e, t) {
  var n = "attr." + e;
  if (arguments.length < 2) return (n = this.tween(n)) && n._value;
  if (t == null) return this.tween(n, null);
  if (typeof t != "function") throw new Error();
  var r = Yu(e);
  return this.tween(n, (r.local ? Sj : Ej)(r, t));
}
function Cj(e, t) {
  return function() {
    Qh(this, e).delay = +t.apply(this, arguments);
  };
}
function Oj(e, t) {
  return t = +t, function() {
    Qh(this, e).delay = t;
  };
}
function Rj(e) {
  var t = this._id;
  return arguments.length ? this.each((typeof e == "function" ? Cj : Oj)(t, e)) : mr(this.node(), t).delay;
}
function kj(e, t) {
  return function() {
    Vr(this, e).duration = +t.apply(this, arguments);
  };
}
function Nj(e, t) {
  return t = +t, function() {
    Vr(this, e).duration = t;
  };
}
function Ij(e) {
  var t = this._id;
  return arguments.length ? this.each((typeof e == "function" ? kj : Nj)(t, e)) : mr(this.node(), t).duration;
}
function $j(e, t) {
  if (typeof t != "function") throw new Error();
  return function() {
    Vr(this, e).ease = t;
  };
}
function Pj(e) {
  var t = this._id;
  return arguments.length ? this.each($j(t, e)) : mr(this.node(), t).ease;
}
function _j(e, t) {
  return function() {
    var n = t.apply(this, arguments);
    if (typeof n != "function") throw new Error();
    Vr(this, e).ease = n;
  };
}
function Mj(e) {
  if (typeof e != "function") throw new Error();
  return this.each(_j(this._id, e));
}
function Aj(e) {
  typeof e != "function" && (e = d1(e));
  for (var t = this._groups, n = t.length, r = new Array(n), o = 0; o < n; ++o)
    for (var i = t[o], s = i.length, l = r[o] = [], c, u = 0; u < s; ++u)
      (c = i[u]) && e.call(c, c.__data__, u, i) && l.push(c);
  return new ro(r, this._parents, this._name, this._id);
}
function Dj(e) {
  if (e._id !== this._id) throw new Error();
  for (var t = this._groups, n = e._groups, r = t.length, o = n.length, i = Math.min(r, o), s = new Array(r), l = 0; l < i; ++l)
    for (var c = t[l], u = n[l], d = c.length, f = s[l] = new Array(d), p, h = 0; h < d; ++h)
      (p = c[h] || u[h]) && (f[h] = p);
  for (; l < r; ++l)
    s[l] = t[l];
  return new ro(s, this._parents, this._name, this._id);
}
function Bj(e) {
  return (e + "").trim().split(/^|\s+/).every(function(t) {
    var n = t.indexOf(".");
    return n >= 0 && (t = t.slice(0, n)), !t || t === "start";
  });
}
function Fj(e, t, n) {
  var r, o, i = Bj(t) ? Qh : Vr;
  return function() {
    var s = i(this, e), l = s.on;
    l !== r && (o = (r = l).copy()).on(t, n), s.on = o;
  };
}
function Lj(e, t) {
  var n = this._id;
  return arguments.length < 2 ? mr(this.node(), n).on.on(e) : this.each(Fj(n, e, t));
}
function zj(e) {
  return function() {
    var t = this.parentNode;
    for (var n in this.__transition) if (+n !== e) return;
    t && t.removeChild(this);
  };
}
function Vj() {
  return this.on("end.remove", zj(this._id));
}
function jj(e) {
  var t = this._name, n = this._id;
  typeof e != "function" && (e = Gh(e));
  for (var r = this._groups, o = r.length, i = new Array(o), s = 0; s < o; ++s)
    for (var l = r[s], c = l.length, u = i[s] = new Array(c), d, f, p = 0; p < c; ++p)
      (d = l[p]) && (f = e.call(d, d.__data__, p, l)) && ("__data__" in d && (f.__data__ = d.__data__), u[p] = f, Ku(u[p], t, n, p, u, mr(d, n)));
  return new ro(i, this._parents, t, n);
}
function Hj(e) {
  var t = this._name, n = this._id;
  typeof e != "function" && (e = u1(e));
  for (var r = this._groups, o = r.length, i = [], s = [], l = 0; l < o; ++l)
    for (var c = r[l], u = c.length, d, f = 0; f < u; ++f)
      if (d = c[f]) {
        for (var p = e.call(d, d.__data__, f, c), h, g = mr(d, n), m = 0, b = p.length; m < b; ++m)
          (h = p[m]) && Ku(h, t, n, m, p, g);
        i.push(p), s.push(d);
      }
  return new ro(i, s, t, n);
}
var Wj = Ka.prototype.constructor;
function Uj() {
  return new Wj(this._groups, this._parents);
}
function qj(e, t) {
  var n, r, o;
  return function() {
    var i = Ui(this, e), s = (this.style.removeProperty(e), Ui(this, e));
    return i === s ? null : i === n && s === r ? o : o = t(n = i, r = s);
  };
}
function A1(e) {
  return function() {
    this.style.removeProperty(e);
  };
}
function Yj(e, t, n) {
  var r, o = n + "", i;
  return function() {
    var s = Ui(this, e);
    return s === o ? null : s === r ? i : i = t(r = s, n);
  };
}
function Gj(e, t, n) {
  var r, o, i;
  return function() {
    var s = Ui(this, e), l = n(this), c = l + "";
    return l == null && (c = l = (this.style.removeProperty(e), Ui(this, e))), s === c ? null : s === r && c === o ? i : (o = c, i = t(r = s, l));
  };
}
function Kj(e, t) {
  var n, r, o, i = "style." + t, s = "end." + i, l;
  return function() {
    var c = Vr(this, e), u = c.on, d = c.value[i] == null ? l || (l = A1(t)) : void 0;
    (u !== n || o !== d) && (r = (n = u).copy()).on(s, o = d), c.on = r;
  };
}
function Xj(e, t, n) {
  var r = (e += "") == "transform" ? XV : M1;
  return t == null ? this.styleTween(e, qj(e, r)).on("end.style." + e, A1(e)) : typeof t == "function" ? this.styleTween(e, Gj(e, r, Jh(this, "style." + e, t))).each(Kj(this._id, e)) : this.styleTween(e, Yj(e, r, t), n).on("end.style." + e, null);
}
function Zj(e, t, n) {
  return function(r) {
    this.style.setProperty(e, t.call(this, r), n);
  };
}
function Qj(e, t, n) {
  var r, o;
  function i() {
    var s = t.apply(this, arguments);
    return s !== o && (r = (o = s) && Zj(e, s, n)), r;
  }
  return i._value = t, i;
}
function Jj(e, t, n) {
  var r = "style." + (e += "");
  if (arguments.length < 2) return (r = this.tween(r)) && r._value;
  if (t == null) return this.tween(r, null);
  if (typeof t != "function") throw new Error();
  return this.tween(r, Qj(e, t, n ?? ""));
}
function e4(e) {
  return function() {
    this.textContent = e;
  };
}
function t4(e) {
  return function() {
    var t = e(this);
    this.textContent = t ?? "";
  };
}
function n4(e) {
  return this.tween("text", typeof e == "function" ? t4(Jh(this, "text", e)) : e4(e == null ? "" : e + ""));
}
function r4(e) {
  return function(t) {
    this.textContent = e.call(this, t);
  };
}
function o4(e) {
  var t, n;
  function r() {
    var o = e.apply(this, arguments);
    return o !== n && (t = (n = o) && r4(o)), t;
  }
  return r._value = e, r;
}
function i4(e) {
  var t = "text";
  if (arguments.length < 1) return (t = this.tween(t)) && t._value;
  if (e == null) return this.tween(t, null);
  if (typeof e != "function") throw new Error();
  return this.tween(t, o4(e));
}
function s4() {
  for (var e = this._name, t = this._id, n = D1(), r = this._groups, o = r.length, i = 0; i < o; ++i)
    for (var s = r[i], l = s.length, c, u = 0; u < l; ++u)
      if (c = s[u]) {
        var d = mr(c, t);
        Ku(c, e, n, u, s, {
          time: d.time + d.delay + d.duration,
          delay: 0,
          duration: d.duration,
          ease: d.ease
        });
      }
  return new ro(r, this._parents, e, n);
}
function a4() {
  var e, t, n = this, r = n._id, o = n.size();
  return new Promise(function(i, s) {
    var l = { value: s }, c = { value: function() {
      --o === 0 && i();
    } };
    n.each(function() {
      var u = Vr(this, r), d = u.on;
      d !== e && (t = (e = d).copy(), t._.cancel.push(l), t._.interrupt.push(l), t._.end.push(c)), u.on = t;
    }), o === 0 && i();
  });
}
var l4 = 0;
function ro(e, t, n, r) {
  this._groups = e, this._parents = t, this._name = n, this._id = r;
}
function D1() {
  return ++l4;
}
var Yr = Ka.prototype;
ro.prototype = {
  constructor: ro,
  select: jj,
  selectAll: Hj,
  selectChild: Yr.selectChild,
  selectChildren: Yr.selectChildren,
  filter: Aj,
  merge: Dj,
  selection: Uj,
  transition: s4,
  call: Yr.call,
  nodes: Yr.nodes,
  node: Yr.node,
  size: Yr.size,
  empty: Yr.empty,
  each: Yr.each,
  on: Lj,
  attr: vj,
  attrTween: Tj,
  style: Xj,
  styleTween: Jj,
  text: n4,
  textTween: i4,
  remove: Vj,
  tween: fj,
  delay: Rj,
  duration: Ij,
  ease: Pj,
  easeVarying: Mj,
  end: a4,
  [Symbol.iterator]: Yr[Symbol.iterator]
};
function c4(e) {
  return ((e *= 2) <= 1 ? e * e * e : (e -= 2) * e * e + 2) / 2;
}
var u4 = {
  time: null,
  // Set on use.
  delay: 0,
  duration: 250,
  ease: c4
};
function d4(e, t) {
  for (var n; !(n = e.__transition) || !(n = n[t]); )
    if (!(e = e.parentNode))
      throw new Error(`transition ${t} not found`);
  return n;
}
function f4(e) {
  var t, n;
  e instanceof ro ? (t = e._id, e = e._name) : (t = D1(), (n = u4).time = Zh(), e = e == null ? null : e + "");
  for (var r = this._groups, o = r.length, i = 0; i < o; ++i)
    for (var s = r[i], l = s.length, c, u = 0; u < l; ++u)
      (c = s[u]) && Ku(c, e, t, u, s, n || d4(c, t));
  return new ro(r, this._parents, e, t);
}
Ka.prototype.interrupt = cj;
Ka.prototype.transition = f4;
const Il = (e) => () => e;
function p4(e, {
  sourceEvent: t,
  target: n,
  transform: r,
  dispatch: o
}) {
  Object.defineProperties(this, {
    type: { value: e, enumerable: !0, configurable: !0 },
    sourceEvent: { value: t, enumerable: !0, configurable: !0 },
    target: { value: n, enumerable: !0, configurable: !0 },
    transform: { value: r, enumerable: !0, configurable: !0 },
    _: { value: o }
  });
}
function Gr(e, t, n) {
  this.k = e, this.x = t, this.y = n;
}
Gr.prototype = {
  constructor: Gr,
  scale: function(e) {
    return e === 1 ? this : new Gr(this.k * e, this.x, this.y);
  },
  translate: function(e, t) {
    return e === 0 & t === 0 ? this : new Gr(this.k, this.x + this.k * e, this.y + this.k * t);
  },
  apply: function(e) {
    return [e[0] * this.k + this.x, e[1] * this.k + this.y];
  },
  applyX: function(e) {
    return e * this.k + this.x;
  },
  applyY: function(e) {
    return e * this.k + this.y;
  },
  invert: function(e) {
    return [(e[0] - this.x) / this.k, (e[1] - this.y) / this.k];
  },
  invertX: function(e) {
    return (e - this.x) / this.k;
  },
  invertY: function(e) {
    return (e - this.y) / this.k;
  },
  rescaleX: function(e) {
    return e.copy().domain(e.range().map(this.invertX, this).map(e.invert, e));
  },
  rescaleY: function(e) {
    return e.copy().domain(e.range().map(this.invertY, this).map(e.invert, e));
  },
  toString: function() {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};
var Xu = new Gr(1, 0, 0);
B1.prototype = Gr.prototype;
function B1(e) {
  for (; !e.__zoom; ) if (!(e = e.parentNode)) return Xu;
  return e.__zoom;
}
function ef(e) {
  e.stopImmediatePropagation();
}
function Ns(e) {
  e.preventDefault(), e.stopImmediatePropagation();
}
function h4(e) {
  return (!e.ctrlKey || e.type === "wheel") && !e.button;
}
function m4() {
  var e = this;
  return e instanceof SVGElement ? (e = e.ownerSVGElement || e, e.hasAttribute("viewBox") ? (e = e.viewBox.baseVal, [[e.x, e.y], [e.x + e.width, e.y + e.height]]) : [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]]) : [[0, 0], [e.clientWidth, e.clientHeight]];
}
function zb() {
  return this.__zoom || Xu;
}
function g4(e) {
  return -e.deltaY * (e.deltaMode === 1 ? 0.05 : e.deltaMode ? 1 : 2e-3) * (e.ctrlKey ? 10 : 1);
}
function y4() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}
function b4(e, t, n) {
  var r = e.invertX(t[0][0]) - n[0][0], o = e.invertX(t[1][0]) - n[1][0], i = e.invertY(t[0][1]) - n[0][1], s = e.invertY(t[1][1]) - n[1][1];
  return e.translate(
    o > r ? (r + o) / 2 : Math.min(0, r) || Math.max(0, o),
    s > i ? (i + s) / 2 : Math.min(0, i) || Math.max(0, s)
  );
}
function F1() {
  var e = h4, t = m4, n = b4, r = g4, o = y4, i = [0, 1 / 0], s = [[-1 / 0, -1 / 0], [1 / 0, 1 / 0]], l = 250, c = tj, u = qu("start", "zoom", "end"), d, f, p, h = 500, g = 150, m = 0, b = 10;
  function x(O) {
    O.property("__zoom", zb).on("wheel.zoom", k, { passive: !1 }).on("mousedown.zoom", P).on("dblclick.zoom", y).filter(o).on("touchstart.zoom", R).on("touchmove.zoom", $).on("touchend.zoom touchcancel.zoom", A).style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }
  x.transform = function(O, _, I, D) {
    var z = O.selection ? O.selection() : O;
    z.property("__zoom", zb), O !== z ? S(O, _, I, D) : z.interrupt().each(function() {
      T(this, arguments).event(D).start().zoom(null, typeof _ == "function" ? _.apply(this, arguments) : _).end();
    });
  }, x.scaleBy = function(O, _, I, D) {
    x.scaleTo(O, function() {
      var z = this.__zoom.k, B = typeof _ == "function" ? _.apply(this, arguments) : _;
      return z * B;
    }, I, D);
  }, x.scaleTo = function(O, _, I, D) {
    x.transform(O, function() {
      var z = t.apply(this, arguments), B = this.__zoom, F = I == null ? w(z) : typeof I == "function" ? I.apply(this, arguments) : I, L = B.invert(F), W = typeof _ == "function" ? _.apply(this, arguments) : _;
      return n(v(E(B, W), F, L), z, s);
    }, I, D);
  }, x.translateBy = function(O, _, I, D) {
    x.transform(O, function() {
      return n(this.__zoom.translate(
        typeof _ == "function" ? _.apply(this, arguments) : _,
        typeof I == "function" ? I.apply(this, arguments) : I
      ), t.apply(this, arguments), s);
    }, null, D);
  }, x.translateTo = function(O, _, I, D, z) {
    x.transform(O, function() {
      var B = t.apply(this, arguments), F = this.__zoom, L = D == null ? w(B) : typeof D == "function" ? D.apply(this, arguments) : D;
      return n(Xu.translate(L[0], L[1]).scale(F.k).translate(
        typeof _ == "function" ? -_.apply(this, arguments) : -_,
        typeof I == "function" ? -I.apply(this, arguments) : -I
      ), B, s);
    }, D, z);
  };
  function E(O, _) {
    return _ = Math.max(i[0], Math.min(i[1], _)), _ === O.k ? O : new Gr(_, O.x, O.y);
  }
  function v(O, _, I) {
    var D = _[0] - I[0] * O.k, z = _[1] - I[1] * O.k;
    return D === O.x && z === O.y ? O : new Gr(O.k, D, z);
  }
  function w(O) {
    return [(+O[0][0] + +O[1][0]) / 2, (+O[0][1] + +O[1][1]) / 2];
  }
  function S(O, _, I, D) {
    O.on("start.zoom", function() {
      T(this, arguments).event(D).start();
    }).on("interrupt.zoom end.zoom", function() {
      T(this, arguments).event(D).end();
    }).tween("zoom", function() {
      var z = this, B = arguments, F = T(z, B).event(D), L = t.apply(z, B), W = I == null ? w(L) : typeof I == "function" ? I.apply(z, B) : I, U = Math.max(L[1][0] - L[0][0], L[1][1] - L[0][1]), Z = z.__zoom, Q = typeof _ == "function" ? _.apply(z, B) : _, ee = c(Z.invert(W).concat(U / Z.k), Q.invert(W).concat(U / Q.k));
      return function(te) {
        if (te === 1) te = Q;
        else {
          var q = ee(te), oe = U / q[2];
          te = new Gr(oe, W[0] - q[0] * oe, W[1] - q[1] * oe);
        }
        F.zoom(null, te);
      };
    });
  }
  function T(O, _, I) {
    return !I && O.__zooming || new C(O, _);
  }
  function C(O, _) {
    this.that = O, this.args = _, this.active = 0, this.sourceEvent = null, this.extent = t.apply(O, _), this.taps = 0;
  }
  C.prototype = {
    event: function(O) {
      return O && (this.sourceEvent = O), this;
    },
    start: function() {
      return ++this.active === 1 && (this.that.__zooming = this, this.emit("start")), this;
    },
    zoom: function(O, _) {
      return this.mouse && O !== "mouse" && (this.mouse[1] = _.invert(this.mouse[0])), this.touch0 && O !== "touch" && (this.touch0[1] = _.invert(this.touch0[0])), this.touch1 && O !== "touch" && (this.touch1[1] = _.invert(this.touch1[0])), this.that.__zoom = _, this.emit("zoom"), this;
    },
    end: function() {
      return --this.active === 0 && (delete this.that.__zooming, this.emit("end")), this;
    },
    emit: function(O) {
      var _ = Fn(this.that).datum();
      u.call(
        O,
        this.that,
        new p4(O, {
          sourceEvent: this.sourceEvent,
          target: x,
          transform: this.that.__zoom,
          dispatch: u
        }),
        _
      );
    }
  };
  function k(O, ..._) {
    if (!e.apply(this, arguments)) return;
    var I = T(this, _).event(O), D = this.__zoom, z = Math.max(i[0], Math.min(i[1], D.k * Math.pow(2, r.apply(this, arguments)))), B = ar(O);
    if (I.wheel)
      (I.mouse[0][0] !== B[0] || I.mouse[0][1] !== B[1]) && (I.mouse[1] = D.invert(I.mouse[0] = B)), clearTimeout(I.wheel);
    else {
      if (D.k === z) return;
      I.mouse = [B, D.invert(B)], ec(this), I.start();
    }
    Ns(O), I.wheel = setTimeout(F, g), I.zoom("mouse", n(v(E(D, z), I.mouse[0], I.mouse[1]), I.extent, s));
    function F() {
      I.wheel = null, I.end();
    }
  }
  function P(O, ..._) {
    if (p || !e.apply(this, arguments)) return;
    var I = O.currentTarget, D = T(this, _, !0).event(O), z = Fn(O.view).on("mousemove.zoom", W, !0).on("mouseup.zoom", U, !0), B = ar(O, I), F = O.clientX, L = O.clientY;
    w1(O.view), ef(O), D.mouse = [B, this.__zoom.invert(B)], ec(this), D.start();
    function W(Z) {
      if (Ns(Z), !D.moved) {
        var Q = Z.clientX - F, ee = Z.clientY - L;
        D.moved = Q * Q + ee * ee > m;
      }
      D.event(Z).zoom("mouse", n(v(D.that.__zoom, D.mouse[0] = ar(Z, I), D.mouse[1]), D.extent, s));
    }
    function U(Z) {
      z.on("mousemove.zoom mouseup.zoom", null), S1(Z.view, D.moved), Ns(Z), D.event(Z).end();
    }
  }
  function y(O, ..._) {
    if (e.apply(this, arguments)) {
      var I = this.__zoom, D = ar(O.changedTouches ? O.changedTouches[0] : O, this), z = I.invert(D), B = I.k * (O.shiftKey ? 0.5 : 2), F = n(v(E(I, B), D, z), t.apply(this, _), s);
      Ns(O), l > 0 ? Fn(this).transition().duration(l).call(S, F, D, O) : Fn(this).call(x.transform, F, D, O);
    }
  }
  function R(O, ..._) {
    if (e.apply(this, arguments)) {
      var I = O.touches, D = I.length, z = T(this, _, O.changedTouches.length === D).event(O), B, F, L, W;
      for (ef(O), F = 0; F < D; ++F)
        L = I[F], W = ar(L, this), W = [W, this.__zoom.invert(W), L.identifier], z.touch0 ? !z.touch1 && z.touch0[2] !== W[2] && (z.touch1 = W, z.taps = 0) : (z.touch0 = W, B = !0, z.taps = 1 + !!d);
      d && (d = clearTimeout(d)), B && (z.taps < 2 && (f = W[0], d = setTimeout(function() {
        d = null;
      }, h)), ec(this), z.start());
    }
  }
  function $(O, ..._) {
    if (this.__zooming) {
      var I = T(this, _).event(O), D = O.changedTouches, z = D.length, B, F, L, W;
      for (Ns(O), B = 0; B < z; ++B)
        F = D[B], L = ar(F, this), I.touch0 && I.touch0[2] === F.identifier ? I.touch0[0] = L : I.touch1 && I.touch1[2] === F.identifier && (I.touch1[0] = L);
      if (F = I.that.__zoom, I.touch1) {
        var U = I.touch0[0], Z = I.touch0[1], Q = I.touch1[0], ee = I.touch1[1], te = (te = Q[0] - U[0]) * te + (te = Q[1] - U[1]) * te, q = (q = ee[0] - Z[0]) * q + (q = ee[1] - Z[1]) * q;
        F = E(F, Math.sqrt(te / q)), L = [(U[0] + Q[0]) / 2, (U[1] + Q[1]) / 2], W = [(Z[0] + ee[0]) / 2, (Z[1] + ee[1]) / 2];
      } else if (I.touch0) L = I.touch0[0], W = I.touch0[1];
      else return;
      I.zoom("touch", n(v(F, L, W), I.extent, s));
    }
  }
  function A(O, ..._) {
    if (this.__zooming) {
      var I = T(this, _).event(O), D = O.changedTouches, z = D.length, B, F;
      for (ef(O), p && clearTimeout(p), p = setTimeout(function() {
        p = null;
      }, h), B = 0; B < z; ++B)
        F = D[B], I.touch0 && I.touch0[2] === F.identifier ? delete I.touch0 : I.touch1 && I.touch1[2] === F.identifier && delete I.touch1;
      if (I.touch1 && !I.touch0 && (I.touch0 = I.touch1, delete I.touch1), I.touch0) I.touch0[1] = this.__zoom.invert(I.touch0[0]);
      else if (I.end(), I.taps === 2 && (F = ar(F, this), Math.hypot(f[0] - F[0], f[1] - F[1]) < b)) {
        var L = Fn(this).on("dblclick.zoom");
        L && L.apply(this, arguments);
      }
    }
  }
  return x.wheelDelta = function(O) {
    return arguments.length ? (r = typeof O == "function" ? O : Il(+O), x) : r;
  }, x.filter = function(O) {
    return arguments.length ? (e = typeof O == "function" ? O : Il(!!O), x) : e;
  }, x.touchable = function(O) {
    return arguments.length ? (o = typeof O == "function" ? O : Il(!!O), x) : o;
  }, x.extent = function(O) {
    return arguments.length ? (t = typeof O == "function" ? O : Il([[+O[0][0], +O[0][1]], [+O[1][0], +O[1][1]]]), x) : t;
  }, x.scaleExtent = function(O) {
    return arguments.length ? (i[0] = +O[0], i[1] = +O[1], x) : [i[0], i[1]];
  }, x.translateExtent = function(O) {
    return arguments.length ? (s[0][0] = +O[0][0], s[1][0] = +O[1][0], s[0][1] = +O[0][1], s[1][1] = +O[1][1], x) : [[s[0][0], s[0][1]], [s[1][0], s[1][1]]];
  }, x.constrain = function(O) {
    return arguments.length ? (n = O, x) : n;
  }, x.duration = function(O) {
    return arguments.length ? (l = +O, x) : l;
  }, x.interpolate = function(O) {
    return arguments.length ? (c = O, x) : c;
  }, x.on = function() {
    var O = u.on.apply(u, arguments);
    return O === u ? x : O;
  }, x.clickDistance = function(O) {
    return arguments.length ? (m = (O = +O) * O, x) : Math.sqrt(m);
  }, x.tapDistance = function(O) {
    return arguments.length ? (b = +O, x) : b;
  }, x;
}
const vn = {
  error001: () => "[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001",
  error002: () => "It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.",
  error003: (e) => `Node type "${e}" not found. Using fallback type "default".`,
  error004: () => "The React Flow parent container needs a width and a height to render the graph.",
  error005: () => "Only child nodes can use a parent extent.",
  error006: () => "Can't create edge. An edge needs a source and a target.",
  error007: (e) => `The old edge with id=${e} does not exist.`,
  error009: (e) => `Marker type "${e}" doesn't exist.`,
  error008: (e, { id: t, sourceHandle: n, targetHandle: r }) => `Couldn't create edge for ${e} handle id: "${e === "source" ? n : r}", edge id: ${t}.`,
  error010: () => "Handle: No node id found. Make sure to only use a Handle inside a custom Node.",
  error011: (e) => `Edge type "${e}" not found. Using fallback type "default".`,
  error012: (e) => `Node with id "${e}" does not exist, it may have been removed. This can happen when a node is deleted before the "onNodeClick" handler is called.`,
  error013: (e = "react") => `It seems that you haven't loaded the styles. Please import '@xyflow/${e}/dist/style.css' or base.css to make sure everything is working properly.`,
  error014: () => "useNodeConnections: No node ID found. Call useNodeConnections inside a custom Node or provide a node ID.",
  error015: () => "It seems that you are trying to drag a node that is not initialized. Please use onNodesChange as explained in the docs."
}, Sa = [
  [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],
  [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY]
], L1 = ["Enter", " ", "Escape"];
var Yi;
(function(e) {
  e.Strict = "strict", e.Loose = "loose";
})(Yi || (Yi = {}));
var Go;
(function(e) {
  e.Free = "free", e.Vertical = "vertical", e.Horizontal = "horizontal";
})(Go || (Go = {}));
var Ea;
(function(e) {
  e.Partial = "partial", e.Full = "full";
})(Ea || (Ea = {}));
const z1 = {
  inProgress: !1,
  isValid: null,
  from: null,
  fromHandle: null,
  fromPosition: null,
  fromNode: null,
  to: null,
  toHandle: null,
  toPosition: null,
  toNode: null
};
var Ln;
(function(e) {
  e.Bezier = "default", e.Straight = "straight", e.Step = "step", e.SmoothStep = "smoothstep", e.SimpleBezier = "simplebezier";
})(Ln || (Ln = {}));
var Gi;
(function(e) {
  e.Arrow = "arrow", e.ArrowClosed = "arrowclosed";
})(Gi || (Gi = {}));
var Ae;
(function(e) {
  e.Left = "left", e.Top = "top", e.Right = "right", e.Bottom = "bottom";
})(Ae || (Ae = {}));
const Vb = {
  [Ae.Left]: Ae.Right,
  [Ae.Right]: Ae.Left,
  [Ae.Top]: Ae.Bottom,
  [Ae.Bottom]: Ae.Top
};
function V1(e) {
  return e === null ? null : e ? "valid" : "invalid";
}
const j1 = (e) => "id" in e && "source" in e && "target" in e, v4 = (e) => "id" in e && "position" in e && !("source" in e) && !("target" in e), em = (e) => "id" in e && "internals" in e && !("source" in e) && !("target" in e), x4 = (e, t, n) => {
  if (!e.id)
    return [];
  const r = /* @__PURE__ */ new Set();
  return n.forEach((o) => {
    o.source === e.id && r.add(o.target);
  }), t.filter((o) => r.has(o.id));
}, Za = (e, t = [0, 0]) => {
  const { width: n, height: r } = so(e), o = e.origin ?? t, i = n * o[0], s = r * o[1];
  return {
    x: e.position.x - i,
    y: e.position.y - s
  };
}, w4 = (e, t = { nodeOrigin: [0, 0] }) => {
  if (process.env.NODE_ENV === "development" && !t.nodeLookup && console.warn("Please use `getNodesBounds` from `useReactFlow`/`useSvelteFlow` hook to ensure correct values for sub flows. If not possible, you have to provide a nodeLookup to support sub flows."), e.length === 0)
    return { x: 0, y: 0, width: 0, height: 0 };
  const n = e.reduce((r, o) => {
    const i = typeof o == "string";
    let s = !t.nodeLookup && !i ? o : void 0;
    t.nodeLookup && (s = i ? t.nodeLookup.get(o) : em(o) ? o : t.nodeLookup.get(o.id));
    const l = s ? Bc(s, t.nodeOrigin) : { x: 0, y: 0, x2: 0, y2: 0 };
    return Zu(r, l);
  }, { x: 1 / 0, y: 1 / 0, x2: -1 / 0, y2: -1 / 0 });
  return Qu(n);
}, Qa = (e, t = {}) => {
  if (e.size === 0)
    return { x: 0, y: 0, width: 0, height: 0 };
  let n = { x: 1 / 0, y: 1 / 0, x2: -1 / 0, y2: -1 / 0 };
  return e.forEach((r) => {
    if (t.filter === void 0 || t.filter(r)) {
      const o = Bc(r);
      n = Zu(n, o);
    }
  }), Qu(n);
}, H1 = (e, t, [n, r, o] = [0, 0, 1], i = !1, s = !1) => {
  const l = {
    ...Ja(t, [n, r, o]),
    width: t.width / o,
    height: t.height / o
  }, c = [];
  for (const u of e.values()) {
    const { measured: d, selectable: f = !0, hidden: p = !1 } = u;
    if (s && !f || p)
      continue;
    const h = d.width ?? u.width ?? u.initialWidth ?? null, g = d.height ?? u.height ?? u.initialHeight ?? null, m = Ta(l, Xi(u)), b = (h ?? 0) * (g ?? 0), x = i && m > 0;
    (!u.internals.handleBounds || x || m >= b || u.dragging) && c.push(u);
  }
  return c;
}, S4 = (e, t) => {
  const n = /* @__PURE__ */ new Set();
  return e.forEach((r) => {
    n.add(r.id);
  }), t.filter((r) => n.has(r.source) || n.has(r.target));
};
function E4(e, t) {
  const n = /* @__PURE__ */ new Map(), r = t != null && t.nodes ? new Set(t.nodes.map((o) => o.id)) : null;
  return e.forEach((o) => {
    o.measured.width && o.measured.height && ((t == null ? void 0 : t.includeHiddenNodes) || !o.hidden) && (!r || r.has(o.id)) && n.set(o.id, o);
  }), n;
}
async function T4({ nodes: e, width: t, height: n, panZoom: r, minZoom: o, maxZoom: i }, s) {
  if (e.size === 0)
    return Promise.resolve(!0);
  const l = E4(e, s), c = Qa(l), u = tm(c, t, n, (s == null ? void 0 : s.minZoom) ?? o, (s == null ? void 0 : s.maxZoom) ?? i, (s == null ? void 0 : s.padding) ?? 0.1);
  return await r.setViewport(u, { duration: s == null ? void 0 : s.duration }), Promise.resolve(!0);
}
function W1({ nodeId: e, nextPosition: t, nodeLookup: n, nodeOrigin: r = [0, 0], nodeExtent: o, onError: i }) {
  const s = n.get(e), l = s.parentId ? n.get(s.parentId) : void 0, { x: c, y: u } = l ? l.internals.positionAbsolute : { x: 0, y: 0 }, d = s.origin ?? r;
  let f = o;
  if (s.extent === "parent" && !s.expandParent)
    if (!l)
      i == null || i("005", vn.error005());
    else {
      const h = l.measured.width, g = l.measured.height;
      h && g && (f = [
        [c, u],
        [c + h, u + g]
      ]);
    }
  else l && Zi(s.extent) && (f = [
    [s.extent[0][0] + c, s.extent[0][1] + u],
    [s.extent[1][0] + c, s.extent[1][1] + u]
  ]);
  const p = Zi(f) ? ei(t, f, s.measured) : t;
  return (s.measured.width === void 0 || s.measured.height === void 0) && (i == null || i("015", vn.error015())), {
    position: {
      x: p.x - c + (s.measured.width ?? 0) * d[0],
      y: p.y - u + (s.measured.height ?? 0) * d[1]
    },
    positionAbsolute: p
  };
}
async function C4({ nodesToRemove: e = [], edgesToRemove: t = [], nodes: n, edges: r, onBeforeDelete: o }) {
  const i = new Set(e.map((p) => p.id)), s = [];
  for (const p of n) {
    if (p.deletable === !1)
      continue;
    const h = i.has(p.id), g = !h && p.parentId && s.find((m) => m.id === p.parentId);
    (h || g) && s.push(p);
  }
  const l = new Set(t.map((p) => p.id)), c = r.filter((p) => p.deletable !== !1), d = S4(s, c);
  for (const p of c)
    l.has(p.id) && !d.find((g) => g.id === p.id) && d.push(p);
  if (!o)
    return {
      edges: d,
      nodes: s
    };
  const f = await o({
    nodes: s,
    edges: d
  });
  return typeof f == "boolean" ? f ? { edges: d, nodes: s } : { edges: [], nodes: [] } : f;
}
const Ki = (e, t = 0, n = 1) => Math.min(Math.max(e, t), n), ei = (e = { x: 0, y: 0 }, t, n) => ({
  x: Ki(e.x, t[0][0], t[1][0] - ((n == null ? void 0 : n.width) ?? 0)),
  y: Ki(e.y, t[0][1], t[1][1] - ((n == null ? void 0 : n.height) ?? 0))
});
function U1(e, t, n) {
  const { width: r, height: o } = so(n), { x: i, y: s } = n.internals.positionAbsolute;
  return ei(e, [
    [i, s],
    [i + r, s + o]
  ], t);
}
const jb = (e, t, n) => e < t ? Ki(Math.abs(e - t), 1, t) / t : e > n ? -Ki(Math.abs(e - n), 1, t) / t : 0, q1 = (e, t, n = 15, r = 40) => {
  const o = jb(e.x, r, t.width - r) * n, i = jb(e.y, r, t.height - r) * n;
  return [o, i];
}, Zu = (e, t) => ({
  x: Math.min(e.x, t.x),
  y: Math.min(e.y, t.y),
  x2: Math.max(e.x2, t.x2),
  y2: Math.max(e.y2, t.y2)
}), mp = ({ x: e, y: t, width: n, height: r }) => ({
  x: e,
  y: t,
  x2: e + n,
  y2: t + r
}), Qu = ({ x: e, y: t, x2: n, y2: r }) => ({
  x: e,
  y: t,
  width: n - e,
  height: r - t
}), Xi = (e, t = [0, 0]) => {
  var o, i;
  const { x: n, y: r } = em(e) ? e.internals.positionAbsolute : Za(e, t);
  return {
    x: n,
    y: r,
    width: ((o = e.measured) == null ? void 0 : o.width) ?? e.width ?? e.initialWidth ?? 0,
    height: ((i = e.measured) == null ? void 0 : i.height) ?? e.height ?? e.initialHeight ?? 0
  };
}, Bc = (e, t = [0, 0]) => {
  var o, i;
  const { x: n, y: r } = em(e) ? e.internals.positionAbsolute : Za(e, t);
  return {
    x: n,
    y: r,
    x2: n + (((o = e.measured) == null ? void 0 : o.width) ?? e.width ?? e.initialWidth ?? 0),
    y2: r + (((i = e.measured) == null ? void 0 : i.height) ?? e.height ?? e.initialHeight ?? 0)
  };
}, Y1 = (e, t) => Qu(Zu(mp(e), mp(t))), Ta = (e, t) => {
  const n = Math.max(0, Math.min(e.x + e.width, t.x + t.width) - Math.max(e.x, t.x)), r = Math.max(0, Math.min(e.y + e.height, t.y + t.height) - Math.max(e.y, t.y));
  return Math.ceil(n * r);
}, Hb = (e) => ur(e.width) && ur(e.height) && ur(e.x) && ur(e.y), ur = (e) => !isNaN(e) && isFinite(e), Fc = (e, t) => {
  process.env.NODE_ENV === "development" && console.warn(`[React Flow]: ${t} Help: https://reactflow.dev/error#${e}`);
}, Ju = (e, t = [1, 1]) => ({
  x: t[0] * Math.round(e.x / t[0]),
  y: t[1] * Math.round(e.y / t[1])
}), Ja = ({ x: e, y: t }, [n, r, o], i = !1, s = [1, 1]) => {
  const l = {
    x: (e - n) / o,
    y: (t - r) / o
  };
  return i ? Ju(l, s) : l;
}, Lc = ({ x: e, y: t }, [n, r, o]) => ({
  x: e * o + n,
  y: t * o + r
});
function bi(e, t) {
  if (typeof e == "number")
    return Math.floor((t - t / (1 + e)) * 0.5);
  if (typeof e == "string" && e.endsWith("px")) {
    const n = parseFloat(e);
    if (!Number.isNaN(n))
      return Math.floor(n);
  }
  if (typeof e == "string" && e.endsWith("%")) {
    const n = parseFloat(e);
    if (!Number.isNaN(n))
      return Math.floor(t * n * 0.01);
  }
  return console.error(`[React Flow] The padding value "${e}" is invalid. Please provide a number or a string with a valid unit (px or %).`), 0;
}
function O4(e, t, n) {
  if (typeof e == "string" || typeof e == "number") {
    const r = bi(e, n), o = bi(e, t);
    return {
      top: r,
      right: o,
      bottom: r,
      left: o,
      x: o * 2,
      y: r * 2
    };
  }
  if (typeof e == "object") {
    const r = bi(e.top ?? e.y ?? 0, n), o = bi(e.bottom ?? e.y ?? 0, n), i = bi(e.left ?? e.x ?? 0, t), s = bi(e.right ?? e.x ?? 0, t);
    return { top: r, right: s, bottom: o, left: i, x: i + s, y: r + o };
  }
  return { top: 0, right: 0, bottom: 0, left: 0, x: 0, y: 0 };
}
function R4(e, t, n, r, o, i) {
  const { x: s, y: l } = Lc(e, [t, n, r]), { x: c, y: u } = Lc({ x: e.x + e.width, y: e.y + e.height }, [t, n, r]), d = o - c, f = i - u;
  return {
    left: Math.floor(s),
    top: Math.floor(l),
    right: Math.floor(d),
    bottom: Math.floor(f)
  };
}
const tm = (e, t, n, r, o, i) => {
  const s = O4(i, t, n), l = (t - s.x) / e.width, c = (n - s.y) / e.height, u = Math.min(l, c), d = Ki(u, r, o), f = e.x + e.width / 2, p = e.y + e.height / 2, h = t / 2 - f * d, g = n / 2 - p * d, m = R4(e, h, g, d, t, n), b = {
    left: Math.min(m.left - s.left, 0),
    top: Math.min(m.top - s.top, 0),
    right: Math.min(m.right - s.right, 0),
    bottom: Math.min(m.bottom - s.bottom, 0)
  };
  return {
    x: h - b.left + b.right,
    y: g - b.top + b.bottom,
    zoom: d
  };
}, zc = () => {
  var e;
  return typeof navigator < "u" && ((e = navigator == null ? void 0 : navigator.userAgent) == null ? void 0 : e.indexOf("Mac")) >= 0;
};
function Zi(e) {
  return e !== void 0 && e !== "parent";
}
function so(e) {
  var t, n;
  return {
    width: ((t = e.measured) == null ? void 0 : t.width) ?? e.width ?? e.initialWidth ?? 0,
    height: ((n = e.measured) == null ? void 0 : n.height) ?? e.height ?? e.initialHeight ?? 0
  };
}
function G1(e) {
  var t, n;
  return (((t = e.measured) == null ? void 0 : t.width) ?? e.width ?? e.initialWidth) !== void 0 && (((n = e.measured) == null ? void 0 : n.height) ?? e.height ?? e.initialHeight) !== void 0;
}
function K1(e, t = { width: 0, height: 0 }, n, r, o) {
  const i = { ...e }, s = r.get(n);
  if (s) {
    const l = s.origin || o;
    i.x += s.internals.positionAbsolute.x - (t.width ?? 0) * l[0], i.y += s.internals.positionAbsolute.y - (t.height ?? 0) * l[1];
  }
  return i;
}
function Wb(e, t) {
  if (e.size !== t.size)
    return !1;
  for (const n of e)
    if (!t.has(n))
      return !1;
  return !0;
}
function k4() {
  let e, t;
  return { promise: new Promise((r, o) => {
    e = r, t = o;
  }), resolve: e, reject: t };
}
function Zs(e, { snapGrid: t = [0, 0], snapToGrid: n = !1, transform: r, containerBounds: o }) {
  const { x: i, y: s } = Kr(e), l = Ja({ x: i - ((o == null ? void 0 : o.left) ?? 0), y: s - ((o == null ? void 0 : o.top) ?? 0) }, r), { x: c, y: u } = n ? Ju(l, t) : l;
  return {
    xSnapped: c,
    ySnapped: u,
    ...l
  };
}
const nm = (e) => ({
  width: e.offsetWidth,
  height: e.offsetHeight
}), X1 = (e) => {
  var t;
  return ((t = e == null ? void 0 : e.getRootNode) == null ? void 0 : t.call(e)) || (window == null ? void 0 : window.document);
}, N4 = ["INPUT", "SELECT", "TEXTAREA"];
function Z1(e) {
  var r, o;
  const t = ((o = (r = e.composedPath) == null ? void 0 : r.call(e)) == null ? void 0 : o[0]) || e.target;
  return (t == null ? void 0 : t.nodeType) !== 1 ? !1 : N4.includes(t.nodeName) || t.hasAttribute("contenteditable") || !!t.closest(".nokey");
}
const Q1 = (e) => "clientX" in e, Kr = (e, t) => {
  var i, s;
  const n = Q1(e), r = n ? e.clientX : (i = e.touches) == null ? void 0 : i[0].clientX, o = n ? e.clientY : (s = e.touches) == null ? void 0 : s[0].clientY;
  return {
    x: r - ((t == null ? void 0 : t.left) ?? 0),
    y: o - ((t == null ? void 0 : t.top) ?? 0)
  };
}, Ub = (e, t, n, r, o) => {
  const i = t.querySelectorAll(`.${e}`);
  return !i || !i.length ? null : Array.from(i).map((s) => {
    const l = s.getBoundingClientRect();
    return {
      id: s.getAttribute("data-handleid"),
      type: e,
      nodeId: o,
      position: s.getAttribute("data-handlepos"),
      x: (l.left - n.left) / r,
      y: (l.top - n.top) / r,
      ...nm(s)
    };
  });
};
function J1({ sourceX: e, sourceY: t, targetX: n, targetY: r, sourceControlX: o, sourceControlY: i, targetControlX: s, targetControlY: l }) {
  const c = e * 0.125 + o * 0.375 + s * 0.375 + n * 0.125, u = t * 0.125 + i * 0.375 + l * 0.375 + r * 0.125, d = Math.abs(c - e), f = Math.abs(u - t);
  return [c, u, d, f];
}
function $l(e, t) {
  return e >= 0 ? 0.5 * e : t * 25 * Math.sqrt(-e);
}
function qb({ pos: e, x1: t, y1: n, x2: r, y2: o, c: i }) {
  switch (e) {
    case Ae.Left:
      return [t - $l(t - r, i), n];
    case Ae.Right:
      return [t + $l(r - t, i), n];
    case Ae.Top:
      return [t, n - $l(n - o, i)];
    case Ae.Bottom:
      return [t, n + $l(o - n, i)];
  }
}
function rm({ sourceX: e, sourceY: t, sourcePosition: n = Ae.Bottom, targetX: r, targetY: o, targetPosition: i = Ae.Top, curvature: s = 0.25 }) {
  const [l, c] = qb({
    pos: n,
    x1: e,
    y1: t,
    x2: r,
    y2: o,
    c: s
  }), [u, d] = qb({
    pos: i,
    x1: r,
    y1: o,
    x2: e,
    y2: t,
    c: s
  }), [f, p, h, g] = J1({
    sourceX: e,
    sourceY: t,
    targetX: r,
    targetY: o,
    sourceControlX: l,
    sourceControlY: c,
    targetControlX: u,
    targetControlY: d
  });
  return [
    `M${e},${t} C${l},${c} ${u},${d} ${r},${o}`,
    f,
    p,
    h,
    g
  ];
}
function eE({ sourceX: e, sourceY: t, targetX: n, targetY: r }) {
  const o = Math.abs(n - e) / 2, i = n < e ? n + o : n - o, s = Math.abs(r - t) / 2, l = r < t ? r + s : r - s;
  return [i, l, o, s];
}
function I4({ sourceNode: e, targetNode: t, selected: n = !1, zIndex: r = 0, elevateOnSelect: o = !1 }) {
  if (!o)
    return r;
  const i = n || t.selected || e.selected, s = Math.max(e.internals.z || 0, t.internals.z || 0, 1e3);
  return r + (i ? s : 0);
}
function $4({ sourceNode: e, targetNode: t, width: n, height: r, transform: o }) {
  const i = Zu(Bc(e), Bc(t));
  i.x === i.x2 && (i.x2 += 1), i.y === i.y2 && (i.y2 += 1);
  const s = {
    x: -o[0] / o[2],
    y: -o[1] / o[2],
    width: n / o[2],
    height: r / o[2]
  };
  return Ta(s, Qu(i)) > 0;
}
const tE = ({ source: e, sourceHandle: t, target: n, targetHandle: r }) => `xy-edge__${e}${t || ""}-${n}${r || ""}`, P4 = (e, t) => t.some((n) => n.source === e.source && n.target === e.target && (n.sourceHandle === e.sourceHandle || !n.sourceHandle && !e.sourceHandle) && (n.targetHandle === e.targetHandle || !n.targetHandle && !e.targetHandle)), nE = (e, t) => {
  if (!e.source || !e.target)
    return Fc("006", vn.error006()), t;
  let n;
  return j1(e) ? n = { ...e } : n = {
    ...e,
    id: tE(e)
  }, P4(n, t) ? t : (n.sourceHandle === null && delete n.sourceHandle, n.targetHandle === null && delete n.targetHandle, t.concat(n));
}, _4 = (e, t, n, r = { shouldReplaceId: !0 }) => {
  const { id: o, ...i } = e;
  if (!t.source || !t.target)
    return Fc("006", vn.error006()), n;
  if (!n.find((c) => c.id === e.id))
    return Fc("007", vn.error007(o)), n;
  const l = {
    ...i,
    id: r.shouldReplaceId ? tE(t) : o,
    source: t.source,
    target: t.target,
    sourceHandle: t.sourceHandle,
    targetHandle: t.targetHandle
  };
  return n.filter((c) => c.id !== o).concat(l);
};
function rE({ sourceX: e, sourceY: t, targetX: n, targetY: r }) {
  const [o, i, s, l] = eE({
    sourceX: e,
    sourceY: t,
    targetX: n,
    targetY: r
  });
  return [`M ${e},${t}L ${n},${r}`, o, i, s, l];
}
const Yb = {
  [Ae.Left]: { x: -1, y: 0 },
  [Ae.Right]: { x: 1, y: 0 },
  [Ae.Top]: { x: 0, y: -1 },
  [Ae.Bottom]: { x: 0, y: 1 }
}, M4 = ({ source: e, sourcePosition: t = Ae.Bottom, target: n }) => t === Ae.Left || t === Ae.Right ? e.x < n.x ? { x: 1, y: 0 } : { x: -1, y: 0 } : e.y < n.y ? { x: 0, y: 1 } : { x: 0, y: -1 }, Gb = (e, t) => Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2));
function A4({ source: e, sourcePosition: t = Ae.Bottom, target: n, targetPosition: r = Ae.Top, center: o, offset: i }) {
  const s = Yb[t], l = Yb[r], c = { x: e.x + s.x * i, y: e.y + s.y * i }, u = { x: n.x + l.x * i, y: n.y + l.y * i }, d = M4({
    source: c,
    sourcePosition: t,
    target: u
  }), f = d.x !== 0 ? "x" : "y", p = d[f];
  let h = [], g, m;
  const b = { x: 0, y: 0 }, x = { x: 0, y: 0 }, [E, v, w, S] = eE({
    sourceX: e.x,
    sourceY: e.y,
    targetX: n.x,
    targetY: n.y
  });
  if (s[f] * l[f] === -1) {
    g = o.x ?? E, m = o.y ?? v;
    const C = [
      { x: g, y: c.y },
      { x: g, y: u.y }
    ], k = [
      { x: c.x, y: m },
      { x: u.x, y: m }
    ];
    s[f] === p ? h = f === "x" ? C : k : h = f === "x" ? k : C;
  } else {
    const C = [{ x: c.x, y: u.y }], k = [{ x: u.x, y: c.y }];
    if (f === "x" ? h = s.x === p ? k : C : h = s.y === p ? C : k, t === r) {
      const A = Math.abs(e[f] - n[f]);
      if (A <= i) {
        const O = Math.min(i - 1, i - A);
        s[f] === p ? b[f] = (c[f] > e[f] ? -1 : 1) * O : x[f] = (u[f] > n[f] ? -1 : 1) * O;
      }
    }
    if (t !== r) {
      const A = f === "x" ? "y" : "x", O = s[f] === l[A], _ = c[A] > u[A], I = c[A] < u[A];
      (s[f] === 1 && (!O && _ || O && I) || s[f] !== 1 && (!O && I || O && _)) && (h = f === "x" ? C : k);
    }
    const P = { x: c.x + b.x, y: c.y + b.y }, y = { x: u.x + x.x, y: u.y + x.y }, R = Math.max(Math.abs(P.x - h[0].x), Math.abs(y.x - h[0].x)), $ = Math.max(Math.abs(P.y - h[0].y), Math.abs(y.y - h[0].y));
    R >= $ ? (g = (P.x + y.x) / 2, m = h[0].y) : (g = h[0].x, m = (P.y + y.y) / 2);
  }
  return [[
    e,
    { x: c.x + b.x, y: c.y + b.y },
    ...h,
    { x: u.x + x.x, y: u.y + x.y },
    n
  ], g, m, w, S];
}
function D4(e, t, n, r) {
  const o = Math.min(Gb(e, t) / 2, Gb(t, n) / 2, r), { x: i, y: s } = t;
  if (e.x === i && i === n.x || e.y === s && s === n.y)
    return `L${i} ${s}`;
  if (e.y === s) {
    const u = e.x < n.x ? -1 : 1, d = e.y < n.y ? 1 : -1;
    return `L ${i + o * u},${s}Q ${i},${s} ${i},${s + o * d}`;
  }
  const l = e.x < n.x ? 1 : -1, c = e.y < n.y ? -1 : 1;
  return `L ${i},${s + o * c}Q ${i},${s} ${i + o * l},${s}`;
}
function gp({ sourceX: e, sourceY: t, sourcePosition: n = Ae.Bottom, targetX: r, targetY: o, targetPosition: i = Ae.Top, borderRadius: s = 5, centerX: l, centerY: c, offset: u = 20 }) {
  const [d, f, p, h, g] = A4({
    source: { x: e, y: t },
    sourcePosition: n,
    target: { x: r, y: o },
    targetPosition: i,
    center: { x: l, y: c },
    offset: u
  });
  return [d.reduce((b, x, E) => {
    let v = "";
    return E > 0 && E < d.length - 1 ? v = D4(d[E - 1], x, d[E + 1], s) : v = `${E === 0 ? "M" : "L"}${x.x} ${x.y}`, b += v, b;
  }, ""), f, p, h, g];
}
function Kb(e) {
  var t;
  return e && !!(e.internals.handleBounds || (t = e.handles) != null && t.length) && !!(e.measured.width || e.width || e.initialWidth);
}
function B4(e) {
  var f;
  const { sourceNode: t, targetNode: n } = e;
  if (!Kb(t) || !Kb(n))
    return null;
  const r = t.internals.handleBounds || Xb(t.handles), o = n.internals.handleBounds || Xb(n.handles), i = Zb((r == null ? void 0 : r.source) ?? [], e.sourceHandle), s = Zb(
    // when connection type is loose we can define all handles as sources and connect source -> source
    e.connectionMode === Yi.Strict ? (o == null ? void 0 : o.target) ?? [] : ((o == null ? void 0 : o.target) ?? []).concat((o == null ? void 0 : o.source) ?? []),
    e.targetHandle
  );
  if (!i || !s)
    return (f = e.onError) == null || f.call(e, "008", vn.error008(i ? "target" : "source", {
      id: e.id,
      sourceHandle: e.sourceHandle,
      targetHandle: e.targetHandle
    })), null;
  const l = (i == null ? void 0 : i.position) || Ae.Bottom, c = (s == null ? void 0 : s.position) || Ae.Top, u = Ca(t, i, l), d = Ca(n, s, c);
  return {
    sourceX: u.x,
    sourceY: u.y,
    targetX: d.x,
    targetY: d.y,
    sourcePosition: l,
    targetPosition: c
  };
}
function Xb(e) {
  if (!e)
    return null;
  const t = [], n = [];
  for (const r of e)
    r.width = r.width ?? 1, r.height = r.height ?? 1, r.type === "source" ? t.push(r) : r.type === "target" && n.push(r);
  return {
    source: t,
    target: n
  };
}
function Ca(e, t, n = Ae.Left, r = !1) {
  const o = ((t == null ? void 0 : t.x) ?? 0) + e.internals.positionAbsolute.x, i = ((t == null ? void 0 : t.y) ?? 0) + e.internals.positionAbsolute.y, { width: s, height: l } = t ?? so(e);
  if (r)
    return { x: o + s / 2, y: i + l / 2 };
  switch ((t == null ? void 0 : t.position) ?? n) {
    case Ae.Top:
      return { x: o + s / 2, y: i };
    case Ae.Right:
      return { x: o + s, y: i + l / 2 };
    case Ae.Bottom:
      return { x: o + s / 2, y: i + l };
    case Ae.Left:
      return { x: o, y: i + l / 2 };
  }
}
function Zb(e, t) {
  return e && (t ? e.find((n) => n.id === t) : e[0]) || null;
}
function yp(e, t) {
  return e ? typeof e == "string" ? e : `${t ? `${t}__` : ""}${Object.keys(e).sort().map((r) => `${r}=${e[r]}`).join("&")}` : "";
}
function F4(e, { id: t, defaultColor: n, defaultMarkerStart: r, defaultMarkerEnd: o }) {
  const i = /* @__PURE__ */ new Set();
  return e.reduce((s, l) => ([l.markerStart || r, l.markerEnd || o].forEach((c) => {
    if (c && typeof c == "object") {
      const u = yp(c, t);
      i.has(u) || (s.push({ id: u, color: c.color || n, ...c }), i.add(u));
    }
  }), s), []).sort((s, l) => s.id.localeCompare(l.id));
}
const om = {
  nodeOrigin: [0, 0],
  nodeExtent: Sa,
  elevateNodesOnSelect: !0,
  defaults: {}
}, L4 = {
  ...om,
  checkEquality: !0
};
function im(e, t) {
  const n = { ...e };
  for (const r in t)
    t[r] !== void 0 && (n[r] = t[r]);
  return n;
}
function z4(e, t, n) {
  const r = im(om, n);
  for (const o of e.values())
    if (o.parentId)
      sm(o, e, t, r);
    else {
      const i = Za(o, r.nodeOrigin), s = Zi(o.extent) ? o.extent : r.nodeExtent, l = ei(i, s, so(o));
      o.internals.positionAbsolute = l;
    }
}
function bp(e, t, n, r) {
  var c, u;
  const o = im(L4, r);
  let i = e.length > 0;
  const s = new Map(t), l = o != null && o.elevateNodesOnSelect ? 1e3 : 0;
  t.clear(), n.clear();
  for (const d of e) {
    let f = s.get(d.id);
    if (o.checkEquality && d === (f == null ? void 0 : f.internals.userNode))
      t.set(d.id, f);
    else {
      const p = Za(d, o.nodeOrigin), h = Zi(d.extent) ? d.extent : o.nodeExtent, g = ei(p, h, so(d));
      f = {
        ...o.defaults,
        ...d,
        measured: {
          width: (c = d.measured) == null ? void 0 : c.width,
          height: (u = d.measured) == null ? void 0 : u.height
        },
        internals: {
          positionAbsolute: g,
          // if user re-initializes the node or removes `measured` for whatever reason, we reset the handleBounds so that the node gets re-measured
          handleBounds: d.measured ? f == null ? void 0 : f.internals.handleBounds : void 0,
          z: oE(d, l),
          userNode: d
        }
      }, t.set(d.id, f);
    }
    (f.measured === void 0 || f.measured.width === void 0 || f.measured.height === void 0) && !f.hidden && (i = !1), d.parentId && sm(f, t, n, r);
  }
  return i;
}
function V4(e, t) {
  if (!e.parentId)
    return;
  const n = t.get(e.parentId);
  n ? n.set(e.id, e) : t.set(e.parentId, /* @__PURE__ */ new Map([[e.id, e]]));
}
function sm(e, t, n, r) {
  const { elevateNodesOnSelect: o, nodeOrigin: i, nodeExtent: s } = im(om, r), l = e.parentId, c = t.get(l);
  if (!c) {
    console.warn(`Parent node ${l} not found. Please make sure that parent nodes are in front of their child nodes in the nodes array.`);
    return;
  }
  V4(e, n);
  const u = o ? 1e3 : 0, { x: d, y: f, z: p } = j4(e, c, i, s, u), { positionAbsolute: h } = e.internals, g = d !== h.x || f !== h.y;
  (g || p !== e.internals.z) && t.set(e.id, {
    ...e,
    internals: {
      ...e.internals,
      positionAbsolute: g ? { x: d, y: f } : h,
      z: p
    }
  });
}
function oE(e, t) {
  return (ur(e.zIndex) ? e.zIndex : 0) + (e.selected ? t : 0);
}
function j4(e, t, n, r, o) {
  const { x: i, y: s } = t.internals.positionAbsolute, l = so(e), c = Za(e, n), u = Zi(e.extent) ? ei(c, e.extent, l) : c;
  let d = ei({ x: i + u.x, y: s + u.y }, r, l);
  e.extent === "parent" && (d = U1(d, l, t));
  const f = oE(e, o), p = t.internals.z ?? 0;
  return {
    x: d.x,
    y: d.y,
    z: p > f ? p : f
  };
}
function am(e, t, n, r = [0, 0]) {
  var s;
  const o = [], i = /* @__PURE__ */ new Map();
  for (const l of e) {
    const c = t.get(l.parentId);
    if (!c)
      continue;
    const u = ((s = i.get(l.parentId)) == null ? void 0 : s.expandedRect) ?? Xi(c), d = Y1(u, l.rect);
    i.set(l.parentId, { expandedRect: d, parent: c });
  }
  return i.size > 0 && i.forEach(({ expandedRect: l, parent: c }, u) => {
    var v;
    const d = c.internals.positionAbsolute, f = so(c), p = c.origin ?? r, h = l.x < d.x ? Math.round(Math.abs(d.x - l.x)) : 0, g = l.y < d.y ? Math.round(Math.abs(d.y - l.y)) : 0, m = Math.max(f.width, Math.round(l.width)), b = Math.max(f.height, Math.round(l.height)), x = (m - f.width) * p[0], E = (b - f.height) * p[1];
    (h > 0 || g > 0 || x || E) && (o.push({
      id: u,
      type: "position",
      position: {
        x: c.position.x - h + x,
        y: c.position.y - g + E
      }
    }), (v = n.get(u)) == null || v.forEach((w) => {
      e.some((S) => S.id === w.id) || o.push({
        id: w.id,
        type: "position",
        position: {
          x: w.position.x + h,
          y: w.position.y + g
        }
      });
    })), (f.width < l.width || f.height < l.height || h || g) && o.push({
      id: u,
      type: "dimensions",
      setAttributes: !0,
      dimensions: {
        width: m + (h ? p[0] * h - x : 0),
        height: b + (g ? p[1] * g - E : 0)
      }
    });
  }), o;
}
function H4(e, t, n, r, o, i) {
  const s = r == null ? void 0 : r.querySelector(".xyflow__viewport");
  let l = !1;
  if (!s)
    return { changes: [], updatedInternals: l };
  const c = [], u = window.getComputedStyle(s), { m22: d } = new window.DOMMatrixReadOnly(u.transform), f = [];
  for (const p of e.values()) {
    const h = t.get(p.id);
    if (!h)
      continue;
    if (h.hidden) {
      t.set(h.id, {
        ...h,
        internals: {
          ...h.internals,
          handleBounds: void 0
        }
      }), l = !0;
      continue;
    }
    const g = nm(p.nodeElement), m = h.measured.width !== g.width || h.measured.height !== g.height;
    if (!!(g.width && g.height && (m || !h.internals.handleBounds || p.force))) {
      const x = p.nodeElement.getBoundingClientRect(), E = Zi(h.extent) ? h.extent : i;
      let { positionAbsolute: v } = h.internals;
      h.parentId && h.extent === "parent" ? v = U1(v, g, t.get(h.parentId)) : E && (v = ei(v, E, g));
      const w = {
        ...h,
        measured: g,
        internals: {
          ...h.internals,
          positionAbsolute: v,
          handleBounds: {
            source: Ub("source", p.nodeElement, x, d, h.id),
            target: Ub("target", p.nodeElement, x, d, h.id)
          }
        }
      };
      t.set(h.id, w), h.parentId && sm(w, t, n, { nodeOrigin: o }), l = !0, m && (c.push({
        id: h.id,
        type: "dimensions",
        dimensions: g
      }), h.expandParent && h.parentId && f.push({
        id: h.id,
        parentId: h.parentId,
        rect: Xi(w, o)
      }));
    }
  }
  if (f.length > 0) {
    const p = am(f, t, n, o);
    c.push(...p);
  }
  return { changes: c, updatedInternals: l };
}
async function W4({ delta: e, panZoom: t, transform: n, translateExtent: r, width: o, height: i }) {
  if (!t || !e.x && !e.y)
    return Promise.resolve(!1);
  const s = await t.setViewportConstrained({
    x: n[0] + e.x,
    y: n[1] + e.y,
    zoom: n[2]
  }, [
    [0, 0],
    [o, i]
  ], r), l = !!s && (s.x !== n[0] || s.y !== n[1] || s.k !== n[2]);
  return Promise.resolve(l);
}
function Qb(e, t, n, r, o, i) {
  let s = o;
  const l = r.get(s) || /* @__PURE__ */ new Map();
  r.set(s, l.set(n, t)), s = `${o}-${e}`;
  const c = r.get(s) || /* @__PURE__ */ new Map();
  if (r.set(s, c.set(n, t)), i) {
    s = `${o}-${e}-${i}`;
    const u = r.get(s) || /* @__PURE__ */ new Map();
    r.set(s, u.set(n, t));
  }
}
function iE(e, t, n) {
  e.clear(), t.clear();
  for (const r of n) {
    const { source: o, target: i, sourceHandle: s = null, targetHandle: l = null } = r, c = { edgeId: r.id, source: o, target: i, sourceHandle: s, targetHandle: l }, u = `${o}-${s}--${i}-${l}`, d = `${i}-${l}--${o}-${s}`;
    Qb("source", c, d, e, o, s), Qb("target", c, u, e, i, l), t.set(r.id, r);
  }
}
function sE(e, t) {
  if (!e.parentId)
    return !1;
  const n = t.get(e.parentId);
  return n ? n.selected ? !0 : sE(n, t) : !1;
}
function Jb(e, t, n) {
  var o;
  let r = e;
  do {
    if ((o = r == null ? void 0 : r.matches) != null && o.call(r, t))
      return !0;
    if (r === n)
      return !1;
    r = r == null ? void 0 : r.parentElement;
  } while (r);
  return !1;
}
function U4(e, t, n, r) {
  const o = /* @__PURE__ */ new Map();
  for (const [i, s] of e)
    if ((s.selected || s.id === r) && (!s.parentId || !sE(s, e)) && (s.draggable || t && typeof s.draggable > "u")) {
      const l = e.get(i);
      l && o.set(i, {
        id: i,
        position: l.position || { x: 0, y: 0 },
        distance: {
          x: n.x - l.internals.positionAbsolute.x,
          y: n.y - l.internals.positionAbsolute.y
        },
        extent: l.extent,
        parentId: l.parentId,
        origin: l.origin,
        expandParent: l.expandParent,
        internals: {
          positionAbsolute: l.internals.positionAbsolute || { x: 0, y: 0 }
        },
        measured: {
          width: l.measured.width ?? 0,
          height: l.measured.height ?? 0
        }
      });
    }
  return o;
}
function tf({ nodeId: e, dragItems: t, nodeLookup: n, dragging: r = !0 }) {
  var s, l, c;
  const o = [];
  for (const [u, d] of t) {
    const f = (s = n.get(u)) == null ? void 0 : s.internals.userNode;
    f && o.push({
      ...f,
      position: d.position,
      dragging: r
    });
  }
  if (!e)
    return [o[0], o];
  const i = (l = n.get(e)) == null ? void 0 : l.internals.userNode;
  return [
    i ? {
      ...i,
      position: ((c = t.get(e)) == null ? void 0 : c.position) || i.position,
      dragging: r
    } : o[0],
    o
  ];
}
function q4({ onNodeMouseDown: e, getStoreItems: t, onDragStart: n, onDrag: r, onDragStop: o }) {
  let i = { x: null, y: null }, s = 0, l = /* @__PURE__ */ new Map(), c = !1, u = { x: 0, y: 0 }, d = null, f = !1, p = null, h = !1;
  function g({ noDragClassName: b, handleSelector: x, domNode: E, isSelectable: v, nodeId: w, nodeClickDistance: S = 0 }) {
    p = Fn(E);
    function T({ x: y, y: R }, $) {
      const { nodeLookup: A, nodeExtent: O, snapGrid: _, snapToGrid: I, nodeOrigin: D, onNodeDrag: z, onSelectionDrag: B, onError: F, updateNodePositions: L } = t();
      i = { x: y, y: R };
      let W = !1, U = { x: 0, y: 0, x2: 0, y2: 0 };
      if (l.size > 1 && O) {
        const Z = Qa(l);
        U = mp(Z);
      }
      for (const [Z, Q] of l) {
        if (!A.has(Z))
          continue;
        let ee = { x: y - Q.distance.x, y: R - Q.distance.y };
        I && (ee = Ju(ee, _));
        let te = [
          [O[0][0], O[0][1]],
          [O[1][0], O[1][1]]
        ];
        if (l.size > 1 && O && !Q.extent) {
          const { positionAbsolute: K } = Q.internals, ne = K.x - U.x + O[0][0], j = K.x + Q.measured.width - U.x2 + O[1][0], pe = K.y - U.y + O[0][1], ce = K.y + Q.measured.height - U.y2 + O[1][1];
          te = [
            [ne, pe],
            [j, ce]
          ];
        }
        const { position: q, positionAbsolute: oe } = W1({
          nodeId: Z,
          nextPosition: ee,
          nodeLookup: A,
          nodeExtent: te,
          nodeOrigin: D,
          onError: F
        });
        W = W || Q.position.x !== q.x || Q.position.y !== q.y, Q.position = q, Q.internals.positionAbsolute = oe;
      }
      if (W && (L(l, !0), $ && (r || z || !w && B))) {
        const [Z, Q] = tf({
          nodeId: w,
          dragItems: l,
          nodeLookup: A
        });
        r == null || r($, l, Z, Q), z == null || z($, Z, Q), w || B == null || B($, Q);
      }
    }
    async function C() {
      if (!d)
        return;
      const { transform: y, panBy: R, autoPanSpeed: $, autoPanOnNodeDrag: A } = t();
      if (!A) {
        c = !1, cancelAnimationFrame(s);
        return;
      }
      const [O, _] = q1(u, d, $);
      (O !== 0 || _ !== 0) && (i.x = (i.x ?? 0) - O / y[2], i.y = (i.y ?? 0) - _ / y[2], await R({ x: O, y: _ }) && T(i, null)), s = requestAnimationFrame(C);
    }
    function k(y) {
      var W;
      const { nodeLookup: R, multiSelectionActive: $, nodesDraggable: A, transform: O, snapGrid: _, snapToGrid: I, selectNodesOnDrag: D, onNodeDragStart: z, onSelectionDragStart: B, unselectNodesAndEdges: F } = t();
      f = !0, (!D || !v) && !$ && w && ((W = R.get(w)) != null && W.selected || F()), v && D && w && (e == null || e(w));
      const L = Zs(y.sourceEvent, { transform: O, snapGrid: _, snapToGrid: I, containerBounds: d });
      if (i = L, l = U4(R, A, L, w), l.size > 0 && (n || z || !w && B)) {
        const [U, Z] = tf({
          nodeId: w,
          dragItems: l,
          nodeLookup: R
        });
        n == null || n(y.sourceEvent, l, U, Z), z == null || z(y.sourceEvent, U, Z), w || B == null || B(y.sourceEvent, Z);
      }
    }
    const P = E1().clickDistance(S).on("start", (y) => {
      const { domNode: R, nodeDragThreshold: $, transform: A, snapGrid: O, snapToGrid: _ } = t();
      d = (R == null ? void 0 : R.getBoundingClientRect()) || null, h = !1, $ === 0 && k(y), i = Zs(y.sourceEvent, { transform: A, snapGrid: O, snapToGrid: _, containerBounds: d }), u = Kr(y.sourceEvent, d);
    }).on("drag", (y) => {
      const { autoPanOnNodeDrag: R, transform: $, snapGrid: A, snapToGrid: O, nodeDragThreshold: _, nodeLookup: I } = t(), D = Zs(y.sourceEvent, { transform: $, snapGrid: A, snapToGrid: O, containerBounds: d });
      if ((y.sourceEvent.type === "touchmove" && y.sourceEvent.touches.length > 1 || // if user deletes a node while dragging, we need to abort the drag to prevent errors
      w && !I.has(w)) && (h = !0), !h) {
        if (!c && R && f && (c = !0, C()), !f) {
          const z = D.xSnapped - (i.x ?? 0), B = D.ySnapped - (i.y ?? 0);
          Math.sqrt(z * z + B * B) > _ && k(y);
        }
        (i.x !== D.xSnapped || i.y !== D.ySnapped) && l && f && (u = Kr(y.sourceEvent, d), T(D, y.sourceEvent));
      }
    }).on("end", (y) => {
      if (!(!f || h) && (c = !1, f = !1, cancelAnimationFrame(s), l.size > 0)) {
        const { nodeLookup: R, updateNodePositions: $, onNodeDragStop: A, onSelectionDragStop: O } = t();
        if ($(l, !1), o || A || !w && O) {
          const [_, I] = tf({
            nodeId: w,
            dragItems: l,
            nodeLookup: R,
            dragging: !1
          });
          o == null || o(y.sourceEvent, l, _, I), A == null || A(y.sourceEvent, _, I), w || O == null || O(y.sourceEvent, I);
        }
      }
    }).filter((y) => {
      const R = y.target;
      return !y.button && (!b || !Jb(R, `.${b}`, E)) && (!x || Jb(R, x, E));
    });
    p.call(P);
  }
  function m() {
    p == null || p.on(".drag", null);
  }
  return {
    update: g,
    destroy: m
  };
}
function Y4(e, t, n) {
  const r = [], o = {
    x: e.x - n,
    y: e.y - n,
    width: n * 2,
    height: n * 2
  };
  for (const i of t.values())
    Ta(o, Xi(i)) > 0 && r.push(i);
  return r;
}
const G4 = 250;
function K4(e, t, n, r) {
  var l, c;
  let o = [], i = 1 / 0;
  const s = Y4(e, n, t + G4);
  for (const u of s) {
    const d = [...((l = u.internals.handleBounds) == null ? void 0 : l.source) ?? [], ...((c = u.internals.handleBounds) == null ? void 0 : c.target) ?? []];
    for (const f of d) {
      if (r.nodeId === f.nodeId && r.type === f.type && r.id === f.id)
        continue;
      const { x: p, y: h } = Ca(u, f, f.position, !0), g = Math.sqrt(Math.pow(p - e.x, 2) + Math.pow(h - e.y, 2));
      g > t || (g < i ? (o = [{ ...f, x: p, y: h }], i = g) : g === i && o.push({ ...f, x: p, y: h }));
    }
  }
  if (!o.length)
    return null;
  if (o.length > 1) {
    const u = r.type === "source" ? "target" : "source";
    return o.find((d) => d.type === u) ?? o[0];
  }
  return o[0];
}
function aE(e, t, n, r, o, i = !1) {
  var u, d, f;
  const s = r.get(e);
  if (!s)
    return null;
  const l = o === "strict" ? (u = s.internals.handleBounds) == null ? void 0 : u[t] : [...((d = s.internals.handleBounds) == null ? void 0 : d.source) ?? [], ...((f = s.internals.handleBounds) == null ? void 0 : f.target) ?? []], c = (n ? l == null ? void 0 : l.find((p) => p.id === n) : l == null ? void 0 : l[0]) ?? null;
  return c && i ? { ...c, ...Ca(s, c, c.position, !0) } : c;
}
function lE(e, t) {
  return e || (t != null && t.classList.contains("target") ? "target" : t != null && t.classList.contains("source") ? "source" : null);
}
function X4(e, t) {
  let n = null;
  return t ? n = !0 : e && !t && (n = !1), n;
}
const cE = () => !0;
function Z4(e, { connectionMode: t, connectionRadius: n, handleId: r, nodeId: o, edgeUpdaterType: i, isTarget: s, domNode: l, nodeLookup: c, lib: u, autoPanOnConnect: d, flowId: f, panBy: p, cancelConnection: h, onConnectStart: g, onConnect: m, onConnectEnd: b, isValidConnection: x = cE, onReconnectEnd: E, updateConnection: v, getTransform: w, getFromHandle: S, autoPanSpeed: T }) {
  const C = X1(e.target);
  let k = 0, P;
  const { x: y, y: R } = Kr(e), $ = C == null ? void 0 : C.elementFromPoint(y, R), A = lE(i, $), O = l == null ? void 0 : l.getBoundingClientRect();
  if (!O || !A)
    return;
  const _ = aE(o, A, r, c, t);
  if (!_)
    return;
  let I = Kr(e, O), D = !1, z = null, B = !1, F = null;
  function L() {
    if (!d || !O)
      return;
    const [oe, K] = q1(I, O, T);
    p({ x: oe, y: K }), k = requestAnimationFrame(L);
  }
  const W = {
    ..._,
    nodeId: o,
    type: A,
    position: _.position
  }, U = c.get(o), Q = {
    inProgress: !0,
    isValid: null,
    from: Ca(U, W, Ae.Left, !0),
    fromHandle: W,
    fromPosition: W.position,
    fromNode: U,
    to: I,
    toHandle: null,
    toPosition: Vb[W.position],
    toNode: null
  };
  v(Q);
  let ee = Q;
  g == null || g(e, { nodeId: o, handleId: r, handleType: A });
  function te(oe) {
    if (!S() || !W) {
      q(oe);
      return;
    }
    const K = w();
    I = Kr(oe, O), P = K4(Ja(I, K, !1, [1, 1]), n, c, W), D || (L(), D = !0);
    const ne = uE(oe, {
      handle: P,
      connectionMode: t,
      fromNodeId: o,
      fromHandleId: r,
      fromType: s ? "target" : "source",
      isValidConnection: x,
      doc: C,
      lib: u,
      flowId: f,
      nodeLookup: c
    });
    F = ne.handleDomNode, z = ne.connection, B = X4(!!P, ne.isValid);
    const j = {
      // from stays the same
      ...ee,
      isValid: B,
      to: ne.toHandle && B ? Lc({ x: ne.toHandle.x, y: ne.toHandle.y }, K) : I,
      toHandle: ne.toHandle,
      toPosition: B && ne.toHandle ? ne.toHandle.position : Vb[W.position],
      toNode: ne.toHandle ? c.get(ne.toHandle.nodeId) : null
    };
    B && P && ee.toHandle && j.toHandle && ee.toHandle.type === j.toHandle.type && ee.toHandle.nodeId === j.toHandle.nodeId && ee.toHandle.id === j.toHandle.id && ee.to.x === j.to.x && ee.to.y === j.to.y || (v(j), ee = j);
  }
  function q(oe) {
    (P || F) && z && B && (m == null || m(z));
    const { inProgress: K, ...ne } = ee, j = {
      ...ne,
      toPosition: ee.toHandle ? ee.toPosition : null
    };
    b == null || b(oe, j), i && (E == null || E(oe, j)), h(), cancelAnimationFrame(k), D = !1, B = !1, z = null, F = null, C.removeEventListener("mousemove", te), C.removeEventListener("mouseup", q), C.removeEventListener("touchmove", te), C.removeEventListener("touchend", q);
  }
  C.addEventListener("mousemove", te), C.addEventListener("mouseup", q), C.addEventListener("touchmove", te), C.addEventListener("touchend", q);
}
function uE(e, { handle: t, connectionMode: n, fromNodeId: r, fromHandleId: o, fromType: i, doc: s, lib: l, flowId: c, isValidConnection: u = cE, nodeLookup: d }) {
  const f = i === "target", p = t ? s.querySelector(`.${l}-flow__handle[data-id="${c}-${t == null ? void 0 : t.nodeId}-${t == null ? void 0 : t.id}-${t == null ? void 0 : t.type}"]`) : null, { x: h, y: g } = Kr(e), m = s.elementFromPoint(h, g), b = m != null && m.classList.contains(`${l}-flow__handle`) ? m : p, x = {
    handleDomNode: b,
    isValid: !1,
    connection: null,
    toHandle: null
  };
  if (b) {
    const E = lE(void 0, b), v = b.getAttribute("data-nodeid"), w = b.getAttribute("data-handleid"), S = b.classList.contains("connectable"), T = b.classList.contains("connectableend");
    if (!v || !E)
      return x;
    const C = {
      source: f ? v : r,
      sourceHandle: f ? w : o,
      target: f ? r : v,
      targetHandle: f ? o : w
    };
    x.connection = C;
    const P = S && T && (n === Yi.Strict ? f && E === "source" || !f && E === "target" : v !== r || w !== o);
    x.isValid = P && u(C), x.toHandle = aE(v, E, w, d, n, !0);
  }
  return x;
}
const vp = {
  onPointerDown: Z4,
  isValid: uE
};
function Q4({ domNode: e, panZoom: t, getTransform: n, getViewScale: r }) {
  const o = Fn(e);
  function i({ translateExtent: l, width: c, height: u, zoomStep: d = 10, pannable: f = !0, zoomable: p = !0, inversePan: h = !1 }) {
    const g = (v) => {
      const w = n();
      if (v.sourceEvent.type !== "wheel" || !t)
        return;
      const S = -v.sourceEvent.deltaY * (v.sourceEvent.deltaMode === 1 ? 0.05 : v.sourceEvent.deltaMode ? 1 : 2e-3) * d, T = w[2] * Math.pow(2, S);
      t.scaleTo(T);
    };
    let m = [0, 0];
    const b = (v) => {
      (v.sourceEvent.type === "mousedown" || v.sourceEvent.type === "touchstart") && (m = [
        v.sourceEvent.clientX ?? v.sourceEvent.touches[0].clientX,
        v.sourceEvent.clientY ?? v.sourceEvent.touches[0].clientY
      ]);
    }, x = (v) => {
      const w = n();
      if (v.sourceEvent.type !== "mousemove" && v.sourceEvent.type !== "touchmove" || !t)
        return;
      const S = [
        v.sourceEvent.clientX ?? v.sourceEvent.touches[0].clientX,
        v.sourceEvent.clientY ?? v.sourceEvent.touches[0].clientY
      ], T = [S[0] - m[0], S[1] - m[1]];
      m = S;
      const C = r() * Math.max(w[2], Math.log(w[2])) * (h ? -1 : 1), k = {
        x: w[0] - T[0] * C,
        y: w[1] - T[1] * C
      }, P = [
        [0, 0],
        [c, u]
      ];
      t.setViewportConstrained({
        x: k.x,
        y: k.y,
        zoom: w[2]
      }, P, l);
    }, E = F1().on("start", b).on("zoom", f ? x : null).on("zoom.wheel", p ? g : null);
    o.call(E, {});
  }
  function s() {
    o.on("zoom", null);
  }
  return {
    update: i,
    destroy: s,
    pointer: ar
  };
}
const J4 = (e, t) => e.x !== t.x || e.y !== t.y || e.zoom !== t.k, ed = (e) => ({
  x: e.x,
  y: e.y,
  zoom: e.k
}), nf = ({ x: e, y: t, zoom: n }) => Xu.translate(e, t).scale(n), Ti = (e, t) => e.target.closest(`.${t}`), dE = (e, t) => t === 2 && Array.isArray(e) && e.includes(2), rf = (e, t = 0, n = () => {
}) => {
  const r = typeof t == "number" && t > 0;
  return r || n(), r ? e.transition().duration(t).on("end", n) : e;
}, fE = (e) => {
  const t = e.ctrlKey && zc() ? 10 : 1;
  return -e.deltaY * (e.deltaMode === 1 ? 0.05 : e.deltaMode ? 1 : 2e-3) * t;
};
function e3({ zoomPanValues: e, noWheelClassName: t, d3Selection: n, d3Zoom: r, panOnScrollMode: o, panOnScrollSpeed: i, zoomOnPinch: s, onPanZoomStart: l, onPanZoom: c, onPanZoomEnd: u }) {
  return (d) => {
    if (Ti(d, t))
      return !1;
    d.preventDefault(), d.stopImmediatePropagation();
    const f = n.property("__zoom").k || 1;
    if (d.ctrlKey && s) {
      const b = ar(d), x = fE(d), E = f * Math.pow(2, x);
      r.scaleTo(n, E, b, d);
      return;
    }
    const p = d.deltaMode === 1 ? 20 : 1;
    let h = o === Go.Vertical ? 0 : d.deltaX * p, g = o === Go.Horizontal ? 0 : d.deltaY * p;
    !zc() && d.shiftKey && o !== Go.Vertical && (h = d.deltaY * p, g = 0), r.translateBy(
      n,
      -(h / f) * i,
      -(g / f) * i,
      // @ts-ignore
      { internal: !0 }
    );
    const m = ed(n.property("__zoom"));
    clearTimeout(e.panScrollTimeout), e.isPanScrolling || (e.isPanScrolling = !0, l == null || l(d, m)), e.isPanScrolling && (c == null || c(d, m), e.panScrollTimeout = setTimeout(() => {
      u == null || u(d, m), e.isPanScrolling = !1;
    }, 150));
  };
}
function t3({ noWheelClassName: e, preventScrolling: t, d3ZoomHandler: n }) {
  return function(r, o) {
    const i = r.type === "wheel", s = !t && i && !r.ctrlKey, l = Ti(r, e);
    if (r.ctrlKey && i && l && r.preventDefault(), s || l)
      return null;
    r.preventDefault(), n.call(this, r, o);
  };
}
function n3({ zoomPanValues: e, onDraggingChange: t, onPanZoomStart: n }) {
  return (r) => {
    var i, s, l;
    if ((i = r.sourceEvent) != null && i.internal)
      return;
    const o = ed(r.transform);
    e.mouseButton = ((s = r.sourceEvent) == null ? void 0 : s.button) || 0, e.isZoomingOrPanning = !0, e.prevViewport = o, ((l = r.sourceEvent) == null ? void 0 : l.type) === "mousedown" && t(!0), n && (n == null || n(r.sourceEvent, o));
  };
}
function r3({ zoomPanValues: e, panOnDrag: t, onPaneContextMenu: n, onTransformChange: r, onPanZoom: o }) {
  return (i) => {
    var s, l;
    e.usedRightMouseButton = !!(n && dE(t, e.mouseButton ?? 0)), (s = i.sourceEvent) != null && s.sync || r([i.transform.x, i.transform.y, i.transform.k]), o && !((l = i.sourceEvent) != null && l.internal) && (o == null || o(i.sourceEvent, ed(i.transform)));
  };
}
function o3({ zoomPanValues: e, panOnDrag: t, panOnScroll: n, onDraggingChange: r, onPanZoomEnd: o, onPaneContextMenu: i }) {
  return (s) => {
    var l;
    if (!((l = s.sourceEvent) != null && l.internal) && (e.isZoomingOrPanning = !1, i && dE(t, e.mouseButton ?? 0) && !e.usedRightMouseButton && s.sourceEvent && i(s.sourceEvent), e.usedRightMouseButton = !1, r(!1), o && J4(e.prevViewport, s.transform))) {
      const c = ed(s.transform);
      e.prevViewport = c, clearTimeout(e.timerId), e.timerId = setTimeout(
        () => {
          o == null || o(s.sourceEvent, c);
        },
        // we need a setTimeout for panOnScroll to supress multiple end events fired during scroll
        n ? 150 : 0
      );
    }
  };
}
function i3({ zoomActivationKeyPressed: e, zoomOnScroll: t, zoomOnPinch: n, panOnDrag: r, panOnScroll: o, zoomOnDoubleClick: i, userSelectionActive: s, noWheelClassName: l, noPanClassName: c, lib: u }) {
  return (d) => {
    var g;
    const f = e || t, p = n && d.ctrlKey;
    if (d.button === 1 && d.type === "mousedown" && (Ti(d, `${u}-flow__node`) || Ti(d, `${u}-flow__edge`)))
      return !0;
    if (!r && !f && !o && !i && !n || s || Ti(d, l) && d.type === "wheel" || Ti(d, c) && (d.type !== "wheel" || o && d.type === "wheel" && !e) || !n && d.ctrlKey && d.type === "wheel")
      return !1;
    if (!n && d.type === "touchstart" && ((g = d.touches) == null ? void 0 : g.length) > 1)
      return d.preventDefault(), !1;
    if (!f && !o && !p && d.type === "wheel" || !r && (d.type === "mousedown" || d.type === "touchstart") || Array.isArray(r) && !r.includes(d.button) && d.type === "mousedown")
      return !1;
    const h = Array.isArray(r) && r.includes(d.button) || !d.button || d.button <= 1;
    return (!d.ctrlKey || d.type === "wheel") && h;
  };
}
function s3({ domNode: e, minZoom: t, maxZoom: n, paneClickDistance: r, translateExtent: o, viewport: i, onPanZoom: s, onPanZoomStart: l, onPanZoomEnd: c, onDraggingChange: u }) {
  const d = {
    isZoomingOrPanning: !1,
    usedRightMouseButton: !1,
    prevViewport: { x: 0, y: 0, zoom: 0 },
    mouseButton: 0,
    timerId: void 0,
    panScrollTimeout: void 0,
    isPanScrolling: !1
  }, f = e.getBoundingClientRect(), p = F1().clickDistance(!ur(r) || r < 0 ? 0 : r).scaleExtent([t, n]).translateExtent(o), h = Fn(e).call(p);
  v({
    x: i.x,
    y: i.y,
    zoom: Ki(i.zoom, t, n)
  }, [
    [0, 0],
    [f.width, f.height]
  ], o);
  const g = h.on("wheel.zoom"), m = h.on("dblclick.zoom");
  p.wheelDelta(fE);
  function b($, A) {
    return h ? new Promise((O) => {
      p == null || p.transform(rf(h, A == null ? void 0 : A.duration, () => O(!0)), $);
    }) : Promise.resolve(!1);
  }
  function x({ noWheelClassName: $, noPanClassName: A, onPaneContextMenu: O, userSelectionActive: _, panOnScroll: I, panOnDrag: D, panOnScrollMode: z, panOnScrollSpeed: B, preventScrolling: F, zoomOnPinch: L, zoomOnScroll: W, zoomOnDoubleClick: U, zoomActivationKeyPressed: Z, lib: Q, onTransformChange: ee }) {
    _ && !d.isZoomingOrPanning && E();
    const q = I && !Z && !_ ? e3({
      zoomPanValues: d,
      noWheelClassName: $,
      d3Selection: h,
      d3Zoom: p,
      panOnScrollMode: z,
      panOnScrollSpeed: B,
      zoomOnPinch: L,
      onPanZoomStart: l,
      onPanZoom: s,
      onPanZoomEnd: c
    }) : t3({
      noWheelClassName: $,
      preventScrolling: F,
      d3ZoomHandler: g
    });
    if (h.on("wheel.zoom", q, { passive: !1 }), !_) {
      const K = n3({
        zoomPanValues: d,
        onDraggingChange: u,
        onPanZoomStart: l
      });
      p.on("start", K);
      const ne = r3({
        zoomPanValues: d,
        panOnDrag: D,
        onPaneContextMenu: !!O,
        onPanZoom: s,
        onTransformChange: ee
      });
      p.on("zoom", ne);
      const j = o3({
        zoomPanValues: d,
        panOnDrag: D,
        panOnScroll: I,
        onPaneContextMenu: O,
        onPanZoomEnd: c,
        onDraggingChange: u
      });
      p.on("end", j);
    }
    const oe = i3({
      zoomActivationKeyPressed: Z,
      panOnDrag: D,
      zoomOnScroll: W,
      panOnScroll: I,
      zoomOnDoubleClick: U,
      zoomOnPinch: L,
      userSelectionActive: _,
      noPanClassName: A,
      noWheelClassName: $,
      lib: Q
    });
    p.filter(oe), U ? h.on("dblclick.zoom", m) : h.on("dblclick.zoom", null);
  }
  function E() {
    p.on("zoom", null);
  }
  async function v($, A, O) {
    const _ = nf($), I = p == null ? void 0 : p.constrain()(_, A, O);
    return I && await b(I), new Promise((D) => D(I));
  }
  async function w($, A) {
    const O = nf($);
    return await b(O, A), new Promise((_) => _(O));
  }
  function S($) {
    if (h) {
      const A = nf($), O = h.property("__zoom");
      (O.k !== $.zoom || O.x !== $.x || O.y !== $.y) && (p == null || p.transform(h, A, null, { sync: !0 }));
    }
  }
  function T() {
    const $ = h ? B1(h.node()) : { x: 0, y: 0, k: 1 };
    return { x: $.x, y: $.y, zoom: $.k };
  }
  function C($, A) {
    return h ? new Promise((O) => {
      p == null || p.scaleTo(rf(h, A == null ? void 0 : A.duration, () => O(!0)), $);
    }) : Promise.resolve(!1);
  }
  function k($, A) {
    return h ? new Promise((O) => {
      p == null || p.scaleBy(rf(h, A == null ? void 0 : A.duration, () => O(!0)), $);
    }) : Promise.resolve(!1);
  }
  function P($) {
    p == null || p.scaleExtent($);
  }
  function y($) {
    p == null || p.translateExtent($);
  }
  function R($) {
    const A = !ur($) || $ < 0 ? 0 : $;
    p == null || p.clickDistance(A);
  }
  return {
    update: x,
    destroy: E,
    setViewport: w,
    setViewportConstrained: v,
    getViewport: T,
    scaleTo: C,
    scaleBy: k,
    setScaleExtent: P,
    setTranslateExtent: y,
    syncViewport: S,
    setClickDistance: R
  };
}
var Qs;
(function(e) {
  e.Line = "line", e.Handle = "handle";
})(Qs || (Qs = {}));
function a3({ width: e, prevWidth: t, height: n, prevHeight: r, affectsX: o, affectsY: i }) {
  const s = e - t, l = n - r, c = [s > 0 ? 1 : s < 0 ? -1 : 0, l > 0 ? 1 : l < 0 ? -1 : 0];
  return s && o && (c[0] = c[0] * -1), l && i && (c[1] = c[1] * -1), c;
}
function l3(e) {
  const t = e.includes("right") || e.includes("left"), n = e.includes("bottom") || e.includes("top"), r = e.includes("left"), o = e.includes("top");
  return {
    isHorizontal: t,
    isVertical: n,
    affectsX: r,
    affectsY: o
  };
}
function po(e, t) {
  return Math.max(0, t - e);
}
function ho(e, t) {
  return Math.max(0, e - t);
}
function Pl(e, t, n) {
  return Math.max(0, t - e, e - n);
}
function e0(e, t) {
  return e ? !t : t;
}
function c3(e, t, n, r, o, i, s, l) {
  let { affectsX: c, affectsY: u } = t;
  const { isHorizontal: d, isVertical: f } = t, p = d && f, { xSnapped: h, ySnapped: g } = n, { minWidth: m, maxWidth: b, minHeight: x, maxHeight: E } = r, { x: v, y: w, width: S, height: T, aspectRatio: C } = e;
  let k = Math.floor(d ? h - e.pointerX : 0), P = Math.floor(f ? g - e.pointerY : 0);
  const y = S + (c ? -k : k), R = T + (u ? -P : P), $ = -i[0] * S, A = -i[1] * T;
  let O = Pl(y, m, b), _ = Pl(R, x, E);
  if (s) {
    let z = 0, B = 0;
    c && k < 0 ? z = po(v + k + $, s[0][0]) : !c && k > 0 && (z = ho(v + y + $, s[1][0])), u && P < 0 ? B = po(w + P + A, s[0][1]) : !u && P > 0 && (B = ho(w + R + A, s[1][1])), O = Math.max(O, z), _ = Math.max(_, B);
  }
  if (l) {
    let z = 0, B = 0;
    c && k > 0 ? z = ho(v + k, l[0][0]) : !c && k < 0 && (z = po(v + y, l[1][0])), u && P > 0 ? B = ho(w + P, l[0][1]) : !u && P < 0 && (B = po(w + R, l[1][1])), O = Math.max(O, z), _ = Math.max(_, B);
  }
  if (o) {
    if (d) {
      const z = Pl(y / C, x, E) * C;
      if (O = Math.max(O, z), s) {
        let B = 0;
        !c && !u || c && !u && p ? B = ho(w + A + y / C, s[1][1]) * C : B = po(w + A + (c ? k : -k) / C, s[0][1]) * C, O = Math.max(O, B);
      }
      if (l) {
        let B = 0;
        !c && !u || c && !u && p ? B = po(w + y / C, l[1][1]) * C : B = ho(w + (c ? k : -k) / C, l[0][1]) * C, O = Math.max(O, B);
      }
    }
    if (f) {
      const z = Pl(R * C, m, b) / C;
      if (_ = Math.max(_, z), s) {
        let B = 0;
        !c && !u || u && !c && p ? B = ho(v + R * C + $, s[1][0]) / C : B = po(v + (u ? P : -P) * C + $, s[0][0]) / C, _ = Math.max(_, B);
      }
      if (l) {
        let B = 0;
        !c && !u || u && !c && p ? B = po(v + R * C, l[1][0]) / C : B = ho(v + (u ? P : -P) * C, l[0][0]) / C, _ = Math.max(_, B);
      }
    }
  }
  P = P + (P < 0 ? _ : -_), k = k + (k < 0 ? O : -O), o && (p ? y > R * C ? P = (e0(c, u) ? -k : k) / C : k = (e0(c, u) ? -P : P) * C : d ? (P = k / C, u = c) : (k = P * C, c = u));
  const I = c ? v + k : v, D = u ? w + P : w;
  return {
    width: S + (c ? -k : k),
    height: T + (u ? -P : P),
    x: i[0] * k * (c ? -1 : 1) + I,
    y: i[1] * P * (u ? -1 : 1) + D
  };
}
const pE = { width: 0, height: 0, x: 0, y: 0 }, u3 = {
  ...pE,
  pointerX: 0,
  pointerY: 0,
  aspectRatio: 1
};
function d3(e) {
  return [
    [0, 0],
    [e.measured.width, e.measured.height]
  ];
}
function f3(e, t, n) {
  const r = t.position.x + e.position.x, o = t.position.y + e.position.y, i = e.measured.width ?? 0, s = e.measured.height ?? 0, l = n[0] * i, c = n[1] * s;
  return [
    [r - l, o - c],
    [r + i - l, o + s - c]
  ];
}
function p3({ domNode: e, nodeId: t, getStoreItems: n, onChange: r, onEnd: o }) {
  const i = Fn(e);
  function s({ controlPosition: c, boundaries: u, keepAspectRatio: d, resizeDirection: f, onResizeStart: p, onResize: h, onResizeEnd: g, shouldResize: m }) {
    let b = { ...pE }, x = { ...u3 };
    const E = l3(c);
    let v, w = null, S = [], T, C, k;
    const P = E1().on("start", (y) => {
      const { nodeLookup: R, transform: $, snapGrid: A, snapToGrid: O, nodeOrigin: _, paneDomNode: I } = n();
      if (v = R.get(t), !v)
        return;
      w = (I == null ? void 0 : I.getBoundingClientRect()) ?? null;
      const { xSnapped: D, ySnapped: z } = Zs(y.sourceEvent, {
        transform: $,
        snapGrid: A,
        snapToGrid: O,
        containerBounds: w
      });
      b = {
        width: v.measured.width ?? 0,
        height: v.measured.height ?? 0,
        x: v.position.x ?? 0,
        y: v.position.y ?? 0
      }, x = {
        ...b,
        pointerX: D,
        pointerY: z,
        aspectRatio: b.width / b.height
      }, T = void 0, v.parentId && (v.extent === "parent" || v.expandParent) && (T = R.get(v.parentId), C = T && v.extent === "parent" ? d3(T) : void 0), S = [], k = void 0;
      for (const [B, F] of R)
        if (F.parentId === t && (S.push({
          id: B,
          position: { ...F.position },
          extent: F.extent
        }), F.extent === "parent" || F.expandParent)) {
          const L = f3(F, v, F.origin ?? _);
          k ? k = [
            [Math.min(L[0][0], k[0][0]), Math.min(L[0][1], k[0][1])],
            [Math.max(L[1][0], k[1][0]), Math.max(L[1][1], k[1][1])]
          ] : k = L;
        }
      p == null || p(y, { ...b });
    }).on("drag", (y) => {
      const { transform: R, snapGrid: $, snapToGrid: A, nodeOrigin: O } = n(), _ = Zs(y.sourceEvent, {
        transform: R,
        snapGrid: $,
        snapToGrid: A,
        containerBounds: w
      }), I = [];
      if (!v)
        return;
      const { x: D, y: z, width: B, height: F } = b, L = {}, W = v.origin ?? O, { width: U, height: Z, x: Q, y: ee } = c3(x, E, _, u, d, W, C, k), te = U !== B, q = Z !== F, oe = Q !== D && te, K = ee !== z && q;
      if (!oe && !K && !te && !q)
        return;
      if ((oe || K || W[0] === 1 || W[1] === 1) && (L.x = oe ? Q : b.x, L.y = K ? ee : b.y, b.x = L.x, b.y = L.y, S.length > 0)) {
        const ce = Q - D, be = ee - z;
        for (const Ie of S)
          Ie.position = {
            x: Ie.position.x - ce + W[0] * (U - B),
            y: Ie.position.y - be + W[1] * (Z - F)
          }, I.push(Ie);
      }
      if ((te || q) && (L.width = te && (!f || f === "horizontal") ? U : b.width, L.height = q && (!f || f === "vertical") ? Z : b.height, b.width = L.width, b.height = L.height), T && v.expandParent) {
        const ce = W[0] * (L.width ?? 0);
        L.x && L.x < ce && (b.x = ce, x.x = x.x - (L.x - ce));
        const be = W[1] * (L.height ?? 0);
        L.y && L.y < be && (b.y = be, x.y = x.y - (L.y - be));
      }
      const ne = a3({
        width: b.width,
        prevWidth: B,
        height: b.height,
        prevHeight: F,
        affectsX: E.affectsX,
        affectsY: E.affectsY
      }), j = { ...b, direction: ne };
      (m == null ? void 0 : m(y, j)) !== !1 && (h == null || h(y, j), r(L, I));
    }).on("end", (y) => {
      g == null || g(y, { ...b }), o == null || o({ ...b });
    });
    i.call(P);
  }
  function l() {
    i.on(".drag", null);
  }
  return {
    update: s,
    destroy: l
  };
}
var _l = { exports: {} }, of = {}, Ml = { exports: {} }, sf = {};
/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var t0;
function h3() {
  if (t0) return sf;
  t0 = 1;
  var e = Y;
  function t(f, p) {
    return f === p && (f !== 0 || 1 / f === 1 / p) || f !== f && p !== p;
  }
  var n = typeof Object.is == "function" ? Object.is : t, r = e.useState, o = e.useEffect, i = e.useLayoutEffect, s = e.useDebugValue;
  function l(f, p) {
    var h = p(), g = r({ inst: { value: h, getSnapshot: p } }), m = g[0].inst, b = g[1];
    return i(
      function() {
        m.value = h, m.getSnapshot = p, c(m) && b({ inst: m });
      },
      [f, h, p]
    ), o(
      function() {
        return c(m) && b({ inst: m }), f(function() {
          c(m) && b({ inst: m });
        });
      },
      [f]
    ), s(h), h;
  }
  function c(f) {
    var p = f.getSnapshot;
    f = f.value;
    try {
      var h = p();
      return !n(f, h);
    } catch {
      return !0;
    }
  }
  function u(f, p) {
    return p();
  }
  var d = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? u : l;
  return sf.useSyncExternalStore = e.useSyncExternalStore !== void 0 ? e.useSyncExternalStore : d, sf;
}
var af = {};
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var n0;
function m3() {
  return n0 || (n0 = 1, process.env.NODE_ENV !== "production" && function() {
    function e(h, g) {
      return h === g && (h !== 0 || 1 / h === 1 / g) || h !== h && g !== g;
    }
    function t(h, g) {
      d || o.startTransition === void 0 || (d = !0, console.error(
        "You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."
      ));
      var m = g();
      if (!f) {
        var b = g();
        i(m, b) || (console.error(
          "The result of getSnapshot should be cached to avoid an infinite loop"
        ), f = !0);
      }
      b = s({
        inst: { value: m, getSnapshot: g }
      });
      var x = b[0].inst, E = b[1];
      return c(
        function() {
          x.value = m, x.getSnapshot = g, n(x) && E({ inst: x });
        },
        [h, m, g]
      ), l(
        function() {
          return n(x) && E({ inst: x }), h(function() {
            n(x) && E({ inst: x });
          });
        },
        [h]
      ), u(m), m;
    }
    function n(h) {
      var g = h.getSnapshot;
      h = h.value;
      try {
        var m = g();
        return !i(h, m);
      } catch {
        return !0;
      }
    }
    function r(h, g) {
      return g();
    }
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var o = Y, i = typeof Object.is == "function" ? Object.is : e, s = o.useState, l = o.useEffect, c = o.useLayoutEffect, u = o.useDebugValue, d = !1, f = !1, p = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? r : t;
    af.useSyncExternalStore = o.useSyncExternalStore !== void 0 ? o.useSyncExternalStore : p, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
  }()), af;
}
var r0;
function hE() {
  return r0 || (r0 = 1, process.env.NODE_ENV === "production" ? Ml.exports = h3() : Ml.exports = m3()), Ml.exports;
}
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var o0;
function g3() {
  if (o0) return of;
  o0 = 1;
  var e = Y, t = hE();
  function n(u, d) {
    return u === d && (u !== 0 || 1 / u === 1 / d) || u !== u && d !== d;
  }
  var r = typeof Object.is == "function" ? Object.is : n, o = t.useSyncExternalStore, i = e.useRef, s = e.useEffect, l = e.useMemo, c = e.useDebugValue;
  return of.useSyncExternalStoreWithSelector = function(u, d, f, p, h) {
    var g = i(null);
    if (g.current === null) {
      var m = { hasValue: !1, value: null };
      g.current = m;
    } else m = g.current;
    g = l(
      function() {
        function x(T) {
          if (!E) {
            if (E = !0, v = T, T = p(T), h !== void 0 && m.hasValue) {
              var C = m.value;
              if (h(C, T))
                return w = C;
            }
            return w = T;
          }
          if (C = w, r(v, T)) return C;
          var k = p(T);
          return h !== void 0 && h(C, k) ? (v = T, C) : (v = T, w = k);
        }
        var E = !1, v, w, S = f === void 0 ? null : f;
        return [
          function() {
            return x(d());
          },
          S === null ? void 0 : function() {
            return x(S());
          }
        ];
      },
      [d, f, p, h]
    );
    var b = o(u, g[0], g[1]);
    return s(
      function() {
        m.hasValue = !0, m.value = b;
      },
      [b]
    ), c(b), b;
  }, of;
}
var lf = {};
/**
 * @license React
 * use-sync-external-store-shim/with-selector.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var i0;
function y3() {
  return i0 || (i0 = 1, process.env.NODE_ENV !== "production" && function() {
    function e(u, d) {
      return u === d && (u !== 0 || 1 / u === 1 / d) || u !== u && d !== d;
    }
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var t = Y, n = hE(), r = typeof Object.is == "function" ? Object.is : e, o = n.useSyncExternalStore, i = t.useRef, s = t.useEffect, l = t.useMemo, c = t.useDebugValue;
    lf.useSyncExternalStoreWithSelector = function(u, d, f, p, h) {
      var g = i(null);
      if (g.current === null) {
        var m = { hasValue: !1, value: null };
        g.current = m;
      } else m = g.current;
      g = l(
        function() {
          function x(T) {
            if (!E) {
              if (E = !0, v = T, T = p(T), h !== void 0 && m.hasValue) {
                var C = m.value;
                if (h(C, T))
                  return w = C;
              }
              return w = T;
            }
            if (C = w, r(v, T))
              return C;
            var k = p(T);
            return h !== void 0 && h(C, k) ? (v = T, C) : (v = T, w = k);
          }
          var E = !1, v, w, S = f === void 0 ? null : f;
          return [
            function() {
              return x(d());
            },
            S === null ? void 0 : function() {
              return x(S());
            }
          ];
        },
        [d, f, p, h]
      );
      var b = o(u, g[0], g[1]);
      return s(
        function() {
          m.hasValue = !0, m.value = b;
        },
        [b]
      ), c(b), b;
    }, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
  }()), lf;
}
var s0;
function b3() {
  return s0 || (s0 = 1, process.env.NODE_ENV === "production" ? _l.exports = g3() : _l.exports = y3()), _l.exports;
}
var v3 = b3();
const x3 = /* @__PURE__ */ V0(v3), w3 = {}, a0 = (e) => {
  let t;
  const n = /* @__PURE__ */ new Set(), r = (d, f) => {
    const p = typeof d == "function" ? d(t) : d;
    if (!Object.is(p, t)) {
      const h = t;
      t = f ?? (typeof p != "object" || p === null) ? p : Object.assign({}, t, p), n.forEach((g) => g(t, h));
    }
  }, o = () => t, c = { setState: r, getState: o, getInitialState: () => u, subscribe: (d) => (n.add(d), () => n.delete(d)), destroy: () => {
    (w3 ? "production" : void 0) !== "production" && console.warn(
      "[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."
    ), n.clear();
  } }, u = t = e(r, o, c);
  return c;
}, S3 = (e) => e ? a0(e) : a0, { useDebugValue: E3 } = Y, { useSyncExternalStoreWithSelector: T3 } = x3, C3 = (e) => e;
function mE(e, t = C3, n) {
  const r = T3(
    e.subscribe,
    e.getState,
    e.getServerState || e.getInitialState,
    t,
    n
  );
  return E3(r), r;
}
const l0 = (e, t) => {
  const n = S3(e), r = (o, i = t) => mE(n, o, i);
  return Object.assign(r, n), r;
}, O3 = (e, t) => e ? l0(e, t) : l0;
function Vt(e, t) {
  if (Object.is(e, t))
    return !0;
  if (typeof e != "object" || e === null || typeof t != "object" || t === null)
    return !1;
  if (e instanceof Map && t instanceof Map) {
    if (e.size !== t.size) return !1;
    for (const [r, o] of e)
      if (!Object.is(o, t.get(r)))
        return !1;
    return !0;
  }
  if (e instanceof Set && t instanceof Set) {
    if (e.size !== t.size) return !1;
    for (const r of e)
      if (!t.has(r))
        return !1;
    return !0;
  }
  const n = Object.keys(e);
  if (n.length !== Object.keys(t).length)
    return !1;
  for (const r of n)
    if (!Object.prototype.hasOwnProperty.call(t, r) || !Object.is(e[r], t[r]))
      return !1;
  return !0;
}
const td = wp(null), R3 = td.Provider, gE = vn.error001();
function Qe(e, t) {
  const n = Qi(td);
  if (n === null)
    throw new Error(gE);
  return mE(n, e, t);
}
function It() {
  const e = Qi(td);
  if (e === null)
    throw new Error(gE);
  return ct(() => ({
    getState: e.getState,
    setState: e.setState,
    subscribe: e.subscribe
  }), [e]);
}
const c0 = { display: "none" }, k3 = {
  position: "absolute",
  width: 1,
  height: 1,
  margin: -1,
  border: 0,
  padding: 0,
  overflow: "hidden",
  clip: "rect(0px, 0px, 0px, 0px)",
  clipPath: "inset(100%)"
}, yE = "react-flow__node-desc", bE = "react-flow__edge-desc", N3 = "react-flow__aria-live", I3 = (e) => e.ariaLiveMessage;
function $3({ rfId: e }) {
  const t = Qe(I3);
  return N("div", { id: `${N3}-${e}`, "aria-live": "assertive", "aria-atomic": "true", style: k3, children: t });
}
function P3({ rfId: e, disableKeyboardA11y: t }) {
  return Se(qn, { children: [Se("div", { id: `${yE}-${e}`, style: c0, children: ["Press enter or space to select a node.", !t && "You can then use the arrow keys to move the node around.", " Press delete to remove it and escape to cancel.", " "] }), N("div", { id: `${bE}-${e}`, style: c0, children: "Press enter or space to select an edge. You can then press delete to remove it or escape to cancel." }), !t && N($3, { rfId: e })] });
}
const _3 = (e) => e.userSelectionActive ? "none" : "all", el = Na(({ position: e = "top-left", children: t, className: n, style: r, ...o }, i) => {
  const s = Qe(_3), l = `${e}`.split("-");
  return N("div", { className: Xt(["react-flow__panel", n, ...l]), style: { ...r, pointerEvents: s }, ref: i, ...o, children: t });
});
el.displayName = "Panel";
function M3({ proOptions: e, position: t = "bottom-right" }) {
  return e != null && e.hideAttribution ? null : N(el, { position: t, className: "react-flow__attribution", "data-message": "Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev", children: N("a", { href: "https://reactflow.dev", target: "_blank", rel: "noopener noreferrer", "aria-label": "React Flow attribution", children: "React Flow" }) });
}
const A3 = (e) => {
  const t = [], n = [];
  for (const [, r] of e.nodeLookup)
    r.selected && t.push(r.internals.userNode);
  for (const [, r] of e.edgeLookup)
    r.selected && n.push(r);
  return { selectedNodes: t, selectedEdges: n };
}, Al = (e) => e.id;
function D3(e, t) {
  return Vt(e.selectedNodes.map(Al), t.selectedNodes.map(Al)) && Vt(e.selectedEdges.map(Al), t.selectedEdges.map(Al));
}
function B3({ onSelectionChange: e }) {
  const t = It(), { selectedNodes: n, selectedEdges: r } = Qe(A3, D3);
  return Ze(() => {
    const o = { nodes: n, edges: r };
    e == null || e(o), t.getState().onSelectionChangeHandlers.forEach((i) => i(o));
  }, [n, r, e]), null;
}
const F3 = (e) => !!e.onSelectionChangeHandlers;
function L3({ onSelectionChange: e }) {
  const t = Qe(F3);
  return e || t ? N(B3, { onSelectionChange: e }) : null;
}
const vE = [0, 0], z3 = { x: 0, y: 0, zoom: 1 }, V3 = [
  "nodes",
  "edges",
  "defaultNodes",
  "defaultEdges",
  "onConnect",
  "onConnectStart",
  "onConnectEnd",
  "onClickConnectStart",
  "onClickConnectEnd",
  "nodesDraggable",
  "nodesConnectable",
  "nodesFocusable",
  "edgesFocusable",
  "edgesReconnectable",
  "elevateNodesOnSelect",
  "elevateEdgesOnSelect",
  "minZoom",
  "maxZoom",
  "nodeExtent",
  "onNodesChange",
  "onEdgesChange",
  "elementsSelectable",
  "connectionMode",
  "snapGrid",
  "snapToGrid",
  "translateExtent",
  "connectOnClick",
  "defaultEdgeOptions",
  "fitView",
  "fitViewOptions",
  "onNodesDelete",
  "onEdgesDelete",
  "onDelete",
  "onNodeDrag",
  "onNodeDragStart",
  "onNodeDragStop",
  "onSelectionDrag",
  "onSelectionDragStart",
  "onSelectionDragStop",
  "onMoveStart",
  "onMove",
  "onMoveEnd",
  "noPanClassName",
  "nodeOrigin",
  "autoPanOnConnect",
  "autoPanOnNodeDrag",
  "onError",
  "connectionRadius",
  "isValidConnection",
  "selectNodesOnDrag",
  "nodeDragThreshold",
  "onBeforeDelete",
  "debug",
  "autoPanSpeed",
  "paneClickDistance"
], u0 = [...V3, "rfId"], j3 = (e) => ({
  setNodes: e.setNodes,
  setEdges: e.setEdges,
  setMinZoom: e.setMinZoom,
  setMaxZoom: e.setMaxZoom,
  setTranslateExtent: e.setTranslateExtent,
  setNodeExtent: e.setNodeExtent,
  reset: e.reset,
  setDefaultNodesAndEdges: e.setDefaultNodesAndEdges,
  setPaneClickDistance: e.setPaneClickDistance
}), d0 = {
  /*
   * these are values that are also passed directly to other components
   * than the StoreUpdater. We can reduce the number of setStore calls
   * by setting the same values here as prev fields.
   */
  translateExtent: Sa,
  nodeOrigin: vE,
  minZoom: 0.5,
  maxZoom: 2,
  elementsSelectable: !0,
  noPanClassName: "nopan",
  rfId: "1",
  paneClickDistance: 0
};
function H3(e) {
  const { setNodes: t, setEdges: n, setMinZoom: r, setMaxZoom: o, setTranslateExtent: i, setNodeExtent: s, reset: l, setDefaultNodesAndEdges: c, setPaneClickDistance: u } = Qe(j3, Vt), d = It();
  Ze(() => (c(e.defaultNodes, e.defaultEdges), () => {
    f.current = d0, l();
  }), []);
  const f = Ge(d0);
  return Ze(
    () => {
      for (const p of u0) {
        const h = e[p], g = f.current[p];
        h !== g && (typeof e[p] > "u" || (p === "nodes" ? t(h) : p === "edges" ? n(h) : p === "minZoom" ? r(h) : p === "maxZoom" ? o(h) : p === "translateExtent" ? i(h) : p === "nodeExtent" ? s(h) : p === "paneClickDistance" ? u(h) : p === "fitView" ? d.setState({ fitViewQueued: h }) : p === "fitViewOptions" ? d.setState({ fitViewOptions: h }) : d.setState({ [p]: h })));
      }
      f.current = e;
    },
    // Only re-run the effect if one of the fields we track changes
    u0.map((p) => e[p])
  ), null;
}
function f0() {
  return typeof window > "u" || !window.matchMedia ? null : window.matchMedia("(prefers-color-scheme: dark)");
}
function W3(e) {
  var r;
  const [t, n] = Jt(e === "system" ? null : e);
  return Ze(() => {
    if (e !== "system") {
      n(e);
      return;
    }
    const o = f0(), i = () => n(o != null && o.matches ? "dark" : "light");
    return i(), o == null || o.addEventListener("change", i), () => {
      o == null || o.removeEventListener("change", i);
    };
  }, [e]), t !== null ? t : (r = f0()) != null && r.matches ? "dark" : "light";
}
const p0 = typeof document < "u" ? document : null;
function Oa(e = null, t = { target: p0, actInsideInputWithModifier: !0 }) {
  const [n, r] = Jt(!1), o = Ge(!1), i = Ge(/* @__PURE__ */ new Set([])), [s, l] = ct(() => {
    if (e !== null) {
      const u = (Array.isArray(e) ? e : [e]).filter((f) => typeof f == "string").map((f) => f.replace("+", `
`).replace(`

`, `
+`).split(`
`)), d = u.reduce((f, p) => f.concat(...p), []);
      return [u, d];
    }
    return [[], []];
  }, [e]);
  return Ze(() => {
    const c = (t == null ? void 0 : t.target) ?? p0, u = (t == null ? void 0 : t.actInsideInputWithModifier) ?? !0;
    if (e !== null) {
      const d = (h) => {
        var b, x;
        if (o.current = h.ctrlKey || h.metaKey || h.shiftKey || h.altKey, (!o.current || o.current && !u) && Z1(h))
          return !1;
        const m = m0(h.code, l);
        if (i.current.add(h[m]), h0(s, i.current, !1)) {
          const E = ((x = (b = h.composedPath) == null ? void 0 : b.call(h)) == null ? void 0 : x[0]) || h.target, v = (E == null ? void 0 : E.nodeName) === "BUTTON" || (E == null ? void 0 : E.nodeName) === "A";
          t.preventDefault !== !1 && (o.current || !v) && h.preventDefault(), r(!0);
        }
      }, f = (h) => {
        const g = m0(h.code, l);
        h0(s, i.current, !0) ? (r(!1), i.current.clear()) : i.current.delete(h[g]), h.key === "Meta" && i.current.clear(), o.current = !1;
      }, p = () => {
        i.current.clear(), r(!1);
      };
      return c == null || c.addEventListener("keydown", d), c == null || c.addEventListener("keyup", f), window.addEventListener("blur", p), window.addEventListener("contextmenu", p), () => {
        c == null || c.removeEventListener("keydown", d), c == null || c.removeEventListener("keyup", f), window.removeEventListener("blur", p), window.removeEventListener("contextmenu", p);
      };
    }
  }, [e, r]), n;
}
function h0(e, t, n) {
  return e.filter((r) => n || r.length === t.size).some((r) => r.every((o) => t.has(o)));
}
function m0(e, t) {
  return t.includes(e) ? "code" : "key";
}
const U3 = () => {
  const e = It();
  return ct(() => ({
    zoomIn: (t) => {
      const { panZoom: n } = e.getState();
      return n ? n.scaleBy(1.2, { duration: t == null ? void 0 : t.duration }) : Promise.resolve(!1);
    },
    zoomOut: (t) => {
      const { panZoom: n } = e.getState();
      return n ? n.scaleBy(1 / 1.2, { duration: t == null ? void 0 : t.duration }) : Promise.resolve(!1);
    },
    zoomTo: (t, n) => {
      const { panZoom: r } = e.getState();
      return r ? r.scaleTo(t, { duration: n == null ? void 0 : n.duration }) : Promise.resolve(!1);
    },
    getZoom: () => e.getState().transform[2],
    setViewport: async (t, n) => {
      const { transform: [r, o, i], panZoom: s } = e.getState();
      return s ? (await s.setViewport({
        x: t.x ?? r,
        y: t.y ?? o,
        zoom: t.zoom ?? i
      }, { duration: n == null ? void 0 : n.duration }), Promise.resolve(!0)) : Promise.resolve(!1);
    },
    getViewport: () => {
      const [t, n, r] = e.getState().transform;
      return { x: t, y: n, zoom: r };
    },
    setCenter: async (t, n, r) => {
      const { width: o, height: i, maxZoom: s, panZoom: l } = e.getState(), c = typeof (r == null ? void 0 : r.zoom) < "u" ? r.zoom : s, u = o / 2 - t * c, d = i / 2 - n * c;
      return l ? (await l.setViewport({
        x: u,
        y: d,
        zoom: c
      }, { duration: r == null ? void 0 : r.duration }), Promise.resolve(!0)) : Promise.resolve(!1);
    },
    fitBounds: async (t, n) => {
      const { width: r, height: o, minZoom: i, maxZoom: s, panZoom: l } = e.getState(), c = tm(t, r, o, i, s, (n == null ? void 0 : n.padding) ?? 0.1);
      return l ? (await l.setViewport(c, { duration: n == null ? void 0 : n.duration }), Promise.resolve(!0)) : Promise.resolve(!1);
    },
    screenToFlowPosition: (t, n = {}) => {
      const { transform: r, snapGrid: o, snapToGrid: i, domNode: s } = e.getState();
      if (!s)
        return t;
      const { x: l, y: c } = s.getBoundingClientRect(), u = {
        x: t.x - l,
        y: t.y - c
      }, d = n.snapGrid ?? o, f = n.snapToGrid ?? i;
      return Ja(u, r, f, d);
    },
    flowToScreenPosition: (t) => {
      const { transform: n, domNode: r } = e.getState();
      if (!r)
        return t;
      const { x: o, y: i } = r.getBoundingClientRect(), s = Lc(t, n);
      return {
        x: s.x + o,
        y: s.y + i
      };
    }
  }), []);
};
function xE(e, t) {
  const n = [], r = /* @__PURE__ */ new Map(), o = [];
  for (const i of e)
    if (i.type === "add") {
      o.push(i);
      continue;
    } else if (i.type === "remove" || i.type === "replace")
      r.set(i.id, [i]);
    else {
      const s = r.get(i.id);
      s ? s.push(i) : r.set(i.id, [i]);
    }
  for (const i of t) {
    const s = r.get(i.id);
    if (!s) {
      n.push(i);
      continue;
    }
    if (s[0].type === "remove")
      continue;
    if (s[0].type === "replace") {
      n.push({ ...s[0].item });
      continue;
    }
    const l = { ...i };
    for (const c of s)
      q3(c, l);
    n.push(l);
  }
  return o.length && o.forEach((i) => {
    i.index !== void 0 ? n.splice(i.index, 0, { ...i.item }) : n.push({ ...i.item });
  }), n;
}
function q3(e, t) {
  switch (e.type) {
    case "select": {
      t.selected = e.selected;
      break;
    }
    case "position": {
      typeof e.position < "u" && (t.position = e.position), typeof e.dragging < "u" && (t.dragging = e.dragging);
      break;
    }
    case "dimensions": {
      typeof e.dimensions < "u" && (t.measured ?? (t.measured = {}), t.measured.width = e.dimensions.width, t.measured.height = e.dimensions.height, e.setAttributes && ((e.setAttributes === !0 || e.setAttributes === "width") && (t.width = e.dimensions.width), (e.setAttributes === !0 || e.setAttributes === "height") && (t.height = e.dimensions.height))), typeof e.resizing == "boolean" && (t.resizing = e.resizing);
      break;
    }
  }
}
function Y3(e, t) {
  return xE(e, t);
}
function G3(e, t) {
  return xE(e, t);
}
function zo(e, t) {
  return {
    id: e,
    type: "select",
    selected: t
  };
}
function Ci(e, t = /* @__PURE__ */ new Set(), n = !1) {
  const r = [];
  for (const [o, i] of e) {
    const s = t.has(o);
    !(i.selected === void 0 && !s) && i.selected !== s && (n && (i.selected = s), r.push(zo(i.id, s)));
  }
  return r;
}
function g0({ items: e = [], lookup: t }) {
  var o;
  const n = [], r = new Map(e.map((i) => [i.id, i]));
  for (const [i, s] of e.entries()) {
    const l = t.get(s.id), c = ((o = l == null ? void 0 : l.internals) == null ? void 0 : o.userNode) ?? l;
    c !== void 0 && c !== s && n.push({ id: s.id, item: s, type: "replace" }), c === void 0 && n.push({ item: s, type: "add", index: i });
  }
  for (const [i] of t)
    r.get(i) === void 0 && n.push({ id: i, type: "remove" });
  return n;
}
function y0(e) {
  return {
    id: e.id,
    type: "remove"
  };
}
const b0 = (e) => v4(e), K3 = (e) => j1(e);
function wE(e) {
  return Na(e);
}
const X3 = typeof window < "u" ? F0 : Ze;
function v0(e) {
  const [t, n] = Jt(BigInt(0)), [r] = Jt(() => Z3(() => n((o) => o + BigInt(1))));
  return X3(() => {
    const o = r.get();
    o.length && (e(o), r.reset());
  }, [t]), r;
}
function Z3(e) {
  let t = [];
  return {
    get: () => t,
    reset: () => {
      t = [];
    },
    push: (n) => {
      t.push(n), e();
    }
  };
}
const SE = wp(null);
function Q3({ children: e }) {
  const t = It(), n = Fe((l) => {
    const { nodes: c = [], setNodes: u, hasDefaultNodes: d, onNodesChange: f, nodeLookup: p, fitViewQueued: h } = t.getState();
    let g = c;
    for (const b of l)
      g = typeof b == "function" ? b(g) : b;
    const m = g0({
      items: g,
      lookup: p
    });
    d && u(g), m.length > 0 ? f == null || f(m) : h && window.requestAnimationFrame(() => {
      const { fitViewQueued: b, nodes: x, setNodes: E } = t.getState();
      b && E(x);
    });
  }, []), r = v0(n), o = Fe((l) => {
    const { edges: c = [], setEdges: u, hasDefaultEdges: d, onEdgesChange: f, edgeLookup: p } = t.getState();
    let h = c;
    for (const g of l)
      h = typeof g == "function" ? g(h) : g;
    d ? u(h) : f && f(g0({
      items: h,
      lookup: p
    }));
  }, []), i = v0(o), s = ct(() => ({ nodeQueue: r, edgeQueue: i }), []);
  return N(SE.Provider, { value: s, children: e });
}
function J3() {
  const e = Qi(SE);
  if (!e)
    throw new Error("useBatchContext must be used within a BatchProvider");
  return e;
}
const eH = (e) => !!e.panZoom;
function nd() {
  const e = U3(), t = It(), n = J3(), r = Qe(eH), o = ct(() => {
    const i = (f) => t.getState().nodeLookup.get(f), s = (f) => {
      n.nodeQueue.push(f);
    }, l = (f) => {
      n.edgeQueue.push(f);
    }, c = (f) => {
      var x, E;
      const { nodeLookup: p, nodeOrigin: h } = t.getState(), g = b0(f) ? f : p.get(f.id), m = g.parentId ? K1(g.position, g.measured, g.parentId, p, h) : g.position, b = {
        ...g,
        position: m,
        width: ((x = g.measured) == null ? void 0 : x.width) ?? g.width,
        height: ((E = g.measured) == null ? void 0 : E.height) ?? g.height
      };
      return Xi(b);
    }, u = (f, p, h = { replace: !1 }) => {
      s((g) => g.map((m) => {
        if (m.id === f) {
          const b = typeof p == "function" ? p(m) : p;
          return h.replace && b0(b) ? b : { ...m, ...b };
        }
        return m;
      }));
    }, d = (f, p, h = { replace: !1 }) => {
      l((g) => g.map((m) => {
        if (m.id === f) {
          const b = typeof p == "function" ? p(m) : p;
          return h.replace && K3(b) ? b : { ...m, ...b };
        }
        return m;
      }));
    };
    return {
      getNodes: () => t.getState().nodes.map((f) => ({ ...f })),
      getNode: (f) => {
        var p;
        return (p = i(f)) == null ? void 0 : p.internals.userNode;
      },
      getInternalNode: i,
      getEdges: () => {
        const { edges: f = [] } = t.getState();
        return f.map((p) => ({ ...p }));
      },
      getEdge: (f) => t.getState().edgeLookup.get(f),
      setNodes: s,
      setEdges: l,
      addNodes: (f) => {
        const p = Array.isArray(f) ? f : [f];
        n.nodeQueue.push((h) => [...h, ...p]);
      },
      addEdges: (f) => {
        const p = Array.isArray(f) ? f : [f];
        n.edgeQueue.push((h) => [...h, ...p]);
      },
      toObject: () => {
        const { nodes: f = [], edges: p = [], transform: h } = t.getState(), [g, m, b] = h;
        return {
          nodes: f.map((x) => ({ ...x })),
          edges: p.map((x) => ({ ...x })),
          viewport: {
            x: g,
            y: m,
            zoom: b
          }
        };
      },
      deleteElements: async ({ nodes: f = [], edges: p = [] }) => {
        const { nodes: h, edges: g, onNodesDelete: m, onEdgesDelete: b, triggerNodeChanges: x, triggerEdgeChanges: E, onDelete: v, onBeforeDelete: w } = t.getState(), { nodes: S, edges: T } = await C4({
          nodesToRemove: f,
          edgesToRemove: p,
          nodes: h,
          edges: g,
          onBeforeDelete: w
        }), C = T.length > 0, k = S.length > 0;
        if (C) {
          const P = T.map(y0);
          b == null || b(T), E(P);
        }
        if (k) {
          const P = S.map(y0);
          m == null || m(S), x(P);
        }
        return (k || C) && (v == null || v({ nodes: S, edges: T })), { deletedNodes: S, deletedEdges: T };
      },
      getIntersectingNodes: (f, p = !0, h) => {
        const g = Hb(f), m = g ? f : c(f), b = h !== void 0;
        return m ? (h || t.getState().nodes).filter((x) => {
          const E = t.getState().nodeLookup.get(x.id);
          if (E && !g && (x.id === f.id || !E.internals.positionAbsolute))
            return !1;
          const v = Xi(b ? x : E), w = Ta(v, m);
          return p && w > 0 || w >= m.width * m.height;
        }) : [];
      },
      isNodeIntersecting: (f, p, h = !0) => {
        const m = Hb(f) ? f : c(f);
        if (!m)
          return !1;
        const b = Ta(m, p);
        return h && b > 0 || b >= m.width * m.height;
      },
      updateNode: u,
      updateNodeData: (f, p, h = { replace: !1 }) => {
        u(f, (g) => {
          const m = typeof p == "function" ? p(g) : p;
          return h.replace ? { ...g, data: m } : { ...g, data: { ...g.data, ...m } };
        }, h);
      },
      updateEdge: d,
      updateEdgeData: (f, p, h = { replace: !1 }) => {
        d(f, (g) => {
          const m = typeof p == "function" ? p(g) : p;
          return h.replace ? { ...g, data: m } : { ...g, data: { ...g.data, ...m } };
        }, h);
      },
      getNodesBounds: (f) => {
        const { nodeLookup: p, nodeOrigin: h } = t.getState();
        return w4(f, { nodeLookup: p, nodeOrigin: h });
      },
      getHandleConnections: ({ type: f, id: p, nodeId: h }) => {
        var g;
        return Array.from(((g = t.getState().connectionLookup.get(`${h}-${f}${p ? `-${p}` : ""}`)) == null ? void 0 : g.values()) ?? []);
      },
      getNodeConnections: ({ type: f, handleId: p, nodeId: h }) => {
        var g;
        return Array.from(((g = t.getState().connectionLookup.get(`${h}${f ? p ? `-${f}-${p}` : `-${f}` : ""}`)) == null ? void 0 : g.values()) ?? []);
      },
      fitView: async (f) => {
        const p = t.getState().fitViewResolver ?? k4();
        return t.setState({ fitViewQueued: !0, fitViewOptions: f, fitViewResolver: p }), n.nodeQueue.push((h) => [...h]), p.promise;
      }
    };
  }, []);
  return ct(() => ({
    ...o,
    ...e,
    viewportInitialized: r
  }), [r]);
}
const x0 = (e) => e.selected, tH = typeof window < "u" ? window : void 0;
function nH({ deleteKeyCode: e, multiSelectionKeyCode: t }) {
  const n = It(), { deleteElements: r } = nd(), o = Oa(e, { actInsideInputWithModifier: !1 }), i = Oa(t, { target: tH });
  Ze(() => {
    if (o) {
      const { edges: s, nodes: l } = n.getState();
      r({ nodes: l.filter(x0), edges: s.filter(x0) }), n.setState({ nodesSelectionActive: !1 });
    }
  }, [o]), Ze(() => {
    n.setState({ multiSelectionActive: i });
  }, [i]);
}
function rH(e) {
  const t = It();
  Ze(() => {
    const n = () => {
      var o, i;
      if (!e.current)
        return !1;
      const r = nm(e.current);
      (r.height === 0 || r.width === 0) && ((i = (o = t.getState()).onError) == null || i.call(o, "004", vn.error004())), t.setState({ width: r.width || 500, height: r.height || 500 });
    };
    if (e.current) {
      n(), window.addEventListener("resize", n);
      const r = new ResizeObserver(() => n());
      return r.observe(e.current), () => {
        window.removeEventListener("resize", n), r && e.current && r.unobserve(e.current);
      };
    }
  }, []);
}
const rd = {
  position: "absolute",
  width: "100%",
  height: "100%",
  top: 0,
  left: 0
}, oH = (e) => ({
  userSelectionActive: e.userSelectionActive,
  lib: e.lib
});
function iH({ onPaneContextMenu: e, zoomOnScroll: t = !0, zoomOnPinch: n = !0, panOnScroll: r = !1, panOnScrollSpeed: o = 0.5, panOnScrollMode: i = Go.Free, zoomOnDoubleClick: s = !0, panOnDrag: l = !0, defaultViewport: c, translateExtent: u, minZoom: d, maxZoom: f, zoomActivationKeyCode: p, preventScrolling: h = !0, children: g, noWheelClassName: m, noPanClassName: b, onViewportChange: x, isControlledViewport: E, paneClickDistance: v }) {
  const w = It(), S = Ge(null), { userSelectionActive: T, lib: C } = Qe(oH, Vt), k = Oa(p), P = Ge();
  rH(S);
  const y = Fe((R) => {
    x == null || x({ x: R[0], y: R[1], zoom: R[2] }), E || w.setState({ transform: R });
  }, [x, E]);
  return Ze(() => {
    if (S.current) {
      P.current = s3({
        domNode: S.current,
        minZoom: d,
        maxZoom: f,
        translateExtent: u,
        viewport: c,
        paneClickDistance: v,
        onDraggingChange: (O) => w.setState({ paneDragging: O }),
        onPanZoomStart: (O, _) => {
          const { onViewportChangeStart: I, onMoveStart: D } = w.getState();
          D == null || D(O, _), I == null || I(_);
        },
        onPanZoom: (O, _) => {
          const { onViewportChange: I, onMove: D } = w.getState();
          D == null || D(O, _), I == null || I(_);
        },
        onPanZoomEnd: (O, _) => {
          const { onViewportChangeEnd: I, onMoveEnd: D } = w.getState();
          D == null || D(O, _), I == null || I(_);
        }
      });
      const { x: R, y: $, zoom: A } = P.current.getViewport();
      return w.setState({
        panZoom: P.current,
        transform: [R, $, A],
        domNode: S.current.closest(".react-flow")
      }), () => {
        var O;
        (O = P.current) == null || O.destroy();
      };
    }
  }, []), Ze(() => {
    var R;
    (R = P.current) == null || R.update({
      onPaneContextMenu: e,
      zoomOnScroll: t,
      zoomOnPinch: n,
      panOnScroll: r,
      panOnScrollSpeed: o,
      panOnScrollMode: i,
      zoomOnDoubleClick: s,
      panOnDrag: l,
      zoomActivationKeyPressed: k,
      preventScrolling: h,
      noPanClassName: b,
      userSelectionActive: T,
      noWheelClassName: m,
      lib: C,
      onTransformChange: y
    });
  }, [
    e,
    t,
    n,
    r,
    o,
    i,
    s,
    l,
    k,
    h,
    b,
    T,
    m,
    C,
    y
  ]), N("div", { className: "react-flow__renderer", ref: S, style: rd, children: g });
}
const sH = (e) => ({
  userSelectionActive: e.userSelectionActive,
  userSelectionRect: e.userSelectionRect
});
function aH() {
  const { userSelectionActive: e, userSelectionRect: t } = Qe(sH, Vt);
  return e && t ? N("div", { className: "react-flow__selection react-flow__container", style: {
    width: t.width,
    height: t.height,
    transform: `translate(${t.x}px, ${t.y}px)`
  } }) : null;
}
const cf = (e, t) => (n) => {
  n.target === t.current && (e == null || e(n));
}, lH = (e) => ({
  userSelectionActive: e.userSelectionActive,
  elementsSelectable: e.elementsSelectable,
  connectionInProgress: e.connection.inProgress,
  dragging: e.paneDragging
});
function cH({ isSelecting: e, selectionKeyPressed: t, selectionMode: n = Ea.Full, panOnDrag: r, selectionOnDrag: o, onSelectionStart: i, onSelectionEnd: s, onPaneClick: l, onPaneContextMenu: c, onPaneScroll: u, onPaneMouseEnter: d, onPaneMouseMove: f, onPaneMouseLeave: p, children: h }) {
  const g = It(), { userSelectionActive: m, elementsSelectable: b, dragging: x, connectionInProgress: E } = Qe(lH, Vt), v = b && (e || m), w = Ge(null), S = Ge(), T = Ge(/* @__PURE__ */ new Set()), C = Ge(/* @__PURE__ */ new Set()), k = Ge(!1), P = Ge(!1), y = (D) => {
    if (k.current || E) {
      k.current = !1;
      return;
    }
    l == null || l(D), g.getState().resetSelectedElements(), g.setState({ nodesSelectionActive: !1 });
  }, R = (D) => {
    if (Array.isArray(r) && (r != null && r.includes(2))) {
      D.preventDefault();
      return;
    }
    c == null || c(D);
  }, $ = u ? (D) => u(D) : void 0, A = (D) => {
    var W, U;
    const { resetSelectedElements: z, domNode: B } = g.getState();
    if (S.current = B == null ? void 0 : B.getBoundingClientRect(), !b || !e || D.button !== 0 || D.target !== w.current || !S.current)
      return;
    (U = (W = D.target) == null ? void 0 : W.setPointerCapture) == null || U.call(W, D.pointerId), P.current = !0, k.current = !1;
    const { x: F, y: L } = Kr(D.nativeEvent, S.current);
    z(), g.setState({
      userSelectionRect: {
        width: 0,
        height: 0,
        startX: F,
        startY: L,
        x: F,
        y: L
      }
    }), i == null || i(D);
  }, O = (D) => {
    const { userSelectionRect: z, transform: B, nodeLookup: F, edgeLookup: L, connectionLookup: W, triggerNodeChanges: U, triggerEdgeChanges: Z, defaultEdgeOptions: Q } = g.getState();
    if (!S.current || !z)
      return;
    k.current = !0;
    const { x: ee, y: te } = Kr(D.nativeEvent, S.current), { startX: q, startY: oe } = z, K = {
      startX: q,
      startY: oe,
      x: ee < q ? ee : q,
      y: te < oe ? te : oe,
      width: Math.abs(ee - q),
      height: Math.abs(te - oe)
    }, ne = T.current, j = C.current;
    T.current = new Set(H1(F, K, B, n === Ea.Partial, !0).map((ce) => ce.id)), C.current = /* @__PURE__ */ new Set();
    const pe = (Q == null ? void 0 : Q.selectable) ?? !0;
    for (const ce of T.current) {
      const be = W.get(ce);
      if (be)
        for (const { edgeId: Ie } of be.values()) {
          const _e = L.get(Ie);
          _e && (_e.selectable ?? pe) && C.current.add(Ie);
        }
    }
    if (!Wb(ne, T.current)) {
      const ce = Ci(F, T.current, !0);
      U(ce);
    }
    if (!Wb(j, C.current)) {
      const ce = Ci(L, C.current);
      Z(ce);
    }
    g.setState({
      userSelectionRect: K,
      userSelectionActive: !0,
      nodesSelectionActive: !1
    });
  }, _ = (D) => {
    var B, F;
    if (D.button !== 0 || !P.current)
      return;
    (F = (B = D.target) == null ? void 0 : B.releasePointerCapture) == null || F.call(B, D.pointerId);
    const { userSelectionRect: z } = g.getState();
    !m && z && D.target === w.current && (y == null || y(D)), g.setState({
      userSelectionActive: !1,
      userSelectionRect: null,
      nodesSelectionActive: T.current.size > 0
    }), s == null || s(D), (t || o) && (k.current = !1), P.current = !1;
  }, I = r === !0 || Array.isArray(r) && r.includes(0);
  return Se("div", { className: Xt(["react-flow__pane", { draggable: I, dragging: x, selection: e }]), onClick: v ? void 0 : cf(y, w), onContextMenu: cf(R, w), onWheel: cf($, w), onPointerEnter: v ? void 0 : d, onPointerDown: v ? A : f, onPointerMove: v ? O : f, onPointerUp: v ? _ : void 0, onPointerLeave: p, ref: w, style: rd, children: [h, N(aH, {})] });
}
function xp({ id: e, store: t, unselect: n = !1, nodeRef: r }) {
  const { addSelectedNodes: o, unselectNodesAndEdges: i, multiSelectionActive: s, nodeLookup: l, onError: c } = t.getState(), u = l.get(e);
  if (!u) {
    c == null || c("012", vn.error012(e));
    return;
  }
  t.setState({ nodesSelectionActive: !1 }), u.selected ? (n || u.selected && s) && (i({ nodes: [u], edges: [] }), requestAnimationFrame(() => {
    var d;
    return (d = r == null ? void 0 : r.current) == null ? void 0 : d.blur();
  })) : o([e]);
}
function EE({ nodeRef: e, disabled: t = !1, noDragClassName: n, handleSelector: r, nodeId: o, isSelectable: i, nodeClickDistance: s }) {
  const l = It(), [c, u] = Jt(!1), d = Ge();
  return Ze(() => {
    d.current = q4({
      getStoreItems: () => l.getState(),
      onNodeMouseDown: (f) => {
        xp({
          id: f,
          store: l,
          nodeRef: e
        });
      },
      onDragStart: () => {
        u(!0);
      },
      onDragStop: () => {
        u(!1);
      }
    });
  }, []), Ze(() => {
    var f, p;
    if (t)
      (f = d.current) == null || f.destroy();
    else if (e.current)
      return (p = d.current) == null || p.update({
        noDragClassName: n,
        handleSelector: r,
        domNode: e.current,
        isSelectable: i,
        nodeId: o,
        nodeClickDistance: s
      }), () => {
        var h;
        (h = d.current) == null || h.destroy();
      };
  }, [n, r, t, i, e, o]), c;
}
const uH = (e) => (t) => t.selected && (t.draggable || e && typeof t.draggable > "u");
function TE() {
  const e = It();
  return Fe((n) => {
    const { nodeExtent: r, snapToGrid: o, snapGrid: i, nodesDraggable: s, onError: l, updateNodePositions: c, nodeLookup: u, nodeOrigin: d } = e.getState(), f = /* @__PURE__ */ new Map(), p = uH(s), h = o ? i[0] : 5, g = o ? i[1] : 5, m = n.direction.x * h * n.factor, b = n.direction.y * g * n.factor;
    for (const [, x] of u) {
      if (!p(x))
        continue;
      let E = {
        x: x.internals.positionAbsolute.x + m,
        y: x.internals.positionAbsolute.y + b
      };
      o && (E = Ju(E, i));
      const { position: v, positionAbsolute: w } = W1({
        nodeId: x.id,
        nextPosition: E,
        nodeLookup: u,
        nodeExtent: r,
        nodeOrigin: d,
        onError: l
      });
      x.position = v, x.internals.positionAbsolute = w, f.set(x.id, x);
    }
    c(f);
  }, []);
}
const lm = wp(null), dH = lm.Provider;
lm.Consumer;
const CE = () => Qi(lm), fH = (e) => ({
  connectOnClick: e.connectOnClick,
  noPanClassName: e.noPanClassName,
  rfId: e.rfId
}), pH = (e, t, n) => (r) => {
  const { connectionClickStartHandle: o, connectionMode: i, connection: s } = r, { fromHandle: l, toHandle: c, isValid: u } = s, d = (c == null ? void 0 : c.nodeId) === e && (c == null ? void 0 : c.id) === t && (c == null ? void 0 : c.type) === n;
  return {
    connectingFrom: (l == null ? void 0 : l.nodeId) === e && (l == null ? void 0 : l.id) === t && (l == null ? void 0 : l.type) === n,
    connectingTo: d,
    clickConnecting: (o == null ? void 0 : o.nodeId) === e && (o == null ? void 0 : o.id) === t && (o == null ? void 0 : o.type) === n,
    isPossibleEndHandle: i === Yi.Strict ? (l == null ? void 0 : l.type) !== n : e !== (l == null ? void 0 : l.nodeId) || t !== (l == null ? void 0 : l.id),
    connectionInProcess: !!l,
    clickConnectionInProcess: !!o,
    valid: d && u
  };
};
function hH({ type: e = "source", position: t = Ae.Top, isValidConnection: n, isConnectable: r = !0, isConnectableStart: o = !0, isConnectableEnd: i = !0, id: s, onConnect: l, children: c, className: u, onMouseDown: d, onTouchStart: f, ...p }, h) {
  var _, I;
  const g = s || null, m = e === "target", b = It(), x = CE(), { connectOnClick: E, noPanClassName: v, rfId: w } = Qe(fH, Vt), { connectingFrom: S, connectingTo: T, clickConnecting: C, isPossibleEndHandle: k, connectionInProcess: P, clickConnectionInProcess: y, valid: R } = Qe(pH(x, g, e), Vt);
  x || (I = (_ = b.getState()).onError) == null || I.call(_, "010", vn.error010());
  const $ = (D) => {
    const { defaultEdgeOptions: z, onConnect: B, hasDefaultEdges: F } = b.getState(), L = {
      ...z,
      ...D
    };
    if (F) {
      const { edges: W, setEdges: U } = b.getState();
      U(nE(L, W));
    }
    B == null || B(L), l == null || l(L);
  }, A = (D) => {
    if (!x)
      return;
    const z = Q1(D.nativeEvent);
    if (o && (z && D.button === 0 || !z)) {
      const B = b.getState();
      vp.onPointerDown(D.nativeEvent, {
        autoPanOnConnect: B.autoPanOnConnect,
        connectionMode: B.connectionMode,
        connectionRadius: B.connectionRadius,
        domNode: B.domNode,
        nodeLookup: B.nodeLookup,
        lib: B.lib,
        isTarget: m,
        handleId: g,
        nodeId: x,
        flowId: B.rfId,
        panBy: B.panBy,
        cancelConnection: B.cancelConnection,
        onConnectStart: B.onConnectStart,
        onConnectEnd: B.onConnectEnd,
        updateConnection: B.updateConnection,
        onConnect: $,
        isValidConnection: n || B.isValidConnection,
        getTransform: () => b.getState().transform,
        getFromHandle: () => b.getState().connection.fromHandle,
        autoPanSpeed: B.autoPanSpeed
      });
    }
    z ? d == null || d(D) : f == null || f(D);
  }, O = (D) => {
    const { onClickConnectStart: z, onClickConnectEnd: B, connectionClickStartHandle: F, connectionMode: L, isValidConnection: W, lib: U, rfId: Z, nodeLookup: Q, connection: ee } = b.getState();
    if (!x || !F && !o)
      return;
    if (!F) {
      z == null || z(D.nativeEvent, { nodeId: x, handleId: g, handleType: e }), b.setState({ connectionClickStartHandle: { nodeId: x, type: e, id: g } });
      return;
    }
    const te = X1(D.target), q = n || W, { connection: oe, isValid: K } = vp.isValid(D.nativeEvent, {
      handle: {
        nodeId: x,
        id: g,
        type: e
      },
      connectionMode: L,
      fromNodeId: F.nodeId,
      fromHandleId: F.id || null,
      fromType: F.type,
      isValidConnection: q,
      flowId: Z,
      doc: te,
      lib: U,
      nodeLookup: Q
    });
    K && oe && $(oe);
    const ne = structuredClone(ee);
    delete ne.inProgress, ne.toPosition = ne.toHandle ? ne.toHandle.position : null, B == null || B(D, ne), b.setState({ connectionClickStartHandle: null });
  };
  return N("div", { "data-handleid": g, "data-nodeid": x, "data-handlepos": t, "data-id": `${w}-${x}-${g}-${e}`, className: Xt([
    "react-flow__handle",
    `react-flow__handle-${t}`,
    "nodrag",
    v,
    u,
    {
      source: !m,
      target: m,
      connectable: r,
      connectablestart: o,
      connectableend: i,
      clickconnecting: C,
      connectingfrom: S,
      connectingto: T,
      valid: R,
      /*
       * shows where you can start a connection from
       * and where you can end it while connecting
       */
      connectionindicator: r && (!P || k) && (P || y ? i : o)
    }
  ]), onMouseDown: A, onTouchStart: A, onClick: E ? O : void 0, ref: h, ...p, children: c });
}
const Ra = we(wE(hH));
function mH({ data: e, isConnectable: t, sourcePosition: n = Ae.Bottom }) {
  return Se(qn, { children: [e == null ? void 0 : e.label, N(Ra, { type: "source", position: n, isConnectable: t })] });
}
function gH({ data: e, isConnectable: t, targetPosition: n = Ae.Top, sourcePosition: r = Ae.Bottom }) {
  return Se(qn, { children: [N(Ra, { type: "target", position: n, isConnectable: t }), e == null ? void 0 : e.label, N(Ra, { type: "source", position: r, isConnectable: t })] });
}
function yH() {
  return null;
}
function bH({ data: e, isConnectable: t, targetPosition: n = Ae.Top }) {
  return Se(qn, { children: [N(Ra, { type: "target", position: n, isConnectable: t }), e == null ? void 0 : e.label] });
}
const Vc = {
  ArrowUp: { x: 0, y: -1 },
  ArrowDown: { x: 0, y: 1 },
  ArrowLeft: { x: -1, y: 0 },
  ArrowRight: { x: 1, y: 0 }
}, w0 = {
  input: mH,
  default: gH,
  output: bH,
  group: yH
};
function vH(e) {
  var t, n, r, o;
  return e.internals.handleBounds === void 0 ? {
    width: e.width ?? e.initialWidth ?? ((t = e.style) == null ? void 0 : t.width),
    height: e.height ?? e.initialHeight ?? ((n = e.style) == null ? void 0 : n.height)
  } : {
    width: e.width ?? ((r = e.style) == null ? void 0 : r.width),
    height: e.height ?? ((o = e.style) == null ? void 0 : o.height)
  };
}
const xH = (e) => {
  const { width: t, height: n, x: r, y: o } = Qa(e.nodeLookup, {
    filter: (i) => !!i.selected
  });
  return {
    width: ur(t) ? t : null,
    height: ur(n) ? n : null,
    userSelectionActive: e.userSelectionActive,
    transformString: `translate(${e.transform[0]}px,${e.transform[1]}px) scale(${e.transform[2]}) translate(${r}px,${o}px)`
  };
};
function wH({ onSelectionContextMenu: e, noPanClassName: t, disableKeyboardA11y: n }) {
  const r = It(), { width: o, height: i, transformString: s, userSelectionActive: l } = Qe(xH, Vt), c = TE(), u = Ge(null);
  if (Ze(() => {
    var p;
    n || (p = u.current) == null || p.focus({
      preventScroll: !0
    });
  }, [n]), EE({
    nodeRef: u
  }), l || !o || !i)
    return null;
  const d = e ? (p) => {
    const h = r.getState().nodes.filter((g) => g.selected);
    e(p, h);
  } : void 0, f = (p) => {
    Object.prototype.hasOwnProperty.call(Vc, p.key) && (p.preventDefault(), c({
      direction: Vc[p.key],
      factor: p.shiftKey ? 4 : 1
    }));
  };
  return N("div", { className: Xt(["react-flow__nodesselection", "react-flow__container", t]), style: {
    transform: s
  }, children: N("div", { ref: u, className: "react-flow__nodesselection-rect", onContextMenu: d, tabIndex: n ? void 0 : -1, onKeyDown: n ? void 0 : f, style: {
    width: o,
    height: i
  } }) });
}
const S0 = typeof window < "u" ? window : void 0, SH = (e) => ({ nodesSelectionActive: e.nodesSelectionActive, userSelectionActive: e.userSelectionActive });
function OE({ children: e, onPaneClick: t, onPaneMouseEnter: n, onPaneMouseMove: r, onPaneMouseLeave: o, onPaneContextMenu: i, onPaneScroll: s, paneClickDistance: l, deleteKeyCode: c, selectionKeyCode: u, selectionOnDrag: d, selectionMode: f, onSelectionStart: p, onSelectionEnd: h, multiSelectionKeyCode: g, panActivationKeyCode: m, zoomActivationKeyCode: b, elementsSelectable: x, zoomOnScroll: E, zoomOnPinch: v, panOnScroll: w, panOnScrollSpeed: S, panOnScrollMode: T, zoomOnDoubleClick: C, panOnDrag: k, defaultViewport: P, translateExtent: y, minZoom: R, maxZoom: $, preventScrolling: A, onSelectionContextMenu: O, noWheelClassName: _, noPanClassName: I, disableKeyboardA11y: D, onViewportChange: z, isControlledViewport: B }) {
  const { nodesSelectionActive: F, userSelectionActive: L } = Qe(SH), W = Oa(u, { target: S0 }), U = Oa(m, { target: S0 }), Z = U || k, Q = U || w, ee = d && Z !== !0, te = W || L || ee;
  return nH({ deleteKeyCode: c, multiSelectionKeyCode: g }), N(iH, { onPaneContextMenu: i, elementsSelectable: x, zoomOnScroll: E, zoomOnPinch: v, panOnScroll: Q, panOnScrollSpeed: S, panOnScrollMode: T, zoomOnDoubleClick: C, panOnDrag: !W && Z, defaultViewport: P, translateExtent: y, minZoom: R, maxZoom: $, zoomActivationKeyCode: b, preventScrolling: A, noWheelClassName: _, noPanClassName: I, onViewportChange: z, isControlledViewport: B, paneClickDistance: l, children: Se(cH, { onSelectionStart: p, onSelectionEnd: h, onPaneClick: t, onPaneMouseEnter: n, onPaneMouseMove: r, onPaneMouseLeave: o, onPaneContextMenu: i, onPaneScroll: s, panOnDrag: Z, isSelecting: !!te, selectionMode: f, selectionKeyPressed: W, selectionOnDrag: ee, children: [e, F && N(wH, { onSelectionContextMenu: O, noPanClassName: I, disableKeyboardA11y: D })] }) });
}
OE.displayName = "FlowRenderer";
const EH = we(OE), TH = (e) => (t) => e ? H1(t.nodeLookup, { x: 0, y: 0, width: t.width, height: t.height }, t.transform, !0).map((n) => n.id) : Array.from(t.nodeLookup.keys());
function CH(e) {
  return Qe(Fe(TH(e), [e]), Vt);
}
const OH = (e) => e.updateNodeInternals;
function RH() {
  const e = Qe(OH), [t] = Jt(() => typeof ResizeObserver > "u" ? null : new ResizeObserver((n) => {
    const r = /* @__PURE__ */ new Map();
    n.forEach((o) => {
      const i = o.target.getAttribute("data-id");
      r.set(i, {
        id: i,
        nodeElement: o.target,
        force: !0
      });
    }), e(r);
  }));
  return Ze(() => () => {
    t == null || t.disconnect();
  }, [t]), t;
}
function kH({ node: e, nodeType: t, hasDimensions: n, resizeObserver: r }) {
  const o = It(), i = Ge(null), s = Ge(null), l = Ge(e.sourcePosition), c = Ge(e.targetPosition), u = Ge(t), d = n && !!e.internals.handleBounds;
  return Ze(() => {
    i.current && !e.hidden && (!d || s.current !== i.current) && (s.current && (r == null || r.unobserve(s.current)), r == null || r.observe(i.current), s.current = i.current);
  }, [d, e.hidden]), Ze(() => () => {
    s.current && (r == null || r.unobserve(s.current), s.current = null);
  }, []), Ze(() => {
    if (i.current) {
      const f = u.current !== t, p = l.current !== e.sourcePosition, h = c.current !== e.targetPosition;
      (f || p || h) && (u.current = t, l.current = e.sourcePosition, c.current = e.targetPosition, o.getState().updateNodeInternals(/* @__PURE__ */ new Map([[e.id, { id: e.id, nodeElement: i.current, force: !0 }]])));
    }
  }, [e.id, t, e.sourcePosition, e.targetPosition]), i;
}
function NH({ id: e, onClick: t, onMouseEnter: n, onMouseMove: r, onMouseLeave: o, onContextMenu: i, onDoubleClick: s, nodesDraggable: l, elementsSelectable: c, nodesConnectable: u, nodesFocusable: d, resizeObserver: f, noDragClassName: p, noPanClassName: h, disableKeyboardA11y: g, rfId: m, nodeTypes: b, nodeClickDistance: x, onError: E }) {
  const { node: v, internals: w, isParent: S } = Qe((te) => {
    const q = te.nodeLookup.get(e), oe = te.parentLookup.has(e);
    return {
      node: q,
      internals: q.internals,
      isParent: oe
    };
  }, Vt);
  let T = v.type || "default", C = (b == null ? void 0 : b[T]) || w0[T];
  C === void 0 && (E == null || E("003", vn.error003(T)), T = "default", C = w0.default);
  const k = !!(v.draggable || l && typeof v.draggable > "u"), P = !!(v.selectable || c && typeof v.selectable > "u"), y = !!(v.connectable || u && typeof v.connectable > "u"), R = !!(v.focusable || d && typeof v.focusable > "u"), $ = It(), A = G1(v), O = kH({ node: v, nodeType: T, hasDimensions: A, resizeObserver: f }), _ = EE({
    nodeRef: O,
    disabled: v.hidden || !k,
    noDragClassName: p,
    handleSelector: v.dragHandle,
    nodeId: e,
    isSelectable: P,
    nodeClickDistance: x
  }), I = TE();
  if (v.hidden)
    return null;
  const D = so(v), z = vH(v), B = P || k || t || n || r || o, F = n ? (te) => n(te, { ...w.userNode }) : void 0, L = r ? (te) => r(te, { ...w.userNode }) : void 0, W = o ? (te) => o(te, { ...w.userNode }) : void 0, U = i ? (te) => i(te, { ...w.userNode }) : void 0, Z = s ? (te) => s(te, { ...w.userNode }) : void 0, Q = (te) => {
    const { selectNodesOnDrag: q, nodeDragThreshold: oe } = $.getState();
    P && (!q || !k || oe > 0) && xp({
      id: e,
      store: $,
      nodeRef: O
    }), t && t(te, { ...w.userNode });
  }, ee = (te) => {
    if (!(Z1(te.nativeEvent) || g))
      if (L1.includes(te.key) && P) {
        const q = te.key === "Escape";
        xp({
          id: e,
          store: $,
          unselect: q,
          nodeRef: O
        });
      } else k && v.selected && Object.prototype.hasOwnProperty.call(Vc, te.key) && (te.preventDefault(), $.setState({
        ariaLiveMessage: `Moved selected node ${te.key.replace("Arrow", "").toLowerCase()}. New position, x: ${~~w.positionAbsolute.x}, y: ${~~w.positionAbsolute.y}`
      }), I({
        direction: Vc[te.key],
        factor: te.shiftKey ? 4 : 1
      }));
  };
  return N("div", { className: Xt([
    "react-flow__node",
    `react-flow__node-${T}`,
    {
      // this is overwritable by passing `nopan` as a class name
      [h]: k
    },
    v.className,
    {
      selected: v.selected,
      selectable: P,
      parent: S,
      draggable: k,
      dragging: _
    }
  ]), ref: O, style: {
    zIndex: w.z,
    transform: `translate(${w.positionAbsolute.x}px,${w.positionAbsolute.y}px)`,
    pointerEvents: B ? "all" : "none",
    visibility: A ? "visible" : "hidden",
    ...v.style,
    ...z
  }, "data-id": e, "data-testid": `rf__node-${e}`, onMouseEnter: F, onMouseMove: L, onMouseLeave: W, onContextMenu: U, onClick: Q, onDoubleClick: Z, onKeyDown: R ? ee : void 0, tabIndex: R ? 0 : void 0, role: R ? "button" : void 0, "aria-describedby": g ? void 0 : `${yE}-${m}`, "aria-label": v.ariaLabel, children: N(dH, { value: e, children: N(C, { id: e, data: v.data, type: T, positionAbsoluteX: w.positionAbsolute.x, positionAbsoluteY: w.positionAbsolute.y, selected: v.selected ?? !1, selectable: P, draggable: k, deletable: v.deletable ?? !0, isConnectable: y, sourcePosition: v.sourcePosition, targetPosition: v.targetPosition, dragging: _, dragHandle: v.dragHandle, zIndex: w.z, parentId: v.parentId, ...D }) }) });
}
const IH = (e) => ({
  nodesDraggable: e.nodesDraggable,
  nodesConnectable: e.nodesConnectable,
  nodesFocusable: e.nodesFocusable,
  elementsSelectable: e.elementsSelectable,
  onError: e.onError
});
function RE(e) {
  const { nodesDraggable: t, nodesConnectable: n, nodesFocusable: r, elementsSelectable: o, onError: i } = Qe(IH, Vt), s = CH(e.onlyRenderVisibleElements), l = RH();
  return N("div", { className: "react-flow__nodes", style: rd, children: s.map((c) => (
    /*
     * The split of responsibilities between NodeRenderer and
     * NodeComponentWrapper may appear weird. However, it’s designed to
     * minimize the cost of updates when individual nodes change.
     *
     * For example, when you’re dragging a single node, that node gets
     * updated multiple times per second. If `NodeRenderer` were to update
     * every time, it would have to re-run the `nodes.map()` loop every
     * time. This gets pricey with hundreds of nodes, especially if every
     * loop cycle does more than just rendering a JSX element!
     *
     * As a result of this choice, we took the following implementation
     * decisions:
     * - NodeRenderer subscribes *only* to node IDs – and therefore
     *   rerender *only* when visible nodes are added or removed.
     * - NodeRenderer performs all operations the result of which can be
     *   shared between nodes (such as creating the `ResizeObserver`
     *   instance, or subscribing to `selector`). This means extra prop
     *   drilling into `NodeComponentWrapper`, but it means we need to run
     *   these operations only once – instead of once per node.
     * - Any operations that you’d normally write inside `nodes.map` are
     *   moved into `NodeComponentWrapper`. This ensures they are
     *   memorized – so if `NodeRenderer` *has* to rerender, it only
     *   needs to regenerate the list of nodes, nothing else.
     */
    N(NH, { id: c, nodeTypes: e.nodeTypes, nodeExtent: e.nodeExtent, onClick: e.onNodeClick, onMouseEnter: e.onNodeMouseEnter, onMouseMove: e.onNodeMouseMove, onMouseLeave: e.onNodeMouseLeave, onContextMenu: e.onNodeContextMenu, onDoubleClick: e.onNodeDoubleClick, noDragClassName: e.noDragClassName, noPanClassName: e.noPanClassName, rfId: e.rfId, disableKeyboardA11y: e.disableKeyboardA11y, resizeObserver: l, nodesDraggable: t, nodesConnectable: n, nodesFocusable: r, elementsSelectable: o, nodeClickDistance: e.nodeClickDistance, onError: i }, c)
  )) });
}
RE.displayName = "NodeRenderer";
const $H = we(RE);
function PH(e) {
  return Qe(Fe((n) => {
    if (!e)
      return n.edges.map((o) => o.id);
    const r = [];
    if (n.width && n.height)
      for (const o of n.edges) {
        const i = n.nodeLookup.get(o.source), s = n.nodeLookup.get(o.target);
        i && s && $4({
          sourceNode: i,
          targetNode: s,
          width: n.width,
          height: n.height,
          transform: n.transform
        }) && r.push(o.id);
      }
    return r;
  }, [e]), Vt);
}
const _H = ({ color: e = "none", strokeWidth: t = 1 }) => N("polyline", { style: {
  stroke: e,
  strokeWidth: t
}, strokeLinecap: "round", strokeLinejoin: "round", fill: "none", points: "-5,-4 0,0 -5,4" }), MH = ({ color: e = "none", strokeWidth: t = 1 }) => N("polyline", { style: {
  stroke: e,
  fill: e,
  strokeWidth: t
}, strokeLinecap: "round", strokeLinejoin: "round", points: "-5,-4 0,0 -5,4 -5,-4" }), E0 = {
  [Gi.Arrow]: _H,
  [Gi.ArrowClosed]: MH
};
function AH(e) {
  const t = It();
  return ct(() => {
    var o, i;
    return Object.prototype.hasOwnProperty.call(E0, e) ? E0[e] : ((i = (o = t.getState()).onError) == null || i.call(o, "009", vn.error009(e)), null);
  }, [e]);
}
const DH = ({ id: e, type: t, color: n, width: r = 12.5, height: o = 12.5, markerUnits: i = "strokeWidth", strokeWidth: s, orient: l = "auto-start-reverse" }) => {
  const c = AH(t);
  return c ? N("marker", { className: "react-flow__arrowhead", id: e, markerWidth: `${r}`, markerHeight: `${o}`, viewBox: "-10 -10 20 20", markerUnits: i, orient: l, refX: "0", refY: "0", children: N(c, { color: n, strokeWidth: s }) }) : null;
}, kE = ({ defaultColor: e, rfId: t }) => {
  const n = Qe((i) => i.edges), r = Qe((i) => i.defaultEdgeOptions), o = ct(() => F4(n, {
    id: t,
    defaultColor: e,
    defaultMarkerStart: r == null ? void 0 : r.markerStart,
    defaultMarkerEnd: r == null ? void 0 : r.markerEnd
  }), [n, r, t, e]);
  return o.length ? N("svg", { className: "react-flow__marker", "aria-hidden": "true", children: N("defs", { children: o.map((i) => N(DH, { id: i.id, type: i.type, color: i.color, width: i.width, height: i.height, markerUnits: i.markerUnits, strokeWidth: i.strokeWidth, orient: i.orient }, i.id)) }) }) : null;
};
kE.displayName = "MarkerDefinitions";
var BH = we(kE);
function NE({ x: e, y: t, label: n, labelStyle: r, labelShowBg: o = !0, labelBgStyle: i, labelBgPadding: s = [2, 4], labelBgBorderRadius: l = 2, children: c, className: u, ...d }) {
  const [f, p] = Jt({ x: 1, y: 0, width: 0, height: 0 }), h = Xt(["react-flow__edge-textwrapper", u]), g = Ge(null);
  return Ze(() => {
    if (g.current) {
      const m = g.current.getBBox();
      p({
        x: m.x,
        y: m.y,
        width: m.width,
        height: m.height
      });
    }
  }, [n]), n ? Se("g", { transform: `translate(${e - f.width / 2} ${t - f.height / 2})`, className: h, visibility: f.width ? "visible" : "hidden", ...d, children: [o && N("rect", { width: f.width + 2 * s[0], x: -s[0], y: -s[1], height: f.height + 2 * s[1], className: "react-flow__edge-textbg", style: i, rx: l, ry: l }), N("text", { className: "react-flow__edge-text", y: f.height / 2, dy: "0.3em", ref: g, style: r, children: n }), c] }) : null;
}
NE.displayName = "EdgeText";
const FH = we(NE);
function tl({ path: e, labelX: t, labelY: n, label: r, labelStyle: o, labelShowBg: i, labelBgStyle: s, labelBgPadding: l, labelBgBorderRadius: c, interactionWidth: u = 20, ...d }) {
  return Se(qn, { children: [N("path", { ...d, d: e, fill: "none", className: Xt(["react-flow__edge-path", d.className]) }), u && N("path", { d: e, fill: "none", strokeOpacity: 0, strokeWidth: u, className: "react-flow__edge-interaction" }), r && ur(t) && ur(n) ? N(FH, { x: t, y: n, label: r, labelStyle: o, labelShowBg: i, labelBgStyle: s, labelBgPadding: l, labelBgBorderRadius: c }) : null] });
}
function T0({ pos: e, x1: t, y1: n, x2: r, y2: o }) {
  return e === Ae.Left || e === Ae.Right ? [0.5 * (t + r), n] : [t, 0.5 * (n + o)];
}
function IE({ sourceX: e, sourceY: t, sourcePosition: n = Ae.Bottom, targetX: r, targetY: o, targetPosition: i = Ae.Top }) {
  const [s, l] = T0({
    pos: n,
    x1: e,
    y1: t,
    x2: r,
    y2: o
  }), [c, u] = T0({
    pos: i,
    x1: r,
    y1: o,
    x2: e,
    y2: t
  }), [d, f, p, h] = J1({
    sourceX: e,
    sourceY: t,
    targetX: r,
    targetY: o,
    sourceControlX: s,
    sourceControlY: l,
    targetControlX: c,
    targetControlY: u
  });
  return [
    `M${e},${t} C${s},${l} ${c},${u} ${r},${o}`,
    d,
    f,
    p,
    h
  ];
}
function $E(e) {
  return we(({ id: t, sourceX: n, sourceY: r, targetX: o, targetY: i, sourcePosition: s, targetPosition: l, label: c, labelStyle: u, labelShowBg: d, labelBgStyle: f, labelBgPadding: p, labelBgBorderRadius: h, style: g, markerEnd: m, markerStart: b, interactionWidth: x }) => {
    const [E, v, w] = IE({
      sourceX: n,
      sourceY: r,
      sourcePosition: s,
      targetX: o,
      targetY: i,
      targetPosition: l
    }), S = e.isInternal ? void 0 : t;
    return N(tl, { id: S, path: E, labelX: v, labelY: w, label: c, labelStyle: u, labelShowBg: d, labelBgStyle: f, labelBgPadding: p, labelBgBorderRadius: h, style: g, markerEnd: m, markerStart: b, interactionWidth: x });
  });
}
const LH = $E({ isInternal: !1 }), PE = $E({ isInternal: !0 });
LH.displayName = "SimpleBezierEdge";
PE.displayName = "SimpleBezierEdgeInternal";
function _E(e) {
  return we(({ id: t, sourceX: n, sourceY: r, targetX: o, targetY: i, label: s, labelStyle: l, labelShowBg: c, labelBgStyle: u, labelBgPadding: d, labelBgBorderRadius: f, style: p, sourcePosition: h = Ae.Bottom, targetPosition: g = Ae.Top, markerEnd: m, markerStart: b, pathOptions: x, interactionWidth: E }) => {
    const [v, w, S] = gp({
      sourceX: n,
      sourceY: r,
      sourcePosition: h,
      targetX: o,
      targetY: i,
      targetPosition: g,
      borderRadius: x == null ? void 0 : x.borderRadius,
      offset: x == null ? void 0 : x.offset
    }), T = e.isInternal ? void 0 : t;
    return N(tl, { id: T, path: v, labelX: w, labelY: S, label: s, labelStyle: l, labelShowBg: c, labelBgStyle: u, labelBgPadding: d, labelBgBorderRadius: f, style: p, markerEnd: m, markerStart: b, interactionWidth: E });
  });
}
const ME = _E({ isInternal: !1 }), AE = _E({ isInternal: !0 });
ME.displayName = "SmoothStepEdge";
AE.displayName = "SmoothStepEdgeInternal";
function DE(e) {
  return we(({ id: t, ...n }) => {
    var o;
    const r = e.isInternal ? void 0 : t;
    return N(ME, { ...n, id: r, pathOptions: ct(() => {
      var i;
      return { borderRadius: 0, offset: (i = n.pathOptions) == null ? void 0 : i.offset };
    }, [(o = n.pathOptions) == null ? void 0 : o.offset]) });
  });
}
const zH = DE({ isInternal: !1 }), BE = DE({ isInternal: !0 });
zH.displayName = "StepEdge";
BE.displayName = "StepEdgeInternal";
function FE(e) {
  return we(({ id: t, sourceX: n, sourceY: r, targetX: o, targetY: i, label: s, labelStyle: l, labelShowBg: c, labelBgStyle: u, labelBgPadding: d, labelBgBorderRadius: f, style: p, markerEnd: h, markerStart: g, interactionWidth: m }) => {
    const [b, x, E] = rE({ sourceX: n, sourceY: r, targetX: o, targetY: i }), v = e.isInternal ? void 0 : t;
    return N(tl, { id: v, path: b, labelX: x, labelY: E, label: s, labelStyle: l, labelShowBg: c, labelBgStyle: u, labelBgPadding: d, labelBgBorderRadius: f, style: p, markerEnd: h, markerStart: g, interactionWidth: m });
  });
}
const VH = FE({ isInternal: !1 }), LE = FE({ isInternal: !0 });
VH.displayName = "StraightEdge";
LE.displayName = "StraightEdgeInternal";
function zE(e) {
  return we(({ id: t, sourceX: n, sourceY: r, targetX: o, targetY: i, sourcePosition: s = Ae.Bottom, targetPosition: l = Ae.Top, label: c, labelStyle: u, labelShowBg: d, labelBgStyle: f, labelBgPadding: p, labelBgBorderRadius: h, style: g, markerEnd: m, markerStart: b, pathOptions: x, interactionWidth: E }) => {
    const [v, w, S] = rm({
      sourceX: n,
      sourceY: r,
      sourcePosition: s,
      targetX: o,
      targetY: i,
      targetPosition: l,
      curvature: x == null ? void 0 : x.curvature
    }), T = e.isInternal ? void 0 : t;
    return N(tl, { id: T, path: v, labelX: w, labelY: S, label: c, labelStyle: u, labelShowBg: d, labelBgStyle: f, labelBgPadding: p, labelBgBorderRadius: h, style: g, markerEnd: m, markerStart: b, interactionWidth: E });
  });
}
const jH = zE({ isInternal: !1 }), VE = zE({ isInternal: !0 });
jH.displayName = "BezierEdge";
VE.displayName = "BezierEdgeInternal";
const C0 = {
  default: VE,
  straight: LE,
  step: BE,
  smoothstep: AE,
  simplebezier: PE
}, O0 = {
  sourceX: null,
  sourceY: null,
  targetX: null,
  targetY: null,
  sourcePosition: null,
  targetPosition: null
}, HH = (e, t, n) => n === Ae.Left ? e - t : n === Ae.Right ? e + t : e, WH = (e, t, n) => n === Ae.Top ? e - t : n === Ae.Bottom ? e + t : e, R0 = "react-flow__edgeupdater";
function k0({ position: e, centerX: t, centerY: n, radius: r = 10, onMouseDown: o, onMouseEnter: i, onMouseOut: s, type: l }) {
  return N("circle", { onMouseDown: o, onMouseEnter: i, onMouseOut: s, className: Xt([R0, `${R0}-${l}`]), cx: HH(t, r, e), cy: WH(n, r, e), r, stroke: "transparent", fill: "transparent" });
}
function UH({ isReconnectable: e, reconnectRadius: t, edge: n, sourceX: r, sourceY: o, targetX: i, targetY: s, sourcePosition: l, targetPosition: c, onReconnect: u, onReconnectStart: d, onReconnectEnd: f, setReconnecting: p, setUpdateHover: h }) {
  const g = It(), m = (w, S) => {
    if (w.button !== 0)
      return;
    const { autoPanOnConnect: T, domNode: C, isValidConnection: k, connectionMode: P, connectionRadius: y, lib: R, onConnectStart: $, onConnectEnd: A, cancelConnection: O, nodeLookup: _, rfId: I, panBy: D, updateConnection: z } = g.getState(), B = S.type === "target";
    p(!0), d == null || d(w, n, S.type);
    const F = (W, U) => {
      p(!1), f == null || f(W, n, S.type, U);
    }, L = (W) => u == null ? void 0 : u(n, W);
    vp.onPointerDown(w.nativeEvent, {
      autoPanOnConnect: T,
      connectionMode: P,
      connectionRadius: y,
      domNode: C,
      handleId: S.id,
      nodeId: S.nodeId,
      nodeLookup: _,
      isTarget: B,
      edgeUpdaterType: S.type,
      lib: R,
      flowId: I,
      cancelConnection: O,
      panBy: D,
      isValidConnection: k,
      onConnect: L,
      onConnectStart: $,
      onConnectEnd: A,
      onReconnectEnd: F,
      updateConnection: z,
      getTransform: () => g.getState().transform,
      getFromHandle: () => g.getState().connection.fromHandle
    });
  }, b = (w) => m(w, { nodeId: n.target, id: n.targetHandle ?? null, type: "target" }), x = (w) => m(w, { nodeId: n.source, id: n.sourceHandle ?? null, type: "source" }), E = () => h(!0), v = () => h(!1);
  return Se(qn, { children: [(e === !0 || e === "source") && N(k0, { position: l, centerX: r, centerY: o, radius: t, onMouseDown: b, onMouseEnter: E, onMouseOut: v, type: "source" }), (e === !0 || e === "target") && N(k0, { position: c, centerX: i, centerY: s, radius: t, onMouseDown: x, onMouseEnter: E, onMouseOut: v, type: "target" })] });
}
function qH({ id: e, edgesFocusable: t, edgesReconnectable: n, elementsSelectable: r, onClick: o, onDoubleClick: i, onContextMenu: s, onMouseEnter: l, onMouseMove: c, onMouseLeave: u, reconnectRadius: d, onReconnect: f, onReconnectStart: p, onReconnectEnd: h, rfId: g, edgeTypes: m, noPanClassName: b, onError: x, disableKeyboardA11y: E }) {
  let v = Qe((j) => j.edgeLookup.get(e));
  const w = Qe((j) => j.defaultEdgeOptions);
  v = w ? { ...w, ...v } : v;
  let S = v.type || "default", T = (m == null ? void 0 : m[S]) || C0[S];
  T === void 0 && (x == null || x("011", vn.error011(S)), S = "default", T = C0.default);
  const C = !!(v.focusable || t && typeof v.focusable > "u"), k = typeof f < "u" && (v.reconnectable || n && typeof v.reconnectable > "u"), P = !!(v.selectable || r && typeof v.selectable > "u"), y = Ge(null), [R, $] = Jt(!1), [A, O] = Jt(!1), _ = It(), { zIndex: I, sourceX: D, sourceY: z, targetX: B, targetY: F, sourcePosition: L, targetPosition: W } = Qe(Fe((j) => {
    const pe = j.nodeLookup.get(v.source), ce = j.nodeLookup.get(v.target);
    if (!pe || !ce)
      return {
        zIndex: v.zIndex,
        ...O0
      };
    const be = B4({
      id: e,
      sourceNode: pe,
      targetNode: ce,
      sourceHandle: v.sourceHandle || null,
      targetHandle: v.targetHandle || null,
      connectionMode: j.connectionMode,
      onError: x
    });
    return {
      zIndex: I4({
        selected: v.selected,
        zIndex: v.zIndex,
        sourceNode: pe,
        targetNode: ce,
        elevateOnSelect: j.elevateEdgesOnSelect
      }),
      ...be || O0
    };
  }, [v.source, v.target, v.sourceHandle, v.targetHandle, v.selected, v.zIndex]), Vt), U = ct(() => v.markerStart ? `url('#${yp(v.markerStart, g)}')` : void 0, [v.markerStart, g]), Z = ct(() => v.markerEnd ? `url('#${yp(v.markerEnd, g)}')` : void 0, [v.markerEnd, g]);
  if (v.hidden || D === null || z === null || B === null || F === null)
    return null;
  const Q = (j) => {
    var Ie;
    const { addSelectedEdges: pe, unselectNodesAndEdges: ce, multiSelectionActive: be } = _.getState();
    P && (_.setState({ nodesSelectionActive: !1 }), v.selected && be ? (ce({ nodes: [], edges: [v] }), (Ie = y.current) == null || Ie.blur()) : pe([e])), o && o(j, v);
  }, ee = i ? (j) => {
    i(j, { ...v });
  } : void 0, te = s ? (j) => {
    s(j, { ...v });
  } : void 0, q = l ? (j) => {
    l(j, { ...v });
  } : void 0, oe = c ? (j) => {
    c(j, { ...v });
  } : void 0, K = u ? (j) => {
    u(j, { ...v });
  } : void 0, ne = (j) => {
    var pe;
    if (!E && L1.includes(j.key) && P) {
      const { unselectNodesAndEdges: ce, addSelectedEdges: be } = _.getState();
      j.key === "Escape" ? ((pe = y.current) == null || pe.blur(), ce({ edges: [v] })) : be([e]);
    }
  };
  return N("svg", { style: { zIndex: I }, children: Se("g", { className: Xt([
    "react-flow__edge",
    `react-flow__edge-${S}`,
    v.className,
    b,
    {
      selected: v.selected,
      animated: v.animated,
      inactive: !P && !o,
      updating: R,
      selectable: P
    }
  ]), onClick: Q, onDoubleClick: ee, onContextMenu: te, onMouseEnter: q, onMouseMove: oe, onMouseLeave: K, onKeyDown: C ? ne : void 0, tabIndex: C ? 0 : void 0, role: C ? "button" : "img", "data-id": e, "data-testid": `rf__edge-${e}`, "aria-label": v.ariaLabel === null ? void 0 : v.ariaLabel || `Edge from ${v.source} to ${v.target}`, "aria-describedby": C ? `${bE}-${g}` : void 0, ref: y, children: [!A && N(T, { id: e, source: v.source, target: v.target, type: v.type, selected: v.selected, animated: v.animated, selectable: P, deletable: v.deletable ?? !0, label: v.label, labelStyle: v.labelStyle, labelShowBg: v.labelShowBg, labelBgStyle: v.labelBgStyle, labelBgPadding: v.labelBgPadding, labelBgBorderRadius: v.labelBgBorderRadius, sourceX: D, sourceY: z, targetX: B, targetY: F, sourcePosition: L, targetPosition: W, data: v.data, style: v.style, sourceHandleId: v.sourceHandle, targetHandleId: v.targetHandle, markerStart: U, markerEnd: Z, pathOptions: "pathOptions" in v ? v.pathOptions : void 0, interactionWidth: v.interactionWidth }), k && N(UH, { edge: v, isReconnectable: k, reconnectRadius: d, onReconnect: f, onReconnectStart: p, onReconnectEnd: h, sourceX: D, sourceY: z, targetX: B, targetY: F, sourcePosition: L, targetPosition: W, setUpdateHover: $, setReconnecting: O })] }) });
}
const YH = (e) => ({
  edgesFocusable: e.edgesFocusable,
  edgesReconnectable: e.edgesReconnectable,
  elementsSelectable: e.elementsSelectable,
  connectionMode: e.connectionMode,
  onError: e.onError
});
function jE({ defaultMarkerColor: e, onlyRenderVisibleElements: t, rfId: n, edgeTypes: r, noPanClassName: o, onReconnect: i, onEdgeContextMenu: s, onEdgeMouseEnter: l, onEdgeMouseMove: c, onEdgeMouseLeave: u, onEdgeClick: d, reconnectRadius: f, onEdgeDoubleClick: p, onReconnectStart: h, onReconnectEnd: g, disableKeyboardA11y: m }) {
  const { edgesFocusable: b, edgesReconnectable: x, elementsSelectable: E, onError: v } = Qe(YH, Vt), w = PH(t);
  return Se("div", { className: "react-flow__edges", children: [N(BH, { defaultColor: e, rfId: n }), w.map((S) => N(qH, { id: S, edgesFocusable: b, edgesReconnectable: x, elementsSelectable: E, noPanClassName: o, onReconnect: i, onContextMenu: s, onMouseEnter: l, onMouseMove: c, onMouseLeave: u, onClick: d, reconnectRadius: f, onDoubleClick: p, onReconnectStart: h, onReconnectEnd: g, rfId: n, onError: v, edgeTypes: r, disableKeyboardA11y: m }, S))] });
}
jE.displayName = "EdgeRenderer";
const GH = we(jE), KH = (e) => `translate(${e.transform[0]}px,${e.transform[1]}px) scale(${e.transform[2]})`;
function XH({ children: e }) {
  const t = Qe(KH);
  return N("div", { className: "react-flow__viewport xyflow__viewport react-flow__container", style: { transform: t }, children: e });
}
function ZH(e) {
  const t = nd(), n = Ge(!1);
  Ze(() => {
    !n.current && t.viewportInitialized && e && (setTimeout(() => e(t), 1), n.current = !0);
  }, [e, t.viewportInitialized]);
}
const QH = (e) => {
  var t;
  return (t = e.panZoom) == null ? void 0 : t.syncViewport;
};
function JH(e) {
  const t = Qe(QH), n = It();
  return Ze(() => {
    e && (t == null || t(e), n.setState({ transform: [e.x, e.y, e.zoom] }));
  }, [e, t]), null;
}
function e6(e) {
  return e.connection.inProgress ? { ...e.connection, to: Ja(e.connection.to, e.transform) } : { ...e.connection };
}
function t6(e) {
  return e6;
}
function n6(e) {
  const t = t6();
  return Qe(t, Vt);
}
const r6 = (e) => ({
  nodesConnectable: e.nodesConnectable,
  isValid: e.connection.isValid,
  inProgress: e.connection.inProgress,
  width: e.width,
  height: e.height
});
function o6({ containerStyle: e, style: t, type: n, component: r }) {
  const { nodesConnectable: o, width: i, height: s, isValid: l, inProgress: c } = Qe(r6, Vt);
  return !(i && o && c) ? null : N("svg", { style: e, width: i, height: s, className: "react-flow__connectionline react-flow__container", children: N("g", { className: Xt(["react-flow__connection", V1(l)]), children: N(HE, { style: t, type: n, CustomComponent: r, isValid: l }) }) });
}
const HE = ({ style: e, type: t = Ln.Bezier, CustomComponent: n, isValid: r }) => {
  const { inProgress: o, from: i, fromNode: s, fromHandle: l, fromPosition: c, to: u, toNode: d, toHandle: f, toPosition: p } = n6();
  if (!o)
    return;
  if (n)
    return N(n, { connectionLineType: t, connectionLineStyle: e, fromNode: s, fromHandle: l, fromX: i.x, fromY: i.y, toX: u.x, toY: u.y, fromPosition: c, toPosition: p, connectionStatus: V1(r), toNode: d, toHandle: f });
  let h = "";
  const g = {
    sourceX: i.x,
    sourceY: i.y,
    sourcePosition: c,
    targetX: u.x,
    targetY: u.y,
    targetPosition: p
  };
  switch (t) {
    case Ln.Bezier:
      [h] = rm(g);
      break;
    case Ln.SimpleBezier:
      [h] = IE(g);
      break;
    case Ln.Step:
      [h] = gp({
        ...g,
        borderRadius: 0
      });
      break;
    case Ln.SmoothStep:
      [h] = gp(g);
      break;
    default:
      [h] = rE(g);
  }
  return N("path", { d: h, fill: "none", className: "react-flow__connection-path", style: e });
};
HE.displayName = "ConnectionLine";
const i6 = {};
function N0(e = i6) {
  const t = Ge(e), n = It();
  Ze(() => {
    var r, o;
    if (process.env.NODE_ENV === "development") {
      const i = /* @__PURE__ */ new Set([...Object.keys(t.current), ...Object.keys(e)]);
      for (const s of i)
        if (t.current[s] !== e[s]) {
          (o = (r = n.getState()).onError) == null || o.call(r, "002", vn.error002());
          break;
        }
      t.current = e;
    }
  }, [e]);
}
function s6() {
  const e = It(), t = Ge(!1);
  Ze(() => {
    var n, r;
    if (process.env.NODE_ENV === "development" && !t.current) {
      const o = document.querySelector(".react-flow__pane");
      o && window.getComputedStyle(o).zIndex !== "1" && ((r = (n = e.getState()).onError) == null || r.call(n, "013", vn.error013("react"))), t.current = !0;
    }
  }, []);
}
function WE({ nodeTypes: e, edgeTypes: t, onInit: n, onNodeClick: r, onEdgeClick: o, onNodeDoubleClick: i, onEdgeDoubleClick: s, onNodeMouseEnter: l, onNodeMouseMove: c, onNodeMouseLeave: u, onNodeContextMenu: d, onSelectionContextMenu: f, onSelectionStart: p, onSelectionEnd: h, connectionLineType: g, connectionLineStyle: m, connectionLineComponent: b, connectionLineContainerStyle: x, selectionKeyCode: E, selectionOnDrag: v, selectionMode: w, multiSelectionKeyCode: S, panActivationKeyCode: T, zoomActivationKeyCode: C, deleteKeyCode: k, onlyRenderVisibleElements: P, elementsSelectable: y, defaultViewport: R, translateExtent: $, minZoom: A, maxZoom: O, preventScrolling: _, defaultMarkerColor: I, zoomOnScroll: D, zoomOnPinch: z, panOnScroll: B, panOnScrollSpeed: F, panOnScrollMode: L, zoomOnDoubleClick: W, panOnDrag: U, onPaneClick: Z, onPaneMouseEnter: Q, onPaneMouseMove: ee, onPaneMouseLeave: te, onPaneScroll: q, onPaneContextMenu: oe, paneClickDistance: K, nodeClickDistance: ne, onEdgeContextMenu: j, onEdgeMouseEnter: pe, onEdgeMouseMove: ce, onEdgeMouseLeave: be, reconnectRadius: Ie, onReconnect: _e, onReconnectStart: $e, onReconnectEnd: Ne, noDragClassName: Le, noWheelClassName: Re, noPanClassName: V, disableKeyboardA11y: J, nodeExtent: ie, rfId: X, viewport: H, onViewportChange: G }) {
  return N0(e), N0(t), s6(), ZH(n), JH(H), N(EH, { onPaneClick: Z, onPaneMouseEnter: Q, onPaneMouseMove: ee, onPaneMouseLeave: te, onPaneContextMenu: oe, onPaneScroll: q, paneClickDistance: K, deleteKeyCode: k, selectionKeyCode: E, selectionOnDrag: v, selectionMode: w, onSelectionStart: p, onSelectionEnd: h, multiSelectionKeyCode: S, panActivationKeyCode: T, zoomActivationKeyCode: C, elementsSelectable: y, zoomOnScroll: D, zoomOnPinch: z, zoomOnDoubleClick: W, panOnScroll: B, panOnScrollSpeed: F, panOnScrollMode: L, panOnDrag: U, defaultViewport: R, translateExtent: $, minZoom: A, maxZoom: O, onSelectionContextMenu: f, preventScrolling: _, noDragClassName: Le, noWheelClassName: Re, noPanClassName: V, disableKeyboardA11y: J, onViewportChange: G, isControlledViewport: !!H, children: Se(XH, { children: [N(GH, { edgeTypes: t, onEdgeClick: o, onEdgeDoubleClick: s, onReconnect: _e, onReconnectStart: $e, onReconnectEnd: Ne, onlyRenderVisibleElements: P, onEdgeContextMenu: j, onEdgeMouseEnter: pe, onEdgeMouseMove: ce, onEdgeMouseLeave: be, reconnectRadius: Ie, defaultMarkerColor: I, noPanClassName: V, disableKeyboardA11y: J, rfId: X }), N(o6, { style: m, type: g, component: b, containerStyle: x }), N("div", { className: "react-flow__edgelabel-renderer" }), N($H, { nodeTypes: e, onNodeClick: r, onNodeDoubleClick: i, onNodeMouseEnter: l, onNodeMouseMove: c, onNodeMouseLeave: u, onNodeContextMenu: d, nodeClickDistance: ne, onlyRenderVisibleElements: P, noPanClassName: V, noDragClassName: Le, disableKeyboardA11y: J, nodeExtent: ie, rfId: X }), N("div", { className: "react-flow__viewport-portal" })] }) });
}
WE.displayName = "GraphView";
const a6 = we(WE), I0 = ({ nodes: e, edges: t, defaultNodes: n, defaultEdges: r, width: o, height: i, fitView: s, fitViewOptions: l, minZoom: c = 0.5, maxZoom: u = 2, nodeOrigin: d, nodeExtent: f } = {}) => {
  const p = /* @__PURE__ */ new Map(), h = /* @__PURE__ */ new Map(), g = /* @__PURE__ */ new Map(), m = /* @__PURE__ */ new Map(), b = r ?? t ?? [], x = n ?? e ?? [], E = d ?? [0, 0], v = f ?? Sa;
  iE(g, m, b);
  const w = bp(x, p, h, {
    nodeOrigin: E,
    nodeExtent: v,
    elevateNodesOnSelect: !1
  });
  let S = [0, 0, 1];
  if (s && o && i) {
    const T = Qa(p, {
      filter: (y) => !!((y.width || y.initialWidth) && (y.height || y.initialHeight))
    }), { x: C, y: k, zoom: P } = tm(T, o, i, c, u, (l == null ? void 0 : l.padding) ?? 0.1);
    S = [C, k, P];
  }
  return {
    rfId: "1",
    width: 0,
    height: 0,
    transform: S,
    nodes: x,
    nodesInitialized: w,
    nodeLookup: p,
    parentLookup: h,
    edges: b,
    edgeLookup: m,
    connectionLookup: g,
    onNodesChange: null,
    onEdgesChange: null,
    hasDefaultNodes: n !== void 0,
    hasDefaultEdges: r !== void 0,
    panZoom: null,
    minZoom: c,
    maxZoom: u,
    translateExtent: Sa,
    nodeExtent: v,
    nodesSelectionActive: !1,
    userSelectionActive: !1,
    userSelectionRect: null,
    connectionMode: Yi.Strict,
    domNode: null,
    paneDragging: !1,
    noPanClassName: "nopan",
    nodeOrigin: E,
    nodeDragThreshold: 1,
    snapGrid: [15, 15],
    snapToGrid: !1,
    nodesDraggable: !0,
    nodesConnectable: !0,
    nodesFocusable: !0,
    edgesFocusable: !0,
    edgesReconnectable: !0,
    elementsSelectable: !0,
    elevateNodesOnSelect: !0,
    elevateEdgesOnSelect: !1,
    selectNodesOnDrag: !0,
    multiSelectionActive: !1,
    fitViewQueued: s ?? !1,
    fitViewOptions: l,
    fitViewResolver: null,
    connection: { ...z1 },
    connectionClickStartHandle: null,
    connectOnClick: !0,
    ariaLiveMessage: "",
    autoPanOnConnect: !0,
    autoPanOnNodeDrag: !0,
    autoPanSpeed: 15,
    connectionRadius: 20,
    onError: Fc,
    isValidConnection: void 0,
    onSelectionChangeHandlers: [],
    lib: "react",
    debug: !1
  };
}, l6 = ({ nodes: e, edges: t, defaultNodes: n, defaultEdges: r, width: o, height: i, fitView: s, fitViewOptions: l, minZoom: c, maxZoom: u, nodeOrigin: d, nodeExtent: f }) => O3((p, h) => {
  async function g() {
    const { nodeLookup: m, panZoom: b, fitViewOptions: x, fitViewResolver: E, width: v, height: w, minZoom: S, maxZoom: T } = h();
    b && (await T4({
      nodes: m,
      width: v,
      height: w,
      panZoom: b,
      minZoom: S,
      maxZoom: T
    }, x), E == null || E.resolve(!0), p({ fitViewResolver: null }));
  }
  return {
    ...I0({
      nodes: e,
      edges: t,
      width: o,
      height: i,
      fitView: s,
      fitViewOptions: l,
      minZoom: c,
      maxZoom: u,
      nodeOrigin: d,
      nodeExtent: f,
      defaultNodes: n,
      defaultEdges: r
    }),
    setNodes: (m) => {
      const { nodeLookup: b, parentLookup: x, nodeOrigin: E, elevateNodesOnSelect: v, fitViewQueued: w } = h(), S = bp(m, b, x, {
        nodeOrigin: E,
        nodeExtent: f,
        elevateNodesOnSelect: v,
        checkEquality: !0
      });
      w && S ? (g(), p({ nodes: m, nodesInitialized: S, fitViewQueued: !1, fitViewOptions: void 0 })) : p({ nodes: m, nodesInitialized: S });
    },
    setEdges: (m) => {
      const { connectionLookup: b, edgeLookup: x } = h();
      iE(b, x, m), p({ edges: m });
    },
    setDefaultNodesAndEdges: (m, b) => {
      if (m) {
        const { setNodes: x } = h();
        x(m), p({ hasDefaultNodes: !0 });
      }
      if (b) {
        const { setEdges: x } = h();
        x(b), p({ hasDefaultEdges: !0 });
      }
    },
    /*
     * Every node gets registerd at a ResizeObserver. Whenever a node
     * changes its dimensions, this function is called to measure the
     * new dimensions and update the nodes.
     */
    updateNodeInternals: (m) => {
      const { triggerNodeChanges: b, nodeLookup: x, parentLookup: E, domNode: v, nodeOrigin: w, nodeExtent: S, debug: T, fitViewQueued: C } = h(), { changes: k, updatedInternals: P } = H4(m, x, E, v, w, S);
      P && (z4(x, E, { nodeOrigin: w, nodeExtent: S }), C ? (g(), p({ fitViewQueued: !1, fitViewOptions: void 0 })) : p({}), (k == null ? void 0 : k.length) > 0 && (T && console.log("React Flow: trigger node changes", k), b == null || b(k)));
    },
    updateNodePositions: (m, b = !1) => {
      const x = [], E = [], { nodeLookup: v, triggerNodeChanges: w } = h();
      for (const [S, T] of m) {
        const C = v.get(S), k = !!(C != null && C.expandParent && (C != null && C.parentId) && (T != null && T.position)), P = {
          id: S,
          type: "position",
          position: k ? {
            x: Math.max(0, T.position.x),
            y: Math.max(0, T.position.y)
          } : T.position,
          dragging: b
        };
        k && C.parentId && x.push({
          id: S,
          parentId: C.parentId,
          rect: {
            ...T.internals.positionAbsolute,
            width: T.measured.width ?? 0,
            height: T.measured.height ?? 0
          }
        }), E.push(P);
      }
      if (x.length > 0) {
        const { parentLookup: S, nodeOrigin: T } = h(), C = am(x, v, S, T);
        E.push(...C);
      }
      w(E);
    },
    triggerNodeChanges: (m) => {
      const { onNodesChange: b, setNodes: x, nodes: E, hasDefaultNodes: v, debug: w } = h();
      if (m != null && m.length) {
        if (v) {
          const S = Y3(m, E);
          x(S);
        }
        w && console.log("React Flow: trigger node changes", m), b == null || b(m);
      }
    },
    triggerEdgeChanges: (m) => {
      const { onEdgesChange: b, setEdges: x, edges: E, hasDefaultEdges: v, debug: w } = h();
      if (m != null && m.length) {
        if (v) {
          const S = G3(m, E);
          x(S);
        }
        w && console.log("React Flow: trigger edge changes", m), b == null || b(m);
      }
    },
    addSelectedNodes: (m) => {
      const { multiSelectionActive: b, edgeLookup: x, nodeLookup: E, triggerNodeChanges: v, triggerEdgeChanges: w } = h();
      if (b) {
        const S = m.map((T) => zo(T, !0));
        v(S);
        return;
      }
      v(Ci(E, /* @__PURE__ */ new Set([...m]), !0)), w(Ci(x));
    },
    addSelectedEdges: (m) => {
      const { multiSelectionActive: b, edgeLookup: x, nodeLookup: E, triggerNodeChanges: v, triggerEdgeChanges: w } = h();
      if (b) {
        const S = m.map((T) => zo(T, !0));
        w(S);
        return;
      }
      w(Ci(x, /* @__PURE__ */ new Set([...m]))), v(Ci(E, /* @__PURE__ */ new Set(), !0));
    },
    unselectNodesAndEdges: ({ nodes: m, edges: b } = {}) => {
      const { edges: x, nodes: E, nodeLookup: v, triggerNodeChanges: w, triggerEdgeChanges: S } = h(), T = m || E, C = b || x, k = T.map((y) => {
        const R = v.get(y.id);
        return R && (R.selected = !1), zo(y.id, !1);
      }), P = C.map((y) => zo(y.id, !1));
      w(k), S(P);
    },
    setMinZoom: (m) => {
      const { panZoom: b, maxZoom: x } = h();
      b == null || b.setScaleExtent([m, x]), p({ minZoom: m });
    },
    setMaxZoom: (m) => {
      const { panZoom: b, minZoom: x } = h();
      b == null || b.setScaleExtent([x, m]), p({ maxZoom: m });
    },
    setTranslateExtent: (m) => {
      var b;
      (b = h().panZoom) == null || b.setTranslateExtent(m), p({ translateExtent: m });
    },
    setPaneClickDistance: (m) => {
      var b;
      (b = h().panZoom) == null || b.setClickDistance(m);
    },
    resetSelectedElements: () => {
      const { edges: m, nodes: b, triggerNodeChanges: x, triggerEdgeChanges: E, elementsSelectable: v } = h();
      if (!v)
        return;
      const w = b.reduce((T, C) => C.selected ? [...T, zo(C.id, !1)] : T, []), S = m.reduce((T, C) => C.selected ? [...T, zo(C.id, !1)] : T, []);
      x(w), E(S);
    },
    setNodeExtent: (m) => {
      const { nodes: b, nodeLookup: x, parentLookup: E, nodeOrigin: v, elevateNodesOnSelect: w, nodeExtent: S } = h();
      m[0][0] === S[0][0] && m[0][1] === S[0][1] && m[1][0] === S[1][0] && m[1][1] === S[1][1] || (bp(b, x, E, {
        nodeOrigin: v,
        nodeExtent: m,
        elevateNodesOnSelect: w,
        checkEquality: !1
      }), p({ nodeExtent: m }));
    },
    panBy: (m) => {
      const { transform: b, width: x, height: E, panZoom: v, translateExtent: w } = h();
      return W4({ delta: m, panZoom: v, transform: b, translateExtent: w, width: x, height: E });
    },
    cancelConnection: () => {
      p({
        connection: { ...z1 }
      });
    },
    updateConnection: (m) => {
      p({ connection: m });
    },
    reset: () => p({ ...I0() })
  };
}, Object.is);
function UE({ initialNodes: e, initialEdges: t, defaultNodes: n, defaultEdges: r, initialWidth: o, initialHeight: i, initialMinZoom: s, initialMaxZoom: l, initialFitViewOptions: c, fitView: u, nodeOrigin: d, nodeExtent: f, children: p }) {
  const [h] = Jt(() => l6({
    nodes: e,
    edges: t,
    defaultNodes: n,
    defaultEdges: r,
    width: o,
    height: i,
    fitView: u,
    minZoom: s,
    maxZoom: l,
    fitViewOptions: c,
    nodeOrigin: d,
    nodeExtent: f
  }));
  return N(R3, { value: h, children: N(Q3, { children: p }) });
}
function c6({ children: e, nodes: t, edges: n, defaultNodes: r, defaultEdges: o, width: i, height: s, fitView: l, fitViewOptions: c, minZoom: u, maxZoom: d, nodeOrigin: f, nodeExtent: p }) {
  return Qi(td) ? N(qn, { children: e }) : N(UE, { initialNodes: t, initialEdges: n, defaultNodes: r, defaultEdges: o, initialWidth: i, initialHeight: s, fitView: l, initialFitViewOptions: c, initialMinZoom: u, initialMaxZoom: d, nodeOrigin: f, nodeExtent: p, children: e });
}
const u6 = {
  width: "100%",
  height: "100%",
  overflow: "hidden",
  position: "relative",
  zIndex: 0
};
function d6({ nodes: e, edges: t, defaultNodes: n, defaultEdges: r, className: o, nodeTypes: i, edgeTypes: s, onNodeClick: l, onEdgeClick: c, onInit: u, onMove: d, onMoveStart: f, onMoveEnd: p, onConnect: h, onConnectStart: g, onConnectEnd: m, onClickConnectStart: b, onClickConnectEnd: x, onNodeMouseEnter: E, onNodeMouseMove: v, onNodeMouseLeave: w, onNodeContextMenu: S, onNodeDoubleClick: T, onNodeDragStart: C, onNodeDrag: k, onNodeDragStop: P, onNodesDelete: y, onEdgesDelete: R, onDelete: $, onSelectionChange: A, onSelectionDragStart: O, onSelectionDrag: _, onSelectionDragStop: I, onSelectionContextMenu: D, onSelectionStart: z, onSelectionEnd: B, onBeforeDelete: F, connectionMode: L, connectionLineType: W = Ln.Bezier, connectionLineStyle: U, connectionLineComponent: Z, connectionLineContainerStyle: Q, deleteKeyCode: ee = "Backspace", selectionKeyCode: te = "Shift", selectionOnDrag: q = !1, selectionMode: oe = Ea.Full, panActivationKeyCode: K = "Space", multiSelectionKeyCode: ne = zc() ? "Meta" : "Control", zoomActivationKeyCode: j = zc() ? "Meta" : "Control", snapToGrid: pe, snapGrid: ce, onlyRenderVisibleElements: be = !1, selectNodesOnDrag: Ie, nodesDraggable: _e, nodesConnectable: $e, nodesFocusable: Ne, nodeOrigin: Le = vE, edgesFocusable: Re, edgesReconnectable: V, elementsSelectable: J = !0, defaultViewport: ie = z3, minZoom: X = 0.5, maxZoom: H = 2, translateExtent: G = Sa, preventScrolling: re = !0, nodeExtent: he, defaultMarkerColor: me = "#b1b1b7", zoomOnScroll: le = !0, zoomOnPinch: se = !0, panOnScroll: ae = !1, panOnScrollSpeed: ge = 0.5, panOnScrollMode: Ce = Go.Free, zoomOnDoubleClick: ue = !0, panOnDrag: Te = !0, onPaneClick: Be, onPaneMouseEnter: We, onPaneMouseMove: Ke, onPaneMouseLeave: $t, onPaneScroll: ht, onPaneContextMenu: Pt, paneClickDistance: ze = 0, nodeClickDistance: ot = 0, children: xt, onReconnect: Pe, onReconnectStart: jt, onReconnectEnd: At, onEdgeContextMenu: wn, onEdgeDoubleClick: ii, onEdgeMouseEnter: Pn, onEdgeMouseMove: _n, onEdgeMouseLeave: nl, reconnectRadius: jr = 10, onNodesChange: dm, onEdgesChange: tT, noDragClassName: nT = "nodrag", noWheelClassName: rT = "nowheel", noPanClassName: fm = "nopan", fitView: pm, fitViewOptions: hm, connectOnClick: oT, attributionPosition: iT, proOptions: sT, defaultEdgeOptions: aT, elevateNodesOnSelect: lT, elevateEdgesOnSelect: cT, disableKeyboardA11y: mm = !1, autoPanOnConnect: uT, autoPanOnNodeDrag: dT, autoPanSpeed: fT, connectionRadius: pT, isValidConnection: hT, onError: mT, style: gT, id: gm, nodeDragThreshold: yT, viewport: bT, onViewportChange: vT, width: xT, height: wT, colorMode: ST = "light", debug: ET, onScroll: rl, ...TT }, CT) {
  const id = gm || "1", OT = W3(ST), RT = Fe((ym) => {
    ym.currentTarget.scrollTo({ top: 0, left: 0, behavior: "instant" }), rl == null || rl(ym);
  }, [rl]);
  return N("div", { "data-testid": "rf__wrapper", ...TT, onScroll: RT, style: { ...gT, ...u6 }, ref: CT, className: Xt(["react-flow", o, OT]), id: gm, children: Se(c6, { nodes: e, edges: t, width: xT, height: wT, fitView: pm, fitViewOptions: hm, minZoom: X, maxZoom: H, nodeOrigin: Le, nodeExtent: he, children: [N(a6, { onInit: u, onNodeClick: l, onEdgeClick: c, onNodeMouseEnter: E, onNodeMouseMove: v, onNodeMouseLeave: w, onNodeContextMenu: S, onNodeDoubleClick: T, nodeTypes: i, edgeTypes: s, connectionLineType: W, connectionLineStyle: U, connectionLineComponent: Z, connectionLineContainerStyle: Q, selectionKeyCode: te, selectionOnDrag: q, selectionMode: oe, deleteKeyCode: ee, multiSelectionKeyCode: ne, panActivationKeyCode: K, zoomActivationKeyCode: j, onlyRenderVisibleElements: be, defaultViewport: ie, translateExtent: G, minZoom: X, maxZoom: H, preventScrolling: re, zoomOnScroll: le, zoomOnPinch: se, zoomOnDoubleClick: ue, panOnScroll: ae, panOnScrollSpeed: ge, panOnScrollMode: Ce, panOnDrag: Te, onPaneClick: Be, onPaneMouseEnter: We, onPaneMouseMove: Ke, onPaneMouseLeave: $t, onPaneScroll: ht, onPaneContextMenu: Pt, paneClickDistance: ze, nodeClickDistance: ot, onSelectionContextMenu: D, onSelectionStart: z, onSelectionEnd: B, onReconnect: Pe, onReconnectStart: jt, onReconnectEnd: At, onEdgeContextMenu: wn, onEdgeDoubleClick: ii, onEdgeMouseEnter: Pn, onEdgeMouseMove: _n, onEdgeMouseLeave: nl, reconnectRadius: jr, defaultMarkerColor: me, noDragClassName: nT, noWheelClassName: rT, noPanClassName: fm, rfId: id, disableKeyboardA11y: mm, nodeExtent: he, viewport: bT, onViewportChange: vT }), N(H3, { nodes: e, edges: t, defaultNodes: n, defaultEdges: r, onConnect: h, onConnectStart: g, onConnectEnd: m, onClickConnectStart: b, onClickConnectEnd: x, nodesDraggable: _e, nodesConnectable: $e, nodesFocusable: Ne, edgesFocusable: Re, edgesReconnectable: V, elementsSelectable: J, elevateNodesOnSelect: lT, elevateEdgesOnSelect: cT, minZoom: X, maxZoom: H, nodeExtent: he, onNodesChange: dm, onEdgesChange: tT, snapToGrid: pe, snapGrid: ce, connectionMode: L, translateExtent: G, connectOnClick: oT, defaultEdgeOptions: aT, fitView: pm, fitViewOptions: hm, onNodesDelete: y, onEdgesDelete: R, onDelete: $, onNodeDragStart: C, onNodeDrag: k, onNodeDragStop: P, onSelectionDrag: _, onSelectionDragStart: O, onSelectionDragStop: I, onMove: d, onMoveStart: f, onMoveEnd: p, noPanClassName: fm, nodeOrigin: Le, rfId: id, autoPanOnConnect: uT, autoPanOnNodeDrag: dT, autoPanSpeed: fT, onError: mT, connectionRadius: pT, isValidConnection: hT, selectNodesOnDrag: Ie, nodeDragThreshold: yT, onBeforeDelete: F, paneClickDistance: ze, debug: ET }), N(L3, { onSelectionChange: A }), xt, N(M3, { proOptions: sT, position: iT }), N(P3, { rfId: id, disableKeyboardA11y: mm })] }) });
}
var f6 = wE(d6);
const p6 = (e) => {
  var t;
  return (t = e.domNode) == null ? void 0 : t.querySelector(".react-flow__edgelabel-renderer");
};
function h6({ children: e }) {
  const t = Qe(p6);
  return t ? PT(e, t) : null;
}
function m6({ dimensions: e, lineWidth: t, variant: n, className: r }) {
  return N("path", { strokeWidth: t, d: `M${e[0] / 2} 0 V${e[1]} M0 ${e[1] / 2} H${e[0]}`, className: Xt(["react-flow__background-pattern", n, r]) });
}
function g6({ radius: e, className: t }) {
  return N("circle", { cx: e, cy: e, r: e, className: Xt(["react-flow__background-pattern", "dots", t]) });
}
var bo;
(function(e) {
  e.Lines = "lines", e.Dots = "dots", e.Cross = "cross";
})(bo || (bo = {}));
const y6 = {
  [bo.Dots]: 1,
  [bo.Lines]: 1,
  [bo.Cross]: 6
}, b6 = (e) => ({ transform: e.transform, patternId: `pattern-${e.rfId}` });
function qE({
  id: e,
  variant: t = bo.Dots,
  // only used for dots and cross
  gap: n = 20,
  // only used for lines and cross
  size: r,
  lineWidth: o = 1,
  offset: i = 0,
  color: s,
  bgColor: l,
  style: c,
  className: u,
  patternClassName: d
}) {
  const f = Ge(null), { transform: p, patternId: h } = Qe(b6, Vt), g = r || y6[t], m = t === bo.Dots, b = t === bo.Cross, x = Array.isArray(n) ? n : [n, n], E = [x[0] * p[2] || 1, x[1] * p[2] || 1], v = g * p[2], w = Array.isArray(i) ? i : [i, i], S = b ? [v, v] : E, T = [
    w[0] * p[2] || 1 + S[0] / 2,
    w[1] * p[2] || 1 + S[1] / 2
  ], C = `${h}${e || ""}`;
  return Se("svg", { className: Xt(["react-flow__background", u]), style: {
    ...c,
    ...rd,
    "--xy-background-color-props": l,
    "--xy-background-pattern-color-props": s
  }, ref: f, "data-testid": "rf__background", children: [N("pattern", { id: C, x: p[0] % E[0], y: p[1] % E[1], width: E[0], height: E[1], patternUnits: "userSpaceOnUse", patternTransform: `translate(-${T[0]},-${T[1]})`, children: m ? N(g6, { radius: v / 2, className: d }) : N(m6, { dimensions: S, lineWidth: o, variant: t, className: d }) }), N("rect", { x: "0", y: "0", width: "100%", height: "100%", fill: `url(#${C})` })] });
}
qE.displayName = "Background";
we(qE);
function v6() {
  return N("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 32 32", children: N("path", { d: "M32 18.133H18.133V32h-4.266V18.133H0v-4.266h13.867V0h4.266v13.867H32z" }) });
}
function x6() {
  return N("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 32 5", children: N("path", { d: "M0 0h32v4.2H0z" }) });
}
function w6() {
  return N("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 32 30", children: N("path", { d: "M3.692 4.63c0-.53.4-.938.939-.938h5.215V0H4.708C2.13 0 0 2.054 0 4.63v5.216h3.692V4.631zM27.354 0h-5.2v3.692h5.17c.53 0 .984.4.984.939v5.215H32V4.631A4.624 4.624 0 0027.354 0zm.954 24.83c0 .532-.4.94-.939.94h-5.215v3.768h5.215c2.577 0 4.631-2.13 4.631-4.707v-5.139h-3.692v5.139zm-23.677.94c-.531 0-.939-.4-.939-.94v-5.138H0v5.139c0 2.577 2.13 4.707 4.708 4.707h5.138V25.77H4.631z" }) });
}
function S6() {
  return N("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 25 32", children: N("path", { d: "M21.333 10.667H19.81V7.619C19.81 3.429 16.38 0 12.19 0 8 0 4.571 3.429 4.571 7.619v3.048H3.048A3.056 3.056 0 000 13.714v15.238A3.056 3.056 0 003.048 32h18.285a3.056 3.056 0 003.048-3.048V13.714a3.056 3.056 0 00-3.048-3.047zM12.19 24.533a3.056 3.056 0 01-3.047-3.047 3.056 3.056 0 013.047-3.048 3.056 3.056 0 013.048 3.048 3.056 3.056 0 01-3.048 3.047zm4.724-13.866H7.467V7.619c0-2.59 2.133-4.724 4.723-4.724 2.591 0 4.724 2.133 4.724 4.724v3.048z" }) });
}
function E6() {
  return N("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 25 32", children: N("path", { d: "M21.333 10.667H19.81V7.619C19.81 3.429 16.38 0 12.19 0c-4.114 1.828-1.37 2.133.305 2.438 1.676.305 4.42 2.59 4.42 5.181v3.048H3.047A3.056 3.056 0 000 13.714v15.238A3.056 3.056 0 003.048 32h18.285a3.056 3.056 0 003.048-3.048V13.714a3.056 3.056 0 00-3.048-3.047zM12.19 24.533a3.056 3.056 0 01-3.047-3.047 3.056 3.056 0 013.047-3.048 3.056 3.056 0 013.048 3.048 3.056 3.056 0 01-3.048 3.047z" }) });
}
function Dl({ children: e, className: t, ...n }) {
  return N("button", { type: "button", className: Xt(["react-flow__controls-button", t]), ...n, children: e });
}
const T6 = (e) => ({
  isInteractive: e.nodesDraggable || e.nodesConnectable || e.elementsSelectable,
  minZoomReached: e.transform[2] <= e.minZoom,
  maxZoomReached: e.transform[2] >= e.maxZoom
});
function YE({ style: e, showZoom: t = !0, showFitView: n = !0, showInteractive: r = !0, fitViewOptions: o, onZoomIn: i, onZoomOut: s, onFitView: l, onInteractiveChange: c, className: u, children: d, position: f = "bottom-left", orientation: p = "vertical", "aria-label": h = "React Flow controls" }) {
  const g = It(), { isInteractive: m, minZoomReached: b, maxZoomReached: x } = Qe(T6, Vt), { zoomIn: E, zoomOut: v, fitView: w } = nd(), S = () => {
    E(), i == null || i();
  }, T = () => {
    v(), s == null || s();
  }, C = () => {
    w(o), l == null || l();
  }, k = () => {
    g.setState({
      nodesDraggable: !m,
      nodesConnectable: !m,
      elementsSelectable: !m
    }), c == null || c(!m);
  };
  return Se(el, { className: Xt(["react-flow__controls", p === "horizontal" ? "horizontal" : "vertical", u]), position: f, style: e, "data-testid": "rf__controls", "aria-label": h, children: [t && Se(qn, { children: [N(Dl, { onClick: S, className: "react-flow__controls-zoomin", title: "zoom in", "aria-label": "zoom in", disabled: x, children: N(v6, {}) }), N(Dl, { onClick: T, className: "react-flow__controls-zoomout", title: "zoom out", "aria-label": "zoom out", disabled: b, children: N(x6, {}) })] }), n && N(Dl, { className: "react-flow__controls-fitview", onClick: C, title: "fit view", "aria-label": "fit view", children: N(w6, {}) }), r && N(Dl, { className: "react-flow__controls-interactive", onClick: k, title: "toggle interactivity", "aria-label": "toggle interactivity", children: m ? N(E6, {}) : N(S6, {}) }), d] });
}
YE.displayName = "Controls";
we(YE);
function C6({ id: e, x: t, y: n, width: r, height: o, style: i, color: s, strokeColor: l, strokeWidth: c, className: u, borderRadius: d, shapeRendering: f, selected: p, onClick: h }) {
  const { background: g, backgroundColor: m } = i || {}, b = s || g || m;
  return N("rect", { className: Xt(["react-flow__minimap-node", { selected: p }, u]), x: t, y: n, rx: d, ry: d, width: r, height: o, style: {
    fill: b,
    stroke: l,
    strokeWidth: c
  }, shapeRendering: f, onClick: h ? (x) => h(x, e) : void 0 });
}
const O6 = we(C6), R6 = (e) => e.nodes.map((t) => t.id), uf = (e) => e instanceof Function ? e : () => e;
function k6({
  nodeStrokeColor: e,
  nodeColor: t,
  nodeClassName: n = "",
  nodeBorderRadius: r = 5,
  nodeStrokeWidth: o,
  /*
   * We need to rename the prop to be `CapitalCase` so that JSX will render it as
   * a component properly.
   */
  nodeComponent: i = O6,
  onClick: s
}) {
  const l = Qe(R6, Vt), c = uf(t), u = uf(e), d = uf(n), f = typeof window > "u" || window.chrome ? "crispEdges" : "geometricPrecision";
  return N(qn, { children: l.map((p) => (
    /*
     * The split of responsibilities between MiniMapNodes and
     * NodeComponentWrapper may appear weird. However, it’s designed to
     * minimize the cost of updates when individual nodes change.
     *
     * For more details, see a similar commit in `NodeRenderer/index.tsx`.
     */
    N(I6, { id: p, nodeColorFunc: c, nodeStrokeColorFunc: u, nodeClassNameFunc: d, nodeBorderRadius: r, nodeStrokeWidth: o, NodeComponent: i, onClick: s, shapeRendering: f }, p)
  )) });
}
function N6({ id: e, nodeColorFunc: t, nodeStrokeColorFunc: n, nodeClassNameFunc: r, nodeBorderRadius: o, nodeStrokeWidth: i, shapeRendering: s, NodeComponent: l, onClick: c }) {
  const { node: u, x: d, y: f, width: p, height: h } = Qe((g) => {
    const { internals: m } = g.nodeLookup.get(e), b = m.userNode, { x, y: E } = m.positionAbsolute, { width: v, height: w } = so(b);
    return {
      node: b,
      x,
      y: E,
      width: v,
      height: w
    };
  }, Vt);
  return !u || u.hidden || !G1(u) ? null : N(l, { x: d, y: f, width: p, height: h, style: u.style, selected: !!u.selected, className: r(u), color: t(u), borderRadius: o, strokeColor: n(u), strokeWidth: i, shapeRendering: s, onClick: c, id: u.id });
}
const I6 = we(N6);
var $6 = we(k6);
const P6 = 200, _6 = 150, M6 = (e) => !e.hidden, A6 = (e) => {
  const t = {
    x: -e.transform[0] / e.transform[2],
    y: -e.transform[1] / e.transform[2],
    width: e.width / e.transform[2],
    height: e.height / e.transform[2]
  };
  return {
    viewBB: t,
    boundingRect: e.nodeLookup.size > 0 ? Y1(Qa(e.nodeLookup, { filter: M6 }), t) : t,
    rfId: e.rfId,
    panZoom: e.panZoom,
    translateExtent: e.translateExtent,
    flowWidth: e.width,
    flowHeight: e.height
  };
}, D6 = "react-flow__minimap-desc";
function GE({
  style: e,
  className: t,
  nodeStrokeColor: n,
  nodeColor: r,
  nodeClassName: o = "",
  nodeBorderRadius: i = 5,
  nodeStrokeWidth: s,
  /*
   * We need to rename the prop to be `CapitalCase` so that JSX will render it as
   * a component properly.
   */
  nodeComponent: l,
  bgColor: c,
  maskColor: u,
  maskStrokeColor: d,
  maskStrokeWidth: f,
  position: p = "bottom-right",
  onClick: h,
  onNodeClick: g,
  pannable: m = !1,
  zoomable: b = !1,
  ariaLabel: x = "React Flow mini map",
  inversePan: E,
  zoomStep: v = 10,
  offsetScale: w = 5
}) {
  const S = It(), T = Ge(null), { boundingRect: C, viewBB: k, rfId: P, panZoom: y, translateExtent: R, flowWidth: $, flowHeight: A } = Qe(A6, Vt), O = (e == null ? void 0 : e.width) ?? P6, _ = (e == null ? void 0 : e.height) ?? _6, I = C.width / O, D = C.height / _, z = Math.max(I, D), B = z * O, F = z * _, L = w * z, W = C.x - (B - C.width) / 2 - L, U = C.y - (F - C.height) / 2 - L, Z = B + L * 2, Q = F + L * 2, ee = `${D6}-${P}`, te = Ge(0), q = Ge();
  te.current = z, Ze(() => {
    if (T.current && y)
      return q.current = Q4({
        domNode: T.current,
        panZoom: y,
        getTransform: () => S.getState().transform,
        getViewScale: () => te.current
      }), () => {
        var ne;
        (ne = q.current) == null || ne.destroy();
      };
  }, [y]), Ze(() => {
    var ne;
    (ne = q.current) == null || ne.update({
      translateExtent: R,
      width: $,
      height: A,
      inversePan: E,
      pannable: m,
      zoomStep: v,
      zoomable: b
    });
  }, [m, b, E, v, R, $, A]);
  const oe = h ? (ne) => {
    var ce;
    const [j, pe] = ((ce = q.current) == null ? void 0 : ce.pointer(ne)) || [0, 0];
    h(ne, { x: j, y: pe });
  } : void 0, K = g ? Fe((ne, j) => {
    const pe = S.getState().nodeLookup.get(j).internals.userNode;
    g(ne, pe);
  }, []) : void 0;
  return N(el, { position: p, style: {
    ...e,
    "--xy-minimap-background-color-props": typeof c == "string" ? c : void 0,
    "--xy-minimap-mask-background-color-props": typeof u == "string" ? u : void 0,
    "--xy-minimap-mask-stroke-color-props": typeof d == "string" ? d : void 0,
    "--xy-minimap-mask-stroke-width-props": typeof f == "number" ? f * z : void 0,
    "--xy-minimap-node-background-color-props": typeof r == "string" ? r : void 0,
    "--xy-minimap-node-stroke-color-props": typeof n == "string" ? n : void 0,
    "--xy-minimap-node-stroke-width-props": typeof s == "number" ? s : void 0
  }, className: Xt(["react-flow__minimap", t]), "data-testid": "rf__minimap", children: Se("svg", { width: O, height: _, viewBox: `${W} ${U} ${Z} ${Q}`, className: "react-flow__minimap-svg", role: "img", "aria-labelledby": ee, ref: T, onClick: oe, children: [x && N("title", { id: ee, children: x }), N($6, { onClick: K, nodeColor: r, nodeStrokeColor: n, nodeBorderRadius: i, nodeClassName: o, nodeStrokeWidth: s, nodeComponent: l }), N("path", { className: "react-flow__minimap-mask", d: `M${W - L},${U - L}h${Z + L * 2}v${Q + L * 2}h${-Z - L * 2}z
        M${k.x},${k.y}h${k.width}v${k.height}h${-k.width}z`, fillRule: "evenodd", pointerEvents: "none" })] }) });
}
GE.displayName = "MiniMap";
const B6 = we(GE);
function F6({ nodeId: e, position: t, variant: n = Qs.Handle, className: r, style: o = {}, children: i, color: s, minWidth: l = 10, minHeight: c = 10, maxWidth: u = Number.MAX_VALUE, maxHeight: d = Number.MAX_VALUE, keepAspectRatio: f = !1, resizeDirection: p, shouldResize: h, onResizeStart: g, onResize: m, onResizeEnd: b }) {
  const x = CE(), E = typeof e == "string" ? e : x, v = It(), w = Ge(null), S = n === Qs.Line ? "right" : "bottom-right", T = t ?? S, C = Ge(null);
  Ze(() => {
    if (!(!w.current || !E))
      return C.current || (C.current = p3({
        domNode: w.current,
        nodeId: E,
        getStoreItems: () => {
          const { nodeLookup: R, transform: $, snapGrid: A, snapToGrid: O, nodeOrigin: _, domNode: I } = v.getState();
          return {
            nodeLookup: R,
            transform: $,
            snapGrid: A,
            snapToGrid: O,
            nodeOrigin: _,
            paneDomNode: I
          };
        },
        onChange: (R, $) => {
          const { triggerNodeChanges: A, nodeLookup: O, parentLookup: _, nodeOrigin: I } = v.getState(), D = [], z = { x: R.x, y: R.y }, B = O.get(E);
          if (B && B.expandParent && B.parentId) {
            const F = B.origin ?? I, L = R.width ?? B.measured.width ?? 0, W = R.height ?? B.measured.height ?? 0, U = {
              id: B.id,
              parentId: B.parentId,
              rect: {
                width: L,
                height: W,
                ...K1({
                  x: R.x ?? B.position.x,
                  y: R.y ?? B.position.y
                }, { width: L, height: W }, B.parentId, O, F)
              }
            }, Z = am([U], O, _, I);
            D.push(...Z), z.x = R.x ? Math.max(F[0] * L, R.x) : void 0, z.y = R.y ? Math.max(F[1] * W, R.y) : void 0;
          }
          if (z.x !== void 0 && z.y !== void 0) {
            const F = {
              id: E,
              type: "position",
              position: { ...z }
            };
            D.push(F);
          }
          if (R.width !== void 0 && R.height !== void 0) {
            const L = {
              id: E,
              type: "dimensions",
              resizing: !0,
              setAttributes: p ? p === "horizontal" ? "width" : "height" : !0,
              dimensions: {
                width: R.width,
                height: R.height
              }
            };
            D.push(L);
          }
          for (const F of $) {
            const L = {
              ...F,
              type: "position"
            };
            D.push(L);
          }
          A(D);
        },
        onEnd: ({ width: R, height: $ }) => {
          const A = {
            id: E,
            type: "dimensions",
            resizing: !1,
            dimensions: {
              width: R,
              height: $
            }
          };
          v.getState().triggerNodeChanges([A]);
        }
      })), C.current.update({
        controlPosition: T,
        boundaries: {
          minWidth: l,
          minHeight: c,
          maxWidth: u,
          maxHeight: d
        },
        keepAspectRatio: f,
        resizeDirection: p,
        onResizeStart: g,
        onResize: m,
        onResizeEnd: b,
        shouldResize: h
      }), () => {
        var R;
        (R = C.current) == null || R.destroy();
      };
  }, [
    T,
    l,
    c,
    u,
    d,
    f,
    g,
    m,
    b,
    h
  ]);
  const k = T.split("-"), P = n === Qs.Line ? "borderColor" : "backgroundColor", y = s ? { ...o, [P]: s } : o;
  return N("div", { className: Xt(["react-flow__resize-control", "nodrag", ...k, n, r]), ref: w, style: y, children: i });
}
we(F6);
var jc = /* @__PURE__ */ ((e) => (e.Base = "Base", e.DeleteLabel = "DeleteLabel", e))(jc || {}), KE = ((e) => (e[e.Arrow = Gi.Arrow] = "Arrow", e[e.ArrowClosed = Gi.ArrowClosed] = "ArrowClosed", e))(KE || {}), XE = ((e) => (e[e.Bezier = Ln.Bezier] = "Bezier", e[e.SimpleBezier = Ln.SimpleBezier] = "SimpleBezier", e[e.Step = Ln.Step] = "Step", e[e.SmoothStep = Ln.SmoothStep] = "SmoothStep", e[e.Straight = Ln.Straight] = "Straight", e))(XE || {});
const ZE = fs()(
  Ga(
    (e) => ({
      logger: (t) => console.log(t),
      hotkeys: {
        enabled: !1,
        keys: {
          copy: "ctrl+c",
          paste: "ctrl+v",
          delete: "delete",
          undo: "ctrl+z",
          redo: "ctrl+y"
        }
      },
      canvas: {
        isGridLayout: !1,
        gridLayoutGap: [20, 20],
        minZoom: 0.5,
        maxZoom: 2,
        zoomDuration: 200,
        zoomStep: 1
      },
      styles: {
        nodeWidth: 250,
        nodeMinHeight: 100,
        nodeMaxHeight: "auto",
        edgeWidth: 2,
        edgeType: jc.Base,
        edgeEndMarkerType: KE.ArrowClosed,
        connectionLineType: XE.Bezier,
        connectionPosition: {
          source: "right",
          target: "left"
        }
      },
      minimap: {
        enabled: !0,
        position: "bottom-left"
      },
      undoRedo: {
        enabled: !0,
        maxHistoryLength: 10
      },
      setHotkeys: (t) => e((n) => ({ hotkeys: { ...n.hotkeys, ...t } })),
      setCanvas: (t) => e((n) => ({ canvas: { ...n.canvas, ...t } })),
      setStyles: (t) => e((n) => ({ styles: { ...n.styles, ...t } })),
      setMinimap: (t) => e((n) => ({ minimap: { ...n.minimap, ...t } })),
      setUndoRedo: (t) => e((n) => ({ undoRedo: { ...n.undoRedo, ...t } }))
    }),
    {
      name: "VENOMOUS_UI__WORKFLOW_CONFIGS",
      store: "VENOMOUS_UI__WORKFLOW_CONFIGS"
    }
  )
);
function L6() {
  return ZE.getState();
}
function ao() {
  return To(ZE);
}
function Ao() {
  return nd();
}
function z6() {
  const e = ao(), { zoomIn: t, zoomOut: n, zoomTo: r, getZoom: o, fitView: i, setCenter: s, setNodes: l, setEdges: c, updateNode: u } = Ao(), d = Fe(async () => {
    await t({ duration: e.canvas.zoomDuration });
  }, [t]), f = Fe(async () => {
    await n({ duration: e.canvas.zoomDuration });
  }, [n]), p = Fe(
    async (m, b = !0) => {
      await r(m, {
        duration: b ? 0 : e.canvas.zoomDuration
      });
    },
    [r]
  ), h = Fe(
    async (m = !0) => {
      await i({ duration: m ? 0 : e.canvas.zoomDuration });
    },
    [i, e]
  ), g = Fe(
    async (m, { x: b, y: x }) => {
      const E = o();
      await s(b + e.styles.nodeWidth / 2, x + e.styles.nodeMinHeight / 2, {
        duration: e.canvas.zoomDuration,
        zoom: E
      }), l((v) => v.map((w) => ({ ...w, selected: !1 }))), c((v) => v.map((w) => ({ ...w, selected: !1 }))), u(m, { selected: !0 });
    },
    [e, o, s, l, c, u]
  );
  return {
    increaseZoom: d,
    decreaseZoom: f,
    setZoom: p,
    moveToSpecificNode: g,
    autoView: h
  };
}
function V6(e, t, { signal: n, edges: r } = {}) {
  let o, i = null;
  const s = r != null && r.includes("leading"), l = r == null || r.includes("trailing"), c = () => {
    i !== null && (e.apply(o, i), o = void 0, i = null);
  }, u = () => {
    l && c(), h();
  };
  let d = null;
  const f = () => {
    d != null && clearTimeout(d), d = setTimeout(() => {
      d = null, u();
    }, t);
  }, p = () => {
    d !== null && (clearTimeout(d), d = null);
  }, h = () => {
    p(), o = void 0, i = null;
  }, g = () => {
    p(), c();
  }, m = function(...b) {
    if (n != null && n.aborted)
      return;
    o = this, i = b;
    const x = d == null;
    f(), s && x && c();
  };
  return m.schedule = f, m.cancel = h, m.flush = g, n == null || n.addEventListener("abort", h, { once: !0 }), m;
}
function j6() {
}
function $0(e) {
  return Object.getOwnPropertySymbols(e).filter((t) => Object.prototype.propertyIsEnumerable.call(e, t));
}
function P0(e) {
  return e == null ? e === void 0 ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(e);
}
const H6 = "[object RegExp]", W6 = "[object String]", U6 = "[object Number]", q6 = "[object Boolean]", _0 = "[object Arguments]", Y6 = "[object Symbol]", G6 = "[object Date]", K6 = "[object Map]", X6 = "[object Set]", Z6 = "[object Array]", Q6 = "[object Function]", J6 = "[object ArrayBuffer]", df = "[object Object]", eW = "[object Error]", tW = "[object DataView]", nW = "[object Uint8Array]", rW = "[object Uint8ClampedArray]", oW = "[object Uint16Array]", iW = "[object Uint32Array]", sW = "[object BigUint64Array]", aW = "[object Int8Array]", lW = "[object Int16Array]", cW = "[object Int32Array]", uW = "[object BigInt64Array]", dW = "[object Float32Array]", fW = "[object Float64Array]";
function M0(e) {
  if (!e || typeof e != "object")
    return !1;
  const t = Object.getPrototypeOf(e);
  return t === null || t === Object.prototype || Object.getPrototypeOf(t) === null ? Object.prototype.toString.call(e) === "[object Object]" : !1;
}
function pW(e, t) {
  return e === t || Number.isNaN(e) && Number.isNaN(t);
}
function hW(e, t, n) {
  return Ls(e, t, void 0, void 0, void 0, void 0, n);
}
function Ls(e, t, n, r, o, i, s) {
  const l = s(e, t, n, r, o, i);
  if (l !== void 0)
    return l;
  if (typeof e == typeof t)
    switch (typeof e) {
      case "bigint":
      case "string":
      case "boolean":
      case "symbol":
      case "undefined":
        return e === t;
      case "number":
        return e === t || Object.is(e, t);
      case "function":
        return e === t;
      case "object":
        return Js(e, t, i, s);
    }
  return Js(e, t, i, s);
}
function Js(e, t, n, r) {
  if (Object.is(e, t))
    return !0;
  let o = P0(e), i = P0(t);
  if (o === _0 && (o = df), i === _0 && (i = df), o !== i)
    return !1;
  switch (o) {
    case W6:
      return e.toString() === t.toString();
    case U6: {
      const c = e.valueOf(), u = t.valueOf();
      return pW(c, u);
    }
    case q6:
    case G6:
    case Y6:
      return Object.is(e.valueOf(), t.valueOf());
    case H6:
      return e.source === t.source && e.flags === t.flags;
    case Q6:
      return e === t;
  }
  n = n ?? /* @__PURE__ */ new Map();
  const s = n.get(e), l = n.get(t);
  if (s != null && l != null)
    return s === t;
  n.set(e, t), n.set(t, e);
  try {
    switch (o) {
      case K6: {
        if (e.size !== t.size)
          return !1;
        for (const [c, u] of e.entries())
          if (!t.has(c) || !Ls(u, t.get(c), c, e, t, n, r))
            return !1;
        return !0;
      }
      case X6: {
        if (e.size !== t.size)
          return !1;
        const c = Array.from(e.values()), u = Array.from(t.values());
        for (let d = 0; d < c.length; d++) {
          const f = c[d], p = u.findIndex((h) => Ls(f, h, void 0, e, t, n, r));
          if (p === -1)
            return !1;
          u.splice(p, 1);
        }
        return !0;
      }
      case Z6:
      case nW:
      case rW:
      case oW:
      case iW:
      case sW:
      case aW:
      case lW:
      case cW:
      case uW:
      case dW:
      case fW: {
        if (typeof Buffer < "u" && Buffer.isBuffer(e) !== Buffer.isBuffer(t) || e.length !== t.length)
          return !1;
        for (let c = 0; c < e.length; c++)
          if (!Ls(e[c], t[c], c, e, t, n, r))
            return !1;
        return !0;
      }
      case J6:
        return e.byteLength !== t.byteLength ? !1 : Js(new Uint8Array(e), new Uint8Array(t), n, r);
      case tW:
        return e.byteLength !== t.byteLength || e.byteOffset !== t.byteOffset ? !1 : Js(new Uint8Array(e), new Uint8Array(t), n, r);
      case eW:
        return e.name === t.name && e.message === t.message;
      case df: {
        if (!(Js(e.constructor, t.constructor, n, r) || M0(e) && M0(t)))
          return !1;
        const u = [...Object.keys(e), ...$0(e)], d = [...Object.keys(t), ...$0(t)];
        if (u.length !== d.length)
          return !1;
        for (let f = 0; f < u.length; f++) {
          const p = u[f], h = e[p];
          if (!Object.hasOwn(t, p))
            return !1;
          const g = t[p];
          if (!Ls(h, g, p, e, t, n, r))
            return !1;
        }
        return !0;
      }
      default:
        return !1;
    }
  } finally {
    n.delete(e), n.delete(t);
  }
}
function cm(e, t) {
  return hW(e, t, j6);
}
function mW(e, t) {
  return e.filter(
    (n) => n.source === t.source || n.target === t.target || n.sourceHandle === t.sourceHandle || n.targetHandle === t.targetHandle
  );
}
function gW(e, t) {
  return e.filter((n) => n.source === t.id || n.target === t.id);
}
var A0 = (e, t, n) => (o, i) => ({
  pastStates: (n == null ? void 0 : n.pastStates) || [],
  futureStates: (n == null ? void 0 : n.futureStates) || [],
  undo: (s = 1) => {
    var l, c;
    if (i().pastStates.length) {
      const u = ((l = n == null ? void 0 : n.partialize) == null ? void 0 : l.call(n, t())) || t(), d = i().pastStates.splice(-s, s), f = d.shift();
      e(f), o({
        pastStates: i().pastStates,
        futureStates: i().futureStates.concat(
          ((c = n == null ? void 0 : n.diff) == null ? void 0 : c.call(n, u, f)) || u,
          d.reverse()
        )
      });
    }
  },
  redo: (s = 1) => {
    var l, c;
    if (i().futureStates.length) {
      const u = ((l = n == null ? void 0 : n.partialize) == null ? void 0 : l.call(n, t())) || t(), d = i().futureStates.splice(-s, s), f = d.shift();
      e(f), o({
        pastStates: i().pastStates.concat(
          ((c = n == null ? void 0 : n.diff) == null ? void 0 : c.call(n, u, f)) || u,
          d.reverse()
        ),
        futureStates: i().futureStates
      });
    }
  },
  clear: () => o({ pastStates: [], futureStates: [] }),
  isTracking: !0,
  pause: () => o({ isTracking: !1 }),
  resume: () => o({ isTracking: !0 }),
  setOnSave: (s) => o({ _onSave: s }),
  // Internal properties
  _onSave: n == null ? void 0 : n.onSave,
  _handleSet: (s, l, c, u) => {
    var d, f;
    n != null && n.limit && i().pastStates.length >= (n == null ? void 0 : n.limit) && i().pastStates.shift(), (f = (d = i())._onSave) == null || f.call(d, s, c), o({
      pastStates: i().pastStates.concat(u || s),
      futureStates: []
    });
  }
}), yW = (e, t) => (r, o, i) => {
  var u, d;
  i.temporal = QS(
    ((u = t == null ? void 0 : t.wrapTemporal) == null ? void 0 : u.call(t, A0(r, o, t))) || A0(r, o, t)
  );
  const s = ((d = t == null ? void 0 : t.handleSet) == null ? void 0 : d.call(
    t,
    i.temporal.getState()._handleSet
  )) || i.temporal.getState()._handleSet, l = (f) => {
    var g, m, b;
    if (!i.temporal.getState().isTracking) return;
    const p = ((g = t == null ? void 0 : t.partialize) == null ? void 0 : g.call(t, o())) || o(), h = (m = t == null ? void 0 : t.diff) == null ? void 0 : m.call(t, f, p);
    // If the user has provided a diff function but nothing has been changed, deltaState will be null
    h === null || // If the user has provided an equality function, use it
    (b = t == null ? void 0 : t.equality) != null && b.call(t, f, p) || s(
      f,
      void 0,
      p,
      h
    );
  }, c = i.setState;
  return i.setState = (...f) => {
    var h;
    const p = ((h = t == null ? void 0 : t.partialize) == null ? void 0 : h.call(t, o())) || o();
    c(...f), l(p);
  }, e(
    // Modify the set function to call the userlandSet function
    (...f) => {
      var h;
      const p = ((h = t == null ? void 0 : t.partialize) == null ? void 0 : h.call(t, o())) || o();
      r(...f), l(p);
    },
    o,
    i
  );
}, En = /* @__PURE__ */ ((e) => (e.Init = "Init", e.Reset = "Reset", e.CanvasBlankClicked = "CanvasBlankClicked", e.SaveVersionChanged = "SaveVersionChanged", e.ElementsFileUploaded = "ElementsFileUploaded", e.ElementsFileDownloaded = "ElementsFileDownloaded", e.ElementsSelected = "ElementsSelected", e.ElementsDeleted = "ElementsDeleted", e.ElementsCopied = "ElementsCopied", e.ElementsPasted = "ElementsPasted", e.ElementsCut = "ElementsCut", e.NodeCreated = "NodeCreated", e.NodeDeleted = "NodeDeleted", e.NodesDeleted = "NodesDeleted", e.NodeMoved = "NodeMoved", e.NodeResized = "NodeResized", e.EdgeDeleted = "EdgeDeleted", e.EdgesDeleted = "EdgesDeleted", e.Connected = "Connected", e.ReConnected = "ReConnected", e))(En || {});
const D0 = {
  action: null,
  timestamp: Date.now(),
  elements: { nodes: [], edges: [] }
}, ka = fs()(
  yW(
    Ga(
      (e) => ({
        actionsHistory: D0,
        updateActionsHistory: (t) => e({ actionsHistory: t }),
        clearActionsHistory: () => e({
          actionsHistory: {
            ...D0,
            action: "Reset",
            timestamp: Date.now()
          }
        })
      }),
      {
        name: "VENOMOUS_UI__WORKFLOW_ACTIONS_HISTORY",
        store: "VENOMOUS_UI__WORKFLOW_ACTIONS_HISTORY"
      }
    ),
    {
      limit: L6().undoRedo.maxHistoryLength,
      pastStates: [],
      futureStates: [],
      equality: (e, t) => cm(e, t)
    }
  )
);
function bW() {
  const e = ka(), t = To(ka.temporal), n = ct(() => e.actionsHistory, [e.actionsHistory]), r = ct(
    () => t.pastStates.map(({ actionsHistory: i }) => ({ ...i })),
    [t.pastStates]
  ), o = ct(
    () => t.futureStates.map(({ actionsHistory: i }) => ({ ...i })),
    [t.pastStates]
  );
  return {
    currentStates: n,
    pastStates: r,
    futureStates: o
  };
}
function vW() {
  const e = To(ka), t = To(ka.temporal), n = Fe(() => t.undo(), [t.undo]), r = Fe(() => t.redo(), [t.redo]), o = t.pastStates.length > 0 && e.actionsHistory.action !== "Init", i = t.futureStates.length > 0;
  return {
    undo: n,
    redo: r,
    canUndo: o,
    canRedo: i
  };
}
function ps() {
  const { getNodes: e, getEdges: t } = Ao(), n = To(ka), r = Ge(
    V6((i) => {
      n.updateActionsHistory({
        action: i.action,
        timestamp: Date.now(),
        elements: {
          nodes: e().map((s) => ({
            ...s,
            selected: i.forceUnselected ? !1 : s.selected
          })),
          edges: t().map((s) => ({
            ...s,
            selected: i.forceUnselected ? !1 : s.selected
          }))
        }
      });
    }, 200)
  );
  return {
    updateActionsHistory: Fe((i) => {
      switch (i) {
        case "Init":
        case "Reset":
        case "CanvasBlankClicked":
        case "SaveVersionChanged":
        case "ElementsFileUploaded":
        case "ElementsFileDownloaded":
        case "ElementsSelected":
        case "ElementsDeleted":
        case "ElementsCopied":
        case "ElementsPasted":
        case "ElementsCut":
        case "NodeCreated":
        case "NodeDeleted":
        case "NodeResized":
        case "EdgeDeleted":
        case "Connected":
        case "ReConnected":
          r.current({ action: i, forceUnselected: !0 });
          break;
        case "NodeMoved":
          r.current({ action: i, forceUnselected: !1 });
          break;
      }
    }, [])
  };
}
function xW() {
  const e = ao(), { getNodes: t, getEdges: n, setEdges: r } = Ao(), { updateActionsHistory: o } = ps(), i = Ge(null), s = Fe(
    (u) => {
      const d = i.current;
      if (d && cm(d.connection, u))
        return d.result;
      const f = t(), p = n(), h = u, g = mW(p, h), m = wW(h, { nodes: f, edges: p }), b = !SW(h, g), x = m && b;
      return i.current = {
        connection: u,
        result: x
      }, x;
    },
    [e, t, n]
  ), l = Fe(
    (u) => {
      const d = n().filter(({ source: f, target: p, sourceHandle: h }) => {
        const g = p !== u.target, b = f === u.source && g;
        if (!u.sourceHandle)
          return b;
        const x = h === u.sourceHandle;
        return b && x;
      });
      if (!d.length) {
        r((f) => nE(u, f)), o(En.Connected);
        return;
      }
      if (!u.sourceHandle) {
        r(
          (f) => f.filter(
            (p) => p.source !== d[0].source || p.target !== d[0].target
          )
        ), o(En.ReConnected);
        return;
      }
      if (u.sourceHandle) {
        r((f) => (d.reduce((p, h) => (f = f.filter((g) => g.id !== h.id), f), f), f)), o(En.ReConnected);
        return;
      }
    },
    [r, o]
  ), c = Fe((u, d) => {
    d.isValid && i.current && (i.current = {
      ...i.current,
      result: !1
    });
  }, []);
  return {
    isValidConnection: s,
    onConnect: l,
    onConnectEnd: c
  };
}
function wW(e, { nodes: t, edges: n }) {
  function r(i, s = /* @__PURE__ */ new Set()) {
    if (!i || s.has(i.id)) return !1;
    s.add(i == null ? void 0 : i.id);
    for (const l of x4(i, t, n))
      if (l.id === e.source || r(l, s)) return !0;
  }
  const o = t.find((i) => i.id === e.target);
  return (o == null ? void 0 : o.id) === e.source ? !1 : !r(o);
}
function SW(e, t) {
  const { source: n, sourceHandle: r, target: o, targetHandle: i } = e;
  return t.find((l) => {
    const c = !!n && !r, u = !!n && !!r, d = !!o && !i, f = !!o && !!i;
    return c && d ? l.source === e.source && l.target === e.target : c && f ? l.source === e.source && l.targetHandle === e.targetHandle : u && d ? l.sourceHandle === e.sourceHandle && l.target === e.target : u && f ? l.sourceHandle === e.sourceHandle && l.targetHandle === e.targetHandle : !1;
  }) ?? null;
}
function EW() {
  const { setEdges: e } = Ao(), { updateActionsHistory: t } = ps(), n = Ge(!0), r = Fe(() => {
    n.current = !1;
  }, []), o = Fe((s, l) => {
    n.current = !0, e((c) => _4(s, l, c));
  }, []), i = Fe(
    (s, l) => {
      n.current || (e((c) => c.filter((u) => u.id !== l.id)), t(En.ReConnected)), n.current = !0;
    },
    [t]
  );
  return {
    onReconnect: o,
    onReconnectStart: r,
    onReconnectEnd: i
  };
}
function TW() {
  const { getNodes: e, getEdges: t, setNodes: n, setEdges: r } = Ao(), { updateActionsHistory: o } = ps(), i = Fe(
    (d) => {
      r((f) => f.filter((p) => p.id !== d)), o(En.EdgeDeleted);
    },
    [r, o]
  ), s = Fe(() => {
    n((d) => d.filter((f) => !f.selected));
  }, [n]), l = Fe(() => {
    r((d) => d.filter((f) => !f.selected));
  }, [r]), c = Fe(() => {
    const d = e().filter((p) => p.selected), f = [];
    d.forEach((p) => {
      const h = gW(t(), p);
      f.push(...h);
    }), r((p) => p.filter((h) => !f.find((g) => g.id === h.id)));
  }, [t, e, r]), u = Fe(() => {
    const d = e().filter((g) => g.selected), f = t().filter((g) => g.selected), p = d.length > 0, h = f.length > 0;
    if (!(!p && !h)) {
      if (p && (s(), c()), h && l(), p && !h) {
        o(
          d.length === 1 ? En.NodeDeleted : En.NodesDeleted
        );
        return;
      }
      if (h && !p) {
        o(
          f.length === 1 ? En.EdgeDeleted : En.EdgesDeleted
        );
        return;
      }
      if (p && h) {
        o(En.ElementsDeleted);
        return;
      }
    }
  }, [
    e,
    t,
    s,
    l,
    c,
    o
  ]);
  return { deleteEdge: i, deleteSelectedElements: u };
}
function CW() {
  const { getNodes: e, setNodes: t, screenToFlowPosition: n } = Ao(), { updateActionsHistory: r } = ps(), o = Fe((s) => {
    s.preventDefault(), s.dataTransfer.dropEffect = "move";
  }, []), i = Fe(
    (s) => {
      const l = OW(e()), c = {
        id: (l ? parseInt(l.id) + 1 : 1).toString(),
        type: "",
        position: n({ x: s.clientX, y: s.clientY }),
        data: {
          isFocus: !1,
          isInValid: !1,
          isMultipleSourceHandler: !1,
          isMultipleTargetHandler: !1,
          isProtected: !1,
          formValue: {}
        }
      };
      t((u) => u.concat(c)), r(En.NodeCreated);
    },
    [e, t, n, r]
  );
  return {
    onDragOver: o,
    onDrop: i
  };
}
function OW(e) {
  try {
    const t = e.sort((n, r) => {
      const o = parseInt(n.id, 10), i = parseInt(r.id, 10);
      return o - i;
    });
    return (t == null ? void 0 : t[0]) || null;
  } catch {
    return null;
  }
}
function RW() {
  const { updateActionsHistory: e } = ps(), t = Ge({ x: 0, y: 0 }), n = Fe((o, i) => {
    t.current = {
      x: i.position.x,
      y: i.position.y
    };
  }, []), r = Fe(
    (o, i) => {
      const { x: s, y: l } = t.current;
      s === i.position.x && l === i.position.y || s !== 0 && l !== 0 && e(En.NodeMoved);
    },
    [e]
  );
  return {
    onNodeMoveStart: n,
    onNodeMoveStop: r
  };
}
function JW() {
  const { updateNodeData: e } = Ao(), t = Fe(
    (r, o) => {
      e(r, o);
    },
    [e]
  ), n = Fe(
    (r, o) => {
      t(r, { formValue: o });
    },
    [t]
  );
  return {
    updateSpecificNodeData: t,
    updateSpecificNodeFormValue: n
  };
}
const kW = fs()(
  Ga(
    (e) => ({
      nodes: [],
      edges: [],
      setNodes: (t) => e({ nodes: t }),
      setEdges: (t) => e({ edges: t })
    }),
    {
      name: "VENOMOUS_UI__WORKFLOW_ORIGINAL_ELEMENTS",
      store: "VENOMOUS_UI__WORKFLOW_ORIGINAL_ELEMENTS"
    }
  )
);
function NW() {
  return To(kW);
}
function IW({
  originalElements: e,
  configs: t
}) {
  const { setHotkeys: n, setCanvas: r, setStyles: o, setMinimap: i, setUndoRedo: s } = ao(), { setNodes: l, setEdges: c } = NW(), { updateActionsHistory: u } = ps();
  F0(() => {
    e && (l(e.nodes), c(e.edges));
  }, [e, l, c]);
  const d = Fe(() => {
    u(En.Init);
  }, [u]), f = Ge(null);
  return Ze(() => {
    const p = t;
    p && !cm(p, f.current) && (p.hotkeys && n(p.hotkeys), p.canvas && r(p.canvas), p.styles && o(p.styles), p.minimap && i(p.minimap), p.undoRedo && s(p.undoRedo), f.current = p);
  }, [t, n, r, o, i, s]), {
    onFinishedInit: d
  };
}
const um = we(({ renderChildren: e, ...t }) => {
  const n = ao(), {
    id: r,
    data: o,
    sourceX: i,
    sourceY: s,
    targetX: l,
    targetY: c,
    sourcePosition: u,
    targetPosition: d,
    markerEnd: f,
    style: p
  } = t, [h, g, m, b, x] = rm({
    sourceX: i,
    sourceY: s,
    sourcePosition: u,
    targetX: l,
    targetY: c,
    targetPosition: d
  });
  return /* @__PURE__ */ Se(qn, { children: [
    /* @__PURE__ */ N(
      tl,
      {
        id: r,
        path: h,
        className: "VenomousUI-WorkflowBaseEdge",
        style: {
          ...p,
          strokeWidth: n.styles.edgeWidth
        },
        markerEnd: f
      }
    ),
    (o == null ? void 0 : o.animated) && /* @__PURE__ */ N("circle", { r: n.styles.edgeWidth * 2, fill: "#ff0073", children: /* @__PURE__ */ N("animateMotion", { dur: "2s", repeatCount: "indefinite", path: h }) }),
    e == null ? void 0 : e({
      ...t,
      edgePath: h,
      edgePathLabelX: g,
      edgePathLabelY: m,
      edgePathOffsetX: b,
      edgePathOffsetY: x
    })
  ] });
});
um.displayName = "WorkflowBaseEdge";
const QE = we((e) => {
  const { id: t, selected: n } = e, { deleteEdge: r } = TW(), o = Fe(() => r(t), [t, r]);
  return /* @__PURE__ */ N(
    um,
    {
      ...e,
      renderChildren: ({ edgePathLabelX: i, edgePathLabelY: s }) => /* @__PURE__ */ N(h6, { children: /* @__PURE__ */ N(
        "div",
        {
          style: {
            position: "absolute",
            pointerEvents: "all",
            transformOrigin: "center",
            transform: `translate(-50%, -50%) translate(${i}px,${s}px)`,
            display: n ? "flex" : "none"
          },
          children: /* @__PURE__ */ N(
            $n,
            {
              isCircle: !0,
              isGhost: !0,
              icon: "solar:close-circle-linear",
              color: "error",
              onClick: o,
              sx: {
                "& svg": {
                  borderRadius: "50%",
                  backgroundColor: ({ palette: l }) => l.background.paper
                }
              }
            }
          )
        }
      ) })
    }
  );
});
QE.displayName = "WorkflowDeleteLabelEdge";
const $W = {
  [jc.Base]: um,
  [jc.DeleteLabel]: QE
}, PW = L0(
  () => import("./index-BC_-XGIn.js").then((e) => ({ default: e.WorkflowMiniMap }))
), _W = L0(
  () => import("./index-BC_-XGIn.js").then((e) => ({ default: e.WorkflowUndoRedo }))
), MW = we(
  ({ children: e, sx: t, originalElements: n, configs: r, ...o }) => {
    var E, v, w;
    const { themeMode: i } = Uu(), s = ao(), { onFinishedInit: l } = IW({
      originalElements: n,
      configs: r
    }), { onDrop: c, onDragOver: u } = CW(), { onNodeMoveStart: d, onNodeMoveStop: f } = RW(), { isValidConnection: p, onConnect: h, onConnectEnd: g } = xW(), { onReconnect: m, onReconnectStart: b, onReconnectEnd: x } = EW();
    return /* @__PURE__ */ N(wo, { isOutlined: !0, sx: { overflow: "hidden", ...t }, children: /* @__PURE__ */ Se(
      f6,
      {
        className: "VenomousUI-WorkflowPlayground",
        style: { width: "100%", height: "100%" },
        proOptions: { hideAttribution: !0 },
        colorMode: i,
        onlyRenderVisibleElements: !0,
        connectionLineType: s.styles.connectionLineType,
        connectionLineStyle: { strokeWidth: s.styles.edgeWidth },
        defaultEdgeOptions: {
          type: s.styles.edgeType,
          /** Edge 的种类 */
          markerEnd: { type: s.styles.edgeEndMarkerType }
          /** Edge 结束的标记 */
          // eslint-disable-line @typescript-eslint/no-explicit-any 
        },
        defaultNodes: n.nodes,
        defaultEdges: n.edges,
        elementsSelectable: !0,
        nodesConnectable: !0,
        nodesDraggable: !0,
        panOnDrag: !0,
        panOnScroll: !1,
        zoomOnScroll: !0,
        zoomOnPinch: !0,
        nodesFocusable: !1,
        edgesFocusable: !1,
        nodeDragThreshold: 5,
        connectionRadius: ((E = s == null ? void 0 : s.styles) == null ? void 0 : E.nodeWidth) / 4,
        nodeTypes: o.nodeTypes,
        edgeTypes: o.edgeTypes || $W,
        snapToGrid: (v = s == null ? void 0 : s.canvas) == null ? void 0 : v.isGridLayout,
        snapGrid: (w = s == null ? void 0 : s.canvas) == null ? void 0 : w.gridLayoutGap,
        ...o,
        onInit: l,
        isValidConnection: p,
        onConnect: h,
        onConnectEnd: g,
        onReconnectStart: b,
        onReconnect: m,
        onReconnectEnd: x,
        onDragOver: u,
        onDrop: c,
        onNodeDragStart: d,
        onNodeDragStop: f,
        deleteKeyCode: null,
        children: [
          e,
          /* @__PURE__ */ N(bm, { children: s.minimap.enabled && /* @__PURE__ */ N(PW, {}) }),
          /* @__PURE__ */ N(bm, { children: s.undoRedo.enabled && /* @__PURE__ */ N(_W, {}) })
        ]
      }
    ) });
  }
);
MW.displayName = "WorkflowPlayground";
const AW = we(({ children: e }) => /* @__PURE__ */ N(UE, { children: e }));
AW.displayName = "WorkflowWrapper";
const DW = we(() => /* @__PURE__ */ N(qn, {}));
DW.displayName = "WorkflowDevtool";
const BW = we(() => {
  var i, s;
  const { themePalette: e } = qh(), { moveToSpecificNode: t } = z6(), n = ao(), r = Fe(
    (l) => {
      var u, d, f;
      const c = ((d = (u = n.styles) == null ? void 0 : u.nodeColors) == null ? void 0 : d[l.type]) || e.main;
      return l.selected || (f = l.data) != null && f.isFocus ? c : "transparent";
    },
    [e]
  ), o = Fe(
    (l) => {
      var c;
      return (c = l.data) != null && c.isInValid ? e.error : "#e2e2e2";
    },
    [e]
  );
  return /* @__PURE__ */ N(
    B6,
    {
      className: "VenomousUI-WorkflowMiniMap",
      position: (i = n.minimap) == null ? void 0 : i.position,
      nodeStrokeWidth: 16,
      nodeStrokeColor: r,
      nodeColor: o,
      nodeBorderRadius: 16,
      onNodeClick: (l, c) => {
        l.stopPropagation(), t(c.id, c.position);
      },
      pannable: !0,
      zoomable: !0,
      zoomStep: (s = n.canvas) == null ? void 0 : s.zoomStep
    }
  );
});
BW.displayName = "WorkflowMiniMap";
const FW = we(() => {
  const { setNodes: e, setEdges: t } = Ao(), { undo: n, redo: r, canUndo: o, canRedo: i } = vW(), { currentStates: s } = bW();
  return Ze(() => {
    s.action !== null && (e(s.elements.nodes), t(s.elements.edges));
  }, [e, t, s]), /* @__PURE__ */ Se(el, { children: [
    /* @__PURE__ */ N($n, { icon: "mdi:undo", disabled: !o, onClick: n }),
    /* @__PURE__ */ N($n, { icon: "mdi:redo", disabled: !i, onClick: r })
  ] });
});
FW.displayName = "WorkflowUndoRedo";
const LW = {
  borderWidth: "6px",
  borderRadius: "50%",
  borderColor: "#BDBDBD",
  cursor: "cell",
  zIndex: 2
}, od = we(
  ({ id: e, handlerType: t = "source", style: n, onConnect: r }) => {
    const i = ao().styles.connectionPosition[t], s = ct(() => {
      switch (i) {
        case "left":
          return Ae.Left;
        case "right":
          return Ae.Right;
        case "top":
          return Ae.Top;
        case "bottom":
          return Ae.Bottom;
        default:
          return Ae.Left;
      }
    }, [i, i]);
    return /* @__PURE__ */ N(
      Ra,
      {
        type: t,
        id: e,
        position: s,
        className: "VenomousUI-WorkflowBaseNodeHandler",
        style: { ...LW, ...n },
        onConnect: r
      }
    );
  }
);
od.displayName = "WorkflowBaseNodeHandler";
const zW = we(
  ({ children: e, style: t, handlerStyle: n, id: r, handlerType: o, ...i }) => {
    var l;
    const s = ao();
    return /* @__PURE__ */ Se(
      "div",
      {
        style: {
          position: "relative",
          width: (l = s.styles) == null ? void 0 : l.nodeWidth,
          padding: "4px 16px",
          ...t
        },
        children: [
          e,
          /* @__PURE__ */ N(
            od,
            {
              id: r,
              handlerType: o,
              style: n,
              ...i
            }
          )
        ]
      }
    );
  }
);
zW.displayName = "BaseNodeHandlerItem";
const JE = we((e) => /* @__PURE__ */ N(od, { ...e, handlerType: "source" }));
JE.displayName = "WorkflowSourceNodeHandler";
const eT = we((e) => /* @__PURE__ */ N(od, { ...e, handlerType: "target" }));
eT.displayName = "WorkflowTargetNodeHandler";
const VW = we(({ children: e, ...t }) => {
  const { selected: n, data: r } = t, o = ao();
  return /* @__PURE__ */ Se(
    wo,
    {
      className: "VenomousUI-WorkflowBaseNode",
      isOutlined: !0,
      sx: {
        p: "16px",
        width: o.styles.nodeWidth,
        minWidth: o.styles.nodeWidth,
        maxHeight: o.styles.nodeMaxHeight,
        minHeight: o.styles.nodeMinHeight,
        maxWidth: o.styles.nodeMaxHeight,
        position: "relative",
        outline: ({ palette: i }) => n ? `${o.styles.edgeWidth}px solid ${i.primary.main}` : "none",
        outlineOffset: `-${o.styles.edgeWidth}px`,
        boxShadow: (i) => n ? i.shadows[4] : i.shadows[1],
        "&:hover": { boxShadow: (i) => i.shadows[4] }
      },
      children: [
        e,
        !(r != null && r.isMultipleTargetHandler) && /* @__PURE__ */ N(eT, { id: null }),
        !(r != null && r.isMultipleSourceHandler) && /* @__PURE__ */ N(JE, { id: null })
      ]
    }
  );
});
VW.displayName = "WorkflowBaseNode";
export {
  AL as AdminFullScreen,
  DL as AdminHeader,
  LL as AdminSettingsDrawer,
  FL as AdminSettingsDrawerBlock,
  jL as AdminSideNavMenu,
  $$ as Avatar,
  zW as BaseNodeHandlerItem,
  P$ as Blank,
  $n as Button,
  pu as Card,
  mw as Checkbox,
  iF as CheckboxUncontrolled,
  YF as ConfirmModal,
  cM as Container,
  qv as DotBadge,
  fw as Drawer,
  pw as DrawerHeader,
  sP as ExhibitCard,
  lM as ExhibitCardActionButton,
  sn as Flex,
  XW as FormUncontrolled,
  sF as FormUncontrolledAction,
  RF as Grid,
  Mr as Icon,
  vx as IconBadge,
  Eu as Input,
  aF as InputUncontrolled,
  Hi as Label,
  Su as Labels,
  IF as LazyImage,
  zF as Loading,
  gc as Menu,
  qs as MenuItem,
  i1 as Modal,
  Cw as Number,
  I$ as NumberTextBadge,
  lF as NumberUncontrolled,
  IS as OtpInput,
  cF as OtpInputUncontrolled,
  wo as Paper,
  $S as Password,
  uF as PasswordUncontrolled,
  iw as Popover,
  s1 as Popper,
  MS as Radios,
  fF as RadiosUncontrolled,
  Vh as Switch,
  pF as SwitchUncontrolled,
  In as Text,
  e1 as ThemePaletteName,
  rL as ThemeProvider,
  $L as Toast,
  fu as Tooltip,
  En as WorkflowAction,
  um as WorkflowBaseEdge,
  VW as WorkflowBaseNode,
  od as WorkflowBaseNodeHandler,
  DW as WorkflowDevtool,
  XE as WorkflowEdgeConnectionLineType,
  KE as WorkflowEdgeEndMarkerType,
  jc as WorkflowEdgeType,
  BW as WorkflowMiniMap,
  MW as WorkflowPlayground,
  JE as WorkflowSourceNodeHandler,
  eT as WorkflowTargetNodeHandler,
  FW as WorkflowUndoRedo,
  AW as WorkflowWrapper,
  JB as createFormControl,
  ZW as createZodSchema,
  wF as getColors,
  mW as getRelevantEdgesByEdge,
  gW as getRelevantEdgesByNode,
  z6 as useCanvasViewport,
  M_ as useCheckNavMenuActive,
  VB as useController,
  vM as useDrawer,
  xW as useEdgeConnection,
  EW as useEdgeReConnection,
  TW as useElementsDelete,
  YW as useFieldArray,
  GW as useForm,
  sr as useFormContext,
  LB as useFormState,
  TF as useFullScreen,
  QW as useModal,
  CW as useNodeCreate,
  RW as useNodeMove,
  JW as useNodeUpdate,
  NW as useOriginalElements,
  as as usePaper,
  du as useText,
  EF as useThemeBreakpoint,
  Uu as useThemeMode,
  qh as useThemePalette,
  PL as useToast,
  zB as useWatch,
  bW as useWorkflowActionsHistoryStates,
  vW as useWorkflowActionsHistoryUndoRedo,
  ps as useWorkflowActionsHistoryUpdate,
  ao as useWorkflowConfigs,
  IW as useWorkflowInit,
  Ao as useWorkflowInstance,
  KW as zodResolver
};
